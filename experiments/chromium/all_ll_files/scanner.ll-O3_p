; ModuleID = '../../v8/src/parsing/scanner.cc'
source_filename = "../../v8/src/parsing/scanner.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.v8::internal::PerfectKeywordHashTableEntry" = type { i8*, i8 }
%"class.v8::internal::Scanner" = type { %"class.v8::internal::UnoptimizedCompileFlags", %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"*, %"class.v8::internal::Utf16CharacterStream"*, i32, [4 x i8], [3 x %"struct.v8::internal::Scanner::TokenDesc"], i8, [7 x i8], %"class.v8::internal::LiteralBuffer", %"class.v8::internal::LiteralBuffer", %"struct.v8::internal::Scanner::Location", i32, i32, %"struct.v8::internal::Scanner::Location" }
%"class.v8::internal::UnoptimizedCompileFlags" = type <{ i32, i32, i8, i8, [2 x i8] }>
%"struct.v8::internal::Scanner::TokenDesc" = type <{ %"struct.v8::internal::Scanner::Location", %"class.v8::internal::LiteralBuffer", %"class.v8::internal::LiteralBuffer", i8, [3 x i8], i32, %"struct.v8::internal::Scanner::Location", i32, i8, [3 x i8] }>
%"class.v8::internal::LiteralBuffer" = type <{ %"class.v8::internal::Vector", i32, i8, [3 x i8] }>
%"class.v8::internal::Vector" = type { i8*, i64 }
%"struct.v8::internal::Scanner::Location" = type { i32, i32 }
%"class.v8::internal::Utf16CharacterStream" = type <{ i32 (...)**, i16*, i16*, i16*, i64, %"class.v8::internal::RuntimeCallStats"*, i8, [7 x i8] }>
%"class.v8::internal::RuntimeCallStats" = type { %"class.v8::base::AtomicValue", %"class.v8::base::AtomicValue.0", i8, i32, %"class.v8::internal::ThreadId", [1370 x %"class.v8::internal::RuntimeCallCounter"] }
%"class.v8::base::AtomicValue" = type { i64 }
%"class.v8::base::AtomicValue.0" = type { i64 }
%"class.v8::internal::ThreadId" = type { i32 }
%"class.v8::internal::RuntimeCallCounter" = type { i8*, i64, i64 }
%"class.v8::internal::Isolate" = type { %"class.v8::internal::IsolateData", %"class.std::__1::unique_ptr", %"class.v8::internal::Heap", %"class.v8::internal::ReadOnlyHeap"*, %"class.std::__1::shared_ptr.647", %"class.std::__1::unique_ptr.668", i32, %"class.v8::internal::Isolate::EntryStackItem"*, i32, %"class.v8::internal::StringStream"*, [13 x i64], %"class.v8::internal::Bootstrapper"*, %"class.v8::internal::RuntimeProfiler"*, %"class.v8::internal::CompilationCache"*, %"class.std::__1::shared_ptr.678", %"class.v8::base::RecursiveMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::internal::Logger"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::Deoptimizer"*, i8, %"class.v8::internal::MaterializedObjectStore"*, i8, i32, i32, %"class.v8::internal::DescriptorLookupCache"*, %"struct.v8::internal::HandleScopeData", %"class.v8::internal::HandleScopeImplementer"*, %"class.v8::internal::UnicodeCache"*, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::InnerPointerToCodeCache"*, %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::EternalHandles"*, %"class.v8::internal::ThreadManager"*, %"class.v8::bigint::Processor"*, %"class.v8::internal::RuntimeState", %"class.v8::internal::Builtins", %"class.v8::internal::SetupIsolateDelegate"*, %"class.v8::internal::RegExpStack"*, %"class.std::__1::vector.816", %"class.v8::internal::DateCache"*, %"class.v8::base::RandomNumberGenerator"*, %"class.v8::base::RandomNumberGenerator"*, %"struct.std::__1::atomic.829", {}*, i8*, void (i32, %"class.v8::Promise"*, %"class.v8::Value"*)*, {}*, {}*, %"struct.std::__1::atomic.839", {}*, %"class.v8::base::Mutex", double, %"class.std::__1::basic_string", %"class.std::__1::unordered_map.850", %"struct.std::__1::atomic.154", i8, i8, i8, i8, i8, i8, double, %"class.v8::internal::Debug"*, %"class.v8::internal::HeapProfiler"*, %"class.std::__1::unique_ptr.925", %"class.v8::internal::AstStringConstants"*, %"class.v8::internal::interpreter::Interpreter"*, %"class.v8::internal::compiler::PerIsolateCompilerCache"*, %"class.v8::internal::Zone"*, %"class.v8::internal::CompilerDispatcher"*, %"class.std::__1::queue", void (i8*, i8*)*, void (i8*, i1)*, void (i8*, i32)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*, i1)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::Context"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, %"class.v8::String"* (%"class.v8::Isolate"*, i8*)*, i1 (%"class.v8::Context"*)*, i1 (%"class.v8::Context"*)*, %"class.v8::internal::Relocatable"*, %"class.std::__1::vector.970"*, %"class.v8::internal::Object", i64*, %"class.v8::internal::AddressToIndexHashMap"*, %"class.v8::internal::HeapObjectToIndexHashMap"*, %"class.v8::internal::MicrotaskQueue"*, %"class.v8::internal::CompilationStatistics"*, %"class.v8::internal::CodeTracer"*, i32, void (%"class.v8::PromiseRejectMessage"*)*, %"class.v8::StartupData"*, i32, i32, i32, i64, i8, i8, i32, i8, i32, %"class.v8_inspector::V8Inspector"*, i8, i8, i8, i32, i32, %"class.v8::internal::compiler::NodeObserver"*, i8, [128 x i32], [256 x i32], [251 x i32], [251 x i32], %"class.v8::internal::OptimizingCompileDispatcher"*, %"class.std::__1::unique_ptr.979", i32, i8, i8, i32, i32, %"class.std::__1::vector.985", %"class.std::__1::vector.985", void (%"class.v8::Isolate"*, i32)*, %"class.std::__1::shared_ptr.992", i64, %"class.std::__1::unordered_map.993", i64, %"struct.v8::metrics::LongTaskStats", %"class.std::__1::vector.543", %"class.v8::internal::BuiltinsConstantsTableBuilder"*, i8*, i32, i8*, i32, %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::shared_ptr.162", %"class.v8::internal::FutexWaitListNode", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::debug::ConsoleDelegate"*, %"class.v8::debug::AsyncEventDelegate"*, i32, i32, %"class.std::__1::unique_ptr.1049", i1 (%"class.v8::Isolate"*)*, i8, %"class.v8::base::Mutex", %"struct.v8::internal::ManagedPtrDestructor"*, i64, i64, %"class.v8::internal::wasm::WasmEngine"*, %"class.std::__1::unique_ptr.1087", %"class.v8::internal::EmbeddedFileWriterInterface"*, %"class.v8::Context::BackupIncumbentScope"*, {}*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate::ThreadDataTable", i8, %"class.v8::internal::Isolate"*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"struct.std::__1::atomic.1121", %"class.std::__1::vector.1125", %"class.std::__1::vector.1125", void (i32, %"class.std::__1::basic_string"*)* }
%"class.v8::internal::IsolateData" = type { [4 x i8*], i64, i64, i64, i64, i64, %"class.v8::internal::StackGuard", %"class.v8::internal::RootsTable", %"class.v8::internal::ExternalReferenceTable", %"class.v8::internal::ThreadLocalTop", [1711 x i64], [1711 x i64], i8, [15 x i8] }
%"class.v8::internal::StackGuard" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::StackGuard::ThreadLocal" }
%"class.v8::internal::StackGuard::ThreadLocal" = type { i64, i64, i64, i64, %"class.v8::internal::InterruptsScope"*, i64 }
%"class.v8::internal::InterruptsScope" = type { i32 (...)**, %"class.v8::internal::StackGuard"*, i64, i64, i32, %"class.v8::internal::InterruptsScope"* }
%"class.v8::internal::RootsTable" = type { [669 x i64] }
%"class.v8::internal::ExternalReferenceTable" = type { [1042 x i64], i32, i32 }
%"class.v8::internal::ThreadLocalTop" = type { %"class.v8::TryCatch"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Context", %"struct.std::__1::atomic", %"class.v8::internal::Object", %"class.v8::internal::Context", i64, i64, i64, i64, i64, %"class.v8::internal::Object", i8, i8, %"class.v8::internal::Object", i64, i64, i64, %"class.v8::internal::PromiseOnStack"*, %"class.v8::internal::Simulator"*, i64, %"class.v8::internal::ExternalCallbackScope"*, i32, void (%"class.v8::Object"*, i32, %"class.v8::Value"*)*, i64 }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { %"class.v8::internal::ThreadId" }
%"class.v8::internal::Context" = type { %"class.v8::internal::TorqueGeneratedContext" }
%"class.v8::internal::TorqueGeneratedContext" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::HeapObject" = type { %"class.v8::internal::Object" }
%"class.v8::internal::PromiseOnStack" = type { %"class.v8::internal::Handle.1", %"class.v8::internal::PromiseOnStack"* }
%"class.v8::internal::Handle.1" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HandleBase" = type { i64* }
%"class.v8::internal::Simulator" = type opaque
%"class.v8::internal::ExternalCallbackScope" = type opaque
%"class.v8::Object" = type { i8 }
%"class.v8::Value" = type { i8 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.v8::internal::IsolateAllocator"* }
%"class.v8::internal::IsolateAllocator" = type { i8*, %"class.v8::PageAllocator"* }
%"class.v8::PageAllocator" = type { i32 (...)** }
%"class.v8::internal::Heap" = type { %"class.std::__1::unordered_map", %"struct.std::__1::atomic.21", %"class.v8::internal::Heap::ExternalMemoryAccounting", %"class.v8::internal::Isolate"*, i64, i64, i64, i64, %"struct.std::__1::atomic.21", i64, i64, i64, i64, i64, i8, i64, i64, %"struct.std::__1::atomic.21", i64, i64, %"struct.std::__1::atomic.21", %"struct.std::__1::atomic.31", %"class.std::__1::vector", i32, %"class.v8::internal::NewSpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::CodeSpace"*, %"class.v8::internal::MapSpace"*, %"class.v8::internal::OldLargeObjectSpace"*, %"class.v8::internal::CodeLargeObjectSpace"*, %"class.v8::internal::NewLargeObjectSpace"*, %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::MapSpace"*, %"class.std::__1::unique_ptr.148", %"class.std::__1::unique_ptr.148", [8 x %"class.v8::internal::Space"*], %"class.v8::internal::LocalHeap"*, %"class.v8::internal::ArrayBufferExtension"*, %"class.v8::internal::ArrayBufferExtension"*, i8, i64, %"struct.std::__1::atomic.163", i32, i32, i32, i32, %"class.v8::internal::AllocationObserver"*, %"class.v8::internal::StressScavengeObserver"*, double, i32, i32, i32, i64, i32, [128 x i64], %"struct.std::__1::atomic.21", i64, i8, %"struct.std::__1::atomic.21", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.std::__1::vector.167", %"class.std::__1::vector.167", i64 ()*, [113 x i32], i64, double, double, i64, i64, double, i32, i32, i32, i32, double, double, double, %"class.std::__1::unique_ptr.174", %"class.std::__1::unique_ptr.180", %"class.v8::internal::MinorMarkCompactCollector"*, %"class.std::__1::unique_ptr.310", %"class.std::__1::unique_ptr.316", %"class.std::__1::unique_ptr.322", %"class.std::__1::unique_ptr.361", %"class.std::__1::unique_ptr.400", %"class.std::__1::unique_ptr.430", %"class.std::__1::unique_ptr.436", %"class.std::__1::unique_ptr.446", %"class.std::__1::unique_ptr.452", %"class.std::__1::unique_ptr.452", %"class.std::__1::unique_ptr.458", %"class.std::__1::unique_ptr.464", %"class.std::__1::unique_ptr.464", %"class.std::__1::unique_ptr.470", %"class.std::__1::unique_ptr.476", %"class.std::__1::shared_ptr.482", %"class.v8::CppHeap"*, %"class.v8::EmbedderRootsHandler"*, %"class.v8::internal::StrongRootsEntry"*, %"class.v8::base::Mutex", i8, i64, i64, i64, i64, %"class.std::__1::unordered_map.505", %"class.std::__1::unique_ptr.531", [512 x i8], i8, i8, i64, i8, i32, i32, %"class.std::__1::unique_ptr.537", i8, %"class.v8::internal::Heap::ExternalStringTable", %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.550", i32, i8, i8, i8, i8, i8, %"class.v8::internal::HeapObject", %"class.v8::base::SharedMutex", %"class.v8::base::Mutex", %"class.std::__1::unordered_set.332", i8, [7 x i8], %"class.std::__1::unordered_map.556", %"class.std::__1::unordered_map.582", %"class.std::__1::unordered_map.556", %"class.std::__1::unordered_map.606", %"class.std::__1::vector.634", i8, %"class.std::__1::unique_ptr.641", i32, i32 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.4", %"class.std::__1::__compressed_pair.11", %"class.std::__1::__compressed_pair.16", %"class.std::__1::__compressed_pair.18", [4 x i8] }>
%"class.std::__1::unique_ptr.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6", %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { i64 }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { float }
%"class.v8::internal::Heap::ExternalMemoryAccounting" = type { %"struct.std::__1::atomic.26", %"struct.std::__1::atomic.26", %"struct.std::__1::atomic.26" }
%"struct.std::__1::atomic.26" = type { %"struct.std::__1::__atomic_base.27" }
%"struct.std::__1::__atomic_base.27" = type { %"struct.std::__1::__atomic_base.28" }
%"struct.std::__1::__atomic_base.28" = type { %"struct.std::__1::__cxx_atomic_impl.29" }
%"struct.std::__1::__cxx_atomic_impl.29" = type { %"struct.std::__1::__cxx_atomic_base_impl.30" }
%"struct.std::__1::__cxx_atomic_base_impl.30" = type { i64 }
%"struct.std::__1::atomic.31" = type { %"struct.std::__1::__atomic_base.32" }
%"struct.std::__1::__atomic_base.32" = type { %"struct.std::__1::__cxx_atomic_impl.33" }
%"struct.std::__1::__cxx_atomic_impl.33" = type { %"struct.std::__1::__cxx_atomic_base_impl.34" }
%"struct.std::__1::__cxx_atomic_base_impl.34" = type { i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.35" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"struct.std::__1::pair"* }
%"class.v8::internal::NewSpace" = type { %"class.v8::internal::SpaceWithLinearArea", %"class.v8::base::Mutex", %"struct.std::__1::atomic.21", %"struct.std::__1::atomic.21", %"class.v8::internal::SemiSpace", %"class.v8::internal::SemiSpace", %"class.v8::internal::VirtualMemory", %"class.std::__1::vector.105" }
%"class.v8::internal::SpaceWithLinearArea" = type { %"class.v8::internal::Space", %"class.v8::internal::LinearAllocationArea", [3 x i64] }
%"class.v8::internal::Space" = type { %"class.v8::internal::BaseSpace", %"class.v8::internal::AllocationCounter", %"class.v8::internal::heap::List", %"struct.std::__1::atomic.21"*, %"class.std::__1::unique_ptr.99" }
%"class.v8::internal::BaseSpace" = type { i32 (...)**, %"class.v8::internal::Heap"*, i32, %"struct.std::__1::atomic.21", i64 }
%"class.v8::internal::AllocationCounter" = type <{ %"class.std::__1::vector.40", %"class.std::__1::vector.40", %"class.std::__1::unordered_set", i8, [7 x i8], i64, i64, i8, [7 x i8] }>
%"class.std::__1::vector.40" = type { %"class.std::__1::__vector_base.41" }
%"class.std::__1::__vector_base.41" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"class.std::__1::__compressed_pair.42" }
%"struct.v8::internal::AllocationCounter::AllocationObserverCounter" = type { %"class.v8::internal::AllocationObserver"*, i64, i64 }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.47" }
%"class.std::__1::__hash_table.47" = type <{ %"class.std::__1::unique_ptr.48", %"class.std::__1::__compressed_pair.58", %"class.std::__1::__compressed_pair.63", %"class.std::__1::__compressed_pair.65", [4 x i8] }>
%"class.std::__1::unique_ptr.48" = type { %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50", %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"struct.std::__1::__hash_node_base.51"** }
%"struct.std::__1::__hash_node_base.51" = type { %"struct.std::__1::__hash_node_base.51"* }
%"struct.std::__1::__compressed_pair_elem.52" = type { %"class.std::__1::__bucket_list_deallocator.53" }
%"class.std::__1::__bucket_list_deallocator.53" = type { %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"struct.std::__1::__compressed_pair_elem.59" = type { %"struct.std::__1::__hash_node_base.51" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.v8::internal::heap::List" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::MemoryChunk" = type { %"class.v8::internal::BasicMemoryChunk", [2 x %"class.v8::internal::SlotSet"*], %"struct.std::__1::atomic.21", %"struct.std::__1::atomic.26", %"class.v8::internal::SlotSet"*, [2 x %"class.v8::internal::TypedSlotSet"*], [2 x %"class.std::__1::set"*], %"class.v8::base::Mutex"*, %"struct.std::__1::atomic.88", %"class.v8::base::Mutex"*, i64, [2 x %"struct.std::__1::atomic.21"], %"class.v8::internal::heap::ListNode", %"class.v8::internal::FreeListCategory"**, %"struct.std::__1::atomic.26", %"class.v8::internal::Bitmap"*, %"class.v8::internal::CodeObjectRegistry"*, %"class.v8::internal::PossiblyEmptyBuckets" }
%"class.v8::internal::BasicMemoryChunk" = type { i64, i64, %"class.v8::internal::Heap"*, i64, i64, i64, i64, %"struct.std::__1::atomic.26", %"struct.std::__1::atomic.70", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.70" = type { %"struct.std::__1::__atomic_base.71" }
%"struct.std::__1::__atomic_base.71" = type { %"struct.std::__1::__cxx_atomic_impl.72" }
%"struct.std::__1::__cxx_atomic_impl.72" = type { %"struct.std::__1::__cxx_atomic_base_impl.73" }
%"struct.std::__1::__cxx_atomic_base_impl.73" = type { %"class.v8::internal::BaseSpace"* }
%"class.v8::internal::SlotSet" = type { i8 }
%"class.v8::internal::TypedSlotSet" = type { %"class.v8::internal::TypedSlots", i64 }
%"class.v8::internal::TypedSlots" = type { i32 (...)**, %"struct.v8::internal::TypedSlots::Chunk"*, %"struct.v8::internal::TypedSlots::Chunk"* }
%"struct.v8::internal::TypedSlots::Chunk" = type { %"struct.v8::internal::TypedSlots::Chunk"*, %"class.std::__1::vector.74" }
%"class.std::__1::vector.74" = type { %"class.std::__1::__vector_base.75" }
%"class.std::__1::__vector_base.75" = type { %"struct.v8::internal::TypedSlots::TypedSlot"*, %"struct.v8::internal::TypedSlots::TypedSlot"*, %"class.std::__1::__compressed_pair.76" }
%"struct.v8::internal::TypedSlots::TypedSlot" = type { i32 }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { %"struct.v8::internal::TypedSlots::TypedSlot"* }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.81", %"class.std::__1::__compressed_pair.86" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::atomic.88" = type { %"struct.std::__1::__atomic_base.89" }
%"struct.std::__1::__atomic_base.89" = type { %"struct.std::__1::__cxx_atomic_impl.90" }
%"struct.std::__1::__cxx_atomic_impl.90" = type { %"struct.std::__1::__cxx_atomic_base_impl.91" }
%"struct.std::__1::__cxx_atomic_base_impl.91" = type { i64 }
%"class.v8::internal::heap::ListNode" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::FreeListCategory" = type { i32, i32, %"class.v8::internal::FreeSpace", %"class.v8::internal::FreeListCategory"*, %"class.v8::internal::FreeListCategory"* }
%"class.v8::internal::FreeSpace" = type { %"class.v8::internal::TorqueGeneratedFreeSpace" }
%"class.v8::internal::TorqueGeneratedFreeSpace" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Bitmap" = type { i8 }
%"class.v8::internal::CodeObjectRegistry" = type <{ %"class.std::__1::vector.92", i8, [7 x i8] }>
%"class.std::__1::vector.92" = type { %"class.std::__1::__vector_base.93" }
%"class.std::__1::__vector_base.93" = type { i64*, i64*, %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"struct.std::__1::__compressed_pair_elem.95" = type { i64* }
%"class.v8::internal::PossiblyEmptyBuckets" = type { i64 }
%"class.std::__1::unique_ptr.99" = type { %"class.std::__1::__compressed_pair.100" }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.101" = type { %"class.v8::internal::FreeList"* }
%"class.v8::internal::FreeList" = type { i32 (...)**, i32, i32, i64, %"struct.std::__1::atomic.21", %"class.v8::internal::FreeListCategory"**, i64 }
%"class.v8::internal::LinearAllocationArea" = type { i64, i64, i64 }
%"class.v8::internal::SemiSpace" = type { %"class.v8::internal::Space", i64, i64, i64, i64, i64, i32, %"class.v8::internal::Page"* }
%"class.v8::internal::Page" = type { %"class.v8::internal::MemoryChunk" }
%"class.v8::internal::VirtualMemory" = type { %"class.v8::PageAllocator"*, %"class.v8::base::AddressRegion" }
%"class.v8::base::AddressRegion" = type { i64, i64 }
%"class.std::__1::vector.105" = type { %"class.std::__1::__vector_base.106" }
%"class.std::__1::__vector_base.106" = type { %"struct.std::__1::pair.107"*, %"struct.std::__1::pair.107"*, %"class.std::__1::__compressed_pair.108" }
%"struct.std::__1::pair.107" = type { i32, i64 }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.109" = type { %"struct.std::__1::pair.107"* }
%"class.v8::internal::CodeSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::PagedSpace" = type { %"class.v8::internal::SpaceWithLinearArea", i32, i32, i64, %"class.v8::internal::AllocationStats", %"class.v8::base::Mutex", i64, i64 }
%"class.v8::internal::AllocationStats" = type { %"struct.std::__1::atomic.21", i64, %"struct.std::__1::atomic.21" }
%"class.v8::internal::OldLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace" }
%"class.v8::internal::LargeObjectSpace" = type { %"class.v8::internal::Space", %"struct.std::__1::atomic.21", i32, %"struct.std::__1::atomic.21", %"class.v8::base::Mutex", %"struct.std::__1::atomic.21" }
%"class.v8::internal::CodeLargeObjectSpace" = type { %"class.v8::internal::OldLargeObjectSpace", %"class.std::__1::unordered_map.113" }
%"class.std::__1::unordered_map.113" = type { %"class.std::__1::__hash_table.114" }
%"class.std::__1::__hash_table.114" = type <{ %"class.std::__1::unique_ptr.115", %"class.std::__1::__compressed_pair.125", %"class.std::__1::__compressed_pair.130", %"class.std::__1::__compressed_pair.135", [4 x i8] }>
%"class.std::__1::unique_ptr.115" = type { %"class.std::__1::__compressed_pair.116" }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.117", %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.117" = type { %"struct.std::__1::__hash_node_base.118"** }
%"struct.std::__1::__hash_node_base.118" = type { %"struct.std::__1::__hash_node_base.118"* }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"class.std::__1::__bucket_list_deallocator.120" }
%"class.std::__1::__bucket_list_deallocator.120" = type { %"class.std::__1::__compressed_pair.121" }
%"class.std::__1::__compressed_pair.121" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"struct.std::__1::__hash_node_base.118" }
%"class.std::__1::__compressed_pair.130" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.135" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.v8::internal::NewLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace", i64 }
%"class.v8::internal::ReadOnlySpace" = type { %"class.v8::internal::BaseSpace", i8, %"class.v8::internal::AllocationStats", %"class.std::__1::vector.141", i64, i64, i8, i64, i64 }
%"class.std::__1::vector.141" = type { %"class.std::__1::__vector_base.142" }
%"class.std::__1::__vector_base.142" = type { %"class.v8::internal::ReadOnlyPage"**, %"class.v8::internal::ReadOnlyPage"**, %"class.std::__1::__compressed_pair.143" }
%"class.v8::internal::ReadOnlyPage" = type { %"class.v8::internal::BasicMemoryChunk" }
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.144" }
%"struct.std::__1::__compressed_pair_elem.144" = type { %"class.v8::internal::ReadOnlyPage"** }
%"class.v8::internal::OldSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::MapSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.std::__1::unique_ptr.148" = type { %"class.std::__1::__compressed_pair.149" }
%"class.std::__1::__compressed_pair.149" = type { %"struct.std::__1::__compressed_pair_elem.150" }
%"struct.std::__1::__compressed_pair_elem.150" = type { %"class.v8::internal::ConcurrentAllocator"* }
%"class.v8::internal::ConcurrentAllocator" = type { %"class.v8::internal::LocalHeap"*, %"class.v8::internal::PagedSpace"*, %"class.v8::internal::LocalAllocationBuffer" }
%"class.v8::internal::LocalAllocationBuffer" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::LinearAllocationArea" }
%"class.v8::internal::LocalHeap" = type { %"class.v8::internal::Heap"*, i8, %"struct.std::__1::atomic.1054", i8, i8, %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"*, %"class.std::__1::unique_ptr.1058", %"class.std::__1::unique_ptr.1064", %"class.std::__1::unique_ptr.476", %"class.std::__1::vector.1070", %"class.v8::internal::ConcurrentAllocator" }
%"struct.std::__1::atomic.1054" = type { %"struct.std::__1::__atomic_base.1055" }
%"struct.std::__1::__atomic_base.1055" = type { %"struct.std::__1::__cxx_atomic_impl.1056" }
%"struct.std::__1::__cxx_atomic_impl.1056" = type { %"struct.std::__1::__cxx_atomic_base_impl.1057" }
%"struct.std::__1::__cxx_atomic_base_impl.1057" = type { i32 }
%"class.std::__1::unique_ptr.1058" = type { %"class.std::__1::__compressed_pair.1059" }
%"class.std::__1::__compressed_pair.1059" = type { %"struct.std::__1::__compressed_pair_elem.1060" }
%"struct.std::__1::__compressed_pair_elem.1060" = type { %"class.v8::internal::LocalHandles"* }
%"class.v8::internal::LocalHandles" = type { %"struct.v8::internal::HandleScopeData", %"class.std::__1::vector.809" }
%"class.std::__1::vector.809" = type { %"class.std::__1::__vector_base.810" }
%"class.std::__1::__vector_base.810" = type { i64**, i64**, %"class.std::__1::__compressed_pair.811" }
%"class.std::__1::__compressed_pair.811" = type { %"struct.std::__1::__compressed_pair_elem.812" }
%"struct.std::__1::__compressed_pair_elem.812" = type { i64** }
%"class.std::__1::unique_ptr.1064" = type { %"class.std::__1::__compressed_pair.1065" }
%"class.std::__1::__compressed_pair.1065" = type { %"struct.std::__1::__compressed_pair_elem.1066" }
%"struct.std::__1::__compressed_pair_elem.1066" = type { %"class.v8::internal::PersistentHandles"* }
%"class.v8::internal::PersistentHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::vector.809", i64*, i64*, %"class.v8::internal::PersistentHandles"*, %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.1070" = type { %"class.std::__1::__vector_base.1071" }
%"class.std::__1::__vector_base.1071" = type { %"struct.std::__1::pair.1072"*, %"struct.std::__1::pair.1072"*, %"class.std::__1::__compressed_pair.1073" }
%"struct.std::__1::pair.1072" = type opaque
%"class.std::__1::__compressed_pair.1073" = type { %"struct.std::__1::__compressed_pair_elem.1074" }
%"struct.std::__1::__compressed_pair_elem.1074" = type { %"struct.std::__1::pair.1072"* }
%"class.v8::internal::ArrayBufferExtension" = type { %"struct.std::__1::atomic.154", %"struct.std::__1::atomic.158", %"class.std::__1::shared_ptr", %"class.v8::internal::ArrayBufferExtension"*, %"struct.std::__1::atomic.21" }
%"struct.std::__1::atomic.158" = type { %"struct.std::__1::__atomic_base.159" }
%"struct.std::__1::__atomic_base.159" = type { %"struct.std::__1::__cxx_atomic_impl.160" }
%"struct.std::__1::__cxx_atomic_impl.160" = type { %"struct.std::__1::__cxx_atomic_base_impl.161" }
%"struct.std::__1::__cxx_atomic_base_impl.161" = type { i8 }
%"class.std::__1::shared_ptr" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::BackingStore" = type <{ i8*, %"struct.std::__1::atomic.21", i64, %"union.v8::internal::BackingStore::TypeSpecificData", i16, [6 x i8] }>
%"union.v8::internal::BackingStore::TypeSpecificData" = type { %"class.std::__1::shared_ptr.162" }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"struct.std::__1::atomic.163" = type { %"struct.std::__1::__atomic_base.164" }
%"struct.std::__1::__atomic_base.164" = type { %"struct.std::__1::__cxx_atomic_impl.165" }
%"struct.std::__1::__cxx_atomic_impl.165" = type { %"struct.std::__1::__cxx_atomic_base_impl.166" }
%"struct.std::__1::__cxx_atomic_base_impl.166" = type { i32 }
%"class.v8::internal::AllocationObserver" = type { i32 (...)**, i64 }
%"class.v8::internal::StressScavengeObserver" = type opaque
%"struct.std::__1::atomic.21" = type { %"struct.std::__1::__atomic_base.22" }
%"struct.std::__1::__atomic_base.22" = type { %"struct.std::__1::__atomic_base.23" }
%"struct.std::__1::__atomic_base.23" = type { %"struct.std::__1::__cxx_atomic_impl.24" }
%"struct.std::__1::__cxx_atomic_impl.24" = type { %"struct.std::__1::__cxx_atomic_base_impl.25" }
%"struct.std::__1::__cxx_atomic_base_impl.25" = type { i64 }
%"class.std::__1::vector.167" = type { %"class.std::__1::__vector_base.168" }
%"class.std::__1::__vector_base.168" = type { %"struct.v8::internal::Heap::GCCallbackTuple"*, %"struct.v8::internal::Heap::GCCallbackTuple"*, %"class.std::__1::__compressed_pair.169" }
%"struct.v8::internal::Heap::GCCallbackTuple" = type { void (%"class.v8::Isolate"*, i32, i32, i8*)*, i32, i8* }
%"class.v8::Isolate" = type { i8 }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.170" }
%"struct.std::__1::__compressed_pair_elem.170" = type { %"struct.v8::internal::Heap::GCCallbackTuple"* }
%"class.std::__1::unique_ptr.174" = type { %"class.std::__1::__compressed_pair.175" }
%"class.std::__1::__compressed_pair.175" = type { %"struct.std::__1::__compressed_pair_elem.176" }
%"struct.std::__1::__compressed_pair_elem.176" = type { %"class.v8::internal::GCTracer"* }
%"class.v8::internal::GCTracer" = type opaque
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.v8::internal::MarkCompactCollector"* }
%"class.v8::internal::MarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::base::Mutex", %"class.v8::base::Semaphore", i8, i8, i8, i8, i8, i8, [2 x i8], %"class.v8::internal::MarkingWorklists", %"class.v8::internal::WeakObjects", %"struct.v8::internal::EphemeronMarking", %"class.std::__1::unique_ptr.222", %"class.std::__1::unique_ptr.228", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", %"class.std::__1::vector.282", %"class.std::__1::vector.282", %"class.std::__1::vector.282", %"class.std::__1::vector.289", %"class.v8::internal::Sweeper"*, %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", [2 x i8], i32, i32, [4 x i8] }>
%"class.v8::internal::MarkCompactCollectorBase" = type { i32 (...)**, %"class.v8::internal::Heap"* }
%"class.v8::base::Semaphore" = type { %union.sem_t }
%union.sem_t = type { i64, [24 x i8] }
%"class.v8::internal::MarkingWorklists" = type { %"class.heap::base::Worklist", %"class.heap::base::Worklist", %"class.heap::base::Worklist.183", %"class.std::__1::vector.184", %"class.std::__1::vector.191", %"class.heap::base::Worklist" }
%"class.heap::base::Worklist.183" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"*, %"struct.std::__1::atomic.21" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment" = type opaque
%"class.std::__1::vector.184" = type { %"class.std::__1::__vector_base.185" }
%"class.std::__1::__vector_base.185" = type { %"struct.v8::internal::ContextWorklistPair"*, %"struct.v8::internal::ContextWorklistPair"*, %"class.std::__1::__compressed_pair.186" }
%"struct.v8::internal::ContextWorklistPair" = type { i64, %"class.heap::base::Worklist"* }
%"class.std::__1::__compressed_pair.186" = type { %"struct.std::__1::__compressed_pair_elem.187" }
%"struct.std::__1::__compressed_pair_elem.187" = type { %"struct.v8::internal::ContextWorklistPair"* }
%"class.std::__1::vector.191" = type { %"class.std::__1::__vector_base.192" }
%"class.std::__1::__vector_base.192" = type { %"class.std::__1::unique_ptr.193"*, %"class.std::__1::unique_ptr.193"*, %"class.std::__1::__compressed_pair.194" }
%"class.std::__1::unique_ptr.193" = type opaque
%"class.std::__1::__compressed_pair.194" = type { %"struct.std::__1::__compressed_pair_elem.195" }
%"struct.std::__1::__compressed_pair_elem.195" = type { %"class.std::__1::unique_ptr.193"* }
%"class.heap::base::Worklist" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"*, %"struct.std::__1::atomic.21" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment" = type opaque
%"class.v8::internal::WeakObjects" = type { %"class.v8::internal::Worklist", %"class.v8::internal::Worklist.199", %"class.v8::internal::Worklist.201", %"class.v8::internal::Worklist.201", %"class.v8::internal::Worklist.201", %"class.v8::internal::Worklist.203", %"class.v8::internal::Worklist.205", %"class.v8::internal::Worklist.207", %"class.v8::internal::Worklist.209", %"class.v8::internal::Worklist.211", %"class.v8::internal::Worklist.213" }
%"class.v8::internal::Worklist" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"struct.std::__1::atomic.21" }
%"class.v8::internal::Worklist.199" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"struct.std::__1::atomic.21" }
%"class.v8::internal::Worklist.201" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"struct.std::__1::atomic.21" }
%"class.v8::internal::Worklist.203" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"struct.std::__1::atomic.21" }
%"class.v8::internal::Worklist.205" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"struct.std::__1::atomic.21" }
%"class.v8::internal::Worklist.207" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"struct.std::__1::atomic.21" }
%"class.v8::internal::Worklist.209" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"struct.std::__1::atomic.21" }
%"class.v8::internal::Worklist.211" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"struct.std::__1::atomic.21" }
%"class.v8::internal::Worklist.213" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"struct.std::__1::atomic.21" }
%"struct.v8::internal::EphemeronMarking" = type { %"class.std::__1::vector.215", i8, i64 }
%"class.std::__1::vector.215" = type { %"class.std::__1::__vector_base.216" }
%"class.std::__1::__vector_base.216" = type { %"class.v8::internal::HeapObject"*, %"class.v8::internal::HeapObject"*, %"class.std::__1::__compressed_pair.217" }
%"class.std::__1::__compressed_pair.217" = type { %"struct.std::__1::__compressed_pair_elem.218" }
%"struct.std::__1::__compressed_pair_elem.218" = type { %"class.v8::internal::HeapObject"* }
%"class.std::__1::unique_ptr.222" = type { %"class.std::__1::__compressed_pair.223" }
%"class.std::__1::__compressed_pair.223" = type { %"struct.std::__1::__compressed_pair_elem.224" }
%"struct.std::__1::__compressed_pair_elem.224" = type { %"class.v8::internal::MainMarkingVisitor"* }
%"class.v8::internal::MainMarkingVisitor" = type opaque
%"class.std::__1::unique_ptr.228" = type { %"class.std::__1::__compressed_pair.229" }
%"class.std::__1::__compressed_pair.229" = type { %"struct.std::__1::__compressed_pair_elem.230" }
%"struct.std::__1::__compressed_pair_elem.230" = type { %"class.v8::internal::MarkingWorklists::Local"* }
%"class.v8::internal::MarkingWorklists::Local" = type { %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", i64, %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local"*, i8, [7 x i8], %"class.std::__1::unordered_map.231" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local" = type { %"class.heap::base::Worklist.183"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::internal::SegmentBase" = type { i16, i16 }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local" = type { %"class.heap::base::Worklist"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.std::__1::unordered_map.231" = type { %"class.std::__1::__hash_table.232" }
%"class.std::__1::__hash_table.232" = type <{ %"class.std::__1::unique_ptr.233", %"class.std::__1::__compressed_pair.243", %"class.std::__1::__compressed_pair.248", %"class.std::__1::__compressed_pair.251", [4 x i8] }>
%"class.std::__1::unique_ptr.233" = type { %"class.std::__1::__compressed_pair.234" }
%"class.std::__1::__compressed_pair.234" = type { %"struct.std::__1::__compressed_pair_elem.235", %"struct.std::__1::__compressed_pair_elem.237" }
%"struct.std::__1::__compressed_pair_elem.235" = type { %"struct.std::__1::__hash_node_base.236"** }
%"struct.std::__1::__hash_node_base.236" = type { %"struct.std::__1::__hash_node_base.236"* }
%"struct.std::__1::__compressed_pair_elem.237" = type { %"class.std::__1::__bucket_list_deallocator.238" }
%"class.std::__1::__bucket_list_deallocator.238" = type { %"class.std::__1::__compressed_pair.239" }
%"class.std::__1::__compressed_pair.239" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.243" = type { %"struct.std::__1::__compressed_pair_elem.244" }
%"struct.std::__1::__compressed_pair_elem.244" = type { %"struct.std::__1::__hash_node_base.236" }
%"class.std::__1::__compressed_pair.248" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.251" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.v8::internal::NativeContextInferrer" = type { i8 }
%"class.v8::internal::NativeContextStats" = type { %"class.std::__1::unordered_map.258" }
%"class.std::__1::unordered_map.258" = type { %"class.std::__1::__hash_table.259" }
%"class.std::__1::__hash_table.259" = type <{ %"class.std::__1::unique_ptr.260", %"class.std::__1::__compressed_pair.270", %"class.std::__1::__compressed_pair.275", %"class.std::__1::__compressed_pair.278", [4 x i8] }>
%"class.std::__1::unique_ptr.260" = type { %"class.std::__1::__compressed_pair.261" }
%"class.std::__1::__compressed_pair.261" = type { %"struct.std::__1::__compressed_pair_elem.262", %"struct.std::__1::__compressed_pair_elem.264" }
%"struct.std::__1::__compressed_pair_elem.262" = type { %"struct.std::__1::__hash_node_base.263"** }
%"struct.std::__1::__hash_node_base.263" = type { %"struct.std::__1::__hash_node_base.263"* }
%"struct.std::__1::__compressed_pair_elem.264" = type { %"class.std::__1::__bucket_list_deallocator.265" }
%"class.std::__1::__bucket_list_deallocator.265" = type { %"class.std::__1::__compressed_pair.266" }
%"class.std::__1::__compressed_pair.266" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.270" = type { %"struct.std::__1::__compressed_pair_elem.271" }
%"struct.std::__1::__compressed_pair_elem.271" = type { %"struct.std::__1::__hash_node_base.263" }
%"class.std::__1::__compressed_pair.275" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.278" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::vector.282" = type { %"class.std::__1::__vector_base.283" }
%"class.std::__1::__vector_base.283" = type { %"class.v8::internal::Page"**, %"class.v8::internal::Page"**, %"class.std::__1::__compressed_pair.284" }
%"class.std::__1::__compressed_pair.284" = type { %"struct.std::__1::__compressed_pair_elem.285" }
%"struct.std::__1::__compressed_pair_elem.285" = type { %"class.v8::internal::Page"** }
%"class.std::__1::vector.289" = type { %"class.std::__1::__vector_base.290" }
%"class.std::__1::__vector_base.290" = type { %"struct.std::__1::pair.291"*, %"struct.std::__1::pair.291"*, %"class.std::__1::__compressed_pair.292" }
%"struct.std::__1::pair.291" = type opaque
%"class.std::__1::__compressed_pair.292" = type { %"struct.std::__1::__compressed_pair_elem.293" }
%"struct.std::__1::__compressed_pair_elem.293" = type { %"struct.std::__1::pair.291"* }
%"class.v8::internal::Sweeper" = type <{ %"class.v8::internal::Heap"*, %"class.v8::internal::MajorNonAtomicMarkingState"*, %"class.std::__1::unique_ptr.297", %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.282"], [3 x %"class.std::__1::vector.282"], i8, %"struct.std::__1::atomic.154", [6 x i8], %"class.std::__1::vector.282", i64, %"class.v8::base::Semaphore", i8, i8, i8, [5 x i8] }>
%"class.std::__1::unique_ptr.297" = type { %"class.std::__1::__compressed_pair.298" }
%"class.std::__1::__compressed_pair.298" = type { %"struct.std::__1::__compressed_pair_elem.299" }
%"struct.std::__1::__compressed_pair_elem.299" = type { %"class.v8::JobHandle"* }
%"class.v8::JobHandle" = type { i32 (...)** }
%"class.v8::internal::MajorMarkingState" = type { i8 }
%"class.v8::internal::MajorNonAtomicMarkingState" = type { i8 }
%"class.v8::internal::MinorMarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::internal::Worklist.307"*, %"class.v8::internal::YoungGenerationMarkingVisitor"*, %"class.v8::base::Semaphore", %"class.std::__1::vector.282", %"class.std::__1::vector.282", %"class.v8::internal::MinorMarkingState", %"class.v8::internal::MinorNonAtomicMarkingState", [6 x i8] }>
%"class.v8::internal::Worklist.307" = type opaque
%"class.v8::internal::YoungGenerationMarkingVisitor" = type opaque
%"class.v8::internal::MinorMarkingState" = type { i8 }
%"class.v8::internal::MinorNonAtomicMarkingState" = type { i8 }
%"class.std::__1::unique_ptr.310" = type { %"class.std::__1::__compressed_pair.311" }
%"class.std::__1::__compressed_pair.311" = type { %"struct.std::__1::__compressed_pair_elem.312" }
%"struct.std::__1::__compressed_pair_elem.312" = type { %"class.v8::internal::ScavengerCollector"* }
%"class.v8::internal::ScavengerCollector" = type opaque
%"class.std::__1::unique_ptr.316" = type { %"class.std::__1::__compressed_pair.317" }
%"class.std::__1::__compressed_pair.317" = type { %"struct.std::__1::__compressed_pair_elem.318" }
%"struct.std::__1::__compressed_pair_elem.318" = type { %"class.v8::internal::ArrayBufferSweeper"* }
%"class.v8::internal::ArrayBufferSweeper" = type opaque
%"class.std::__1::unique_ptr.322" = type { %"class.std::__1::__compressed_pair.323" }
%"class.std::__1::__compressed_pair.323" = type { %"struct.std::__1::__compressed_pair_elem.324" }
%"struct.std::__1::__compressed_pair_elem.324" = type { %"class.v8::internal::MemoryAllocator"* }
%"class.v8::internal::MemoryAllocator" = type { %"class.v8::internal::Isolate"*, %"class.v8::PageAllocator"*, %"class.v8::PageAllocator"*, i64, %"struct.std::__1::atomic.21", %"struct.std::__1::atomic.21", %"struct.std::__1::atomic.21", %"struct.std::__1::atomic.21", %"class.v8::internal::VirtualMemory", %"class.v8::internal::MemoryAllocator::Unmapper", %"class.std::__1::unordered_set.332", %"class.v8::base::Mutex" }
%"class.v8::internal::MemoryAllocator::Unmapper" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MemoryAllocator"*, %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.325"], %"class.std::__1::unique_ptr.297" }
%"class.std::__1::vector.325" = type { %"class.std::__1::__vector_base.326" }
%"class.std::__1::__vector_base.326" = type { %"class.v8::internal::MemoryChunk"**, %"class.v8::internal::MemoryChunk"**, %"class.std::__1::__compressed_pair.327" }
%"class.std::__1::__compressed_pair.327" = type { %"struct.std::__1::__compressed_pair_elem.328" }
%"struct.std::__1::__compressed_pair_elem.328" = type { %"class.v8::internal::MemoryChunk"** }
%"class.std::__1::unique_ptr.361" = type { %"class.std::__1::__compressed_pair.362" }
%"class.std::__1::__compressed_pair.362" = type { %"struct.std::__1::__compressed_pair_elem.363" }
%"struct.std::__1::__compressed_pair_elem.363" = type { %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::IncrementalMarking" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MarkCompactCollector"*, %"class.v8::internal::WeakObjects"*, double, double, i64, i64, i64, i64, double, i64, %"struct.std::__1::atomic.364", i8, i8, i8, i8, [3 x i8], %"class.v8::internal::IncrementalMarkingJob", %"struct.std::__1::atomic.368", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorAtomicMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", %"class.v8::base::Mutex", %"class.std::__1::unordered_map.373" }
%"struct.std::__1::atomic.364" = type { %"struct.std::__1::__atomic_base.365" }
%"struct.std::__1::__atomic_base.365" = type { %"struct.std::__1::__cxx_atomic_impl.366" }
%"struct.std::__1::__cxx_atomic_impl.366" = type { %"struct.std::__1::__cxx_atomic_base_impl.367" }
%"struct.std::__1::__cxx_atomic_base_impl.367" = type { i8 }
%"class.v8::internal::IncrementalMarkingJob" = type <{ %"class.v8::base::Mutex", double, i8, i8, [6 x i8] }>
%"struct.std::__1::atomic.368" = type { %"struct.std::__1::__atomic_base.369" }
%"struct.std::__1::__atomic_base.369" = type { %"struct.std::__1::__cxx_atomic_impl.370" }
%"struct.std::__1::__cxx_atomic_impl.370" = type { %"struct.std::__1::__cxx_atomic_base_impl.371" }
%"struct.std::__1::__cxx_atomic_base_impl.371" = type { i32 }
%"class.v8::internal::IncrementalMarking::Observer" = type { %"class.v8::internal::AllocationObserver", %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::MajorAtomicMarkingState" = type { i8 }
%"class.std::__1::unordered_map.373" = type { %"class.std::__1::__hash_table.374" }
%"class.std::__1::__hash_table.374" = type <{ %"class.std::__1::unique_ptr.375", %"class.std::__1::__compressed_pair.385", %"class.std::__1::__compressed_pair.390", %"class.std::__1::__compressed_pair.393", [4 x i8] }>
%"class.std::__1::unique_ptr.375" = type { %"class.std::__1::__compressed_pair.376" }
%"class.std::__1::__compressed_pair.376" = type { %"struct.std::__1::__compressed_pair_elem.377", %"struct.std::__1::__compressed_pair_elem.379" }
%"struct.std::__1::__compressed_pair_elem.377" = type { %"struct.std::__1::__hash_node_base.378"** }
%"struct.std::__1::__hash_node_base.378" = type { %"struct.std::__1::__hash_node_base.378"* }
%"struct.std::__1::__compressed_pair_elem.379" = type { %"class.std::__1::__bucket_list_deallocator.380" }
%"class.std::__1::__bucket_list_deallocator.380" = type { %"class.std::__1::__compressed_pair.381" }
%"class.std::__1::__compressed_pair.381" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.385" = type { %"struct.std::__1::__compressed_pair_elem.386" }
%"struct.std::__1::__compressed_pair_elem.386" = type { %"struct.std::__1::__hash_node_base.378" }
%"class.std::__1::__compressed_pair.390" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.393" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::unique_ptr.400" = type { %"class.std::__1::__compressed_pair.401" }
%"class.std::__1::__compressed_pair.401" = type { %"struct.std::__1::__compressed_pair_elem.402" }
%"struct.std::__1::__compressed_pair_elem.402" = type { %"class.v8::internal::ConcurrentMarking"* }
%"class.v8::internal::ConcurrentMarking" = type <{ %"class.std::__1::unique_ptr.297", %"class.v8::internal::Heap"*, %"class.v8::internal::MarkingWorklists"*, %"class.v8::internal::WeakObjects"*, [8 x %"struct.v8::internal::ConcurrentMarking::TaskState"], %"struct.std::__1::atomic.21", %"struct.std::__1::atomic.154", [7 x i8] }>
%"struct.v8::internal::ConcurrentMarking::TaskState" = type { i64, %"class.std::__1::unordered_map.403", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", [64 x i8] }
%"class.std::__1::unordered_map.403" = type { %"class.std::__1::__hash_table.404" }
%"class.std::__1::__hash_table.404" = type <{ %"class.std::__1::unique_ptr.405", %"class.std::__1::__compressed_pair.415", %"class.std::__1::__compressed_pair.420", %"class.std::__1::__compressed_pair.423", [4 x i8] }>
%"class.std::__1::unique_ptr.405" = type { %"class.std::__1::__compressed_pair.406" }
%"class.std::__1::__compressed_pair.406" = type { %"struct.std::__1::__compressed_pair_elem.407", %"struct.std::__1::__compressed_pair_elem.409" }
%"struct.std::__1::__compressed_pair_elem.407" = type { %"struct.std::__1::__hash_node_base.408"** }
%"struct.std::__1::__hash_node_base.408" = type { %"struct.std::__1::__hash_node_base.408"* }
%"struct.std::__1::__compressed_pair_elem.409" = type { %"class.std::__1::__bucket_list_deallocator.410" }
%"class.std::__1::__bucket_list_deallocator.410" = type { %"class.std::__1::__compressed_pair.411" }
%"class.std::__1::__compressed_pair.411" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.415" = type { %"struct.std::__1::__compressed_pair_elem.416" }
%"struct.std::__1::__compressed_pair_elem.416" = type { %"struct.std::__1::__hash_node_base.408" }
%"class.std::__1::__compressed_pair.420" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.423" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::unique_ptr.430" = type { %"class.std::__1::__compressed_pair.431" }
%"class.std::__1::__compressed_pair.431" = type { %"struct.std::__1::__compressed_pair_elem.432" }
%"struct.std::__1::__compressed_pair_elem.432" = type { %"class.v8::internal::GCIdleTimeHandler"* }
%"class.v8::internal::GCIdleTimeHandler" = type opaque
%"class.std::__1::unique_ptr.436" = type { %"class.std::__1::__compressed_pair.437" }
%"class.std::__1::__compressed_pair.437" = type { %"struct.std::__1::__compressed_pair_elem.438" }
%"struct.std::__1::__compressed_pair_elem.438" = type { %"class.v8::internal::MemoryMeasurement"* }
%"class.v8::internal::MemoryMeasurement" = type { %"class.std::__1::list", %"class.std::__1::list", %"class.std::__1::list", %"class.v8::internal::Isolate"*, i8, i8, i8, %"class.v8::base::RandomNumberGenerator" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.439" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.439" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.v8::base::RandomNumberGenerator" = type { i64, i64, i64 }
%"class.std::__1::unique_ptr.446" = type { %"class.std::__1::__compressed_pair.447" }
%"class.std::__1::__compressed_pair.447" = type { %"struct.std::__1::__compressed_pair_elem.448" }
%"struct.std::__1::__compressed_pair_elem.448" = type { %"class.v8::internal::MemoryReducer"* }
%"class.v8::internal::MemoryReducer" = type opaque
%"class.std::__1::unique_ptr.452" = type { %"class.std::__1::__compressed_pair.453" }
%"class.std::__1::__compressed_pair.453" = type { %"struct.std::__1::__compressed_pair_elem.454" }
%"struct.std::__1::__compressed_pair_elem.454" = type { %"class.v8::internal::ObjectStats"* }
%"class.v8::internal::ObjectStats" = type opaque
%"class.std::__1::unique_ptr.458" = type { %"class.std::__1::__compressed_pair.459" }
%"class.std::__1::__compressed_pair.459" = type { %"struct.std::__1::__compressed_pair_elem.460" }
%"struct.std::__1::__compressed_pair_elem.460" = type { %"class.v8::internal::ScavengeJob"* }
%"class.v8::internal::ScavengeJob" = type opaque
%"class.std::__1::unique_ptr.464" = type { %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.466" }
%"struct.std::__1::__compressed_pair_elem.466" = type { %"class.v8::internal::AllocationObserver"* }
%"class.std::__1::unique_ptr.470" = type { %"class.std::__1::__compressed_pair.471" }
%"class.std::__1::__compressed_pair.471" = type { %"struct.std::__1::__compressed_pair_elem.472" }
%"struct.std::__1::__compressed_pair_elem.472" = type { %"class.v8::internal::LocalEmbedderHeapTracer"* }
%"class.v8::internal::LocalEmbedderHeapTracer" = type opaque
%"class.std::__1::unique_ptr.476" = type { %"class.std::__1::__compressed_pair.477" }
%"class.std::__1::__compressed_pair.477" = type { %"struct.std::__1::__compressed_pair_elem.478" }
%"struct.std::__1::__compressed_pair_elem.478" = type { %"class.v8::internal::MarkingBarrier"* }
%"class.v8::internal::MarkingBarrier" = type opaque
%"class.std::__1::shared_ptr.482" = type { %"class.v8::internal::CodeRange"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::CodeRange" = type { %"class.v8::internal::VirtualMemoryCage", %"struct.std::__1::atomic.501", %"class.v8::base::Mutex" }
%"class.v8::internal::VirtualMemoryCage" = type { i32 (...)**, i64, %"class.std::__1::unique_ptr.483", %"class.v8::internal::VirtualMemory" }
%"class.std::__1::unique_ptr.483" = type { %"class.std::__1::__compressed_pair.484" }
%"class.std::__1::__compressed_pair.484" = type { %"struct.std::__1::__compressed_pair_elem.485" }
%"struct.std::__1::__compressed_pair_elem.485" = type { %"class.v8::base::BoundedPageAllocator"* }
%"class.v8::base::BoundedPageAllocator" = type { %"class.v8::PageAllocator", %"class.v8::base::Mutex", i64, i64, %"class.v8::PageAllocator"*, %"class.v8::base::RegionAllocator" }
%"class.v8::base::RegionAllocator" = type { %"class.v8::base::RegionAllocator::Region", i64, i64, i64, i64, %"class.std::__1::set.486", %"class.std::__1::set.494" }
%"class.v8::base::RegionAllocator::Region" = type <{ %"class.v8::base::AddressRegion", i32, [4 x i8] }>
%"class.std::__1::set.486" = type { %"class.std::__1::__tree.487" }
%"class.std::__1::__tree.487" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.488", %"class.std::__1::__compressed_pair.492" }
%"class.std::__1::__compressed_pair.488" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::__compressed_pair.492" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::set.494" = type { %"class.std::__1::__tree.495" }
%"class.std::__1::__tree.495" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.488", %"class.std::__1::__compressed_pair.496" }
%"class.std::__1::__compressed_pair.496" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::atomic.501" = type { %"struct.std::__1::__atomic_base.502" }
%"struct.std::__1::__atomic_base.502" = type { %"struct.std::__1::__cxx_atomic_impl.503" }
%"struct.std::__1::__cxx_atomic_impl.503" = type { %"struct.std::__1::__cxx_atomic_base_impl.504" }
%"struct.std::__1::__cxx_atomic_base_impl.504" = type { i8* }
%"class.v8::CppHeap" = type opaque
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"class.v8::internal::StrongRootsEntry" = type { %"class.v8::internal::FullObjectSlot", %"class.v8::internal::FullObjectSlot", %"class.v8::internal::StrongRootsEntry"*, %"class.v8::internal::StrongRootsEntry"* }
%"class.v8::internal::FullObjectSlot" = type { %"class.v8::internal::SlotBase" }
%"class.v8::internal::SlotBase" = type { i64 }
%"class.std::__1::unordered_map.505" = type { %"class.std::__1::__hash_table.506" }
%"class.std::__1::__hash_table.506" = type <{ %"class.std::__1::unique_ptr.507", %"class.std::__1::__compressed_pair.517", %"class.std::__1::__compressed_pair.522", %"class.std::__1::__compressed_pair.525", [4 x i8] }>
%"class.std::__1::unique_ptr.507" = type { %"class.std::__1::__compressed_pair.508" }
%"class.std::__1::__compressed_pair.508" = type { %"struct.std::__1::__compressed_pair_elem.509", %"struct.std::__1::__compressed_pair_elem.511" }
%"struct.std::__1::__compressed_pair_elem.509" = type { %"struct.std::__1::__hash_node_base.510"** }
%"struct.std::__1::__hash_node_base.510" = type { %"struct.std::__1::__hash_node_base.510"* }
%"struct.std::__1::__compressed_pair_elem.511" = type { %"class.std::__1::__bucket_list_deallocator.512" }
%"class.std::__1::__bucket_list_deallocator.512" = type { %"class.std::__1::__compressed_pair.513" }
%"class.std::__1::__compressed_pair.513" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.517" = type { %"struct.std::__1::__compressed_pair_elem.518" }
%"struct.std::__1::__compressed_pair_elem.518" = type { %"struct.std::__1::__hash_node_base.510" }
%"class.std::__1::__compressed_pair.522" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.525" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::unique_ptr.531" = type { %"class.std::__1::__compressed_pair.532" }
%"class.std::__1::__compressed_pair.532" = type { %"struct.std::__1::__compressed_pair_elem.533" }
%"struct.std::__1::__compressed_pair_elem.533" = type { %"class.v8::internal::GlobalHandleVector"* }
%"class.v8::internal::GlobalHandleVector" = type opaque
%"class.std::__1::unique_ptr.537" = type { %"class.std::__1::__compressed_pair.538" }
%"class.std::__1::__compressed_pair.538" = type { %"struct.std::__1::__compressed_pair_elem.539" }
%"struct.std::__1::__compressed_pair_elem.539" = type { %"class.v8::internal::GlobalSafepoint"* }
%"class.v8::internal::GlobalSafepoint" = type opaque
%"class.v8::internal::Heap::ExternalStringTable" = type { %"class.v8::internal::Heap"*, %"class.std::__1::vector.543", %"class.std::__1::vector.543" }
%"class.std::__1::unique_ptr.550" = type { %"class.std::__1::__compressed_pair.551" }
%"class.std::__1::__compressed_pair.551" = type { %"struct.std::__1::__compressed_pair_elem.552" }
%"struct.std::__1::__compressed_pair_elem.552" = type { %"class.v8::internal::CollectionBarrier"* }
%"class.v8::internal::CollectionBarrier" = type opaque
%"class.std::__1::unordered_set.332" = type { %"class.std::__1::__hash_table.333" }
%"class.std::__1::__hash_table.333" = type <{ %"class.std::__1::unique_ptr.334", %"class.std::__1::__compressed_pair.344", %"class.std::__1::__compressed_pair.349", %"class.std::__1::__compressed_pair.353", [4 x i8] }>
%"class.std::__1::unique_ptr.334" = type { %"class.std::__1::__compressed_pair.335" }
%"class.std::__1::__compressed_pair.335" = type { %"struct.std::__1::__compressed_pair_elem.336", %"struct.std::__1::__compressed_pair_elem.338" }
%"struct.std::__1::__compressed_pair_elem.336" = type { %"struct.std::__1::__hash_node_base.337"** }
%"struct.std::__1::__hash_node_base.337" = type { %"struct.std::__1::__hash_node_base.337"* }
%"struct.std::__1::__compressed_pair_elem.338" = type { %"class.std::__1::__bucket_list_deallocator.339" }
%"class.std::__1::__bucket_list_deallocator.339" = type { %"class.std::__1::__compressed_pair.340" }
%"class.std::__1::__compressed_pair.340" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.344" = type { %"struct.std::__1::__compressed_pair_elem.345" }
%"struct.std::__1::__compressed_pair_elem.345" = type { %"struct.std::__1::__hash_node_base.337" }
%"class.std::__1::__compressed_pair.349" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.353" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::unordered_map.582" = type { %"class.std::__1::__hash_table.583" }
%"class.std::__1::__hash_table.583" = type <{ %"class.std::__1::unique_ptr.584", %"class.std::__1::__compressed_pair.594", %"class.std::__1::__compressed_pair.599", %"class.std::__1::__compressed_pair.602", [4 x i8] }>
%"class.std::__1::unique_ptr.584" = type { %"class.std::__1::__compressed_pair.585" }
%"class.std::__1::__compressed_pair.585" = type { %"struct.std::__1::__compressed_pair_elem.586", %"struct.std::__1::__compressed_pair_elem.588" }
%"struct.std::__1::__compressed_pair_elem.586" = type { %"struct.std::__1::__hash_node_base.587"** }
%"struct.std::__1::__hash_node_base.587" = type { %"struct.std::__1::__hash_node_base.587"* }
%"struct.std::__1::__compressed_pair_elem.588" = type { %"class.std::__1::__bucket_list_deallocator.589" }
%"class.std::__1::__bucket_list_deallocator.589" = type { %"class.std::__1::__compressed_pair.590" }
%"class.std::__1::__compressed_pair.590" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.594" = type { %"struct.std::__1::__compressed_pair_elem.595" }
%"struct.std::__1::__compressed_pair_elem.595" = type { %"struct.std::__1::__hash_node_base.587" }
%"class.std::__1::__compressed_pair.599" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.602" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::unordered_map.556" = type { %"class.std::__1::__hash_table.557" }
%"class.std::__1::__hash_table.557" = type <{ %"class.std::__1::unique_ptr.558", %"class.std::__1::__compressed_pair.568", %"class.std::__1::__compressed_pair.573", %"class.std::__1::__compressed_pair.576", [4 x i8] }>
%"class.std::__1::unique_ptr.558" = type { %"class.std::__1::__compressed_pair.559" }
%"class.std::__1::__compressed_pair.559" = type { %"struct.std::__1::__compressed_pair_elem.560", %"struct.std::__1::__compressed_pair_elem.562" }
%"struct.std::__1::__compressed_pair_elem.560" = type { %"struct.std::__1::__hash_node_base.561"** }
%"struct.std::__1::__hash_node_base.561" = type { %"struct.std::__1::__hash_node_base.561"* }
%"struct.std::__1::__compressed_pair_elem.562" = type { %"class.std::__1::__bucket_list_deallocator.563" }
%"class.std::__1::__bucket_list_deallocator.563" = type { %"class.std::__1::__compressed_pair.564" }
%"class.std::__1::__compressed_pair.564" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.568" = type { %"struct.std::__1::__compressed_pair_elem.569" }
%"struct.std::__1::__compressed_pair_elem.569" = type { %"struct.std::__1::__hash_node_base.561" }
%"class.std::__1::__compressed_pair.573" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.576" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::unordered_map.606" = type { %"class.std::__1::__hash_table.607" }
%"class.std::__1::__hash_table.607" = type <{ %"class.std::__1::unique_ptr.608", %"class.std::__1::__compressed_pair.618", %"class.std::__1::__compressed_pair.623", %"class.std::__1::__compressed_pair.628", [4 x i8] }>
%"class.std::__1::unique_ptr.608" = type { %"class.std::__1::__compressed_pair.609" }
%"class.std::__1::__compressed_pair.609" = type { %"struct.std::__1::__compressed_pair_elem.610", %"struct.std::__1::__compressed_pair_elem.612" }
%"struct.std::__1::__compressed_pair_elem.610" = type { %"struct.std::__1::__hash_node_base.611"** }
%"struct.std::__1::__hash_node_base.611" = type { %"struct.std::__1::__hash_node_base.611"* }
%"struct.std::__1::__compressed_pair_elem.612" = type { %"class.std::__1::__bucket_list_deallocator.613" }
%"class.std::__1::__bucket_list_deallocator.613" = type { %"class.std::__1::__compressed_pair.614" }
%"class.std::__1::__compressed_pair.614" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.618" = type { %"struct.std::__1::__compressed_pair_elem.619" }
%"struct.std::__1::__compressed_pair_elem.619" = type { %"struct.std::__1::__hash_node_base.611" }
%"class.std::__1::__compressed_pair.623" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.628" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::vector.634" = type { %"class.std::__1::__vector_base.635" }
%"class.std::__1::__vector_base.635" = type { %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.std::__1::__compressed_pair.636" }
%"class.v8::internal::HeapObjectAllocationTracker" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.636" = type { %"struct.std::__1::__compressed_pair_elem.637" }
%"struct.std::__1::__compressed_pair_elem.637" = type { %"class.v8::internal::HeapObjectAllocationTracker"** }
%"class.std::__1::unique_ptr.641" = type { %"class.std::__1::__compressed_pair.642" }
%"class.std::__1::__compressed_pair.642" = type { %"struct.std::__1::__compressed_pair_elem.643" }
%"struct.std::__1::__compressed_pair_elem.643" = type { %"class.v8::internal::third_party_heap::Heap"* }
%"class.v8::internal::third_party_heap::Heap" = type { i8 }
%"class.v8::internal::ReadOnlyHeap" = type { i32 (...)**, i8, %"class.v8::internal::ReadOnlySpace"*, %"class.std::__1::vector.543" }
%"class.std::__1::shared_ptr.647" = type { %"class.v8::internal::ReadOnlyArtifacts"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::ReadOnlyArtifacts" = type { i32 (...)**, %"class.std::__1::vector.141", %"class.v8::internal::AllocationStats", %"class.std::__1::unique_ptr.648", %"class.std::__1::unique_ptr.662" }
%"class.std::__1::unique_ptr.648" = type { %"class.std::__1::__compressed_pair.649" }
%"class.std::__1::__compressed_pair.649" = type { %"struct.std::__1::__compressed_pair_elem.650" }
%"struct.std::__1::__compressed_pair_elem.650" = type { %"class.v8::internal::SharedReadOnlySpace"* }
%"class.v8::internal::SharedReadOnlySpace" = type { %"class.v8::internal::ReadOnlySpace", %"class.std::__1::vector.651" }
%"class.std::__1::vector.651" = type { %"class.std::__1::__vector_base.652" }
%"class.std::__1::__vector_base.652" = type { %"class.std::__1::unique_ptr.653"*, %"class.std::__1::unique_ptr.653"*, %"class.std::__1::__compressed_pair.654" }
%"class.std::__1::unique_ptr.653" = type { %"class.std::__1::__compressed_pair.1149" }
%"class.std::__1::__compressed_pair.1149" = type { %"struct.std::__1::__compressed_pair_elem.1150" }
%"struct.std::__1::__compressed_pair_elem.1150" = type { %"class.v8::PageAllocator::SharedMemoryMapping"* }
%"class.v8::PageAllocator::SharedMemoryMapping" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.654" = type { %"struct.std::__1::__compressed_pair_elem.655" }
%"struct.std::__1::__compressed_pair_elem.655" = type { %"class.std::__1::unique_ptr.653"* }
%"class.std::__1::unique_ptr.662" = type { %"class.std::__1::__compressed_pair.663" }
%"class.std::__1::__compressed_pair.663" = type { %"struct.std::__1::__compressed_pair_elem.664" }
%"struct.std::__1::__compressed_pair_elem.664" = type { %"class.v8::internal::ReadOnlyHeap"* }
%"class.std::__1::unique_ptr.668" = type { %"class.std::__1::__compressed_pair.669" }
%"class.std::__1::__compressed_pair.669" = type { %"struct.std::__1::__compressed_pair_elem.670" }
%"struct.std::__1::__compressed_pair_elem.670" = type { %"class.v8::internal::StringTable"* }
%"class.v8::internal::StringTable" = type { %"struct.std::__1::atomic.671", %"class.v8::base::Mutex" }
%"struct.std::__1::atomic.671" = type { %"struct.std::__1::__atomic_base.672" }
%"struct.std::__1::__atomic_base.672" = type { %"struct.std::__1::__cxx_atomic_impl.673" }
%"struct.std::__1::__cxx_atomic_impl.673" = type { %"struct.std::__1::__cxx_atomic_base_impl.674" }
%"struct.std::__1::__cxx_atomic_base_impl.674" = type { %"class.v8::internal::StringTable::Data"* }
%"class.v8::internal::StringTable::Data" = type opaque
%"class.v8::internal::Isolate::EntryStackItem" = type { i32, %"class.v8::internal::Isolate::PerIsolateThreadData"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate::EntryStackItem"* }
%"class.v8::internal::Isolate::PerIsolateThreadData" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::ThreadId", i64, %"class.v8::internal::ThreadState"* }
%"class.v8::internal::ThreadState" = type opaque
%"class.v8::internal::StringStream" = type opaque
%"class.v8::internal::Bootstrapper" = type { %"class.v8::internal::Isolate"*, i32, %"class.v8::internal::SourceCodeCache" }
%"class.v8::internal::SourceCodeCache" = type { i32, %"class.v8::internal::FixedArray" }
%"class.v8::internal::FixedArray" = type { %"class.v8::internal::TorqueGeneratedFixedArray" }
%"class.v8::internal::TorqueGeneratedFixedArray" = type { %"class.v8::internal::FixedArrayBase" }
%"class.v8::internal::FixedArrayBase" = type { %"class.v8::internal::TorqueGeneratedFixedArrayBase" }
%"class.v8::internal::TorqueGeneratedFixedArrayBase" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::RuntimeProfiler" = type opaque
%"class.v8::internal::CompilationCache" = type opaque
%"class.std::__1::shared_ptr.678" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::Counters" = type { %"class.std::__1::enable_shared_from_this", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::AggregatableHistogramTimer", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::RuntimeCallStats", %"class.v8::internal::WorkerThreadRuntimeCallStats", %"class.v8::internal::Isolate"*, %"class.v8::internal::StatsTable" }
%"class.std::__1::enable_shared_from_this" = type { %"class.std::__1::weak_ptr" }
%"class.std::__1::weak_ptr" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::HistogramTimer" = type { %"class.v8::internal::TimedHistogram.base", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::TimedHistogram.base" = type <{ %"class.v8::internal::Histogram", i32 }>
%"class.v8::base::ElapsedTimer" = type { %"class.v8::base::TimeTicks" }
%"class.v8::base::TimeTicks" = type { %"class.v8::base::time_internal::TimeBase" }
%"class.v8::base::time_internal::TimeBase" = type { i64 }
%"class.v8::internal::TimedHistogram" = type <{ %"class.v8::internal::Histogram", i32, [4 x i8] }>
%"class.v8::internal::AggregatableHistogramTimer" = type { %"class.v8::internal::Histogram", %"class.v8::base::TimeDelta" }
%"class.v8::base::TimeDelta" = type { i64 }
%"class.v8::internal::Histogram" = type { i8*, i32, i32, i32, i8*, %"class.v8::internal::Counters"* }
%"class.v8::internal::StatsCounterThreadSafe" = type { %"class.v8::internal::StatsCounterBase", %"class.v8::base::Mutex" }
%"class.v8::internal::StatsCounterBase" = type { %"class.v8::internal::Counters"*, i8*, i32* }
%"class.v8::internal::StatsCounter" = type <{ %"class.v8::internal::StatsCounterBase", i8, [7 x i8] }>
%"class.v8::internal::WorkerThreadRuntimeCallStats" = type <{ %"class.v8::base::Mutex", %"class.std::__1::vector.679", %"class.v8::base::Optional", %"class.v8::internal::ThreadId", [4 x i8] }>
%"class.std::__1::vector.679" = type { %"class.std::__1::__vector_base.680" }
%"class.std::__1::__vector_base.680" = type { %"class.std::__1::unique_ptr.681"*, %"class.std::__1::unique_ptr.681"*, %"class.std::__1::__compressed_pair.682" }
%"class.std::__1::unique_ptr.681" = type opaque
%"class.std::__1::__compressed_pair.682" = type { %"struct.std::__1::__compressed_pair_elem.683" }
%"struct.std::__1::__compressed_pair_elem.683" = type { %"class.std::__1::unique_ptr.681"* }
%"class.v8::base::Optional" = type { %"class.v8::base::internal::OptionalBase" }
%"class.v8::base::internal::OptionalBase" = type { %"struct.v8::base::internal::OptionalStorage" }
%"struct.v8::base::internal::OptionalStorage" = type { %"struct.v8::base::internal::OptionalStorageBase" }
%"struct.v8::base::internal::OptionalStorageBase" = type { i8, %union.anon }
%union.anon = type { i32 }
%"class.v8::internal::StatsTable" = type { i32* (i8*)*, i8* (i8*, i32, i32, i64)*, void (i8*, i32)* }
%"class.v8::base::RecursiveMutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.v8::base::SharedMutex" = type { %union.pthread_rwlock_t }
%union.pthread_rwlock_t = type { %struct.__pthread_rwlock_arch_t }
%struct.__pthread_rwlock_arch_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i8, [7 x i8], i64, i32 }
%"class.v8::internal::Logger" = type { %"class.v8::internal::CodeEventListener", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.687", %"class.std::__1::unique_ptr.693", %"struct.std::__1::atomic.154", %"class.std::__1::unique_ptr.699", %"class.std::__1::unique_ptr.705", %"class.std::__1::unique_ptr.711", %"class.std::__1::unique_ptr.717", %"class.std::__1::unique_ptr.723", %"class.std::__1::set.729", i32, i8, %"class.v8::internal::ExistingCodeLogger", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::CodeEventListener" = type { i32 (...)** }
%"class.std::__1::unique_ptr.687" = type { %"class.std::__1::__compressed_pair.688" }
%"class.std::__1::__compressed_pair.688" = type { %"struct.std::__1::__compressed_pair_elem.689" }
%"struct.std::__1::__compressed_pair_elem.689" = type { %"class.v8::internal::Ticker"* }
%"class.v8::internal::Ticker" = type opaque
%"class.std::__1::unique_ptr.693" = type { %"class.std::__1::__compressed_pair.694" }
%"class.std::__1::__compressed_pair.694" = type { %"struct.std::__1::__compressed_pair_elem.695" }
%"struct.std::__1::__compressed_pair_elem.695" = type { %"class.v8::internal::Profiler"* }
%"class.v8::internal::Profiler" = type opaque
%"class.std::__1::unique_ptr.699" = type { %"class.std::__1::__compressed_pair.700" }
%"class.std::__1::__compressed_pair.700" = type { %"struct.std::__1::__compressed_pair_elem.701" }
%"struct.std::__1::__compressed_pair_elem.701" = type { %"class.v8::internal::Log"* }
%"class.v8::internal::Log" = type opaque
%"class.std::__1::unique_ptr.705" = type { %"class.std::__1::__compressed_pair.706" }
%"class.std::__1::__compressed_pair.706" = type { %"struct.std::__1::__compressed_pair_elem.707" }
%"struct.std::__1::__compressed_pair_elem.707" = type { %"class.v8::internal::PerfBasicLogger"* }
%"class.v8::internal::PerfBasicLogger" = type opaque
%"class.std::__1::unique_ptr.711" = type { %"class.std::__1::__compressed_pair.712" }
%"class.std::__1::__compressed_pair.712" = type { %"struct.std::__1::__compressed_pair_elem.713" }
%"struct.std::__1::__compressed_pair_elem.713" = type { %"class.v8::internal::PerfJitLogger"* }
%"class.v8::internal::PerfJitLogger" = type opaque
%"class.std::__1::unique_ptr.717" = type { %"class.std::__1::__compressed_pair.718" }
%"class.std::__1::__compressed_pair.718" = type { %"struct.std::__1::__compressed_pair_elem.719" }
%"struct.std::__1::__compressed_pair_elem.719" = type { %"class.v8::internal::LowLevelLogger"* }
%"class.v8::internal::LowLevelLogger" = type opaque
%"class.std::__1::unique_ptr.723" = type { %"class.std::__1::__compressed_pair.724" }
%"class.std::__1::__compressed_pair.724" = type { %"struct.std::__1::__compressed_pair_elem.725" }
%"struct.std::__1::__compressed_pair_elem.725" = type { %"class.v8::internal::JitLogger"* }
%"class.v8::internal::JitLogger" = type opaque
%"class.std::__1::set.729" = type { %"class.std::__1::__tree.730" }
%"class.std::__1::__tree.730" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.731", %"class.std::__1::__compressed_pair.735" }
%"class.std::__1::__compressed_pair.731" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::__compressed_pair.735" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.v8::internal::ExistingCodeLogger" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::CodeEventListener"* }
%"class.v8::internal::StubCache" = type { [2048 x %"struct.v8::internal::StubCache::Entry"], [512 x %"struct.v8::internal::StubCache::Entry"], %"class.v8::internal::Isolate"* }
%"struct.v8::internal::StubCache::Entry" = type { %"class.v8::internal::StrongTaggedValue", %"class.v8::internal::TaggedValue", %"class.v8::internal::StrongTaggedValue" }
%"class.v8::internal::TaggedValue" = type { %"class.v8::internal::TaggedImpl.738" }
%"class.v8::internal::TaggedImpl.738" = type { i32 }
%"class.v8::internal::StrongTaggedValue" = type { %"class.v8::internal::TaggedImpl.737" }
%"class.v8::internal::TaggedImpl.737" = type { i32 }
%"class.v8::internal::Deoptimizer" = type opaque
%"class.v8::internal::MaterializedObjectStore" = type opaque
%"class.v8::internal::DescriptorLookupCache" = type { [64 x %"struct.v8::internal::DescriptorLookupCache::Key"], [64 x i32] }
%"struct.v8::internal::DescriptorLookupCache::Key" = type { %"class.v8::internal::Map", %"class.v8::internal::Name" }
%"class.v8::internal::Map" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Name" = type { %"class.v8::internal::TorqueGeneratedName" }
%"class.v8::internal::TorqueGeneratedName" = type { %"class.v8::internal::PrimitiveHeapObject" }
%"class.v8::internal::PrimitiveHeapObject" = type { %"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" }
%"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" = type { %"class.v8::internal::HeapObject" }
%"struct.v8::internal::HandleScopeData" = type { i64*, i64*, i32, i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::CanonicalHandleScope" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::OptimizedCompilationInfo"*, %"class.v8::internal::Zone"*, %"class.v8::internal::RootIndexMap"*, %"class.std::__1::unique_ptr.745", i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::OptimizedCompilationInfo" = type opaque
%"class.v8::internal::RootIndexMap" = type opaque
%"class.std::__1::unique_ptr.745" = type { %"class.std::__1::__compressed_pair.746" }
%"class.std::__1::__compressed_pair.746" = type { %"struct.std::__1::__compressed_pair_elem.747" }
%"struct.std::__1::__compressed_pair_elem.747" = type { %"class.v8::internal::IdentityMap"* }
%"class.v8::internal::IdentityMap" = type opaque
%"class.v8::internal::HandleScopeImplementer" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::DetachableVector", %"class.v8::internal::DetachableVector.751", %"class.v8::internal::DetachableVector.752", %"class.v8::internal::DetachableVector.751", i64*, i64*, %"struct.v8::internal::HandleScopeData" }
%"class.v8::internal::DetachableVector" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVectorBase" = type { i8*, i64, i64 }
%"class.v8::internal::DetachableVector.752" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVector.751" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::UnicodeCache" = type opaque
%"class.v8::internal::AccountingAllocator" = type { i32 (...)**, %"struct.std::__1::atomic.21", %"struct.std::__1::atomic.21", %"class.std::__1::unique_ptr.739", %"class.std::__1::unique_ptr.483" }
%"class.std::__1::unique_ptr.739" = type { %"class.std::__1::__compressed_pair.740" }
%"class.std::__1::__compressed_pair.740" = type { %"struct.std::__1::__compressed_pair_elem.741" }
%"struct.std::__1::__compressed_pair_elem.741" = type { %"class.v8::internal::VirtualMemory"* }
%"class.v8::internal::InnerPointerToCodeCache" = type opaque
%"class.v8::internal::GlobalHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.753", %"class.std::__1::vector.759", %"class.std::__1::unique_ptr.766", %"class.std::__1::vector.773", %"class.std::__1::unique_ptr.780", i64, %"class.std::__1::vector.786", %"class.std::__1::vector.794", %"class.std::__1::vector.802", i8, i8, i32 }
%"class.std::__1::unique_ptr.753" = type { %"class.std::__1::__compressed_pair.754" }
%"class.std::__1::__compressed_pair.754" = type { %"struct.std::__1::__compressed_pair_elem.755" }
%"struct.std::__1::__compressed_pair_elem.755" = type { %"class.v8::internal::GlobalHandles::NodeSpace"* }
%"class.v8::internal::GlobalHandles::NodeSpace" = type opaque
%"class.std::__1::vector.759" = type { %"class.std::__1::__vector_base.760" }
%"class.std::__1::__vector_base.760" = type { %"class.v8::internal::GlobalHandles::Node"**, %"class.v8::internal::GlobalHandles::Node"**, %"class.std::__1::__compressed_pair.761" }
%"class.v8::internal::GlobalHandles::Node" = type opaque
%"class.std::__1::__compressed_pair.761" = type { %"struct.std::__1::__compressed_pair_elem.762" }
%"struct.std::__1::__compressed_pair_elem.762" = type { %"class.v8::internal::GlobalHandles::Node"** }
%"class.std::__1::unique_ptr.766" = type { %"class.std::__1::__compressed_pair.767" }
%"class.std::__1::__compressed_pair.767" = type { %"struct.std::__1::__compressed_pair_elem.768" }
%"struct.std::__1::__compressed_pair_elem.768" = type { %"class.v8::internal::GlobalHandles::NodeSpace.769"* }
%"class.v8::internal::GlobalHandles::NodeSpace.769" = type opaque
%"class.std::__1::vector.773" = type { %"class.std::__1::__vector_base.774" }
%"class.std::__1::__vector_base.774" = type { %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.std::__1::__compressed_pair.775" }
%"class.v8::internal::GlobalHandles::TracedNode" = type opaque
%"class.std::__1::__compressed_pair.775" = type { %"struct.std::__1::__compressed_pair_elem.776" }
%"struct.std::__1::__compressed_pair_elem.776" = type { %"class.v8::internal::GlobalHandles::TracedNode"** }
%"class.std::__1::unique_ptr.780" = type { %"class.std::__1::__compressed_pair.781" }
%"class.std::__1::__compressed_pair.781" = type { %"struct.std::__1::__compressed_pair_elem.782" }
%"struct.std::__1::__compressed_pair_elem.782" = type { %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"* }
%"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace" = type opaque
%"class.std::__1::vector.786" = type { %"class.std::__1::__vector_base.787" }
%"class.std::__1::__vector_base.787" = type { %"struct.std::__1::pair.788"*, %"struct.std::__1::pair.788"*, %"class.std::__1::__compressed_pair.789" }
%"struct.std::__1::pair.788" = type opaque
%"class.std::__1::__compressed_pair.789" = type { %"struct.std::__1::__compressed_pair_elem.790" }
%"struct.std::__1::__compressed_pair_elem.790" = type { %"struct.std::__1::pair.788"* }
%"class.std::__1::vector.794" = type { %"class.std::__1::__vector_base.795" }
%"class.std::__1::__vector_base.795" = type { %"struct.std::__1::pair.796"*, %"struct.std::__1::pair.796"*, %"class.std::__1::__compressed_pair.797" }
%"struct.std::__1::pair.796" = type opaque
%"class.std::__1::__compressed_pair.797" = type { %"struct.std::__1::__compressed_pair_elem.798" }
%"struct.std::__1::__compressed_pair_elem.798" = type { %"struct.std::__1::pair.796"* }
%"class.std::__1::vector.802" = type { %"class.std::__1::__vector_base.803" }
%"class.std::__1::__vector_base.803" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.std::__1::__compressed_pair.804" }
%"class.v8::internal::GlobalHandles::PendingPhantomCallback" = type { void (%"class.v8::WeakCallbackInfo"*)*, i8*, [2 x i8*] }
%"class.v8::WeakCallbackInfo" = type { %"class.v8::Isolate"*, i8*, {}**, [2 x i8*] }
%"class.std::__1::__compressed_pair.804" = type { %"struct.std::__1::__compressed_pair_elem.805" }
%"struct.std::__1::__compressed_pair_elem.805" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* }
%"class.v8::internal::EternalHandles" = type { i32, %"class.std::__1::vector.809", %"class.std::__1::vector.816" }
%"class.v8::internal::ThreadManager" = type opaque
%"class.v8::bigint::Processor" = type opaque
%"class.v8::internal::RuntimeState" = type { %"class.std::__1::unique_ptr.823" }
%"class.std::__1::unique_ptr.823" = type { %"class.std::__1::__compressed_pair.824" }
%"class.std::__1::__compressed_pair.824" = type { %"struct.std::__1::__compressed_pair_elem.825" }
%"struct.std::__1::__compressed_pair_elem.825" = type { %"struct.v8::internal::Runtime::Function"* }
%"struct.v8::internal::Runtime::Function" = type { i32, i32, i8*, i64, i8, i8 }
%"class.v8::internal::Builtins" = type { %"class.v8::internal::Isolate"*, i8, i32 }
%"class.v8::internal::SetupIsolateDelegate" = type opaque
%"class.v8::internal::RegExpStack" = type opaque
%"class.std::__1::vector.816" = type { %"class.std::__1::__vector_base.817" }
%"class.std::__1::__vector_base.817" = type { i32*, i32*, %"class.std::__1::__compressed_pair.818" }
%"class.std::__1::__compressed_pair.818" = type { %"struct.std::__1::__compressed_pair_elem.819" }
%"struct.std::__1::__compressed_pair_elem.819" = type { i32* }
%"class.v8::internal::DateCache" = type opaque
%"struct.std::__1::atomic.829" = type { %"struct.std::__1::__atomic_base.830" }
%"struct.std::__1::__atomic_base.830" = type { %"struct.std::__1::__cxx_atomic_impl.831" }
%"struct.std::__1::__cxx_atomic_impl.831" = type { %"struct.std::__1::__cxx_atomic_base_impl.832" }
%"struct.std::__1::__cxx_atomic_base_impl.832" = type { i32 }
%"class.v8::Promise" = type { i8 }
%"struct.std::__1::atomic.839" = type { %"struct.std::__1::__atomic_base.840" }
%"struct.std::__1::__atomic_base.840" = type { %"struct.std::__1::__cxx_atomic_impl.841" }
%"struct.std::__1::__cxx_atomic_impl.841" = type { %"struct.std::__1::__cxx_atomic_base_impl.842" }
%"struct.std::__1::__cxx_atomic_base_impl.842" = type { i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.844" }
%"class.std::__1::__compressed_pair.844" = type { %"struct.std::__1::__compressed_pair_elem.845" }
%"struct.std::__1::__compressed_pair_elem.845" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.846 }
%union.anon.846 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unordered_map.850" = type { %"class.std::__1::__hash_table.851" }
%"class.std::__1::__hash_table.851" = type <{ %"class.std::__1::unique_ptr.852", %"class.std::__1::__compressed_pair.862", %"class.std::__1::__compressed_pair.867", %"class.std::__1::__compressed_pair.870", [4 x i8] }>
%"class.std::__1::unique_ptr.852" = type { %"class.std::__1::__compressed_pair.853" }
%"class.std::__1::__compressed_pair.853" = type { %"struct.std::__1::__compressed_pair_elem.854", %"struct.std::__1::__compressed_pair_elem.856" }
%"struct.std::__1::__compressed_pair_elem.854" = type { %"struct.std::__1::__hash_node_base.855"** }
%"struct.std::__1::__hash_node_base.855" = type { %"struct.std::__1::__hash_node_base.855"* }
%"struct.std::__1::__compressed_pair_elem.856" = type { %"class.std::__1::__bucket_list_deallocator.857" }
%"class.std::__1::__bucket_list_deallocator.857" = type { %"class.std::__1::__compressed_pair.858" }
%"class.std::__1::__compressed_pair.858" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.862" = type { %"struct.std::__1::__compressed_pair_elem.863" }
%"struct.std::__1::__compressed_pair_elem.863" = type { %"struct.std::__1::__hash_node_base.855" }
%"class.std::__1::__compressed_pair.867" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.870" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::atomic.154" = type { %"struct.std::__1::__atomic_base.155" }
%"struct.std::__1::__atomic_base.155" = type { %"struct.std::__1::__cxx_atomic_impl.156" }
%"struct.std::__1::__cxx_atomic_impl.156" = type { %"struct.std::__1::__cxx_atomic_base_impl.157" }
%"struct.std::__1::__cxx_atomic_base_impl.157" = type { i8 }
%"class.v8::internal::Debug" = type { %"class.v8::debug::DebugDelegate"*, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.v8::internal::DebugInfoListNode"*, %"class.std::__1::unique_ptr.876", %"class.v8::internal::Handle.882", %"class.v8::internal::DebugFeatureTracker", %"class.v8::internal::Debug::ThreadLocal", %"class.v8::internal::Handle.883", %"class.v8::internal::Isolate"* }
%"class.v8::debug::DebugDelegate" = type { i32 (...)** }
%"class.v8::internal::DebugInfoListNode" = type { i64*, %"class.v8::internal::DebugInfoListNode"* }
%"class.std::__1::unique_ptr.876" = type { %"class.std::__1::__compressed_pair.877" }
%"class.std::__1::__compressed_pair.877" = type { %"struct.std::__1::__compressed_pair_elem.878" }
%"struct.std::__1::__compressed_pair_elem.878" = type { %"class.v8::internal::Debug::TemporaryObjectsTracker"* }
%"class.v8::internal::Debug::TemporaryObjectsTracker" = type opaque
%"class.v8::internal::Handle.882" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::DebugFeatureTracker" = type <{ %"class.v8::internal::Isolate"*, i32, [4 x i8] }>
%"class.v8::internal::Debug::ThreadLocal" = type <{ i64, i32, i8, [3 x i8], %"class.v8::internal::Object", i8, [3 x i8], i32, i32, i32, %"class.v8::internal::Object", %"class.v8::internal::Object", i32, i8, [3 x i8] }>
%"class.v8::internal::Handle.883" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HeapProfiler" = type { %"class.v8::internal::HeapObjectAllocationTracker", %"class.std::__1::unique_ptr.884", %"class.std::__1::vector.890", %"class.std::__1::unique_ptr.898", %"class.std::__1::unique_ptr.904", i8, i8, %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.910", %"class.std::__1::vector.916", %"struct.std::__1::pair.924" }
%"class.std::__1::unique_ptr.884" = type { %"class.std::__1::__compressed_pair.885" }
%"class.std::__1::__compressed_pair.885" = type { %"struct.std::__1::__compressed_pair_elem.886" }
%"struct.std::__1::__compressed_pair_elem.886" = type { %"class.v8::internal::HeapObjectsMap"* }
%"class.v8::internal::HeapObjectsMap" = type opaque
%"class.std::__1::vector.890" = type { %"class.std::__1::__vector_base.891" }
%"class.std::__1::__vector_base.891" = type { %"class.std::__1::unique_ptr.892"*, %"class.std::__1::unique_ptr.892"*, %"class.std::__1::__compressed_pair.893" }
%"class.std::__1::unique_ptr.892" = type opaque
%"class.std::__1::__compressed_pair.893" = type { %"struct.std::__1::__compressed_pair_elem.894" }
%"struct.std::__1::__compressed_pair_elem.894" = type { %"class.std::__1::unique_ptr.892"* }
%"class.std::__1::unique_ptr.898" = type { %"class.std::__1::__compressed_pair.899" }
%"class.std::__1::__compressed_pair.899" = type { %"struct.std::__1::__compressed_pair_elem.900" }
%"struct.std::__1::__compressed_pair_elem.900" = type { %"class.v8::internal::StringsStorage"* }
%"class.v8::internal::StringsStorage" = type opaque
%"class.std::__1::unique_ptr.904" = type { %"class.std::__1::__compressed_pair.905" }
%"class.std::__1::__compressed_pair.905" = type { %"struct.std::__1::__compressed_pair_elem.906" }
%"struct.std::__1::__compressed_pair_elem.906" = type { %"class.v8::internal::AllocationTracker"* }
%"class.v8::internal::AllocationTracker" = type opaque
%"class.std::__1::unique_ptr.910" = type { %"class.std::__1::__compressed_pair.911" }
%"class.std::__1::__compressed_pair.911" = type { %"struct.std::__1::__compressed_pair_elem.912" }
%"struct.std::__1::__compressed_pair_elem.912" = type { %"class.v8::internal::SamplingHeapProfiler"* }
%"class.v8::internal::SamplingHeapProfiler" = type opaque
%"class.std::__1::vector.916" = type { %"class.std::__1::__vector_base.917" }
%"class.std::__1::__vector_base.917" = type { %"struct.std::__1::pair.918"*, %"struct.std::__1::pair.918"*, %"class.std::__1::__compressed_pair.919" }
%"struct.std::__1::pair.918" = type opaque
%"class.std::__1::__compressed_pair.919" = type { %"struct.std::__1::__compressed_pair_elem.920" }
%"struct.std::__1::__compressed_pair_elem.920" = type { %"struct.std::__1::pair.918"* }
%"struct.std::__1::pair.924" = type { i8 (%"class.v8::Isolate"*, %"class.v8::Local.2"*, i16, i8*)*, i8* }
%"class.v8::Local.2" = type { %"class.v8::Value"* }
%"class.std::__1::unique_ptr.925" = type { %"class.std::__1::__compressed_pair.926" }
%"class.std::__1::__compressed_pair.926" = type { %"struct.std::__1::__compressed_pair_elem.927" }
%"struct.std::__1::__compressed_pair_elem.927" = type { %"class.v8::internal::CodeEventDispatcher"* }
%"class.v8::internal::CodeEventDispatcher" = type { %"class.v8::internal::CodeEventListener", %"class.std::__1::unordered_set.928", %"class.v8::base::Mutex" }
%"class.std::__1::unordered_set.928" = type { %"class.std::__1::__hash_table.929" }
%"class.std::__1::__hash_table.929" = type <{ %"class.std::__1::unique_ptr.930", %"class.std::__1::__compressed_pair.940", %"class.std::__1::__compressed_pair.945", %"class.std::__1::__compressed_pair.949", [4 x i8] }>
%"class.std::__1::unique_ptr.930" = type { %"class.std::__1::__compressed_pair.931" }
%"class.std::__1::__compressed_pair.931" = type { %"struct.std::__1::__compressed_pair_elem.932", %"struct.std::__1::__compressed_pair_elem.934" }
%"struct.std::__1::__compressed_pair_elem.932" = type { %"struct.std::__1::__hash_node_base.933"** }
%"struct.std::__1::__hash_node_base.933" = type { %"struct.std::__1::__hash_node_base.933"* }
%"struct.std::__1::__compressed_pair_elem.934" = type { %"class.std::__1::__bucket_list_deallocator.935" }
%"class.std::__1::__bucket_list_deallocator.935" = type { %"class.std::__1::__compressed_pair.936" }
%"class.std::__1::__compressed_pair.936" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.940" = type { %"struct.std::__1::__compressed_pair_elem.941" }
%"struct.std::__1::__compressed_pair_elem.941" = type { %"struct.std::__1::__hash_node_base.933" }
%"class.std::__1::__compressed_pair.945" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.949" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.v8::internal::AstStringConstants" = type { %"class.v8::internal::Zone", %"class.v8::base::TemplateHashMapImpl", i64, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"* }
%"class.v8::internal::Zone" = type <{ i64, i64, i64, i64, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Segment"*, i8*, i8, i8, [6 x i8] }>
%"class.v8::internal::Segment" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::Segment"*, i64 }
%"class.v8::base::TemplateHashMapImpl" = type { %"struct.v8::base::TemplateHashMapImpl<const v8::internal::AstRawString *, v8::base::NoHashMapValue, v8::internal::AstRawStringMapMatcher, v8::base::DefaultAllocationPolicy>::Impl" }
%"struct.v8::base::TemplateHashMapImpl<const v8::internal::AstRawString *, v8::base::NoHashMapValue, v8::internal::AstRawStringMapMatcher, v8::base::DefaultAllocationPolicy>::Impl" = type { %"struct.v8::base::TemplateHashMapEntry"*, i32, i32 }
%"struct.v8::base::TemplateHashMapEntry" = type <{ %union.anon.1148, i32, [4 x i8] }>
%union.anon.1148 = type { %"class.v8::internal::AstRawString"* }
%"class.v8::internal::AstRawString" = type <{ %union.anon.957, %"class.v8::internal::Vector.958", i32, i8, [3 x i8] }>
%union.anon.957 = type { %"class.v8::internal::AstRawString"* }
%"class.v8::internal::Vector.958" = type { i8*, i64 }
%"class.v8::internal::interpreter::Interpreter" = type opaque
%"class.v8::internal::compiler::PerIsolateCompilerCache" = type opaque
%"class.v8::internal::CompilerDispatcher" = type opaque
%"class.std::__1::queue" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.965" }
%"struct.std::__1::__split_buffer" = type { %"struct.std::__1::pair.959"**, %"struct.std::__1::pair.959"**, %"struct.std::__1::pair.959"**, %"class.std::__1::__compressed_pair.960" }
%"struct.std::__1::pair.959" = type opaque
%"class.std::__1::__compressed_pair.960" = type { %"struct.std::__1::__compressed_pair_elem.961" }
%"struct.std::__1::__compressed_pair_elem.961" = type { %"struct.std::__1::pair.959"** }
%"class.std::__1::__compressed_pair.965" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.v8::String" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::FunctionCallbackInfo" = type <{ i64*, i64*, i32, [4 x i8] }>
%"class.v8::internal::Relocatable" = type { i32 (...)**, %"class.v8::internal::Isolate"*, %"class.v8::internal::Relocatable"* }
%"class.std::__1::vector.970" = type { %"class.std::__1::__vector_base.971" }
%"class.std::__1::__vector_base.971" = type { %"class.v8::internal::Handle.972"*, %"class.v8::internal::Handle.972"*, %"class.std::__1::__compressed_pair.973" }
%"class.v8::internal::Handle.972" = type { %"class.v8::internal::HandleBase" }
%"class.std::__1::__compressed_pair.973" = type { %"struct.std::__1::__compressed_pair_elem.974" }
%"struct.std::__1::__compressed_pair_elem.974" = type { %"class.v8::internal::Handle.972"* }
%"class.v8::internal::Object" = type { %"class.v8::internal::TaggedImpl" }
%"class.v8::internal::TaggedImpl" = type { i64 }
%"class.v8::internal::AddressToIndexHashMap" = type opaque
%"class.v8::internal::HeapObjectToIndexHashMap" = type opaque
%"class.v8::internal::MicrotaskQueue" = type opaque
%"class.v8::internal::CompilationStatistics" = type opaque
%"class.v8::internal::CodeTracer" = type <{ %"class.v8::internal::EmbeddedVector", %struct._IO_FILE*, i32, [4 x i8] }>
%"class.v8::internal::EmbeddedVector" = type { %"class.v8::internal::Vector.978", [128 x i8] }
%"class.v8::internal::Vector.978" = type { i8*, i64 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%"class.v8::PromiseRejectMessage" = type { %"class.v8::Local.834", i32, %"class.v8::Local.2" }
%"class.v8::Local.834" = type { %"class.v8::Promise"* }
%"class.v8::StartupData" = type { i8*, i32 }
%"class.v8_inspector::V8Inspector" = type opaque
%"class.v8::internal::compiler::NodeObserver" = type opaque
%"class.v8::internal::OptimizingCompileDispatcher" = type opaque
%"class.std::__1::unique_ptr.979" = type { %"class.std::__1::__compressed_pair.980" }
%"class.std::__1::__compressed_pair.980" = type { %"struct.std::__1::__compressed_pair_elem.981" }
%"struct.std::__1::__compressed_pair_elem.981" = type { %"class.v8::internal::PersistentHandlesList"* }
%"class.v8::internal::PersistentHandlesList" = type { %"class.v8::base::Mutex", %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.985" = type { %"class.std::__1::__vector_base.986" }
%"class.std::__1::__vector_base.986" = type { void (%"class.v8::Isolate"*)**, void (%"class.v8::Isolate"*)**, %"class.std::__1::__compressed_pair.987" }
%"class.std::__1::__compressed_pair.987" = type { %"struct.std::__1::__compressed_pair_elem.988" }
%"struct.std::__1::__compressed_pair_elem.988" = type { void (%"class.v8::Isolate"*)** }
%"class.std::__1::shared_ptr.992" = type { %"class.v8::internal::metrics::Recorder"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::metrics::Recorder" = type opaque
%"class.std::__1::unordered_map.993" = type { %"class.std::__1::__hash_table.994" }
%"class.std::__1::__hash_table.994" = type <{ %"class.std::__1::unique_ptr.995", %"class.std::__1::__compressed_pair.1005", %"class.std::__1::__compressed_pair.1010", %"class.std::__1::__compressed_pair.1013", [4 x i8] }>
%"class.std::__1::unique_ptr.995" = type { %"class.std::__1::__compressed_pair.996" }
%"class.std::__1::__compressed_pair.996" = type { %"struct.std::__1::__compressed_pair_elem.997", %"struct.std::__1::__compressed_pair_elem.999" }
%"struct.std::__1::__compressed_pair_elem.997" = type { %"struct.std::__1::__hash_node_base.998"** }
%"struct.std::__1::__hash_node_base.998" = type { %"struct.std::__1::__hash_node_base.998"* }
%"struct.std::__1::__compressed_pair_elem.999" = type { %"class.std::__1::__bucket_list_deallocator.1000" }
%"class.std::__1::__bucket_list_deallocator.1000" = type { %"class.std::__1::__compressed_pair.1001" }
%"class.std::__1::__compressed_pair.1001" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.1005" = type { %"struct.std::__1::__compressed_pair_elem.1006" }
%"struct.std::__1::__compressed_pair_elem.1006" = type { %"struct.std::__1::__hash_node_base.998" }
%"class.std::__1::__compressed_pair.1010" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.1013" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.v8::metrics::LongTaskStats" = type { i64, i64, i64 }
%"class.std::__1::vector.543" = type { %"class.std::__1::__vector_base.544" }
%"class.std::__1::__vector_base.544" = type { %"class.v8::internal::Object"*, %"class.v8::internal::Object"*, %"class.std::__1::__compressed_pair.545" }
%"class.std::__1::__compressed_pair.545" = type { %"struct.std::__1::__compressed_pair_elem.546" }
%"struct.std::__1::__compressed_pair_elem.546" = type { %"class.v8::internal::Object"* }
%"class.v8::internal::BuiltinsConstantsTableBuilder" = type opaque
%"class.v8::ArrayBuffer::Allocator" = type { i32 (...)** }
%"class.std::__1::shared_ptr.162" = type { %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::FutexWaitListNode" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::shared_ptr.1017", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::base::ConditionVariable", %"class.v8::internal::FutexWaitListNode"*, %"class.v8::internal::FutexWaitListNode"*, %"class.std::__1::weak_ptr.1046", i64, i8*, i8, i8, %"class.v8::Global", %"class.v8::Global.1047", %"class.v8::base::TimeTicks", i64 }
%"class.std::__1::shared_ptr.1017" = type { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::TaskRunner" = type { i32 (...)** }
%"class.v8::base::ConditionVariable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.1042, %union.anon.1044, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.1042 = type { i64 }
%union.anon.1044 = type { i64 }
%"class.std::__1::weak_ptr.1046" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Promise"* }
%"class.v8::Global.1047" = type { %"class.v8::PersistentBase.1048" }
%"class.v8::PersistentBase.1048" = type { %"class.v8::Context"* }
%"class.v8::internal::CancelableTaskManager" = type <{ i64, %"class.std::__1::unordered_map.1018", %"class.v8::base::ConditionVariable", %"class.v8::base::Mutex", i8, [7 x i8] }>
%"class.std::__1::unordered_map.1018" = type { %"class.std::__1::__hash_table.1019" }
%"class.std::__1::__hash_table.1019" = type <{ %"class.std::__1::unique_ptr.1020", %"class.std::__1::__compressed_pair.1030", %"class.std::__1::__compressed_pair.1035", %"class.std::__1::__compressed_pair.1038", [4 x i8] }>
%"class.std::__1::unique_ptr.1020" = type { %"class.std::__1::__compressed_pair.1021" }
%"class.std::__1::__compressed_pair.1021" = type { %"struct.std::__1::__compressed_pair_elem.1022", %"struct.std::__1::__compressed_pair_elem.1024" }
%"struct.std::__1::__compressed_pair_elem.1022" = type { %"struct.std::__1::__hash_node_base.1023"** }
%"struct.std::__1::__hash_node_base.1023" = type { %"struct.std::__1::__hash_node_base.1023"* }
%"struct.std::__1::__compressed_pair_elem.1024" = type { %"class.std::__1::__bucket_list_deallocator.1025" }
%"class.std::__1::__bucket_list_deallocator.1025" = type { %"class.std::__1::__compressed_pair.1026" }
%"class.std::__1::__compressed_pair.1026" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.1030" = type { %"struct.std::__1::__compressed_pair_elem.1031" }
%"struct.std::__1::__compressed_pair_elem.1031" = type { %"struct.std::__1::__hash_node_base.1023" }
%"class.std::__1::__compressed_pair.1035" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.1038" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.v8::debug::ConsoleDelegate" = type { i32 (...)** }
%"class.v8::debug::AsyncEventDelegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1049" = type { %"class.std::__1::__compressed_pair.1050" }
%"class.std::__1::__compressed_pair.1050" = type { %"struct.std::__1::__compressed_pair_elem.1051" }
%"struct.std::__1::__compressed_pair_elem.1051" = type { %"class.v8::internal::LocalIsolate"* }
%"class.v8::internal::LocalIsolate" = type { %"class.v8::internal::HiddenLocalFactory", %"class.v8::internal::LocalHeap", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.1078", %"class.v8::internal::ThreadId", i64, %"class.v8::internal::RuntimeCallStats"* }
%"class.v8::internal::HiddenLocalFactory" = type { %"class.v8::internal::LocalFactory" }
%"class.v8::internal::LocalFactory" = type { %"class.v8::internal::ReadOnlyRoots" }
%"class.v8::internal::ReadOnlyRoots" = type { i64* }
%"class.std::__1::unique_ptr.1078" = type { %"class.std::__1::__compressed_pair.1079" }
%"class.std::__1::__compressed_pair.1079" = type { %"struct.std::__1::__compressed_pair_elem.1080" }
%"struct.std::__1::__compressed_pair_elem.1080" = type { %"class.v8::internal::LocalLogger"* }
%"class.v8::internal::LocalLogger" = type opaque
%"struct.v8::internal::ManagedPtrDestructor" = type { i64, %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"*, i8*, void (i8*)*, i64* }
%"class.v8::internal::wasm::WasmEngine" = type opaque
%"class.std::__1::unique_ptr.1087" = type { %"class.std::__1::__compressed_pair.1088" }
%"class.std::__1::__compressed_pair.1088" = type { %"struct.std::__1::__compressed_pair_elem.1089" }
%"struct.std::__1::__compressed_pair_elem.1089" = type { %"class.v8::internal::TracingCpuProfilerImpl"* }
%"class.v8::internal::TracingCpuProfilerImpl" = type opaque
%"class.v8::internal::EmbeddedFileWriterInterface" = type opaque
%"class.v8::Context::BackupIncumbentScope" = type { %"class.v8::Local.835", i64, %"class.v8::Context::BackupIncumbentScope"* }
%"class.v8::Local.835" = type { %"class.v8::Context"* }
%"class.v8::internal::Isolate::ThreadDataTable" = type { %"class.std::__1::unordered_map.1095" }
%"class.std::__1::unordered_map.1095" = type { %"class.std::__1::__hash_table.1096" }
%"class.std::__1::__hash_table.1096" = type <{ %"class.std::__1::unique_ptr.1097", %"class.std::__1::__compressed_pair.1107", %"class.std::__1::__compressed_pair.1112", %"class.std::__1::__compressed_pair.1115", [4 x i8] }>
%"class.std::__1::unique_ptr.1097" = type { %"class.std::__1::__compressed_pair.1098" }
%"class.std::__1::__compressed_pair.1098" = type { %"struct.std::__1::__compressed_pair_elem.1099", %"struct.std::__1::__compressed_pair_elem.1101" }
%"struct.std::__1::__compressed_pair_elem.1099" = type { %"struct.std::__1::__hash_node_base.1100"** }
%"struct.std::__1::__hash_node_base.1100" = type { %"struct.std::__1::__hash_node_base.1100"* }
%"struct.std::__1::__compressed_pair_elem.1101" = type { %"class.std::__1::__bucket_list_deallocator.1102" }
%"class.std::__1::__bucket_list_deallocator.1102" = type { %"class.std::__1::__compressed_pair.1103" }
%"class.std::__1::__compressed_pair.1103" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.1107" = type { %"struct.std::__1::__compressed_pair_elem.1108" }
%"struct.std::__1::__compressed_pair_elem.1108" = type { %"struct.std::__1::__hash_node_base.1100" }
%"class.std::__1::__compressed_pair.1112" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.1115" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.v8::base::Mutex" = type { %union.pthread_mutex_t }
%"struct.std::__1::atomic.1121" = type { %"struct.std::__1::__atomic_base.1122" }
%"struct.std::__1::__atomic_base.1122" = type { %"struct.std::__1::__cxx_atomic_impl.1123" }
%"struct.std::__1::__cxx_atomic_impl.1123" = type { %"struct.std::__1::__cxx_atomic_base_impl.1124" }
%"struct.std::__1::__cxx_atomic_base_impl.1124" = type { %"class.std::__1::vector.1125"* }
%"class.std::__1::vector.1125" = type { %"class.std::__1::__vector_base.1126" }
%"class.std::__1::__vector_base.1126" = type { %"struct.v8::MemoryRange"*, %"struct.v8::MemoryRange"*, %"class.std::__1::__compressed_pair.1127" }
%"struct.v8::MemoryRange" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.1127" = type { %"struct.std::__1::__compressed_pair_elem.1128" }
%"struct.std::__1::__compressed_pair_elem.1128" = type { %"struct.v8::MemoryRange"* }
%"class.v8::internal::Scanner::BookmarkScope" = type <{ %"class.v8::internal::Scanner"*, i64, i8, [7 x i8] }>
%"class.v8::internal::AstValueFactory" = type { %"class.v8::base::TemplateHashMapImpl", %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"**, %"class.v8::internal::AstStringConstants"*, %"class.v8::internal::AstConsString"*, [128 x %"class.v8::internal::AstRawString"*], %"class.v8::internal::Zone"*, i64 }
%"class.v8::internal::AstConsString" = type { %"class.v8::internal::Handle", %"struct.v8::internal::AstConsString::Segment" }
%"class.v8::internal::Handle" = type { %"class.v8::internal::HandleBase" }
%"struct.v8::internal::AstConsString::Segment" = type { %"class.v8::internal::AstRawString"*, %"struct.v8::internal::AstConsString::Segment"* }

$_ZNK2v88internal7Scanner9SourceUrlINS0_7IsolateEEENS0_6HandleINS0_6StringEEEPT_ = comdat any

$_ZNK2v88internal7Scanner9SourceUrlINS0_12LocalIsolateEEENS0_6HandleINS0_6StringEEEPT_ = comdat any

$_ZNK2v88internal7Scanner16SourceMappingUrlINS0_7IsolateEEENS0_6HandleINS0_6StringEEEPT_ = comdat any

$_ZNK2v88internal7Scanner16SourceMappingUrlINS0_12LocalIsolateEEENS0_6HandleINS0_6StringEEEPT_ = comdat any

$_ZN2v88internal7Scanner10ScanEscapeILb0EEEbv = comdat any

$_ZN2v88internal7Scanner10ScanEscapeILb1EEEbv = comdat any

$_ZN2v88internal7Scanner17ScanUnicodeEscapeILb0EEEjv = comdat any

$_ZN2v88internal7Scanner7AdvanceILb1EEEvv = comdat any

$_ZN2v88internal7Scanner17ScanUnicodeEscapeILb1EEEjv = comdat any

$_ZZN2v88internal18PerfectKeywordHash4HashEPKciE11asso_values = comdat any

@_ZN2v88internal7Scanner13BookmarkScope11kNoBookmarkE = hidden local_unnamed_addr constant i64 -2, align 8
@_ZN2v88internal7Scanner13BookmarkScope19kBookmarkWasAppliedE = hidden local_unnamed_addr constant i64 -1, align 8
@.str = private unnamed_addr constant [10 x i8] c"sourceURL\00", align 1
@.str.1 = private unnamed_addr constant [17 x i8] c"sourceMappingURL\00", align 1
@_ZN2v88internalL15one_char_tokensE = internal unnamed_addr constant [128 x i8] c"ppppppppprrrrrppppppppppppppppppr1]o_-']\05\06+/!0\02,ZZZZZZZZZZ\09\0C<\11=\0Bp__________________________\03_\07&_\00__________________________\08%\0D2p", align 16
@.str.2 = private unnamed_addr constant [17 x i8] c"unreachable code\00", align 1
@_ZN2v88internalL17kOneByteCharFlagsE = internal unnamed_addr constant [256 x i8] calign 16
@_ZN2v88internalL20character_scan_flagsE = internal unnamed_addr constant [128 x i8] c"\05\05\05\05\05\05\05\05\05\05-\05\05-\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\0D\05\06\05\05\0D\05\05%\05\05\05\05\05\06\06\06\06\06\06\06\06\06\06\05\05\05\05\05\05\05\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\05\1D\05\05\06\05\00\00\00\00\00\00\00\04\00\06\04\00\04\00\04\00\06\00\00\00\04\00\00\04\00\06\05\05\05\05\05", align 16
@_ZN2v88internalL24kPerfectKeywordHashTableE = internal unnamed_addr constant [64 x %"struct.v8::internal::PerfectKeywordHashTableEntry"] [%"struct.v8::internal::PerfectKeywordHashTableEntry" { i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.4, i32 0, i32 0), i8 95 }, %"struct.v8::internal::PerfectKeywordHashTableEntry" { i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.4, i32 0, i32 0), i8 95 }, %"struct.v8::internal::PerfectKeywordHashTableEntry" { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i32 0, i32 0), i8 65 }, %"struct.v8::internal::PerfectKeywordHashTableEntry" { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.6, i32 0, i32 0), i8 78 }, %"struct.v8::internal::PerfectKeywordHashTableEntry" { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7, i32 0, i32 0), i8 105 }, %"struct.v8::internal::PerfectKeywordHashTableEntry" { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i32 0, i32 0), i8 72 }, %"struct.v8::internal::PerfectKeywordHashTableEntry" { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9, i32 0, i32 0), i8 51 }, %"struct.v8::internal::PerfectKeywordHashTableEntry" { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10, i32 0, i32 0), i8 71 }, %"struct.v8::internal::PerfectKeywordHashTableEntry" { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.11, i32 0, i32 0), i8 70 }, %"struct.v8::internal::PerfectKeywordHashTableEntry" { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.12, i32 0, i32 0), i8 103 }, %"struct.v8::internal::PerfectKeywordHashTableEntry" { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.13, i32 0, i32 0), i8 64 }, %"struct.v8::internal::PerfectKeywordHashTableEntry" { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.14, i32 0, i32 0), i8 77 }, %"struct.v8::internal::PerfectKeywordHashTableEntry" { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.15, i32 0, i32 0), i8 96 }, %"struct.v8::internal::PerfectKeywordHashTableEntry" { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.16, i32 0, i32 0), i8 97 }, %"struct.v8::internal::PerfectKeywordHashTableEntry" { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.17, i32 0, i32 0), i8 107 }, %"struct.v8::internal::PerfectKeywordHashTableEntry" { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.18, i32 0, i32 0), i8 75 }, %"struct.v8::internal::PerfectKeywordHashTableEntry" { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.19, i32 0, i32 0), i8 74 }, %"struct.v8::internal::PerfectKeywordHashTableEntry" { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.20, i32 0, i32 0), i8 69 }, %"struct.v8::internal::PerfectKeywordHashTableEntry" { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.21, i32 0, i32 0), i8 67 }, %"struct.v8::internal::PerfectKeywordHashTableEntry" { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.22, i32 0, i32 0), i8 68 }, %"struct.v8::internal::PerfectKeywordHashTableEntry" { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.23, i32 0, i32 0), i8 87 }, %"struct.v8::internal::PerfectKeywordHashTableEntry" { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.24, i32 0, i32 0), i8 103 }, %"struct.v8::internal::PerfectKeywordHashTableEntry" { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.25, i32 0, i32 0), i8 89 }, %"struct.v8::internal::PerfectKeywordHashTableEntry" { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.26, i32 0, i32 0), i8 98 }, %"struct.v8::internal::PerfectKeywordHashTableEntry" { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.27, i32 0, i32 0), i8 66 }, %"struct.v8::internal::PerfectKeywordHashTableEntry" { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.28, i32 0, i32 0), i8 79 }, %"struct.v8::internal::PerfectKeywordHashTableEntry" { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.29, i32 0, i32 0), i8 86 }, %"struct.v8::internal::PerfectKeywordHashTableEntry" { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.30, i32 0, i32 0), i8 81 }, %"struct.v8::internal::PerfectKeywordHashTableEntry" { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.31, i32 0, i32 0), i8 103 }, %"struct.v8::internal::PerfectKeywordHashTableEntry" { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.32, i32 0, i32 0), i8 102 }, %"struct.v8::internal::PerfectKeywordHashTableEntry" { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.33, i32 0, i32 0), i8 85 }, %"struct.v8::internal::PerfectKeywordHashTableEntry" { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.34, i32 0, i32 0), i8 94 }, %"struct.v8::internal::PerfectKeywordHashTableEntry" { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.35, i32 0, i32 0), i8 103 }, %"struct.v8::internal::PerfectKeywordHashTableEntry" { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.36, i32 0, i32 0), i8 76 }, %"struct.v8::internal::PerfectKeywordHashTableEntry" { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.37, i32 0, i32 0), i8 103 }, %"struct.v8::internal::PerfectKeywordHashTableEntry" { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.38, i32 0, i32 0), i8 82 }, %"struct.v8::internal::PerfectKeywordHashTableEntry" { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.39, i32 0, i32 0), i8 88 }, %"struct.v8::internal::PerfectKeywordHashTableEntry" { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.40, i32 0, i32 0), i8 101 }, %"struct.v8::internal::PerfectKeywordHashTableEntry" { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.41, i32 0, i32 0), i8 73 }, %"struct.v8::internal::PerfectKeywordHashTableEntry" { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.42, i32 0, i32 0), i8 99 }, %"struct.v8::internal::PerfectKeywordHashTableEntry" { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.43, i32 0, i32 0), i8 84 }, %"struct.v8::internal::PerfectKeywordHashTableEntry" { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.44, i32 0, i32 0), i8 100 }, %"struct.v8::internal::PerfectKeywordHashTableEntry" { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.45, i32 0, i32 0), i8 80 }, %"struct.v8::internal::PerfectKeywordHashTableEntry" { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.46, i32 0, i32 0), i8 108 }, %"struct.v8::internal::PerfectKeywordHashTableEntry" { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.47, i32 0, i32 0), i8 109 }, %"struct.v8::internal::PerfectKeywordHashTableEntry" { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.48, i32 0, i32 0), i8 106 }, %"struct.v8::internal::PerfectKeywordHashTableEntry" { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.49, i32 0, i32 0), i8 53 }, %"struct.v8::internal::PerfectKeywordHashTableEntry" { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.50, i32 0, i32 0), i8 110 }, %"struct.v8::internal::PerfectKeywordHashTableEntry" { i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.4, i32 0, i32 0), i8 95 }, %"struct.v8::internal::PerfectKeywordHashTableEntry" { i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.4, i32 0, i32 0), i8 95 }, %"struct.v8::internal::PerfectKeywordHashTableEntry" { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.51, i32 0, i32 0), i8 83 }, %"struct.v8::internal::PerfectKeywordHashTableEntry" { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.52, i32 0, i32 0), i8 103 }, %"struct.v8::internal::PerfectKeywordHashTableEntry" { i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.4, i32 0, i32 0), i8 95 }, %"struct.v8::internal::PerfectKeywordHashTableEntry" { i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.4, i32 0, i32 0), i8 95 }, %"struct.v8::internal::PerfectKeywordHashTableEntry" { i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.4, i32 0, i32 0), i8 95 }, %"struct.v8::internal::PerfectKeywordHashTableEntry" { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.53, i32 0, i32 0), i8 52 }, %"struct.v8::internal::PerfectKeywordHashTableEntry" { i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.4, i32 0, i32 0), i8 95 }, %"struct.v8::internal::PerfectKeywordHashTableEntry" { i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.4, i32 0, i32 0), i8 95 }, %"struct.v8::internal::PerfectKeywordHashTableEntry" { i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.4, i32 0, i32 0), i8 95 }, %"struct.v8::internal::PerfectKeywordHashTableEntry" { i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.4, i32 0, i32 0), i8 95 }, %"struct.v8::internal::PerfectKeywordHashTableEntry" { i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.4, i32 0, i32 0), i8 95 }, %"struct.v8::internal::PerfectKeywordHashTableEntry" { i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.4, i32 0, i32 0), i8 95 }, %"struct.v8::internal::PerfectKeywordHashTableEntry" { i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.4, i32 0, i32 0), i8 95 }, %"struct.v8::internal::PerfectKeywordHashTableEntry" { i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.4, i32 0, i32 0), i8 95 }], align 16
@_ZZN2v88internal18PerfectKeywordHash4HashEPKciE11asso_values = linkonce_odr hidden local_unnamed_addr constant [128 x i8] c"8888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888\08\00\06\00\00\09\09\09\0088\22)\00\03\068\13\0A\0D\10'\1A%$888888", comdat, align 16
@_ZN2v88internalL26kPerfectKeywordLengthTableE = internal unnamed_addr constant <{ [56 x i8], [8 x i8] }> <{ [56 x i8] c"\00\00\02\03\04\02\06\07\08\09\0A\02\03\03\05\03\07\08\04\05\04\07\05\05\05\06\04\05\06\06\04\05\07\08\09\03\04\03\04\05\05\05\06\06\07\05\04\06\00\00\03\0A\00\00\00\06", [8 x i8] zeroinitializer }>, align 16
@.str.4 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.5 = private unnamed_addr constant [3 x i8] c"in\00", align 1
@.str.6 = private unnamed_addr constant [4 x i8] c"new\00", align 1
@.str.7 = private unnamed_addr constant [5 x i8] c"enum\00", align 1
@.str.8 = private unnamed_addr constant [3 x i8] c"do\00", align 1
@.str.9 = private unnamed_addr constant [7 x i8] c"delete\00", align 1
@.str.10 = private unnamed_addr constant [8 x i8] c"default\00", align 1
@.str.11 = private unnamed_addr constant [9 x i8] c"debugger\00", align 1
@.str.12 = private unnamed_addr constant [10 x i8] c"interface\00", align 1
@.str.13 = private unnamed_addr constant [11 x i8] c"instanceof\00", align 1
@.str.14 = private unnamed_addr constant [3 x i8] c"if\00", align 1
@.str.15 = private unnamed_addr constant [4 x i8] c"get\00", align 1
@.str.16 = private unnamed_addr constant [4 x i8] c"set\00", align 1
@.str.17 = private unnamed_addr constant [6 x i8] c"const\00", align 1
@.str.18 = private unnamed_addr constant [4 x i8] c"for\00", align 1
@.str.19 = private unnamed_addr constant [8 x i8] c"finally\00", align 1
@.str.20 = private unnamed_addr constant [9 x i8] c"continue\00", align 1
@.str.21 = private unnamed_addr constant [5 x i8] c"case\00", align 1
@.str.22 = private unnamed_addr constant [6 x i8] c"catch\00", align 1
@.str.23 = private unnamed_addr constant [5 x i8] c"null\00", align 1
@.str.24 = private unnamed_addr constant [8 x i8] c"package\00", align 1
@.str.25 = private unnamed_addr constant [6 x i8] c"false\00", align 1
@.str.26 = private unnamed_addr constant [6 x i8] c"async\00", align 1
@.str.27 = private unnamed_addr constant [6 x i8] c"break\00", align 1
@.str.28 = private unnamed_addr constant [7 x i8] c"return\00", align 1
@.str.29 = private unnamed_addr constant [5 x i8] c"this\00", align 1
@.str.30 = private unnamed_addr constant [6 x i8] c"throw\00", align 1
@.str.31 = private unnamed_addr constant [7 x i8] c"public\00", align 1
@.str.32 = private unnamed_addr constant [7 x i8] c"static\00", align 1
@.str.33 = private unnamed_addr constant [5 x i8] c"with\00", align 1
@.str.34 = private unnamed_addr constant [6 x i8] c"super\00", align 1
@.str.35 = private unnamed_addr constant [8 x i8] c"private\00", align 1
@.str.36 = private unnamed_addr constant [9 x i8] c"function\00", align 1
@.str.37 = private unnamed_addr constant [10 x i8] c"protected\00", align 1
@.str.38 = private unnamed_addr constant [4 x i8] c"try\00", align 1
@.str.39 = private unnamed_addr constant [5 x i8] c"true\00", align 1
@.str.40 = private unnamed_addr constant [4 x i8] c"let\00", align 1
@.str.41 = private unnamed_addr constant [5 x i8] c"else\00", align 1
@.str.42 = private unnamed_addr constant [6 x i8] c"await\00", align 1
@.str.43 = private unnamed_addr constant [6 x i8] c"while\00", align 1
@.str.44 = private unnamed_addr constant [6 x i8] c"yield\00", align 1
@.str.45 = private unnamed_addr constant [7 x i8] c"switch\00", align 1
@.str.46 = private unnamed_addr constant [7 x i8] c"export\00", align 1
@.str.47 = private unnamed_addr constant [8 x i8] c"extends\00", align 1
@.str.48 = private unnamed_addr constant [6 x i8] c"class\00", align 1
@.str.49 = private unnamed_addr constant [5 x i8] c"void\00", align 1
@.str.50 = private unnamed_addr constant [7 x i8] c"import\00", align 1
@.str.51 = private unnamed_addr constant [4 x i8] c"var\00", align 1
@.str.52 = private unnamed_addr constant [11 x i8] c"implements\00", align 1
@.str.53 = private unnamed_addr constant [7 x i8] c"typeof\00", align 1
@_ZN2v88internal38FLAG_enable_experimental_regexp_engineE = external local_unnamed_addr global i8, align 1
@_ZN2v88internal33FLAG_harmony_regexp_match_indicesE = external local_unnamed_addr global i8, align 1
@switch.table._ZN2v88internal7Scanner15ScanRegExpFlagsEv = private unnamed_addr constant [10 x i32] [i32 1, i32 2, i32 1, i32 4, i32 1, i32 1, i32 32, i32 16, i32 1, i32 8], align 4

@_ZN2v88internal7ScannerC1EPNS0_20Utf16CharacterStreamENS0_23UnoptimizedCompileFlagsE = hidden unnamed_addr alias void (%"class.v8::internal::Scanner"*, %"class.v8::internal::Utf16CharacterStream"*, i64, i32), void (%"class.v8::internal::Scanner"*, %"class.v8::internal::Utf16CharacterStream"*, i64, i32)* @_ZN2v88internal7ScannerC2EPNS0_20Utf16CharacterStreamENS0_23UnoptimizedCompileFlagsE

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZNK2v88internal7Scanner9SourceUrlINS0_7IsolateEEENS0_6HandleINS0_6StringEEEPT_(%"class.v8::internal::Scanner"*, %"class.v8::internal::Isolate"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 10, i32 2
  %4 = load i8, i8* %3, align 4, !range !2
  %5 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 10, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = xor i8 %4, 1
  %8 = zext i8 %7 to i32
  %9 = ashr i32 %6, %8
  %10 = icmp sgt i32 %9, 0
  br i1 %10, label %11, label %14

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 10
  %13 = tail call i64* @_ZNK2v88internal13LiteralBuffer11InternalizeINS0_7IsolateEEENS0_6HandleINS0_6StringEEEPT_(%"class.v8::internal::LiteralBuffer"* %12, %"class.v8::internal::Isolate"* %1) #8
  br label %14

14:                                               ; preds = %11, %2
  %15 = phi i64* [ %13, %11 ], [ null, %2 ]
  ret i64* %15
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare i64* @_ZNK2v88internal13LiteralBuffer11InternalizeINS0_7IsolateEEENS0_6HandleINS0_6StringEEEPT_(%"class.v8::internal::LiteralBuffer"*, %"class.v8::internal::Isolate"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZNK2v88internal7Scanner9SourceUrlINS0_12LocalIsolateEEENS0_6HandleINS0_6StringEEEPT_(%"class.v8::internal::Scanner"*, %"class.v8::internal::LocalIsolate"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 10, i32 2
  %4 = load i8, i8* %3, align 4, !range !2
  %5 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 10, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = xor i8 %4, 1
  %8 = zext i8 %7 to i32
  %9 = ashr i32 %6, %8
  %10 = icmp sgt i32 %9, 0
  br i1 %10, label %11, label %14

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 10
  %13 = tail call i64* @_ZNK2v88internal13LiteralBuffer11InternalizeINS0_12LocalIsolateEEENS0_6HandleINS0_6StringEEEPT_(%"class.v8::internal::LiteralBuffer"* %12, %"class.v8::internal::LocalIsolate"* %1) #8
  br label %14

14:                                               ; preds = %11, %2
  %15 = phi i64* [ %13, %11 ], [ null, %2 ]
  ret i64* %15
}

declare i64* @_ZNK2v88internal13LiteralBuffer11InternalizeINS0_12LocalIsolateEEENS0_6HandleINS0_6StringEEEPT_(%"class.v8::internal::LiteralBuffer"*, %"class.v8::internal::LocalIsolate"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZNK2v88internal7Scanner16SourceMappingUrlINS0_7IsolateEEENS0_6HandleINS0_6StringEEEPT_(%"class.v8::internal::Scanner"*, %"class.v8::internal::Isolate"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 11, i32 2
  %4 = load i8, i8* %3, align 4, !range !2
  %5 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 11, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = xor i8 %4, 1
  %8 = zext i8 %7 to i32
  %9 = ashr i32 %6, %8
  %10 = icmp sgt i32 %9, 0
  br i1 %10, label %11, label %14

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 11
  %13 = tail call i64* @_ZNK2v88internal13LiteralBuffer11InternalizeINS0_7IsolateEEENS0_6HandleINS0_6StringEEEPT_(%"class.v8::internal::LiteralBuffer"* %12, %"class.v8::internal::Isolate"* %1) #8
  br label %14

14:                                               ; preds = %11, %2
  %15 = phi i64* [ %13, %11 ], [ null, %2 ]
  ret i64* %15
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZNK2v88internal7Scanner16SourceMappingUrlINS0_12LocalIsolateEEENS0_6HandleINS0_6StringEEEPT_(%"class.v8::internal::Scanner"*, %"class.v8::internal::LocalIsolate"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 11, i32 2
  %4 = load i8, i8* %3, align 4, !range !2
  %5 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 11, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = xor i8 %4, 1
  %8 = zext i8 %7 to i32
  %9 = ashr i32 %6, %8
  %10 = icmp sgt i32 %9, 0
  br i1 %10, label %11, label %14

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 11
  %13 = tail call i64* @_ZNK2v88internal13LiteralBuffer11InternalizeINS0_12LocalIsolateEEENS0_6HandleINS0_6StringEEEPT_(%"class.v8::internal::LiteralBuffer"* %12, %"class.v8::internal::LocalIsolate"* %1) #8
  br label %14

14:                                               ; preds = %11, %2
  %15 = phi i64* [ %13, %11 ], [ null, %2 ]
  ret i64* %15
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2v88internal7Scanner13BookmarkScope3SetEm(%"class.v8::internal::Scanner::BookmarkScope"* nocapture, i64) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Scanner::BookmarkScope", %"class.v8::internal::Scanner::BookmarkScope"* %0, i64 0, i32 1
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal7Scanner13BookmarkScope5ApplyEv(%"class.v8::internal::Scanner::BookmarkScope"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Scanner::BookmarkScope", %"class.v8::internal::Scanner::BookmarkScope"* %0, i64 0, i32 2
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  %5 = getelementptr inbounds %"class.v8::internal::Scanner::BookmarkScope", %"class.v8::internal::Scanner::BookmarkScope"* %0, i64 0, i32 0
  %6 = load %"class.v8::internal::Scanner"*, %"class.v8::internal::Scanner"** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %6, i64 0, i32 4
  %8 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %8, i64 0, i32 6
  br i1 %4, label %23, label %10

10:                                               ; preds = %1
  %11 = load i8, i8* %9, align 8, !range !2
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %27

13:                                               ; preds = %10
  %14 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %6, i64 0, i32 5
  store i32 -1, i32* %14, align 8
  %15 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %8, i64 0, i32 3
  %16 = bitcast i16** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %8, i64 0, i32 2
  %19 = bitcast i16** %18 to i64*
  store i64 %17, i64* %19, align 8
  store i8 1, i8* %9, align 8
  %20 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %6, i64 0, i32 7, i64 0, i32 3
  store i8 112, i8* %20, align 8
  %21 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %6, i64 0, i32 7, i64 1, i32 3
  store i8 112, i8* %21, align 8
  %22 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %6, i64 0, i32 7, i64 2, i32 3
  store i8 112, i8* %22, align 8
  br label %27

23:                                               ; preds = %1
  store i8 0, i8* %9, align 8
  %24 = load %"class.v8::internal::Scanner"*, %"class.v8::internal::Scanner"** %5, align 8
  %25 = getelementptr inbounds %"class.v8::internal::Scanner::BookmarkScope", %"class.v8::internal::Scanner::BookmarkScope"* %0, i64 0, i32 1
  %26 = load i64, i64* %25, align 8
  tail call void @_ZN2v88internal7Scanner8SeekNextEm(%"class.v8::internal::Scanner"* %24, i64 %26)
  br label %27

27:                                               ; preds = %13, %10, %23
  %28 = getelementptr inbounds %"class.v8::internal::Scanner::BookmarkScope", %"class.v8::internal::Scanner::BookmarkScope"* %0, i64 0, i32 1
  store i64 -1, i64* %28, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal7Scanner8SeekNextEm(%"class.v8::internal::Scanner"*, i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 7, i64 0, i32 3
  store i8 115, i8* %3, align 8
  %4 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 7, i64 0, i32 5
  store i32 0, i32* %4, align 4
  %5 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 7, i64 1, i32 3
  store i8 115, i8* %5, align 8
  %6 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 7, i64 1, i32 5
  store i32 0, i32* %6, align 4
  %7 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 7, i64 2, i32 3
  store i8 115, i8* %7, align 8
  %8 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 7, i64 2, i32 5
  store i32 0, i32* %8, align 4
  %9 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 4
  %10 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %11 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %10, i64 0, i32 4
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %12, %1
  br i1 %13, label %14, label %18, !prof !3

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %10, i64 0, i32 1
  %16 = bitcast i16** %15 to i64*
  %17 = load i64, i64* %16, align 8
  br label %34

18:                                               ; preds = %2
  %19 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %10, i64 0, i32 3
  %20 = bitcast i16** %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %10, i64 0, i32 1
  %23 = bitcast i16** %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = sub i64 %21, %24
  %26 = ashr exact i64 %25, 1
  %27 = add i64 %26, %12
  %28 = icmp ugt i64 %27, %1
  br i1 %28, label %29, label %34, !prof !4

29:                                               ; preds = %18
  %30 = inttoptr i64 %24 to i16*
  %31 = sub i64 %1, %12
  %32 = getelementptr inbounds i16, i16* %30, i64 %31
  %33 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %10, i64 0, i32 2
  store i16* %32, i16** %33, align 8
  br label %47

34:                                               ; preds = %18, %14
  %35 = phi i64 [ %17, %14 ], [ %24, %18 ]
  store i64 %1, i64* %11, align 8
  %36 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %10, i64 0, i32 2
  %37 = bitcast i16** %36 to i64*
  store i64 %35, i64* %37, align 8
  %38 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %10, i64 0, i32 6
  %39 = load i8, i8* %38, align 8, !range !2
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %41, label %47

41:                                               ; preds = %34
  %42 = bitcast %"class.v8::internal::Utf16CharacterStream"* %10 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %43 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %42, align 8
  %44 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %43, i64 5
  %45 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %44, align 8
  %46 = tail call zeroext i1 %45(%"class.v8::internal::Utf16CharacterStream"* %10) #8
  br label %47

47:                                               ; preds = %29, %34, %41
  %48 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %49 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %48, i64 0, i32 2
  %50 = load i16*, i16** %49, align 8
  %51 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %48, i64 0, i32 3
  %52 = load i16*, i16** %51, align 8
  %53 = icmp ult i16* %50, %52
  br i1 %53, label %54, label %57, !prof !4

54:                                               ; preds = %47
  %55 = load i16, i16* %50, align 2
  %56 = zext i16 %55 to i32
  br label %71

57:                                               ; preds = %47
  %58 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %48, i64 0, i32 6
  %59 = load i8, i8* %58, align 8, !range !2
  %60 = icmp eq i8 %59, 0
  br i1 %60, label %61, label %71

61:                                               ; preds = %57
  %62 = bitcast %"class.v8::internal::Utf16CharacterStream"* %48 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %63 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %62, align 8
  %64 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %63, i64 5
  %65 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %64, align 8
  %66 = tail call zeroext i1 %65(%"class.v8::internal::Utf16CharacterStream"* %48) #8
  %67 = load i16*, i16** %49, align 8
  br i1 %66, label %68, label %71

68:                                               ; preds = %61
  %69 = load i16, i16* %67, align 2
  %70 = zext i16 %69 to i32
  br label %71

71:                                               ; preds = %54, %57, %61, %68
  %72 = phi i16* [ %50, %54 ], [ %67, %68 ], [ %50, %57 ], [ %67, %61 ]
  %73 = phi i32 [ %56, %54 ], [ %70, %68 ], [ -1, %57 ], [ -1, %61 ]
  %74 = getelementptr inbounds i16, i16* %72, i64 1
  store i16* %74, i16** %49, align 8
  %75 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 5
  store i32 %73, i32* %75, align 8
  %76 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 2
  %77 = load %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"** %76, align 8
  %78 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %77, i64 0, i32 8
  store i8 0, i8* %78, align 4
  %79 = load %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"** %76, align 8
  %80 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 0, i32 0
  br label %81

81:                                               ; preds = %2621, %71
  %82 = phi %"struct.v8::internal::Scanner::TokenDesc"* [ %2622, %2621 ], [ %79, %71 ]
  %83 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %84 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %83, i64 0, i32 4
  %85 = load i64, i64* %84, align 8
  %86 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %83, i64 0, i32 2
  %87 = bitcast i16** %86 to i64*
  %88 = load i64, i64* %87, align 8
  %89 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %83, i64 0, i32 1
  %90 = bitcast i16** %89 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = sub i64 %88, %91
  %93 = lshr exact i64 %92, 1
  %94 = add i64 %93, %85
  %95 = trunc i64 %94 to i32
  %96 = add nsw i32 %95, -1
  %97 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %82, i64 0, i32 0, i32 0
  store i32 %96, i32* %97, align 8
  %98 = load i32, i32* %75, align 8
  %99 = icmp ult i32 %98, 128
  br i1 %99, label %100, label %2177, !prof !4

100:                                              ; preds = %81
  %101 = zext i32 %98 to i64
  %102 = getelementptr inbounds [128 x i8], [128 x i8]* @_ZN2v88internalL15one_char_tokensE, i64 0, i64 %101
  %103 = load i8, i8* %102, align 1
  switch i8 %103, label %2176 [
    i8 5, label %104
    i8 6, label %104
    i8 8, label %104
    i8 13, label %104
    i8 3, label %104
    i8 7, label %104
    i8 9, label %104
    i8 12, label %104
    i8 33, label %104
    i8 50, label %104
    i8 112, label %104
    i8 11, label %132
    i8 93, label %270
    i8 60, label %272
    i8 61, label %383
    i8 17, label %546
    i8 49, label %655
    i8 47, label %737
    i8 48, label %819
    i8 43, label %969
    i8 45, label %1078
    i8 44, label %1133
    i8 39, label %1343
    i8 37, label %1452
    i8 38, label %1561
    i8 2, label %1616
    i8 0, label %1726
    i8 111, label %1755
    i8 114, label %1831
    i8 90, label %1910
    i8 95, label %1912
  ]

104:                                              ; preds = %100, %100, %100, %100, %100, %100, %100, %100, %100, %100, %100
  %105 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %106 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %105, i64 0, i32 2
  %107 = load i16*, i16** %106, align 8
  %108 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %105, i64 0, i32 3
  %109 = load i16*, i16** %108, align 8
  %110 = icmp ult i16* %107, %109
  br i1 %110, label %111, label %114, !prof !4

111:                                              ; preds = %104
  %112 = load i16, i16* %107, align 2
  %113 = zext i16 %112 to i32
  br label %128

114:                                              ; preds = %104
  %115 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %105, i64 0, i32 6
  %116 = load i8, i8* %115, align 8, !range !2
  %117 = icmp eq i8 %116, 0
  br i1 %117, label %118, label %128

118:                                              ; preds = %114
  %119 = bitcast %"class.v8::internal::Utf16CharacterStream"* %105 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %120 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %119, align 8
  %121 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %120, i64 5
  %122 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %121, align 8
  %123 = tail call zeroext i1 %122(%"class.v8::internal::Utf16CharacterStream"* %105) #8
  %124 = load i16*, i16** %106, align 8
  br i1 %123, label %125, label %128

125:                                              ; preds = %118
  %126 = load i16, i16* %124, align 2
  %127 = zext i16 %126 to i32
  br label %128

128:                                              ; preds = %125, %118, %114, %111
  %129 = phi i16* [ %107, %111 ], [ %124, %125 ], [ %107, %114 ], [ %124, %118 ]
  %130 = phi i32 [ %113, %111 ], [ %127, %125 ], [ -1, %114 ], [ -1, %118 ]
  %131 = getelementptr inbounds i16, i16* %129, i64 1
  store i16* %131, i16** %106, align 8
  store i32 %130, i32* %75, align 8
  br label %2623

132:                                              ; preds = %100
  %133 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %134 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %133, i64 0, i32 2
  %135 = load i16*, i16** %134, align 8
  %136 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %133, i64 0, i32 3
  %137 = load i16*, i16** %136, align 8
  %138 = icmp ult i16* %135, %137
  br i1 %138, label %153, label %139, !prof !4

139:                                              ; preds = %132
  %140 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %133, i64 0, i32 6
  %141 = load i8, i8* %140, align 8, !range !2
  %142 = icmp eq i8 %141, 0
  br i1 %142, label %143, label %150

143:                                              ; preds = %139
  %144 = bitcast %"class.v8::internal::Utf16CharacterStream"* %133 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %145 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %144, align 8
  %146 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %145, i64 5
  %147 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %146, align 8
  %148 = tail call zeroext i1 %147(%"class.v8::internal::Utf16CharacterStream"* %133) #8
  %149 = load i16*, i16** %134, align 8
  br i1 %148, label %153, label %150

150:                                              ; preds = %143, %139
  %151 = phi i16* [ %149, %143 ], [ %135, %139 ]
  %152 = getelementptr inbounds i16, i16* %151, i64 1
  store i16* %152, i16** %134, align 8
  store i32 -1, i32* %75, align 8
  br label %2623

153:                                              ; preds = %143, %132
  %154 = phi i16* [ %135, %132 ], [ %149, %143 ]
  %155 = load i16, i16* %154, align 2
  %156 = zext i16 %155 to i32
  %157 = getelementptr inbounds i16, i16* %154, i64 1
  store i16* %157, i16** %134, align 8
  store i32 %156, i32* %75, align 8
  switch i16 %155, label %2623 [
    i16 46, label %158
    i16 63, label %215
  ]

158:                                              ; preds = %153
  %159 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %160 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %159, i64 0, i32 2
  %161 = load i16*, i16** %160, align 8
  %162 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %159, i64 0, i32 3
  %163 = load i16*, i16** %162, align 8
  %164 = icmp ult i16* %161, %163
  br i1 %164, label %179, label %165, !prof !4

165:                                              ; preds = %158
  %166 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %159, i64 0, i32 6
  %167 = load i8, i8* %166, align 8, !range !2
  %168 = icmp eq i8 %167, 0
  br i1 %168, label %169, label %176

169:                                              ; preds = %165
  %170 = bitcast %"class.v8::internal::Utf16CharacterStream"* %159 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %171 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %170, align 8
  %172 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %171, i64 5
  %173 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %172, align 8
  %174 = tail call zeroext i1 %173(%"class.v8::internal::Utf16CharacterStream"* %159) #8
  %175 = load i16*, i16** %160, align 8
  br i1 %174, label %179, label %176

176:                                              ; preds = %169, %165
  %177 = phi i16* [ %175, %169 ], [ %161, %165 ]
  %178 = getelementptr inbounds i16, i16* %177, i64 1
  store i16* %178, i16** %160, align 8
  store i32 -1, i32* %75, align 8
  br label %2623

179:                                              ; preds = %169, %158
  %180 = phi i16* [ %161, %158 ], [ %175, %169 ]
  %181 = load i16, i16* %180, align 2
  %182 = zext i16 %181 to i32
  %183 = getelementptr inbounds i16, i16* %180, i64 1
  store i16* %183, i16** %160, align 8
  store i32 %182, i32* %75, align 8
  %184 = add nsw i32 %182, -48
  %185 = icmp ult i32 %184, 10
  br i1 %185, label %186, label %2623

186:                                              ; preds = %179
  %187 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %188 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %187, i64 0, i32 2
  %189 = load i16*, i16** %188, align 8
  %190 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %187, i64 0, i32 1
  %191 = load i16*, i16** %190, align 8
  %192 = icmp ugt i16* %189, %191
  %193 = ptrtoint i16* %191 to i64
  br i1 %192, label %194, label %196, !prof !4

194:                                              ; preds = %186
  %195 = getelementptr inbounds i16, i16* %189, i64 -1
  store i16* %195, i16** %188, align 8
  br label %214

196:                                              ; preds = %186
  %197 = ptrtoint i16* %189 to i64
  %198 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %187, i64 0, i32 4
  %199 = load i64, i64* %198, align 8
  %200 = bitcast i16** %188 to i64*
  %201 = sub i64 %197, %193
  %202 = ashr exact i64 %201, 1
  %203 = add nsw i64 %202, -1
  %204 = add i64 %203, %199
  store i64 %204, i64* %198, align 8
  store i64 %193, i64* %200, align 8
  %205 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %187, i64 0, i32 6
  %206 = load i8, i8* %205, align 8, !range !2
  %207 = icmp eq i8 %206, 0
  br i1 %207, label %208, label %214

208:                                              ; preds = %196
  %209 = bitcast %"class.v8::internal::Utf16CharacterStream"* %187 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %210 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %209, align 8
  %211 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %210, i64 5
  %212 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %211, align 8
  %213 = tail call zeroext i1 %212(%"class.v8::internal::Utf16CharacterStream"* %187) #8
  br label %214

214:                                              ; preds = %208, %196, %194
  store i32 46, i32* %75, align 8
  br label %2623

215:                                              ; preds = %153
  %216 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %217 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %216, i64 0, i32 2
  %218 = load i16*, i16** %217, align 8
  %219 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %216, i64 0, i32 3
  %220 = load i16*, i16** %219, align 8
  %221 = icmp ult i16* %218, %220
  br i1 %221, label %236, label %222, !prof !4

222:                                              ; preds = %215
  %223 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %216, i64 0, i32 6
  %224 = load i8, i8* %223, align 8, !range !2
  %225 = icmp eq i8 %224, 0
  br i1 %225, label %226, label %233

226:                                              ; preds = %222
  %227 = bitcast %"class.v8::internal::Utf16CharacterStream"* %216 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %228 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %227, align 8
  %229 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %228, i64 5
  %230 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %229, align 8
  %231 = tail call zeroext i1 %230(%"class.v8::internal::Utf16CharacterStream"* %216) #8
  %232 = load i16*, i16** %217, align 8
  br i1 %231, label %236, label %233

233:                                              ; preds = %226, %222
  %234 = phi i16* [ %232, %226 ], [ %218, %222 ]
  %235 = getelementptr inbounds i16, i16* %234, i64 1
  store i16* %235, i16** %217, align 8
  store i32 -1, i32* %75, align 8
  br label %2623

236:                                              ; preds = %226, %215
  %237 = phi i16* [ %218, %215 ], [ %232, %226 ]
  %238 = load i16, i16* %237, align 2
  %239 = zext i16 %238 to i32
  %240 = getelementptr inbounds i16, i16* %237, i64 1
  store i16* %240, i16** %217, align 8
  store i32 %239, i32* %75, align 8
  %241 = icmp eq i16 %238, 61
  br i1 %241, label %242, label %2623

242:                                              ; preds = %236
  %243 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %244 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %243, i64 0, i32 2
  %245 = load i16*, i16** %244, align 8
  %246 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %243, i64 0, i32 3
  %247 = load i16*, i16** %246, align 8
  %248 = icmp ult i16* %245, %247
  br i1 %248, label %249, label %252, !prof !4

249:                                              ; preds = %242
  %250 = load i16, i16* %245, align 2
  %251 = zext i16 %250 to i32
  br label %266

252:                                              ; preds = %242
  %253 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %243, i64 0, i32 6
  %254 = load i8, i8* %253, align 8, !range !2
  %255 = icmp eq i8 %254, 0
  br i1 %255, label %256, label %266

256:                                              ; preds = %252
  %257 = bitcast %"class.v8::internal::Utf16CharacterStream"* %243 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %258 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %257, align 8
  %259 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %258, i64 5
  %260 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %259, align 8
  %261 = tail call zeroext i1 %260(%"class.v8::internal::Utf16CharacterStream"* %243) #8
  %262 = load i16*, i16** %244, align 8
  br i1 %261, label %263, label %266

263:                                              ; preds = %256
  %264 = load i16, i16* %262, align 2
  %265 = zext i16 %264 to i32
  br label %266

266:                                              ; preds = %263, %256, %252, %249
  %267 = phi i16* [ %245, %249 ], [ %262, %263 ], [ %245, %252 ], [ %262, %256 ]
  %268 = phi i32 [ %251, %249 ], [ %265, %263 ], [ -1, %252 ], [ -1, %256 ]
  %269 = getelementptr inbounds i16, i16* %267, i64 1
  store i16* %269, i16** %244, align 8
  store i32 %268, i32* %75, align 8
  br label %2623

270:                                              ; preds = %100
  %271 = tail call zeroext i8 @_ZN2v88internal7Scanner10ScanStringEv(%"class.v8::internal::Scanner"* %0) #8
  br label %2623

272:                                              ; preds = %100
  %273 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %274 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %273, i64 0, i32 2
  %275 = load i16*, i16** %274, align 8
  %276 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %273, i64 0, i32 3
  %277 = load i16*, i16** %276, align 8
  %278 = icmp ult i16* %275, %277
  br i1 %278, label %293, label %279, !prof !4

279:                                              ; preds = %272
  %280 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %273, i64 0, i32 6
  %281 = load i8, i8* %280, align 8, !range !2
  %282 = icmp eq i8 %281, 0
  br i1 %282, label %283, label %290

283:                                              ; preds = %279
  %284 = bitcast %"class.v8::internal::Utf16CharacterStream"* %273 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %285 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %284, align 8
  %286 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %285, i64 5
  %287 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %286, align 8
  %288 = tail call zeroext i1 %287(%"class.v8::internal::Utf16CharacterStream"* %273) #8
  %289 = load i16*, i16** %274, align 8
  br i1 %288, label %293, label %290

290:                                              ; preds = %283, %279
  %291 = phi i16* [ %289, %283 ], [ %275, %279 ]
  %292 = getelementptr inbounds i16, i16* %291, i64 1
  store i16* %292, i16** %274, align 8
  store i32 -1, i32* %75, align 8
  br label %2623

293:                                              ; preds = %283, %272
  %294 = phi i16* [ %275, %272 ], [ %289, %283 ]
  %295 = load i16, i16* %294, align 2
  %296 = zext i16 %295 to i32
  %297 = getelementptr inbounds i16, i16* %294, i64 1
  store i16* %297, i16** %274, align 8
  store i32 %296, i32* %75, align 8
  switch i16 %295, label %2623 [
    i16 61, label %298
    i16 60, label %326
    i16 33, label %381
  ]

298:                                              ; preds = %293
  %299 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %300 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %299, i64 0, i32 2
  %301 = load i16*, i16** %300, align 8
  %302 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %299, i64 0, i32 3
  %303 = load i16*, i16** %302, align 8
  %304 = icmp ult i16* %301, %303
  br i1 %304, label %305, label %308, !prof !4

305:                                              ; preds = %298
  %306 = load i16, i16* %301, align 2
  %307 = zext i16 %306 to i32
  br label %322

308:                                              ; preds = %298
  %309 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %299, i64 0, i32 6
  %310 = load i8, i8* %309, align 8, !range !2
  %311 = icmp eq i8 %310, 0
  br i1 %311, label %312, label %322

312:                                              ; preds = %308
  %313 = bitcast %"class.v8::internal::Utf16CharacterStream"* %299 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %314 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %313, align 8
  %315 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %314, i64 5
  %316 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %315, align 8
  %317 = tail call zeroext i1 %316(%"class.v8::internal::Utf16CharacterStream"* %299) #8
  %318 = load i16*, i16** %300, align 8
  br i1 %317, label %319, label %322

319:                                              ; preds = %312
  %320 = load i16, i16* %318, align 2
  %321 = zext i16 %320 to i32
  br label %322

322:                                              ; preds = %319, %312, %308, %305
  %323 = phi i16* [ %301, %305 ], [ %318, %319 ], [ %301, %308 ], [ %318, %312 ]
  %324 = phi i32 [ %307, %305 ], [ %321, %319 ], [ -1, %308 ], [ -1, %312 ]
  %325 = getelementptr inbounds i16, i16* %323, i64 1
  store i16* %325, i16** %300, align 8
  store i32 %324, i32* %75, align 8
  br label %2623

326:                                              ; preds = %293
  %327 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %328 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %327, i64 0, i32 2
  %329 = load i16*, i16** %328, align 8
  %330 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %327, i64 0, i32 3
  %331 = load i16*, i16** %330, align 8
  %332 = icmp ult i16* %329, %331
  br i1 %332, label %347, label %333, !prof !4

333:                                              ; preds = %326
  %334 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %327, i64 0, i32 6
  %335 = load i8, i8* %334, align 8, !range !2
  %336 = icmp eq i8 %335, 0
  br i1 %336, label %337, label %344

337:                                              ; preds = %333
  %338 = bitcast %"class.v8::internal::Utf16CharacterStream"* %327 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %339 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %338, align 8
  %340 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %339, i64 5
  %341 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %340, align 8
  %342 = tail call zeroext i1 %341(%"class.v8::internal::Utf16CharacterStream"* %327) #8
  %343 = load i16*, i16** %328, align 8
  br i1 %342, label %347, label %344

344:                                              ; preds = %337, %333
  %345 = phi i16* [ %343, %337 ], [ %329, %333 ]
  %346 = getelementptr inbounds i16, i16* %345, i64 1
  store i16* %346, i16** %328, align 8
  store i32 -1, i32* %75, align 8
  br label %2623

347:                                              ; preds = %337, %326
  %348 = phi i16* [ %329, %326 ], [ %343, %337 ]
  %349 = load i16, i16* %348, align 2
  %350 = zext i16 %349 to i32
  %351 = getelementptr inbounds i16, i16* %348, i64 1
  store i16* %351, i16** %328, align 8
  store i32 %350, i32* %75, align 8
  %352 = icmp eq i16 %349, 61
  br i1 %352, label %353, label %2623

353:                                              ; preds = %347
  %354 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %355 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %354, i64 0, i32 2
  %356 = load i16*, i16** %355, align 8
  %357 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %354, i64 0, i32 3
  %358 = load i16*, i16** %357, align 8
  %359 = icmp ult i16* %356, %358
  br i1 %359, label %360, label %363, !prof !4

360:                                              ; preds = %353
  %361 = load i16, i16* %356, align 2
  %362 = zext i16 %361 to i32
  br label %377

363:                                              ; preds = %353
  %364 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %354, i64 0, i32 6
  %365 = load i8, i8* %364, align 8, !range !2
  %366 = icmp eq i8 %365, 0
  br i1 %366, label %367, label %377

367:                                              ; preds = %363
  %368 = bitcast %"class.v8::internal::Utf16CharacterStream"* %354 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %369 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %368, align 8
  %370 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %369, i64 5
  %371 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %370, align 8
  %372 = tail call zeroext i1 %371(%"class.v8::internal::Utf16CharacterStream"* %354) #8
  %373 = load i16*, i16** %355, align 8
  br i1 %372, label %374, label %377

374:                                              ; preds = %367
  %375 = load i16, i16* %373, align 2
  %376 = zext i16 %375 to i32
  br label %377

377:                                              ; preds = %374, %367, %363, %360
  %378 = phi i16* [ %356, %360 ], [ %373, %374 ], [ %356, %363 ], [ %373, %367 ]
  %379 = phi i32 [ %362, %360 ], [ %376, %374 ], [ -1, %363 ], [ -1, %367 ]
  %380 = getelementptr inbounds i16, i16* %378, i64 1
  store i16* %380, i16** %355, align 8
  store i32 %379, i32* %75, align 8
  br label %2623

381:                                              ; preds = %293
  %382 = tail call zeroext i8 @_ZN2v88internal7Scanner15ScanHtmlCommentEv(%"class.v8::internal::Scanner"* %0) #8
  br label %2618

383:                                              ; preds = %100
  %384 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %385 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %384, i64 0, i32 2
  %386 = load i16*, i16** %385, align 8
  %387 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %384, i64 0, i32 3
  %388 = load i16*, i16** %387, align 8
  %389 = icmp ult i16* %386, %388
  br i1 %389, label %404, label %390, !prof !4

390:                                              ; preds = %383
  %391 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %384, i64 0, i32 6
  %392 = load i8, i8* %391, align 8, !range !2
  %393 = icmp eq i8 %392, 0
  br i1 %393, label %394, label %401

394:                                              ; preds = %390
  %395 = bitcast %"class.v8::internal::Utf16CharacterStream"* %384 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %396 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %395, align 8
  %397 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %396, i64 5
  %398 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %397, align 8
  %399 = tail call zeroext i1 %398(%"class.v8::internal::Utf16CharacterStream"* %384) #8
  %400 = load i16*, i16** %385, align 8
  br i1 %399, label %404, label %401

401:                                              ; preds = %394, %390
  %402 = phi i16* [ %400, %394 ], [ %386, %390 ]
  %403 = getelementptr inbounds i16, i16* %402, i64 1
  store i16* %403, i16** %385, align 8
  store i32 -1, i32* %75, align 8
  br label %2623

404:                                              ; preds = %394, %383
  %405 = phi i16* [ %386, %383 ], [ %400, %394 ]
  %406 = load i16, i16* %405, align 2
  %407 = zext i16 %406 to i32
  %408 = getelementptr inbounds i16, i16* %405, i64 1
  store i16* %408, i16** %385, align 8
  store i32 %407, i32* %75, align 8
  switch i16 %406, label %2623 [
    i16 61, label %409
    i16 62, label %437
  ]

409:                                              ; preds = %404
  %410 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %411 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %410, i64 0, i32 2
  %412 = load i16*, i16** %411, align 8
  %413 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %410, i64 0, i32 3
  %414 = load i16*, i16** %413, align 8
  %415 = icmp ult i16* %412, %414
  br i1 %415, label %416, label %419, !prof !4

416:                                              ; preds = %409
  %417 = load i16, i16* %412, align 2
  %418 = zext i16 %417 to i32
  br label %433

419:                                              ; preds = %409
  %420 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %410, i64 0, i32 6
  %421 = load i8, i8* %420, align 8, !range !2
  %422 = icmp eq i8 %421, 0
  br i1 %422, label %423, label %433

423:                                              ; preds = %419
  %424 = bitcast %"class.v8::internal::Utf16CharacterStream"* %410 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %425 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %424, align 8
  %426 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %425, i64 5
  %427 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %426, align 8
  %428 = tail call zeroext i1 %427(%"class.v8::internal::Utf16CharacterStream"* %410) #8
  %429 = load i16*, i16** %411, align 8
  br i1 %428, label %430, label %433

430:                                              ; preds = %423
  %431 = load i16, i16* %429, align 2
  %432 = zext i16 %431 to i32
  br label %433

433:                                              ; preds = %430, %423, %419, %416
  %434 = phi i16* [ %412, %416 ], [ %429, %430 ], [ %412, %419 ], [ %429, %423 ]
  %435 = phi i32 [ %418, %416 ], [ %432, %430 ], [ -1, %419 ], [ -1, %423 ]
  %436 = getelementptr inbounds i16, i16* %434, i64 1
  store i16* %436, i16** %411, align 8
  store i32 %435, i32* %75, align 8
  br label %2623

437:                                              ; preds = %404
  %438 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %439 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %438, i64 0, i32 2
  %440 = load i16*, i16** %439, align 8
  %441 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %438, i64 0, i32 3
  %442 = load i16*, i16** %441, align 8
  %443 = icmp ult i16* %440, %442
  br i1 %443, label %458, label %444, !prof !4

444:                                              ; preds = %437
  %445 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %438, i64 0, i32 6
  %446 = load i8, i8* %445, align 8, !range !2
  %447 = icmp eq i8 %446, 0
  br i1 %447, label %448, label %455

448:                                              ; preds = %444
  %449 = bitcast %"class.v8::internal::Utf16CharacterStream"* %438 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %450 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %449, align 8
  %451 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %450, i64 5
  %452 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %451, align 8
  %453 = tail call zeroext i1 %452(%"class.v8::internal::Utf16CharacterStream"* %438) #8
  %454 = load i16*, i16** %439, align 8
  br i1 %453, label %458, label %455

455:                                              ; preds = %448, %444
  %456 = phi i16* [ %454, %448 ], [ %440, %444 ]
  %457 = getelementptr inbounds i16, i16* %456, i64 1
  store i16* %457, i16** %439, align 8
  store i32 -1, i32* %75, align 8
  br label %2623

458:                                              ; preds = %448, %437
  %459 = phi i16* [ %440, %437 ], [ %454, %448 ]
  %460 = load i16, i16* %459, align 2
  %461 = zext i16 %460 to i32
  %462 = getelementptr inbounds i16, i16* %459, i64 1
  store i16* %462, i16** %439, align 8
  store i32 %461, i32* %75, align 8
  switch i16 %460, label %2623 [
    i16 61, label %463
    i16 62, label %491
  ]

463:                                              ; preds = %458
  %464 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %465 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %464, i64 0, i32 2
  %466 = load i16*, i16** %465, align 8
  %467 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %464, i64 0, i32 3
  %468 = load i16*, i16** %467, align 8
  %469 = icmp ult i16* %466, %468
  br i1 %469, label %470, label %473, !prof !4

470:                                              ; preds = %463
  %471 = load i16, i16* %466, align 2
  %472 = zext i16 %471 to i32
  br label %487

473:                                              ; preds = %463
  %474 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %464, i64 0, i32 6
  %475 = load i8, i8* %474, align 8, !range !2
  %476 = icmp eq i8 %475, 0
  br i1 %476, label %477, label %487

477:                                              ; preds = %473
  %478 = bitcast %"class.v8::internal::Utf16CharacterStream"* %464 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %479 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %478, align 8
  %480 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %479, i64 5
  %481 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %480, align 8
  %482 = tail call zeroext i1 %481(%"class.v8::internal::Utf16CharacterStream"* %464) #8
  %483 = load i16*, i16** %465, align 8
  br i1 %482, label %484, label %487

484:                                              ; preds = %477
  %485 = load i16, i16* %483, align 2
  %486 = zext i16 %485 to i32
  br label %487

487:                                              ; preds = %484, %477, %473, %470
  %488 = phi i16* [ %466, %470 ], [ %483, %484 ], [ %466, %473 ], [ %483, %477 ]
  %489 = phi i32 [ %472, %470 ], [ %486, %484 ], [ -1, %473 ], [ -1, %477 ]
  %490 = getelementptr inbounds i16, i16* %488, i64 1
  store i16* %490, i16** %465, align 8
  store i32 %489, i32* %75, align 8
  br label %2623

491:                                              ; preds = %458
  %492 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %493 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %492, i64 0, i32 2
  %494 = load i16*, i16** %493, align 8
  %495 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %492, i64 0, i32 3
  %496 = load i16*, i16** %495, align 8
  %497 = icmp ult i16* %494, %496
  br i1 %497, label %512, label %498, !prof !4

498:                                              ; preds = %491
  %499 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %492, i64 0, i32 6
  %500 = load i8, i8* %499, align 8, !range !2
  %501 = icmp eq i8 %500, 0
  br i1 %501, label %502, label %509

502:                                              ; preds = %498
  %503 = bitcast %"class.v8::internal::Utf16CharacterStream"* %492 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %504 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %503, align 8
  %505 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %504, i64 5
  %506 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %505, align 8
  %507 = tail call zeroext i1 %506(%"class.v8::internal::Utf16CharacterStream"* %492) #8
  %508 = load i16*, i16** %493, align 8
  br i1 %507, label %512, label %509

509:                                              ; preds = %502, %498
  %510 = phi i16* [ %508, %502 ], [ %494, %498 ]
  %511 = getelementptr inbounds i16, i16* %510, i64 1
  store i16* %511, i16** %493, align 8
  store i32 -1, i32* %75, align 8
  br label %2623

512:                                              ; preds = %502, %491
  %513 = phi i16* [ %494, %491 ], [ %508, %502 ]
  %514 = load i16, i16* %513, align 2
  %515 = zext i16 %514 to i32
  %516 = getelementptr inbounds i16, i16* %513, i64 1
  store i16* %516, i16** %493, align 8
  store i32 %515, i32* %75, align 8
  %517 = icmp eq i16 %514, 61
  br i1 %517, label %518, label %2623

518:                                              ; preds = %512
  %519 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %520 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %519, i64 0, i32 2
  %521 = load i16*, i16** %520, align 8
  %522 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %519, i64 0, i32 3
  %523 = load i16*, i16** %522, align 8
  %524 = icmp ult i16* %521, %523
  br i1 %524, label %525, label %528, !prof !4

525:                                              ; preds = %518
  %526 = load i16, i16* %521, align 2
  %527 = zext i16 %526 to i32
  br label %542

528:                                              ; preds = %518
  %529 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %519, i64 0, i32 6
  %530 = load i8, i8* %529, align 8, !range !2
  %531 = icmp eq i8 %530, 0
  br i1 %531, label %532, label %542

532:                                              ; preds = %528
  %533 = bitcast %"class.v8::internal::Utf16CharacterStream"* %519 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %534 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %533, align 8
  %535 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %534, i64 5
  %536 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %535, align 8
  %537 = tail call zeroext i1 %536(%"class.v8::internal::Utf16CharacterStream"* %519) #8
  %538 = load i16*, i16** %520, align 8
  br i1 %537, label %539, label %542

539:                                              ; preds = %532
  %540 = load i16, i16* %538, align 2
  %541 = zext i16 %540 to i32
  br label %542

542:                                              ; preds = %539, %532, %528, %525
  %543 = phi i16* [ %521, %525 ], [ %538, %539 ], [ %521, %528 ], [ %538, %532 ]
  %544 = phi i32 [ %527, %525 ], [ %541, %539 ], [ -1, %528 ], [ -1, %532 ]
  %545 = getelementptr inbounds i16, i16* %543, i64 1
  store i16* %545, i16** %520, align 8
  store i32 %544, i32* %75, align 8
  br label %2623

546:                                              ; preds = %100
  %547 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %548 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %547, i64 0, i32 2
  %549 = load i16*, i16** %548, align 8
  %550 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %547, i64 0, i32 3
  %551 = load i16*, i16** %550, align 8
  %552 = icmp ult i16* %549, %551
  br i1 %552, label %567, label %553, !prof !4

553:                                              ; preds = %546
  %554 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %547, i64 0, i32 6
  %555 = load i8, i8* %554, align 8, !range !2
  %556 = icmp eq i8 %555, 0
  br i1 %556, label %557, label %564

557:                                              ; preds = %553
  %558 = bitcast %"class.v8::internal::Utf16CharacterStream"* %547 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %559 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %558, align 8
  %560 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %559, i64 5
  %561 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %560, align 8
  %562 = tail call zeroext i1 %561(%"class.v8::internal::Utf16CharacterStream"* %547) #8
  %563 = load i16*, i16** %548, align 8
  br i1 %562, label %567, label %564

564:                                              ; preds = %557, %553
  %565 = phi i16* [ %563, %557 ], [ %549, %553 ]
  %566 = getelementptr inbounds i16, i16* %565, i64 1
  store i16* %566, i16** %548, align 8
  store i32 -1, i32* %75, align 8
  br label %2623

567:                                              ; preds = %557, %546
  %568 = phi i16* [ %549, %546 ], [ %563, %557 ]
  %569 = load i16, i16* %568, align 2
  %570 = zext i16 %569 to i32
  %571 = getelementptr inbounds i16, i16* %568, i64 1
  store i16* %571, i16** %548, align 8
  store i32 %570, i32* %75, align 8
  switch i16 %569, label %2623 [
    i16 61, label %572
    i16 62, label %627
  ]

572:                                              ; preds = %567
  %573 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %574 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %573, i64 0, i32 2
  %575 = load i16*, i16** %574, align 8
  %576 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %573, i64 0, i32 3
  %577 = load i16*, i16** %576, align 8
  %578 = icmp ult i16* %575, %577
  br i1 %578, label %593, label %579, !prof !4

579:                                              ; preds = %572
  %580 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %573, i64 0, i32 6
  %581 = load i8, i8* %580, align 8, !range !2
  %582 = icmp eq i8 %581, 0
  br i1 %582, label %583, label %590

583:                                              ; preds = %579
  %584 = bitcast %"class.v8::internal::Utf16CharacterStream"* %573 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %585 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %584, align 8
  %586 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %585, i64 5
  %587 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %586, align 8
  %588 = tail call zeroext i1 %587(%"class.v8::internal::Utf16CharacterStream"* %573) #8
  %589 = load i16*, i16** %574, align 8
  br i1 %588, label %593, label %590

590:                                              ; preds = %583, %579
  %591 = phi i16* [ %589, %583 ], [ %575, %579 ]
  %592 = getelementptr inbounds i16, i16* %591, i64 1
  store i16* %592, i16** %574, align 8
  store i32 -1, i32* %75, align 8
  br label %2623

593:                                              ; preds = %583, %572
  %594 = phi i16* [ %575, %572 ], [ %589, %583 ]
  %595 = load i16, i16* %594, align 2
  %596 = zext i16 %595 to i32
  %597 = getelementptr inbounds i16, i16* %594, i64 1
  store i16* %597, i16** %574, align 8
  store i32 %596, i32* %75, align 8
  %598 = icmp eq i16 %595, 61
  br i1 %598, label %599, label %2623

599:                                              ; preds = %593
  %600 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %601 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %600, i64 0, i32 2
  %602 = load i16*, i16** %601, align 8
  %603 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %600, i64 0, i32 3
  %604 = load i16*, i16** %603, align 8
  %605 = icmp ult i16* %602, %604
  br i1 %605, label %606, label %609, !prof !4

606:                                              ; preds = %599
  %607 = load i16, i16* %602, align 2
  %608 = zext i16 %607 to i32
  br label %623

609:                                              ; preds = %599
  %610 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %600, i64 0, i32 6
  %611 = load i8, i8* %610, align 8, !range !2
  %612 = icmp eq i8 %611, 0
  br i1 %612, label %613, label %623

613:                                              ; preds = %609
  %614 = bitcast %"class.v8::internal::Utf16CharacterStream"* %600 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %615 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %614, align 8
  %616 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %615, i64 5
  %617 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %616, align 8
  %618 = tail call zeroext i1 %617(%"class.v8::internal::Utf16CharacterStream"* %600) #8
  %619 = load i16*, i16** %601, align 8
  br i1 %618, label %620, label %623

620:                                              ; preds = %613
  %621 = load i16, i16* %619, align 2
  %622 = zext i16 %621 to i32
  br label %623

623:                                              ; preds = %620, %613, %609, %606
  %624 = phi i16* [ %602, %606 ], [ %619, %620 ], [ %602, %609 ], [ %619, %613 ]
  %625 = phi i32 [ %608, %606 ], [ %622, %620 ], [ -1, %609 ], [ -1, %613 ]
  %626 = getelementptr inbounds i16, i16* %624, i64 1
  store i16* %626, i16** %601, align 8
  store i32 %625, i32* %75, align 8
  br label %2623

627:                                              ; preds = %567
  %628 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %629 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %628, i64 0, i32 2
  %630 = load i16*, i16** %629, align 8
  %631 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %628, i64 0, i32 3
  %632 = load i16*, i16** %631, align 8
  %633 = icmp ult i16* %630, %632
  br i1 %633, label %634, label %637, !prof !4

634:                                              ; preds = %627
  %635 = load i16, i16* %630, align 2
  %636 = zext i16 %635 to i32
  br label %651

637:                                              ; preds = %627
  %638 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %628, i64 0, i32 6
  %639 = load i8, i8* %638, align 8, !range !2
  %640 = icmp eq i8 %639, 0
  br i1 %640, label %641, label %651

641:                                              ; preds = %637
  %642 = bitcast %"class.v8::internal::Utf16CharacterStream"* %628 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %643 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %642, align 8
  %644 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %643, i64 5
  %645 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %644, align 8
  %646 = tail call zeroext i1 %645(%"class.v8::internal::Utf16CharacterStream"* %628) #8
  %647 = load i16*, i16** %629, align 8
  br i1 %646, label %648, label %651

648:                                              ; preds = %641
  %649 = load i16, i16* %647, align 2
  %650 = zext i16 %649 to i32
  br label %651

651:                                              ; preds = %648, %641, %637, %634
  %652 = phi i16* [ %630, %634 ], [ %647, %648 ], [ %630, %637 ], [ %647, %641 ]
  %653 = phi i32 [ %636, %634 ], [ %650, %648 ], [ -1, %637 ], [ -1, %641 ]
  %654 = getelementptr inbounds i16, i16* %652, i64 1
  store i16* %654, i16** %629, align 8
  store i32 %653, i32* %75, align 8
  br label %2623

655:                                              ; preds = %100
  %656 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %657 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %656, i64 0, i32 2
  %658 = load i16*, i16** %657, align 8
  %659 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %656, i64 0, i32 3
  %660 = load i16*, i16** %659, align 8
  %661 = icmp ult i16* %658, %660
  br i1 %661, label %676, label %662, !prof !4

662:                                              ; preds = %655
  %663 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %656, i64 0, i32 6
  %664 = load i8, i8* %663, align 8, !range !2
  %665 = icmp eq i8 %664, 0
  br i1 %665, label %666, label %673

666:                                              ; preds = %662
  %667 = bitcast %"class.v8::internal::Utf16CharacterStream"* %656 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %668 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %667, align 8
  %669 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %668, i64 5
  %670 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %669, align 8
  %671 = tail call zeroext i1 %670(%"class.v8::internal::Utf16CharacterStream"* %656) #8
  %672 = load i16*, i16** %657, align 8
  br i1 %671, label %676, label %673

673:                                              ; preds = %666, %662
  %674 = phi i16* [ %672, %666 ], [ %658, %662 ]
  %675 = getelementptr inbounds i16, i16* %674, i64 1
  store i16* %675, i16** %657, align 8
  store i32 -1, i32* %75, align 8
  br label %2623

676:                                              ; preds = %666, %655
  %677 = phi i16* [ %658, %655 ], [ %672, %666 ]
  %678 = load i16, i16* %677, align 2
  %679 = zext i16 %678 to i32
  %680 = getelementptr inbounds i16, i16* %677, i64 1
  store i16* %680, i16** %657, align 8
  store i32 %679, i32* %75, align 8
  %681 = icmp eq i16 %678, 61
  br i1 %681, label %682, label %2623

682:                                              ; preds = %676
  %683 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %684 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %683, i64 0, i32 2
  %685 = load i16*, i16** %684, align 8
  %686 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %683, i64 0, i32 3
  %687 = load i16*, i16** %686, align 8
  %688 = icmp ult i16* %685, %687
  br i1 %688, label %703, label %689, !prof !4

689:                                              ; preds = %682
  %690 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %683, i64 0, i32 6
  %691 = load i8, i8* %690, align 8, !range !2
  %692 = icmp eq i8 %691, 0
  br i1 %692, label %693, label %700

693:                                              ; preds = %689
  %694 = bitcast %"class.v8::internal::Utf16CharacterStream"* %683 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %695 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %694, align 8
  %696 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %695, i64 5
  %697 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %696, align 8
  %698 = tail call zeroext i1 %697(%"class.v8::internal::Utf16CharacterStream"* %683) #8
  %699 = load i16*, i16** %684, align 8
  br i1 %698, label %703, label %700

700:                                              ; preds = %693, %689
  %701 = phi i16* [ %699, %693 ], [ %685, %689 ]
  %702 = getelementptr inbounds i16, i16* %701, i64 1
  store i16* %702, i16** %684, align 8
  store i32 -1, i32* %75, align 8
  br label %2623

703:                                              ; preds = %693, %682
  %704 = phi i16* [ %685, %682 ], [ %699, %693 ]
  %705 = load i16, i16* %704, align 2
  %706 = zext i16 %705 to i32
  %707 = getelementptr inbounds i16, i16* %704, i64 1
  store i16* %707, i16** %684, align 8
  store i32 %706, i32* %75, align 8
  %708 = icmp eq i16 %705, 61
  br i1 %708, label %709, label %2623

709:                                              ; preds = %703
  %710 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %711 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %710, i64 0, i32 2
  %712 = load i16*, i16** %711, align 8
  %713 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %710, i64 0, i32 3
  %714 = load i16*, i16** %713, align 8
  %715 = icmp ult i16* %712, %714
  br i1 %715, label %716, label %719, !prof !4

716:                                              ; preds = %709
  %717 = load i16, i16* %712, align 2
  %718 = zext i16 %717 to i32
  br label %733

719:                                              ; preds = %709
  %720 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %710, i64 0, i32 6
  %721 = load i8, i8* %720, align 8, !range !2
  %722 = icmp eq i8 %721, 0
  br i1 %722, label %723, label %733

723:                                              ; preds = %719
  %724 = bitcast %"class.v8::internal::Utf16CharacterStream"* %710 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %725 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %724, align 8
  %726 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %725, i64 5
  %727 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %726, align 8
  %728 = tail call zeroext i1 %727(%"class.v8::internal::Utf16CharacterStream"* %710) #8
  %729 = load i16*, i16** %711, align 8
  br i1 %728, label %730, label %733

730:                                              ; preds = %723
  %731 = load i16, i16* %729, align 2
  %732 = zext i16 %731 to i32
  br label %733

733:                                              ; preds = %730, %723, %719, %716
  %734 = phi i16* [ %712, %716 ], [ %729, %730 ], [ %712, %719 ], [ %729, %723 ]
  %735 = phi i32 [ %718, %716 ], [ %732, %730 ], [ -1, %719 ], [ -1, %723 ]
  %736 = getelementptr inbounds i16, i16* %734, i64 1
  store i16* %736, i16** %711, align 8
  store i32 %735, i32* %75, align 8
  br label %2623

737:                                              ; preds = %100
  %738 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %739 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %738, i64 0, i32 2
  %740 = load i16*, i16** %739, align 8
  %741 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %738, i64 0, i32 3
  %742 = load i16*, i16** %741, align 8
  %743 = icmp ult i16* %740, %742
  br i1 %743, label %758, label %744, !prof !4

744:                                              ; preds = %737
  %745 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %738, i64 0, i32 6
  %746 = load i8, i8* %745, align 8, !range !2
  %747 = icmp eq i8 %746, 0
  br i1 %747, label %748, label %755

748:                                              ; preds = %744
  %749 = bitcast %"class.v8::internal::Utf16CharacterStream"* %738 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %750 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %749, align 8
  %751 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %750, i64 5
  %752 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %751, align 8
  %753 = tail call zeroext i1 %752(%"class.v8::internal::Utf16CharacterStream"* %738) #8
  %754 = load i16*, i16** %739, align 8
  br i1 %753, label %758, label %755

755:                                              ; preds = %748, %744
  %756 = phi i16* [ %754, %748 ], [ %740, %744 ]
  %757 = getelementptr inbounds i16, i16* %756, i64 1
  store i16* %757, i16** %739, align 8
  store i32 -1, i32* %75, align 8
  br label %2623

758:                                              ; preds = %748, %737
  %759 = phi i16* [ %740, %737 ], [ %754, %748 ]
  %760 = load i16, i16* %759, align 2
  %761 = zext i16 %760 to i32
  %762 = getelementptr inbounds i16, i16* %759, i64 1
  store i16* %762, i16** %739, align 8
  store i32 %761, i32* %75, align 8
  switch i16 %760, label %2623 [
    i16 43, label %763
    i16 61, label %791
  ]

763:                                              ; preds = %758
  %764 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %765 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %764, i64 0, i32 2
  %766 = load i16*, i16** %765, align 8
  %767 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %764, i64 0, i32 3
  %768 = load i16*, i16** %767, align 8
  %769 = icmp ult i16* %766, %768
  br i1 %769, label %770, label %773, !prof !4

770:                                              ; preds = %763
  %771 = load i16, i16* %766, align 2
  %772 = zext i16 %771 to i32
  br label %787

773:                                              ; preds = %763
  %774 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %764, i64 0, i32 6
  %775 = load i8, i8* %774, align 8, !range !2
  %776 = icmp eq i8 %775, 0
  br i1 %776, label %777, label %787

777:                                              ; preds = %773
  %778 = bitcast %"class.v8::internal::Utf16CharacterStream"* %764 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %779 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %778, align 8
  %780 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %779, i64 5
  %781 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %780, align 8
  %782 = tail call zeroext i1 %781(%"class.v8::internal::Utf16CharacterStream"* %764) #8
  %783 = load i16*, i16** %765, align 8
  br i1 %782, label %784, label %787

784:                                              ; preds = %777
  %785 = load i16, i16* %783, align 2
  %786 = zext i16 %785 to i32
  br label %787

787:                                              ; preds = %784, %777, %773, %770
  %788 = phi i16* [ %766, %770 ], [ %783, %784 ], [ %766, %773 ], [ %783, %777 ]
  %789 = phi i32 [ %772, %770 ], [ %786, %784 ], [ -1, %773 ], [ -1, %777 ]
  %790 = getelementptr inbounds i16, i16* %788, i64 1
  store i16* %790, i16** %765, align 8
  store i32 %789, i32* %75, align 8
  br label %2623

791:                                              ; preds = %758
  %792 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %793 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %792, i64 0, i32 2
  %794 = load i16*, i16** %793, align 8
  %795 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %792, i64 0, i32 3
  %796 = load i16*, i16** %795, align 8
  %797 = icmp ult i16* %794, %796
  br i1 %797, label %798, label %801, !prof !4

798:                                              ; preds = %791
  %799 = load i16, i16* %794, align 2
  %800 = zext i16 %799 to i32
  br label %815

801:                                              ; preds = %791
  %802 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %792, i64 0, i32 6
  %803 = load i8, i8* %802, align 8, !range !2
  %804 = icmp eq i8 %803, 0
  br i1 %804, label %805, label %815

805:                                              ; preds = %801
  %806 = bitcast %"class.v8::internal::Utf16CharacterStream"* %792 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %807 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %806, align 8
  %808 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %807, i64 5
  %809 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %808, align 8
  %810 = tail call zeroext i1 %809(%"class.v8::internal::Utf16CharacterStream"* %792) #8
  %811 = load i16*, i16** %793, align 8
  br i1 %810, label %812, label %815

812:                                              ; preds = %805
  %813 = load i16, i16* %811, align 2
  %814 = zext i16 %813 to i32
  br label %815

815:                                              ; preds = %812, %805, %801, %798
  %816 = phi i16* [ %794, %798 ], [ %811, %812 ], [ %794, %801 ], [ %811, %805 ]
  %817 = phi i32 [ %800, %798 ], [ %814, %812 ], [ -1, %801 ], [ -1, %805 ]
  %818 = getelementptr inbounds i16, i16* %816, i64 1
  store i16* %818, i16** %793, align 8
  store i32 %817, i32* %75, align 8
  br label %2623

819:                                              ; preds = %100
  %820 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %821 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %820, i64 0, i32 2
  %822 = load i16*, i16** %821, align 8
  %823 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %820, i64 0, i32 3
  %824 = load i16*, i16** %823, align 8
  %825 = icmp ult i16* %822, %824
  br i1 %825, label %840, label %826, !prof !4

826:                                              ; preds = %819
  %827 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %820, i64 0, i32 6
  %828 = load i8, i8* %827, align 8, !range !2
  %829 = icmp eq i8 %828, 0
  br i1 %829, label %830, label %837

830:                                              ; preds = %826
  %831 = bitcast %"class.v8::internal::Utf16CharacterStream"* %820 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %832 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %831, align 8
  %833 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %832, i64 5
  %834 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %833, align 8
  %835 = tail call zeroext i1 %834(%"class.v8::internal::Utf16CharacterStream"* %820) #8
  %836 = load i16*, i16** %821, align 8
  br i1 %835, label %840, label %837

837:                                              ; preds = %830, %826
  %838 = phi i16* [ %836, %830 ], [ %822, %826 ]
  %839 = getelementptr inbounds i16, i16* %838, i64 1
  store i16* %839, i16** %821, align 8
  store i32 -1, i32* %75, align 8
  br label %2623

840:                                              ; preds = %830, %819
  %841 = phi i16* [ %822, %819 ], [ %836, %830 ]
  %842 = load i16, i16* %841, align 2
  %843 = zext i16 %842 to i32
  %844 = getelementptr inbounds i16, i16* %841, i64 1
  store i16* %844, i16** %821, align 8
  store i32 %843, i32* %75, align 8
  switch i16 %842, label %2623 [
    i16 45, label %845
    i16 61, label %941
  ]

845:                                              ; preds = %840
  %846 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %847 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %846, i64 0, i32 2
  %848 = load i16*, i16** %847, align 8
  %849 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %846, i64 0, i32 3
  %850 = load i16*, i16** %849, align 8
  %851 = icmp ult i16* %848, %850
  br i1 %851, label %866, label %852, !prof !4

852:                                              ; preds = %845
  %853 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %846, i64 0, i32 6
  %854 = load i8, i8* %853, align 8, !range !2
  %855 = icmp eq i8 %854, 0
  br i1 %855, label %856, label %863

856:                                              ; preds = %852
  %857 = bitcast %"class.v8::internal::Utf16CharacterStream"* %846 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %858 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %857, align 8
  %859 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %858, i64 5
  %860 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %859, align 8
  %861 = tail call zeroext i1 %860(%"class.v8::internal::Utf16CharacterStream"* %846) #8
  %862 = load i16*, i16** %847, align 8
  br i1 %861, label %866, label %863

863:                                              ; preds = %856, %852
  %864 = phi i16* [ %862, %856 ], [ %848, %852 ]
  %865 = getelementptr inbounds i16, i16* %864, i64 1
  store i16* %865, i16** %847, align 8
  store i32 -1, i32* %75, align 8
  br label %2623

866:                                              ; preds = %856, %845
  %867 = phi i16* [ %848, %845 ], [ %862, %856 ]
  %868 = load i16, i16* %867, align 2
  %869 = zext i16 %868 to i32
  %870 = getelementptr inbounds i16, i16* %867, i64 1
  store i16* %870, i16** %847, align 8
  store i32 %869, i32* %75, align 8
  %871 = icmp eq i16 %868, 62
  br i1 %871, label %872, label %2623

872:                                              ; preds = %866
  %873 = load %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"** %76, align 8
  %874 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %873, i64 0, i32 8
  %875 = load i8, i8* %874, align 4, !range !2
  %876 = icmp eq i8 %875, 0
  br i1 %876, label %2623, label %877

877:                                              ; preds = %872
  %878 = load i32, i32* %80, align 4
  %879 = and i32 %878, 32
  %880 = icmp eq i32 %879, 0
  %881 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  br i1 %880, label %904, label %882

882:                                              ; preds = %877
  %883 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %881, i64 0, i32 4
  %884 = load i64, i64* %883, align 8
  %885 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %881, i64 0, i32 2
  %886 = bitcast i16** %885 to i64*
  %887 = load i64, i64* %886, align 8
  %888 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %881, i64 0, i32 1
  %889 = bitcast i16** %888 to i64*
  %890 = load i64, i64* %889, align 8
  %891 = sub i64 %887, %890
  %892 = lshr exact i64 %891, 1
  %893 = add i64 %892, %884
  %894 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 14
  %895 = load i32, i32* %894, align 4
  %896 = icmp eq i32 %895, 0
  br i1 %896, label %897, label %2623

897:                                              ; preds = %882
  %898 = add i64 %893, 4294967295
  store i32 292, i32* %894, align 4
  %899 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 15
  %900 = bitcast %"struct.v8::internal::Scanner::Location"* %899 to i64*
  %901 = shl i64 %893, 32
  %902 = and i64 %898, 4294967295
  %903 = or i64 %902, %901
  store i64 %903, i64* %900, align 8
  br label %2623

904:                                              ; preds = %877
  %905 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %881, i64 0, i32 2
  %906 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %881, i64 0, i32 3
  %907 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %881, i64 0, i32 6
  %908 = bitcast %"class.v8::internal::Utf16CharacterStream"* %881 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  br label %909

909:                                              ; preds = %925, %904
  %910 = load i16*, i16** %905, align 8
  %911 = load i16*, i16** %906, align 8
  %912 = icmp eq i16* %910, %911
  br i1 %912, label %919, label %913

913:                                              ; preds = %909, %916
  %914 = phi i16* [ %917, %916 ], [ %910, %909 ]
  %915 = load i16, i16* %914, align 2
  switch i16 %915, label %916 [
    i16 8232, label %919
    i16 13, label %919
    i16 10, label %919
    i16 8233, label %919
  ]

916:                                              ; preds = %913
  %917 = getelementptr inbounds i16, i16* %914, i64 1
  %918 = icmp eq i16* %917, %911
  br i1 %918, label %922, label %913

919:                                              ; preds = %913, %913, %913, %913, %909
  %920 = phi i16* [ %910, %909 ], [ %914, %913 ], [ %914, %913 ], [ %914, %913 ], [ %914, %913 ]
  %921 = icmp eq i16* %920, %911
  br i1 %921, label %922, label %935

922:                                              ; preds = %916, %919
  store i16* %911, i16** %905, align 8
  %923 = load i8, i8* %907, align 8, !range !2
  %924 = icmp eq i8 %923, 0
  br i1 %924, label %925, label %932

925:                                              ; preds = %922
  %926 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %908, align 8
  %927 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %926, i64 5
  %928 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %927, align 8
  %929 = tail call zeroext i1 %928(%"class.v8::internal::Utf16CharacterStream"* %881) #8
  br i1 %929, label %909, label %930

930:                                              ; preds = %925
  %931 = load i16*, i16** %905, align 8
  br label %932

932:                                              ; preds = %922, %930
  %933 = phi i16* [ %931, %930 ], [ %911, %922 ]
  %934 = getelementptr inbounds i16, i16* %933, i64 1
  store i16* %934, i16** %905, align 8
  br label %939

935:                                              ; preds = %919
  %936 = getelementptr inbounds i16, i16* %920, i64 1
  store i16* %936, i16** %905, align 8
  %937 = load i16, i16* %920, align 2
  %938 = zext i16 %937 to i32
  br label %939

939:                                              ; preds = %935, %932
  %940 = phi i32 [ %938, %935 ], [ -1, %932 ]
  store i32 %940, i32* %75, align 8
  br label %2621

941:                                              ; preds = %840
  %942 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %943 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %942, i64 0, i32 2
  %944 = load i16*, i16** %943, align 8
  %945 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %942, i64 0, i32 3
  %946 = load i16*, i16** %945, align 8
  %947 = icmp ult i16* %944, %946
  br i1 %947, label %948, label %951, !prof !4

948:                                              ; preds = %941
  %949 = load i16, i16* %944, align 2
  %950 = zext i16 %949 to i32
  br label %965

951:                                              ; preds = %941
  %952 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %942, i64 0, i32 6
  %953 = load i8, i8* %952, align 8, !range !2
  %954 = icmp eq i8 %953, 0
  br i1 %954, label %955, label %965

955:                                              ; preds = %951
  %956 = bitcast %"class.v8::internal::Utf16CharacterStream"* %942 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %957 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %956, align 8
  %958 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %957, i64 5
  %959 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %958, align 8
  %960 = tail call zeroext i1 %959(%"class.v8::internal::Utf16CharacterStream"* %942) #8
  %961 = load i16*, i16** %943, align 8
  br i1 %960, label %962, label %965

962:                                              ; preds = %955
  %963 = load i16, i16* %961, align 2
  %964 = zext i16 %963 to i32
  br label %965

965:                                              ; preds = %962, %955, %951, %948
  %966 = phi i16* [ %944, %948 ], [ %961, %962 ], [ %944, %951 ], [ %961, %955 ]
  %967 = phi i32 [ %950, %948 ], [ %964, %962 ], [ -1, %951 ], [ -1, %955 ]
  %968 = getelementptr inbounds i16, i16* %966, i64 1
  store i16* %968, i16** %943, align 8
  store i32 %967, i32* %75, align 8
  br label %2623

969:                                              ; preds = %100
  %970 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %971 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %970, i64 0, i32 2
  %972 = load i16*, i16** %971, align 8
  %973 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %970, i64 0, i32 3
  %974 = load i16*, i16** %973, align 8
  %975 = icmp ult i16* %972, %974
  br i1 %975, label %990, label %976, !prof !4

976:                                              ; preds = %969
  %977 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %970, i64 0, i32 6
  %978 = load i8, i8* %977, align 8, !range !2
  %979 = icmp eq i8 %978, 0
  br i1 %979, label %980, label %987

980:                                              ; preds = %976
  %981 = bitcast %"class.v8::internal::Utf16CharacterStream"* %970 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %982 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %981, align 8
  %983 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %982, i64 5
  %984 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %983, align 8
  %985 = tail call zeroext i1 %984(%"class.v8::internal::Utf16CharacterStream"* %970) #8
  %986 = load i16*, i16** %971, align 8
  br i1 %985, label %990, label %987

987:                                              ; preds = %980, %976
  %988 = phi i16* [ %986, %980 ], [ %972, %976 ]
  %989 = getelementptr inbounds i16, i16* %988, i64 1
  store i16* %989, i16** %971, align 8
  store i32 -1, i32* %75, align 8
  br label %2623

990:                                              ; preds = %980, %969
  %991 = phi i16* [ %972, %969 ], [ %986, %980 ]
  %992 = load i16, i16* %991, align 2
  %993 = zext i16 %992 to i32
  %994 = getelementptr inbounds i16, i16* %991, i64 1
  store i16* %994, i16** %971, align 8
  store i32 %993, i32* %75, align 8
  switch i16 %992, label %2623 [
    i16 42, label %995
    i16 61, label %1050
  ]

995:                                              ; preds = %990
  %996 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %997 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %996, i64 0, i32 2
  %998 = load i16*, i16** %997, align 8
  %999 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %996, i64 0, i32 3
  %1000 = load i16*, i16** %999, align 8
  %1001 = icmp ult i16* %998, %1000
  br i1 %1001, label %1016, label %1002, !prof !4

1002:                                             ; preds = %995
  %1003 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %996, i64 0, i32 6
  %1004 = load i8, i8* %1003, align 8, !range !2
  %1005 = icmp eq i8 %1004, 0
  br i1 %1005, label %1006, label %1013

1006:                                             ; preds = %1002
  %1007 = bitcast %"class.v8::internal::Utf16CharacterStream"* %996 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %1008 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1007, align 8
  %1009 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1008, i64 5
  %1010 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1009, align 8
  %1011 = tail call zeroext i1 %1010(%"class.v8::internal::Utf16CharacterStream"* %996) #8
  %1012 = load i16*, i16** %997, align 8
  br i1 %1011, label %1016, label %1013

1013:                                             ; preds = %1006, %1002
  %1014 = phi i16* [ %1012, %1006 ], [ %998, %1002 ]
  %1015 = getelementptr inbounds i16, i16* %1014, i64 1
  store i16* %1015, i16** %997, align 8
  store i32 -1, i32* %75, align 8
  br label %2623

1016:                                             ; preds = %1006, %995
  %1017 = phi i16* [ %998, %995 ], [ %1012, %1006 ]
  %1018 = load i16, i16* %1017, align 2
  %1019 = zext i16 %1018 to i32
  %1020 = getelementptr inbounds i16, i16* %1017, i64 1
  store i16* %1020, i16** %997, align 8
  store i32 %1019, i32* %75, align 8
  %1021 = icmp eq i16 %1018, 61
  br i1 %1021, label %1022, label %2623

1022:                                             ; preds = %1016
  %1023 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %1024 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1023, i64 0, i32 2
  %1025 = load i16*, i16** %1024, align 8
  %1026 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1023, i64 0, i32 3
  %1027 = load i16*, i16** %1026, align 8
  %1028 = icmp ult i16* %1025, %1027
  br i1 %1028, label %1029, label %1032, !prof !4

1029:                                             ; preds = %1022
  %1030 = load i16, i16* %1025, align 2
  %1031 = zext i16 %1030 to i32
  br label %1046

1032:                                             ; preds = %1022
  %1033 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1023, i64 0, i32 6
  %1034 = load i8, i8* %1033, align 8, !range !2
  %1035 = icmp eq i8 %1034, 0
  br i1 %1035, label %1036, label %1046

1036:                                             ; preds = %1032
  %1037 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1023 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %1038 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1037, align 8
  %1039 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1038, i64 5
  %1040 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1039, align 8
  %1041 = tail call zeroext i1 %1040(%"class.v8::internal::Utf16CharacterStream"* %1023) #8
  %1042 = load i16*, i16** %1024, align 8
  br i1 %1041, label %1043, label %1046

1043:                                             ; preds = %1036
  %1044 = load i16, i16* %1042, align 2
  %1045 = zext i16 %1044 to i32
  br label %1046

1046:                                             ; preds = %1043, %1036, %1032, %1029
  %1047 = phi i16* [ %1025, %1029 ], [ %1042, %1043 ], [ %1025, %1032 ], [ %1042, %1036 ]
  %1048 = phi i32 [ %1031, %1029 ], [ %1045, %1043 ], [ -1, %1032 ], [ -1, %1036 ]
  %1049 = getelementptr inbounds i16, i16* %1047, i64 1
  store i16* %1049, i16** %1024, align 8
  store i32 %1048, i32* %75, align 8
  br label %2623

1050:                                             ; preds = %990
  %1051 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %1052 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1051, i64 0, i32 2
  %1053 = load i16*, i16** %1052, align 8
  %1054 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1051, i64 0, i32 3
  %1055 = load i16*, i16** %1054, align 8
  %1056 = icmp ult i16* %1053, %1055
  br i1 %1056, label %1057, label %1060, !prof !4

1057:                                             ; preds = %1050
  %1058 = load i16, i16* %1053, align 2
  %1059 = zext i16 %1058 to i32
  br label %1074

1060:                                             ; preds = %1050
  %1061 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1051, i64 0, i32 6
  %1062 = load i8, i8* %1061, align 8, !range !2
  %1063 = icmp eq i8 %1062, 0
  br i1 %1063, label %1064, label %1074

1064:                                             ; preds = %1060
  %1065 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1051 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %1066 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1065, align 8
  %1067 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1066, i64 5
  %1068 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1067, align 8
  %1069 = tail call zeroext i1 %1068(%"class.v8::internal::Utf16CharacterStream"* %1051) #8
  %1070 = load i16*, i16** %1052, align 8
  br i1 %1069, label %1071, label %1074

1071:                                             ; preds = %1064
  %1072 = load i16, i16* %1070, align 2
  %1073 = zext i16 %1072 to i32
  br label %1074

1074:                                             ; preds = %1071, %1064, %1060, %1057
  %1075 = phi i16* [ %1053, %1057 ], [ %1070, %1071 ], [ %1053, %1060 ], [ %1070, %1064 ]
  %1076 = phi i32 [ %1059, %1057 ], [ %1073, %1071 ], [ -1, %1060 ], [ -1, %1064 ]
  %1077 = getelementptr inbounds i16, i16* %1075, i64 1
  store i16* %1077, i16** %1052, align 8
  store i32 %1076, i32* %75, align 8
  br label %2623

1078:                                             ; preds = %100
  %1079 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %1080 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1079, i64 0, i32 2
  %1081 = load i16*, i16** %1080, align 8
  %1082 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1079, i64 0, i32 3
  %1083 = load i16*, i16** %1082, align 8
  %1084 = icmp ult i16* %1081, %1083
  br i1 %1084, label %1099, label %1085, !prof !4

1085:                                             ; preds = %1078
  %1086 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1079, i64 0, i32 6
  %1087 = load i8, i8* %1086, align 8, !range !2
  %1088 = icmp eq i8 %1087, 0
  br i1 %1088, label %1089, label %1096

1089:                                             ; preds = %1085
  %1090 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1079 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %1091 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1090, align 8
  %1092 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1091, i64 5
  %1093 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1092, align 8
  %1094 = tail call zeroext i1 %1093(%"class.v8::internal::Utf16CharacterStream"* %1079) #8
  %1095 = load i16*, i16** %1080, align 8
  br i1 %1094, label %1099, label %1096

1096:                                             ; preds = %1089, %1085
  %1097 = phi i16* [ %1095, %1089 ], [ %1081, %1085 ]
  %1098 = getelementptr inbounds i16, i16* %1097, i64 1
  store i16* %1098, i16** %1080, align 8
  store i32 -1, i32* %75, align 8
  br label %2623

1099:                                             ; preds = %1089, %1078
  %1100 = phi i16* [ %1081, %1078 ], [ %1095, %1089 ]
  %1101 = load i16, i16* %1100, align 2
  %1102 = zext i16 %1101 to i32
  %1103 = getelementptr inbounds i16, i16* %1100, i64 1
  store i16* %1103, i16** %1080, align 8
  store i32 %1102, i32* %75, align 8
  %1104 = icmp eq i16 %1101, 61
  br i1 %1104, label %1105, label %2623

1105:                                             ; preds = %1099
  %1106 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %1107 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1106, i64 0, i32 2
  %1108 = load i16*, i16** %1107, align 8
  %1109 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1106, i64 0, i32 3
  %1110 = load i16*, i16** %1109, align 8
  %1111 = icmp ult i16* %1108, %1110
  br i1 %1111, label %1112, label %1115, !prof !4

1112:                                             ; preds = %1105
  %1113 = load i16, i16* %1108, align 2
  %1114 = zext i16 %1113 to i32
  br label %1129

1115:                                             ; preds = %1105
  %1116 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1106, i64 0, i32 6
  %1117 = load i8, i8* %1116, align 8, !range !2
  %1118 = icmp eq i8 %1117, 0
  br i1 %1118, label %1119, label %1129

1119:                                             ; preds = %1115
  %1120 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1106 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %1121 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1120, align 8
  %1122 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1121, i64 5
  %1123 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1122, align 8
  %1124 = tail call zeroext i1 %1123(%"class.v8::internal::Utf16CharacterStream"* %1106) #8
  %1125 = load i16*, i16** %1107, align 8
  br i1 %1124, label %1126, label %1129

1126:                                             ; preds = %1119
  %1127 = load i16, i16* %1125, align 2
  %1128 = zext i16 %1127 to i32
  br label %1129

1129:                                             ; preds = %1126, %1119, %1115, %1112
  %1130 = phi i16* [ %1108, %1112 ], [ %1125, %1126 ], [ %1108, %1115 ], [ %1125, %1119 ]
  %1131 = phi i32 [ %1114, %1112 ], [ %1128, %1126 ], [ -1, %1115 ], [ -1, %1119 ]
  %1132 = getelementptr inbounds i16, i16* %1130, i64 1
  store i16* %1132, i16** %1107, align 8
  store i32 %1131, i32* %75, align 8
  br label %2623

1133:                                             ; preds = %100
  %1134 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %1135 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1134, i64 0, i32 2
  %1136 = load i16*, i16** %1135, align 8
  %1137 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1134, i64 0, i32 3
  %1138 = load i16*, i16** %1137, align 8
  %1139 = icmp ult i16* %1136, %1138
  br i1 %1139, label %1154, label %1140, !prof !4

1140:                                             ; preds = %1133
  %1141 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1134, i64 0, i32 6
  %1142 = load i8, i8* %1141, align 8, !range !2
  %1143 = icmp eq i8 %1142, 0
  br i1 %1143, label %1144, label %1151

1144:                                             ; preds = %1140
  %1145 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1134 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %1146 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1145, align 8
  %1147 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1146, i64 5
  %1148 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1147, align 8
  %1149 = tail call zeroext i1 %1148(%"class.v8::internal::Utf16CharacterStream"* %1134) #8
  %1150 = load i16*, i16** %1135, align 8
  br i1 %1149, label %1154, label %1151

1151:                                             ; preds = %1144, %1140
  %1152 = phi i16* [ %1150, %1144 ], [ %1136, %1140 ]
  %1153 = getelementptr inbounds i16, i16* %1152, i64 1
  store i16* %1153, i16** %1135, align 8
  store i32 -1, i32* %75, align 8
  br label %2623

1154:                                             ; preds = %1144, %1133
  %1155 = phi i16* [ %1136, %1133 ], [ %1150, %1144 ]
  %1156 = load i16, i16* %1155, align 2
  %1157 = zext i16 %1156 to i32
  %1158 = getelementptr inbounds i16, i16* %1155, i64 1
  store i16* %1158, i16** %1135, align 8
  store i32 %1157, i32* %75, align 8
  switch i16 %1156, label %2623 [
    i16 47, label %1159
    i16 42, label %1313
    i16 61, label %1315
  ]

1159:                                             ; preds = %1154
  %1160 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %1161 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1160, i64 0, i32 2
  %1162 = load i16*, i16** %1161, align 8
  %1163 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1160, i64 0, i32 3
  %1164 = load i16*, i16** %1163, align 8
  %1165 = icmp ult i16* %1162, %1164
  br i1 %1165, label %1178, label %1166, !prof !4

1166:                                             ; preds = %1159
  %1167 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1160, i64 0, i32 6
  %1168 = load i8, i8* %1167, align 8, !range !2
  %1169 = icmp eq i8 %1168, 0
  br i1 %1169, label %1170, label %1275

1170:                                             ; preds = %1166
  %1171 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1160 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %1172 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1171, align 8
  %1173 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1172, i64 5
  %1174 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1173, align 8
  %1175 = tail call zeroext i1 %1174(%"class.v8::internal::Utf16CharacterStream"* %1160) #8
  br i1 %1175, label %1176, label %1275

1176:                                             ; preds = %1170
  %1177 = load i16*, i16** %1161, align 8
  br label %1178

1178:                                             ; preds = %1176, %1159
  %1179 = phi i16* [ %1177, %1176 ], [ %1162, %1159 ]
  %1180 = load i16, i16* %1179, align 2
  switch i16 %1180, label %1275 [
    i16 64, label %1181
    i16 35, label %1181
  ]

1181:                                             ; preds = %1178, %1178
  %1182 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %1183 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1182, i64 0, i32 2
  %1184 = load i16*, i16** %1183, align 8
  %1185 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1182, i64 0, i32 3
  %1186 = load i16*, i16** %1185, align 8
  %1187 = icmp ult i16* %1184, %1186
  br i1 %1187, label %1188, label %1191, !prof !4

1188:                                             ; preds = %1181
  %1189 = load i16, i16* %1184, align 2
  %1190 = zext i16 %1189 to i32
  br label %1205

1191:                                             ; preds = %1181
  %1192 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1182, i64 0, i32 6
  %1193 = load i8, i8* %1192, align 8, !range !2
  %1194 = icmp eq i8 %1193, 0
  br i1 %1194, label %1195, label %1205

1195:                                             ; preds = %1191
  %1196 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1182 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %1197 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1196, align 8
  %1198 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1197, i64 5
  %1199 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1198, align 8
  %1200 = tail call zeroext i1 %1199(%"class.v8::internal::Utf16CharacterStream"* %1182) #8
  %1201 = load i16*, i16** %1183, align 8
  br i1 %1200, label %1202, label %1205

1202:                                             ; preds = %1195
  %1203 = load i16, i16* %1201, align 2
  %1204 = zext i16 %1203 to i32
  br label %1205

1205:                                             ; preds = %1202, %1195, %1191, %1188
  %1206 = phi i16* [ %1184, %1188 ], [ %1201, %1202 ], [ %1184, %1191 ], [ %1201, %1195 ]
  %1207 = phi i32 [ %1190, %1188 ], [ %1204, %1202 ], [ -1, %1191 ], [ -1, %1195 ]
  %1208 = getelementptr inbounds i16, i16* %1206, i64 1
  store i16* %1208, i16** %1183, align 8
  store i32 %1207, i32* %75, align 8
  %1209 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %1210 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1209, i64 0, i32 2
  %1211 = load i16*, i16** %1210, align 8
  %1212 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1209, i64 0, i32 3
  %1213 = load i16*, i16** %1212, align 8
  %1214 = icmp ult i16* %1211, %1213
  br i1 %1214, label %1215, label %1218, !prof !4

1215:                                             ; preds = %1205
  %1216 = load i16, i16* %1211, align 2
  %1217 = zext i16 %1216 to i32
  br label %1232

1218:                                             ; preds = %1205
  %1219 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1209, i64 0, i32 6
  %1220 = load i8, i8* %1219, align 8, !range !2
  %1221 = icmp eq i8 %1220, 0
  br i1 %1221, label %1222, label %1232

1222:                                             ; preds = %1218
  %1223 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1209 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %1224 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1223, align 8
  %1225 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1224, i64 5
  %1226 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1225, align 8
  %1227 = tail call zeroext i1 %1226(%"class.v8::internal::Utf16CharacterStream"* %1209) #8
  %1228 = load i16*, i16** %1210, align 8
  br i1 %1227, label %1229, label %1232

1229:                                             ; preds = %1222
  %1230 = load i16, i16* %1228, align 2
  %1231 = zext i16 %1230 to i32
  br label %1232

1232:                                             ; preds = %1229, %1222, %1218, %1215
  %1233 = phi i16* [ %1211, %1215 ], [ %1228, %1229 ], [ %1211, %1218 ], [ %1228, %1222 ]
  %1234 = phi i32 [ %1217, %1215 ], [ %1231, %1229 ], [ -1, %1218 ], [ -1, %1222 ]
  %1235 = getelementptr inbounds i16, i16* %1233, i64 1
  store i16* %1235, i16** %1210, align 8
  store i32 %1234, i32* %75, align 8
  tail call void @_ZN2v88internal7Scanner26TryToParseSourceURLCommentEv(%"class.v8::internal::Scanner"* %0) #8
  %1236 = load i32, i32* %75, align 8
  switch i32 %1236, label %1237 [
    i32 8232, label %2621
    i32 13, label %2621
    i32 10, label %2621
    i32 8233, label %2621
    i32 -1, label %2621
  ]

1237:                                             ; preds = %1232
  %1238 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %1239 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1238, i64 0, i32 2
  %1240 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1238, i64 0, i32 3
  %1241 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1238, i64 0, i32 6
  %1242 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1238 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  br label %1243

1243:                                             ; preds = %1259, %1237
  %1244 = load i16*, i16** %1239, align 8
  %1245 = load i16*, i16** %1240, align 8
  %1246 = icmp eq i16* %1244, %1245
  br i1 %1246, label %1253, label %1247

1247:                                             ; preds = %1243, %1250
  %1248 = phi i16* [ %1251, %1250 ], [ %1244, %1243 ]
  %1249 = load i16, i16* %1248, align 2
  switch i16 %1249, label %1250 [
    i16 8232, label %1253
    i16 13, label %1253
    i16 10, label %1253
    i16 8233, label %1253
  ]

1250:                                             ; preds = %1247
  %1251 = getelementptr inbounds i16, i16* %1248, i64 1
  %1252 = icmp eq i16* %1251, %1245
  br i1 %1252, label %1256, label %1247

1253:                                             ; preds = %1247, %1247, %1247, %1247, %1243
  %1254 = phi i16* [ %1244, %1243 ], [ %1248, %1247 ], [ %1248, %1247 ], [ %1248, %1247 ], [ %1248, %1247 ]
  %1255 = icmp eq i16* %1254, %1245
  br i1 %1255, label %1256, label %1269

1256:                                             ; preds = %1250, %1253
  store i16* %1245, i16** %1239, align 8
  %1257 = load i8, i8* %1241, align 8, !range !2
  %1258 = icmp eq i8 %1257, 0
  br i1 %1258, label %1259, label %1266

1259:                                             ; preds = %1256
  %1260 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1242, align 8
  %1261 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1260, i64 5
  %1262 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1261, align 8
  %1263 = tail call zeroext i1 %1262(%"class.v8::internal::Utf16CharacterStream"* %1238) #8
  br i1 %1263, label %1243, label %1264

1264:                                             ; preds = %1259
  %1265 = load i16*, i16** %1239, align 8
  br label %1266

1266:                                             ; preds = %1256, %1264
  %1267 = phi i16* [ %1265, %1264 ], [ %1245, %1256 ]
  %1268 = getelementptr inbounds i16, i16* %1267, i64 1
  store i16* %1268, i16** %1239, align 8
  br label %1273

1269:                                             ; preds = %1253
  %1270 = getelementptr inbounds i16, i16* %1254, i64 1
  store i16* %1270, i16** %1239, align 8
  %1271 = load i16, i16* %1254, align 2
  %1272 = zext i16 %1271 to i32
  br label %1273

1273:                                             ; preds = %1269, %1266
  %1274 = phi i32 [ %1272, %1269 ], [ -1, %1266 ]
  store i32 %1274, i32* %75, align 8
  br label %2621

1275:                                             ; preds = %1178, %1170, %1166
  %1276 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %1277 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1276, i64 0, i32 2
  %1278 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1276, i64 0, i32 3
  %1279 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1276, i64 0, i32 6
  %1280 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1276 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  br label %1281

1281:                                             ; preds = %1297, %1275
  %1282 = load i16*, i16** %1277, align 8
  %1283 = load i16*, i16** %1278, align 8
  %1284 = icmp eq i16* %1282, %1283
  br i1 %1284, label %1291, label %1285

1285:                                             ; preds = %1281, %1288
  %1286 = phi i16* [ %1289, %1288 ], [ %1282, %1281 ]
  %1287 = load i16, i16* %1286, align 2
  switch i16 %1287, label %1288 [
    i16 8232, label %1291
    i16 13, label %1291
    i16 10, label %1291
    i16 8233, label %1291
  ]

1288:                                             ; preds = %1285
  %1289 = getelementptr inbounds i16, i16* %1286, i64 1
  %1290 = icmp eq i16* %1289, %1283
  br i1 %1290, label %1294, label %1285

1291:                                             ; preds = %1285, %1285, %1285, %1285, %1281
  %1292 = phi i16* [ %1282, %1281 ], [ %1286, %1285 ], [ %1286, %1285 ], [ %1286, %1285 ], [ %1286, %1285 ]
  %1293 = icmp eq i16* %1292, %1283
  br i1 %1293, label %1294, label %1307

1294:                                             ; preds = %1288, %1291
  store i16* %1283, i16** %1277, align 8
  %1295 = load i8, i8* %1279, align 8, !range !2
  %1296 = icmp eq i8 %1295, 0
  br i1 %1296, label %1297, label %1304

1297:                                             ; preds = %1294
  %1298 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1280, align 8
  %1299 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1298, i64 5
  %1300 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1299, align 8
  %1301 = tail call zeroext i1 %1300(%"class.v8::internal::Utf16CharacterStream"* %1276) #8
  br i1 %1301, label %1281, label %1302

1302:                                             ; preds = %1297
  %1303 = load i16*, i16** %1277, align 8
  br label %1304

1304:                                             ; preds = %1294, %1302
  %1305 = phi i16* [ %1303, %1302 ], [ %1283, %1294 ]
  %1306 = getelementptr inbounds i16, i16* %1305, i64 1
  store i16* %1306, i16** %1277, align 8
  br label %1311

1307:                                             ; preds = %1291
  %1308 = getelementptr inbounds i16, i16* %1292, i64 1
  store i16* %1308, i16** %1277, align 8
  %1309 = load i16, i16* %1292, align 2
  %1310 = zext i16 %1309 to i32
  br label %1311

1311:                                             ; preds = %1307, %1304
  %1312 = phi i32 [ %1310, %1307 ], [ -1, %1304 ]
  store i32 %1312, i32* %75, align 8
  br label %2621

1313:                                             ; preds = %1154
  %1314 = tail call zeroext i8 @_ZN2v88internal7Scanner20SkipMultiLineCommentEv(%"class.v8::internal::Scanner"* %0) #8
  br label %2618

1315:                                             ; preds = %1154
  %1316 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %1317 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1316, i64 0, i32 2
  %1318 = load i16*, i16** %1317, align 8
  %1319 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1316, i64 0, i32 3
  %1320 = load i16*, i16** %1319, align 8
  %1321 = icmp ult i16* %1318, %1320
  br i1 %1321, label %1322, label %1325, !prof !4

1322:                                             ; preds = %1315
  %1323 = load i16, i16* %1318, align 2
  %1324 = zext i16 %1323 to i32
  br label %1339

1325:                                             ; preds = %1315
  %1326 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1316, i64 0, i32 6
  %1327 = load i8, i8* %1326, align 8, !range !2
  %1328 = icmp eq i8 %1327, 0
  br i1 %1328, label %1329, label %1339

1329:                                             ; preds = %1325
  %1330 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1316 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %1331 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1330, align 8
  %1332 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1331, i64 5
  %1333 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1332, align 8
  %1334 = tail call zeroext i1 %1333(%"class.v8::internal::Utf16CharacterStream"* %1316) #8
  %1335 = load i16*, i16** %1317, align 8
  br i1 %1334, label %1336, label %1339

1336:                                             ; preds = %1329
  %1337 = load i16, i16* %1335, align 2
  %1338 = zext i16 %1337 to i32
  br label %1339

1339:                                             ; preds = %1336, %1329, %1325, %1322
  %1340 = phi i16* [ %1318, %1322 ], [ %1335, %1336 ], [ %1318, %1325 ], [ %1335, %1329 ]
  %1341 = phi i32 [ %1324, %1322 ], [ %1338, %1336 ], [ -1, %1325 ], [ -1, %1329 ]
  %1342 = getelementptr inbounds i16, i16* %1340, i64 1
  store i16* %1342, i16** %1317, align 8
  store i32 %1341, i32* %75, align 8
  br label %2623

1343:                                             ; preds = %100
  %1344 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %1345 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1344, i64 0, i32 2
  %1346 = load i16*, i16** %1345, align 8
  %1347 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1344, i64 0, i32 3
  %1348 = load i16*, i16** %1347, align 8
  %1349 = icmp ult i16* %1346, %1348
  br i1 %1349, label %1364, label %1350, !prof !4

1350:                                             ; preds = %1343
  %1351 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1344, i64 0, i32 6
  %1352 = load i8, i8* %1351, align 8, !range !2
  %1353 = icmp eq i8 %1352, 0
  br i1 %1353, label %1354, label %1361

1354:                                             ; preds = %1350
  %1355 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1344 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %1356 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1355, align 8
  %1357 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1356, i64 5
  %1358 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1357, align 8
  %1359 = tail call zeroext i1 %1358(%"class.v8::internal::Utf16CharacterStream"* %1344) #8
  %1360 = load i16*, i16** %1345, align 8
  br i1 %1359, label %1364, label %1361

1361:                                             ; preds = %1354, %1350
  %1362 = phi i16* [ %1360, %1354 ], [ %1346, %1350 ]
  %1363 = getelementptr inbounds i16, i16* %1362, i64 1
  store i16* %1363, i16** %1345, align 8
  store i32 -1, i32* %75, align 8
  br label %2623

1364:                                             ; preds = %1354, %1343
  %1365 = phi i16* [ %1346, %1343 ], [ %1360, %1354 ]
  %1366 = load i16, i16* %1365, align 2
  %1367 = zext i16 %1366 to i32
  %1368 = getelementptr inbounds i16, i16* %1365, i64 1
  store i16* %1368, i16** %1345, align 8
  store i32 %1367, i32* %75, align 8
  switch i16 %1366, label %2623 [
    i16 38, label %1369
    i16 61, label %1424
  ]

1369:                                             ; preds = %1364
  %1370 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %1371 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1370, i64 0, i32 2
  %1372 = load i16*, i16** %1371, align 8
  %1373 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1370, i64 0, i32 3
  %1374 = load i16*, i16** %1373, align 8
  %1375 = icmp ult i16* %1372, %1374
  br i1 %1375, label %1390, label %1376, !prof !4

1376:                                             ; preds = %1369
  %1377 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1370, i64 0, i32 6
  %1378 = load i8, i8* %1377, align 8, !range !2
  %1379 = icmp eq i8 %1378, 0
  br i1 %1379, label %1380, label %1387

1380:                                             ; preds = %1376
  %1381 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1370 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %1382 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1381, align 8
  %1383 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1382, i64 5
  %1384 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1383, align 8
  %1385 = tail call zeroext i1 %1384(%"class.v8::internal::Utf16CharacterStream"* %1370) #8
  %1386 = load i16*, i16** %1371, align 8
  br i1 %1385, label %1390, label %1387

1387:                                             ; preds = %1380, %1376
  %1388 = phi i16* [ %1386, %1380 ], [ %1372, %1376 ]
  %1389 = getelementptr inbounds i16, i16* %1388, i64 1
  store i16* %1389, i16** %1371, align 8
  store i32 -1, i32* %75, align 8
  br label %2623

1390:                                             ; preds = %1380, %1369
  %1391 = phi i16* [ %1372, %1369 ], [ %1386, %1380 ]
  %1392 = load i16, i16* %1391, align 2
  %1393 = zext i16 %1392 to i32
  %1394 = getelementptr inbounds i16, i16* %1391, i64 1
  store i16* %1394, i16** %1371, align 8
  store i32 %1393, i32* %75, align 8
  %1395 = icmp eq i16 %1392, 61
  br i1 %1395, label %1396, label %2623

1396:                                             ; preds = %1390
  %1397 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %1398 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1397, i64 0, i32 2
  %1399 = load i16*, i16** %1398, align 8
  %1400 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1397, i64 0, i32 3
  %1401 = load i16*, i16** %1400, align 8
  %1402 = icmp ult i16* %1399, %1401
  br i1 %1402, label %1403, label %1406, !prof !4

1403:                                             ; preds = %1396
  %1404 = load i16, i16* %1399, align 2
  %1405 = zext i16 %1404 to i32
  br label %1420

1406:                                             ; preds = %1396
  %1407 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1397, i64 0, i32 6
  %1408 = load i8, i8* %1407, align 8, !range !2
  %1409 = icmp eq i8 %1408, 0
  br i1 %1409, label %1410, label %1420

1410:                                             ; preds = %1406
  %1411 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1397 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %1412 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1411, align 8
  %1413 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1412, i64 5
  %1414 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1413, align 8
  %1415 = tail call zeroext i1 %1414(%"class.v8::internal::Utf16CharacterStream"* %1397) #8
  %1416 = load i16*, i16** %1398, align 8
  br i1 %1415, label %1417, label %1420

1417:                                             ; preds = %1410
  %1418 = load i16, i16* %1416, align 2
  %1419 = zext i16 %1418 to i32
  br label %1420

1420:                                             ; preds = %1417, %1410, %1406, %1403
  %1421 = phi i16* [ %1399, %1403 ], [ %1416, %1417 ], [ %1399, %1406 ], [ %1416, %1410 ]
  %1422 = phi i32 [ %1405, %1403 ], [ %1419, %1417 ], [ -1, %1406 ], [ -1, %1410 ]
  %1423 = getelementptr inbounds i16, i16* %1421, i64 1
  store i16* %1423, i16** %1398, align 8
  store i32 %1422, i32* %75, align 8
  br label %2623

1424:                                             ; preds = %1364
  %1425 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %1426 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1425, i64 0, i32 2
  %1427 = load i16*, i16** %1426, align 8
  %1428 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1425, i64 0, i32 3
  %1429 = load i16*, i16** %1428, align 8
  %1430 = icmp ult i16* %1427, %1429
  br i1 %1430, label %1431, label %1434, !prof !4

1431:                                             ; preds = %1424
  %1432 = load i16, i16* %1427, align 2
  %1433 = zext i16 %1432 to i32
  br label %1448

1434:                                             ; preds = %1424
  %1435 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1425, i64 0, i32 6
  %1436 = load i8, i8* %1435, align 8, !range !2
  %1437 = icmp eq i8 %1436, 0
  br i1 %1437, label %1438, label %1448

1438:                                             ; preds = %1434
  %1439 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1425 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %1440 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1439, align 8
  %1441 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1440, i64 5
  %1442 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1441, align 8
  %1443 = tail call zeroext i1 %1442(%"class.v8::internal::Utf16CharacterStream"* %1425) #8
  %1444 = load i16*, i16** %1426, align 8
  br i1 %1443, label %1445, label %1448

1445:                                             ; preds = %1438
  %1446 = load i16, i16* %1444, align 2
  %1447 = zext i16 %1446 to i32
  br label %1448

1448:                                             ; preds = %1445, %1438, %1434, %1431
  %1449 = phi i16* [ %1427, %1431 ], [ %1444, %1445 ], [ %1427, %1434 ], [ %1444, %1438 ]
  %1450 = phi i32 [ %1433, %1431 ], [ %1447, %1445 ], [ -1, %1434 ], [ -1, %1438 ]
  %1451 = getelementptr inbounds i16, i16* %1449, i64 1
  store i16* %1451, i16** %1426, align 8
  store i32 %1450, i32* %75, align 8
  br label %2623

1452:                                             ; preds = %100
  %1453 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %1454 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1453, i64 0, i32 2
  %1455 = load i16*, i16** %1454, align 8
  %1456 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1453, i64 0, i32 3
  %1457 = load i16*, i16** %1456, align 8
  %1458 = icmp ult i16* %1455, %1457
  br i1 %1458, label %1473, label %1459, !prof !4

1459:                                             ; preds = %1452
  %1460 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1453, i64 0, i32 6
  %1461 = load i8, i8* %1460, align 8, !range !2
  %1462 = icmp eq i8 %1461, 0
  br i1 %1462, label %1463, label %1470

1463:                                             ; preds = %1459
  %1464 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1453 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %1465 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1464, align 8
  %1466 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1465, i64 5
  %1467 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1466, align 8
  %1468 = tail call zeroext i1 %1467(%"class.v8::internal::Utf16CharacterStream"* %1453) #8
  %1469 = load i16*, i16** %1454, align 8
  br i1 %1468, label %1473, label %1470

1470:                                             ; preds = %1463, %1459
  %1471 = phi i16* [ %1469, %1463 ], [ %1455, %1459 ]
  %1472 = getelementptr inbounds i16, i16* %1471, i64 1
  store i16* %1472, i16** %1454, align 8
  store i32 -1, i32* %75, align 8
  br label %2623

1473:                                             ; preds = %1463, %1452
  %1474 = phi i16* [ %1455, %1452 ], [ %1469, %1463 ]
  %1475 = load i16, i16* %1474, align 2
  %1476 = zext i16 %1475 to i32
  %1477 = getelementptr inbounds i16, i16* %1474, i64 1
  store i16* %1477, i16** %1454, align 8
  store i32 %1476, i32* %75, align 8
  switch i16 %1475, label %2623 [
    i16 124, label %1478
    i16 61, label %1533
  ]

1478:                                             ; preds = %1473
  %1479 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %1480 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1479, i64 0, i32 2
  %1481 = load i16*, i16** %1480, align 8
  %1482 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1479, i64 0, i32 3
  %1483 = load i16*, i16** %1482, align 8
  %1484 = icmp ult i16* %1481, %1483
  br i1 %1484, label %1499, label %1485, !prof !4

1485:                                             ; preds = %1478
  %1486 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1479, i64 0, i32 6
  %1487 = load i8, i8* %1486, align 8, !range !2
  %1488 = icmp eq i8 %1487, 0
  br i1 %1488, label %1489, label %1496

1489:                                             ; preds = %1485
  %1490 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1479 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %1491 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1490, align 8
  %1492 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1491, i64 5
  %1493 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1492, align 8
  %1494 = tail call zeroext i1 %1493(%"class.v8::internal::Utf16CharacterStream"* %1479) #8
  %1495 = load i16*, i16** %1480, align 8
  br i1 %1494, label %1499, label %1496

1496:                                             ; preds = %1489, %1485
  %1497 = phi i16* [ %1495, %1489 ], [ %1481, %1485 ]
  %1498 = getelementptr inbounds i16, i16* %1497, i64 1
  store i16* %1498, i16** %1480, align 8
  store i32 -1, i32* %75, align 8
  br label %2623

1499:                                             ; preds = %1489, %1478
  %1500 = phi i16* [ %1481, %1478 ], [ %1495, %1489 ]
  %1501 = load i16, i16* %1500, align 2
  %1502 = zext i16 %1501 to i32
  %1503 = getelementptr inbounds i16, i16* %1500, i64 1
  store i16* %1503, i16** %1480, align 8
  store i32 %1502, i32* %75, align 8
  %1504 = icmp eq i16 %1501, 61
  br i1 %1504, label %1505, label %2623

1505:                                             ; preds = %1499
  %1506 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %1507 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1506, i64 0, i32 2
  %1508 = load i16*, i16** %1507, align 8
  %1509 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1506, i64 0, i32 3
  %1510 = load i16*, i16** %1509, align 8
  %1511 = icmp ult i16* %1508, %1510
  br i1 %1511, label %1512, label %1515, !prof !4

1512:                                             ; preds = %1505
  %1513 = load i16, i16* %1508, align 2
  %1514 = zext i16 %1513 to i32
  br label %1529

1515:                                             ; preds = %1505
  %1516 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1506, i64 0, i32 6
  %1517 = load i8, i8* %1516, align 8, !range !2
  %1518 = icmp eq i8 %1517, 0
  br i1 %1518, label %1519, label %1529

1519:                                             ; preds = %1515
  %1520 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1506 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %1521 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1520, align 8
  %1522 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1521, i64 5
  %1523 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1522, align 8
  %1524 = tail call zeroext i1 %1523(%"class.v8::internal::Utf16CharacterStream"* %1506) #8
  %1525 = load i16*, i16** %1507, align 8
  br i1 %1524, label %1526, label %1529

1526:                                             ; preds = %1519
  %1527 = load i16, i16* %1525, align 2
  %1528 = zext i16 %1527 to i32
  br label %1529

1529:                                             ; preds = %1526, %1519, %1515, %1512
  %1530 = phi i16* [ %1508, %1512 ], [ %1525, %1526 ], [ %1508, %1515 ], [ %1525, %1519 ]
  %1531 = phi i32 [ %1514, %1512 ], [ %1528, %1526 ], [ -1, %1515 ], [ -1, %1519 ]
  %1532 = getelementptr inbounds i16, i16* %1530, i64 1
  store i16* %1532, i16** %1507, align 8
  store i32 %1531, i32* %75, align 8
  br label %2623

1533:                                             ; preds = %1473
  %1534 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %1535 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1534, i64 0, i32 2
  %1536 = load i16*, i16** %1535, align 8
  %1537 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1534, i64 0, i32 3
  %1538 = load i16*, i16** %1537, align 8
  %1539 = icmp ult i16* %1536, %1538
  br i1 %1539, label %1540, label %1543, !prof !4

1540:                                             ; preds = %1533
  %1541 = load i16, i16* %1536, align 2
  %1542 = zext i16 %1541 to i32
  br label %1557

1543:                                             ; preds = %1533
  %1544 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1534, i64 0, i32 6
  %1545 = load i8, i8* %1544, align 8, !range !2
  %1546 = icmp eq i8 %1545, 0
  br i1 %1546, label %1547, label %1557

1547:                                             ; preds = %1543
  %1548 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1534 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %1549 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1548, align 8
  %1550 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1549, i64 5
  %1551 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1550, align 8
  %1552 = tail call zeroext i1 %1551(%"class.v8::internal::Utf16CharacterStream"* %1534) #8
  %1553 = load i16*, i16** %1535, align 8
  br i1 %1552, label %1554, label %1557

1554:                                             ; preds = %1547
  %1555 = load i16, i16* %1553, align 2
  %1556 = zext i16 %1555 to i32
  br label %1557

1557:                                             ; preds = %1554, %1547, %1543, %1540
  %1558 = phi i16* [ %1536, %1540 ], [ %1553, %1554 ], [ %1536, %1543 ], [ %1553, %1547 ]
  %1559 = phi i32 [ %1542, %1540 ], [ %1556, %1554 ], [ -1, %1543 ], [ -1, %1547 ]
  %1560 = getelementptr inbounds i16, i16* %1558, i64 1
  store i16* %1560, i16** %1535, align 8
  store i32 %1559, i32* %75, align 8
  br label %2623

1561:                                             ; preds = %100
  %1562 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %1563 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1562, i64 0, i32 2
  %1564 = load i16*, i16** %1563, align 8
  %1565 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1562, i64 0, i32 3
  %1566 = load i16*, i16** %1565, align 8
  %1567 = icmp ult i16* %1564, %1566
  br i1 %1567, label %1582, label %1568, !prof !4

1568:                                             ; preds = %1561
  %1569 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1562, i64 0, i32 6
  %1570 = load i8, i8* %1569, align 8, !range !2
  %1571 = icmp eq i8 %1570, 0
  br i1 %1571, label %1572, label %1579

1572:                                             ; preds = %1568
  %1573 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1562 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %1574 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1573, align 8
  %1575 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1574, i64 5
  %1576 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1575, align 8
  %1577 = tail call zeroext i1 %1576(%"class.v8::internal::Utf16CharacterStream"* %1562) #8
  %1578 = load i16*, i16** %1563, align 8
  br i1 %1577, label %1582, label %1579

1579:                                             ; preds = %1572, %1568
  %1580 = phi i16* [ %1578, %1572 ], [ %1564, %1568 ]
  %1581 = getelementptr inbounds i16, i16* %1580, i64 1
  store i16* %1581, i16** %1563, align 8
  store i32 -1, i32* %75, align 8
  br label %2623

1582:                                             ; preds = %1572, %1561
  %1583 = phi i16* [ %1564, %1561 ], [ %1578, %1572 ]
  %1584 = load i16, i16* %1583, align 2
  %1585 = zext i16 %1584 to i32
  %1586 = getelementptr inbounds i16, i16* %1583, i64 1
  store i16* %1586, i16** %1563, align 8
  store i32 %1585, i32* %75, align 8
  %1587 = icmp eq i16 %1584, 61
  br i1 %1587, label %1588, label %2623

1588:                                             ; preds = %1582
  %1589 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %1590 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1589, i64 0, i32 2
  %1591 = load i16*, i16** %1590, align 8
  %1592 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1589, i64 0, i32 3
  %1593 = load i16*, i16** %1592, align 8
  %1594 = icmp ult i16* %1591, %1593
  br i1 %1594, label %1595, label %1598, !prof !4

1595:                                             ; preds = %1588
  %1596 = load i16, i16* %1591, align 2
  %1597 = zext i16 %1596 to i32
  br label %1612

1598:                                             ; preds = %1588
  %1599 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1589, i64 0, i32 6
  %1600 = load i8, i8* %1599, align 8, !range !2
  %1601 = icmp eq i8 %1600, 0
  br i1 %1601, label %1602, label %1612

1602:                                             ; preds = %1598
  %1603 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1589 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %1604 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1603, align 8
  %1605 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1604, i64 5
  %1606 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1605, align 8
  %1607 = tail call zeroext i1 %1606(%"class.v8::internal::Utf16CharacterStream"* %1589) #8
  %1608 = load i16*, i16** %1590, align 8
  br i1 %1607, label %1609, label %1612

1609:                                             ; preds = %1602
  %1610 = load i16, i16* %1608, align 2
  %1611 = zext i16 %1610 to i32
  br label %1612

1612:                                             ; preds = %1609, %1602, %1598, %1595
  %1613 = phi i16* [ %1591, %1595 ], [ %1608, %1609 ], [ %1591, %1598 ], [ %1608, %1602 ]
  %1614 = phi i32 [ %1597, %1595 ], [ %1611, %1609 ], [ -1, %1598 ], [ -1, %1602 ]
  %1615 = getelementptr inbounds i16, i16* %1613, i64 1
  store i16* %1615, i16** %1590, align 8
  store i32 %1614, i32* %75, align 8
  br label %2623

1616:                                             ; preds = %100
  %1617 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %1618 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1617, i64 0, i32 2
  %1619 = load i16*, i16** %1618, align 8
  %1620 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1617, i64 0, i32 3
  %1621 = load i16*, i16** %1620, align 8
  %1622 = icmp ult i16* %1619, %1621
  br i1 %1622, label %1637, label %1623, !prof !4

1623:                                             ; preds = %1616
  %1624 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1617, i64 0, i32 6
  %1625 = load i8, i8* %1624, align 8, !range !2
  %1626 = icmp eq i8 %1625, 0
  br i1 %1626, label %1627, label %1634

1627:                                             ; preds = %1623
  %1628 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1617 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %1629 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1628, align 8
  %1630 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1629, i64 5
  %1631 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1630, align 8
  %1632 = tail call zeroext i1 %1631(%"class.v8::internal::Utf16CharacterStream"* %1617) #8
  %1633 = load i16*, i16** %1618, align 8
  br i1 %1632, label %1637, label %1634

1634:                                             ; preds = %1627, %1623
  %1635 = phi i16* [ %1633, %1627 ], [ %1619, %1623 ]
  %1636 = getelementptr inbounds i16, i16* %1635, i64 1
  store i16* %1636, i16** %1618, align 8
  store i32 -1, i32* %75, align 8
  br label %2623

1637:                                             ; preds = %1627, %1616
  %1638 = phi i16* [ %1619, %1616 ], [ %1633, %1627 ]
  %1639 = load i16, i16* %1638, align 2
  %1640 = zext i16 %1639 to i32
  %1641 = getelementptr inbounds i16, i16* %1638, i64 1
  store i16* %1641, i16** %1618, align 8
  store i32 %1640, i32* %75, align 8
  %1642 = add nsw i32 %1640, -48
  %1643 = icmp ult i32 %1642, 10
  br i1 %1643, label %1644, label %1646

1644:                                             ; preds = %1637
  %1645 = tail call zeroext i8 @_ZN2v88internal7Scanner10ScanNumberEb(%"class.v8::internal::Scanner"* %0, i1 zeroext true) #8
  br label %2623

1646:                                             ; preds = %1637
  %1647 = icmp eq i16 %1639, 46
  br i1 %1647, label %1648, label %2623

1648:                                             ; preds = %1646
  %1649 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %1650 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1649, i64 0, i32 2
  %1651 = load i16*, i16** %1650, align 8
  %1652 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1649, i64 0, i32 3
  %1653 = load i16*, i16** %1652, align 8
  %1654 = icmp ult i16* %1651, %1653
  br i1 %1654, label %1667, label %1655, !prof !4

1655:                                             ; preds = %1648
  %1656 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1649, i64 0, i32 6
  %1657 = load i8, i8* %1656, align 8, !range !2
  %1658 = icmp eq i8 %1657, 0
  br i1 %1658, label %1659, label %2623

1659:                                             ; preds = %1655
  %1660 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1649 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %1661 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1660, align 8
  %1662 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1661, i64 5
  %1663 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1662, align 8
  %1664 = tail call zeroext i1 %1663(%"class.v8::internal::Utf16CharacterStream"* %1649) #8
  br i1 %1664, label %1665, label %2623

1665:                                             ; preds = %1659
  %1666 = load i16*, i16** %1650, align 8
  br label %1667

1667:                                             ; preds = %1665, %1648
  %1668 = phi i16* [ %1666, %1665 ], [ %1651, %1648 ]
  %1669 = load i16, i16* %1668, align 2
  %1670 = icmp eq i16 %1669, 46
  br i1 %1670, label %1671, label %2623

1671:                                             ; preds = %1667
  %1672 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %1673 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1672, i64 0, i32 2
  %1674 = load i16*, i16** %1673, align 8
  %1675 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1672, i64 0, i32 3
  %1676 = load i16*, i16** %1675, align 8
  %1677 = icmp ult i16* %1674, %1676
  br i1 %1677, label %1678, label %1681, !prof !4

1678:                                             ; preds = %1671
  %1679 = load i16, i16* %1674, align 2
  %1680 = zext i16 %1679 to i32
  br label %1695

1681:                                             ; preds = %1671
  %1682 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1672, i64 0, i32 6
  %1683 = load i8, i8* %1682, align 8, !range !2
  %1684 = icmp eq i8 %1683, 0
  br i1 %1684, label %1685, label %1695

1685:                                             ; preds = %1681
  %1686 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1672 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %1687 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1686, align 8
  %1688 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1687, i64 5
  %1689 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1688, align 8
  %1690 = tail call zeroext i1 %1689(%"class.v8::internal::Utf16CharacterStream"* %1672) #8
  %1691 = load i16*, i16** %1673, align 8
  br i1 %1690, label %1692, label %1695

1692:                                             ; preds = %1685
  %1693 = load i16, i16* %1691, align 2
  %1694 = zext i16 %1693 to i32
  br label %1695

1695:                                             ; preds = %1692, %1685, %1681, %1678
  %1696 = phi i16* [ %1674, %1678 ], [ %1691, %1692 ], [ %1674, %1681 ], [ %1691, %1685 ]
  %1697 = phi i32 [ %1680, %1678 ], [ %1694, %1692 ], [ -1, %1681 ], [ -1, %1685 ]
  %1698 = getelementptr inbounds i16, i16* %1696, i64 1
  store i16* %1698, i16** %1673, align 8
  store i32 %1697, i32* %75, align 8
  %1699 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %1700 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1699, i64 0, i32 2
  %1701 = load i16*, i16** %1700, align 8
  %1702 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1699, i64 0, i32 3
  %1703 = load i16*, i16** %1702, align 8
  %1704 = icmp ult i16* %1701, %1703
  br i1 %1704, label %1705, label %1708, !prof !4

1705:                                             ; preds = %1695
  %1706 = load i16, i16* %1701, align 2
  %1707 = zext i16 %1706 to i32
  br label %1722

1708:                                             ; preds = %1695
  %1709 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1699, i64 0, i32 6
  %1710 = load i8, i8* %1709, align 8, !range !2
  %1711 = icmp eq i8 %1710, 0
  br i1 %1711, label %1712, label %1722

1712:                                             ; preds = %1708
  %1713 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1699 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %1714 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1713, align 8
  %1715 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1714, i64 5
  %1716 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1715, align 8
  %1717 = tail call zeroext i1 %1716(%"class.v8::internal::Utf16CharacterStream"* %1699) #8
  %1718 = load i16*, i16** %1700, align 8
  br i1 %1717, label %1719, label %1722

1719:                                             ; preds = %1712
  %1720 = load i16, i16* %1718, align 2
  %1721 = zext i16 %1720 to i32
  br label %1722

1722:                                             ; preds = %1719, %1712, %1708, %1705
  %1723 = phi i16* [ %1701, %1705 ], [ %1718, %1719 ], [ %1701, %1708 ], [ %1718, %1712 ]
  %1724 = phi i32 [ %1707, %1705 ], [ %1721, %1719 ], [ -1, %1708 ], [ -1, %1712 ]
  %1725 = getelementptr inbounds i16, i16* %1723, i64 1
  store i16* %1725, i16** %1700, align 8
  store i32 %1724, i32* %75, align 8
  br label %2623

1726:                                             ; preds = %100
  %1727 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %1728 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1727, i64 0, i32 2
  %1729 = load i16*, i16** %1728, align 8
  %1730 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1727, i64 0, i32 3
  %1731 = load i16*, i16** %1730, align 8
  %1732 = icmp ult i16* %1729, %1731
  br i1 %1732, label %1733, label %1736, !prof !4

1733:                                             ; preds = %1726
  %1734 = load i16, i16* %1729, align 2
  %1735 = zext i16 %1734 to i32
  br label %1750

1736:                                             ; preds = %1726
  %1737 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1727, i64 0, i32 6
  %1738 = load i8, i8* %1737, align 8, !range !2
  %1739 = icmp eq i8 %1738, 0
  br i1 %1739, label %1740, label %1750

1740:                                             ; preds = %1736
  %1741 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1727 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %1742 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1741, align 8
  %1743 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1742, i64 5
  %1744 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1743, align 8
  %1745 = tail call zeroext i1 %1744(%"class.v8::internal::Utf16CharacterStream"* %1727) #8
  %1746 = load i16*, i16** %1728, align 8
  br i1 %1745, label %1747, label %1750

1747:                                             ; preds = %1740
  %1748 = load i16, i16* %1746, align 2
  %1749 = zext i16 %1748 to i32
  br label %1750

1750:                                             ; preds = %1747, %1740, %1736, %1733
  %1751 = phi i16* [ %1729, %1733 ], [ %1746, %1747 ], [ %1729, %1736 ], [ %1746, %1740 ]
  %1752 = phi i32 [ %1735, %1733 ], [ %1749, %1747 ], [ -1, %1736 ], [ -1, %1740 ]
  %1753 = getelementptr inbounds i16, i16* %1751, i64 1
  store i16* %1753, i16** %1728, align 8
  store i32 %1752, i32* %75, align 8
  %1754 = tail call zeroext i8 @_ZN2v88internal7Scanner16ScanTemplateSpanEv(%"class.v8::internal::Scanner"* %0) #8
  br label %2623

1755:                                             ; preds = %100
  %1756 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %1757 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1756, i64 0, i32 4
  %1758 = load i64, i64* %1757, align 8
  %1759 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1756, i64 0, i32 2
  %1760 = bitcast i16** %1759 to i64*
  %1761 = load i64, i64* %1760, align 8
  %1762 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1756, i64 0, i32 1
  %1763 = bitcast i16** %1762 to i64*
  %1764 = load i64, i64* %1763, align 8
  %1765 = sub i64 %1761, %1764
  %1766 = lshr exact i64 %1765, 1
  %1767 = add i64 %1766, %1758
  %1768 = trunc i64 %1767 to i32
  %1769 = icmp eq i32 %1768, 1
  %1770 = inttoptr i64 %1761 to i16*
  br i1 %1769, label %1771, label %1829

1771:                                             ; preds = %1755
  %1772 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1756, i64 0, i32 3
  %1773 = load i16*, i16** %1772, align 8
  %1774 = icmp ugt i16* %1773, %1770
  br i1 %1774, label %1787, label %1775, !prof !4

1775:                                             ; preds = %1771
  %1776 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1756, i64 0, i32 6
  %1777 = load i8, i8* %1776, align 8, !range !2
  %1778 = icmp eq i8 %1777, 0
  br i1 %1778, label %1779, label %1829

1779:                                             ; preds = %1775
  %1780 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1756 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %1781 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1780, align 8
  %1782 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1781, i64 5
  %1783 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1782, align 8
  %1784 = tail call zeroext i1 %1783(%"class.v8::internal::Utf16CharacterStream"* %1756) #8
  br i1 %1784, label %1785, label %1829

1785:                                             ; preds = %1779
  %1786 = load i16*, i16** %1759, align 8
  br label %1787

1787:                                             ; preds = %1785, %1771
  %1788 = phi i16* [ %1786, %1785 ], [ %1770, %1771 ]
  %1789 = load i16, i16* %1788, align 2
  %1790 = icmp eq i16 %1789, 33
  br i1 %1790, label %1791, label %1829

1791:                                             ; preds = %1787
  %1792 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %1793 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1792, i64 0, i32 2
  %1794 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1792, i64 0, i32 3
  %1795 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1792, i64 0, i32 6
  %1796 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1792 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  br label %1797

1797:                                             ; preds = %1813, %1791
  %1798 = load i16*, i16** %1793, align 8
  %1799 = load i16*, i16** %1794, align 8
  %1800 = icmp eq i16* %1798, %1799
  br i1 %1800, label %1807, label %1801

1801:                                             ; preds = %1797, %1804
  %1802 = phi i16* [ %1805, %1804 ], [ %1798, %1797 ]
  %1803 = load i16, i16* %1802, align 2
  switch i16 %1803, label %1804 [
    i16 8232, label %1807
    i16 13, label %1807
    i16 10, label %1807
    i16 8233, label %1807
  ]

1804:                                             ; preds = %1801
  %1805 = getelementptr inbounds i16, i16* %1802, i64 1
  %1806 = icmp eq i16* %1805, %1799
  br i1 %1806, label %1810, label %1801

1807:                                             ; preds = %1801, %1801, %1801, %1801, %1797
  %1808 = phi i16* [ %1798, %1797 ], [ %1802, %1801 ], [ %1802, %1801 ], [ %1802, %1801 ], [ %1802, %1801 ]
  %1809 = icmp eq i16* %1808, %1799
  br i1 %1809, label %1810, label %1823

1810:                                             ; preds = %1804, %1807
  store i16* %1799, i16** %1793, align 8
  %1811 = load i8, i8* %1795, align 8, !range !2
  %1812 = icmp eq i8 %1811, 0
  br i1 %1812, label %1813, label %1820

1813:                                             ; preds = %1810
  %1814 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1796, align 8
  %1815 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1814, i64 5
  %1816 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1815, align 8
  %1817 = tail call zeroext i1 %1816(%"class.v8::internal::Utf16CharacterStream"* %1792) #8
  br i1 %1817, label %1797, label %1818

1818:                                             ; preds = %1813
  %1819 = load i16*, i16** %1793, align 8
  br label %1820

1820:                                             ; preds = %1810, %1818
  %1821 = phi i16* [ %1819, %1818 ], [ %1799, %1810 ]
  %1822 = getelementptr inbounds i16, i16* %1821, i64 1
  store i16* %1822, i16** %1793, align 8
  br label %1827

1823:                                             ; preds = %1807
  %1824 = getelementptr inbounds i16, i16* %1808, i64 1
  store i16* %1824, i16** %1793, align 8
  %1825 = load i16, i16* %1808, align 2
  %1826 = zext i16 %1825 to i32
  br label %1827

1827:                                             ; preds = %1823, %1820
  %1828 = phi i32 [ %1826, %1823 ], [ -1, %1820 ]
  store i32 %1828, i32* %75, align 8
  br label %2621

1829:                                             ; preds = %1787, %1779, %1775, %1755
  %1830 = tail call zeroext i8 @_ZN2v88internal7Scanner15ScanPrivateNameEv(%"class.v8::internal::Scanner"* %0) #8
  br label %2623

1831:                                             ; preds = %100
  %1832 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %1833 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1832, i64 0, i32 4
  %1834 = load i64, i64* %1833, align 8
  %1835 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1832, i64 0, i32 2
  %1836 = bitcast i16** %1835 to i64*
  %1837 = load i64, i64* %1836, align 8
  %1838 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1832, i64 0, i32 1
  %1839 = bitcast i16** %1838 to i64*
  %1840 = load i64, i64* %1839, align 8
  %1841 = sub i64 %1837, %1840
  %1842 = lshr exact i64 %1841, 1
  %1843 = add i64 %1842, %1834
  %1844 = trunc i64 %1843 to i32
  br label %1845

1845:                                             ; preds = %1891, %1831
  %1846 = phi i32 [ %1893, %1891 ], [ %98, %1831 ]
  %1847 = icmp ult i32 %1846, 256
  br i1 %1847, label %1853, label %1848

1848:                                             ; preds = %1845
  %1849 = tail call zeroext i1 @_ZN2v88internal16IsWhiteSpaceSlowEj(i32 %1846) #8
  %1850 = and i32 %1846, -2
  %1851 = icmp eq i32 %1850, 8232
  %1852 = or i1 %1851, %1849
  br i1 %1852, label %1859, label %1895

1853:                                             ; preds = %1845
  %1854 = zext i32 %1846 to i64
  %1855 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN2v88internalL17kOneByteCharFlagsE, i64 0, i64 %1854
  %1856 = load i8, i8* %1855, align 1
  %1857 = and i8 %1856, 8
  %1858 = icmp eq i8 %1857, 0
  br i1 %1858, label %1895, label %1859

1859:                                             ; preds = %1853, %1848
  %1860 = load %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"** %76, align 8
  %1861 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %1860, i64 0, i32 8
  %1862 = load i8, i8* %1861, align 4, !range !2
  %1863 = icmp eq i8 %1862, 0
  br i1 %1863, label %1864, label %1867

1864:                                             ; preds = %1859
  %1865 = load i32, i32* %75, align 8
  switch i32 %1865, label %1867 [
    i32 8232, label %1866
    i32 13, label %1866
    i32 10, label %1866
    i32 8233, label %1866
  ]

1866:                                             ; preds = %1864, %1864, %1864, %1864
  store i8 1, i8* %1861, align 4
  br label %1867

1867:                                             ; preds = %1866, %1864, %1859
  %1868 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %1869 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1868, i64 0, i32 2
  %1870 = load i16*, i16** %1869, align 8
  %1871 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1868, i64 0, i32 3
  %1872 = load i16*, i16** %1871, align 8
  %1873 = icmp ult i16* %1870, %1872
  br i1 %1873, label %1874, label %1877, !prof !4

1874:                                             ; preds = %1867
  %1875 = load i16, i16* %1870, align 2
  %1876 = zext i16 %1875 to i32
  br label %1891

1877:                                             ; preds = %1867
  %1878 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1868, i64 0, i32 6
  %1879 = load i8, i8* %1878, align 8, !range !2
  %1880 = icmp eq i8 %1879, 0
  br i1 %1880, label %1881, label %1891

1881:                                             ; preds = %1877
  %1882 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1868 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %1883 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1882, align 8
  %1884 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1883, i64 5
  %1885 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1884, align 8
  %1886 = tail call zeroext i1 %1885(%"class.v8::internal::Utf16CharacterStream"* %1868) #8
  %1887 = load i16*, i16** %1869, align 8
  br i1 %1886, label %1888, label %1891

1888:                                             ; preds = %1881
  %1889 = load i16, i16* %1887, align 2
  %1890 = zext i16 %1889 to i32
  br label %1891

1891:                                             ; preds = %1888, %1881, %1877, %1874
  %1892 = phi i16* [ %1870, %1874 ], [ %1887, %1888 ], [ %1870, %1877 ], [ %1887, %1881 ]
  %1893 = phi i32 [ %1876, %1874 ], [ %1890, %1888 ], [ -1, %1877 ], [ -1, %1881 ]
  %1894 = getelementptr inbounds i16, i16* %1892, i64 1
  store i16* %1894, i16** %1869, align 8
  store i32 %1893, i32* %75, align 8
  br label %1845

1895:                                             ; preds = %1853, %1848
  %1896 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %1897 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1896, i64 0, i32 4
  %1898 = load i64, i64* %1897, align 8
  %1899 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1896, i64 0, i32 2
  %1900 = bitcast i16** %1899 to i64*
  %1901 = load i64, i64* %1900, align 8
  %1902 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1896, i64 0, i32 1
  %1903 = bitcast i16** %1902 to i64*
  %1904 = load i64, i64* %1903, align 8
  %1905 = sub i64 %1901, %1904
  %1906 = lshr exact i64 %1905, 1
  %1907 = add i64 %1906, %1898
  %1908 = trunc i64 %1907 to i32
  %1909 = icmp eq i32 %1908, %1844
  br i1 %1909, label %2623, label %2621

1910:                                             ; preds = %100
  %1911 = tail call zeroext i8 @_ZN2v88internal7Scanner10ScanNumberEb(%"class.v8::internal::Scanner"* %0, i1 zeroext false) #8
  br label %2623

1912:                                             ; preds = %100
  %1913 = load %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"** %76, align 8
  %1914 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %1913, i64 0, i32 1, i32 1
  store i32 0, i32* %1914, align 8
  %1915 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %1913, i64 0, i32 1, i32 2
  store i8 1, i8* %1915, align 4
  %1916 = load i32, i32* %75, align 8
  %1917 = icmp ult i32 %1916, 128
  br i1 %1917, label %1918, label %2172, !prof !4

1918:                                             ; preds = %1912
  %1919 = icmp eq i32 %1916, 92
  br i1 %1919, label %2067, label %1920, !prof !3

1920:                                             ; preds = %1918
  %1921 = zext i32 %1916 to i64
  %1922 = getelementptr inbounds [128 x i8], [128 x i8]* @_ZN2v88internalL20character_scan_flagsE, i64 0, i64 %1921
  %1923 = load i8, i8* %1922, align 1
  %1924 = lshr i8 %1923, 1
  %1925 = trunc i32 %1916 to i8
  %1926 = load %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"** %76, align 8
  %1927 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %1926, i64 0, i32 1
  %1928 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %1926, i64 0, i32 1, i32 1
  %1929 = load i32, i32* %1928, align 8
  %1930 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %1926, i64 0, i32 1, i32 0, i32 1
  %1931 = load i64, i64* %1930, align 8
  %1932 = trunc i64 %1931 to i32
  %1933 = icmp slt i32 %1929, %1932
  br i1 %1933, label %1936, label %1934

1934:                                             ; preds = %1920
  tail call void @_ZN2v88internal13LiteralBuffer12ExpandBufferEv(%"class.v8::internal::LiteralBuffer"* %1927) #8
  %1935 = load i32, i32* %1928, align 8
  br label %1936

1936:                                             ; preds = %1934, %1920
  %1937 = phi i32 [ %1929, %1920 ], [ %1935, %1934 ]
  %1938 = sext i32 %1937 to i64
  %1939 = getelementptr inbounds %"class.v8::internal::LiteralBuffer", %"class.v8::internal::LiteralBuffer"* %1927, i64 0, i32 0, i32 0
  %1940 = load i8*, i8** %1939, align 8
  %1941 = getelementptr inbounds i8, i8* %1940, i64 %1938
  store i8 %1925, i8* %1941, align 1
  %1942 = load i32, i32* %1928, align 8
  %1943 = add nsw i32 %1942, 1
  store i32 %1943, i32* %1928, align 8
  %1944 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %1945 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1944, i64 0, i32 2
  %1946 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1944, i64 0, i32 3
  %1947 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1944, i64 0, i32 6
  %1948 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1944 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  br label %1949

1949:                                             ; preds = %1998, %1936
  %1950 = phi i8 [ %1924, %1936 ], [ %1991, %1998 ]
  %1951 = load i16*, i16** %1945, align 8
  %1952 = load i16*, i16** %1946, align 8
  %1953 = icmp eq i16* %1951, %1952
  br i1 %1953, label %1990, label %1954

1954:                                             ; preds = %1949, %1980
  %1955 = phi i8 [ %1965, %1980 ], [ %1950, %1949 ]
  %1956 = phi i16* [ %1988, %1980 ], [ %1951, %1949 ]
  %1957 = load i16, i16* %1956, align 2
  %1958 = icmp ugt i16 %1957, 127
  br i1 %1958, label %1959, label %1961, !prof !3

1959:                                             ; preds = %1954
  %1960 = or i8 %1955, 16
  br label %1990

1961:                                             ; preds = %1954
  %1962 = zext i16 %1957 to i64
  %1963 = getelementptr inbounds [128 x i8], [128 x i8]* @_ZN2v88internalL20character_scan_flagsE, i64 0, i64 %1962
  %1964 = load i8, i8* %1963, align 1
  %1965 = or i8 %1964, %1955
  %1966 = and i8 %1964, 1
  %1967 = icmp eq i8 %1966, 0
  br i1 %1967, label %1968, label %1990

1968:                                             ; preds = %1961
  %1969 = trunc i16 %1957 to i8
  %1970 = load %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"** %76, align 8
  %1971 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %1970, i64 0, i32 1
  %1972 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %1970, i64 0, i32 1, i32 1
  %1973 = load i32, i32* %1972, align 8
  %1974 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %1970, i64 0, i32 1, i32 0, i32 1
  %1975 = load i64, i64* %1974, align 8
  %1976 = trunc i64 %1975 to i32
  %1977 = icmp slt i32 %1973, %1976
  br i1 %1977, label %1980, label %1978

1978:                                             ; preds = %1968
  tail call void @_ZN2v88internal13LiteralBuffer12ExpandBufferEv(%"class.v8::internal::LiteralBuffer"* %1971) #8
  %1979 = load i32, i32* %1972, align 8
  br label %1980

1980:                                             ; preds = %1978, %1968
  %1981 = phi i32 [ %1973, %1968 ], [ %1979, %1978 ]
  %1982 = sext i32 %1981 to i64
  %1983 = getelementptr inbounds %"class.v8::internal::LiteralBuffer", %"class.v8::internal::LiteralBuffer"* %1971, i64 0, i32 0, i32 0
  %1984 = load i8*, i8** %1983, align 8
  %1985 = getelementptr inbounds i8, i8* %1984, i64 %1982
  store i8 %1969, i8* %1985, align 1
  %1986 = load i32, i32* %1972, align 8
  %1987 = add nsw i32 %1986, 1
  store i32 %1987, i32* %1972, align 8
  %1988 = getelementptr inbounds i16, i16* %1956, i64 1
  %1989 = icmp eq i16* %1988, %1952
  br i1 %1989, label %1990, label %1954

1990:                                             ; preds = %1980, %1961, %1959, %1949
  %1991 = phi i8 [ %1950, %1949 ], [ %1960, %1959 ], [ %1965, %1961 ], [ %1965, %1980 ]
  %1992 = phi i16* [ %1951, %1949 ], [ %1956, %1959 ], [ %1952, %1980 ], [ %1956, %1961 ]
  %1993 = load i16*, i16** %1946, align 8
  %1994 = icmp eq i16* %1992, %1993
  br i1 %1994, label %1995, label %2008

1995:                                             ; preds = %1990
  store i16* %1992, i16** %1945, align 8
  %1996 = load i8, i8* %1947, align 8, !range !2
  %1997 = icmp eq i8 %1996, 0
  br i1 %1997, label %1998, label %2005

1998:                                             ; preds = %1995
  %1999 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1948, align 8
  %2000 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1999, i64 5
  %2001 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %2000, align 8
  %2002 = tail call zeroext i1 %2001(%"class.v8::internal::Utf16CharacterStream"* %1944) #8
  br i1 %2002, label %1949, label %2003

2003:                                             ; preds = %1998
  %2004 = load i16*, i16** %1945, align 8
  br label %2005

2005:                                             ; preds = %1995, %2003
  %2006 = phi i16* [ %2004, %2003 ], [ %1992, %1995 ]
  %2007 = getelementptr inbounds i16, i16* %2006, i64 1
  store i16* %2007, i16** %1945, align 8
  br label %2012

2008:                                             ; preds = %1990
  %2009 = getelementptr inbounds i16, i16* %1992, i64 1
  store i16* %2009, i16** %1945, align 8
  %2010 = load i16, i16* %1992, align 2
  %2011 = zext i16 %2010 to i32
  br label %2012

2012:                                             ; preds = %2008, %2005
  %2013 = phi i32 [ %2011, %2008 ], [ -1, %2005 ]
  store i32 %2013, i32* %75, align 8
  %2014 = and i8 %1991, 16
  %2015 = icmp ne i8 %2014, 0
  %2016 = and i8 %1991, 2
  %2017 = icmp eq i8 %2016, 0
  %2018 = xor i1 %2017, true
  %2019 = or i1 %2015, %2018
  br i1 %2019, label %2064, label %2020, !prof !5

2020:                                             ; preds = %2012
  %2021 = load %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"** %76, align 8
  %2022 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %2021, i64 0, i32 1, i32 0, i32 0
  %2023 = load i8*, i8** %2022, align 8
  %2024 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %2021, i64 0, i32 1, i32 1
  %2025 = load i32, i32* %2024, align 8
  %2026 = add i32 %2025, -2
  %2027 = icmp ult i32 %2026, 9
  br i1 %2027, label %2028, label %2623

2028:                                             ; preds = %2020
  %2029 = getelementptr inbounds i8, i8* %2023, i64 1
  %2030 = load i8, i8* %2029, align 1
  %2031 = zext i8 %2030 to i64
  %2032 = getelementptr inbounds [128 x i8], [128 x i8]* @_ZZN2v88internal18PerfectKeywordHash4HashEPKciE11asso_values, i64 0, i64 %2031
  %2033 = load i8, i8* %2032, align 1
  %2034 = zext i8 %2033 to i32
  %2035 = add nuw nsw i32 %2025, %2034
  %2036 = load i8, i8* %2023, align 1
  %2037 = zext i8 %2036 to i64
  %2038 = getelementptr inbounds [128 x i8], [128 x i8]* @_ZZN2v88internal18PerfectKeywordHash4HashEPKciE11asso_values, i64 0, i64 %2037
  %2039 = load i8, i8* %2038, align 1
  %2040 = zext i8 %2039 to i32
  %2041 = add nuw nsw i32 %2035, %2040
  %2042 = and i32 %2041, 63
  %2043 = zext i32 %2042 to i64
  %2044 = getelementptr inbounds [64 x i8], [64 x i8]* bitcast (<{ [56 x i8], [8 x i8] }>* @_ZN2v88internalL26kPerfectKeywordLengthTableE to [64 x i8]*), i64 0, i64 %2043
  %2045 = load i8, i8* %2044, align 1
  %2046 = zext i8 %2045 to i32
  %2047 = icmp eq i32 %2025, %2046
  br i1 %2047, label %2048, label %2623

2048:                                             ; preds = %2028
  %2049 = getelementptr inbounds [64 x %"struct.v8::internal::PerfectKeywordHashTableEntry"], [64 x %"struct.v8::internal::PerfectKeywordHashTableEntry"]* @_ZN2v88internalL24kPerfectKeywordHashTableE, i64 0, i64 %2043, i32 0
  %2050 = load i8*, i8** %2049, align 16
  br label %2051

2051:                                             ; preds = %2056, %2048
  %2052 = phi i8* [ %2023, %2048 ], [ %2058, %2056 ]
  %2053 = phi i8* [ %2050, %2048 ], [ %2057, %2056 ]
  %2054 = load i8, i8* %2053, align 1
  %2055 = icmp eq i8 %2054, 0
  br i1 %2055, label %2061, label %2056

2056:                                             ; preds = %2051
  %2057 = getelementptr inbounds i8, i8* %2053, i64 1
  %2058 = getelementptr inbounds i8, i8* %2052, i64 1
  %2059 = load i8, i8* %2052, align 1
  %2060 = icmp eq i8 %2054, %2059
  br i1 %2060, label %2051, label %2623

2061:                                             ; preds = %2051
  %2062 = getelementptr inbounds [64 x %"struct.v8::internal::PerfectKeywordHashTableEntry"], [64 x %"struct.v8::internal::PerfectKeywordHashTableEntry"]* @_ZN2v88internalL24kPerfectKeywordHashTableE, i64 0, i64 %2043, i32 1
  %2063 = load i8, i8* %2062, align 8
  br label %2623

2064:                                             ; preds = %2012
  %2065 = xor i1 %2015, true
  %2066 = or i1 %2017, %2065
  br i1 %2015, label %2172, label %2623

2067:                                             ; preds = %1918
  %2068 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %2069 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2068, i64 0, i32 2
  %2070 = load i16*, i16** %2069, align 8
  %2071 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2068, i64 0, i32 3
  %2072 = load i16*, i16** %2071, align 8
  %2073 = icmp ult i16* %2070, %2072
  br i1 %2073, label %2088, label %2074, !prof !4

2074:                                             ; preds = %2067
  %2075 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2068, i64 0, i32 6
  %2076 = load i8, i8* %2075, align 8, !range !2
  %2077 = icmp eq i8 %2076, 0
  br i1 %2077, label %2078, label %2085

2078:                                             ; preds = %2074
  %2079 = bitcast %"class.v8::internal::Utf16CharacterStream"* %2068 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %2080 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %2079, align 8
  %2081 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %2080, i64 5
  %2082 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %2081, align 8
  %2083 = tail call zeroext i1 %2082(%"class.v8::internal::Utf16CharacterStream"* %2068) #8
  %2084 = load i16*, i16** %2069, align 8
  br i1 %2083, label %2088, label %2085

2085:                                             ; preds = %2078, %2074
  %2086 = phi i16* [ %2084, %2078 ], [ %2070, %2074 ]
  %2087 = getelementptr inbounds i16, i16* %2086, i64 1
  store i16* %2087, i16** %2069, align 8
  store i32 -1, i32* %75, align 8
  br label %2132

2088:                                             ; preds = %2078, %2067
  %2089 = phi i16* [ %2070, %2067 ], [ %2084, %2078 ]
  %2090 = load i16, i16* %2089, align 2
  %2091 = zext i16 %2090 to i32
  %2092 = getelementptr inbounds i16, i16* %2089, i64 1
  store i16* %2092, i16** %2069, align 8
  store i32 %2091, i32* %75, align 8
  %2093 = icmp eq i16 %2090, 117
  br i1 %2093, label %2094, label %2132

2094:                                             ; preds = %2088
  %2095 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %2096 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2095, i64 0, i32 2
  %2097 = load i16*, i16** %2096, align 8
  %2098 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2095, i64 0, i32 3
  %2099 = load i16*, i16** %2098, align 8
  %2100 = icmp ult i16* %2097, %2099
  br i1 %2100, label %2101, label %2104, !prof !4

2101:                                             ; preds = %2094
  %2102 = load i16, i16* %2097, align 2
  %2103 = zext i16 %2102 to i32
  br label %2118

2104:                                             ; preds = %2094
  %2105 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2095, i64 0, i32 6
  %2106 = load i8, i8* %2105, align 8, !range !2
  %2107 = icmp eq i8 %2106, 0
  br i1 %2107, label %2108, label %2118

2108:                                             ; preds = %2104
  %2109 = bitcast %"class.v8::internal::Utf16CharacterStream"* %2095 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %2110 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %2109, align 8
  %2111 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %2110, i64 5
  %2112 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %2111, align 8
  %2113 = tail call zeroext i1 %2112(%"class.v8::internal::Utf16CharacterStream"* %2095) #8
  %2114 = load i16*, i16** %2096, align 8
  br i1 %2113, label %2115, label %2118

2115:                                             ; preds = %2108
  %2116 = load i16, i16* %2114, align 2
  %2117 = zext i16 %2116 to i32
  br label %2118

2118:                                             ; preds = %2115, %2108, %2104, %2101
  %2119 = phi i16* [ %2097, %2101 ], [ %2114, %2115 ], [ %2097, %2104 ], [ %2114, %2108 ]
  %2120 = phi i32 [ %2103, %2101 ], [ %2117, %2115 ], [ -1, %2104 ], [ -1, %2108 ]
  %2121 = getelementptr inbounds i16, i16* %2119, i64 1
  store i16* %2121, i16** %2096, align 8
  store i32 %2120, i32* %75, align 8
  %2122 = tail call i32 @_ZN2v88internal7Scanner17ScanUnicodeEscapeILb0EEEjv(%"class.v8::internal::Scanner"* %0) #8
  %2123 = icmp eq i32 %2122, 92
  br i1 %2123, label %2623, label %2124

2124:                                             ; preds = %2118
  %2125 = icmp ult i32 %2122, 256
  br i1 %2125, label %2126, label %2132

2126:                                             ; preds = %2124
  %2127 = zext i32 %2122 to i64
  %2128 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN2v88internalL17kOneByteCharFlagsE, i64 0, i64 %2127
  %2129 = load i8, i8* %2128, align 1
  %2130 = and i8 %2129, 1
  %2131 = icmp eq i8 %2130, 0
  br i1 %2131, label %2623, label %2135

2132:                                             ; preds = %2124, %2088, %2085
  %2133 = phi i32 [ %2122, %2124 ], [ -1, %2088 ], [ -1, %2085 ]
  %2134 = tail call zeroext i1 @_ZN2v88internal21IsIdentifierStartSlowEj(i32 %2133) #8
  br i1 %2134, label %2135, label %2623

2135:                                             ; preds = %2132, %2126
  %2136 = phi i32 [ %2122, %2126 ], [ %2133, %2132 ]
  %2137 = phi i1 [ true, %2126 ], [ false, %2132 ]
  %2138 = load %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"** %76, align 8
  %2139 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %2138, i64 0, i32 1
  %2140 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %2138, i64 0, i32 1, i32 2
  %2141 = load i8, i8* %2140, align 4, !range !2
  %2142 = icmp eq i8 %2141, 0
  br i1 %2142, label %2163, label %2143

2143:                                             ; preds = %2135
  br i1 %2137, label %2144, label %2162

2144:                                             ; preds = %2143
  %2145 = trunc i32 %2136 to i8
  %2146 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %2138, i64 0, i32 1, i32 1
  %2147 = load i32, i32* %2146, align 8
  %2148 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %2138, i64 0, i32 1, i32 0, i32 1
  %2149 = load i64, i64* %2148, align 8
  %2150 = trunc i64 %2149 to i32
  %2151 = icmp slt i32 %2147, %2150
  br i1 %2151, label %2154, label %2152

2152:                                             ; preds = %2144
  tail call void @_ZN2v88internal13LiteralBuffer12ExpandBufferEv(%"class.v8::internal::LiteralBuffer"* %2139) #8
  %2153 = load i32, i32* %2146, align 8
  br label %2154

2154:                                             ; preds = %2152, %2144
  %2155 = phi i32 [ %2147, %2144 ], [ %2153, %2152 ]
  %2156 = sext i32 %2155 to i64
  %2157 = getelementptr inbounds %"class.v8::internal::LiteralBuffer", %"class.v8::internal::LiteralBuffer"* %2139, i64 0, i32 0, i32 0
  %2158 = load i8*, i8** %2157, align 8
  %2159 = getelementptr inbounds i8, i8* %2158, i64 %2156
  store i8 %2145, i8* %2159, align 1
  %2160 = load i32, i32* %2146, align 8
  %2161 = add nsw i32 %2160, 1
  store i32 %2161, i32* %2146, align 8
  br label %2164

2162:                                             ; preds = %2143
  tail call void @_ZN2v88internal13LiteralBuffer16ConvertToTwoByteEv(%"class.v8::internal::LiteralBuffer"* %2139) #8
  br label %2163

2163:                                             ; preds = %2162, %2135
  tail call void @_ZN2v88internal13LiteralBuffer14AddTwoByteCharEj(%"class.v8::internal::LiteralBuffer"* %2139, i32 %2136) #8
  br label %2164

2164:                                             ; preds = %2163, %2154
  %2165 = icmp ult i32 %2136, 128
  br i1 %2165, label %2166, label %2172

2166:                                             ; preds = %2164
  %2167 = zext i32 %2136 to i64
  %2168 = getelementptr inbounds [128 x i8], [128 x i8]* @_ZN2v88internalL20character_scan_flagsE, i64 0, i64 %2167
  %2169 = load i8, i8* %2168, align 1
  %2170 = and i8 %2169, 2
  %2171 = icmp eq i8 %2170, 0
  br label %2172

2172:                                             ; preds = %2166, %2164, %2064, %1912
  %2173 = phi i1 [ %2066, %2064 ], [ true, %1912 ], [ false, %2164 ], [ %2171, %2166 ]
  %2174 = phi i1 [ false, %2064 ], [ false, %1912 ], [ true, %2164 ], [ true, %2166 ]
  %2175 = tail call zeroext i8 @_ZN2v88internal7Scanner32ScanIdentifierOrKeywordInnerSlowEbb(%"class.v8::internal::Scanner"* %0, i1 zeroext %2174, i1 zeroext %2173) #8
  br label %2623

2176:                                             ; preds = %100
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0)) #9
  unreachable

2177:                                             ; preds = %81
  %2178 = icmp ult i32 %98, 256
  br i1 %2178, label %2179, label %2185

2179:                                             ; preds = %2177
  %2180 = zext i32 %98 to i64
  %2181 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN2v88internalL17kOneByteCharFlagsE, i64 0, i64 %2180
  %2182 = load i8, i8* %2181, align 1
  %2183 = and i8 %2182, 1
  %2184 = icmp eq i8 %2183, 0
  br i1 %2184, label %2189, label %2265

2185:                                             ; preds = %2177
  %2186 = tail call zeroext i1 @_ZN2v88internal21IsIdentifierStartSlowEj(i32 %98) #8
  br i1 %2186, label %2265, label %2187

2187:                                             ; preds = %2185
  %2188 = load i32, i32* %75, align 8
  br label %2189

2189:                                             ; preds = %2187, %2179
  %2190 = phi i32 [ %2188, %2187 ], [ %98, %2179 ]
  %2191 = and i32 %2190, 64512
  %2192 = icmp eq i32 %2191, 55296
  br i1 %2192, label %2193, label %2531

2193:                                             ; preds = %2189
  %2194 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %2195 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2194, i64 0, i32 2
  %2196 = load i16*, i16** %2195, align 8
  %2197 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2194, i64 0, i32 3
  %2198 = load i16*, i16** %2197, align 8
  %2199 = icmp ult i16* %2196, %2198
  br i1 %2199, label %2214, label %2200, !prof !4

2200:                                             ; preds = %2193
  %2201 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2194, i64 0, i32 6
  %2202 = load i8, i8* %2201, align 8, !range !2
  %2203 = icmp eq i8 %2202, 0
  br i1 %2203, label %2204, label %2211

2204:                                             ; preds = %2200
  %2205 = bitcast %"class.v8::internal::Utf16CharacterStream"* %2194 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %2206 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %2205, align 8
  %2207 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %2206, i64 5
  %2208 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %2207, align 8
  %2209 = tail call zeroext i1 %2208(%"class.v8::internal::Utf16CharacterStream"* %2194) #8
  %2210 = load i16*, i16** %2195, align 8
  br i1 %2209, label %2214, label %2211

2211:                                             ; preds = %2204, %2200
  %2212 = phi i16* [ %2210, %2204 ], [ %2196, %2200 ]
  %2213 = getelementptr inbounds i16, i16* %2212, i64 1
  store i16* %2213, i16** %2195, align 8
  br label %2221

2214:                                             ; preds = %2204, %2193
  %2215 = phi i16* [ %2196, %2193 ], [ %2210, %2204 ]
  %2216 = load i16, i16* %2215, align 2
  %2217 = zext i16 %2216 to i32
  %2218 = getelementptr inbounds i16, i16* %2215, i64 1
  store i16* %2218, i16** %2195, align 8
  %2219 = and i32 %2217, 64512
  %2220 = icmp eq i32 %2219, 56320
  br i1 %2220, label %2249, label %2221

2221:                                             ; preds = %2214, %2211
  %2222 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %2223 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2222, i64 0, i32 2
  %2224 = load i16*, i16** %2223, align 8
  %2225 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2222, i64 0, i32 1
  %2226 = load i16*, i16** %2225, align 8
  %2227 = icmp ugt i16* %2224, %2226
  %2228 = ptrtoint i16* %2226 to i64
  br i1 %2227, label %2229, label %2231, !prof !4

2229:                                             ; preds = %2221
  %2230 = getelementptr inbounds i16, i16* %2224, i64 -1
  store i16* %2230, i16** %2223, align 8
  br label %2529

2231:                                             ; preds = %2221
  %2232 = ptrtoint i16* %2224 to i64
  %2233 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2222, i64 0, i32 4
  %2234 = load i64, i64* %2233, align 8
  %2235 = bitcast i16** %2223 to i64*
  %2236 = sub i64 %2232, %2228
  %2237 = ashr exact i64 %2236, 1
  %2238 = add nsw i64 %2237, -1
  %2239 = add i64 %2238, %2234
  store i64 %2239, i64* %2233, align 8
  store i64 %2228, i64* %2235, align 8
  %2240 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2222, i64 0, i32 6
  %2241 = load i8, i8* %2240, align 8, !range !2
  %2242 = icmp eq i8 %2241, 0
  br i1 %2242, label %2243, label %2529

2243:                                             ; preds = %2231
  %2244 = bitcast %"class.v8::internal::Utf16CharacterStream"* %2222 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %2245 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %2244, align 8
  %2246 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %2245, i64 5
  %2247 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %2246, align 8
  %2248 = tail call zeroext i1 %2247(%"class.v8::internal::Utf16CharacterStream"* %2222) #8
  br label %2529

2249:                                             ; preds = %2214
  %2250 = load i32, i32* %75, align 8
  %2251 = shl i32 %2250, 10
  %2252 = and i32 %2251, 1047552
  %2253 = add nuw nsw i32 %2252, 65536
  %2254 = and i32 %2217, 1023
  %2255 = or i32 %2253, %2254
  store i32 %2255, i32* %75, align 8
  %2256 = icmp ult i32 %2255, 256
  br i1 %2256, label %2257, label %2263

2257:                                             ; preds = %2249
  %2258 = zext i32 %2255 to i64
  %2259 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN2v88internalL17kOneByteCharFlagsE, i64 0, i64 %2258
  %2260 = load i8, i8* %2259, align 1
  %2261 = and i8 %2260, 1
  %2262 = icmp eq i8 %2261, 0
  br i1 %2262, label %2529, label %2265

2263:                                             ; preds = %2249
  %2264 = tail call zeroext i1 @_ZN2v88internal21IsIdentifierStartSlowEj(i32 %2255) #8
  br i1 %2264, label %2265, label %2529

2265:                                             ; preds = %2263, %2257, %2185, %2179
  %2266 = load %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"** %76, align 8
  %2267 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %2266, i64 0, i32 1, i32 1
  store i32 0, i32* %2267, align 8
  %2268 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %2266, i64 0, i32 1, i32 2
  store i8 1, i8* %2268, align 4
  %2269 = load i32, i32* %75, align 8
  %2270 = icmp ult i32 %2269, 128
  br i1 %2270, label %2271, label %2525, !prof !4

2271:                                             ; preds = %2265
  %2272 = icmp eq i32 %2269, 92
  br i1 %2272, label %2420, label %2273, !prof !3

2273:                                             ; preds = %2271
  %2274 = zext i32 %2269 to i64
  %2275 = getelementptr inbounds [128 x i8], [128 x i8]* @_ZN2v88internalL20character_scan_flagsE, i64 0, i64 %2274
  %2276 = load i8, i8* %2275, align 1
  %2277 = lshr i8 %2276, 1
  %2278 = trunc i32 %2269 to i8
  %2279 = load %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"** %76, align 8
  %2280 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %2279, i64 0, i32 1
  %2281 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %2279, i64 0, i32 1, i32 1
  %2282 = load i32, i32* %2281, align 8
  %2283 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %2279, i64 0, i32 1, i32 0, i32 1
  %2284 = load i64, i64* %2283, align 8
  %2285 = trunc i64 %2284 to i32
  %2286 = icmp slt i32 %2282, %2285
  br i1 %2286, label %2289, label %2287

2287:                                             ; preds = %2273
  tail call void @_ZN2v88internal13LiteralBuffer12ExpandBufferEv(%"class.v8::internal::LiteralBuffer"* %2280) #8
  %2288 = load i32, i32* %2281, align 8
  br label %2289

2289:                                             ; preds = %2287, %2273
  %2290 = phi i32 [ %2282, %2273 ], [ %2288, %2287 ]
  %2291 = sext i32 %2290 to i64
  %2292 = getelementptr inbounds %"class.v8::internal::LiteralBuffer", %"class.v8::internal::LiteralBuffer"* %2280, i64 0, i32 0, i32 0
  %2293 = load i8*, i8** %2292, align 8
  %2294 = getelementptr inbounds i8, i8* %2293, i64 %2291
  store i8 %2278, i8* %2294, align 1
  %2295 = load i32, i32* %2281, align 8
  %2296 = add nsw i32 %2295, 1
  store i32 %2296, i32* %2281, align 8
  %2297 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %2298 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2297, i64 0, i32 2
  %2299 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2297, i64 0, i32 3
  %2300 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2297, i64 0, i32 6
  %2301 = bitcast %"class.v8::internal::Utf16CharacterStream"* %2297 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  br label %2302

2302:                                             ; preds = %2351, %2289
  %2303 = phi i8 [ %2277, %2289 ], [ %2344, %2351 ]
  %2304 = load i16*, i16** %2298, align 8
  %2305 = load i16*, i16** %2299, align 8
  %2306 = icmp eq i16* %2304, %2305
  br i1 %2306, label %2343, label %2307

2307:                                             ; preds = %2302, %2333
  %2308 = phi i8 [ %2318, %2333 ], [ %2303, %2302 ]
  %2309 = phi i16* [ %2341, %2333 ], [ %2304, %2302 ]
  %2310 = load i16, i16* %2309, align 2
  %2311 = icmp ugt i16 %2310, 127
  br i1 %2311, label %2312, label %2314, !prof !3

2312:                                             ; preds = %2307
  %2313 = or i8 %2308, 16
  br label %2343

2314:                                             ; preds = %2307
  %2315 = zext i16 %2310 to i64
  %2316 = getelementptr inbounds [128 x i8], [128 x i8]* @_ZN2v88internalL20character_scan_flagsE, i64 0, i64 %2315
  %2317 = load i8, i8* %2316, align 1
  %2318 = or i8 %2317, %2308
  %2319 = and i8 %2317, 1
  %2320 = icmp eq i8 %2319, 0
  br i1 %2320, label %2321, label %2343

2321:                                             ; preds = %2314
  %2322 = trunc i16 %2310 to i8
  %2323 = load %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"** %76, align 8
  %2324 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %2323, i64 0, i32 1
  %2325 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %2323, i64 0, i32 1, i32 1
  %2326 = load i32, i32* %2325, align 8
  %2327 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %2323, i64 0, i32 1, i32 0, i32 1
  %2328 = load i64, i64* %2327, align 8
  %2329 = trunc i64 %2328 to i32
  %2330 = icmp slt i32 %2326, %2329
  br i1 %2330, label %2333, label %2331

2331:                                             ; preds = %2321
  tail call void @_ZN2v88internal13LiteralBuffer12ExpandBufferEv(%"class.v8::internal::LiteralBuffer"* %2324) #8
  %2332 = load i32, i32* %2325, align 8
  br label %2333

2333:                                             ; preds = %2331, %2321
  %2334 = phi i32 [ %2326, %2321 ], [ %2332, %2331 ]
  %2335 = sext i32 %2334 to i64
  %2336 = getelementptr inbounds %"class.v8::internal::LiteralBuffer", %"class.v8::internal::LiteralBuffer"* %2324, i64 0, i32 0, i32 0
  %2337 = load i8*, i8** %2336, align 8
  %2338 = getelementptr inbounds i8, i8* %2337, i64 %2335
  store i8 %2322, i8* %2338, align 1
  %2339 = load i32, i32* %2325, align 8
  %2340 = add nsw i32 %2339, 1
  store i32 %2340, i32* %2325, align 8
  %2341 = getelementptr inbounds i16, i16* %2309, i64 1
  %2342 = icmp eq i16* %2341, %2305
  br i1 %2342, label %2343, label %2307

2343:                                             ; preds = %2333, %2314, %2312, %2302
  %2344 = phi i8 [ %2303, %2302 ], [ %2313, %2312 ], [ %2318, %2314 ], [ %2318, %2333 ]
  %2345 = phi i16* [ %2304, %2302 ], [ %2309, %2312 ], [ %2305, %2333 ], [ %2309, %2314 ]
  %2346 = load i16*, i16** %2299, align 8
  %2347 = icmp eq i16* %2345, %2346
  br i1 %2347, label %2348, label %2361

2348:                                             ; preds = %2343
  store i16* %2345, i16** %2298, align 8
  %2349 = load i8, i8* %2300, align 8, !range !2
  %2350 = icmp eq i8 %2349, 0
  br i1 %2350, label %2351, label %2358

2351:                                             ; preds = %2348
  %2352 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %2301, align 8
  %2353 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %2352, i64 5
  %2354 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %2353, align 8
  %2355 = tail call zeroext i1 %2354(%"class.v8::internal::Utf16CharacterStream"* %2297) #8
  br i1 %2355, label %2302, label %2356

2356:                                             ; preds = %2351
  %2357 = load i16*, i16** %2298, align 8
  br label %2358

2358:                                             ; preds = %2348, %2356
  %2359 = phi i16* [ %2357, %2356 ], [ %2345, %2348 ]
  %2360 = getelementptr inbounds i16, i16* %2359, i64 1
  store i16* %2360, i16** %2298, align 8
  br label %2365

2361:                                             ; preds = %2343
  %2362 = getelementptr inbounds i16, i16* %2345, i64 1
  store i16* %2362, i16** %2298, align 8
  %2363 = load i16, i16* %2345, align 2
  %2364 = zext i16 %2363 to i32
  br label %2365

2365:                                             ; preds = %2361, %2358
  %2366 = phi i32 [ %2364, %2361 ], [ -1, %2358 ]
  store i32 %2366, i32* %75, align 8
  %2367 = and i8 %2344, 16
  %2368 = icmp ne i8 %2367, 0
  %2369 = and i8 %2344, 2
  %2370 = icmp eq i8 %2369, 0
  %2371 = xor i1 %2370, true
  %2372 = or i1 %2368, %2371
  br i1 %2372, label %2417, label %2373, !prof !5

2373:                                             ; preds = %2365
  %2374 = load %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"** %76, align 8
  %2375 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %2374, i64 0, i32 1, i32 0, i32 0
  %2376 = load i8*, i8** %2375, align 8
  %2377 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %2374, i64 0, i32 1, i32 1
  %2378 = load i32, i32* %2377, align 8
  %2379 = add i32 %2378, -2
  %2380 = icmp ult i32 %2379, 9
  br i1 %2380, label %2381, label %2623

2381:                                             ; preds = %2373
  %2382 = getelementptr inbounds i8, i8* %2376, i64 1
  %2383 = load i8, i8* %2382, align 1
  %2384 = zext i8 %2383 to i64
  %2385 = getelementptr inbounds [128 x i8], [128 x i8]* @_ZZN2v88internal18PerfectKeywordHash4HashEPKciE11asso_values, i64 0, i64 %2384
  %2386 = load i8, i8* %2385, align 1
  %2387 = zext i8 %2386 to i32
  %2388 = add nuw nsw i32 %2378, %2387
  %2389 = load i8, i8* %2376, align 1
  %2390 = zext i8 %2389 to i64
  %2391 = getelementptr inbounds [128 x i8], [128 x i8]* @_ZZN2v88internal18PerfectKeywordHash4HashEPKciE11asso_values, i64 0, i64 %2390
  %2392 = load i8, i8* %2391, align 1
  %2393 = zext i8 %2392 to i32
  %2394 = add nuw nsw i32 %2388, %2393
  %2395 = and i32 %2394, 63
  %2396 = zext i32 %2395 to i64
  %2397 = getelementptr inbounds [64 x i8], [64 x i8]* bitcast (<{ [56 x i8], [8 x i8] }>* @_ZN2v88internalL26kPerfectKeywordLengthTableE to [64 x i8]*), i64 0, i64 %2396
  %2398 = load i8, i8* %2397, align 1
  %2399 = zext i8 %2398 to i32
  %2400 = icmp eq i32 %2378, %2399
  br i1 %2400, label %2401, label %2623

2401:                                             ; preds = %2381
  %2402 = getelementptr inbounds [64 x %"struct.v8::internal::PerfectKeywordHashTableEntry"], [64 x %"struct.v8::internal::PerfectKeywordHashTableEntry"]* @_ZN2v88internalL24kPerfectKeywordHashTableE, i64 0, i64 %2396, i32 0
  %2403 = load i8*, i8** %2402, align 16
  br label %2404

2404:                                             ; preds = %2409, %2401
  %2405 = phi i8* [ %2376, %2401 ], [ %2411, %2409 ]
  %2406 = phi i8* [ %2403, %2401 ], [ %2410, %2409 ]
  %2407 = load i8, i8* %2406, align 1
  %2408 = icmp eq i8 %2407, 0
  br i1 %2408, label %2414, label %2409

2409:                                             ; preds = %2404
  %2410 = getelementptr inbounds i8, i8* %2406, i64 1
  %2411 = getelementptr inbounds i8, i8* %2405, i64 1
  %2412 = load i8, i8* %2405, align 1
  %2413 = icmp eq i8 %2407, %2412
  br i1 %2413, label %2404, label %2623

2414:                                             ; preds = %2404
  %2415 = getelementptr inbounds [64 x %"struct.v8::internal::PerfectKeywordHashTableEntry"], [64 x %"struct.v8::internal::PerfectKeywordHashTableEntry"]* @_ZN2v88internalL24kPerfectKeywordHashTableE, i64 0, i64 %2396, i32 1
  %2416 = load i8, i8* %2415, align 8
  br label %2623

2417:                                             ; preds = %2365
  %2418 = xor i1 %2368, true
  %2419 = or i1 %2370, %2418
  br i1 %2368, label %2525, label %2623

2420:                                             ; preds = %2271
  %2421 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %2422 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2421, i64 0, i32 2
  %2423 = load i16*, i16** %2422, align 8
  %2424 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2421, i64 0, i32 3
  %2425 = load i16*, i16** %2424, align 8
  %2426 = icmp ult i16* %2423, %2425
  br i1 %2426, label %2441, label %2427, !prof !4

2427:                                             ; preds = %2420
  %2428 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2421, i64 0, i32 6
  %2429 = load i8, i8* %2428, align 8, !range !2
  %2430 = icmp eq i8 %2429, 0
  br i1 %2430, label %2431, label %2438

2431:                                             ; preds = %2427
  %2432 = bitcast %"class.v8::internal::Utf16CharacterStream"* %2421 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %2433 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %2432, align 8
  %2434 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %2433, i64 5
  %2435 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %2434, align 8
  %2436 = tail call zeroext i1 %2435(%"class.v8::internal::Utf16CharacterStream"* %2421) #8
  %2437 = load i16*, i16** %2422, align 8
  br i1 %2436, label %2441, label %2438

2438:                                             ; preds = %2431, %2427
  %2439 = phi i16* [ %2437, %2431 ], [ %2423, %2427 ]
  %2440 = getelementptr inbounds i16, i16* %2439, i64 1
  store i16* %2440, i16** %2422, align 8
  store i32 -1, i32* %75, align 8
  br label %2485

2441:                                             ; preds = %2431, %2420
  %2442 = phi i16* [ %2423, %2420 ], [ %2437, %2431 ]
  %2443 = load i16, i16* %2442, align 2
  %2444 = zext i16 %2443 to i32
  %2445 = getelementptr inbounds i16, i16* %2442, i64 1
  store i16* %2445, i16** %2422, align 8
  store i32 %2444, i32* %75, align 8
  %2446 = icmp eq i16 %2443, 117
  br i1 %2446, label %2447, label %2485

2447:                                             ; preds = %2441
  %2448 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %2449 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2448, i64 0, i32 2
  %2450 = load i16*, i16** %2449, align 8
  %2451 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2448, i64 0, i32 3
  %2452 = load i16*, i16** %2451, align 8
  %2453 = icmp ult i16* %2450, %2452
  br i1 %2453, label %2454, label %2457, !prof !4

2454:                                             ; preds = %2447
  %2455 = load i16, i16* %2450, align 2
  %2456 = zext i16 %2455 to i32
  br label %2471

2457:                                             ; preds = %2447
  %2458 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2448, i64 0, i32 6
  %2459 = load i8, i8* %2458, align 8, !range !2
  %2460 = icmp eq i8 %2459, 0
  br i1 %2460, label %2461, label %2471

2461:                                             ; preds = %2457
  %2462 = bitcast %"class.v8::internal::Utf16CharacterStream"* %2448 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %2463 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %2462, align 8
  %2464 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %2463, i64 5
  %2465 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %2464, align 8
  %2466 = tail call zeroext i1 %2465(%"class.v8::internal::Utf16CharacterStream"* %2448) #8
  %2467 = load i16*, i16** %2449, align 8
  br i1 %2466, label %2468, label %2471

2468:                                             ; preds = %2461
  %2469 = load i16, i16* %2467, align 2
  %2470 = zext i16 %2469 to i32
  br label %2471

2471:                                             ; preds = %2468, %2461, %2457, %2454
  %2472 = phi i16* [ %2450, %2454 ], [ %2467, %2468 ], [ %2450, %2457 ], [ %2467, %2461 ]
  %2473 = phi i32 [ %2456, %2454 ], [ %2470, %2468 ], [ -1, %2457 ], [ -1, %2461 ]
  %2474 = getelementptr inbounds i16, i16* %2472, i64 1
  store i16* %2474, i16** %2449, align 8
  store i32 %2473, i32* %75, align 8
  %2475 = tail call i32 @_ZN2v88internal7Scanner17ScanUnicodeEscapeILb0EEEjv(%"class.v8::internal::Scanner"* %0) #8
  %2476 = icmp eq i32 %2475, 92
  br i1 %2476, label %2623, label %2477

2477:                                             ; preds = %2471
  %2478 = icmp ult i32 %2475, 256
  br i1 %2478, label %2479, label %2485

2479:                                             ; preds = %2477
  %2480 = zext i32 %2475 to i64
  %2481 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN2v88internalL17kOneByteCharFlagsE, i64 0, i64 %2480
  %2482 = load i8, i8* %2481, align 1
  %2483 = and i8 %2482, 1
  %2484 = icmp eq i8 %2483, 0
  br i1 %2484, label %2623, label %2488

2485:                                             ; preds = %2477, %2441, %2438
  %2486 = phi i32 [ %2475, %2477 ], [ -1, %2441 ], [ -1, %2438 ]
  %2487 = tail call zeroext i1 @_ZN2v88internal21IsIdentifierStartSlowEj(i32 %2486) #8
  br i1 %2487, label %2488, label %2623

2488:                                             ; preds = %2485, %2479
  %2489 = phi i32 [ %2475, %2479 ], [ %2486, %2485 ]
  %2490 = phi i1 [ true, %2479 ], [ false, %2485 ]
  %2491 = load %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"** %76, align 8
  %2492 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %2491, i64 0, i32 1
  %2493 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %2491, i64 0, i32 1, i32 2
  %2494 = load i8, i8* %2493, align 4, !range !2
  %2495 = icmp eq i8 %2494, 0
  br i1 %2495, label %2516, label %2496

2496:                                             ; preds = %2488
  br i1 %2490, label %2497, label %2515

2497:                                             ; preds = %2496
  %2498 = trunc i32 %2489 to i8
  %2499 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %2491, i64 0, i32 1, i32 1
  %2500 = load i32, i32* %2499, align 8
  %2501 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %2491, i64 0, i32 1, i32 0, i32 1
  %2502 = load i64, i64* %2501, align 8
  %2503 = trunc i64 %2502 to i32
  %2504 = icmp slt i32 %2500, %2503
  br i1 %2504, label %2507, label %2505

2505:                                             ; preds = %2497
  tail call void @_ZN2v88internal13LiteralBuffer12ExpandBufferEv(%"class.v8::internal::LiteralBuffer"* %2492) #8
  %2506 = load i32, i32* %2499, align 8
  br label %2507

2507:                                             ; preds = %2505, %2497
  %2508 = phi i32 [ %2500, %2497 ], [ %2506, %2505 ]
  %2509 = sext i32 %2508 to i64
  %2510 = getelementptr inbounds %"class.v8::internal::LiteralBuffer", %"class.v8::internal::LiteralBuffer"* %2492, i64 0, i32 0, i32 0
  %2511 = load i8*, i8** %2510, align 8
  %2512 = getelementptr inbounds i8, i8* %2511, i64 %2509
  store i8 %2498, i8* %2512, align 1
  %2513 = load i32, i32* %2499, align 8
  %2514 = add nsw i32 %2513, 1
  store i32 %2514, i32* %2499, align 8
  br label %2517

2515:                                             ; preds = %2496
  tail call void @_ZN2v88internal13LiteralBuffer16ConvertToTwoByteEv(%"class.v8::internal::LiteralBuffer"* %2492) #8
  br label %2516

2516:                                             ; preds = %2515, %2488
  tail call void @_ZN2v88internal13LiteralBuffer14AddTwoByteCharEj(%"class.v8::internal::LiteralBuffer"* %2492, i32 %2489) #8
  br label %2517

2517:                                             ; preds = %2516, %2507
  %2518 = icmp ult i32 %2489, 128
  br i1 %2518, label %2519, label %2525

2519:                                             ; preds = %2517
  %2520 = zext i32 %2489 to i64
  %2521 = getelementptr inbounds [128 x i8], [128 x i8]* @_ZN2v88internalL20character_scan_flagsE, i64 0, i64 %2520
  %2522 = load i8, i8* %2521, align 1
  %2523 = and i8 %2522, 2
  %2524 = icmp eq i8 %2523, 0
  br label %2525

2525:                                             ; preds = %2519, %2517, %2417, %2265
  %2526 = phi i1 [ %2419, %2417 ], [ true, %2265 ], [ false, %2517 ], [ %2524, %2519 ]
  %2527 = phi i1 [ false, %2417 ], [ false, %2265 ], [ true, %2517 ], [ true, %2519 ]
  %2528 = tail call zeroext i8 @_ZN2v88internal7Scanner32ScanIdentifierOrKeywordInnerSlowEbb(%"class.v8::internal::Scanner"* %0, i1 zeroext %2527, i1 zeroext %2526) #8
  br label %2623

2529:                                             ; preds = %2263, %2257, %2243, %2231, %2229
  %2530 = load i32, i32* %75, align 8
  br label %2531

2531:                                             ; preds = %2529, %2189
  %2532 = phi i32 [ %2530, %2529 ], [ %2190, %2189 ]
  %2533 = icmp eq i32 %2532, -1
  %2534 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  br i1 %2533, label %2535, label %2540

2535:                                             ; preds = %2531
  %2536 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2534, i64 0, i32 6
  %2537 = load i8, i8* %2536, align 8, !range !2
  %2538 = icmp eq i8 %2537, 0
  %2539 = select i1 %2538, i8 14, i8 112
  br label %2623

2540:                                             ; preds = %2531
  %2541 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2534, i64 0, i32 4
  %2542 = load i64, i64* %2541, align 8
  %2543 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2534, i64 0, i32 2
  %2544 = bitcast i16** %2543 to i64*
  %2545 = load i64, i64* %2544, align 8
  %2546 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2534, i64 0, i32 1
  %2547 = bitcast i16** %2546 to i64*
  %2548 = load i64, i64* %2547, align 8
  %2549 = sub i64 %2545, %2548
  %2550 = lshr exact i64 %2549, 1
  %2551 = add i64 %2550, %2542
  %2552 = trunc i64 %2551 to i32
  br label %2553

2553:                                             ; preds = %2599, %2540
  %2554 = phi i32 [ %2601, %2599 ], [ %2532, %2540 ]
  %2555 = icmp ult i32 %2554, 256
  br i1 %2555, label %2561, label %2556

2556:                                             ; preds = %2553
  %2557 = tail call zeroext i1 @_ZN2v88internal16IsWhiteSpaceSlowEj(i32 %2554) #8
  %2558 = and i32 %2554, -2
  %2559 = icmp eq i32 %2558, 8232
  %2560 = or i1 %2559, %2557
  br i1 %2560, label %2567, label %2603

2561:                                             ; preds = %2553
  %2562 = zext i32 %2554 to i64
  %2563 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN2v88internalL17kOneByteCharFlagsE, i64 0, i64 %2562
  %2564 = load i8, i8* %2563, align 1
  %2565 = and i8 %2564, 8
  %2566 = icmp eq i8 %2565, 0
  br i1 %2566, label %2603, label %2567

2567:                                             ; preds = %2561, %2556
  %2568 = load %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"** %76, align 8
  %2569 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %2568, i64 0, i32 8
  %2570 = load i8, i8* %2569, align 4, !range !2
  %2571 = icmp eq i8 %2570, 0
  br i1 %2571, label %2572, label %2575

2572:                                             ; preds = %2567
  %2573 = load i32, i32* %75, align 8
  switch i32 %2573, label %2575 [
    i32 8232, label %2574
    i32 13, label %2574
    i32 10, label %2574
    i32 8233, label %2574
  ]

2574:                                             ; preds = %2572, %2572, %2572, %2572
  store i8 1, i8* %2569, align 4
  br label %2575

2575:                                             ; preds = %2574, %2572, %2567
  %2576 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %2577 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2576, i64 0, i32 2
  %2578 = load i16*, i16** %2577, align 8
  %2579 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2576, i64 0, i32 3
  %2580 = load i16*, i16** %2579, align 8
  %2581 = icmp ult i16* %2578, %2580
  br i1 %2581, label %2582, label %2585, !prof !4

2582:                                             ; preds = %2575
  %2583 = load i16, i16* %2578, align 2
  %2584 = zext i16 %2583 to i32
  br label %2599

2585:                                             ; preds = %2575
  %2586 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2576, i64 0, i32 6
  %2587 = load i8, i8* %2586, align 8, !range !2
  %2588 = icmp eq i8 %2587, 0
  br i1 %2588, label %2589, label %2599

2589:                                             ; preds = %2585
  %2590 = bitcast %"class.v8::internal::Utf16CharacterStream"* %2576 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %2591 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %2590, align 8
  %2592 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %2591, i64 5
  %2593 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %2592, align 8
  %2594 = tail call zeroext i1 %2593(%"class.v8::internal::Utf16CharacterStream"* %2576) #8
  %2595 = load i16*, i16** %2577, align 8
  br i1 %2594, label %2596, label %2599

2596:                                             ; preds = %2589
  %2597 = load i16, i16* %2595, align 2
  %2598 = zext i16 %2597 to i32
  br label %2599

2599:                                             ; preds = %2596, %2589, %2585, %2582
  %2600 = phi i16* [ %2578, %2582 ], [ %2595, %2596 ], [ %2578, %2585 ], [ %2595, %2589 ]
  %2601 = phi i32 [ %2584, %2582 ], [ %2598, %2596 ], [ -1, %2585 ], [ -1, %2589 ]
  %2602 = getelementptr inbounds i16, i16* %2600, i64 1
  store i16* %2602, i16** %2577, align 8
  store i32 %2601, i32* %75, align 8
  br label %2553

2603:                                             ; preds = %2561, %2556
  %2604 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %2605 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2604, i64 0, i32 4
  %2606 = load i64, i64* %2605, align 8
  %2607 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2604, i64 0, i32 2
  %2608 = bitcast i16** %2607 to i64*
  %2609 = load i64, i64* %2608, align 8
  %2610 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2604, i64 0, i32 1
  %2611 = bitcast i16** %2610 to i64*
  %2612 = load i64, i64* %2611, align 8
  %2613 = sub i64 %2609, %2612
  %2614 = lshr exact i64 %2613, 1
  %2615 = add i64 %2614, %2606
  %2616 = trunc i64 %2615 to i32
  %2617 = icmp eq i32 %2616, %2552
  br i1 %2617, label %2623, label %2621

2618:                                             ; preds = %1313, %381
  %2619 = phi i8 [ %1314, %1313 ], [ %382, %381 ]
  %2620 = icmp eq i8 %2619, 114
  br i1 %2620, label %2621, label %2623

2621:                                             ; preds = %2618, %2603, %1895, %1827, %1311, %1273, %1232, %1232, %1232, %1232, %1232, %939
  %2622 = load %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"** %76, align 8
  br label %81

2623:                                             ; preds = %293, %840, %866, %872, %1154, %1895, %2603, %2618, %2409, %2056, %128, %150, %153, %176, %179, %214, %233, %236, %266, %270, %290, %322, %344, %347, %377, %401, %404, %433, %455, %458, %487, %509, %512, %542, %564, %567, %590, %593, %623, %651, %673, %676, %700, %703, %733, %755, %758, %787, %815, %837, %863, %882, %897, %965, %987, %990, %1013, %1016, %1046, %1074, %1096, %1099, %1129, %1151, %1339, %1361, %1364, %1387, %1390, %1420, %1448, %1470, %1473, %1496, %1499, %1529, %1557, %1579, %1582, %1612, %1634, %1644, %1646, %1655, %1659, %1667, %1722, %1750, %1829, %1910, %2020, %2028, %2061, %2064, %2118, %2126, %2132, %2172, %2373, %2381, %2414, %2417, %2471, %2479, %2485, %2525, %2535
  %2624 = phi i8 [ %1911, %1910 ], [ %1830, %1829 ], [ %1754, %1750 ], [ %1645, %1644 ], [ 10, %1722 ], [ 21, %1557 ], [ 23, %1448 ], [ 28, %1339 ], [ 27, %1074 ], [ 32, %965 ], [ 54, %787 ], [ 31, %815 ], [ 15, %651 ], [ 63, %433 ], [ 25, %487 ], [ 62, %322 ], [ %271, %270 ], [ %103, %128 ], [ %2539, %2535 ], [ 4, %179 ], [ 11, %153 ], [ 11, %214 ], [ 41, %458 ], [ 61, %404 ], [ 17, %567 ], [ 49, %676 ], [ 47, %758 ], [ 43, %990 ], [ 39, %1364 ], [ 37, %1473 ], [ 2, %1667 ], [ 2, %1646 ], [ 11, %150 ], [ 4, %176 ], [ 18, %266 ], [ 34, %236 ], [ 34, %233 ], [ 60, %290 ], [ 24, %377 ], [ 40, %347 ], [ 40, %344 ], [ 61, %401 ], [ 41, %455 ], [ 26, %542 ], [ 42, %512 ], [ 42, %509 ], [ 17, %564 ], [ 57, %623 ], [ 56, %593 ], [ 56, %590 ], [ 49, %673 ], [ 59, %733 ], [ 58, %703 ], [ 58, %700 ], [ 47, %755 ], [ 48, %837 ], [ 55, %863 ], [ 43, %987 ], [ 30, %1046 ], [ 46, %1016 ], [ 46, %1013 ], [ 29, %1129 ], [ 45, %1099 ], [ 45, %1096 ], [ 44, %1151 ], [ 39, %1361 ], [ 20, %1420 ], [ 36, %1390 ], [ 36, %1387 ], [ 37, %1470 ], [ 19, %1529 ], [ 35, %1499 ], [ 35, %1496 ], [ 22, %1612 ], [ 38, %1582 ], [ 38, %1579 ], [ 2, %1634 ], [ %2175, %2172 ], [ 95, %2064 ], [ %2063, %2061 ], [ 95, %2020 ], [ 95, %2028 ], [ 112, %2132 ], [ 112, %2118 ], [ 112, %2126 ], [ %2528, %2525 ], [ 95, %2417 ], [ %2416, %2414 ], [ 95, %2373 ], [ 95, %2381 ], [ 112, %2485 ], [ 112, %2471 ], [ 112, %2479 ], [ 2, %1659 ], [ 2, %1655 ], [ 112, %882 ], [ 112, %897 ], [ 95, %2056 ], [ 95, %2409 ], [ 60, %293 ], [ 55, %872 ], [ 55, %866 ], [ 48, %840 ], [ 44, %1154 ], [ %2619, %2618 ], [ 112, %1895 ], [ 112, %2603 ]
  %2625 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %79, i64 0, i32 3
  store i8 %2624, i8* %2625, align 8
  %2626 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %2627 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2626, i64 0, i32 4
  %2628 = load i64, i64* %2627, align 8
  %2629 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2626, i64 0, i32 2
  %2630 = bitcast i16** %2629 to i64*
  %2631 = load i64, i64* %2630, align 8
  %2632 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2626, i64 0, i32 1
  %2633 = bitcast i16** %2632 to i64*
  %2634 = load i64, i64* %2633, align 8
  %2635 = sub i64 %2631, %2634
  %2636 = lshr exact i64 %2635, 1
  %2637 = add i64 %2636, %2628
  %2638 = trunc i64 %2637 to i32
  %2639 = add nsw i32 %2638, -1
  %2640 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %79, i64 0, i32 0, i32 1
  store i32 %2639, i32* %2640, align 4
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2v88internal7Scanner13BookmarkScope10HasBeenSetEv(%"class.v8::internal::Scanner::BookmarkScope"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Scanner::BookmarkScope", %"class.v8::internal::Scanner::BookmarkScope"* %0, i64 0, i32 1
  %3 = load i64, i64* %2, align 8
  %4 = icmp ult i64 %3, -2
  ret i1 %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2v88internal7Scanner13BookmarkScope14HasBeenAppliedEv(%"class.v8::internal::Scanner::BookmarkScope"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Scanner::BookmarkScope", %"class.v8::internal::Scanner::BookmarkScope"* %0, i64 0, i32 1
  %3 = load i64, i64* %2, align 8
  %4 = icmp eq i64 %3, -1
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal7ScannerC2EPNS0_20Utf16CharacterStreamENS0_23UnoptimizedCompileFlagsE(%"class.v8::internal::Scanner"*, %"class.v8::internal::Utf16CharacterStream"*, i64, i32) unnamed_addr #0 align 2 {
  %5 = bitcast %"class.v8::internal::Scanner"* %0 to i64*
  store i64 %2, i64* %5, align 8
  %6 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 0, i32 2
  %7 = bitcast i8* %6 to i32*
  store i32 %3, i32* %7, align 8
  %8 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 4
  store %"class.v8::internal::Utf16CharacterStream"* %1, %"class.v8::internal::Utf16CharacterStream"** %8, align 8
  %9 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 7, i64 0
  %10 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 7, i64 0, i32 1, i32 2
  %11 = bitcast %"struct.v8::internal::Scanner::TokenDesc"* %9 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %11, i8 0, i64 28, i1 false) #8
  store i8 1, i8* %10, align 4
  %12 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 7, i64 0, i32 2
  %13 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 7, i64 0, i32 2, i32 2
  %14 = bitcast %"class.v8::internal::LiteralBuffer"* %12 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 20, i1 false) #8
  store i8 1, i8* %13, align 4
  %15 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 7, i64 0, i32 3
  store i8 115, i8* %15, align 8
  %16 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 7, i64 0, i32 5
  %17 = bitcast i32* %16 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %17, i8 0, i64 17, i1 false) #8
  %18 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 7, i64 1
  %19 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 7, i64 1, i32 1, i32 2
  %20 = bitcast %"struct.v8::internal::Scanner::TokenDesc"* %18 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %20, i8 0, i64 28, i1 false) #8
  store i8 1, i8* %19, align 4
  %21 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 7, i64 1, i32 2
  %22 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 7, i64 1, i32 2, i32 2
  %23 = bitcast %"class.v8::internal::LiteralBuffer"* %21 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 20, i1 false) #8
  store i8 1, i8* %22, align 4
  %24 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 7, i64 1, i32 3
  store i8 115, i8* %24, align 8
  %25 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 7, i64 1, i32 5
  %26 = bitcast i32* %25 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %26, i8 0, i64 17, i1 false) #8
  %27 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 7, i64 2
  %28 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 7, i64 2, i32 1, i32 2
  %29 = bitcast %"struct.v8::internal::Scanner::TokenDesc"* %27 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %29, i8 0, i64 28, i1 false) #8
  store i8 1, i8* %28, align 4
  %30 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 7, i64 2, i32 2
  %31 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 7, i64 2, i32 2, i32 2
  %32 = bitcast %"class.v8::internal::LiteralBuffer"* %30 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %32, i8 0, i64 20, i1 false) #8
  store i8 1, i8* %31, align 4
  %33 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 7, i64 2, i32 3
  store i8 115, i8* %33, align 8
  %34 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 7, i64 2, i32 5
  %35 = bitcast i32* %34 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %35, i8 0, i64 17, i1 false) #8
  %36 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 8
  store i8 0, i8* %36, align 8
  %37 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 10
  %38 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 10, i32 2
  %39 = bitcast %"class.v8::internal::LiteralBuffer"* %37 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %39, i8 0, i64 20, i1 false) #8
  store i8 1, i8* %38, align 4
  %40 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 11
  %41 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 11, i32 2
  %42 = bitcast %"class.v8::internal::LiteralBuffer"* %40 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %42, i8 0, i64 20, i1 false) #8
  store i8 1, i8* %41, align 4
  %43 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 12
  %44 = bitcast %"struct.v8::internal::Scanner::Location"* %43 to i64*
  store i64 4294967295, i64* %44, align 8
  %45 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 13
  store i32 0, i32* %45, align 8
  %46 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 15, i32 0
  store i32 0, i32* %46, align 4
  %47 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 15, i32 1
  store i32 0, i32* %47, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal7Scanner10InitializeEv(%"class.v8::internal::Scanner"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 4
  %3 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %3, i64 0, i32 2
  %5 = load i16*, i16** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %3, i64 0, i32 3
  %7 = load i16*, i16** %6, align 8
  %8 = icmp ult i16* %5, %7
  br i1 %8, label %9, label %12, !prof !4

9:                                                ; preds = %1
  %10 = load i16, i16* %5, align 2
  %11 = zext i16 %10 to i32
  br label %26

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %3, i64 0, i32 6
  %14 = load i8, i8* %13, align 8, !range !2
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %16, label %26

16:                                               ; preds = %12
  %17 = bitcast %"class.v8::internal::Utf16CharacterStream"* %3 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %18 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %17, align 8
  %19 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %18, i64 5
  %20 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %19, align 8
  %21 = tail call zeroext i1 %20(%"class.v8::internal::Utf16CharacterStream"* %3) #8
  %22 = load i16*, i16** %4, align 8
  br i1 %21, label %23, label %26

23:                                               ; preds = %16
  %24 = load i16, i16* %22, align 2
  %25 = zext i16 %24 to i32
  br label %26

26:                                               ; preds = %9, %12, %16, %23
  %27 = phi i16* [ %5, %9 ], [ %22, %23 ], [ %5, %12 ], [ %22, %16 ]
  %28 = phi i32 [ %11, %9 ], [ %25, %23 ], [ -1, %12 ], [ -1, %16 ]
  %29 = getelementptr inbounds i16, i16* %27, i64 1
  store i16* %29, i16** %4, align 8
  %30 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 5
  store i32 %28, i32* %30, align 8
  %31 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 7, i64 0
  %32 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 1
  store %"struct.v8::internal::Scanner::TokenDesc"* %31, %"struct.v8::internal::Scanner::TokenDesc"** %32, align 8
  %33 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 7, i64 1
  %34 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 2
  store %"struct.v8::internal::Scanner::TokenDesc"* %33, %"struct.v8::internal::Scanner::TokenDesc"** %34, align 8
  %35 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 7, i64 2
  %36 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 3
  store %"struct.v8::internal::Scanner::TokenDesc"* %35, %"struct.v8::internal::Scanner::TokenDesc"** %36, align 8
  %37 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 8
  store i8 0, i8* %37, align 8
  %38 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 14
  store i32 0, i32* %38, align 4
  %39 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 7, i64 1, i32 8
  store i8 1, i8* %39, align 4
  %40 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 0, i32 0
  br label %41

41:                                               ; preds = %2580, %26
  %42 = phi %"struct.v8::internal::Scanner::TokenDesc"* [ %2581, %2580 ], [ %33, %26 ]
  %43 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %2, align 8
  %44 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %43, i64 0, i32 4
  %45 = load i64, i64* %44, align 8
  %46 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %43, i64 0, i32 2
  %47 = bitcast i16** %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %43, i64 0, i32 1
  %50 = bitcast i16** %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = sub i64 %48, %51
  %53 = lshr exact i64 %52, 1
  %54 = add i64 %53, %45
  %55 = trunc i64 %54 to i32
  %56 = add nsw i32 %55, -1
  %57 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %42, i64 0, i32 0, i32 0
  store i32 %56, i32* %57, align 8
  %58 = load i32, i32* %30, align 8
  %59 = icmp ult i32 %58, 128
  br i1 %59, label %60, label %2136, !prof !4

60:                                               ; preds = %41
  %61 = zext i32 %58 to i64
  %62 = getelementptr inbounds [128 x i8], [128 x i8]* @_ZN2v88internalL15one_char_tokensE, i64 0, i64 %61
  %63 = load i8, i8* %62, align 1
  switch i8 %63, label %2135 [
    i8 5, label %64
    i8 6, label %64
    i8 8, label %64
    i8 13, label %64
    i8 3, label %64
    i8 7, label %64
    i8 9, label %64
    i8 12, label %64
    i8 33, label %64
    i8 50, label %64
    i8 112, label %64
    i8 11, label %92
    i8 93, label %230
    i8 60, label %232
    i8 61, label %343
    i8 17, label %506
    i8 49, label %615
    i8 47, label %697
    i8 48, label %779
    i8 43, label %928
    i8 45, label %1037
    i8 44, label %1092
    i8 39, label %1302
    i8 37, label %1411
    i8 38, label %1520
    i8 2, label %1575
    i8 0, label %1685
    i8 111, label %1714
    i8 114, label %1790
    i8 90, label %1869
    i8 95, label %1871
  ]

64:                                               ; preds = %60, %60, %60, %60, %60, %60, %60, %60, %60, %60, %60
  %65 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %2, align 8
  %66 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %65, i64 0, i32 2
  %67 = load i16*, i16** %66, align 8
  %68 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %65, i64 0, i32 3
  %69 = load i16*, i16** %68, align 8
  %70 = icmp ult i16* %67, %69
  br i1 %70, label %71, label %74, !prof !4

71:                                               ; preds = %64
  %72 = load i16, i16* %67, align 2
  %73 = zext i16 %72 to i32
  br label %88

74:                                               ; preds = %64
  %75 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %65, i64 0, i32 6
  %76 = load i8, i8* %75, align 8, !range !2
  %77 = icmp eq i8 %76, 0
  br i1 %77, label %78, label %88

78:                                               ; preds = %74
  %79 = bitcast %"class.v8::internal::Utf16CharacterStream"* %65 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %80 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %79, align 8
  %81 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %80, i64 5
  %82 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %81, align 8
  %83 = tail call zeroext i1 %82(%"class.v8::internal::Utf16CharacterStream"* %65) #8
  %84 = load i16*, i16** %66, align 8
  br i1 %83, label %85, label %88

85:                                               ; preds = %78
  %86 = load i16, i16* %84, align 2
  %87 = zext i16 %86 to i32
  br label %88

88:                                               ; preds = %85, %78, %74, %71
  %89 = phi i16* [ %67, %71 ], [ %84, %85 ], [ %67, %74 ], [ %84, %78 ]
  %90 = phi i32 [ %73, %71 ], [ %87, %85 ], [ -1, %74 ], [ -1, %78 ]
  %91 = getelementptr inbounds i16, i16* %89, i64 1
  store i16* %91, i16** %66, align 8
  store i32 %90, i32* %30, align 8
  br label %2582

92:                                               ; preds = %60
  %93 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %2, align 8
  %94 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %93, i64 0, i32 2
  %95 = load i16*, i16** %94, align 8
  %96 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %93, i64 0, i32 3
  %97 = load i16*, i16** %96, align 8
  %98 = icmp ult i16* %95, %97
  br i1 %98, label %113, label %99, !prof !4

99:                                               ; preds = %92
  %100 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %93, i64 0, i32 6
  %101 = load i8, i8* %100, align 8, !range !2
  %102 = icmp eq i8 %101, 0
  br i1 %102, label %103, label %110

103:                                              ; preds = %99
  %104 = bitcast %"class.v8::internal::Utf16CharacterStream"* %93 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %105 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %104, align 8
  %106 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %105, i64 5
  %107 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %106, align 8
  %108 = tail call zeroext i1 %107(%"class.v8::internal::Utf16CharacterStream"* %93) #8
  %109 = load i16*, i16** %94, align 8
  br i1 %108, label %113, label %110

110:                                              ; preds = %103, %99
  %111 = phi i16* [ %109, %103 ], [ %95, %99 ]
  %112 = getelementptr inbounds i16, i16* %111, i64 1
  store i16* %112, i16** %94, align 8
  store i32 -1, i32* %30, align 8
  br label %2582

113:                                              ; preds = %103, %92
  %114 = phi i16* [ %95, %92 ], [ %109, %103 ]
  %115 = load i16, i16* %114, align 2
  %116 = zext i16 %115 to i32
  %117 = getelementptr inbounds i16, i16* %114, i64 1
  store i16* %117, i16** %94, align 8
  store i32 %116, i32* %30, align 8
  switch i16 %115, label %2582 [
    i16 46, label %118
    i16 63, label %175
  ]

118:                                              ; preds = %113
  %119 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %2, align 8
  %120 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %119, i64 0, i32 2
  %121 = load i16*, i16** %120, align 8
  %122 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %119, i64 0, i32 3
  %123 = load i16*, i16** %122, align 8
  %124 = icmp ult i16* %121, %123
  br i1 %124, label %139, label %125, !prof !4

125:                                              ; preds = %118
  %126 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %119, i64 0, i32 6
  %127 = load i8, i8* %126, align 8, !range !2
  %128 = icmp eq i8 %127, 0
  br i1 %128, label %129, label %136

129:                                              ; preds = %125
  %130 = bitcast %"class.v8::internal::Utf16CharacterStream"* %119 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %131 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %130, align 8
  %132 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %131, i64 5
  %133 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %132, align 8
  %134 = tail call zeroext i1 %133(%"class.v8::internal::Utf16CharacterStream"* %119) #8
  %135 = load i16*, i16** %120, align 8
  br i1 %134, label %139, label %136

136:                                              ; preds = %129, %125
  %137 = phi i16* [ %135, %129 ], [ %121, %125 ]
  %138 = getelementptr inbounds i16, i16* %137, i64 1
  store i16* %138, i16** %120, align 8
  store i32 -1, i32* %30, align 8
  br label %2582

139:                                              ; preds = %129, %118
  %140 = phi i16* [ %121, %118 ], [ %135, %129 ]
  %141 = load i16, i16* %140, align 2
  %142 = zext i16 %141 to i32
  %143 = getelementptr inbounds i16, i16* %140, i64 1
  store i16* %143, i16** %120, align 8
  store i32 %142, i32* %30, align 8
  %144 = add nsw i32 %142, -48
  %145 = icmp ult i32 %144, 10
  br i1 %145, label %146, label %2582

146:                                              ; preds = %139
  %147 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %2, align 8
  %148 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %147, i64 0, i32 2
  %149 = load i16*, i16** %148, align 8
  %150 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %147, i64 0, i32 1
  %151 = load i16*, i16** %150, align 8
  %152 = icmp ugt i16* %149, %151
  %153 = ptrtoint i16* %151 to i64
  br i1 %152, label %154, label %156, !prof !4

154:                                              ; preds = %146
  %155 = getelementptr inbounds i16, i16* %149, i64 -1
  store i16* %155, i16** %148, align 8
  br label %174

156:                                              ; preds = %146
  %157 = ptrtoint i16* %149 to i64
  %158 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %147, i64 0, i32 4
  %159 = load i64, i64* %158, align 8
  %160 = bitcast i16** %148 to i64*
  %161 = sub i64 %157, %153
  %162 = ashr exact i64 %161, 1
  %163 = add nsw i64 %162, -1
  %164 = add i64 %163, %159
  store i64 %164, i64* %158, align 8
  store i64 %153, i64* %160, align 8
  %165 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %147, i64 0, i32 6
  %166 = load i8, i8* %165, align 8, !range !2
  %167 = icmp eq i8 %166, 0
  br i1 %167, label %168, label %174

168:                                              ; preds = %156
  %169 = bitcast %"class.v8::internal::Utf16CharacterStream"* %147 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %170 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %169, align 8
  %171 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %170, i64 5
  %172 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %171, align 8
  %173 = tail call zeroext i1 %172(%"class.v8::internal::Utf16CharacterStream"* %147) #8
  br label %174

174:                                              ; preds = %168, %156, %154
  store i32 46, i32* %30, align 8
  br label %2582

175:                                              ; preds = %113
  %176 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %2, align 8
  %177 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %176, i64 0, i32 2
  %178 = load i16*, i16** %177, align 8
  %179 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %176, i64 0, i32 3
  %180 = load i16*, i16** %179, align 8
  %181 = icmp ult i16* %178, %180
  br i1 %181, label %196, label %182, !prof !4

182:                                              ; preds = %175
  %183 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %176, i64 0, i32 6
  %184 = load i8, i8* %183, align 8, !range !2
  %185 = icmp eq i8 %184, 0
  br i1 %185, label %186, label %193

186:                                              ; preds = %182
  %187 = bitcast %"class.v8::internal::Utf16CharacterStream"* %176 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %188 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %187, align 8
  %189 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %188, i64 5
  %190 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %189, align 8
  %191 = tail call zeroext i1 %190(%"class.v8::internal::Utf16CharacterStream"* %176) #8
  %192 = load i16*, i16** %177, align 8
  br i1 %191, label %196, label %193

193:                                              ; preds = %186, %182
  %194 = phi i16* [ %192, %186 ], [ %178, %182 ]
  %195 = getelementptr inbounds i16, i16* %194, i64 1
  store i16* %195, i16** %177, align 8
  store i32 -1, i32* %30, align 8
  br label %2582

196:                                              ; preds = %186, %175
  %197 = phi i16* [ %178, %175 ], [ %192, %186 ]
  %198 = load i16, i16* %197, align 2
  %199 = zext i16 %198 to i32
  %200 = getelementptr inbounds i16, i16* %197, i64 1
  store i16* %200, i16** %177, align 8
  store i32 %199, i32* %30, align 8
  %201 = icmp eq i16 %198, 61
  br i1 %201, label %202, label %2582

202:                                              ; preds = %196
  %203 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %2, align 8
  %204 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %203, i64 0, i32 2
  %205 = load i16*, i16** %204, align 8
  %206 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %203, i64 0, i32 3
  %207 = load i16*, i16** %206, align 8
  %208 = icmp ult i16* %205, %207
  br i1 %208, label %209, label %212, !prof !4

209:                                              ; preds = %202
  %210 = load i16, i16* %205, align 2
  %211 = zext i16 %210 to i32
  br label %226

212:                                              ; preds = %202
  %213 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %203, i64 0, i32 6
  %214 = load i8, i8* %213, align 8, !range !2
  %215 = icmp eq i8 %214, 0
  br i1 %215, label %216, label %226

216:                                              ; preds = %212
  %217 = bitcast %"class.v8::internal::Utf16CharacterStream"* %203 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %218 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %217, align 8
  %219 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %218, i64 5
  %220 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %219, align 8
  %221 = tail call zeroext i1 %220(%"class.v8::internal::Utf16CharacterStream"* %203) #8
  %222 = load i16*, i16** %204, align 8
  br i1 %221, label %223, label %226

223:                                              ; preds = %216
  %224 = load i16, i16* %222, align 2
  %225 = zext i16 %224 to i32
  br label %226

226:                                              ; preds = %223, %216, %212, %209
  %227 = phi i16* [ %205, %209 ], [ %222, %223 ], [ %205, %212 ], [ %222, %216 ]
  %228 = phi i32 [ %211, %209 ], [ %225, %223 ], [ -1, %212 ], [ -1, %216 ]
  %229 = getelementptr inbounds i16, i16* %227, i64 1
  store i16* %229, i16** %204, align 8
  store i32 %228, i32* %30, align 8
  br label %2582

230:                                              ; preds = %60
  %231 = tail call zeroext i8 @_ZN2v88internal7Scanner10ScanStringEv(%"class.v8::internal::Scanner"* %0) #8
  br label %2582

232:                                              ; preds = %60
  %233 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %2, align 8
  %234 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %233, i64 0, i32 2
  %235 = load i16*, i16** %234, align 8
  %236 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %233, i64 0, i32 3
  %237 = load i16*, i16** %236, align 8
  %238 = icmp ult i16* %235, %237
  br i1 %238, label %253, label %239, !prof !4

239:                                              ; preds = %232
  %240 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %233, i64 0, i32 6
  %241 = load i8, i8* %240, align 8, !range !2
  %242 = icmp eq i8 %241, 0
  br i1 %242, label %243, label %250

243:                                              ; preds = %239
  %244 = bitcast %"class.v8::internal::Utf16CharacterStream"* %233 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %245 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %244, align 8
  %246 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %245, i64 5
  %247 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %246, align 8
  %248 = tail call zeroext i1 %247(%"class.v8::internal::Utf16CharacterStream"* %233) #8
  %249 = load i16*, i16** %234, align 8
  br i1 %248, label %253, label %250

250:                                              ; preds = %243, %239
  %251 = phi i16* [ %249, %243 ], [ %235, %239 ]
  %252 = getelementptr inbounds i16, i16* %251, i64 1
  store i16* %252, i16** %234, align 8
  store i32 -1, i32* %30, align 8
  br label %2582

253:                                              ; preds = %243, %232
  %254 = phi i16* [ %235, %232 ], [ %249, %243 ]
  %255 = load i16, i16* %254, align 2
  %256 = zext i16 %255 to i32
  %257 = getelementptr inbounds i16, i16* %254, i64 1
  store i16* %257, i16** %234, align 8
  store i32 %256, i32* %30, align 8
  switch i16 %255, label %2582 [
    i16 61, label %258
    i16 60, label %286
    i16 33, label %341
  ]

258:                                              ; preds = %253
  %259 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %2, align 8
  %260 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %259, i64 0, i32 2
  %261 = load i16*, i16** %260, align 8
  %262 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %259, i64 0, i32 3
  %263 = load i16*, i16** %262, align 8
  %264 = icmp ult i16* %261, %263
  br i1 %264, label %265, label %268, !prof !4

265:                                              ; preds = %258
  %266 = load i16, i16* %261, align 2
  %267 = zext i16 %266 to i32
  br label %282

268:                                              ; preds = %258
  %269 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %259, i64 0, i32 6
  %270 = load i8, i8* %269, align 8, !range !2
  %271 = icmp eq i8 %270, 0
  br i1 %271, label %272, label %282

272:                                              ; preds = %268
  %273 = bitcast %"class.v8::internal::Utf16CharacterStream"* %259 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %274 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %273, align 8
  %275 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %274, i64 5
  %276 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %275, align 8
  %277 = tail call zeroext i1 %276(%"class.v8::internal::Utf16CharacterStream"* %259) #8
  %278 = load i16*, i16** %260, align 8
  br i1 %277, label %279, label %282

279:                                              ; preds = %272
  %280 = load i16, i16* %278, align 2
  %281 = zext i16 %280 to i32
  br label %282

282:                                              ; preds = %279, %272, %268, %265
  %283 = phi i16* [ %261, %265 ], [ %278, %279 ], [ %261, %268 ], [ %278, %272 ]
  %284 = phi i32 [ %267, %265 ], [ %281, %279 ], [ -1, %268 ], [ -1, %272 ]
  %285 = getelementptr inbounds i16, i16* %283, i64 1
  store i16* %285, i16** %260, align 8
  store i32 %284, i32* %30, align 8
  br label %2582

286:                                              ; preds = %253
  %287 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %2, align 8
  %288 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %287, i64 0, i32 2
  %289 = load i16*, i16** %288, align 8
  %290 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %287, i64 0, i32 3
  %291 = load i16*, i16** %290, align 8
  %292 = icmp ult i16* %289, %291
  br i1 %292, label %307, label %293, !prof !4

293:                                              ; preds = %286
  %294 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %287, i64 0, i32 6
  %295 = load i8, i8* %294, align 8, !range !2
  %296 = icmp eq i8 %295, 0
  br i1 %296, label %297, label %304

297:                                              ; preds = %293
  %298 = bitcast %"class.v8::internal::Utf16CharacterStream"* %287 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %299 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %298, align 8
  %300 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %299, i64 5
  %301 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %300, align 8
  %302 = tail call zeroext i1 %301(%"class.v8::internal::Utf16CharacterStream"* %287) #8
  %303 = load i16*, i16** %288, align 8
  br i1 %302, label %307, label %304

304:                                              ; preds = %297, %293
  %305 = phi i16* [ %303, %297 ], [ %289, %293 ]
  %306 = getelementptr inbounds i16, i16* %305, i64 1
  store i16* %306, i16** %288, align 8
  store i32 -1, i32* %30, align 8
  br label %2582

307:                                              ; preds = %297, %286
  %308 = phi i16* [ %289, %286 ], [ %303, %297 ]
  %309 = load i16, i16* %308, align 2
  %310 = zext i16 %309 to i32
  %311 = getelementptr inbounds i16, i16* %308, i64 1
  store i16* %311, i16** %288, align 8
  store i32 %310, i32* %30, align 8
  %312 = icmp eq i16 %309, 61
  br i1 %312, label %313, label %2582

313:                                              ; preds = %307
  %314 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %2, align 8
  %315 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %314, i64 0, i32 2
  %316 = load i16*, i16** %315, align 8
  %317 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %314, i64 0, i32 3
  %318 = load i16*, i16** %317, align 8
  %319 = icmp ult i16* %316, %318
  br i1 %319, label %320, label %323, !prof !4

320:                                              ; preds = %313
  %321 = load i16, i16* %316, align 2
  %322 = zext i16 %321 to i32
  br label %337

323:                                              ; preds = %313
  %324 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %314, i64 0, i32 6
  %325 = load i8, i8* %324, align 8, !range !2
  %326 = icmp eq i8 %325, 0
  br i1 %326, label %327, label %337

327:                                              ; preds = %323
  %328 = bitcast %"class.v8::internal::Utf16CharacterStream"* %314 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %329 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %328, align 8
  %330 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %329, i64 5
  %331 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %330, align 8
  %332 = tail call zeroext i1 %331(%"class.v8::internal::Utf16CharacterStream"* %314) #8
  %333 = load i16*, i16** %315, align 8
  br i1 %332, label %334, label %337

334:                                              ; preds = %327
  %335 = load i16, i16* %333, align 2
  %336 = zext i16 %335 to i32
  br label %337

337:                                              ; preds = %334, %327, %323, %320
  %338 = phi i16* [ %316, %320 ], [ %333, %334 ], [ %316, %323 ], [ %333, %327 ]
  %339 = phi i32 [ %322, %320 ], [ %336, %334 ], [ -1, %323 ], [ -1, %327 ]
  %340 = getelementptr inbounds i16, i16* %338, i64 1
  store i16* %340, i16** %315, align 8
  store i32 %339, i32* %30, align 8
  br label %2582

341:                                              ; preds = %253
  %342 = tail call zeroext i8 @_ZN2v88internal7Scanner15ScanHtmlCommentEv(%"class.v8::internal::Scanner"* %0) #8
  br label %2577

343:                                              ; preds = %60
  %344 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %2, align 8
  %345 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %344, i64 0, i32 2
  %346 = load i16*, i16** %345, align 8
  %347 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %344, i64 0, i32 3
  %348 = load i16*, i16** %347, align 8
  %349 = icmp ult i16* %346, %348
  br i1 %349, label %364, label %350, !prof !4

350:                                              ; preds = %343
  %351 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %344, i64 0, i32 6
  %352 = load i8, i8* %351, align 8, !range !2
  %353 = icmp eq i8 %352, 0
  br i1 %353, label %354, label %361

354:                                              ; preds = %350
  %355 = bitcast %"class.v8::internal::Utf16CharacterStream"* %344 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %356 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %355, align 8
  %357 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %356, i64 5
  %358 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %357, align 8
  %359 = tail call zeroext i1 %358(%"class.v8::internal::Utf16CharacterStream"* %344) #8
  %360 = load i16*, i16** %345, align 8
  br i1 %359, label %364, label %361

361:                                              ; preds = %354, %350
  %362 = phi i16* [ %360, %354 ], [ %346, %350 ]
  %363 = getelementptr inbounds i16, i16* %362, i64 1
  store i16* %363, i16** %345, align 8
  store i32 -1, i32* %30, align 8
  br label %2582

364:                                              ; preds = %354, %343
  %365 = phi i16* [ %346, %343 ], [ %360, %354 ]
  %366 = load i16, i16* %365, align 2
  %367 = zext i16 %366 to i32
  %368 = getelementptr inbounds i16, i16* %365, i64 1
  store i16* %368, i16** %345, align 8
  store i32 %367, i32* %30, align 8
  switch i16 %366, label %2582 [
    i16 61, label %369
    i16 62, label %397
  ]

369:                                              ; preds = %364
  %370 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %2, align 8
  %371 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %370, i64 0, i32 2
  %372 = load i16*, i16** %371, align 8
  %373 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %370, i64 0, i32 3
  %374 = load i16*, i16** %373, align 8
  %375 = icmp ult i16* %372, %374
  br i1 %375, label %376, label %379, !prof !4

376:                                              ; preds = %369
  %377 = load i16, i16* %372, align 2
  %378 = zext i16 %377 to i32
  br label %393

379:                                              ; preds = %369
  %380 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %370, i64 0, i32 6
  %381 = load i8, i8* %380, align 8, !range !2
  %382 = icmp eq i8 %381, 0
  br i1 %382, label %383, label %393

383:                                              ; preds = %379
  %384 = bitcast %"class.v8::internal::Utf16CharacterStream"* %370 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %385 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %384, align 8
  %386 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %385, i64 5
  %387 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %386, align 8
  %388 = tail call zeroext i1 %387(%"class.v8::internal::Utf16CharacterStream"* %370) #8
  %389 = load i16*, i16** %371, align 8
  br i1 %388, label %390, label %393

390:                                              ; preds = %383
  %391 = load i16, i16* %389, align 2
  %392 = zext i16 %391 to i32
  br label %393

393:                                              ; preds = %390, %383, %379, %376
  %394 = phi i16* [ %372, %376 ], [ %389, %390 ], [ %372, %379 ], [ %389, %383 ]
  %395 = phi i32 [ %378, %376 ], [ %392, %390 ], [ -1, %379 ], [ -1, %383 ]
  %396 = getelementptr inbounds i16, i16* %394, i64 1
  store i16* %396, i16** %371, align 8
  store i32 %395, i32* %30, align 8
  br label %2582

397:                                              ; preds = %364
  %398 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %2, align 8
  %399 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %398, i64 0, i32 2
  %400 = load i16*, i16** %399, align 8
  %401 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %398, i64 0, i32 3
  %402 = load i16*, i16** %401, align 8
  %403 = icmp ult i16* %400, %402
  br i1 %403, label %418, label %404, !prof !4

404:                                              ; preds = %397
  %405 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %398, i64 0, i32 6
  %406 = load i8, i8* %405, align 8, !range !2
  %407 = icmp eq i8 %406, 0
  br i1 %407, label %408, label %415

408:                                              ; preds = %404
  %409 = bitcast %"class.v8::internal::Utf16CharacterStream"* %398 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %410 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %409, align 8
  %411 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %410, i64 5
  %412 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %411, align 8
  %413 = tail call zeroext i1 %412(%"class.v8::internal::Utf16CharacterStream"* %398) #8
  %414 = load i16*, i16** %399, align 8
  br i1 %413, label %418, label %415

415:                                              ; preds = %408, %404
  %416 = phi i16* [ %414, %408 ], [ %400, %404 ]
  %417 = getelementptr inbounds i16, i16* %416, i64 1
  store i16* %417, i16** %399, align 8
  store i32 -1, i32* %30, align 8
  br label %2582

418:                                              ; preds = %408, %397
  %419 = phi i16* [ %400, %397 ], [ %414, %408 ]
  %420 = load i16, i16* %419, align 2
  %421 = zext i16 %420 to i32
  %422 = getelementptr inbounds i16, i16* %419, i64 1
  store i16* %422, i16** %399, align 8
  store i32 %421, i32* %30, align 8
  switch i16 %420, label %2582 [
    i16 61, label %423
    i16 62, label %451
  ]

423:                                              ; preds = %418
  %424 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %2, align 8
  %425 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %424, i64 0, i32 2
  %426 = load i16*, i16** %425, align 8
  %427 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %424, i64 0, i32 3
  %428 = load i16*, i16** %427, align 8
  %429 = icmp ult i16* %426, %428
  br i1 %429, label %430, label %433, !prof !4

430:                                              ; preds = %423
  %431 = load i16, i16* %426, align 2
  %432 = zext i16 %431 to i32
  br label %447

433:                                              ; preds = %423
  %434 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %424, i64 0, i32 6
  %435 = load i8, i8* %434, align 8, !range !2
  %436 = icmp eq i8 %435, 0
  br i1 %436, label %437, label %447

437:                                              ; preds = %433
  %438 = bitcast %"class.v8::internal::Utf16CharacterStream"* %424 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %439 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %438, align 8
  %440 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %439, i64 5
  %441 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %440, align 8
  %442 = tail call zeroext i1 %441(%"class.v8::internal::Utf16CharacterStream"* %424) #8
  %443 = load i16*, i16** %425, align 8
  br i1 %442, label %444, label %447

444:                                              ; preds = %437
  %445 = load i16, i16* %443, align 2
  %446 = zext i16 %445 to i32
  br label %447

447:                                              ; preds = %444, %437, %433, %430
  %448 = phi i16* [ %426, %430 ], [ %443, %444 ], [ %426, %433 ], [ %443, %437 ]
  %449 = phi i32 [ %432, %430 ], [ %446, %444 ], [ -1, %433 ], [ -1, %437 ]
  %450 = getelementptr inbounds i16, i16* %448, i64 1
  store i16* %450, i16** %425, align 8
  store i32 %449, i32* %30, align 8
  br label %2582

451:                                              ; preds = %418
  %452 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %2, align 8
  %453 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %452, i64 0, i32 2
  %454 = load i16*, i16** %453, align 8
  %455 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %452, i64 0, i32 3
  %456 = load i16*, i16** %455, align 8
  %457 = icmp ult i16* %454, %456
  br i1 %457, label %472, label %458, !prof !4

458:                                              ; preds = %451
  %459 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %452, i64 0, i32 6
  %460 = load i8, i8* %459, align 8, !range !2
  %461 = icmp eq i8 %460, 0
  br i1 %461, label %462, label %469

462:                                              ; preds = %458
  %463 = bitcast %"class.v8::internal::Utf16CharacterStream"* %452 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %464 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %463, align 8
  %465 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %464, i64 5
  %466 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %465, align 8
  %467 = tail call zeroext i1 %466(%"class.v8::internal::Utf16CharacterStream"* %452) #8
  %468 = load i16*, i16** %453, align 8
  br i1 %467, label %472, label %469

469:                                              ; preds = %462, %458
  %470 = phi i16* [ %468, %462 ], [ %454, %458 ]
  %471 = getelementptr inbounds i16, i16* %470, i64 1
  store i16* %471, i16** %453, align 8
  store i32 -1, i32* %30, align 8
  br label %2582

472:                                              ; preds = %462, %451
  %473 = phi i16* [ %454, %451 ], [ %468, %462 ]
  %474 = load i16, i16* %473, align 2
  %475 = zext i16 %474 to i32
  %476 = getelementptr inbounds i16, i16* %473, i64 1
  store i16* %476, i16** %453, align 8
  store i32 %475, i32* %30, align 8
  %477 = icmp eq i16 %474, 61
  br i1 %477, label %478, label %2582

478:                                              ; preds = %472
  %479 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %2, align 8
  %480 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %479, i64 0, i32 2
  %481 = load i16*, i16** %480, align 8
  %482 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %479, i64 0, i32 3
  %483 = load i16*, i16** %482, align 8
  %484 = icmp ult i16* %481, %483
  br i1 %484, label %485, label %488, !prof !4

485:                                              ; preds = %478
  %486 = load i16, i16* %481, align 2
  %487 = zext i16 %486 to i32
  br label %502

488:                                              ; preds = %478
  %489 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %479, i64 0, i32 6
  %490 = load i8, i8* %489, align 8, !range !2
  %491 = icmp eq i8 %490, 0
  br i1 %491, label %492, label %502

492:                                              ; preds = %488
  %493 = bitcast %"class.v8::internal::Utf16CharacterStream"* %479 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %494 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %493, align 8
  %495 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %494, i64 5
  %496 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %495, align 8
  %497 = tail call zeroext i1 %496(%"class.v8::internal::Utf16CharacterStream"* %479) #8
  %498 = load i16*, i16** %480, align 8
  br i1 %497, label %499, label %502

499:                                              ; preds = %492
  %500 = load i16, i16* %498, align 2
  %501 = zext i16 %500 to i32
  br label %502

502:                                              ; preds = %499, %492, %488, %485
  %503 = phi i16* [ %481, %485 ], [ %498, %499 ], [ %481, %488 ], [ %498, %492 ]
  %504 = phi i32 [ %487, %485 ], [ %501, %499 ], [ -1, %488 ], [ -1, %492 ]
  %505 = getelementptr inbounds i16, i16* %503, i64 1
  store i16* %505, i16** %480, align 8
  store i32 %504, i32* %30, align 8
  br label %2582

506:                                              ; preds = %60
  %507 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %2, align 8
  %508 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %507, i64 0, i32 2
  %509 = load i16*, i16** %508, align 8
  %510 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %507, i64 0, i32 3
  %511 = load i16*, i16** %510, align 8
  %512 = icmp ult i16* %509, %511
  br i1 %512, label %527, label %513, !prof !4

513:                                              ; preds = %506
  %514 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %507, i64 0, i32 6
  %515 = load i8, i8* %514, align 8, !range !2
  %516 = icmp eq i8 %515, 0
  br i1 %516, label %517, label %524

517:                                              ; preds = %513
  %518 = bitcast %"class.v8::internal::Utf16CharacterStream"* %507 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %519 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %518, align 8
  %520 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %519, i64 5
  %521 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %520, align 8
  %522 = tail call zeroext i1 %521(%"class.v8::internal::Utf16CharacterStream"* %507) #8
  %523 = load i16*, i16** %508, align 8
  br i1 %522, label %527, label %524

524:                                              ; preds = %517, %513
  %525 = phi i16* [ %523, %517 ], [ %509, %513 ]
  %526 = getelementptr inbounds i16, i16* %525, i64 1
  store i16* %526, i16** %508, align 8
  store i32 -1, i32* %30, align 8
  br label %2582

527:                                              ; preds = %517, %506
  %528 = phi i16* [ %509, %506 ], [ %523, %517 ]
  %529 = load i16, i16* %528, align 2
  %530 = zext i16 %529 to i32
  %531 = getelementptr inbounds i16, i16* %528, i64 1
  store i16* %531, i16** %508, align 8
  store i32 %530, i32* %30, align 8
  switch i16 %529, label %2582 [
    i16 61, label %532
    i16 62, label %587
  ]

532:                                              ; preds = %527
  %533 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %2, align 8
  %534 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %533, i64 0, i32 2
  %535 = load i16*, i16** %534, align 8
  %536 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %533, i64 0, i32 3
  %537 = load i16*, i16** %536, align 8
  %538 = icmp ult i16* %535, %537
  br i1 %538, label %553, label %539, !prof !4

539:                                              ; preds = %532
  %540 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %533, i64 0, i32 6
  %541 = load i8, i8* %540, align 8, !range !2
  %542 = icmp eq i8 %541, 0
  br i1 %542, label %543, label %550

543:                                              ; preds = %539
  %544 = bitcast %"class.v8::internal::Utf16CharacterStream"* %533 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %545 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %544, align 8
  %546 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %545, i64 5
  %547 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %546, align 8
  %548 = tail call zeroext i1 %547(%"class.v8::internal::Utf16CharacterStream"* %533) #8
  %549 = load i16*, i16** %534, align 8
  br i1 %548, label %553, label %550

550:                                              ; preds = %543, %539
  %551 = phi i16* [ %549, %543 ], [ %535, %539 ]
  %552 = getelementptr inbounds i16, i16* %551, i64 1
  store i16* %552, i16** %534, align 8
  store i32 -1, i32* %30, align 8
  br label %2582

553:                                              ; preds = %543, %532
  %554 = phi i16* [ %535, %532 ], [ %549, %543 ]
  %555 = load i16, i16* %554, align 2
  %556 = zext i16 %555 to i32
  %557 = getelementptr inbounds i16, i16* %554, i64 1
  store i16* %557, i16** %534, align 8
  store i32 %556, i32* %30, align 8
  %558 = icmp eq i16 %555, 61
  br i1 %558, label %559, label %2582

559:                                              ; preds = %553
  %560 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %2, align 8
  %561 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %560, i64 0, i32 2
  %562 = load i16*, i16** %561, align 8
  %563 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %560, i64 0, i32 3
  %564 = load i16*, i16** %563, align 8
  %565 = icmp ult i16* %562, %564
  br i1 %565, label %566, label %569, !prof !4

566:                                              ; preds = %559
  %567 = load i16, i16* %562, align 2
  %568 = zext i16 %567 to i32
  br label %583

569:                                              ; preds = %559
  %570 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %560, i64 0, i32 6
  %571 = load i8, i8* %570, align 8, !range !2
  %572 = icmp eq i8 %571, 0
  br i1 %572, label %573, label %583

573:                                              ; preds = %569
  %574 = bitcast %"class.v8::internal::Utf16CharacterStream"* %560 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %575 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %574, align 8
  %576 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %575, i64 5
  %577 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %576, align 8
  %578 = tail call zeroext i1 %577(%"class.v8::internal::Utf16CharacterStream"* %560) #8
  %579 = load i16*, i16** %561, align 8
  br i1 %578, label %580, label %583

580:                                              ; preds = %573
  %581 = load i16, i16* %579, align 2
  %582 = zext i16 %581 to i32
  br label %583

583:                                              ; preds = %580, %573, %569, %566
  %584 = phi i16* [ %562, %566 ], [ %579, %580 ], [ %562, %569 ], [ %579, %573 ]
  %585 = phi i32 [ %568, %566 ], [ %582, %580 ], [ -1, %569 ], [ -1, %573 ]
  %586 = getelementptr inbounds i16, i16* %584, i64 1
  store i16* %586, i16** %561, align 8
  store i32 %585, i32* %30, align 8
  br label %2582

587:                                              ; preds = %527
  %588 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %2, align 8
  %589 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %588, i64 0, i32 2
  %590 = load i16*, i16** %589, align 8
  %591 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %588, i64 0, i32 3
  %592 = load i16*, i16** %591, align 8
  %593 = icmp ult i16* %590, %592
  br i1 %593, label %594, label %597, !prof !4

594:                                              ; preds = %587
  %595 = load i16, i16* %590, align 2
  %596 = zext i16 %595 to i32
  br label %611

597:                                              ; preds = %587
  %598 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %588, i64 0, i32 6
  %599 = load i8, i8* %598, align 8, !range !2
  %600 = icmp eq i8 %599, 0
  br i1 %600, label %601, label %611

601:                                              ; preds = %597
  %602 = bitcast %"class.v8::internal::Utf16CharacterStream"* %588 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %603 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %602, align 8
  %604 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %603, i64 5
  %605 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %604, align 8
  %606 = tail call zeroext i1 %605(%"class.v8::internal::Utf16CharacterStream"* %588) #8
  %607 = load i16*, i16** %589, align 8
  br i1 %606, label %608, label %611

608:                                              ; preds = %601
  %609 = load i16, i16* %607, align 2
  %610 = zext i16 %609 to i32
  br label %611

611:                                              ; preds = %608, %601, %597, %594
  %612 = phi i16* [ %590, %594 ], [ %607, %608 ], [ %590, %597 ], [ %607, %601 ]
  %613 = phi i32 [ %596, %594 ], [ %610, %608 ], [ -1, %597 ], [ -1, %601 ]
  %614 = getelementptr inbounds i16, i16* %612, i64 1
  store i16* %614, i16** %589, align 8
  store i32 %613, i32* %30, align 8
  br label %2582

615:                                              ; preds = %60
  %616 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %2, align 8
  %617 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %616, i64 0, i32 2
  %618 = load i16*, i16** %617, align 8
  %619 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %616, i64 0, i32 3
  %620 = load i16*, i16** %619, align 8
  %621 = icmp ult i16* %618, %620
  br i1 %621, label %636, label %622, !prof !4

622:                                              ; preds = %615
  %623 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %616, i64 0, i32 6
  %624 = load i8, i8* %623, align 8, !range !2
  %625 = icmp eq i8 %624, 0
  br i1 %625, label %626, label %633

626:                                              ; preds = %622
  %627 = bitcast %"class.v8::internal::Utf16CharacterStream"* %616 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %628 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %627, align 8
  %629 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %628, i64 5
  %630 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %629, align 8
  %631 = tail call zeroext i1 %630(%"class.v8::internal::Utf16CharacterStream"* %616) #8
  %632 = load i16*, i16** %617, align 8
  br i1 %631, label %636, label %633

633:                                              ; preds = %626, %622
  %634 = phi i16* [ %632, %626 ], [ %618, %622 ]
  %635 = getelementptr inbounds i16, i16* %634, i64 1
  store i16* %635, i16** %617, align 8
  store i32 -1, i32* %30, align 8
  br label %2582

636:                                              ; preds = %626, %615
  %637 = phi i16* [ %618, %615 ], [ %632, %626 ]
  %638 = load i16, i16* %637, align 2
  %639 = zext i16 %638 to i32
  %640 = getelementptr inbounds i16, i16* %637, i64 1
  store i16* %640, i16** %617, align 8
  store i32 %639, i32* %30, align 8
  %641 = icmp eq i16 %638, 61
  br i1 %641, label %642, label %2582

642:                                              ; preds = %636
  %643 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %2, align 8
  %644 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %643, i64 0, i32 2
  %645 = load i16*, i16** %644, align 8
  %646 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %643, i64 0, i32 3
  %647 = load i16*, i16** %646, align 8
  %648 = icmp ult i16* %645, %647
  br i1 %648, label %663, label %649, !prof !4

649:                                              ; preds = %642
  %650 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %643, i64 0, i32 6
  %651 = load i8, i8* %650, align 8, !range !2
  %652 = icmp eq i8 %651, 0
  br i1 %652, label %653, label %660

653:                                              ; preds = %649
  %654 = bitcast %"class.v8::internal::Utf16CharacterStream"* %643 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %655 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %654, align 8
  %656 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %655, i64 5
  %657 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %656, align 8
  %658 = tail call zeroext i1 %657(%"class.v8::internal::Utf16CharacterStream"* %643) #8
  %659 = load i16*, i16** %644, align 8
  br i1 %658, label %663, label %660

660:                                              ; preds = %653, %649
  %661 = phi i16* [ %659, %653 ], [ %645, %649 ]
  %662 = getelementptr inbounds i16, i16* %661, i64 1
  store i16* %662, i16** %644, align 8
  store i32 -1, i32* %30, align 8
  br label %2582

663:                                              ; preds = %653, %642
  %664 = phi i16* [ %645, %642 ], [ %659, %653 ]
  %665 = load i16, i16* %664, align 2
  %666 = zext i16 %665 to i32
  %667 = getelementptr inbounds i16, i16* %664, i64 1
  store i16* %667, i16** %644, align 8
  store i32 %666, i32* %30, align 8
  %668 = icmp eq i16 %665, 61
  br i1 %668, label %669, label %2582

669:                                              ; preds = %663
  %670 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %2, align 8
  %671 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %670, i64 0, i32 2
  %672 = load i16*, i16** %671, align 8
  %673 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %670, i64 0, i32 3
  %674 = load i16*, i16** %673, align 8
  %675 = icmp ult i16* %672, %674
  br i1 %675, label %676, label %679, !prof !4

676:                                              ; preds = %669
  %677 = load i16, i16* %672, align 2
  %678 = zext i16 %677 to i32
  br label %693

679:                                              ; preds = %669
  %680 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %670, i64 0, i32 6
  %681 = load i8, i8* %680, align 8, !range !2
  %682 = icmp eq i8 %681, 0
  br i1 %682, label %683, label %693

683:                                              ; preds = %679
  %684 = bitcast %"class.v8::internal::Utf16CharacterStream"* %670 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %685 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %684, align 8
  %686 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %685, i64 5
  %687 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %686, align 8
  %688 = tail call zeroext i1 %687(%"class.v8::internal::Utf16CharacterStream"* %670) #8
  %689 = load i16*, i16** %671, align 8
  br i1 %688, label %690, label %693

690:                                              ; preds = %683
  %691 = load i16, i16* %689, align 2
  %692 = zext i16 %691 to i32
  br label %693

693:                                              ; preds = %690, %683, %679, %676
  %694 = phi i16* [ %672, %676 ], [ %689, %690 ], [ %672, %679 ], [ %689, %683 ]
  %695 = phi i32 [ %678, %676 ], [ %692, %690 ], [ -1, %679 ], [ -1, %683 ]
  %696 = getelementptr inbounds i16, i16* %694, i64 1
  store i16* %696, i16** %671, align 8
  store i32 %695, i32* %30, align 8
  br label %2582

697:                                              ; preds = %60
  %698 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %2, align 8
  %699 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %698, i64 0, i32 2
  %700 = load i16*, i16** %699, align 8
  %701 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %698, i64 0, i32 3
  %702 = load i16*, i16** %701, align 8
  %703 = icmp ult i16* %700, %702
  br i1 %703, label %718, label %704, !prof !4

704:                                              ; preds = %697
  %705 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %698, i64 0, i32 6
  %706 = load i8, i8* %705, align 8, !range !2
  %707 = icmp eq i8 %706, 0
  br i1 %707, label %708, label %715

708:                                              ; preds = %704
  %709 = bitcast %"class.v8::internal::Utf16CharacterStream"* %698 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %710 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %709, align 8
  %711 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %710, i64 5
  %712 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %711, align 8
  %713 = tail call zeroext i1 %712(%"class.v8::internal::Utf16CharacterStream"* %698) #8
  %714 = load i16*, i16** %699, align 8
  br i1 %713, label %718, label %715

715:                                              ; preds = %708, %704
  %716 = phi i16* [ %714, %708 ], [ %700, %704 ]
  %717 = getelementptr inbounds i16, i16* %716, i64 1
  store i16* %717, i16** %699, align 8
  store i32 -1, i32* %30, align 8
  br label %2582

718:                                              ; preds = %708, %697
  %719 = phi i16* [ %700, %697 ], [ %714, %708 ]
  %720 = load i16, i16* %719, align 2
  %721 = zext i16 %720 to i32
  %722 = getelementptr inbounds i16, i16* %719, i64 1
  store i16* %722, i16** %699, align 8
  store i32 %721, i32* %30, align 8
  switch i16 %720, label %2582 [
    i16 43, label %723
    i16 61, label %751
  ]

723:                                              ; preds = %718
  %724 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %2, align 8
  %725 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %724, i64 0, i32 2
  %726 = load i16*, i16** %725, align 8
  %727 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %724, i64 0, i32 3
  %728 = load i16*, i16** %727, align 8
  %729 = icmp ult i16* %726, %728
  br i1 %729, label %730, label %733, !prof !4

730:                                              ; preds = %723
  %731 = load i16, i16* %726, align 2
  %732 = zext i16 %731 to i32
  br label %747

733:                                              ; preds = %723
  %734 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %724, i64 0, i32 6
  %735 = load i8, i8* %734, align 8, !range !2
  %736 = icmp eq i8 %735, 0
  br i1 %736, label %737, label %747

737:                                              ; preds = %733
  %738 = bitcast %"class.v8::internal::Utf16CharacterStream"* %724 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %739 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %738, align 8
  %740 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %739, i64 5
  %741 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %740, align 8
  %742 = tail call zeroext i1 %741(%"class.v8::internal::Utf16CharacterStream"* %724) #8
  %743 = load i16*, i16** %725, align 8
  br i1 %742, label %744, label %747

744:                                              ; preds = %737
  %745 = load i16, i16* %743, align 2
  %746 = zext i16 %745 to i32
  br label %747

747:                                              ; preds = %744, %737, %733, %730
  %748 = phi i16* [ %726, %730 ], [ %743, %744 ], [ %726, %733 ], [ %743, %737 ]
  %749 = phi i32 [ %732, %730 ], [ %746, %744 ], [ -1, %733 ], [ -1, %737 ]
  %750 = getelementptr inbounds i16, i16* %748, i64 1
  store i16* %750, i16** %725, align 8
  store i32 %749, i32* %30, align 8
  br label %2582

751:                                              ; preds = %718
  %752 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %2, align 8
  %753 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %752, i64 0, i32 2
  %754 = load i16*, i16** %753, align 8
  %755 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %752, i64 0, i32 3
  %756 = load i16*, i16** %755, align 8
  %757 = icmp ult i16* %754, %756
  br i1 %757, label %758, label %761, !prof !4

758:                                              ; preds = %751
  %759 = load i16, i16* %754, align 2
  %760 = zext i16 %759 to i32
  br label %775

761:                                              ; preds = %751
  %762 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %752, i64 0, i32 6
  %763 = load i8, i8* %762, align 8, !range !2
  %764 = icmp eq i8 %763, 0
  br i1 %764, label %765, label %775

765:                                              ; preds = %761
  %766 = bitcast %"class.v8::internal::Utf16CharacterStream"* %752 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %767 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %766, align 8
  %768 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %767, i64 5
  %769 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %768, align 8
  %770 = tail call zeroext i1 %769(%"class.v8::internal::Utf16CharacterStream"* %752) #8
  %771 = load i16*, i16** %753, align 8
  br i1 %770, label %772, label %775

772:                                              ; preds = %765
  %773 = load i16, i16* %771, align 2
  %774 = zext i16 %773 to i32
  br label %775

775:                                              ; preds = %772, %765, %761, %758
  %776 = phi i16* [ %754, %758 ], [ %771, %772 ], [ %754, %761 ], [ %771, %765 ]
  %777 = phi i32 [ %760, %758 ], [ %774, %772 ], [ -1, %761 ], [ -1, %765 ]
  %778 = getelementptr inbounds i16, i16* %776, i64 1
  store i16* %778, i16** %753, align 8
  store i32 %777, i32* %30, align 8
  br label %2582

779:                                              ; preds = %60
  %780 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %2, align 8
  %781 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %780, i64 0, i32 2
  %782 = load i16*, i16** %781, align 8
  %783 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %780, i64 0, i32 3
  %784 = load i16*, i16** %783, align 8
  %785 = icmp ult i16* %782, %784
  br i1 %785, label %800, label %786, !prof !4

786:                                              ; preds = %779
  %787 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %780, i64 0, i32 6
  %788 = load i8, i8* %787, align 8, !range !2
  %789 = icmp eq i8 %788, 0
  br i1 %789, label %790, label %797

790:                                              ; preds = %786
  %791 = bitcast %"class.v8::internal::Utf16CharacterStream"* %780 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %792 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %791, align 8
  %793 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %792, i64 5
  %794 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %793, align 8
  %795 = tail call zeroext i1 %794(%"class.v8::internal::Utf16CharacterStream"* %780) #8
  %796 = load i16*, i16** %781, align 8
  br i1 %795, label %800, label %797

797:                                              ; preds = %790, %786
  %798 = phi i16* [ %796, %790 ], [ %782, %786 ]
  %799 = getelementptr inbounds i16, i16* %798, i64 1
  store i16* %799, i16** %781, align 8
  store i32 -1, i32* %30, align 8
  br label %2582

800:                                              ; preds = %790, %779
  %801 = phi i16* [ %782, %779 ], [ %796, %790 ]
  %802 = load i16, i16* %801, align 2
  %803 = zext i16 %802 to i32
  %804 = getelementptr inbounds i16, i16* %801, i64 1
  store i16* %804, i16** %781, align 8
  store i32 %803, i32* %30, align 8
  switch i16 %802, label %2582 [
    i16 45, label %805
    i16 61, label %900
  ]

805:                                              ; preds = %800
  %806 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %2, align 8
  %807 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %806, i64 0, i32 2
  %808 = load i16*, i16** %807, align 8
  %809 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %806, i64 0, i32 3
  %810 = load i16*, i16** %809, align 8
  %811 = icmp ult i16* %808, %810
  br i1 %811, label %826, label %812, !prof !4

812:                                              ; preds = %805
  %813 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %806, i64 0, i32 6
  %814 = load i8, i8* %813, align 8, !range !2
  %815 = icmp eq i8 %814, 0
  br i1 %815, label %816, label %823

816:                                              ; preds = %812
  %817 = bitcast %"class.v8::internal::Utf16CharacterStream"* %806 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %818 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %817, align 8
  %819 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %818, i64 5
  %820 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %819, align 8
  %821 = tail call zeroext i1 %820(%"class.v8::internal::Utf16CharacterStream"* %806) #8
  %822 = load i16*, i16** %807, align 8
  br i1 %821, label %826, label %823

823:                                              ; preds = %816, %812
  %824 = phi i16* [ %822, %816 ], [ %808, %812 ]
  %825 = getelementptr inbounds i16, i16* %824, i64 1
  store i16* %825, i16** %807, align 8
  store i32 -1, i32* %30, align 8
  br label %2582

826:                                              ; preds = %816, %805
  %827 = phi i16* [ %808, %805 ], [ %822, %816 ]
  %828 = load i16, i16* %827, align 2
  %829 = zext i16 %828 to i32
  %830 = getelementptr inbounds i16, i16* %827, i64 1
  store i16* %830, i16** %807, align 8
  store i32 %829, i32* %30, align 8
  %831 = icmp eq i16 %828, 62
  br i1 %831, label %832, label %2582

832:                                              ; preds = %826
  %833 = load %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"** %34, align 8
  %834 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %833, i64 0, i32 8
  %835 = load i8, i8* %834, align 4, !range !2
  %836 = icmp eq i8 %835, 0
  br i1 %836, label %2582, label %837

837:                                              ; preds = %832
  %838 = load i32, i32* %40, align 4
  %839 = and i32 %838, 32
  %840 = icmp eq i32 %839, 0
  %841 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %2, align 8
  br i1 %840, label %863, label %842

842:                                              ; preds = %837
  %843 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %841, i64 0, i32 4
  %844 = load i64, i64* %843, align 8
  %845 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %841, i64 0, i32 2
  %846 = bitcast i16** %845 to i64*
  %847 = load i64, i64* %846, align 8
  %848 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %841, i64 0, i32 1
  %849 = bitcast i16** %848 to i64*
  %850 = load i64, i64* %849, align 8
  %851 = sub i64 %847, %850
  %852 = lshr exact i64 %851, 1
  %853 = add i64 %852, %844
  %854 = load i32, i32* %38, align 4
  %855 = icmp eq i32 %854, 0
  br i1 %855, label %856, label %2582

856:                                              ; preds = %842
  %857 = add i64 %853, 4294967295
  store i32 292, i32* %38, align 4
  %858 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 15
  %859 = bitcast %"struct.v8::internal::Scanner::Location"* %858 to i64*
  %860 = shl i64 %853, 32
  %861 = and i64 %857, 4294967295
  %862 = or i64 %861, %860
  store i64 %862, i64* %859, align 8
  br label %2582

863:                                              ; preds = %837
  %864 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %841, i64 0, i32 2
  %865 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %841, i64 0, i32 3
  %866 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %841, i64 0, i32 6
  %867 = bitcast %"class.v8::internal::Utf16CharacterStream"* %841 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  br label %868

868:                                              ; preds = %884, %863
  %869 = load i16*, i16** %864, align 8
  %870 = load i16*, i16** %865, align 8
  %871 = icmp eq i16* %869, %870
  br i1 %871, label %878, label %872

872:                                              ; preds = %868, %875
  %873 = phi i16* [ %876, %875 ], [ %869, %868 ]
  %874 = load i16, i16* %873, align 2
  switch i16 %874, label %875 [
    i16 8232, label %878
    i16 13, label %878
    i16 10, label %878
    i16 8233, label %878
  ]

875:                                              ; preds = %872
  %876 = getelementptr inbounds i16, i16* %873, i64 1
  %877 = icmp eq i16* %876, %870
  br i1 %877, label %881, label %872

878:                                              ; preds = %872, %872, %872, %872, %868
  %879 = phi i16* [ %869, %868 ], [ %873, %872 ], [ %873, %872 ], [ %873, %872 ], [ %873, %872 ]
  %880 = icmp eq i16* %879, %870
  br i1 %880, label %881, label %894

881:                                              ; preds = %875, %878
  store i16* %870, i16** %864, align 8
  %882 = load i8, i8* %866, align 8, !range !2
  %883 = icmp eq i8 %882, 0
  br i1 %883, label %884, label %891

884:                                              ; preds = %881
  %885 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %867, align 8
  %886 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %885, i64 5
  %887 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %886, align 8
  %888 = tail call zeroext i1 %887(%"class.v8::internal::Utf16CharacterStream"* %841) #8
  br i1 %888, label %868, label %889

889:                                              ; preds = %884
  %890 = load i16*, i16** %864, align 8
  br label %891

891:                                              ; preds = %881, %889
  %892 = phi i16* [ %890, %889 ], [ %870, %881 ]
  %893 = getelementptr inbounds i16, i16* %892, i64 1
  store i16* %893, i16** %864, align 8
  br label %898

894:                                              ; preds = %878
  %895 = getelementptr inbounds i16, i16* %879, i64 1
  store i16* %895, i16** %864, align 8
  %896 = load i16, i16* %879, align 2
  %897 = zext i16 %896 to i32
  br label %898

898:                                              ; preds = %894, %891
  %899 = phi i32 [ %897, %894 ], [ -1, %891 ]
  store i32 %899, i32* %30, align 8
  br label %2580

900:                                              ; preds = %800
  %901 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %2, align 8
  %902 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %901, i64 0, i32 2
  %903 = load i16*, i16** %902, align 8
  %904 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %901, i64 0, i32 3
  %905 = load i16*, i16** %904, align 8
  %906 = icmp ult i16* %903, %905
  br i1 %906, label %907, label %910, !prof !4

907:                                              ; preds = %900
  %908 = load i16, i16* %903, align 2
  %909 = zext i16 %908 to i32
  br label %924

910:                                              ; preds = %900
  %911 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %901, i64 0, i32 6
  %912 = load i8, i8* %911, align 8, !range !2
  %913 = icmp eq i8 %912, 0
  br i1 %913, label %914, label %924

914:                                              ; preds = %910
  %915 = bitcast %"class.v8::internal::Utf16CharacterStream"* %901 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %916 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %915, align 8
  %917 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %916, i64 5
  %918 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %917, align 8
  %919 = tail call zeroext i1 %918(%"class.v8::internal::Utf16CharacterStream"* %901) #8
  %920 = load i16*, i16** %902, align 8
  br i1 %919, label %921, label %924

921:                                              ; preds = %914
  %922 = load i16, i16* %920, align 2
  %923 = zext i16 %922 to i32
  br label %924

924:                                              ; preds = %921, %914, %910, %907
  %925 = phi i16* [ %903, %907 ], [ %920, %921 ], [ %903, %910 ], [ %920, %914 ]
  %926 = phi i32 [ %909, %907 ], [ %923, %921 ], [ -1, %910 ], [ -1, %914 ]
  %927 = getelementptr inbounds i16, i16* %925, i64 1
  store i16* %927, i16** %902, align 8
  store i32 %926, i32* %30, align 8
  br label %2582

928:                                              ; preds = %60
  %929 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %2, align 8
  %930 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %929, i64 0, i32 2
  %931 = load i16*, i16** %930, align 8
  %932 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %929, i64 0, i32 3
  %933 = load i16*, i16** %932, align 8
  %934 = icmp ult i16* %931, %933
  br i1 %934, label %949, label %935, !prof !4

935:                                              ; preds = %928
  %936 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %929, i64 0, i32 6
  %937 = load i8, i8* %936, align 8, !range !2
  %938 = icmp eq i8 %937, 0
  br i1 %938, label %939, label %946

939:                                              ; preds = %935
  %940 = bitcast %"class.v8::internal::Utf16CharacterStream"* %929 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %941 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %940, align 8
  %942 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %941, i64 5
  %943 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %942, align 8
  %944 = tail call zeroext i1 %943(%"class.v8::internal::Utf16CharacterStream"* %929) #8
  %945 = load i16*, i16** %930, align 8
  br i1 %944, label %949, label %946

946:                                              ; preds = %939, %935
  %947 = phi i16* [ %945, %939 ], [ %931, %935 ]
  %948 = getelementptr inbounds i16, i16* %947, i64 1
  store i16* %948, i16** %930, align 8
  store i32 -1, i32* %30, align 8
  br label %2582

949:                                              ; preds = %939, %928
  %950 = phi i16* [ %931, %928 ], [ %945, %939 ]
  %951 = load i16, i16* %950, align 2
  %952 = zext i16 %951 to i32
  %953 = getelementptr inbounds i16, i16* %950, i64 1
  store i16* %953, i16** %930, align 8
  store i32 %952, i32* %30, align 8
  switch i16 %951, label %2582 [
    i16 42, label %954
    i16 61, label %1009
  ]

954:                                              ; preds = %949
  %955 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %2, align 8
  %956 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %955, i64 0, i32 2
  %957 = load i16*, i16** %956, align 8
  %958 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %955, i64 0, i32 3
  %959 = load i16*, i16** %958, align 8
  %960 = icmp ult i16* %957, %959
  br i1 %960, label %975, label %961, !prof !4

961:                                              ; preds = %954
  %962 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %955, i64 0, i32 6
  %963 = load i8, i8* %962, align 8, !range !2
  %964 = icmp eq i8 %963, 0
  br i1 %964, label %965, label %972

965:                                              ; preds = %961
  %966 = bitcast %"class.v8::internal::Utf16CharacterStream"* %955 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %967 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %966, align 8
  %968 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %967, i64 5
  %969 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %968, align 8
  %970 = tail call zeroext i1 %969(%"class.v8::internal::Utf16CharacterStream"* %955) #8
  %971 = load i16*, i16** %956, align 8
  br i1 %970, label %975, label %972

972:                                              ; preds = %965, %961
  %973 = phi i16* [ %971, %965 ], [ %957, %961 ]
  %974 = getelementptr inbounds i16, i16* %973, i64 1
  store i16* %974, i16** %956, align 8
  store i32 -1, i32* %30, align 8
  br label %2582

975:                                              ; preds = %965, %954
  %976 = phi i16* [ %957, %954 ], [ %971, %965 ]
  %977 = load i16, i16* %976, align 2
  %978 = zext i16 %977 to i32
  %979 = getelementptr inbounds i16, i16* %976, i64 1
  store i16* %979, i16** %956, align 8
  store i32 %978, i32* %30, align 8
  %980 = icmp eq i16 %977, 61
  br i1 %980, label %981, label %2582

981:                                              ; preds = %975
  %982 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %2, align 8
  %983 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %982, i64 0, i32 2
  %984 = load i16*, i16** %983, align 8
  %985 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %982, i64 0, i32 3
  %986 = load i16*, i16** %985, align 8
  %987 = icmp ult i16* %984, %986
  br i1 %987, label %988, label %991, !prof !4

988:                                              ; preds = %981
  %989 = load i16, i16* %984, align 2
  %990 = zext i16 %989 to i32
  br label %1005

991:                                              ; preds = %981
  %992 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %982, i64 0, i32 6
  %993 = load i8, i8* %992, align 8, !range !2
  %994 = icmp eq i8 %993, 0
  br i1 %994, label %995, label %1005

995:                                              ; preds = %991
  %996 = bitcast %"class.v8::internal::Utf16CharacterStream"* %982 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %997 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %996, align 8
  %998 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %997, i64 5
  %999 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %998, align 8
  %1000 = tail call zeroext i1 %999(%"class.v8::internal::Utf16CharacterStream"* %982) #8
  %1001 = load i16*, i16** %983, align 8
  br i1 %1000, label %1002, label %1005

1002:                                             ; preds = %995
  %1003 = load i16, i16* %1001, align 2
  %1004 = zext i16 %1003 to i32
  br label %1005

1005:                                             ; preds = %1002, %995, %991, %988
  %1006 = phi i16* [ %984, %988 ], [ %1001, %1002 ], [ %984, %991 ], [ %1001, %995 ]
  %1007 = phi i32 [ %990, %988 ], [ %1004, %1002 ], [ -1, %991 ], [ -1, %995 ]
  %1008 = getelementptr inbounds i16, i16* %1006, i64 1
  store i16* %1008, i16** %983, align 8
  store i32 %1007, i32* %30, align 8
  br label %2582

1009:                                             ; preds = %949
  %1010 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %2, align 8
  %1011 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1010, i64 0, i32 2
  %1012 = load i16*, i16** %1011, align 8
  %1013 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1010, i64 0, i32 3
  %1014 = load i16*, i16** %1013, align 8
  %1015 = icmp ult i16* %1012, %1014
  br i1 %1015, label %1016, label %1019, !prof !4

1016:                                             ; preds = %1009
  %1017 = load i16, i16* %1012, align 2
  %1018 = zext i16 %1017 to i32
  br label %1033

1019:                                             ; preds = %1009
  %1020 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1010, i64 0, i32 6
  %1021 = load i8, i8* %1020, align 8, !range !2
  %1022 = icmp eq i8 %1021, 0
  br i1 %1022, label %1023, label %1033

1023:                                             ; preds = %1019
  %1024 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1010 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %1025 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1024, align 8
  %1026 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1025, i64 5
  %1027 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1026, align 8
  %1028 = tail call zeroext i1 %1027(%"class.v8::internal::Utf16CharacterStream"* %1010) #8
  %1029 = load i16*, i16** %1011, align 8
  br i1 %1028, label %1030, label %1033

1030:                                             ; preds = %1023
  %1031 = load i16, i16* %1029, align 2
  %1032 = zext i16 %1031 to i32
  br label %1033

1033:                                             ; preds = %1030, %1023, %1019, %1016
  %1034 = phi i16* [ %1012, %1016 ], [ %1029, %1030 ], [ %1012, %1019 ], [ %1029, %1023 ]
  %1035 = phi i32 [ %1018, %1016 ], [ %1032, %1030 ], [ -1, %1019 ], [ -1, %1023 ]
  %1036 = getelementptr inbounds i16, i16* %1034, i64 1
  store i16* %1036, i16** %1011, align 8
  store i32 %1035, i32* %30, align 8
  br label %2582

1037:                                             ; preds = %60
  %1038 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %2, align 8
  %1039 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1038, i64 0, i32 2
  %1040 = load i16*, i16** %1039, align 8
  %1041 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1038, i64 0, i32 3
  %1042 = load i16*, i16** %1041, align 8
  %1043 = icmp ult i16* %1040, %1042
  br i1 %1043, label %1058, label %1044, !prof !4

1044:                                             ; preds = %1037
  %1045 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1038, i64 0, i32 6
  %1046 = load i8, i8* %1045, align 8, !range !2
  %1047 = icmp eq i8 %1046, 0
  br i1 %1047, label %1048, label %1055

1048:                                             ; preds = %1044
  %1049 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1038 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %1050 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1049, align 8
  %1051 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1050, i64 5
  %1052 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1051, align 8
  %1053 = tail call zeroext i1 %1052(%"class.v8::internal::Utf16CharacterStream"* %1038) #8
  %1054 = load i16*, i16** %1039, align 8
  br i1 %1053, label %1058, label %1055

1055:                                             ; preds = %1048, %1044
  %1056 = phi i16* [ %1054, %1048 ], [ %1040, %1044 ]
  %1057 = getelementptr inbounds i16, i16* %1056, i64 1
  store i16* %1057, i16** %1039, align 8
  store i32 -1, i32* %30, align 8
  br label %2582

1058:                                             ; preds = %1048, %1037
  %1059 = phi i16* [ %1040, %1037 ], [ %1054, %1048 ]
  %1060 = load i16, i16* %1059, align 2
  %1061 = zext i16 %1060 to i32
  %1062 = getelementptr inbounds i16, i16* %1059, i64 1
  store i16* %1062, i16** %1039, align 8
  store i32 %1061, i32* %30, align 8
  %1063 = icmp eq i16 %1060, 61
  br i1 %1063, label %1064, label %2582

1064:                                             ; preds = %1058
  %1065 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %2, align 8
  %1066 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1065, i64 0, i32 2
  %1067 = load i16*, i16** %1066, align 8
  %1068 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1065, i64 0, i32 3
  %1069 = load i16*, i16** %1068, align 8
  %1070 = icmp ult i16* %1067, %1069
  br i1 %1070, label %1071, label %1074, !prof !4

1071:                                             ; preds = %1064
  %1072 = load i16, i16* %1067, align 2
  %1073 = zext i16 %1072 to i32
  br label %1088

1074:                                             ; preds = %1064
  %1075 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1065, i64 0, i32 6
  %1076 = load i8, i8* %1075, align 8, !range !2
  %1077 = icmp eq i8 %1076, 0
  br i1 %1077, label %1078, label %1088

1078:                                             ; preds = %1074
  %1079 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1065 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %1080 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1079, align 8
  %1081 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1080, i64 5
  %1082 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1081, align 8
  %1083 = tail call zeroext i1 %1082(%"class.v8::internal::Utf16CharacterStream"* %1065) #8
  %1084 = load i16*, i16** %1066, align 8
  br i1 %1083, label %1085, label %1088

1085:                                             ; preds = %1078
  %1086 = load i16, i16* %1084, align 2
  %1087 = zext i16 %1086 to i32
  br label %1088

1088:                                             ; preds = %1085, %1078, %1074, %1071
  %1089 = phi i16* [ %1067, %1071 ], [ %1084, %1085 ], [ %1067, %1074 ], [ %1084, %1078 ]
  %1090 = phi i32 [ %1073, %1071 ], [ %1087, %1085 ], [ -1, %1074 ], [ -1, %1078 ]
  %1091 = getelementptr inbounds i16, i16* %1089, i64 1
  store i16* %1091, i16** %1066, align 8
  store i32 %1090, i32* %30, align 8
  br label %2582

1092:                                             ; preds = %60
  %1093 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %2, align 8
  %1094 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1093, i64 0, i32 2
  %1095 = load i16*, i16** %1094, align 8
  %1096 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1093, i64 0, i32 3
  %1097 = load i16*, i16** %1096, align 8
  %1098 = icmp ult i16* %1095, %1097
  br i1 %1098, label %1113, label %1099, !prof !4

1099:                                             ; preds = %1092
  %1100 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1093, i64 0, i32 6
  %1101 = load i8, i8* %1100, align 8, !range !2
  %1102 = icmp eq i8 %1101, 0
  br i1 %1102, label %1103, label %1110

1103:                                             ; preds = %1099
  %1104 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1093 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %1105 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1104, align 8
  %1106 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1105, i64 5
  %1107 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1106, align 8
  %1108 = tail call zeroext i1 %1107(%"class.v8::internal::Utf16CharacterStream"* %1093) #8
  %1109 = load i16*, i16** %1094, align 8
  br i1 %1108, label %1113, label %1110

1110:                                             ; preds = %1103, %1099
  %1111 = phi i16* [ %1109, %1103 ], [ %1095, %1099 ]
  %1112 = getelementptr inbounds i16, i16* %1111, i64 1
  store i16* %1112, i16** %1094, align 8
  store i32 -1, i32* %30, align 8
  br label %2582

1113:                                             ; preds = %1103, %1092
  %1114 = phi i16* [ %1095, %1092 ], [ %1109, %1103 ]
  %1115 = load i16, i16* %1114, align 2
  %1116 = zext i16 %1115 to i32
  %1117 = getelementptr inbounds i16, i16* %1114, i64 1
  store i16* %1117, i16** %1094, align 8
  store i32 %1116, i32* %30, align 8
  switch i16 %1115, label %2582 [
    i16 47, label %1118
    i16 42, label %1272
    i16 61, label %1274
  ]

1118:                                             ; preds = %1113
  %1119 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %2, align 8
  %1120 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1119, i64 0, i32 2
  %1121 = load i16*, i16** %1120, align 8
  %1122 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1119, i64 0, i32 3
  %1123 = load i16*, i16** %1122, align 8
  %1124 = icmp ult i16* %1121, %1123
  br i1 %1124, label %1137, label %1125, !prof !4

1125:                                             ; preds = %1118
  %1126 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1119, i64 0, i32 6
  %1127 = load i8, i8* %1126, align 8, !range !2
  %1128 = icmp eq i8 %1127, 0
  br i1 %1128, label %1129, label %1234

1129:                                             ; preds = %1125
  %1130 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1119 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %1131 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1130, align 8
  %1132 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1131, i64 5
  %1133 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1132, align 8
  %1134 = tail call zeroext i1 %1133(%"class.v8::internal::Utf16CharacterStream"* %1119) #8
  br i1 %1134, label %1135, label %1234

1135:                                             ; preds = %1129
  %1136 = load i16*, i16** %1120, align 8
  br label %1137

1137:                                             ; preds = %1135, %1118
  %1138 = phi i16* [ %1136, %1135 ], [ %1121, %1118 ]
  %1139 = load i16, i16* %1138, align 2
  switch i16 %1139, label %1234 [
    i16 64, label %1140
    i16 35, label %1140
  ]

1140:                                             ; preds = %1137, %1137
  %1141 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %2, align 8
  %1142 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1141, i64 0, i32 2
  %1143 = load i16*, i16** %1142, align 8
  %1144 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1141, i64 0, i32 3
  %1145 = load i16*, i16** %1144, align 8
  %1146 = icmp ult i16* %1143, %1145
  br i1 %1146, label %1147, label %1150, !prof !4

1147:                                             ; preds = %1140
  %1148 = load i16, i16* %1143, align 2
  %1149 = zext i16 %1148 to i32
  br label %1164

1150:                                             ; preds = %1140
  %1151 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1141, i64 0, i32 6
  %1152 = load i8, i8* %1151, align 8, !range !2
  %1153 = icmp eq i8 %1152, 0
  br i1 %1153, label %1154, label %1164

1154:                                             ; preds = %1150
  %1155 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1141 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %1156 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1155, align 8
  %1157 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1156, i64 5
  %1158 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1157, align 8
  %1159 = tail call zeroext i1 %1158(%"class.v8::internal::Utf16CharacterStream"* %1141) #8
  %1160 = load i16*, i16** %1142, align 8
  br i1 %1159, label %1161, label %1164

1161:                                             ; preds = %1154
  %1162 = load i16, i16* %1160, align 2
  %1163 = zext i16 %1162 to i32
  br label %1164

1164:                                             ; preds = %1161, %1154, %1150, %1147
  %1165 = phi i16* [ %1143, %1147 ], [ %1160, %1161 ], [ %1143, %1150 ], [ %1160, %1154 ]
  %1166 = phi i32 [ %1149, %1147 ], [ %1163, %1161 ], [ -1, %1150 ], [ -1, %1154 ]
  %1167 = getelementptr inbounds i16, i16* %1165, i64 1
  store i16* %1167, i16** %1142, align 8
  store i32 %1166, i32* %30, align 8
  %1168 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %2, align 8
  %1169 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1168, i64 0, i32 2
  %1170 = load i16*, i16** %1169, align 8
  %1171 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1168, i64 0, i32 3
  %1172 = load i16*, i16** %1171, align 8
  %1173 = icmp ult i16* %1170, %1172
  br i1 %1173, label %1174, label %1177, !prof !4

1174:                                             ; preds = %1164
  %1175 = load i16, i16* %1170, align 2
  %1176 = zext i16 %1175 to i32
  br label %1191

1177:                                             ; preds = %1164
  %1178 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1168, i64 0, i32 6
  %1179 = load i8, i8* %1178, align 8, !range !2
  %1180 = icmp eq i8 %1179, 0
  br i1 %1180, label %1181, label %1191

1181:                                             ; preds = %1177
  %1182 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1168 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %1183 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1182, align 8
  %1184 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1183, i64 5
  %1185 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1184, align 8
  %1186 = tail call zeroext i1 %1185(%"class.v8::internal::Utf16CharacterStream"* %1168) #8
  %1187 = load i16*, i16** %1169, align 8
  br i1 %1186, label %1188, label %1191

1188:                                             ; preds = %1181
  %1189 = load i16, i16* %1187, align 2
  %1190 = zext i16 %1189 to i32
  br label %1191

1191:                                             ; preds = %1188, %1181, %1177, %1174
  %1192 = phi i16* [ %1170, %1174 ], [ %1187, %1188 ], [ %1170, %1177 ], [ %1187, %1181 ]
  %1193 = phi i32 [ %1176, %1174 ], [ %1190, %1188 ], [ -1, %1177 ], [ -1, %1181 ]
  %1194 = getelementptr inbounds i16, i16* %1192, i64 1
  store i16* %1194, i16** %1169, align 8
  store i32 %1193, i32* %30, align 8
  tail call void @_ZN2v88internal7Scanner26TryToParseSourceURLCommentEv(%"class.v8::internal::Scanner"* %0) #8
  %1195 = load i32, i32* %30, align 8
  switch i32 %1195, label %1196 [
    i32 8232, label %2580
    i32 13, label %2580
    i32 10, label %2580
    i32 8233, label %2580
    i32 -1, label %2580
  ]

1196:                                             ; preds = %1191
  %1197 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %2, align 8
  %1198 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1197, i64 0, i32 2
  %1199 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1197, i64 0, i32 3
  %1200 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1197, i64 0, i32 6
  %1201 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1197 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  br label %1202

1202:                                             ; preds = %1218, %1196
  %1203 = load i16*, i16** %1198, align 8
  %1204 = load i16*, i16** %1199, align 8
  %1205 = icmp eq i16* %1203, %1204
  br i1 %1205, label %1212, label %1206

1206:                                             ; preds = %1202, %1209
  %1207 = phi i16* [ %1210, %1209 ], [ %1203, %1202 ]
  %1208 = load i16, i16* %1207, align 2
  switch i16 %1208, label %1209 [
    i16 8232, label %1212
    i16 13, label %1212
    i16 10, label %1212
    i16 8233, label %1212
  ]

1209:                                             ; preds = %1206
  %1210 = getelementptr inbounds i16, i16* %1207, i64 1
  %1211 = icmp eq i16* %1210, %1204
  br i1 %1211, label %1215, label %1206

1212:                                             ; preds = %1206, %1206, %1206, %1206, %1202
  %1213 = phi i16* [ %1203, %1202 ], [ %1207, %1206 ], [ %1207, %1206 ], [ %1207, %1206 ], [ %1207, %1206 ]
  %1214 = icmp eq i16* %1213, %1204
  br i1 %1214, label %1215, label %1228

1215:                                             ; preds = %1209, %1212
  store i16* %1204, i16** %1198, align 8
  %1216 = load i8, i8* %1200, align 8, !range !2
  %1217 = icmp eq i8 %1216, 0
  br i1 %1217, label %1218, label %1225

1218:                                             ; preds = %1215
  %1219 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1201, align 8
  %1220 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1219, i64 5
  %1221 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1220, align 8
  %1222 = tail call zeroext i1 %1221(%"class.v8::internal::Utf16CharacterStream"* %1197) #8
  br i1 %1222, label %1202, label %1223

1223:                                             ; preds = %1218
  %1224 = load i16*, i16** %1198, align 8
  br label %1225

1225:                                             ; preds = %1215, %1223
  %1226 = phi i16* [ %1224, %1223 ], [ %1204, %1215 ]
  %1227 = getelementptr inbounds i16, i16* %1226, i64 1
  store i16* %1227, i16** %1198, align 8
  br label %1232

1228:                                             ; preds = %1212
  %1229 = getelementptr inbounds i16, i16* %1213, i64 1
  store i16* %1229, i16** %1198, align 8
  %1230 = load i16, i16* %1213, align 2
  %1231 = zext i16 %1230 to i32
  br label %1232

1232:                                             ; preds = %1228, %1225
  %1233 = phi i32 [ %1231, %1228 ], [ -1, %1225 ]
  store i32 %1233, i32* %30, align 8
  br label %2580

1234:                                             ; preds = %1137, %1129, %1125
  %1235 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %2, align 8
  %1236 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1235, i64 0, i32 2
  %1237 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1235, i64 0, i32 3
  %1238 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1235, i64 0, i32 6
  %1239 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1235 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  br label %1240

1240:                                             ; preds = %1256, %1234
  %1241 = load i16*, i16** %1236, align 8
  %1242 = load i16*, i16** %1237, align 8
  %1243 = icmp eq i16* %1241, %1242
  br i1 %1243, label %1250, label %1244

1244:                                             ; preds = %1240, %1247
  %1245 = phi i16* [ %1248, %1247 ], [ %1241, %1240 ]
  %1246 = load i16, i16* %1245, align 2
  switch i16 %1246, label %1247 [
    i16 8232, label %1250
    i16 13, label %1250
    i16 10, label %1250
    i16 8233, label %1250
  ]

1247:                                             ; preds = %1244
  %1248 = getelementptr inbounds i16, i16* %1245, i64 1
  %1249 = icmp eq i16* %1248, %1242
  br i1 %1249, label %1253, label %1244

1250:                                             ; preds = %1244, %1244, %1244, %1244, %1240
  %1251 = phi i16* [ %1241, %1240 ], [ %1245, %1244 ], [ %1245, %1244 ], [ %1245, %1244 ], [ %1245, %1244 ]
  %1252 = icmp eq i16* %1251, %1242
  br i1 %1252, label %1253, label %1266

1253:                                             ; preds = %1247, %1250
  store i16* %1242, i16** %1236, align 8
  %1254 = load i8, i8* %1238, align 8, !range !2
  %1255 = icmp eq i8 %1254, 0
  br i1 %1255, label %1256, label %1263

1256:                                             ; preds = %1253
  %1257 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1239, align 8
  %1258 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1257, i64 5
  %1259 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1258, align 8
  %1260 = tail call zeroext i1 %1259(%"class.v8::internal::Utf16CharacterStream"* %1235) #8
  br i1 %1260, label %1240, label %1261

1261:                                             ; preds = %1256
  %1262 = load i16*, i16** %1236, align 8
  br label %1263

1263:                                             ; preds = %1253, %1261
  %1264 = phi i16* [ %1262, %1261 ], [ %1242, %1253 ]
  %1265 = getelementptr inbounds i16, i16* %1264, i64 1
  store i16* %1265, i16** %1236, align 8
  br label %1270

1266:                                             ; preds = %1250
  %1267 = getelementptr inbounds i16, i16* %1251, i64 1
  store i16* %1267, i16** %1236, align 8
  %1268 = load i16, i16* %1251, align 2
  %1269 = zext i16 %1268 to i32
  br label %1270

1270:                                             ; preds = %1266, %1263
  %1271 = phi i32 [ %1269, %1266 ], [ -1, %1263 ]
  store i32 %1271, i32* %30, align 8
  br label %2580

1272:                                             ; preds = %1113
  %1273 = tail call zeroext i8 @_ZN2v88internal7Scanner20SkipMultiLineCommentEv(%"class.v8::internal::Scanner"* %0) #8
  br label %2577

1274:                                             ; preds = %1113
  %1275 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %2, align 8
  %1276 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1275, i64 0, i32 2
  %1277 = load i16*, i16** %1276, align 8
  %1278 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1275, i64 0, i32 3
  %1279 = load i16*, i16** %1278, align 8
  %1280 = icmp ult i16* %1277, %1279
  br i1 %1280, label %1281, label %1284, !prof !4

1281:                                             ; preds = %1274
  %1282 = load i16, i16* %1277, align 2
  %1283 = zext i16 %1282 to i32
  br label %1298

1284:                                             ; preds = %1274
  %1285 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1275, i64 0, i32 6
  %1286 = load i8, i8* %1285, align 8, !range !2
  %1287 = icmp eq i8 %1286, 0
  br i1 %1287, label %1288, label %1298

1288:                                             ; preds = %1284
  %1289 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1275 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %1290 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1289, align 8
  %1291 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1290, i64 5
  %1292 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1291, align 8
  %1293 = tail call zeroext i1 %1292(%"class.v8::internal::Utf16CharacterStream"* %1275) #8
  %1294 = load i16*, i16** %1276, align 8
  br i1 %1293, label %1295, label %1298

1295:                                             ; preds = %1288
  %1296 = load i16, i16* %1294, align 2
  %1297 = zext i16 %1296 to i32
  br label %1298

1298:                                             ; preds = %1295, %1288, %1284, %1281
  %1299 = phi i16* [ %1277, %1281 ], [ %1294, %1295 ], [ %1277, %1284 ], [ %1294, %1288 ]
  %1300 = phi i32 [ %1283, %1281 ], [ %1297, %1295 ], [ -1, %1284 ], [ -1, %1288 ]
  %1301 = getelementptr inbounds i16, i16* %1299, i64 1
  store i16* %1301, i16** %1276, align 8
  store i32 %1300, i32* %30, align 8
  br label %2582

1302:                                             ; preds = %60
  %1303 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %2, align 8
  %1304 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1303, i64 0, i32 2
  %1305 = load i16*, i16** %1304, align 8
  %1306 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1303, i64 0, i32 3
  %1307 = load i16*, i16** %1306, align 8
  %1308 = icmp ult i16* %1305, %1307
  br i1 %1308, label %1323, label %1309, !prof !4

1309:                                             ; preds = %1302
  %1310 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1303, i64 0, i32 6
  %1311 = load i8, i8* %1310, align 8, !range !2
  %1312 = icmp eq i8 %1311, 0
  br i1 %1312, label %1313, label %1320

1313:                                             ; preds = %1309
  %1314 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1303 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %1315 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1314, align 8
  %1316 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1315, i64 5
  %1317 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1316, align 8
  %1318 = tail call zeroext i1 %1317(%"class.v8::internal::Utf16CharacterStream"* %1303) #8
  %1319 = load i16*, i16** %1304, align 8
  br i1 %1318, label %1323, label %1320

1320:                                             ; preds = %1313, %1309
  %1321 = phi i16* [ %1319, %1313 ], [ %1305, %1309 ]
  %1322 = getelementptr inbounds i16, i16* %1321, i64 1
  store i16* %1322, i16** %1304, align 8
  store i32 -1, i32* %30, align 8
  br label %2582

1323:                                             ; preds = %1313, %1302
  %1324 = phi i16* [ %1305, %1302 ], [ %1319, %1313 ]
  %1325 = load i16, i16* %1324, align 2
  %1326 = zext i16 %1325 to i32
  %1327 = getelementptr inbounds i16, i16* %1324, i64 1
  store i16* %1327, i16** %1304, align 8
  store i32 %1326, i32* %30, align 8
  switch i16 %1325, label %2582 [
    i16 38, label %1328
    i16 61, label %1383
  ]

1328:                                             ; preds = %1323
  %1329 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %2, align 8
  %1330 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1329, i64 0, i32 2
  %1331 = load i16*, i16** %1330, align 8
  %1332 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1329, i64 0, i32 3
  %1333 = load i16*, i16** %1332, align 8
  %1334 = icmp ult i16* %1331, %1333
  br i1 %1334, label %1349, label %1335, !prof !4

1335:                                             ; preds = %1328
  %1336 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1329, i64 0, i32 6
  %1337 = load i8, i8* %1336, align 8, !range !2
  %1338 = icmp eq i8 %1337, 0
  br i1 %1338, label %1339, label %1346

1339:                                             ; preds = %1335
  %1340 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1329 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %1341 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1340, align 8
  %1342 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1341, i64 5
  %1343 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1342, align 8
  %1344 = tail call zeroext i1 %1343(%"class.v8::internal::Utf16CharacterStream"* %1329) #8
  %1345 = load i16*, i16** %1330, align 8
  br i1 %1344, label %1349, label %1346

1346:                                             ; preds = %1339, %1335
  %1347 = phi i16* [ %1345, %1339 ], [ %1331, %1335 ]
  %1348 = getelementptr inbounds i16, i16* %1347, i64 1
  store i16* %1348, i16** %1330, align 8
  store i32 -1, i32* %30, align 8
  br label %2582

1349:                                             ; preds = %1339, %1328
  %1350 = phi i16* [ %1331, %1328 ], [ %1345, %1339 ]
  %1351 = load i16, i16* %1350, align 2
  %1352 = zext i16 %1351 to i32
  %1353 = getelementptr inbounds i16, i16* %1350, i64 1
  store i16* %1353, i16** %1330, align 8
  store i32 %1352, i32* %30, align 8
  %1354 = icmp eq i16 %1351, 61
  br i1 %1354, label %1355, label %2582

1355:                                             ; preds = %1349
  %1356 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %2, align 8
  %1357 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1356, i64 0, i32 2
  %1358 = load i16*, i16** %1357, align 8
  %1359 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1356, i64 0, i32 3
  %1360 = load i16*, i16** %1359, align 8
  %1361 = icmp ult i16* %1358, %1360
  br i1 %1361, label %1362, label %1365, !prof !4

1362:                                             ; preds = %1355
  %1363 = load i16, i16* %1358, align 2
  %1364 = zext i16 %1363 to i32
  br label %1379

1365:                                             ; preds = %1355
  %1366 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1356, i64 0, i32 6
  %1367 = load i8, i8* %1366, align 8, !range !2
  %1368 = icmp eq i8 %1367, 0
  br i1 %1368, label %1369, label %1379

1369:                                             ; preds = %1365
  %1370 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1356 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %1371 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1370, align 8
  %1372 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1371, i64 5
  %1373 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1372, align 8
  %1374 = tail call zeroext i1 %1373(%"class.v8::internal::Utf16CharacterStream"* %1356) #8
  %1375 = load i16*, i16** %1357, align 8
  br i1 %1374, label %1376, label %1379

1376:                                             ; preds = %1369
  %1377 = load i16, i16* %1375, align 2
  %1378 = zext i16 %1377 to i32
  br label %1379

1379:                                             ; preds = %1376, %1369, %1365, %1362
  %1380 = phi i16* [ %1358, %1362 ], [ %1375, %1376 ], [ %1358, %1365 ], [ %1375, %1369 ]
  %1381 = phi i32 [ %1364, %1362 ], [ %1378, %1376 ], [ -1, %1365 ], [ -1, %1369 ]
  %1382 = getelementptr inbounds i16, i16* %1380, i64 1
  store i16* %1382, i16** %1357, align 8
  store i32 %1381, i32* %30, align 8
  br label %2582

1383:                                             ; preds = %1323
  %1384 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %2, align 8
  %1385 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1384, i64 0, i32 2
  %1386 = load i16*, i16** %1385, align 8
  %1387 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1384, i64 0, i32 3
  %1388 = load i16*, i16** %1387, align 8
  %1389 = icmp ult i16* %1386, %1388
  br i1 %1389, label %1390, label %1393, !prof !4

1390:                                             ; preds = %1383
  %1391 = load i16, i16* %1386, align 2
  %1392 = zext i16 %1391 to i32
  br label %1407

1393:                                             ; preds = %1383
  %1394 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1384, i64 0, i32 6
  %1395 = load i8, i8* %1394, align 8, !range !2
  %1396 = icmp eq i8 %1395, 0
  br i1 %1396, label %1397, label %1407

1397:                                             ; preds = %1393
  %1398 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1384 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %1399 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1398, align 8
  %1400 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1399, i64 5
  %1401 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1400, align 8
  %1402 = tail call zeroext i1 %1401(%"class.v8::internal::Utf16CharacterStream"* %1384) #8
  %1403 = load i16*, i16** %1385, align 8
  br i1 %1402, label %1404, label %1407

1404:                                             ; preds = %1397
  %1405 = load i16, i16* %1403, align 2
  %1406 = zext i16 %1405 to i32
  br label %1407

1407:                                             ; preds = %1404, %1397, %1393, %1390
  %1408 = phi i16* [ %1386, %1390 ], [ %1403, %1404 ], [ %1386, %1393 ], [ %1403, %1397 ]
  %1409 = phi i32 [ %1392, %1390 ], [ %1406, %1404 ], [ -1, %1393 ], [ -1, %1397 ]
  %1410 = getelementptr inbounds i16, i16* %1408, i64 1
  store i16* %1410, i16** %1385, align 8
  store i32 %1409, i32* %30, align 8
  br label %2582

1411:                                             ; preds = %60
  %1412 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %2, align 8
  %1413 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1412, i64 0, i32 2
  %1414 = load i16*, i16** %1413, align 8
  %1415 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1412, i64 0, i32 3
  %1416 = load i16*, i16** %1415, align 8
  %1417 = icmp ult i16* %1414, %1416
  br i1 %1417, label %1432, label %1418, !prof !4

1418:                                             ; preds = %1411
  %1419 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1412, i64 0, i32 6
  %1420 = load i8, i8* %1419, align 8, !range !2
  %1421 = icmp eq i8 %1420, 0
  br i1 %1421, label %1422, label %1429

1422:                                             ; preds = %1418
  %1423 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1412 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %1424 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1423, align 8
  %1425 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1424, i64 5
  %1426 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1425, align 8
  %1427 = tail call zeroext i1 %1426(%"class.v8::internal::Utf16CharacterStream"* %1412) #8
  %1428 = load i16*, i16** %1413, align 8
  br i1 %1427, label %1432, label %1429

1429:                                             ; preds = %1422, %1418
  %1430 = phi i16* [ %1428, %1422 ], [ %1414, %1418 ]
  %1431 = getelementptr inbounds i16, i16* %1430, i64 1
  store i16* %1431, i16** %1413, align 8
  store i32 -1, i32* %30, align 8
  br label %2582

1432:                                             ; preds = %1422, %1411
  %1433 = phi i16* [ %1414, %1411 ], [ %1428, %1422 ]
  %1434 = load i16, i16* %1433, align 2
  %1435 = zext i16 %1434 to i32
  %1436 = getelementptr inbounds i16, i16* %1433, i64 1
  store i16* %1436, i16** %1413, align 8
  store i32 %1435, i32* %30, align 8
  switch i16 %1434, label %2582 [
    i16 124, label %1437
    i16 61, label %1492
  ]

1437:                                             ; preds = %1432
  %1438 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %2, align 8
  %1439 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1438, i64 0, i32 2
  %1440 = load i16*, i16** %1439, align 8
  %1441 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1438, i64 0, i32 3
  %1442 = load i16*, i16** %1441, align 8
  %1443 = icmp ult i16* %1440, %1442
  br i1 %1443, label %1458, label %1444, !prof !4

1444:                                             ; preds = %1437
  %1445 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1438, i64 0, i32 6
  %1446 = load i8, i8* %1445, align 8, !range !2
  %1447 = icmp eq i8 %1446, 0
  br i1 %1447, label %1448, label %1455

1448:                                             ; preds = %1444
  %1449 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1438 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %1450 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1449, align 8
  %1451 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1450, i64 5
  %1452 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1451, align 8
  %1453 = tail call zeroext i1 %1452(%"class.v8::internal::Utf16CharacterStream"* %1438) #8
  %1454 = load i16*, i16** %1439, align 8
  br i1 %1453, label %1458, label %1455

1455:                                             ; preds = %1448, %1444
  %1456 = phi i16* [ %1454, %1448 ], [ %1440, %1444 ]
  %1457 = getelementptr inbounds i16, i16* %1456, i64 1
  store i16* %1457, i16** %1439, align 8
  store i32 -1, i32* %30, align 8
  br label %2582

1458:                                             ; preds = %1448, %1437
  %1459 = phi i16* [ %1440, %1437 ], [ %1454, %1448 ]
  %1460 = load i16, i16* %1459, align 2
  %1461 = zext i16 %1460 to i32
  %1462 = getelementptr inbounds i16, i16* %1459, i64 1
  store i16* %1462, i16** %1439, align 8
  store i32 %1461, i32* %30, align 8
  %1463 = icmp eq i16 %1460, 61
  br i1 %1463, label %1464, label %2582

1464:                                             ; preds = %1458
  %1465 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %2, align 8
  %1466 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1465, i64 0, i32 2
  %1467 = load i16*, i16** %1466, align 8
  %1468 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1465, i64 0, i32 3
  %1469 = load i16*, i16** %1468, align 8
  %1470 = icmp ult i16* %1467, %1469
  br i1 %1470, label %1471, label %1474, !prof !4

1471:                                             ; preds = %1464
  %1472 = load i16, i16* %1467, align 2
  %1473 = zext i16 %1472 to i32
  br label %1488

1474:                                             ; preds = %1464
  %1475 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1465, i64 0, i32 6
  %1476 = load i8, i8* %1475, align 8, !range !2
  %1477 = icmp eq i8 %1476, 0
  br i1 %1477, label %1478, label %1488

1478:                                             ; preds = %1474
  %1479 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1465 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %1480 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1479, align 8
  %1481 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1480, i64 5
  %1482 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1481, align 8
  %1483 = tail call zeroext i1 %1482(%"class.v8::internal::Utf16CharacterStream"* %1465) #8
  %1484 = load i16*, i16** %1466, align 8
  br i1 %1483, label %1485, label %1488

1485:                                             ; preds = %1478
  %1486 = load i16, i16* %1484, align 2
  %1487 = zext i16 %1486 to i32
  br label %1488

1488:                                             ; preds = %1485, %1478, %1474, %1471
  %1489 = phi i16* [ %1467, %1471 ], [ %1484, %1485 ], [ %1467, %1474 ], [ %1484, %1478 ]
  %1490 = phi i32 [ %1473, %1471 ], [ %1487, %1485 ], [ -1, %1474 ], [ -1, %1478 ]
  %1491 = getelementptr inbounds i16, i16* %1489, i64 1
  store i16* %1491, i16** %1466, align 8
  store i32 %1490, i32* %30, align 8
  br label %2582

1492:                                             ; preds = %1432
  %1493 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %2, align 8
  %1494 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1493, i64 0, i32 2
  %1495 = load i16*, i16** %1494, align 8
  %1496 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1493, i64 0, i32 3
  %1497 = load i16*, i16** %1496, align 8
  %1498 = icmp ult i16* %1495, %1497
  br i1 %1498, label %1499, label %1502, !prof !4

1499:                                             ; preds = %1492
  %1500 = load i16, i16* %1495, align 2
  %1501 = zext i16 %1500 to i32
  br label %1516

1502:                                             ; preds = %1492
  %1503 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1493, i64 0, i32 6
  %1504 = load i8, i8* %1503, align 8, !range !2
  %1505 = icmp eq i8 %1504, 0
  br i1 %1505, label %1506, label %1516

1506:                                             ; preds = %1502
  %1507 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1493 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %1508 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1507, align 8
  %1509 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1508, i64 5
  %1510 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1509, align 8
  %1511 = tail call zeroext i1 %1510(%"class.v8::internal::Utf16CharacterStream"* %1493) #8
  %1512 = load i16*, i16** %1494, align 8
  br i1 %1511, label %1513, label %1516

1513:                                             ; preds = %1506
  %1514 = load i16, i16* %1512, align 2
  %1515 = zext i16 %1514 to i32
  br label %1516

1516:                                             ; preds = %1513, %1506, %1502, %1499
  %1517 = phi i16* [ %1495, %1499 ], [ %1512, %1513 ], [ %1495, %1502 ], [ %1512, %1506 ]
  %1518 = phi i32 [ %1501, %1499 ], [ %1515, %1513 ], [ -1, %1502 ], [ -1, %1506 ]
  %1519 = getelementptr inbounds i16, i16* %1517, i64 1
  store i16* %1519, i16** %1494, align 8
  store i32 %1518, i32* %30, align 8
  br label %2582

1520:                                             ; preds = %60
  %1521 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %2, align 8
  %1522 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1521, i64 0, i32 2
  %1523 = load i16*, i16** %1522, align 8
  %1524 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1521, i64 0, i32 3
  %1525 = load i16*, i16** %1524, align 8
  %1526 = icmp ult i16* %1523, %1525
  br i1 %1526, label %1541, label %1527, !prof !4

1527:                                             ; preds = %1520
  %1528 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1521, i64 0, i32 6
  %1529 = load i8, i8* %1528, align 8, !range !2
  %1530 = icmp eq i8 %1529, 0
  br i1 %1530, label %1531, label %1538

1531:                                             ; preds = %1527
  %1532 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1521 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %1533 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1532, align 8
  %1534 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1533, i64 5
  %1535 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1534, align 8
  %1536 = tail call zeroext i1 %1535(%"class.v8::internal::Utf16CharacterStream"* %1521) #8
  %1537 = load i16*, i16** %1522, align 8
  br i1 %1536, label %1541, label %1538

1538:                                             ; preds = %1531, %1527
  %1539 = phi i16* [ %1537, %1531 ], [ %1523, %1527 ]
  %1540 = getelementptr inbounds i16, i16* %1539, i64 1
  store i16* %1540, i16** %1522, align 8
  store i32 -1, i32* %30, align 8
  br label %2582

1541:                                             ; preds = %1531, %1520
  %1542 = phi i16* [ %1523, %1520 ], [ %1537, %1531 ]
  %1543 = load i16, i16* %1542, align 2
  %1544 = zext i16 %1543 to i32
  %1545 = getelementptr inbounds i16, i16* %1542, i64 1
  store i16* %1545, i16** %1522, align 8
  store i32 %1544, i32* %30, align 8
  %1546 = icmp eq i16 %1543, 61
  br i1 %1546, label %1547, label %2582

1547:                                             ; preds = %1541
  %1548 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %2, align 8
  %1549 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1548, i64 0, i32 2
  %1550 = load i16*, i16** %1549, align 8
  %1551 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1548, i64 0, i32 3
  %1552 = load i16*, i16** %1551, align 8
  %1553 = icmp ult i16* %1550, %1552
  br i1 %1553, label %1554, label %1557, !prof !4

1554:                                             ; preds = %1547
  %1555 = load i16, i16* %1550, align 2
  %1556 = zext i16 %1555 to i32
  br label %1571

1557:                                             ; preds = %1547
  %1558 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1548, i64 0, i32 6
  %1559 = load i8, i8* %1558, align 8, !range !2
  %1560 = icmp eq i8 %1559, 0
  br i1 %1560, label %1561, label %1571

1561:                                             ; preds = %1557
  %1562 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1548 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %1563 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1562, align 8
  %1564 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1563, i64 5
  %1565 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1564, align 8
  %1566 = tail call zeroext i1 %1565(%"class.v8::internal::Utf16CharacterStream"* %1548) #8
  %1567 = load i16*, i16** %1549, align 8
  br i1 %1566, label %1568, label %1571

1568:                                             ; preds = %1561
  %1569 = load i16, i16* %1567, align 2
  %1570 = zext i16 %1569 to i32
  br label %1571

1571:                                             ; preds = %1568, %1561, %1557, %1554
  %1572 = phi i16* [ %1550, %1554 ], [ %1567, %1568 ], [ %1550, %1557 ], [ %1567, %1561 ]
  %1573 = phi i32 [ %1556, %1554 ], [ %1570, %1568 ], [ -1, %1557 ], [ -1, %1561 ]
  %1574 = getelementptr inbounds i16, i16* %1572, i64 1
  store i16* %1574, i16** %1549, align 8
  store i32 %1573, i32* %30, align 8
  br label %2582

1575:                                             ; preds = %60
  %1576 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %2, align 8
  %1577 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1576, i64 0, i32 2
  %1578 = load i16*, i16** %1577, align 8
  %1579 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1576, i64 0, i32 3
  %1580 = load i16*, i16** %1579, align 8
  %1581 = icmp ult i16* %1578, %1580
  br i1 %1581, label %1596, label %1582, !prof !4

1582:                                             ; preds = %1575
  %1583 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1576, i64 0, i32 6
  %1584 = load i8, i8* %1583, align 8, !range !2
  %1585 = icmp eq i8 %1584, 0
  br i1 %1585, label %1586, label %1593

1586:                                             ; preds = %1582
  %1587 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1576 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %1588 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1587, align 8
  %1589 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1588, i64 5
  %1590 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1589, align 8
  %1591 = tail call zeroext i1 %1590(%"class.v8::internal::Utf16CharacterStream"* %1576) #8
  %1592 = load i16*, i16** %1577, align 8
  br i1 %1591, label %1596, label %1593

1593:                                             ; preds = %1586, %1582
  %1594 = phi i16* [ %1592, %1586 ], [ %1578, %1582 ]
  %1595 = getelementptr inbounds i16, i16* %1594, i64 1
  store i16* %1595, i16** %1577, align 8
  store i32 -1, i32* %30, align 8
  br label %2582

1596:                                             ; preds = %1586, %1575
  %1597 = phi i16* [ %1578, %1575 ], [ %1592, %1586 ]
  %1598 = load i16, i16* %1597, align 2
  %1599 = zext i16 %1598 to i32
  %1600 = getelementptr inbounds i16, i16* %1597, i64 1
  store i16* %1600, i16** %1577, align 8
  store i32 %1599, i32* %30, align 8
  %1601 = add nsw i32 %1599, -48
  %1602 = icmp ult i32 %1601, 10
  br i1 %1602, label %1603, label %1605

1603:                                             ; preds = %1596
  %1604 = tail call zeroext i8 @_ZN2v88internal7Scanner10ScanNumberEb(%"class.v8::internal::Scanner"* %0, i1 zeroext true) #8
  br label %2582

1605:                                             ; preds = %1596
  %1606 = icmp eq i16 %1598, 46
  br i1 %1606, label %1607, label %2582

1607:                                             ; preds = %1605
  %1608 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %2, align 8
  %1609 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1608, i64 0, i32 2
  %1610 = load i16*, i16** %1609, align 8
  %1611 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1608, i64 0, i32 3
  %1612 = load i16*, i16** %1611, align 8
  %1613 = icmp ult i16* %1610, %1612
  br i1 %1613, label %1626, label %1614, !prof !4

1614:                                             ; preds = %1607
  %1615 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1608, i64 0, i32 6
  %1616 = load i8, i8* %1615, align 8, !range !2
  %1617 = icmp eq i8 %1616, 0
  br i1 %1617, label %1618, label %2582

1618:                                             ; preds = %1614
  %1619 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1608 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %1620 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1619, align 8
  %1621 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1620, i64 5
  %1622 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1621, align 8
  %1623 = tail call zeroext i1 %1622(%"class.v8::internal::Utf16CharacterStream"* %1608) #8
  br i1 %1623, label %1624, label %2582

1624:                                             ; preds = %1618
  %1625 = load i16*, i16** %1609, align 8
  br label %1626

1626:                                             ; preds = %1624, %1607
  %1627 = phi i16* [ %1625, %1624 ], [ %1610, %1607 ]
  %1628 = load i16, i16* %1627, align 2
  %1629 = icmp eq i16 %1628, 46
  br i1 %1629, label %1630, label %2582

1630:                                             ; preds = %1626
  %1631 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %2, align 8
  %1632 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1631, i64 0, i32 2
  %1633 = load i16*, i16** %1632, align 8
  %1634 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1631, i64 0, i32 3
  %1635 = load i16*, i16** %1634, align 8
  %1636 = icmp ult i16* %1633, %1635
  br i1 %1636, label %1637, label %1640, !prof !4

1637:                                             ; preds = %1630
  %1638 = load i16, i16* %1633, align 2
  %1639 = zext i16 %1638 to i32
  br label %1654

1640:                                             ; preds = %1630
  %1641 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1631, i64 0, i32 6
  %1642 = load i8, i8* %1641, align 8, !range !2
  %1643 = icmp eq i8 %1642, 0
  br i1 %1643, label %1644, label %1654

1644:                                             ; preds = %1640
  %1645 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1631 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %1646 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1645, align 8
  %1647 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1646, i64 5
  %1648 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1647, align 8
  %1649 = tail call zeroext i1 %1648(%"class.v8::internal::Utf16CharacterStream"* %1631) #8
  %1650 = load i16*, i16** %1632, align 8
  br i1 %1649, label %1651, label %1654

1651:                                             ; preds = %1644
  %1652 = load i16, i16* %1650, align 2
  %1653 = zext i16 %1652 to i32
  br label %1654

1654:                                             ; preds = %1651, %1644, %1640, %1637
  %1655 = phi i16* [ %1633, %1637 ], [ %1650, %1651 ], [ %1633, %1640 ], [ %1650, %1644 ]
  %1656 = phi i32 [ %1639, %1637 ], [ %1653, %1651 ], [ -1, %1640 ], [ -1, %1644 ]
  %1657 = getelementptr inbounds i16, i16* %1655, i64 1
  store i16* %1657, i16** %1632, align 8
  store i32 %1656, i32* %30, align 8
  %1658 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %2, align 8
  %1659 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1658, i64 0, i32 2
  %1660 = load i16*, i16** %1659, align 8
  %1661 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1658, i64 0, i32 3
  %1662 = load i16*, i16** %1661, align 8
  %1663 = icmp ult i16* %1660, %1662
  br i1 %1663, label %1664, label %1667, !prof !4

1664:                                             ; preds = %1654
  %1665 = load i16, i16* %1660, align 2
  %1666 = zext i16 %1665 to i32
  br label %1681

1667:                                             ; preds = %1654
  %1668 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1658, i64 0, i32 6
  %1669 = load i8, i8* %1668, align 8, !range !2
  %1670 = icmp eq i8 %1669, 0
  br i1 %1670, label %1671, label %1681

1671:                                             ; preds = %1667
  %1672 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1658 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %1673 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1672, align 8
  %1674 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1673, i64 5
  %1675 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1674, align 8
  %1676 = tail call zeroext i1 %1675(%"class.v8::internal::Utf16CharacterStream"* %1658) #8
  %1677 = load i16*, i16** %1659, align 8
  br i1 %1676, label %1678, label %1681

1678:                                             ; preds = %1671
  %1679 = load i16, i16* %1677, align 2
  %1680 = zext i16 %1679 to i32
  br label %1681

1681:                                             ; preds = %1678, %1671, %1667, %1664
  %1682 = phi i16* [ %1660, %1664 ], [ %1677, %1678 ], [ %1660, %1667 ], [ %1677, %1671 ]
  %1683 = phi i32 [ %1666, %1664 ], [ %1680, %1678 ], [ -1, %1667 ], [ -1, %1671 ]
  %1684 = getelementptr inbounds i16, i16* %1682, i64 1
  store i16* %1684, i16** %1659, align 8
  store i32 %1683, i32* %30, align 8
  br label %2582

1685:                                             ; preds = %60
  %1686 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %2, align 8
  %1687 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1686, i64 0, i32 2
  %1688 = load i16*, i16** %1687, align 8
  %1689 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1686, i64 0, i32 3
  %1690 = load i16*, i16** %1689, align 8
  %1691 = icmp ult i16* %1688, %1690
  br i1 %1691, label %1692, label %1695, !prof !4

1692:                                             ; preds = %1685
  %1693 = load i16, i16* %1688, align 2
  %1694 = zext i16 %1693 to i32
  br label %1709

1695:                                             ; preds = %1685
  %1696 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1686, i64 0, i32 6
  %1697 = load i8, i8* %1696, align 8, !range !2
  %1698 = icmp eq i8 %1697, 0
  br i1 %1698, label %1699, label %1709

1699:                                             ; preds = %1695
  %1700 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1686 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %1701 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1700, align 8
  %1702 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1701, i64 5
  %1703 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1702, align 8
  %1704 = tail call zeroext i1 %1703(%"class.v8::internal::Utf16CharacterStream"* %1686) #8
  %1705 = load i16*, i16** %1687, align 8
  br i1 %1704, label %1706, label %1709

1706:                                             ; preds = %1699
  %1707 = load i16, i16* %1705, align 2
  %1708 = zext i16 %1707 to i32
  br label %1709

1709:                                             ; preds = %1706, %1699, %1695, %1692
  %1710 = phi i16* [ %1688, %1692 ], [ %1705, %1706 ], [ %1688, %1695 ], [ %1705, %1699 ]
  %1711 = phi i32 [ %1694, %1692 ], [ %1708, %1706 ], [ -1, %1695 ], [ -1, %1699 ]
  %1712 = getelementptr inbounds i16, i16* %1710, i64 1
  store i16* %1712, i16** %1687, align 8
  store i32 %1711, i32* %30, align 8
  %1713 = tail call zeroext i8 @_ZN2v88internal7Scanner16ScanTemplateSpanEv(%"class.v8::internal::Scanner"* %0) #8
  br label %2582

1714:                                             ; preds = %60
  %1715 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %2, align 8
  %1716 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1715, i64 0, i32 4
  %1717 = load i64, i64* %1716, align 8
  %1718 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1715, i64 0, i32 2
  %1719 = bitcast i16** %1718 to i64*
  %1720 = load i64, i64* %1719, align 8
  %1721 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1715, i64 0, i32 1
  %1722 = bitcast i16** %1721 to i64*
  %1723 = load i64, i64* %1722, align 8
  %1724 = sub i64 %1720, %1723
  %1725 = lshr exact i64 %1724, 1
  %1726 = add i64 %1725, %1717
  %1727 = trunc i64 %1726 to i32
  %1728 = icmp eq i32 %1727, 1
  %1729 = inttoptr i64 %1720 to i16*
  br i1 %1728, label %1730, label %1788

1730:                                             ; preds = %1714
  %1731 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1715, i64 0, i32 3
  %1732 = load i16*, i16** %1731, align 8
  %1733 = icmp ugt i16* %1732, %1729
  br i1 %1733, label %1746, label %1734, !prof !4

1734:                                             ; preds = %1730
  %1735 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1715, i64 0, i32 6
  %1736 = load i8, i8* %1735, align 8, !range !2
  %1737 = icmp eq i8 %1736, 0
  br i1 %1737, label %1738, label %1788

1738:                                             ; preds = %1734
  %1739 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1715 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %1740 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1739, align 8
  %1741 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1740, i64 5
  %1742 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1741, align 8
  %1743 = tail call zeroext i1 %1742(%"class.v8::internal::Utf16CharacterStream"* %1715) #8
  br i1 %1743, label %1744, label %1788

1744:                                             ; preds = %1738
  %1745 = load i16*, i16** %1718, align 8
  br label %1746

1746:                                             ; preds = %1744, %1730
  %1747 = phi i16* [ %1745, %1744 ], [ %1729, %1730 ]
  %1748 = load i16, i16* %1747, align 2
  %1749 = icmp eq i16 %1748, 33
  br i1 %1749, label %1750, label %1788

1750:                                             ; preds = %1746
  %1751 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %2, align 8
  %1752 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1751, i64 0, i32 2
  %1753 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1751, i64 0, i32 3
  %1754 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1751, i64 0, i32 6
  %1755 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1751 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  br label %1756

1756:                                             ; preds = %1772, %1750
  %1757 = load i16*, i16** %1752, align 8
  %1758 = load i16*, i16** %1753, align 8
  %1759 = icmp eq i16* %1757, %1758
  br i1 %1759, label %1766, label %1760

1760:                                             ; preds = %1756, %1763
  %1761 = phi i16* [ %1764, %1763 ], [ %1757, %1756 ]
  %1762 = load i16, i16* %1761, align 2
  switch i16 %1762, label %1763 [
    i16 8232, label %1766
    i16 13, label %1766
    i16 10, label %1766
    i16 8233, label %1766
  ]

1763:                                             ; preds = %1760
  %1764 = getelementptr inbounds i16, i16* %1761, i64 1
  %1765 = icmp eq i16* %1764, %1758
  br i1 %1765, label %1769, label %1760

1766:                                             ; preds = %1760, %1760, %1760, %1760, %1756
  %1767 = phi i16* [ %1757, %1756 ], [ %1761, %1760 ], [ %1761, %1760 ], [ %1761, %1760 ], [ %1761, %1760 ]
  %1768 = icmp eq i16* %1767, %1758
  br i1 %1768, label %1769, label %1782

1769:                                             ; preds = %1763, %1766
  store i16* %1758, i16** %1752, align 8
  %1770 = load i8, i8* %1754, align 8, !range !2
  %1771 = icmp eq i8 %1770, 0
  br i1 %1771, label %1772, label %1779

1772:                                             ; preds = %1769
  %1773 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1755, align 8
  %1774 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1773, i64 5
  %1775 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1774, align 8
  %1776 = tail call zeroext i1 %1775(%"class.v8::internal::Utf16CharacterStream"* %1751) #8
  br i1 %1776, label %1756, label %1777

1777:                                             ; preds = %1772
  %1778 = load i16*, i16** %1752, align 8
  br label %1779

1779:                                             ; preds = %1769, %1777
  %1780 = phi i16* [ %1778, %1777 ], [ %1758, %1769 ]
  %1781 = getelementptr inbounds i16, i16* %1780, i64 1
  store i16* %1781, i16** %1752, align 8
  br label %1786

1782:                                             ; preds = %1766
  %1783 = getelementptr inbounds i16, i16* %1767, i64 1
  store i16* %1783, i16** %1752, align 8
  %1784 = load i16, i16* %1767, align 2
  %1785 = zext i16 %1784 to i32
  br label %1786

1786:                                             ; preds = %1782, %1779
  %1787 = phi i32 [ %1785, %1782 ], [ -1, %1779 ]
  store i32 %1787, i32* %30, align 8
  br label %2580

1788:                                             ; preds = %1746, %1738, %1734, %1714
  %1789 = tail call zeroext i8 @_ZN2v88internal7Scanner15ScanPrivateNameEv(%"class.v8::internal::Scanner"* %0) #8
  br label %2582

1790:                                             ; preds = %60
  %1791 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %2, align 8
  %1792 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1791, i64 0, i32 4
  %1793 = load i64, i64* %1792, align 8
  %1794 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1791, i64 0, i32 2
  %1795 = bitcast i16** %1794 to i64*
  %1796 = load i64, i64* %1795, align 8
  %1797 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1791, i64 0, i32 1
  %1798 = bitcast i16** %1797 to i64*
  %1799 = load i64, i64* %1798, align 8
  %1800 = sub i64 %1796, %1799
  %1801 = lshr exact i64 %1800, 1
  %1802 = add i64 %1801, %1793
  %1803 = trunc i64 %1802 to i32
  br label %1804

1804:                                             ; preds = %1850, %1790
  %1805 = phi i32 [ %1852, %1850 ], [ %58, %1790 ]
  %1806 = icmp ult i32 %1805, 256
  br i1 %1806, label %1812, label %1807

1807:                                             ; preds = %1804
  %1808 = tail call zeroext i1 @_ZN2v88internal16IsWhiteSpaceSlowEj(i32 %1805) #8
  %1809 = and i32 %1805, -2
  %1810 = icmp eq i32 %1809, 8232
  %1811 = or i1 %1810, %1808
  br i1 %1811, label %1818, label %1854

1812:                                             ; preds = %1804
  %1813 = zext i32 %1805 to i64
  %1814 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN2v88internalL17kOneByteCharFlagsE, i64 0, i64 %1813
  %1815 = load i8, i8* %1814, align 1
  %1816 = and i8 %1815, 8
  %1817 = icmp eq i8 %1816, 0
  br i1 %1817, label %1854, label %1818

1818:                                             ; preds = %1812, %1807
  %1819 = load %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"** %34, align 8
  %1820 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %1819, i64 0, i32 8
  %1821 = load i8, i8* %1820, align 4, !range !2
  %1822 = icmp eq i8 %1821, 0
  br i1 %1822, label %1823, label %1826

1823:                                             ; preds = %1818
  %1824 = load i32, i32* %30, align 8
  switch i32 %1824, label %1826 [
    i32 8232, label %1825
    i32 13, label %1825
    i32 10, label %1825
    i32 8233, label %1825
  ]

1825:                                             ; preds = %1823, %1823, %1823, %1823
  store i8 1, i8* %1820, align 4
  br label %1826

1826:                                             ; preds = %1825, %1823, %1818
  %1827 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %2, align 8
  %1828 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1827, i64 0, i32 2
  %1829 = load i16*, i16** %1828, align 8
  %1830 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1827, i64 0, i32 3
  %1831 = load i16*, i16** %1830, align 8
  %1832 = icmp ult i16* %1829, %1831
  br i1 %1832, label %1833, label %1836, !prof !4

1833:                                             ; preds = %1826
  %1834 = load i16, i16* %1829, align 2
  %1835 = zext i16 %1834 to i32
  br label %1850

1836:                                             ; preds = %1826
  %1837 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1827, i64 0, i32 6
  %1838 = load i8, i8* %1837, align 8, !range !2
  %1839 = icmp eq i8 %1838, 0
  br i1 %1839, label %1840, label %1850

1840:                                             ; preds = %1836
  %1841 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1827 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %1842 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1841, align 8
  %1843 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1842, i64 5
  %1844 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1843, align 8
  %1845 = tail call zeroext i1 %1844(%"class.v8::internal::Utf16CharacterStream"* %1827) #8
  %1846 = load i16*, i16** %1828, align 8
  br i1 %1845, label %1847, label %1850

1847:                                             ; preds = %1840
  %1848 = load i16, i16* %1846, align 2
  %1849 = zext i16 %1848 to i32
  br label %1850

1850:                                             ; preds = %1847, %1840, %1836, %1833
  %1851 = phi i16* [ %1829, %1833 ], [ %1846, %1847 ], [ %1829, %1836 ], [ %1846, %1840 ]
  %1852 = phi i32 [ %1835, %1833 ], [ %1849, %1847 ], [ -1, %1836 ], [ -1, %1840 ]
  %1853 = getelementptr inbounds i16, i16* %1851, i64 1
  store i16* %1853, i16** %1828, align 8
  store i32 %1852, i32* %30, align 8
  br label %1804

1854:                                             ; preds = %1812, %1807
  %1855 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %2, align 8
  %1856 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1855, i64 0, i32 4
  %1857 = load i64, i64* %1856, align 8
  %1858 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1855, i64 0, i32 2
  %1859 = bitcast i16** %1858 to i64*
  %1860 = load i64, i64* %1859, align 8
  %1861 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1855, i64 0, i32 1
  %1862 = bitcast i16** %1861 to i64*
  %1863 = load i64, i64* %1862, align 8
  %1864 = sub i64 %1860, %1863
  %1865 = lshr exact i64 %1864, 1
  %1866 = add i64 %1865, %1857
  %1867 = trunc i64 %1866 to i32
  %1868 = icmp eq i32 %1867, %1803
  br i1 %1868, label %2582, label %2580

1869:                                             ; preds = %60
  %1870 = tail call zeroext i8 @_ZN2v88internal7Scanner10ScanNumberEb(%"class.v8::internal::Scanner"* %0, i1 zeroext false) #8
  br label %2582

1871:                                             ; preds = %60
  %1872 = load %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"** %34, align 8
  %1873 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %1872, i64 0, i32 1, i32 1
  store i32 0, i32* %1873, align 8
  %1874 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %1872, i64 0, i32 1, i32 2
  store i8 1, i8* %1874, align 4
  %1875 = load i32, i32* %30, align 8
  %1876 = icmp ult i32 %1875, 128
  br i1 %1876, label %1877, label %2131, !prof !4

1877:                                             ; preds = %1871
  %1878 = icmp eq i32 %1875, 92
  br i1 %1878, label %2026, label %1879, !prof !3

1879:                                             ; preds = %1877
  %1880 = zext i32 %1875 to i64
  %1881 = getelementptr inbounds [128 x i8], [128 x i8]* @_ZN2v88internalL20character_scan_flagsE, i64 0, i64 %1880
  %1882 = load i8, i8* %1881, align 1
  %1883 = lshr i8 %1882, 1
  %1884 = trunc i32 %1875 to i8
  %1885 = load %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"** %34, align 8
  %1886 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %1885, i64 0, i32 1
  %1887 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %1885, i64 0, i32 1, i32 1
  %1888 = load i32, i32* %1887, align 8
  %1889 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %1885, i64 0, i32 1, i32 0, i32 1
  %1890 = load i64, i64* %1889, align 8
  %1891 = trunc i64 %1890 to i32
  %1892 = icmp slt i32 %1888, %1891
  br i1 %1892, label %1895, label %1893

1893:                                             ; preds = %1879
  tail call void @_ZN2v88internal13LiteralBuffer12ExpandBufferEv(%"class.v8::internal::LiteralBuffer"* %1886) #8
  %1894 = load i32, i32* %1887, align 8
  br label %1895

1895:                                             ; preds = %1893, %1879
  %1896 = phi i32 [ %1888, %1879 ], [ %1894, %1893 ]
  %1897 = sext i32 %1896 to i64
  %1898 = getelementptr inbounds %"class.v8::internal::LiteralBuffer", %"class.v8::internal::LiteralBuffer"* %1886, i64 0, i32 0, i32 0
  %1899 = load i8*, i8** %1898, align 8
  %1900 = getelementptr inbounds i8, i8* %1899, i64 %1897
  store i8 %1884, i8* %1900, align 1
  %1901 = load i32, i32* %1887, align 8
  %1902 = add nsw i32 %1901, 1
  store i32 %1902, i32* %1887, align 8
  %1903 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %2, align 8
  %1904 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1903, i64 0, i32 2
  %1905 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1903, i64 0, i32 3
  %1906 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1903, i64 0, i32 6
  %1907 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1903 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  br label %1908

1908:                                             ; preds = %1957, %1895
  %1909 = phi i8 [ %1883, %1895 ], [ %1950, %1957 ]
  %1910 = load i16*, i16** %1904, align 8
  %1911 = load i16*, i16** %1905, align 8
  %1912 = icmp eq i16* %1910, %1911
  br i1 %1912, label %1949, label %1913

1913:                                             ; preds = %1908, %1939
  %1914 = phi i8 [ %1924, %1939 ], [ %1909, %1908 ]
  %1915 = phi i16* [ %1947, %1939 ], [ %1910, %1908 ]
  %1916 = load i16, i16* %1915, align 2
  %1917 = icmp ugt i16 %1916, 127
  br i1 %1917, label %1918, label %1920, !prof !3

1918:                                             ; preds = %1913
  %1919 = or i8 %1914, 16
  br label %1949

1920:                                             ; preds = %1913
  %1921 = zext i16 %1916 to i64
  %1922 = getelementptr inbounds [128 x i8], [128 x i8]* @_ZN2v88internalL20character_scan_flagsE, i64 0, i64 %1921
  %1923 = load i8, i8* %1922, align 1
  %1924 = or i8 %1923, %1914
  %1925 = and i8 %1923, 1
  %1926 = icmp eq i8 %1925, 0
  br i1 %1926, label %1927, label %1949

1927:                                             ; preds = %1920
  %1928 = trunc i16 %1916 to i8
  %1929 = load %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"** %34, align 8
  %1930 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %1929, i64 0, i32 1
  %1931 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %1929, i64 0, i32 1, i32 1
  %1932 = load i32, i32* %1931, align 8
  %1933 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %1929, i64 0, i32 1, i32 0, i32 1
  %1934 = load i64, i64* %1933, align 8
  %1935 = trunc i64 %1934 to i32
  %1936 = icmp slt i32 %1932, %1935
  br i1 %1936, label %1939, label %1937

1937:                                             ; preds = %1927
  tail call void @_ZN2v88internal13LiteralBuffer12ExpandBufferEv(%"class.v8::internal::LiteralBuffer"* %1930) #8
  %1938 = load i32, i32* %1931, align 8
  br label %1939

1939:                                             ; preds = %1937, %1927
  %1940 = phi i32 [ %1932, %1927 ], [ %1938, %1937 ]
  %1941 = sext i32 %1940 to i64
  %1942 = getelementptr inbounds %"class.v8::internal::LiteralBuffer", %"class.v8::internal::LiteralBuffer"* %1930, i64 0, i32 0, i32 0
  %1943 = load i8*, i8** %1942, align 8
  %1944 = getelementptr inbounds i8, i8* %1943, i64 %1941
  store i8 %1928, i8* %1944, align 1
  %1945 = load i32, i32* %1931, align 8
  %1946 = add nsw i32 %1945, 1
  store i32 %1946, i32* %1931, align 8
  %1947 = getelementptr inbounds i16, i16* %1915, i64 1
  %1948 = icmp eq i16* %1947, %1911
  br i1 %1948, label %1949, label %1913

1949:                                             ; preds = %1939, %1920, %1918, %1908
  %1950 = phi i8 [ %1909, %1908 ], [ %1919, %1918 ], [ %1924, %1920 ], [ %1924, %1939 ]
  %1951 = phi i16* [ %1910, %1908 ], [ %1915, %1918 ], [ %1911, %1939 ], [ %1915, %1920 ]
  %1952 = load i16*, i16** %1905, align 8
  %1953 = icmp eq i16* %1951, %1952
  br i1 %1953, label %1954, label %1967

1954:                                             ; preds = %1949
  store i16* %1951, i16** %1904, align 8
  %1955 = load i8, i8* %1906, align 8, !range !2
  %1956 = icmp eq i8 %1955, 0
  br i1 %1956, label %1957, label %1964

1957:                                             ; preds = %1954
  %1958 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1907, align 8
  %1959 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1958, i64 5
  %1960 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1959, align 8
  %1961 = tail call zeroext i1 %1960(%"class.v8::internal::Utf16CharacterStream"* %1903) #8
  br i1 %1961, label %1908, label %1962

1962:                                             ; preds = %1957
  %1963 = load i16*, i16** %1904, align 8
  br label %1964

1964:                                             ; preds = %1954, %1962
  %1965 = phi i16* [ %1963, %1962 ], [ %1951, %1954 ]
  %1966 = getelementptr inbounds i16, i16* %1965, i64 1
  store i16* %1966, i16** %1904, align 8
  br label %1971

1967:                                             ; preds = %1949
  %1968 = getelementptr inbounds i16, i16* %1951, i64 1
  store i16* %1968, i16** %1904, align 8
  %1969 = load i16, i16* %1951, align 2
  %1970 = zext i16 %1969 to i32
  br label %1971

1971:                                             ; preds = %1967, %1964
  %1972 = phi i32 [ %1970, %1967 ], [ -1, %1964 ]
  store i32 %1972, i32* %30, align 8
  %1973 = and i8 %1950, 16
  %1974 = icmp ne i8 %1973, 0
  %1975 = and i8 %1950, 2
  %1976 = icmp eq i8 %1975, 0
  %1977 = xor i1 %1976, true
  %1978 = or i1 %1974, %1977
  br i1 %1978, label %2023, label %1979, !prof !5

1979:                                             ; preds = %1971
  %1980 = load %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"** %34, align 8
  %1981 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %1980, i64 0, i32 1, i32 0, i32 0
  %1982 = load i8*, i8** %1981, align 8
  %1983 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %1980, i64 0, i32 1, i32 1
  %1984 = load i32, i32* %1983, align 8
  %1985 = add i32 %1984, -2
  %1986 = icmp ult i32 %1985, 9
  br i1 %1986, label %1987, label %2582

1987:                                             ; preds = %1979
  %1988 = getelementptr inbounds i8, i8* %1982, i64 1
  %1989 = load i8, i8* %1988, align 1
  %1990 = zext i8 %1989 to i64
  %1991 = getelementptr inbounds [128 x i8], [128 x i8]* @_ZZN2v88internal18PerfectKeywordHash4HashEPKciE11asso_values, i64 0, i64 %1990
  %1992 = load i8, i8* %1991, align 1
  %1993 = zext i8 %1992 to i32
  %1994 = add nuw nsw i32 %1984, %1993
  %1995 = load i8, i8* %1982, align 1
  %1996 = zext i8 %1995 to i64
  %1997 = getelementptr inbounds [128 x i8], [128 x i8]* @_ZZN2v88internal18PerfectKeywordHash4HashEPKciE11asso_values, i64 0, i64 %1996
  %1998 = load i8, i8* %1997, align 1
  %1999 = zext i8 %1998 to i32
  %2000 = add nuw nsw i32 %1994, %1999
  %2001 = and i32 %2000, 63
  %2002 = zext i32 %2001 to i64
  %2003 = getelementptr inbounds [64 x i8], [64 x i8]* bitcast (<{ [56 x i8], [8 x i8] }>* @_ZN2v88internalL26kPerfectKeywordLengthTableE to [64 x i8]*), i64 0, i64 %2002
  %2004 = load i8, i8* %2003, align 1
  %2005 = zext i8 %2004 to i32
  %2006 = icmp eq i32 %1984, %2005
  br i1 %2006, label %2007, label %2582

2007:                                             ; preds = %1987
  %2008 = getelementptr inbounds [64 x %"struct.v8::internal::PerfectKeywordHashTableEntry"], [64 x %"struct.v8::internal::PerfectKeywordHashTableEntry"]* @_ZN2v88internalL24kPerfectKeywordHashTableE, i64 0, i64 %2002, i32 0
  %2009 = load i8*, i8** %2008, align 16
  br label %2010

2010:                                             ; preds = %2015, %2007
  %2011 = phi i8* [ %1982, %2007 ], [ %2017, %2015 ]
  %2012 = phi i8* [ %2009, %2007 ], [ %2016, %2015 ]
  %2013 = load i8, i8* %2012, align 1
  %2014 = icmp eq i8 %2013, 0
  br i1 %2014, label %2020, label %2015

2015:                                             ; preds = %2010
  %2016 = getelementptr inbounds i8, i8* %2012, i64 1
  %2017 = getelementptr inbounds i8, i8* %2011, i64 1
  %2018 = load i8, i8* %2011, align 1
  %2019 = icmp eq i8 %2013, %2018
  br i1 %2019, label %2010, label %2582

2020:                                             ; preds = %2010
  %2021 = getelementptr inbounds [64 x %"struct.v8::internal::PerfectKeywordHashTableEntry"], [64 x %"struct.v8::internal::PerfectKeywordHashTableEntry"]* @_ZN2v88internalL24kPerfectKeywordHashTableE, i64 0, i64 %2002, i32 1
  %2022 = load i8, i8* %2021, align 8
  br label %2582

2023:                                             ; preds = %1971
  %2024 = xor i1 %1974, true
  %2025 = or i1 %1976, %2024
  br i1 %1974, label %2131, label %2582

2026:                                             ; preds = %1877
  %2027 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %2, align 8
  %2028 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2027, i64 0, i32 2
  %2029 = load i16*, i16** %2028, align 8
  %2030 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2027, i64 0, i32 3
  %2031 = load i16*, i16** %2030, align 8
  %2032 = icmp ult i16* %2029, %2031
  br i1 %2032, label %2047, label %2033, !prof !4

2033:                                             ; preds = %2026
  %2034 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2027, i64 0, i32 6
  %2035 = load i8, i8* %2034, align 8, !range !2
  %2036 = icmp eq i8 %2035, 0
  br i1 %2036, label %2037, label %2044

2037:                                             ; preds = %2033
  %2038 = bitcast %"class.v8::internal::Utf16CharacterStream"* %2027 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %2039 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %2038, align 8
  %2040 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %2039, i64 5
  %2041 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %2040, align 8
  %2042 = tail call zeroext i1 %2041(%"class.v8::internal::Utf16CharacterStream"* %2027) #8
  %2043 = load i16*, i16** %2028, align 8
  br i1 %2042, label %2047, label %2044

2044:                                             ; preds = %2037, %2033
  %2045 = phi i16* [ %2043, %2037 ], [ %2029, %2033 ]
  %2046 = getelementptr inbounds i16, i16* %2045, i64 1
  store i16* %2046, i16** %2028, align 8
  store i32 -1, i32* %30, align 8
  br label %2091

2047:                                             ; preds = %2037, %2026
  %2048 = phi i16* [ %2029, %2026 ], [ %2043, %2037 ]
  %2049 = load i16, i16* %2048, align 2
  %2050 = zext i16 %2049 to i32
  %2051 = getelementptr inbounds i16, i16* %2048, i64 1
  store i16* %2051, i16** %2028, align 8
  store i32 %2050, i32* %30, align 8
  %2052 = icmp eq i16 %2049, 117
  br i1 %2052, label %2053, label %2091

2053:                                             ; preds = %2047
  %2054 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %2, align 8
  %2055 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2054, i64 0, i32 2
  %2056 = load i16*, i16** %2055, align 8
  %2057 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2054, i64 0, i32 3
  %2058 = load i16*, i16** %2057, align 8
  %2059 = icmp ult i16* %2056, %2058
  br i1 %2059, label %2060, label %2063, !prof !4

2060:                                             ; preds = %2053
  %2061 = load i16, i16* %2056, align 2
  %2062 = zext i16 %2061 to i32
  br label %2077

2063:                                             ; preds = %2053
  %2064 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2054, i64 0, i32 6
  %2065 = load i8, i8* %2064, align 8, !range !2
  %2066 = icmp eq i8 %2065, 0
  br i1 %2066, label %2067, label %2077

2067:                                             ; preds = %2063
  %2068 = bitcast %"class.v8::internal::Utf16CharacterStream"* %2054 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %2069 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %2068, align 8
  %2070 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %2069, i64 5
  %2071 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %2070, align 8
  %2072 = tail call zeroext i1 %2071(%"class.v8::internal::Utf16CharacterStream"* %2054) #8
  %2073 = load i16*, i16** %2055, align 8
  br i1 %2072, label %2074, label %2077

2074:                                             ; preds = %2067
  %2075 = load i16, i16* %2073, align 2
  %2076 = zext i16 %2075 to i32
  br label %2077

2077:                                             ; preds = %2074, %2067, %2063, %2060
  %2078 = phi i16* [ %2056, %2060 ], [ %2073, %2074 ], [ %2056, %2063 ], [ %2073, %2067 ]
  %2079 = phi i32 [ %2062, %2060 ], [ %2076, %2074 ], [ -1, %2063 ], [ -1, %2067 ]
  %2080 = getelementptr inbounds i16, i16* %2078, i64 1
  store i16* %2080, i16** %2055, align 8
  store i32 %2079, i32* %30, align 8
  %2081 = tail call i32 @_ZN2v88internal7Scanner17ScanUnicodeEscapeILb0EEEjv(%"class.v8::internal::Scanner"* %0) #8
  %2082 = icmp eq i32 %2081, 92
  br i1 %2082, label %2582, label %2083

2083:                                             ; preds = %2077
  %2084 = icmp ult i32 %2081, 256
  br i1 %2084, label %2085, label %2091

2085:                                             ; preds = %2083
  %2086 = zext i32 %2081 to i64
  %2087 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN2v88internalL17kOneByteCharFlagsE, i64 0, i64 %2086
  %2088 = load i8, i8* %2087, align 1
  %2089 = and i8 %2088, 1
  %2090 = icmp eq i8 %2089, 0
  br i1 %2090, label %2582, label %2094

2091:                                             ; preds = %2083, %2047, %2044
  %2092 = phi i32 [ %2081, %2083 ], [ -1, %2047 ], [ -1, %2044 ]
  %2093 = tail call zeroext i1 @_ZN2v88internal21IsIdentifierStartSlowEj(i32 %2092) #8
  br i1 %2093, label %2094, label %2582

2094:                                             ; preds = %2091, %2085
  %2095 = phi i32 [ %2081, %2085 ], [ %2092, %2091 ]
  %2096 = phi i1 [ true, %2085 ], [ false, %2091 ]
  %2097 = load %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"** %34, align 8
  %2098 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %2097, i64 0, i32 1
  %2099 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %2097, i64 0, i32 1, i32 2
  %2100 = load i8, i8* %2099, align 4, !range !2
  %2101 = icmp eq i8 %2100, 0
  br i1 %2101, label %2122, label %2102

2102:                                             ; preds = %2094
  br i1 %2096, label %2103, label %2121

2103:                                             ; preds = %2102
  %2104 = trunc i32 %2095 to i8
  %2105 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %2097, i64 0, i32 1, i32 1
  %2106 = load i32, i32* %2105, align 8
  %2107 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %2097, i64 0, i32 1, i32 0, i32 1
  %2108 = load i64, i64* %2107, align 8
  %2109 = trunc i64 %2108 to i32
  %2110 = icmp slt i32 %2106, %2109
  br i1 %2110, label %2113, label %2111

2111:                                             ; preds = %2103
  tail call void @_ZN2v88internal13LiteralBuffer12ExpandBufferEv(%"class.v8::internal::LiteralBuffer"* %2098) #8
  %2112 = load i32, i32* %2105, align 8
  br label %2113

2113:                                             ; preds = %2111, %2103
  %2114 = phi i32 [ %2106, %2103 ], [ %2112, %2111 ]
  %2115 = sext i32 %2114 to i64
  %2116 = getelementptr inbounds %"class.v8::internal::LiteralBuffer", %"class.v8::internal::LiteralBuffer"* %2098, i64 0, i32 0, i32 0
  %2117 = load i8*, i8** %2116, align 8
  %2118 = getelementptr inbounds i8, i8* %2117, i64 %2115
  store i8 %2104, i8* %2118, align 1
  %2119 = load i32, i32* %2105, align 8
  %2120 = add nsw i32 %2119, 1
  store i32 %2120, i32* %2105, align 8
  br label %2123

2121:                                             ; preds = %2102
  tail call void @_ZN2v88internal13LiteralBuffer16ConvertToTwoByteEv(%"class.v8::internal::LiteralBuffer"* %2098) #8
  br label %2122

2122:                                             ; preds = %2121, %2094
  tail call void @_ZN2v88internal13LiteralBuffer14AddTwoByteCharEj(%"class.v8::internal::LiteralBuffer"* %2098, i32 %2095) #8
  br label %2123

2123:                                             ; preds = %2122, %2113
  %2124 = icmp ult i32 %2095, 128
  br i1 %2124, label %2125, label %2131

2125:                                             ; preds = %2123
  %2126 = zext i32 %2095 to i64
  %2127 = getelementptr inbounds [128 x i8], [128 x i8]* @_ZN2v88internalL20character_scan_flagsE, i64 0, i64 %2126
  %2128 = load i8, i8* %2127, align 1
  %2129 = and i8 %2128, 2
  %2130 = icmp eq i8 %2129, 0
  br label %2131

2131:                                             ; preds = %2125, %2123, %2023, %1871
  %2132 = phi i1 [ %2025, %2023 ], [ true, %1871 ], [ false, %2123 ], [ %2130, %2125 ]
  %2133 = phi i1 [ false, %2023 ], [ false, %1871 ], [ true, %2123 ], [ true, %2125 ]
  %2134 = tail call zeroext i8 @_ZN2v88internal7Scanner32ScanIdentifierOrKeywordInnerSlowEbb(%"class.v8::internal::Scanner"* %0, i1 zeroext %2133, i1 zeroext %2132) #8
  br label %2582

2135:                                             ; preds = %60
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0)) #9
  unreachable

2136:                                             ; preds = %41
  %2137 = icmp ult i32 %58, 256
  br i1 %2137, label %2138, label %2144

2138:                                             ; preds = %2136
  %2139 = zext i32 %58 to i64
  %2140 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN2v88internalL17kOneByteCharFlagsE, i64 0, i64 %2139
  %2141 = load i8, i8* %2140, align 1
  %2142 = and i8 %2141, 1
  %2143 = icmp eq i8 %2142, 0
  br i1 %2143, label %2148, label %2224

2144:                                             ; preds = %2136
  %2145 = tail call zeroext i1 @_ZN2v88internal21IsIdentifierStartSlowEj(i32 %58) #8
  br i1 %2145, label %2224, label %2146

2146:                                             ; preds = %2144
  %2147 = load i32, i32* %30, align 8
  br label %2148

2148:                                             ; preds = %2146, %2138
  %2149 = phi i32 [ %2147, %2146 ], [ %58, %2138 ]
  %2150 = and i32 %2149, 64512
  %2151 = icmp eq i32 %2150, 55296
  br i1 %2151, label %2152, label %2490

2152:                                             ; preds = %2148
  %2153 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %2, align 8
  %2154 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2153, i64 0, i32 2
  %2155 = load i16*, i16** %2154, align 8
  %2156 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2153, i64 0, i32 3
  %2157 = load i16*, i16** %2156, align 8
  %2158 = icmp ult i16* %2155, %2157
  br i1 %2158, label %2173, label %2159, !prof !4

2159:                                             ; preds = %2152
  %2160 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2153, i64 0, i32 6
  %2161 = load i8, i8* %2160, align 8, !range !2
  %2162 = icmp eq i8 %2161, 0
  br i1 %2162, label %2163, label %2170

2163:                                             ; preds = %2159
  %2164 = bitcast %"class.v8::internal::Utf16CharacterStream"* %2153 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %2165 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %2164, align 8
  %2166 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %2165, i64 5
  %2167 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %2166, align 8
  %2168 = tail call zeroext i1 %2167(%"class.v8::internal::Utf16CharacterStream"* %2153) #8
  %2169 = load i16*, i16** %2154, align 8
  br i1 %2168, label %2173, label %2170

2170:                                             ; preds = %2163, %2159
  %2171 = phi i16* [ %2169, %2163 ], [ %2155, %2159 ]
  %2172 = getelementptr inbounds i16, i16* %2171, i64 1
  store i16* %2172, i16** %2154, align 8
  br label %2180

2173:                                             ; preds = %2163, %2152
  %2174 = phi i16* [ %2155, %2152 ], [ %2169, %2163 ]
  %2175 = load i16, i16* %2174, align 2
  %2176 = zext i16 %2175 to i32
  %2177 = getelementptr inbounds i16, i16* %2174, i64 1
  store i16* %2177, i16** %2154, align 8
  %2178 = and i32 %2176, 64512
  %2179 = icmp eq i32 %2178, 56320
  br i1 %2179, label %2208, label %2180

2180:                                             ; preds = %2173, %2170
  %2181 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %2, align 8
  %2182 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2181, i64 0, i32 2
  %2183 = load i16*, i16** %2182, align 8
  %2184 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2181, i64 0, i32 1
  %2185 = load i16*, i16** %2184, align 8
  %2186 = icmp ugt i16* %2183, %2185
  %2187 = ptrtoint i16* %2185 to i64
  br i1 %2186, label %2188, label %2190, !prof !4

2188:                                             ; preds = %2180
  %2189 = getelementptr inbounds i16, i16* %2183, i64 -1
  store i16* %2189, i16** %2182, align 8
  br label %2488

2190:                                             ; preds = %2180
  %2191 = ptrtoint i16* %2183 to i64
  %2192 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2181, i64 0, i32 4
  %2193 = load i64, i64* %2192, align 8
  %2194 = bitcast i16** %2182 to i64*
  %2195 = sub i64 %2191, %2187
  %2196 = ashr exact i64 %2195, 1
  %2197 = add nsw i64 %2196, -1
  %2198 = add i64 %2197, %2193
  store i64 %2198, i64* %2192, align 8
  store i64 %2187, i64* %2194, align 8
  %2199 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2181, i64 0, i32 6
  %2200 = load i8, i8* %2199, align 8, !range !2
  %2201 = icmp eq i8 %2200, 0
  br i1 %2201, label %2202, label %2488

2202:                                             ; preds = %2190
  %2203 = bitcast %"class.v8::internal::Utf16CharacterStream"* %2181 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %2204 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %2203, align 8
  %2205 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %2204, i64 5
  %2206 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %2205, align 8
  %2207 = tail call zeroext i1 %2206(%"class.v8::internal::Utf16CharacterStream"* %2181) #8
  br label %2488

2208:                                             ; preds = %2173
  %2209 = load i32, i32* %30, align 8
  %2210 = shl i32 %2209, 10
  %2211 = and i32 %2210, 1047552
  %2212 = add nuw nsw i32 %2211, 65536
  %2213 = and i32 %2176, 1023
  %2214 = or i32 %2212, %2213
  store i32 %2214, i32* %30, align 8
  %2215 = icmp ult i32 %2214, 256
  br i1 %2215, label %2216, label %2222

2216:                                             ; preds = %2208
  %2217 = zext i32 %2214 to i64
  %2218 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN2v88internalL17kOneByteCharFlagsE, i64 0, i64 %2217
  %2219 = load i8, i8* %2218, align 1
  %2220 = and i8 %2219, 1
  %2221 = icmp eq i8 %2220, 0
  br i1 %2221, label %2488, label %2224

2222:                                             ; preds = %2208
  %2223 = tail call zeroext i1 @_ZN2v88internal21IsIdentifierStartSlowEj(i32 %2214) #8
  br i1 %2223, label %2224, label %2488

2224:                                             ; preds = %2222, %2216, %2144, %2138
  %2225 = load %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"** %34, align 8
  %2226 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %2225, i64 0, i32 1, i32 1
  store i32 0, i32* %2226, align 8
  %2227 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %2225, i64 0, i32 1, i32 2
  store i8 1, i8* %2227, align 4
  %2228 = load i32, i32* %30, align 8
  %2229 = icmp ult i32 %2228, 128
  br i1 %2229, label %2230, label %2484, !prof !4

2230:                                             ; preds = %2224
  %2231 = icmp eq i32 %2228, 92
  br i1 %2231, label %2379, label %2232, !prof !3

2232:                                             ; preds = %2230
  %2233 = zext i32 %2228 to i64
  %2234 = getelementptr inbounds [128 x i8], [128 x i8]* @_ZN2v88internalL20character_scan_flagsE, i64 0, i64 %2233
  %2235 = load i8, i8* %2234, align 1
  %2236 = lshr i8 %2235, 1
  %2237 = trunc i32 %2228 to i8
  %2238 = load %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"** %34, align 8
  %2239 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %2238, i64 0, i32 1
  %2240 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %2238, i64 0, i32 1, i32 1
  %2241 = load i32, i32* %2240, align 8
  %2242 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %2238, i64 0, i32 1, i32 0, i32 1
  %2243 = load i64, i64* %2242, align 8
  %2244 = trunc i64 %2243 to i32
  %2245 = icmp slt i32 %2241, %2244
  br i1 %2245, label %2248, label %2246

2246:                                             ; preds = %2232
  tail call void @_ZN2v88internal13LiteralBuffer12ExpandBufferEv(%"class.v8::internal::LiteralBuffer"* %2239) #8
  %2247 = load i32, i32* %2240, align 8
  br label %2248

2248:                                             ; preds = %2246, %2232
  %2249 = phi i32 [ %2241, %2232 ], [ %2247, %2246 ]
  %2250 = sext i32 %2249 to i64
  %2251 = getelementptr inbounds %"class.v8::internal::LiteralBuffer", %"class.v8::internal::LiteralBuffer"* %2239, i64 0, i32 0, i32 0
  %2252 = load i8*, i8** %2251, align 8
  %2253 = getelementptr inbounds i8, i8* %2252, i64 %2250
  store i8 %2237, i8* %2253, align 1
  %2254 = load i32, i32* %2240, align 8
  %2255 = add nsw i32 %2254, 1
  store i32 %2255, i32* %2240, align 8
  %2256 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %2, align 8
  %2257 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2256, i64 0, i32 2
  %2258 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2256, i64 0, i32 3
  %2259 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2256, i64 0, i32 6
  %2260 = bitcast %"class.v8::internal::Utf16CharacterStream"* %2256 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  br label %2261

2261:                                             ; preds = %2310, %2248
  %2262 = phi i8 [ %2236, %2248 ], [ %2303, %2310 ]
  %2263 = load i16*, i16** %2257, align 8
  %2264 = load i16*, i16** %2258, align 8
  %2265 = icmp eq i16* %2263, %2264
  br i1 %2265, label %2302, label %2266

2266:                                             ; preds = %2261, %2292
  %2267 = phi i8 [ %2277, %2292 ], [ %2262, %2261 ]
  %2268 = phi i16* [ %2300, %2292 ], [ %2263, %2261 ]
  %2269 = load i16, i16* %2268, align 2
  %2270 = icmp ugt i16 %2269, 127
  br i1 %2270, label %2271, label %2273, !prof !3

2271:                                             ; preds = %2266
  %2272 = or i8 %2267, 16
  br label %2302

2273:                                             ; preds = %2266
  %2274 = zext i16 %2269 to i64
  %2275 = getelementptr inbounds [128 x i8], [128 x i8]* @_ZN2v88internalL20character_scan_flagsE, i64 0, i64 %2274
  %2276 = load i8, i8* %2275, align 1
  %2277 = or i8 %2276, %2267
  %2278 = and i8 %2276, 1
  %2279 = icmp eq i8 %2278, 0
  br i1 %2279, label %2280, label %2302

2280:                                             ; preds = %2273
  %2281 = trunc i16 %2269 to i8
  %2282 = load %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"** %34, align 8
  %2283 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %2282, i64 0, i32 1
  %2284 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %2282, i64 0, i32 1, i32 1
  %2285 = load i32, i32* %2284, align 8
  %2286 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %2282, i64 0, i32 1, i32 0, i32 1
  %2287 = load i64, i64* %2286, align 8
  %2288 = trunc i64 %2287 to i32
  %2289 = icmp slt i32 %2285, %2288
  br i1 %2289, label %2292, label %2290

2290:                                             ; preds = %2280
  tail call void @_ZN2v88internal13LiteralBuffer12ExpandBufferEv(%"class.v8::internal::LiteralBuffer"* %2283) #8
  %2291 = load i32, i32* %2284, align 8
  br label %2292

2292:                                             ; preds = %2290, %2280
  %2293 = phi i32 [ %2285, %2280 ], [ %2291, %2290 ]
  %2294 = sext i32 %2293 to i64
  %2295 = getelementptr inbounds %"class.v8::internal::LiteralBuffer", %"class.v8::internal::LiteralBuffer"* %2283, i64 0, i32 0, i32 0
  %2296 = load i8*, i8** %2295, align 8
  %2297 = getelementptr inbounds i8, i8* %2296, i64 %2294
  store i8 %2281, i8* %2297, align 1
  %2298 = load i32, i32* %2284, align 8
  %2299 = add nsw i32 %2298, 1
  store i32 %2299, i32* %2284, align 8
  %2300 = getelementptr inbounds i16, i16* %2268, i64 1
  %2301 = icmp eq i16* %2300, %2264
  br i1 %2301, label %2302, label %2266

2302:                                             ; preds = %2292, %2273, %2271, %2261
  %2303 = phi i8 [ %2262, %2261 ], [ %2272, %2271 ], [ %2277, %2273 ], [ %2277, %2292 ]
  %2304 = phi i16* [ %2263, %2261 ], [ %2268, %2271 ], [ %2264, %2292 ], [ %2268, %2273 ]
  %2305 = load i16*, i16** %2258, align 8
  %2306 = icmp eq i16* %2304, %2305
  br i1 %2306, label %2307, label %2320

2307:                                             ; preds = %2302
  store i16* %2304, i16** %2257, align 8
  %2308 = load i8, i8* %2259, align 8, !range !2
  %2309 = icmp eq i8 %2308, 0
  br i1 %2309, label %2310, label %2317

2310:                                             ; preds = %2307
  %2311 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %2260, align 8
  %2312 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %2311, i64 5
  %2313 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %2312, align 8
  %2314 = tail call zeroext i1 %2313(%"class.v8::internal::Utf16CharacterStream"* %2256) #8
  br i1 %2314, label %2261, label %2315

2315:                                             ; preds = %2310
  %2316 = load i16*, i16** %2257, align 8
  br label %2317

2317:                                             ; preds = %2307, %2315
  %2318 = phi i16* [ %2316, %2315 ], [ %2304, %2307 ]
  %2319 = getelementptr inbounds i16, i16* %2318, i64 1
  store i16* %2319, i16** %2257, align 8
  br label %2324

2320:                                             ; preds = %2302
  %2321 = getelementptr inbounds i16, i16* %2304, i64 1
  store i16* %2321, i16** %2257, align 8
  %2322 = load i16, i16* %2304, align 2
  %2323 = zext i16 %2322 to i32
  br label %2324

2324:                                             ; preds = %2320, %2317
  %2325 = phi i32 [ %2323, %2320 ], [ -1, %2317 ]
  store i32 %2325, i32* %30, align 8
  %2326 = and i8 %2303, 16
  %2327 = icmp ne i8 %2326, 0
  %2328 = and i8 %2303, 2
  %2329 = icmp eq i8 %2328, 0
  %2330 = xor i1 %2329, true
  %2331 = or i1 %2327, %2330
  br i1 %2331, label %2376, label %2332, !prof !5

2332:                                             ; preds = %2324
  %2333 = load %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"** %34, align 8
  %2334 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %2333, i64 0, i32 1, i32 0, i32 0
  %2335 = load i8*, i8** %2334, align 8
  %2336 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %2333, i64 0, i32 1, i32 1
  %2337 = load i32, i32* %2336, align 8
  %2338 = add i32 %2337, -2
  %2339 = icmp ult i32 %2338, 9
  br i1 %2339, label %2340, label %2582

2340:                                             ; preds = %2332
  %2341 = getelementptr inbounds i8, i8* %2335, i64 1
  %2342 = load i8, i8* %2341, align 1
  %2343 = zext i8 %2342 to i64
  %2344 = getelementptr inbounds [128 x i8], [128 x i8]* @_ZZN2v88internal18PerfectKeywordHash4HashEPKciE11asso_values, i64 0, i64 %2343
  %2345 = load i8, i8* %2344, align 1
  %2346 = zext i8 %2345 to i32
  %2347 = add nuw nsw i32 %2337, %2346
  %2348 = load i8, i8* %2335, align 1
  %2349 = zext i8 %2348 to i64
  %2350 = getelementptr inbounds [128 x i8], [128 x i8]* @_ZZN2v88internal18PerfectKeywordHash4HashEPKciE11asso_values, i64 0, i64 %2349
  %2351 = load i8, i8* %2350, align 1
  %2352 = zext i8 %2351 to i32
  %2353 = add nuw nsw i32 %2347, %2352
  %2354 = and i32 %2353, 63
  %2355 = zext i32 %2354 to i64
  %2356 = getelementptr inbounds [64 x i8], [64 x i8]* bitcast (<{ [56 x i8], [8 x i8] }>* @_ZN2v88internalL26kPerfectKeywordLengthTableE to [64 x i8]*), i64 0, i64 %2355
  %2357 = load i8, i8* %2356, align 1
  %2358 = zext i8 %2357 to i32
  %2359 = icmp eq i32 %2337, %2358
  br i1 %2359, label %2360, label %2582

2360:                                             ; preds = %2340
  %2361 = getelementptr inbounds [64 x %"struct.v8::internal::PerfectKeywordHashTableEntry"], [64 x %"struct.v8::internal::PerfectKeywordHashTableEntry"]* @_ZN2v88internalL24kPerfectKeywordHashTableE, i64 0, i64 %2355, i32 0
  %2362 = load i8*, i8** %2361, align 16
  br label %2363

2363:                                             ; preds = %2368, %2360
  %2364 = phi i8* [ %2335, %2360 ], [ %2370, %2368 ]
  %2365 = phi i8* [ %2362, %2360 ], [ %2369, %2368 ]
  %2366 = load i8, i8* %2365, align 1
  %2367 = icmp eq i8 %2366, 0
  br i1 %2367, label %2373, label %2368

2368:                                             ; preds = %2363
  %2369 = getelementptr inbounds i8, i8* %2365, i64 1
  %2370 = getelementptr inbounds i8, i8* %2364, i64 1
  %2371 = load i8, i8* %2364, align 1
  %2372 = icmp eq i8 %2366, %2371
  br i1 %2372, label %2363, label %2582

2373:                                             ; preds = %2363
  %2374 = getelementptr inbounds [64 x %"struct.v8::internal::PerfectKeywordHashTableEntry"], [64 x %"struct.v8::internal::PerfectKeywordHashTableEntry"]* @_ZN2v88internalL24kPerfectKeywordHashTableE, i64 0, i64 %2355, i32 1
  %2375 = load i8, i8* %2374, align 8
  br label %2582

2376:                                             ; preds = %2324
  %2377 = xor i1 %2327, true
  %2378 = or i1 %2329, %2377
  br i1 %2327, label %2484, label %2582

2379:                                             ; preds = %2230
  %2380 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %2, align 8
  %2381 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2380, i64 0, i32 2
  %2382 = load i16*, i16** %2381, align 8
  %2383 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2380, i64 0, i32 3
  %2384 = load i16*, i16** %2383, align 8
  %2385 = icmp ult i16* %2382, %2384
  br i1 %2385, label %2400, label %2386, !prof !4

2386:                                             ; preds = %2379
  %2387 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2380, i64 0, i32 6
  %2388 = load i8, i8* %2387, align 8, !range !2
  %2389 = icmp eq i8 %2388, 0
  br i1 %2389, label %2390, label %2397

2390:                                             ; preds = %2386
  %2391 = bitcast %"class.v8::internal::Utf16CharacterStream"* %2380 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %2392 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %2391, align 8
  %2393 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %2392, i64 5
  %2394 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %2393, align 8
  %2395 = tail call zeroext i1 %2394(%"class.v8::internal::Utf16CharacterStream"* %2380) #8
  %2396 = load i16*, i16** %2381, align 8
  br i1 %2395, label %2400, label %2397

2397:                                             ; preds = %2390, %2386
  %2398 = phi i16* [ %2396, %2390 ], [ %2382, %2386 ]
  %2399 = getelementptr inbounds i16, i16* %2398, i64 1
  store i16* %2399, i16** %2381, align 8
  store i32 -1, i32* %30, align 8
  br label %2444

2400:                                             ; preds = %2390, %2379
  %2401 = phi i16* [ %2382, %2379 ], [ %2396, %2390 ]
  %2402 = load i16, i16* %2401, align 2
  %2403 = zext i16 %2402 to i32
  %2404 = getelementptr inbounds i16, i16* %2401, i64 1
  store i16* %2404, i16** %2381, align 8
  store i32 %2403, i32* %30, align 8
  %2405 = icmp eq i16 %2402, 117
  br i1 %2405, label %2406, label %2444

2406:                                             ; preds = %2400
  %2407 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %2, align 8
  %2408 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2407, i64 0, i32 2
  %2409 = load i16*, i16** %2408, align 8
  %2410 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2407, i64 0, i32 3
  %2411 = load i16*, i16** %2410, align 8
  %2412 = icmp ult i16* %2409, %2411
  br i1 %2412, label %2413, label %2416, !prof !4

2413:                                             ; preds = %2406
  %2414 = load i16, i16* %2409, align 2
  %2415 = zext i16 %2414 to i32
  br label %2430

2416:                                             ; preds = %2406
  %2417 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2407, i64 0, i32 6
  %2418 = load i8, i8* %2417, align 8, !range !2
  %2419 = icmp eq i8 %2418, 0
  br i1 %2419, label %2420, label %2430

2420:                                             ; preds = %2416
  %2421 = bitcast %"class.v8::internal::Utf16CharacterStream"* %2407 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %2422 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %2421, align 8
  %2423 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %2422, i64 5
  %2424 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %2423, align 8
  %2425 = tail call zeroext i1 %2424(%"class.v8::internal::Utf16CharacterStream"* %2407) #8
  %2426 = load i16*, i16** %2408, align 8
  br i1 %2425, label %2427, label %2430

2427:                                             ; preds = %2420
  %2428 = load i16, i16* %2426, align 2
  %2429 = zext i16 %2428 to i32
  br label %2430

2430:                                             ; preds = %2427, %2420, %2416, %2413
  %2431 = phi i16* [ %2409, %2413 ], [ %2426, %2427 ], [ %2409, %2416 ], [ %2426, %2420 ]
  %2432 = phi i32 [ %2415, %2413 ], [ %2429, %2427 ], [ -1, %2416 ], [ -1, %2420 ]
  %2433 = getelementptr inbounds i16, i16* %2431, i64 1
  store i16* %2433, i16** %2408, align 8
  store i32 %2432, i32* %30, align 8
  %2434 = tail call i32 @_ZN2v88internal7Scanner17ScanUnicodeEscapeILb0EEEjv(%"class.v8::internal::Scanner"* %0) #8
  %2435 = icmp eq i32 %2434, 92
  br i1 %2435, label %2582, label %2436

2436:                                             ; preds = %2430
  %2437 = icmp ult i32 %2434, 256
  br i1 %2437, label %2438, label %2444

2438:                                             ; preds = %2436
  %2439 = zext i32 %2434 to i64
  %2440 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN2v88internalL17kOneByteCharFlagsE, i64 0, i64 %2439
  %2441 = load i8, i8* %2440, align 1
  %2442 = and i8 %2441, 1
  %2443 = icmp eq i8 %2442, 0
  br i1 %2443, label %2582, label %2447

2444:                                             ; preds = %2436, %2400, %2397
  %2445 = phi i32 [ %2434, %2436 ], [ -1, %2400 ], [ -1, %2397 ]
  %2446 = tail call zeroext i1 @_ZN2v88internal21IsIdentifierStartSlowEj(i32 %2445) #8
  br i1 %2446, label %2447, label %2582

2447:                                             ; preds = %2444, %2438
  %2448 = phi i32 [ %2434, %2438 ], [ %2445, %2444 ]
  %2449 = phi i1 [ true, %2438 ], [ false, %2444 ]
  %2450 = load %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"** %34, align 8
  %2451 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %2450, i64 0, i32 1
  %2452 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %2450, i64 0, i32 1, i32 2
  %2453 = load i8, i8* %2452, align 4, !range !2
  %2454 = icmp eq i8 %2453, 0
  br i1 %2454, label %2475, label %2455

2455:                                             ; preds = %2447
  br i1 %2449, label %2456, label %2474

2456:                                             ; preds = %2455
  %2457 = trunc i32 %2448 to i8
  %2458 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %2450, i64 0, i32 1, i32 1
  %2459 = load i32, i32* %2458, align 8
  %2460 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %2450, i64 0, i32 1, i32 0, i32 1
  %2461 = load i64, i64* %2460, align 8
  %2462 = trunc i64 %2461 to i32
  %2463 = icmp slt i32 %2459, %2462
  br i1 %2463, label %2466, label %2464

2464:                                             ; preds = %2456
  tail call void @_ZN2v88internal13LiteralBuffer12ExpandBufferEv(%"class.v8::internal::LiteralBuffer"* %2451) #8
  %2465 = load i32, i32* %2458, align 8
  br label %2466

2466:                                             ; preds = %2464, %2456
  %2467 = phi i32 [ %2459, %2456 ], [ %2465, %2464 ]
  %2468 = sext i32 %2467 to i64
  %2469 = getelementptr inbounds %"class.v8::internal::LiteralBuffer", %"class.v8::internal::LiteralBuffer"* %2451, i64 0, i32 0, i32 0
  %2470 = load i8*, i8** %2469, align 8
  %2471 = getelementptr inbounds i8, i8* %2470, i64 %2468
  store i8 %2457, i8* %2471, align 1
  %2472 = load i32, i32* %2458, align 8
  %2473 = add nsw i32 %2472, 1
  store i32 %2473, i32* %2458, align 8
  br label %2476

2474:                                             ; preds = %2455
  tail call void @_ZN2v88internal13LiteralBuffer16ConvertToTwoByteEv(%"class.v8::internal::LiteralBuffer"* %2451) #8
  br label %2475

2475:                                             ; preds = %2474, %2447
  tail call void @_ZN2v88internal13LiteralBuffer14AddTwoByteCharEj(%"class.v8::internal::LiteralBuffer"* %2451, i32 %2448) #8
  br label %2476

2476:                                             ; preds = %2475, %2466
  %2477 = icmp ult i32 %2448, 128
  br i1 %2477, label %2478, label %2484

2478:                                             ; preds = %2476
  %2479 = zext i32 %2448 to i64
  %2480 = getelementptr inbounds [128 x i8], [128 x i8]* @_ZN2v88internalL20character_scan_flagsE, i64 0, i64 %2479
  %2481 = load i8, i8* %2480, align 1
  %2482 = and i8 %2481, 2
  %2483 = icmp eq i8 %2482, 0
  br label %2484

2484:                                             ; preds = %2478, %2476, %2376, %2224
  %2485 = phi i1 [ %2378, %2376 ], [ true, %2224 ], [ false, %2476 ], [ %2483, %2478 ]
  %2486 = phi i1 [ false, %2376 ], [ false, %2224 ], [ true, %2476 ], [ true, %2478 ]
  %2487 = tail call zeroext i8 @_ZN2v88internal7Scanner32ScanIdentifierOrKeywordInnerSlowEbb(%"class.v8::internal::Scanner"* %0, i1 zeroext %2486, i1 zeroext %2485) #8
  br label %2582

2488:                                             ; preds = %2222, %2216, %2202, %2190, %2188
  %2489 = load i32, i32* %30, align 8
  br label %2490

2490:                                             ; preds = %2488, %2148
  %2491 = phi i32 [ %2489, %2488 ], [ %2149, %2148 ]
  %2492 = icmp eq i32 %2491, -1
  %2493 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %2, align 8
  br i1 %2492, label %2494, label %2499

2494:                                             ; preds = %2490
  %2495 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2493, i64 0, i32 6
  %2496 = load i8, i8* %2495, align 8, !range !2
  %2497 = icmp eq i8 %2496, 0
  %2498 = select i1 %2497, i8 14, i8 112
  br label %2582

2499:                                             ; preds = %2490
  %2500 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2493, i64 0, i32 4
  %2501 = load i64, i64* %2500, align 8
  %2502 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2493, i64 0, i32 2
  %2503 = bitcast i16** %2502 to i64*
  %2504 = load i64, i64* %2503, align 8
  %2505 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2493, i64 0, i32 1
  %2506 = bitcast i16** %2505 to i64*
  %2507 = load i64, i64* %2506, align 8
  %2508 = sub i64 %2504, %2507
  %2509 = lshr exact i64 %2508, 1
  %2510 = add i64 %2509, %2501
  %2511 = trunc i64 %2510 to i32
  br label %2512

2512:                                             ; preds = %2558, %2499
  %2513 = phi i32 [ %2560, %2558 ], [ %2491, %2499 ]
  %2514 = icmp ult i32 %2513, 256
  br i1 %2514, label %2520, label %2515

2515:                                             ; preds = %2512
  %2516 = tail call zeroext i1 @_ZN2v88internal16IsWhiteSpaceSlowEj(i32 %2513) #8
  %2517 = and i32 %2513, -2
  %2518 = icmp eq i32 %2517, 8232
  %2519 = or i1 %2518, %2516
  br i1 %2519, label %2526, label %2562

2520:                                             ; preds = %2512
  %2521 = zext i32 %2513 to i64
  %2522 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN2v88internalL17kOneByteCharFlagsE, i64 0, i64 %2521
  %2523 = load i8, i8* %2522, align 1
  %2524 = and i8 %2523, 8
  %2525 = icmp eq i8 %2524, 0
  br i1 %2525, label %2562, label %2526

2526:                                             ; preds = %2520, %2515
  %2527 = load %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"** %34, align 8
  %2528 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %2527, i64 0, i32 8
  %2529 = load i8, i8* %2528, align 4, !range !2
  %2530 = icmp eq i8 %2529, 0
  br i1 %2530, label %2531, label %2534

2531:                                             ; preds = %2526
  %2532 = load i32, i32* %30, align 8
  switch i32 %2532, label %2534 [
    i32 8232, label %2533
    i32 13, label %2533
    i32 10, label %2533
    i32 8233, label %2533
  ]

2533:                                             ; preds = %2531, %2531, %2531, %2531
  store i8 1, i8* %2528, align 4
  br label %2534

2534:                                             ; preds = %2533, %2531, %2526
  %2535 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %2, align 8
  %2536 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2535, i64 0, i32 2
  %2537 = load i16*, i16** %2536, align 8
  %2538 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2535, i64 0, i32 3
  %2539 = load i16*, i16** %2538, align 8
  %2540 = icmp ult i16* %2537, %2539
  br i1 %2540, label %2541, label %2544, !prof !4

2541:                                             ; preds = %2534
  %2542 = load i16, i16* %2537, align 2
  %2543 = zext i16 %2542 to i32
  br label %2558

2544:                                             ; preds = %2534
  %2545 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2535, i64 0, i32 6
  %2546 = load i8, i8* %2545, align 8, !range !2
  %2547 = icmp eq i8 %2546, 0
  br i1 %2547, label %2548, label %2558

2548:                                             ; preds = %2544
  %2549 = bitcast %"class.v8::internal::Utf16CharacterStream"* %2535 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %2550 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %2549, align 8
  %2551 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %2550, i64 5
  %2552 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %2551, align 8
  %2553 = tail call zeroext i1 %2552(%"class.v8::internal::Utf16CharacterStream"* %2535) #8
  %2554 = load i16*, i16** %2536, align 8
  br i1 %2553, label %2555, label %2558

2555:                                             ; preds = %2548
  %2556 = load i16, i16* %2554, align 2
  %2557 = zext i16 %2556 to i32
  br label %2558

2558:                                             ; preds = %2555, %2548, %2544, %2541
  %2559 = phi i16* [ %2537, %2541 ], [ %2554, %2555 ], [ %2537, %2544 ], [ %2554, %2548 ]
  %2560 = phi i32 [ %2543, %2541 ], [ %2557, %2555 ], [ -1, %2544 ], [ -1, %2548 ]
  %2561 = getelementptr inbounds i16, i16* %2559, i64 1
  store i16* %2561, i16** %2536, align 8
  store i32 %2560, i32* %30, align 8
  br label %2512

2562:                                             ; preds = %2520, %2515
  %2563 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %2, align 8
  %2564 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2563, i64 0, i32 4
  %2565 = load i64, i64* %2564, align 8
  %2566 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2563, i64 0, i32 2
  %2567 = bitcast i16** %2566 to i64*
  %2568 = load i64, i64* %2567, align 8
  %2569 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2563, i64 0, i32 1
  %2570 = bitcast i16** %2569 to i64*
  %2571 = load i64, i64* %2570, align 8
  %2572 = sub i64 %2568, %2571
  %2573 = lshr exact i64 %2572, 1
  %2574 = add i64 %2573, %2565
  %2575 = trunc i64 %2574 to i32
  %2576 = icmp eq i32 %2575, %2511
  br i1 %2576, label %2582, label %2580

2577:                                             ; preds = %1272, %341
  %2578 = phi i8 [ %1273, %1272 ], [ %342, %341 ]
  %2579 = icmp eq i8 %2578, 114
  br i1 %2579, label %2580, label %2582

2580:                                             ; preds = %2577, %2562, %1854, %1786, %1270, %1232, %1191, %1191, %1191, %1191, %1191, %898
  %2581 = load %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"** %34, align 8
  br label %41

2582:                                             ; preds = %253, %800, %826, %832, %1113, %1854, %2562, %2577, %2368, %2015, %88, %110, %113, %136, %139, %174, %193, %196, %226, %230, %250, %282, %304, %307, %337, %361, %364, %393, %415, %418, %447, %469, %472, %502, %524, %527, %550, %553, %583, %611, %633, %636, %660, %663, %693, %715, %718, %747, %775, %797, %823, %842, %856, %924, %946, %949, %972, %975, %1005, %1033, %1055, %1058, %1088, %1110, %1298, %1320, %1323, %1346, %1349, %1379, %1407, %1429, %1432, %1455, %1458, %1488, %1516, %1538, %1541, %1571, %1593, %1603, %1605, %1614, %1618, %1626, %1681, %1709, %1788, %1869, %1979, %1987, %2020, %2023, %2077, %2085, %2091, %2131, %2332, %2340, %2373, %2376, %2430, %2438, %2444, %2484, %2494
  %2583 = phi i8 [ %1870, %1869 ], [ %1789, %1788 ], [ %1713, %1709 ], [ %1604, %1603 ], [ 10, %1681 ], [ 21, %1516 ], [ 23, %1407 ], [ 28, %1298 ], [ 27, %1033 ], [ 32, %924 ], [ 54, %747 ], [ 31, %775 ], [ 15, %611 ], [ 63, %393 ], [ 25, %447 ], [ 62, %282 ], [ %231, %230 ], [ %63, %88 ], [ %2498, %2494 ], [ 4, %139 ], [ 11, %113 ], [ 11, %174 ], [ 41, %418 ], [ 61, %364 ], [ 17, %527 ], [ 49, %636 ], [ 47, %718 ], [ 43, %949 ], [ 39, %1323 ], [ 37, %1432 ], [ 2, %1626 ], [ 2, %1605 ], [ 11, %110 ], [ 4, %136 ], [ 18, %226 ], [ 34, %196 ], [ 34, %193 ], [ 60, %250 ], [ 24, %337 ], [ 40, %307 ], [ 40, %304 ], [ 61, %361 ], [ 41, %415 ], [ 26, %502 ], [ 42, %472 ], [ 42, %469 ], [ 17, %524 ], [ 57, %583 ], [ 56, %553 ], [ 56, %550 ], [ 49, %633 ], [ 59, %693 ], [ 58, %663 ], [ 58, %660 ], [ 47, %715 ], [ 48, %797 ], [ 55, %823 ], [ 43, %946 ], [ 30, %1005 ], [ 46, %975 ], [ 46, %972 ], [ 29, %1088 ], [ 45, %1058 ], [ 45, %1055 ], [ 44, %1110 ], [ 39, %1320 ], [ 20, %1379 ], [ 36, %1349 ], [ 36, %1346 ], [ 37, %1429 ], [ 19, %1488 ], [ 35, %1458 ], [ 35, %1455 ], [ 22, %1571 ], [ 38, %1541 ], [ 38, %1538 ], [ 2, %1593 ], [ %2134, %2131 ], [ 95, %2023 ], [ %2022, %2020 ], [ 95, %1979 ], [ 95, %1987 ], [ 112, %2091 ], [ 112, %2077 ], [ 112, %2085 ], [ %2487, %2484 ], [ 95, %2376 ], [ %2375, %2373 ], [ 95, %2332 ], [ 95, %2340 ], [ 112, %2444 ], [ 112, %2430 ], [ 112, %2438 ], [ 2, %1618 ], [ 2, %1614 ], [ 112, %842 ], [ 112, %856 ], [ 95, %2015 ], [ 95, %2368 ], [ 60, %253 ], [ 55, %832 ], [ 55, %826 ], [ 48, %800 ], [ 44, %1113 ], [ %2578, %2577 ], [ 112, %1854 ], [ 112, %2562 ]
  %2584 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 7, i64 1, i32 3
  store i8 %2583, i8* %2584, align 8
  %2585 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %2, align 8
  %2586 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2585, i64 0, i32 4
  %2587 = load i64, i64* %2586, align 8
  %2588 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2585, i64 0, i32 2
  %2589 = bitcast i16** %2588 to i64*
  %2590 = load i64, i64* %2589, align 8
  %2591 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2585, i64 0, i32 1
  %2592 = bitcast i16** %2591 to i64*
  %2593 = load i64, i64* %2592, align 8
  %2594 = sub i64 %2590, %2593
  %2595 = lshr exact i64 %2594, 1
  %2596 = add i64 %2595, %2587
  %2597 = trunc i64 %2596 to i32
  %2598 = add nsw i32 %2597, -1
  %2599 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 7, i64 1, i32 0, i32 1
  store i32 %2598, i32* %2599, align 4
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN2v88internal7Scanner9IsInvalidEj(i32) local_unnamed_addr #5 align 2 {
  %2 = icmp eq i32 %0, -1
  ret i1 %2
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i8 @_ZN2v88internal7Scanner4NextEv(%"class.v8::internal::Scanner"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 1
  %3 = load %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 2
  %5 = bitcast %"struct.v8::internal::Scanner::TokenDesc"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"struct.v8::internal::Scanner::TokenDesc"** %2 to i64*
  store i64 %6, i64* %7, align 8
  %8 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 3
  %9 = load %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"** %8, align 8
  %10 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %9, i64 0, i32 3
  %11 = load i8, i8* %10, align 8
  %12 = icmp eq i8 %11, 115
  br i1 %12, label %13, label %2576, !prof !4

13:                                               ; preds = %1
  store %"struct.v8::internal::Scanner::TokenDesc"* %3, %"struct.v8::internal::Scanner::TokenDesc"** %4, align 8
  %14 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %3, i64 0, i32 8
  store i8 0, i8* %14, align 4
  %15 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 4
  %16 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 5
  %17 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 0, i32 0
  br label %18

18:                                               ; preds = %2555, %13
  %19 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %20 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %19, i64 0, i32 4
  %21 = load i64, i64* %20, align 8
  %22 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %19, i64 0, i32 2
  %23 = bitcast i16** %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %19, i64 0, i32 1
  %26 = bitcast i16** %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = sub i64 %24, %27
  %29 = lshr exact i64 %28, 1
  %30 = add i64 %29, %21
  %31 = trunc i64 %30 to i32
  %32 = add nsw i32 %31, -1
  %33 = load %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"** %4, align 8
  %34 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %33, i64 0, i32 0, i32 0
  store i32 %32, i32* %34, align 8
  %35 = load i32, i32* %16, align 8
  %36 = icmp ult i32 %35, 128
  br i1 %36, label %37, label %2114, !prof !4

37:                                               ; preds = %18
  %38 = zext i32 %35 to i64
  %39 = getelementptr inbounds [128 x i8], [128 x i8]* @_ZN2v88internalL15one_char_tokensE, i64 0, i64 %38
  %40 = load i8, i8* %39, align 1
  switch i8 %40, label %2113 [
    i8 5, label %41
    i8 6, label %41
    i8 8, label %41
    i8 13, label %41
    i8 3, label %41
    i8 7, label %41
    i8 9, label %41
    i8 12, label %41
    i8 33, label %41
    i8 50, label %41
    i8 112, label %41
    i8 11, label %69
    i8 93, label %207
    i8 60, label %209
    i8 61, label %320
    i8 17, label %483
    i8 49, label %592
    i8 47, label %674
    i8 48, label %756
    i8 43, label %906
    i8 45, label %1015
    i8 44, label %1070
    i8 39, label %1280
    i8 37, label %1389
    i8 38, label %1498
    i8 2, label %1553
    i8 0, label %1663
    i8 111, label %1692
    i8 114, label %1768
    i8 90, label %1847
    i8 95, label %1849
  ]

41:                                               ; preds = %37, %37, %37, %37, %37, %37, %37, %37, %37, %37, %37
  %42 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %43 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %42, i64 0, i32 2
  %44 = load i16*, i16** %43, align 8
  %45 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %42, i64 0, i32 3
  %46 = load i16*, i16** %45, align 8
  %47 = icmp ult i16* %44, %46
  br i1 %47, label %48, label %51, !prof !4

48:                                               ; preds = %41
  %49 = load i16, i16* %44, align 2
  %50 = zext i16 %49 to i32
  br label %65

51:                                               ; preds = %41
  %52 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %42, i64 0, i32 6
  %53 = load i8, i8* %52, align 8, !range !2
  %54 = icmp eq i8 %53, 0
  br i1 %54, label %55, label %65

55:                                               ; preds = %51
  %56 = bitcast %"class.v8::internal::Utf16CharacterStream"* %42 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %57 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %56, align 8
  %58 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %57, i64 5
  %59 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %58, align 8
  %60 = tail call zeroext i1 %59(%"class.v8::internal::Utf16CharacterStream"* %42) #8
  %61 = load i16*, i16** %43, align 8
  br i1 %60, label %62, label %65

62:                                               ; preds = %55
  %63 = load i16, i16* %61, align 2
  %64 = zext i16 %63 to i32
  br label %65

65:                                               ; preds = %62, %55, %51, %48
  %66 = phi i16* [ %44, %48 ], [ %61, %62 ], [ %44, %51 ], [ %61, %55 ]
  %67 = phi i32 [ %50, %48 ], [ %64, %62 ], [ -1, %51 ], [ -1, %55 ]
  %68 = getelementptr inbounds i16, i16* %66, i64 1
  store i16* %68, i16** %43, align 8
  store i32 %67, i32* %16, align 8
  br label %2558

69:                                               ; preds = %37
  %70 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %71 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %70, i64 0, i32 2
  %72 = load i16*, i16** %71, align 8
  %73 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %70, i64 0, i32 3
  %74 = load i16*, i16** %73, align 8
  %75 = icmp ult i16* %72, %74
  br i1 %75, label %90, label %76, !prof !4

76:                                               ; preds = %69
  %77 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %70, i64 0, i32 6
  %78 = load i8, i8* %77, align 8, !range !2
  %79 = icmp eq i8 %78, 0
  br i1 %79, label %80, label %87

80:                                               ; preds = %76
  %81 = bitcast %"class.v8::internal::Utf16CharacterStream"* %70 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %82 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %81, align 8
  %83 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %82, i64 5
  %84 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %83, align 8
  %85 = tail call zeroext i1 %84(%"class.v8::internal::Utf16CharacterStream"* %70) #8
  %86 = load i16*, i16** %71, align 8
  br i1 %85, label %90, label %87

87:                                               ; preds = %80, %76
  %88 = phi i16* [ %86, %80 ], [ %72, %76 ]
  %89 = getelementptr inbounds i16, i16* %88, i64 1
  store i16* %89, i16** %71, align 8
  store i32 -1, i32* %16, align 8
  br label %2558

90:                                               ; preds = %80, %69
  %91 = phi i16* [ %72, %69 ], [ %86, %80 ]
  %92 = load i16, i16* %91, align 2
  %93 = zext i16 %92 to i32
  %94 = getelementptr inbounds i16, i16* %91, i64 1
  store i16* %94, i16** %71, align 8
  store i32 %93, i32* %16, align 8
  switch i16 %92, label %2558 [
    i16 46, label %95
    i16 63, label %152
  ]

95:                                               ; preds = %90
  %96 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %97 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %96, i64 0, i32 2
  %98 = load i16*, i16** %97, align 8
  %99 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %96, i64 0, i32 3
  %100 = load i16*, i16** %99, align 8
  %101 = icmp ult i16* %98, %100
  br i1 %101, label %116, label %102, !prof !4

102:                                              ; preds = %95
  %103 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %96, i64 0, i32 6
  %104 = load i8, i8* %103, align 8, !range !2
  %105 = icmp eq i8 %104, 0
  br i1 %105, label %106, label %113

106:                                              ; preds = %102
  %107 = bitcast %"class.v8::internal::Utf16CharacterStream"* %96 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %108 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %107, align 8
  %109 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %108, i64 5
  %110 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %109, align 8
  %111 = tail call zeroext i1 %110(%"class.v8::internal::Utf16CharacterStream"* %96) #8
  %112 = load i16*, i16** %97, align 8
  br i1 %111, label %116, label %113

113:                                              ; preds = %106, %102
  %114 = phi i16* [ %112, %106 ], [ %98, %102 ]
  %115 = getelementptr inbounds i16, i16* %114, i64 1
  store i16* %115, i16** %97, align 8
  store i32 -1, i32* %16, align 8
  br label %2558

116:                                              ; preds = %106, %95
  %117 = phi i16* [ %98, %95 ], [ %112, %106 ]
  %118 = load i16, i16* %117, align 2
  %119 = zext i16 %118 to i32
  %120 = getelementptr inbounds i16, i16* %117, i64 1
  store i16* %120, i16** %97, align 8
  store i32 %119, i32* %16, align 8
  %121 = add nsw i32 %119, -48
  %122 = icmp ult i32 %121, 10
  br i1 %122, label %123, label %2558

123:                                              ; preds = %116
  %124 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %125 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %124, i64 0, i32 2
  %126 = load i16*, i16** %125, align 8
  %127 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %124, i64 0, i32 1
  %128 = load i16*, i16** %127, align 8
  %129 = icmp ugt i16* %126, %128
  %130 = ptrtoint i16* %128 to i64
  br i1 %129, label %131, label %133, !prof !4

131:                                              ; preds = %123
  %132 = getelementptr inbounds i16, i16* %126, i64 -1
  store i16* %132, i16** %125, align 8
  br label %151

133:                                              ; preds = %123
  %134 = ptrtoint i16* %126 to i64
  %135 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %124, i64 0, i32 4
  %136 = load i64, i64* %135, align 8
  %137 = bitcast i16** %125 to i64*
  %138 = sub i64 %134, %130
  %139 = ashr exact i64 %138, 1
  %140 = add nsw i64 %139, -1
  %141 = add i64 %140, %136
  store i64 %141, i64* %135, align 8
  store i64 %130, i64* %137, align 8
  %142 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %124, i64 0, i32 6
  %143 = load i8, i8* %142, align 8, !range !2
  %144 = icmp eq i8 %143, 0
  br i1 %144, label %145, label %151

145:                                              ; preds = %133
  %146 = bitcast %"class.v8::internal::Utf16CharacterStream"* %124 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %147 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %146, align 8
  %148 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %147, i64 5
  %149 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %148, align 8
  %150 = tail call zeroext i1 %149(%"class.v8::internal::Utf16CharacterStream"* %124) #8
  br label %151

151:                                              ; preds = %145, %133, %131
  store i32 46, i32* %16, align 8
  br label %2558

152:                                              ; preds = %90
  %153 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %154 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %153, i64 0, i32 2
  %155 = load i16*, i16** %154, align 8
  %156 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %153, i64 0, i32 3
  %157 = load i16*, i16** %156, align 8
  %158 = icmp ult i16* %155, %157
  br i1 %158, label %173, label %159, !prof !4

159:                                              ; preds = %152
  %160 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %153, i64 0, i32 6
  %161 = load i8, i8* %160, align 8, !range !2
  %162 = icmp eq i8 %161, 0
  br i1 %162, label %163, label %170

163:                                              ; preds = %159
  %164 = bitcast %"class.v8::internal::Utf16CharacterStream"* %153 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %165 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %164, align 8
  %166 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %165, i64 5
  %167 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %166, align 8
  %168 = tail call zeroext i1 %167(%"class.v8::internal::Utf16CharacterStream"* %153) #8
  %169 = load i16*, i16** %154, align 8
  br i1 %168, label %173, label %170

170:                                              ; preds = %163, %159
  %171 = phi i16* [ %169, %163 ], [ %155, %159 ]
  %172 = getelementptr inbounds i16, i16* %171, i64 1
  store i16* %172, i16** %154, align 8
  store i32 -1, i32* %16, align 8
  br label %2558

173:                                              ; preds = %163, %152
  %174 = phi i16* [ %155, %152 ], [ %169, %163 ]
  %175 = load i16, i16* %174, align 2
  %176 = zext i16 %175 to i32
  %177 = getelementptr inbounds i16, i16* %174, i64 1
  store i16* %177, i16** %154, align 8
  store i32 %176, i32* %16, align 8
  %178 = icmp eq i16 %175, 61
  br i1 %178, label %179, label %2558

179:                                              ; preds = %173
  %180 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %181 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %180, i64 0, i32 2
  %182 = load i16*, i16** %181, align 8
  %183 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %180, i64 0, i32 3
  %184 = load i16*, i16** %183, align 8
  %185 = icmp ult i16* %182, %184
  br i1 %185, label %186, label %189, !prof !4

186:                                              ; preds = %179
  %187 = load i16, i16* %182, align 2
  %188 = zext i16 %187 to i32
  br label %203

189:                                              ; preds = %179
  %190 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %180, i64 0, i32 6
  %191 = load i8, i8* %190, align 8, !range !2
  %192 = icmp eq i8 %191, 0
  br i1 %192, label %193, label %203

193:                                              ; preds = %189
  %194 = bitcast %"class.v8::internal::Utf16CharacterStream"* %180 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %195 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %194, align 8
  %196 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %195, i64 5
  %197 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %196, align 8
  %198 = tail call zeroext i1 %197(%"class.v8::internal::Utf16CharacterStream"* %180) #8
  %199 = load i16*, i16** %181, align 8
  br i1 %198, label %200, label %203

200:                                              ; preds = %193
  %201 = load i16, i16* %199, align 2
  %202 = zext i16 %201 to i32
  br label %203

203:                                              ; preds = %200, %193, %189, %186
  %204 = phi i16* [ %182, %186 ], [ %199, %200 ], [ %182, %189 ], [ %199, %193 ]
  %205 = phi i32 [ %188, %186 ], [ %202, %200 ], [ -1, %189 ], [ -1, %193 ]
  %206 = getelementptr inbounds i16, i16* %204, i64 1
  store i16* %206, i16** %181, align 8
  store i32 %205, i32* %16, align 8
  br label %2558

207:                                              ; preds = %37
  %208 = tail call zeroext i8 @_ZN2v88internal7Scanner10ScanStringEv(%"class.v8::internal::Scanner"* %0) #8
  br label %2558

209:                                              ; preds = %37
  %210 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %211 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %210, i64 0, i32 2
  %212 = load i16*, i16** %211, align 8
  %213 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %210, i64 0, i32 3
  %214 = load i16*, i16** %213, align 8
  %215 = icmp ult i16* %212, %214
  br i1 %215, label %230, label %216, !prof !4

216:                                              ; preds = %209
  %217 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %210, i64 0, i32 6
  %218 = load i8, i8* %217, align 8, !range !2
  %219 = icmp eq i8 %218, 0
  br i1 %219, label %220, label %227

220:                                              ; preds = %216
  %221 = bitcast %"class.v8::internal::Utf16CharacterStream"* %210 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %222 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %221, align 8
  %223 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %222, i64 5
  %224 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %223, align 8
  %225 = tail call zeroext i1 %224(%"class.v8::internal::Utf16CharacterStream"* %210) #8
  %226 = load i16*, i16** %211, align 8
  br i1 %225, label %230, label %227

227:                                              ; preds = %220, %216
  %228 = phi i16* [ %226, %220 ], [ %212, %216 ]
  %229 = getelementptr inbounds i16, i16* %228, i64 1
  store i16* %229, i16** %211, align 8
  store i32 -1, i32* %16, align 8
  br label %2558

230:                                              ; preds = %220, %209
  %231 = phi i16* [ %212, %209 ], [ %226, %220 ]
  %232 = load i16, i16* %231, align 2
  %233 = zext i16 %232 to i32
  %234 = getelementptr inbounds i16, i16* %231, i64 1
  store i16* %234, i16** %211, align 8
  store i32 %233, i32* %16, align 8
  switch i16 %232, label %2558 [
    i16 61, label %235
    i16 60, label %263
    i16 33, label %318
  ]

235:                                              ; preds = %230
  %236 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %237 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %236, i64 0, i32 2
  %238 = load i16*, i16** %237, align 8
  %239 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %236, i64 0, i32 3
  %240 = load i16*, i16** %239, align 8
  %241 = icmp ult i16* %238, %240
  br i1 %241, label %242, label %245, !prof !4

242:                                              ; preds = %235
  %243 = load i16, i16* %238, align 2
  %244 = zext i16 %243 to i32
  br label %259

245:                                              ; preds = %235
  %246 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %236, i64 0, i32 6
  %247 = load i8, i8* %246, align 8, !range !2
  %248 = icmp eq i8 %247, 0
  br i1 %248, label %249, label %259

249:                                              ; preds = %245
  %250 = bitcast %"class.v8::internal::Utf16CharacterStream"* %236 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %251 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %250, align 8
  %252 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %251, i64 5
  %253 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %252, align 8
  %254 = tail call zeroext i1 %253(%"class.v8::internal::Utf16CharacterStream"* %236) #8
  %255 = load i16*, i16** %237, align 8
  br i1 %254, label %256, label %259

256:                                              ; preds = %249
  %257 = load i16, i16* %255, align 2
  %258 = zext i16 %257 to i32
  br label %259

259:                                              ; preds = %256, %249, %245, %242
  %260 = phi i16* [ %238, %242 ], [ %255, %256 ], [ %238, %245 ], [ %255, %249 ]
  %261 = phi i32 [ %244, %242 ], [ %258, %256 ], [ -1, %245 ], [ -1, %249 ]
  %262 = getelementptr inbounds i16, i16* %260, i64 1
  store i16* %262, i16** %237, align 8
  store i32 %261, i32* %16, align 8
  br label %2558

263:                                              ; preds = %230
  %264 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %265 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %264, i64 0, i32 2
  %266 = load i16*, i16** %265, align 8
  %267 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %264, i64 0, i32 3
  %268 = load i16*, i16** %267, align 8
  %269 = icmp ult i16* %266, %268
  br i1 %269, label %284, label %270, !prof !4

270:                                              ; preds = %263
  %271 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %264, i64 0, i32 6
  %272 = load i8, i8* %271, align 8, !range !2
  %273 = icmp eq i8 %272, 0
  br i1 %273, label %274, label %281

274:                                              ; preds = %270
  %275 = bitcast %"class.v8::internal::Utf16CharacterStream"* %264 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %276 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %275, align 8
  %277 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %276, i64 5
  %278 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %277, align 8
  %279 = tail call zeroext i1 %278(%"class.v8::internal::Utf16CharacterStream"* %264) #8
  %280 = load i16*, i16** %265, align 8
  br i1 %279, label %284, label %281

281:                                              ; preds = %274, %270
  %282 = phi i16* [ %280, %274 ], [ %266, %270 ]
  %283 = getelementptr inbounds i16, i16* %282, i64 1
  store i16* %283, i16** %265, align 8
  store i32 -1, i32* %16, align 8
  br label %2558

284:                                              ; preds = %274, %263
  %285 = phi i16* [ %266, %263 ], [ %280, %274 ]
  %286 = load i16, i16* %285, align 2
  %287 = zext i16 %286 to i32
  %288 = getelementptr inbounds i16, i16* %285, i64 1
  store i16* %288, i16** %265, align 8
  store i32 %287, i32* %16, align 8
  %289 = icmp eq i16 %286, 61
  br i1 %289, label %290, label %2558

290:                                              ; preds = %284
  %291 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %292 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %291, i64 0, i32 2
  %293 = load i16*, i16** %292, align 8
  %294 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %291, i64 0, i32 3
  %295 = load i16*, i16** %294, align 8
  %296 = icmp ult i16* %293, %295
  br i1 %296, label %297, label %300, !prof !4

297:                                              ; preds = %290
  %298 = load i16, i16* %293, align 2
  %299 = zext i16 %298 to i32
  br label %314

300:                                              ; preds = %290
  %301 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %291, i64 0, i32 6
  %302 = load i8, i8* %301, align 8, !range !2
  %303 = icmp eq i8 %302, 0
  br i1 %303, label %304, label %314

304:                                              ; preds = %300
  %305 = bitcast %"class.v8::internal::Utf16CharacterStream"* %291 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %306 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %305, align 8
  %307 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %306, i64 5
  %308 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %307, align 8
  %309 = tail call zeroext i1 %308(%"class.v8::internal::Utf16CharacterStream"* %291) #8
  %310 = load i16*, i16** %292, align 8
  br i1 %309, label %311, label %314

311:                                              ; preds = %304
  %312 = load i16, i16* %310, align 2
  %313 = zext i16 %312 to i32
  br label %314

314:                                              ; preds = %311, %304, %300, %297
  %315 = phi i16* [ %293, %297 ], [ %310, %311 ], [ %293, %300 ], [ %310, %304 ]
  %316 = phi i32 [ %299, %297 ], [ %313, %311 ], [ -1, %300 ], [ -1, %304 ]
  %317 = getelementptr inbounds i16, i16* %315, i64 1
  store i16* %317, i16** %292, align 8
  store i32 %316, i32* %16, align 8
  br label %2558

318:                                              ; preds = %230
  %319 = tail call zeroext i8 @_ZN2v88internal7Scanner15ScanHtmlCommentEv(%"class.v8::internal::Scanner"* %0) #8
  br label %2555

320:                                              ; preds = %37
  %321 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %322 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %321, i64 0, i32 2
  %323 = load i16*, i16** %322, align 8
  %324 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %321, i64 0, i32 3
  %325 = load i16*, i16** %324, align 8
  %326 = icmp ult i16* %323, %325
  br i1 %326, label %341, label %327, !prof !4

327:                                              ; preds = %320
  %328 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %321, i64 0, i32 6
  %329 = load i8, i8* %328, align 8, !range !2
  %330 = icmp eq i8 %329, 0
  br i1 %330, label %331, label %338

331:                                              ; preds = %327
  %332 = bitcast %"class.v8::internal::Utf16CharacterStream"* %321 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %333 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %332, align 8
  %334 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %333, i64 5
  %335 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %334, align 8
  %336 = tail call zeroext i1 %335(%"class.v8::internal::Utf16CharacterStream"* %321) #8
  %337 = load i16*, i16** %322, align 8
  br i1 %336, label %341, label %338

338:                                              ; preds = %331, %327
  %339 = phi i16* [ %337, %331 ], [ %323, %327 ]
  %340 = getelementptr inbounds i16, i16* %339, i64 1
  store i16* %340, i16** %322, align 8
  store i32 -1, i32* %16, align 8
  br label %2558

341:                                              ; preds = %331, %320
  %342 = phi i16* [ %323, %320 ], [ %337, %331 ]
  %343 = load i16, i16* %342, align 2
  %344 = zext i16 %343 to i32
  %345 = getelementptr inbounds i16, i16* %342, i64 1
  store i16* %345, i16** %322, align 8
  store i32 %344, i32* %16, align 8
  switch i16 %343, label %2558 [
    i16 61, label %346
    i16 62, label %374
  ]

346:                                              ; preds = %341
  %347 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %348 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %347, i64 0, i32 2
  %349 = load i16*, i16** %348, align 8
  %350 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %347, i64 0, i32 3
  %351 = load i16*, i16** %350, align 8
  %352 = icmp ult i16* %349, %351
  br i1 %352, label %353, label %356, !prof !4

353:                                              ; preds = %346
  %354 = load i16, i16* %349, align 2
  %355 = zext i16 %354 to i32
  br label %370

356:                                              ; preds = %346
  %357 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %347, i64 0, i32 6
  %358 = load i8, i8* %357, align 8, !range !2
  %359 = icmp eq i8 %358, 0
  br i1 %359, label %360, label %370

360:                                              ; preds = %356
  %361 = bitcast %"class.v8::internal::Utf16CharacterStream"* %347 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %362 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %361, align 8
  %363 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %362, i64 5
  %364 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %363, align 8
  %365 = tail call zeroext i1 %364(%"class.v8::internal::Utf16CharacterStream"* %347) #8
  %366 = load i16*, i16** %348, align 8
  br i1 %365, label %367, label %370

367:                                              ; preds = %360
  %368 = load i16, i16* %366, align 2
  %369 = zext i16 %368 to i32
  br label %370

370:                                              ; preds = %367, %360, %356, %353
  %371 = phi i16* [ %349, %353 ], [ %366, %367 ], [ %349, %356 ], [ %366, %360 ]
  %372 = phi i32 [ %355, %353 ], [ %369, %367 ], [ -1, %356 ], [ -1, %360 ]
  %373 = getelementptr inbounds i16, i16* %371, i64 1
  store i16* %373, i16** %348, align 8
  store i32 %372, i32* %16, align 8
  br label %2558

374:                                              ; preds = %341
  %375 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %376 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %375, i64 0, i32 2
  %377 = load i16*, i16** %376, align 8
  %378 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %375, i64 0, i32 3
  %379 = load i16*, i16** %378, align 8
  %380 = icmp ult i16* %377, %379
  br i1 %380, label %395, label %381, !prof !4

381:                                              ; preds = %374
  %382 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %375, i64 0, i32 6
  %383 = load i8, i8* %382, align 8, !range !2
  %384 = icmp eq i8 %383, 0
  br i1 %384, label %385, label %392

385:                                              ; preds = %381
  %386 = bitcast %"class.v8::internal::Utf16CharacterStream"* %375 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %387 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %386, align 8
  %388 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %387, i64 5
  %389 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %388, align 8
  %390 = tail call zeroext i1 %389(%"class.v8::internal::Utf16CharacterStream"* %375) #8
  %391 = load i16*, i16** %376, align 8
  br i1 %390, label %395, label %392

392:                                              ; preds = %385, %381
  %393 = phi i16* [ %391, %385 ], [ %377, %381 ]
  %394 = getelementptr inbounds i16, i16* %393, i64 1
  store i16* %394, i16** %376, align 8
  store i32 -1, i32* %16, align 8
  br label %2558

395:                                              ; preds = %385, %374
  %396 = phi i16* [ %377, %374 ], [ %391, %385 ]
  %397 = load i16, i16* %396, align 2
  %398 = zext i16 %397 to i32
  %399 = getelementptr inbounds i16, i16* %396, i64 1
  store i16* %399, i16** %376, align 8
  store i32 %398, i32* %16, align 8
  switch i16 %397, label %2558 [
    i16 61, label %400
    i16 62, label %428
  ]

400:                                              ; preds = %395
  %401 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %402 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %401, i64 0, i32 2
  %403 = load i16*, i16** %402, align 8
  %404 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %401, i64 0, i32 3
  %405 = load i16*, i16** %404, align 8
  %406 = icmp ult i16* %403, %405
  br i1 %406, label %407, label %410, !prof !4

407:                                              ; preds = %400
  %408 = load i16, i16* %403, align 2
  %409 = zext i16 %408 to i32
  br label %424

410:                                              ; preds = %400
  %411 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %401, i64 0, i32 6
  %412 = load i8, i8* %411, align 8, !range !2
  %413 = icmp eq i8 %412, 0
  br i1 %413, label %414, label %424

414:                                              ; preds = %410
  %415 = bitcast %"class.v8::internal::Utf16CharacterStream"* %401 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %416 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %415, align 8
  %417 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %416, i64 5
  %418 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %417, align 8
  %419 = tail call zeroext i1 %418(%"class.v8::internal::Utf16CharacterStream"* %401) #8
  %420 = load i16*, i16** %402, align 8
  br i1 %419, label %421, label %424

421:                                              ; preds = %414
  %422 = load i16, i16* %420, align 2
  %423 = zext i16 %422 to i32
  br label %424

424:                                              ; preds = %421, %414, %410, %407
  %425 = phi i16* [ %403, %407 ], [ %420, %421 ], [ %403, %410 ], [ %420, %414 ]
  %426 = phi i32 [ %409, %407 ], [ %423, %421 ], [ -1, %410 ], [ -1, %414 ]
  %427 = getelementptr inbounds i16, i16* %425, i64 1
  store i16* %427, i16** %402, align 8
  store i32 %426, i32* %16, align 8
  br label %2558

428:                                              ; preds = %395
  %429 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %430 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %429, i64 0, i32 2
  %431 = load i16*, i16** %430, align 8
  %432 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %429, i64 0, i32 3
  %433 = load i16*, i16** %432, align 8
  %434 = icmp ult i16* %431, %433
  br i1 %434, label %449, label %435, !prof !4

435:                                              ; preds = %428
  %436 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %429, i64 0, i32 6
  %437 = load i8, i8* %436, align 8, !range !2
  %438 = icmp eq i8 %437, 0
  br i1 %438, label %439, label %446

439:                                              ; preds = %435
  %440 = bitcast %"class.v8::internal::Utf16CharacterStream"* %429 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %441 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %440, align 8
  %442 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %441, i64 5
  %443 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %442, align 8
  %444 = tail call zeroext i1 %443(%"class.v8::internal::Utf16CharacterStream"* %429) #8
  %445 = load i16*, i16** %430, align 8
  br i1 %444, label %449, label %446

446:                                              ; preds = %439, %435
  %447 = phi i16* [ %445, %439 ], [ %431, %435 ]
  %448 = getelementptr inbounds i16, i16* %447, i64 1
  store i16* %448, i16** %430, align 8
  store i32 -1, i32* %16, align 8
  br label %2558

449:                                              ; preds = %439, %428
  %450 = phi i16* [ %431, %428 ], [ %445, %439 ]
  %451 = load i16, i16* %450, align 2
  %452 = zext i16 %451 to i32
  %453 = getelementptr inbounds i16, i16* %450, i64 1
  store i16* %453, i16** %430, align 8
  store i32 %452, i32* %16, align 8
  %454 = icmp eq i16 %451, 61
  br i1 %454, label %455, label %2558

455:                                              ; preds = %449
  %456 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %457 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %456, i64 0, i32 2
  %458 = load i16*, i16** %457, align 8
  %459 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %456, i64 0, i32 3
  %460 = load i16*, i16** %459, align 8
  %461 = icmp ult i16* %458, %460
  br i1 %461, label %462, label %465, !prof !4

462:                                              ; preds = %455
  %463 = load i16, i16* %458, align 2
  %464 = zext i16 %463 to i32
  br label %479

465:                                              ; preds = %455
  %466 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %456, i64 0, i32 6
  %467 = load i8, i8* %466, align 8, !range !2
  %468 = icmp eq i8 %467, 0
  br i1 %468, label %469, label %479

469:                                              ; preds = %465
  %470 = bitcast %"class.v8::internal::Utf16CharacterStream"* %456 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %471 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %470, align 8
  %472 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %471, i64 5
  %473 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %472, align 8
  %474 = tail call zeroext i1 %473(%"class.v8::internal::Utf16CharacterStream"* %456) #8
  %475 = load i16*, i16** %457, align 8
  br i1 %474, label %476, label %479

476:                                              ; preds = %469
  %477 = load i16, i16* %475, align 2
  %478 = zext i16 %477 to i32
  br label %479

479:                                              ; preds = %476, %469, %465, %462
  %480 = phi i16* [ %458, %462 ], [ %475, %476 ], [ %458, %465 ], [ %475, %469 ]
  %481 = phi i32 [ %464, %462 ], [ %478, %476 ], [ -1, %465 ], [ -1, %469 ]
  %482 = getelementptr inbounds i16, i16* %480, i64 1
  store i16* %482, i16** %457, align 8
  store i32 %481, i32* %16, align 8
  br label %2558

483:                                              ; preds = %37
  %484 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %485 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %484, i64 0, i32 2
  %486 = load i16*, i16** %485, align 8
  %487 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %484, i64 0, i32 3
  %488 = load i16*, i16** %487, align 8
  %489 = icmp ult i16* %486, %488
  br i1 %489, label %504, label %490, !prof !4

490:                                              ; preds = %483
  %491 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %484, i64 0, i32 6
  %492 = load i8, i8* %491, align 8, !range !2
  %493 = icmp eq i8 %492, 0
  br i1 %493, label %494, label %501

494:                                              ; preds = %490
  %495 = bitcast %"class.v8::internal::Utf16CharacterStream"* %484 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %496 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %495, align 8
  %497 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %496, i64 5
  %498 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %497, align 8
  %499 = tail call zeroext i1 %498(%"class.v8::internal::Utf16CharacterStream"* %484) #8
  %500 = load i16*, i16** %485, align 8
  br i1 %499, label %504, label %501

501:                                              ; preds = %494, %490
  %502 = phi i16* [ %500, %494 ], [ %486, %490 ]
  %503 = getelementptr inbounds i16, i16* %502, i64 1
  store i16* %503, i16** %485, align 8
  store i32 -1, i32* %16, align 8
  br label %2558

504:                                              ; preds = %494, %483
  %505 = phi i16* [ %486, %483 ], [ %500, %494 ]
  %506 = load i16, i16* %505, align 2
  %507 = zext i16 %506 to i32
  %508 = getelementptr inbounds i16, i16* %505, i64 1
  store i16* %508, i16** %485, align 8
  store i32 %507, i32* %16, align 8
  switch i16 %506, label %2558 [
    i16 61, label %509
    i16 62, label %564
  ]

509:                                              ; preds = %504
  %510 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %511 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %510, i64 0, i32 2
  %512 = load i16*, i16** %511, align 8
  %513 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %510, i64 0, i32 3
  %514 = load i16*, i16** %513, align 8
  %515 = icmp ult i16* %512, %514
  br i1 %515, label %530, label %516, !prof !4

516:                                              ; preds = %509
  %517 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %510, i64 0, i32 6
  %518 = load i8, i8* %517, align 8, !range !2
  %519 = icmp eq i8 %518, 0
  br i1 %519, label %520, label %527

520:                                              ; preds = %516
  %521 = bitcast %"class.v8::internal::Utf16CharacterStream"* %510 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %522 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %521, align 8
  %523 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %522, i64 5
  %524 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %523, align 8
  %525 = tail call zeroext i1 %524(%"class.v8::internal::Utf16CharacterStream"* %510) #8
  %526 = load i16*, i16** %511, align 8
  br i1 %525, label %530, label %527

527:                                              ; preds = %520, %516
  %528 = phi i16* [ %526, %520 ], [ %512, %516 ]
  %529 = getelementptr inbounds i16, i16* %528, i64 1
  store i16* %529, i16** %511, align 8
  store i32 -1, i32* %16, align 8
  br label %2558

530:                                              ; preds = %520, %509
  %531 = phi i16* [ %512, %509 ], [ %526, %520 ]
  %532 = load i16, i16* %531, align 2
  %533 = zext i16 %532 to i32
  %534 = getelementptr inbounds i16, i16* %531, i64 1
  store i16* %534, i16** %511, align 8
  store i32 %533, i32* %16, align 8
  %535 = icmp eq i16 %532, 61
  br i1 %535, label %536, label %2558

536:                                              ; preds = %530
  %537 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %538 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %537, i64 0, i32 2
  %539 = load i16*, i16** %538, align 8
  %540 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %537, i64 0, i32 3
  %541 = load i16*, i16** %540, align 8
  %542 = icmp ult i16* %539, %541
  br i1 %542, label %543, label %546, !prof !4

543:                                              ; preds = %536
  %544 = load i16, i16* %539, align 2
  %545 = zext i16 %544 to i32
  br label %560

546:                                              ; preds = %536
  %547 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %537, i64 0, i32 6
  %548 = load i8, i8* %547, align 8, !range !2
  %549 = icmp eq i8 %548, 0
  br i1 %549, label %550, label %560

550:                                              ; preds = %546
  %551 = bitcast %"class.v8::internal::Utf16CharacterStream"* %537 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %552 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %551, align 8
  %553 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %552, i64 5
  %554 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %553, align 8
  %555 = tail call zeroext i1 %554(%"class.v8::internal::Utf16CharacterStream"* %537) #8
  %556 = load i16*, i16** %538, align 8
  br i1 %555, label %557, label %560

557:                                              ; preds = %550
  %558 = load i16, i16* %556, align 2
  %559 = zext i16 %558 to i32
  br label %560

560:                                              ; preds = %557, %550, %546, %543
  %561 = phi i16* [ %539, %543 ], [ %556, %557 ], [ %539, %546 ], [ %556, %550 ]
  %562 = phi i32 [ %545, %543 ], [ %559, %557 ], [ -1, %546 ], [ -1, %550 ]
  %563 = getelementptr inbounds i16, i16* %561, i64 1
  store i16* %563, i16** %538, align 8
  store i32 %562, i32* %16, align 8
  br label %2558

564:                                              ; preds = %504
  %565 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %566 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %565, i64 0, i32 2
  %567 = load i16*, i16** %566, align 8
  %568 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %565, i64 0, i32 3
  %569 = load i16*, i16** %568, align 8
  %570 = icmp ult i16* %567, %569
  br i1 %570, label %571, label %574, !prof !4

571:                                              ; preds = %564
  %572 = load i16, i16* %567, align 2
  %573 = zext i16 %572 to i32
  br label %588

574:                                              ; preds = %564
  %575 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %565, i64 0, i32 6
  %576 = load i8, i8* %575, align 8, !range !2
  %577 = icmp eq i8 %576, 0
  br i1 %577, label %578, label %588

578:                                              ; preds = %574
  %579 = bitcast %"class.v8::internal::Utf16CharacterStream"* %565 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %580 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %579, align 8
  %581 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %580, i64 5
  %582 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %581, align 8
  %583 = tail call zeroext i1 %582(%"class.v8::internal::Utf16CharacterStream"* %565) #8
  %584 = load i16*, i16** %566, align 8
  br i1 %583, label %585, label %588

585:                                              ; preds = %578
  %586 = load i16, i16* %584, align 2
  %587 = zext i16 %586 to i32
  br label %588

588:                                              ; preds = %585, %578, %574, %571
  %589 = phi i16* [ %567, %571 ], [ %584, %585 ], [ %567, %574 ], [ %584, %578 ]
  %590 = phi i32 [ %573, %571 ], [ %587, %585 ], [ -1, %574 ], [ -1, %578 ]
  %591 = getelementptr inbounds i16, i16* %589, i64 1
  store i16* %591, i16** %566, align 8
  store i32 %590, i32* %16, align 8
  br label %2558

592:                                              ; preds = %37
  %593 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %594 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %593, i64 0, i32 2
  %595 = load i16*, i16** %594, align 8
  %596 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %593, i64 0, i32 3
  %597 = load i16*, i16** %596, align 8
  %598 = icmp ult i16* %595, %597
  br i1 %598, label %613, label %599, !prof !4

599:                                              ; preds = %592
  %600 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %593, i64 0, i32 6
  %601 = load i8, i8* %600, align 8, !range !2
  %602 = icmp eq i8 %601, 0
  br i1 %602, label %603, label %610

603:                                              ; preds = %599
  %604 = bitcast %"class.v8::internal::Utf16CharacterStream"* %593 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %605 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %604, align 8
  %606 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %605, i64 5
  %607 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %606, align 8
  %608 = tail call zeroext i1 %607(%"class.v8::internal::Utf16CharacterStream"* %593) #8
  %609 = load i16*, i16** %594, align 8
  br i1 %608, label %613, label %610

610:                                              ; preds = %603, %599
  %611 = phi i16* [ %609, %603 ], [ %595, %599 ]
  %612 = getelementptr inbounds i16, i16* %611, i64 1
  store i16* %612, i16** %594, align 8
  store i32 -1, i32* %16, align 8
  br label %2558

613:                                              ; preds = %603, %592
  %614 = phi i16* [ %595, %592 ], [ %609, %603 ]
  %615 = load i16, i16* %614, align 2
  %616 = zext i16 %615 to i32
  %617 = getelementptr inbounds i16, i16* %614, i64 1
  store i16* %617, i16** %594, align 8
  store i32 %616, i32* %16, align 8
  %618 = icmp eq i16 %615, 61
  br i1 %618, label %619, label %2558

619:                                              ; preds = %613
  %620 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %621 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %620, i64 0, i32 2
  %622 = load i16*, i16** %621, align 8
  %623 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %620, i64 0, i32 3
  %624 = load i16*, i16** %623, align 8
  %625 = icmp ult i16* %622, %624
  br i1 %625, label %640, label %626, !prof !4

626:                                              ; preds = %619
  %627 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %620, i64 0, i32 6
  %628 = load i8, i8* %627, align 8, !range !2
  %629 = icmp eq i8 %628, 0
  br i1 %629, label %630, label %637

630:                                              ; preds = %626
  %631 = bitcast %"class.v8::internal::Utf16CharacterStream"* %620 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %632 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %631, align 8
  %633 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %632, i64 5
  %634 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %633, align 8
  %635 = tail call zeroext i1 %634(%"class.v8::internal::Utf16CharacterStream"* %620) #8
  %636 = load i16*, i16** %621, align 8
  br i1 %635, label %640, label %637

637:                                              ; preds = %630, %626
  %638 = phi i16* [ %636, %630 ], [ %622, %626 ]
  %639 = getelementptr inbounds i16, i16* %638, i64 1
  store i16* %639, i16** %621, align 8
  store i32 -1, i32* %16, align 8
  br label %2558

640:                                              ; preds = %630, %619
  %641 = phi i16* [ %622, %619 ], [ %636, %630 ]
  %642 = load i16, i16* %641, align 2
  %643 = zext i16 %642 to i32
  %644 = getelementptr inbounds i16, i16* %641, i64 1
  store i16* %644, i16** %621, align 8
  store i32 %643, i32* %16, align 8
  %645 = icmp eq i16 %642, 61
  br i1 %645, label %646, label %2558

646:                                              ; preds = %640
  %647 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %648 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %647, i64 0, i32 2
  %649 = load i16*, i16** %648, align 8
  %650 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %647, i64 0, i32 3
  %651 = load i16*, i16** %650, align 8
  %652 = icmp ult i16* %649, %651
  br i1 %652, label %653, label %656, !prof !4

653:                                              ; preds = %646
  %654 = load i16, i16* %649, align 2
  %655 = zext i16 %654 to i32
  br label %670

656:                                              ; preds = %646
  %657 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %647, i64 0, i32 6
  %658 = load i8, i8* %657, align 8, !range !2
  %659 = icmp eq i8 %658, 0
  br i1 %659, label %660, label %670

660:                                              ; preds = %656
  %661 = bitcast %"class.v8::internal::Utf16CharacterStream"* %647 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %662 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %661, align 8
  %663 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %662, i64 5
  %664 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %663, align 8
  %665 = tail call zeroext i1 %664(%"class.v8::internal::Utf16CharacterStream"* %647) #8
  %666 = load i16*, i16** %648, align 8
  br i1 %665, label %667, label %670

667:                                              ; preds = %660
  %668 = load i16, i16* %666, align 2
  %669 = zext i16 %668 to i32
  br label %670

670:                                              ; preds = %667, %660, %656, %653
  %671 = phi i16* [ %649, %653 ], [ %666, %667 ], [ %649, %656 ], [ %666, %660 ]
  %672 = phi i32 [ %655, %653 ], [ %669, %667 ], [ -1, %656 ], [ -1, %660 ]
  %673 = getelementptr inbounds i16, i16* %671, i64 1
  store i16* %673, i16** %648, align 8
  store i32 %672, i32* %16, align 8
  br label %2558

674:                                              ; preds = %37
  %675 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %676 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %675, i64 0, i32 2
  %677 = load i16*, i16** %676, align 8
  %678 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %675, i64 0, i32 3
  %679 = load i16*, i16** %678, align 8
  %680 = icmp ult i16* %677, %679
  br i1 %680, label %695, label %681, !prof !4

681:                                              ; preds = %674
  %682 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %675, i64 0, i32 6
  %683 = load i8, i8* %682, align 8, !range !2
  %684 = icmp eq i8 %683, 0
  br i1 %684, label %685, label %692

685:                                              ; preds = %681
  %686 = bitcast %"class.v8::internal::Utf16CharacterStream"* %675 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %687 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %686, align 8
  %688 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %687, i64 5
  %689 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %688, align 8
  %690 = tail call zeroext i1 %689(%"class.v8::internal::Utf16CharacterStream"* %675) #8
  %691 = load i16*, i16** %676, align 8
  br i1 %690, label %695, label %692

692:                                              ; preds = %685, %681
  %693 = phi i16* [ %691, %685 ], [ %677, %681 ]
  %694 = getelementptr inbounds i16, i16* %693, i64 1
  store i16* %694, i16** %676, align 8
  store i32 -1, i32* %16, align 8
  br label %2558

695:                                              ; preds = %685, %674
  %696 = phi i16* [ %677, %674 ], [ %691, %685 ]
  %697 = load i16, i16* %696, align 2
  %698 = zext i16 %697 to i32
  %699 = getelementptr inbounds i16, i16* %696, i64 1
  store i16* %699, i16** %676, align 8
  store i32 %698, i32* %16, align 8
  switch i16 %697, label %2558 [
    i16 43, label %700
    i16 61, label %728
  ]

700:                                              ; preds = %695
  %701 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %702 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %701, i64 0, i32 2
  %703 = load i16*, i16** %702, align 8
  %704 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %701, i64 0, i32 3
  %705 = load i16*, i16** %704, align 8
  %706 = icmp ult i16* %703, %705
  br i1 %706, label %707, label %710, !prof !4

707:                                              ; preds = %700
  %708 = load i16, i16* %703, align 2
  %709 = zext i16 %708 to i32
  br label %724

710:                                              ; preds = %700
  %711 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %701, i64 0, i32 6
  %712 = load i8, i8* %711, align 8, !range !2
  %713 = icmp eq i8 %712, 0
  br i1 %713, label %714, label %724

714:                                              ; preds = %710
  %715 = bitcast %"class.v8::internal::Utf16CharacterStream"* %701 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %716 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %715, align 8
  %717 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %716, i64 5
  %718 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %717, align 8
  %719 = tail call zeroext i1 %718(%"class.v8::internal::Utf16CharacterStream"* %701) #8
  %720 = load i16*, i16** %702, align 8
  br i1 %719, label %721, label %724

721:                                              ; preds = %714
  %722 = load i16, i16* %720, align 2
  %723 = zext i16 %722 to i32
  br label %724

724:                                              ; preds = %721, %714, %710, %707
  %725 = phi i16* [ %703, %707 ], [ %720, %721 ], [ %703, %710 ], [ %720, %714 ]
  %726 = phi i32 [ %709, %707 ], [ %723, %721 ], [ -1, %710 ], [ -1, %714 ]
  %727 = getelementptr inbounds i16, i16* %725, i64 1
  store i16* %727, i16** %702, align 8
  store i32 %726, i32* %16, align 8
  br label %2558

728:                                              ; preds = %695
  %729 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %730 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %729, i64 0, i32 2
  %731 = load i16*, i16** %730, align 8
  %732 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %729, i64 0, i32 3
  %733 = load i16*, i16** %732, align 8
  %734 = icmp ult i16* %731, %733
  br i1 %734, label %735, label %738, !prof !4

735:                                              ; preds = %728
  %736 = load i16, i16* %731, align 2
  %737 = zext i16 %736 to i32
  br label %752

738:                                              ; preds = %728
  %739 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %729, i64 0, i32 6
  %740 = load i8, i8* %739, align 8, !range !2
  %741 = icmp eq i8 %740, 0
  br i1 %741, label %742, label %752

742:                                              ; preds = %738
  %743 = bitcast %"class.v8::internal::Utf16CharacterStream"* %729 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %744 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %743, align 8
  %745 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %744, i64 5
  %746 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %745, align 8
  %747 = tail call zeroext i1 %746(%"class.v8::internal::Utf16CharacterStream"* %729) #8
  %748 = load i16*, i16** %730, align 8
  br i1 %747, label %749, label %752

749:                                              ; preds = %742
  %750 = load i16, i16* %748, align 2
  %751 = zext i16 %750 to i32
  br label %752

752:                                              ; preds = %749, %742, %738, %735
  %753 = phi i16* [ %731, %735 ], [ %748, %749 ], [ %731, %738 ], [ %748, %742 ]
  %754 = phi i32 [ %737, %735 ], [ %751, %749 ], [ -1, %738 ], [ -1, %742 ]
  %755 = getelementptr inbounds i16, i16* %753, i64 1
  store i16* %755, i16** %730, align 8
  store i32 %754, i32* %16, align 8
  br label %2558

756:                                              ; preds = %37
  %757 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %758 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %757, i64 0, i32 2
  %759 = load i16*, i16** %758, align 8
  %760 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %757, i64 0, i32 3
  %761 = load i16*, i16** %760, align 8
  %762 = icmp ult i16* %759, %761
  br i1 %762, label %777, label %763, !prof !4

763:                                              ; preds = %756
  %764 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %757, i64 0, i32 6
  %765 = load i8, i8* %764, align 8, !range !2
  %766 = icmp eq i8 %765, 0
  br i1 %766, label %767, label %774

767:                                              ; preds = %763
  %768 = bitcast %"class.v8::internal::Utf16CharacterStream"* %757 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %769 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %768, align 8
  %770 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %769, i64 5
  %771 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %770, align 8
  %772 = tail call zeroext i1 %771(%"class.v8::internal::Utf16CharacterStream"* %757) #8
  %773 = load i16*, i16** %758, align 8
  br i1 %772, label %777, label %774

774:                                              ; preds = %767, %763
  %775 = phi i16* [ %773, %767 ], [ %759, %763 ]
  %776 = getelementptr inbounds i16, i16* %775, i64 1
  store i16* %776, i16** %758, align 8
  store i32 -1, i32* %16, align 8
  br label %2558

777:                                              ; preds = %767, %756
  %778 = phi i16* [ %759, %756 ], [ %773, %767 ]
  %779 = load i16, i16* %778, align 2
  %780 = zext i16 %779 to i32
  %781 = getelementptr inbounds i16, i16* %778, i64 1
  store i16* %781, i16** %758, align 8
  store i32 %780, i32* %16, align 8
  switch i16 %779, label %2558 [
    i16 45, label %782
    i16 61, label %878
  ]

782:                                              ; preds = %777
  %783 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %784 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %783, i64 0, i32 2
  %785 = load i16*, i16** %784, align 8
  %786 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %783, i64 0, i32 3
  %787 = load i16*, i16** %786, align 8
  %788 = icmp ult i16* %785, %787
  br i1 %788, label %803, label %789, !prof !4

789:                                              ; preds = %782
  %790 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %783, i64 0, i32 6
  %791 = load i8, i8* %790, align 8, !range !2
  %792 = icmp eq i8 %791, 0
  br i1 %792, label %793, label %800

793:                                              ; preds = %789
  %794 = bitcast %"class.v8::internal::Utf16CharacterStream"* %783 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %795 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %794, align 8
  %796 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %795, i64 5
  %797 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %796, align 8
  %798 = tail call zeroext i1 %797(%"class.v8::internal::Utf16CharacterStream"* %783) #8
  %799 = load i16*, i16** %784, align 8
  br i1 %798, label %803, label %800

800:                                              ; preds = %793, %789
  %801 = phi i16* [ %799, %793 ], [ %785, %789 ]
  %802 = getelementptr inbounds i16, i16* %801, i64 1
  store i16* %802, i16** %784, align 8
  store i32 -1, i32* %16, align 8
  br label %2558

803:                                              ; preds = %793, %782
  %804 = phi i16* [ %785, %782 ], [ %799, %793 ]
  %805 = load i16, i16* %804, align 2
  %806 = zext i16 %805 to i32
  %807 = getelementptr inbounds i16, i16* %804, i64 1
  store i16* %807, i16** %784, align 8
  store i32 %806, i32* %16, align 8
  %808 = icmp eq i16 %805, 62
  br i1 %808, label %809, label %2558

809:                                              ; preds = %803
  %810 = load %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"** %4, align 8
  %811 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %810, i64 0, i32 8
  %812 = load i8, i8* %811, align 4, !range !2
  %813 = icmp eq i8 %812, 0
  br i1 %813, label %2558, label %814

814:                                              ; preds = %809
  %815 = load i32, i32* %17, align 4
  %816 = and i32 %815, 32
  %817 = icmp eq i32 %816, 0
  %818 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  br i1 %817, label %841, label %819

819:                                              ; preds = %814
  %820 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %818, i64 0, i32 4
  %821 = load i64, i64* %820, align 8
  %822 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %818, i64 0, i32 2
  %823 = bitcast i16** %822 to i64*
  %824 = load i64, i64* %823, align 8
  %825 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %818, i64 0, i32 1
  %826 = bitcast i16** %825 to i64*
  %827 = load i64, i64* %826, align 8
  %828 = sub i64 %824, %827
  %829 = lshr exact i64 %828, 1
  %830 = add i64 %829, %821
  %831 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 14
  %832 = load i32, i32* %831, align 4
  %833 = icmp eq i32 %832, 0
  br i1 %833, label %834, label %2558

834:                                              ; preds = %819
  %835 = add i64 %830, 4294967295
  store i32 292, i32* %831, align 4
  %836 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 15
  %837 = bitcast %"struct.v8::internal::Scanner::Location"* %836 to i64*
  %838 = shl i64 %830, 32
  %839 = and i64 %835, 4294967295
  %840 = or i64 %839, %838
  store i64 %840, i64* %837, align 8
  br label %2558

841:                                              ; preds = %814
  %842 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %818, i64 0, i32 2
  %843 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %818, i64 0, i32 3
  %844 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %818, i64 0, i32 6
  %845 = bitcast %"class.v8::internal::Utf16CharacterStream"* %818 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  br label %846

846:                                              ; preds = %862, %841
  %847 = load i16*, i16** %842, align 8
  %848 = load i16*, i16** %843, align 8
  %849 = icmp eq i16* %847, %848
  br i1 %849, label %856, label %850

850:                                              ; preds = %846, %853
  %851 = phi i16* [ %854, %853 ], [ %847, %846 ]
  %852 = load i16, i16* %851, align 2
  switch i16 %852, label %853 [
    i16 8232, label %856
    i16 13, label %856
    i16 10, label %856
    i16 8233, label %856
  ]

853:                                              ; preds = %850
  %854 = getelementptr inbounds i16, i16* %851, i64 1
  %855 = icmp eq i16* %854, %848
  br i1 %855, label %859, label %850

856:                                              ; preds = %850, %850, %850, %850, %846
  %857 = phi i16* [ %847, %846 ], [ %851, %850 ], [ %851, %850 ], [ %851, %850 ], [ %851, %850 ]
  %858 = icmp eq i16* %857, %848
  br i1 %858, label %859, label %872

859:                                              ; preds = %853, %856
  store i16* %848, i16** %842, align 8
  %860 = load i8, i8* %844, align 8, !range !2
  %861 = icmp eq i8 %860, 0
  br i1 %861, label %862, label %869

862:                                              ; preds = %859
  %863 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %845, align 8
  %864 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %863, i64 5
  %865 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %864, align 8
  %866 = tail call zeroext i1 %865(%"class.v8::internal::Utf16CharacterStream"* %818) #8
  br i1 %866, label %846, label %867

867:                                              ; preds = %862
  %868 = load i16*, i16** %842, align 8
  br label %869

869:                                              ; preds = %859, %867
  %870 = phi i16* [ %868, %867 ], [ %848, %859 ]
  %871 = getelementptr inbounds i16, i16* %870, i64 1
  store i16* %871, i16** %842, align 8
  br label %876

872:                                              ; preds = %856
  %873 = getelementptr inbounds i16, i16* %857, i64 1
  store i16* %873, i16** %842, align 8
  %874 = load i16, i16* %857, align 2
  %875 = zext i16 %874 to i32
  br label %876

876:                                              ; preds = %872, %869
  %877 = phi i32 [ %875, %872 ], [ -1, %869 ]
  store i32 %877, i32* %16, align 8
  br label %2555

878:                                              ; preds = %777
  %879 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %880 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %879, i64 0, i32 2
  %881 = load i16*, i16** %880, align 8
  %882 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %879, i64 0, i32 3
  %883 = load i16*, i16** %882, align 8
  %884 = icmp ult i16* %881, %883
  br i1 %884, label %885, label %888, !prof !4

885:                                              ; preds = %878
  %886 = load i16, i16* %881, align 2
  %887 = zext i16 %886 to i32
  br label %902

888:                                              ; preds = %878
  %889 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %879, i64 0, i32 6
  %890 = load i8, i8* %889, align 8, !range !2
  %891 = icmp eq i8 %890, 0
  br i1 %891, label %892, label %902

892:                                              ; preds = %888
  %893 = bitcast %"class.v8::internal::Utf16CharacterStream"* %879 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %894 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %893, align 8
  %895 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %894, i64 5
  %896 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %895, align 8
  %897 = tail call zeroext i1 %896(%"class.v8::internal::Utf16CharacterStream"* %879) #8
  %898 = load i16*, i16** %880, align 8
  br i1 %897, label %899, label %902

899:                                              ; preds = %892
  %900 = load i16, i16* %898, align 2
  %901 = zext i16 %900 to i32
  br label %902

902:                                              ; preds = %899, %892, %888, %885
  %903 = phi i16* [ %881, %885 ], [ %898, %899 ], [ %881, %888 ], [ %898, %892 ]
  %904 = phi i32 [ %887, %885 ], [ %901, %899 ], [ -1, %888 ], [ -1, %892 ]
  %905 = getelementptr inbounds i16, i16* %903, i64 1
  store i16* %905, i16** %880, align 8
  store i32 %904, i32* %16, align 8
  br label %2558

906:                                              ; preds = %37
  %907 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %908 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %907, i64 0, i32 2
  %909 = load i16*, i16** %908, align 8
  %910 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %907, i64 0, i32 3
  %911 = load i16*, i16** %910, align 8
  %912 = icmp ult i16* %909, %911
  br i1 %912, label %927, label %913, !prof !4

913:                                              ; preds = %906
  %914 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %907, i64 0, i32 6
  %915 = load i8, i8* %914, align 8, !range !2
  %916 = icmp eq i8 %915, 0
  br i1 %916, label %917, label %924

917:                                              ; preds = %913
  %918 = bitcast %"class.v8::internal::Utf16CharacterStream"* %907 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %919 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %918, align 8
  %920 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %919, i64 5
  %921 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %920, align 8
  %922 = tail call zeroext i1 %921(%"class.v8::internal::Utf16CharacterStream"* %907) #8
  %923 = load i16*, i16** %908, align 8
  br i1 %922, label %927, label %924

924:                                              ; preds = %917, %913
  %925 = phi i16* [ %923, %917 ], [ %909, %913 ]
  %926 = getelementptr inbounds i16, i16* %925, i64 1
  store i16* %926, i16** %908, align 8
  store i32 -1, i32* %16, align 8
  br label %2558

927:                                              ; preds = %917, %906
  %928 = phi i16* [ %909, %906 ], [ %923, %917 ]
  %929 = load i16, i16* %928, align 2
  %930 = zext i16 %929 to i32
  %931 = getelementptr inbounds i16, i16* %928, i64 1
  store i16* %931, i16** %908, align 8
  store i32 %930, i32* %16, align 8
  switch i16 %929, label %2558 [
    i16 42, label %932
    i16 61, label %987
  ]

932:                                              ; preds = %927
  %933 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %934 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %933, i64 0, i32 2
  %935 = load i16*, i16** %934, align 8
  %936 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %933, i64 0, i32 3
  %937 = load i16*, i16** %936, align 8
  %938 = icmp ult i16* %935, %937
  br i1 %938, label %953, label %939, !prof !4

939:                                              ; preds = %932
  %940 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %933, i64 0, i32 6
  %941 = load i8, i8* %940, align 8, !range !2
  %942 = icmp eq i8 %941, 0
  br i1 %942, label %943, label %950

943:                                              ; preds = %939
  %944 = bitcast %"class.v8::internal::Utf16CharacterStream"* %933 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %945 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %944, align 8
  %946 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %945, i64 5
  %947 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %946, align 8
  %948 = tail call zeroext i1 %947(%"class.v8::internal::Utf16CharacterStream"* %933) #8
  %949 = load i16*, i16** %934, align 8
  br i1 %948, label %953, label %950

950:                                              ; preds = %943, %939
  %951 = phi i16* [ %949, %943 ], [ %935, %939 ]
  %952 = getelementptr inbounds i16, i16* %951, i64 1
  store i16* %952, i16** %934, align 8
  store i32 -1, i32* %16, align 8
  br label %2558

953:                                              ; preds = %943, %932
  %954 = phi i16* [ %935, %932 ], [ %949, %943 ]
  %955 = load i16, i16* %954, align 2
  %956 = zext i16 %955 to i32
  %957 = getelementptr inbounds i16, i16* %954, i64 1
  store i16* %957, i16** %934, align 8
  store i32 %956, i32* %16, align 8
  %958 = icmp eq i16 %955, 61
  br i1 %958, label %959, label %2558

959:                                              ; preds = %953
  %960 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %961 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %960, i64 0, i32 2
  %962 = load i16*, i16** %961, align 8
  %963 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %960, i64 0, i32 3
  %964 = load i16*, i16** %963, align 8
  %965 = icmp ult i16* %962, %964
  br i1 %965, label %966, label %969, !prof !4

966:                                              ; preds = %959
  %967 = load i16, i16* %962, align 2
  %968 = zext i16 %967 to i32
  br label %983

969:                                              ; preds = %959
  %970 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %960, i64 0, i32 6
  %971 = load i8, i8* %970, align 8, !range !2
  %972 = icmp eq i8 %971, 0
  br i1 %972, label %973, label %983

973:                                              ; preds = %969
  %974 = bitcast %"class.v8::internal::Utf16CharacterStream"* %960 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %975 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %974, align 8
  %976 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %975, i64 5
  %977 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %976, align 8
  %978 = tail call zeroext i1 %977(%"class.v8::internal::Utf16CharacterStream"* %960) #8
  %979 = load i16*, i16** %961, align 8
  br i1 %978, label %980, label %983

980:                                              ; preds = %973
  %981 = load i16, i16* %979, align 2
  %982 = zext i16 %981 to i32
  br label %983

983:                                              ; preds = %980, %973, %969, %966
  %984 = phi i16* [ %962, %966 ], [ %979, %980 ], [ %962, %969 ], [ %979, %973 ]
  %985 = phi i32 [ %968, %966 ], [ %982, %980 ], [ -1, %969 ], [ -1, %973 ]
  %986 = getelementptr inbounds i16, i16* %984, i64 1
  store i16* %986, i16** %961, align 8
  store i32 %985, i32* %16, align 8
  br label %2558

987:                                              ; preds = %927
  %988 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %989 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %988, i64 0, i32 2
  %990 = load i16*, i16** %989, align 8
  %991 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %988, i64 0, i32 3
  %992 = load i16*, i16** %991, align 8
  %993 = icmp ult i16* %990, %992
  br i1 %993, label %994, label %997, !prof !4

994:                                              ; preds = %987
  %995 = load i16, i16* %990, align 2
  %996 = zext i16 %995 to i32
  br label %1011

997:                                              ; preds = %987
  %998 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %988, i64 0, i32 6
  %999 = load i8, i8* %998, align 8, !range !2
  %1000 = icmp eq i8 %999, 0
  br i1 %1000, label %1001, label %1011

1001:                                             ; preds = %997
  %1002 = bitcast %"class.v8::internal::Utf16CharacterStream"* %988 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %1003 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1002, align 8
  %1004 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1003, i64 5
  %1005 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1004, align 8
  %1006 = tail call zeroext i1 %1005(%"class.v8::internal::Utf16CharacterStream"* %988) #8
  %1007 = load i16*, i16** %989, align 8
  br i1 %1006, label %1008, label %1011

1008:                                             ; preds = %1001
  %1009 = load i16, i16* %1007, align 2
  %1010 = zext i16 %1009 to i32
  br label %1011

1011:                                             ; preds = %1008, %1001, %997, %994
  %1012 = phi i16* [ %990, %994 ], [ %1007, %1008 ], [ %990, %997 ], [ %1007, %1001 ]
  %1013 = phi i32 [ %996, %994 ], [ %1010, %1008 ], [ -1, %997 ], [ -1, %1001 ]
  %1014 = getelementptr inbounds i16, i16* %1012, i64 1
  store i16* %1014, i16** %989, align 8
  store i32 %1013, i32* %16, align 8
  br label %2558

1015:                                             ; preds = %37
  %1016 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %1017 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1016, i64 0, i32 2
  %1018 = load i16*, i16** %1017, align 8
  %1019 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1016, i64 0, i32 3
  %1020 = load i16*, i16** %1019, align 8
  %1021 = icmp ult i16* %1018, %1020
  br i1 %1021, label %1036, label %1022, !prof !4

1022:                                             ; preds = %1015
  %1023 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1016, i64 0, i32 6
  %1024 = load i8, i8* %1023, align 8, !range !2
  %1025 = icmp eq i8 %1024, 0
  br i1 %1025, label %1026, label %1033

1026:                                             ; preds = %1022
  %1027 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1016 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %1028 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1027, align 8
  %1029 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1028, i64 5
  %1030 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1029, align 8
  %1031 = tail call zeroext i1 %1030(%"class.v8::internal::Utf16CharacterStream"* %1016) #8
  %1032 = load i16*, i16** %1017, align 8
  br i1 %1031, label %1036, label %1033

1033:                                             ; preds = %1026, %1022
  %1034 = phi i16* [ %1032, %1026 ], [ %1018, %1022 ]
  %1035 = getelementptr inbounds i16, i16* %1034, i64 1
  store i16* %1035, i16** %1017, align 8
  store i32 -1, i32* %16, align 8
  br label %2558

1036:                                             ; preds = %1026, %1015
  %1037 = phi i16* [ %1018, %1015 ], [ %1032, %1026 ]
  %1038 = load i16, i16* %1037, align 2
  %1039 = zext i16 %1038 to i32
  %1040 = getelementptr inbounds i16, i16* %1037, i64 1
  store i16* %1040, i16** %1017, align 8
  store i32 %1039, i32* %16, align 8
  %1041 = icmp eq i16 %1038, 61
  br i1 %1041, label %1042, label %2558

1042:                                             ; preds = %1036
  %1043 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %1044 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1043, i64 0, i32 2
  %1045 = load i16*, i16** %1044, align 8
  %1046 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1043, i64 0, i32 3
  %1047 = load i16*, i16** %1046, align 8
  %1048 = icmp ult i16* %1045, %1047
  br i1 %1048, label %1049, label %1052, !prof !4

1049:                                             ; preds = %1042
  %1050 = load i16, i16* %1045, align 2
  %1051 = zext i16 %1050 to i32
  br label %1066

1052:                                             ; preds = %1042
  %1053 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1043, i64 0, i32 6
  %1054 = load i8, i8* %1053, align 8, !range !2
  %1055 = icmp eq i8 %1054, 0
  br i1 %1055, label %1056, label %1066

1056:                                             ; preds = %1052
  %1057 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1043 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %1058 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1057, align 8
  %1059 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1058, i64 5
  %1060 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1059, align 8
  %1061 = tail call zeroext i1 %1060(%"class.v8::internal::Utf16CharacterStream"* %1043) #8
  %1062 = load i16*, i16** %1044, align 8
  br i1 %1061, label %1063, label %1066

1063:                                             ; preds = %1056
  %1064 = load i16, i16* %1062, align 2
  %1065 = zext i16 %1064 to i32
  br label %1066

1066:                                             ; preds = %1063, %1056, %1052, %1049
  %1067 = phi i16* [ %1045, %1049 ], [ %1062, %1063 ], [ %1045, %1052 ], [ %1062, %1056 ]
  %1068 = phi i32 [ %1051, %1049 ], [ %1065, %1063 ], [ -1, %1052 ], [ -1, %1056 ]
  %1069 = getelementptr inbounds i16, i16* %1067, i64 1
  store i16* %1069, i16** %1044, align 8
  store i32 %1068, i32* %16, align 8
  br label %2558

1070:                                             ; preds = %37
  %1071 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %1072 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1071, i64 0, i32 2
  %1073 = load i16*, i16** %1072, align 8
  %1074 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1071, i64 0, i32 3
  %1075 = load i16*, i16** %1074, align 8
  %1076 = icmp ult i16* %1073, %1075
  br i1 %1076, label %1091, label %1077, !prof !4

1077:                                             ; preds = %1070
  %1078 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1071, i64 0, i32 6
  %1079 = load i8, i8* %1078, align 8, !range !2
  %1080 = icmp eq i8 %1079, 0
  br i1 %1080, label %1081, label %1088

1081:                                             ; preds = %1077
  %1082 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1071 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %1083 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1082, align 8
  %1084 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1083, i64 5
  %1085 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1084, align 8
  %1086 = tail call zeroext i1 %1085(%"class.v8::internal::Utf16CharacterStream"* %1071) #8
  %1087 = load i16*, i16** %1072, align 8
  br i1 %1086, label %1091, label %1088

1088:                                             ; preds = %1081, %1077
  %1089 = phi i16* [ %1087, %1081 ], [ %1073, %1077 ]
  %1090 = getelementptr inbounds i16, i16* %1089, i64 1
  store i16* %1090, i16** %1072, align 8
  store i32 -1, i32* %16, align 8
  br label %2558

1091:                                             ; preds = %1081, %1070
  %1092 = phi i16* [ %1073, %1070 ], [ %1087, %1081 ]
  %1093 = load i16, i16* %1092, align 2
  %1094 = zext i16 %1093 to i32
  %1095 = getelementptr inbounds i16, i16* %1092, i64 1
  store i16* %1095, i16** %1072, align 8
  store i32 %1094, i32* %16, align 8
  switch i16 %1093, label %2558 [
    i16 47, label %1096
    i16 42, label %1250
    i16 61, label %1252
  ]

1096:                                             ; preds = %1091
  %1097 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %1098 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1097, i64 0, i32 2
  %1099 = load i16*, i16** %1098, align 8
  %1100 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1097, i64 0, i32 3
  %1101 = load i16*, i16** %1100, align 8
  %1102 = icmp ult i16* %1099, %1101
  br i1 %1102, label %1115, label %1103, !prof !4

1103:                                             ; preds = %1096
  %1104 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1097, i64 0, i32 6
  %1105 = load i8, i8* %1104, align 8, !range !2
  %1106 = icmp eq i8 %1105, 0
  br i1 %1106, label %1107, label %1212

1107:                                             ; preds = %1103
  %1108 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1097 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %1109 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1108, align 8
  %1110 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1109, i64 5
  %1111 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1110, align 8
  %1112 = tail call zeroext i1 %1111(%"class.v8::internal::Utf16CharacterStream"* %1097) #8
  br i1 %1112, label %1113, label %1212

1113:                                             ; preds = %1107
  %1114 = load i16*, i16** %1098, align 8
  br label %1115

1115:                                             ; preds = %1113, %1096
  %1116 = phi i16* [ %1114, %1113 ], [ %1099, %1096 ]
  %1117 = load i16, i16* %1116, align 2
  switch i16 %1117, label %1212 [
    i16 64, label %1118
    i16 35, label %1118
  ]

1118:                                             ; preds = %1115, %1115
  %1119 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %1120 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1119, i64 0, i32 2
  %1121 = load i16*, i16** %1120, align 8
  %1122 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1119, i64 0, i32 3
  %1123 = load i16*, i16** %1122, align 8
  %1124 = icmp ult i16* %1121, %1123
  br i1 %1124, label %1125, label %1128, !prof !4

1125:                                             ; preds = %1118
  %1126 = load i16, i16* %1121, align 2
  %1127 = zext i16 %1126 to i32
  br label %1142

1128:                                             ; preds = %1118
  %1129 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1119, i64 0, i32 6
  %1130 = load i8, i8* %1129, align 8, !range !2
  %1131 = icmp eq i8 %1130, 0
  br i1 %1131, label %1132, label %1142

1132:                                             ; preds = %1128
  %1133 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1119 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %1134 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1133, align 8
  %1135 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1134, i64 5
  %1136 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1135, align 8
  %1137 = tail call zeroext i1 %1136(%"class.v8::internal::Utf16CharacterStream"* %1119) #8
  %1138 = load i16*, i16** %1120, align 8
  br i1 %1137, label %1139, label %1142

1139:                                             ; preds = %1132
  %1140 = load i16, i16* %1138, align 2
  %1141 = zext i16 %1140 to i32
  br label %1142

1142:                                             ; preds = %1139, %1132, %1128, %1125
  %1143 = phi i16* [ %1121, %1125 ], [ %1138, %1139 ], [ %1121, %1128 ], [ %1138, %1132 ]
  %1144 = phi i32 [ %1127, %1125 ], [ %1141, %1139 ], [ -1, %1128 ], [ -1, %1132 ]
  %1145 = getelementptr inbounds i16, i16* %1143, i64 1
  store i16* %1145, i16** %1120, align 8
  store i32 %1144, i32* %16, align 8
  %1146 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %1147 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1146, i64 0, i32 2
  %1148 = load i16*, i16** %1147, align 8
  %1149 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1146, i64 0, i32 3
  %1150 = load i16*, i16** %1149, align 8
  %1151 = icmp ult i16* %1148, %1150
  br i1 %1151, label %1152, label %1155, !prof !4

1152:                                             ; preds = %1142
  %1153 = load i16, i16* %1148, align 2
  %1154 = zext i16 %1153 to i32
  br label %1169

1155:                                             ; preds = %1142
  %1156 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1146, i64 0, i32 6
  %1157 = load i8, i8* %1156, align 8, !range !2
  %1158 = icmp eq i8 %1157, 0
  br i1 %1158, label %1159, label %1169

1159:                                             ; preds = %1155
  %1160 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1146 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %1161 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1160, align 8
  %1162 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1161, i64 5
  %1163 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1162, align 8
  %1164 = tail call zeroext i1 %1163(%"class.v8::internal::Utf16CharacterStream"* %1146) #8
  %1165 = load i16*, i16** %1147, align 8
  br i1 %1164, label %1166, label %1169

1166:                                             ; preds = %1159
  %1167 = load i16, i16* %1165, align 2
  %1168 = zext i16 %1167 to i32
  br label %1169

1169:                                             ; preds = %1166, %1159, %1155, %1152
  %1170 = phi i16* [ %1148, %1152 ], [ %1165, %1166 ], [ %1148, %1155 ], [ %1165, %1159 ]
  %1171 = phi i32 [ %1154, %1152 ], [ %1168, %1166 ], [ -1, %1155 ], [ -1, %1159 ]
  %1172 = getelementptr inbounds i16, i16* %1170, i64 1
  store i16* %1172, i16** %1147, align 8
  store i32 %1171, i32* %16, align 8
  tail call void @_ZN2v88internal7Scanner26TryToParseSourceURLCommentEv(%"class.v8::internal::Scanner"* %0) #8
  %1173 = load i32, i32* %16, align 8
  switch i32 %1173, label %1174 [
    i32 8232, label %2555
    i32 13, label %2555
    i32 10, label %2555
    i32 8233, label %2555
    i32 -1, label %2555
  ]

1174:                                             ; preds = %1169
  %1175 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %1176 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1175, i64 0, i32 2
  %1177 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1175, i64 0, i32 3
  %1178 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1175, i64 0, i32 6
  %1179 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1175 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  br label %1180

1180:                                             ; preds = %1196, %1174
  %1181 = load i16*, i16** %1176, align 8
  %1182 = load i16*, i16** %1177, align 8
  %1183 = icmp eq i16* %1181, %1182
  br i1 %1183, label %1190, label %1184

1184:                                             ; preds = %1180, %1187
  %1185 = phi i16* [ %1188, %1187 ], [ %1181, %1180 ]
  %1186 = load i16, i16* %1185, align 2
  switch i16 %1186, label %1187 [
    i16 8232, label %1190
    i16 13, label %1190
    i16 10, label %1190
    i16 8233, label %1190
  ]

1187:                                             ; preds = %1184
  %1188 = getelementptr inbounds i16, i16* %1185, i64 1
  %1189 = icmp eq i16* %1188, %1182
  br i1 %1189, label %1193, label %1184

1190:                                             ; preds = %1184, %1184, %1184, %1184, %1180
  %1191 = phi i16* [ %1181, %1180 ], [ %1185, %1184 ], [ %1185, %1184 ], [ %1185, %1184 ], [ %1185, %1184 ]
  %1192 = icmp eq i16* %1191, %1182
  br i1 %1192, label %1193, label %1206

1193:                                             ; preds = %1187, %1190
  store i16* %1182, i16** %1176, align 8
  %1194 = load i8, i8* %1178, align 8, !range !2
  %1195 = icmp eq i8 %1194, 0
  br i1 %1195, label %1196, label %1203

1196:                                             ; preds = %1193
  %1197 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1179, align 8
  %1198 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1197, i64 5
  %1199 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1198, align 8
  %1200 = tail call zeroext i1 %1199(%"class.v8::internal::Utf16CharacterStream"* %1175) #8
  br i1 %1200, label %1180, label %1201

1201:                                             ; preds = %1196
  %1202 = load i16*, i16** %1176, align 8
  br label %1203

1203:                                             ; preds = %1193, %1201
  %1204 = phi i16* [ %1202, %1201 ], [ %1182, %1193 ]
  %1205 = getelementptr inbounds i16, i16* %1204, i64 1
  store i16* %1205, i16** %1176, align 8
  br label %1210

1206:                                             ; preds = %1190
  %1207 = getelementptr inbounds i16, i16* %1191, i64 1
  store i16* %1207, i16** %1176, align 8
  %1208 = load i16, i16* %1191, align 2
  %1209 = zext i16 %1208 to i32
  br label %1210

1210:                                             ; preds = %1206, %1203
  %1211 = phi i32 [ %1209, %1206 ], [ -1, %1203 ]
  store i32 %1211, i32* %16, align 8
  br label %2555

1212:                                             ; preds = %1115, %1107, %1103
  %1213 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %1214 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1213, i64 0, i32 2
  %1215 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1213, i64 0, i32 3
  %1216 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1213, i64 0, i32 6
  %1217 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1213 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  br label %1218

1218:                                             ; preds = %1234, %1212
  %1219 = load i16*, i16** %1214, align 8
  %1220 = load i16*, i16** %1215, align 8
  %1221 = icmp eq i16* %1219, %1220
  br i1 %1221, label %1228, label %1222

1222:                                             ; preds = %1218, %1225
  %1223 = phi i16* [ %1226, %1225 ], [ %1219, %1218 ]
  %1224 = load i16, i16* %1223, align 2
  switch i16 %1224, label %1225 [
    i16 8232, label %1228
    i16 13, label %1228
    i16 10, label %1228
    i16 8233, label %1228
  ]

1225:                                             ; preds = %1222
  %1226 = getelementptr inbounds i16, i16* %1223, i64 1
  %1227 = icmp eq i16* %1226, %1220
  br i1 %1227, label %1231, label %1222

1228:                                             ; preds = %1222, %1222, %1222, %1222, %1218
  %1229 = phi i16* [ %1219, %1218 ], [ %1223, %1222 ], [ %1223, %1222 ], [ %1223, %1222 ], [ %1223, %1222 ]
  %1230 = icmp eq i16* %1229, %1220
  br i1 %1230, label %1231, label %1244

1231:                                             ; preds = %1225, %1228
  store i16* %1220, i16** %1214, align 8
  %1232 = load i8, i8* %1216, align 8, !range !2
  %1233 = icmp eq i8 %1232, 0
  br i1 %1233, label %1234, label %1241

1234:                                             ; preds = %1231
  %1235 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1217, align 8
  %1236 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1235, i64 5
  %1237 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1236, align 8
  %1238 = tail call zeroext i1 %1237(%"class.v8::internal::Utf16CharacterStream"* %1213) #8
  br i1 %1238, label %1218, label %1239

1239:                                             ; preds = %1234
  %1240 = load i16*, i16** %1214, align 8
  br label %1241

1241:                                             ; preds = %1231, %1239
  %1242 = phi i16* [ %1240, %1239 ], [ %1220, %1231 ]
  %1243 = getelementptr inbounds i16, i16* %1242, i64 1
  store i16* %1243, i16** %1214, align 8
  br label %1248

1244:                                             ; preds = %1228
  %1245 = getelementptr inbounds i16, i16* %1229, i64 1
  store i16* %1245, i16** %1214, align 8
  %1246 = load i16, i16* %1229, align 2
  %1247 = zext i16 %1246 to i32
  br label %1248

1248:                                             ; preds = %1244, %1241
  %1249 = phi i32 [ %1247, %1244 ], [ -1, %1241 ]
  store i32 %1249, i32* %16, align 8
  br label %2555

1250:                                             ; preds = %1091
  %1251 = tail call zeroext i8 @_ZN2v88internal7Scanner20SkipMultiLineCommentEv(%"class.v8::internal::Scanner"* %0) #8
  br label %2555

1252:                                             ; preds = %1091
  %1253 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %1254 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1253, i64 0, i32 2
  %1255 = load i16*, i16** %1254, align 8
  %1256 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1253, i64 0, i32 3
  %1257 = load i16*, i16** %1256, align 8
  %1258 = icmp ult i16* %1255, %1257
  br i1 %1258, label %1259, label %1262, !prof !4

1259:                                             ; preds = %1252
  %1260 = load i16, i16* %1255, align 2
  %1261 = zext i16 %1260 to i32
  br label %1276

1262:                                             ; preds = %1252
  %1263 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1253, i64 0, i32 6
  %1264 = load i8, i8* %1263, align 8, !range !2
  %1265 = icmp eq i8 %1264, 0
  br i1 %1265, label %1266, label %1276

1266:                                             ; preds = %1262
  %1267 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1253 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %1268 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1267, align 8
  %1269 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1268, i64 5
  %1270 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1269, align 8
  %1271 = tail call zeroext i1 %1270(%"class.v8::internal::Utf16CharacterStream"* %1253) #8
  %1272 = load i16*, i16** %1254, align 8
  br i1 %1271, label %1273, label %1276

1273:                                             ; preds = %1266
  %1274 = load i16, i16* %1272, align 2
  %1275 = zext i16 %1274 to i32
  br label %1276

1276:                                             ; preds = %1273, %1266, %1262, %1259
  %1277 = phi i16* [ %1255, %1259 ], [ %1272, %1273 ], [ %1255, %1262 ], [ %1272, %1266 ]
  %1278 = phi i32 [ %1261, %1259 ], [ %1275, %1273 ], [ -1, %1262 ], [ -1, %1266 ]
  %1279 = getelementptr inbounds i16, i16* %1277, i64 1
  store i16* %1279, i16** %1254, align 8
  store i32 %1278, i32* %16, align 8
  br label %2558

1280:                                             ; preds = %37
  %1281 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %1282 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1281, i64 0, i32 2
  %1283 = load i16*, i16** %1282, align 8
  %1284 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1281, i64 0, i32 3
  %1285 = load i16*, i16** %1284, align 8
  %1286 = icmp ult i16* %1283, %1285
  br i1 %1286, label %1301, label %1287, !prof !4

1287:                                             ; preds = %1280
  %1288 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1281, i64 0, i32 6
  %1289 = load i8, i8* %1288, align 8, !range !2
  %1290 = icmp eq i8 %1289, 0
  br i1 %1290, label %1291, label %1298

1291:                                             ; preds = %1287
  %1292 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1281 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %1293 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1292, align 8
  %1294 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1293, i64 5
  %1295 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1294, align 8
  %1296 = tail call zeroext i1 %1295(%"class.v8::internal::Utf16CharacterStream"* %1281) #8
  %1297 = load i16*, i16** %1282, align 8
  br i1 %1296, label %1301, label %1298

1298:                                             ; preds = %1291, %1287
  %1299 = phi i16* [ %1297, %1291 ], [ %1283, %1287 ]
  %1300 = getelementptr inbounds i16, i16* %1299, i64 1
  store i16* %1300, i16** %1282, align 8
  store i32 -1, i32* %16, align 8
  br label %2558

1301:                                             ; preds = %1291, %1280
  %1302 = phi i16* [ %1283, %1280 ], [ %1297, %1291 ]
  %1303 = load i16, i16* %1302, align 2
  %1304 = zext i16 %1303 to i32
  %1305 = getelementptr inbounds i16, i16* %1302, i64 1
  store i16* %1305, i16** %1282, align 8
  store i32 %1304, i32* %16, align 8
  switch i16 %1303, label %2558 [
    i16 38, label %1306
    i16 61, label %1361
  ]

1306:                                             ; preds = %1301
  %1307 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %1308 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1307, i64 0, i32 2
  %1309 = load i16*, i16** %1308, align 8
  %1310 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1307, i64 0, i32 3
  %1311 = load i16*, i16** %1310, align 8
  %1312 = icmp ult i16* %1309, %1311
  br i1 %1312, label %1327, label %1313, !prof !4

1313:                                             ; preds = %1306
  %1314 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1307, i64 0, i32 6
  %1315 = load i8, i8* %1314, align 8, !range !2
  %1316 = icmp eq i8 %1315, 0
  br i1 %1316, label %1317, label %1324

1317:                                             ; preds = %1313
  %1318 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1307 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %1319 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1318, align 8
  %1320 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1319, i64 5
  %1321 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1320, align 8
  %1322 = tail call zeroext i1 %1321(%"class.v8::internal::Utf16CharacterStream"* %1307) #8
  %1323 = load i16*, i16** %1308, align 8
  br i1 %1322, label %1327, label %1324

1324:                                             ; preds = %1317, %1313
  %1325 = phi i16* [ %1323, %1317 ], [ %1309, %1313 ]
  %1326 = getelementptr inbounds i16, i16* %1325, i64 1
  store i16* %1326, i16** %1308, align 8
  store i32 -1, i32* %16, align 8
  br label %2558

1327:                                             ; preds = %1317, %1306
  %1328 = phi i16* [ %1309, %1306 ], [ %1323, %1317 ]
  %1329 = load i16, i16* %1328, align 2
  %1330 = zext i16 %1329 to i32
  %1331 = getelementptr inbounds i16, i16* %1328, i64 1
  store i16* %1331, i16** %1308, align 8
  store i32 %1330, i32* %16, align 8
  %1332 = icmp eq i16 %1329, 61
  br i1 %1332, label %1333, label %2558

1333:                                             ; preds = %1327
  %1334 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %1335 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1334, i64 0, i32 2
  %1336 = load i16*, i16** %1335, align 8
  %1337 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1334, i64 0, i32 3
  %1338 = load i16*, i16** %1337, align 8
  %1339 = icmp ult i16* %1336, %1338
  br i1 %1339, label %1340, label %1343, !prof !4

1340:                                             ; preds = %1333
  %1341 = load i16, i16* %1336, align 2
  %1342 = zext i16 %1341 to i32
  br label %1357

1343:                                             ; preds = %1333
  %1344 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1334, i64 0, i32 6
  %1345 = load i8, i8* %1344, align 8, !range !2
  %1346 = icmp eq i8 %1345, 0
  br i1 %1346, label %1347, label %1357

1347:                                             ; preds = %1343
  %1348 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1334 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %1349 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1348, align 8
  %1350 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1349, i64 5
  %1351 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1350, align 8
  %1352 = tail call zeroext i1 %1351(%"class.v8::internal::Utf16CharacterStream"* %1334) #8
  %1353 = load i16*, i16** %1335, align 8
  br i1 %1352, label %1354, label %1357

1354:                                             ; preds = %1347
  %1355 = load i16, i16* %1353, align 2
  %1356 = zext i16 %1355 to i32
  br label %1357

1357:                                             ; preds = %1354, %1347, %1343, %1340
  %1358 = phi i16* [ %1336, %1340 ], [ %1353, %1354 ], [ %1336, %1343 ], [ %1353, %1347 ]
  %1359 = phi i32 [ %1342, %1340 ], [ %1356, %1354 ], [ -1, %1343 ], [ -1, %1347 ]
  %1360 = getelementptr inbounds i16, i16* %1358, i64 1
  store i16* %1360, i16** %1335, align 8
  store i32 %1359, i32* %16, align 8
  br label %2558

1361:                                             ; preds = %1301
  %1362 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %1363 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1362, i64 0, i32 2
  %1364 = load i16*, i16** %1363, align 8
  %1365 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1362, i64 0, i32 3
  %1366 = load i16*, i16** %1365, align 8
  %1367 = icmp ult i16* %1364, %1366
  br i1 %1367, label %1368, label %1371, !prof !4

1368:                                             ; preds = %1361
  %1369 = load i16, i16* %1364, align 2
  %1370 = zext i16 %1369 to i32
  br label %1385

1371:                                             ; preds = %1361
  %1372 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1362, i64 0, i32 6
  %1373 = load i8, i8* %1372, align 8, !range !2
  %1374 = icmp eq i8 %1373, 0
  br i1 %1374, label %1375, label %1385

1375:                                             ; preds = %1371
  %1376 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1362 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %1377 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1376, align 8
  %1378 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1377, i64 5
  %1379 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1378, align 8
  %1380 = tail call zeroext i1 %1379(%"class.v8::internal::Utf16CharacterStream"* %1362) #8
  %1381 = load i16*, i16** %1363, align 8
  br i1 %1380, label %1382, label %1385

1382:                                             ; preds = %1375
  %1383 = load i16, i16* %1381, align 2
  %1384 = zext i16 %1383 to i32
  br label %1385

1385:                                             ; preds = %1382, %1375, %1371, %1368
  %1386 = phi i16* [ %1364, %1368 ], [ %1381, %1382 ], [ %1364, %1371 ], [ %1381, %1375 ]
  %1387 = phi i32 [ %1370, %1368 ], [ %1384, %1382 ], [ -1, %1371 ], [ -1, %1375 ]
  %1388 = getelementptr inbounds i16, i16* %1386, i64 1
  store i16* %1388, i16** %1363, align 8
  store i32 %1387, i32* %16, align 8
  br label %2558

1389:                                             ; preds = %37
  %1390 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %1391 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1390, i64 0, i32 2
  %1392 = load i16*, i16** %1391, align 8
  %1393 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1390, i64 0, i32 3
  %1394 = load i16*, i16** %1393, align 8
  %1395 = icmp ult i16* %1392, %1394
  br i1 %1395, label %1410, label %1396, !prof !4

1396:                                             ; preds = %1389
  %1397 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1390, i64 0, i32 6
  %1398 = load i8, i8* %1397, align 8, !range !2
  %1399 = icmp eq i8 %1398, 0
  br i1 %1399, label %1400, label %1407

1400:                                             ; preds = %1396
  %1401 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1390 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %1402 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1401, align 8
  %1403 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1402, i64 5
  %1404 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1403, align 8
  %1405 = tail call zeroext i1 %1404(%"class.v8::internal::Utf16CharacterStream"* %1390) #8
  %1406 = load i16*, i16** %1391, align 8
  br i1 %1405, label %1410, label %1407

1407:                                             ; preds = %1400, %1396
  %1408 = phi i16* [ %1406, %1400 ], [ %1392, %1396 ]
  %1409 = getelementptr inbounds i16, i16* %1408, i64 1
  store i16* %1409, i16** %1391, align 8
  store i32 -1, i32* %16, align 8
  br label %2558

1410:                                             ; preds = %1400, %1389
  %1411 = phi i16* [ %1392, %1389 ], [ %1406, %1400 ]
  %1412 = load i16, i16* %1411, align 2
  %1413 = zext i16 %1412 to i32
  %1414 = getelementptr inbounds i16, i16* %1411, i64 1
  store i16* %1414, i16** %1391, align 8
  store i32 %1413, i32* %16, align 8
  switch i16 %1412, label %2558 [
    i16 124, label %1415
    i16 61, label %1470
  ]

1415:                                             ; preds = %1410
  %1416 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %1417 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1416, i64 0, i32 2
  %1418 = load i16*, i16** %1417, align 8
  %1419 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1416, i64 0, i32 3
  %1420 = load i16*, i16** %1419, align 8
  %1421 = icmp ult i16* %1418, %1420
  br i1 %1421, label %1436, label %1422, !prof !4

1422:                                             ; preds = %1415
  %1423 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1416, i64 0, i32 6
  %1424 = load i8, i8* %1423, align 8, !range !2
  %1425 = icmp eq i8 %1424, 0
  br i1 %1425, label %1426, label %1433

1426:                                             ; preds = %1422
  %1427 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1416 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %1428 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1427, align 8
  %1429 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1428, i64 5
  %1430 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1429, align 8
  %1431 = tail call zeroext i1 %1430(%"class.v8::internal::Utf16CharacterStream"* %1416) #8
  %1432 = load i16*, i16** %1417, align 8
  br i1 %1431, label %1436, label %1433

1433:                                             ; preds = %1426, %1422
  %1434 = phi i16* [ %1432, %1426 ], [ %1418, %1422 ]
  %1435 = getelementptr inbounds i16, i16* %1434, i64 1
  store i16* %1435, i16** %1417, align 8
  store i32 -1, i32* %16, align 8
  br label %2558

1436:                                             ; preds = %1426, %1415
  %1437 = phi i16* [ %1418, %1415 ], [ %1432, %1426 ]
  %1438 = load i16, i16* %1437, align 2
  %1439 = zext i16 %1438 to i32
  %1440 = getelementptr inbounds i16, i16* %1437, i64 1
  store i16* %1440, i16** %1417, align 8
  store i32 %1439, i32* %16, align 8
  %1441 = icmp eq i16 %1438, 61
  br i1 %1441, label %1442, label %2558

1442:                                             ; preds = %1436
  %1443 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %1444 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1443, i64 0, i32 2
  %1445 = load i16*, i16** %1444, align 8
  %1446 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1443, i64 0, i32 3
  %1447 = load i16*, i16** %1446, align 8
  %1448 = icmp ult i16* %1445, %1447
  br i1 %1448, label %1449, label %1452, !prof !4

1449:                                             ; preds = %1442
  %1450 = load i16, i16* %1445, align 2
  %1451 = zext i16 %1450 to i32
  br label %1466

1452:                                             ; preds = %1442
  %1453 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1443, i64 0, i32 6
  %1454 = load i8, i8* %1453, align 8, !range !2
  %1455 = icmp eq i8 %1454, 0
  br i1 %1455, label %1456, label %1466

1456:                                             ; preds = %1452
  %1457 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1443 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %1458 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1457, align 8
  %1459 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1458, i64 5
  %1460 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1459, align 8
  %1461 = tail call zeroext i1 %1460(%"class.v8::internal::Utf16CharacterStream"* %1443) #8
  %1462 = load i16*, i16** %1444, align 8
  br i1 %1461, label %1463, label %1466

1463:                                             ; preds = %1456
  %1464 = load i16, i16* %1462, align 2
  %1465 = zext i16 %1464 to i32
  br label %1466

1466:                                             ; preds = %1463, %1456, %1452, %1449
  %1467 = phi i16* [ %1445, %1449 ], [ %1462, %1463 ], [ %1445, %1452 ], [ %1462, %1456 ]
  %1468 = phi i32 [ %1451, %1449 ], [ %1465, %1463 ], [ -1, %1452 ], [ -1, %1456 ]
  %1469 = getelementptr inbounds i16, i16* %1467, i64 1
  store i16* %1469, i16** %1444, align 8
  store i32 %1468, i32* %16, align 8
  br label %2558

1470:                                             ; preds = %1410
  %1471 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %1472 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1471, i64 0, i32 2
  %1473 = load i16*, i16** %1472, align 8
  %1474 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1471, i64 0, i32 3
  %1475 = load i16*, i16** %1474, align 8
  %1476 = icmp ult i16* %1473, %1475
  br i1 %1476, label %1477, label %1480, !prof !4

1477:                                             ; preds = %1470
  %1478 = load i16, i16* %1473, align 2
  %1479 = zext i16 %1478 to i32
  br label %1494

1480:                                             ; preds = %1470
  %1481 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1471, i64 0, i32 6
  %1482 = load i8, i8* %1481, align 8, !range !2
  %1483 = icmp eq i8 %1482, 0
  br i1 %1483, label %1484, label %1494

1484:                                             ; preds = %1480
  %1485 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1471 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %1486 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1485, align 8
  %1487 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1486, i64 5
  %1488 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1487, align 8
  %1489 = tail call zeroext i1 %1488(%"class.v8::internal::Utf16CharacterStream"* %1471) #8
  %1490 = load i16*, i16** %1472, align 8
  br i1 %1489, label %1491, label %1494

1491:                                             ; preds = %1484
  %1492 = load i16, i16* %1490, align 2
  %1493 = zext i16 %1492 to i32
  br label %1494

1494:                                             ; preds = %1491, %1484, %1480, %1477
  %1495 = phi i16* [ %1473, %1477 ], [ %1490, %1491 ], [ %1473, %1480 ], [ %1490, %1484 ]
  %1496 = phi i32 [ %1479, %1477 ], [ %1493, %1491 ], [ -1, %1480 ], [ -1, %1484 ]
  %1497 = getelementptr inbounds i16, i16* %1495, i64 1
  store i16* %1497, i16** %1472, align 8
  store i32 %1496, i32* %16, align 8
  br label %2558

1498:                                             ; preds = %37
  %1499 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %1500 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1499, i64 0, i32 2
  %1501 = load i16*, i16** %1500, align 8
  %1502 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1499, i64 0, i32 3
  %1503 = load i16*, i16** %1502, align 8
  %1504 = icmp ult i16* %1501, %1503
  br i1 %1504, label %1519, label %1505, !prof !4

1505:                                             ; preds = %1498
  %1506 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1499, i64 0, i32 6
  %1507 = load i8, i8* %1506, align 8, !range !2
  %1508 = icmp eq i8 %1507, 0
  br i1 %1508, label %1509, label %1516

1509:                                             ; preds = %1505
  %1510 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1499 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %1511 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1510, align 8
  %1512 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1511, i64 5
  %1513 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1512, align 8
  %1514 = tail call zeroext i1 %1513(%"class.v8::internal::Utf16CharacterStream"* %1499) #8
  %1515 = load i16*, i16** %1500, align 8
  br i1 %1514, label %1519, label %1516

1516:                                             ; preds = %1509, %1505
  %1517 = phi i16* [ %1515, %1509 ], [ %1501, %1505 ]
  %1518 = getelementptr inbounds i16, i16* %1517, i64 1
  store i16* %1518, i16** %1500, align 8
  store i32 -1, i32* %16, align 8
  br label %2558

1519:                                             ; preds = %1509, %1498
  %1520 = phi i16* [ %1501, %1498 ], [ %1515, %1509 ]
  %1521 = load i16, i16* %1520, align 2
  %1522 = zext i16 %1521 to i32
  %1523 = getelementptr inbounds i16, i16* %1520, i64 1
  store i16* %1523, i16** %1500, align 8
  store i32 %1522, i32* %16, align 8
  %1524 = icmp eq i16 %1521, 61
  br i1 %1524, label %1525, label %2558

1525:                                             ; preds = %1519
  %1526 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %1527 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1526, i64 0, i32 2
  %1528 = load i16*, i16** %1527, align 8
  %1529 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1526, i64 0, i32 3
  %1530 = load i16*, i16** %1529, align 8
  %1531 = icmp ult i16* %1528, %1530
  br i1 %1531, label %1532, label %1535, !prof !4

1532:                                             ; preds = %1525
  %1533 = load i16, i16* %1528, align 2
  %1534 = zext i16 %1533 to i32
  br label %1549

1535:                                             ; preds = %1525
  %1536 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1526, i64 0, i32 6
  %1537 = load i8, i8* %1536, align 8, !range !2
  %1538 = icmp eq i8 %1537, 0
  br i1 %1538, label %1539, label %1549

1539:                                             ; preds = %1535
  %1540 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1526 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %1541 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1540, align 8
  %1542 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1541, i64 5
  %1543 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1542, align 8
  %1544 = tail call zeroext i1 %1543(%"class.v8::internal::Utf16CharacterStream"* %1526) #8
  %1545 = load i16*, i16** %1527, align 8
  br i1 %1544, label %1546, label %1549

1546:                                             ; preds = %1539
  %1547 = load i16, i16* %1545, align 2
  %1548 = zext i16 %1547 to i32
  br label %1549

1549:                                             ; preds = %1546, %1539, %1535, %1532
  %1550 = phi i16* [ %1528, %1532 ], [ %1545, %1546 ], [ %1528, %1535 ], [ %1545, %1539 ]
  %1551 = phi i32 [ %1534, %1532 ], [ %1548, %1546 ], [ -1, %1535 ], [ -1, %1539 ]
  %1552 = getelementptr inbounds i16, i16* %1550, i64 1
  store i16* %1552, i16** %1527, align 8
  store i32 %1551, i32* %16, align 8
  br label %2558

1553:                                             ; preds = %37
  %1554 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %1555 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1554, i64 0, i32 2
  %1556 = load i16*, i16** %1555, align 8
  %1557 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1554, i64 0, i32 3
  %1558 = load i16*, i16** %1557, align 8
  %1559 = icmp ult i16* %1556, %1558
  br i1 %1559, label %1574, label %1560, !prof !4

1560:                                             ; preds = %1553
  %1561 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1554, i64 0, i32 6
  %1562 = load i8, i8* %1561, align 8, !range !2
  %1563 = icmp eq i8 %1562, 0
  br i1 %1563, label %1564, label %1571

1564:                                             ; preds = %1560
  %1565 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1554 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %1566 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1565, align 8
  %1567 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1566, i64 5
  %1568 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1567, align 8
  %1569 = tail call zeroext i1 %1568(%"class.v8::internal::Utf16CharacterStream"* %1554) #8
  %1570 = load i16*, i16** %1555, align 8
  br i1 %1569, label %1574, label %1571

1571:                                             ; preds = %1564, %1560
  %1572 = phi i16* [ %1570, %1564 ], [ %1556, %1560 ]
  %1573 = getelementptr inbounds i16, i16* %1572, i64 1
  store i16* %1573, i16** %1555, align 8
  store i32 -1, i32* %16, align 8
  br label %2558

1574:                                             ; preds = %1564, %1553
  %1575 = phi i16* [ %1556, %1553 ], [ %1570, %1564 ]
  %1576 = load i16, i16* %1575, align 2
  %1577 = zext i16 %1576 to i32
  %1578 = getelementptr inbounds i16, i16* %1575, i64 1
  store i16* %1578, i16** %1555, align 8
  store i32 %1577, i32* %16, align 8
  %1579 = add nsw i32 %1577, -48
  %1580 = icmp ult i32 %1579, 10
  br i1 %1580, label %1581, label %1583

1581:                                             ; preds = %1574
  %1582 = tail call zeroext i8 @_ZN2v88internal7Scanner10ScanNumberEb(%"class.v8::internal::Scanner"* %0, i1 zeroext true) #8
  br label %2558

1583:                                             ; preds = %1574
  %1584 = icmp eq i16 %1576, 46
  br i1 %1584, label %1585, label %2558

1585:                                             ; preds = %1583
  %1586 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %1587 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1586, i64 0, i32 2
  %1588 = load i16*, i16** %1587, align 8
  %1589 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1586, i64 0, i32 3
  %1590 = load i16*, i16** %1589, align 8
  %1591 = icmp ult i16* %1588, %1590
  br i1 %1591, label %1604, label %1592, !prof !4

1592:                                             ; preds = %1585
  %1593 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1586, i64 0, i32 6
  %1594 = load i8, i8* %1593, align 8, !range !2
  %1595 = icmp eq i8 %1594, 0
  br i1 %1595, label %1596, label %2558

1596:                                             ; preds = %1592
  %1597 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1586 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %1598 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1597, align 8
  %1599 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1598, i64 5
  %1600 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1599, align 8
  %1601 = tail call zeroext i1 %1600(%"class.v8::internal::Utf16CharacterStream"* %1586) #8
  br i1 %1601, label %1602, label %2558

1602:                                             ; preds = %1596
  %1603 = load i16*, i16** %1587, align 8
  br label %1604

1604:                                             ; preds = %1602, %1585
  %1605 = phi i16* [ %1603, %1602 ], [ %1588, %1585 ]
  %1606 = load i16, i16* %1605, align 2
  %1607 = icmp eq i16 %1606, 46
  br i1 %1607, label %1608, label %2558

1608:                                             ; preds = %1604
  %1609 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %1610 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1609, i64 0, i32 2
  %1611 = load i16*, i16** %1610, align 8
  %1612 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1609, i64 0, i32 3
  %1613 = load i16*, i16** %1612, align 8
  %1614 = icmp ult i16* %1611, %1613
  br i1 %1614, label %1615, label %1618, !prof !4

1615:                                             ; preds = %1608
  %1616 = load i16, i16* %1611, align 2
  %1617 = zext i16 %1616 to i32
  br label %1632

1618:                                             ; preds = %1608
  %1619 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1609, i64 0, i32 6
  %1620 = load i8, i8* %1619, align 8, !range !2
  %1621 = icmp eq i8 %1620, 0
  br i1 %1621, label %1622, label %1632

1622:                                             ; preds = %1618
  %1623 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1609 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %1624 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1623, align 8
  %1625 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1624, i64 5
  %1626 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1625, align 8
  %1627 = tail call zeroext i1 %1626(%"class.v8::internal::Utf16CharacterStream"* %1609) #8
  %1628 = load i16*, i16** %1610, align 8
  br i1 %1627, label %1629, label %1632

1629:                                             ; preds = %1622
  %1630 = load i16, i16* %1628, align 2
  %1631 = zext i16 %1630 to i32
  br label %1632

1632:                                             ; preds = %1629, %1622, %1618, %1615
  %1633 = phi i16* [ %1611, %1615 ], [ %1628, %1629 ], [ %1611, %1618 ], [ %1628, %1622 ]
  %1634 = phi i32 [ %1617, %1615 ], [ %1631, %1629 ], [ -1, %1618 ], [ -1, %1622 ]
  %1635 = getelementptr inbounds i16, i16* %1633, i64 1
  store i16* %1635, i16** %1610, align 8
  store i32 %1634, i32* %16, align 8
  %1636 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %1637 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1636, i64 0, i32 2
  %1638 = load i16*, i16** %1637, align 8
  %1639 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1636, i64 0, i32 3
  %1640 = load i16*, i16** %1639, align 8
  %1641 = icmp ult i16* %1638, %1640
  br i1 %1641, label %1642, label %1645, !prof !4

1642:                                             ; preds = %1632
  %1643 = load i16, i16* %1638, align 2
  %1644 = zext i16 %1643 to i32
  br label %1659

1645:                                             ; preds = %1632
  %1646 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1636, i64 0, i32 6
  %1647 = load i8, i8* %1646, align 8, !range !2
  %1648 = icmp eq i8 %1647, 0
  br i1 %1648, label %1649, label %1659

1649:                                             ; preds = %1645
  %1650 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1636 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %1651 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1650, align 8
  %1652 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1651, i64 5
  %1653 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1652, align 8
  %1654 = tail call zeroext i1 %1653(%"class.v8::internal::Utf16CharacterStream"* %1636) #8
  %1655 = load i16*, i16** %1637, align 8
  br i1 %1654, label %1656, label %1659

1656:                                             ; preds = %1649
  %1657 = load i16, i16* %1655, align 2
  %1658 = zext i16 %1657 to i32
  br label %1659

1659:                                             ; preds = %1656, %1649, %1645, %1642
  %1660 = phi i16* [ %1638, %1642 ], [ %1655, %1656 ], [ %1638, %1645 ], [ %1655, %1649 ]
  %1661 = phi i32 [ %1644, %1642 ], [ %1658, %1656 ], [ -1, %1645 ], [ -1, %1649 ]
  %1662 = getelementptr inbounds i16, i16* %1660, i64 1
  store i16* %1662, i16** %1637, align 8
  store i32 %1661, i32* %16, align 8
  br label %2558

1663:                                             ; preds = %37
  %1664 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %1665 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1664, i64 0, i32 2
  %1666 = load i16*, i16** %1665, align 8
  %1667 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1664, i64 0, i32 3
  %1668 = load i16*, i16** %1667, align 8
  %1669 = icmp ult i16* %1666, %1668
  br i1 %1669, label %1670, label %1673, !prof !4

1670:                                             ; preds = %1663
  %1671 = load i16, i16* %1666, align 2
  %1672 = zext i16 %1671 to i32
  br label %1687

1673:                                             ; preds = %1663
  %1674 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1664, i64 0, i32 6
  %1675 = load i8, i8* %1674, align 8, !range !2
  %1676 = icmp eq i8 %1675, 0
  br i1 %1676, label %1677, label %1687

1677:                                             ; preds = %1673
  %1678 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1664 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %1679 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1678, align 8
  %1680 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1679, i64 5
  %1681 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1680, align 8
  %1682 = tail call zeroext i1 %1681(%"class.v8::internal::Utf16CharacterStream"* %1664) #8
  %1683 = load i16*, i16** %1665, align 8
  br i1 %1682, label %1684, label %1687

1684:                                             ; preds = %1677
  %1685 = load i16, i16* %1683, align 2
  %1686 = zext i16 %1685 to i32
  br label %1687

1687:                                             ; preds = %1684, %1677, %1673, %1670
  %1688 = phi i16* [ %1666, %1670 ], [ %1683, %1684 ], [ %1666, %1673 ], [ %1683, %1677 ]
  %1689 = phi i32 [ %1672, %1670 ], [ %1686, %1684 ], [ -1, %1673 ], [ -1, %1677 ]
  %1690 = getelementptr inbounds i16, i16* %1688, i64 1
  store i16* %1690, i16** %1665, align 8
  store i32 %1689, i32* %16, align 8
  %1691 = tail call zeroext i8 @_ZN2v88internal7Scanner16ScanTemplateSpanEv(%"class.v8::internal::Scanner"* %0) #8
  br label %2558

1692:                                             ; preds = %37
  %1693 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %1694 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1693, i64 0, i32 4
  %1695 = load i64, i64* %1694, align 8
  %1696 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1693, i64 0, i32 2
  %1697 = bitcast i16** %1696 to i64*
  %1698 = load i64, i64* %1697, align 8
  %1699 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1693, i64 0, i32 1
  %1700 = bitcast i16** %1699 to i64*
  %1701 = load i64, i64* %1700, align 8
  %1702 = sub i64 %1698, %1701
  %1703 = lshr exact i64 %1702, 1
  %1704 = add i64 %1703, %1695
  %1705 = trunc i64 %1704 to i32
  %1706 = icmp eq i32 %1705, 1
  %1707 = inttoptr i64 %1698 to i16*
  br i1 %1706, label %1708, label %1766

1708:                                             ; preds = %1692
  %1709 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1693, i64 0, i32 3
  %1710 = load i16*, i16** %1709, align 8
  %1711 = icmp ugt i16* %1710, %1707
  br i1 %1711, label %1724, label %1712, !prof !4

1712:                                             ; preds = %1708
  %1713 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1693, i64 0, i32 6
  %1714 = load i8, i8* %1713, align 8, !range !2
  %1715 = icmp eq i8 %1714, 0
  br i1 %1715, label %1716, label %1766

1716:                                             ; preds = %1712
  %1717 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1693 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %1718 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1717, align 8
  %1719 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1718, i64 5
  %1720 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1719, align 8
  %1721 = tail call zeroext i1 %1720(%"class.v8::internal::Utf16CharacterStream"* %1693) #8
  br i1 %1721, label %1722, label %1766

1722:                                             ; preds = %1716
  %1723 = load i16*, i16** %1696, align 8
  br label %1724

1724:                                             ; preds = %1722, %1708
  %1725 = phi i16* [ %1723, %1722 ], [ %1707, %1708 ]
  %1726 = load i16, i16* %1725, align 2
  %1727 = icmp eq i16 %1726, 33
  br i1 %1727, label %1728, label %1766

1728:                                             ; preds = %1724
  %1729 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %1730 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1729, i64 0, i32 2
  %1731 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1729, i64 0, i32 3
  %1732 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1729, i64 0, i32 6
  %1733 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1729 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  br label %1734

1734:                                             ; preds = %1750, %1728
  %1735 = load i16*, i16** %1730, align 8
  %1736 = load i16*, i16** %1731, align 8
  %1737 = icmp eq i16* %1735, %1736
  br i1 %1737, label %1744, label %1738

1738:                                             ; preds = %1734, %1741
  %1739 = phi i16* [ %1742, %1741 ], [ %1735, %1734 ]
  %1740 = load i16, i16* %1739, align 2
  switch i16 %1740, label %1741 [
    i16 8232, label %1744
    i16 13, label %1744
    i16 10, label %1744
    i16 8233, label %1744
  ]

1741:                                             ; preds = %1738
  %1742 = getelementptr inbounds i16, i16* %1739, i64 1
  %1743 = icmp eq i16* %1742, %1736
  br i1 %1743, label %1747, label %1738

1744:                                             ; preds = %1738, %1738, %1738, %1738, %1734
  %1745 = phi i16* [ %1735, %1734 ], [ %1739, %1738 ], [ %1739, %1738 ], [ %1739, %1738 ], [ %1739, %1738 ]
  %1746 = icmp eq i16* %1745, %1736
  br i1 %1746, label %1747, label %1760

1747:                                             ; preds = %1741, %1744
  store i16* %1736, i16** %1730, align 8
  %1748 = load i8, i8* %1732, align 8, !range !2
  %1749 = icmp eq i8 %1748, 0
  br i1 %1749, label %1750, label %1757

1750:                                             ; preds = %1747
  %1751 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1733, align 8
  %1752 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1751, i64 5
  %1753 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1752, align 8
  %1754 = tail call zeroext i1 %1753(%"class.v8::internal::Utf16CharacterStream"* %1729) #8
  br i1 %1754, label %1734, label %1755

1755:                                             ; preds = %1750
  %1756 = load i16*, i16** %1730, align 8
  br label %1757

1757:                                             ; preds = %1747, %1755
  %1758 = phi i16* [ %1756, %1755 ], [ %1736, %1747 ]
  %1759 = getelementptr inbounds i16, i16* %1758, i64 1
  store i16* %1759, i16** %1730, align 8
  br label %1764

1760:                                             ; preds = %1744
  %1761 = getelementptr inbounds i16, i16* %1745, i64 1
  store i16* %1761, i16** %1730, align 8
  %1762 = load i16, i16* %1745, align 2
  %1763 = zext i16 %1762 to i32
  br label %1764

1764:                                             ; preds = %1760, %1757
  %1765 = phi i32 [ %1763, %1760 ], [ -1, %1757 ]
  store i32 %1765, i32* %16, align 8
  br label %2555

1766:                                             ; preds = %1724, %1716, %1712, %1692
  %1767 = tail call zeroext i8 @_ZN2v88internal7Scanner15ScanPrivateNameEv(%"class.v8::internal::Scanner"* %0) #8
  br label %2558

1768:                                             ; preds = %37
  %1769 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %1770 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1769, i64 0, i32 4
  %1771 = load i64, i64* %1770, align 8
  %1772 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1769, i64 0, i32 2
  %1773 = bitcast i16** %1772 to i64*
  %1774 = load i64, i64* %1773, align 8
  %1775 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1769, i64 0, i32 1
  %1776 = bitcast i16** %1775 to i64*
  %1777 = load i64, i64* %1776, align 8
  %1778 = sub i64 %1774, %1777
  %1779 = lshr exact i64 %1778, 1
  %1780 = add i64 %1779, %1771
  %1781 = trunc i64 %1780 to i32
  br label %1782

1782:                                             ; preds = %1828, %1768
  %1783 = phi i32 [ %1830, %1828 ], [ %35, %1768 ]
  %1784 = icmp ult i32 %1783, 256
  br i1 %1784, label %1790, label %1785

1785:                                             ; preds = %1782
  %1786 = tail call zeroext i1 @_ZN2v88internal16IsWhiteSpaceSlowEj(i32 %1783) #8
  %1787 = and i32 %1783, -2
  %1788 = icmp eq i32 %1787, 8232
  %1789 = or i1 %1788, %1786
  br i1 %1789, label %1796, label %1832

1790:                                             ; preds = %1782
  %1791 = zext i32 %1783 to i64
  %1792 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN2v88internalL17kOneByteCharFlagsE, i64 0, i64 %1791
  %1793 = load i8, i8* %1792, align 1
  %1794 = and i8 %1793, 8
  %1795 = icmp eq i8 %1794, 0
  br i1 %1795, label %1832, label %1796

1796:                                             ; preds = %1790, %1785
  %1797 = load %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"** %4, align 8
  %1798 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %1797, i64 0, i32 8
  %1799 = load i8, i8* %1798, align 4, !range !2
  %1800 = icmp eq i8 %1799, 0
  br i1 %1800, label %1801, label %1804

1801:                                             ; preds = %1796
  %1802 = load i32, i32* %16, align 8
  switch i32 %1802, label %1804 [
    i32 8232, label %1803
    i32 13, label %1803
    i32 10, label %1803
    i32 8233, label %1803
  ]

1803:                                             ; preds = %1801, %1801, %1801, %1801
  store i8 1, i8* %1798, align 4
  br label %1804

1804:                                             ; preds = %1803, %1801, %1796
  %1805 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %1806 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1805, i64 0, i32 2
  %1807 = load i16*, i16** %1806, align 8
  %1808 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1805, i64 0, i32 3
  %1809 = load i16*, i16** %1808, align 8
  %1810 = icmp ult i16* %1807, %1809
  br i1 %1810, label %1811, label %1814, !prof !4

1811:                                             ; preds = %1804
  %1812 = load i16, i16* %1807, align 2
  %1813 = zext i16 %1812 to i32
  br label %1828

1814:                                             ; preds = %1804
  %1815 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1805, i64 0, i32 6
  %1816 = load i8, i8* %1815, align 8, !range !2
  %1817 = icmp eq i8 %1816, 0
  br i1 %1817, label %1818, label %1828

1818:                                             ; preds = %1814
  %1819 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1805 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %1820 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1819, align 8
  %1821 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1820, i64 5
  %1822 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1821, align 8
  %1823 = tail call zeroext i1 %1822(%"class.v8::internal::Utf16CharacterStream"* %1805) #8
  %1824 = load i16*, i16** %1806, align 8
  br i1 %1823, label %1825, label %1828

1825:                                             ; preds = %1818
  %1826 = load i16, i16* %1824, align 2
  %1827 = zext i16 %1826 to i32
  br label %1828

1828:                                             ; preds = %1825, %1818, %1814, %1811
  %1829 = phi i16* [ %1807, %1811 ], [ %1824, %1825 ], [ %1807, %1814 ], [ %1824, %1818 ]
  %1830 = phi i32 [ %1813, %1811 ], [ %1827, %1825 ], [ -1, %1814 ], [ -1, %1818 ]
  %1831 = getelementptr inbounds i16, i16* %1829, i64 1
  store i16* %1831, i16** %1806, align 8
  store i32 %1830, i32* %16, align 8
  br label %1782

1832:                                             ; preds = %1790, %1785
  %1833 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %1834 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1833, i64 0, i32 4
  %1835 = load i64, i64* %1834, align 8
  %1836 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1833, i64 0, i32 2
  %1837 = bitcast i16** %1836 to i64*
  %1838 = load i64, i64* %1837, align 8
  %1839 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1833, i64 0, i32 1
  %1840 = bitcast i16** %1839 to i64*
  %1841 = load i64, i64* %1840, align 8
  %1842 = sub i64 %1838, %1841
  %1843 = lshr exact i64 %1842, 1
  %1844 = add i64 %1843, %1835
  %1845 = trunc i64 %1844 to i32
  %1846 = icmp eq i32 %1845, %1781
  br i1 %1846, label %2558, label %2555

1847:                                             ; preds = %37
  %1848 = tail call zeroext i8 @_ZN2v88internal7Scanner10ScanNumberEb(%"class.v8::internal::Scanner"* %0, i1 zeroext false) #8
  br label %2558

1849:                                             ; preds = %37
  %1850 = load %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"** %4, align 8
  %1851 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %1850, i64 0, i32 1, i32 1
  store i32 0, i32* %1851, align 8
  %1852 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %1850, i64 0, i32 1, i32 2
  store i8 1, i8* %1852, align 4
  %1853 = load i32, i32* %16, align 8
  %1854 = icmp ult i32 %1853, 128
  br i1 %1854, label %1855, label %2109, !prof !4

1855:                                             ; preds = %1849
  %1856 = icmp eq i32 %1853, 92
  br i1 %1856, label %2004, label %1857, !prof !3

1857:                                             ; preds = %1855
  %1858 = zext i32 %1853 to i64
  %1859 = getelementptr inbounds [128 x i8], [128 x i8]* @_ZN2v88internalL20character_scan_flagsE, i64 0, i64 %1858
  %1860 = load i8, i8* %1859, align 1
  %1861 = lshr i8 %1860, 1
  %1862 = trunc i32 %1853 to i8
  %1863 = load %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"** %4, align 8
  %1864 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %1863, i64 0, i32 1
  %1865 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %1863, i64 0, i32 1, i32 1
  %1866 = load i32, i32* %1865, align 8
  %1867 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %1863, i64 0, i32 1, i32 0, i32 1
  %1868 = load i64, i64* %1867, align 8
  %1869 = trunc i64 %1868 to i32
  %1870 = icmp slt i32 %1866, %1869
  br i1 %1870, label %1873, label %1871

1871:                                             ; preds = %1857
  tail call void @_ZN2v88internal13LiteralBuffer12ExpandBufferEv(%"class.v8::internal::LiteralBuffer"* %1864) #8
  %1872 = load i32, i32* %1865, align 8
  br label %1873

1873:                                             ; preds = %1871, %1857
  %1874 = phi i32 [ %1866, %1857 ], [ %1872, %1871 ]
  %1875 = sext i32 %1874 to i64
  %1876 = getelementptr inbounds %"class.v8::internal::LiteralBuffer", %"class.v8::internal::LiteralBuffer"* %1864, i64 0, i32 0, i32 0
  %1877 = load i8*, i8** %1876, align 8
  %1878 = getelementptr inbounds i8, i8* %1877, i64 %1875
  store i8 %1862, i8* %1878, align 1
  %1879 = load i32, i32* %1865, align 8
  %1880 = add nsw i32 %1879, 1
  store i32 %1880, i32* %1865, align 8
  %1881 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %1882 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1881, i64 0, i32 2
  %1883 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1881, i64 0, i32 3
  %1884 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1881, i64 0, i32 6
  %1885 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1881 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  br label %1886

1886:                                             ; preds = %1935, %1873
  %1887 = phi i8 [ %1861, %1873 ], [ %1928, %1935 ]
  %1888 = load i16*, i16** %1882, align 8
  %1889 = load i16*, i16** %1883, align 8
  %1890 = icmp eq i16* %1888, %1889
  br i1 %1890, label %1927, label %1891

1891:                                             ; preds = %1886, %1917
  %1892 = phi i8 [ %1902, %1917 ], [ %1887, %1886 ]
  %1893 = phi i16* [ %1925, %1917 ], [ %1888, %1886 ]
  %1894 = load i16, i16* %1893, align 2
  %1895 = icmp ugt i16 %1894, 127
  br i1 %1895, label %1896, label %1898, !prof !3

1896:                                             ; preds = %1891
  %1897 = or i8 %1892, 16
  br label %1927

1898:                                             ; preds = %1891
  %1899 = zext i16 %1894 to i64
  %1900 = getelementptr inbounds [128 x i8], [128 x i8]* @_ZN2v88internalL20character_scan_flagsE, i64 0, i64 %1899
  %1901 = load i8, i8* %1900, align 1
  %1902 = or i8 %1901, %1892
  %1903 = and i8 %1901, 1
  %1904 = icmp eq i8 %1903, 0
  br i1 %1904, label %1905, label %1927

1905:                                             ; preds = %1898
  %1906 = trunc i16 %1894 to i8
  %1907 = load %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"** %4, align 8
  %1908 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %1907, i64 0, i32 1
  %1909 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %1907, i64 0, i32 1, i32 1
  %1910 = load i32, i32* %1909, align 8
  %1911 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %1907, i64 0, i32 1, i32 0, i32 1
  %1912 = load i64, i64* %1911, align 8
  %1913 = trunc i64 %1912 to i32
  %1914 = icmp slt i32 %1910, %1913
  br i1 %1914, label %1917, label %1915

1915:                                             ; preds = %1905
  tail call void @_ZN2v88internal13LiteralBuffer12ExpandBufferEv(%"class.v8::internal::LiteralBuffer"* %1908) #8
  %1916 = load i32, i32* %1909, align 8
  br label %1917

1917:                                             ; preds = %1915, %1905
  %1918 = phi i32 [ %1910, %1905 ], [ %1916, %1915 ]
  %1919 = sext i32 %1918 to i64
  %1920 = getelementptr inbounds %"class.v8::internal::LiteralBuffer", %"class.v8::internal::LiteralBuffer"* %1908, i64 0, i32 0, i32 0
  %1921 = load i8*, i8** %1920, align 8
  %1922 = getelementptr inbounds i8, i8* %1921, i64 %1919
  store i8 %1906, i8* %1922, align 1
  %1923 = load i32, i32* %1909, align 8
  %1924 = add nsw i32 %1923, 1
  store i32 %1924, i32* %1909, align 8
  %1925 = getelementptr inbounds i16, i16* %1893, i64 1
  %1926 = icmp eq i16* %1925, %1889
  br i1 %1926, label %1927, label %1891

1927:                                             ; preds = %1917, %1898, %1896, %1886
  %1928 = phi i8 [ %1887, %1886 ], [ %1897, %1896 ], [ %1902, %1898 ], [ %1902, %1917 ]
  %1929 = phi i16* [ %1888, %1886 ], [ %1893, %1896 ], [ %1889, %1917 ], [ %1893, %1898 ]
  %1930 = load i16*, i16** %1883, align 8
  %1931 = icmp eq i16* %1929, %1930
  br i1 %1931, label %1932, label %1945

1932:                                             ; preds = %1927
  store i16* %1929, i16** %1882, align 8
  %1933 = load i8, i8* %1884, align 8, !range !2
  %1934 = icmp eq i8 %1933, 0
  br i1 %1934, label %1935, label %1942

1935:                                             ; preds = %1932
  %1936 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1885, align 8
  %1937 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1936, i64 5
  %1938 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1937, align 8
  %1939 = tail call zeroext i1 %1938(%"class.v8::internal::Utf16CharacterStream"* %1881) #8
  br i1 %1939, label %1886, label %1940

1940:                                             ; preds = %1935
  %1941 = load i16*, i16** %1882, align 8
  br label %1942

1942:                                             ; preds = %1932, %1940
  %1943 = phi i16* [ %1941, %1940 ], [ %1929, %1932 ]
  %1944 = getelementptr inbounds i16, i16* %1943, i64 1
  store i16* %1944, i16** %1882, align 8
  br label %1949

1945:                                             ; preds = %1927
  %1946 = getelementptr inbounds i16, i16* %1929, i64 1
  store i16* %1946, i16** %1882, align 8
  %1947 = load i16, i16* %1929, align 2
  %1948 = zext i16 %1947 to i32
  br label %1949

1949:                                             ; preds = %1945, %1942
  %1950 = phi i32 [ %1948, %1945 ], [ -1, %1942 ]
  store i32 %1950, i32* %16, align 8
  %1951 = and i8 %1928, 16
  %1952 = icmp ne i8 %1951, 0
  %1953 = and i8 %1928, 2
  %1954 = icmp eq i8 %1953, 0
  %1955 = xor i1 %1954, true
  %1956 = or i1 %1952, %1955
  br i1 %1956, label %2001, label %1957, !prof !5

1957:                                             ; preds = %1949
  %1958 = load %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"** %4, align 8
  %1959 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %1958, i64 0, i32 1, i32 0, i32 0
  %1960 = load i8*, i8** %1959, align 8
  %1961 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %1958, i64 0, i32 1, i32 1
  %1962 = load i32, i32* %1961, align 8
  %1963 = add i32 %1962, -2
  %1964 = icmp ult i32 %1963, 9
  br i1 %1964, label %1965, label %2558

1965:                                             ; preds = %1957
  %1966 = getelementptr inbounds i8, i8* %1960, i64 1
  %1967 = load i8, i8* %1966, align 1
  %1968 = zext i8 %1967 to i64
  %1969 = getelementptr inbounds [128 x i8], [128 x i8]* @_ZZN2v88internal18PerfectKeywordHash4HashEPKciE11asso_values, i64 0, i64 %1968
  %1970 = load i8, i8* %1969, align 1
  %1971 = zext i8 %1970 to i32
  %1972 = add nuw nsw i32 %1962, %1971
  %1973 = load i8, i8* %1960, align 1
  %1974 = zext i8 %1973 to i64
  %1975 = getelementptr inbounds [128 x i8], [128 x i8]* @_ZZN2v88internal18PerfectKeywordHash4HashEPKciE11asso_values, i64 0, i64 %1974
  %1976 = load i8, i8* %1975, align 1
  %1977 = zext i8 %1976 to i32
  %1978 = add nuw nsw i32 %1972, %1977
  %1979 = and i32 %1978, 63
  %1980 = zext i32 %1979 to i64
  %1981 = getelementptr inbounds [64 x i8], [64 x i8]* bitcast (<{ [56 x i8], [8 x i8] }>* @_ZN2v88internalL26kPerfectKeywordLengthTableE to [64 x i8]*), i64 0, i64 %1980
  %1982 = load i8, i8* %1981, align 1
  %1983 = zext i8 %1982 to i32
  %1984 = icmp eq i32 %1962, %1983
  br i1 %1984, label %1985, label %2558

1985:                                             ; preds = %1965
  %1986 = getelementptr inbounds [64 x %"struct.v8::internal::PerfectKeywordHashTableEntry"], [64 x %"struct.v8::internal::PerfectKeywordHashTableEntry"]* @_ZN2v88internalL24kPerfectKeywordHashTableE, i64 0, i64 %1980, i32 0
  %1987 = load i8*, i8** %1986, align 16
  br label %1988

1988:                                             ; preds = %1993, %1985
  %1989 = phi i8* [ %1960, %1985 ], [ %1995, %1993 ]
  %1990 = phi i8* [ %1987, %1985 ], [ %1994, %1993 ]
  %1991 = load i8, i8* %1990, align 1
  %1992 = icmp eq i8 %1991, 0
  br i1 %1992, label %1998, label %1993

1993:                                             ; preds = %1988
  %1994 = getelementptr inbounds i8, i8* %1990, i64 1
  %1995 = getelementptr inbounds i8, i8* %1989, i64 1
  %1996 = load i8, i8* %1989, align 1
  %1997 = icmp eq i8 %1991, %1996
  br i1 %1997, label %1988, label %2558

1998:                                             ; preds = %1988
  %1999 = getelementptr inbounds [64 x %"struct.v8::internal::PerfectKeywordHashTableEntry"], [64 x %"struct.v8::internal::PerfectKeywordHashTableEntry"]* @_ZN2v88internalL24kPerfectKeywordHashTableE, i64 0, i64 %1980, i32 1
  %2000 = load i8, i8* %1999, align 8
  br label %2558

2001:                                             ; preds = %1949
  %2002 = xor i1 %1952, true
  %2003 = or i1 %1954, %2002
  br i1 %1952, label %2109, label %2558

2004:                                             ; preds = %1855
  %2005 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %2006 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2005, i64 0, i32 2
  %2007 = load i16*, i16** %2006, align 8
  %2008 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2005, i64 0, i32 3
  %2009 = load i16*, i16** %2008, align 8
  %2010 = icmp ult i16* %2007, %2009
  br i1 %2010, label %2025, label %2011, !prof !4

2011:                                             ; preds = %2004
  %2012 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2005, i64 0, i32 6
  %2013 = load i8, i8* %2012, align 8, !range !2
  %2014 = icmp eq i8 %2013, 0
  br i1 %2014, label %2015, label %2022

2015:                                             ; preds = %2011
  %2016 = bitcast %"class.v8::internal::Utf16CharacterStream"* %2005 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %2017 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %2016, align 8
  %2018 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %2017, i64 5
  %2019 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %2018, align 8
  %2020 = tail call zeroext i1 %2019(%"class.v8::internal::Utf16CharacterStream"* %2005) #8
  %2021 = load i16*, i16** %2006, align 8
  br i1 %2020, label %2025, label %2022

2022:                                             ; preds = %2015, %2011
  %2023 = phi i16* [ %2021, %2015 ], [ %2007, %2011 ]
  %2024 = getelementptr inbounds i16, i16* %2023, i64 1
  store i16* %2024, i16** %2006, align 8
  store i32 -1, i32* %16, align 8
  br label %2069

2025:                                             ; preds = %2015, %2004
  %2026 = phi i16* [ %2007, %2004 ], [ %2021, %2015 ]
  %2027 = load i16, i16* %2026, align 2
  %2028 = zext i16 %2027 to i32
  %2029 = getelementptr inbounds i16, i16* %2026, i64 1
  store i16* %2029, i16** %2006, align 8
  store i32 %2028, i32* %16, align 8
  %2030 = icmp eq i16 %2027, 117
  br i1 %2030, label %2031, label %2069

2031:                                             ; preds = %2025
  %2032 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %2033 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2032, i64 0, i32 2
  %2034 = load i16*, i16** %2033, align 8
  %2035 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2032, i64 0, i32 3
  %2036 = load i16*, i16** %2035, align 8
  %2037 = icmp ult i16* %2034, %2036
  br i1 %2037, label %2038, label %2041, !prof !4

2038:                                             ; preds = %2031
  %2039 = load i16, i16* %2034, align 2
  %2040 = zext i16 %2039 to i32
  br label %2055

2041:                                             ; preds = %2031
  %2042 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2032, i64 0, i32 6
  %2043 = load i8, i8* %2042, align 8, !range !2
  %2044 = icmp eq i8 %2043, 0
  br i1 %2044, label %2045, label %2055

2045:                                             ; preds = %2041
  %2046 = bitcast %"class.v8::internal::Utf16CharacterStream"* %2032 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %2047 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %2046, align 8
  %2048 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %2047, i64 5
  %2049 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %2048, align 8
  %2050 = tail call zeroext i1 %2049(%"class.v8::internal::Utf16CharacterStream"* %2032) #8
  %2051 = load i16*, i16** %2033, align 8
  br i1 %2050, label %2052, label %2055

2052:                                             ; preds = %2045
  %2053 = load i16, i16* %2051, align 2
  %2054 = zext i16 %2053 to i32
  br label %2055

2055:                                             ; preds = %2052, %2045, %2041, %2038
  %2056 = phi i16* [ %2034, %2038 ], [ %2051, %2052 ], [ %2034, %2041 ], [ %2051, %2045 ]
  %2057 = phi i32 [ %2040, %2038 ], [ %2054, %2052 ], [ -1, %2041 ], [ -1, %2045 ]
  %2058 = getelementptr inbounds i16, i16* %2056, i64 1
  store i16* %2058, i16** %2033, align 8
  store i32 %2057, i32* %16, align 8
  %2059 = tail call i32 @_ZN2v88internal7Scanner17ScanUnicodeEscapeILb0EEEjv(%"class.v8::internal::Scanner"* %0) #8
  %2060 = icmp eq i32 %2059, 92
  br i1 %2060, label %2558, label %2061

2061:                                             ; preds = %2055
  %2062 = icmp ult i32 %2059, 256
  br i1 %2062, label %2063, label %2069

2063:                                             ; preds = %2061
  %2064 = zext i32 %2059 to i64
  %2065 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN2v88internalL17kOneByteCharFlagsE, i64 0, i64 %2064
  %2066 = load i8, i8* %2065, align 1
  %2067 = and i8 %2066, 1
  %2068 = icmp eq i8 %2067, 0
  br i1 %2068, label %2558, label %2072

2069:                                             ; preds = %2061, %2025, %2022
  %2070 = phi i32 [ %2059, %2061 ], [ -1, %2025 ], [ -1, %2022 ]
  %2071 = tail call zeroext i1 @_ZN2v88internal21IsIdentifierStartSlowEj(i32 %2070) #8
  br i1 %2071, label %2072, label %2558

2072:                                             ; preds = %2069, %2063
  %2073 = phi i32 [ %2059, %2063 ], [ %2070, %2069 ]
  %2074 = phi i1 [ true, %2063 ], [ false, %2069 ]
  %2075 = load %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"** %4, align 8
  %2076 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %2075, i64 0, i32 1
  %2077 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %2075, i64 0, i32 1, i32 2
  %2078 = load i8, i8* %2077, align 4, !range !2
  %2079 = icmp eq i8 %2078, 0
  br i1 %2079, label %2100, label %2080

2080:                                             ; preds = %2072
  br i1 %2074, label %2081, label %2099

2081:                                             ; preds = %2080
  %2082 = trunc i32 %2073 to i8
  %2083 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %2075, i64 0, i32 1, i32 1
  %2084 = load i32, i32* %2083, align 8
  %2085 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %2075, i64 0, i32 1, i32 0, i32 1
  %2086 = load i64, i64* %2085, align 8
  %2087 = trunc i64 %2086 to i32
  %2088 = icmp slt i32 %2084, %2087
  br i1 %2088, label %2091, label %2089

2089:                                             ; preds = %2081
  tail call void @_ZN2v88internal13LiteralBuffer12ExpandBufferEv(%"class.v8::internal::LiteralBuffer"* %2076) #8
  %2090 = load i32, i32* %2083, align 8
  br label %2091

2091:                                             ; preds = %2089, %2081
  %2092 = phi i32 [ %2084, %2081 ], [ %2090, %2089 ]
  %2093 = sext i32 %2092 to i64
  %2094 = getelementptr inbounds %"class.v8::internal::LiteralBuffer", %"class.v8::internal::LiteralBuffer"* %2076, i64 0, i32 0, i32 0
  %2095 = load i8*, i8** %2094, align 8
  %2096 = getelementptr inbounds i8, i8* %2095, i64 %2093
  store i8 %2082, i8* %2096, align 1
  %2097 = load i32, i32* %2083, align 8
  %2098 = add nsw i32 %2097, 1
  store i32 %2098, i32* %2083, align 8
  br label %2101

2099:                                             ; preds = %2080
  tail call void @_ZN2v88internal13LiteralBuffer16ConvertToTwoByteEv(%"class.v8::internal::LiteralBuffer"* %2076) #8
  br label %2100

2100:                                             ; preds = %2099, %2072
  tail call void @_ZN2v88internal13LiteralBuffer14AddTwoByteCharEj(%"class.v8::internal::LiteralBuffer"* %2076, i32 %2073) #8
  br label %2101

2101:                                             ; preds = %2100, %2091
  %2102 = icmp ult i32 %2073, 128
  br i1 %2102, label %2103, label %2109

2103:                                             ; preds = %2101
  %2104 = zext i32 %2073 to i64
  %2105 = getelementptr inbounds [128 x i8], [128 x i8]* @_ZN2v88internalL20character_scan_flagsE, i64 0, i64 %2104
  %2106 = load i8, i8* %2105, align 1
  %2107 = and i8 %2106, 2
  %2108 = icmp eq i8 %2107, 0
  br label %2109

2109:                                             ; preds = %2103, %2101, %2001, %1849
  %2110 = phi i1 [ %2003, %2001 ], [ true, %1849 ], [ false, %2101 ], [ %2108, %2103 ]
  %2111 = phi i1 [ false, %2001 ], [ false, %1849 ], [ true, %2101 ], [ true, %2103 ]
  %2112 = tail call zeroext i8 @_ZN2v88internal7Scanner32ScanIdentifierOrKeywordInnerSlowEbb(%"class.v8::internal::Scanner"* %0, i1 zeroext %2111, i1 zeroext %2110) #8
  br label %2558

2113:                                             ; preds = %37
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0)) #9
  unreachable

2114:                                             ; preds = %18
  %2115 = icmp ult i32 %35, 256
  br i1 %2115, label %2116, label %2122

2116:                                             ; preds = %2114
  %2117 = zext i32 %35 to i64
  %2118 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN2v88internalL17kOneByteCharFlagsE, i64 0, i64 %2117
  %2119 = load i8, i8* %2118, align 1
  %2120 = and i8 %2119, 1
  %2121 = icmp eq i8 %2120, 0
  br i1 %2121, label %2126, label %2202

2122:                                             ; preds = %2114
  %2123 = tail call zeroext i1 @_ZN2v88internal21IsIdentifierStartSlowEj(i32 %35) #8
  br i1 %2123, label %2202, label %2124

2124:                                             ; preds = %2122
  %2125 = load i32, i32* %16, align 8
  br label %2126

2126:                                             ; preds = %2124, %2116
  %2127 = phi i32 [ %2125, %2124 ], [ %35, %2116 ]
  %2128 = and i32 %2127, 64512
  %2129 = icmp eq i32 %2128, 55296
  br i1 %2129, label %2130, label %2468

2130:                                             ; preds = %2126
  %2131 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %2132 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2131, i64 0, i32 2
  %2133 = load i16*, i16** %2132, align 8
  %2134 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2131, i64 0, i32 3
  %2135 = load i16*, i16** %2134, align 8
  %2136 = icmp ult i16* %2133, %2135
  br i1 %2136, label %2151, label %2137, !prof !4

2137:                                             ; preds = %2130
  %2138 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2131, i64 0, i32 6
  %2139 = load i8, i8* %2138, align 8, !range !2
  %2140 = icmp eq i8 %2139, 0
  br i1 %2140, label %2141, label %2148

2141:                                             ; preds = %2137
  %2142 = bitcast %"class.v8::internal::Utf16CharacterStream"* %2131 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %2143 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %2142, align 8
  %2144 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %2143, i64 5
  %2145 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %2144, align 8
  %2146 = tail call zeroext i1 %2145(%"class.v8::internal::Utf16CharacterStream"* %2131) #8
  %2147 = load i16*, i16** %2132, align 8
  br i1 %2146, label %2151, label %2148

2148:                                             ; preds = %2141, %2137
  %2149 = phi i16* [ %2147, %2141 ], [ %2133, %2137 ]
  %2150 = getelementptr inbounds i16, i16* %2149, i64 1
  store i16* %2150, i16** %2132, align 8
  br label %2158

2151:                                             ; preds = %2141, %2130
  %2152 = phi i16* [ %2133, %2130 ], [ %2147, %2141 ]
  %2153 = load i16, i16* %2152, align 2
  %2154 = zext i16 %2153 to i32
  %2155 = getelementptr inbounds i16, i16* %2152, i64 1
  store i16* %2155, i16** %2132, align 8
  %2156 = and i32 %2154, 64512
  %2157 = icmp eq i32 %2156, 56320
  br i1 %2157, label %2186, label %2158

2158:                                             ; preds = %2151, %2148
  %2159 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %2160 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2159, i64 0, i32 2
  %2161 = load i16*, i16** %2160, align 8
  %2162 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2159, i64 0, i32 1
  %2163 = load i16*, i16** %2162, align 8
  %2164 = icmp ugt i16* %2161, %2163
  %2165 = ptrtoint i16* %2163 to i64
  br i1 %2164, label %2166, label %2168, !prof !4

2166:                                             ; preds = %2158
  %2167 = getelementptr inbounds i16, i16* %2161, i64 -1
  store i16* %2167, i16** %2160, align 8
  br label %2466

2168:                                             ; preds = %2158
  %2169 = ptrtoint i16* %2161 to i64
  %2170 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2159, i64 0, i32 4
  %2171 = load i64, i64* %2170, align 8
  %2172 = bitcast i16** %2160 to i64*
  %2173 = sub i64 %2169, %2165
  %2174 = ashr exact i64 %2173, 1
  %2175 = add nsw i64 %2174, -1
  %2176 = add i64 %2175, %2171
  store i64 %2176, i64* %2170, align 8
  store i64 %2165, i64* %2172, align 8
  %2177 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2159, i64 0, i32 6
  %2178 = load i8, i8* %2177, align 8, !range !2
  %2179 = icmp eq i8 %2178, 0
  br i1 %2179, label %2180, label %2466

2180:                                             ; preds = %2168
  %2181 = bitcast %"class.v8::internal::Utf16CharacterStream"* %2159 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %2182 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %2181, align 8
  %2183 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %2182, i64 5
  %2184 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %2183, align 8
  %2185 = tail call zeroext i1 %2184(%"class.v8::internal::Utf16CharacterStream"* %2159) #8
  br label %2466

2186:                                             ; preds = %2151
  %2187 = load i32, i32* %16, align 8
  %2188 = shl i32 %2187, 10
  %2189 = and i32 %2188, 1047552
  %2190 = add nuw nsw i32 %2189, 65536
  %2191 = and i32 %2154, 1023
  %2192 = or i32 %2190, %2191
  store i32 %2192, i32* %16, align 8
  %2193 = icmp ult i32 %2192, 256
  br i1 %2193, label %2194, label %2200

2194:                                             ; preds = %2186
  %2195 = zext i32 %2192 to i64
  %2196 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN2v88internalL17kOneByteCharFlagsE, i64 0, i64 %2195
  %2197 = load i8, i8* %2196, align 1
  %2198 = and i8 %2197, 1
  %2199 = icmp eq i8 %2198, 0
  br i1 %2199, label %2466, label %2202

2200:                                             ; preds = %2186
  %2201 = tail call zeroext i1 @_ZN2v88internal21IsIdentifierStartSlowEj(i32 %2192) #8
  br i1 %2201, label %2202, label %2466

2202:                                             ; preds = %2200, %2194, %2122, %2116
  %2203 = load %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"** %4, align 8
  %2204 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %2203, i64 0, i32 1, i32 1
  store i32 0, i32* %2204, align 8
  %2205 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %2203, i64 0, i32 1, i32 2
  store i8 1, i8* %2205, align 4
  %2206 = load i32, i32* %16, align 8
  %2207 = icmp ult i32 %2206, 128
  br i1 %2207, label %2208, label %2462, !prof !4

2208:                                             ; preds = %2202
  %2209 = icmp eq i32 %2206, 92
  br i1 %2209, label %2357, label %2210, !prof !3

2210:                                             ; preds = %2208
  %2211 = zext i32 %2206 to i64
  %2212 = getelementptr inbounds [128 x i8], [128 x i8]* @_ZN2v88internalL20character_scan_flagsE, i64 0, i64 %2211
  %2213 = load i8, i8* %2212, align 1
  %2214 = lshr i8 %2213, 1
  %2215 = trunc i32 %2206 to i8
  %2216 = load %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"** %4, align 8
  %2217 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %2216, i64 0, i32 1
  %2218 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %2216, i64 0, i32 1, i32 1
  %2219 = load i32, i32* %2218, align 8
  %2220 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %2216, i64 0, i32 1, i32 0, i32 1
  %2221 = load i64, i64* %2220, align 8
  %2222 = trunc i64 %2221 to i32
  %2223 = icmp slt i32 %2219, %2222
  br i1 %2223, label %2226, label %2224

2224:                                             ; preds = %2210
  tail call void @_ZN2v88internal13LiteralBuffer12ExpandBufferEv(%"class.v8::internal::LiteralBuffer"* %2217) #8
  %2225 = load i32, i32* %2218, align 8
  br label %2226

2226:                                             ; preds = %2224, %2210
  %2227 = phi i32 [ %2219, %2210 ], [ %2225, %2224 ]
  %2228 = sext i32 %2227 to i64
  %2229 = getelementptr inbounds %"class.v8::internal::LiteralBuffer", %"class.v8::internal::LiteralBuffer"* %2217, i64 0, i32 0, i32 0
  %2230 = load i8*, i8** %2229, align 8
  %2231 = getelementptr inbounds i8, i8* %2230, i64 %2228
  store i8 %2215, i8* %2231, align 1
  %2232 = load i32, i32* %2218, align 8
  %2233 = add nsw i32 %2232, 1
  store i32 %2233, i32* %2218, align 8
  %2234 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %2235 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2234, i64 0, i32 2
  %2236 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2234, i64 0, i32 3
  %2237 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2234, i64 0, i32 6
  %2238 = bitcast %"class.v8::internal::Utf16CharacterStream"* %2234 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  br label %2239

2239:                                             ; preds = %2288, %2226
  %2240 = phi i8 [ %2214, %2226 ], [ %2281, %2288 ]
  %2241 = load i16*, i16** %2235, align 8
  %2242 = load i16*, i16** %2236, align 8
  %2243 = icmp eq i16* %2241, %2242
  br i1 %2243, label %2280, label %2244

2244:                                             ; preds = %2239, %2270
  %2245 = phi i8 [ %2255, %2270 ], [ %2240, %2239 ]
  %2246 = phi i16* [ %2278, %2270 ], [ %2241, %2239 ]
  %2247 = load i16, i16* %2246, align 2
  %2248 = icmp ugt i16 %2247, 127
  br i1 %2248, label %2249, label %2251, !prof !3

2249:                                             ; preds = %2244
  %2250 = or i8 %2245, 16
  br label %2280

2251:                                             ; preds = %2244
  %2252 = zext i16 %2247 to i64
  %2253 = getelementptr inbounds [128 x i8], [128 x i8]* @_ZN2v88internalL20character_scan_flagsE, i64 0, i64 %2252
  %2254 = load i8, i8* %2253, align 1
  %2255 = or i8 %2254, %2245
  %2256 = and i8 %2254, 1
  %2257 = icmp eq i8 %2256, 0
  br i1 %2257, label %2258, label %2280

2258:                                             ; preds = %2251
  %2259 = trunc i16 %2247 to i8
  %2260 = load %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"** %4, align 8
  %2261 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %2260, i64 0, i32 1
  %2262 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %2260, i64 0, i32 1, i32 1
  %2263 = load i32, i32* %2262, align 8
  %2264 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %2260, i64 0, i32 1, i32 0, i32 1
  %2265 = load i64, i64* %2264, align 8
  %2266 = trunc i64 %2265 to i32
  %2267 = icmp slt i32 %2263, %2266
  br i1 %2267, label %2270, label %2268

2268:                                             ; preds = %2258
  tail call void @_ZN2v88internal13LiteralBuffer12ExpandBufferEv(%"class.v8::internal::LiteralBuffer"* %2261) #8
  %2269 = load i32, i32* %2262, align 8
  br label %2270

2270:                                             ; preds = %2268, %2258
  %2271 = phi i32 [ %2263, %2258 ], [ %2269, %2268 ]
  %2272 = sext i32 %2271 to i64
  %2273 = getelementptr inbounds %"class.v8::internal::LiteralBuffer", %"class.v8::internal::LiteralBuffer"* %2261, i64 0, i32 0, i32 0
  %2274 = load i8*, i8** %2273, align 8
  %2275 = getelementptr inbounds i8, i8* %2274, i64 %2272
  store i8 %2259, i8* %2275, align 1
  %2276 = load i32, i32* %2262, align 8
  %2277 = add nsw i32 %2276, 1
  store i32 %2277, i32* %2262, align 8
  %2278 = getelementptr inbounds i16, i16* %2246, i64 1
  %2279 = icmp eq i16* %2278, %2242
  br i1 %2279, label %2280, label %2244

2280:                                             ; preds = %2270, %2251, %2249, %2239
  %2281 = phi i8 [ %2240, %2239 ], [ %2250, %2249 ], [ %2255, %2251 ], [ %2255, %2270 ]
  %2282 = phi i16* [ %2241, %2239 ], [ %2246, %2249 ], [ %2242, %2270 ], [ %2246, %2251 ]
  %2283 = load i16*, i16** %2236, align 8
  %2284 = icmp eq i16* %2282, %2283
  br i1 %2284, label %2285, label %2298

2285:                                             ; preds = %2280
  store i16* %2282, i16** %2235, align 8
  %2286 = load i8, i8* %2237, align 8, !range !2
  %2287 = icmp eq i8 %2286, 0
  br i1 %2287, label %2288, label %2295

2288:                                             ; preds = %2285
  %2289 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %2238, align 8
  %2290 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %2289, i64 5
  %2291 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %2290, align 8
  %2292 = tail call zeroext i1 %2291(%"class.v8::internal::Utf16CharacterStream"* %2234) #8
  br i1 %2292, label %2239, label %2293

2293:                                             ; preds = %2288
  %2294 = load i16*, i16** %2235, align 8
  br label %2295

2295:                                             ; preds = %2285, %2293
  %2296 = phi i16* [ %2294, %2293 ], [ %2282, %2285 ]
  %2297 = getelementptr inbounds i16, i16* %2296, i64 1
  store i16* %2297, i16** %2235, align 8
  br label %2302

2298:                                             ; preds = %2280
  %2299 = getelementptr inbounds i16, i16* %2282, i64 1
  store i16* %2299, i16** %2235, align 8
  %2300 = load i16, i16* %2282, align 2
  %2301 = zext i16 %2300 to i32
  br label %2302

2302:                                             ; preds = %2298, %2295
  %2303 = phi i32 [ %2301, %2298 ], [ -1, %2295 ]
  store i32 %2303, i32* %16, align 8
  %2304 = and i8 %2281, 16
  %2305 = icmp ne i8 %2304, 0
  %2306 = and i8 %2281, 2
  %2307 = icmp eq i8 %2306, 0
  %2308 = xor i1 %2307, true
  %2309 = or i1 %2305, %2308
  br i1 %2309, label %2354, label %2310, !prof !5

2310:                                             ; preds = %2302
  %2311 = load %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"** %4, align 8
  %2312 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %2311, i64 0, i32 1, i32 0, i32 0
  %2313 = load i8*, i8** %2312, align 8
  %2314 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %2311, i64 0, i32 1, i32 1
  %2315 = load i32, i32* %2314, align 8
  %2316 = add i32 %2315, -2
  %2317 = icmp ult i32 %2316, 9
  br i1 %2317, label %2318, label %2558

2318:                                             ; preds = %2310
  %2319 = getelementptr inbounds i8, i8* %2313, i64 1
  %2320 = load i8, i8* %2319, align 1
  %2321 = zext i8 %2320 to i64
  %2322 = getelementptr inbounds [128 x i8], [128 x i8]* @_ZZN2v88internal18PerfectKeywordHash4HashEPKciE11asso_values, i64 0, i64 %2321
  %2323 = load i8, i8* %2322, align 1
  %2324 = zext i8 %2323 to i32
  %2325 = add nuw nsw i32 %2315, %2324
  %2326 = load i8, i8* %2313, align 1
  %2327 = zext i8 %2326 to i64
  %2328 = getelementptr inbounds [128 x i8], [128 x i8]* @_ZZN2v88internal18PerfectKeywordHash4HashEPKciE11asso_values, i64 0, i64 %2327
  %2329 = load i8, i8* %2328, align 1
  %2330 = zext i8 %2329 to i32
  %2331 = add nuw nsw i32 %2325, %2330
  %2332 = and i32 %2331, 63
  %2333 = zext i32 %2332 to i64
  %2334 = getelementptr inbounds [64 x i8], [64 x i8]* bitcast (<{ [56 x i8], [8 x i8] }>* @_ZN2v88internalL26kPerfectKeywordLengthTableE to [64 x i8]*), i64 0, i64 %2333
  %2335 = load i8, i8* %2334, align 1
  %2336 = zext i8 %2335 to i32
  %2337 = icmp eq i32 %2315, %2336
  br i1 %2337, label %2338, label %2558

2338:                                             ; preds = %2318
  %2339 = getelementptr inbounds [64 x %"struct.v8::internal::PerfectKeywordHashTableEntry"], [64 x %"struct.v8::internal::PerfectKeywordHashTableEntry"]* @_ZN2v88internalL24kPerfectKeywordHashTableE, i64 0, i64 %2333, i32 0
  %2340 = load i8*, i8** %2339, align 16
  br label %2341

2341:                                             ; preds = %2346, %2338
  %2342 = phi i8* [ %2313, %2338 ], [ %2348, %2346 ]
  %2343 = phi i8* [ %2340, %2338 ], [ %2347, %2346 ]
  %2344 = load i8, i8* %2343, align 1
  %2345 = icmp eq i8 %2344, 0
  br i1 %2345, label %2351, label %2346

2346:                                             ; preds = %2341
  %2347 = getelementptr inbounds i8, i8* %2343, i64 1
  %2348 = getelementptr inbounds i8, i8* %2342, i64 1
  %2349 = load i8, i8* %2342, align 1
  %2350 = icmp eq i8 %2344, %2349
  br i1 %2350, label %2341, label %2558

2351:                                             ; preds = %2341
  %2352 = getelementptr inbounds [64 x %"struct.v8::internal::PerfectKeywordHashTableEntry"], [64 x %"struct.v8::internal::PerfectKeywordHashTableEntry"]* @_ZN2v88internalL24kPerfectKeywordHashTableE, i64 0, i64 %2333, i32 1
  %2353 = load i8, i8* %2352, align 8
  br label %2558

2354:                                             ; preds = %2302
  %2355 = xor i1 %2305, true
  %2356 = or i1 %2307, %2355
  br i1 %2305, label %2462, label %2558

2357:                                             ; preds = %2208
  %2358 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %2359 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2358, i64 0, i32 2
  %2360 = load i16*, i16** %2359, align 8
  %2361 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2358, i64 0, i32 3
  %2362 = load i16*, i16** %2361, align 8
  %2363 = icmp ult i16* %2360, %2362
  br i1 %2363, label %2378, label %2364, !prof !4

2364:                                             ; preds = %2357
  %2365 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2358, i64 0, i32 6
  %2366 = load i8, i8* %2365, align 8, !range !2
  %2367 = icmp eq i8 %2366, 0
  br i1 %2367, label %2368, label %2375

2368:                                             ; preds = %2364
  %2369 = bitcast %"class.v8::internal::Utf16CharacterStream"* %2358 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %2370 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %2369, align 8
  %2371 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %2370, i64 5
  %2372 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %2371, align 8
  %2373 = tail call zeroext i1 %2372(%"class.v8::internal::Utf16CharacterStream"* %2358) #8
  %2374 = load i16*, i16** %2359, align 8
  br i1 %2373, label %2378, label %2375

2375:                                             ; preds = %2368, %2364
  %2376 = phi i16* [ %2374, %2368 ], [ %2360, %2364 ]
  %2377 = getelementptr inbounds i16, i16* %2376, i64 1
  store i16* %2377, i16** %2359, align 8
  store i32 -1, i32* %16, align 8
  br label %2422

2378:                                             ; preds = %2368, %2357
  %2379 = phi i16* [ %2360, %2357 ], [ %2374, %2368 ]
  %2380 = load i16, i16* %2379, align 2
  %2381 = zext i16 %2380 to i32
  %2382 = getelementptr inbounds i16, i16* %2379, i64 1
  store i16* %2382, i16** %2359, align 8
  store i32 %2381, i32* %16, align 8
  %2383 = icmp eq i16 %2380, 117
  br i1 %2383, label %2384, label %2422

2384:                                             ; preds = %2378
  %2385 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %2386 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2385, i64 0, i32 2
  %2387 = load i16*, i16** %2386, align 8
  %2388 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2385, i64 0, i32 3
  %2389 = load i16*, i16** %2388, align 8
  %2390 = icmp ult i16* %2387, %2389
  br i1 %2390, label %2391, label %2394, !prof !4

2391:                                             ; preds = %2384
  %2392 = load i16, i16* %2387, align 2
  %2393 = zext i16 %2392 to i32
  br label %2408

2394:                                             ; preds = %2384
  %2395 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2385, i64 0, i32 6
  %2396 = load i8, i8* %2395, align 8, !range !2
  %2397 = icmp eq i8 %2396, 0
  br i1 %2397, label %2398, label %2408

2398:                                             ; preds = %2394
  %2399 = bitcast %"class.v8::internal::Utf16CharacterStream"* %2385 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %2400 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %2399, align 8
  %2401 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %2400, i64 5
  %2402 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %2401, align 8
  %2403 = tail call zeroext i1 %2402(%"class.v8::internal::Utf16CharacterStream"* %2385) #8
  %2404 = load i16*, i16** %2386, align 8
  br i1 %2403, label %2405, label %2408

2405:                                             ; preds = %2398
  %2406 = load i16, i16* %2404, align 2
  %2407 = zext i16 %2406 to i32
  br label %2408

2408:                                             ; preds = %2405, %2398, %2394, %2391
  %2409 = phi i16* [ %2387, %2391 ], [ %2404, %2405 ], [ %2387, %2394 ], [ %2404, %2398 ]
  %2410 = phi i32 [ %2393, %2391 ], [ %2407, %2405 ], [ -1, %2394 ], [ -1, %2398 ]
  %2411 = getelementptr inbounds i16, i16* %2409, i64 1
  store i16* %2411, i16** %2386, align 8
  store i32 %2410, i32* %16, align 8
  %2412 = tail call i32 @_ZN2v88internal7Scanner17ScanUnicodeEscapeILb0EEEjv(%"class.v8::internal::Scanner"* %0) #8
  %2413 = icmp eq i32 %2412, 92
  br i1 %2413, label %2558, label %2414

2414:                                             ; preds = %2408
  %2415 = icmp ult i32 %2412, 256
  br i1 %2415, label %2416, label %2422

2416:                                             ; preds = %2414
  %2417 = zext i32 %2412 to i64
  %2418 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN2v88internalL17kOneByteCharFlagsE, i64 0, i64 %2417
  %2419 = load i8, i8* %2418, align 1
  %2420 = and i8 %2419, 1
  %2421 = icmp eq i8 %2420, 0
  br i1 %2421, label %2558, label %2425

2422:                                             ; preds = %2414, %2378, %2375
  %2423 = phi i32 [ %2412, %2414 ], [ -1, %2378 ], [ -1, %2375 ]
  %2424 = tail call zeroext i1 @_ZN2v88internal21IsIdentifierStartSlowEj(i32 %2423) #8
  br i1 %2424, label %2425, label %2558

2425:                                             ; preds = %2422, %2416
  %2426 = phi i32 [ %2412, %2416 ], [ %2423, %2422 ]
  %2427 = phi i1 [ true, %2416 ], [ false, %2422 ]
  %2428 = load %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"** %4, align 8
  %2429 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %2428, i64 0, i32 1
  %2430 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %2428, i64 0, i32 1, i32 2
  %2431 = load i8, i8* %2430, align 4, !range !2
  %2432 = icmp eq i8 %2431, 0
  br i1 %2432, label %2453, label %2433

2433:                                             ; preds = %2425
  br i1 %2427, label %2434, label %2452

2434:                                             ; preds = %2433
  %2435 = trunc i32 %2426 to i8
  %2436 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %2428, i64 0, i32 1, i32 1
  %2437 = load i32, i32* %2436, align 8
  %2438 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %2428, i64 0, i32 1, i32 0, i32 1
  %2439 = load i64, i64* %2438, align 8
  %2440 = trunc i64 %2439 to i32
  %2441 = icmp slt i32 %2437, %2440
  br i1 %2441, label %2444, label %2442

2442:                                             ; preds = %2434
  tail call void @_ZN2v88internal13LiteralBuffer12ExpandBufferEv(%"class.v8::internal::LiteralBuffer"* %2429) #8
  %2443 = load i32, i32* %2436, align 8
  br label %2444

2444:                                             ; preds = %2442, %2434
  %2445 = phi i32 [ %2437, %2434 ], [ %2443, %2442 ]
  %2446 = sext i32 %2445 to i64
  %2447 = getelementptr inbounds %"class.v8::internal::LiteralBuffer", %"class.v8::internal::LiteralBuffer"* %2429, i64 0, i32 0, i32 0
  %2448 = load i8*, i8** %2447, align 8
  %2449 = getelementptr inbounds i8, i8* %2448, i64 %2446
  store i8 %2435, i8* %2449, align 1
  %2450 = load i32, i32* %2436, align 8
  %2451 = add nsw i32 %2450, 1
  store i32 %2451, i32* %2436, align 8
  br label %2454

2452:                                             ; preds = %2433
  tail call void @_ZN2v88internal13LiteralBuffer16ConvertToTwoByteEv(%"class.v8::internal::LiteralBuffer"* %2429) #8
  br label %2453

2453:                                             ; preds = %2452, %2425
  tail call void @_ZN2v88internal13LiteralBuffer14AddTwoByteCharEj(%"class.v8::internal::LiteralBuffer"* %2429, i32 %2426) #8
  br label %2454

2454:                                             ; preds = %2453, %2444
  %2455 = icmp ult i32 %2426, 128
  br i1 %2455, label %2456, label %2462

2456:                                             ; preds = %2454
  %2457 = zext i32 %2426 to i64
  %2458 = getelementptr inbounds [128 x i8], [128 x i8]* @_ZN2v88internalL20character_scan_flagsE, i64 0, i64 %2457
  %2459 = load i8, i8* %2458, align 1
  %2460 = and i8 %2459, 2
  %2461 = icmp eq i8 %2460, 0
  br label %2462

2462:                                             ; preds = %2456, %2454, %2354, %2202
  %2463 = phi i1 [ %2356, %2354 ], [ true, %2202 ], [ false, %2454 ], [ %2461, %2456 ]
  %2464 = phi i1 [ false, %2354 ], [ false, %2202 ], [ true, %2454 ], [ true, %2456 ]
  %2465 = tail call zeroext i8 @_ZN2v88internal7Scanner32ScanIdentifierOrKeywordInnerSlowEbb(%"class.v8::internal::Scanner"* %0, i1 zeroext %2464, i1 zeroext %2463) #8
  br label %2558

2466:                                             ; preds = %2200, %2194, %2180, %2168, %2166
  %2467 = load i32, i32* %16, align 8
  br label %2468

2468:                                             ; preds = %2466, %2126
  %2469 = phi i32 [ %2467, %2466 ], [ %2127, %2126 ]
  %2470 = icmp eq i32 %2469, -1
  %2471 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  br i1 %2470, label %2472, label %2477

2472:                                             ; preds = %2468
  %2473 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2471, i64 0, i32 6
  %2474 = load i8, i8* %2473, align 8, !range !2
  %2475 = icmp eq i8 %2474, 0
  %2476 = select i1 %2475, i8 14, i8 112
  br label %2558

2477:                                             ; preds = %2468
  %2478 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2471, i64 0, i32 4
  %2479 = load i64, i64* %2478, align 8
  %2480 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2471, i64 0, i32 2
  %2481 = bitcast i16** %2480 to i64*
  %2482 = load i64, i64* %2481, align 8
  %2483 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2471, i64 0, i32 1
  %2484 = bitcast i16** %2483 to i64*
  %2485 = load i64, i64* %2484, align 8
  %2486 = sub i64 %2482, %2485
  %2487 = lshr exact i64 %2486, 1
  %2488 = add i64 %2487, %2479
  %2489 = trunc i64 %2488 to i32
  br label %2490

2490:                                             ; preds = %2536, %2477
  %2491 = phi i32 [ %2538, %2536 ], [ %2469, %2477 ]
  %2492 = icmp ult i32 %2491, 256
  br i1 %2492, label %2498, label %2493

2493:                                             ; preds = %2490
  %2494 = tail call zeroext i1 @_ZN2v88internal16IsWhiteSpaceSlowEj(i32 %2491) #8
  %2495 = and i32 %2491, -2
  %2496 = icmp eq i32 %2495, 8232
  %2497 = or i1 %2496, %2494
  br i1 %2497, label %2504, label %2540

2498:                                             ; preds = %2490
  %2499 = zext i32 %2491 to i64
  %2500 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN2v88internalL17kOneByteCharFlagsE, i64 0, i64 %2499
  %2501 = load i8, i8* %2500, align 1
  %2502 = and i8 %2501, 8
  %2503 = icmp eq i8 %2502, 0
  br i1 %2503, label %2540, label %2504

2504:                                             ; preds = %2498, %2493
  %2505 = load %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"** %4, align 8
  %2506 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %2505, i64 0, i32 8
  %2507 = load i8, i8* %2506, align 4, !range !2
  %2508 = icmp eq i8 %2507, 0
  br i1 %2508, label %2509, label %2512

2509:                                             ; preds = %2504
  %2510 = load i32, i32* %16, align 8
  switch i32 %2510, label %2512 [
    i32 8232, label %2511
    i32 13, label %2511
    i32 10, label %2511
    i32 8233, label %2511
  ]

2511:                                             ; preds = %2509, %2509, %2509, %2509
  store i8 1, i8* %2506, align 4
  br label %2512

2512:                                             ; preds = %2511, %2509, %2504
  %2513 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %2514 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2513, i64 0, i32 2
  %2515 = load i16*, i16** %2514, align 8
  %2516 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2513, i64 0, i32 3
  %2517 = load i16*, i16** %2516, align 8
  %2518 = icmp ult i16* %2515, %2517
  br i1 %2518, label %2519, label %2522, !prof !4

2519:                                             ; preds = %2512
  %2520 = load i16, i16* %2515, align 2
  %2521 = zext i16 %2520 to i32
  br label %2536

2522:                                             ; preds = %2512
  %2523 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2513, i64 0, i32 6
  %2524 = load i8, i8* %2523, align 8, !range !2
  %2525 = icmp eq i8 %2524, 0
  br i1 %2525, label %2526, label %2536

2526:                                             ; preds = %2522
  %2527 = bitcast %"class.v8::internal::Utf16CharacterStream"* %2513 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %2528 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %2527, align 8
  %2529 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %2528, i64 5
  %2530 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %2529, align 8
  %2531 = tail call zeroext i1 %2530(%"class.v8::internal::Utf16CharacterStream"* %2513) #8
  %2532 = load i16*, i16** %2514, align 8
  br i1 %2531, label %2533, label %2536

2533:                                             ; preds = %2526
  %2534 = load i16, i16* %2532, align 2
  %2535 = zext i16 %2534 to i32
  br label %2536

2536:                                             ; preds = %2533, %2526, %2522, %2519
  %2537 = phi i16* [ %2515, %2519 ], [ %2532, %2533 ], [ %2515, %2522 ], [ %2532, %2526 ]
  %2538 = phi i32 [ %2521, %2519 ], [ %2535, %2533 ], [ -1, %2522 ], [ -1, %2526 ]
  %2539 = getelementptr inbounds i16, i16* %2537, i64 1
  store i16* %2539, i16** %2514, align 8
  store i32 %2538, i32* %16, align 8
  br label %2490

2540:                                             ; preds = %2498, %2493
  %2541 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %2542 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2541, i64 0, i32 4
  %2543 = load i64, i64* %2542, align 8
  %2544 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2541, i64 0, i32 2
  %2545 = bitcast i16** %2544 to i64*
  %2546 = load i64, i64* %2545, align 8
  %2547 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2541, i64 0, i32 1
  %2548 = bitcast i16** %2547 to i64*
  %2549 = load i64, i64* %2548, align 8
  %2550 = sub i64 %2546, %2549
  %2551 = lshr exact i64 %2550, 1
  %2552 = add i64 %2551, %2543
  %2553 = trunc i64 %2552 to i32
  %2554 = icmp eq i32 %2553, %2489
  br i1 %2554, label %2558, label %2555

2555:                                             ; preds = %2540, %1832, %1764, %1250, %1248, %1210, %1169, %1169, %1169, %1169, %1169, %876, %318
  %2556 = phi i8 [ 114, %1832 ], [ 114, %1764 ], [ %1251, %1250 ], [ %319, %318 ], [ 114, %2540 ], [ 114, %1248 ], [ 114, %876 ], [ 114, %1169 ], [ 114, %1169 ], [ 114, %1169 ], [ 114, %1169 ], [ 114, %1169 ], [ 114, %1210 ]
  %2557 = icmp eq i8 %2556, 114
  br i1 %2557, label %18, label %2558

2558:                                             ; preds = %230, %777, %803, %809, %1091, %1832, %2540, %2555, %2346, %1993, %65, %87, %90, %113, %116, %151, %170, %173, %203, %207, %227, %259, %281, %284, %314, %338, %341, %370, %392, %395, %424, %446, %449, %479, %501, %504, %527, %530, %560, %588, %610, %613, %637, %640, %670, %692, %695, %724, %752, %774, %800, %819, %834, %902, %924, %927, %950, %953, %983, %1011, %1033, %1036, %1066, %1088, %1276, %1298, %1301, %1324, %1327, %1357, %1385, %1407, %1410, %1433, %1436, %1466, %1494, %1516, %1519, %1549, %1571, %1581, %1583, %1592, %1596, %1604, %1659, %1687, %1766, %1847, %1957, %1965, %1998, %2001, %2055, %2063, %2069, %2109, %2310, %2318, %2351, %2354, %2408, %2416, %2422, %2462, %2472
  %2559 = phi i8 [ %1848, %1847 ], [ %1767, %1766 ], [ %1691, %1687 ], [ %1582, %1581 ], [ 10, %1659 ], [ 21, %1494 ], [ 23, %1385 ], [ 28, %1276 ], [ 27, %1011 ], [ 32, %902 ], [ 54, %724 ], [ 31, %752 ], [ 15, %588 ], [ 63, %370 ], [ 25, %424 ], [ 62, %259 ], [ %208, %207 ], [ %40, %65 ], [ %2476, %2472 ], [ 4, %116 ], [ 11, %90 ], [ 11, %151 ], [ 41, %395 ], [ 61, %341 ], [ 17, %504 ], [ 49, %613 ], [ 47, %695 ], [ 43, %927 ], [ 39, %1301 ], [ 37, %1410 ], [ 2, %1604 ], [ 2, %1583 ], [ 11, %87 ], [ 4, %113 ], [ 18, %203 ], [ 34, %173 ], [ 34, %170 ], [ 60, %227 ], [ 24, %314 ], [ 40, %284 ], [ 40, %281 ], [ 61, %338 ], [ 41, %392 ], [ 26, %479 ], [ 42, %449 ], [ 42, %446 ], [ 17, %501 ], [ 57, %560 ], [ 56, %530 ], [ 56, %527 ], [ 49, %610 ], [ 59, %670 ], [ 58, %640 ], [ 58, %637 ], [ 47, %692 ], [ 48, %774 ], [ 55, %800 ], [ 43, %924 ], [ 30, %983 ], [ 46, %953 ], [ 46, %950 ], [ 29, %1066 ], [ 45, %1036 ], [ 45, %1033 ], [ 44, %1088 ], [ 39, %1298 ], [ 20, %1357 ], [ 36, %1327 ], [ 36, %1324 ], [ 37, %1407 ], [ 19, %1466 ], [ 35, %1436 ], [ 35, %1433 ], [ 22, %1549 ], [ 38, %1519 ], [ 38, %1516 ], [ 2, %1571 ], [ %2112, %2109 ], [ 95, %2001 ], [ %2000, %1998 ], [ 95, %1957 ], [ 95, %1965 ], [ 112, %2069 ], [ 112, %2055 ], [ 112, %2063 ], [ %2465, %2462 ], [ 95, %2354 ], [ %2353, %2351 ], [ 95, %2310 ], [ 95, %2318 ], [ 112, %2422 ], [ 112, %2408 ], [ 112, %2416 ], [ 2, %1596 ], [ 2, %1592 ], [ 112, %819 ], [ 112, %834 ], [ 95, %1993 ], [ 95, %2346 ], [ 112, %2540 ], [ 112, %1832 ], [ %2556, %2555 ], [ 44, %1091 ], [ 48, %777 ], [ 55, %803 ], [ 55, %809 ], [ 60, %230 ]
  %2560 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %3, i64 0, i32 3
  store i8 %2559, i8* %2560, align 8
  %2561 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %2562 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2561, i64 0, i32 4
  %2563 = load i64, i64* %2562, align 8
  %2564 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2561, i64 0, i32 2
  %2565 = bitcast i16** %2564 to i64*
  %2566 = load i64, i64* %2565, align 8
  %2567 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2561, i64 0, i32 1
  %2568 = bitcast i16** %2567 to i64*
  %2569 = load i64, i64* %2568, align 8
  %2570 = sub i64 %2566, %2569
  %2571 = lshr exact i64 %2570, 1
  %2572 = add i64 %2571, %2563
  %2573 = trunc i64 %2572 to i32
  %2574 = add nsw i32 %2573, -1
  %2575 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %3, i64 0, i32 0, i32 1
  store i32 %2574, i32* %2575, align 4
  br label %2579

2576:                                             ; preds = %1
  %2577 = ptrtoint %"struct.v8::internal::Scanner::TokenDesc"* %9 to i64
  store i64 %2577, i64* %5, align 8
  store %"struct.v8::internal::Scanner::TokenDesc"* %3, %"struct.v8::internal::Scanner::TokenDesc"** %8, align 8
  %2578 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %3, i64 0, i32 3
  store i8 115, i8* %2578, align 8
  br label %2579

2579:                                             ; preds = %2576, %2558
  %2580 = load %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"** %2, align 8
  %2581 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %2580, i64 0, i32 3
  %2582 = load i8, i8* %2581, align 8
  ret i8 %2582
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i8 @_ZN2v88internal7Scanner9PeekAheadEv(%"class.v8::internal::Scanner"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 3
  %3 = load %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"** %2, align 8
  %4 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %3, i64 0, i32 3
  %5 = load i8, i8* %4, align 8
  %6 = icmp eq i8 %5, 115
  br i1 %6, label %7, label %2582

7:                                                ; preds = %1
  %8 = ptrtoint %"struct.v8::internal::Scanner::TokenDesc"* %3 to i64
  %9 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 2
  %10 = bitcast %"struct.v8::internal::Scanner::TokenDesc"** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"struct.v8::internal::Scanner::TokenDesc"** %2 to i64*
  store i64 %8, i64* %10, align 8
  %13 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %3, i64 0, i32 8
  store i8 0, i8* %13, align 4
  %14 = load %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"** %9, align 8
  %15 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 4
  %16 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 5
  %17 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 0, i32 0
  br label %18

18:                                               ; preds = %2558, %7
  %19 = phi %"struct.v8::internal::Scanner::TokenDesc"* [ %2559, %2558 ], [ %14, %7 ]
  %20 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %21 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %20, i64 0, i32 4
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %20, i64 0, i32 2
  %24 = bitcast i16** %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %20, i64 0, i32 1
  %27 = bitcast i16** %26 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = sub i64 %25, %28
  %30 = lshr exact i64 %29, 1
  %31 = add i64 %30, %22
  %32 = trunc i64 %31 to i32
  %33 = add nsw i32 %32, -1
  %34 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %19, i64 0, i32 0, i32 0
  store i32 %33, i32* %34, align 8
  %35 = load i32, i32* %16, align 8
  %36 = icmp ult i32 %35, 128
  br i1 %36, label %37, label %2114, !prof !4

37:                                               ; preds = %18
  %38 = zext i32 %35 to i64
  %39 = getelementptr inbounds [128 x i8], [128 x i8]* @_ZN2v88internalL15one_char_tokensE, i64 0, i64 %38
  %40 = load i8, i8* %39, align 1
  switch i8 %40, label %2113 [
    i8 5, label %41
    i8 6, label %41
    i8 8, label %41
    i8 13, label %41
    i8 3, label %41
    i8 7, label %41
    i8 9, label %41
    i8 12, label %41
    i8 33, label %41
    i8 50, label %41
    i8 112, label %41
    i8 11, label %69
    i8 93, label %207
    i8 60, label %209
    i8 61, label %320
    i8 17, label %483
    i8 49, label %592
    i8 47, label %674
    i8 48, label %756
    i8 43, label %906
    i8 45, label %1015
    i8 44, label %1070
    i8 39, label %1280
    i8 37, label %1389
    i8 38, label %1498
    i8 2, label %1553
    i8 0, label %1663
    i8 111, label %1692
    i8 114, label %1768
    i8 90, label %1847
    i8 95, label %1849
  ]

41:                                               ; preds = %37, %37, %37, %37, %37, %37, %37, %37, %37, %37, %37
  %42 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %43 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %42, i64 0, i32 2
  %44 = load i16*, i16** %43, align 8
  %45 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %42, i64 0, i32 3
  %46 = load i16*, i16** %45, align 8
  %47 = icmp ult i16* %44, %46
  br i1 %47, label %48, label %51, !prof !4

48:                                               ; preds = %41
  %49 = load i16, i16* %44, align 2
  %50 = zext i16 %49 to i32
  br label %65

51:                                               ; preds = %41
  %52 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %42, i64 0, i32 6
  %53 = load i8, i8* %52, align 8, !range !2
  %54 = icmp eq i8 %53, 0
  br i1 %54, label %55, label %65

55:                                               ; preds = %51
  %56 = bitcast %"class.v8::internal::Utf16CharacterStream"* %42 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %57 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %56, align 8
  %58 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %57, i64 5
  %59 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %58, align 8
  %60 = tail call zeroext i1 %59(%"class.v8::internal::Utf16CharacterStream"* %42) #8
  %61 = load i16*, i16** %43, align 8
  br i1 %60, label %62, label %65

62:                                               ; preds = %55
  %63 = load i16, i16* %61, align 2
  %64 = zext i16 %63 to i32
  br label %65

65:                                               ; preds = %62, %55, %51, %48
  %66 = phi i16* [ %44, %48 ], [ %61, %62 ], [ %44, %51 ], [ %61, %55 ]
  %67 = phi i32 [ %50, %48 ], [ %64, %62 ], [ -1, %51 ], [ -1, %55 ]
  %68 = getelementptr inbounds i16, i16* %66, i64 1
  store i16* %68, i16** %43, align 8
  store i32 %67, i32* %16, align 8
  br label %2560

69:                                               ; preds = %37
  %70 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %71 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %70, i64 0, i32 2
  %72 = load i16*, i16** %71, align 8
  %73 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %70, i64 0, i32 3
  %74 = load i16*, i16** %73, align 8
  %75 = icmp ult i16* %72, %74
  br i1 %75, label %90, label %76, !prof !4

76:                                               ; preds = %69
  %77 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %70, i64 0, i32 6
  %78 = load i8, i8* %77, align 8, !range !2
  %79 = icmp eq i8 %78, 0
  br i1 %79, label %80, label %87

80:                                               ; preds = %76
  %81 = bitcast %"class.v8::internal::Utf16CharacterStream"* %70 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %82 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %81, align 8
  %83 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %82, i64 5
  %84 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %83, align 8
  %85 = tail call zeroext i1 %84(%"class.v8::internal::Utf16CharacterStream"* %70) #8
  %86 = load i16*, i16** %71, align 8
  br i1 %85, label %90, label %87

87:                                               ; preds = %80, %76
  %88 = phi i16* [ %86, %80 ], [ %72, %76 ]
  %89 = getelementptr inbounds i16, i16* %88, i64 1
  store i16* %89, i16** %71, align 8
  store i32 -1, i32* %16, align 8
  br label %2560

90:                                               ; preds = %80, %69
  %91 = phi i16* [ %72, %69 ], [ %86, %80 ]
  %92 = load i16, i16* %91, align 2
  %93 = zext i16 %92 to i32
  %94 = getelementptr inbounds i16, i16* %91, i64 1
  store i16* %94, i16** %71, align 8
  store i32 %93, i32* %16, align 8
  switch i16 %92, label %2560 [
    i16 46, label %95
    i16 63, label %152
  ]

95:                                               ; preds = %90
  %96 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %97 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %96, i64 0, i32 2
  %98 = load i16*, i16** %97, align 8
  %99 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %96, i64 0, i32 3
  %100 = load i16*, i16** %99, align 8
  %101 = icmp ult i16* %98, %100
  br i1 %101, label %116, label %102, !prof !4

102:                                              ; preds = %95
  %103 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %96, i64 0, i32 6
  %104 = load i8, i8* %103, align 8, !range !2
  %105 = icmp eq i8 %104, 0
  br i1 %105, label %106, label %113

106:                                              ; preds = %102
  %107 = bitcast %"class.v8::internal::Utf16CharacterStream"* %96 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %108 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %107, align 8
  %109 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %108, i64 5
  %110 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %109, align 8
  %111 = tail call zeroext i1 %110(%"class.v8::internal::Utf16CharacterStream"* %96) #8
  %112 = load i16*, i16** %97, align 8
  br i1 %111, label %116, label %113

113:                                              ; preds = %106, %102
  %114 = phi i16* [ %112, %106 ], [ %98, %102 ]
  %115 = getelementptr inbounds i16, i16* %114, i64 1
  store i16* %115, i16** %97, align 8
  store i32 -1, i32* %16, align 8
  br label %2560

116:                                              ; preds = %106, %95
  %117 = phi i16* [ %98, %95 ], [ %112, %106 ]
  %118 = load i16, i16* %117, align 2
  %119 = zext i16 %118 to i32
  %120 = getelementptr inbounds i16, i16* %117, i64 1
  store i16* %120, i16** %97, align 8
  store i32 %119, i32* %16, align 8
  %121 = add nsw i32 %119, -48
  %122 = icmp ult i32 %121, 10
  br i1 %122, label %123, label %2560

123:                                              ; preds = %116
  %124 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %125 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %124, i64 0, i32 2
  %126 = load i16*, i16** %125, align 8
  %127 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %124, i64 0, i32 1
  %128 = load i16*, i16** %127, align 8
  %129 = icmp ugt i16* %126, %128
  %130 = ptrtoint i16* %128 to i64
  br i1 %129, label %131, label %133, !prof !4

131:                                              ; preds = %123
  %132 = getelementptr inbounds i16, i16* %126, i64 -1
  store i16* %132, i16** %125, align 8
  br label %151

133:                                              ; preds = %123
  %134 = ptrtoint i16* %126 to i64
  %135 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %124, i64 0, i32 4
  %136 = load i64, i64* %135, align 8
  %137 = bitcast i16** %125 to i64*
  %138 = sub i64 %134, %130
  %139 = ashr exact i64 %138, 1
  %140 = add nsw i64 %139, -1
  %141 = add i64 %140, %136
  store i64 %141, i64* %135, align 8
  store i64 %130, i64* %137, align 8
  %142 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %124, i64 0, i32 6
  %143 = load i8, i8* %142, align 8, !range !2
  %144 = icmp eq i8 %143, 0
  br i1 %144, label %145, label %151

145:                                              ; preds = %133
  %146 = bitcast %"class.v8::internal::Utf16CharacterStream"* %124 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %147 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %146, align 8
  %148 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %147, i64 5
  %149 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %148, align 8
  %150 = tail call zeroext i1 %149(%"class.v8::internal::Utf16CharacterStream"* %124) #8
  br label %151

151:                                              ; preds = %145, %133, %131
  store i32 46, i32* %16, align 8
  br label %2560

152:                                              ; preds = %90
  %153 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %154 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %153, i64 0, i32 2
  %155 = load i16*, i16** %154, align 8
  %156 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %153, i64 0, i32 3
  %157 = load i16*, i16** %156, align 8
  %158 = icmp ult i16* %155, %157
  br i1 %158, label %173, label %159, !prof !4

159:                                              ; preds = %152
  %160 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %153, i64 0, i32 6
  %161 = load i8, i8* %160, align 8, !range !2
  %162 = icmp eq i8 %161, 0
  br i1 %162, label %163, label %170

163:                                              ; preds = %159
  %164 = bitcast %"class.v8::internal::Utf16CharacterStream"* %153 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %165 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %164, align 8
  %166 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %165, i64 5
  %167 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %166, align 8
  %168 = tail call zeroext i1 %167(%"class.v8::internal::Utf16CharacterStream"* %153) #8
  %169 = load i16*, i16** %154, align 8
  br i1 %168, label %173, label %170

170:                                              ; preds = %163, %159
  %171 = phi i16* [ %169, %163 ], [ %155, %159 ]
  %172 = getelementptr inbounds i16, i16* %171, i64 1
  store i16* %172, i16** %154, align 8
  store i32 -1, i32* %16, align 8
  br label %2560

173:                                              ; preds = %163, %152
  %174 = phi i16* [ %155, %152 ], [ %169, %163 ]
  %175 = load i16, i16* %174, align 2
  %176 = zext i16 %175 to i32
  %177 = getelementptr inbounds i16, i16* %174, i64 1
  store i16* %177, i16** %154, align 8
  store i32 %176, i32* %16, align 8
  %178 = icmp eq i16 %175, 61
  br i1 %178, label %179, label %2560

179:                                              ; preds = %173
  %180 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %181 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %180, i64 0, i32 2
  %182 = load i16*, i16** %181, align 8
  %183 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %180, i64 0, i32 3
  %184 = load i16*, i16** %183, align 8
  %185 = icmp ult i16* %182, %184
  br i1 %185, label %186, label %189, !prof !4

186:                                              ; preds = %179
  %187 = load i16, i16* %182, align 2
  %188 = zext i16 %187 to i32
  br label %203

189:                                              ; preds = %179
  %190 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %180, i64 0, i32 6
  %191 = load i8, i8* %190, align 8, !range !2
  %192 = icmp eq i8 %191, 0
  br i1 %192, label %193, label %203

193:                                              ; preds = %189
  %194 = bitcast %"class.v8::internal::Utf16CharacterStream"* %180 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %195 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %194, align 8
  %196 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %195, i64 5
  %197 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %196, align 8
  %198 = tail call zeroext i1 %197(%"class.v8::internal::Utf16CharacterStream"* %180) #8
  %199 = load i16*, i16** %181, align 8
  br i1 %198, label %200, label %203

200:                                              ; preds = %193
  %201 = load i16, i16* %199, align 2
  %202 = zext i16 %201 to i32
  br label %203

203:                                              ; preds = %200, %193, %189, %186
  %204 = phi i16* [ %182, %186 ], [ %199, %200 ], [ %182, %189 ], [ %199, %193 ]
  %205 = phi i32 [ %188, %186 ], [ %202, %200 ], [ -1, %189 ], [ -1, %193 ]
  %206 = getelementptr inbounds i16, i16* %204, i64 1
  store i16* %206, i16** %181, align 8
  store i32 %205, i32* %16, align 8
  br label %2560

207:                                              ; preds = %37
  %208 = tail call zeroext i8 @_ZN2v88internal7Scanner10ScanStringEv(%"class.v8::internal::Scanner"* %0) #8
  br label %2560

209:                                              ; preds = %37
  %210 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %211 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %210, i64 0, i32 2
  %212 = load i16*, i16** %211, align 8
  %213 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %210, i64 0, i32 3
  %214 = load i16*, i16** %213, align 8
  %215 = icmp ult i16* %212, %214
  br i1 %215, label %230, label %216, !prof !4

216:                                              ; preds = %209
  %217 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %210, i64 0, i32 6
  %218 = load i8, i8* %217, align 8, !range !2
  %219 = icmp eq i8 %218, 0
  br i1 %219, label %220, label %227

220:                                              ; preds = %216
  %221 = bitcast %"class.v8::internal::Utf16CharacterStream"* %210 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %222 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %221, align 8
  %223 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %222, i64 5
  %224 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %223, align 8
  %225 = tail call zeroext i1 %224(%"class.v8::internal::Utf16CharacterStream"* %210) #8
  %226 = load i16*, i16** %211, align 8
  br i1 %225, label %230, label %227

227:                                              ; preds = %220, %216
  %228 = phi i16* [ %226, %220 ], [ %212, %216 ]
  %229 = getelementptr inbounds i16, i16* %228, i64 1
  store i16* %229, i16** %211, align 8
  store i32 -1, i32* %16, align 8
  br label %2560

230:                                              ; preds = %220, %209
  %231 = phi i16* [ %212, %209 ], [ %226, %220 ]
  %232 = load i16, i16* %231, align 2
  %233 = zext i16 %232 to i32
  %234 = getelementptr inbounds i16, i16* %231, i64 1
  store i16* %234, i16** %211, align 8
  store i32 %233, i32* %16, align 8
  switch i16 %232, label %2560 [
    i16 61, label %235
    i16 60, label %263
    i16 33, label %318
  ]

235:                                              ; preds = %230
  %236 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %237 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %236, i64 0, i32 2
  %238 = load i16*, i16** %237, align 8
  %239 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %236, i64 0, i32 3
  %240 = load i16*, i16** %239, align 8
  %241 = icmp ult i16* %238, %240
  br i1 %241, label %242, label %245, !prof !4

242:                                              ; preds = %235
  %243 = load i16, i16* %238, align 2
  %244 = zext i16 %243 to i32
  br label %259

245:                                              ; preds = %235
  %246 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %236, i64 0, i32 6
  %247 = load i8, i8* %246, align 8, !range !2
  %248 = icmp eq i8 %247, 0
  br i1 %248, label %249, label %259

249:                                              ; preds = %245
  %250 = bitcast %"class.v8::internal::Utf16CharacterStream"* %236 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %251 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %250, align 8
  %252 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %251, i64 5
  %253 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %252, align 8
  %254 = tail call zeroext i1 %253(%"class.v8::internal::Utf16CharacterStream"* %236) #8
  %255 = load i16*, i16** %237, align 8
  br i1 %254, label %256, label %259

256:                                              ; preds = %249
  %257 = load i16, i16* %255, align 2
  %258 = zext i16 %257 to i32
  br label %259

259:                                              ; preds = %256, %249, %245, %242
  %260 = phi i16* [ %238, %242 ], [ %255, %256 ], [ %238, %245 ], [ %255, %249 ]
  %261 = phi i32 [ %244, %242 ], [ %258, %256 ], [ -1, %245 ], [ -1, %249 ]
  %262 = getelementptr inbounds i16, i16* %260, i64 1
  store i16* %262, i16** %237, align 8
  store i32 %261, i32* %16, align 8
  br label %2560

263:                                              ; preds = %230
  %264 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %265 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %264, i64 0, i32 2
  %266 = load i16*, i16** %265, align 8
  %267 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %264, i64 0, i32 3
  %268 = load i16*, i16** %267, align 8
  %269 = icmp ult i16* %266, %268
  br i1 %269, label %284, label %270, !prof !4

270:                                              ; preds = %263
  %271 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %264, i64 0, i32 6
  %272 = load i8, i8* %271, align 8, !range !2
  %273 = icmp eq i8 %272, 0
  br i1 %273, label %274, label %281

274:                                              ; preds = %270
  %275 = bitcast %"class.v8::internal::Utf16CharacterStream"* %264 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %276 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %275, align 8
  %277 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %276, i64 5
  %278 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %277, align 8
  %279 = tail call zeroext i1 %278(%"class.v8::internal::Utf16CharacterStream"* %264) #8
  %280 = load i16*, i16** %265, align 8
  br i1 %279, label %284, label %281

281:                                              ; preds = %274, %270
  %282 = phi i16* [ %280, %274 ], [ %266, %270 ]
  %283 = getelementptr inbounds i16, i16* %282, i64 1
  store i16* %283, i16** %265, align 8
  store i32 -1, i32* %16, align 8
  br label %2560

284:                                              ; preds = %274, %263
  %285 = phi i16* [ %266, %263 ], [ %280, %274 ]
  %286 = load i16, i16* %285, align 2
  %287 = zext i16 %286 to i32
  %288 = getelementptr inbounds i16, i16* %285, i64 1
  store i16* %288, i16** %265, align 8
  store i32 %287, i32* %16, align 8
  %289 = icmp eq i16 %286, 61
  br i1 %289, label %290, label %2560

290:                                              ; preds = %284
  %291 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %292 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %291, i64 0, i32 2
  %293 = load i16*, i16** %292, align 8
  %294 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %291, i64 0, i32 3
  %295 = load i16*, i16** %294, align 8
  %296 = icmp ult i16* %293, %295
  br i1 %296, label %297, label %300, !prof !4

297:                                              ; preds = %290
  %298 = load i16, i16* %293, align 2
  %299 = zext i16 %298 to i32
  br label %314

300:                                              ; preds = %290
  %301 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %291, i64 0, i32 6
  %302 = load i8, i8* %301, align 8, !range !2
  %303 = icmp eq i8 %302, 0
  br i1 %303, label %304, label %314

304:                                              ; preds = %300
  %305 = bitcast %"class.v8::internal::Utf16CharacterStream"* %291 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %306 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %305, align 8
  %307 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %306, i64 5
  %308 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %307, align 8
  %309 = tail call zeroext i1 %308(%"class.v8::internal::Utf16CharacterStream"* %291) #8
  %310 = load i16*, i16** %292, align 8
  br i1 %309, label %311, label %314

311:                                              ; preds = %304
  %312 = load i16, i16* %310, align 2
  %313 = zext i16 %312 to i32
  br label %314

314:                                              ; preds = %311, %304, %300, %297
  %315 = phi i16* [ %293, %297 ], [ %310, %311 ], [ %293, %300 ], [ %310, %304 ]
  %316 = phi i32 [ %299, %297 ], [ %313, %311 ], [ -1, %300 ], [ -1, %304 ]
  %317 = getelementptr inbounds i16, i16* %315, i64 1
  store i16* %317, i16** %292, align 8
  store i32 %316, i32* %16, align 8
  br label %2560

318:                                              ; preds = %230
  %319 = tail call zeroext i8 @_ZN2v88internal7Scanner15ScanHtmlCommentEv(%"class.v8::internal::Scanner"* %0) #8
  br label %2555

320:                                              ; preds = %37
  %321 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %322 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %321, i64 0, i32 2
  %323 = load i16*, i16** %322, align 8
  %324 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %321, i64 0, i32 3
  %325 = load i16*, i16** %324, align 8
  %326 = icmp ult i16* %323, %325
  br i1 %326, label %341, label %327, !prof !4

327:                                              ; preds = %320
  %328 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %321, i64 0, i32 6
  %329 = load i8, i8* %328, align 8, !range !2
  %330 = icmp eq i8 %329, 0
  br i1 %330, label %331, label %338

331:                                              ; preds = %327
  %332 = bitcast %"class.v8::internal::Utf16CharacterStream"* %321 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %333 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %332, align 8
  %334 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %333, i64 5
  %335 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %334, align 8
  %336 = tail call zeroext i1 %335(%"class.v8::internal::Utf16CharacterStream"* %321) #8
  %337 = load i16*, i16** %322, align 8
  br i1 %336, label %341, label %338

338:                                              ; preds = %331, %327
  %339 = phi i16* [ %337, %331 ], [ %323, %327 ]
  %340 = getelementptr inbounds i16, i16* %339, i64 1
  store i16* %340, i16** %322, align 8
  store i32 -1, i32* %16, align 8
  br label %2560

341:                                              ; preds = %331, %320
  %342 = phi i16* [ %323, %320 ], [ %337, %331 ]
  %343 = load i16, i16* %342, align 2
  %344 = zext i16 %343 to i32
  %345 = getelementptr inbounds i16, i16* %342, i64 1
  store i16* %345, i16** %322, align 8
  store i32 %344, i32* %16, align 8
  switch i16 %343, label %2560 [
    i16 61, label %346
    i16 62, label %374
  ]

346:                                              ; preds = %341
  %347 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %348 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %347, i64 0, i32 2
  %349 = load i16*, i16** %348, align 8
  %350 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %347, i64 0, i32 3
  %351 = load i16*, i16** %350, align 8
  %352 = icmp ult i16* %349, %351
  br i1 %352, label %353, label %356, !prof !4

353:                                              ; preds = %346
  %354 = load i16, i16* %349, align 2
  %355 = zext i16 %354 to i32
  br label %370

356:                                              ; preds = %346
  %357 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %347, i64 0, i32 6
  %358 = load i8, i8* %357, align 8, !range !2
  %359 = icmp eq i8 %358, 0
  br i1 %359, label %360, label %370

360:                                              ; preds = %356
  %361 = bitcast %"class.v8::internal::Utf16CharacterStream"* %347 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %362 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %361, align 8
  %363 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %362, i64 5
  %364 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %363, align 8
  %365 = tail call zeroext i1 %364(%"class.v8::internal::Utf16CharacterStream"* %347) #8
  %366 = load i16*, i16** %348, align 8
  br i1 %365, label %367, label %370

367:                                              ; preds = %360
  %368 = load i16, i16* %366, align 2
  %369 = zext i16 %368 to i32
  br label %370

370:                                              ; preds = %367, %360, %356, %353
  %371 = phi i16* [ %349, %353 ], [ %366, %367 ], [ %349, %356 ], [ %366, %360 ]
  %372 = phi i32 [ %355, %353 ], [ %369, %367 ], [ -1, %356 ], [ -1, %360 ]
  %373 = getelementptr inbounds i16, i16* %371, i64 1
  store i16* %373, i16** %348, align 8
  store i32 %372, i32* %16, align 8
  br label %2560

374:                                              ; preds = %341
  %375 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %376 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %375, i64 0, i32 2
  %377 = load i16*, i16** %376, align 8
  %378 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %375, i64 0, i32 3
  %379 = load i16*, i16** %378, align 8
  %380 = icmp ult i16* %377, %379
  br i1 %380, label %395, label %381, !prof !4

381:                                              ; preds = %374
  %382 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %375, i64 0, i32 6
  %383 = load i8, i8* %382, align 8, !range !2
  %384 = icmp eq i8 %383, 0
  br i1 %384, label %385, label %392

385:                                              ; preds = %381
  %386 = bitcast %"class.v8::internal::Utf16CharacterStream"* %375 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %387 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %386, align 8
  %388 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %387, i64 5
  %389 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %388, align 8
  %390 = tail call zeroext i1 %389(%"class.v8::internal::Utf16CharacterStream"* %375) #8
  %391 = load i16*, i16** %376, align 8
  br i1 %390, label %395, label %392

392:                                              ; preds = %385, %381
  %393 = phi i16* [ %391, %385 ], [ %377, %381 ]
  %394 = getelementptr inbounds i16, i16* %393, i64 1
  store i16* %394, i16** %376, align 8
  store i32 -1, i32* %16, align 8
  br label %2560

395:                                              ; preds = %385, %374
  %396 = phi i16* [ %377, %374 ], [ %391, %385 ]
  %397 = load i16, i16* %396, align 2
  %398 = zext i16 %397 to i32
  %399 = getelementptr inbounds i16, i16* %396, i64 1
  store i16* %399, i16** %376, align 8
  store i32 %398, i32* %16, align 8
  switch i16 %397, label %2560 [
    i16 61, label %400
    i16 62, label %428
  ]

400:                                              ; preds = %395
  %401 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %402 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %401, i64 0, i32 2
  %403 = load i16*, i16** %402, align 8
  %404 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %401, i64 0, i32 3
  %405 = load i16*, i16** %404, align 8
  %406 = icmp ult i16* %403, %405
  br i1 %406, label %407, label %410, !prof !4

407:                                              ; preds = %400
  %408 = load i16, i16* %403, align 2
  %409 = zext i16 %408 to i32
  br label %424

410:                                              ; preds = %400
  %411 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %401, i64 0, i32 6
  %412 = load i8, i8* %411, align 8, !range !2
  %413 = icmp eq i8 %412, 0
  br i1 %413, label %414, label %424

414:                                              ; preds = %410
  %415 = bitcast %"class.v8::internal::Utf16CharacterStream"* %401 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %416 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %415, align 8
  %417 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %416, i64 5
  %418 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %417, align 8
  %419 = tail call zeroext i1 %418(%"class.v8::internal::Utf16CharacterStream"* %401) #8
  %420 = load i16*, i16** %402, align 8
  br i1 %419, label %421, label %424

421:                                              ; preds = %414
  %422 = load i16, i16* %420, align 2
  %423 = zext i16 %422 to i32
  br label %424

424:                                              ; preds = %421, %414, %410, %407
  %425 = phi i16* [ %403, %407 ], [ %420, %421 ], [ %403, %410 ], [ %420, %414 ]
  %426 = phi i32 [ %409, %407 ], [ %423, %421 ], [ -1, %410 ], [ -1, %414 ]
  %427 = getelementptr inbounds i16, i16* %425, i64 1
  store i16* %427, i16** %402, align 8
  store i32 %426, i32* %16, align 8
  br label %2560

428:                                              ; preds = %395
  %429 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %430 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %429, i64 0, i32 2
  %431 = load i16*, i16** %430, align 8
  %432 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %429, i64 0, i32 3
  %433 = load i16*, i16** %432, align 8
  %434 = icmp ult i16* %431, %433
  br i1 %434, label %449, label %435, !prof !4

435:                                              ; preds = %428
  %436 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %429, i64 0, i32 6
  %437 = load i8, i8* %436, align 8, !range !2
  %438 = icmp eq i8 %437, 0
  br i1 %438, label %439, label %446

439:                                              ; preds = %435
  %440 = bitcast %"class.v8::internal::Utf16CharacterStream"* %429 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %441 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %440, align 8
  %442 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %441, i64 5
  %443 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %442, align 8
  %444 = tail call zeroext i1 %443(%"class.v8::internal::Utf16CharacterStream"* %429) #8
  %445 = load i16*, i16** %430, align 8
  br i1 %444, label %449, label %446

446:                                              ; preds = %439, %435
  %447 = phi i16* [ %445, %439 ], [ %431, %435 ]
  %448 = getelementptr inbounds i16, i16* %447, i64 1
  store i16* %448, i16** %430, align 8
  store i32 -1, i32* %16, align 8
  br label %2560

449:                                              ; preds = %439, %428
  %450 = phi i16* [ %431, %428 ], [ %445, %439 ]
  %451 = load i16, i16* %450, align 2
  %452 = zext i16 %451 to i32
  %453 = getelementptr inbounds i16, i16* %450, i64 1
  store i16* %453, i16** %430, align 8
  store i32 %452, i32* %16, align 8
  %454 = icmp eq i16 %451, 61
  br i1 %454, label %455, label %2560

455:                                              ; preds = %449
  %456 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %457 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %456, i64 0, i32 2
  %458 = load i16*, i16** %457, align 8
  %459 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %456, i64 0, i32 3
  %460 = load i16*, i16** %459, align 8
  %461 = icmp ult i16* %458, %460
  br i1 %461, label %462, label %465, !prof !4

462:                                              ; preds = %455
  %463 = load i16, i16* %458, align 2
  %464 = zext i16 %463 to i32
  br label %479

465:                                              ; preds = %455
  %466 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %456, i64 0, i32 6
  %467 = load i8, i8* %466, align 8, !range !2
  %468 = icmp eq i8 %467, 0
  br i1 %468, label %469, label %479

469:                                              ; preds = %465
  %470 = bitcast %"class.v8::internal::Utf16CharacterStream"* %456 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %471 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %470, align 8
  %472 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %471, i64 5
  %473 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %472, align 8
  %474 = tail call zeroext i1 %473(%"class.v8::internal::Utf16CharacterStream"* %456) #8
  %475 = load i16*, i16** %457, align 8
  br i1 %474, label %476, label %479

476:                                              ; preds = %469
  %477 = load i16, i16* %475, align 2
  %478 = zext i16 %477 to i32
  br label %479

479:                                              ; preds = %476, %469, %465, %462
  %480 = phi i16* [ %458, %462 ], [ %475, %476 ], [ %458, %465 ], [ %475, %469 ]
  %481 = phi i32 [ %464, %462 ], [ %478, %476 ], [ -1, %465 ], [ -1, %469 ]
  %482 = getelementptr inbounds i16, i16* %480, i64 1
  store i16* %482, i16** %457, align 8
  store i32 %481, i32* %16, align 8
  br label %2560

483:                                              ; preds = %37
  %484 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %485 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %484, i64 0, i32 2
  %486 = load i16*, i16** %485, align 8
  %487 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %484, i64 0, i32 3
  %488 = load i16*, i16** %487, align 8
  %489 = icmp ult i16* %486, %488
  br i1 %489, label %504, label %490, !prof !4

490:                                              ; preds = %483
  %491 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %484, i64 0, i32 6
  %492 = load i8, i8* %491, align 8, !range !2
  %493 = icmp eq i8 %492, 0
  br i1 %493, label %494, label %501

494:                                              ; preds = %490
  %495 = bitcast %"class.v8::internal::Utf16CharacterStream"* %484 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %496 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %495, align 8
  %497 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %496, i64 5
  %498 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %497, align 8
  %499 = tail call zeroext i1 %498(%"class.v8::internal::Utf16CharacterStream"* %484) #8
  %500 = load i16*, i16** %485, align 8
  br i1 %499, label %504, label %501

501:                                              ; preds = %494, %490
  %502 = phi i16* [ %500, %494 ], [ %486, %490 ]
  %503 = getelementptr inbounds i16, i16* %502, i64 1
  store i16* %503, i16** %485, align 8
  store i32 -1, i32* %16, align 8
  br label %2560

504:                                              ; preds = %494, %483
  %505 = phi i16* [ %486, %483 ], [ %500, %494 ]
  %506 = load i16, i16* %505, align 2
  %507 = zext i16 %506 to i32
  %508 = getelementptr inbounds i16, i16* %505, i64 1
  store i16* %508, i16** %485, align 8
  store i32 %507, i32* %16, align 8
  switch i16 %506, label %2560 [
    i16 61, label %509
    i16 62, label %564
  ]

509:                                              ; preds = %504
  %510 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %511 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %510, i64 0, i32 2
  %512 = load i16*, i16** %511, align 8
  %513 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %510, i64 0, i32 3
  %514 = load i16*, i16** %513, align 8
  %515 = icmp ult i16* %512, %514
  br i1 %515, label %530, label %516, !prof !4

516:                                              ; preds = %509
  %517 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %510, i64 0, i32 6
  %518 = load i8, i8* %517, align 8, !range !2
  %519 = icmp eq i8 %518, 0
  br i1 %519, label %520, label %527

520:                                              ; preds = %516
  %521 = bitcast %"class.v8::internal::Utf16CharacterStream"* %510 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %522 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %521, align 8
  %523 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %522, i64 5
  %524 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %523, align 8
  %525 = tail call zeroext i1 %524(%"class.v8::internal::Utf16CharacterStream"* %510) #8
  %526 = load i16*, i16** %511, align 8
  br i1 %525, label %530, label %527

527:                                              ; preds = %520, %516
  %528 = phi i16* [ %526, %520 ], [ %512, %516 ]
  %529 = getelementptr inbounds i16, i16* %528, i64 1
  store i16* %529, i16** %511, align 8
  store i32 -1, i32* %16, align 8
  br label %2560

530:                                              ; preds = %520, %509
  %531 = phi i16* [ %512, %509 ], [ %526, %520 ]
  %532 = load i16, i16* %531, align 2
  %533 = zext i16 %532 to i32
  %534 = getelementptr inbounds i16, i16* %531, i64 1
  store i16* %534, i16** %511, align 8
  store i32 %533, i32* %16, align 8
  %535 = icmp eq i16 %532, 61
  br i1 %535, label %536, label %2560

536:                                              ; preds = %530
  %537 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %538 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %537, i64 0, i32 2
  %539 = load i16*, i16** %538, align 8
  %540 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %537, i64 0, i32 3
  %541 = load i16*, i16** %540, align 8
  %542 = icmp ult i16* %539, %541
  br i1 %542, label %543, label %546, !prof !4

543:                                              ; preds = %536
  %544 = load i16, i16* %539, align 2
  %545 = zext i16 %544 to i32
  br label %560

546:                                              ; preds = %536
  %547 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %537, i64 0, i32 6
  %548 = load i8, i8* %547, align 8, !range !2
  %549 = icmp eq i8 %548, 0
  br i1 %549, label %550, label %560

550:                                              ; preds = %546
  %551 = bitcast %"class.v8::internal::Utf16CharacterStream"* %537 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %552 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %551, align 8
  %553 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %552, i64 5
  %554 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %553, align 8
  %555 = tail call zeroext i1 %554(%"class.v8::internal::Utf16CharacterStream"* %537) #8
  %556 = load i16*, i16** %538, align 8
  br i1 %555, label %557, label %560

557:                                              ; preds = %550
  %558 = load i16, i16* %556, align 2
  %559 = zext i16 %558 to i32
  br label %560

560:                                              ; preds = %557, %550, %546, %543
  %561 = phi i16* [ %539, %543 ], [ %556, %557 ], [ %539, %546 ], [ %556, %550 ]
  %562 = phi i32 [ %545, %543 ], [ %559, %557 ], [ -1, %546 ], [ -1, %550 ]
  %563 = getelementptr inbounds i16, i16* %561, i64 1
  store i16* %563, i16** %538, align 8
  store i32 %562, i32* %16, align 8
  br label %2560

564:                                              ; preds = %504
  %565 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %566 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %565, i64 0, i32 2
  %567 = load i16*, i16** %566, align 8
  %568 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %565, i64 0, i32 3
  %569 = load i16*, i16** %568, align 8
  %570 = icmp ult i16* %567, %569
  br i1 %570, label %571, label %574, !prof !4

571:                                              ; preds = %564
  %572 = load i16, i16* %567, align 2
  %573 = zext i16 %572 to i32
  br label %588

574:                                              ; preds = %564
  %575 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %565, i64 0, i32 6
  %576 = load i8, i8* %575, align 8, !range !2
  %577 = icmp eq i8 %576, 0
  br i1 %577, label %578, label %588

578:                                              ; preds = %574
  %579 = bitcast %"class.v8::internal::Utf16CharacterStream"* %565 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %580 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %579, align 8
  %581 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %580, i64 5
  %582 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %581, align 8
  %583 = tail call zeroext i1 %582(%"class.v8::internal::Utf16CharacterStream"* %565) #8
  %584 = load i16*, i16** %566, align 8
  br i1 %583, label %585, label %588

585:                                              ; preds = %578
  %586 = load i16, i16* %584, align 2
  %587 = zext i16 %586 to i32
  br label %588

588:                                              ; preds = %585, %578, %574, %571
  %589 = phi i16* [ %567, %571 ], [ %584, %585 ], [ %567, %574 ], [ %584, %578 ]
  %590 = phi i32 [ %573, %571 ], [ %587, %585 ], [ -1, %574 ], [ -1, %578 ]
  %591 = getelementptr inbounds i16, i16* %589, i64 1
  store i16* %591, i16** %566, align 8
  store i32 %590, i32* %16, align 8
  br label %2560

592:                                              ; preds = %37
  %593 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %594 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %593, i64 0, i32 2
  %595 = load i16*, i16** %594, align 8
  %596 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %593, i64 0, i32 3
  %597 = load i16*, i16** %596, align 8
  %598 = icmp ult i16* %595, %597
  br i1 %598, label %613, label %599, !prof !4

599:                                              ; preds = %592
  %600 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %593, i64 0, i32 6
  %601 = load i8, i8* %600, align 8, !range !2
  %602 = icmp eq i8 %601, 0
  br i1 %602, label %603, label %610

603:                                              ; preds = %599
  %604 = bitcast %"class.v8::internal::Utf16CharacterStream"* %593 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %605 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %604, align 8
  %606 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %605, i64 5
  %607 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %606, align 8
  %608 = tail call zeroext i1 %607(%"class.v8::internal::Utf16CharacterStream"* %593) #8
  %609 = load i16*, i16** %594, align 8
  br i1 %608, label %613, label %610

610:                                              ; preds = %603, %599
  %611 = phi i16* [ %609, %603 ], [ %595, %599 ]
  %612 = getelementptr inbounds i16, i16* %611, i64 1
  store i16* %612, i16** %594, align 8
  store i32 -1, i32* %16, align 8
  br label %2560

613:                                              ; preds = %603, %592
  %614 = phi i16* [ %595, %592 ], [ %609, %603 ]
  %615 = load i16, i16* %614, align 2
  %616 = zext i16 %615 to i32
  %617 = getelementptr inbounds i16, i16* %614, i64 1
  store i16* %617, i16** %594, align 8
  store i32 %616, i32* %16, align 8
  %618 = icmp eq i16 %615, 61
  br i1 %618, label %619, label %2560

619:                                              ; preds = %613
  %620 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %621 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %620, i64 0, i32 2
  %622 = load i16*, i16** %621, align 8
  %623 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %620, i64 0, i32 3
  %624 = load i16*, i16** %623, align 8
  %625 = icmp ult i16* %622, %624
  br i1 %625, label %640, label %626, !prof !4

626:                                              ; preds = %619
  %627 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %620, i64 0, i32 6
  %628 = load i8, i8* %627, align 8, !range !2
  %629 = icmp eq i8 %628, 0
  br i1 %629, label %630, label %637

630:                                              ; preds = %626
  %631 = bitcast %"class.v8::internal::Utf16CharacterStream"* %620 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %632 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %631, align 8
  %633 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %632, i64 5
  %634 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %633, align 8
  %635 = tail call zeroext i1 %634(%"class.v8::internal::Utf16CharacterStream"* %620) #8
  %636 = load i16*, i16** %621, align 8
  br i1 %635, label %640, label %637

637:                                              ; preds = %630, %626
  %638 = phi i16* [ %636, %630 ], [ %622, %626 ]
  %639 = getelementptr inbounds i16, i16* %638, i64 1
  store i16* %639, i16** %621, align 8
  store i32 -1, i32* %16, align 8
  br label %2560

640:                                              ; preds = %630, %619
  %641 = phi i16* [ %622, %619 ], [ %636, %630 ]
  %642 = load i16, i16* %641, align 2
  %643 = zext i16 %642 to i32
  %644 = getelementptr inbounds i16, i16* %641, i64 1
  store i16* %644, i16** %621, align 8
  store i32 %643, i32* %16, align 8
  %645 = icmp eq i16 %642, 61
  br i1 %645, label %646, label %2560

646:                                              ; preds = %640
  %647 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %648 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %647, i64 0, i32 2
  %649 = load i16*, i16** %648, align 8
  %650 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %647, i64 0, i32 3
  %651 = load i16*, i16** %650, align 8
  %652 = icmp ult i16* %649, %651
  br i1 %652, label %653, label %656, !prof !4

653:                                              ; preds = %646
  %654 = load i16, i16* %649, align 2
  %655 = zext i16 %654 to i32
  br label %670

656:                                              ; preds = %646
  %657 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %647, i64 0, i32 6
  %658 = load i8, i8* %657, align 8, !range !2
  %659 = icmp eq i8 %658, 0
  br i1 %659, label %660, label %670

660:                                              ; preds = %656
  %661 = bitcast %"class.v8::internal::Utf16CharacterStream"* %647 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %662 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %661, align 8
  %663 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %662, i64 5
  %664 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %663, align 8
  %665 = tail call zeroext i1 %664(%"class.v8::internal::Utf16CharacterStream"* %647) #8
  %666 = load i16*, i16** %648, align 8
  br i1 %665, label %667, label %670

667:                                              ; preds = %660
  %668 = load i16, i16* %666, align 2
  %669 = zext i16 %668 to i32
  br label %670

670:                                              ; preds = %667, %660, %656, %653
  %671 = phi i16* [ %649, %653 ], [ %666, %667 ], [ %649, %656 ], [ %666, %660 ]
  %672 = phi i32 [ %655, %653 ], [ %669, %667 ], [ -1, %656 ], [ -1, %660 ]
  %673 = getelementptr inbounds i16, i16* %671, i64 1
  store i16* %673, i16** %648, align 8
  store i32 %672, i32* %16, align 8
  br label %2560

674:                                              ; preds = %37
  %675 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %676 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %675, i64 0, i32 2
  %677 = load i16*, i16** %676, align 8
  %678 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %675, i64 0, i32 3
  %679 = load i16*, i16** %678, align 8
  %680 = icmp ult i16* %677, %679
  br i1 %680, label %695, label %681, !prof !4

681:                                              ; preds = %674
  %682 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %675, i64 0, i32 6
  %683 = load i8, i8* %682, align 8, !range !2
  %684 = icmp eq i8 %683, 0
  br i1 %684, label %685, label %692

685:                                              ; preds = %681
  %686 = bitcast %"class.v8::internal::Utf16CharacterStream"* %675 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %687 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %686, align 8
  %688 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %687, i64 5
  %689 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %688, align 8
  %690 = tail call zeroext i1 %689(%"class.v8::internal::Utf16CharacterStream"* %675) #8
  %691 = load i16*, i16** %676, align 8
  br i1 %690, label %695, label %692

692:                                              ; preds = %685, %681
  %693 = phi i16* [ %691, %685 ], [ %677, %681 ]
  %694 = getelementptr inbounds i16, i16* %693, i64 1
  store i16* %694, i16** %676, align 8
  store i32 -1, i32* %16, align 8
  br label %2560

695:                                              ; preds = %685, %674
  %696 = phi i16* [ %677, %674 ], [ %691, %685 ]
  %697 = load i16, i16* %696, align 2
  %698 = zext i16 %697 to i32
  %699 = getelementptr inbounds i16, i16* %696, i64 1
  store i16* %699, i16** %676, align 8
  store i32 %698, i32* %16, align 8
  switch i16 %697, label %2560 [
    i16 43, label %700
    i16 61, label %728
  ]

700:                                              ; preds = %695
  %701 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %702 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %701, i64 0, i32 2
  %703 = load i16*, i16** %702, align 8
  %704 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %701, i64 0, i32 3
  %705 = load i16*, i16** %704, align 8
  %706 = icmp ult i16* %703, %705
  br i1 %706, label %707, label %710, !prof !4

707:                                              ; preds = %700
  %708 = load i16, i16* %703, align 2
  %709 = zext i16 %708 to i32
  br label %724

710:                                              ; preds = %700
  %711 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %701, i64 0, i32 6
  %712 = load i8, i8* %711, align 8, !range !2
  %713 = icmp eq i8 %712, 0
  br i1 %713, label %714, label %724

714:                                              ; preds = %710
  %715 = bitcast %"class.v8::internal::Utf16CharacterStream"* %701 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %716 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %715, align 8
  %717 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %716, i64 5
  %718 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %717, align 8
  %719 = tail call zeroext i1 %718(%"class.v8::internal::Utf16CharacterStream"* %701) #8
  %720 = load i16*, i16** %702, align 8
  br i1 %719, label %721, label %724

721:                                              ; preds = %714
  %722 = load i16, i16* %720, align 2
  %723 = zext i16 %722 to i32
  br label %724

724:                                              ; preds = %721, %714, %710, %707
  %725 = phi i16* [ %703, %707 ], [ %720, %721 ], [ %703, %710 ], [ %720, %714 ]
  %726 = phi i32 [ %709, %707 ], [ %723, %721 ], [ -1, %710 ], [ -1, %714 ]
  %727 = getelementptr inbounds i16, i16* %725, i64 1
  store i16* %727, i16** %702, align 8
  store i32 %726, i32* %16, align 8
  br label %2560

728:                                              ; preds = %695
  %729 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %730 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %729, i64 0, i32 2
  %731 = load i16*, i16** %730, align 8
  %732 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %729, i64 0, i32 3
  %733 = load i16*, i16** %732, align 8
  %734 = icmp ult i16* %731, %733
  br i1 %734, label %735, label %738, !prof !4

735:                                              ; preds = %728
  %736 = load i16, i16* %731, align 2
  %737 = zext i16 %736 to i32
  br label %752

738:                                              ; preds = %728
  %739 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %729, i64 0, i32 6
  %740 = load i8, i8* %739, align 8, !range !2
  %741 = icmp eq i8 %740, 0
  br i1 %741, label %742, label %752

742:                                              ; preds = %738
  %743 = bitcast %"class.v8::internal::Utf16CharacterStream"* %729 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %744 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %743, align 8
  %745 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %744, i64 5
  %746 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %745, align 8
  %747 = tail call zeroext i1 %746(%"class.v8::internal::Utf16CharacterStream"* %729) #8
  %748 = load i16*, i16** %730, align 8
  br i1 %747, label %749, label %752

749:                                              ; preds = %742
  %750 = load i16, i16* %748, align 2
  %751 = zext i16 %750 to i32
  br label %752

752:                                              ; preds = %749, %742, %738, %735
  %753 = phi i16* [ %731, %735 ], [ %748, %749 ], [ %731, %738 ], [ %748, %742 ]
  %754 = phi i32 [ %737, %735 ], [ %751, %749 ], [ -1, %738 ], [ -1, %742 ]
  %755 = getelementptr inbounds i16, i16* %753, i64 1
  store i16* %755, i16** %730, align 8
  store i32 %754, i32* %16, align 8
  br label %2560

756:                                              ; preds = %37
  %757 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %758 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %757, i64 0, i32 2
  %759 = load i16*, i16** %758, align 8
  %760 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %757, i64 0, i32 3
  %761 = load i16*, i16** %760, align 8
  %762 = icmp ult i16* %759, %761
  br i1 %762, label %777, label %763, !prof !4

763:                                              ; preds = %756
  %764 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %757, i64 0, i32 6
  %765 = load i8, i8* %764, align 8, !range !2
  %766 = icmp eq i8 %765, 0
  br i1 %766, label %767, label %774

767:                                              ; preds = %763
  %768 = bitcast %"class.v8::internal::Utf16CharacterStream"* %757 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %769 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %768, align 8
  %770 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %769, i64 5
  %771 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %770, align 8
  %772 = tail call zeroext i1 %771(%"class.v8::internal::Utf16CharacterStream"* %757) #8
  %773 = load i16*, i16** %758, align 8
  br i1 %772, label %777, label %774

774:                                              ; preds = %767, %763
  %775 = phi i16* [ %773, %767 ], [ %759, %763 ]
  %776 = getelementptr inbounds i16, i16* %775, i64 1
  store i16* %776, i16** %758, align 8
  store i32 -1, i32* %16, align 8
  br label %2560

777:                                              ; preds = %767, %756
  %778 = phi i16* [ %759, %756 ], [ %773, %767 ]
  %779 = load i16, i16* %778, align 2
  %780 = zext i16 %779 to i32
  %781 = getelementptr inbounds i16, i16* %778, i64 1
  store i16* %781, i16** %758, align 8
  store i32 %780, i32* %16, align 8
  switch i16 %779, label %2560 [
    i16 45, label %782
    i16 61, label %878
  ]

782:                                              ; preds = %777
  %783 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %784 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %783, i64 0, i32 2
  %785 = load i16*, i16** %784, align 8
  %786 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %783, i64 0, i32 3
  %787 = load i16*, i16** %786, align 8
  %788 = icmp ult i16* %785, %787
  br i1 %788, label %803, label %789, !prof !4

789:                                              ; preds = %782
  %790 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %783, i64 0, i32 6
  %791 = load i8, i8* %790, align 8, !range !2
  %792 = icmp eq i8 %791, 0
  br i1 %792, label %793, label %800

793:                                              ; preds = %789
  %794 = bitcast %"class.v8::internal::Utf16CharacterStream"* %783 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %795 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %794, align 8
  %796 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %795, i64 5
  %797 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %796, align 8
  %798 = tail call zeroext i1 %797(%"class.v8::internal::Utf16CharacterStream"* %783) #8
  %799 = load i16*, i16** %784, align 8
  br i1 %798, label %803, label %800

800:                                              ; preds = %793, %789
  %801 = phi i16* [ %799, %793 ], [ %785, %789 ]
  %802 = getelementptr inbounds i16, i16* %801, i64 1
  store i16* %802, i16** %784, align 8
  store i32 -1, i32* %16, align 8
  br label %2560

803:                                              ; preds = %793, %782
  %804 = phi i16* [ %785, %782 ], [ %799, %793 ]
  %805 = load i16, i16* %804, align 2
  %806 = zext i16 %805 to i32
  %807 = getelementptr inbounds i16, i16* %804, i64 1
  store i16* %807, i16** %784, align 8
  store i32 %806, i32* %16, align 8
  %808 = icmp eq i16 %805, 62
  br i1 %808, label %809, label %2560

809:                                              ; preds = %803
  %810 = load %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"** %9, align 8
  %811 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %810, i64 0, i32 8
  %812 = load i8, i8* %811, align 4, !range !2
  %813 = icmp eq i8 %812, 0
  br i1 %813, label %2560, label %814

814:                                              ; preds = %809
  %815 = load i32, i32* %17, align 4
  %816 = and i32 %815, 32
  %817 = icmp eq i32 %816, 0
  %818 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  br i1 %817, label %841, label %819

819:                                              ; preds = %814
  %820 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %818, i64 0, i32 4
  %821 = load i64, i64* %820, align 8
  %822 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %818, i64 0, i32 2
  %823 = bitcast i16** %822 to i64*
  %824 = load i64, i64* %823, align 8
  %825 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %818, i64 0, i32 1
  %826 = bitcast i16** %825 to i64*
  %827 = load i64, i64* %826, align 8
  %828 = sub i64 %824, %827
  %829 = lshr exact i64 %828, 1
  %830 = add i64 %829, %821
  %831 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 14
  %832 = load i32, i32* %831, align 4
  %833 = icmp eq i32 %832, 0
  br i1 %833, label %834, label %2560

834:                                              ; preds = %819
  %835 = add i64 %830, 4294967295
  store i32 292, i32* %831, align 4
  %836 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 15
  %837 = bitcast %"struct.v8::internal::Scanner::Location"* %836 to i64*
  %838 = shl i64 %830, 32
  %839 = and i64 %835, 4294967295
  %840 = or i64 %839, %838
  store i64 %840, i64* %837, align 8
  br label %2560

841:                                              ; preds = %814
  %842 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %818, i64 0, i32 2
  %843 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %818, i64 0, i32 3
  %844 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %818, i64 0, i32 6
  %845 = bitcast %"class.v8::internal::Utf16CharacterStream"* %818 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  br label %846

846:                                              ; preds = %862, %841
  %847 = load i16*, i16** %842, align 8
  %848 = load i16*, i16** %843, align 8
  %849 = icmp eq i16* %847, %848
  br i1 %849, label %856, label %850

850:                                              ; preds = %846, %853
  %851 = phi i16* [ %854, %853 ], [ %847, %846 ]
  %852 = load i16, i16* %851, align 2
  switch i16 %852, label %853 [
    i16 8232, label %856
    i16 13, label %856
    i16 10, label %856
    i16 8233, label %856
  ]

853:                                              ; preds = %850
  %854 = getelementptr inbounds i16, i16* %851, i64 1
  %855 = icmp eq i16* %854, %848
  br i1 %855, label %859, label %850

856:                                              ; preds = %850, %850, %850, %850, %846
  %857 = phi i16* [ %847, %846 ], [ %851, %850 ], [ %851, %850 ], [ %851, %850 ], [ %851, %850 ]
  %858 = icmp eq i16* %857, %848
  br i1 %858, label %859, label %872

859:                                              ; preds = %853, %856
  store i16* %848, i16** %842, align 8
  %860 = load i8, i8* %844, align 8, !range !2
  %861 = icmp eq i8 %860, 0
  br i1 %861, label %862, label %869

862:                                              ; preds = %859
  %863 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %845, align 8
  %864 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %863, i64 5
  %865 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %864, align 8
  %866 = tail call zeroext i1 %865(%"class.v8::internal::Utf16CharacterStream"* %818) #8
  br i1 %866, label %846, label %867

867:                                              ; preds = %862
  %868 = load i16*, i16** %842, align 8
  br label %869

869:                                              ; preds = %859, %867
  %870 = phi i16* [ %868, %867 ], [ %848, %859 ]
  %871 = getelementptr inbounds i16, i16* %870, i64 1
  store i16* %871, i16** %842, align 8
  br label %876

872:                                              ; preds = %856
  %873 = getelementptr inbounds i16, i16* %857, i64 1
  store i16* %873, i16** %842, align 8
  %874 = load i16, i16* %857, align 2
  %875 = zext i16 %874 to i32
  br label %876

876:                                              ; preds = %872, %869
  %877 = phi i32 [ %875, %872 ], [ -1, %869 ]
  store i32 %877, i32* %16, align 8
  br label %2558

878:                                              ; preds = %777
  %879 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %880 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %879, i64 0, i32 2
  %881 = load i16*, i16** %880, align 8
  %882 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %879, i64 0, i32 3
  %883 = load i16*, i16** %882, align 8
  %884 = icmp ult i16* %881, %883
  br i1 %884, label %885, label %888, !prof !4

885:                                              ; preds = %878
  %886 = load i16, i16* %881, align 2
  %887 = zext i16 %886 to i32
  br label %902

888:                                              ; preds = %878
  %889 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %879, i64 0, i32 6
  %890 = load i8, i8* %889, align 8, !range !2
  %891 = icmp eq i8 %890, 0
  br i1 %891, label %892, label %902

892:                                              ; preds = %888
  %893 = bitcast %"class.v8::internal::Utf16CharacterStream"* %879 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %894 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %893, align 8
  %895 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %894, i64 5
  %896 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %895, align 8
  %897 = tail call zeroext i1 %896(%"class.v8::internal::Utf16CharacterStream"* %879) #8
  %898 = load i16*, i16** %880, align 8
  br i1 %897, label %899, label %902

899:                                              ; preds = %892
  %900 = load i16, i16* %898, align 2
  %901 = zext i16 %900 to i32
  br label %902

902:                                              ; preds = %899, %892, %888, %885
  %903 = phi i16* [ %881, %885 ], [ %898, %899 ], [ %881, %888 ], [ %898, %892 ]
  %904 = phi i32 [ %887, %885 ], [ %901, %899 ], [ -1, %888 ], [ -1, %892 ]
  %905 = getelementptr inbounds i16, i16* %903, i64 1
  store i16* %905, i16** %880, align 8
  store i32 %904, i32* %16, align 8
  br label %2560

906:                                              ; preds = %37
  %907 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %908 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %907, i64 0, i32 2
  %909 = load i16*, i16** %908, align 8
  %910 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %907, i64 0, i32 3
  %911 = load i16*, i16** %910, align 8
  %912 = icmp ult i16* %909, %911
  br i1 %912, label %927, label %913, !prof !4

913:                                              ; preds = %906
  %914 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %907, i64 0, i32 6
  %915 = load i8, i8* %914, align 8, !range !2
  %916 = icmp eq i8 %915, 0
  br i1 %916, label %917, label %924

917:                                              ; preds = %913
  %918 = bitcast %"class.v8::internal::Utf16CharacterStream"* %907 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %919 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %918, align 8
  %920 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %919, i64 5
  %921 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %920, align 8
  %922 = tail call zeroext i1 %921(%"class.v8::internal::Utf16CharacterStream"* %907) #8
  %923 = load i16*, i16** %908, align 8
  br i1 %922, label %927, label %924

924:                                              ; preds = %917, %913
  %925 = phi i16* [ %923, %917 ], [ %909, %913 ]
  %926 = getelementptr inbounds i16, i16* %925, i64 1
  store i16* %926, i16** %908, align 8
  store i32 -1, i32* %16, align 8
  br label %2560

927:                                              ; preds = %917, %906
  %928 = phi i16* [ %909, %906 ], [ %923, %917 ]
  %929 = load i16, i16* %928, align 2
  %930 = zext i16 %929 to i32
  %931 = getelementptr inbounds i16, i16* %928, i64 1
  store i16* %931, i16** %908, align 8
  store i32 %930, i32* %16, align 8
  switch i16 %929, label %2560 [
    i16 42, label %932
    i16 61, label %987
  ]

932:                                              ; preds = %927
  %933 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %934 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %933, i64 0, i32 2
  %935 = load i16*, i16** %934, align 8
  %936 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %933, i64 0, i32 3
  %937 = load i16*, i16** %936, align 8
  %938 = icmp ult i16* %935, %937
  br i1 %938, label %953, label %939, !prof !4

939:                                              ; preds = %932
  %940 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %933, i64 0, i32 6
  %941 = load i8, i8* %940, align 8, !range !2
  %942 = icmp eq i8 %941, 0
  br i1 %942, label %943, label %950

943:                                              ; preds = %939
  %944 = bitcast %"class.v8::internal::Utf16CharacterStream"* %933 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %945 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %944, align 8
  %946 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %945, i64 5
  %947 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %946, align 8
  %948 = tail call zeroext i1 %947(%"class.v8::internal::Utf16CharacterStream"* %933) #8
  %949 = load i16*, i16** %934, align 8
  br i1 %948, label %953, label %950

950:                                              ; preds = %943, %939
  %951 = phi i16* [ %949, %943 ], [ %935, %939 ]
  %952 = getelementptr inbounds i16, i16* %951, i64 1
  store i16* %952, i16** %934, align 8
  store i32 -1, i32* %16, align 8
  br label %2560

953:                                              ; preds = %943, %932
  %954 = phi i16* [ %935, %932 ], [ %949, %943 ]
  %955 = load i16, i16* %954, align 2
  %956 = zext i16 %955 to i32
  %957 = getelementptr inbounds i16, i16* %954, i64 1
  store i16* %957, i16** %934, align 8
  store i32 %956, i32* %16, align 8
  %958 = icmp eq i16 %955, 61
  br i1 %958, label %959, label %2560

959:                                              ; preds = %953
  %960 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %961 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %960, i64 0, i32 2
  %962 = load i16*, i16** %961, align 8
  %963 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %960, i64 0, i32 3
  %964 = load i16*, i16** %963, align 8
  %965 = icmp ult i16* %962, %964
  br i1 %965, label %966, label %969, !prof !4

966:                                              ; preds = %959
  %967 = load i16, i16* %962, align 2
  %968 = zext i16 %967 to i32
  br label %983

969:                                              ; preds = %959
  %970 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %960, i64 0, i32 6
  %971 = load i8, i8* %970, align 8, !range !2
  %972 = icmp eq i8 %971, 0
  br i1 %972, label %973, label %983

973:                                              ; preds = %969
  %974 = bitcast %"class.v8::internal::Utf16CharacterStream"* %960 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %975 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %974, align 8
  %976 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %975, i64 5
  %977 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %976, align 8
  %978 = tail call zeroext i1 %977(%"class.v8::internal::Utf16CharacterStream"* %960) #8
  %979 = load i16*, i16** %961, align 8
  br i1 %978, label %980, label %983

980:                                              ; preds = %973
  %981 = load i16, i16* %979, align 2
  %982 = zext i16 %981 to i32
  br label %983

983:                                              ; preds = %980, %973, %969, %966
  %984 = phi i16* [ %962, %966 ], [ %979, %980 ], [ %962, %969 ], [ %979, %973 ]
  %985 = phi i32 [ %968, %966 ], [ %982, %980 ], [ -1, %969 ], [ -1, %973 ]
  %986 = getelementptr inbounds i16, i16* %984, i64 1
  store i16* %986, i16** %961, align 8
  store i32 %985, i32* %16, align 8
  br label %2560

987:                                              ; preds = %927
  %988 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %989 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %988, i64 0, i32 2
  %990 = load i16*, i16** %989, align 8
  %991 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %988, i64 0, i32 3
  %992 = load i16*, i16** %991, align 8
  %993 = icmp ult i16* %990, %992
  br i1 %993, label %994, label %997, !prof !4

994:                                              ; preds = %987
  %995 = load i16, i16* %990, align 2
  %996 = zext i16 %995 to i32
  br label %1011

997:                                              ; preds = %987
  %998 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %988, i64 0, i32 6
  %999 = load i8, i8* %998, align 8, !range !2
  %1000 = icmp eq i8 %999, 0
  br i1 %1000, label %1001, label %1011

1001:                                             ; preds = %997
  %1002 = bitcast %"class.v8::internal::Utf16CharacterStream"* %988 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %1003 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1002, align 8
  %1004 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1003, i64 5
  %1005 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1004, align 8
  %1006 = tail call zeroext i1 %1005(%"class.v8::internal::Utf16CharacterStream"* %988) #8
  %1007 = load i16*, i16** %989, align 8
  br i1 %1006, label %1008, label %1011

1008:                                             ; preds = %1001
  %1009 = load i16, i16* %1007, align 2
  %1010 = zext i16 %1009 to i32
  br label %1011

1011:                                             ; preds = %1008, %1001, %997, %994
  %1012 = phi i16* [ %990, %994 ], [ %1007, %1008 ], [ %990, %997 ], [ %1007, %1001 ]
  %1013 = phi i32 [ %996, %994 ], [ %1010, %1008 ], [ -1, %997 ], [ -1, %1001 ]
  %1014 = getelementptr inbounds i16, i16* %1012, i64 1
  store i16* %1014, i16** %989, align 8
  store i32 %1013, i32* %16, align 8
  br label %2560

1015:                                             ; preds = %37
  %1016 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %1017 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1016, i64 0, i32 2
  %1018 = load i16*, i16** %1017, align 8
  %1019 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1016, i64 0, i32 3
  %1020 = load i16*, i16** %1019, align 8
  %1021 = icmp ult i16* %1018, %1020
  br i1 %1021, label %1036, label %1022, !prof !4

1022:                                             ; preds = %1015
  %1023 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1016, i64 0, i32 6
  %1024 = load i8, i8* %1023, align 8, !range !2
  %1025 = icmp eq i8 %1024, 0
  br i1 %1025, label %1026, label %1033

1026:                                             ; preds = %1022
  %1027 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1016 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %1028 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1027, align 8
  %1029 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1028, i64 5
  %1030 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1029, align 8
  %1031 = tail call zeroext i1 %1030(%"class.v8::internal::Utf16CharacterStream"* %1016) #8
  %1032 = load i16*, i16** %1017, align 8
  br i1 %1031, label %1036, label %1033

1033:                                             ; preds = %1026, %1022
  %1034 = phi i16* [ %1032, %1026 ], [ %1018, %1022 ]
  %1035 = getelementptr inbounds i16, i16* %1034, i64 1
  store i16* %1035, i16** %1017, align 8
  store i32 -1, i32* %16, align 8
  br label %2560

1036:                                             ; preds = %1026, %1015
  %1037 = phi i16* [ %1018, %1015 ], [ %1032, %1026 ]
  %1038 = load i16, i16* %1037, align 2
  %1039 = zext i16 %1038 to i32
  %1040 = getelementptr inbounds i16, i16* %1037, i64 1
  store i16* %1040, i16** %1017, align 8
  store i32 %1039, i32* %16, align 8
  %1041 = icmp eq i16 %1038, 61
  br i1 %1041, label %1042, label %2560

1042:                                             ; preds = %1036
  %1043 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %1044 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1043, i64 0, i32 2
  %1045 = load i16*, i16** %1044, align 8
  %1046 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1043, i64 0, i32 3
  %1047 = load i16*, i16** %1046, align 8
  %1048 = icmp ult i16* %1045, %1047
  br i1 %1048, label %1049, label %1052, !prof !4

1049:                                             ; preds = %1042
  %1050 = load i16, i16* %1045, align 2
  %1051 = zext i16 %1050 to i32
  br label %1066

1052:                                             ; preds = %1042
  %1053 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1043, i64 0, i32 6
  %1054 = load i8, i8* %1053, align 8, !range !2
  %1055 = icmp eq i8 %1054, 0
  br i1 %1055, label %1056, label %1066

1056:                                             ; preds = %1052
  %1057 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1043 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %1058 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1057, align 8
  %1059 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1058, i64 5
  %1060 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1059, align 8
  %1061 = tail call zeroext i1 %1060(%"class.v8::internal::Utf16CharacterStream"* %1043) #8
  %1062 = load i16*, i16** %1044, align 8
  br i1 %1061, label %1063, label %1066

1063:                                             ; preds = %1056
  %1064 = load i16, i16* %1062, align 2
  %1065 = zext i16 %1064 to i32
  br label %1066

1066:                                             ; preds = %1063, %1056, %1052, %1049
  %1067 = phi i16* [ %1045, %1049 ], [ %1062, %1063 ], [ %1045, %1052 ], [ %1062, %1056 ]
  %1068 = phi i32 [ %1051, %1049 ], [ %1065, %1063 ], [ -1, %1052 ], [ -1, %1056 ]
  %1069 = getelementptr inbounds i16, i16* %1067, i64 1
  store i16* %1069, i16** %1044, align 8
  store i32 %1068, i32* %16, align 8
  br label %2560

1070:                                             ; preds = %37
  %1071 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %1072 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1071, i64 0, i32 2
  %1073 = load i16*, i16** %1072, align 8
  %1074 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1071, i64 0, i32 3
  %1075 = load i16*, i16** %1074, align 8
  %1076 = icmp ult i16* %1073, %1075
  br i1 %1076, label %1091, label %1077, !prof !4

1077:                                             ; preds = %1070
  %1078 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1071, i64 0, i32 6
  %1079 = load i8, i8* %1078, align 8, !range !2
  %1080 = icmp eq i8 %1079, 0
  br i1 %1080, label %1081, label %1088

1081:                                             ; preds = %1077
  %1082 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1071 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %1083 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1082, align 8
  %1084 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1083, i64 5
  %1085 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1084, align 8
  %1086 = tail call zeroext i1 %1085(%"class.v8::internal::Utf16CharacterStream"* %1071) #8
  %1087 = load i16*, i16** %1072, align 8
  br i1 %1086, label %1091, label %1088

1088:                                             ; preds = %1081, %1077
  %1089 = phi i16* [ %1087, %1081 ], [ %1073, %1077 ]
  %1090 = getelementptr inbounds i16, i16* %1089, i64 1
  store i16* %1090, i16** %1072, align 8
  store i32 -1, i32* %16, align 8
  br label %2560

1091:                                             ; preds = %1081, %1070
  %1092 = phi i16* [ %1073, %1070 ], [ %1087, %1081 ]
  %1093 = load i16, i16* %1092, align 2
  %1094 = zext i16 %1093 to i32
  %1095 = getelementptr inbounds i16, i16* %1092, i64 1
  store i16* %1095, i16** %1072, align 8
  store i32 %1094, i32* %16, align 8
  switch i16 %1093, label %2560 [
    i16 47, label %1096
    i16 42, label %1250
    i16 61, label %1252
  ]

1096:                                             ; preds = %1091
  %1097 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %1098 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1097, i64 0, i32 2
  %1099 = load i16*, i16** %1098, align 8
  %1100 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1097, i64 0, i32 3
  %1101 = load i16*, i16** %1100, align 8
  %1102 = icmp ult i16* %1099, %1101
  br i1 %1102, label %1115, label %1103, !prof !4

1103:                                             ; preds = %1096
  %1104 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1097, i64 0, i32 6
  %1105 = load i8, i8* %1104, align 8, !range !2
  %1106 = icmp eq i8 %1105, 0
  br i1 %1106, label %1107, label %1212

1107:                                             ; preds = %1103
  %1108 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1097 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %1109 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1108, align 8
  %1110 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1109, i64 5
  %1111 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1110, align 8
  %1112 = tail call zeroext i1 %1111(%"class.v8::internal::Utf16CharacterStream"* %1097) #8
  br i1 %1112, label %1113, label %1212

1113:                                             ; preds = %1107
  %1114 = load i16*, i16** %1098, align 8
  br label %1115

1115:                                             ; preds = %1113, %1096
  %1116 = phi i16* [ %1114, %1113 ], [ %1099, %1096 ]
  %1117 = load i16, i16* %1116, align 2
  switch i16 %1117, label %1212 [
    i16 64, label %1118
    i16 35, label %1118
  ]

1118:                                             ; preds = %1115, %1115
  %1119 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %1120 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1119, i64 0, i32 2
  %1121 = load i16*, i16** %1120, align 8
  %1122 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1119, i64 0, i32 3
  %1123 = load i16*, i16** %1122, align 8
  %1124 = icmp ult i16* %1121, %1123
  br i1 %1124, label %1125, label %1128, !prof !4

1125:                                             ; preds = %1118
  %1126 = load i16, i16* %1121, align 2
  %1127 = zext i16 %1126 to i32
  br label %1142

1128:                                             ; preds = %1118
  %1129 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1119, i64 0, i32 6
  %1130 = load i8, i8* %1129, align 8, !range !2
  %1131 = icmp eq i8 %1130, 0
  br i1 %1131, label %1132, label %1142

1132:                                             ; preds = %1128
  %1133 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1119 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %1134 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1133, align 8
  %1135 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1134, i64 5
  %1136 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1135, align 8
  %1137 = tail call zeroext i1 %1136(%"class.v8::internal::Utf16CharacterStream"* %1119) #8
  %1138 = load i16*, i16** %1120, align 8
  br i1 %1137, label %1139, label %1142

1139:                                             ; preds = %1132
  %1140 = load i16, i16* %1138, align 2
  %1141 = zext i16 %1140 to i32
  br label %1142

1142:                                             ; preds = %1139, %1132, %1128, %1125
  %1143 = phi i16* [ %1121, %1125 ], [ %1138, %1139 ], [ %1121, %1128 ], [ %1138, %1132 ]
  %1144 = phi i32 [ %1127, %1125 ], [ %1141, %1139 ], [ -1, %1128 ], [ -1, %1132 ]
  %1145 = getelementptr inbounds i16, i16* %1143, i64 1
  store i16* %1145, i16** %1120, align 8
  store i32 %1144, i32* %16, align 8
  %1146 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %1147 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1146, i64 0, i32 2
  %1148 = load i16*, i16** %1147, align 8
  %1149 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1146, i64 0, i32 3
  %1150 = load i16*, i16** %1149, align 8
  %1151 = icmp ult i16* %1148, %1150
  br i1 %1151, label %1152, label %1155, !prof !4

1152:                                             ; preds = %1142
  %1153 = load i16, i16* %1148, align 2
  %1154 = zext i16 %1153 to i32
  br label %1169

1155:                                             ; preds = %1142
  %1156 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1146, i64 0, i32 6
  %1157 = load i8, i8* %1156, align 8, !range !2
  %1158 = icmp eq i8 %1157, 0
  br i1 %1158, label %1159, label %1169

1159:                                             ; preds = %1155
  %1160 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1146 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %1161 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1160, align 8
  %1162 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1161, i64 5
  %1163 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1162, align 8
  %1164 = tail call zeroext i1 %1163(%"class.v8::internal::Utf16CharacterStream"* %1146) #8
  %1165 = load i16*, i16** %1147, align 8
  br i1 %1164, label %1166, label %1169

1166:                                             ; preds = %1159
  %1167 = load i16, i16* %1165, align 2
  %1168 = zext i16 %1167 to i32
  br label %1169

1169:                                             ; preds = %1166, %1159, %1155, %1152
  %1170 = phi i16* [ %1148, %1152 ], [ %1165, %1166 ], [ %1148, %1155 ], [ %1165, %1159 ]
  %1171 = phi i32 [ %1154, %1152 ], [ %1168, %1166 ], [ -1, %1155 ], [ -1, %1159 ]
  %1172 = getelementptr inbounds i16, i16* %1170, i64 1
  store i16* %1172, i16** %1147, align 8
  store i32 %1171, i32* %16, align 8
  tail call void @_ZN2v88internal7Scanner26TryToParseSourceURLCommentEv(%"class.v8::internal::Scanner"* %0) #8
  %1173 = load i32, i32* %16, align 8
  switch i32 %1173, label %1174 [
    i32 8232, label %2558
    i32 13, label %2558
    i32 10, label %2558
    i32 8233, label %2558
    i32 -1, label %2558
  ]

1174:                                             ; preds = %1169
  %1175 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %1176 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1175, i64 0, i32 2
  %1177 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1175, i64 0, i32 3
  %1178 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1175, i64 0, i32 6
  %1179 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1175 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  br label %1180

1180:                                             ; preds = %1196, %1174
  %1181 = load i16*, i16** %1176, align 8
  %1182 = load i16*, i16** %1177, align 8
  %1183 = icmp eq i16* %1181, %1182
  br i1 %1183, label %1190, label %1184

1184:                                             ; preds = %1180, %1187
  %1185 = phi i16* [ %1188, %1187 ], [ %1181, %1180 ]
  %1186 = load i16, i16* %1185, align 2
  switch i16 %1186, label %1187 [
    i16 8232, label %1190
    i16 13, label %1190
    i16 10, label %1190
    i16 8233, label %1190
  ]

1187:                                             ; preds = %1184
  %1188 = getelementptr inbounds i16, i16* %1185, i64 1
  %1189 = icmp eq i16* %1188, %1182
  br i1 %1189, label %1193, label %1184

1190:                                             ; preds = %1184, %1184, %1184, %1184, %1180
  %1191 = phi i16* [ %1181, %1180 ], [ %1185, %1184 ], [ %1185, %1184 ], [ %1185, %1184 ], [ %1185, %1184 ]
  %1192 = icmp eq i16* %1191, %1182
  br i1 %1192, label %1193, label %1206

1193:                                             ; preds = %1187, %1190
  store i16* %1182, i16** %1176, align 8
  %1194 = load i8, i8* %1178, align 8, !range !2
  %1195 = icmp eq i8 %1194, 0
  br i1 %1195, label %1196, label %1203

1196:                                             ; preds = %1193
  %1197 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1179, align 8
  %1198 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1197, i64 5
  %1199 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1198, align 8
  %1200 = tail call zeroext i1 %1199(%"class.v8::internal::Utf16CharacterStream"* %1175) #8
  br i1 %1200, label %1180, label %1201

1201:                                             ; preds = %1196
  %1202 = load i16*, i16** %1176, align 8
  br label %1203

1203:                                             ; preds = %1193, %1201
  %1204 = phi i16* [ %1202, %1201 ], [ %1182, %1193 ]
  %1205 = getelementptr inbounds i16, i16* %1204, i64 1
  store i16* %1205, i16** %1176, align 8
  br label %1210

1206:                                             ; preds = %1190
  %1207 = getelementptr inbounds i16, i16* %1191, i64 1
  store i16* %1207, i16** %1176, align 8
  %1208 = load i16, i16* %1191, align 2
  %1209 = zext i16 %1208 to i32
  br label %1210

1210:                                             ; preds = %1206, %1203
  %1211 = phi i32 [ %1209, %1206 ], [ -1, %1203 ]
  store i32 %1211, i32* %16, align 8
  br label %2558

1212:                                             ; preds = %1115, %1107, %1103
  %1213 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %1214 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1213, i64 0, i32 2
  %1215 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1213, i64 0, i32 3
  %1216 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1213, i64 0, i32 6
  %1217 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1213 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  br label %1218

1218:                                             ; preds = %1234, %1212
  %1219 = load i16*, i16** %1214, align 8
  %1220 = load i16*, i16** %1215, align 8
  %1221 = icmp eq i16* %1219, %1220
  br i1 %1221, label %1228, label %1222

1222:                                             ; preds = %1218, %1225
  %1223 = phi i16* [ %1226, %1225 ], [ %1219, %1218 ]
  %1224 = load i16, i16* %1223, align 2
  switch i16 %1224, label %1225 [
    i16 8232, label %1228
    i16 13, label %1228
    i16 10, label %1228
    i16 8233, label %1228
  ]

1225:                                             ; preds = %1222
  %1226 = getelementptr inbounds i16, i16* %1223, i64 1
  %1227 = icmp eq i16* %1226, %1220
  br i1 %1227, label %1231, label %1222

1228:                                             ; preds = %1222, %1222, %1222, %1222, %1218
  %1229 = phi i16* [ %1219, %1218 ], [ %1223, %1222 ], [ %1223, %1222 ], [ %1223, %1222 ], [ %1223, %1222 ]
  %1230 = icmp eq i16* %1229, %1220
  br i1 %1230, label %1231, label %1244

1231:                                             ; preds = %1225, %1228
  store i16* %1220, i16** %1214, align 8
  %1232 = load i8, i8* %1216, align 8, !range !2
  %1233 = icmp eq i8 %1232, 0
  br i1 %1233, label %1234, label %1241

1234:                                             ; preds = %1231
  %1235 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1217, align 8
  %1236 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1235, i64 5
  %1237 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1236, align 8
  %1238 = tail call zeroext i1 %1237(%"class.v8::internal::Utf16CharacterStream"* %1213) #8
  br i1 %1238, label %1218, label %1239

1239:                                             ; preds = %1234
  %1240 = load i16*, i16** %1214, align 8
  br label %1241

1241:                                             ; preds = %1231, %1239
  %1242 = phi i16* [ %1240, %1239 ], [ %1220, %1231 ]
  %1243 = getelementptr inbounds i16, i16* %1242, i64 1
  store i16* %1243, i16** %1214, align 8
  br label %1248

1244:                                             ; preds = %1228
  %1245 = getelementptr inbounds i16, i16* %1229, i64 1
  store i16* %1245, i16** %1214, align 8
  %1246 = load i16, i16* %1229, align 2
  %1247 = zext i16 %1246 to i32
  br label %1248

1248:                                             ; preds = %1244, %1241
  %1249 = phi i32 [ %1247, %1244 ], [ -1, %1241 ]
  store i32 %1249, i32* %16, align 8
  br label %2558

1250:                                             ; preds = %1091
  %1251 = tail call zeroext i8 @_ZN2v88internal7Scanner20SkipMultiLineCommentEv(%"class.v8::internal::Scanner"* %0) #8
  br label %2555

1252:                                             ; preds = %1091
  %1253 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %1254 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1253, i64 0, i32 2
  %1255 = load i16*, i16** %1254, align 8
  %1256 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1253, i64 0, i32 3
  %1257 = load i16*, i16** %1256, align 8
  %1258 = icmp ult i16* %1255, %1257
  br i1 %1258, label %1259, label %1262, !prof !4

1259:                                             ; preds = %1252
  %1260 = load i16, i16* %1255, align 2
  %1261 = zext i16 %1260 to i32
  br label %1276

1262:                                             ; preds = %1252
  %1263 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1253, i64 0, i32 6
  %1264 = load i8, i8* %1263, align 8, !range !2
  %1265 = icmp eq i8 %1264, 0
  br i1 %1265, label %1266, label %1276

1266:                                             ; preds = %1262
  %1267 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1253 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %1268 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1267, align 8
  %1269 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1268, i64 5
  %1270 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1269, align 8
  %1271 = tail call zeroext i1 %1270(%"class.v8::internal::Utf16CharacterStream"* %1253) #8
  %1272 = load i16*, i16** %1254, align 8
  br i1 %1271, label %1273, label %1276

1273:                                             ; preds = %1266
  %1274 = load i16, i16* %1272, align 2
  %1275 = zext i16 %1274 to i32
  br label %1276

1276:                                             ; preds = %1273, %1266, %1262, %1259
  %1277 = phi i16* [ %1255, %1259 ], [ %1272, %1273 ], [ %1255, %1262 ], [ %1272, %1266 ]
  %1278 = phi i32 [ %1261, %1259 ], [ %1275, %1273 ], [ -1, %1262 ], [ -1, %1266 ]
  %1279 = getelementptr inbounds i16, i16* %1277, i64 1
  store i16* %1279, i16** %1254, align 8
  store i32 %1278, i32* %16, align 8
  br label %2560

1280:                                             ; preds = %37
  %1281 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %1282 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1281, i64 0, i32 2
  %1283 = load i16*, i16** %1282, align 8
  %1284 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1281, i64 0, i32 3
  %1285 = load i16*, i16** %1284, align 8
  %1286 = icmp ult i16* %1283, %1285
  br i1 %1286, label %1301, label %1287, !prof !4

1287:                                             ; preds = %1280
  %1288 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1281, i64 0, i32 6
  %1289 = load i8, i8* %1288, align 8, !range !2
  %1290 = icmp eq i8 %1289, 0
  br i1 %1290, label %1291, label %1298

1291:                                             ; preds = %1287
  %1292 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1281 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %1293 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1292, align 8
  %1294 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1293, i64 5
  %1295 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1294, align 8
  %1296 = tail call zeroext i1 %1295(%"class.v8::internal::Utf16CharacterStream"* %1281) #8
  %1297 = load i16*, i16** %1282, align 8
  br i1 %1296, label %1301, label %1298

1298:                                             ; preds = %1291, %1287
  %1299 = phi i16* [ %1297, %1291 ], [ %1283, %1287 ]
  %1300 = getelementptr inbounds i16, i16* %1299, i64 1
  store i16* %1300, i16** %1282, align 8
  store i32 -1, i32* %16, align 8
  br label %2560

1301:                                             ; preds = %1291, %1280
  %1302 = phi i16* [ %1283, %1280 ], [ %1297, %1291 ]
  %1303 = load i16, i16* %1302, align 2
  %1304 = zext i16 %1303 to i32
  %1305 = getelementptr inbounds i16, i16* %1302, i64 1
  store i16* %1305, i16** %1282, align 8
  store i32 %1304, i32* %16, align 8
  switch i16 %1303, label %2560 [
    i16 38, label %1306
    i16 61, label %1361
  ]

1306:                                             ; preds = %1301
  %1307 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %1308 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1307, i64 0, i32 2
  %1309 = load i16*, i16** %1308, align 8
  %1310 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1307, i64 0, i32 3
  %1311 = load i16*, i16** %1310, align 8
  %1312 = icmp ult i16* %1309, %1311
  br i1 %1312, label %1327, label %1313, !prof !4

1313:                                             ; preds = %1306
  %1314 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1307, i64 0, i32 6
  %1315 = load i8, i8* %1314, align 8, !range !2
  %1316 = icmp eq i8 %1315, 0
  br i1 %1316, label %1317, label %1324

1317:                                             ; preds = %1313
  %1318 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1307 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %1319 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1318, align 8
  %1320 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1319, i64 5
  %1321 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1320, align 8
  %1322 = tail call zeroext i1 %1321(%"class.v8::internal::Utf16CharacterStream"* %1307) #8
  %1323 = load i16*, i16** %1308, align 8
  br i1 %1322, label %1327, label %1324

1324:                                             ; preds = %1317, %1313
  %1325 = phi i16* [ %1323, %1317 ], [ %1309, %1313 ]
  %1326 = getelementptr inbounds i16, i16* %1325, i64 1
  store i16* %1326, i16** %1308, align 8
  store i32 -1, i32* %16, align 8
  br label %2560

1327:                                             ; preds = %1317, %1306
  %1328 = phi i16* [ %1309, %1306 ], [ %1323, %1317 ]
  %1329 = load i16, i16* %1328, align 2
  %1330 = zext i16 %1329 to i32
  %1331 = getelementptr inbounds i16, i16* %1328, i64 1
  store i16* %1331, i16** %1308, align 8
  store i32 %1330, i32* %16, align 8
  %1332 = icmp eq i16 %1329, 61
  br i1 %1332, label %1333, label %2560

1333:                                             ; preds = %1327
  %1334 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %1335 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1334, i64 0, i32 2
  %1336 = load i16*, i16** %1335, align 8
  %1337 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1334, i64 0, i32 3
  %1338 = load i16*, i16** %1337, align 8
  %1339 = icmp ult i16* %1336, %1338
  br i1 %1339, label %1340, label %1343, !prof !4

1340:                                             ; preds = %1333
  %1341 = load i16, i16* %1336, align 2
  %1342 = zext i16 %1341 to i32
  br label %1357

1343:                                             ; preds = %1333
  %1344 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1334, i64 0, i32 6
  %1345 = load i8, i8* %1344, align 8, !range !2
  %1346 = icmp eq i8 %1345, 0
  br i1 %1346, label %1347, label %1357

1347:                                             ; preds = %1343
  %1348 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1334 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %1349 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1348, align 8
  %1350 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1349, i64 5
  %1351 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1350, align 8
  %1352 = tail call zeroext i1 %1351(%"class.v8::internal::Utf16CharacterStream"* %1334) #8
  %1353 = load i16*, i16** %1335, align 8
  br i1 %1352, label %1354, label %1357

1354:                                             ; preds = %1347
  %1355 = load i16, i16* %1353, align 2
  %1356 = zext i16 %1355 to i32
  br label %1357

1357:                                             ; preds = %1354, %1347, %1343, %1340
  %1358 = phi i16* [ %1336, %1340 ], [ %1353, %1354 ], [ %1336, %1343 ], [ %1353, %1347 ]
  %1359 = phi i32 [ %1342, %1340 ], [ %1356, %1354 ], [ -1, %1343 ], [ -1, %1347 ]
  %1360 = getelementptr inbounds i16, i16* %1358, i64 1
  store i16* %1360, i16** %1335, align 8
  store i32 %1359, i32* %16, align 8
  br label %2560

1361:                                             ; preds = %1301
  %1362 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %1363 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1362, i64 0, i32 2
  %1364 = load i16*, i16** %1363, align 8
  %1365 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1362, i64 0, i32 3
  %1366 = load i16*, i16** %1365, align 8
  %1367 = icmp ult i16* %1364, %1366
  br i1 %1367, label %1368, label %1371, !prof !4

1368:                                             ; preds = %1361
  %1369 = load i16, i16* %1364, align 2
  %1370 = zext i16 %1369 to i32
  br label %1385

1371:                                             ; preds = %1361
  %1372 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1362, i64 0, i32 6
  %1373 = load i8, i8* %1372, align 8, !range !2
  %1374 = icmp eq i8 %1373, 0
  br i1 %1374, label %1375, label %1385

1375:                                             ; preds = %1371
  %1376 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1362 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %1377 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1376, align 8
  %1378 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1377, i64 5
  %1379 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1378, align 8
  %1380 = tail call zeroext i1 %1379(%"class.v8::internal::Utf16CharacterStream"* %1362) #8
  %1381 = load i16*, i16** %1363, align 8
  br i1 %1380, label %1382, label %1385

1382:                                             ; preds = %1375
  %1383 = load i16, i16* %1381, align 2
  %1384 = zext i16 %1383 to i32
  br label %1385

1385:                                             ; preds = %1382, %1375, %1371, %1368
  %1386 = phi i16* [ %1364, %1368 ], [ %1381, %1382 ], [ %1364, %1371 ], [ %1381, %1375 ]
  %1387 = phi i32 [ %1370, %1368 ], [ %1384, %1382 ], [ -1, %1371 ], [ -1, %1375 ]
  %1388 = getelementptr inbounds i16, i16* %1386, i64 1
  store i16* %1388, i16** %1363, align 8
  store i32 %1387, i32* %16, align 8
  br label %2560

1389:                                             ; preds = %37
  %1390 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %1391 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1390, i64 0, i32 2
  %1392 = load i16*, i16** %1391, align 8
  %1393 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1390, i64 0, i32 3
  %1394 = load i16*, i16** %1393, align 8
  %1395 = icmp ult i16* %1392, %1394
  br i1 %1395, label %1410, label %1396, !prof !4

1396:                                             ; preds = %1389
  %1397 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1390, i64 0, i32 6
  %1398 = load i8, i8* %1397, align 8, !range !2
  %1399 = icmp eq i8 %1398, 0
  br i1 %1399, label %1400, label %1407

1400:                                             ; preds = %1396
  %1401 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1390 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %1402 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1401, align 8
  %1403 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1402, i64 5
  %1404 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1403, align 8
  %1405 = tail call zeroext i1 %1404(%"class.v8::internal::Utf16CharacterStream"* %1390) #8
  %1406 = load i16*, i16** %1391, align 8
  br i1 %1405, label %1410, label %1407

1407:                                             ; preds = %1400, %1396
  %1408 = phi i16* [ %1406, %1400 ], [ %1392, %1396 ]
  %1409 = getelementptr inbounds i16, i16* %1408, i64 1
  store i16* %1409, i16** %1391, align 8
  store i32 -1, i32* %16, align 8
  br label %2560

1410:                                             ; preds = %1400, %1389
  %1411 = phi i16* [ %1392, %1389 ], [ %1406, %1400 ]
  %1412 = load i16, i16* %1411, align 2
  %1413 = zext i16 %1412 to i32
  %1414 = getelementptr inbounds i16, i16* %1411, i64 1
  store i16* %1414, i16** %1391, align 8
  store i32 %1413, i32* %16, align 8
  switch i16 %1412, label %2560 [
    i16 124, label %1415
    i16 61, label %1470
  ]

1415:                                             ; preds = %1410
  %1416 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %1417 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1416, i64 0, i32 2
  %1418 = load i16*, i16** %1417, align 8
  %1419 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1416, i64 0, i32 3
  %1420 = load i16*, i16** %1419, align 8
  %1421 = icmp ult i16* %1418, %1420
  br i1 %1421, label %1436, label %1422, !prof !4

1422:                                             ; preds = %1415
  %1423 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1416, i64 0, i32 6
  %1424 = load i8, i8* %1423, align 8, !range !2
  %1425 = icmp eq i8 %1424, 0
  br i1 %1425, label %1426, label %1433

1426:                                             ; preds = %1422
  %1427 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1416 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %1428 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1427, align 8
  %1429 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1428, i64 5
  %1430 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1429, align 8
  %1431 = tail call zeroext i1 %1430(%"class.v8::internal::Utf16CharacterStream"* %1416) #8
  %1432 = load i16*, i16** %1417, align 8
  br i1 %1431, label %1436, label %1433

1433:                                             ; preds = %1426, %1422
  %1434 = phi i16* [ %1432, %1426 ], [ %1418, %1422 ]
  %1435 = getelementptr inbounds i16, i16* %1434, i64 1
  store i16* %1435, i16** %1417, align 8
  store i32 -1, i32* %16, align 8
  br label %2560

1436:                                             ; preds = %1426, %1415
  %1437 = phi i16* [ %1418, %1415 ], [ %1432, %1426 ]
  %1438 = load i16, i16* %1437, align 2
  %1439 = zext i16 %1438 to i32
  %1440 = getelementptr inbounds i16, i16* %1437, i64 1
  store i16* %1440, i16** %1417, align 8
  store i32 %1439, i32* %16, align 8
  %1441 = icmp eq i16 %1438, 61
  br i1 %1441, label %1442, label %2560

1442:                                             ; preds = %1436
  %1443 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %1444 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1443, i64 0, i32 2
  %1445 = load i16*, i16** %1444, align 8
  %1446 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1443, i64 0, i32 3
  %1447 = load i16*, i16** %1446, align 8
  %1448 = icmp ult i16* %1445, %1447
  br i1 %1448, label %1449, label %1452, !prof !4

1449:                                             ; preds = %1442
  %1450 = load i16, i16* %1445, align 2
  %1451 = zext i16 %1450 to i32
  br label %1466

1452:                                             ; preds = %1442
  %1453 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1443, i64 0, i32 6
  %1454 = load i8, i8* %1453, align 8, !range !2
  %1455 = icmp eq i8 %1454, 0
  br i1 %1455, label %1456, label %1466

1456:                                             ; preds = %1452
  %1457 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1443 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %1458 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1457, align 8
  %1459 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1458, i64 5
  %1460 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1459, align 8
  %1461 = tail call zeroext i1 %1460(%"class.v8::internal::Utf16CharacterStream"* %1443) #8
  %1462 = load i16*, i16** %1444, align 8
  br i1 %1461, label %1463, label %1466

1463:                                             ; preds = %1456
  %1464 = load i16, i16* %1462, align 2
  %1465 = zext i16 %1464 to i32
  br label %1466

1466:                                             ; preds = %1463, %1456, %1452, %1449
  %1467 = phi i16* [ %1445, %1449 ], [ %1462, %1463 ], [ %1445, %1452 ], [ %1462, %1456 ]
  %1468 = phi i32 [ %1451, %1449 ], [ %1465, %1463 ], [ -1, %1452 ], [ -1, %1456 ]
  %1469 = getelementptr inbounds i16, i16* %1467, i64 1
  store i16* %1469, i16** %1444, align 8
  store i32 %1468, i32* %16, align 8
  br label %2560

1470:                                             ; preds = %1410
  %1471 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %1472 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1471, i64 0, i32 2
  %1473 = load i16*, i16** %1472, align 8
  %1474 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1471, i64 0, i32 3
  %1475 = load i16*, i16** %1474, align 8
  %1476 = icmp ult i16* %1473, %1475
  br i1 %1476, label %1477, label %1480, !prof !4

1477:                                             ; preds = %1470
  %1478 = load i16, i16* %1473, align 2
  %1479 = zext i16 %1478 to i32
  br label %1494

1480:                                             ; preds = %1470
  %1481 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1471, i64 0, i32 6
  %1482 = load i8, i8* %1481, align 8, !range !2
  %1483 = icmp eq i8 %1482, 0
  br i1 %1483, label %1484, label %1494

1484:                                             ; preds = %1480
  %1485 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1471 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %1486 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1485, align 8
  %1487 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1486, i64 5
  %1488 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1487, align 8
  %1489 = tail call zeroext i1 %1488(%"class.v8::internal::Utf16CharacterStream"* %1471) #8
  %1490 = load i16*, i16** %1472, align 8
  br i1 %1489, label %1491, label %1494

1491:                                             ; preds = %1484
  %1492 = load i16, i16* %1490, align 2
  %1493 = zext i16 %1492 to i32
  br label %1494

1494:                                             ; preds = %1491, %1484, %1480, %1477
  %1495 = phi i16* [ %1473, %1477 ], [ %1490, %1491 ], [ %1473, %1480 ], [ %1490, %1484 ]
  %1496 = phi i32 [ %1479, %1477 ], [ %1493, %1491 ], [ -1, %1480 ], [ -1, %1484 ]
  %1497 = getelementptr inbounds i16, i16* %1495, i64 1
  store i16* %1497, i16** %1472, align 8
  store i32 %1496, i32* %16, align 8
  br label %2560

1498:                                             ; preds = %37
  %1499 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %1500 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1499, i64 0, i32 2
  %1501 = load i16*, i16** %1500, align 8
  %1502 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1499, i64 0, i32 3
  %1503 = load i16*, i16** %1502, align 8
  %1504 = icmp ult i16* %1501, %1503
  br i1 %1504, label %1519, label %1505, !prof !4

1505:                                             ; preds = %1498
  %1506 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1499, i64 0, i32 6
  %1507 = load i8, i8* %1506, align 8, !range !2
  %1508 = icmp eq i8 %1507, 0
  br i1 %1508, label %1509, label %1516

1509:                                             ; preds = %1505
  %1510 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1499 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %1511 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1510, align 8
  %1512 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1511, i64 5
  %1513 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1512, align 8
  %1514 = tail call zeroext i1 %1513(%"class.v8::internal::Utf16CharacterStream"* %1499) #8
  %1515 = load i16*, i16** %1500, align 8
  br i1 %1514, label %1519, label %1516

1516:                                             ; preds = %1509, %1505
  %1517 = phi i16* [ %1515, %1509 ], [ %1501, %1505 ]
  %1518 = getelementptr inbounds i16, i16* %1517, i64 1
  store i16* %1518, i16** %1500, align 8
  store i32 -1, i32* %16, align 8
  br label %2560

1519:                                             ; preds = %1509, %1498
  %1520 = phi i16* [ %1501, %1498 ], [ %1515, %1509 ]
  %1521 = load i16, i16* %1520, align 2
  %1522 = zext i16 %1521 to i32
  %1523 = getelementptr inbounds i16, i16* %1520, i64 1
  store i16* %1523, i16** %1500, align 8
  store i32 %1522, i32* %16, align 8
  %1524 = icmp eq i16 %1521, 61
  br i1 %1524, label %1525, label %2560

1525:                                             ; preds = %1519
  %1526 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %1527 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1526, i64 0, i32 2
  %1528 = load i16*, i16** %1527, align 8
  %1529 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1526, i64 0, i32 3
  %1530 = load i16*, i16** %1529, align 8
  %1531 = icmp ult i16* %1528, %1530
  br i1 %1531, label %1532, label %1535, !prof !4

1532:                                             ; preds = %1525
  %1533 = load i16, i16* %1528, align 2
  %1534 = zext i16 %1533 to i32
  br label %1549

1535:                                             ; preds = %1525
  %1536 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1526, i64 0, i32 6
  %1537 = load i8, i8* %1536, align 8, !range !2
  %1538 = icmp eq i8 %1537, 0
  br i1 %1538, label %1539, label %1549

1539:                                             ; preds = %1535
  %1540 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1526 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %1541 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1540, align 8
  %1542 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1541, i64 5
  %1543 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1542, align 8
  %1544 = tail call zeroext i1 %1543(%"class.v8::internal::Utf16CharacterStream"* %1526) #8
  %1545 = load i16*, i16** %1527, align 8
  br i1 %1544, label %1546, label %1549

1546:                                             ; preds = %1539
  %1547 = load i16, i16* %1545, align 2
  %1548 = zext i16 %1547 to i32
  br label %1549

1549:                                             ; preds = %1546, %1539, %1535, %1532
  %1550 = phi i16* [ %1528, %1532 ], [ %1545, %1546 ], [ %1528, %1535 ], [ %1545, %1539 ]
  %1551 = phi i32 [ %1534, %1532 ], [ %1548, %1546 ], [ -1, %1535 ], [ -1, %1539 ]
  %1552 = getelementptr inbounds i16, i16* %1550, i64 1
  store i16* %1552, i16** %1527, align 8
  store i32 %1551, i32* %16, align 8
  br label %2560

1553:                                             ; preds = %37
  %1554 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %1555 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1554, i64 0, i32 2
  %1556 = load i16*, i16** %1555, align 8
  %1557 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1554, i64 0, i32 3
  %1558 = load i16*, i16** %1557, align 8
  %1559 = icmp ult i16* %1556, %1558
  br i1 %1559, label %1574, label %1560, !prof !4

1560:                                             ; preds = %1553
  %1561 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1554, i64 0, i32 6
  %1562 = load i8, i8* %1561, align 8, !range !2
  %1563 = icmp eq i8 %1562, 0
  br i1 %1563, label %1564, label %1571

1564:                                             ; preds = %1560
  %1565 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1554 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %1566 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1565, align 8
  %1567 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1566, i64 5
  %1568 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1567, align 8
  %1569 = tail call zeroext i1 %1568(%"class.v8::internal::Utf16CharacterStream"* %1554) #8
  %1570 = load i16*, i16** %1555, align 8
  br i1 %1569, label %1574, label %1571

1571:                                             ; preds = %1564, %1560
  %1572 = phi i16* [ %1570, %1564 ], [ %1556, %1560 ]
  %1573 = getelementptr inbounds i16, i16* %1572, i64 1
  store i16* %1573, i16** %1555, align 8
  store i32 -1, i32* %16, align 8
  br label %2560

1574:                                             ; preds = %1564, %1553
  %1575 = phi i16* [ %1556, %1553 ], [ %1570, %1564 ]
  %1576 = load i16, i16* %1575, align 2
  %1577 = zext i16 %1576 to i32
  %1578 = getelementptr inbounds i16, i16* %1575, i64 1
  store i16* %1578, i16** %1555, align 8
  store i32 %1577, i32* %16, align 8
  %1579 = add nsw i32 %1577, -48
  %1580 = icmp ult i32 %1579, 10
  br i1 %1580, label %1581, label %1583

1581:                                             ; preds = %1574
  %1582 = tail call zeroext i8 @_ZN2v88internal7Scanner10ScanNumberEb(%"class.v8::internal::Scanner"* %0, i1 zeroext true) #8
  br label %2560

1583:                                             ; preds = %1574
  %1584 = icmp eq i16 %1576, 46
  br i1 %1584, label %1585, label %2560

1585:                                             ; preds = %1583
  %1586 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %1587 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1586, i64 0, i32 2
  %1588 = load i16*, i16** %1587, align 8
  %1589 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1586, i64 0, i32 3
  %1590 = load i16*, i16** %1589, align 8
  %1591 = icmp ult i16* %1588, %1590
  br i1 %1591, label %1604, label %1592, !prof !4

1592:                                             ; preds = %1585
  %1593 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1586, i64 0, i32 6
  %1594 = load i8, i8* %1593, align 8, !range !2
  %1595 = icmp eq i8 %1594, 0
  br i1 %1595, label %1596, label %2560

1596:                                             ; preds = %1592
  %1597 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1586 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %1598 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1597, align 8
  %1599 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1598, i64 5
  %1600 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1599, align 8
  %1601 = tail call zeroext i1 %1600(%"class.v8::internal::Utf16CharacterStream"* %1586) #8
  br i1 %1601, label %1602, label %2560

1602:                                             ; preds = %1596
  %1603 = load i16*, i16** %1587, align 8
  br label %1604

1604:                                             ; preds = %1602, %1585
  %1605 = phi i16* [ %1603, %1602 ], [ %1588, %1585 ]
  %1606 = load i16, i16* %1605, align 2
  %1607 = icmp eq i16 %1606, 46
  br i1 %1607, label %1608, label %2560

1608:                                             ; preds = %1604
  %1609 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %1610 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1609, i64 0, i32 2
  %1611 = load i16*, i16** %1610, align 8
  %1612 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1609, i64 0, i32 3
  %1613 = load i16*, i16** %1612, align 8
  %1614 = icmp ult i16* %1611, %1613
  br i1 %1614, label %1615, label %1618, !prof !4

1615:                                             ; preds = %1608
  %1616 = load i16, i16* %1611, align 2
  %1617 = zext i16 %1616 to i32
  br label %1632

1618:                                             ; preds = %1608
  %1619 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1609, i64 0, i32 6
  %1620 = load i8, i8* %1619, align 8, !range !2
  %1621 = icmp eq i8 %1620, 0
  br i1 %1621, label %1622, label %1632

1622:                                             ; preds = %1618
  %1623 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1609 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %1624 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1623, align 8
  %1625 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1624, i64 5
  %1626 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1625, align 8
  %1627 = tail call zeroext i1 %1626(%"class.v8::internal::Utf16CharacterStream"* %1609) #8
  %1628 = load i16*, i16** %1610, align 8
  br i1 %1627, label %1629, label %1632

1629:                                             ; preds = %1622
  %1630 = load i16, i16* %1628, align 2
  %1631 = zext i16 %1630 to i32
  br label %1632

1632:                                             ; preds = %1629, %1622, %1618, %1615
  %1633 = phi i16* [ %1611, %1615 ], [ %1628, %1629 ], [ %1611, %1618 ], [ %1628, %1622 ]
  %1634 = phi i32 [ %1617, %1615 ], [ %1631, %1629 ], [ -1, %1618 ], [ -1, %1622 ]
  %1635 = getelementptr inbounds i16, i16* %1633, i64 1
  store i16* %1635, i16** %1610, align 8
  store i32 %1634, i32* %16, align 8
  %1636 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %1637 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1636, i64 0, i32 2
  %1638 = load i16*, i16** %1637, align 8
  %1639 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1636, i64 0, i32 3
  %1640 = load i16*, i16** %1639, align 8
  %1641 = icmp ult i16* %1638, %1640
  br i1 %1641, label %1642, label %1645, !prof !4

1642:                                             ; preds = %1632
  %1643 = load i16, i16* %1638, align 2
  %1644 = zext i16 %1643 to i32
  br label %1659

1645:                                             ; preds = %1632
  %1646 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1636, i64 0, i32 6
  %1647 = load i8, i8* %1646, align 8, !range !2
  %1648 = icmp eq i8 %1647, 0
  br i1 %1648, label %1649, label %1659

1649:                                             ; preds = %1645
  %1650 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1636 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %1651 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1650, align 8
  %1652 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1651, i64 5
  %1653 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1652, align 8
  %1654 = tail call zeroext i1 %1653(%"class.v8::internal::Utf16CharacterStream"* %1636) #8
  %1655 = load i16*, i16** %1637, align 8
  br i1 %1654, label %1656, label %1659

1656:                                             ; preds = %1649
  %1657 = load i16, i16* %1655, align 2
  %1658 = zext i16 %1657 to i32
  br label %1659

1659:                                             ; preds = %1656, %1649, %1645, %1642
  %1660 = phi i16* [ %1638, %1642 ], [ %1655, %1656 ], [ %1638, %1645 ], [ %1655, %1649 ]
  %1661 = phi i32 [ %1644, %1642 ], [ %1658, %1656 ], [ -1, %1645 ], [ -1, %1649 ]
  %1662 = getelementptr inbounds i16, i16* %1660, i64 1
  store i16* %1662, i16** %1637, align 8
  store i32 %1661, i32* %16, align 8
  br label %2560

1663:                                             ; preds = %37
  %1664 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %1665 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1664, i64 0, i32 2
  %1666 = load i16*, i16** %1665, align 8
  %1667 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1664, i64 0, i32 3
  %1668 = load i16*, i16** %1667, align 8
  %1669 = icmp ult i16* %1666, %1668
  br i1 %1669, label %1670, label %1673, !prof !4

1670:                                             ; preds = %1663
  %1671 = load i16, i16* %1666, align 2
  %1672 = zext i16 %1671 to i32
  br label %1687

1673:                                             ; preds = %1663
  %1674 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1664, i64 0, i32 6
  %1675 = load i8, i8* %1674, align 8, !range !2
  %1676 = icmp eq i8 %1675, 0
  br i1 %1676, label %1677, label %1687

1677:                                             ; preds = %1673
  %1678 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1664 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %1679 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1678, align 8
  %1680 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1679, i64 5
  %1681 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1680, align 8
  %1682 = tail call zeroext i1 %1681(%"class.v8::internal::Utf16CharacterStream"* %1664) #8
  %1683 = load i16*, i16** %1665, align 8
  br i1 %1682, label %1684, label %1687

1684:                                             ; preds = %1677
  %1685 = load i16, i16* %1683, align 2
  %1686 = zext i16 %1685 to i32
  br label %1687

1687:                                             ; preds = %1684, %1677, %1673, %1670
  %1688 = phi i16* [ %1666, %1670 ], [ %1683, %1684 ], [ %1666, %1673 ], [ %1683, %1677 ]
  %1689 = phi i32 [ %1672, %1670 ], [ %1686, %1684 ], [ -1, %1673 ], [ -1, %1677 ]
  %1690 = getelementptr inbounds i16, i16* %1688, i64 1
  store i16* %1690, i16** %1665, align 8
  store i32 %1689, i32* %16, align 8
  %1691 = tail call zeroext i8 @_ZN2v88internal7Scanner16ScanTemplateSpanEv(%"class.v8::internal::Scanner"* %0) #8
  br label %2560

1692:                                             ; preds = %37
  %1693 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %1694 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1693, i64 0, i32 4
  %1695 = load i64, i64* %1694, align 8
  %1696 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1693, i64 0, i32 2
  %1697 = bitcast i16** %1696 to i64*
  %1698 = load i64, i64* %1697, align 8
  %1699 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1693, i64 0, i32 1
  %1700 = bitcast i16** %1699 to i64*
  %1701 = load i64, i64* %1700, align 8
  %1702 = sub i64 %1698, %1701
  %1703 = lshr exact i64 %1702, 1
  %1704 = add i64 %1703, %1695
  %1705 = trunc i64 %1704 to i32
  %1706 = icmp eq i32 %1705, 1
  %1707 = inttoptr i64 %1698 to i16*
  br i1 %1706, label %1708, label %1766

1708:                                             ; preds = %1692
  %1709 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1693, i64 0, i32 3
  %1710 = load i16*, i16** %1709, align 8
  %1711 = icmp ugt i16* %1710, %1707
  br i1 %1711, label %1724, label %1712, !prof !4

1712:                                             ; preds = %1708
  %1713 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1693, i64 0, i32 6
  %1714 = load i8, i8* %1713, align 8, !range !2
  %1715 = icmp eq i8 %1714, 0
  br i1 %1715, label %1716, label %1766

1716:                                             ; preds = %1712
  %1717 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1693 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %1718 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1717, align 8
  %1719 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1718, i64 5
  %1720 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1719, align 8
  %1721 = tail call zeroext i1 %1720(%"class.v8::internal::Utf16CharacterStream"* %1693) #8
  br i1 %1721, label %1722, label %1766

1722:                                             ; preds = %1716
  %1723 = load i16*, i16** %1696, align 8
  br label %1724

1724:                                             ; preds = %1722, %1708
  %1725 = phi i16* [ %1723, %1722 ], [ %1707, %1708 ]
  %1726 = load i16, i16* %1725, align 2
  %1727 = icmp eq i16 %1726, 33
  br i1 %1727, label %1728, label %1766

1728:                                             ; preds = %1724
  %1729 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %1730 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1729, i64 0, i32 2
  %1731 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1729, i64 0, i32 3
  %1732 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1729, i64 0, i32 6
  %1733 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1729 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  br label %1734

1734:                                             ; preds = %1750, %1728
  %1735 = load i16*, i16** %1730, align 8
  %1736 = load i16*, i16** %1731, align 8
  %1737 = icmp eq i16* %1735, %1736
  br i1 %1737, label %1744, label %1738

1738:                                             ; preds = %1734, %1741
  %1739 = phi i16* [ %1742, %1741 ], [ %1735, %1734 ]
  %1740 = load i16, i16* %1739, align 2
  switch i16 %1740, label %1741 [
    i16 8232, label %1744
    i16 13, label %1744
    i16 10, label %1744
    i16 8233, label %1744
  ]

1741:                                             ; preds = %1738
  %1742 = getelementptr inbounds i16, i16* %1739, i64 1
  %1743 = icmp eq i16* %1742, %1736
  br i1 %1743, label %1747, label %1738

1744:                                             ; preds = %1738, %1738, %1738, %1738, %1734
  %1745 = phi i16* [ %1735, %1734 ], [ %1739, %1738 ], [ %1739, %1738 ], [ %1739, %1738 ], [ %1739, %1738 ]
  %1746 = icmp eq i16* %1745, %1736
  br i1 %1746, label %1747, label %1760

1747:                                             ; preds = %1741, %1744
  store i16* %1736, i16** %1730, align 8
  %1748 = load i8, i8* %1732, align 8, !range !2
  %1749 = icmp eq i8 %1748, 0
  br i1 %1749, label %1750, label %1757

1750:                                             ; preds = %1747
  %1751 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1733, align 8
  %1752 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1751, i64 5
  %1753 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1752, align 8
  %1754 = tail call zeroext i1 %1753(%"class.v8::internal::Utf16CharacterStream"* %1729) #8
  br i1 %1754, label %1734, label %1755

1755:                                             ; preds = %1750
  %1756 = load i16*, i16** %1730, align 8
  br label %1757

1757:                                             ; preds = %1747, %1755
  %1758 = phi i16* [ %1756, %1755 ], [ %1736, %1747 ]
  %1759 = getelementptr inbounds i16, i16* %1758, i64 1
  store i16* %1759, i16** %1730, align 8
  br label %1764

1760:                                             ; preds = %1744
  %1761 = getelementptr inbounds i16, i16* %1745, i64 1
  store i16* %1761, i16** %1730, align 8
  %1762 = load i16, i16* %1745, align 2
  %1763 = zext i16 %1762 to i32
  br label %1764

1764:                                             ; preds = %1760, %1757
  %1765 = phi i32 [ %1763, %1760 ], [ -1, %1757 ]
  store i32 %1765, i32* %16, align 8
  br label %2558

1766:                                             ; preds = %1724, %1716, %1712, %1692
  %1767 = tail call zeroext i8 @_ZN2v88internal7Scanner15ScanPrivateNameEv(%"class.v8::internal::Scanner"* %0) #8
  br label %2560

1768:                                             ; preds = %37
  %1769 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %1770 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1769, i64 0, i32 4
  %1771 = load i64, i64* %1770, align 8
  %1772 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1769, i64 0, i32 2
  %1773 = bitcast i16** %1772 to i64*
  %1774 = load i64, i64* %1773, align 8
  %1775 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1769, i64 0, i32 1
  %1776 = bitcast i16** %1775 to i64*
  %1777 = load i64, i64* %1776, align 8
  %1778 = sub i64 %1774, %1777
  %1779 = lshr exact i64 %1778, 1
  %1780 = add i64 %1779, %1771
  %1781 = trunc i64 %1780 to i32
  br label %1782

1782:                                             ; preds = %1828, %1768
  %1783 = phi i32 [ %1830, %1828 ], [ %35, %1768 ]
  %1784 = icmp ult i32 %1783, 256
  br i1 %1784, label %1790, label %1785

1785:                                             ; preds = %1782
  %1786 = tail call zeroext i1 @_ZN2v88internal16IsWhiteSpaceSlowEj(i32 %1783) #8
  %1787 = and i32 %1783, -2
  %1788 = icmp eq i32 %1787, 8232
  %1789 = or i1 %1788, %1786
  br i1 %1789, label %1796, label %1832

1790:                                             ; preds = %1782
  %1791 = zext i32 %1783 to i64
  %1792 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN2v88internalL17kOneByteCharFlagsE, i64 0, i64 %1791
  %1793 = load i8, i8* %1792, align 1
  %1794 = and i8 %1793, 8
  %1795 = icmp eq i8 %1794, 0
  br i1 %1795, label %1832, label %1796

1796:                                             ; preds = %1790, %1785
  %1797 = load %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"** %9, align 8
  %1798 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %1797, i64 0, i32 8
  %1799 = load i8, i8* %1798, align 4, !range !2
  %1800 = icmp eq i8 %1799, 0
  br i1 %1800, label %1801, label %1804

1801:                                             ; preds = %1796
  %1802 = load i32, i32* %16, align 8
  switch i32 %1802, label %1804 [
    i32 8232, label %1803
    i32 13, label %1803
    i32 10, label %1803
    i32 8233, label %1803
  ]

1803:                                             ; preds = %1801, %1801, %1801, %1801
  store i8 1, i8* %1798, align 4
  br label %1804

1804:                                             ; preds = %1803, %1801, %1796
  %1805 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %1806 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1805, i64 0, i32 2
  %1807 = load i16*, i16** %1806, align 8
  %1808 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1805, i64 0, i32 3
  %1809 = load i16*, i16** %1808, align 8
  %1810 = icmp ult i16* %1807, %1809
  br i1 %1810, label %1811, label %1814, !prof !4

1811:                                             ; preds = %1804
  %1812 = load i16, i16* %1807, align 2
  %1813 = zext i16 %1812 to i32
  br label %1828

1814:                                             ; preds = %1804
  %1815 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1805, i64 0, i32 6
  %1816 = load i8, i8* %1815, align 8, !range !2
  %1817 = icmp eq i8 %1816, 0
  br i1 %1817, label %1818, label %1828

1818:                                             ; preds = %1814
  %1819 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1805 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %1820 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1819, align 8
  %1821 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1820, i64 5
  %1822 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1821, align 8
  %1823 = tail call zeroext i1 %1822(%"class.v8::internal::Utf16CharacterStream"* %1805) #8
  %1824 = load i16*, i16** %1806, align 8
  br i1 %1823, label %1825, label %1828

1825:                                             ; preds = %1818
  %1826 = load i16, i16* %1824, align 2
  %1827 = zext i16 %1826 to i32
  br label %1828

1828:                                             ; preds = %1825, %1818, %1814, %1811
  %1829 = phi i16* [ %1807, %1811 ], [ %1824, %1825 ], [ %1807, %1814 ], [ %1824, %1818 ]
  %1830 = phi i32 [ %1813, %1811 ], [ %1827, %1825 ], [ -1, %1814 ], [ -1, %1818 ]
  %1831 = getelementptr inbounds i16, i16* %1829, i64 1
  store i16* %1831, i16** %1806, align 8
  store i32 %1830, i32* %16, align 8
  br label %1782

1832:                                             ; preds = %1790, %1785
  %1833 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %1834 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1833, i64 0, i32 4
  %1835 = load i64, i64* %1834, align 8
  %1836 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1833, i64 0, i32 2
  %1837 = bitcast i16** %1836 to i64*
  %1838 = load i64, i64* %1837, align 8
  %1839 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1833, i64 0, i32 1
  %1840 = bitcast i16** %1839 to i64*
  %1841 = load i64, i64* %1840, align 8
  %1842 = sub i64 %1838, %1841
  %1843 = lshr exact i64 %1842, 1
  %1844 = add i64 %1843, %1835
  %1845 = trunc i64 %1844 to i32
  %1846 = icmp eq i32 %1845, %1781
  br i1 %1846, label %2560, label %2558

1847:                                             ; preds = %37
  %1848 = tail call zeroext i8 @_ZN2v88internal7Scanner10ScanNumberEb(%"class.v8::internal::Scanner"* %0, i1 zeroext false) #8
  br label %2560

1849:                                             ; preds = %37
  %1850 = load %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"** %9, align 8
  %1851 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %1850, i64 0, i32 1, i32 1
  store i32 0, i32* %1851, align 8
  %1852 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %1850, i64 0, i32 1, i32 2
  store i8 1, i8* %1852, align 4
  %1853 = load i32, i32* %16, align 8
  %1854 = icmp ult i32 %1853, 128
  br i1 %1854, label %1855, label %2109, !prof !4

1855:                                             ; preds = %1849
  %1856 = icmp eq i32 %1853, 92
  br i1 %1856, label %2004, label %1857, !prof !3

1857:                                             ; preds = %1855
  %1858 = zext i32 %1853 to i64
  %1859 = getelementptr inbounds [128 x i8], [128 x i8]* @_ZN2v88internalL20character_scan_flagsE, i64 0, i64 %1858
  %1860 = load i8, i8* %1859, align 1
  %1861 = lshr i8 %1860, 1
  %1862 = trunc i32 %1853 to i8
  %1863 = load %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"** %9, align 8
  %1864 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %1863, i64 0, i32 1
  %1865 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %1863, i64 0, i32 1, i32 1
  %1866 = load i32, i32* %1865, align 8
  %1867 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %1863, i64 0, i32 1, i32 0, i32 1
  %1868 = load i64, i64* %1867, align 8
  %1869 = trunc i64 %1868 to i32
  %1870 = icmp slt i32 %1866, %1869
  br i1 %1870, label %1873, label %1871

1871:                                             ; preds = %1857
  tail call void @_ZN2v88internal13LiteralBuffer12ExpandBufferEv(%"class.v8::internal::LiteralBuffer"* %1864) #8
  %1872 = load i32, i32* %1865, align 8
  br label %1873

1873:                                             ; preds = %1871, %1857
  %1874 = phi i32 [ %1866, %1857 ], [ %1872, %1871 ]
  %1875 = sext i32 %1874 to i64
  %1876 = getelementptr inbounds %"class.v8::internal::LiteralBuffer", %"class.v8::internal::LiteralBuffer"* %1864, i64 0, i32 0, i32 0
  %1877 = load i8*, i8** %1876, align 8
  %1878 = getelementptr inbounds i8, i8* %1877, i64 %1875
  store i8 %1862, i8* %1878, align 1
  %1879 = load i32, i32* %1865, align 8
  %1880 = add nsw i32 %1879, 1
  store i32 %1880, i32* %1865, align 8
  %1881 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %1882 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1881, i64 0, i32 2
  %1883 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1881, i64 0, i32 3
  %1884 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1881, i64 0, i32 6
  %1885 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1881 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  br label %1886

1886:                                             ; preds = %1935, %1873
  %1887 = phi i8 [ %1861, %1873 ], [ %1928, %1935 ]
  %1888 = load i16*, i16** %1882, align 8
  %1889 = load i16*, i16** %1883, align 8
  %1890 = icmp eq i16* %1888, %1889
  br i1 %1890, label %1927, label %1891

1891:                                             ; preds = %1886, %1917
  %1892 = phi i8 [ %1902, %1917 ], [ %1887, %1886 ]
  %1893 = phi i16* [ %1925, %1917 ], [ %1888, %1886 ]
  %1894 = load i16, i16* %1893, align 2
  %1895 = icmp ugt i16 %1894, 127
  br i1 %1895, label %1896, label %1898, !prof !3

1896:                                             ; preds = %1891
  %1897 = or i8 %1892, 16
  br label %1927

1898:                                             ; preds = %1891
  %1899 = zext i16 %1894 to i64
  %1900 = getelementptr inbounds [128 x i8], [128 x i8]* @_ZN2v88internalL20character_scan_flagsE, i64 0, i64 %1899
  %1901 = load i8, i8* %1900, align 1
  %1902 = or i8 %1901, %1892
  %1903 = and i8 %1901, 1
  %1904 = icmp eq i8 %1903, 0
  br i1 %1904, label %1905, label %1927

1905:                                             ; preds = %1898
  %1906 = trunc i16 %1894 to i8
  %1907 = load %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"** %9, align 8
  %1908 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %1907, i64 0, i32 1
  %1909 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %1907, i64 0, i32 1, i32 1
  %1910 = load i32, i32* %1909, align 8
  %1911 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %1907, i64 0, i32 1, i32 0, i32 1
  %1912 = load i64, i64* %1911, align 8
  %1913 = trunc i64 %1912 to i32
  %1914 = icmp slt i32 %1910, %1913
  br i1 %1914, label %1917, label %1915

1915:                                             ; preds = %1905
  tail call void @_ZN2v88internal13LiteralBuffer12ExpandBufferEv(%"class.v8::internal::LiteralBuffer"* %1908) #8
  %1916 = load i32, i32* %1909, align 8
  br label %1917

1917:                                             ; preds = %1915, %1905
  %1918 = phi i32 [ %1910, %1905 ], [ %1916, %1915 ]
  %1919 = sext i32 %1918 to i64
  %1920 = getelementptr inbounds %"class.v8::internal::LiteralBuffer", %"class.v8::internal::LiteralBuffer"* %1908, i64 0, i32 0, i32 0
  %1921 = load i8*, i8** %1920, align 8
  %1922 = getelementptr inbounds i8, i8* %1921, i64 %1919
  store i8 %1906, i8* %1922, align 1
  %1923 = load i32, i32* %1909, align 8
  %1924 = add nsw i32 %1923, 1
  store i32 %1924, i32* %1909, align 8
  %1925 = getelementptr inbounds i16, i16* %1893, i64 1
  %1926 = icmp eq i16* %1925, %1889
  br i1 %1926, label %1927, label %1891

1927:                                             ; preds = %1917, %1898, %1896, %1886
  %1928 = phi i8 [ %1887, %1886 ], [ %1897, %1896 ], [ %1902, %1898 ], [ %1902, %1917 ]
  %1929 = phi i16* [ %1888, %1886 ], [ %1893, %1896 ], [ %1889, %1917 ], [ %1893, %1898 ]
  %1930 = load i16*, i16** %1883, align 8
  %1931 = icmp eq i16* %1929, %1930
  br i1 %1931, label %1932, label %1945

1932:                                             ; preds = %1927
  store i16* %1929, i16** %1882, align 8
  %1933 = load i8, i8* %1884, align 8, !range !2
  %1934 = icmp eq i8 %1933, 0
  br i1 %1934, label %1935, label %1942

1935:                                             ; preds = %1932
  %1936 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1885, align 8
  %1937 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1936, i64 5
  %1938 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1937, align 8
  %1939 = tail call zeroext i1 %1938(%"class.v8::internal::Utf16CharacterStream"* %1881) #8
  br i1 %1939, label %1886, label %1940

1940:                                             ; preds = %1935
  %1941 = load i16*, i16** %1882, align 8
  br label %1942

1942:                                             ; preds = %1932, %1940
  %1943 = phi i16* [ %1941, %1940 ], [ %1929, %1932 ]
  %1944 = getelementptr inbounds i16, i16* %1943, i64 1
  store i16* %1944, i16** %1882, align 8
  br label %1949

1945:                                             ; preds = %1927
  %1946 = getelementptr inbounds i16, i16* %1929, i64 1
  store i16* %1946, i16** %1882, align 8
  %1947 = load i16, i16* %1929, align 2
  %1948 = zext i16 %1947 to i32
  br label %1949

1949:                                             ; preds = %1945, %1942
  %1950 = phi i32 [ %1948, %1945 ], [ -1, %1942 ]
  store i32 %1950, i32* %16, align 8
  %1951 = and i8 %1928, 16
  %1952 = icmp ne i8 %1951, 0
  %1953 = and i8 %1928, 2
  %1954 = icmp eq i8 %1953, 0
  %1955 = xor i1 %1954, true
  %1956 = or i1 %1952, %1955
  br i1 %1956, label %2001, label %1957, !prof !5

1957:                                             ; preds = %1949
  %1958 = load %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"** %9, align 8
  %1959 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %1958, i64 0, i32 1, i32 0, i32 0
  %1960 = load i8*, i8** %1959, align 8
  %1961 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %1958, i64 0, i32 1, i32 1
  %1962 = load i32, i32* %1961, align 8
  %1963 = add i32 %1962, -2
  %1964 = icmp ult i32 %1963, 9
  br i1 %1964, label %1965, label %2560

1965:                                             ; preds = %1957
  %1966 = getelementptr inbounds i8, i8* %1960, i64 1
  %1967 = load i8, i8* %1966, align 1
  %1968 = zext i8 %1967 to i64
  %1969 = getelementptr inbounds [128 x i8], [128 x i8]* @_ZZN2v88internal18PerfectKeywordHash4HashEPKciE11asso_values, i64 0, i64 %1968
  %1970 = load i8, i8* %1969, align 1
  %1971 = zext i8 %1970 to i32
  %1972 = add nuw nsw i32 %1962, %1971
  %1973 = load i8, i8* %1960, align 1
  %1974 = zext i8 %1973 to i64
  %1975 = getelementptr inbounds [128 x i8], [128 x i8]* @_ZZN2v88internal18PerfectKeywordHash4HashEPKciE11asso_values, i64 0, i64 %1974
  %1976 = load i8, i8* %1975, align 1
  %1977 = zext i8 %1976 to i32
  %1978 = add nuw nsw i32 %1972, %1977
  %1979 = and i32 %1978, 63
  %1980 = zext i32 %1979 to i64
  %1981 = getelementptr inbounds [64 x i8], [64 x i8]* bitcast (<{ [56 x i8], [8 x i8] }>* @_ZN2v88internalL26kPerfectKeywordLengthTableE to [64 x i8]*), i64 0, i64 %1980
  %1982 = load i8, i8* %1981, align 1
  %1983 = zext i8 %1982 to i32
  %1984 = icmp eq i32 %1962, %1983
  br i1 %1984, label %1985, label %2560

1985:                                             ; preds = %1965
  %1986 = getelementptr inbounds [64 x %"struct.v8::internal::PerfectKeywordHashTableEntry"], [64 x %"struct.v8::internal::PerfectKeywordHashTableEntry"]* @_ZN2v88internalL24kPerfectKeywordHashTableE, i64 0, i64 %1980, i32 0
  %1987 = load i8*, i8** %1986, align 16
  br label %1988

1988:                                             ; preds = %1993, %1985
  %1989 = phi i8* [ %1960, %1985 ], [ %1995, %1993 ]
  %1990 = phi i8* [ %1987, %1985 ], [ %1994, %1993 ]
  %1991 = load i8, i8* %1990, align 1
  %1992 = icmp eq i8 %1991, 0
  br i1 %1992, label %1998, label %1993

1993:                                             ; preds = %1988
  %1994 = getelementptr inbounds i8, i8* %1990, i64 1
  %1995 = getelementptr inbounds i8, i8* %1989, i64 1
  %1996 = load i8, i8* %1989, align 1
  %1997 = icmp eq i8 %1991, %1996
  br i1 %1997, label %1988, label %2560

1998:                                             ; preds = %1988
  %1999 = getelementptr inbounds [64 x %"struct.v8::internal::PerfectKeywordHashTableEntry"], [64 x %"struct.v8::internal::PerfectKeywordHashTableEntry"]* @_ZN2v88internalL24kPerfectKeywordHashTableE, i64 0, i64 %1980, i32 1
  %2000 = load i8, i8* %1999, align 8
  br label %2560

2001:                                             ; preds = %1949
  %2002 = xor i1 %1952, true
  %2003 = or i1 %1954, %2002
  br i1 %1952, label %2109, label %2560

2004:                                             ; preds = %1855
  %2005 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %2006 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2005, i64 0, i32 2
  %2007 = load i16*, i16** %2006, align 8
  %2008 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2005, i64 0, i32 3
  %2009 = load i16*, i16** %2008, align 8
  %2010 = icmp ult i16* %2007, %2009
  br i1 %2010, label %2025, label %2011, !prof !4

2011:                                             ; preds = %2004
  %2012 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2005, i64 0, i32 6
  %2013 = load i8, i8* %2012, align 8, !range !2
  %2014 = icmp eq i8 %2013, 0
  br i1 %2014, label %2015, label %2022

2015:                                             ; preds = %2011
  %2016 = bitcast %"class.v8::internal::Utf16CharacterStream"* %2005 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %2017 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %2016, align 8
  %2018 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %2017, i64 5
  %2019 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %2018, align 8
  %2020 = tail call zeroext i1 %2019(%"class.v8::internal::Utf16CharacterStream"* %2005) #8
  %2021 = load i16*, i16** %2006, align 8
  br i1 %2020, label %2025, label %2022

2022:                                             ; preds = %2015, %2011
  %2023 = phi i16* [ %2021, %2015 ], [ %2007, %2011 ]
  %2024 = getelementptr inbounds i16, i16* %2023, i64 1
  store i16* %2024, i16** %2006, align 8
  store i32 -1, i32* %16, align 8
  br label %2069

2025:                                             ; preds = %2015, %2004
  %2026 = phi i16* [ %2007, %2004 ], [ %2021, %2015 ]
  %2027 = load i16, i16* %2026, align 2
  %2028 = zext i16 %2027 to i32
  %2029 = getelementptr inbounds i16, i16* %2026, i64 1
  store i16* %2029, i16** %2006, align 8
  store i32 %2028, i32* %16, align 8
  %2030 = icmp eq i16 %2027, 117
  br i1 %2030, label %2031, label %2069

2031:                                             ; preds = %2025
  %2032 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %2033 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2032, i64 0, i32 2
  %2034 = load i16*, i16** %2033, align 8
  %2035 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2032, i64 0, i32 3
  %2036 = load i16*, i16** %2035, align 8
  %2037 = icmp ult i16* %2034, %2036
  br i1 %2037, label %2038, label %2041, !prof !4

2038:                                             ; preds = %2031
  %2039 = load i16, i16* %2034, align 2
  %2040 = zext i16 %2039 to i32
  br label %2055

2041:                                             ; preds = %2031
  %2042 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2032, i64 0, i32 6
  %2043 = load i8, i8* %2042, align 8, !range !2
  %2044 = icmp eq i8 %2043, 0
  br i1 %2044, label %2045, label %2055

2045:                                             ; preds = %2041
  %2046 = bitcast %"class.v8::internal::Utf16CharacterStream"* %2032 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %2047 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %2046, align 8
  %2048 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %2047, i64 5
  %2049 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %2048, align 8
  %2050 = tail call zeroext i1 %2049(%"class.v8::internal::Utf16CharacterStream"* %2032) #8
  %2051 = load i16*, i16** %2033, align 8
  br i1 %2050, label %2052, label %2055

2052:                                             ; preds = %2045
  %2053 = load i16, i16* %2051, align 2
  %2054 = zext i16 %2053 to i32
  br label %2055

2055:                                             ; preds = %2052, %2045, %2041, %2038
  %2056 = phi i16* [ %2034, %2038 ], [ %2051, %2052 ], [ %2034, %2041 ], [ %2051, %2045 ]
  %2057 = phi i32 [ %2040, %2038 ], [ %2054, %2052 ], [ -1, %2041 ], [ -1, %2045 ]
  %2058 = getelementptr inbounds i16, i16* %2056, i64 1
  store i16* %2058, i16** %2033, align 8
  store i32 %2057, i32* %16, align 8
  %2059 = tail call i32 @_ZN2v88internal7Scanner17ScanUnicodeEscapeILb0EEEjv(%"class.v8::internal::Scanner"* %0) #8
  %2060 = icmp eq i32 %2059, 92
  br i1 %2060, label %2560, label %2061

2061:                                             ; preds = %2055
  %2062 = icmp ult i32 %2059, 256
  br i1 %2062, label %2063, label %2069

2063:                                             ; preds = %2061
  %2064 = zext i32 %2059 to i64
  %2065 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN2v88internalL17kOneByteCharFlagsE, i64 0, i64 %2064
  %2066 = load i8, i8* %2065, align 1
  %2067 = and i8 %2066, 1
  %2068 = icmp eq i8 %2067, 0
  br i1 %2068, label %2560, label %2072

2069:                                             ; preds = %2061, %2025, %2022
  %2070 = phi i32 [ %2059, %2061 ], [ -1, %2025 ], [ -1, %2022 ]
  %2071 = tail call zeroext i1 @_ZN2v88internal21IsIdentifierStartSlowEj(i32 %2070) #8
  br i1 %2071, label %2072, label %2560

2072:                                             ; preds = %2069, %2063
  %2073 = phi i32 [ %2059, %2063 ], [ %2070, %2069 ]
  %2074 = phi i1 [ true, %2063 ], [ false, %2069 ]
  %2075 = load %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"** %9, align 8
  %2076 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %2075, i64 0, i32 1
  %2077 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %2075, i64 0, i32 1, i32 2
  %2078 = load i8, i8* %2077, align 4, !range !2
  %2079 = icmp eq i8 %2078, 0
  br i1 %2079, label %2100, label %2080

2080:                                             ; preds = %2072
  br i1 %2074, label %2081, label %2099

2081:                                             ; preds = %2080
  %2082 = trunc i32 %2073 to i8
  %2083 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %2075, i64 0, i32 1, i32 1
  %2084 = load i32, i32* %2083, align 8
  %2085 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %2075, i64 0, i32 1, i32 0, i32 1
  %2086 = load i64, i64* %2085, align 8
  %2087 = trunc i64 %2086 to i32
  %2088 = icmp slt i32 %2084, %2087
  br i1 %2088, label %2091, label %2089

2089:                                             ; preds = %2081
  tail call void @_ZN2v88internal13LiteralBuffer12ExpandBufferEv(%"class.v8::internal::LiteralBuffer"* %2076) #8
  %2090 = load i32, i32* %2083, align 8
  br label %2091

2091:                                             ; preds = %2089, %2081
  %2092 = phi i32 [ %2084, %2081 ], [ %2090, %2089 ]
  %2093 = sext i32 %2092 to i64
  %2094 = getelementptr inbounds %"class.v8::internal::LiteralBuffer", %"class.v8::internal::LiteralBuffer"* %2076, i64 0, i32 0, i32 0
  %2095 = load i8*, i8** %2094, align 8
  %2096 = getelementptr inbounds i8, i8* %2095, i64 %2093
  store i8 %2082, i8* %2096, align 1
  %2097 = load i32, i32* %2083, align 8
  %2098 = add nsw i32 %2097, 1
  store i32 %2098, i32* %2083, align 8
  br label %2101

2099:                                             ; preds = %2080
  tail call void @_ZN2v88internal13LiteralBuffer16ConvertToTwoByteEv(%"class.v8::internal::LiteralBuffer"* %2076) #8
  br label %2100

2100:                                             ; preds = %2099, %2072
  tail call void @_ZN2v88internal13LiteralBuffer14AddTwoByteCharEj(%"class.v8::internal::LiteralBuffer"* %2076, i32 %2073) #8
  br label %2101

2101:                                             ; preds = %2100, %2091
  %2102 = icmp ult i32 %2073, 128
  br i1 %2102, label %2103, label %2109

2103:                                             ; preds = %2101
  %2104 = zext i32 %2073 to i64
  %2105 = getelementptr inbounds [128 x i8], [128 x i8]* @_ZN2v88internalL20character_scan_flagsE, i64 0, i64 %2104
  %2106 = load i8, i8* %2105, align 1
  %2107 = and i8 %2106, 2
  %2108 = icmp eq i8 %2107, 0
  br label %2109

2109:                                             ; preds = %2103, %2101, %2001, %1849
  %2110 = phi i1 [ %2003, %2001 ], [ true, %1849 ], [ false, %2101 ], [ %2108, %2103 ]
  %2111 = phi i1 [ false, %2001 ], [ false, %1849 ], [ true, %2101 ], [ true, %2103 ]
  %2112 = tail call zeroext i8 @_ZN2v88internal7Scanner32ScanIdentifierOrKeywordInnerSlowEbb(%"class.v8::internal::Scanner"* %0, i1 zeroext %2111, i1 zeroext %2110) #8
  br label %2560

2113:                                             ; preds = %37
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0)) #9
  unreachable

2114:                                             ; preds = %18
  %2115 = icmp ult i32 %35, 256
  br i1 %2115, label %2116, label %2122

2116:                                             ; preds = %2114
  %2117 = zext i32 %35 to i64
  %2118 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN2v88internalL17kOneByteCharFlagsE, i64 0, i64 %2117
  %2119 = load i8, i8* %2118, align 1
  %2120 = and i8 %2119, 1
  %2121 = icmp eq i8 %2120, 0
  br i1 %2121, label %2126, label %2202

2122:                                             ; preds = %2114
  %2123 = tail call zeroext i1 @_ZN2v88internal21IsIdentifierStartSlowEj(i32 %35) #8
  br i1 %2123, label %2202, label %2124

2124:                                             ; preds = %2122
  %2125 = load i32, i32* %16, align 8
  br label %2126

2126:                                             ; preds = %2124, %2116
  %2127 = phi i32 [ %2125, %2124 ], [ %35, %2116 ]
  %2128 = and i32 %2127, 64512
  %2129 = icmp eq i32 %2128, 55296
  br i1 %2129, label %2130, label %2468

2130:                                             ; preds = %2126
  %2131 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %2132 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2131, i64 0, i32 2
  %2133 = load i16*, i16** %2132, align 8
  %2134 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2131, i64 0, i32 3
  %2135 = load i16*, i16** %2134, align 8
  %2136 = icmp ult i16* %2133, %2135
  br i1 %2136, label %2151, label %2137, !prof !4

2137:                                             ; preds = %2130
  %2138 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2131, i64 0, i32 6
  %2139 = load i8, i8* %2138, align 8, !range !2
  %2140 = icmp eq i8 %2139, 0
  br i1 %2140, label %2141, label %2148

2141:                                             ; preds = %2137
  %2142 = bitcast %"class.v8::internal::Utf16CharacterStream"* %2131 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %2143 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %2142, align 8
  %2144 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %2143, i64 5
  %2145 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %2144, align 8
  %2146 = tail call zeroext i1 %2145(%"class.v8::internal::Utf16CharacterStream"* %2131) #8
  %2147 = load i16*, i16** %2132, align 8
  br i1 %2146, label %2151, label %2148

2148:                                             ; preds = %2141, %2137
  %2149 = phi i16* [ %2147, %2141 ], [ %2133, %2137 ]
  %2150 = getelementptr inbounds i16, i16* %2149, i64 1
  store i16* %2150, i16** %2132, align 8
  br label %2158

2151:                                             ; preds = %2141, %2130
  %2152 = phi i16* [ %2133, %2130 ], [ %2147, %2141 ]
  %2153 = load i16, i16* %2152, align 2
  %2154 = zext i16 %2153 to i32
  %2155 = getelementptr inbounds i16, i16* %2152, i64 1
  store i16* %2155, i16** %2132, align 8
  %2156 = and i32 %2154, 64512
  %2157 = icmp eq i32 %2156, 56320
  br i1 %2157, label %2186, label %2158

2158:                                             ; preds = %2151, %2148
  %2159 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %2160 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2159, i64 0, i32 2
  %2161 = load i16*, i16** %2160, align 8
  %2162 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2159, i64 0, i32 1
  %2163 = load i16*, i16** %2162, align 8
  %2164 = icmp ugt i16* %2161, %2163
  %2165 = ptrtoint i16* %2163 to i64
  br i1 %2164, label %2166, label %2168, !prof !4

2166:                                             ; preds = %2158
  %2167 = getelementptr inbounds i16, i16* %2161, i64 -1
  store i16* %2167, i16** %2160, align 8
  br label %2466

2168:                                             ; preds = %2158
  %2169 = ptrtoint i16* %2161 to i64
  %2170 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2159, i64 0, i32 4
  %2171 = load i64, i64* %2170, align 8
  %2172 = bitcast i16** %2160 to i64*
  %2173 = sub i64 %2169, %2165
  %2174 = ashr exact i64 %2173, 1
  %2175 = add nsw i64 %2174, -1
  %2176 = add i64 %2175, %2171
  store i64 %2176, i64* %2170, align 8
  store i64 %2165, i64* %2172, align 8
  %2177 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2159, i64 0, i32 6
  %2178 = load i8, i8* %2177, align 8, !range !2
  %2179 = icmp eq i8 %2178, 0
  br i1 %2179, label %2180, label %2466

2180:                                             ; preds = %2168
  %2181 = bitcast %"class.v8::internal::Utf16CharacterStream"* %2159 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %2182 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %2181, align 8
  %2183 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %2182, i64 5
  %2184 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %2183, align 8
  %2185 = tail call zeroext i1 %2184(%"class.v8::internal::Utf16CharacterStream"* %2159) #8
  br label %2466

2186:                                             ; preds = %2151
  %2187 = load i32, i32* %16, align 8
  %2188 = shl i32 %2187, 10
  %2189 = and i32 %2188, 1047552
  %2190 = add nuw nsw i32 %2189, 65536
  %2191 = and i32 %2154, 1023
  %2192 = or i32 %2190, %2191
  store i32 %2192, i32* %16, align 8
  %2193 = icmp ult i32 %2192, 256
  br i1 %2193, label %2194, label %2200

2194:                                             ; preds = %2186
  %2195 = zext i32 %2192 to i64
  %2196 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN2v88internalL17kOneByteCharFlagsE, i64 0, i64 %2195
  %2197 = load i8, i8* %2196, align 1
  %2198 = and i8 %2197, 1
  %2199 = icmp eq i8 %2198, 0
  br i1 %2199, label %2466, label %2202

2200:                                             ; preds = %2186
  %2201 = tail call zeroext i1 @_ZN2v88internal21IsIdentifierStartSlowEj(i32 %2192) #8
  br i1 %2201, label %2202, label %2466

2202:                                             ; preds = %2200, %2194, %2122, %2116
  %2203 = load %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"** %9, align 8
  %2204 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %2203, i64 0, i32 1, i32 1
  store i32 0, i32* %2204, align 8
  %2205 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %2203, i64 0, i32 1, i32 2
  store i8 1, i8* %2205, align 4
  %2206 = load i32, i32* %16, align 8
  %2207 = icmp ult i32 %2206, 128
  br i1 %2207, label %2208, label %2462, !prof !4

2208:                                             ; preds = %2202
  %2209 = icmp eq i32 %2206, 92
  br i1 %2209, label %2357, label %2210, !prof !3

2210:                                             ; preds = %2208
  %2211 = zext i32 %2206 to i64
  %2212 = getelementptr inbounds [128 x i8], [128 x i8]* @_ZN2v88internalL20character_scan_flagsE, i64 0, i64 %2211
  %2213 = load i8, i8* %2212, align 1
  %2214 = lshr i8 %2213, 1
  %2215 = trunc i32 %2206 to i8
  %2216 = load %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"** %9, align 8
  %2217 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %2216, i64 0, i32 1
  %2218 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %2216, i64 0, i32 1, i32 1
  %2219 = load i32, i32* %2218, align 8
  %2220 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %2216, i64 0, i32 1, i32 0, i32 1
  %2221 = load i64, i64* %2220, align 8
  %2222 = trunc i64 %2221 to i32
  %2223 = icmp slt i32 %2219, %2222
  br i1 %2223, label %2226, label %2224

2224:                                             ; preds = %2210
  tail call void @_ZN2v88internal13LiteralBuffer12ExpandBufferEv(%"class.v8::internal::LiteralBuffer"* %2217) #8
  %2225 = load i32, i32* %2218, align 8
  br label %2226

2226:                                             ; preds = %2224, %2210
  %2227 = phi i32 [ %2219, %2210 ], [ %2225, %2224 ]
  %2228 = sext i32 %2227 to i64
  %2229 = getelementptr inbounds %"class.v8::internal::LiteralBuffer", %"class.v8::internal::LiteralBuffer"* %2217, i64 0, i32 0, i32 0
  %2230 = load i8*, i8** %2229, align 8
  %2231 = getelementptr inbounds i8, i8* %2230, i64 %2228
  store i8 %2215, i8* %2231, align 1
  %2232 = load i32, i32* %2218, align 8
  %2233 = add nsw i32 %2232, 1
  store i32 %2233, i32* %2218, align 8
  %2234 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %2235 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2234, i64 0, i32 2
  %2236 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2234, i64 0, i32 3
  %2237 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2234, i64 0, i32 6
  %2238 = bitcast %"class.v8::internal::Utf16CharacterStream"* %2234 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  br label %2239

2239:                                             ; preds = %2288, %2226
  %2240 = phi i8 [ %2214, %2226 ], [ %2281, %2288 ]
  %2241 = load i16*, i16** %2235, align 8
  %2242 = load i16*, i16** %2236, align 8
  %2243 = icmp eq i16* %2241, %2242
  br i1 %2243, label %2280, label %2244

2244:                                             ; preds = %2239, %2270
  %2245 = phi i8 [ %2255, %2270 ], [ %2240, %2239 ]
  %2246 = phi i16* [ %2278, %2270 ], [ %2241, %2239 ]
  %2247 = load i16, i16* %2246, align 2
  %2248 = icmp ugt i16 %2247, 127
  br i1 %2248, label %2249, label %2251, !prof !3

2249:                                             ; preds = %2244
  %2250 = or i8 %2245, 16
  br label %2280

2251:                                             ; preds = %2244
  %2252 = zext i16 %2247 to i64
  %2253 = getelementptr inbounds [128 x i8], [128 x i8]* @_ZN2v88internalL20character_scan_flagsE, i64 0, i64 %2252
  %2254 = load i8, i8* %2253, align 1
  %2255 = or i8 %2254, %2245
  %2256 = and i8 %2254, 1
  %2257 = icmp eq i8 %2256, 0
  br i1 %2257, label %2258, label %2280

2258:                                             ; preds = %2251
  %2259 = trunc i16 %2247 to i8
  %2260 = load %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"** %9, align 8
  %2261 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %2260, i64 0, i32 1
  %2262 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %2260, i64 0, i32 1, i32 1
  %2263 = load i32, i32* %2262, align 8
  %2264 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %2260, i64 0, i32 1, i32 0, i32 1
  %2265 = load i64, i64* %2264, align 8
  %2266 = trunc i64 %2265 to i32
  %2267 = icmp slt i32 %2263, %2266
  br i1 %2267, label %2270, label %2268

2268:                                             ; preds = %2258
  tail call void @_ZN2v88internal13LiteralBuffer12ExpandBufferEv(%"class.v8::internal::LiteralBuffer"* %2261) #8
  %2269 = load i32, i32* %2262, align 8
  br label %2270

2270:                                             ; preds = %2268, %2258
  %2271 = phi i32 [ %2263, %2258 ], [ %2269, %2268 ]
  %2272 = sext i32 %2271 to i64
  %2273 = getelementptr inbounds %"class.v8::internal::LiteralBuffer", %"class.v8::internal::LiteralBuffer"* %2261, i64 0, i32 0, i32 0
  %2274 = load i8*, i8** %2273, align 8
  %2275 = getelementptr inbounds i8, i8* %2274, i64 %2272
  store i8 %2259, i8* %2275, align 1
  %2276 = load i32, i32* %2262, align 8
  %2277 = add nsw i32 %2276, 1
  store i32 %2277, i32* %2262, align 8
  %2278 = getelementptr inbounds i16, i16* %2246, i64 1
  %2279 = icmp eq i16* %2278, %2242
  br i1 %2279, label %2280, label %2244

2280:                                             ; preds = %2270, %2251, %2249, %2239
  %2281 = phi i8 [ %2240, %2239 ], [ %2250, %2249 ], [ %2255, %2251 ], [ %2255, %2270 ]
  %2282 = phi i16* [ %2241, %2239 ], [ %2246, %2249 ], [ %2242, %2270 ], [ %2246, %2251 ]
  %2283 = load i16*, i16** %2236, align 8
  %2284 = icmp eq i16* %2282, %2283
  br i1 %2284, label %2285, label %2298

2285:                                             ; preds = %2280
  store i16* %2282, i16** %2235, align 8
  %2286 = load i8, i8* %2237, align 8, !range !2
  %2287 = icmp eq i8 %2286, 0
  br i1 %2287, label %2288, label %2295

2288:                                             ; preds = %2285
  %2289 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %2238, align 8
  %2290 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %2289, i64 5
  %2291 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %2290, align 8
  %2292 = tail call zeroext i1 %2291(%"class.v8::internal::Utf16CharacterStream"* %2234) #8
  br i1 %2292, label %2239, label %2293

2293:                                             ; preds = %2288
  %2294 = load i16*, i16** %2235, align 8
  br label %2295

2295:                                             ; preds = %2285, %2293
  %2296 = phi i16* [ %2294, %2293 ], [ %2282, %2285 ]
  %2297 = getelementptr inbounds i16, i16* %2296, i64 1
  store i16* %2297, i16** %2235, align 8
  br label %2302

2298:                                             ; preds = %2280
  %2299 = getelementptr inbounds i16, i16* %2282, i64 1
  store i16* %2299, i16** %2235, align 8
  %2300 = load i16, i16* %2282, align 2
  %2301 = zext i16 %2300 to i32
  br label %2302

2302:                                             ; preds = %2298, %2295
  %2303 = phi i32 [ %2301, %2298 ], [ -1, %2295 ]
  store i32 %2303, i32* %16, align 8
  %2304 = and i8 %2281, 16
  %2305 = icmp ne i8 %2304, 0
  %2306 = and i8 %2281, 2
  %2307 = icmp eq i8 %2306, 0
  %2308 = xor i1 %2307, true
  %2309 = or i1 %2305, %2308
  br i1 %2309, label %2354, label %2310, !prof !5

2310:                                             ; preds = %2302
  %2311 = load %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"** %9, align 8
  %2312 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %2311, i64 0, i32 1, i32 0, i32 0
  %2313 = load i8*, i8** %2312, align 8
  %2314 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %2311, i64 0, i32 1, i32 1
  %2315 = load i32, i32* %2314, align 8
  %2316 = add i32 %2315, -2
  %2317 = icmp ult i32 %2316, 9
  br i1 %2317, label %2318, label %2560

2318:                                             ; preds = %2310
  %2319 = getelementptr inbounds i8, i8* %2313, i64 1
  %2320 = load i8, i8* %2319, align 1
  %2321 = zext i8 %2320 to i64
  %2322 = getelementptr inbounds [128 x i8], [128 x i8]* @_ZZN2v88internal18PerfectKeywordHash4HashEPKciE11asso_values, i64 0, i64 %2321
  %2323 = load i8, i8* %2322, align 1
  %2324 = zext i8 %2323 to i32
  %2325 = add nuw nsw i32 %2315, %2324
  %2326 = load i8, i8* %2313, align 1
  %2327 = zext i8 %2326 to i64
  %2328 = getelementptr inbounds [128 x i8], [128 x i8]* @_ZZN2v88internal18PerfectKeywordHash4HashEPKciE11asso_values, i64 0, i64 %2327
  %2329 = load i8, i8* %2328, align 1
  %2330 = zext i8 %2329 to i32
  %2331 = add nuw nsw i32 %2325, %2330
  %2332 = and i32 %2331, 63
  %2333 = zext i32 %2332 to i64
  %2334 = getelementptr inbounds [64 x i8], [64 x i8]* bitcast (<{ [56 x i8], [8 x i8] }>* @_ZN2v88internalL26kPerfectKeywordLengthTableE to [64 x i8]*), i64 0, i64 %2333
  %2335 = load i8, i8* %2334, align 1
  %2336 = zext i8 %2335 to i32
  %2337 = icmp eq i32 %2315, %2336
  br i1 %2337, label %2338, label %2560

2338:                                             ; preds = %2318
  %2339 = getelementptr inbounds [64 x %"struct.v8::internal::PerfectKeywordHashTableEntry"], [64 x %"struct.v8::internal::PerfectKeywordHashTableEntry"]* @_ZN2v88internalL24kPerfectKeywordHashTableE, i64 0, i64 %2333, i32 0
  %2340 = load i8*, i8** %2339, align 16
  br label %2341

2341:                                             ; preds = %2346, %2338
  %2342 = phi i8* [ %2313, %2338 ], [ %2348, %2346 ]
  %2343 = phi i8* [ %2340, %2338 ], [ %2347, %2346 ]
  %2344 = load i8, i8* %2343, align 1
  %2345 = icmp eq i8 %2344, 0
  br i1 %2345, label %2351, label %2346

2346:                                             ; preds = %2341
  %2347 = getelementptr inbounds i8, i8* %2343, i64 1
  %2348 = getelementptr inbounds i8, i8* %2342, i64 1
  %2349 = load i8, i8* %2342, align 1
  %2350 = icmp eq i8 %2344, %2349
  br i1 %2350, label %2341, label %2560

2351:                                             ; preds = %2341
  %2352 = getelementptr inbounds [64 x %"struct.v8::internal::PerfectKeywordHashTableEntry"], [64 x %"struct.v8::internal::PerfectKeywordHashTableEntry"]* @_ZN2v88internalL24kPerfectKeywordHashTableE, i64 0, i64 %2333, i32 1
  %2353 = load i8, i8* %2352, align 8
  br label %2560

2354:                                             ; preds = %2302
  %2355 = xor i1 %2305, true
  %2356 = or i1 %2307, %2355
  br i1 %2305, label %2462, label %2560

2357:                                             ; preds = %2208
  %2358 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %2359 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2358, i64 0, i32 2
  %2360 = load i16*, i16** %2359, align 8
  %2361 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2358, i64 0, i32 3
  %2362 = load i16*, i16** %2361, align 8
  %2363 = icmp ult i16* %2360, %2362
  br i1 %2363, label %2378, label %2364, !prof !4

2364:                                             ; preds = %2357
  %2365 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2358, i64 0, i32 6
  %2366 = load i8, i8* %2365, align 8, !range !2
  %2367 = icmp eq i8 %2366, 0
  br i1 %2367, label %2368, label %2375

2368:                                             ; preds = %2364
  %2369 = bitcast %"class.v8::internal::Utf16CharacterStream"* %2358 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %2370 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %2369, align 8
  %2371 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %2370, i64 5
  %2372 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %2371, align 8
  %2373 = tail call zeroext i1 %2372(%"class.v8::internal::Utf16CharacterStream"* %2358) #8
  %2374 = load i16*, i16** %2359, align 8
  br i1 %2373, label %2378, label %2375

2375:                                             ; preds = %2368, %2364
  %2376 = phi i16* [ %2374, %2368 ], [ %2360, %2364 ]
  %2377 = getelementptr inbounds i16, i16* %2376, i64 1
  store i16* %2377, i16** %2359, align 8
  store i32 -1, i32* %16, align 8
  br label %2422

2378:                                             ; preds = %2368, %2357
  %2379 = phi i16* [ %2360, %2357 ], [ %2374, %2368 ]
  %2380 = load i16, i16* %2379, align 2
  %2381 = zext i16 %2380 to i32
  %2382 = getelementptr inbounds i16, i16* %2379, i64 1
  store i16* %2382, i16** %2359, align 8
  store i32 %2381, i32* %16, align 8
  %2383 = icmp eq i16 %2380, 117
  br i1 %2383, label %2384, label %2422

2384:                                             ; preds = %2378
  %2385 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %2386 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2385, i64 0, i32 2
  %2387 = load i16*, i16** %2386, align 8
  %2388 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2385, i64 0, i32 3
  %2389 = load i16*, i16** %2388, align 8
  %2390 = icmp ult i16* %2387, %2389
  br i1 %2390, label %2391, label %2394, !prof !4

2391:                                             ; preds = %2384
  %2392 = load i16, i16* %2387, align 2
  %2393 = zext i16 %2392 to i32
  br label %2408

2394:                                             ; preds = %2384
  %2395 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2385, i64 0, i32 6
  %2396 = load i8, i8* %2395, align 8, !range !2
  %2397 = icmp eq i8 %2396, 0
  br i1 %2397, label %2398, label %2408

2398:                                             ; preds = %2394
  %2399 = bitcast %"class.v8::internal::Utf16CharacterStream"* %2385 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %2400 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %2399, align 8
  %2401 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %2400, i64 5
  %2402 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %2401, align 8
  %2403 = tail call zeroext i1 %2402(%"class.v8::internal::Utf16CharacterStream"* %2385) #8
  %2404 = load i16*, i16** %2386, align 8
  br i1 %2403, label %2405, label %2408

2405:                                             ; preds = %2398
  %2406 = load i16, i16* %2404, align 2
  %2407 = zext i16 %2406 to i32
  br label %2408

2408:                                             ; preds = %2405, %2398, %2394, %2391
  %2409 = phi i16* [ %2387, %2391 ], [ %2404, %2405 ], [ %2387, %2394 ], [ %2404, %2398 ]
  %2410 = phi i32 [ %2393, %2391 ], [ %2407, %2405 ], [ -1, %2394 ], [ -1, %2398 ]
  %2411 = getelementptr inbounds i16, i16* %2409, i64 1
  store i16* %2411, i16** %2386, align 8
  store i32 %2410, i32* %16, align 8
  %2412 = tail call i32 @_ZN2v88internal7Scanner17ScanUnicodeEscapeILb0EEEjv(%"class.v8::internal::Scanner"* %0) #8
  %2413 = icmp eq i32 %2412, 92
  br i1 %2413, label %2560, label %2414

2414:                                             ; preds = %2408
  %2415 = icmp ult i32 %2412, 256
  br i1 %2415, label %2416, label %2422

2416:                                             ; preds = %2414
  %2417 = zext i32 %2412 to i64
  %2418 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN2v88internalL17kOneByteCharFlagsE, i64 0, i64 %2417
  %2419 = load i8, i8* %2418, align 1
  %2420 = and i8 %2419, 1
  %2421 = icmp eq i8 %2420, 0
  br i1 %2421, label %2560, label %2425

2422:                                             ; preds = %2414, %2378, %2375
  %2423 = phi i32 [ %2412, %2414 ], [ -1, %2378 ], [ -1, %2375 ]
  %2424 = tail call zeroext i1 @_ZN2v88internal21IsIdentifierStartSlowEj(i32 %2423) #8
  br i1 %2424, label %2425, label %2560

2425:                                             ; preds = %2422, %2416
  %2426 = phi i32 [ %2412, %2416 ], [ %2423, %2422 ]
  %2427 = phi i1 [ true, %2416 ], [ false, %2422 ]
  %2428 = load %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"** %9, align 8
  %2429 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %2428, i64 0, i32 1
  %2430 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %2428, i64 0, i32 1, i32 2
  %2431 = load i8, i8* %2430, align 4, !range !2
  %2432 = icmp eq i8 %2431, 0
  br i1 %2432, label %2453, label %2433

2433:                                             ; preds = %2425
  br i1 %2427, label %2434, label %2452

2434:                                             ; preds = %2433
  %2435 = trunc i32 %2426 to i8
  %2436 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %2428, i64 0, i32 1, i32 1
  %2437 = load i32, i32* %2436, align 8
  %2438 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %2428, i64 0, i32 1, i32 0, i32 1
  %2439 = load i64, i64* %2438, align 8
  %2440 = trunc i64 %2439 to i32
  %2441 = icmp slt i32 %2437, %2440
  br i1 %2441, label %2444, label %2442

2442:                                             ; preds = %2434
  tail call void @_ZN2v88internal13LiteralBuffer12ExpandBufferEv(%"class.v8::internal::LiteralBuffer"* %2429) #8
  %2443 = load i32, i32* %2436, align 8
  br label %2444

2444:                                             ; preds = %2442, %2434
  %2445 = phi i32 [ %2437, %2434 ], [ %2443, %2442 ]
  %2446 = sext i32 %2445 to i64
  %2447 = getelementptr inbounds %"class.v8::internal::LiteralBuffer", %"class.v8::internal::LiteralBuffer"* %2429, i64 0, i32 0, i32 0
  %2448 = load i8*, i8** %2447, align 8
  %2449 = getelementptr inbounds i8, i8* %2448, i64 %2446
  store i8 %2435, i8* %2449, align 1
  %2450 = load i32, i32* %2436, align 8
  %2451 = add nsw i32 %2450, 1
  store i32 %2451, i32* %2436, align 8
  br label %2454

2452:                                             ; preds = %2433
  tail call void @_ZN2v88internal13LiteralBuffer16ConvertToTwoByteEv(%"class.v8::internal::LiteralBuffer"* %2429) #8
  br label %2453

2453:                                             ; preds = %2452, %2425
  tail call void @_ZN2v88internal13LiteralBuffer14AddTwoByteCharEj(%"class.v8::internal::LiteralBuffer"* %2429, i32 %2426) #8
  br label %2454

2454:                                             ; preds = %2453, %2444
  %2455 = icmp ult i32 %2426, 128
  br i1 %2455, label %2456, label %2462

2456:                                             ; preds = %2454
  %2457 = zext i32 %2426 to i64
  %2458 = getelementptr inbounds [128 x i8], [128 x i8]* @_ZN2v88internalL20character_scan_flagsE, i64 0, i64 %2457
  %2459 = load i8, i8* %2458, align 1
  %2460 = and i8 %2459, 2
  %2461 = icmp eq i8 %2460, 0
  br label %2462

2462:                                             ; preds = %2456, %2454, %2354, %2202
  %2463 = phi i1 [ %2356, %2354 ], [ true, %2202 ], [ false, %2454 ], [ %2461, %2456 ]
  %2464 = phi i1 [ false, %2354 ], [ false, %2202 ], [ true, %2454 ], [ true, %2456 ]
  %2465 = tail call zeroext i8 @_ZN2v88internal7Scanner32ScanIdentifierOrKeywordInnerSlowEbb(%"class.v8::internal::Scanner"* %0, i1 zeroext %2464, i1 zeroext %2463) #8
  br label %2560

2466:                                             ; preds = %2200, %2194, %2180, %2168, %2166
  %2467 = load i32, i32* %16, align 8
  br label %2468

2468:                                             ; preds = %2466, %2126
  %2469 = phi i32 [ %2467, %2466 ], [ %2127, %2126 ]
  %2470 = icmp eq i32 %2469, -1
  %2471 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  br i1 %2470, label %2472, label %2477

2472:                                             ; preds = %2468
  %2473 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2471, i64 0, i32 6
  %2474 = load i8, i8* %2473, align 8, !range !2
  %2475 = icmp eq i8 %2474, 0
  %2476 = select i1 %2475, i8 14, i8 112
  br label %2560

2477:                                             ; preds = %2468
  %2478 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2471, i64 0, i32 4
  %2479 = load i64, i64* %2478, align 8
  %2480 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2471, i64 0, i32 2
  %2481 = bitcast i16** %2480 to i64*
  %2482 = load i64, i64* %2481, align 8
  %2483 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2471, i64 0, i32 1
  %2484 = bitcast i16** %2483 to i64*
  %2485 = load i64, i64* %2484, align 8
  %2486 = sub i64 %2482, %2485
  %2487 = lshr exact i64 %2486, 1
  %2488 = add i64 %2487, %2479
  %2489 = trunc i64 %2488 to i32
  br label %2490

2490:                                             ; preds = %2536, %2477
  %2491 = phi i32 [ %2538, %2536 ], [ %2469, %2477 ]
  %2492 = icmp ult i32 %2491, 256
  br i1 %2492, label %2498, label %2493

2493:                                             ; preds = %2490
  %2494 = tail call zeroext i1 @_ZN2v88internal16IsWhiteSpaceSlowEj(i32 %2491) #8
  %2495 = and i32 %2491, -2
  %2496 = icmp eq i32 %2495, 8232
  %2497 = or i1 %2496, %2494
  br i1 %2497, label %2504, label %2540

2498:                                             ; preds = %2490
  %2499 = zext i32 %2491 to i64
  %2500 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN2v88internalL17kOneByteCharFlagsE, i64 0, i64 %2499
  %2501 = load i8, i8* %2500, align 1
  %2502 = and i8 %2501, 8
  %2503 = icmp eq i8 %2502, 0
  br i1 %2503, label %2540, label %2504

2504:                                             ; preds = %2498, %2493
  %2505 = load %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"** %9, align 8
  %2506 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %2505, i64 0, i32 8
  %2507 = load i8, i8* %2506, align 4, !range !2
  %2508 = icmp eq i8 %2507, 0
  br i1 %2508, label %2509, label %2512

2509:                                             ; preds = %2504
  %2510 = load i32, i32* %16, align 8
  switch i32 %2510, label %2512 [
    i32 8232, label %2511
    i32 13, label %2511
    i32 10, label %2511
    i32 8233, label %2511
  ]

2511:                                             ; preds = %2509, %2509, %2509, %2509
  store i8 1, i8* %2506, align 4
  br label %2512

2512:                                             ; preds = %2511, %2509, %2504
  %2513 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %2514 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2513, i64 0, i32 2
  %2515 = load i16*, i16** %2514, align 8
  %2516 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2513, i64 0, i32 3
  %2517 = load i16*, i16** %2516, align 8
  %2518 = icmp ult i16* %2515, %2517
  br i1 %2518, label %2519, label %2522, !prof !4

2519:                                             ; preds = %2512
  %2520 = load i16, i16* %2515, align 2
  %2521 = zext i16 %2520 to i32
  br label %2536

2522:                                             ; preds = %2512
  %2523 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2513, i64 0, i32 6
  %2524 = load i8, i8* %2523, align 8, !range !2
  %2525 = icmp eq i8 %2524, 0
  br i1 %2525, label %2526, label %2536

2526:                                             ; preds = %2522
  %2527 = bitcast %"class.v8::internal::Utf16CharacterStream"* %2513 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %2528 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %2527, align 8
  %2529 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %2528, i64 5
  %2530 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %2529, align 8
  %2531 = tail call zeroext i1 %2530(%"class.v8::internal::Utf16CharacterStream"* %2513) #8
  %2532 = load i16*, i16** %2514, align 8
  br i1 %2531, label %2533, label %2536

2533:                                             ; preds = %2526
  %2534 = load i16, i16* %2532, align 2
  %2535 = zext i16 %2534 to i32
  br label %2536

2536:                                             ; preds = %2533, %2526, %2522, %2519
  %2537 = phi i16* [ %2515, %2519 ], [ %2532, %2533 ], [ %2515, %2522 ], [ %2532, %2526 ]
  %2538 = phi i32 [ %2521, %2519 ], [ %2535, %2533 ], [ -1, %2522 ], [ -1, %2526 ]
  %2539 = getelementptr inbounds i16, i16* %2537, i64 1
  store i16* %2539, i16** %2514, align 8
  store i32 %2538, i32* %16, align 8
  br label %2490

2540:                                             ; preds = %2498, %2493
  %2541 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %2542 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2541, i64 0, i32 4
  %2543 = load i64, i64* %2542, align 8
  %2544 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2541, i64 0, i32 2
  %2545 = bitcast i16** %2544 to i64*
  %2546 = load i64, i64* %2545, align 8
  %2547 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2541, i64 0, i32 1
  %2548 = bitcast i16** %2547 to i64*
  %2549 = load i64, i64* %2548, align 8
  %2550 = sub i64 %2546, %2549
  %2551 = lshr exact i64 %2550, 1
  %2552 = add i64 %2551, %2543
  %2553 = trunc i64 %2552 to i32
  %2554 = icmp eq i32 %2553, %2489
  br i1 %2554, label %2560, label %2558

2555:                                             ; preds = %1250, %318
  %2556 = phi i8 [ %1251, %1250 ], [ %319, %318 ]
  %2557 = icmp eq i8 %2556, 114
  br i1 %2557, label %2558, label %2560

2558:                                             ; preds = %2555, %2540, %1832, %1764, %1248, %1210, %1169, %1169, %1169, %1169, %1169, %876
  %2559 = load %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"** %9, align 8
  br label %18

2560:                                             ; preds = %230, %777, %803, %809, %1091, %1832, %2540, %2555, %2346, %1993, %65, %87, %90, %113, %116, %151, %170, %173, %203, %207, %227, %259, %281, %284, %314, %338, %341, %370, %392, %395, %424, %446, %449, %479, %501, %504, %527, %530, %560, %588, %610, %613, %637, %640, %670, %692, %695, %724, %752, %774, %800, %819, %834, %902, %924, %927, %950, %953, %983, %1011, %1033, %1036, %1066, %1088, %1276, %1298, %1301, %1324, %1327, %1357, %1385, %1407, %1410, %1433, %1436, %1466, %1494, %1516, %1519, %1549, %1571, %1581, %1583, %1592, %1596, %1604, %1659, %1687, %1766, %1847, %1957, %1965, %1998, %2001, %2055, %2063, %2069, %2109, %2310, %2318, %2351, %2354, %2408, %2416, %2422, %2462, %2472
  %2561 = phi i8 [ %1848, %1847 ], [ %1767, %1766 ], [ %1691, %1687 ], [ %1582, %1581 ], [ 10, %1659 ], [ 21, %1494 ], [ 23, %1385 ], [ 28, %1276 ], [ 27, %1011 ], [ 32, %902 ], [ 54, %724 ], [ 31, %752 ], [ 15, %588 ], [ 63, %370 ], [ 25, %424 ], [ 62, %259 ], [ %208, %207 ], [ %40, %65 ], [ %2476, %2472 ], [ 4, %116 ], [ 11, %90 ], [ 11, %151 ], [ 41, %395 ], [ 61, %341 ], [ 17, %504 ], [ 49, %613 ], [ 47, %695 ], [ 43, %927 ], [ 39, %1301 ], [ 37, %1410 ], [ 2, %1604 ], [ 2, %1583 ], [ 11, %87 ], [ 4, %113 ], [ 18, %203 ], [ 34, %173 ], [ 34, %170 ], [ 60, %227 ], [ 24, %314 ], [ 40, %284 ], [ 40, %281 ], [ 61, %338 ], [ 41, %392 ], [ 26, %479 ], [ 42, %449 ], [ 42, %446 ], [ 17, %501 ], [ 57, %560 ], [ 56, %530 ], [ 56, %527 ], [ 49, %610 ], [ 59, %670 ], [ 58, %640 ], [ 58, %637 ], [ 47, %692 ], [ 48, %774 ], [ 55, %800 ], [ 43, %924 ], [ 30, %983 ], [ 46, %953 ], [ 46, %950 ], [ 29, %1066 ], [ 45, %1036 ], [ 45, %1033 ], [ 44, %1088 ], [ 39, %1298 ], [ 20, %1357 ], [ 36, %1327 ], [ 36, %1324 ], [ 37, %1407 ], [ 19, %1466 ], [ 35, %1436 ], [ 35, %1433 ], [ 22, %1549 ], [ 38, %1519 ], [ 38, %1516 ], [ 2, %1571 ], [ %2112, %2109 ], [ 95, %2001 ], [ %2000, %1998 ], [ 95, %1957 ], [ 95, %1965 ], [ 112, %2069 ], [ 112, %2055 ], [ 112, %2063 ], [ %2465, %2462 ], [ 95, %2354 ], [ %2353, %2351 ], [ 95, %2310 ], [ 95, %2318 ], [ 112, %2422 ], [ 112, %2408 ], [ 112, %2416 ], [ 2, %1596 ], [ 2, %1592 ], [ 112, %819 ], [ 112, %834 ], [ 95, %1993 ], [ 95, %2346 ], [ 60, %230 ], [ 55, %809 ], [ 55, %803 ], [ 48, %777 ], [ 44, %1091 ], [ %2556, %2555 ], [ 112, %1832 ], [ 112, %2540 ]
  %2562 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %14, i64 0, i32 3
  store i8 %2561, i8* %2562, align 8
  %2563 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %2564 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2563, i64 0, i32 4
  %2565 = load i64, i64* %2564, align 8
  %2566 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2563, i64 0, i32 2
  %2567 = bitcast i16** %2566 to i64*
  %2568 = load i64, i64* %2567, align 8
  %2569 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2563, i64 0, i32 1
  %2570 = bitcast i16** %2569 to i64*
  %2571 = load i64, i64* %2570, align 8
  %2572 = sub i64 %2568, %2571
  %2573 = lshr exact i64 %2572, 1
  %2574 = add i64 %2573, %2565
  %2575 = trunc i64 %2574 to i32
  %2576 = add nsw i32 %2575, -1
  %2577 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %14, i64 0, i32 0, i32 1
  store i32 %2576, i32* %2577, align 4
  %2578 = load i64, i64* %10, align 8
  store i64 %2578, i64* %12, align 8
  store i64 %11, i64* %10, align 8
  %2579 = inttoptr i64 %2578 to %"struct.v8::internal::Scanner::TokenDesc"*
  %2580 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %2579, i64 0, i32 3
  %2581 = load i8, i8* %2580, align 8
  br label %2582

2582:                                             ; preds = %1, %2560
  %2583 = phi i8 [ %2581, %2560 ], [ %5, %1 ]
  ret i8 %2583
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i8 @_ZN2v88internal7Scanner21SkipSingleHTMLCommentEv(%"class.v8::internal::Scanner"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 0, i32 0
  %3 = load i32, i32* %2, align 4
  %4 = and i32 %3, 32
  %5 = icmp eq i32 %4, 0
  %6 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 4
  %7 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %6, align 8
  br i1 %5, label %30, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %7, i64 0, i32 4
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %7, i64 0, i32 2
  %12 = bitcast i16** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %7, i64 0, i32 1
  %15 = bitcast i16** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %13, %16
  %18 = lshr exact i64 %17, 1
  %19 = add i64 %18, %10
  %20 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 14
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %68

23:                                               ; preds = %8
  %24 = add i64 %19, 4294967295
  store i32 292, i32* %20, align 4
  %25 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 15
  %26 = bitcast %"struct.v8::internal::Scanner::Location"* %25 to i64*
  %27 = shl i64 %19, 32
  %28 = and i64 %24, 4294967295
  %29 = or i64 %28, %27
  store i64 %29, i64* %26, align 8
  br label %68

30:                                               ; preds = %1
  %31 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %7, i64 0, i32 2
  %32 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %7, i64 0, i32 3
  %33 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %7, i64 0, i32 6
  %34 = bitcast %"class.v8::internal::Utf16CharacterStream"* %7 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  br label %35

35:                                               ; preds = %51, %30
  %36 = load i16*, i16** %31, align 8
  %37 = load i16*, i16** %32, align 8
  %38 = icmp eq i16* %36, %37
  br i1 %38, label %45, label %39

39:                                               ; preds = %35, %42
  %40 = phi i16* [ %43, %42 ], [ %36, %35 ]
  %41 = load i16, i16* %40, align 2
  switch i16 %41, label %42 [
    i16 8232, label %45
    i16 13, label %45
    i16 10, label %45
    i16 8233, label %45
  ]

42:                                               ; preds = %39
  %43 = getelementptr inbounds i16, i16* %40, i64 1
  %44 = icmp eq i16* %43, %37
  br i1 %44, label %48, label %39

45:                                               ; preds = %39, %39, %39, %39, %35
  %46 = phi i16* [ %36, %35 ], [ %40, %39 ], [ %40, %39 ], [ %40, %39 ], [ %40, %39 ]
  %47 = icmp eq i16* %46, %37
  br i1 %47, label %48, label %61

48:                                               ; preds = %42, %45
  store i16* %37, i16** %31, align 8
  %49 = load i8, i8* %33, align 8, !range !2
  %50 = icmp eq i8 %49, 0
  br i1 %50, label %51, label %58

51:                                               ; preds = %48
  %52 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %34, align 8
  %53 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %52, i64 5
  %54 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %53, align 8
  %55 = tail call zeroext i1 %54(%"class.v8::internal::Utf16CharacterStream"* %7) #8
  br i1 %55, label %35, label %56

56:                                               ; preds = %51
  %57 = load i16*, i16** %31, align 8
  br label %58

58:                                               ; preds = %48, %56
  %59 = phi i16* [ %57, %56 ], [ %37, %48 ]
  %60 = getelementptr inbounds i16, i16* %59, i64 1
  store i16* %60, i16** %31, align 8
  br label %65

61:                                               ; preds = %45
  %62 = getelementptr inbounds i16, i16* %46, i64 1
  store i16* %62, i16** %31, align 8
  %63 = load i16, i16* %46, align 2
  %64 = zext i16 %63 to i32
  br label %65

65:                                               ; preds = %58, %61
  %66 = phi i32 [ %64, %61 ], [ -1, %58 ]
  %67 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 5
  store i32 %66, i32* %67, align 8
  br label %68

68:                                               ; preds = %23, %8, %65
  %69 = phi i8 [ 114, %65 ], [ 112, %8 ], [ 112, %23 ]
  ret i8 %69
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i8 @_ZN2v88internal7Scanner21SkipSingleLineCommentEv(%"class.v8::internal::Scanner"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 4
  %3 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %3, i64 0, i32 2
  %5 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %3, i64 0, i32 3
  %6 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %3, i64 0, i32 6
  %7 = bitcast %"class.v8::internal::Utf16CharacterStream"* %3 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  br label %8

8:                                                ; preds = %24, %1
  %9 = load i16*, i16** %4, align 8
  %10 = load i16*, i16** %5, align 8
  %11 = icmp eq i16* %9, %10
  br i1 %11, label %18, label %12

12:                                               ; preds = %8, %15
  %13 = phi i16* [ %16, %15 ], [ %9, %8 ]
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %15 [
    i16 8232, label %18
    i16 13, label %18
    i16 10, label %18
    i16 8233, label %18
  ]

15:                                               ; preds = %12
  %16 = getelementptr inbounds i16, i16* %13, i64 1
  %17 = icmp eq i16* %16, %10
  br i1 %17, label %21, label %12

18:                                               ; preds = %12, %12, %12, %12, %8
  %19 = phi i16* [ %9, %8 ], [ %13, %12 ], [ %13, %12 ], [ %13, %12 ], [ %13, %12 ]
  %20 = icmp eq i16* %19, %10
  br i1 %20, label %21, label %34

21:                                               ; preds = %15, %18
  store i16* %10, i16** %4, align 8
  %22 = load i8, i8* %6, align 8, !range !2
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %24, label %31

24:                                               ; preds = %21
  %25 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %7, align 8
  %26 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %25, i64 5
  %27 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.v8::internal::Utf16CharacterStream"* %3) #8
  br i1 %28, label %8, label %29

29:                                               ; preds = %24
  %30 = load i16*, i16** %4, align 8
  br label %31

31:                                               ; preds = %21, %29
  %32 = phi i16* [ %30, %29 ], [ %10, %21 ]
  %33 = getelementptr inbounds i16, i16* %32, i64 1
  store i16* %33, i16** %4, align 8
  br label %38

34:                                               ; preds = %18
  %35 = getelementptr inbounds i16, i16* %19, i64 1
  store i16* %35, i16** %4, align 8
  %36 = load i16, i16* %19, align 2
  %37 = zext i16 %36 to i32
  br label %38

38:                                               ; preds = %31, %34
  %39 = phi i32 [ %37, %34 ], [ -1, %31 ]
  %40 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 5
  store i32 %39, i32* %40, align 8
  ret i8 114
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i8 @_ZN2v88internal7Scanner20SkipSourceURLCommentEv(%"class.v8::internal::Scanner"*) local_unnamed_addr #0 align 2 {
  tail call void @_ZN2v88internal7Scanner26TryToParseSourceURLCommentEv(%"class.v8::internal::Scanner"* %0)
  %2 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 5
  %3 = load i32, i32* %2, align 8
  switch i32 %3, label %4 [
    i32 8232, label %43
    i32 13, label %43
    i32 10, label %43
    i32 8233, label %43
    i32 -1, label %43
  ]

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 4
  %6 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %6, i64 0, i32 2
  %8 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %6, i64 0, i32 3
  %9 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %6, i64 0, i32 6
  %10 = bitcast %"class.v8::internal::Utf16CharacterStream"* %6 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  br label %11

11:                                               ; preds = %27, %4
  %12 = load i16*, i16** %7, align 8
  %13 = load i16*, i16** %8, align 8
  %14 = icmp eq i16* %12, %13
  br i1 %14, label %21, label %15

15:                                               ; preds = %11, %18
  %16 = phi i16* [ %19, %18 ], [ %12, %11 ]
  %17 = load i16, i16* %16, align 2
  switch i16 %17, label %18 [
    i16 8232, label %21
    i16 13, label %21
    i16 10, label %21
    i16 8233, label %21
  ]

18:                                               ; preds = %15
  %19 = getelementptr inbounds i16, i16* %16, i64 1
  %20 = icmp eq i16* %19, %13
  br i1 %20, label %24, label %15

21:                                               ; preds = %15, %15, %15, %15, %11
  %22 = phi i16* [ %12, %11 ], [ %16, %15 ], [ %16, %15 ], [ %16, %15 ], [ %16, %15 ]
  %23 = icmp eq i16* %22, %13
  br i1 %23, label %24, label %37

24:                                               ; preds = %18, %21
  store i16* %13, i16** %7, align 8
  %25 = load i8, i8* %9, align 8, !range !2
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %27, label %34

27:                                               ; preds = %24
  %28 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %10, align 8
  %29 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %28, i64 5
  %30 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %29, align 8
  %31 = tail call zeroext i1 %30(%"class.v8::internal::Utf16CharacterStream"* %6) #8
  br i1 %31, label %11, label %32

32:                                               ; preds = %27
  %33 = load i16*, i16** %7, align 8
  br label %34

34:                                               ; preds = %24, %32
  %35 = phi i16* [ %33, %32 ], [ %13, %24 ]
  %36 = getelementptr inbounds i16, i16* %35, i64 1
  store i16* %36, i16** %7, align 8
  br label %41

37:                                               ; preds = %21
  %38 = getelementptr inbounds i16, i16* %22, i64 1
  store i16* %38, i16** %7, align 8
  %39 = load i16, i16* %22, align 2
  %40 = zext i16 %39 to i32
  br label %41

41:                                               ; preds = %34, %37
  %42 = phi i32 [ %40, %37 ], [ -1, %34 ]
  store i32 %42, i32* %2, align 8
  br label %43

43:                                               ; preds = %1, %1, %1, %1, %1, %41
  ret i8 114
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal7Scanner26TryToParseSourceURLCommentEv(%"class.v8::internal::Scanner"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.v8::internal::LiteralBuffer", align 8
  %3 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 5
  %4 = load i32, i32* %3, align 8
  %5 = icmp ult i32 %4, 256
  br i1 %5, label %6, label %12

6:                                                ; preds = %1
  %7 = zext i32 %4 to i64
  %8 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN2v88internalL17kOneByteCharFlagsE, i64 0, i64 %7
  %9 = load i8, i8* %8, align 1
  %10 = and i8 %9, 4
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %346, label %14

12:                                               ; preds = %1
  %13 = tail call zeroext i1 @_ZN2v88internal16IsWhiteSpaceSlowEj(i32 %4) #8
  br i1 %13, label %14, label %346

14:                                               ; preds = %6, %12
  %15 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 4
  %16 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %17 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %16, i64 0, i32 2
  %18 = load i16*, i16** %17, align 8
  %19 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %16, i64 0, i32 3
  %20 = load i16*, i16** %19, align 8
  %21 = icmp ult i16* %18, %20
  br i1 %21, label %22, label %25, !prof !4

22:                                               ; preds = %14
  %23 = load i16, i16* %18, align 2
  %24 = zext i16 %23 to i32
  br label %39

25:                                               ; preds = %14
  %26 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %16, i64 0, i32 6
  %27 = load i8, i8* %26, align 8, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %29, label %39

29:                                               ; preds = %25
  %30 = bitcast %"class.v8::internal::Utf16CharacterStream"* %16 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %31 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %30, align 8
  %32 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %31, i64 5
  %33 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %32, align 8
  %34 = tail call zeroext i1 %33(%"class.v8::internal::Utf16CharacterStream"* %16) #8
  %35 = load i16*, i16** %17, align 8
  br i1 %34, label %36, label %39

36:                                               ; preds = %29
  %37 = load i16, i16* %35, align 2
  %38 = zext i16 %37 to i32
  br label %39

39:                                               ; preds = %22, %25, %29, %36
  %40 = phi i16* [ %18, %22 ], [ %35, %36 ], [ %18, %25 ], [ %35, %29 ]
  %41 = phi i32 [ %24, %22 ], [ %38, %36 ], [ -1, %25 ], [ -1, %29 ]
  %42 = getelementptr inbounds i16, i16* %40, i64 1
  store i16* %42, i16** %17, align 8
  store i32 %41, i32* %3, align 8
  %43 = bitcast %"class.v8::internal::LiteralBuffer"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %43) #8
  %44 = getelementptr inbounds %"class.v8::internal::LiteralBuffer", %"class.v8::internal::LiteralBuffer"* %2, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %43, i8 0, i64 16, i1 false) #8
  %45 = getelementptr inbounds %"class.v8::internal::LiteralBuffer", %"class.v8::internal::LiteralBuffer"* %2, i64 0, i32 1
  store i32 0, i32* %45, align 8
  store i8 1, i8* %44, align 4
  %46 = icmp eq i32 %41, -1
  br i1 %46, label %340, label %47

47:                                               ; preds = %39
  %48 = getelementptr inbounds %"class.v8::internal::LiteralBuffer", %"class.v8::internal::LiteralBuffer"* %2, i64 0, i32 0, i32 1
  %49 = getelementptr inbounds %"class.v8::internal::LiteralBuffer", %"class.v8::internal::LiteralBuffer"* %2, i64 0, i32 0, i32 0
  br label %50

50:                                               ; preds = %112, %47
  %51 = phi i32 [ %41, %47 ], [ %115, %112 ]
  %52 = icmp ult i32 %51, 256
  br i1 %52, label %60, label %53

53:                                               ; preds = %50
  %54 = call zeroext i1 @_ZN2v88internal16IsWhiteSpaceSlowEj(i32 %51) #8
  %55 = and i32 %51, -2
  %56 = icmp eq i32 %55, 8232
  %57 = or i1 %56, %54
  br i1 %57, label %117, label %58

58:                                               ; preds = %53
  %59 = load i32, i32* %3, align 8
  br label %66

60:                                               ; preds = %50
  %61 = zext i32 %51 to i64
  %62 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN2v88internalL17kOneByteCharFlagsE, i64 0, i64 %61
  %63 = load i8, i8* %62, align 1
  %64 = and i8 %63, 8
  %65 = icmp eq i8 %64, 0
  br i1 %65, label %66, label %117

66:                                               ; preds = %58, %60
  %67 = phi i32 [ %59, %58 ], [ %51, %60 ]
  %68 = icmp eq i32 %67, 61
  br i1 %68, label %117, label %69

69:                                               ; preds = %66
  %70 = load i8, i8* %44, align 4, !range !2
  %71 = icmp eq i8 %70, 0
  br i1 %71, label %90, label %72

72:                                               ; preds = %69
  %73 = icmp ult i32 %67, 256
  br i1 %73, label %74, label %89

74:                                               ; preds = %72
  %75 = trunc i32 %67 to i8
  %76 = load i32, i32* %45, align 8
  %77 = load i64, i64* %48, align 8
  %78 = trunc i64 %77 to i32
  %79 = icmp slt i32 %76, %78
  br i1 %79, label %82, label %80

80:                                               ; preds = %74
  call void @_ZN2v88internal13LiteralBuffer12ExpandBufferEv(%"class.v8::internal::LiteralBuffer"* nonnull %2) #8
  %81 = load i32, i32* %45, align 8
  br label %82

82:                                               ; preds = %80, %74
  %83 = phi i32 [ %76, %74 ], [ %81, %80 ]
  %84 = sext i32 %83 to i64
  %85 = load i8*, i8** %49, align 8
  %86 = getelementptr inbounds i8, i8* %85, i64 %84
  store i8 %75, i8* %86, align 1
  %87 = load i32, i32* %45, align 8
  %88 = add nsw i32 %87, 1
  store i32 %88, i32* %45, align 8
  br label %91

89:                                               ; preds = %72
  call void @_ZN2v88internal13LiteralBuffer16ConvertToTwoByteEv(%"class.v8::internal::LiteralBuffer"* nonnull %2) #8
  br label %90

90:                                               ; preds = %89, %69
  call void @_ZN2v88internal13LiteralBuffer14AddTwoByteCharEj(%"class.v8::internal::LiteralBuffer"* nonnull %2, i32 %67) #8
  br label %91

91:                                               ; preds = %82, %90
  %92 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %93 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %92, i64 0, i32 2
  %94 = load i16*, i16** %93, align 8
  %95 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %92, i64 0, i32 3
  %96 = load i16*, i16** %95, align 8
  %97 = icmp ult i16* %94, %96
  br i1 %97, label %112, label %98, !prof !4

98:                                               ; preds = %91
  %99 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %92, i64 0, i32 6
  %100 = load i8, i8* %99, align 8, !range !2
  %101 = icmp eq i8 %100, 0
  br i1 %101, label %102, label %109

102:                                              ; preds = %98
  %103 = bitcast %"class.v8::internal::Utf16CharacterStream"* %92 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %104 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %103, align 8
  %105 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %104, i64 5
  %106 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %105, align 8
  %107 = call zeroext i1 %106(%"class.v8::internal::Utf16CharacterStream"* %92) #8
  %108 = load i16*, i16** %93, align 8
  br i1 %107, label %112, label %109

109:                                              ; preds = %98, %102
  %110 = phi i16* [ %108, %102 ], [ %94, %98 ]
  %111 = getelementptr inbounds i16, i16* %110, i64 1
  store i16* %111, i16** %93, align 8
  store i32 -1, i32* %3, align 8
  br label %117

112:                                              ; preds = %102, %91
  %113 = phi i16* [ %94, %91 ], [ %108, %102 ]
  %114 = load i16, i16* %113, align 2
  %115 = zext i16 %114 to i32
  %116 = getelementptr inbounds i16, i16* %113, i64 1
  store i16* %116, i16** %93, align 8
  store i32 %115, i32* %3, align 8
  br label %50

117:                                              ; preds = %66, %53, %60, %109
  %118 = load i8, i8* %44, align 4, !range !2
  %119 = icmp eq i8 %118, 0
  br i1 %119, label %340, label %120

120:                                              ; preds = %117
  %121 = load i32, i32* %45, align 8
  %122 = getelementptr inbounds %"class.v8::internal::LiteralBuffer", %"class.v8::internal::LiteralBuffer"* %2, i64 0, i32 0, i32 0
  %123 = load i8*, i8** %122, align 8
  %124 = sext i32 %121 to i64
  %125 = getelementptr inbounds i8, i8* %123, i64 %124
  switch i64 %124, label %340 [
    i64 9, label %126
    i64 16, label %140
  ]

126:                                              ; preds = %120, %132
  %127 = phi i8* [ %134, %132 ], [ getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), %120 ]
  %128 = phi i8* [ %133, %132 ], [ %123, %120 ]
  %129 = load i8, i8* %128, align 1
  %130 = load i8, i8* %127, align 1
  %131 = icmp eq i8 %129, %130
  br i1 %131, label %132, label %138

132:                                              ; preds = %126
  %133 = getelementptr inbounds i8, i8* %128, i64 1
  %134 = getelementptr inbounds i8, i8* %127, i64 1
  %135 = icmp eq i8* %133, %125
  br i1 %135, label %136, label %126

136:                                              ; preds = %132
  %137 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 10
  br label %153

138:                                              ; preds = %126
  %139 = icmp eq i32 %121, 16
  br i1 %139, label %140, label %340

140:                                              ; preds = %120, %138
  br label %141

141:                                              ; preds = %140, %147
  %142 = phi i8* [ %149, %147 ], [ getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1, i64 0, i64 0), %140 ]
  %143 = phi i8* [ %148, %147 ], [ %123, %140 ]
  %144 = load i8, i8* %143, align 1
  %145 = load i8, i8* %142, align 1
  %146 = icmp eq i8 %144, %145
  br i1 %146, label %147, label %340

147:                                              ; preds = %141
  %148 = getelementptr inbounds i8, i8* %143, i64 1
  %149 = getelementptr inbounds i8, i8* %142, i64 1
  %150 = icmp eq i8* %148, %125
  br i1 %150, label %151, label %141

151:                                              ; preds = %147
  %152 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 11
  br label %153

153:                                              ; preds = %151, %136
  %154 = phi %"class.v8::internal::LiteralBuffer"* [ %137, %136 ], [ %152, %151 ]
  %155 = load i32, i32* %3, align 8
  %156 = icmp eq i32 %155, 61
  br i1 %156, label %157, label %340

157:                                              ; preds = %153
  %158 = getelementptr inbounds %"class.v8::internal::LiteralBuffer", %"class.v8::internal::LiteralBuffer"* %154, i64 0, i32 1
  store i32 0, i32* %158, align 8
  %159 = getelementptr inbounds %"class.v8::internal::LiteralBuffer", %"class.v8::internal::LiteralBuffer"* %154, i64 0, i32 2
  store i8 1, i8* %159, align 4
  %160 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %161 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %160, i64 0, i32 2
  %162 = load i16*, i16** %161, align 8
  %163 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %160, i64 0, i32 3
  %164 = load i16*, i16** %163, align 8
  %165 = icmp ult i16* %162, %164
  br i1 %165, label %166, label %169, !prof !4

166:                                              ; preds = %157
  %167 = load i16, i16* %162, align 2
  %168 = zext i16 %167 to i32
  br label %183

169:                                              ; preds = %157
  %170 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %160, i64 0, i32 6
  %171 = load i8, i8* %170, align 8, !range !2
  %172 = icmp eq i8 %171, 0
  br i1 %172, label %173, label %183

173:                                              ; preds = %169
  %174 = bitcast %"class.v8::internal::Utf16CharacterStream"* %160 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %175 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %174, align 8
  %176 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %175, i64 5
  %177 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %176, align 8
  %178 = call zeroext i1 %177(%"class.v8::internal::Utf16CharacterStream"* %160) #8
  %179 = load i16*, i16** %161, align 8
  br i1 %178, label %180, label %183

180:                                              ; preds = %173
  %181 = load i16, i16* %179, align 2
  %182 = zext i16 %181 to i32
  br label %183

183:                                              ; preds = %166, %169, %173, %180
  %184 = phi i16* [ %179, %173 ], [ %162, %169 ], [ %179, %180 ], [ %162, %166 ]
  %185 = phi i32 [ -1, %173 ], [ -1, %169 ], [ %182, %180 ], [ %168, %166 ]
  br label %186

186:                                              ; preds = %212, %183
  %187 = phi i16* [ %184, %183 ], [ %213, %212 ]
  %188 = phi i16** [ %161, %183 ], [ %204, %212 ]
  %189 = phi i32 [ %185, %183 ], [ %214, %212 ]
  %190 = getelementptr inbounds i16, i16* %187, i64 1
  store i16* %190, i16** %188, align 8
  store i32 %189, i32* %3, align 8
  %191 = icmp ult i32 %189, 256
  br i1 %191, label %192, label %198

192:                                              ; preds = %186
  %193 = zext i32 %189 to i64
  %194 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN2v88internalL17kOneByteCharFlagsE, i64 0, i64 %193
  %195 = load i8, i8* %194, align 1
  %196 = and i8 %195, 4
  %197 = icmp eq i8 %196, 0
  br i1 %197, label %229, label %202

198:                                              ; preds = %186
  %199 = call zeroext i1 @_ZN2v88internal16IsWhiteSpaceSlowEj(i32 %189) #8
  br i1 %199, label %202, label %200

200:                                              ; preds = %198
  %201 = load i32, i32* %3, align 8
  br label %229

202:                                              ; preds = %192, %198
  %203 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %204 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %203, i64 0, i32 2
  %205 = load i16*, i16** %204, align 8
  %206 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %203, i64 0, i32 3
  %207 = load i16*, i16** %206, align 8
  %208 = icmp ult i16* %205, %207
  br i1 %208, label %209, label %215, !prof !4

209:                                              ; preds = %202
  %210 = load i16, i16* %205, align 2
  %211 = zext i16 %210 to i32
  br label %212

212:                                              ; preds = %209, %215, %219, %226
  %213 = phi i16* [ %205, %209 ], [ %225, %226 ], [ %205, %215 ], [ %225, %219 ]
  %214 = phi i32 [ %211, %209 ], [ %228, %226 ], [ -1, %215 ], [ -1, %219 ]
  br label %186

215:                                              ; preds = %202
  %216 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %203, i64 0, i32 6
  %217 = load i8, i8* %216, align 8, !range !2
  %218 = icmp eq i8 %217, 0
  br i1 %218, label %219, label %212

219:                                              ; preds = %215
  %220 = bitcast %"class.v8::internal::Utf16CharacterStream"* %203 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %221 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %220, align 8
  %222 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %221, i64 5
  %223 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %222, align 8
  %224 = call zeroext i1 %223(%"class.v8::internal::Utf16CharacterStream"* %203) #8
  %225 = load i16*, i16** %204, align 8
  br i1 %224, label %226, label %212

226:                                              ; preds = %219
  %227 = load i16, i16* %225, align 2
  %228 = zext i16 %227 to i32
  br label %212

229:                                              ; preds = %192, %200
  %230 = phi i32 [ %201, %200 ], [ %189, %192 ]
  %231 = getelementptr inbounds %"class.v8::internal::LiteralBuffer", %"class.v8::internal::LiteralBuffer"* %154, i64 0, i32 0, i32 1
  %232 = getelementptr inbounds %"class.v8::internal::LiteralBuffer", %"class.v8::internal::LiteralBuffer"* %154, i64 0, i32 0, i32 0
  br label %233

233:                                              ; preds = %229, %295
  %234 = phi i32 [ %230, %229 ], [ %297, %295 ]
  switch i32 %234, label %235 [
    i32 -1, label %246
    i32 8232, label %246
    i32 13, label %246
    i32 10, label %246
    i32 8233, label %246
  ]

235:                                              ; preds = %233
  %236 = icmp ult i32 %234, 256
  br i1 %236, label %237, label %243

237:                                              ; preds = %235
  %238 = zext i32 %234 to i64
  %239 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN2v88internalL17kOneByteCharFlagsE, i64 0, i64 %238
  %240 = load i8, i8* %239, align 1
  %241 = and i8 %240, 4
  %242 = icmp eq i8 %241, 0
  br i1 %242, label %248, label %246

243:                                              ; preds = %235
  %244 = call zeroext i1 @_ZN2v88internal16IsWhiteSpaceSlowEj(i32 %234) #8
  %245 = load i32, i32* %3, align 8
  br i1 %244, label %246, label %248

246:                                              ; preds = %237, %233, %233, %233, %233, %233, %243
  %247 = phi i32 [ %234, %237 ], [ %234, %233 ], [ %234, %233 ], [ %234, %233 ], [ %234, %233 ], [ %234, %233 ], [ %245, %243 ]
  br label %299

248:                                              ; preds = %243, %237
  %249 = phi i32 [ %234, %237 ], [ %245, %243 ]
  %250 = load i8, i8* %159, align 4, !range !2
  %251 = icmp eq i8 %250, 0
  br i1 %251, label %270, label %252

252:                                              ; preds = %248
  %253 = icmp ult i32 %249, 256
  br i1 %253, label %254, label %269

254:                                              ; preds = %252
  %255 = trunc i32 %249 to i8
  %256 = load i32, i32* %158, align 8
  %257 = load i64, i64* %231, align 8
  %258 = trunc i64 %257 to i32
  %259 = icmp slt i32 %256, %258
  br i1 %259, label %262, label %260

260:                                              ; preds = %254
  call void @_ZN2v88internal13LiteralBuffer12ExpandBufferEv(%"class.v8::internal::LiteralBuffer"* %154) #8
  %261 = load i32, i32* %158, align 8
  br label %262

262:                                              ; preds = %260, %254
  %263 = phi i32 [ %256, %254 ], [ %261, %260 ]
  %264 = sext i32 %263 to i64
  %265 = load i8*, i8** %232, align 8
  %266 = getelementptr inbounds i8, i8* %265, i64 %264
  store i8 %255, i8* %266, align 1
  %267 = load i32, i32* %158, align 8
  %268 = add nsw i32 %267, 1
  store i32 %268, i32* %158, align 8
  br label %271

269:                                              ; preds = %252
  call void @_ZN2v88internal13LiteralBuffer16ConvertToTwoByteEv(%"class.v8::internal::LiteralBuffer"* %154) #8
  br label %270

270:                                              ; preds = %269, %248
  call void @_ZN2v88internal13LiteralBuffer14AddTwoByteCharEj(%"class.v8::internal::LiteralBuffer"* %154, i32 %249) #8
  br label %271

271:                                              ; preds = %262, %270
  %272 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %273 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %272, i64 0, i32 2
  %274 = load i16*, i16** %273, align 8
  %275 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %272, i64 0, i32 3
  %276 = load i16*, i16** %275, align 8
  %277 = icmp ult i16* %274, %276
  br i1 %277, label %278, label %281, !prof !4

278:                                              ; preds = %271
  %279 = load i16, i16* %274, align 2
  %280 = zext i16 %279 to i32
  br label %295

281:                                              ; preds = %271
  %282 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %272, i64 0, i32 6
  %283 = load i8, i8* %282, align 8, !range !2
  %284 = icmp eq i8 %283, 0
  br i1 %284, label %285, label %295

285:                                              ; preds = %281
  %286 = bitcast %"class.v8::internal::Utf16CharacterStream"* %272 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %287 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %286, align 8
  %288 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %287, i64 5
  %289 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %288, align 8
  %290 = call zeroext i1 %289(%"class.v8::internal::Utf16CharacterStream"* %272) #8
  %291 = load i16*, i16** %273, align 8
  br i1 %290, label %292, label %295

292:                                              ; preds = %285
  %293 = load i16, i16* %291, align 2
  %294 = zext i16 %293 to i32
  br label %295

295:                                              ; preds = %278, %281, %285, %292
  %296 = phi i16* [ %274, %278 ], [ %291, %292 ], [ %274, %281 ], [ %291, %285 ]
  %297 = phi i32 [ %280, %278 ], [ %294, %292 ], [ -1, %281 ], [ -1, %285 ]
  %298 = getelementptr inbounds i16, i16* %296, i64 1
  store i16* %298, i16** %273, align 8
  store i32 %297, i32* %3, align 8
  br label %233

299:                                              ; preds = %246, %336
  %300 = phi i32 [ %338, %336 ], [ %247, %246 ]
  switch i32 %300, label %301 [
    i32 -1, label %340
    i32 8232, label %340
    i32 13, label %340
    i32 10, label %340
    i32 8233, label %340
  ]

301:                                              ; preds = %299
  %302 = icmp ult i32 %300, 256
  br i1 %302, label %303, label %309

303:                                              ; preds = %301
  %304 = zext i32 %300 to i64
  %305 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN2v88internalL17kOneByteCharFlagsE, i64 0, i64 %304
  %306 = load i8, i8* %305, align 1
  %307 = and i8 %306, 4
  %308 = icmp eq i8 %307, 0
  br i1 %308, label %311, label %312

309:                                              ; preds = %301
  %310 = call zeroext i1 @_ZN2v88internal16IsWhiteSpaceSlowEj(i32 %300) #8
  br i1 %310, label %312, label %311

311:                                              ; preds = %303, %309
  store i32 0, i32* %158, align 8
  store i8 1, i8* %159, align 4
  br label %340

312:                                              ; preds = %303, %309
  %313 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %15, align 8
  %314 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %313, i64 0, i32 2
  %315 = load i16*, i16** %314, align 8
  %316 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %313, i64 0, i32 3
  %317 = load i16*, i16** %316, align 8
  %318 = icmp ult i16* %315, %317
  br i1 %318, label %319, label %322, !prof !4

319:                                              ; preds = %312
  %320 = load i16, i16* %315, align 2
  %321 = zext i16 %320 to i32
  br label %336

322:                                              ; preds = %312
  %323 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %313, i64 0, i32 6
  %324 = load i8, i8* %323, align 8, !range !2
  %325 = icmp eq i8 %324, 0
  br i1 %325, label %326, label %336

326:                                              ; preds = %322
  %327 = bitcast %"class.v8::internal::Utf16CharacterStream"* %313 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %328 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %327, align 8
  %329 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %328, i64 5
  %330 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %329, align 8
  %331 = call zeroext i1 %330(%"class.v8::internal::Utf16CharacterStream"* %313) #8
  %332 = load i16*, i16** %314, align 8
  br i1 %331, label %333, label %336

333:                                              ; preds = %326
  %334 = load i16, i16* %332, align 2
  %335 = zext i16 %334 to i32
  br label %336

336:                                              ; preds = %319, %322, %326, %333
  %337 = phi i16* [ %315, %319 ], [ %332, %333 ], [ %315, %322 ], [ %332, %326 ]
  %338 = phi i32 [ %321, %319 ], [ %335, %333 ], [ -1, %322 ], [ -1, %326 ]
  %339 = getelementptr inbounds i16, i16* %337, i64 1
  store i16* %339, i16** %314, align 8
  store i32 %338, i32* %3, align 8
  br label %299

340:                                              ; preds = %141, %299, %299, %299, %299, %299, %39, %117, %120, %138, %153, %311
  %341 = getelementptr inbounds %"class.v8::internal::LiteralBuffer", %"class.v8::internal::LiteralBuffer"* %2, i64 0, i32 0, i32 0
  %342 = load i8*, i8** %341, align 8
  %343 = icmp eq i8* %342, null
  br i1 %343, label %345, label %344

344:                                              ; preds = %340
  call void @_ZdaPv(i8* nonnull %342) #10
  br label %345

345:                                              ; preds = %340, %344
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %43) #8
  br label %346

346:                                              ; preds = %6, %12, %345
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i8 @_ZN2v88internal7Scanner20SkipMultiLineCommentEv(%"class.v8::internal::Scanner"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 2
  %3 = load %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"** %2, align 8
  %4 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %3, i64 0, i32 8
  %5 = load i8, i8* %4, align 4, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %120

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 4
  %9 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 5
  br label %10

10:                                               ; preds = %58, %7
  %11 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %8, align 8
  %12 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %11, i64 0, i32 2
  %13 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %11, i64 0, i32 3
  %14 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %11, i64 0, i32 6
  %15 = bitcast %"class.v8::internal::Utf16CharacterStream"* %11 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  br label %16

16:                                               ; preds = %42, %10
  %17 = load i16*, i16** %12, align 8
  %18 = load i16*, i16** %13, align 8
  %19 = icmp eq i16* %17, %18
  br i1 %19, label %36, label %20

20:                                               ; preds = %16, %33
  %21 = phi i16* [ %34, %33 ], [ %17, %16 ]
  %22 = load i16, i16* %21, align 2
  %23 = icmp ugt i16 %22, 127
  br i1 %23, label %24, label %27, !prof !3

24:                                               ; preds = %20
  %25 = and i16 %22, -2
  %26 = icmp eq i16 %25, 8232
  br i1 %26, label %36, label %33

27:                                               ; preds = %20
  %28 = zext i16 %22 to i64
  %29 = getelementptr inbounds [128 x i8], [128 x i8]* @_ZN2v88internalL20character_scan_flagsE, i64 0, i64 %28
  %30 = load i8, i8* %29, align 1
  %31 = and i8 %30, 32
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %33, label %36

33:                                               ; preds = %27, %24
  %34 = getelementptr inbounds i16, i16* %21, i64 1
  %35 = icmp eq i16* %34, %18
  br i1 %35, label %39, label %20

36:                                               ; preds = %27, %24, %16
  %37 = phi i16* [ %17, %16 ], [ %21, %24 ], [ %21, %27 ]
  %38 = icmp eq i16* %37, %18
  br i1 %38, label %39, label %52

39:                                               ; preds = %33, %36
  store i16* %18, i16** %12, align 8
  %40 = load i8, i8* %14, align 8, !range !2
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %42, label %49

42:                                               ; preds = %39
  %43 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %15, align 8
  %44 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %43, i64 5
  %45 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %44, align 8
  %46 = tail call zeroext i1 %45(%"class.v8::internal::Utf16CharacterStream"* %11) #8
  br i1 %46, label %16, label %47

47:                                               ; preds = %42
  %48 = load i16*, i16** %12, align 8
  br label %49

49:                                               ; preds = %39, %47
  %50 = phi i16* [ %48, %47 ], [ %18, %39 ]
  %51 = getelementptr inbounds i16, i16* %50, i64 1
  store i16* %51, i16** %12, align 8
  br label %56

52:                                               ; preds = %36
  %53 = getelementptr inbounds i16, i16* %37, i64 1
  store i16* %53, i16** %12, align 8
  %54 = load i16, i16* %37, align 2
  %55 = zext i16 %54 to i32
  br label %56

56:                                               ; preds = %49, %52
  %57 = phi i32 [ %55, %52 ], [ -1, %49 ]
  store i32 %57, i32* %9, align 8
  br label %58

58:                                               ; preds = %84, %56
  %59 = phi i32 [ %86, %84 ], [ %57, %56 ]
  switch i32 %59, label %10 [
    i32 42, label %60
    i32 8232, label %117
    i32 13, label %117
    i32 10, label %117
    i32 8233, label %117
    i32 -1, label %120
  ]

60:                                               ; preds = %58
  %61 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %8, align 8
  %62 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %61, i64 0, i32 2
  %63 = load i16*, i16** %62, align 8
  %64 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %61, i64 0, i32 3
  %65 = load i16*, i16** %64, align 8
  %66 = icmp ult i16* %63, %65
  br i1 %66, label %67, label %70, !prof !4

67:                                               ; preds = %60
  %68 = load i16, i16* %63, align 2
  %69 = zext i16 %68 to i32
  br label %84

70:                                               ; preds = %60
  %71 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %61, i64 0, i32 6
  %72 = load i8, i8* %71, align 8, !range !2
  %73 = icmp eq i8 %72, 0
  br i1 %73, label %74, label %84

74:                                               ; preds = %70
  %75 = bitcast %"class.v8::internal::Utf16CharacterStream"* %61 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %76 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %75, align 8
  %77 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %76, i64 5
  %78 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %77, align 8
  %79 = tail call zeroext i1 %78(%"class.v8::internal::Utf16CharacterStream"* %61) #8
  %80 = load i16*, i16** %62, align 8
  br i1 %79, label %81, label %84

81:                                               ; preds = %74
  %82 = load i16, i16* %80, align 2
  %83 = zext i16 %82 to i32
  br label %84

84:                                               ; preds = %67, %70, %74, %81
  %85 = phi i16* [ %63, %67 ], [ %80, %81 ], [ %63, %70 ], [ %80, %74 ]
  %86 = phi i32 [ %69, %67 ], [ %83, %81 ], [ -1, %70 ], [ -1, %74 ]
  %87 = getelementptr inbounds i16, i16* %85, i64 1
  store i16* %87, i16** %62, align 8
  store i32 %86, i32* %9, align 8
  %88 = icmp eq i32 %86, 47
  br i1 %88, label %89, label %58

89:                                               ; preds = %84
  %90 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %8, align 8
  %91 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %90, i64 0, i32 2
  %92 = load i16*, i16** %91, align 8
  %93 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %90, i64 0, i32 3
  %94 = load i16*, i16** %93, align 8
  %95 = icmp ult i16* %92, %94
  br i1 %95, label %96, label %99, !prof !4

96:                                               ; preds = %89
  %97 = load i16, i16* %92, align 2
  %98 = zext i16 %97 to i32
  br label %113

99:                                               ; preds = %89
  %100 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %90, i64 0, i32 6
  %101 = load i8, i8* %100, align 8, !range !2
  %102 = icmp eq i8 %101, 0
  br i1 %102, label %103, label %113

103:                                              ; preds = %99
  %104 = bitcast %"class.v8::internal::Utf16CharacterStream"* %90 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %105 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %104, align 8
  %106 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %105, i64 5
  %107 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %106, align 8
  %108 = tail call zeroext i1 %107(%"class.v8::internal::Utf16CharacterStream"* %90) #8
  %109 = load i16*, i16** %91, align 8
  br i1 %108, label %110, label %113

110:                                              ; preds = %103
  %111 = load i16, i16* %109, align 2
  %112 = zext i16 %111 to i32
  br label %113

113:                                              ; preds = %96, %99, %103, %110
  %114 = phi i16* [ %92, %96 ], [ %109, %110 ], [ %92, %99 ], [ %109, %103 ]
  %115 = phi i32 [ %98, %96 ], [ %112, %110 ], [ -1, %99 ], [ -1, %103 ]
  %116 = getelementptr inbounds i16, i16* %114, i64 1
  store i16* %116, i16** %91, align 8
  store i32 %115, i32* %9, align 8
  br label %224

117:                                              ; preds = %58, %58, %58, %58
  %118 = load %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"** %2, align 8
  %119 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %118, i64 0, i32 8
  store i8 1, i8* %119, align 4
  br label %120

120:                                              ; preds = %58, %1, %117
  %121 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 5
  %122 = load i32, i32* %121, align 8
  %123 = icmp eq i32 %122, -1
  br i1 %123, label %224, label %124

124:                                              ; preds = %120
  %125 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 4
  br label %126

126:                                              ; preds = %165, %124
  %127 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %125, align 8
  %128 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %127, i64 0, i32 2
  %129 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %127, i64 0, i32 3
  %130 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %127, i64 0, i32 6
  %131 = bitcast %"class.v8::internal::Utf16CharacterStream"* %127 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  br label %132

132:                                              ; preds = %149, %126
  %133 = load i16*, i16** %128, align 8
  %134 = load i16*, i16** %129, align 8
  %135 = icmp eq i16* %133, %134
  br i1 %135, label %143, label %136

136:                                              ; preds = %132, %140
  %137 = phi i16* [ %141, %140 ], [ %133, %132 ]
  %138 = load i16, i16* %137, align 2
  %139 = icmp eq i16 %138, 42
  br i1 %139, label %143, label %140

140:                                              ; preds = %136
  %141 = getelementptr inbounds i16, i16* %137, i64 1
  %142 = icmp eq i16* %141, %134
  br i1 %142, label %146, label %136

143:                                              ; preds = %136, %132
  %144 = phi i16* [ %133, %132 ], [ %137, %136 ]
  %145 = icmp eq i16* %144, %134
  br i1 %145, label %146, label %159

146:                                              ; preds = %140, %143
  store i16* %134, i16** %128, align 8
  %147 = load i8, i8* %130, align 8, !range !2
  %148 = icmp eq i8 %147, 0
  br i1 %148, label %149, label %156

149:                                              ; preds = %146
  %150 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %131, align 8
  %151 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %150, i64 5
  %152 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %151, align 8
  %153 = tail call zeroext i1 %152(%"class.v8::internal::Utf16CharacterStream"* %127) #8
  br i1 %153, label %132, label %154

154:                                              ; preds = %149
  %155 = load i16*, i16** %128, align 8
  br label %156

156:                                              ; preds = %146, %154
  %157 = phi i16* [ %155, %154 ], [ %134, %146 ]
  %158 = getelementptr inbounds i16, i16* %157, i64 1
  store i16* %158, i16** %128, align 8
  br label %163

159:                                              ; preds = %143
  %160 = getelementptr inbounds i16, i16* %144, i64 1
  store i16* %160, i16** %128, align 8
  %161 = load i16, i16* %144, align 2
  %162 = zext i16 %161 to i32
  br label %163

163:                                              ; preds = %156, %159
  %164 = phi i32 [ %162, %159 ], [ -1, %156 ]
  store i32 %164, i32* %121, align 8
  br label %165

165:                                              ; preds = %191, %163
  %166 = phi i32 [ %193, %191 ], [ %164, %163 ]
  switch i32 %166, label %126 [
    i32 42, label %167
    i32 -1, label %224
  ]

167:                                              ; preds = %165
  %168 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %125, align 8
  %169 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %168, i64 0, i32 2
  %170 = load i16*, i16** %169, align 8
  %171 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %168, i64 0, i32 3
  %172 = load i16*, i16** %171, align 8
  %173 = icmp ult i16* %170, %172
  br i1 %173, label %174, label %177, !prof !4

174:                                              ; preds = %167
  %175 = load i16, i16* %170, align 2
  %176 = zext i16 %175 to i32
  br label %191

177:                                              ; preds = %167
  %178 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %168, i64 0, i32 6
  %179 = load i8, i8* %178, align 8, !range !2
  %180 = icmp eq i8 %179, 0
  br i1 %180, label %181, label %191

181:                                              ; preds = %177
  %182 = bitcast %"class.v8::internal::Utf16CharacterStream"* %168 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %183 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %182, align 8
  %184 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %183, i64 5
  %185 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %184, align 8
  %186 = tail call zeroext i1 %185(%"class.v8::internal::Utf16CharacterStream"* %168) #8
  %187 = load i16*, i16** %169, align 8
  br i1 %186, label %188, label %191

188:                                              ; preds = %181
  %189 = load i16, i16* %187, align 2
  %190 = zext i16 %189 to i32
  br label %191

191:                                              ; preds = %174, %177, %181, %188
  %192 = phi i16* [ %170, %174 ], [ %187, %188 ], [ %170, %177 ], [ %187, %181 ]
  %193 = phi i32 [ %176, %174 ], [ %190, %188 ], [ -1, %177 ], [ -1, %181 ]
  %194 = getelementptr inbounds i16, i16* %192, i64 1
  store i16* %194, i16** %169, align 8
  store i32 %193, i32* %121, align 8
  %195 = icmp eq i32 %193, 47
  br i1 %195, label %196, label %165

196:                                              ; preds = %191
  %197 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %125, align 8
  %198 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %197, i64 0, i32 2
  %199 = load i16*, i16** %198, align 8
  %200 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %197, i64 0, i32 3
  %201 = load i16*, i16** %200, align 8
  %202 = icmp ult i16* %199, %201
  br i1 %202, label %203, label %206, !prof !4

203:                                              ; preds = %196
  %204 = load i16, i16* %199, align 2
  %205 = zext i16 %204 to i32
  br label %220

206:                                              ; preds = %196
  %207 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %197, i64 0, i32 6
  %208 = load i8, i8* %207, align 8, !range !2
  %209 = icmp eq i8 %208, 0
  br i1 %209, label %210, label %220

210:                                              ; preds = %206
  %211 = bitcast %"class.v8::internal::Utf16CharacterStream"* %197 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %212 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %211, align 8
  %213 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %212, i64 5
  %214 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %213, align 8
  %215 = tail call zeroext i1 %214(%"class.v8::internal::Utf16CharacterStream"* %197) #8
  %216 = load i16*, i16** %198, align 8
  br i1 %215, label %217, label %220

217:                                              ; preds = %210
  %218 = load i16, i16* %216, align 2
  %219 = zext i16 %218 to i32
  br label %220

220:                                              ; preds = %203, %206, %210, %217
  %221 = phi i16* [ %199, %203 ], [ %216, %217 ], [ %199, %206 ], [ %216, %210 ]
  %222 = phi i32 [ %205, %203 ], [ %219, %217 ], [ -1, %206 ], [ -1, %210 ]
  %223 = getelementptr inbounds i16, i16* %221, i64 1
  store i16* %223, i16** %198, align 8
  store i32 %222, i32* %121, align 8
  br label %224

224:                                              ; preds = %165, %120, %220, %113
  %225 = phi i8 [ 114, %220 ], [ 114, %113 ], [ 112, %120 ], [ 112, %165 ]
  ret i8 %225
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i8 @_ZN2v88internal7Scanner15ScanHtmlCommentEv(%"class.v8::internal::Scanner"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 4
  %3 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %3, i64 0, i32 2
  %5 = load i16*, i16** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %3, i64 0, i32 3
  %7 = load i16*, i16** %6, align 8
  %8 = icmp ult i16* %5, %7
  br i1 %8, label %24, label %9, !prof !4

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %3, i64 0, i32 6
  %11 = load i8, i8* %10, align 8, !range !2
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %20

13:                                               ; preds = %9
  %14 = bitcast %"class.v8::internal::Utf16CharacterStream"* %3 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %15 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %14, align 8
  %16 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %15, i64 5
  %17 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %16, align 8
  %18 = tail call zeroext i1 %17(%"class.v8::internal::Utf16CharacterStream"* %3) #8
  %19 = load i16*, i16** %4, align 8
  br i1 %18, label %24, label %20

20:                                               ; preds = %9, %13
  %21 = phi i16* [ %19, %13 ], [ %5, %9 ]
  %22 = getelementptr inbounds i16, i16* %21, i64 1
  store i16* %22, i16** %4, align 8
  %23 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 5
  store i32 -1, i32* %23, align 8
  br label %54

24:                                               ; preds = %13, %1
  %25 = phi i16* [ %5, %1 ], [ %19, %13 ]
  %26 = load i16, i16* %25, align 2
  %27 = zext i16 %26 to i32
  %28 = getelementptr inbounds i16, i16* %25, i64 1
  store i16* %28, i16** %4, align 8
  %29 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 5
  store i32 %27, i32* %29, align 8
  %30 = icmp eq i16 %26, 45
  br i1 %30, label %31, label %54

31:                                               ; preds = %24
  %32 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %2, align 8
  %33 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %32, i64 0, i32 2
  %34 = load i16*, i16** %33, align 8
  %35 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %32, i64 0, i32 3
  %36 = load i16*, i16** %35, align 8
  %37 = icmp ult i16* %34, %36
  br i1 %37, label %50, label %38, !prof !4

38:                                               ; preds = %31
  %39 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %32, i64 0, i32 6
  %40 = load i8, i8* %39, align 8, !range !2
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %42, label %54

42:                                               ; preds = %38
  %43 = bitcast %"class.v8::internal::Utf16CharacterStream"* %32 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %44 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %43, align 8
  %45 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %44, i64 5
  %46 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %45, align 8
  %47 = tail call zeroext i1 %46(%"class.v8::internal::Utf16CharacterStream"* %32) #8
  br i1 %47, label %48, label %54

48:                                               ; preds = %42
  %49 = load i16*, i16** %33, align 8
  br label %50

50:                                               ; preds = %31, %48
  %51 = phi i16* [ %49, %48 ], [ %34, %31 ]
  %52 = load i16, i16* %51, align 2
  %53 = icmp eq i16 %52, 45
  br i1 %53, label %84, label %54

54:                                               ; preds = %38, %42, %20, %50, %24
  %55 = phi i32* [ %23, %20 ], [ %29, %50 ], [ %29, %24 ], [ %29, %42 ], [ %29, %38 ]
  %56 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %2, align 8
  %57 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %56, i64 0, i32 2
  %58 = load i16*, i16** %57, align 8
  %59 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %56, i64 0, i32 1
  %60 = load i16*, i16** %59, align 8
  %61 = icmp ugt i16* %58, %60
  %62 = ptrtoint i16* %60 to i64
  br i1 %61, label %63, label %65, !prof !4

63:                                               ; preds = %54
  %64 = getelementptr inbounds i16, i16* %58, i64 -1
  store i16* %64, i16** %57, align 8
  br label %83

65:                                               ; preds = %54
  %66 = ptrtoint i16* %58 to i64
  %67 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %56, i64 0, i32 4
  %68 = load i64, i64* %67, align 8
  %69 = bitcast i16** %57 to i64*
  %70 = sub i64 %66, %62
  %71 = ashr exact i64 %70, 1
  %72 = add nsw i64 %71, -1
  %73 = add i64 %72, %68
  store i64 %73, i64* %67, align 8
  store i64 %62, i64* %69, align 8
  %74 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %56, i64 0, i32 6
  %75 = load i8, i8* %74, align 8, !range !2
  %76 = icmp eq i8 %75, 0
  br i1 %76, label %77, label %83

77:                                               ; preds = %65
  %78 = bitcast %"class.v8::internal::Utf16CharacterStream"* %56 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %79 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %78, align 8
  %80 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %79, i64 5
  %81 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %80, align 8
  %82 = tail call zeroext i1 %81(%"class.v8::internal::Utf16CharacterStream"* %56) #8
  br label %83

83:                                               ; preds = %63, %65, %77
  store i32 33, i32* %55, align 8
  br label %177

84:                                               ; preds = %50
  %85 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %2, align 8
  %86 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %85, i64 0, i32 2
  %87 = load i16*, i16** %86, align 8
  %88 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %85, i64 0, i32 3
  %89 = load i16*, i16** %88, align 8
  %90 = icmp ult i16* %87, %89
  br i1 %90, label %91, label %94, !prof !4

91:                                               ; preds = %84
  %92 = load i16, i16* %87, align 2
  %93 = zext i16 %92 to i32
  br label %108

94:                                               ; preds = %84
  %95 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %85, i64 0, i32 6
  %96 = load i8, i8* %95, align 8, !range !2
  %97 = icmp eq i8 %96, 0
  br i1 %97, label %98, label %108

98:                                               ; preds = %94
  %99 = bitcast %"class.v8::internal::Utf16CharacterStream"* %85 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %100 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %99, align 8
  %101 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %100, i64 5
  %102 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %101, align 8
  %103 = tail call zeroext i1 %102(%"class.v8::internal::Utf16CharacterStream"* %85) #8
  %104 = load i16*, i16** %86, align 8
  br i1 %103, label %105, label %108

105:                                              ; preds = %98
  %106 = load i16, i16* %104, align 2
  %107 = zext i16 %106 to i32
  br label %108

108:                                              ; preds = %91, %94, %98, %105
  %109 = phi i16* [ %87, %91 ], [ %104, %105 ], [ %87, %94 ], [ %104, %98 ]
  %110 = phi i32 [ %93, %91 ], [ %107, %105 ], [ -1, %94 ], [ -1, %98 ]
  %111 = getelementptr inbounds i16, i16* %109, i64 1
  store i16* %111, i16** %86, align 8
  store i32 %110, i32* %29, align 8
  %112 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 8
  store i8 1, i8* %112, align 8
  %113 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 0, i32 0
  %114 = load i32, i32* %113, align 4
  %115 = and i32 %114, 32
  %116 = icmp eq i32 %115, 0
  %117 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %2, align 8
  br i1 %116, label %140, label %118

118:                                              ; preds = %108
  %119 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %117, i64 0, i32 4
  %120 = load i64, i64* %119, align 8
  %121 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %117, i64 0, i32 2
  %122 = bitcast i16** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %117, i64 0, i32 1
  %125 = bitcast i16** %124 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = sub i64 %123, %126
  %128 = lshr exact i64 %127, 1
  %129 = add i64 %128, %120
  %130 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 14
  %131 = load i32, i32* %130, align 4
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %133, label %177

133:                                              ; preds = %118
  %134 = add i64 %129, 4294967295
  store i32 292, i32* %130, align 4
  %135 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 15
  %136 = bitcast %"struct.v8::internal::Scanner::Location"* %135 to i64*
  %137 = shl i64 %129, 32
  %138 = and i64 %134, 4294967295
  %139 = or i64 %138, %137
  store i64 %139, i64* %136, align 8
  br label %177

140:                                              ; preds = %108
  %141 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %117, i64 0, i32 2
  %142 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %117, i64 0, i32 3
  %143 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %117, i64 0, i32 6
  %144 = bitcast %"class.v8::internal::Utf16CharacterStream"* %117 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  br label %145

145:                                              ; preds = %161, %140
  %146 = load i16*, i16** %141, align 8
  %147 = load i16*, i16** %142, align 8
  %148 = icmp eq i16* %146, %147
  br i1 %148, label %155, label %149

149:                                              ; preds = %145, %152
  %150 = phi i16* [ %153, %152 ], [ %146, %145 ]
  %151 = load i16, i16* %150, align 2
  switch i16 %151, label %152 [
    i16 8232, label %155
    i16 13, label %155
    i16 10, label %155
    i16 8233, label %155
  ]

152:                                              ; preds = %149
  %153 = getelementptr inbounds i16, i16* %150, i64 1
  %154 = icmp eq i16* %153, %147
  br i1 %154, label %158, label %149

155:                                              ; preds = %149, %149, %149, %149, %145
  %156 = phi i16* [ %146, %145 ], [ %150, %149 ], [ %150, %149 ], [ %150, %149 ], [ %150, %149 ]
  %157 = icmp eq i16* %156, %147
  br i1 %157, label %158, label %171

158:                                              ; preds = %152, %155
  store i16* %147, i16** %141, align 8
  %159 = load i8, i8* %143, align 8, !range !2
  %160 = icmp eq i8 %159, 0
  br i1 %160, label %161, label %168

161:                                              ; preds = %158
  %162 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %144, align 8
  %163 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %162, i64 5
  %164 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %163, align 8
  %165 = tail call zeroext i1 %164(%"class.v8::internal::Utf16CharacterStream"* %117) #8
  br i1 %165, label %145, label %166

166:                                              ; preds = %161
  %167 = load i16*, i16** %141, align 8
  br label %168

168:                                              ; preds = %158, %166
  %169 = phi i16* [ %167, %166 ], [ %147, %158 ]
  %170 = getelementptr inbounds i16, i16* %169, i64 1
  store i16* %170, i16** %141, align 8
  br label %175

171:                                              ; preds = %155
  %172 = getelementptr inbounds i16, i16* %156, i64 1
  store i16* %172, i16** %141, align 8
  %173 = load i16, i16* %156, align 2
  %174 = zext i16 %173 to i32
  br label %175

175:                                              ; preds = %171, %168
  %176 = phi i32 [ %174, %171 ], [ -1, %168 ]
  store i32 %176, i32* %29, align 8
  br label %177

177:                                              ; preds = %175, %133, %118, %83
  %178 = phi i8 [ 60, %83 ], [ 114, %175 ], [ 112, %118 ], [ 112, %133 ]
  ret i8 %178
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal7Scanner11SeekForwardEi(%"class.v8::internal::Scanner"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 2
  %4 = load %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"** %3, align 8
  %5 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %4, i64 0, i32 0, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, %1
  br i1 %7, label %2646, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 4
  %10 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %11 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %10, i64 0, i32 4
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %10, i64 0, i32 2
  %14 = bitcast i16** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %10, i64 0, i32 1
  %17 = bitcast i16** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %15, %18
  %20 = lshr exact i64 %19, 1
  %21 = add i64 %20, %12
  %22 = trunc i64 %21 to i32
  %23 = add nsw i32 %22, -1
  %24 = icmp eq i32 %23, %1
  br i1 %24, label %82, label %25

25:                                               ; preds = %8
  %26 = sext i32 %1 to i64
  %27 = icmp ugt i64 %12, %26
  br i1 %27, label %40, label %28, !prof !3

28:                                               ; preds = %25
  %29 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %10, i64 0, i32 3
  %30 = bitcast i16** %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %31, %18
  %33 = ashr exact i64 %32, 1
  %34 = add i64 %33, %12
  %35 = icmp ugt i64 %34, %26
  br i1 %35, label %36, label %40, !prof !4

36:                                               ; preds = %28
  %37 = inttoptr i64 %18 to i16*
  %38 = sub i64 %26, %12
  %39 = getelementptr inbounds i16, i16* %37, i64 %38
  store i16* %39, i16** %13, align 8
  br label %50

40:                                               ; preds = %25, %28
  store i64 %26, i64* %11, align 8
  store i64 %18, i64* %14, align 8
  %41 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %10, i64 0, i32 6
  %42 = load i8, i8* %41, align 8, !range !2
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %44, label %50

44:                                               ; preds = %40
  %45 = bitcast %"class.v8::internal::Utf16CharacterStream"* %10 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %46 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %45, align 8
  %47 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %46, i64 5
  %48 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %47, align 8
  %49 = tail call zeroext i1 %48(%"class.v8::internal::Utf16CharacterStream"* %10) #8
  br label %50

50:                                               ; preds = %36, %40, %44
  %51 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %52 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %51, i64 0, i32 2
  %53 = load i16*, i16** %52, align 8
  %54 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %51, i64 0, i32 3
  %55 = load i16*, i16** %54, align 8
  %56 = icmp ult i16* %53, %55
  br i1 %56, label %57, label %60, !prof !4

57:                                               ; preds = %50
  %58 = load i16, i16* %53, align 2
  %59 = zext i16 %58 to i32
  br label %74

60:                                               ; preds = %50
  %61 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %51, i64 0, i32 6
  %62 = load i8, i8* %61, align 8, !range !2
  %63 = icmp eq i8 %62, 0
  br i1 %63, label %64, label %74

64:                                               ; preds = %60
  %65 = bitcast %"class.v8::internal::Utf16CharacterStream"* %51 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %66 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %65, align 8
  %67 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %66, i64 5
  %68 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %67, align 8
  %69 = tail call zeroext i1 %68(%"class.v8::internal::Utf16CharacterStream"* %51) #8
  %70 = load i16*, i16** %52, align 8
  br i1 %69, label %71, label %74

71:                                               ; preds = %64
  %72 = load i16, i16* %70, align 2
  %73 = zext i16 %72 to i32
  br label %74

74:                                               ; preds = %57, %60, %64, %71
  %75 = phi i16* [ %53, %57 ], [ %70, %71 ], [ %53, %60 ], [ %70, %64 ]
  %76 = phi i32 [ %59, %57 ], [ %73, %71 ], [ -1, %60 ], [ -1, %64 ]
  %77 = getelementptr inbounds i16, i16* %75, i64 1
  store i16* %77, i16** %52, align 8
  %78 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 5
  store i32 %76, i32* %78, align 8
  %79 = load %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"** %3, align 8
  %80 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %79, i64 0, i32 8
  store i8 0, i8* %80, align 4
  %81 = load %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"** %3, align 8
  br label %82

82:                                               ; preds = %8, %74
  %83 = phi %"struct.v8::internal::Scanner::TokenDesc"* [ %4, %8 ], [ %81, %74 ]
  %84 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 5
  %85 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 0, i32 0
  br label %86

86:                                               ; preds = %2626, %82
  %87 = phi %"struct.v8::internal::Scanner::TokenDesc"* [ %2627, %2626 ], [ %83, %82 ]
  %88 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %89 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %88, i64 0, i32 4
  %90 = load i64, i64* %89, align 8
  %91 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %88, i64 0, i32 2
  %92 = bitcast i16** %91 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %88, i64 0, i32 1
  %95 = bitcast i16** %94 to i64*
  %96 = load i64, i64* %95, align 8
  %97 = sub i64 %93, %96
  %98 = lshr exact i64 %97, 1
  %99 = add i64 %98, %90
  %100 = trunc i64 %99 to i32
  %101 = add nsw i32 %100, -1
  %102 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %87, i64 0, i32 0, i32 0
  store i32 %101, i32* %102, align 8
  %103 = load i32, i32* %84, align 8
  %104 = icmp ult i32 %103, 128
  br i1 %104, label %105, label %2182, !prof !4

105:                                              ; preds = %86
  %106 = zext i32 %103 to i64
  %107 = getelementptr inbounds [128 x i8], [128 x i8]* @_ZN2v88internalL15one_char_tokensE, i64 0, i64 %106
  %108 = load i8, i8* %107, align 1
  switch i8 %108, label %2181 [
    i8 5, label %109
    i8 6, label %109
    i8 8, label %109
    i8 13, label %109
    i8 3, label %109
    i8 7, label %109
    i8 9, label %109
    i8 12, label %109
    i8 33, label %109
    i8 50, label %109
    i8 112, label %109
    i8 11, label %137
    i8 93, label %275
    i8 60, label %277
    i8 61, label %388
    i8 17, label %551
    i8 49, label %660
    i8 47, label %742
    i8 48, label %824
    i8 43, label %974
    i8 45, label %1083
    i8 44, label %1138
    i8 39, label %1348
    i8 37, label %1457
    i8 38, label %1566
    i8 2, label %1621
    i8 0, label %1731
    i8 111, label %1760
    i8 114, label %1836
    i8 90, label %1915
    i8 95, label %1917
  ]

109:                                              ; preds = %105, %105, %105, %105, %105, %105, %105, %105, %105, %105, %105
  %110 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %111 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %110, i64 0, i32 2
  %112 = load i16*, i16** %111, align 8
  %113 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %110, i64 0, i32 3
  %114 = load i16*, i16** %113, align 8
  %115 = icmp ult i16* %112, %114
  br i1 %115, label %116, label %119, !prof !4

116:                                              ; preds = %109
  %117 = load i16, i16* %112, align 2
  %118 = zext i16 %117 to i32
  br label %133

119:                                              ; preds = %109
  %120 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %110, i64 0, i32 6
  %121 = load i8, i8* %120, align 8, !range !2
  %122 = icmp eq i8 %121, 0
  br i1 %122, label %123, label %133

123:                                              ; preds = %119
  %124 = bitcast %"class.v8::internal::Utf16CharacterStream"* %110 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %125 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %124, align 8
  %126 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %125, i64 5
  %127 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %126, align 8
  %128 = tail call zeroext i1 %127(%"class.v8::internal::Utf16CharacterStream"* %110) #8
  %129 = load i16*, i16** %111, align 8
  br i1 %128, label %130, label %133

130:                                              ; preds = %123
  %131 = load i16, i16* %129, align 2
  %132 = zext i16 %131 to i32
  br label %133

133:                                              ; preds = %130, %123, %119, %116
  %134 = phi i16* [ %112, %116 ], [ %129, %130 ], [ %112, %119 ], [ %129, %123 ]
  %135 = phi i32 [ %118, %116 ], [ %132, %130 ], [ -1, %119 ], [ -1, %123 ]
  %136 = getelementptr inbounds i16, i16* %134, i64 1
  store i16* %136, i16** %111, align 8
  store i32 %135, i32* %84, align 8
  br label %2628

137:                                              ; preds = %105
  %138 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %139 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %138, i64 0, i32 2
  %140 = load i16*, i16** %139, align 8
  %141 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %138, i64 0, i32 3
  %142 = load i16*, i16** %141, align 8
  %143 = icmp ult i16* %140, %142
  br i1 %143, label %158, label %144, !prof !4

144:                                              ; preds = %137
  %145 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %138, i64 0, i32 6
  %146 = load i8, i8* %145, align 8, !range !2
  %147 = icmp eq i8 %146, 0
  br i1 %147, label %148, label %155

148:                                              ; preds = %144
  %149 = bitcast %"class.v8::internal::Utf16CharacterStream"* %138 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %150 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %149, align 8
  %151 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %150, i64 5
  %152 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %151, align 8
  %153 = tail call zeroext i1 %152(%"class.v8::internal::Utf16CharacterStream"* %138) #8
  %154 = load i16*, i16** %139, align 8
  br i1 %153, label %158, label %155

155:                                              ; preds = %148, %144
  %156 = phi i16* [ %154, %148 ], [ %140, %144 ]
  %157 = getelementptr inbounds i16, i16* %156, i64 1
  store i16* %157, i16** %139, align 8
  store i32 -1, i32* %84, align 8
  br label %2628

158:                                              ; preds = %148, %137
  %159 = phi i16* [ %140, %137 ], [ %154, %148 ]
  %160 = load i16, i16* %159, align 2
  %161 = zext i16 %160 to i32
  %162 = getelementptr inbounds i16, i16* %159, i64 1
  store i16* %162, i16** %139, align 8
  store i32 %161, i32* %84, align 8
  switch i16 %160, label %2628 [
    i16 46, label %163
    i16 63, label %220
  ]

163:                                              ; preds = %158
  %164 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %165 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %164, i64 0, i32 2
  %166 = load i16*, i16** %165, align 8
  %167 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %164, i64 0, i32 3
  %168 = load i16*, i16** %167, align 8
  %169 = icmp ult i16* %166, %168
  br i1 %169, label %184, label %170, !prof !4

170:                                              ; preds = %163
  %171 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %164, i64 0, i32 6
  %172 = load i8, i8* %171, align 8, !range !2
  %173 = icmp eq i8 %172, 0
  br i1 %173, label %174, label %181

174:                                              ; preds = %170
  %175 = bitcast %"class.v8::internal::Utf16CharacterStream"* %164 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %176 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %175, align 8
  %177 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %176, i64 5
  %178 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %177, align 8
  %179 = tail call zeroext i1 %178(%"class.v8::internal::Utf16CharacterStream"* %164) #8
  %180 = load i16*, i16** %165, align 8
  br i1 %179, label %184, label %181

181:                                              ; preds = %174, %170
  %182 = phi i16* [ %180, %174 ], [ %166, %170 ]
  %183 = getelementptr inbounds i16, i16* %182, i64 1
  store i16* %183, i16** %165, align 8
  store i32 -1, i32* %84, align 8
  br label %2628

184:                                              ; preds = %174, %163
  %185 = phi i16* [ %166, %163 ], [ %180, %174 ]
  %186 = load i16, i16* %185, align 2
  %187 = zext i16 %186 to i32
  %188 = getelementptr inbounds i16, i16* %185, i64 1
  store i16* %188, i16** %165, align 8
  store i32 %187, i32* %84, align 8
  %189 = add nsw i32 %187, -48
  %190 = icmp ult i32 %189, 10
  br i1 %190, label %191, label %2628

191:                                              ; preds = %184
  %192 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %193 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %192, i64 0, i32 2
  %194 = load i16*, i16** %193, align 8
  %195 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %192, i64 0, i32 1
  %196 = load i16*, i16** %195, align 8
  %197 = icmp ugt i16* %194, %196
  %198 = ptrtoint i16* %196 to i64
  br i1 %197, label %199, label %201, !prof !4

199:                                              ; preds = %191
  %200 = getelementptr inbounds i16, i16* %194, i64 -1
  store i16* %200, i16** %193, align 8
  br label %219

201:                                              ; preds = %191
  %202 = ptrtoint i16* %194 to i64
  %203 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %192, i64 0, i32 4
  %204 = load i64, i64* %203, align 8
  %205 = bitcast i16** %193 to i64*
  %206 = sub i64 %202, %198
  %207 = ashr exact i64 %206, 1
  %208 = add nsw i64 %207, -1
  %209 = add i64 %208, %204
  store i64 %209, i64* %203, align 8
  store i64 %198, i64* %205, align 8
  %210 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %192, i64 0, i32 6
  %211 = load i8, i8* %210, align 8, !range !2
  %212 = icmp eq i8 %211, 0
  br i1 %212, label %213, label %219

213:                                              ; preds = %201
  %214 = bitcast %"class.v8::internal::Utf16CharacterStream"* %192 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %215 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %214, align 8
  %216 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %215, i64 5
  %217 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %216, align 8
  %218 = tail call zeroext i1 %217(%"class.v8::internal::Utf16CharacterStream"* %192) #8
  br label %219

219:                                              ; preds = %213, %201, %199
  store i32 46, i32* %84, align 8
  br label %2628

220:                                              ; preds = %158
  %221 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %222 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %221, i64 0, i32 2
  %223 = load i16*, i16** %222, align 8
  %224 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %221, i64 0, i32 3
  %225 = load i16*, i16** %224, align 8
  %226 = icmp ult i16* %223, %225
  br i1 %226, label %241, label %227, !prof !4

227:                                              ; preds = %220
  %228 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %221, i64 0, i32 6
  %229 = load i8, i8* %228, align 8, !range !2
  %230 = icmp eq i8 %229, 0
  br i1 %230, label %231, label %238

231:                                              ; preds = %227
  %232 = bitcast %"class.v8::internal::Utf16CharacterStream"* %221 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %233 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %232, align 8
  %234 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %233, i64 5
  %235 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %234, align 8
  %236 = tail call zeroext i1 %235(%"class.v8::internal::Utf16CharacterStream"* %221) #8
  %237 = load i16*, i16** %222, align 8
  br i1 %236, label %241, label %238

238:                                              ; preds = %231, %227
  %239 = phi i16* [ %237, %231 ], [ %223, %227 ]
  %240 = getelementptr inbounds i16, i16* %239, i64 1
  store i16* %240, i16** %222, align 8
  store i32 -1, i32* %84, align 8
  br label %2628

241:                                              ; preds = %231, %220
  %242 = phi i16* [ %223, %220 ], [ %237, %231 ]
  %243 = load i16, i16* %242, align 2
  %244 = zext i16 %243 to i32
  %245 = getelementptr inbounds i16, i16* %242, i64 1
  store i16* %245, i16** %222, align 8
  store i32 %244, i32* %84, align 8
  %246 = icmp eq i16 %243, 61
  br i1 %246, label %247, label %2628

247:                                              ; preds = %241
  %248 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %249 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %248, i64 0, i32 2
  %250 = load i16*, i16** %249, align 8
  %251 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %248, i64 0, i32 3
  %252 = load i16*, i16** %251, align 8
  %253 = icmp ult i16* %250, %252
  br i1 %253, label %254, label %257, !prof !4

254:                                              ; preds = %247
  %255 = load i16, i16* %250, align 2
  %256 = zext i16 %255 to i32
  br label %271

257:                                              ; preds = %247
  %258 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %248, i64 0, i32 6
  %259 = load i8, i8* %258, align 8, !range !2
  %260 = icmp eq i8 %259, 0
  br i1 %260, label %261, label %271

261:                                              ; preds = %257
  %262 = bitcast %"class.v8::internal::Utf16CharacterStream"* %248 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %263 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %262, align 8
  %264 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %263, i64 5
  %265 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %264, align 8
  %266 = tail call zeroext i1 %265(%"class.v8::internal::Utf16CharacterStream"* %248) #8
  %267 = load i16*, i16** %249, align 8
  br i1 %266, label %268, label %271

268:                                              ; preds = %261
  %269 = load i16, i16* %267, align 2
  %270 = zext i16 %269 to i32
  br label %271

271:                                              ; preds = %268, %261, %257, %254
  %272 = phi i16* [ %250, %254 ], [ %267, %268 ], [ %250, %257 ], [ %267, %261 ]
  %273 = phi i32 [ %256, %254 ], [ %270, %268 ], [ -1, %257 ], [ -1, %261 ]
  %274 = getelementptr inbounds i16, i16* %272, i64 1
  store i16* %274, i16** %249, align 8
  store i32 %273, i32* %84, align 8
  br label %2628

275:                                              ; preds = %105
  %276 = tail call zeroext i8 @_ZN2v88internal7Scanner10ScanStringEv(%"class.v8::internal::Scanner"* %0) #8
  br label %2628

277:                                              ; preds = %105
  %278 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %279 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %278, i64 0, i32 2
  %280 = load i16*, i16** %279, align 8
  %281 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %278, i64 0, i32 3
  %282 = load i16*, i16** %281, align 8
  %283 = icmp ult i16* %280, %282
  br i1 %283, label %298, label %284, !prof !4

284:                                              ; preds = %277
  %285 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %278, i64 0, i32 6
  %286 = load i8, i8* %285, align 8, !range !2
  %287 = icmp eq i8 %286, 0
  br i1 %287, label %288, label %295

288:                                              ; preds = %284
  %289 = bitcast %"class.v8::internal::Utf16CharacterStream"* %278 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %290 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %289, align 8
  %291 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %290, i64 5
  %292 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %291, align 8
  %293 = tail call zeroext i1 %292(%"class.v8::internal::Utf16CharacterStream"* %278) #8
  %294 = load i16*, i16** %279, align 8
  br i1 %293, label %298, label %295

295:                                              ; preds = %288, %284
  %296 = phi i16* [ %294, %288 ], [ %280, %284 ]
  %297 = getelementptr inbounds i16, i16* %296, i64 1
  store i16* %297, i16** %279, align 8
  store i32 -1, i32* %84, align 8
  br label %2628

298:                                              ; preds = %288, %277
  %299 = phi i16* [ %280, %277 ], [ %294, %288 ]
  %300 = load i16, i16* %299, align 2
  %301 = zext i16 %300 to i32
  %302 = getelementptr inbounds i16, i16* %299, i64 1
  store i16* %302, i16** %279, align 8
  store i32 %301, i32* %84, align 8
  switch i16 %300, label %2628 [
    i16 61, label %303
    i16 60, label %331
    i16 33, label %386
  ]

303:                                              ; preds = %298
  %304 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %305 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %304, i64 0, i32 2
  %306 = load i16*, i16** %305, align 8
  %307 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %304, i64 0, i32 3
  %308 = load i16*, i16** %307, align 8
  %309 = icmp ult i16* %306, %308
  br i1 %309, label %310, label %313, !prof !4

310:                                              ; preds = %303
  %311 = load i16, i16* %306, align 2
  %312 = zext i16 %311 to i32
  br label %327

313:                                              ; preds = %303
  %314 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %304, i64 0, i32 6
  %315 = load i8, i8* %314, align 8, !range !2
  %316 = icmp eq i8 %315, 0
  br i1 %316, label %317, label %327

317:                                              ; preds = %313
  %318 = bitcast %"class.v8::internal::Utf16CharacterStream"* %304 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %319 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %318, align 8
  %320 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %319, i64 5
  %321 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %320, align 8
  %322 = tail call zeroext i1 %321(%"class.v8::internal::Utf16CharacterStream"* %304) #8
  %323 = load i16*, i16** %305, align 8
  br i1 %322, label %324, label %327

324:                                              ; preds = %317
  %325 = load i16, i16* %323, align 2
  %326 = zext i16 %325 to i32
  br label %327

327:                                              ; preds = %324, %317, %313, %310
  %328 = phi i16* [ %306, %310 ], [ %323, %324 ], [ %306, %313 ], [ %323, %317 ]
  %329 = phi i32 [ %312, %310 ], [ %326, %324 ], [ -1, %313 ], [ -1, %317 ]
  %330 = getelementptr inbounds i16, i16* %328, i64 1
  store i16* %330, i16** %305, align 8
  store i32 %329, i32* %84, align 8
  br label %2628

331:                                              ; preds = %298
  %332 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %333 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %332, i64 0, i32 2
  %334 = load i16*, i16** %333, align 8
  %335 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %332, i64 0, i32 3
  %336 = load i16*, i16** %335, align 8
  %337 = icmp ult i16* %334, %336
  br i1 %337, label %352, label %338, !prof !4

338:                                              ; preds = %331
  %339 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %332, i64 0, i32 6
  %340 = load i8, i8* %339, align 8, !range !2
  %341 = icmp eq i8 %340, 0
  br i1 %341, label %342, label %349

342:                                              ; preds = %338
  %343 = bitcast %"class.v8::internal::Utf16CharacterStream"* %332 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %344 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %343, align 8
  %345 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %344, i64 5
  %346 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %345, align 8
  %347 = tail call zeroext i1 %346(%"class.v8::internal::Utf16CharacterStream"* %332) #8
  %348 = load i16*, i16** %333, align 8
  br i1 %347, label %352, label %349

349:                                              ; preds = %342, %338
  %350 = phi i16* [ %348, %342 ], [ %334, %338 ]
  %351 = getelementptr inbounds i16, i16* %350, i64 1
  store i16* %351, i16** %333, align 8
  store i32 -1, i32* %84, align 8
  br label %2628

352:                                              ; preds = %342, %331
  %353 = phi i16* [ %334, %331 ], [ %348, %342 ]
  %354 = load i16, i16* %353, align 2
  %355 = zext i16 %354 to i32
  %356 = getelementptr inbounds i16, i16* %353, i64 1
  store i16* %356, i16** %333, align 8
  store i32 %355, i32* %84, align 8
  %357 = icmp eq i16 %354, 61
  br i1 %357, label %358, label %2628

358:                                              ; preds = %352
  %359 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %360 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %359, i64 0, i32 2
  %361 = load i16*, i16** %360, align 8
  %362 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %359, i64 0, i32 3
  %363 = load i16*, i16** %362, align 8
  %364 = icmp ult i16* %361, %363
  br i1 %364, label %365, label %368, !prof !4

365:                                              ; preds = %358
  %366 = load i16, i16* %361, align 2
  %367 = zext i16 %366 to i32
  br label %382

368:                                              ; preds = %358
  %369 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %359, i64 0, i32 6
  %370 = load i8, i8* %369, align 8, !range !2
  %371 = icmp eq i8 %370, 0
  br i1 %371, label %372, label %382

372:                                              ; preds = %368
  %373 = bitcast %"class.v8::internal::Utf16CharacterStream"* %359 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %374 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %373, align 8
  %375 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %374, i64 5
  %376 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %375, align 8
  %377 = tail call zeroext i1 %376(%"class.v8::internal::Utf16CharacterStream"* %359) #8
  %378 = load i16*, i16** %360, align 8
  br i1 %377, label %379, label %382

379:                                              ; preds = %372
  %380 = load i16, i16* %378, align 2
  %381 = zext i16 %380 to i32
  br label %382

382:                                              ; preds = %379, %372, %368, %365
  %383 = phi i16* [ %361, %365 ], [ %378, %379 ], [ %361, %368 ], [ %378, %372 ]
  %384 = phi i32 [ %367, %365 ], [ %381, %379 ], [ -1, %368 ], [ -1, %372 ]
  %385 = getelementptr inbounds i16, i16* %383, i64 1
  store i16* %385, i16** %360, align 8
  store i32 %384, i32* %84, align 8
  br label %2628

386:                                              ; preds = %298
  %387 = tail call zeroext i8 @_ZN2v88internal7Scanner15ScanHtmlCommentEv(%"class.v8::internal::Scanner"* %0) #8
  br label %2623

388:                                              ; preds = %105
  %389 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %390 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %389, i64 0, i32 2
  %391 = load i16*, i16** %390, align 8
  %392 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %389, i64 0, i32 3
  %393 = load i16*, i16** %392, align 8
  %394 = icmp ult i16* %391, %393
  br i1 %394, label %409, label %395, !prof !4

395:                                              ; preds = %388
  %396 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %389, i64 0, i32 6
  %397 = load i8, i8* %396, align 8, !range !2
  %398 = icmp eq i8 %397, 0
  br i1 %398, label %399, label %406

399:                                              ; preds = %395
  %400 = bitcast %"class.v8::internal::Utf16CharacterStream"* %389 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %401 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %400, align 8
  %402 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %401, i64 5
  %403 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %402, align 8
  %404 = tail call zeroext i1 %403(%"class.v8::internal::Utf16CharacterStream"* %389) #8
  %405 = load i16*, i16** %390, align 8
  br i1 %404, label %409, label %406

406:                                              ; preds = %399, %395
  %407 = phi i16* [ %405, %399 ], [ %391, %395 ]
  %408 = getelementptr inbounds i16, i16* %407, i64 1
  store i16* %408, i16** %390, align 8
  store i32 -1, i32* %84, align 8
  br label %2628

409:                                              ; preds = %399, %388
  %410 = phi i16* [ %391, %388 ], [ %405, %399 ]
  %411 = load i16, i16* %410, align 2
  %412 = zext i16 %411 to i32
  %413 = getelementptr inbounds i16, i16* %410, i64 1
  store i16* %413, i16** %390, align 8
  store i32 %412, i32* %84, align 8
  switch i16 %411, label %2628 [
    i16 61, label %414
    i16 62, label %442
  ]

414:                                              ; preds = %409
  %415 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %416 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %415, i64 0, i32 2
  %417 = load i16*, i16** %416, align 8
  %418 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %415, i64 0, i32 3
  %419 = load i16*, i16** %418, align 8
  %420 = icmp ult i16* %417, %419
  br i1 %420, label %421, label %424, !prof !4

421:                                              ; preds = %414
  %422 = load i16, i16* %417, align 2
  %423 = zext i16 %422 to i32
  br label %438

424:                                              ; preds = %414
  %425 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %415, i64 0, i32 6
  %426 = load i8, i8* %425, align 8, !range !2
  %427 = icmp eq i8 %426, 0
  br i1 %427, label %428, label %438

428:                                              ; preds = %424
  %429 = bitcast %"class.v8::internal::Utf16CharacterStream"* %415 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %430 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %429, align 8
  %431 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %430, i64 5
  %432 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %431, align 8
  %433 = tail call zeroext i1 %432(%"class.v8::internal::Utf16CharacterStream"* %415) #8
  %434 = load i16*, i16** %416, align 8
  br i1 %433, label %435, label %438

435:                                              ; preds = %428
  %436 = load i16, i16* %434, align 2
  %437 = zext i16 %436 to i32
  br label %438

438:                                              ; preds = %435, %428, %424, %421
  %439 = phi i16* [ %417, %421 ], [ %434, %435 ], [ %417, %424 ], [ %434, %428 ]
  %440 = phi i32 [ %423, %421 ], [ %437, %435 ], [ -1, %424 ], [ -1, %428 ]
  %441 = getelementptr inbounds i16, i16* %439, i64 1
  store i16* %441, i16** %416, align 8
  store i32 %440, i32* %84, align 8
  br label %2628

442:                                              ; preds = %409
  %443 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %444 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %443, i64 0, i32 2
  %445 = load i16*, i16** %444, align 8
  %446 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %443, i64 0, i32 3
  %447 = load i16*, i16** %446, align 8
  %448 = icmp ult i16* %445, %447
  br i1 %448, label %463, label %449, !prof !4

449:                                              ; preds = %442
  %450 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %443, i64 0, i32 6
  %451 = load i8, i8* %450, align 8, !range !2
  %452 = icmp eq i8 %451, 0
  br i1 %452, label %453, label %460

453:                                              ; preds = %449
  %454 = bitcast %"class.v8::internal::Utf16CharacterStream"* %443 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %455 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %454, align 8
  %456 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %455, i64 5
  %457 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %456, align 8
  %458 = tail call zeroext i1 %457(%"class.v8::internal::Utf16CharacterStream"* %443) #8
  %459 = load i16*, i16** %444, align 8
  br i1 %458, label %463, label %460

460:                                              ; preds = %453, %449
  %461 = phi i16* [ %459, %453 ], [ %445, %449 ]
  %462 = getelementptr inbounds i16, i16* %461, i64 1
  store i16* %462, i16** %444, align 8
  store i32 -1, i32* %84, align 8
  br label %2628

463:                                              ; preds = %453, %442
  %464 = phi i16* [ %445, %442 ], [ %459, %453 ]
  %465 = load i16, i16* %464, align 2
  %466 = zext i16 %465 to i32
  %467 = getelementptr inbounds i16, i16* %464, i64 1
  store i16* %467, i16** %444, align 8
  store i32 %466, i32* %84, align 8
  switch i16 %465, label %2628 [
    i16 61, label %468
    i16 62, label %496
  ]

468:                                              ; preds = %463
  %469 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %470 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %469, i64 0, i32 2
  %471 = load i16*, i16** %470, align 8
  %472 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %469, i64 0, i32 3
  %473 = load i16*, i16** %472, align 8
  %474 = icmp ult i16* %471, %473
  br i1 %474, label %475, label %478, !prof !4

475:                                              ; preds = %468
  %476 = load i16, i16* %471, align 2
  %477 = zext i16 %476 to i32
  br label %492

478:                                              ; preds = %468
  %479 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %469, i64 0, i32 6
  %480 = load i8, i8* %479, align 8, !range !2
  %481 = icmp eq i8 %480, 0
  br i1 %481, label %482, label %492

482:                                              ; preds = %478
  %483 = bitcast %"class.v8::internal::Utf16CharacterStream"* %469 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %484 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %483, align 8
  %485 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %484, i64 5
  %486 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %485, align 8
  %487 = tail call zeroext i1 %486(%"class.v8::internal::Utf16CharacterStream"* %469) #8
  %488 = load i16*, i16** %470, align 8
  br i1 %487, label %489, label %492

489:                                              ; preds = %482
  %490 = load i16, i16* %488, align 2
  %491 = zext i16 %490 to i32
  br label %492

492:                                              ; preds = %489, %482, %478, %475
  %493 = phi i16* [ %471, %475 ], [ %488, %489 ], [ %471, %478 ], [ %488, %482 ]
  %494 = phi i32 [ %477, %475 ], [ %491, %489 ], [ -1, %478 ], [ -1, %482 ]
  %495 = getelementptr inbounds i16, i16* %493, i64 1
  store i16* %495, i16** %470, align 8
  store i32 %494, i32* %84, align 8
  br label %2628

496:                                              ; preds = %463
  %497 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %498 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %497, i64 0, i32 2
  %499 = load i16*, i16** %498, align 8
  %500 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %497, i64 0, i32 3
  %501 = load i16*, i16** %500, align 8
  %502 = icmp ult i16* %499, %501
  br i1 %502, label %517, label %503, !prof !4

503:                                              ; preds = %496
  %504 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %497, i64 0, i32 6
  %505 = load i8, i8* %504, align 8, !range !2
  %506 = icmp eq i8 %505, 0
  br i1 %506, label %507, label %514

507:                                              ; preds = %503
  %508 = bitcast %"class.v8::internal::Utf16CharacterStream"* %497 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %509 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %508, align 8
  %510 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %509, i64 5
  %511 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %510, align 8
  %512 = tail call zeroext i1 %511(%"class.v8::internal::Utf16CharacterStream"* %497) #8
  %513 = load i16*, i16** %498, align 8
  br i1 %512, label %517, label %514

514:                                              ; preds = %507, %503
  %515 = phi i16* [ %513, %507 ], [ %499, %503 ]
  %516 = getelementptr inbounds i16, i16* %515, i64 1
  store i16* %516, i16** %498, align 8
  store i32 -1, i32* %84, align 8
  br label %2628

517:                                              ; preds = %507, %496
  %518 = phi i16* [ %499, %496 ], [ %513, %507 ]
  %519 = load i16, i16* %518, align 2
  %520 = zext i16 %519 to i32
  %521 = getelementptr inbounds i16, i16* %518, i64 1
  store i16* %521, i16** %498, align 8
  store i32 %520, i32* %84, align 8
  %522 = icmp eq i16 %519, 61
  br i1 %522, label %523, label %2628

523:                                              ; preds = %517
  %524 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %525 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %524, i64 0, i32 2
  %526 = load i16*, i16** %525, align 8
  %527 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %524, i64 0, i32 3
  %528 = load i16*, i16** %527, align 8
  %529 = icmp ult i16* %526, %528
  br i1 %529, label %530, label %533, !prof !4

530:                                              ; preds = %523
  %531 = load i16, i16* %526, align 2
  %532 = zext i16 %531 to i32
  br label %547

533:                                              ; preds = %523
  %534 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %524, i64 0, i32 6
  %535 = load i8, i8* %534, align 8, !range !2
  %536 = icmp eq i8 %535, 0
  br i1 %536, label %537, label %547

537:                                              ; preds = %533
  %538 = bitcast %"class.v8::internal::Utf16CharacterStream"* %524 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %539 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %538, align 8
  %540 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %539, i64 5
  %541 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %540, align 8
  %542 = tail call zeroext i1 %541(%"class.v8::internal::Utf16CharacterStream"* %524) #8
  %543 = load i16*, i16** %525, align 8
  br i1 %542, label %544, label %547

544:                                              ; preds = %537
  %545 = load i16, i16* %543, align 2
  %546 = zext i16 %545 to i32
  br label %547

547:                                              ; preds = %544, %537, %533, %530
  %548 = phi i16* [ %526, %530 ], [ %543, %544 ], [ %526, %533 ], [ %543, %537 ]
  %549 = phi i32 [ %532, %530 ], [ %546, %544 ], [ -1, %533 ], [ -1, %537 ]
  %550 = getelementptr inbounds i16, i16* %548, i64 1
  store i16* %550, i16** %525, align 8
  store i32 %549, i32* %84, align 8
  br label %2628

551:                                              ; preds = %105
  %552 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %553 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %552, i64 0, i32 2
  %554 = load i16*, i16** %553, align 8
  %555 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %552, i64 0, i32 3
  %556 = load i16*, i16** %555, align 8
  %557 = icmp ult i16* %554, %556
  br i1 %557, label %572, label %558, !prof !4

558:                                              ; preds = %551
  %559 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %552, i64 0, i32 6
  %560 = load i8, i8* %559, align 8, !range !2
  %561 = icmp eq i8 %560, 0
  br i1 %561, label %562, label %569

562:                                              ; preds = %558
  %563 = bitcast %"class.v8::internal::Utf16CharacterStream"* %552 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %564 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %563, align 8
  %565 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %564, i64 5
  %566 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %565, align 8
  %567 = tail call zeroext i1 %566(%"class.v8::internal::Utf16CharacterStream"* %552) #8
  %568 = load i16*, i16** %553, align 8
  br i1 %567, label %572, label %569

569:                                              ; preds = %562, %558
  %570 = phi i16* [ %568, %562 ], [ %554, %558 ]
  %571 = getelementptr inbounds i16, i16* %570, i64 1
  store i16* %571, i16** %553, align 8
  store i32 -1, i32* %84, align 8
  br label %2628

572:                                              ; preds = %562, %551
  %573 = phi i16* [ %554, %551 ], [ %568, %562 ]
  %574 = load i16, i16* %573, align 2
  %575 = zext i16 %574 to i32
  %576 = getelementptr inbounds i16, i16* %573, i64 1
  store i16* %576, i16** %553, align 8
  store i32 %575, i32* %84, align 8
  switch i16 %574, label %2628 [
    i16 61, label %577
    i16 62, label %632
  ]

577:                                              ; preds = %572
  %578 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %579 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %578, i64 0, i32 2
  %580 = load i16*, i16** %579, align 8
  %581 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %578, i64 0, i32 3
  %582 = load i16*, i16** %581, align 8
  %583 = icmp ult i16* %580, %582
  br i1 %583, label %598, label %584, !prof !4

584:                                              ; preds = %577
  %585 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %578, i64 0, i32 6
  %586 = load i8, i8* %585, align 8, !range !2
  %587 = icmp eq i8 %586, 0
  br i1 %587, label %588, label %595

588:                                              ; preds = %584
  %589 = bitcast %"class.v8::internal::Utf16CharacterStream"* %578 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %590 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %589, align 8
  %591 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %590, i64 5
  %592 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %591, align 8
  %593 = tail call zeroext i1 %592(%"class.v8::internal::Utf16CharacterStream"* %578) #8
  %594 = load i16*, i16** %579, align 8
  br i1 %593, label %598, label %595

595:                                              ; preds = %588, %584
  %596 = phi i16* [ %594, %588 ], [ %580, %584 ]
  %597 = getelementptr inbounds i16, i16* %596, i64 1
  store i16* %597, i16** %579, align 8
  store i32 -1, i32* %84, align 8
  br label %2628

598:                                              ; preds = %588, %577
  %599 = phi i16* [ %580, %577 ], [ %594, %588 ]
  %600 = load i16, i16* %599, align 2
  %601 = zext i16 %600 to i32
  %602 = getelementptr inbounds i16, i16* %599, i64 1
  store i16* %602, i16** %579, align 8
  store i32 %601, i32* %84, align 8
  %603 = icmp eq i16 %600, 61
  br i1 %603, label %604, label %2628

604:                                              ; preds = %598
  %605 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %606 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %605, i64 0, i32 2
  %607 = load i16*, i16** %606, align 8
  %608 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %605, i64 0, i32 3
  %609 = load i16*, i16** %608, align 8
  %610 = icmp ult i16* %607, %609
  br i1 %610, label %611, label %614, !prof !4

611:                                              ; preds = %604
  %612 = load i16, i16* %607, align 2
  %613 = zext i16 %612 to i32
  br label %628

614:                                              ; preds = %604
  %615 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %605, i64 0, i32 6
  %616 = load i8, i8* %615, align 8, !range !2
  %617 = icmp eq i8 %616, 0
  br i1 %617, label %618, label %628

618:                                              ; preds = %614
  %619 = bitcast %"class.v8::internal::Utf16CharacterStream"* %605 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %620 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %619, align 8
  %621 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %620, i64 5
  %622 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %621, align 8
  %623 = tail call zeroext i1 %622(%"class.v8::internal::Utf16CharacterStream"* %605) #8
  %624 = load i16*, i16** %606, align 8
  br i1 %623, label %625, label %628

625:                                              ; preds = %618
  %626 = load i16, i16* %624, align 2
  %627 = zext i16 %626 to i32
  br label %628

628:                                              ; preds = %625, %618, %614, %611
  %629 = phi i16* [ %607, %611 ], [ %624, %625 ], [ %607, %614 ], [ %624, %618 ]
  %630 = phi i32 [ %613, %611 ], [ %627, %625 ], [ -1, %614 ], [ -1, %618 ]
  %631 = getelementptr inbounds i16, i16* %629, i64 1
  store i16* %631, i16** %606, align 8
  store i32 %630, i32* %84, align 8
  br label %2628

632:                                              ; preds = %572
  %633 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %634 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %633, i64 0, i32 2
  %635 = load i16*, i16** %634, align 8
  %636 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %633, i64 0, i32 3
  %637 = load i16*, i16** %636, align 8
  %638 = icmp ult i16* %635, %637
  br i1 %638, label %639, label %642, !prof !4

639:                                              ; preds = %632
  %640 = load i16, i16* %635, align 2
  %641 = zext i16 %640 to i32
  br label %656

642:                                              ; preds = %632
  %643 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %633, i64 0, i32 6
  %644 = load i8, i8* %643, align 8, !range !2
  %645 = icmp eq i8 %644, 0
  br i1 %645, label %646, label %656

646:                                              ; preds = %642
  %647 = bitcast %"class.v8::internal::Utf16CharacterStream"* %633 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %648 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %647, align 8
  %649 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %648, i64 5
  %650 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %649, align 8
  %651 = tail call zeroext i1 %650(%"class.v8::internal::Utf16CharacterStream"* %633) #8
  %652 = load i16*, i16** %634, align 8
  br i1 %651, label %653, label %656

653:                                              ; preds = %646
  %654 = load i16, i16* %652, align 2
  %655 = zext i16 %654 to i32
  br label %656

656:                                              ; preds = %653, %646, %642, %639
  %657 = phi i16* [ %635, %639 ], [ %652, %653 ], [ %635, %642 ], [ %652, %646 ]
  %658 = phi i32 [ %641, %639 ], [ %655, %653 ], [ -1, %642 ], [ -1, %646 ]
  %659 = getelementptr inbounds i16, i16* %657, i64 1
  store i16* %659, i16** %634, align 8
  store i32 %658, i32* %84, align 8
  br label %2628

660:                                              ; preds = %105
  %661 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %662 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %661, i64 0, i32 2
  %663 = load i16*, i16** %662, align 8
  %664 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %661, i64 0, i32 3
  %665 = load i16*, i16** %664, align 8
  %666 = icmp ult i16* %663, %665
  br i1 %666, label %681, label %667, !prof !4

667:                                              ; preds = %660
  %668 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %661, i64 0, i32 6
  %669 = load i8, i8* %668, align 8, !range !2
  %670 = icmp eq i8 %669, 0
  br i1 %670, label %671, label %678

671:                                              ; preds = %667
  %672 = bitcast %"class.v8::internal::Utf16CharacterStream"* %661 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %673 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %672, align 8
  %674 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %673, i64 5
  %675 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %674, align 8
  %676 = tail call zeroext i1 %675(%"class.v8::internal::Utf16CharacterStream"* %661) #8
  %677 = load i16*, i16** %662, align 8
  br i1 %676, label %681, label %678

678:                                              ; preds = %671, %667
  %679 = phi i16* [ %677, %671 ], [ %663, %667 ]
  %680 = getelementptr inbounds i16, i16* %679, i64 1
  store i16* %680, i16** %662, align 8
  store i32 -1, i32* %84, align 8
  br label %2628

681:                                              ; preds = %671, %660
  %682 = phi i16* [ %663, %660 ], [ %677, %671 ]
  %683 = load i16, i16* %682, align 2
  %684 = zext i16 %683 to i32
  %685 = getelementptr inbounds i16, i16* %682, i64 1
  store i16* %685, i16** %662, align 8
  store i32 %684, i32* %84, align 8
  %686 = icmp eq i16 %683, 61
  br i1 %686, label %687, label %2628

687:                                              ; preds = %681
  %688 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %689 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %688, i64 0, i32 2
  %690 = load i16*, i16** %689, align 8
  %691 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %688, i64 0, i32 3
  %692 = load i16*, i16** %691, align 8
  %693 = icmp ult i16* %690, %692
  br i1 %693, label %708, label %694, !prof !4

694:                                              ; preds = %687
  %695 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %688, i64 0, i32 6
  %696 = load i8, i8* %695, align 8, !range !2
  %697 = icmp eq i8 %696, 0
  br i1 %697, label %698, label %705

698:                                              ; preds = %694
  %699 = bitcast %"class.v8::internal::Utf16CharacterStream"* %688 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %700 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %699, align 8
  %701 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %700, i64 5
  %702 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %701, align 8
  %703 = tail call zeroext i1 %702(%"class.v8::internal::Utf16CharacterStream"* %688) #8
  %704 = load i16*, i16** %689, align 8
  br i1 %703, label %708, label %705

705:                                              ; preds = %698, %694
  %706 = phi i16* [ %704, %698 ], [ %690, %694 ]
  %707 = getelementptr inbounds i16, i16* %706, i64 1
  store i16* %707, i16** %689, align 8
  store i32 -1, i32* %84, align 8
  br label %2628

708:                                              ; preds = %698, %687
  %709 = phi i16* [ %690, %687 ], [ %704, %698 ]
  %710 = load i16, i16* %709, align 2
  %711 = zext i16 %710 to i32
  %712 = getelementptr inbounds i16, i16* %709, i64 1
  store i16* %712, i16** %689, align 8
  store i32 %711, i32* %84, align 8
  %713 = icmp eq i16 %710, 61
  br i1 %713, label %714, label %2628

714:                                              ; preds = %708
  %715 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %716 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %715, i64 0, i32 2
  %717 = load i16*, i16** %716, align 8
  %718 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %715, i64 0, i32 3
  %719 = load i16*, i16** %718, align 8
  %720 = icmp ult i16* %717, %719
  br i1 %720, label %721, label %724, !prof !4

721:                                              ; preds = %714
  %722 = load i16, i16* %717, align 2
  %723 = zext i16 %722 to i32
  br label %738

724:                                              ; preds = %714
  %725 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %715, i64 0, i32 6
  %726 = load i8, i8* %725, align 8, !range !2
  %727 = icmp eq i8 %726, 0
  br i1 %727, label %728, label %738

728:                                              ; preds = %724
  %729 = bitcast %"class.v8::internal::Utf16CharacterStream"* %715 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %730 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %729, align 8
  %731 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %730, i64 5
  %732 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %731, align 8
  %733 = tail call zeroext i1 %732(%"class.v8::internal::Utf16CharacterStream"* %715) #8
  %734 = load i16*, i16** %716, align 8
  br i1 %733, label %735, label %738

735:                                              ; preds = %728
  %736 = load i16, i16* %734, align 2
  %737 = zext i16 %736 to i32
  br label %738

738:                                              ; preds = %735, %728, %724, %721
  %739 = phi i16* [ %717, %721 ], [ %734, %735 ], [ %717, %724 ], [ %734, %728 ]
  %740 = phi i32 [ %723, %721 ], [ %737, %735 ], [ -1, %724 ], [ -1, %728 ]
  %741 = getelementptr inbounds i16, i16* %739, i64 1
  store i16* %741, i16** %716, align 8
  store i32 %740, i32* %84, align 8
  br label %2628

742:                                              ; preds = %105
  %743 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %744 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %743, i64 0, i32 2
  %745 = load i16*, i16** %744, align 8
  %746 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %743, i64 0, i32 3
  %747 = load i16*, i16** %746, align 8
  %748 = icmp ult i16* %745, %747
  br i1 %748, label %763, label %749, !prof !4

749:                                              ; preds = %742
  %750 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %743, i64 0, i32 6
  %751 = load i8, i8* %750, align 8, !range !2
  %752 = icmp eq i8 %751, 0
  br i1 %752, label %753, label %760

753:                                              ; preds = %749
  %754 = bitcast %"class.v8::internal::Utf16CharacterStream"* %743 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %755 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %754, align 8
  %756 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %755, i64 5
  %757 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %756, align 8
  %758 = tail call zeroext i1 %757(%"class.v8::internal::Utf16CharacterStream"* %743) #8
  %759 = load i16*, i16** %744, align 8
  br i1 %758, label %763, label %760

760:                                              ; preds = %753, %749
  %761 = phi i16* [ %759, %753 ], [ %745, %749 ]
  %762 = getelementptr inbounds i16, i16* %761, i64 1
  store i16* %762, i16** %744, align 8
  store i32 -1, i32* %84, align 8
  br label %2628

763:                                              ; preds = %753, %742
  %764 = phi i16* [ %745, %742 ], [ %759, %753 ]
  %765 = load i16, i16* %764, align 2
  %766 = zext i16 %765 to i32
  %767 = getelementptr inbounds i16, i16* %764, i64 1
  store i16* %767, i16** %744, align 8
  store i32 %766, i32* %84, align 8
  switch i16 %765, label %2628 [
    i16 43, label %768
    i16 61, label %796
  ]

768:                                              ; preds = %763
  %769 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %770 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %769, i64 0, i32 2
  %771 = load i16*, i16** %770, align 8
  %772 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %769, i64 0, i32 3
  %773 = load i16*, i16** %772, align 8
  %774 = icmp ult i16* %771, %773
  br i1 %774, label %775, label %778, !prof !4

775:                                              ; preds = %768
  %776 = load i16, i16* %771, align 2
  %777 = zext i16 %776 to i32
  br label %792

778:                                              ; preds = %768
  %779 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %769, i64 0, i32 6
  %780 = load i8, i8* %779, align 8, !range !2
  %781 = icmp eq i8 %780, 0
  br i1 %781, label %782, label %792

782:                                              ; preds = %778
  %783 = bitcast %"class.v8::internal::Utf16CharacterStream"* %769 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %784 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %783, align 8
  %785 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %784, i64 5
  %786 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %785, align 8
  %787 = tail call zeroext i1 %786(%"class.v8::internal::Utf16CharacterStream"* %769) #8
  %788 = load i16*, i16** %770, align 8
  br i1 %787, label %789, label %792

789:                                              ; preds = %782
  %790 = load i16, i16* %788, align 2
  %791 = zext i16 %790 to i32
  br label %792

792:                                              ; preds = %789, %782, %778, %775
  %793 = phi i16* [ %771, %775 ], [ %788, %789 ], [ %771, %778 ], [ %788, %782 ]
  %794 = phi i32 [ %777, %775 ], [ %791, %789 ], [ -1, %778 ], [ -1, %782 ]
  %795 = getelementptr inbounds i16, i16* %793, i64 1
  store i16* %795, i16** %770, align 8
  store i32 %794, i32* %84, align 8
  br label %2628

796:                                              ; preds = %763
  %797 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %798 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %797, i64 0, i32 2
  %799 = load i16*, i16** %798, align 8
  %800 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %797, i64 0, i32 3
  %801 = load i16*, i16** %800, align 8
  %802 = icmp ult i16* %799, %801
  br i1 %802, label %803, label %806, !prof !4

803:                                              ; preds = %796
  %804 = load i16, i16* %799, align 2
  %805 = zext i16 %804 to i32
  br label %820

806:                                              ; preds = %796
  %807 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %797, i64 0, i32 6
  %808 = load i8, i8* %807, align 8, !range !2
  %809 = icmp eq i8 %808, 0
  br i1 %809, label %810, label %820

810:                                              ; preds = %806
  %811 = bitcast %"class.v8::internal::Utf16CharacterStream"* %797 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %812 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %811, align 8
  %813 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %812, i64 5
  %814 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %813, align 8
  %815 = tail call zeroext i1 %814(%"class.v8::internal::Utf16CharacterStream"* %797) #8
  %816 = load i16*, i16** %798, align 8
  br i1 %815, label %817, label %820

817:                                              ; preds = %810
  %818 = load i16, i16* %816, align 2
  %819 = zext i16 %818 to i32
  br label %820

820:                                              ; preds = %817, %810, %806, %803
  %821 = phi i16* [ %799, %803 ], [ %816, %817 ], [ %799, %806 ], [ %816, %810 ]
  %822 = phi i32 [ %805, %803 ], [ %819, %817 ], [ -1, %806 ], [ -1, %810 ]
  %823 = getelementptr inbounds i16, i16* %821, i64 1
  store i16* %823, i16** %798, align 8
  store i32 %822, i32* %84, align 8
  br label %2628

824:                                              ; preds = %105
  %825 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %826 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %825, i64 0, i32 2
  %827 = load i16*, i16** %826, align 8
  %828 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %825, i64 0, i32 3
  %829 = load i16*, i16** %828, align 8
  %830 = icmp ult i16* %827, %829
  br i1 %830, label %845, label %831, !prof !4

831:                                              ; preds = %824
  %832 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %825, i64 0, i32 6
  %833 = load i8, i8* %832, align 8, !range !2
  %834 = icmp eq i8 %833, 0
  br i1 %834, label %835, label %842

835:                                              ; preds = %831
  %836 = bitcast %"class.v8::internal::Utf16CharacterStream"* %825 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %837 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %836, align 8
  %838 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %837, i64 5
  %839 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %838, align 8
  %840 = tail call zeroext i1 %839(%"class.v8::internal::Utf16CharacterStream"* %825) #8
  %841 = load i16*, i16** %826, align 8
  br i1 %840, label %845, label %842

842:                                              ; preds = %835, %831
  %843 = phi i16* [ %841, %835 ], [ %827, %831 ]
  %844 = getelementptr inbounds i16, i16* %843, i64 1
  store i16* %844, i16** %826, align 8
  store i32 -1, i32* %84, align 8
  br label %2628

845:                                              ; preds = %835, %824
  %846 = phi i16* [ %827, %824 ], [ %841, %835 ]
  %847 = load i16, i16* %846, align 2
  %848 = zext i16 %847 to i32
  %849 = getelementptr inbounds i16, i16* %846, i64 1
  store i16* %849, i16** %826, align 8
  store i32 %848, i32* %84, align 8
  switch i16 %847, label %2628 [
    i16 45, label %850
    i16 61, label %946
  ]

850:                                              ; preds = %845
  %851 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %852 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %851, i64 0, i32 2
  %853 = load i16*, i16** %852, align 8
  %854 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %851, i64 0, i32 3
  %855 = load i16*, i16** %854, align 8
  %856 = icmp ult i16* %853, %855
  br i1 %856, label %871, label %857, !prof !4

857:                                              ; preds = %850
  %858 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %851, i64 0, i32 6
  %859 = load i8, i8* %858, align 8, !range !2
  %860 = icmp eq i8 %859, 0
  br i1 %860, label %861, label %868

861:                                              ; preds = %857
  %862 = bitcast %"class.v8::internal::Utf16CharacterStream"* %851 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %863 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %862, align 8
  %864 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %863, i64 5
  %865 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %864, align 8
  %866 = tail call zeroext i1 %865(%"class.v8::internal::Utf16CharacterStream"* %851) #8
  %867 = load i16*, i16** %852, align 8
  br i1 %866, label %871, label %868

868:                                              ; preds = %861, %857
  %869 = phi i16* [ %867, %861 ], [ %853, %857 ]
  %870 = getelementptr inbounds i16, i16* %869, i64 1
  store i16* %870, i16** %852, align 8
  store i32 -1, i32* %84, align 8
  br label %2628

871:                                              ; preds = %861, %850
  %872 = phi i16* [ %853, %850 ], [ %867, %861 ]
  %873 = load i16, i16* %872, align 2
  %874 = zext i16 %873 to i32
  %875 = getelementptr inbounds i16, i16* %872, i64 1
  store i16* %875, i16** %852, align 8
  store i32 %874, i32* %84, align 8
  %876 = icmp eq i16 %873, 62
  br i1 %876, label %877, label %2628

877:                                              ; preds = %871
  %878 = load %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"** %3, align 8
  %879 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %878, i64 0, i32 8
  %880 = load i8, i8* %879, align 4, !range !2
  %881 = icmp eq i8 %880, 0
  br i1 %881, label %2628, label %882

882:                                              ; preds = %877
  %883 = load i32, i32* %85, align 4
  %884 = and i32 %883, 32
  %885 = icmp eq i32 %884, 0
  %886 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  br i1 %885, label %909, label %887

887:                                              ; preds = %882
  %888 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %886, i64 0, i32 4
  %889 = load i64, i64* %888, align 8
  %890 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %886, i64 0, i32 2
  %891 = bitcast i16** %890 to i64*
  %892 = load i64, i64* %891, align 8
  %893 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %886, i64 0, i32 1
  %894 = bitcast i16** %893 to i64*
  %895 = load i64, i64* %894, align 8
  %896 = sub i64 %892, %895
  %897 = lshr exact i64 %896, 1
  %898 = add i64 %897, %889
  %899 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 14
  %900 = load i32, i32* %899, align 4
  %901 = icmp eq i32 %900, 0
  br i1 %901, label %902, label %2628

902:                                              ; preds = %887
  %903 = add i64 %898, 4294967295
  store i32 292, i32* %899, align 4
  %904 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 15
  %905 = bitcast %"struct.v8::internal::Scanner::Location"* %904 to i64*
  %906 = shl i64 %898, 32
  %907 = and i64 %903, 4294967295
  %908 = or i64 %907, %906
  store i64 %908, i64* %905, align 8
  br label %2628

909:                                              ; preds = %882
  %910 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %886, i64 0, i32 2
  %911 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %886, i64 0, i32 3
  %912 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %886, i64 0, i32 6
  %913 = bitcast %"class.v8::internal::Utf16CharacterStream"* %886 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  br label %914

914:                                              ; preds = %930, %909
  %915 = load i16*, i16** %910, align 8
  %916 = load i16*, i16** %911, align 8
  %917 = icmp eq i16* %915, %916
  br i1 %917, label %924, label %918

918:                                              ; preds = %914, %921
  %919 = phi i16* [ %922, %921 ], [ %915, %914 ]
  %920 = load i16, i16* %919, align 2
  switch i16 %920, label %921 [
    i16 8232, label %924
    i16 13, label %924
    i16 10, label %924
    i16 8233, label %924
  ]

921:                                              ; preds = %918
  %922 = getelementptr inbounds i16, i16* %919, i64 1
  %923 = icmp eq i16* %922, %916
  br i1 %923, label %927, label %918

924:                                              ; preds = %918, %918, %918, %918, %914
  %925 = phi i16* [ %915, %914 ], [ %919, %918 ], [ %919, %918 ], [ %919, %918 ], [ %919, %918 ]
  %926 = icmp eq i16* %925, %916
  br i1 %926, label %927, label %940

927:                                              ; preds = %921, %924
  store i16* %916, i16** %910, align 8
  %928 = load i8, i8* %912, align 8, !range !2
  %929 = icmp eq i8 %928, 0
  br i1 %929, label %930, label %937

930:                                              ; preds = %927
  %931 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %913, align 8
  %932 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %931, i64 5
  %933 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %932, align 8
  %934 = tail call zeroext i1 %933(%"class.v8::internal::Utf16CharacterStream"* %886) #8
  br i1 %934, label %914, label %935

935:                                              ; preds = %930
  %936 = load i16*, i16** %910, align 8
  br label %937

937:                                              ; preds = %927, %935
  %938 = phi i16* [ %936, %935 ], [ %916, %927 ]
  %939 = getelementptr inbounds i16, i16* %938, i64 1
  store i16* %939, i16** %910, align 8
  br label %944

940:                                              ; preds = %924
  %941 = getelementptr inbounds i16, i16* %925, i64 1
  store i16* %941, i16** %910, align 8
  %942 = load i16, i16* %925, align 2
  %943 = zext i16 %942 to i32
  br label %944

944:                                              ; preds = %940, %937
  %945 = phi i32 [ %943, %940 ], [ -1, %937 ]
  store i32 %945, i32* %84, align 8
  br label %2626

946:                                              ; preds = %845
  %947 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %948 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %947, i64 0, i32 2
  %949 = load i16*, i16** %948, align 8
  %950 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %947, i64 0, i32 3
  %951 = load i16*, i16** %950, align 8
  %952 = icmp ult i16* %949, %951
  br i1 %952, label %953, label %956, !prof !4

953:                                              ; preds = %946
  %954 = load i16, i16* %949, align 2
  %955 = zext i16 %954 to i32
  br label %970

956:                                              ; preds = %946
  %957 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %947, i64 0, i32 6
  %958 = load i8, i8* %957, align 8, !range !2
  %959 = icmp eq i8 %958, 0
  br i1 %959, label %960, label %970

960:                                              ; preds = %956
  %961 = bitcast %"class.v8::internal::Utf16CharacterStream"* %947 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %962 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %961, align 8
  %963 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %962, i64 5
  %964 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %963, align 8
  %965 = tail call zeroext i1 %964(%"class.v8::internal::Utf16CharacterStream"* %947) #8
  %966 = load i16*, i16** %948, align 8
  br i1 %965, label %967, label %970

967:                                              ; preds = %960
  %968 = load i16, i16* %966, align 2
  %969 = zext i16 %968 to i32
  br label %970

970:                                              ; preds = %967, %960, %956, %953
  %971 = phi i16* [ %949, %953 ], [ %966, %967 ], [ %949, %956 ], [ %966, %960 ]
  %972 = phi i32 [ %955, %953 ], [ %969, %967 ], [ -1, %956 ], [ -1, %960 ]
  %973 = getelementptr inbounds i16, i16* %971, i64 1
  store i16* %973, i16** %948, align 8
  store i32 %972, i32* %84, align 8
  br label %2628

974:                                              ; preds = %105
  %975 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %976 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %975, i64 0, i32 2
  %977 = load i16*, i16** %976, align 8
  %978 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %975, i64 0, i32 3
  %979 = load i16*, i16** %978, align 8
  %980 = icmp ult i16* %977, %979
  br i1 %980, label %995, label %981, !prof !4

981:                                              ; preds = %974
  %982 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %975, i64 0, i32 6
  %983 = load i8, i8* %982, align 8, !range !2
  %984 = icmp eq i8 %983, 0
  br i1 %984, label %985, label %992

985:                                              ; preds = %981
  %986 = bitcast %"class.v8::internal::Utf16CharacterStream"* %975 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %987 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %986, align 8
  %988 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %987, i64 5
  %989 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %988, align 8
  %990 = tail call zeroext i1 %989(%"class.v8::internal::Utf16CharacterStream"* %975) #8
  %991 = load i16*, i16** %976, align 8
  br i1 %990, label %995, label %992

992:                                              ; preds = %985, %981
  %993 = phi i16* [ %991, %985 ], [ %977, %981 ]
  %994 = getelementptr inbounds i16, i16* %993, i64 1
  store i16* %994, i16** %976, align 8
  store i32 -1, i32* %84, align 8
  br label %2628

995:                                              ; preds = %985, %974
  %996 = phi i16* [ %977, %974 ], [ %991, %985 ]
  %997 = load i16, i16* %996, align 2
  %998 = zext i16 %997 to i32
  %999 = getelementptr inbounds i16, i16* %996, i64 1
  store i16* %999, i16** %976, align 8
  store i32 %998, i32* %84, align 8
  switch i16 %997, label %2628 [
    i16 42, label %1000
    i16 61, label %1055
  ]

1000:                                             ; preds = %995
  %1001 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %1002 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1001, i64 0, i32 2
  %1003 = load i16*, i16** %1002, align 8
  %1004 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1001, i64 0, i32 3
  %1005 = load i16*, i16** %1004, align 8
  %1006 = icmp ult i16* %1003, %1005
  br i1 %1006, label %1021, label %1007, !prof !4

1007:                                             ; preds = %1000
  %1008 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1001, i64 0, i32 6
  %1009 = load i8, i8* %1008, align 8, !range !2
  %1010 = icmp eq i8 %1009, 0
  br i1 %1010, label %1011, label %1018

1011:                                             ; preds = %1007
  %1012 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1001 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %1013 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1012, align 8
  %1014 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1013, i64 5
  %1015 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1014, align 8
  %1016 = tail call zeroext i1 %1015(%"class.v8::internal::Utf16CharacterStream"* %1001) #8
  %1017 = load i16*, i16** %1002, align 8
  br i1 %1016, label %1021, label %1018

1018:                                             ; preds = %1011, %1007
  %1019 = phi i16* [ %1017, %1011 ], [ %1003, %1007 ]
  %1020 = getelementptr inbounds i16, i16* %1019, i64 1
  store i16* %1020, i16** %1002, align 8
  store i32 -1, i32* %84, align 8
  br label %2628

1021:                                             ; preds = %1011, %1000
  %1022 = phi i16* [ %1003, %1000 ], [ %1017, %1011 ]
  %1023 = load i16, i16* %1022, align 2
  %1024 = zext i16 %1023 to i32
  %1025 = getelementptr inbounds i16, i16* %1022, i64 1
  store i16* %1025, i16** %1002, align 8
  store i32 %1024, i32* %84, align 8
  %1026 = icmp eq i16 %1023, 61
  br i1 %1026, label %1027, label %2628

1027:                                             ; preds = %1021
  %1028 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %1029 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1028, i64 0, i32 2
  %1030 = load i16*, i16** %1029, align 8
  %1031 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1028, i64 0, i32 3
  %1032 = load i16*, i16** %1031, align 8
  %1033 = icmp ult i16* %1030, %1032
  br i1 %1033, label %1034, label %1037, !prof !4

1034:                                             ; preds = %1027
  %1035 = load i16, i16* %1030, align 2
  %1036 = zext i16 %1035 to i32
  br label %1051

1037:                                             ; preds = %1027
  %1038 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1028, i64 0, i32 6
  %1039 = load i8, i8* %1038, align 8, !range !2
  %1040 = icmp eq i8 %1039, 0
  br i1 %1040, label %1041, label %1051

1041:                                             ; preds = %1037
  %1042 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1028 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %1043 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1042, align 8
  %1044 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1043, i64 5
  %1045 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1044, align 8
  %1046 = tail call zeroext i1 %1045(%"class.v8::internal::Utf16CharacterStream"* %1028) #8
  %1047 = load i16*, i16** %1029, align 8
  br i1 %1046, label %1048, label %1051

1048:                                             ; preds = %1041
  %1049 = load i16, i16* %1047, align 2
  %1050 = zext i16 %1049 to i32
  br label %1051

1051:                                             ; preds = %1048, %1041, %1037, %1034
  %1052 = phi i16* [ %1030, %1034 ], [ %1047, %1048 ], [ %1030, %1037 ], [ %1047, %1041 ]
  %1053 = phi i32 [ %1036, %1034 ], [ %1050, %1048 ], [ -1, %1037 ], [ -1, %1041 ]
  %1054 = getelementptr inbounds i16, i16* %1052, i64 1
  store i16* %1054, i16** %1029, align 8
  store i32 %1053, i32* %84, align 8
  br label %2628

1055:                                             ; preds = %995
  %1056 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %1057 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1056, i64 0, i32 2
  %1058 = load i16*, i16** %1057, align 8
  %1059 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1056, i64 0, i32 3
  %1060 = load i16*, i16** %1059, align 8
  %1061 = icmp ult i16* %1058, %1060
  br i1 %1061, label %1062, label %1065, !prof !4

1062:                                             ; preds = %1055
  %1063 = load i16, i16* %1058, align 2
  %1064 = zext i16 %1063 to i32
  br label %1079

1065:                                             ; preds = %1055
  %1066 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1056, i64 0, i32 6
  %1067 = load i8, i8* %1066, align 8, !range !2
  %1068 = icmp eq i8 %1067, 0
  br i1 %1068, label %1069, label %1079

1069:                                             ; preds = %1065
  %1070 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1056 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %1071 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1070, align 8
  %1072 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1071, i64 5
  %1073 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1072, align 8
  %1074 = tail call zeroext i1 %1073(%"class.v8::internal::Utf16CharacterStream"* %1056) #8
  %1075 = load i16*, i16** %1057, align 8
  br i1 %1074, label %1076, label %1079

1076:                                             ; preds = %1069
  %1077 = load i16, i16* %1075, align 2
  %1078 = zext i16 %1077 to i32
  br label %1079

1079:                                             ; preds = %1076, %1069, %1065, %1062
  %1080 = phi i16* [ %1058, %1062 ], [ %1075, %1076 ], [ %1058, %1065 ], [ %1075, %1069 ]
  %1081 = phi i32 [ %1064, %1062 ], [ %1078, %1076 ], [ -1, %1065 ], [ -1, %1069 ]
  %1082 = getelementptr inbounds i16, i16* %1080, i64 1
  store i16* %1082, i16** %1057, align 8
  store i32 %1081, i32* %84, align 8
  br label %2628

1083:                                             ; preds = %105
  %1084 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %1085 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1084, i64 0, i32 2
  %1086 = load i16*, i16** %1085, align 8
  %1087 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1084, i64 0, i32 3
  %1088 = load i16*, i16** %1087, align 8
  %1089 = icmp ult i16* %1086, %1088
  br i1 %1089, label %1104, label %1090, !prof !4

1090:                                             ; preds = %1083
  %1091 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1084, i64 0, i32 6
  %1092 = load i8, i8* %1091, align 8, !range !2
  %1093 = icmp eq i8 %1092, 0
  br i1 %1093, label %1094, label %1101

1094:                                             ; preds = %1090
  %1095 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1084 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %1096 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1095, align 8
  %1097 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1096, i64 5
  %1098 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1097, align 8
  %1099 = tail call zeroext i1 %1098(%"class.v8::internal::Utf16CharacterStream"* %1084) #8
  %1100 = load i16*, i16** %1085, align 8
  br i1 %1099, label %1104, label %1101

1101:                                             ; preds = %1094, %1090
  %1102 = phi i16* [ %1100, %1094 ], [ %1086, %1090 ]
  %1103 = getelementptr inbounds i16, i16* %1102, i64 1
  store i16* %1103, i16** %1085, align 8
  store i32 -1, i32* %84, align 8
  br label %2628

1104:                                             ; preds = %1094, %1083
  %1105 = phi i16* [ %1086, %1083 ], [ %1100, %1094 ]
  %1106 = load i16, i16* %1105, align 2
  %1107 = zext i16 %1106 to i32
  %1108 = getelementptr inbounds i16, i16* %1105, i64 1
  store i16* %1108, i16** %1085, align 8
  store i32 %1107, i32* %84, align 8
  %1109 = icmp eq i16 %1106, 61
  br i1 %1109, label %1110, label %2628

1110:                                             ; preds = %1104
  %1111 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %1112 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1111, i64 0, i32 2
  %1113 = load i16*, i16** %1112, align 8
  %1114 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1111, i64 0, i32 3
  %1115 = load i16*, i16** %1114, align 8
  %1116 = icmp ult i16* %1113, %1115
  br i1 %1116, label %1117, label %1120, !prof !4

1117:                                             ; preds = %1110
  %1118 = load i16, i16* %1113, align 2
  %1119 = zext i16 %1118 to i32
  br label %1134

1120:                                             ; preds = %1110
  %1121 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1111, i64 0, i32 6
  %1122 = load i8, i8* %1121, align 8, !range !2
  %1123 = icmp eq i8 %1122, 0
  br i1 %1123, label %1124, label %1134

1124:                                             ; preds = %1120
  %1125 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1111 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %1126 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1125, align 8
  %1127 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1126, i64 5
  %1128 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1127, align 8
  %1129 = tail call zeroext i1 %1128(%"class.v8::internal::Utf16CharacterStream"* %1111) #8
  %1130 = load i16*, i16** %1112, align 8
  br i1 %1129, label %1131, label %1134

1131:                                             ; preds = %1124
  %1132 = load i16, i16* %1130, align 2
  %1133 = zext i16 %1132 to i32
  br label %1134

1134:                                             ; preds = %1131, %1124, %1120, %1117
  %1135 = phi i16* [ %1113, %1117 ], [ %1130, %1131 ], [ %1113, %1120 ], [ %1130, %1124 ]
  %1136 = phi i32 [ %1119, %1117 ], [ %1133, %1131 ], [ -1, %1120 ], [ -1, %1124 ]
  %1137 = getelementptr inbounds i16, i16* %1135, i64 1
  store i16* %1137, i16** %1112, align 8
  store i32 %1136, i32* %84, align 8
  br label %2628

1138:                                             ; preds = %105
  %1139 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %1140 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1139, i64 0, i32 2
  %1141 = load i16*, i16** %1140, align 8
  %1142 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1139, i64 0, i32 3
  %1143 = load i16*, i16** %1142, align 8
  %1144 = icmp ult i16* %1141, %1143
  br i1 %1144, label %1159, label %1145, !prof !4

1145:                                             ; preds = %1138
  %1146 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1139, i64 0, i32 6
  %1147 = load i8, i8* %1146, align 8, !range !2
  %1148 = icmp eq i8 %1147, 0
  br i1 %1148, label %1149, label %1156

1149:                                             ; preds = %1145
  %1150 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1139 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %1151 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1150, align 8
  %1152 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1151, i64 5
  %1153 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1152, align 8
  %1154 = tail call zeroext i1 %1153(%"class.v8::internal::Utf16CharacterStream"* %1139) #8
  %1155 = load i16*, i16** %1140, align 8
  br i1 %1154, label %1159, label %1156

1156:                                             ; preds = %1149, %1145
  %1157 = phi i16* [ %1155, %1149 ], [ %1141, %1145 ]
  %1158 = getelementptr inbounds i16, i16* %1157, i64 1
  store i16* %1158, i16** %1140, align 8
  store i32 -1, i32* %84, align 8
  br label %2628

1159:                                             ; preds = %1149, %1138
  %1160 = phi i16* [ %1141, %1138 ], [ %1155, %1149 ]
  %1161 = load i16, i16* %1160, align 2
  %1162 = zext i16 %1161 to i32
  %1163 = getelementptr inbounds i16, i16* %1160, i64 1
  store i16* %1163, i16** %1140, align 8
  store i32 %1162, i32* %84, align 8
  switch i16 %1161, label %2628 [
    i16 47, label %1164
    i16 42, label %1318
    i16 61, label %1320
  ]

1164:                                             ; preds = %1159
  %1165 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %1166 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1165, i64 0, i32 2
  %1167 = load i16*, i16** %1166, align 8
  %1168 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1165, i64 0, i32 3
  %1169 = load i16*, i16** %1168, align 8
  %1170 = icmp ult i16* %1167, %1169
  br i1 %1170, label %1183, label %1171, !prof !4

1171:                                             ; preds = %1164
  %1172 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1165, i64 0, i32 6
  %1173 = load i8, i8* %1172, align 8, !range !2
  %1174 = icmp eq i8 %1173, 0
  br i1 %1174, label %1175, label %1280

1175:                                             ; preds = %1171
  %1176 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1165 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %1177 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1176, align 8
  %1178 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1177, i64 5
  %1179 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1178, align 8
  %1180 = tail call zeroext i1 %1179(%"class.v8::internal::Utf16CharacterStream"* %1165) #8
  br i1 %1180, label %1181, label %1280

1181:                                             ; preds = %1175
  %1182 = load i16*, i16** %1166, align 8
  br label %1183

1183:                                             ; preds = %1181, %1164
  %1184 = phi i16* [ %1182, %1181 ], [ %1167, %1164 ]
  %1185 = load i16, i16* %1184, align 2
  switch i16 %1185, label %1280 [
    i16 64, label %1186
    i16 35, label %1186
  ]

1186:                                             ; preds = %1183, %1183
  %1187 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %1188 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1187, i64 0, i32 2
  %1189 = load i16*, i16** %1188, align 8
  %1190 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1187, i64 0, i32 3
  %1191 = load i16*, i16** %1190, align 8
  %1192 = icmp ult i16* %1189, %1191
  br i1 %1192, label %1193, label %1196, !prof !4

1193:                                             ; preds = %1186
  %1194 = load i16, i16* %1189, align 2
  %1195 = zext i16 %1194 to i32
  br label %1210

1196:                                             ; preds = %1186
  %1197 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1187, i64 0, i32 6
  %1198 = load i8, i8* %1197, align 8, !range !2
  %1199 = icmp eq i8 %1198, 0
  br i1 %1199, label %1200, label %1210

1200:                                             ; preds = %1196
  %1201 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1187 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %1202 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1201, align 8
  %1203 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1202, i64 5
  %1204 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1203, align 8
  %1205 = tail call zeroext i1 %1204(%"class.v8::internal::Utf16CharacterStream"* %1187) #8
  %1206 = load i16*, i16** %1188, align 8
  br i1 %1205, label %1207, label %1210

1207:                                             ; preds = %1200
  %1208 = load i16, i16* %1206, align 2
  %1209 = zext i16 %1208 to i32
  br label %1210

1210:                                             ; preds = %1207, %1200, %1196, %1193
  %1211 = phi i16* [ %1189, %1193 ], [ %1206, %1207 ], [ %1189, %1196 ], [ %1206, %1200 ]
  %1212 = phi i32 [ %1195, %1193 ], [ %1209, %1207 ], [ -1, %1196 ], [ -1, %1200 ]
  %1213 = getelementptr inbounds i16, i16* %1211, i64 1
  store i16* %1213, i16** %1188, align 8
  store i32 %1212, i32* %84, align 8
  %1214 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %1215 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1214, i64 0, i32 2
  %1216 = load i16*, i16** %1215, align 8
  %1217 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1214, i64 0, i32 3
  %1218 = load i16*, i16** %1217, align 8
  %1219 = icmp ult i16* %1216, %1218
  br i1 %1219, label %1220, label %1223, !prof !4

1220:                                             ; preds = %1210
  %1221 = load i16, i16* %1216, align 2
  %1222 = zext i16 %1221 to i32
  br label %1237

1223:                                             ; preds = %1210
  %1224 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1214, i64 0, i32 6
  %1225 = load i8, i8* %1224, align 8, !range !2
  %1226 = icmp eq i8 %1225, 0
  br i1 %1226, label %1227, label %1237

1227:                                             ; preds = %1223
  %1228 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1214 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %1229 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1228, align 8
  %1230 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1229, i64 5
  %1231 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1230, align 8
  %1232 = tail call zeroext i1 %1231(%"class.v8::internal::Utf16CharacterStream"* %1214) #8
  %1233 = load i16*, i16** %1215, align 8
  br i1 %1232, label %1234, label %1237

1234:                                             ; preds = %1227
  %1235 = load i16, i16* %1233, align 2
  %1236 = zext i16 %1235 to i32
  br label %1237

1237:                                             ; preds = %1234, %1227, %1223, %1220
  %1238 = phi i16* [ %1216, %1220 ], [ %1233, %1234 ], [ %1216, %1223 ], [ %1233, %1227 ]
  %1239 = phi i32 [ %1222, %1220 ], [ %1236, %1234 ], [ -1, %1223 ], [ -1, %1227 ]
  %1240 = getelementptr inbounds i16, i16* %1238, i64 1
  store i16* %1240, i16** %1215, align 8
  store i32 %1239, i32* %84, align 8
  tail call void @_ZN2v88internal7Scanner26TryToParseSourceURLCommentEv(%"class.v8::internal::Scanner"* %0) #8
  %1241 = load i32, i32* %84, align 8
  switch i32 %1241, label %1242 [
    i32 8232, label %2626
    i32 13, label %2626
    i32 10, label %2626
    i32 8233, label %2626
    i32 -1, label %2626
  ]

1242:                                             ; preds = %1237
  %1243 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %1244 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1243, i64 0, i32 2
  %1245 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1243, i64 0, i32 3
  %1246 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1243, i64 0, i32 6
  %1247 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1243 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  br label %1248

1248:                                             ; preds = %1264, %1242
  %1249 = load i16*, i16** %1244, align 8
  %1250 = load i16*, i16** %1245, align 8
  %1251 = icmp eq i16* %1249, %1250
  br i1 %1251, label %1258, label %1252

1252:                                             ; preds = %1248, %1255
  %1253 = phi i16* [ %1256, %1255 ], [ %1249, %1248 ]
  %1254 = load i16, i16* %1253, align 2
  switch i16 %1254, label %1255 [
    i16 8232, label %1258
    i16 13, label %1258
    i16 10, label %1258
    i16 8233, label %1258
  ]

1255:                                             ; preds = %1252
  %1256 = getelementptr inbounds i16, i16* %1253, i64 1
  %1257 = icmp eq i16* %1256, %1250
  br i1 %1257, label %1261, label %1252

1258:                                             ; preds = %1252, %1252, %1252, %1252, %1248
  %1259 = phi i16* [ %1249, %1248 ], [ %1253, %1252 ], [ %1253, %1252 ], [ %1253, %1252 ], [ %1253, %1252 ]
  %1260 = icmp eq i16* %1259, %1250
  br i1 %1260, label %1261, label %1274

1261:                                             ; preds = %1255, %1258
  store i16* %1250, i16** %1244, align 8
  %1262 = load i8, i8* %1246, align 8, !range !2
  %1263 = icmp eq i8 %1262, 0
  br i1 %1263, label %1264, label %1271

1264:                                             ; preds = %1261
  %1265 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1247, align 8
  %1266 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1265, i64 5
  %1267 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1266, align 8
  %1268 = tail call zeroext i1 %1267(%"class.v8::internal::Utf16CharacterStream"* %1243) #8
  br i1 %1268, label %1248, label %1269

1269:                                             ; preds = %1264
  %1270 = load i16*, i16** %1244, align 8
  br label %1271

1271:                                             ; preds = %1261, %1269
  %1272 = phi i16* [ %1270, %1269 ], [ %1250, %1261 ]
  %1273 = getelementptr inbounds i16, i16* %1272, i64 1
  store i16* %1273, i16** %1244, align 8
  br label %1278

1274:                                             ; preds = %1258
  %1275 = getelementptr inbounds i16, i16* %1259, i64 1
  store i16* %1275, i16** %1244, align 8
  %1276 = load i16, i16* %1259, align 2
  %1277 = zext i16 %1276 to i32
  br label %1278

1278:                                             ; preds = %1274, %1271
  %1279 = phi i32 [ %1277, %1274 ], [ -1, %1271 ]
  store i32 %1279, i32* %84, align 8
  br label %2626

1280:                                             ; preds = %1183, %1175, %1171
  %1281 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %1282 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1281, i64 0, i32 2
  %1283 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1281, i64 0, i32 3
  %1284 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1281, i64 0, i32 6
  %1285 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1281 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  br label %1286

1286:                                             ; preds = %1302, %1280
  %1287 = load i16*, i16** %1282, align 8
  %1288 = load i16*, i16** %1283, align 8
  %1289 = icmp eq i16* %1287, %1288
  br i1 %1289, label %1296, label %1290

1290:                                             ; preds = %1286, %1293
  %1291 = phi i16* [ %1294, %1293 ], [ %1287, %1286 ]
  %1292 = load i16, i16* %1291, align 2
  switch i16 %1292, label %1293 [
    i16 8232, label %1296
    i16 13, label %1296
    i16 10, label %1296
    i16 8233, label %1296
  ]

1293:                                             ; preds = %1290
  %1294 = getelementptr inbounds i16, i16* %1291, i64 1
  %1295 = icmp eq i16* %1294, %1288
  br i1 %1295, label %1299, label %1290

1296:                                             ; preds = %1290, %1290, %1290, %1290, %1286
  %1297 = phi i16* [ %1287, %1286 ], [ %1291, %1290 ], [ %1291, %1290 ], [ %1291, %1290 ], [ %1291, %1290 ]
  %1298 = icmp eq i16* %1297, %1288
  br i1 %1298, label %1299, label %1312

1299:                                             ; preds = %1293, %1296
  store i16* %1288, i16** %1282, align 8
  %1300 = load i8, i8* %1284, align 8, !range !2
  %1301 = icmp eq i8 %1300, 0
  br i1 %1301, label %1302, label %1309

1302:                                             ; preds = %1299
  %1303 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1285, align 8
  %1304 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1303, i64 5
  %1305 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1304, align 8
  %1306 = tail call zeroext i1 %1305(%"class.v8::internal::Utf16CharacterStream"* %1281) #8
  br i1 %1306, label %1286, label %1307

1307:                                             ; preds = %1302
  %1308 = load i16*, i16** %1282, align 8
  br label %1309

1309:                                             ; preds = %1299, %1307
  %1310 = phi i16* [ %1308, %1307 ], [ %1288, %1299 ]
  %1311 = getelementptr inbounds i16, i16* %1310, i64 1
  store i16* %1311, i16** %1282, align 8
  br label %1316

1312:                                             ; preds = %1296
  %1313 = getelementptr inbounds i16, i16* %1297, i64 1
  store i16* %1313, i16** %1282, align 8
  %1314 = load i16, i16* %1297, align 2
  %1315 = zext i16 %1314 to i32
  br label %1316

1316:                                             ; preds = %1312, %1309
  %1317 = phi i32 [ %1315, %1312 ], [ -1, %1309 ]
  store i32 %1317, i32* %84, align 8
  br label %2626

1318:                                             ; preds = %1159
  %1319 = tail call zeroext i8 @_ZN2v88internal7Scanner20SkipMultiLineCommentEv(%"class.v8::internal::Scanner"* %0) #8
  br label %2623

1320:                                             ; preds = %1159
  %1321 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %1322 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1321, i64 0, i32 2
  %1323 = load i16*, i16** %1322, align 8
  %1324 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1321, i64 0, i32 3
  %1325 = load i16*, i16** %1324, align 8
  %1326 = icmp ult i16* %1323, %1325
  br i1 %1326, label %1327, label %1330, !prof !4

1327:                                             ; preds = %1320
  %1328 = load i16, i16* %1323, align 2
  %1329 = zext i16 %1328 to i32
  br label %1344

1330:                                             ; preds = %1320
  %1331 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1321, i64 0, i32 6
  %1332 = load i8, i8* %1331, align 8, !range !2
  %1333 = icmp eq i8 %1332, 0
  br i1 %1333, label %1334, label %1344

1334:                                             ; preds = %1330
  %1335 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1321 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %1336 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1335, align 8
  %1337 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1336, i64 5
  %1338 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1337, align 8
  %1339 = tail call zeroext i1 %1338(%"class.v8::internal::Utf16CharacterStream"* %1321) #8
  %1340 = load i16*, i16** %1322, align 8
  br i1 %1339, label %1341, label %1344

1341:                                             ; preds = %1334
  %1342 = load i16, i16* %1340, align 2
  %1343 = zext i16 %1342 to i32
  br label %1344

1344:                                             ; preds = %1341, %1334, %1330, %1327
  %1345 = phi i16* [ %1323, %1327 ], [ %1340, %1341 ], [ %1323, %1330 ], [ %1340, %1334 ]
  %1346 = phi i32 [ %1329, %1327 ], [ %1343, %1341 ], [ -1, %1330 ], [ -1, %1334 ]
  %1347 = getelementptr inbounds i16, i16* %1345, i64 1
  store i16* %1347, i16** %1322, align 8
  store i32 %1346, i32* %84, align 8
  br label %2628

1348:                                             ; preds = %105
  %1349 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %1350 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1349, i64 0, i32 2
  %1351 = load i16*, i16** %1350, align 8
  %1352 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1349, i64 0, i32 3
  %1353 = load i16*, i16** %1352, align 8
  %1354 = icmp ult i16* %1351, %1353
  br i1 %1354, label %1369, label %1355, !prof !4

1355:                                             ; preds = %1348
  %1356 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1349, i64 0, i32 6
  %1357 = load i8, i8* %1356, align 8, !range !2
  %1358 = icmp eq i8 %1357, 0
  br i1 %1358, label %1359, label %1366

1359:                                             ; preds = %1355
  %1360 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1349 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %1361 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1360, align 8
  %1362 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1361, i64 5
  %1363 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1362, align 8
  %1364 = tail call zeroext i1 %1363(%"class.v8::internal::Utf16CharacterStream"* %1349) #8
  %1365 = load i16*, i16** %1350, align 8
  br i1 %1364, label %1369, label %1366

1366:                                             ; preds = %1359, %1355
  %1367 = phi i16* [ %1365, %1359 ], [ %1351, %1355 ]
  %1368 = getelementptr inbounds i16, i16* %1367, i64 1
  store i16* %1368, i16** %1350, align 8
  store i32 -1, i32* %84, align 8
  br label %2628

1369:                                             ; preds = %1359, %1348
  %1370 = phi i16* [ %1351, %1348 ], [ %1365, %1359 ]
  %1371 = load i16, i16* %1370, align 2
  %1372 = zext i16 %1371 to i32
  %1373 = getelementptr inbounds i16, i16* %1370, i64 1
  store i16* %1373, i16** %1350, align 8
  store i32 %1372, i32* %84, align 8
  switch i16 %1371, label %2628 [
    i16 38, label %1374
    i16 61, label %1429
  ]

1374:                                             ; preds = %1369
  %1375 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %1376 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1375, i64 0, i32 2
  %1377 = load i16*, i16** %1376, align 8
  %1378 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1375, i64 0, i32 3
  %1379 = load i16*, i16** %1378, align 8
  %1380 = icmp ult i16* %1377, %1379
  br i1 %1380, label %1395, label %1381, !prof !4

1381:                                             ; preds = %1374
  %1382 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1375, i64 0, i32 6
  %1383 = load i8, i8* %1382, align 8, !range !2
  %1384 = icmp eq i8 %1383, 0
  br i1 %1384, label %1385, label %1392

1385:                                             ; preds = %1381
  %1386 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1375 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %1387 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1386, align 8
  %1388 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1387, i64 5
  %1389 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1388, align 8
  %1390 = tail call zeroext i1 %1389(%"class.v8::internal::Utf16CharacterStream"* %1375) #8
  %1391 = load i16*, i16** %1376, align 8
  br i1 %1390, label %1395, label %1392

1392:                                             ; preds = %1385, %1381
  %1393 = phi i16* [ %1391, %1385 ], [ %1377, %1381 ]
  %1394 = getelementptr inbounds i16, i16* %1393, i64 1
  store i16* %1394, i16** %1376, align 8
  store i32 -1, i32* %84, align 8
  br label %2628

1395:                                             ; preds = %1385, %1374
  %1396 = phi i16* [ %1377, %1374 ], [ %1391, %1385 ]
  %1397 = load i16, i16* %1396, align 2
  %1398 = zext i16 %1397 to i32
  %1399 = getelementptr inbounds i16, i16* %1396, i64 1
  store i16* %1399, i16** %1376, align 8
  store i32 %1398, i32* %84, align 8
  %1400 = icmp eq i16 %1397, 61
  br i1 %1400, label %1401, label %2628

1401:                                             ; preds = %1395
  %1402 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %1403 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1402, i64 0, i32 2
  %1404 = load i16*, i16** %1403, align 8
  %1405 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1402, i64 0, i32 3
  %1406 = load i16*, i16** %1405, align 8
  %1407 = icmp ult i16* %1404, %1406
  br i1 %1407, label %1408, label %1411, !prof !4

1408:                                             ; preds = %1401
  %1409 = load i16, i16* %1404, align 2
  %1410 = zext i16 %1409 to i32
  br label %1425

1411:                                             ; preds = %1401
  %1412 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1402, i64 0, i32 6
  %1413 = load i8, i8* %1412, align 8, !range !2
  %1414 = icmp eq i8 %1413, 0
  br i1 %1414, label %1415, label %1425

1415:                                             ; preds = %1411
  %1416 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1402 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %1417 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1416, align 8
  %1418 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1417, i64 5
  %1419 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1418, align 8
  %1420 = tail call zeroext i1 %1419(%"class.v8::internal::Utf16CharacterStream"* %1402) #8
  %1421 = load i16*, i16** %1403, align 8
  br i1 %1420, label %1422, label %1425

1422:                                             ; preds = %1415
  %1423 = load i16, i16* %1421, align 2
  %1424 = zext i16 %1423 to i32
  br label %1425

1425:                                             ; preds = %1422, %1415, %1411, %1408
  %1426 = phi i16* [ %1404, %1408 ], [ %1421, %1422 ], [ %1404, %1411 ], [ %1421, %1415 ]
  %1427 = phi i32 [ %1410, %1408 ], [ %1424, %1422 ], [ -1, %1411 ], [ -1, %1415 ]
  %1428 = getelementptr inbounds i16, i16* %1426, i64 1
  store i16* %1428, i16** %1403, align 8
  store i32 %1427, i32* %84, align 8
  br label %2628

1429:                                             ; preds = %1369
  %1430 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %1431 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1430, i64 0, i32 2
  %1432 = load i16*, i16** %1431, align 8
  %1433 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1430, i64 0, i32 3
  %1434 = load i16*, i16** %1433, align 8
  %1435 = icmp ult i16* %1432, %1434
  br i1 %1435, label %1436, label %1439, !prof !4

1436:                                             ; preds = %1429
  %1437 = load i16, i16* %1432, align 2
  %1438 = zext i16 %1437 to i32
  br label %1453

1439:                                             ; preds = %1429
  %1440 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1430, i64 0, i32 6
  %1441 = load i8, i8* %1440, align 8, !range !2
  %1442 = icmp eq i8 %1441, 0
  br i1 %1442, label %1443, label %1453

1443:                                             ; preds = %1439
  %1444 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1430 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %1445 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1444, align 8
  %1446 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1445, i64 5
  %1447 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1446, align 8
  %1448 = tail call zeroext i1 %1447(%"class.v8::internal::Utf16CharacterStream"* %1430) #8
  %1449 = load i16*, i16** %1431, align 8
  br i1 %1448, label %1450, label %1453

1450:                                             ; preds = %1443
  %1451 = load i16, i16* %1449, align 2
  %1452 = zext i16 %1451 to i32
  br label %1453

1453:                                             ; preds = %1450, %1443, %1439, %1436
  %1454 = phi i16* [ %1432, %1436 ], [ %1449, %1450 ], [ %1432, %1439 ], [ %1449, %1443 ]
  %1455 = phi i32 [ %1438, %1436 ], [ %1452, %1450 ], [ -1, %1439 ], [ -1, %1443 ]
  %1456 = getelementptr inbounds i16, i16* %1454, i64 1
  store i16* %1456, i16** %1431, align 8
  store i32 %1455, i32* %84, align 8
  br label %2628

1457:                                             ; preds = %105
  %1458 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %1459 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1458, i64 0, i32 2
  %1460 = load i16*, i16** %1459, align 8
  %1461 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1458, i64 0, i32 3
  %1462 = load i16*, i16** %1461, align 8
  %1463 = icmp ult i16* %1460, %1462
  br i1 %1463, label %1478, label %1464, !prof !4

1464:                                             ; preds = %1457
  %1465 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1458, i64 0, i32 6
  %1466 = load i8, i8* %1465, align 8, !range !2
  %1467 = icmp eq i8 %1466, 0
  br i1 %1467, label %1468, label %1475

1468:                                             ; preds = %1464
  %1469 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1458 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %1470 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1469, align 8
  %1471 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1470, i64 5
  %1472 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1471, align 8
  %1473 = tail call zeroext i1 %1472(%"class.v8::internal::Utf16CharacterStream"* %1458) #8
  %1474 = load i16*, i16** %1459, align 8
  br i1 %1473, label %1478, label %1475

1475:                                             ; preds = %1468, %1464
  %1476 = phi i16* [ %1474, %1468 ], [ %1460, %1464 ]
  %1477 = getelementptr inbounds i16, i16* %1476, i64 1
  store i16* %1477, i16** %1459, align 8
  store i32 -1, i32* %84, align 8
  br label %2628

1478:                                             ; preds = %1468, %1457
  %1479 = phi i16* [ %1460, %1457 ], [ %1474, %1468 ]
  %1480 = load i16, i16* %1479, align 2
  %1481 = zext i16 %1480 to i32
  %1482 = getelementptr inbounds i16, i16* %1479, i64 1
  store i16* %1482, i16** %1459, align 8
  store i32 %1481, i32* %84, align 8
  switch i16 %1480, label %2628 [
    i16 124, label %1483
    i16 61, label %1538
  ]

1483:                                             ; preds = %1478
  %1484 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %1485 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1484, i64 0, i32 2
  %1486 = load i16*, i16** %1485, align 8
  %1487 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1484, i64 0, i32 3
  %1488 = load i16*, i16** %1487, align 8
  %1489 = icmp ult i16* %1486, %1488
  br i1 %1489, label %1504, label %1490, !prof !4

1490:                                             ; preds = %1483
  %1491 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1484, i64 0, i32 6
  %1492 = load i8, i8* %1491, align 8, !range !2
  %1493 = icmp eq i8 %1492, 0
  br i1 %1493, label %1494, label %1501

1494:                                             ; preds = %1490
  %1495 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1484 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %1496 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1495, align 8
  %1497 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1496, i64 5
  %1498 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1497, align 8
  %1499 = tail call zeroext i1 %1498(%"class.v8::internal::Utf16CharacterStream"* %1484) #8
  %1500 = load i16*, i16** %1485, align 8
  br i1 %1499, label %1504, label %1501

1501:                                             ; preds = %1494, %1490
  %1502 = phi i16* [ %1500, %1494 ], [ %1486, %1490 ]
  %1503 = getelementptr inbounds i16, i16* %1502, i64 1
  store i16* %1503, i16** %1485, align 8
  store i32 -1, i32* %84, align 8
  br label %2628

1504:                                             ; preds = %1494, %1483
  %1505 = phi i16* [ %1486, %1483 ], [ %1500, %1494 ]
  %1506 = load i16, i16* %1505, align 2
  %1507 = zext i16 %1506 to i32
  %1508 = getelementptr inbounds i16, i16* %1505, i64 1
  store i16* %1508, i16** %1485, align 8
  store i32 %1507, i32* %84, align 8
  %1509 = icmp eq i16 %1506, 61
  br i1 %1509, label %1510, label %2628

1510:                                             ; preds = %1504
  %1511 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %1512 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1511, i64 0, i32 2
  %1513 = load i16*, i16** %1512, align 8
  %1514 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1511, i64 0, i32 3
  %1515 = load i16*, i16** %1514, align 8
  %1516 = icmp ult i16* %1513, %1515
  br i1 %1516, label %1517, label %1520, !prof !4

1517:                                             ; preds = %1510
  %1518 = load i16, i16* %1513, align 2
  %1519 = zext i16 %1518 to i32
  br label %1534

1520:                                             ; preds = %1510
  %1521 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1511, i64 0, i32 6
  %1522 = load i8, i8* %1521, align 8, !range !2
  %1523 = icmp eq i8 %1522, 0
  br i1 %1523, label %1524, label %1534

1524:                                             ; preds = %1520
  %1525 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1511 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %1526 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1525, align 8
  %1527 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1526, i64 5
  %1528 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1527, align 8
  %1529 = tail call zeroext i1 %1528(%"class.v8::internal::Utf16CharacterStream"* %1511) #8
  %1530 = load i16*, i16** %1512, align 8
  br i1 %1529, label %1531, label %1534

1531:                                             ; preds = %1524
  %1532 = load i16, i16* %1530, align 2
  %1533 = zext i16 %1532 to i32
  br label %1534

1534:                                             ; preds = %1531, %1524, %1520, %1517
  %1535 = phi i16* [ %1513, %1517 ], [ %1530, %1531 ], [ %1513, %1520 ], [ %1530, %1524 ]
  %1536 = phi i32 [ %1519, %1517 ], [ %1533, %1531 ], [ -1, %1520 ], [ -1, %1524 ]
  %1537 = getelementptr inbounds i16, i16* %1535, i64 1
  store i16* %1537, i16** %1512, align 8
  store i32 %1536, i32* %84, align 8
  br label %2628

1538:                                             ; preds = %1478
  %1539 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %1540 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1539, i64 0, i32 2
  %1541 = load i16*, i16** %1540, align 8
  %1542 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1539, i64 0, i32 3
  %1543 = load i16*, i16** %1542, align 8
  %1544 = icmp ult i16* %1541, %1543
  br i1 %1544, label %1545, label %1548, !prof !4

1545:                                             ; preds = %1538
  %1546 = load i16, i16* %1541, align 2
  %1547 = zext i16 %1546 to i32
  br label %1562

1548:                                             ; preds = %1538
  %1549 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1539, i64 0, i32 6
  %1550 = load i8, i8* %1549, align 8, !range !2
  %1551 = icmp eq i8 %1550, 0
  br i1 %1551, label %1552, label %1562

1552:                                             ; preds = %1548
  %1553 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1539 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %1554 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1553, align 8
  %1555 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1554, i64 5
  %1556 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1555, align 8
  %1557 = tail call zeroext i1 %1556(%"class.v8::internal::Utf16CharacterStream"* %1539) #8
  %1558 = load i16*, i16** %1540, align 8
  br i1 %1557, label %1559, label %1562

1559:                                             ; preds = %1552
  %1560 = load i16, i16* %1558, align 2
  %1561 = zext i16 %1560 to i32
  br label %1562

1562:                                             ; preds = %1559, %1552, %1548, %1545
  %1563 = phi i16* [ %1541, %1545 ], [ %1558, %1559 ], [ %1541, %1548 ], [ %1558, %1552 ]
  %1564 = phi i32 [ %1547, %1545 ], [ %1561, %1559 ], [ -1, %1548 ], [ -1, %1552 ]
  %1565 = getelementptr inbounds i16, i16* %1563, i64 1
  store i16* %1565, i16** %1540, align 8
  store i32 %1564, i32* %84, align 8
  br label %2628

1566:                                             ; preds = %105
  %1567 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %1568 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1567, i64 0, i32 2
  %1569 = load i16*, i16** %1568, align 8
  %1570 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1567, i64 0, i32 3
  %1571 = load i16*, i16** %1570, align 8
  %1572 = icmp ult i16* %1569, %1571
  br i1 %1572, label %1587, label %1573, !prof !4

1573:                                             ; preds = %1566
  %1574 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1567, i64 0, i32 6
  %1575 = load i8, i8* %1574, align 8, !range !2
  %1576 = icmp eq i8 %1575, 0
  br i1 %1576, label %1577, label %1584

1577:                                             ; preds = %1573
  %1578 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1567 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %1579 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1578, align 8
  %1580 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1579, i64 5
  %1581 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1580, align 8
  %1582 = tail call zeroext i1 %1581(%"class.v8::internal::Utf16CharacterStream"* %1567) #8
  %1583 = load i16*, i16** %1568, align 8
  br i1 %1582, label %1587, label %1584

1584:                                             ; preds = %1577, %1573
  %1585 = phi i16* [ %1583, %1577 ], [ %1569, %1573 ]
  %1586 = getelementptr inbounds i16, i16* %1585, i64 1
  store i16* %1586, i16** %1568, align 8
  store i32 -1, i32* %84, align 8
  br label %2628

1587:                                             ; preds = %1577, %1566
  %1588 = phi i16* [ %1569, %1566 ], [ %1583, %1577 ]
  %1589 = load i16, i16* %1588, align 2
  %1590 = zext i16 %1589 to i32
  %1591 = getelementptr inbounds i16, i16* %1588, i64 1
  store i16* %1591, i16** %1568, align 8
  store i32 %1590, i32* %84, align 8
  %1592 = icmp eq i16 %1589, 61
  br i1 %1592, label %1593, label %2628

1593:                                             ; preds = %1587
  %1594 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %1595 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1594, i64 0, i32 2
  %1596 = load i16*, i16** %1595, align 8
  %1597 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1594, i64 0, i32 3
  %1598 = load i16*, i16** %1597, align 8
  %1599 = icmp ult i16* %1596, %1598
  br i1 %1599, label %1600, label %1603, !prof !4

1600:                                             ; preds = %1593
  %1601 = load i16, i16* %1596, align 2
  %1602 = zext i16 %1601 to i32
  br label %1617

1603:                                             ; preds = %1593
  %1604 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1594, i64 0, i32 6
  %1605 = load i8, i8* %1604, align 8, !range !2
  %1606 = icmp eq i8 %1605, 0
  br i1 %1606, label %1607, label %1617

1607:                                             ; preds = %1603
  %1608 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1594 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %1609 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1608, align 8
  %1610 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1609, i64 5
  %1611 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1610, align 8
  %1612 = tail call zeroext i1 %1611(%"class.v8::internal::Utf16CharacterStream"* %1594) #8
  %1613 = load i16*, i16** %1595, align 8
  br i1 %1612, label %1614, label %1617

1614:                                             ; preds = %1607
  %1615 = load i16, i16* %1613, align 2
  %1616 = zext i16 %1615 to i32
  br label %1617

1617:                                             ; preds = %1614, %1607, %1603, %1600
  %1618 = phi i16* [ %1596, %1600 ], [ %1613, %1614 ], [ %1596, %1603 ], [ %1613, %1607 ]
  %1619 = phi i32 [ %1602, %1600 ], [ %1616, %1614 ], [ -1, %1603 ], [ -1, %1607 ]
  %1620 = getelementptr inbounds i16, i16* %1618, i64 1
  store i16* %1620, i16** %1595, align 8
  store i32 %1619, i32* %84, align 8
  br label %2628

1621:                                             ; preds = %105
  %1622 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %1623 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1622, i64 0, i32 2
  %1624 = load i16*, i16** %1623, align 8
  %1625 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1622, i64 0, i32 3
  %1626 = load i16*, i16** %1625, align 8
  %1627 = icmp ult i16* %1624, %1626
  br i1 %1627, label %1642, label %1628, !prof !4

1628:                                             ; preds = %1621
  %1629 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1622, i64 0, i32 6
  %1630 = load i8, i8* %1629, align 8, !range !2
  %1631 = icmp eq i8 %1630, 0
  br i1 %1631, label %1632, label %1639

1632:                                             ; preds = %1628
  %1633 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1622 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %1634 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1633, align 8
  %1635 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1634, i64 5
  %1636 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1635, align 8
  %1637 = tail call zeroext i1 %1636(%"class.v8::internal::Utf16CharacterStream"* %1622) #8
  %1638 = load i16*, i16** %1623, align 8
  br i1 %1637, label %1642, label %1639

1639:                                             ; preds = %1632, %1628
  %1640 = phi i16* [ %1638, %1632 ], [ %1624, %1628 ]
  %1641 = getelementptr inbounds i16, i16* %1640, i64 1
  store i16* %1641, i16** %1623, align 8
  store i32 -1, i32* %84, align 8
  br label %2628

1642:                                             ; preds = %1632, %1621
  %1643 = phi i16* [ %1624, %1621 ], [ %1638, %1632 ]
  %1644 = load i16, i16* %1643, align 2
  %1645 = zext i16 %1644 to i32
  %1646 = getelementptr inbounds i16, i16* %1643, i64 1
  store i16* %1646, i16** %1623, align 8
  store i32 %1645, i32* %84, align 8
  %1647 = add nsw i32 %1645, -48
  %1648 = icmp ult i32 %1647, 10
  br i1 %1648, label %1649, label %1651

1649:                                             ; preds = %1642
  %1650 = tail call zeroext i8 @_ZN2v88internal7Scanner10ScanNumberEb(%"class.v8::internal::Scanner"* %0, i1 zeroext true) #8
  br label %2628

1651:                                             ; preds = %1642
  %1652 = icmp eq i16 %1644, 46
  br i1 %1652, label %1653, label %2628

1653:                                             ; preds = %1651
  %1654 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %1655 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1654, i64 0, i32 2
  %1656 = load i16*, i16** %1655, align 8
  %1657 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1654, i64 0, i32 3
  %1658 = load i16*, i16** %1657, align 8
  %1659 = icmp ult i16* %1656, %1658
  br i1 %1659, label %1672, label %1660, !prof !4

1660:                                             ; preds = %1653
  %1661 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1654, i64 0, i32 6
  %1662 = load i8, i8* %1661, align 8, !range !2
  %1663 = icmp eq i8 %1662, 0
  br i1 %1663, label %1664, label %2628

1664:                                             ; preds = %1660
  %1665 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1654 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %1666 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1665, align 8
  %1667 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1666, i64 5
  %1668 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1667, align 8
  %1669 = tail call zeroext i1 %1668(%"class.v8::internal::Utf16CharacterStream"* %1654) #8
  br i1 %1669, label %1670, label %2628

1670:                                             ; preds = %1664
  %1671 = load i16*, i16** %1655, align 8
  br label %1672

1672:                                             ; preds = %1670, %1653
  %1673 = phi i16* [ %1671, %1670 ], [ %1656, %1653 ]
  %1674 = load i16, i16* %1673, align 2
  %1675 = icmp eq i16 %1674, 46
  br i1 %1675, label %1676, label %2628

1676:                                             ; preds = %1672
  %1677 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %1678 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1677, i64 0, i32 2
  %1679 = load i16*, i16** %1678, align 8
  %1680 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1677, i64 0, i32 3
  %1681 = load i16*, i16** %1680, align 8
  %1682 = icmp ult i16* %1679, %1681
  br i1 %1682, label %1683, label %1686, !prof !4

1683:                                             ; preds = %1676
  %1684 = load i16, i16* %1679, align 2
  %1685 = zext i16 %1684 to i32
  br label %1700

1686:                                             ; preds = %1676
  %1687 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1677, i64 0, i32 6
  %1688 = load i8, i8* %1687, align 8, !range !2
  %1689 = icmp eq i8 %1688, 0
  br i1 %1689, label %1690, label %1700

1690:                                             ; preds = %1686
  %1691 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1677 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %1692 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1691, align 8
  %1693 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1692, i64 5
  %1694 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1693, align 8
  %1695 = tail call zeroext i1 %1694(%"class.v8::internal::Utf16CharacterStream"* %1677) #8
  %1696 = load i16*, i16** %1678, align 8
  br i1 %1695, label %1697, label %1700

1697:                                             ; preds = %1690
  %1698 = load i16, i16* %1696, align 2
  %1699 = zext i16 %1698 to i32
  br label %1700

1700:                                             ; preds = %1697, %1690, %1686, %1683
  %1701 = phi i16* [ %1679, %1683 ], [ %1696, %1697 ], [ %1679, %1686 ], [ %1696, %1690 ]
  %1702 = phi i32 [ %1685, %1683 ], [ %1699, %1697 ], [ -1, %1686 ], [ -1, %1690 ]
  %1703 = getelementptr inbounds i16, i16* %1701, i64 1
  store i16* %1703, i16** %1678, align 8
  store i32 %1702, i32* %84, align 8
  %1704 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %1705 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1704, i64 0, i32 2
  %1706 = load i16*, i16** %1705, align 8
  %1707 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1704, i64 0, i32 3
  %1708 = load i16*, i16** %1707, align 8
  %1709 = icmp ult i16* %1706, %1708
  br i1 %1709, label %1710, label %1713, !prof !4

1710:                                             ; preds = %1700
  %1711 = load i16, i16* %1706, align 2
  %1712 = zext i16 %1711 to i32
  br label %1727

1713:                                             ; preds = %1700
  %1714 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1704, i64 0, i32 6
  %1715 = load i8, i8* %1714, align 8, !range !2
  %1716 = icmp eq i8 %1715, 0
  br i1 %1716, label %1717, label %1727

1717:                                             ; preds = %1713
  %1718 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1704 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %1719 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1718, align 8
  %1720 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1719, i64 5
  %1721 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1720, align 8
  %1722 = tail call zeroext i1 %1721(%"class.v8::internal::Utf16CharacterStream"* %1704) #8
  %1723 = load i16*, i16** %1705, align 8
  br i1 %1722, label %1724, label %1727

1724:                                             ; preds = %1717
  %1725 = load i16, i16* %1723, align 2
  %1726 = zext i16 %1725 to i32
  br label %1727

1727:                                             ; preds = %1724, %1717, %1713, %1710
  %1728 = phi i16* [ %1706, %1710 ], [ %1723, %1724 ], [ %1706, %1713 ], [ %1723, %1717 ]
  %1729 = phi i32 [ %1712, %1710 ], [ %1726, %1724 ], [ -1, %1713 ], [ -1, %1717 ]
  %1730 = getelementptr inbounds i16, i16* %1728, i64 1
  store i16* %1730, i16** %1705, align 8
  store i32 %1729, i32* %84, align 8
  br label %2628

1731:                                             ; preds = %105
  %1732 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %1733 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1732, i64 0, i32 2
  %1734 = load i16*, i16** %1733, align 8
  %1735 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1732, i64 0, i32 3
  %1736 = load i16*, i16** %1735, align 8
  %1737 = icmp ult i16* %1734, %1736
  br i1 %1737, label %1738, label %1741, !prof !4

1738:                                             ; preds = %1731
  %1739 = load i16, i16* %1734, align 2
  %1740 = zext i16 %1739 to i32
  br label %1755

1741:                                             ; preds = %1731
  %1742 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1732, i64 0, i32 6
  %1743 = load i8, i8* %1742, align 8, !range !2
  %1744 = icmp eq i8 %1743, 0
  br i1 %1744, label %1745, label %1755

1745:                                             ; preds = %1741
  %1746 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1732 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %1747 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1746, align 8
  %1748 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1747, i64 5
  %1749 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1748, align 8
  %1750 = tail call zeroext i1 %1749(%"class.v8::internal::Utf16CharacterStream"* %1732) #8
  %1751 = load i16*, i16** %1733, align 8
  br i1 %1750, label %1752, label %1755

1752:                                             ; preds = %1745
  %1753 = load i16, i16* %1751, align 2
  %1754 = zext i16 %1753 to i32
  br label %1755

1755:                                             ; preds = %1752, %1745, %1741, %1738
  %1756 = phi i16* [ %1734, %1738 ], [ %1751, %1752 ], [ %1734, %1741 ], [ %1751, %1745 ]
  %1757 = phi i32 [ %1740, %1738 ], [ %1754, %1752 ], [ -1, %1741 ], [ -1, %1745 ]
  %1758 = getelementptr inbounds i16, i16* %1756, i64 1
  store i16* %1758, i16** %1733, align 8
  store i32 %1757, i32* %84, align 8
  %1759 = tail call zeroext i8 @_ZN2v88internal7Scanner16ScanTemplateSpanEv(%"class.v8::internal::Scanner"* %0) #8
  br label %2628

1760:                                             ; preds = %105
  %1761 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %1762 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1761, i64 0, i32 4
  %1763 = load i64, i64* %1762, align 8
  %1764 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1761, i64 0, i32 2
  %1765 = bitcast i16** %1764 to i64*
  %1766 = load i64, i64* %1765, align 8
  %1767 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1761, i64 0, i32 1
  %1768 = bitcast i16** %1767 to i64*
  %1769 = load i64, i64* %1768, align 8
  %1770 = sub i64 %1766, %1769
  %1771 = lshr exact i64 %1770, 1
  %1772 = add i64 %1771, %1763
  %1773 = trunc i64 %1772 to i32
  %1774 = icmp eq i32 %1773, 1
  %1775 = inttoptr i64 %1766 to i16*
  br i1 %1774, label %1776, label %1834

1776:                                             ; preds = %1760
  %1777 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1761, i64 0, i32 3
  %1778 = load i16*, i16** %1777, align 8
  %1779 = icmp ugt i16* %1778, %1775
  br i1 %1779, label %1792, label %1780, !prof !4

1780:                                             ; preds = %1776
  %1781 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1761, i64 0, i32 6
  %1782 = load i8, i8* %1781, align 8, !range !2
  %1783 = icmp eq i8 %1782, 0
  br i1 %1783, label %1784, label %1834

1784:                                             ; preds = %1780
  %1785 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1761 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %1786 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1785, align 8
  %1787 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1786, i64 5
  %1788 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1787, align 8
  %1789 = tail call zeroext i1 %1788(%"class.v8::internal::Utf16CharacterStream"* %1761) #8
  br i1 %1789, label %1790, label %1834

1790:                                             ; preds = %1784
  %1791 = load i16*, i16** %1764, align 8
  br label %1792

1792:                                             ; preds = %1790, %1776
  %1793 = phi i16* [ %1791, %1790 ], [ %1775, %1776 ]
  %1794 = load i16, i16* %1793, align 2
  %1795 = icmp eq i16 %1794, 33
  br i1 %1795, label %1796, label %1834

1796:                                             ; preds = %1792
  %1797 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %1798 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1797, i64 0, i32 2
  %1799 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1797, i64 0, i32 3
  %1800 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1797, i64 0, i32 6
  %1801 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1797 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  br label %1802

1802:                                             ; preds = %1818, %1796
  %1803 = load i16*, i16** %1798, align 8
  %1804 = load i16*, i16** %1799, align 8
  %1805 = icmp eq i16* %1803, %1804
  br i1 %1805, label %1812, label %1806

1806:                                             ; preds = %1802, %1809
  %1807 = phi i16* [ %1810, %1809 ], [ %1803, %1802 ]
  %1808 = load i16, i16* %1807, align 2
  switch i16 %1808, label %1809 [
    i16 8232, label %1812
    i16 13, label %1812
    i16 10, label %1812
    i16 8233, label %1812
  ]

1809:                                             ; preds = %1806
  %1810 = getelementptr inbounds i16, i16* %1807, i64 1
  %1811 = icmp eq i16* %1810, %1804
  br i1 %1811, label %1815, label %1806

1812:                                             ; preds = %1806, %1806, %1806, %1806, %1802
  %1813 = phi i16* [ %1803, %1802 ], [ %1807, %1806 ], [ %1807, %1806 ], [ %1807, %1806 ], [ %1807, %1806 ]
  %1814 = icmp eq i16* %1813, %1804
  br i1 %1814, label %1815, label %1828

1815:                                             ; preds = %1809, %1812
  store i16* %1804, i16** %1798, align 8
  %1816 = load i8, i8* %1800, align 8, !range !2
  %1817 = icmp eq i8 %1816, 0
  br i1 %1817, label %1818, label %1825

1818:                                             ; preds = %1815
  %1819 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1801, align 8
  %1820 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1819, i64 5
  %1821 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1820, align 8
  %1822 = tail call zeroext i1 %1821(%"class.v8::internal::Utf16CharacterStream"* %1797) #8
  br i1 %1822, label %1802, label %1823

1823:                                             ; preds = %1818
  %1824 = load i16*, i16** %1798, align 8
  br label %1825

1825:                                             ; preds = %1815, %1823
  %1826 = phi i16* [ %1824, %1823 ], [ %1804, %1815 ]
  %1827 = getelementptr inbounds i16, i16* %1826, i64 1
  store i16* %1827, i16** %1798, align 8
  br label %1832

1828:                                             ; preds = %1812
  %1829 = getelementptr inbounds i16, i16* %1813, i64 1
  store i16* %1829, i16** %1798, align 8
  %1830 = load i16, i16* %1813, align 2
  %1831 = zext i16 %1830 to i32
  br label %1832

1832:                                             ; preds = %1828, %1825
  %1833 = phi i32 [ %1831, %1828 ], [ -1, %1825 ]
  store i32 %1833, i32* %84, align 8
  br label %2626

1834:                                             ; preds = %1792, %1784, %1780, %1760
  %1835 = tail call zeroext i8 @_ZN2v88internal7Scanner15ScanPrivateNameEv(%"class.v8::internal::Scanner"* %0) #8
  br label %2628

1836:                                             ; preds = %105
  %1837 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %1838 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1837, i64 0, i32 4
  %1839 = load i64, i64* %1838, align 8
  %1840 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1837, i64 0, i32 2
  %1841 = bitcast i16** %1840 to i64*
  %1842 = load i64, i64* %1841, align 8
  %1843 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1837, i64 0, i32 1
  %1844 = bitcast i16** %1843 to i64*
  %1845 = load i64, i64* %1844, align 8
  %1846 = sub i64 %1842, %1845
  %1847 = lshr exact i64 %1846, 1
  %1848 = add i64 %1847, %1839
  %1849 = trunc i64 %1848 to i32
  br label %1850

1850:                                             ; preds = %1896, %1836
  %1851 = phi i32 [ %1898, %1896 ], [ %103, %1836 ]
  %1852 = icmp ult i32 %1851, 256
  br i1 %1852, label %1858, label %1853

1853:                                             ; preds = %1850
  %1854 = tail call zeroext i1 @_ZN2v88internal16IsWhiteSpaceSlowEj(i32 %1851) #8
  %1855 = and i32 %1851, -2
  %1856 = icmp eq i32 %1855, 8232
  %1857 = or i1 %1856, %1854
  br i1 %1857, label %1864, label %1900

1858:                                             ; preds = %1850
  %1859 = zext i32 %1851 to i64
  %1860 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN2v88internalL17kOneByteCharFlagsE, i64 0, i64 %1859
  %1861 = load i8, i8* %1860, align 1
  %1862 = and i8 %1861, 8
  %1863 = icmp eq i8 %1862, 0
  br i1 %1863, label %1900, label %1864

1864:                                             ; preds = %1858, %1853
  %1865 = load %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"** %3, align 8
  %1866 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %1865, i64 0, i32 8
  %1867 = load i8, i8* %1866, align 4, !range !2
  %1868 = icmp eq i8 %1867, 0
  br i1 %1868, label %1869, label %1872

1869:                                             ; preds = %1864
  %1870 = load i32, i32* %84, align 8
  switch i32 %1870, label %1872 [
    i32 8232, label %1871
    i32 13, label %1871
    i32 10, label %1871
    i32 8233, label %1871
  ]

1871:                                             ; preds = %1869, %1869, %1869, %1869
  store i8 1, i8* %1866, align 4
  br label %1872

1872:                                             ; preds = %1871, %1869, %1864
  %1873 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %1874 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1873, i64 0, i32 2
  %1875 = load i16*, i16** %1874, align 8
  %1876 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1873, i64 0, i32 3
  %1877 = load i16*, i16** %1876, align 8
  %1878 = icmp ult i16* %1875, %1877
  br i1 %1878, label %1879, label %1882, !prof !4

1879:                                             ; preds = %1872
  %1880 = load i16, i16* %1875, align 2
  %1881 = zext i16 %1880 to i32
  br label %1896

1882:                                             ; preds = %1872
  %1883 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1873, i64 0, i32 6
  %1884 = load i8, i8* %1883, align 8, !range !2
  %1885 = icmp eq i8 %1884, 0
  br i1 %1885, label %1886, label %1896

1886:                                             ; preds = %1882
  %1887 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1873 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %1888 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1887, align 8
  %1889 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1888, i64 5
  %1890 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %1889, align 8
  %1891 = tail call zeroext i1 %1890(%"class.v8::internal::Utf16CharacterStream"* %1873) #8
  %1892 = load i16*, i16** %1874, align 8
  br i1 %1891, label %1893, label %1896

1893:                                             ; preds = %1886
  %1894 = load i16, i16* %1892, align 2
  %1895 = zext i16 %1894 to i32
  br label %1896

1896:                                             ; preds = %1893, %1886, %1882, %1879
  %1897 = phi i16* [ %1875, %1879 ], [ %1892, %1893 ], [ %1875, %1882 ], [ %1892, %1886 ]
  %1898 = phi i32 [ %1881, %1879 ], [ %1895, %1893 ], [ -1, %1882 ], [ -1, %1886 ]
  %1899 = getelementptr inbounds i16, i16* %1897, i64 1
  store i16* %1899, i16** %1874, align 8
  store i32 %1898, i32* %84, align 8
  br label %1850

1900:                                             ; preds = %1858, %1853
  %1901 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %1902 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1901, i64 0, i32 4
  %1903 = load i64, i64* %1902, align 8
  %1904 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1901, i64 0, i32 2
  %1905 = bitcast i16** %1904 to i64*
  %1906 = load i64, i64* %1905, align 8
  %1907 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1901, i64 0, i32 1
  %1908 = bitcast i16** %1907 to i64*
  %1909 = load i64, i64* %1908, align 8
  %1910 = sub i64 %1906, %1909
  %1911 = lshr exact i64 %1910, 1
  %1912 = add i64 %1911, %1903
  %1913 = trunc i64 %1912 to i32
  %1914 = icmp eq i32 %1913, %1849
  br i1 %1914, label %2628, label %2626

1915:                                             ; preds = %105
  %1916 = tail call zeroext i8 @_ZN2v88internal7Scanner10ScanNumberEb(%"class.v8::internal::Scanner"* %0, i1 zeroext false) #8
  br label %2628

1917:                                             ; preds = %105
  %1918 = load %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"** %3, align 8
  %1919 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %1918, i64 0, i32 1, i32 1
  store i32 0, i32* %1919, align 8
  %1920 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %1918, i64 0, i32 1, i32 2
  store i8 1, i8* %1920, align 4
  %1921 = load i32, i32* %84, align 8
  %1922 = icmp ult i32 %1921, 128
  br i1 %1922, label %1923, label %2177, !prof !4

1923:                                             ; preds = %1917
  %1924 = icmp eq i32 %1921, 92
  br i1 %1924, label %2072, label %1925, !prof !3

1925:                                             ; preds = %1923
  %1926 = zext i32 %1921 to i64
  %1927 = getelementptr inbounds [128 x i8], [128 x i8]* @_ZN2v88internalL20character_scan_flagsE, i64 0, i64 %1926
  %1928 = load i8, i8* %1927, align 1
  %1929 = lshr i8 %1928, 1
  %1930 = trunc i32 %1921 to i8
  %1931 = load %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"** %3, align 8
  %1932 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %1931, i64 0, i32 1
  %1933 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %1931, i64 0, i32 1, i32 1
  %1934 = load i32, i32* %1933, align 8
  %1935 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %1931, i64 0, i32 1, i32 0, i32 1
  %1936 = load i64, i64* %1935, align 8
  %1937 = trunc i64 %1936 to i32
  %1938 = icmp slt i32 %1934, %1937
  br i1 %1938, label %1941, label %1939

1939:                                             ; preds = %1925
  tail call void @_ZN2v88internal13LiteralBuffer12ExpandBufferEv(%"class.v8::internal::LiteralBuffer"* %1932) #8
  %1940 = load i32, i32* %1933, align 8
  br label %1941

1941:                                             ; preds = %1939, %1925
  %1942 = phi i32 [ %1934, %1925 ], [ %1940, %1939 ]
  %1943 = sext i32 %1942 to i64
  %1944 = getelementptr inbounds %"class.v8::internal::LiteralBuffer", %"class.v8::internal::LiteralBuffer"* %1932, i64 0, i32 0, i32 0
  %1945 = load i8*, i8** %1944, align 8
  %1946 = getelementptr inbounds i8, i8* %1945, i64 %1943
  store i8 %1930, i8* %1946, align 1
  %1947 = load i32, i32* %1933, align 8
  %1948 = add nsw i32 %1947, 1
  store i32 %1948, i32* %1933, align 8
  %1949 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %1950 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1949, i64 0, i32 2
  %1951 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1949, i64 0, i32 3
  %1952 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %1949, i64 0, i32 6
  %1953 = bitcast %"class.v8::internal::Utf16CharacterStream"* %1949 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  br label %1954

1954:                                             ; preds = %2003, %1941
  %1955 = phi i8 [ %1929, %1941 ], [ %1996, %2003 ]
  %1956 = load i16*, i16** %1950, align 8
  %1957 = load i16*, i16** %1951, align 8
  %1958 = icmp eq i16* %1956, %1957
  br i1 %1958, label %1995, label %1959

1959:                                             ; preds = %1954, %1985
  %1960 = phi i8 [ %1970, %1985 ], [ %1955, %1954 ]
  %1961 = phi i16* [ %1993, %1985 ], [ %1956, %1954 ]
  %1962 = load i16, i16* %1961, align 2
  %1963 = icmp ugt i16 %1962, 127
  br i1 %1963, label %1964, label %1966, !prof !3

1964:                                             ; preds = %1959
  %1965 = or i8 %1960, 16
  br label %1995

1966:                                             ; preds = %1959
  %1967 = zext i16 %1962 to i64
  %1968 = getelementptr inbounds [128 x i8], [128 x i8]* @_ZN2v88internalL20character_scan_flagsE, i64 0, i64 %1967
  %1969 = load i8, i8* %1968, align 1
  %1970 = or i8 %1969, %1960
  %1971 = and i8 %1969, 1
  %1972 = icmp eq i8 %1971, 0
  br i1 %1972, label %1973, label %1995

1973:                                             ; preds = %1966
  %1974 = trunc i16 %1962 to i8
  %1975 = load %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"** %3, align 8
  %1976 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %1975, i64 0, i32 1
  %1977 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %1975, i64 0, i32 1, i32 1
  %1978 = load i32, i32* %1977, align 8
  %1979 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %1975, i64 0, i32 1, i32 0, i32 1
  %1980 = load i64, i64* %1979, align 8
  %1981 = trunc i64 %1980 to i32
  %1982 = icmp slt i32 %1978, %1981
  br i1 %1982, label %1985, label %1983

1983:                                             ; preds = %1973
  tail call void @_ZN2v88internal13LiteralBuffer12ExpandBufferEv(%"class.v8::internal::LiteralBuffer"* %1976) #8
  %1984 = load i32, i32* %1977, align 8
  br label %1985

1985:                                             ; preds = %1983, %1973
  %1986 = phi i32 [ %1978, %1973 ], [ %1984, %1983 ]
  %1987 = sext i32 %1986 to i64
  %1988 = getelementptr inbounds %"class.v8::internal::LiteralBuffer", %"class.v8::internal::LiteralBuffer"* %1976, i64 0, i32 0, i32 0
  %1989 = load i8*, i8** %1988, align 8
  %1990 = getelementptr inbounds i8, i8* %1989, i64 %1987
  store i8 %1974, i8* %1990, align 1
  %1991 = load i32, i32* %1977, align 8
  %1992 = add nsw i32 %1991, 1
  store i32 %1992, i32* %1977, align 8
  %1993 = getelementptr inbounds i16, i16* %1961, i64 1
  %1994 = icmp eq i16* %1993, %1957
  br i1 %1994, label %1995, label %1959

1995:                                             ; preds = %1985, %1966, %1964, %1954
  %1996 = phi i8 [ %1955, %1954 ], [ %1965, %1964 ], [ %1970, %1966 ], [ %1970, %1985 ]
  %1997 = phi i16* [ %1956, %1954 ], [ %1961, %1964 ], [ %1957, %1985 ], [ %1961, %1966 ]
  %1998 = load i16*, i16** %1951, align 8
  %1999 = icmp eq i16* %1997, %1998
  br i1 %1999, label %2000, label %2013

2000:                                             ; preds = %1995
  store i16* %1997, i16** %1950, align 8
  %2001 = load i8, i8* %1952, align 8, !range !2
  %2002 = icmp eq i8 %2001, 0
  br i1 %2002, label %2003, label %2010

2003:                                             ; preds = %2000
  %2004 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %1953, align 8
  %2005 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %2004, i64 5
  %2006 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %2005, align 8
  %2007 = tail call zeroext i1 %2006(%"class.v8::internal::Utf16CharacterStream"* %1949) #8
  br i1 %2007, label %1954, label %2008

2008:                                             ; preds = %2003
  %2009 = load i16*, i16** %1950, align 8
  br label %2010

2010:                                             ; preds = %2000, %2008
  %2011 = phi i16* [ %2009, %2008 ], [ %1997, %2000 ]
  %2012 = getelementptr inbounds i16, i16* %2011, i64 1
  store i16* %2012, i16** %1950, align 8
  br label %2017

2013:                                             ; preds = %1995
  %2014 = getelementptr inbounds i16, i16* %1997, i64 1
  store i16* %2014, i16** %1950, align 8
  %2015 = load i16, i16* %1997, align 2
  %2016 = zext i16 %2015 to i32
  br label %2017

2017:                                             ; preds = %2013, %2010
  %2018 = phi i32 [ %2016, %2013 ], [ -1, %2010 ]
  store i32 %2018, i32* %84, align 8
  %2019 = and i8 %1996, 16
  %2020 = icmp ne i8 %2019, 0
  %2021 = and i8 %1996, 2
  %2022 = icmp eq i8 %2021, 0
  %2023 = xor i1 %2022, true
  %2024 = or i1 %2020, %2023
  br i1 %2024, label %2069, label %2025, !prof !5

2025:                                             ; preds = %2017
  %2026 = load %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"** %3, align 8
  %2027 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %2026, i64 0, i32 1, i32 0, i32 0
  %2028 = load i8*, i8** %2027, align 8
  %2029 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %2026, i64 0, i32 1, i32 1
  %2030 = load i32, i32* %2029, align 8
  %2031 = add i32 %2030, -2
  %2032 = icmp ult i32 %2031, 9
  br i1 %2032, label %2033, label %2628

2033:                                             ; preds = %2025
  %2034 = getelementptr inbounds i8, i8* %2028, i64 1
  %2035 = load i8, i8* %2034, align 1
  %2036 = zext i8 %2035 to i64
  %2037 = getelementptr inbounds [128 x i8], [128 x i8]* @_ZZN2v88internal18PerfectKeywordHash4HashEPKciE11asso_values, i64 0, i64 %2036
  %2038 = load i8, i8* %2037, align 1
  %2039 = zext i8 %2038 to i32
  %2040 = add nuw nsw i32 %2030, %2039
  %2041 = load i8, i8* %2028, align 1
  %2042 = zext i8 %2041 to i64
  %2043 = getelementptr inbounds [128 x i8], [128 x i8]* @_ZZN2v88internal18PerfectKeywordHash4HashEPKciE11asso_values, i64 0, i64 %2042
  %2044 = load i8, i8* %2043, align 1
  %2045 = zext i8 %2044 to i32
  %2046 = add nuw nsw i32 %2040, %2045
  %2047 = and i32 %2046, 63
  %2048 = zext i32 %2047 to i64
  %2049 = getelementptr inbounds [64 x i8], [64 x i8]* bitcast (<{ [56 x i8], [8 x i8] }>* @_ZN2v88internalL26kPerfectKeywordLengthTableE to [64 x i8]*), i64 0, i64 %2048
  %2050 = load i8, i8* %2049, align 1
  %2051 = zext i8 %2050 to i32
  %2052 = icmp eq i32 %2030, %2051
  br i1 %2052, label %2053, label %2628

2053:                                             ; preds = %2033
  %2054 = getelementptr inbounds [64 x %"struct.v8::internal::PerfectKeywordHashTableEntry"], [64 x %"struct.v8::internal::PerfectKeywordHashTableEntry"]* @_ZN2v88internalL24kPerfectKeywordHashTableE, i64 0, i64 %2048, i32 0
  %2055 = load i8*, i8** %2054, align 16
  br label %2056

2056:                                             ; preds = %2061, %2053
  %2057 = phi i8* [ %2028, %2053 ], [ %2063, %2061 ]
  %2058 = phi i8* [ %2055, %2053 ], [ %2062, %2061 ]
  %2059 = load i8, i8* %2058, align 1
  %2060 = icmp eq i8 %2059, 0
  br i1 %2060, label %2066, label %2061

2061:                                             ; preds = %2056
  %2062 = getelementptr inbounds i8, i8* %2058, i64 1
  %2063 = getelementptr inbounds i8, i8* %2057, i64 1
  %2064 = load i8, i8* %2057, align 1
  %2065 = icmp eq i8 %2059, %2064
  br i1 %2065, label %2056, label %2628

2066:                                             ; preds = %2056
  %2067 = getelementptr inbounds [64 x %"struct.v8::internal::PerfectKeywordHashTableEntry"], [64 x %"struct.v8::internal::PerfectKeywordHashTableEntry"]* @_ZN2v88internalL24kPerfectKeywordHashTableE, i64 0, i64 %2048, i32 1
  %2068 = load i8, i8* %2067, align 8
  br label %2628

2069:                                             ; preds = %2017
  %2070 = xor i1 %2020, true
  %2071 = or i1 %2022, %2070
  br i1 %2020, label %2177, label %2628

2072:                                             ; preds = %1923
  %2073 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %2074 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2073, i64 0, i32 2
  %2075 = load i16*, i16** %2074, align 8
  %2076 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2073, i64 0, i32 3
  %2077 = load i16*, i16** %2076, align 8
  %2078 = icmp ult i16* %2075, %2077
  br i1 %2078, label %2093, label %2079, !prof !4

2079:                                             ; preds = %2072
  %2080 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2073, i64 0, i32 6
  %2081 = load i8, i8* %2080, align 8, !range !2
  %2082 = icmp eq i8 %2081, 0
  br i1 %2082, label %2083, label %2090

2083:                                             ; preds = %2079
  %2084 = bitcast %"class.v8::internal::Utf16CharacterStream"* %2073 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %2085 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %2084, align 8
  %2086 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %2085, i64 5
  %2087 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %2086, align 8
  %2088 = tail call zeroext i1 %2087(%"class.v8::internal::Utf16CharacterStream"* %2073) #8
  %2089 = load i16*, i16** %2074, align 8
  br i1 %2088, label %2093, label %2090

2090:                                             ; preds = %2083, %2079
  %2091 = phi i16* [ %2089, %2083 ], [ %2075, %2079 ]
  %2092 = getelementptr inbounds i16, i16* %2091, i64 1
  store i16* %2092, i16** %2074, align 8
  store i32 -1, i32* %84, align 8
  br label %2137

2093:                                             ; preds = %2083, %2072
  %2094 = phi i16* [ %2075, %2072 ], [ %2089, %2083 ]
  %2095 = load i16, i16* %2094, align 2
  %2096 = zext i16 %2095 to i32
  %2097 = getelementptr inbounds i16, i16* %2094, i64 1
  store i16* %2097, i16** %2074, align 8
  store i32 %2096, i32* %84, align 8
  %2098 = icmp eq i16 %2095, 117
  br i1 %2098, label %2099, label %2137

2099:                                             ; preds = %2093
  %2100 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %2101 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2100, i64 0, i32 2
  %2102 = load i16*, i16** %2101, align 8
  %2103 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2100, i64 0, i32 3
  %2104 = load i16*, i16** %2103, align 8
  %2105 = icmp ult i16* %2102, %2104
  br i1 %2105, label %2106, label %2109, !prof !4

2106:                                             ; preds = %2099
  %2107 = load i16, i16* %2102, align 2
  %2108 = zext i16 %2107 to i32
  br label %2123

2109:                                             ; preds = %2099
  %2110 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2100, i64 0, i32 6
  %2111 = load i8, i8* %2110, align 8, !range !2
  %2112 = icmp eq i8 %2111, 0
  br i1 %2112, label %2113, label %2123

2113:                                             ; preds = %2109
  %2114 = bitcast %"class.v8::internal::Utf16CharacterStream"* %2100 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %2115 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %2114, align 8
  %2116 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %2115, i64 5
  %2117 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %2116, align 8
  %2118 = tail call zeroext i1 %2117(%"class.v8::internal::Utf16CharacterStream"* %2100) #8
  %2119 = load i16*, i16** %2101, align 8
  br i1 %2118, label %2120, label %2123

2120:                                             ; preds = %2113
  %2121 = load i16, i16* %2119, align 2
  %2122 = zext i16 %2121 to i32
  br label %2123

2123:                                             ; preds = %2120, %2113, %2109, %2106
  %2124 = phi i16* [ %2102, %2106 ], [ %2119, %2120 ], [ %2102, %2109 ], [ %2119, %2113 ]
  %2125 = phi i32 [ %2108, %2106 ], [ %2122, %2120 ], [ -1, %2109 ], [ -1, %2113 ]
  %2126 = getelementptr inbounds i16, i16* %2124, i64 1
  store i16* %2126, i16** %2101, align 8
  store i32 %2125, i32* %84, align 8
  %2127 = tail call i32 @_ZN2v88internal7Scanner17ScanUnicodeEscapeILb0EEEjv(%"class.v8::internal::Scanner"* %0) #8
  %2128 = icmp eq i32 %2127, 92
  br i1 %2128, label %2628, label %2129

2129:                                             ; preds = %2123
  %2130 = icmp ult i32 %2127, 256
  br i1 %2130, label %2131, label %2137

2131:                                             ; preds = %2129
  %2132 = zext i32 %2127 to i64
  %2133 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN2v88internalL17kOneByteCharFlagsE, i64 0, i64 %2132
  %2134 = load i8, i8* %2133, align 1
  %2135 = and i8 %2134, 1
  %2136 = icmp eq i8 %2135, 0
  br i1 %2136, label %2628, label %2140

2137:                                             ; preds = %2129, %2093, %2090
  %2138 = phi i32 [ %2127, %2129 ], [ -1, %2093 ], [ -1, %2090 ]
  %2139 = tail call zeroext i1 @_ZN2v88internal21IsIdentifierStartSlowEj(i32 %2138) #8
  br i1 %2139, label %2140, label %2628

2140:                                             ; preds = %2137, %2131
  %2141 = phi i32 [ %2127, %2131 ], [ %2138, %2137 ]
  %2142 = phi i1 [ true, %2131 ], [ false, %2137 ]
  %2143 = load %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"** %3, align 8
  %2144 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %2143, i64 0, i32 1
  %2145 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %2143, i64 0, i32 1, i32 2
  %2146 = load i8, i8* %2145, align 4, !range !2
  %2147 = icmp eq i8 %2146, 0
  br i1 %2147, label %2168, label %2148

2148:                                             ; preds = %2140
  br i1 %2142, label %2149, label %2167

2149:                                             ; preds = %2148
  %2150 = trunc i32 %2141 to i8
  %2151 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %2143, i64 0, i32 1, i32 1
  %2152 = load i32, i32* %2151, align 8
  %2153 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %2143, i64 0, i32 1, i32 0, i32 1
  %2154 = load i64, i64* %2153, align 8
  %2155 = trunc i64 %2154 to i32
  %2156 = icmp slt i32 %2152, %2155
  br i1 %2156, label %2159, label %2157

2157:                                             ; preds = %2149
  tail call void @_ZN2v88internal13LiteralBuffer12ExpandBufferEv(%"class.v8::internal::LiteralBuffer"* %2144) #8
  %2158 = load i32, i32* %2151, align 8
  br label %2159

2159:                                             ; preds = %2157, %2149
  %2160 = phi i32 [ %2152, %2149 ], [ %2158, %2157 ]
  %2161 = sext i32 %2160 to i64
  %2162 = getelementptr inbounds %"class.v8::internal::LiteralBuffer", %"class.v8::internal::LiteralBuffer"* %2144, i64 0, i32 0, i32 0
  %2163 = load i8*, i8** %2162, align 8
  %2164 = getelementptr inbounds i8, i8* %2163, i64 %2161
  store i8 %2150, i8* %2164, align 1
  %2165 = load i32, i32* %2151, align 8
  %2166 = add nsw i32 %2165, 1
  store i32 %2166, i32* %2151, align 8
  br label %2169

2167:                                             ; preds = %2148
  tail call void @_ZN2v88internal13LiteralBuffer16ConvertToTwoByteEv(%"class.v8::internal::LiteralBuffer"* %2144) #8
  br label %2168

2168:                                             ; preds = %2167, %2140
  tail call void @_ZN2v88internal13LiteralBuffer14AddTwoByteCharEj(%"class.v8::internal::LiteralBuffer"* %2144, i32 %2141) #8
  br label %2169

2169:                                             ; preds = %2168, %2159
  %2170 = icmp ult i32 %2141, 128
  br i1 %2170, label %2171, label %2177

2171:                                             ; preds = %2169
  %2172 = zext i32 %2141 to i64
  %2173 = getelementptr inbounds [128 x i8], [128 x i8]* @_ZN2v88internalL20character_scan_flagsE, i64 0, i64 %2172
  %2174 = load i8, i8* %2173, align 1
  %2175 = and i8 %2174, 2
  %2176 = icmp eq i8 %2175, 0
  br label %2177

2177:                                             ; preds = %2171, %2169, %2069, %1917
  %2178 = phi i1 [ %2071, %2069 ], [ true, %1917 ], [ false, %2169 ], [ %2176, %2171 ]
  %2179 = phi i1 [ false, %2069 ], [ false, %1917 ], [ true, %2169 ], [ true, %2171 ]
  %2180 = tail call zeroext i8 @_ZN2v88internal7Scanner32ScanIdentifierOrKeywordInnerSlowEbb(%"class.v8::internal::Scanner"* %0, i1 zeroext %2179, i1 zeroext %2178) #8
  br label %2628

2181:                                             ; preds = %105
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0)) #9
  unreachable

2182:                                             ; preds = %86
  %2183 = icmp ult i32 %103, 256
  br i1 %2183, label %2184, label %2190

2184:                                             ; preds = %2182
  %2185 = zext i32 %103 to i64
  %2186 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN2v88internalL17kOneByteCharFlagsE, i64 0, i64 %2185
  %2187 = load i8, i8* %2186, align 1
  %2188 = and i8 %2187, 1
  %2189 = icmp eq i8 %2188, 0
  br i1 %2189, label %2194, label %2270

2190:                                             ; preds = %2182
  %2191 = tail call zeroext i1 @_ZN2v88internal21IsIdentifierStartSlowEj(i32 %103) #8
  br i1 %2191, label %2270, label %2192

2192:                                             ; preds = %2190
  %2193 = load i32, i32* %84, align 8
  br label %2194

2194:                                             ; preds = %2192, %2184
  %2195 = phi i32 [ %2193, %2192 ], [ %103, %2184 ]
  %2196 = and i32 %2195, 64512
  %2197 = icmp eq i32 %2196, 55296
  br i1 %2197, label %2198, label %2536

2198:                                             ; preds = %2194
  %2199 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %2200 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2199, i64 0, i32 2
  %2201 = load i16*, i16** %2200, align 8
  %2202 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2199, i64 0, i32 3
  %2203 = load i16*, i16** %2202, align 8
  %2204 = icmp ult i16* %2201, %2203
  br i1 %2204, label %2219, label %2205, !prof !4

2205:                                             ; preds = %2198
  %2206 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2199, i64 0, i32 6
  %2207 = load i8, i8* %2206, align 8, !range !2
  %2208 = icmp eq i8 %2207, 0
  br i1 %2208, label %2209, label %2216

2209:                                             ; preds = %2205
  %2210 = bitcast %"class.v8::internal::Utf16CharacterStream"* %2199 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %2211 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %2210, align 8
  %2212 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %2211, i64 5
  %2213 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %2212, align 8
  %2214 = tail call zeroext i1 %2213(%"class.v8::internal::Utf16CharacterStream"* %2199) #8
  %2215 = load i16*, i16** %2200, align 8
  br i1 %2214, label %2219, label %2216

2216:                                             ; preds = %2209, %2205
  %2217 = phi i16* [ %2215, %2209 ], [ %2201, %2205 ]
  %2218 = getelementptr inbounds i16, i16* %2217, i64 1
  store i16* %2218, i16** %2200, align 8
  br label %2226

2219:                                             ; preds = %2209, %2198
  %2220 = phi i16* [ %2201, %2198 ], [ %2215, %2209 ]
  %2221 = load i16, i16* %2220, align 2
  %2222 = zext i16 %2221 to i32
  %2223 = getelementptr inbounds i16, i16* %2220, i64 1
  store i16* %2223, i16** %2200, align 8
  %2224 = and i32 %2222, 64512
  %2225 = icmp eq i32 %2224, 56320
  br i1 %2225, label %2254, label %2226

2226:                                             ; preds = %2219, %2216
  %2227 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %2228 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2227, i64 0, i32 2
  %2229 = load i16*, i16** %2228, align 8
  %2230 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2227, i64 0, i32 1
  %2231 = load i16*, i16** %2230, align 8
  %2232 = icmp ugt i16* %2229, %2231
  %2233 = ptrtoint i16* %2231 to i64
  br i1 %2232, label %2234, label %2236, !prof !4

2234:                                             ; preds = %2226
  %2235 = getelementptr inbounds i16, i16* %2229, i64 -1
  store i16* %2235, i16** %2228, align 8
  br label %2534

2236:                                             ; preds = %2226
  %2237 = ptrtoint i16* %2229 to i64
  %2238 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2227, i64 0, i32 4
  %2239 = load i64, i64* %2238, align 8
  %2240 = bitcast i16** %2228 to i64*
  %2241 = sub i64 %2237, %2233
  %2242 = ashr exact i64 %2241, 1
  %2243 = add nsw i64 %2242, -1
  %2244 = add i64 %2243, %2239
  store i64 %2244, i64* %2238, align 8
  store i64 %2233, i64* %2240, align 8
  %2245 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2227, i64 0, i32 6
  %2246 = load i8, i8* %2245, align 8, !range !2
  %2247 = icmp eq i8 %2246, 0
  br i1 %2247, label %2248, label %2534

2248:                                             ; preds = %2236
  %2249 = bitcast %"class.v8::internal::Utf16CharacterStream"* %2227 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %2250 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %2249, align 8
  %2251 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %2250, i64 5
  %2252 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %2251, align 8
  %2253 = tail call zeroext i1 %2252(%"class.v8::internal::Utf16CharacterStream"* %2227) #8
  br label %2534

2254:                                             ; preds = %2219
  %2255 = load i32, i32* %84, align 8
  %2256 = shl i32 %2255, 10
  %2257 = and i32 %2256, 1047552
  %2258 = add nuw nsw i32 %2257, 65536
  %2259 = and i32 %2222, 1023
  %2260 = or i32 %2258, %2259
  store i32 %2260, i32* %84, align 8
  %2261 = icmp ult i32 %2260, 256
  br i1 %2261, label %2262, label %2268

2262:                                             ; preds = %2254
  %2263 = zext i32 %2260 to i64
  %2264 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN2v88internalL17kOneByteCharFlagsE, i64 0, i64 %2263
  %2265 = load i8, i8* %2264, align 1
  %2266 = and i8 %2265, 1
  %2267 = icmp eq i8 %2266, 0
  br i1 %2267, label %2534, label %2270

2268:                                             ; preds = %2254
  %2269 = tail call zeroext i1 @_ZN2v88internal21IsIdentifierStartSlowEj(i32 %2260) #8
  br i1 %2269, label %2270, label %2534

2270:                                             ; preds = %2268, %2262, %2190, %2184
  %2271 = load %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"** %3, align 8
  %2272 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %2271, i64 0, i32 1, i32 1
  store i32 0, i32* %2272, align 8
  %2273 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %2271, i64 0, i32 1, i32 2
  store i8 1, i8* %2273, align 4
  %2274 = load i32, i32* %84, align 8
  %2275 = icmp ult i32 %2274, 128
  br i1 %2275, label %2276, label %2530, !prof !4

2276:                                             ; preds = %2270
  %2277 = icmp eq i32 %2274, 92
  br i1 %2277, label %2425, label %2278, !prof !3

2278:                                             ; preds = %2276
  %2279 = zext i32 %2274 to i64
  %2280 = getelementptr inbounds [128 x i8], [128 x i8]* @_ZN2v88internalL20character_scan_flagsE, i64 0, i64 %2279
  %2281 = load i8, i8* %2280, align 1
  %2282 = lshr i8 %2281, 1
  %2283 = trunc i32 %2274 to i8
  %2284 = load %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"** %3, align 8
  %2285 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %2284, i64 0, i32 1
  %2286 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %2284, i64 0, i32 1, i32 1
  %2287 = load i32, i32* %2286, align 8
  %2288 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %2284, i64 0, i32 1, i32 0, i32 1
  %2289 = load i64, i64* %2288, align 8
  %2290 = trunc i64 %2289 to i32
  %2291 = icmp slt i32 %2287, %2290
  br i1 %2291, label %2294, label %2292

2292:                                             ; preds = %2278
  tail call void @_ZN2v88internal13LiteralBuffer12ExpandBufferEv(%"class.v8::internal::LiteralBuffer"* %2285) #8
  %2293 = load i32, i32* %2286, align 8
  br label %2294

2294:                                             ; preds = %2292, %2278
  %2295 = phi i32 [ %2287, %2278 ], [ %2293, %2292 ]
  %2296 = sext i32 %2295 to i64
  %2297 = getelementptr inbounds %"class.v8::internal::LiteralBuffer", %"class.v8::internal::LiteralBuffer"* %2285, i64 0, i32 0, i32 0
  %2298 = load i8*, i8** %2297, align 8
  %2299 = getelementptr inbounds i8, i8* %2298, i64 %2296
  store i8 %2283, i8* %2299, align 1
  %2300 = load i32, i32* %2286, align 8
  %2301 = add nsw i32 %2300, 1
  store i32 %2301, i32* %2286, align 8
  %2302 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %2303 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2302, i64 0, i32 2
  %2304 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2302, i64 0, i32 3
  %2305 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2302, i64 0, i32 6
  %2306 = bitcast %"class.v8::internal::Utf16CharacterStream"* %2302 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  br label %2307

2307:                                             ; preds = %2356, %2294
  %2308 = phi i8 [ %2282, %2294 ], [ %2349, %2356 ]
  %2309 = load i16*, i16** %2303, align 8
  %2310 = load i16*, i16** %2304, align 8
  %2311 = icmp eq i16* %2309, %2310
  br i1 %2311, label %2348, label %2312

2312:                                             ; preds = %2307, %2338
  %2313 = phi i8 [ %2323, %2338 ], [ %2308, %2307 ]
  %2314 = phi i16* [ %2346, %2338 ], [ %2309, %2307 ]
  %2315 = load i16, i16* %2314, align 2
  %2316 = icmp ugt i16 %2315, 127
  br i1 %2316, label %2317, label %2319, !prof !3

2317:                                             ; preds = %2312
  %2318 = or i8 %2313, 16
  br label %2348

2319:                                             ; preds = %2312
  %2320 = zext i16 %2315 to i64
  %2321 = getelementptr inbounds [128 x i8], [128 x i8]* @_ZN2v88internalL20character_scan_flagsE, i64 0, i64 %2320
  %2322 = load i8, i8* %2321, align 1
  %2323 = or i8 %2322, %2313
  %2324 = and i8 %2322, 1
  %2325 = icmp eq i8 %2324, 0
  br i1 %2325, label %2326, label %2348

2326:                                             ; preds = %2319
  %2327 = trunc i16 %2315 to i8
  %2328 = load %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"** %3, align 8
  %2329 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %2328, i64 0, i32 1
  %2330 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %2328, i64 0, i32 1, i32 1
  %2331 = load i32, i32* %2330, align 8
  %2332 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %2328, i64 0, i32 1, i32 0, i32 1
  %2333 = load i64, i64* %2332, align 8
  %2334 = trunc i64 %2333 to i32
  %2335 = icmp slt i32 %2331, %2334
  br i1 %2335, label %2338, label %2336

2336:                                             ; preds = %2326
  tail call void @_ZN2v88internal13LiteralBuffer12ExpandBufferEv(%"class.v8::internal::LiteralBuffer"* %2329) #8
  %2337 = load i32, i32* %2330, align 8
  br label %2338

2338:                                             ; preds = %2336, %2326
  %2339 = phi i32 [ %2331, %2326 ], [ %2337, %2336 ]
  %2340 = sext i32 %2339 to i64
  %2341 = getelementptr inbounds %"class.v8::internal::LiteralBuffer", %"class.v8::internal::LiteralBuffer"* %2329, i64 0, i32 0, i32 0
  %2342 = load i8*, i8** %2341, align 8
  %2343 = getelementptr inbounds i8, i8* %2342, i64 %2340
  store i8 %2327, i8* %2343, align 1
  %2344 = load i32, i32* %2330, align 8
  %2345 = add nsw i32 %2344, 1
  store i32 %2345, i32* %2330, align 8
  %2346 = getelementptr inbounds i16, i16* %2314, i64 1
  %2347 = icmp eq i16* %2346, %2310
  br i1 %2347, label %2348, label %2312

2348:                                             ; preds = %2338, %2319, %2317, %2307
  %2349 = phi i8 [ %2308, %2307 ], [ %2318, %2317 ], [ %2323, %2319 ], [ %2323, %2338 ]
  %2350 = phi i16* [ %2309, %2307 ], [ %2314, %2317 ], [ %2310, %2338 ], [ %2314, %2319 ]
  %2351 = load i16*, i16** %2304, align 8
  %2352 = icmp eq i16* %2350, %2351
  br i1 %2352, label %2353, label %2366

2353:                                             ; preds = %2348
  store i16* %2350, i16** %2303, align 8
  %2354 = load i8, i8* %2305, align 8, !range !2
  %2355 = icmp eq i8 %2354, 0
  br i1 %2355, label %2356, label %2363

2356:                                             ; preds = %2353
  %2357 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %2306, align 8
  %2358 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %2357, i64 5
  %2359 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %2358, align 8
  %2360 = tail call zeroext i1 %2359(%"class.v8::internal::Utf16CharacterStream"* %2302) #8
  br i1 %2360, label %2307, label %2361

2361:                                             ; preds = %2356
  %2362 = load i16*, i16** %2303, align 8
  br label %2363

2363:                                             ; preds = %2353, %2361
  %2364 = phi i16* [ %2362, %2361 ], [ %2350, %2353 ]
  %2365 = getelementptr inbounds i16, i16* %2364, i64 1
  store i16* %2365, i16** %2303, align 8
  br label %2370

2366:                                             ; preds = %2348
  %2367 = getelementptr inbounds i16, i16* %2350, i64 1
  store i16* %2367, i16** %2303, align 8
  %2368 = load i16, i16* %2350, align 2
  %2369 = zext i16 %2368 to i32
  br label %2370

2370:                                             ; preds = %2366, %2363
  %2371 = phi i32 [ %2369, %2366 ], [ -1, %2363 ]
  store i32 %2371, i32* %84, align 8
  %2372 = and i8 %2349, 16
  %2373 = icmp ne i8 %2372, 0
  %2374 = and i8 %2349, 2
  %2375 = icmp eq i8 %2374, 0
  %2376 = xor i1 %2375, true
  %2377 = or i1 %2373, %2376
  br i1 %2377, label %2422, label %2378, !prof !5

2378:                                             ; preds = %2370
  %2379 = load %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"** %3, align 8
  %2380 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %2379, i64 0, i32 1, i32 0, i32 0
  %2381 = load i8*, i8** %2380, align 8
  %2382 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %2379, i64 0, i32 1, i32 1
  %2383 = load i32, i32* %2382, align 8
  %2384 = add i32 %2383, -2
  %2385 = icmp ult i32 %2384, 9
  br i1 %2385, label %2386, label %2628

2386:                                             ; preds = %2378
  %2387 = getelementptr inbounds i8, i8* %2381, i64 1
  %2388 = load i8, i8* %2387, align 1
  %2389 = zext i8 %2388 to i64
  %2390 = getelementptr inbounds [128 x i8], [128 x i8]* @_ZZN2v88internal18PerfectKeywordHash4HashEPKciE11asso_values, i64 0, i64 %2389
  %2391 = load i8, i8* %2390, align 1
  %2392 = zext i8 %2391 to i32
  %2393 = add nuw nsw i32 %2383, %2392
  %2394 = load i8, i8* %2381, align 1
  %2395 = zext i8 %2394 to i64
  %2396 = getelementptr inbounds [128 x i8], [128 x i8]* @_ZZN2v88internal18PerfectKeywordHash4HashEPKciE11asso_values, i64 0, i64 %2395
  %2397 = load i8, i8* %2396, align 1
  %2398 = zext i8 %2397 to i32
  %2399 = add nuw nsw i32 %2393, %2398
  %2400 = and i32 %2399, 63
  %2401 = zext i32 %2400 to i64
  %2402 = getelementptr inbounds [64 x i8], [64 x i8]* bitcast (<{ [56 x i8], [8 x i8] }>* @_ZN2v88internalL26kPerfectKeywordLengthTableE to [64 x i8]*), i64 0, i64 %2401
  %2403 = load i8, i8* %2402, align 1
  %2404 = zext i8 %2403 to i32
  %2405 = icmp eq i32 %2383, %2404
  br i1 %2405, label %2406, label %2628

2406:                                             ; preds = %2386
  %2407 = getelementptr inbounds [64 x %"struct.v8::internal::PerfectKeywordHashTableEntry"], [64 x %"struct.v8::internal::PerfectKeywordHashTableEntry"]* @_ZN2v88internalL24kPerfectKeywordHashTableE, i64 0, i64 %2401, i32 0
  %2408 = load i8*, i8** %2407, align 16
  br label %2409

2409:                                             ; preds = %2414, %2406
  %2410 = phi i8* [ %2381, %2406 ], [ %2416, %2414 ]
  %2411 = phi i8* [ %2408, %2406 ], [ %2415, %2414 ]
  %2412 = load i8, i8* %2411, align 1
  %2413 = icmp eq i8 %2412, 0
  br i1 %2413, label %2419, label %2414

2414:                                             ; preds = %2409
  %2415 = getelementptr inbounds i8, i8* %2411, i64 1
  %2416 = getelementptr inbounds i8, i8* %2410, i64 1
  %2417 = load i8, i8* %2410, align 1
  %2418 = icmp eq i8 %2412, %2417
  br i1 %2418, label %2409, label %2628

2419:                                             ; preds = %2409
  %2420 = getelementptr inbounds [64 x %"struct.v8::internal::PerfectKeywordHashTableEntry"], [64 x %"struct.v8::internal::PerfectKeywordHashTableEntry"]* @_ZN2v88internalL24kPerfectKeywordHashTableE, i64 0, i64 %2401, i32 1
  %2421 = load i8, i8* %2420, align 8
  br label %2628

2422:                                             ; preds = %2370
  %2423 = xor i1 %2373, true
  %2424 = or i1 %2375, %2423
  br i1 %2373, label %2530, label %2628

2425:                                             ; preds = %2276
  %2426 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %2427 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2426, i64 0, i32 2
  %2428 = load i16*, i16** %2427, align 8
  %2429 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2426, i64 0, i32 3
  %2430 = load i16*, i16** %2429, align 8
  %2431 = icmp ult i16* %2428, %2430
  br i1 %2431, label %2446, label %2432, !prof !4

2432:                                             ; preds = %2425
  %2433 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2426, i64 0, i32 6
  %2434 = load i8, i8* %2433, align 8, !range !2
  %2435 = icmp eq i8 %2434, 0
  br i1 %2435, label %2436, label %2443

2436:                                             ; preds = %2432
  %2437 = bitcast %"class.v8::internal::Utf16CharacterStream"* %2426 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %2438 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %2437, align 8
  %2439 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %2438, i64 5
  %2440 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %2439, align 8
  %2441 = tail call zeroext i1 %2440(%"class.v8::internal::Utf16CharacterStream"* %2426) #8
  %2442 = load i16*, i16** %2427, align 8
  br i1 %2441, label %2446, label %2443

2443:                                             ; preds = %2436, %2432
  %2444 = phi i16* [ %2442, %2436 ], [ %2428, %2432 ]
  %2445 = getelementptr inbounds i16, i16* %2444, i64 1
  store i16* %2445, i16** %2427, align 8
  store i32 -1, i32* %84, align 8
  br label %2490

2446:                                             ; preds = %2436, %2425
  %2447 = phi i16* [ %2428, %2425 ], [ %2442, %2436 ]
  %2448 = load i16, i16* %2447, align 2
  %2449 = zext i16 %2448 to i32
  %2450 = getelementptr inbounds i16, i16* %2447, i64 1
  store i16* %2450, i16** %2427, align 8
  store i32 %2449, i32* %84, align 8
  %2451 = icmp eq i16 %2448, 117
  br i1 %2451, label %2452, label %2490

2452:                                             ; preds = %2446
  %2453 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %2454 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2453, i64 0, i32 2
  %2455 = load i16*, i16** %2454, align 8
  %2456 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2453, i64 0, i32 3
  %2457 = load i16*, i16** %2456, align 8
  %2458 = icmp ult i16* %2455, %2457
  br i1 %2458, label %2459, label %2462, !prof !4

2459:                                             ; preds = %2452
  %2460 = load i16, i16* %2455, align 2
  %2461 = zext i16 %2460 to i32
  br label %2476

2462:                                             ; preds = %2452
  %2463 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2453, i64 0, i32 6
  %2464 = load i8, i8* %2463, align 8, !range !2
  %2465 = icmp eq i8 %2464, 0
  br i1 %2465, label %2466, label %2476

2466:                                             ; preds = %2462
  %2467 = bitcast %"class.v8::internal::Utf16CharacterStream"* %2453 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %2468 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %2467, align 8
  %2469 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %2468, i64 5
  %2470 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %2469, align 8
  %2471 = tail call zeroext i1 %2470(%"class.v8::internal::Utf16CharacterStream"* %2453) #8
  %2472 = load i16*, i16** %2454, align 8
  br i1 %2471, label %2473, label %2476

2473:                                             ; preds = %2466
  %2474 = load i16, i16* %2472, align 2
  %2475 = zext i16 %2474 to i32
  br label %2476

2476:                                             ; preds = %2473, %2466, %2462, %2459
  %2477 = phi i16* [ %2455, %2459 ], [ %2472, %2473 ], [ %2455, %2462 ], [ %2472, %2466 ]
  %2478 = phi i32 [ %2461, %2459 ], [ %2475, %2473 ], [ -1, %2462 ], [ -1, %2466 ]
  %2479 = getelementptr inbounds i16, i16* %2477, i64 1
  store i16* %2479, i16** %2454, align 8
  store i32 %2478, i32* %84, align 8
  %2480 = tail call i32 @_ZN2v88internal7Scanner17ScanUnicodeEscapeILb0EEEjv(%"class.v8::internal::Scanner"* %0) #8
  %2481 = icmp eq i32 %2480, 92
  br i1 %2481, label %2628, label %2482

2482:                                             ; preds = %2476
  %2483 = icmp ult i32 %2480, 256
  br i1 %2483, label %2484, label %2490

2484:                                             ; preds = %2482
  %2485 = zext i32 %2480 to i64
  %2486 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN2v88internalL17kOneByteCharFlagsE, i64 0, i64 %2485
  %2487 = load i8, i8* %2486, align 1
  %2488 = and i8 %2487, 1
  %2489 = icmp eq i8 %2488, 0
  br i1 %2489, label %2628, label %2493

2490:                                             ; preds = %2482, %2446, %2443
  %2491 = phi i32 [ %2480, %2482 ], [ -1, %2446 ], [ -1, %2443 ]
  %2492 = tail call zeroext i1 @_ZN2v88internal21IsIdentifierStartSlowEj(i32 %2491) #8
  br i1 %2492, label %2493, label %2628

2493:                                             ; preds = %2490, %2484
  %2494 = phi i32 [ %2480, %2484 ], [ %2491, %2490 ]
  %2495 = phi i1 [ true, %2484 ], [ false, %2490 ]
  %2496 = load %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"** %3, align 8
  %2497 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %2496, i64 0, i32 1
  %2498 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %2496, i64 0, i32 1, i32 2
  %2499 = load i8, i8* %2498, align 4, !range !2
  %2500 = icmp eq i8 %2499, 0
  br i1 %2500, label %2521, label %2501

2501:                                             ; preds = %2493
  br i1 %2495, label %2502, label %2520

2502:                                             ; preds = %2501
  %2503 = trunc i32 %2494 to i8
  %2504 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %2496, i64 0, i32 1, i32 1
  %2505 = load i32, i32* %2504, align 8
  %2506 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %2496, i64 0, i32 1, i32 0, i32 1
  %2507 = load i64, i64* %2506, align 8
  %2508 = trunc i64 %2507 to i32
  %2509 = icmp slt i32 %2505, %2508
  br i1 %2509, label %2512, label %2510

2510:                                             ; preds = %2502
  tail call void @_ZN2v88internal13LiteralBuffer12ExpandBufferEv(%"class.v8::internal::LiteralBuffer"* %2497) #8
  %2511 = load i32, i32* %2504, align 8
  br label %2512

2512:                                             ; preds = %2510, %2502
  %2513 = phi i32 [ %2505, %2502 ], [ %2511, %2510 ]
  %2514 = sext i32 %2513 to i64
  %2515 = getelementptr inbounds %"class.v8::internal::LiteralBuffer", %"class.v8::internal::LiteralBuffer"* %2497, i64 0, i32 0, i32 0
  %2516 = load i8*, i8** %2515, align 8
  %2517 = getelementptr inbounds i8, i8* %2516, i64 %2514
  store i8 %2503, i8* %2517, align 1
  %2518 = load i32, i32* %2504, align 8
  %2519 = add nsw i32 %2518, 1
  store i32 %2519, i32* %2504, align 8
  br label %2522

2520:                                             ; preds = %2501
  tail call void @_ZN2v88internal13LiteralBuffer16ConvertToTwoByteEv(%"class.v8::internal::LiteralBuffer"* %2497) #8
  br label %2521

2521:                                             ; preds = %2520, %2493
  tail call void @_ZN2v88internal13LiteralBuffer14AddTwoByteCharEj(%"class.v8::internal::LiteralBuffer"* %2497, i32 %2494) #8
  br label %2522

2522:                                             ; preds = %2521, %2512
  %2523 = icmp ult i32 %2494, 128
  br i1 %2523, label %2524, label %2530

2524:                                             ; preds = %2522
  %2525 = zext i32 %2494 to i64
  %2526 = getelementptr inbounds [128 x i8], [128 x i8]* @_ZN2v88internalL20character_scan_flagsE, i64 0, i64 %2525
  %2527 = load i8, i8* %2526, align 1
  %2528 = and i8 %2527, 2
  %2529 = icmp eq i8 %2528, 0
  br label %2530

2530:                                             ; preds = %2524, %2522, %2422, %2270
  %2531 = phi i1 [ %2424, %2422 ], [ true, %2270 ], [ false, %2522 ], [ %2529, %2524 ]
  %2532 = phi i1 [ false, %2422 ], [ false, %2270 ], [ true, %2522 ], [ true, %2524 ]
  %2533 = tail call zeroext i8 @_ZN2v88internal7Scanner32ScanIdentifierOrKeywordInnerSlowEbb(%"class.v8::internal::Scanner"* %0, i1 zeroext %2532, i1 zeroext %2531) #8
  br label %2628

2534:                                             ; preds = %2268, %2262, %2248, %2236, %2234
  %2535 = load i32, i32* %84, align 8
  br label %2536

2536:                                             ; preds = %2534, %2194
  %2537 = phi i32 [ %2535, %2534 ], [ %2195, %2194 ]
  %2538 = icmp eq i32 %2537, -1
  %2539 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  br i1 %2538, label %2540, label %2545

2540:                                             ; preds = %2536
  %2541 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2539, i64 0, i32 6
  %2542 = load i8, i8* %2541, align 8, !range !2
  %2543 = icmp eq i8 %2542, 0
  %2544 = select i1 %2543, i8 14, i8 112
  br label %2628

2545:                                             ; preds = %2536
  %2546 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2539, i64 0, i32 4
  %2547 = load i64, i64* %2546, align 8
  %2548 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2539, i64 0, i32 2
  %2549 = bitcast i16** %2548 to i64*
  %2550 = load i64, i64* %2549, align 8
  %2551 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2539, i64 0, i32 1
  %2552 = bitcast i16** %2551 to i64*
  %2553 = load i64, i64* %2552, align 8
  %2554 = sub i64 %2550, %2553
  %2555 = lshr exact i64 %2554, 1
  %2556 = add i64 %2555, %2547
  %2557 = trunc i64 %2556 to i32
  br label %2558

2558:                                             ; preds = %2604, %2545
  %2559 = phi i32 [ %2606, %2604 ], [ %2537, %2545 ]
  %2560 = icmp ult i32 %2559, 256
  br i1 %2560, label %2566, label %2561

2561:                                             ; preds = %2558
  %2562 = tail call zeroext i1 @_ZN2v88internal16IsWhiteSpaceSlowEj(i32 %2559) #8
  %2563 = and i32 %2559, -2
  %2564 = icmp eq i32 %2563, 8232
  %2565 = or i1 %2564, %2562
  br i1 %2565, label %2572, label %2608

2566:                                             ; preds = %2558
  %2567 = zext i32 %2559 to i64
  %2568 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN2v88internalL17kOneByteCharFlagsE, i64 0, i64 %2567
  %2569 = load i8, i8* %2568, align 1
  %2570 = and i8 %2569, 8
  %2571 = icmp eq i8 %2570, 0
  br i1 %2571, label %2608, label %2572

2572:                                             ; preds = %2566, %2561
  %2573 = load %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"** %3, align 8
  %2574 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %2573, i64 0, i32 8
  %2575 = load i8, i8* %2574, align 4, !range !2
  %2576 = icmp eq i8 %2575, 0
  br i1 %2576, label %2577, label %2580

2577:                                             ; preds = %2572
  %2578 = load i32, i32* %84, align 8
  switch i32 %2578, label %2580 [
    i32 8232, label %2579
    i32 13, label %2579
    i32 10, label %2579
    i32 8233, label %2579
  ]

2579:                                             ; preds = %2577, %2577, %2577, %2577
  store i8 1, i8* %2574, align 4
  br label %2580

2580:                                             ; preds = %2579, %2577, %2572
  %2581 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %2582 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2581, i64 0, i32 2
  %2583 = load i16*, i16** %2582, align 8
  %2584 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2581, i64 0, i32 3
  %2585 = load i16*, i16** %2584, align 8
  %2586 = icmp ult i16* %2583, %2585
  br i1 %2586, label %2587, label %2590, !prof !4

2587:                                             ; preds = %2580
  %2588 = load i16, i16* %2583, align 2
  %2589 = zext i16 %2588 to i32
  br label %2604

2590:                                             ; preds = %2580
  %2591 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2581, i64 0, i32 6
  %2592 = load i8, i8* %2591, align 8, !range !2
  %2593 = icmp eq i8 %2592, 0
  br i1 %2593, label %2594, label %2604

2594:                                             ; preds = %2590
  %2595 = bitcast %"class.v8::internal::Utf16CharacterStream"* %2581 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %2596 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %2595, align 8
  %2597 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %2596, i64 5
  %2598 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %2597, align 8
  %2599 = tail call zeroext i1 %2598(%"class.v8::internal::Utf16CharacterStream"* %2581) #8
  %2600 = load i16*, i16** %2582, align 8
  br i1 %2599, label %2601, label %2604

2601:                                             ; preds = %2594
  %2602 = load i16, i16* %2600, align 2
  %2603 = zext i16 %2602 to i32
  br label %2604

2604:                                             ; preds = %2601, %2594, %2590, %2587
  %2605 = phi i16* [ %2583, %2587 ], [ %2600, %2601 ], [ %2583, %2590 ], [ %2600, %2594 ]
  %2606 = phi i32 [ %2589, %2587 ], [ %2603, %2601 ], [ -1, %2590 ], [ -1, %2594 ]
  %2607 = getelementptr inbounds i16, i16* %2605, i64 1
  store i16* %2607, i16** %2582, align 8
  store i32 %2606, i32* %84, align 8
  br label %2558

2608:                                             ; preds = %2566, %2561
  %2609 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %2610 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2609, i64 0, i32 4
  %2611 = load i64, i64* %2610, align 8
  %2612 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2609, i64 0, i32 2
  %2613 = bitcast i16** %2612 to i64*
  %2614 = load i64, i64* %2613, align 8
  %2615 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2609, i64 0, i32 1
  %2616 = bitcast i16** %2615 to i64*
  %2617 = load i64, i64* %2616, align 8
  %2618 = sub i64 %2614, %2617
  %2619 = lshr exact i64 %2618, 1
  %2620 = add i64 %2619, %2611
  %2621 = trunc i64 %2620 to i32
  %2622 = icmp eq i32 %2621, %2557
  br i1 %2622, label %2628, label %2626

2623:                                             ; preds = %1318, %386
  %2624 = phi i8 [ %1319, %1318 ], [ %387, %386 ]
  %2625 = icmp eq i8 %2624, 114
  br i1 %2625, label %2626, label %2628

2626:                                             ; preds = %2623, %2608, %1900, %1832, %1316, %1278, %1237, %1237, %1237, %1237, %1237, %944
  %2627 = load %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"** %3, align 8
  br label %86

2628:                                             ; preds = %298, %845, %871, %877, %1159, %1900, %2608, %2623, %2414, %2061, %133, %155, %158, %181, %184, %219, %238, %241, %271, %275, %295, %327, %349, %352, %382, %406, %409, %438, %460, %463, %492, %514, %517, %547, %569, %572, %595, %598, %628, %656, %678, %681, %705, %708, %738, %760, %763, %792, %820, %842, %868, %887, %902, %970, %992, %995, %1018, %1021, %1051, %1079, %1101, %1104, %1134, %1156, %1344, %1366, %1369, %1392, %1395, %1425, %1453, %1475, %1478, %1501, %1504, %1534, %1562, %1584, %1587, %1617, %1639, %1649, %1651, %1660, %1664, %1672, %1727, %1755, %1834, %1915, %2025, %2033, %2066, %2069, %2123, %2131, %2137, %2177, %2378, %2386, %2419, %2422, %2476, %2484, %2490, %2530, %2540
  %2629 = phi i8 [ %1916, %1915 ], [ %1835, %1834 ], [ %1759, %1755 ], [ %1650, %1649 ], [ 10, %1727 ], [ 21, %1562 ], [ 23, %1453 ], [ 28, %1344 ], [ 27, %1079 ], [ 32, %970 ], [ 54, %792 ], [ 31, %820 ], [ 15, %656 ], [ 63, %438 ], [ 25, %492 ], [ 62, %327 ], [ %276, %275 ], [ %108, %133 ], [ %2544, %2540 ], [ 4, %184 ], [ 11, %158 ], [ 11, %219 ], [ 41, %463 ], [ 61, %409 ], [ 17, %572 ], [ 49, %681 ], [ 47, %763 ], [ 43, %995 ], [ 39, %1369 ], [ 37, %1478 ], [ 2, %1672 ], [ 2, %1651 ], [ 11, %155 ], [ 4, %181 ], [ 18, %271 ], [ 34, %241 ], [ 34, %238 ], [ 60, %295 ], [ 24, %382 ], [ 40, %352 ], [ 40, %349 ], [ 61, %406 ], [ 41, %460 ], [ 26, %547 ], [ 42, %517 ], [ 42, %514 ], [ 17, %569 ], [ 57, %628 ], [ 56, %598 ], [ 56, %595 ], [ 49, %678 ], [ 59, %738 ], [ 58, %708 ], [ 58, %705 ], [ 47, %760 ], [ 48, %842 ], [ 55, %868 ], [ 43, %992 ], [ 30, %1051 ], [ 46, %1021 ], [ 46, %1018 ], [ 29, %1134 ], [ 45, %1104 ], [ 45, %1101 ], [ 44, %1156 ], [ 39, %1366 ], [ 20, %1425 ], [ 36, %1395 ], [ 36, %1392 ], [ 37, %1475 ], [ 19, %1534 ], [ 35, %1504 ], [ 35, %1501 ], [ 22, %1617 ], [ 38, %1587 ], [ 38, %1584 ], [ 2, %1639 ], [ %2180, %2177 ], [ 95, %2069 ], [ %2068, %2066 ], [ 95, %2025 ], [ 95, %2033 ], [ 112, %2137 ], [ 112, %2123 ], [ 112, %2131 ], [ %2533, %2530 ], [ 95, %2422 ], [ %2421, %2419 ], [ 95, %2378 ], [ 95, %2386 ], [ 112, %2490 ], [ 112, %2476 ], [ 112, %2484 ], [ 2, %1664 ], [ 2, %1660 ], [ 112, %887 ], [ 112, %902 ], [ 95, %2061 ], [ 95, %2414 ], [ 60, %298 ], [ 55, %877 ], [ 55, %871 ], [ 48, %845 ], [ 44, %1159 ], [ %2624, %2623 ], [ 112, %1900 ], [ 112, %2608 ]
  %2630 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %83, i64 0, i32 3
  store i8 %2629, i8* %2630, align 8
  %2631 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %9, align 8
  %2632 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2631, i64 0, i32 4
  %2633 = load i64, i64* %2632, align 8
  %2634 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2631, i64 0, i32 2
  %2635 = bitcast i16** %2634 to i64*
  %2636 = load i64, i64* %2635, align 8
  %2637 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %2631, i64 0, i32 1
  %2638 = bitcast i16** %2637 to i64*
  %2639 = load i64, i64* %2638, align 8
  %2640 = sub i64 %2636, %2639
  %2641 = lshr exact i64 %2640, 1
  %2642 = add i64 %2641, %2633
  %2643 = trunc i64 %2642 to i32
  %2644 = add nsw i32 %2643, -1
  %2645 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %83, i64 0, i32 0, i32 1
  store i32 %2644, i32* %2645, align 4
  br label %2646

2646:                                             ; preds = %2, %2628
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i8 @_ZN2v88internal7Scanner10ScanStringEv(%"class.v8::internal::Scanner"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 5
  %3 = load i32, i32* %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 2
  %5 = load %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"** %4, align 8
  %6 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %5, i64 0, i32 1, i32 1
  store i32 0, i32* %6, align 8
  %7 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %5, i64 0, i32 1, i32 2
  store i8 1, i8* %7, align 4
  %8 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 4
  br label %9

9:                                                ; preds = %197, %1
  %10 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %8, align 8
  %11 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %10, i64 0, i32 2
  %12 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %10, i64 0, i32 3
  %13 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %10, i64 0, i32 6
  %14 = bitcast %"class.v8::internal::Utf16CharacterStream"* %10 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  br label %15

15:                                               ; preds = %94, %9
  %16 = load i16*, i16** %11, align 8
  %17 = load i16*, i16** %12, align 8
  %18 = icmp eq i16* %16, %17
  br i1 %18, label %90, label %19

19:                                               ; preds = %15, %83
  %20 = phi i16* [ %84, %83 ], [ %16, %15 ]
  %21 = load i16, i16* %20, align 2
  %22 = zext i16 %21 to i32
  %23 = icmp ugt i16 %21, 127
  br i1 %23, label %24, label %52, !prof !3

24:                                               ; preds = %19
  %25 = load %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"** %4, align 8
  %26 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %25, i64 0, i32 1
  %27 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %25, i64 0, i32 1, i32 2
  %28 = load i8, i8* %27, align 4, !range !2
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %51, label %30

30:                                               ; preds = %24
  %31 = icmp ult i16 %21, 256
  br i1 %31, label %32, label %50

32:                                               ; preds = %30
  %33 = trunc i16 %21 to i8
  %34 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %25, i64 0, i32 1, i32 1
  %35 = load i32, i32* %34, align 8
  %36 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %25, i64 0, i32 1, i32 0, i32 1
  %37 = load i64, i64* %36, align 8
  %38 = trunc i64 %37 to i32
  %39 = icmp slt i32 %35, %38
  br i1 %39, label %42, label %40

40:                                               ; preds = %32
  tail call void @_ZN2v88internal13LiteralBuffer12ExpandBufferEv(%"class.v8::internal::LiteralBuffer"* %26) #8
  %41 = load i32, i32* %34, align 8
  br label %42

42:                                               ; preds = %40, %32
  %43 = phi i32 [ %35, %32 ], [ %41, %40 ]
  %44 = sext i32 %43 to i64
  %45 = getelementptr inbounds %"class.v8::internal::LiteralBuffer", %"class.v8::internal::LiteralBuffer"* %26, i64 0, i32 0, i32 0
  %46 = load i8*, i8** %45, align 8
  %47 = getelementptr inbounds i8, i8* %46, i64 %44
  store i8 %33, i8* %47, align 1
  %48 = load i32, i32* %34, align 8
  %49 = add nsw i32 %48, 1
  store i32 %49, i32* %34, align 8
  br label %83

50:                                               ; preds = %30
  tail call void @_ZN2v88internal13LiteralBuffer16ConvertToTwoByteEv(%"class.v8::internal::LiteralBuffer"* %26) #8
  br label %51

51:                                               ; preds = %50, %24
  tail call void @_ZN2v88internal13LiteralBuffer14AddTwoByteCharEj(%"class.v8::internal::LiteralBuffer"* %26, i32 %22) #8
  br label %83

52:                                               ; preds = %19
  %53 = zext i16 %21 to i64
  %54 = getelementptr inbounds [128 x i8], [128 x i8]* @_ZN2v88internalL20character_scan_flagsE, i64 0, i64 %53
  %55 = load i8, i8* %54, align 1
  %56 = and i8 %55, 8
  %57 = icmp eq i8 %56, 0
  br i1 %57, label %58, label %86

58:                                               ; preds = %52
  %59 = load %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"** %4, align 8
  %60 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %59, i64 0, i32 1
  %61 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %59, i64 0, i32 1, i32 2
  %62 = load i8, i8* %61, align 4, !range !2
  %63 = icmp eq i8 %62, 0
  br i1 %63, label %82, label %64

64:                                               ; preds = %58
  %65 = trunc i16 %21 to i8
  %66 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %59, i64 0, i32 1, i32 1
  %67 = load i32, i32* %66, align 8
  %68 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %59, i64 0, i32 1, i32 0, i32 1
  %69 = load i64, i64* %68, align 8
  %70 = trunc i64 %69 to i32
  %71 = icmp slt i32 %67, %70
  br i1 %71, label %74, label %72

72:                                               ; preds = %64
  tail call void @_ZN2v88internal13LiteralBuffer12ExpandBufferEv(%"class.v8::internal::LiteralBuffer"* %60) #8
  %73 = load i32, i32* %66, align 8
  br label %74

74:                                               ; preds = %72, %64
  %75 = phi i32 [ %67, %64 ], [ %73, %72 ]
  %76 = sext i32 %75 to i64
  %77 = getelementptr inbounds %"class.v8::internal::LiteralBuffer", %"class.v8::internal::LiteralBuffer"* %60, i64 0, i32 0, i32 0
  %78 = load i8*, i8** %77, align 8
  %79 = getelementptr inbounds i8, i8* %78, i64 %76
  store i8 %65, i8* %79, align 1
  %80 = load i32, i32* %66, align 8
  %81 = add nsw i32 %80, 1
  store i32 %81, i32* %66, align 8
  br label %83

82:                                               ; preds = %58
  tail call void @_ZN2v88internal13LiteralBuffer14AddTwoByteCharEj(%"class.v8::internal::LiteralBuffer"* %60, i32 %22) #8
  br label %83

83:                                               ; preds = %82, %74, %51, %42
  %84 = getelementptr inbounds i16, i16* %20, i64 1
  %85 = icmp eq i16* %84, %17
  br i1 %85, label %86, label %19

86:                                               ; preds = %83, %52
  %87 = phi i16* [ %20, %52 ], [ %17, %83 ]
  %88 = load i16*, i16** %12, align 8
  %89 = icmp eq i16* %87, %88
  br i1 %89, label %90, label %104

90:                                               ; preds = %86, %15
  %91 = phi i16* [ %87, %86 ], [ %16, %15 ]
  store i16* %91, i16** %11, align 8
  %92 = load i8, i8* %13, align 8, !range !2
  %93 = icmp eq i8 %92, 0
  br i1 %93, label %94, label %101

94:                                               ; preds = %90
  %95 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %14, align 8
  %96 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %95, i64 5
  %97 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %96, align 8
  %98 = tail call zeroext i1 %97(%"class.v8::internal::Utf16CharacterStream"* %10) #8
  br i1 %98, label %15, label %99

99:                                               ; preds = %94
  %100 = load i16*, i16** %11, align 8
  br label %101

101:                                              ; preds = %90, %99
  %102 = phi i16* [ %100, %99 ], [ %91, %90 ]
  %103 = getelementptr inbounds i16, i16* %102, i64 1
  store i16* %103, i16** %11, align 8
  store i32 -1, i32* %2, align 8
  br label %139

104:                                              ; preds = %86
  %105 = getelementptr inbounds i16, i16* %87, i64 1
  store i16* %105, i16** %11, align 8
  %106 = load i16, i16* %87, align 2
  %107 = zext i16 %106 to i32
  store i32 %107, i32* %2, align 8
  %108 = icmp eq i16 %106, 92
  br i1 %108, label %112, label %139

109:                                              ; preds = %133
  %110 = load i32, i32* %2, align 8
  %111 = icmp eq i32 %110, 92
  br i1 %111, label %112, label %139

112:                                              ; preds = %104, %109
  %113 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %8, align 8
  %114 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %113, i64 0, i32 2
  %115 = load i16*, i16** %114, align 8
  %116 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %113, i64 0, i32 3
  %117 = load i16*, i16** %116, align 8
  %118 = icmp ult i16* %115, %117
  br i1 %118, label %133, label %119, !prof !4

119:                                              ; preds = %112
  %120 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %113, i64 0, i32 6
  %121 = load i8, i8* %120, align 8, !range !2
  %122 = icmp eq i8 %121, 0
  br i1 %122, label %123, label %130

123:                                              ; preds = %119
  %124 = bitcast %"class.v8::internal::Utf16CharacterStream"* %113 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %125 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %124, align 8
  %126 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %125, i64 5
  %127 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %126, align 8
  %128 = tail call zeroext i1 %127(%"class.v8::internal::Utf16CharacterStream"* %113) #8
  %129 = load i16*, i16** %114, align 8
  br i1 %128, label %133, label %130

130:                                              ; preds = %119, %123
  %131 = phi i16* [ %129, %123 ], [ %115, %119 ]
  %132 = getelementptr inbounds i16, i16* %131, i64 1
  store i16* %132, i16** %114, align 8
  store i32 -1, i32* %2, align 8
  br label %200

133:                                              ; preds = %123, %112
  %134 = phi i16* [ %115, %112 ], [ %129, %123 ]
  %135 = load i16, i16* %134, align 2
  %136 = zext i16 %135 to i32
  %137 = getelementptr inbounds i16, i16* %134, i64 1
  store i16* %137, i16** %114, align 8
  store i32 %136, i32* %2, align 8
  %138 = tail call zeroext i1 @_ZN2v88internal7Scanner10ScanEscapeILb0EEEbv(%"class.v8::internal::Scanner"* %0)
  br i1 %138, label %109, label %200, !prof !4

139:                                              ; preds = %109, %101, %104
  %140 = phi i32 [ %107, %104 ], [ -1, %101 ], [ %110, %109 ]
  %141 = icmp eq i32 %140, %3
  br i1 %141, label %142, label %170

142:                                              ; preds = %139
  %143 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %8, align 8
  %144 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %143, i64 0, i32 2
  %145 = load i16*, i16** %144, align 8
  %146 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %143, i64 0, i32 3
  %147 = load i16*, i16** %146, align 8
  %148 = icmp ult i16* %145, %147
  br i1 %148, label %149, label %152, !prof !4

149:                                              ; preds = %142
  %150 = load i16, i16* %145, align 2
  %151 = zext i16 %150 to i32
  br label %166

152:                                              ; preds = %142
  %153 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %143, i64 0, i32 6
  %154 = load i8, i8* %153, align 8, !range !2
  %155 = icmp eq i8 %154, 0
  br i1 %155, label %156, label %166

156:                                              ; preds = %152
  %157 = bitcast %"class.v8::internal::Utf16CharacterStream"* %143 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %158 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %157, align 8
  %159 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %158, i64 5
  %160 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %159, align 8
  %161 = tail call zeroext i1 %160(%"class.v8::internal::Utf16CharacterStream"* %143) #8
  %162 = load i16*, i16** %144, align 8
  br i1 %161, label %163, label %166

163:                                              ; preds = %156
  %164 = load i16, i16* %162, align 2
  %165 = zext i16 %164 to i32
  br label %166

166:                                              ; preds = %149, %152, %156, %163
  %167 = phi i16* [ %145, %149 ], [ %162, %163 ], [ %145, %152 ], [ %162, %156 ]
  %168 = phi i32 [ %151, %149 ], [ %165, %163 ], [ -1, %152 ], [ -1, %156 ]
  %169 = getelementptr inbounds i16, i16* %167, i64 1
  store i16* %169, i16** %144, align 8
  store i32 %168, i32* %2, align 8
  br label %200

170:                                              ; preds = %139
  switch i32 %140, label %171 [
    i32 -1, label %200
    i32 13, label %200
    i32 10, label %200
  ], !prof !6

171:                                              ; preds = %170
  %172 = load %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"** %4, align 8
  %173 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %172, i64 0, i32 1
  %174 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %172, i64 0, i32 1, i32 2
  %175 = load i8, i8* %174, align 4, !range !2
  %176 = icmp eq i8 %175, 0
  br i1 %176, label %199, label %177

177:                                              ; preds = %171
  %178 = icmp ult i32 %140, 256
  br i1 %178, label %179, label %198

179:                                              ; preds = %177
  %180 = trunc i32 %140 to i8
  %181 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %172, i64 0, i32 1, i32 1
  %182 = load i32, i32* %181, align 8
  %183 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %172, i64 0, i32 1, i32 0, i32 1
  %184 = load i64, i64* %183, align 8
  %185 = trunc i64 %184 to i32
  %186 = icmp slt i32 %182, %185
  br i1 %186, label %189, label %187

187:                                              ; preds = %179
  tail call void @_ZN2v88internal13LiteralBuffer12ExpandBufferEv(%"class.v8::internal::LiteralBuffer"* %173) #8
  %188 = load i32, i32* %181, align 8
  br label %189

189:                                              ; preds = %187, %179
  %190 = phi i32 [ %182, %179 ], [ %188, %187 ]
  %191 = sext i32 %190 to i64
  %192 = getelementptr inbounds %"class.v8::internal::LiteralBuffer", %"class.v8::internal::LiteralBuffer"* %173, i64 0, i32 0, i32 0
  %193 = load i8*, i8** %192, align 8
  %194 = getelementptr inbounds i8, i8* %193, i64 %191
  store i8 %180, i8* %194, align 1
  %195 = load i32, i32* %181, align 8
  %196 = add nsw i32 %195, 1
  store i32 %196, i32* %181, align 8
  br label %197

197:                                              ; preds = %189, %199
  br label %9

198:                                              ; preds = %177
  tail call void @_ZN2v88internal13LiteralBuffer16ConvertToTwoByteEv(%"class.v8::internal::LiteralBuffer"* %173) #8
  br label %199

199:                                              ; preds = %198, %171
  tail call void @_ZN2v88internal13LiteralBuffer14AddTwoByteCharEj(%"class.v8::internal::LiteralBuffer"* %173, i32 %140) #8
  br label %197

200:                                              ; preds = %170, %170, %170, %133, %130, %166
  %201 = phi i8 [ 93, %166 ], [ 112, %130 ], [ 112, %133 ], [ 112, %170 ], [ 112, %170 ], [ 112, %170 ]
  ret i8 %201
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2v88internal7Scanner10ScanEscapeILb0EEEbv(%"class.v8::internal::Scanner"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 5
  %3 = load i32, i32* %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 4
  %5 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %5, i64 0, i32 2
  %7 = load i16*, i16** %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %5, i64 0, i32 3
  %9 = load i16*, i16** %8, align 8
  %10 = icmp ult i16* %7, %9
  br i1 %10, label %11, label %14, !prof !4

11:                                               ; preds = %1
  %12 = load i16, i16* %7, align 2
  %13 = zext i16 %12 to i32
  br label %28

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %5, i64 0, i32 6
  %16 = load i8, i8* %15, align 8, !range !2
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %18, label %28

18:                                               ; preds = %14
  %19 = bitcast %"class.v8::internal::Utf16CharacterStream"* %5 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %20 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %19, align 8
  %21 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %20, i64 5
  %22 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %21, align 8
  %23 = tail call zeroext i1 %22(%"class.v8::internal::Utf16CharacterStream"* %5) #8
  %24 = load i16*, i16** %6, align 8
  br i1 %23, label %25, label %28

25:                                               ; preds = %18
  %26 = load i16, i16* %24, align 2
  %27 = zext i16 %26 to i32
  br label %28

28:                                               ; preds = %11, %14, %18, %25
  %29 = phi i16* [ %7, %11 ], [ %24, %25 ], [ %7, %14 ], [ %24, %18 ]
  %30 = phi i32 [ %13, %11 ], [ %27, %25 ], [ -1, %14 ], [ -1, %18 ]
  %31 = getelementptr inbounds i16, i16* %29, i64 1
  store i16* %31, i16** %6, align 8
  store i32 %30, i32* %2, align 8
  switch i32 %3, label %217 [
    i32 13, label %32
    i32 10, label %247
    i32 8232, label %247
    i32 8233, label %247
    i32 98, label %62
    i32 102, label %63
    i32 110, label %64
    i32 114, label %65
    i32 116, label %66
    i32 117, label %67
    i32 118, label %70
    i32 120, label %71
    i32 48, label %132
    i32 49, label %132
    i32 50, label %132
    i32 51, label %132
    i32 52, label %132
    i32 53, label %132
    i32 54, label %132
    i32 55, label %132
    i32 56, label %196
    i32 57, label %196
  ]

32:                                               ; preds = %28
  %33 = icmp eq i32 %30, 10
  br i1 %33, label %34, label %247

34:                                               ; preds = %32
  %35 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %4, align 8
  %36 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %35, i64 0, i32 2
  %37 = load i16*, i16** %36, align 8
  %38 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %35, i64 0, i32 3
  %39 = load i16*, i16** %38, align 8
  %40 = icmp ult i16* %37, %39
  br i1 %40, label %41, label %44, !prof !4

41:                                               ; preds = %34
  %42 = load i16, i16* %37, align 2
  %43 = zext i16 %42 to i32
  br label %58

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %35, i64 0, i32 6
  %46 = load i8, i8* %45, align 8, !range !2
  %47 = icmp eq i8 %46, 0
  br i1 %47, label %48, label %58

48:                                               ; preds = %44
  %49 = bitcast %"class.v8::internal::Utf16CharacterStream"* %35 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %50 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %49, align 8
  %51 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %50, i64 5
  %52 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %51, align 8
  %53 = tail call zeroext i1 %52(%"class.v8::internal::Utf16CharacterStream"* %35) #8
  %54 = load i16*, i16** %36, align 8
  br i1 %53, label %55, label %58

55:                                               ; preds = %48
  %56 = load i16, i16* %54, align 2
  %57 = zext i16 %56 to i32
  br label %58

58:                                               ; preds = %41, %44, %48, %55
  %59 = phi i16* [ %37, %41 ], [ %54, %55 ], [ %37, %44 ], [ %54, %48 ]
  %60 = phi i32 [ %43, %41 ], [ %57, %55 ], [ -1, %44 ], [ -1, %48 ]
  %61 = getelementptr inbounds i16, i16* %59, i64 1
  store i16* %61, i16** %36, align 8
  store i32 %60, i32* %2, align 8
  br label %247

62:                                               ; preds = %28
  br label %217

63:                                               ; preds = %28
  br label %217

64:                                               ; preds = %28
  br label %217

65:                                               ; preds = %28
  br label %217

66:                                               ; preds = %28
  br label %217

67:                                               ; preds = %28
  %68 = tail call i32 @_ZN2v88internal7Scanner17ScanUnicodeEscapeILb0EEEjv(%"class.v8::internal::Scanner"* %0)
  %69 = icmp eq i32 %68, -1
  br i1 %69, label %247, label %217

70:                                               ; preds = %28
  br label %217

71:                                               ; preds = %28
  %72 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %4, align 8
  %73 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %72, i64 0, i32 4
  %74 = load i64, i64* %73, align 8
  %75 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %72, i64 0, i32 2
  %76 = bitcast i16** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %72, i64 0, i32 1
  %79 = bitcast i16** %78 to i64*
  %80 = load i64, i64* %79, align 8
  %81 = sub i64 %77, %80
  %82 = lshr exact i64 %81, 1
  %83 = add i64 %82, %74
  %84 = add i64 %83, 4294967293
  %85 = add nsw i32 %30, -48
  %86 = icmp ult i32 %85, 10
  %87 = inttoptr i64 %77 to i16*
  br i1 %86, label %106, label %88

88:                                               ; preds = %71
  %89 = or i32 %85, 32
  %90 = add nsw i32 %89, -49
  %91 = icmp ugt i32 %90, 5
  %92 = add nsw i32 %89, -39
  %93 = icmp slt i32 %92, 0
  %94 = or i1 %91, %93
  br i1 %94, label %95, label %106

95:                                               ; preds = %122, %249, %88
  %96 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 14
  %97 = load i32, i32* %96, align 4
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %99, label %247

99:                                               ; preds = %95
  store i32 351, i32* %96, align 4
  %100 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 15
  %101 = bitcast %"struct.v8::internal::Scanner::Location"* %100 to i64*
  %102 = shl i64 %83, 32
  %103 = add i64 %102, 4294967296
  %104 = and i64 %84, 4294967295
  %105 = or i64 %103, %104
  store i64 %105, i64* %101, align 8
  br label %247

106:                                              ; preds = %88, %71
  %107 = phi i32 [ %85, %71 ], [ %92, %88 ]
  %108 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %72, i64 0, i32 3
  %109 = load i16*, i16** %108, align 8
  %110 = icmp ugt i16* %109, %87
  br i1 %110, label %125, label %111, !prof !4

111:                                              ; preds = %106
  %112 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %72, i64 0, i32 6
  %113 = load i8, i8* %112, align 8, !range !2
  %114 = icmp eq i8 %113, 0
  br i1 %114, label %115, label %122

115:                                              ; preds = %111
  %116 = bitcast %"class.v8::internal::Utf16CharacterStream"* %72 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %117 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %116, align 8
  %118 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %117, i64 5
  %119 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %118, align 8
  %120 = tail call zeroext i1 %119(%"class.v8::internal::Utf16CharacterStream"* %72) #8
  %121 = load i16*, i16** %75, align 8
  br i1 %120, label %125, label %122

122:                                              ; preds = %115, %111
  %123 = phi i16* [ %121, %115 ], [ %87, %111 ]
  %124 = getelementptr inbounds i16, i16* %123, i64 1
  store i16* %124, i16** %75, align 8
  store i32 -1, i32* %2, align 8
  br label %95

125:                                              ; preds = %115, %106
  %126 = phi i16* [ %87, %106 ], [ %121, %115 ]
  %127 = load i16, i16* %126, align 2
  %128 = zext i16 %127 to i32
  %129 = getelementptr inbounds i16, i16* %126, i64 1
  store i16* %129, i16** %75, align 8
  store i32 %128, i32* %2, align 8
  %130 = add nsw i32 %128, -48
  %131 = icmp ult i32 %130, 10
  br i1 %131, label %256, label %249

132:                                              ; preds = %28, %28, %28, %28, %28, %28, %28, %28
  %133 = add nsw i32 %3, -48
  %134 = add nsw i32 %30, -48
  %135 = icmp ugt i32 %134, 7
  br i1 %135, label %168, label %136

136:                                              ; preds = %132
  %137 = shl i32 %133, 3
  %138 = add nuw nsw i32 %137, %134
  %139 = icmp sgt i32 %138, 255
  br i1 %139, label %168, label %140

140:                                              ; preds = %136
  %141 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %4, align 8
  %142 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %141, i64 0, i32 2
  %143 = load i16*, i16** %142, align 8
  %144 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %141, i64 0, i32 3
  %145 = load i16*, i16** %144, align 8
  %146 = icmp ult i16* %143, %145
  br i1 %146, label %161, label %147, !prof !4

147:                                              ; preds = %140
  %148 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %141, i64 0, i32 6
  %149 = load i8, i8* %148, align 8, !range !2
  %150 = icmp eq i8 %149, 0
  br i1 %150, label %151, label %158

151:                                              ; preds = %147
  %152 = bitcast %"class.v8::internal::Utf16CharacterStream"* %141 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %153 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %152, align 8
  %154 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %153, i64 5
  %155 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %154, align 8
  %156 = tail call zeroext i1 %155(%"class.v8::internal::Utf16CharacterStream"* %141) #8
  %157 = load i16*, i16** %142, align 8
  br i1 %156, label %161, label %158

158:                                              ; preds = %147, %151
  %159 = phi i16* [ %157, %151 ], [ %143, %147 ]
  %160 = getelementptr inbounds i16, i16* %159, i64 1
  store i16* %160, i16** %142, align 8
  store i32 -1, i32* %2, align 8
  br label %173

161:                                              ; preds = %151, %140
  %162 = phi i16* [ %143, %140 ], [ %157, %151 ]
  %163 = load i16, i16* %162, align 2
  %164 = zext i16 %163 to i32
  %165 = getelementptr inbounds i16, i16* %162, i64 1
  store i16* %165, i16** %142, align 8
  store i32 %164, i32* %2, align 8
  %166 = add nsw i32 %164, -48
  %167 = icmp ugt i32 %166, 7
  br i1 %167, label %173, label %288

168:                                              ; preds = %136, %132
  %169 = icmp eq i32 %3, 48
  br i1 %169, label %170, label %173

170:                                              ; preds = %168
  %171 = and i32 %30, -2
  %172 = icmp eq i32 %171, 56
  br i1 %172, label %173, label %217

173:                                              ; preds = %168, %158, %288, %161, %316, %170
  %174 = phi i32 [ 0, %170 ], [ %133, %168 ], [ %290, %316 ], [ %138, %161 ], [ %138, %288 ], [ %138, %158 ]
  %175 = phi i64 [ 4294967294, %170 ], [ 4294967294, %168 ], [ 4294967292, %316 ], [ 4294967293, %161 ], [ 4294967293, %288 ], [ 4294967293, %158 ]
  %176 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %4, align 8
  %177 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %176, i64 0, i32 4
  %178 = load i64, i64* %177, align 8
  %179 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %176, i64 0, i32 2
  %180 = bitcast i16** %179 to i64*
  %181 = load i64, i64* %180, align 8
  %182 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %176, i64 0, i32 1
  %183 = bitcast i16** %182 to i64*
  %184 = load i64, i64* %183, align 8
  %185 = sub i64 %181, %184
  %186 = lshr exact i64 %185, 1
  %187 = add i64 %186, %178
  %188 = add i64 %175, %187
  %189 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 12
  %190 = bitcast %"struct.v8::internal::Scanner::Location"* %189 to i64*
  %191 = shl i64 %187, 32
  %192 = add i64 %191, -8589934592
  %193 = and i64 %188, 4294967295
  %194 = or i64 %192, %193
  store i64 %194, i64* %190, align 8
  %195 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 13
  store i32 315, i32* %195, align 8
  br label %217

196:                                              ; preds = %28, %28
  %197 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %4, align 8
  %198 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %197, i64 0, i32 4
  %199 = load i64, i64* %198, align 8
  %200 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %197, i64 0, i32 2
  %201 = bitcast i16** %200 to i64*
  %202 = load i64, i64* %201, align 8
  %203 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %197, i64 0, i32 1
  %204 = bitcast i16** %203 to i64*
  %205 = load i64, i64* %204, align 8
  %206 = sub i64 %202, %205
  %207 = lshr exact i64 %206, 1
  %208 = add i64 %207, %199
  %209 = add i64 %208, 4294967293
  %210 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 12
  %211 = bitcast %"struct.v8::internal::Scanner::Location"* %210 to i64*
  %212 = shl i64 %208, 32
  %213 = add i64 %212, -8589934592
  %214 = and i64 %209, 4294967295
  %215 = or i64 %213, %214
  store i64 %215, i64* %211, align 8
  %216 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 13
  store i32 316, i32* %216, align 8
  br label %217

217:                                              ; preds = %28, %173, %170, %283, %67, %196, %70, %66, %65, %64, %63, %62
  %218 = phi i32 [ %3, %196 ], [ %259, %283 ], [ 11, %70 ], [ %68, %67 ], [ 9, %66 ], [ 13, %65 ], [ 10, %64 ], [ 12, %63 ], [ 8, %62 ], [ %133, %170 ], [ %174, %173 ], [ %3, %28 ]
  %219 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 2
  %220 = load %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"** %219, align 8
  %221 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %220, i64 0, i32 1
  %222 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %220, i64 0, i32 1, i32 2
  %223 = load i8, i8* %222, align 4, !range !2
  %224 = icmp eq i8 %223, 0
  br i1 %224, label %246, label %225

225:                                              ; preds = %217
  %226 = icmp ult i32 %218, 256
  br i1 %226, label %227, label %245

227:                                              ; preds = %225
  %228 = trunc i32 %218 to i8
  %229 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %220, i64 0, i32 1, i32 1
  %230 = load i32, i32* %229, align 8
  %231 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %220, i64 0, i32 1, i32 0, i32 1
  %232 = load i64, i64* %231, align 8
  %233 = trunc i64 %232 to i32
  %234 = icmp slt i32 %230, %233
  br i1 %234, label %237, label %235

235:                                              ; preds = %227
  tail call void @_ZN2v88internal13LiteralBuffer12ExpandBufferEv(%"class.v8::internal::LiteralBuffer"* %221) #8
  %236 = load i32, i32* %229, align 8
  br label %237

237:                                              ; preds = %235, %227
  %238 = phi i32 [ %230, %227 ], [ %236, %235 ]
  %239 = sext i32 %238 to i64
  %240 = getelementptr inbounds %"class.v8::internal::LiteralBuffer", %"class.v8::internal::LiteralBuffer"* %221, i64 0, i32 0, i32 0
  %241 = load i8*, i8** %240, align 8
  %242 = getelementptr inbounds i8, i8* %241, i64 %239
  store i8 %228, i8* %242, align 1
  %243 = load i32, i32* %229, align 8
  %244 = add nsw i32 %243, 1
  store i32 %244, i32* %229, align 8
  br label %247

245:                                              ; preds = %225
  tail call void @_ZN2v88internal13LiteralBuffer16ConvertToTwoByteEv(%"class.v8::internal::LiteralBuffer"* %221) #8
  br label %246

246:                                              ; preds = %245, %217
  tail call void @_ZN2v88internal13LiteralBuffer14AddTwoByteCharEj(%"class.v8::internal::LiteralBuffer"* %221, i32 %218) #8
  br label %247

247:                                              ; preds = %28, %28, %28, %99, %95, %246, %237, %283, %67, %32, %58
  %248 = phi i1 [ true, %58 ], [ true, %32 ], [ false, %67 ], [ false, %283 ], [ true, %237 ], [ true, %246 ], [ false, %95 ], [ false, %99 ], [ true, %28 ], [ true, %28 ], [ true, %28 ]
  ret i1 %248

249:                                              ; preds = %125
  %250 = or i32 %130, 32
  %251 = add nsw i32 %250, -49
  %252 = icmp ugt i32 %251, 5
  %253 = add nsw i32 %250, -39
  %254 = icmp slt i32 %253, 0
  %255 = or i1 %252, %254
  br i1 %255, label %95, label %256

256:                                              ; preds = %249, %125
  %257 = phi i32 [ %130, %125 ], [ %253, %249 ]
  %258 = shl nsw i32 %107, 4
  %259 = add i32 %257, %258
  %260 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %4, align 8
  %261 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %260, i64 0, i32 2
  %262 = load i16*, i16** %261, align 8
  %263 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %260, i64 0, i32 3
  %264 = load i16*, i16** %263, align 8
  %265 = icmp ult i16* %262, %264
  br i1 %265, label %280, label %266, !prof !4

266:                                              ; preds = %256
  %267 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %260, i64 0, i32 6
  %268 = load i8, i8* %267, align 8, !range !2
  %269 = icmp eq i8 %268, 0
  br i1 %269, label %270, label %283

270:                                              ; preds = %266
  %271 = bitcast %"class.v8::internal::Utf16CharacterStream"* %260 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %272 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %271, align 8
  %273 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %272, i64 5
  %274 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %273, align 8
  %275 = tail call zeroext i1 %274(%"class.v8::internal::Utf16CharacterStream"* %260) #8
  %276 = load i16*, i16** %261, align 8
  br i1 %275, label %277, label %283

277:                                              ; preds = %270
  %278 = load i16, i16* %276, align 2
  %279 = zext i16 %278 to i32
  br label %283

280:                                              ; preds = %256
  %281 = load i16, i16* %262, align 2
  %282 = zext i16 %281 to i32
  br label %283

283:                                              ; preds = %280, %277, %270, %266
  %284 = phi i16* [ %262, %280 ], [ %276, %277 ], [ %262, %266 ], [ %276, %270 ]
  %285 = phi i32 [ %282, %280 ], [ %279, %277 ], [ -1, %266 ], [ -1, %270 ]
  %286 = getelementptr inbounds i16, i16* %284, i64 1
  store i16* %286, i16** %261, align 8
  store i32 %285, i32* %2, align 8
  %287 = icmp eq i32 %259, -1
  br i1 %287, label %247, label %217

288:                                              ; preds = %161
  %289 = shl i32 %138, 3
  %290 = add nuw nsw i32 %289, %166
  %291 = icmp sgt i32 %290, 255
  br i1 %291, label %173, label %292

292:                                              ; preds = %288
  %293 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %4, align 8
  %294 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %293, i64 0, i32 2
  %295 = load i16*, i16** %294, align 8
  %296 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %293, i64 0, i32 3
  %297 = load i16*, i16** %296, align 8
  %298 = icmp ult i16* %295, %297
  br i1 %298, label %313, label %299, !prof !4

299:                                              ; preds = %292
  %300 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %293, i64 0, i32 6
  %301 = load i8, i8* %300, align 8, !range !2
  %302 = icmp eq i8 %301, 0
  br i1 %302, label %303, label %316

303:                                              ; preds = %299
  %304 = bitcast %"class.v8::internal::Utf16CharacterStream"* %293 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %305 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %304, align 8
  %306 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %305, i64 5
  %307 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %306, align 8
  %308 = tail call zeroext i1 %307(%"class.v8::internal::Utf16CharacterStream"* %293) #8
  %309 = load i16*, i16** %294, align 8
  br i1 %308, label %310, label %316

310:                                              ; preds = %303
  %311 = load i16, i16* %309, align 2
  %312 = zext i16 %311 to i32
  br label %316

313:                                              ; preds = %292
  %314 = load i16, i16* %295, align 2
  %315 = zext i16 %314 to i32
  br label %316

316:                                              ; preds = %313, %310, %303, %299
  %317 = phi i16* [ %295, %313 ], [ %309, %310 ], [ %295, %299 ], [ %309, %303 ]
  %318 = phi i32 [ %315, %313 ], [ %312, %310 ], [ -1, %299 ], [ -1, %303 ]
  %319 = getelementptr inbounds i16, i16* %317, i64 1
  store i16* %319, i16** %294, align 8
  store i32 %318, i32* %2, align 8
  br label %173
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i8 @_ZN2v88internal7Scanner15ScanPrivateNameEv(%"class.v8::internal::Scanner"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 2
  %3 = load %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"** %2, align 8
  %4 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %3, i64 0, i32 1, i32 1
  store i32 0, i32* %4, align 8
  %5 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %3, i64 0, i32 1, i32 2
  store i8 1, i8* %5, align 4
  %6 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 4
  %7 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %7, i64 0, i32 2
  %9 = load i16*, i16** %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %7, i64 0, i32 3
  %11 = load i16*, i16** %10, align 8
  %12 = icmp ult i16* %9, %11
  br i1 %12, label %25, label %13, !prof !4

13:                                               ; preds = %1
  %14 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %7, i64 0, i32 6
  %15 = load i8, i8* %14, align 8, !range !2
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %17, label %36

17:                                               ; preds = %13
  %18 = bitcast %"class.v8::internal::Utf16CharacterStream"* %7 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %19 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %18, align 8
  %20 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %19, i64 5
  %21 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %20, align 8
  %22 = tail call zeroext i1 %21(%"class.v8::internal::Utf16CharacterStream"* %7) #8
  br i1 %22, label %23, label %36

23:                                               ; preds = %17
  %24 = load i16*, i16** %8, align 8
  br label %25

25:                                               ; preds = %1, %23
  %26 = phi i16* [ %24, %23 ], [ %9, %1 ]
  %27 = load i16, i16* %26, align 2
  %28 = zext i16 %27 to i32
  %29 = icmp ult i16 %27, 256
  br i1 %29, label %30, label %36

30:                                               ; preds = %25
  %31 = zext i16 %27 to i64
  %32 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN2v88internalL17kOneByteCharFlagsE, i64 0, i64 %31
  %33 = load i8, i8* %32, align 1
  %34 = and i8 %33, 1
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %39, label %62

36:                                               ; preds = %13, %17, %25
  %37 = phi i32 [ %28, %25 ], [ -1, %17 ], [ -1, %13 ]
  %38 = tail call zeroext i1 @_ZN2v88internal21IsIdentifierStartSlowEj(i32 %37) #8
  br i1 %38, label %62, label %39

39:                                               ; preds = %30, %36
  %40 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %6, align 8
  %41 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %40, i64 0, i32 4
  %42 = load i64, i64* %41, align 8
  %43 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %40, i64 0, i32 2
  %44 = bitcast i16** %43 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %40, i64 0, i32 1
  %47 = bitcast i16** %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = sub i64 %45, %48
  %50 = lshr exact i64 %49, 1
  %51 = add i64 %50, %42
  %52 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 14
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %381

55:                                               ; preds = %39
  %56 = add i64 %51, 4294967295
  store i32 272, i32* %52, align 4
  %57 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 15
  %58 = bitcast %"struct.v8::internal::Scanner::Location"* %57 to i64*
  %59 = shl i64 %51, 32
  %60 = and i64 %56, 4294967295
  %61 = or i64 %60, %59
  store i64 %61, i64* %58, align 8
  br label %381

62:                                               ; preds = %30, %36
  %63 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 5
  %64 = load i32, i32* %63, align 8
  %65 = load %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"** %2, align 8
  %66 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %65, i64 0, i32 1
  %67 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %65, i64 0, i32 1, i32 2
  %68 = load i8, i8* %67, align 4, !range !2
  %69 = icmp eq i8 %68, 0
  br i1 %69, label %91, label %70

70:                                               ; preds = %62
  %71 = icmp ult i32 %64, 256
  br i1 %71, label %72, label %90

72:                                               ; preds = %70
  %73 = trunc i32 %64 to i8
  %74 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %65, i64 0, i32 1, i32 1
  %75 = load i32, i32* %74, align 8
  %76 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %65, i64 0, i32 1, i32 0, i32 1
  %77 = load i64, i64* %76, align 8
  %78 = trunc i64 %77 to i32
  %79 = icmp slt i32 %75, %78
  br i1 %79, label %82, label %80

80:                                               ; preds = %72
  tail call void @_ZN2v88internal13LiteralBuffer12ExpandBufferEv(%"class.v8::internal::LiteralBuffer"* %66) #8
  %81 = load i32, i32* %74, align 8
  br label %82

82:                                               ; preds = %80, %72
  %83 = phi i32 [ %75, %72 ], [ %81, %80 ]
  %84 = sext i32 %83 to i64
  %85 = getelementptr inbounds %"class.v8::internal::LiteralBuffer", %"class.v8::internal::LiteralBuffer"* %66, i64 0, i32 0, i32 0
  %86 = load i8*, i8** %85, align 8
  %87 = getelementptr inbounds i8, i8* %86, i64 %84
  store i8 %73, i8* %87, align 1
  %88 = load i32, i32* %74, align 8
  %89 = add nsw i32 %88, 1
  store i32 %89, i32* %74, align 8
  br label %92

90:                                               ; preds = %70
  tail call void @_ZN2v88internal13LiteralBuffer16ConvertToTwoByteEv(%"class.v8::internal::LiteralBuffer"* %66) #8
  br label %91

91:                                               ; preds = %90, %62
  tail call void @_ZN2v88internal13LiteralBuffer14AddTwoByteCharEj(%"class.v8::internal::LiteralBuffer"* %66, i32 %64) #8
  br label %92

92:                                               ; preds = %91, %82
  %93 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %6, align 8
  %94 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %93, i64 0, i32 2
  %95 = load i16*, i16** %94, align 8
  %96 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %93, i64 0, i32 3
  %97 = load i16*, i16** %96, align 8
  %98 = icmp ult i16* %95, %97
  br i1 %98, label %113, label %99, !prof !4

99:                                               ; preds = %92
  %100 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %93, i64 0, i32 6
  %101 = load i8, i8* %100, align 8, !range !2
  %102 = icmp eq i8 %101, 0
  br i1 %102, label %103, label %110

103:                                              ; preds = %99
  %104 = bitcast %"class.v8::internal::Utf16CharacterStream"* %93 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %105 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %104, align 8
  %106 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %105, i64 5
  %107 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %106, align 8
  %108 = tail call zeroext i1 %107(%"class.v8::internal::Utf16CharacterStream"* %93) #8
  %109 = load i16*, i16** %94, align 8
  br i1 %108, label %113, label %110

110:                                              ; preds = %99, %103
  %111 = phi i16* [ %109, %103 ], [ %95, %99 ]
  %112 = getelementptr inbounds i16, i16* %111, i64 1
  store i16* %112, i16** %94, align 8
  store i32 -1, i32* %63, align 8
  br label %373

113:                                              ; preds = %103, %92
  %114 = phi i16* [ %95, %92 ], [ %109, %103 ]
  %115 = load i16, i16* %114, align 2
  %116 = zext i16 %115 to i32
  %117 = getelementptr inbounds i16, i16* %114, i64 1
  store i16* %117, i16** %94, align 8
  store i32 %116, i32* %63, align 8
  %118 = icmp ult i16 %115, 128
  br i1 %118, label %119, label %373, !prof !4

119:                                              ; preds = %113
  %120 = icmp eq i16 %115, 92
  br i1 %120, label %268, label %121, !prof !3

121:                                              ; preds = %119
  %122 = zext i16 %115 to i64
  %123 = getelementptr inbounds [128 x i8], [128 x i8]* @_ZN2v88internalL20character_scan_flagsE, i64 0, i64 %122
  %124 = load i8, i8* %123, align 1
  %125 = lshr i8 %124, 1
  %126 = trunc i16 %115 to i8
  %127 = load %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"** %2, align 8
  %128 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %127, i64 0, i32 1
  %129 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %127, i64 0, i32 1, i32 1
  %130 = load i32, i32* %129, align 8
  %131 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %127, i64 0, i32 1, i32 0, i32 1
  %132 = load i64, i64* %131, align 8
  %133 = trunc i64 %132 to i32
  %134 = icmp slt i32 %130, %133
  br i1 %134, label %137, label %135

135:                                              ; preds = %121
  tail call void @_ZN2v88internal13LiteralBuffer12ExpandBufferEv(%"class.v8::internal::LiteralBuffer"* %128) #8
  %136 = load i32, i32* %129, align 8
  br label %137

137:                                              ; preds = %135, %121
  %138 = phi i32 [ %130, %121 ], [ %136, %135 ]
  %139 = sext i32 %138 to i64
  %140 = getelementptr inbounds %"class.v8::internal::LiteralBuffer", %"class.v8::internal::LiteralBuffer"* %128, i64 0, i32 0, i32 0
  %141 = load i8*, i8** %140, align 8
  %142 = getelementptr inbounds i8, i8* %141, i64 %139
  store i8 %126, i8* %142, align 1
  %143 = load i32, i32* %129, align 8
  %144 = add nsw i32 %143, 1
  store i32 %144, i32* %129, align 8
  %145 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %6, align 8
  %146 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %145, i64 0, i32 2
  %147 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %145, i64 0, i32 3
  %148 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %145, i64 0, i32 6
  %149 = bitcast %"class.v8::internal::Utf16CharacterStream"* %145 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  br label %150

150:                                              ; preds = %199, %137
  %151 = phi i8 [ %125, %137 ], [ %192, %199 ]
  %152 = load i16*, i16** %146, align 8
  %153 = load i16*, i16** %147, align 8
  %154 = icmp eq i16* %152, %153
  br i1 %154, label %191, label %155

155:                                              ; preds = %150, %181
  %156 = phi i8 [ %166, %181 ], [ %151, %150 ]
  %157 = phi i16* [ %189, %181 ], [ %152, %150 ]
  %158 = load i16, i16* %157, align 2
  %159 = icmp ugt i16 %158, 127
  br i1 %159, label %160, label %162, !prof !3

160:                                              ; preds = %155
  %161 = or i8 %156, 16
  br label %191

162:                                              ; preds = %155
  %163 = zext i16 %158 to i64
  %164 = getelementptr inbounds [128 x i8], [128 x i8]* @_ZN2v88internalL20character_scan_flagsE, i64 0, i64 %163
  %165 = load i8, i8* %164, align 1
  %166 = or i8 %165, %156
  %167 = and i8 %165, 1
  %168 = icmp eq i8 %167, 0
  br i1 %168, label %169, label %191

169:                                              ; preds = %162
  %170 = trunc i16 %158 to i8
  %171 = load %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"** %2, align 8
  %172 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %171, i64 0, i32 1
  %173 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %171, i64 0, i32 1, i32 1
  %174 = load i32, i32* %173, align 8
  %175 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %171, i64 0, i32 1, i32 0, i32 1
  %176 = load i64, i64* %175, align 8
  %177 = trunc i64 %176 to i32
  %178 = icmp slt i32 %174, %177
  br i1 %178, label %181, label %179

179:                                              ; preds = %169
  tail call void @_ZN2v88internal13LiteralBuffer12ExpandBufferEv(%"class.v8::internal::LiteralBuffer"* %172) #8
  %180 = load i32, i32* %173, align 8
  br label %181

181:                                              ; preds = %179, %169
  %182 = phi i32 [ %174, %169 ], [ %180, %179 ]
  %183 = sext i32 %182 to i64
  %184 = getelementptr inbounds %"class.v8::internal::LiteralBuffer", %"class.v8::internal::LiteralBuffer"* %172, i64 0, i32 0, i32 0
  %185 = load i8*, i8** %184, align 8
  %186 = getelementptr inbounds i8, i8* %185, i64 %183
  store i8 %170, i8* %186, align 1
  %187 = load i32, i32* %173, align 8
  %188 = add nsw i32 %187, 1
  store i32 %188, i32* %173, align 8
  %189 = getelementptr inbounds i16, i16* %157, i64 1
  %190 = icmp eq i16* %189, %153
  br i1 %190, label %191, label %155

191:                                              ; preds = %181, %162, %160, %150
  %192 = phi i8 [ %151, %150 ], [ %161, %160 ], [ %166, %162 ], [ %166, %181 ]
  %193 = phi i16* [ %152, %150 ], [ %157, %160 ], [ %153, %181 ], [ %157, %162 ]
  %194 = load i16*, i16** %147, align 8
  %195 = icmp eq i16* %193, %194
  br i1 %195, label %196, label %209

196:                                              ; preds = %191
  store i16* %193, i16** %146, align 8
  %197 = load i8, i8* %148, align 8, !range !2
  %198 = icmp eq i8 %197, 0
  br i1 %198, label %199, label %206

199:                                              ; preds = %196
  %200 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %149, align 8
  %201 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %200, i64 5
  %202 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %201, align 8
  %203 = tail call zeroext i1 %202(%"class.v8::internal::Utf16CharacterStream"* %145) #8
  br i1 %203, label %150, label %204

204:                                              ; preds = %199
  %205 = load i16*, i16** %146, align 8
  br label %206

206:                                              ; preds = %196, %204
  %207 = phi i16* [ %205, %204 ], [ %193, %196 ]
  %208 = getelementptr inbounds i16, i16* %207, i64 1
  store i16* %208, i16** %146, align 8
  br label %213

209:                                              ; preds = %191
  %210 = getelementptr inbounds i16, i16* %193, i64 1
  store i16* %210, i16** %146, align 8
  %211 = load i16, i16* %193, align 2
  %212 = zext i16 %211 to i32
  br label %213

213:                                              ; preds = %209, %206
  %214 = phi i32 [ %212, %209 ], [ -1, %206 ]
  store i32 %214, i32* %63, align 8
  %215 = and i8 %192, 16
  %216 = icmp ne i8 %215, 0
  %217 = and i8 %192, 2
  %218 = icmp eq i8 %217, 0
  %219 = xor i1 %218, true
  %220 = or i1 %216, %219
  br i1 %220, label %265, label %221, !prof !5

221:                                              ; preds = %213
  %222 = load %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"** %2, align 8
  %223 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %222, i64 0, i32 1, i32 0, i32 0
  %224 = load i8*, i8** %223, align 8
  %225 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %222, i64 0, i32 1, i32 1
  %226 = load i32, i32* %225, align 8
  %227 = add i32 %226, -2
  %228 = icmp ult i32 %227, 9
  br i1 %228, label %229, label %381

229:                                              ; preds = %221
  %230 = getelementptr inbounds i8, i8* %224, i64 1
  %231 = load i8, i8* %230, align 1
  %232 = zext i8 %231 to i64
  %233 = getelementptr inbounds [128 x i8], [128 x i8]* @_ZZN2v88internal18PerfectKeywordHash4HashEPKciE11asso_values, i64 0, i64 %232
  %234 = load i8, i8* %233, align 1
  %235 = zext i8 %234 to i32
  %236 = add nuw nsw i32 %226, %235
  %237 = load i8, i8* %224, align 1
  %238 = zext i8 %237 to i64
  %239 = getelementptr inbounds [128 x i8], [128 x i8]* @_ZZN2v88internal18PerfectKeywordHash4HashEPKciE11asso_values, i64 0, i64 %238
  %240 = load i8, i8* %239, align 1
  %241 = zext i8 %240 to i32
  %242 = add nuw nsw i32 %236, %241
  %243 = and i32 %242, 63
  %244 = zext i32 %243 to i64
  %245 = getelementptr inbounds [64 x i8], [64 x i8]* bitcast (<{ [56 x i8], [8 x i8] }>* @_ZN2v88internalL26kPerfectKeywordLengthTableE to [64 x i8]*), i64 0, i64 %244
  %246 = load i8, i8* %245, align 1
  %247 = zext i8 %246 to i32
  %248 = icmp eq i32 %226, %247
  br i1 %248, label %249, label %381

249:                                              ; preds = %229
  %250 = getelementptr inbounds [64 x %"struct.v8::internal::PerfectKeywordHashTableEntry"], [64 x %"struct.v8::internal::PerfectKeywordHashTableEntry"]* @_ZN2v88internalL24kPerfectKeywordHashTableE, i64 0, i64 %244, i32 0
  %251 = load i8*, i8** %250, align 16
  br label %252

252:                                              ; preds = %257, %249
  %253 = phi i8* [ %224, %249 ], [ %259, %257 ]
  %254 = phi i8* [ %251, %249 ], [ %258, %257 ]
  %255 = load i8, i8* %254, align 1
  %256 = icmp eq i8 %255, 0
  br i1 %256, label %262, label %257

257:                                              ; preds = %252
  %258 = getelementptr inbounds i8, i8* %254, i64 1
  %259 = getelementptr inbounds i8, i8* %253, i64 1
  %260 = load i8, i8* %253, align 1
  %261 = icmp eq i8 %255, %260
  br i1 %261, label %252, label %381

262:                                              ; preds = %252
  %263 = getelementptr inbounds [64 x %"struct.v8::internal::PerfectKeywordHashTableEntry"], [64 x %"struct.v8::internal::PerfectKeywordHashTableEntry"]* @_ZN2v88internalL24kPerfectKeywordHashTableE, i64 0, i64 %244, i32 1
  %264 = load i8, i8* %263, align 8
  br label %377

265:                                              ; preds = %213
  %266 = xor i1 %216, true
  %267 = or i1 %218, %266
  br i1 %216, label %373, label %381

268:                                              ; preds = %119
  %269 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %6, align 8
  %270 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %269, i64 0, i32 2
  %271 = load i16*, i16** %270, align 8
  %272 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %269, i64 0, i32 3
  %273 = load i16*, i16** %272, align 8
  %274 = icmp ult i16* %271, %273
  br i1 %274, label %289, label %275, !prof !4

275:                                              ; preds = %268
  %276 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %269, i64 0, i32 6
  %277 = load i8, i8* %276, align 8, !range !2
  %278 = icmp eq i8 %277, 0
  br i1 %278, label %279, label %286

279:                                              ; preds = %275
  %280 = bitcast %"class.v8::internal::Utf16CharacterStream"* %269 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %281 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %280, align 8
  %282 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %281, i64 5
  %283 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %282, align 8
  %284 = tail call zeroext i1 %283(%"class.v8::internal::Utf16CharacterStream"* %269) #8
  %285 = load i16*, i16** %270, align 8
  br i1 %284, label %289, label %286

286:                                              ; preds = %279, %275
  %287 = phi i16* [ %285, %279 ], [ %271, %275 ]
  %288 = getelementptr inbounds i16, i16* %287, i64 1
  store i16* %288, i16** %270, align 8
  store i32 -1, i32* %63, align 8
  br label %333

289:                                              ; preds = %279, %268
  %290 = phi i16* [ %271, %268 ], [ %285, %279 ]
  %291 = load i16, i16* %290, align 2
  %292 = zext i16 %291 to i32
  %293 = getelementptr inbounds i16, i16* %290, i64 1
  store i16* %293, i16** %270, align 8
  store i32 %292, i32* %63, align 8
  %294 = icmp eq i16 %291, 117
  br i1 %294, label %295, label %333

295:                                              ; preds = %289
  %296 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %6, align 8
  %297 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %296, i64 0, i32 2
  %298 = load i16*, i16** %297, align 8
  %299 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %296, i64 0, i32 3
  %300 = load i16*, i16** %299, align 8
  %301 = icmp ult i16* %298, %300
  br i1 %301, label %302, label %305, !prof !4

302:                                              ; preds = %295
  %303 = load i16, i16* %298, align 2
  %304 = zext i16 %303 to i32
  br label %319

305:                                              ; preds = %295
  %306 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %296, i64 0, i32 6
  %307 = load i8, i8* %306, align 8, !range !2
  %308 = icmp eq i8 %307, 0
  br i1 %308, label %309, label %319

309:                                              ; preds = %305
  %310 = bitcast %"class.v8::internal::Utf16CharacterStream"* %296 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %311 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %310, align 8
  %312 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %311, i64 5
  %313 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %312, align 8
  %314 = tail call zeroext i1 %313(%"class.v8::internal::Utf16CharacterStream"* %296) #8
  %315 = load i16*, i16** %297, align 8
  br i1 %314, label %316, label %319

316:                                              ; preds = %309
  %317 = load i16, i16* %315, align 2
  %318 = zext i16 %317 to i32
  br label %319

319:                                              ; preds = %316, %309, %305, %302
  %320 = phi i16* [ %298, %302 ], [ %315, %316 ], [ %298, %305 ], [ %315, %309 ]
  %321 = phi i32 [ %304, %302 ], [ %318, %316 ], [ -1, %305 ], [ -1, %309 ]
  %322 = getelementptr inbounds i16, i16* %320, i64 1
  store i16* %322, i16** %297, align 8
  store i32 %321, i32* %63, align 8
  %323 = tail call i32 @_ZN2v88internal7Scanner17ScanUnicodeEscapeILb0EEEjv(%"class.v8::internal::Scanner"* %0) #8
  %324 = icmp eq i32 %323, 92
  br i1 %324, label %380, label %325

325:                                              ; preds = %319
  %326 = icmp ult i32 %323, 256
  br i1 %326, label %327, label %333

327:                                              ; preds = %325
  %328 = zext i32 %323 to i64
  %329 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN2v88internalL17kOneByteCharFlagsE, i64 0, i64 %328
  %330 = load i8, i8* %329, align 1
  %331 = and i8 %330, 1
  %332 = icmp eq i8 %331, 0
  br i1 %332, label %380, label %336

333:                                              ; preds = %325, %289, %286
  %334 = phi i32 [ %323, %325 ], [ -1, %289 ], [ -1, %286 ]
  %335 = tail call zeroext i1 @_ZN2v88internal21IsIdentifierStartSlowEj(i32 %334) #8
  br i1 %335, label %336, label %380

336:                                              ; preds = %333, %327
  %337 = phi i32 [ %323, %327 ], [ %334, %333 ]
  %338 = phi i1 [ true, %327 ], [ false, %333 ]
  %339 = load %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"** %2, align 8
  %340 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %339, i64 0, i32 1
  %341 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %339, i64 0, i32 1, i32 2
  %342 = load i8, i8* %341, align 4, !range !2
  %343 = icmp eq i8 %342, 0
  br i1 %343, label %364, label %344

344:                                              ; preds = %336
  br i1 %338, label %345, label %363

345:                                              ; preds = %344
  %346 = trunc i32 %337 to i8
  %347 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %339, i64 0, i32 1, i32 1
  %348 = load i32, i32* %347, align 8
  %349 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %339, i64 0, i32 1, i32 0, i32 1
  %350 = load i64, i64* %349, align 8
  %351 = trunc i64 %350 to i32
  %352 = icmp slt i32 %348, %351
  br i1 %352, label %355, label %353

353:                                              ; preds = %345
  tail call void @_ZN2v88internal13LiteralBuffer12ExpandBufferEv(%"class.v8::internal::LiteralBuffer"* %340) #8
  %354 = load i32, i32* %347, align 8
  br label %355

355:                                              ; preds = %353, %345
  %356 = phi i32 [ %348, %345 ], [ %354, %353 ]
  %357 = sext i32 %356 to i64
  %358 = getelementptr inbounds %"class.v8::internal::LiteralBuffer", %"class.v8::internal::LiteralBuffer"* %340, i64 0, i32 0, i32 0
  %359 = load i8*, i8** %358, align 8
  %360 = getelementptr inbounds i8, i8* %359, i64 %357
  store i8 %346, i8* %360, align 1
  %361 = load i32, i32* %347, align 8
  %362 = add nsw i32 %361, 1
  store i32 %362, i32* %347, align 8
  br label %365

363:                                              ; preds = %344
  tail call void @_ZN2v88internal13LiteralBuffer16ConvertToTwoByteEv(%"class.v8::internal::LiteralBuffer"* %340) #8
  br label %364

364:                                              ; preds = %363, %336
  tail call void @_ZN2v88internal13LiteralBuffer14AddTwoByteCharEj(%"class.v8::internal::LiteralBuffer"* %340, i32 %337) #8
  br label %365

365:                                              ; preds = %364, %355
  %366 = icmp ult i32 %337, 128
  br i1 %366, label %367, label %373

367:                                              ; preds = %365
  %368 = zext i32 %337 to i64
  %369 = getelementptr inbounds [128 x i8], [128 x i8]* @_ZN2v88internalL20character_scan_flagsE, i64 0, i64 %368
  %370 = load i8, i8* %369, align 1
  %371 = and i8 %370, 2
  %372 = icmp eq i8 %371, 0
  br label %373

373:                                              ; preds = %110, %367, %365, %265, %113
  %374 = phi i1 [ %267, %265 ], [ true, %113 ], [ false, %365 ], [ %372, %367 ], [ true, %110 ]
  %375 = phi i1 [ false, %265 ], [ false, %113 ], [ true, %365 ], [ true, %367 ], [ false, %110 ]
  %376 = tail call zeroext i8 @_ZN2v88internal7Scanner32ScanIdentifierOrKeywordInnerSlowEbb(%"class.v8::internal::Scanner"* %0, i1 zeroext %375, i1 zeroext %374) #8
  br label %377

377:                                              ; preds = %262, %373
  %378 = phi i8 [ %376, %373 ], [ %264, %262 ]
  %379 = icmp eq i8 %378, 112
  br i1 %379, label %380, label %381

380:                                              ; preds = %327, %319, %333, %377
  br label %381

381:                                              ; preds = %257, %229, %221, %265, %380, %377, %55, %39
  %382 = phi i8 [ 112, %39 ], [ 112, %55 ], [ 112, %380 ], [ 111, %377 ], [ 111, %265 ], [ 111, %221 ], [ 111, %229 ], [ 111, %257 ]
  ret i8 %382
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i8 @_ZN2v88internal7Scanner16ScanTemplateSpanEv(%"class.v8::internal::Scanner"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 14
  %3 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 15
  %4 = load i32, i32* %2, align 4
  %5 = bitcast %"struct.v8::internal::Scanner::Location"* %3 to i64*
  %6 = load i64, i64* %5, align 4
  store i32 0, i32* %2, align 4
  store i64 4294967295, i64* %5, align 4
  %7 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 13
  %8 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 12
  %9 = load i32, i32* %7, align 4
  %10 = bitcast %"struct.v8::internal::Scanner::Location"* %8 to i64*
  %11 = load i64, i64* %10, align 4
  store i32 0, i32* %7, align 4
  store i64 4294967295, i64* %10, align 4
  %12 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 2
  %13 = load %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"** %12, align 8
  %14 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %13, i64 0, i32 1, i32 1
  store i32 0, i32* %14, align 8
  %15 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %13, i64 0, i32 1, i32 2
  store i8 1, i8* %15, align 4
  %16 = load %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"** %12, align 8
  %17 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %16, i64 0, i32 2, i32 1
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %16, i64 0, i32 2, i32 2
  store i8 1, i8* %18, align 4
  %19 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 5
  %20 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 4
  br label %21

21:                                               ; preds = %407, %1
  %22 = load i32, i32* %19, align 8
  switch i32 %22, label %291 [
    i32 96, label %23
    i32 36, label %47
    i32 92, label %121
    i32 -1, label %414
  ]

23:                                               ; preds = %21
  %24 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %20, align 8
  %25 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %24, i64 0, i32 2
  %26 = load i16*, i16** %25, align 8
  %27 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %24, i64 0, i32 3
  %28 = load i16*, i16** %27, align 8
  %29 = icmp ult i16* %26, %28
  br i1 %29, label %30, label %33, !prof !4

30:                                               ; preds = %23
  %31 = load i16, i16* %26, align 2
  %32 = zext i16 %31 to i32
  br label %408

33:                                               ; preds = %23
  %34 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %24, i64 0, i32 6
  %35 = load i8, i8* %34, align 8, !range !2
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %37, label %408

37:                                               ; preds = %33
  %38 = bitcast %"class.v8::internal::Utf16CharacterStream"* %24 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %39 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %38, align 8
  %40 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %39, i64 5
  %41 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %40, align 8
  %42 = tail call zeroext i1 %41(%"class.v8::internal::Utf16CharacterStream"* %24) #8
  %43 = load i16*, i16** %25, align 8
  br i1 %42, label %44, label %408

44:                                               ; preds = %37
  %45 = load i16, i16* %43, align 2
  %46 = zext i16 %45 to i32
  br label %408

47:                                               ; preds = %21
  %48 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %20, align 8
  %49 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %48, i64 0, i32 2
  %50 = load i16*, i16** %49, align 8
  %51 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %48, i64 0, i32 3
  %52 = load i16*, i16** %51, align 8
  %53 = icmp ult i16* %50, %52
  br i1 %53, label %66, label %54, !prof !4

54:                                               ; preds = %47
  %55 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %48, i64 0, i32 6
  %56 = load i8, i8* %55, align 8, !range !2
  %57 = icmp eq i8 %56, 0
  br i1 %57, label %58, label %291

58:                                               ; preds = %54
  %59 = bitcast %"class.v8::internal::Utf16CharacterStream"* %48 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %60 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %59, align 8
  %61 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %60, i64 5
  %62 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %61, align 8
  %63 = tail call zeroext i1 %62(%"class.v8::internal::Utf16CharacterStream"* %48) #8
  br i1 %63, label %64, label %291

64:                                               ; preds = %58
  %65 = load i16*, i16** %49, align 8
  br label %66

66:                                               ; preds = %47, %64
  %67 = phi i16* [ %65, %64 ], [ %50, %47 ]
  %68 = load i16, i16* %67, align 2
  %69 = icmp eq i16 %68, 123
  br i1 %69, label %70, label %291

70:                                               ; preds = %66
  %71 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %20, align 8
  %72 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %71, i64 0, i32 2
  %73 = load i16*, i16** %72, align 8
  %74 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %71, i64 0, i32 3
  %75 = load i16*, i16** %74, align 8
  %76 = icmp ult i16* %73, %75
  br i1 %76, label %77, label %80, !prof !4

77:                                               ; preds = %70
  %78 = load i16, i16* %73, align 2
  %79 = zext i16 %78 to i32
  br label %94

80:                                               ; preds = %70
  %81 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %71, i64 0, i32 6
  %82 = load i8, i8* %81, align 8, !range !2
  %83 = icmp eq i8 %82, 0
  br i1 %83, label %84, label %94

84:                                               ; preds = %80
  %85 = bitcast %"class.v8::internal::Utf16CharacterStream"* %71 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %86 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %85, align 8
  %87 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %86, i64 5
  %88 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %87, align 8
  %89 = tail call zeroext i1 %88(%"class.v8::internal::Utf16CharacterStream"* %71) #8
  %90 = load i16*, i16** %72, align 8
  br i1 %89, label %91, label %94

91:                                               ; preds = %84
  %92 = load i16, i16* %90, align 2
  %93 = zext i16 %92 to i32
  br label %94

94:                                               ; preds = %77, %80, %84, %91
  %95 = phi i16* [ %73, %77 ], [ %90, %91 ], [ %73, %80 ], [ %90, %84 ]
  %96 = phi i32 [ %79, %77 ], [ %93, %91 ], [ -1, %80 ], [ -1, %84 ]
  %97 = getelementptr inbounds i16, i16* %95, i64 1
  store i16* %97, i16** %72, align 8
  store i32 %96, i32* %19, align 8
  %98 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %20, align 8
  %99 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %98, i64 0, i32 2
  %100 = load i16*, i16** %99, align 8
  %101 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %98, i64 0, i32 3
  %102 = load i16*, i16** %101, align 8
  %103 = icmp ult i16* %100, %102
  br i1 %103, label %104, label %107, !prof !4

104:                                              ; preds = %94
  %105 = load i16, i16* %100, align 2
  %106 = zext i16 %105 to i32
  br label %408

107:                                              ; preds = %94
  %108 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %98, i64 0, i32 6
  %109 = load i8, i8* %108, align 8, !range !2
  %110 = icmp eq i8 %109, 0
  br i1 %110, label %111, label %408

111:                                              ; preds = %107
  %112 = bitcast %"class.v8::internal::Utf16CharacterStream"* %98 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %113 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %112, align 8
  %114 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %113, i64 5
  %115 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %114, align 8
  %116 = tail call zeroext i1 %115(%"class.v8::internal::Utf16CharacterStream"* %98) #8
  %117 = load i16*, i16** %99, align 8
  br i1 %116, label %118, label %408

118:                                              ; preds = %111
  %119 = load i16, i16* %117, align 2
  %120 = zext i16 %119 to i32
  br label %408

121:                                              ; preds = %21
  %122 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %20, align 8
  %123 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %122, i64 0, i32 2
  %124 = load i16*, i16** %123, align 8
  %125 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %122, i64 0, i32 3
  %126 = load i16*, i16** %125, align 8
  %127 = icmp ult i16* %124, %126
  br i1 %127, label %128, label %131, !prof !4

128:                                              ; preds = %121
  %129 = load i16, i16* %124, align 2
  %130 = zext i16 %129 to i32
  br label %145

131:                                              ; preds = %121
  %132 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %122, i64 0, i32 6
  %133 = load i8, i8* %132, align 8, !range !2
  %134 = icmp eq i8 %133, 0
  br i1 %134, label %135, label %145

135:                                              ; preds = %131
  %136 = bitcast %"class.v8::internal::Utf16CharacterStream"* %122 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %137 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %136, align 8
  %138 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %137, i64 5
  %139 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %138, align 8
  %140 = tail call zeroext i1 %139(%"class.v8::internal::Utf16CharacterStream"* %122) #8
  %141 = load i16*, i16** %123, align 8
  br i1 %140, label %142, label %145

142:                                              ; preds = %135
  %143 = load i16, i16* %141, align 2
  %144 = zext i16 %143 to i32
  br label %145

145:                                              ; preds = %128, %131, %135, %142
  %146 = phi i16* [ %124, %128 ], [ %141, %142 ], [ %124, %131 ], [ %141, %135 ]
  %147 = phi i32 [ %130, %128 ], [ %144, %142 ], [ -1, %131 ], [ -1, %135 ]
  %148 = getelementptr inbounds i16, i16* %146, i64 1
  store i16* %148, i16** %123, align 8
  store i32 %147, i32* %19, align 8
  %149 = load %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"** %12, align 8
  %150 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %149, i64 0, i32 2
  %151 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %149, i64 0, i32 2, i32 2
  %152 = load i8, i8* %151, align 4, !range !2
  %153 = icmp eq i8 %152, 0
  br i1 %153, label %171, label %154

154:                                              ; preds = %145
  %155 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %149, i64 0, i32 2, i32 1
  %156 = load i32, i32* %155, align 8
  %157 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %149, i64 0, i32 2, i32 0, i32 1
  %158 = load i64, i64* %157, align 8
  %159 = trunc i64 %158 to i32
  %160 = icmp slt i32 %156, %159
  br i1 %160, label %163, label %161

161:                                              ; preds = %154
  tail call void @_ZN2v88internal13LiteralBuffer12ExpandBufferEv(%"class.v8::internal::LiteralBuffer"* %150) #8
  %162 = load i32, i32* %155, align 8
  br label %163

163:                                              ; preds = %161, %154
  %164 = phi i32 [ %156, %154 ], [ %162, %161 ]
  %165 = sext i32 %164 to i64
  %166 = getelementptr inbounds %"class.v8::internal::LiteralBuffer", %"class.v8::internal::LiteralBuffer"* %150, i64 0, i32 0, i32 0
  %167 = load i8*, i8** %166, align 8
  %168 = getelementptr inbounds i8, i8* %167, i64 %165
  store i8 92, i8* %168, align 1
  %169 = load i32, i32* %155, align 8
  %170 = add nsw i32 %169, 1
  store i32 %170, i32* %155, align 8
  br label %172

171:                                              ; preds = %145
  tail call void @_ZN2v88internal13LiteralBuffer14AddTwoByteCharEj(%"class.v8::internal::LiteralBuffer"* %150, i32 92) #8
  br label %172

172:                                              ; preds = %163, %171
  %173 = load i32, i32* %19, align 8
  switch i32 %173, label %262 [
    i32 8232, label %174
    i32 13, label %174
    i32 10, label %174
    i32 8233, label %174
  ]

174:                                              ; preds = %172, %172, %172, %172
  %175 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %20, align 8
  %176 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %175, i64 0, i32 2
  %177 = load i16*, i16** %176, align 8
  %178 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %175, i64 0, i32 3
  %179 = load i16*, i16** %178, align 8
  %180 = icmp ult i16* %177, %179
  br i1 %180, label %181, label %184, !prof !4

181:                                              ; preds = %174
  %182 = load i16, i16* %177, align 2
  %183 = zext i16 %182 to i32
  br label %198

184:                                              ; preds = %174
  %185 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %175, i64 0, i32 6
  %186 = load i8, i8* %185, align 8, !range !2
  %187 = icmp eq i8 %186, 0
  br i1 %187, label %188, label %198

188:                                              ; preds = %184
  %189 = bitcast %"class.v8::internal::Utf16CharacterStream"* %175 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %190 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %189, align 8
  %191 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %190, i64 5
  %192 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %191, align 8
  %193 = tail call zeroext i1 %192(%"class.v8::internal::Utf16CharacterStream"* %175) #8
  %194 = load i16*, i16** %176, align 8
  br i1 %193, label %195, label %198

195:                                              ; preds = %188
  %196 = load i16, i16* %194, align 2
  %197 = zext i16 %196 to i32
  br label %198

198:                                              ; preds = %181, %184, %188, %195
  %199 = phi i16* [ %177, %181 ], [ %194, %195 ], [ %177, %184 ], [ %194, %188 ]
  %200 = phi i32 [ %183, %181 ], [ %197, %195 ], [ -1, %184 ], [ -1, %188 ]
  %201 = getelementptr inbounds i16, i16* %199, i64 1
  store i16* %201, i16** %176, align 8
  store i32 %200, i32* %19, align 8
  %202 = icmp eq i32 %173, 13
  br i1 %202, label %203, label %233

203:                                              ; preds = %198
  %204 = icmp eq i32 %200, 10
  br i1 %204, label %205, label %233

205:                                              ; preds = %203
  %206 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %20, align 8
  %207 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %206, i64 0, i32 2
  %208 = load i16*, i16** %207, align 8
  %209 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %206, i64 0, i32 3
  %210 = load i16*, i16** %209, align 8
  %211 = icmp ult i16* %208, %210
  br i1 %211, label %212, label %215, !prof !4

212:                                              ; preds = %205
  %213 = load i16, i16* %208, align 2
  %214 = zext i16 %213 to i32
  br label %229

215:                                              ; preds = %205
  %216 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %206, i64 0, i32 6
  %217 = load i8, i8* %216, align 8, !range !2
  %218 = icmp eq i8 %217, 0
  br i1 %218, label %219, label %229

219:                                              ; preds = %215
  %220 = bitcast %"class.v8::internal::Utf16CharacterStream"* %206 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %221 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %220, align 8
  %222 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %221, i64 5
  %223 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %222, align 8
  %224 = tail call zeroext i1 %223(%"class.v8::internal::Utf16CharacterStream"* %206) #8
  %225 = load i16*, i16** %207, align 8
  br i1 %224, label %226, label %229

226:                                              ; preds = %219
  %227 = load i16, i16* %225, align 2
  %228 = zext i16 %227 to i32
  br label %229

229:                                              ; preds = %212, %215, %219, %226
  %230 = phi i16* [ %208, %212 ], [ %225, %226 ], [ %208, %215 ], [ %225, %219 ]
  %231 = phi i32 [ %214, %212 ], [ %228, %226 ], [ -1, %215 ], [ -1, %219 ]
  %232 = getelementptr inbounds i16, i16* %230, i64 1
  store i16* %232, i16** %207, align 8
  store i32 %231, i32* %19, align 8
  br label %233

233:                                              ; preds = %203, %229, %198
  %234 = phi i32 [ %173, %198 ], [ 10, %229 ], [ 10, %203 ]
  %235 = load %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"** %12, align 8
  %236 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %235, i64 0, i32 2
  %237 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %235, i64 0, i32 2, i32 2
  %238 = load i8, i8* %237, align 4, !range !2
  %239 = icmp eq i8 %238, 0
  br i1 %239, label %261, label %240

240:                                              ; preds = %233
  %241 = icmp ult i32 %234, 256
  br i1 %241, label %242, label %260

242:                                              ; preds = %240
  %243 = trunc i32 %234 to i8
  %244 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %235, i64 0, i32 2, i32 1
  %245 = load i32, i32* %244, align 8
  %246 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %235, i64 0, i32 2, i32 0, i32 1
  %247 = load i64, i64* %246, align 8
  %248 = trunc i64 %247 to i32
  %249 = icmp slt i32 %245, %248
  br i1 %249, label %252, label %250

250:                                              ; preds = %242
  tail call void @_ZN2v88internal13LiteralBuffer12ExpandBufferEv(%"class.v8::internal::LiteralBuffer"* %236) #8
  %251 = load i32, i32* %244, align 8
  br label %252

252:                                              ; preds = %250, %242
  %253 = phi i32 [ %245, %242 ], [ %251, %250 ]
  %254 = sext i32 %253 to i64
  %255 = getelementptr inbounds %"class.v8::internal::LiteralBuffer", %"class.v8::internal::LiteralBuffer"* %236, i64 0, i32 0, i32 0
  %256 = load i8*, i8** %255, align 8
  %257 = getelementptr inbounds i8, i8* %256, i64 %254
  store i8 %243, i8* %257, align 1
  %258 = load i32, i32* %244, align 8
  %259 = add nsw i32 %258, 1
  store i32 %259, i32* %244, align 8
  br label %407

260:                                              ; preds = %240
  tail call void @_ZN2v88internal13LiteralBuffer16ConvertToTwoByteEv(%"class.v8::internal::LiteralBuffer"* %236) #8
  br label %261

261:                                              ; preds = %260, %233
  tail call void @_ZN2v88internal13LiteralBuffer14AddTwoByteCharEj(%"class.v8::internal::LiteralBuffer"* %236, i32 %234) #8
  br label %407

262:                                              ; preds = %172
  %263 = tail call zeroext i1 @_ZN2v88internal7Scanner10ScanEscapeILb1EEEbv(%"class.v8::internal::Scanner"* %0)
  %264 = load %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"** %12, align 8
  %265 = load i32, i32* %2, align 4
  %266 = icmp eq i32 %265, 0
  br i1 %266, label %278, label %267

267:                                              ; preds = %262
  %268 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %264, i64 0, i32 5
  %269 = load i32, i32* %268, align 4
  %270 = icmp eq i32 %269, 0
  br i1 %270, label %271, label %276

271:                                              ; preds = %267
  store i32 %265, i32* %268, align 4
  %272 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %264, i64 0, i32 6
  %273 = bitcast %"struct.v8::internal::Scanner::Location"* %272 to i64*
  %274 = load i64, i64* %5, align 4
  store i64 %274, i64* %273, align 8
  %275 = load %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"** %12, align 8
  br label %276

276:                                              ; preds = %271, %267
  %277 = phi %"struct.v8::internal::Scanner::TokenDesc"* [ %275, %271 ], [ %264, %267 ]
  store i32 0, i32* %2, align 4
  store i64 4294967295, i64* %5, align 4
  br label %278

278:                                              ; preds = %262, %276
  %279 = phi %"struct.v8::internal::Scanner::TokenDesc"* [ %264, %262 ], [ %277, %276 ]
  %280 = load i32, i32* %7, align 4
  %281 = icmp eq i32 %280, 0
  br i1 %281, label %407, label %282

282:                                              ; preds = %278
  %283 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %279, i64 0, i32 5
  %284 = load i32, i32* %283, align 4
  %285 = icmp eq i32 %284, 0
  br i1 %285, label %286, label %290

286:                                              ; preds = %282
  store i32 %280, i32* %283, align 4
  %287 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %279, i64 0, i32 6
  %288 = bitcast %"struct.v8::internal::Scanner::Location"* %287 to i64*
  %289 = load i64, i64* %10, align 4
  store i64 %289, i64* %288, align 8
  br label %290

290:                                              ; preds = %286, %282
  store i32 0, i32* %7, align 4
  store i64 4294967295, i64* %10, align 4
  br label %407

291:                                              ; preds = %54, %58, %66, %21
  %292 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %20, align 8
  %293 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %292, i64 0, i32 2
  %294 = load i16*, i16** %293, align 8
  %295 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %292, i64 0, i32 3
  %296 = load i16*, i16** %295, align 8
  %297 = icmp ult i16* %294, %296
  br i1 %297, label %298, label %301, !prof !4

298:                                              ; preds = %291
  %299 = load i16, i16* %294, align 2
  %300 = zext i16 %299 to i32
  br label %315

301:                                              ; preds = %291
  %302 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %292, i64 0, i32 6
  %303 = load i8, i8* %302, align 8, !range !2
  %304 = icmp eq i8 %303, 0
  br i1 %304, label %305, label %315

305:                                              ; preds = %301
  %306 = bitcast %"class.v8::internal::Utf16CharacterStream"* %292 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %307 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %306, align 8
  %308 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %307, i64 5
  %309 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %308, align 8
  %310 = tail call zeroext i1 %309(%"class.v8::internal::Utf16CharacterStream"* %292) #8
  %311 = load i16*, i16** %293, align 8
  br i1 %310, label %312, label %315

312:                                              ; preds = %305
  %313 = load i16, i16* %311, align 2
  %314 = zext i16 %313 to i32
  br label %315

315:                                              ; preds = %298, %301, %305, %312
  %316 = phi i16* [ %294, %298 ], [ %311, %312 ], [ %294, %301 ], [ %311, %305 ]
  %317 = phi i32 [ %300, %298 ], [ %314, %312 ], [ -1, %301 ], [ -1, %305 ]
  %318 = getelementptr inbounds i16, i16* %316, i64 1
  store i16* %318, i16** %293, align 8
  store i32 %317, i32* %19, align 8
  %319 = icmp eq i32 %22, 13
  br i1 %319, label %320, label %350

320:                                              ; preds = %315
  %321 = icmp eq i32 %317, 10
  br i1 %321, label %322, label %350

322:                                              ; preds = %320
  %323 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %20, align 8
  %324 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %323, i64 0, i32 2
  %325 = load i16*, i16** %324, align 8
  %326 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %323, i64 0, i32 3
  %327 = load i16*, i16** %326, align 8
  %328 = icmp ult i16* %325, %327
  br i1 %328, label %329, label %332, !prof !4

329:                                              ; preds = %322
  %330 = load i16, i16* %325, align 2
  %331 = zext i16 %330 to i32
  br label %346

332:                                              ; preds = %322
  %333 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %323, i64 0, i32 6
  %334 = load i8, i8* %333, align 8, !range !2
  %335 = icmp eq i8 %334, 0
  br i1 %335, label %336, label %346

336:                                              ; preds = %332
  %337 = bitcast %"class.v8::internal::Utf16CharacterStream"* %323 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %338 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %337, align 8
  %339 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %338, i64 5
  %340 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %339, align 8
  %341 = tail call zeroext i1 %340(%"class.v8::internal::Utf16CharacterStream"* %323) #8
  %342 = load i16*, i16** %324, align 8
  br i1 %341, label %343, label %346

343:                                              ; preds = %336
  %344 = load i16, i16* %342, align 2
  %345 = zext i16 %344 to i32
  br label %346

346:                                              ; preds = %329, %332, %336, %343
  %347 = phi i16* [ %325, %329 ], [ %342, %343 ], [ %325, %332 ], [ %342, %336 ]
  %348 = phi i32 [ %331, %329 ], [ %345, %343 ], [ -1, %332 ], [ -1, %336 ]
  %349 = getelementptr inbounds i16, i16* %347, i64 1
  store i16* %349, i16** %324, align 8
  store i32 %348, i32* %19, align 8
  br label %350

350:                                              ; preds = %320, %346, %315
  %351 = phi i32 [ %22, %315 ], [ 10, %346 ], [ 10, %320 ]
  %352 = load %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"** %12, align 8
  %353 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %352, i64 0, i32 2
  %354 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %352, i64 0, i32 2, i32 2
  %355 = load i8, i8* %354, align 4, !range !2
  %356 = icmp eq i8 %355, 0
  br i1 %356, label %378, label %357

357:                                              ; preds = %350
  %358 = icmp ult i32 %351, 256
  br i1 %358, label %359, label %377

359:                                              ; preds = %357
  %360 = trunc i32 %351 to i8
  %361 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %352, i64 0, i32 2, i32 1
  %362 = load i32, i32* %361, align 8
  %363 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %352, i64 0, i32 2, i32 0, i32 1
  %364 = load i64, i64* %363, align 8
  %365 = trunc i64 %364 to i32
  %366 = icmp slt i32 %362, %365
  br i1 %366, label %369, label %367

367:                                              ; preds = %359
  tail call void @_ZN2v88internal13LiteralBuffer12ExpandBufferEv(%"class.v8::internal::LiteralBuffer"* %353) #8
  %368 = load i32, i32* %361, align 8
  br label %369

369:                                              ; preds = %367, %359
  %370 = phi i32 [ %362, %359 ], [ %368, %367 ]
  %371 = sext i32 %370 to i64
  %372 = getelementptr inbounds %"class.v8::internal::LiteralBuffer", %"class.v8::internal::LiteralBuffer"* %353, i64 0, i32 0, i32 0
  %373 = load i8*, i8** %372, align 8
  %374 = getelementptr inbounds i8, i8* %373, i64 %371
  store i8 %360, i8* %374, align 1
  %375 = load i32, i32* %361, align 8
  %376 = add nsw i32 %375, 1
  store i32 %376, i32* %361, align 8
  br label %379

377:                                              ; preds = %357
  tail call void @_ZN2v88internal13LiteralBuffer16ConvertToTwoByteEv(%"class.v8::internal::LiteralBuffer"* %353) #8
  br label %378

378:                                              ; preds = %377, %350
  tail call void @_ZN2v88internal13LiteralBuffer14AddTwoByteCharEj(%"class.v8::internal::LiteralBuffer"* %353, i32 %351) #8
  br label %379

379:                                              ; preds = %369, %378
  %380 = load %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"** %12, align 8
  %381 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %380, i64 0, i32 1
  %382 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %380, i64 0, i32 1, i32 2
  %383 = load i8, i8* %382, align 4, !range !2
  %384 = icmp eq i8 %383, 0
  br i1 %384, label %406, label %385

385:                                              ; preds = %379
  %386 = icmp ult i32 %351, 256
  br i1 %386, label %387, label %405

387:                                              ; preds = %385
  %388 = trunc i32 %351 to i8
  %389 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %380, i64 0, i32 1, i32 1
  %390 = load i32, i32* %389, align 8
  %391 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %380, i64 0, i32 1, i32 0, i32 1
  %392 = load i64, i64* %391, align 8
  %393 = trunc i64 %392 to i32
  %394 = icmp slt i32 %390, %393
  br i1 %394, label %397, label %395

395:                                              ; preds = %387
  tail call void @_ZN2v88internal13LiteralBuffer12ExpandBufferEv(%"class.v8::internal::LiteralBuffer"* %381) #8
  %396 = load i32, i32* %389, align 8
  br label %397

397:                                              ; preds = %395, %387
  %398 = phi i32 [ %390, %387 ], [ %396, %395 ]
  %399 = sext i32 %398 to i64
  %400 = getelementptr inbounds %"class.v8::internal::LiteralBuffer", %"class.v8::internal::LiteralBuffer"* %381, i64 0, i32 0, i32 0
  %401 = load i8*, i8** %400, align 8
  %402 = getelementptr inbounds i8, i8* %401, i64 %399
  store i8 %388, i8* %402, align 1
  %403 = load i32, i32* %389, align 8
  %404 = add nsw i32 %403, 1
  store i32 %404, i32* %389, align 8
  br label %407

405:                                              ; preds = %385
  tail call void @_ZN2v88internal13LiteralBuffer16ConvertToTwoByteEv(%"class.v8::internal::LiteralBuffer"* %381) #8
  br label %406

406:                                              ; preds = %405, %379
  tail call void @_ZN2v88internal13LiteralBuffer14AddTwoByteCharEj(%"class.v8::internal::LiteralBuffer"* %381, i32 %351) #8
  br label %407

407:                                              ; preds = %406, %397, %290, %278, %261, %252
  br label %21

408:                                              ; preds = %118, %111, %107, %104, %44, %37, %33, %30
  %409 = phi i16* [ %26, %30 ], [ %43, %44 ], [ %26, %33 ], [ %43, %37 ], [ %100, %104 ], [ %117, %118 ], [ %100, %107 ], [ %117, %111 ]
  %410 = phi i16** [ %25, %30 ], [ %25, %44 ], [ %25, %33 ], [ %25, %37 ], [ %99, %104 ], [ %99, %118 ], [ %99, %107 ], [ %99, %111 ]
  %411 = phi i32 [ %32, %30 ], [ %46, %44 ], [ -1, %33 ], [ -1, %37 ], [ %106, %104 ], [ %120, %118 ], [ -1, %107 ], [ -1, %111 ]
  %412 = phi i8 [ 1, %30 ], [ 1, %44 ], [ 1, %33 ], [ 1, %37 ], [ 0, %104 ], [ 0, %118 ], [ 0, %107 ], [ 0, %111 ]
  %413 = getelementptr inbounds i16, i16* %409, i64 1
  store i16* %413, i16** %410, align 8
  store i32 %411, i32* %19, align 8
  br label %414

414:                                              ; preds = %21, %408
  %415 = phi i8 [ %412, %408 ], [ 0, %21 ]
  %416 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %20, align 8
  %417 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %416, i64 0, i32 4
  %418 = load i64, i64* %417, align 8
  %419 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %416, i64 0, i32 2
  %420 = bitcast i16** %419 to i64*
  %421 = load i64, i64* %420, align 8
  %422 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %416, i64 0, i32 1
  %423 = bitcast i16** %422 to i64*
  %424 = load i64, i64* %423, align 8
  %425 = sub i64 %421, %424
  %426 = lshr exact i64 %425, 1
  %427 = add i64 %426, %418
  %428 = trunc i64 %427 to i32
  %429 = add nsw i32 %428, -1
  %430 = load %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"** %12, align 8
  %431 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %430, i64 0, i32 0, i32 1
  store i32 %429, i32* %431, align 4
  %432 = load %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"** %12, align 8
  %433 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %432, i64 0, i32 3
  store i8 %415, i8* %433, align 8
  store i32 %9, i32* %7, align 4
  store i64 %11, i64* %10, align 4
  store i32 %4, i32* %2, align 4
  store i64 %6, i64* %5, align 4
  ret i8 %415
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2v88internal7Scanner10ScanEscapeILb1EEEbv(%"class.v8::internal::Scanner"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 5
  %3 = load i32, i32* %2, align 8
  tail call void @_ZN2v88internal7Scanner7AdvanceILb1EEEvv(%"class.v8::internal::Scanner"* %0)
  switch i32 %3, label %118 [
    i32 98, label %4
    i32 102, label %5
    i32 110, label %6
    i32 114, label %7
    i32 116, label %8
    i32 117, label %9
    i32 118, label %12
    i32 120, label %13
    i32 48, label %54
    i32 49, label %54
    i32 50, label %54
    i32 51, label %54
    i32 52, label %54
    i32 53, label %54
    i32 54, label %54
    i32 55, label %54
    i32 56, label %96
    i32 57, label %96
  ]

4:                                                ; preds = %1
  br label %118

5:                                                ; preds = %1
  br label %118

6:                                                ; preds = %1
  br label %118

7:                                                ; preds = %1
  br label %118

8:                                                ; preds = %1
  br label %118

9:                                                ; preds = %1
  %10 = tail call i32 @_ZN2v88internal7Scanner17ScanUnicodeEscapeILb1EEEjv(%"class.v8::internal::Scanner"* %0)
  %11 = icmp eq i32 %10, -1
  br i1 %11, label %148, label %118

12:                                               ; preds = %1
  br label %118

13:                                               ; preds = %1
  %14 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 4
  %15 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %14, align 8
  %16 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %15, i64 0, i32 4
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %15, i64 0, i32 2
  %19 = bitcast i16** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %15, i64 0, i32 1
  %22 = bitcast i16** %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = sub i64 %20, %23
  %25 = lshr exact i64 %24, 1
  %26 = add i64 %25, %17
  %27 = add i64 %26, 4294967293
  %28 = load i32, i32* %2, align 8
  %29 = add i32 %28, -48
  %30 = icmp ult i32 %29, 10
  br i1 %30, label %49, label %31

31:                                               ; preds = %13
  %32 = or i32 %29, 32
  %33 = add i32 %32, -49
  %34 = icmp ugt i32 %33, 5
  %35 = add i32 %32, -39
  %36 = icmp slt i32 %35, 0
  %37 = or i1 %34, %36
  br i1 %37, label %38, label %49

38:                                               ; preds = %150, %31
  %39 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 14
  %40 = load i32, i32* %39, align 4
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %148

42:                                               ; preds = %38
  store i32 351, i32* %39, align 4
  %43 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 15
  %44 = bitcast %"struct.v8::internal::Scanner::Location"* %43 to i64*
  %45 = shl i64 %26, 32
  %46 = add i64 %45, 4294967296
  %47 = and i64 %27, 4294967295
  %48 = or i64 %46, %47
  store i64 %48, i64* %44, align 8
  br label %148

49:                                               ; preds = %31, %13
  %50 = phi i32 [ %29, %13 ], [ %35, %31 ]
  tail call void @_ZN2v88internal7Scanner7AdvanceILb1EEEvv(%"class.v8::internal::Scanner"* %0) #8
  %51 = load i32, i32* %2, align 8
  %52 = add i32 %51, -48
  %53 = icmp ult i32 %52, 10
  br i1 %53, label %157, label %150

54:                                               ; preds = %1, %1, %1, %1, %1, %1, %1, %1
  %55 = add nsw i32 %3, -48
  %56 = load i32, i32* %2, align 8
  %57 = add i32 %56, -48
  %58 = icmp ugt i32 %57, 7
  br i1 %58, label %67, label %59

59:                                               ; preds = %54
  %60 = shl i32 %55, 3
  %61 = add nuw nsw i32 %57, %60
  %62 = icmp sgt i32 %61, 255
  br i1 %62, label %67, label %63

63:                                               ; preds = %59
  tail call void @_ZN2v88internal7Scanner7AdvanceILb1EEEvv(%"class.v8::internal::Scanner"* %0) #8
  %64 = load i32, i32* %2, align 8
  %65 = add i32 %64, -48
  %66 = icmp ugt i32 %65, 7
  br i1 %66, label %72, label %162

67:                                               ; preds = %59, %54
  %68 = icmp eq i32 %3, 48
  br i1 %68, label %69, label %72

69:                                               ; preds = %67
  %70 = and i32 %56, -2
  %71 = icmp eq i32 %70, 56
  br i1 %71, label %72, label %118

72:                                               ; preds = %67, %162, %63, %166, %69
  %73 = phi i32 [ 0, %69 ], [ %55, %67 ], [ %164, %166 ], [ %61, %63 ], [ %61, %162 ]
  %74 = phi i64 [ 4294967294, %69 ], [ 4294967294, %67 ], [ 4294967292, %166 ], [ 4294967293, %63 ], [ 4294967293, %162 ]
  %75 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 4
  %76 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %75, align 8
  %77 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %76, i64 0, i32 4
  %78 = load i64, i64* %77, align 8
  %79 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %76, i64 0, i32 2
  %80 = bitcast i16** %79 to i64*
  %81 = load i64, i64* %80, align 8
  %82 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %76, i64 0, i32 1
  %83 = bitcast i16** %82 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = sub i64 %81, %84
  %86 = lshr exact i64 %85, 1
  %87 = add i64 %86, %78
  %88 = add i64 %74, %87
  %89 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 12
  %90 = bitcast %"struct.v8::internal::Scanner::Location"* %89 to i64*
  %91 = shl i64 %87, 32
  %92 = add i64 %91, -8589934592
  %93 = and i64 %88, 4294967295
  %94 = or i64 %92, %93
  store i64 %94, i64* %90, align 8
  %95 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 13
  store i32 318, i32* %95, align 8
  br label %118

96:                                               ; preds = %1, %1
  %97 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 4
  %98 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %97, align 8
  %99 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %98, i64 0, i32 4
  %100 = load i64, i64* %99, align 8
  %101 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %98, i64 0, i32 2
  %102 = bitcast i16** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %98, i64 0, i32 1
  %105 = bitcast i16** %104 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = sub i64 %103, %106
  %108 = lshr exact i64 %107, 1
  %109 = add i64 %108, %100
  %110 = add i64 %109, 4294967293
  %111 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 12
  %112 = bitcast %"struct.v8::internal::Scanner::Location"* %111 to i64*
  %113 = shl i64 %109, 32
  %114 = add i64 %113, -8589934592
  %115 = and i64 %110, 4294967295
  %116 = or i64 %114, %115
  store i64 %116, i64* %112, align 8
  %117 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 13
  store i32 319, i32* %117, align 8
  br label %118

118:                                              ; preds = %72, %69, %157, %9, %1, %96, %12, %8, %7, %6, %5, %4
  %119 = phi i32 [ %3, %1 ], [ %3, %96 ], [ %160, %157 ], [ 11, %12 ], [ %10, %9 ], [ 9, %8 ], [ 13, %7 ], [ 10, %6 ], [ 12, %5 ], [ 8, %4 ], [ %55, %69 ], [ %73, %72 ]
  %120 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 2
  %121 = load %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"** %120, align 8
  %122 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %121, i64 0, i32 1
  %123 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %121, i64 0, i32 1, i32 2
  %124 = load i8, i8* %123, align 4, !range !2
  %125 = icmp eq i8 %124, 0
  br i1 %125, label %147, label %126

126:                                              ; preds = %118
  %127 = icmp ult i32 %119, 256
  br i1 %127, label %128, label %146

128:                                              ; preds = %126
  %129 = trunc i32 %119 to i8
  %130 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %121, i64 0, i32 1, i32 1
  %131 = load i32, i32* %130, align 8
  %132 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %121, i64 0, i32 1, i32 0, i32 1
  %133 = load i64, i64* %132, align 8
  %134 = trunc i64 %133 to i32
  %135 = icmp slt i32 %131, %134
  br i1 %135, label %138, label %136

136:                                              ; preds = %128
  tail call void @_ZN2v88internal13LiteralBuffer12ExpandBufferEv(%"class.v8::internal::LiteralBuffer"* %122) #8
  %137 = load i32, i32* %130, align 8
  br label %138

138:                                              ; preds = %136, %128
  %139 = phi i32 [ %131, %128 ], [ %137, %136 ]
  %140 = sext i32 %139 to i64
  %141 = getelementptr inbounds %"class.v8::internal::LiteralBuffer", %"class.v8::internal::LiteralBuffer"* %122, i64 0, i32 0, i32 0
  %142 = load i8*, i8** %141, align 8
  %143 = getelementptr inbounds i8, i8* %142, i64 %140
  store i8 %129, i8* %143, align 1
  %144 = load i32, i32* %130, align 8
  %145 = add nsw i32 %144, 1
  store i32 %145, i32* %130, align 8
  br label %148

146:                                              ; preds = %126
  tail call void @_ZN2v88internal13LiteralBuffer16ConvertToTwoByteEv(%"class.v8::internal::LiteralBuffer"* %122) #8
  br label %147

147:                                              ; preds = %146, %118
  tail call void @_ZN2v88internal13LiteralBuffer14AddTwoByteCharEj(%"class.v8::internal::LiteralBuffer"* %122, i32 %119) #8
  br label %148

148:                                              ; preds = %42, %38, %147, %138, %157, %9
  %149 = phi i1 [ false, %9 ], [ false, %157 ], [ true, %138 ], [ true, %147 ], [ false, %38 ], [ false, %42 ]
  ret i1 %149

150:                                              ; preds = %49
  %151 = or i32 %52, 32
  %152 = add i32 %151, -49
  %153 = icmp ugt i32 %152, 5
  %154 = add i32 %151, -39
  %155 = icmp slt i32 %154, 0
  %156 = or i1 %153, %155
  br i1 %156, label %38, label %157

157:                                              ; preds = %150, %49
  %158 = phi i32 [ %52, %49 ], [ %154, %150 ]
  %159 = shl i32 %50, 4
  %160 = add i32 %158, %159
  tail call void @_ZN2v88internal7Scanner7AdvanceILb1EEEvv(%"class.v8::internal::Scanner"* %0) #8
  %161 = icmp eq i32 %160, -1
  br i1 %161, label %148, label %118

162:                                              ; preds = %63
  %163 = shl i32 %61, 3
  %164 = add nuw nsw i32 %65, %163
  %165 = icmp sgt i32 %164, 255
  br i1 %165, label %72, label %166

166:                                              ; preds = %162
  tail call void @_ZN2v88internal7Scanner7AdvanceILb1EEEvv(%"class.v8::internal::Scanner"* %0) #8
  br label %72
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal7Scanner31ScanDigitsWithNumericSeparatorsEPFbjEb(%"class.v8::internal::Scanner"* nocapture, i1 (i32)* nocapture, i1 zeroext) local_unnamed_addr #0 align 2 {
  br i1 %2, label %4, label %8

4:                                                ; preds = %3
  %5 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 5
  %6 = load i32, i32* %5, align 8
  %7 = tail call zeroext i1 %1(i32 %6) #8
  br i1 %7, label %8, label %153

8:                                                ; preds = %4, %3
  %9 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 5
  %10 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 2
  %11 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 4
  %12 = load i32, i32* %9, align 8
  br label %13

13:                                               ; preds = %126, %8
  %14 = phi i32 [ %12, %8 ], [ %127, %126 ]
  %15 = phi i1 [ false, %8 ], [ %128, %126 ]
  %16 = tail call zeroext i1 %1(i32 %14) #8
  %17 = load i32, i32* %9, align 8
  %18 = icmp eq i32 %17, 95
  br i1 %16, label %20, label %19

19:                                               ; preds = %13
  br i1 %18, label %21, label %129

20:                                               ; preds = %13
  br i1 %18, label %21, label %68

21:                                               ; preds = %19, %20
  %22 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %11, align 8
  %23 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %22, i64 0, i32 2
  %24 = load i16*, i16** %23, align 8
  %25 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %22, i64 0, i32 3
  %26 = load i16*, i16** %25, align 8
  %27 = icmp ult i16* %24, %26
  br i1 %27, label %39, label %28, !prof !4

28:                                               ; preds = %21
  %29 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %22, i64 0, i32 6
  %30 = load i8, i8* %29, align 8, !range !2
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %32, label %120

32:                                               ; preds = %28
  %33 = bitcast %"class.v8::internal::Utf16CharacterStream"* %22 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %34 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %33, align 8
  %35 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %34, i64 5
  %36 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %35, align 8
  %37 = tail call zeroext i1 %36(%"class.v8::internal::Utf16CharacterStream"* %22) #8
  %38 = load i16*, i16** %23, align 8
  br i1 %37, label %39, label %120

39:                                               ; preds = %32, %21
  %40 = phi i16* [ %24, %21 ], [ %38, %32 ]
  %41 = load i16, i16* %40, align 2
  %42 = zext i16 %41 to i32
  %43 = getelementptr inbounds i16, i16* %40, i64 1
  store i16* %43, i16** %23, align 8
  store i32 %42, i32* %9, align 8
  %44 = icmp eq i16 %41, 95
  br i1 %44, label %45, label %126

45:                                               ; preds = %39
  %46 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %11, align 8
  %47 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %46, i64 0, i32 4
  %48 = load i64, i64* %47, align 8
  %49 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %46, i64 0, i32 2
  %50 = bitcast i16** %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %46, i64 0, i32 1
  %53 = bitcast i16** %52 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = sub i64 %51, %54
  %56 = lshr exact i64 %55, 1
  %57 = add i64 %56, %48
  %58 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 14
  %59 = load i32, i32* %58, align 4
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %153

61:                                               ; preds = %45
  %62 = add i64 %57, 4294967295
  store i32 225, i32* %58, align 4
  %63 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 15
  %64 = bitcast %"struct.v8::internal::Scanner::Location"* %63 to i64*
  %65 = shl i64 %57, 32
  %66 = and i64 %62, 4294967295
  %67 = or i64 %66, %65
  store i64 %67, i64* %64, align 8
  br label %153

68:                                               ; preds = %20
  %69 = load %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"** %10, align 8
  %70 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %69, i64 0, i32 1
  %71 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %69, i64 0, i32 1, i32 2
  %72 = load i8, i8* %71, align 4, !range !2
  %73 = icmp eq i8 %72, 0
  br i1 %73, label %95, label %74

74:                                               ; preds = %68
  %75 = icmp ult i32 %17, 256
  br i1 %75, label %76, label %94

76:                                               ; preds = %74
  %77 = trunc i32 %17 to i8
  %78 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %69, i64 0, i32 1, i32 1
  %79 = load i32, i32* %78, align 8
  %80 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %69, i64 0, i32 1, i32 0, i32 1
  %81 = load i64, i64* %80, align 8
  %82 = trunc i64 %81 to i32
  %83 = icmp slt i32 %79, %82
  br i1 %83, label %86, label %84

84:                                               ; preds = %76
  tail call void @_ZN2v88internal13LiteralBuffer12ExpandBufferEv(%"class.v8::internal::LiteralBuffer"* %70) #8
  %85 = load i32, i32* %78, align 8
  br label %86

86:                                               ; preds = %84, %76
  %87 = phi i32 [ %79, %76 ], [ %85, %84 ]
  %88 = sext i32 %87 to i64
  %89 = getelementptr inbounds %"class.v8::internal::LiteralBuffer", %"class.v8::internal::LiteralBuffer"* %70, i64 0, i32 0, i32 0
  %90 = load i8*, i8** %89, align 8
  %91 = getelementptr inbounds i8, i8* %90, i64 %88
  store i8 %77, i8* %91, align 1
  %92 = load i32, i32* %78, align 8
  %93 = add nsw i32 %92, 1
  store i32 %93, i32* %78, align 8
  br label %96

94:                                               ; preds = %74
  tail call void @_ZN2v88internal13LiteralBuffer16ConvertToTwoByteEv(%"class.v8::internal::LiteralBuffer"* %70) #8
  br label %95

95:                                               ; preds = %94, %68
  tail call void @_ZN2v88internal13LiteralBuffer14AddTwoByteCharEj(%"class.v8::internal::LiteralBuffer"* %70, i32 %17) #8
  br label %96

96:                                               ; preds = %95, %86
  %97 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %11, align 8
  %98 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %97, i64 0, i32 2
  %99 = load i16*, i16** %98, align 8
  %100 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %97, i64 0, i32 3
  %101 = load i16*, i16** %100, align 8
  %102 = icmp ult i16* %99, %101
  br i1 %102, label %103, label %106, !prof !4

103:                                              ; preds = %96
  %104 = load i16, i16* %99, align 2
  %105 = zext i16 %104 to i32
  br label %120

106:                                              ; preds = %96
  %107 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %97, i64 0, i32 6
  %108 = load i8, i8* %107, align 8, !range !2
  %109 = icmp eq i8 %108, 0
  br i1 %109, label %110, label %120

110:                                              ; preds = %106
  %111 = bitcast %"class.v8::internal::Utf16CharacterStream"* %97 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %112 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %111, align 8
  %113 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %112, i64 5
  %114 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %113, align 8
  %115 = tail call zeroext i1 %114(%"class.v8::internal::Utf16CharacterStream"* %97) #8
  %116 = load i16*, i16** %98, align 8
  br i1 %115, label %117, label %120

117:                                              ; preds = %110
  %118 = load i16, i16* %116, align 2
  %119 = zext i16 %118 to i32
  br label %120

120:                                              ; preds = %117, %110, %106, %103, %32, %28
  %121 = phi i16* [ %38, %32 ], [ %24, %28 ], [ %99, %103 ], [ %116, %117 ], [ %99, %106 ], [ %116, %110 ]
  %122 = phi i16** [ %23, %32 ], [ %23, %28 ], [ %98, %103 ], [ %98, %117 ], [ %98, %106 ], [ %98, %110 ]
  %123 = phi i32 [ -1, %32 ], [ -1, %28 ], [ %105, %103 ], [ %119, %117 ], [ -1, %106 ], [ -1, %110 ]
  %124 = phi i1 [ true, %32 ], [ true, %28 ], [ false, %103 ], [ false, %117 ], [ false, %106 ], [ false, %110 ]
  %125 = getelementptr inbounds i16, i16* %121, i64 1
  store i16* %125, i16** %122, align 8
  store i32 %123, i32* %9, align 8
  br label %126

126:                                              ; preds = %120, %39
  %127 = phi i32 [ %42, %39 ], [ %123, %120 ]
  %128 = phi i1 [ true, %39 ], [ %124, %120 ]
  br label %13

129:                                              ; preds = %19
  br i1 %15, label %130, label %153

130:                                              ; preds = %129
  %131 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %11, align 8
  %132 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %131, i64 0, i32 4
  %133 = load i64, i64* %132, align 8
  %134 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %131, i64 0, i32 2
  %135 = bitcast i16** %134 to i64*
  %136 = load i64, i64* %135, align 8
  %137 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %131, i64 0, i32 1
  %138 = bitcast i16** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = sub i64 %136, %139
  %141 = lshr exact i64 %140, 1
  %142 = add i64 %141, %133
  %143 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 14
  %144 = load i32, i32* %143, align 4
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %146, label %153

146:                                              ; preds = %130
  %147 = add i64 %142, 4294967295
  store i32 224, i32* %143, align 4
  %148 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 15
  %149 = bitcast %"struct.v8::internal::Scanner::Location"* %148 to i64*
  %150 = shl i64 %142, 32
  %151 = and i64 %147, 4294967295
  %152 = or i64 %151, %150
  store i64 %152, i64* %149, align 8
  br label %153

153:                                              ; preds = %146, %130, %61, %45, %129, %4
  %154 = phi i1 [ false, %4 ], [ true, %129 ], [ false, %45 ], [ false, %61 ], [ false, %130 ], [ false, %146 ]
  ret i1 %154
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal7Scanner17ScanDecimalDigitsEb(%"class.v8::internal::Scanner"* nocapture, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 5
  br i1 %1, label %11, label %4

4:                                                ; preds = %2
  %5 = load i32, i32* %3, align 8
  %6 = add i32 %5, -48
  %7 = icmp ult i32 %6, 10
  br i1 %7, label %8, label %211

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 2
  %10 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 4
  br label %155

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 2
  %13 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 4
  %14 = load i32, i32* %3, align 8
  br label %15

15:                                               ; preds = %128, %11
  %16 = phi i32 [ %14, %11 ], [ %129, %128 ]
  %17 = phi i1 [ false, %11 ], [ %130, %128 ]
  %18 = add i32 %16, -48
  %19 = icmp ult i32 %18, 10
  %20 = icmp eq i32 %16, 95
  br i1 %19, label %22, label %21

21:                                               ; preds = %15
  br i1 %20, label %23, label %131

22:                                               ; preds = %15
  br i1 %20, label %23, label %70

23:                                               ; preds = %22, %21
  %24 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %13, align 8
  %25 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %24, i64 0, i32 2
  %26 = load i16*, i16** %25, align 8
  %27 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %24, i64 0, i32 3
  %28 = load i16*, i16** %27, align 8
  %29 = icmp ult i16* %26, %28
  br i1 %29, label %41, label %30, !prof !4

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %24, i64 0, i32 6
  %32 = load i8, i8* %31, align 8, !range !2
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %34, label %122

34:                                               ; preds = %30
  %35 = bitcast %"class.v8::internal::Utf16CharacterStream"* %24 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %36 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %35, align 8
  %37 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %36, i64 5
  %38 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %37, align 8
  %39 = tail call zeroext i1 %38(%"class.v8::internal::Utf16CharacterStream"* %24) #8
  %40 = load i16*, i16** %25, align 8
  br i1 %39, label %41, label %122

41:                                               ; preds = %34, %23
  %42 = phi i16* [ %26, %23 ], [ %40, %34 ]
  %43 = load i16, i16* %42, align 2
  %44 = zext i16 %43 to i32
  %45 = getelementptr inbounds i16, i16* %42, i64 1
  store i16* %45, i16** %25, align 8
  store i32 %44, i32* %3, align 8
  %46 = icmp eq i16 %43, 95
  br i1 %46, label %47, label %128

47:                                               ; preds = %41
  %48 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %13, align 8
  %49 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %48, i64 0, i32 4
  %50 = load i64, i64* %49, align 8
  %51 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %48, i64 0, i32 2
  %52 = bitcast i16** %51 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %48, i64 0, i32 1
  %55 = bitcast i16** %54 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = sub i64 %53, %56
  %58 = lshr exact i64 %57, 1
  %59 = add i64 %58, %50
  %60 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 14
  %61 = load i32, i32* %60, align 4
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %238

63:                                               ; preds = %47
  %64 = add i64 %59, 4294967295
  store i32 225, i32* %60, align 4
  %65 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 15
  %66 = bitcast %"struct.v8::internal::Scanner::Location"* %65 to i64*
  %67 = shl i64 %59, 32
  %68 = and i64 %64, 4294967295
  %69 = or i64 %68, %67
  store i64 %69, i64* %66, align 8
  br label %238

70:                                               ; preds = %22
  %71 = load %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"** %12, align 8
  %72 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %71, i64 0, i32 1
  %73 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %71, i64 0, i32 1, i32 2
  %74 = load i8, i8* %73, align 4, !range !2
  %75 = icmp eq i8 %74, 0
  br i1 %75, label %97, label %76

76:                                               ; preds = %70
  %77 = icmp ult i32 %16, 256
  br i1 %77, label %78, label %96

78:                                               ; preds = %76
  %79 = trunc i32 %16 to i8
  %80 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %71, i64 0, i32 1, i32 1
  %81 = load i32, i32* %80, align 8
  %82 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %71, i64 0, i32 1, i32 0, i32 1
  %83 = load i64, i64* %82, align 8
  %84 = trunc i64 %83 to i32
  %85 = icmp slt i32 %81, %84
  br i1 %85, label %88, label %86

86:                                               ; preds = %78
  tail call void @_ZN2v88internal13LiteralBuffer12ExpandBufferEv(%"class.v8::internal::LiteralBuffer"* %72) #8
  %87 = load i32, i32* %80, align 8
  br label %88

88:                                               ; preds = %86, %78
  %89 = phi i32 [ %81, %78 ], [ %87, %86 ]
  %90 = sext i32 %89 to i64
  %91 = getelementptr inbounds %"class.v8::internal::LiteralBuffer", %"class.v8::internal::LiteralBuffer"* %72, i64 0, i32 0, i32 0
  %92 = load i8*, i8** %91, align 8
  %93 = getelementptr inbounds i8, i8* %92, i64 %90
  store i8 %79, i8* %93, align 1
  %94 = load i32, i32* %80, align 8
  %95 = add nsw i32 %94, 1
  store i32 %95, i32* %80, align 8
  br label %98

96:                                               ; preds = %76
  tail call void @_ZN2v88internal13LiteralBuffer16ConvertToTwoByteEv(%"class.v8::internal::LiteralBuffer"* %72) #8
  br label %97

97:                                               ; preds = %96, %70
  tail call void @_ZN2v88internal13LiteralBuffer14AddTwoByteCharEj(%"class.v8::internal::LiteralBuffer"* %72, i32 %16) #8
  br label %98

98:                                               ; preds = %97, %88
  %99 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %13, align 8
  %100 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %99, i64 0, i32 2
  %101 = load i16*, i16** %100, align 8
  %102 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %99, i64 0, i32 3
  %103 = load i16*, i16** %102, align 8
  %104 = icmp ult i16* %101, %103
  br i1 %104, label %105, label %108, !prof !4

105:                                              ; preds = %98
  %106 = load i16, i16* %101, align 2
  %107 = zext i16 %106 to i32
  br label %122

108:                                              ; preds = %98
  %109 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %99, i64 0, i32 6
  %110 = load i8, i8* %109, align 8, !range !2
  %111 = icmp eq i8 %110, 0
  br i1 %111, label %112, label %122

112:                                              ; preds = %108
  %113 = bitcast %"class.v8::internal::Utf16CharacterStream"* %99 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %114 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %113, align 8
  %115 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %114, i64 5
  %116 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %115, align 8
  %117 = tail call zeroext i1 %116(%"class.v8::internal::Utf16CharacterStream"* %99) #8
  %118 = load i16*, i16** %100, align 8
  br i1 %117, label %119, label %122

119:                                              ; preds = %112
  %120 = load i16, i16* %118, align 2
  %121 = zext i16 %120 to i32
  br label %122

122:                                              ; preds = %105, %108, %112, %119, %30, %34
  %123 = phi i16* [ %40, %34 ], [ %26, %30 ], [ %101, %105 ], [ %118, %119 ], [ %101, %108 ], [ %118, %112 ]
  %124 = phi i16** [ %25, %34 ], [ %25, %30 ], [ %100, %105 ], [ %100, %119 ], [ %100, %108 ], [ %100, %112 ]
  %125 = phi i32 [ -1, %34 ], [ -1, %30 ], [ %107, %105 ], [ %121, %119 ], [ -1, %108 ], [ -1, %112 ]
  %126 = phi i1 [ true, %34 ], [ true, %30 ], [ false, %105 ], [ false, %119 ], [ false, %108 ], [ false, %112 ]
  %127 = getelementptr inbounds i16, i16* %123, i64 1
  store i16* %127, i16** %124, align 8
  store i32 %125, i32* %3, align 8
  br label %128

128:                                              ; preds = %122, %41
  %129 = phi i32 [ %44, %41 ], [ %125, %122 ]
  %130 = phi i1 [ true, %41 ], [ %126, %122 ]
  br label %15

131:                                              ; preds = %21
  br i1 %17, label %132, label %238

132:                                              ; preds = %131
  %133 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %13, align 8
  %134 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %133, i64 0, i32 4
  %135 = load i64, i64* %134, align 8
  %136 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %133, i64 0, i32 2
  %137 = bitcast i16** %136 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %133, i64 0, i32 1
  %140 = bitcast i16** %139 to i64*
  %141 = load i64, i64* %140, align 8
  %142 = sub i64 %138, %141
  %143 = lshr exact i64 %142, 1
  %144 = add i64 %143, %135
  %145 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 14
  %146 = load i32, i32* %145, align 4
  %147 = icmp eq i32 %146, 0
  br i1 %147, label %148, label %238

148:                                              ; preds = %132
  %149 = add i64 %144, 4294967295
  store i32 224, i32* %145, align 4
  %150 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 15
  %151 = bitcast %"struct.v8::internal::Scanner::Location"* %150 to i64*
  %152 = shl i64 %144, 32
  %153 = and i64 %149, 4294967295
  %154 = or i64 %153, %152
  store i64 %154, i64* %151, align 8
  br label %238

155:                                              ; preds = %8, %202
  %156 = phi i32 [ %5, %8 ], [ %205, %202 ]
  %157 = load %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"** %9, align 8
  %158 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %157, i64 0, i32 1
  %159 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %157, i64 0, i32 1, i32 2
  %160 = load i8, i8* %159, align 4, !range !2
  %161 = icmp eq i8 %160, 0
  br i1 %161, label %180, label %162

162:                                              ; preds = %155
  %163 = trunc i32 %156 to i8
  %164 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %157, i64 0, i32 1, i32 1
  %165 = load i32, i32* %164, align 8
  %166 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %157, i64 0, i32 1, i32 0, i32 1
  %167 = load i64, i64* %166, align 8
  %168 = trunc i64 %167 to i32
  %169 = icmp slt i32 %165, %168
  br i1 %169, label %172, label %170

170:                                              ; preds = %162
  tail call void @_ZN2v88internal13LiteralBuffer12ExpandBufferEv(%"class.v8::internal::LiteralBuffer"* %158) #8
  %171 = load i32, i32* %164, align 8
  br label %172

172:                                              ; preds = %170, %162
  %173 = phi i32 [ %165, %162 ], [ %171, %170 ]
  %174 = sext i32 %173 to i64
  %175 = getelementptr inbounds %"class.v8::internal::LiteralBuffer", %"class.v8::internal::LiteralBuffer"* %158, i64 0, i32 0, i32 0
  %176 = load i8*, i8** %175, align 8
  %177 = getelementptr inbounds i8, i8* %176, i64 %174
  store i8 %163, i8* %177, align 1
  %178 = load i32, i32* %164, align 8
  %179 = add nsw i32 %178, 1
  store i32 %179, i32* %164, align 8
  br label %181

180:                                              ; preds = %155
  tail call void @_ZN2v88internal13LiteralBuffer14AddTwoByteCharEj(%"class.v8::internal::LiteralBuffer"* %158, i32 %156) #8
  br label %181

181:                                              ; preds = %180, %172
  %182 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %10, align 8
  %183 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %182, i64 0, i32 2
  %184 = load i16*, i16** %183, align 8
  %185 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %182, i64 0, i32 3
  %186 = load i16*, i16** %185, align 8
  %187 = icmp ult i16* %184, %186
  br i1 %187, label %202, label %188, !prof !4

188:                                              ; preds = %181
  %189 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %182, i64 0, i32 6
  %190 = load i8, i8* %189, align 8, !range !2
  %191 = icmp eq i8 %190, 0
  br i1 %191, label %192, label %199

192:                                              ; preds = %188
  %193 = bitcast %"class.v8::internal::Utf16CharacterStream"* %182 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %194 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %193, align 8
  %195 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %194, i64 5
  %196 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %195, align 8
  %197 = tail call zeroext i1 %196(%"class.v8::internal::Utf16CharacterStream"* %182) #8
  %198 = load i16*, i16** %183, align 8
  br i1 %197, label %202, label %199

199:                                              ; preds = %192, %188
  %200 = phi i16* [ %198, %192 ], [ %184, %188 ]
  %201 = getelementptr inbounds i16, i16* %200, i64 1
  store i16* %201, i16** %183, align 8
  store i32 -1, i32* %3, align 8
  br label %238

202:                                              ; preds = %192, %181
  %203 = phi i16* [ %184, %181 ], [ %198, %192 ]
  %204 = load i16, i16* %203, align 2
  %205 = zext i16 %204 to i32
  %206 = getelementptr inbounds i16, i16* %203, i64 1
  store i16* %206, i16** %183, align 8
  store i32 %205, i32* %3, align 8
  %207 = add nsw i32 %205, -48
  %208 = icmp ult i32 %207, 10
  br i1 %208, label %155, label %209

209:                                              ; preds = %202
  %210 = zext i16 %204 to i32
  br label %211

211:                                              ; preds = %209, %4
  %212 = phi i32 [ %5, %4 ], [ %210, %209 ]
  %213 = icmp eq i32 %212, 95
  br i1 %213, label %214, label %238

214:                                              ; preds = %211
  %215 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 4
  %216 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %215, align 8
  %217 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %216, i64 0, i32 4
  %218 = load i64, i64* %217, align 8
  %219 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %216, i64 0, i32 2
  %220 = bitcast i16** %219 to i64*
  %221 = load i64, i64* %220, align 8
  %222 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %216, i64 0, i32 1
  %223 = bitcast i16** %222 to i64*
  %224 = load i64, i64* %223, align 8
  %225 = sub i64 %221, %224
  %226 = lshr exact i64 %225, 1
  %227 = add i64 %226, %218
  %228 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 14
  %229 = load i32, i32* %228, align 4
  %230 = icmp eq i32 %229, 0
  br i1 %230, label %231, label %238

231:                                              ; preds = %214
  %232 = add i64 %227, 4294967295
  store i32 272, i32* %228, align 4
  %233 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 15
  %234 = bitcast %"struct.v8::internal::Scanner::Location"* %233 to i64*
  %235 = shl i64 %227, 32
  %236 = and i64 %232, 4294967295
  %237 = or i64 %236, %235
  store i64 %237, i64* %234, align 8
  br label %238

238:                                              ; preds = %199, %231, %214, %148, %132, %131, %63, %47, %211
  %239 = phi i1 [ true, %211 ], [ true, %131 ], [ false, %47 ], [ false, %63 ], [ false, %132 ], [ false, %148 ], [ false, %214 ], [ false, %231 ], [ true, %199 ]
  ret i1 %239
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal7Scanner37ScanDecimalAsSmiWithNumericSeparatorsEPm(%"class.v8::internal::Scanner"* nocapture, i64* nocapture) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 5
  %4 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 4
  %5 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 2
  br label %6

6:                                                ; preds = %34, %2
  %7 = phi i1 [ false, %2 ], [ %35, %34 ]
  %8 = load i32, i32* %3, align 8
  %9 = add i32 %8, -48
  %10 = icmp ult i32 %9, 10
  br i1 %10, label %65, label %11

11:                                               ; preds = %6
  %12 = icmp eq i32 %8, 95
  br i1 %12, label %13, label %125

13:                                               ; preds = %11
  %14 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %4, align 8
  %15 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %14, i64 0, i32 2
  %16 = load i16*, i16** %15, align 8
  %17 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %14, i64 0, i32 3
  %18 = load i16*, i16** %17, align 8
  %19 = icmp ult i16* %16, %18
  br i1 %19, label %36, label %20, !prof !4

20:                                               ; preds = %13
  %21 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %14, i64 0, i32 6
  %22 = load i8, i8* %21, align 8, !range !2
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %24, label %31

24:                                               ; preds = %20
  %25 = bitcast %"class.v8::internal::Utf16CharacterStream"* %14 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %26 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %25, align 8
  %27 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %26, i64 5
  %28 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %27, align 8
  %29 = tail call zeroext i1 %28(%"class.v8::internal::Utf16CharacterStream"* %14) #8
  %30 = load i16*, i16** %15, align 8
  br i1 %29, label %36, label %31

31:                                               ; preds = %20, %24
  %32 = phi i16* [ %30, %24 ], [ %16, %20 ]
  %33 = getelementptr inbounds i16, i16* %32, i64 1
  store i16* %33, i16** %15, align 8
  store i32 -1, i32* %3, align 8
  br label %34

34:                                               ; preds = %31, %124, %115, %36
  %35 = phi i1 [ true, %36 ], [ false, %115 ], [ false, %124 ], [ true, %31 ]
  br label %6

36:                                               ; preds = %24, %13
  %37 = phi i16* [ %16, %13 ], [ %30, %24 ]
  %38 = load i16, i16* %37, align 2
  %39 = zext i16 %38 to i32
  %40 = getelementptr inbounds i16, i16* %37, i64 1
  store i16* %40, i16** %15, align 8
  store i32 %39, i32* %3, align 8
  %41 = icmp eq i16 %38, 95
  br i1 %41, label %42, label %34

42:                                               ; preds = %36
  %43 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %4, align 8
  %44 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %43, i64 0, i32 4
  %45 = load i64, i64* %44, align 8
  %46 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %43, i64 0, i32 2
  %47 = bitcast i16** %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %43, i64 0, i32 1
  %50 = bitcast i16** %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = sub i64 %48, %51
  %53 = lshr exact i64 %52, 1
  %54 = add i64 %53, %45
  %55 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 14
  %56 = load i32, i32* %55, align 4
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %149

58:                                               ; preds = %42
  %59 = add i64 %54, 4294967295
  store i32 225, i32* %55, align 4
  %60 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 15
  %61 = bitcast %"struct.v8::internal::Scanner::Location"* %60 to i64*
  %62 = shl i64 %54, 32
  %63 = and i64 %59, 4294967295
  %64 = or i64 %63, %62
  store i64 %64, i64* %61, align 8
  br label %149

65:                                               ; preds = %6
  %66 = load i64, i64* %1, align 8
  %67 = mul i64 %66, 10
  %68 = zext i32 %9 to i64
  %69 = add i64 %67, %68
  store i64 %69, i64* %1, align 8
  %70 = load i32, i32* %3, align 8
  %71 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %4, align 8
  %72 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %71, i64 0, i32 2
  %73 = load i16*, i16** %72, align 8
  %74 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %71, i64 0, i32 3
  %75 = load i16*, i16** %74, align 8
  %76 = icmp ult i16* %73, %75
  br i1 %76, label %77, label %80, !prof !4

77:                                               ; preds = %65
  %78 = load i16, i16* %73, align 2
  %79 = zext i16 %78 to i32
  br label %94

80:                                               ; preds = %65
  %81 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %71, i64 0, i32 6
  %82 = load i8, i8* %81, align 8, !range !2
  %83 = icmp eq i8 %82, 0
  br i1 %83, label %84, label %94

84:                                               ; preds = %80
  %85 = bitcast %"class.v8::internal::Utf16CharacterStream"* %71 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %86 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %85, align 8
  %87 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %86, i64 5
  %88 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %87, align 8
  %89 = tail call zeroext i1 %88(%"class.v8::internal::Utf16CharacterStream"* %71) #8
  %90 = load i16*, i16** %72, align 8
  br i1 %89, label %91, label %94

91:                                               ; preds = %84
  %92 = load i16, i16* %90, align 2
  %93 = zext i16 %92 to i32
  br label %94

94:                                               ; preds = %77, %80, %84, %91
  %95 = phi i16* [ %73, %77 ], [ %90, %91 ], [ %73, %80 ], [ %90, %84 ]
  %96 = phi i32 [ %79, %77 ], [ %93, %91 ], [ -1, %80 ], [ -1, %84 ]
  %97 = getelementptr inbounds i16, i16* %95, i64 1
  store i16* %97, i16** %72, align 8
  store i32 %96, i32* %3, align 8
  %98 = load %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"** %5, align 8
  %99 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %98, i64 0, i32 1
  %100 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %98, i64 0, i32 1, i32 2
  %101 = load i8, i8* %100, align 4, !range !2
  %102 = icmp eq i8 %101, 0
  br i1 %102, label %124, label %103

103:                                              ; preds = %94
  %104 = icmp ult i32 %70, 256
  br i1 %104, label %105, label %123

105:                                              ; preds = %103
  %106 = trunc i32 %70 to i8
  %107 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %98, i64 0, i32 1, i32 1
  %108 = load i32, i32* %107, align 8
  %109 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %98, i64 0, i32 1, i32 0, i32 1
  %110 = load i64, i64* %109, align 8
  %111 = trunc i64 %110 to i32
  %112 = icmp slt i32 %108, %111
  br i1 %112, label %115, label %113

113:                                              ; preds = %105
  tail call void @_ZN2v88internal13LiteralBuffer12ExpandBufferEv(%"class.v8::internal::LiteralBuffer"* %99) #8
  %114 = load i32, i32* %107, align 8
  br label %115

115:                                              ; preds = %113, %105
  %116 = phi i32 [ %108, %105 ], [ %114, %113 ]
  %117 = sext i32 %116 to i64
  %118 = getelementptr inbounds %"class.v8::internal::LiteralBuffer", %"class.v8::internal::LiteralBuffer"* %99, i64 0, i32 0, i32 0
  %119 = load i8*, i8** %118, align 8
  %120 = getelementptr inbounds i8, i8* %119, i64 %117
  store i8 %106, i8* %120, align 1
  %121 = load i32, i32* %107, align 8
  %122 = add nsw i32 %121, 1
  store i32 %122, i32* %107, align 8
  br label %34

123:                                              ; preds = %103
  tail call void @_ZN2v88internal13LiteralBuffer16ConvertToTwoByteEv(%"class.v8::internal::LiteralBuffer"* %99) #8
  br label %124

124:                                              ; preds = %123, %94
  tail call void @_ZN2v88internal13LiteralBuffer14AddTwoByteCharEj(%"class.v8::internal::LiteralBuffer"* %99, i32 %70) #8
  br label %34

125:                                              ; preds = %11
  br i1 %7, label %126, label %149

126:                                              ; preds = %125
  %127 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %4, align 8
  %128 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %127, i64 0, i32 4
  %129 = load i64, i64* %128, align 8
  %130 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %127, i64 0, i32 2
  %131 = bitcast i16** %130 to i64*
  %132 = load i64, i64* %131, align 8
  %133 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %127, i64 0, i32 1
  %134 = bitcast i16** %133 to i64*
  %135 = load i64, i64* %134, align 8
  %136 = sub i64 %132, %135
  %137 = lshr exact i64 %136, 1
  %138 = add i64 %137, %129
  %139 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 14
  %140 = load i32, i32* %139, align 4
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %142, label %149

142:                                              ; preds = %126
  %143 = add i64 %138, 4294967295
  store i32 224, i32* %139, align 4
  %144 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 15
  %145 = bitcast %"struct.v8::internal::Scanner::Location"* %144 to i64*
  %146 = shl i64 %138, 32
  %147 = and i64 %143, 4294967295
  %148 = or i64 %147, %146
  store i64 %148, i64* %145, align 8
  br label %149

149:                                              ; preds = %142, %126, %58, %42, %125
  %150 = phi i1 [ true, %125 ], [ false, %42 ], [ false, %58 ], [ false, %126 ], [ false, %142 ]
  ret i1 %150
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal7Scanner16ScanDecimalAsSmiEPmb(%"class.v8::internal::Scanner"* nocapture, i64* nocapture, i1 zeroext) local_unnamed_addr #0 align 2 {
  br i1 %2, label %12, label %4

4:                                                ; preds = %3
  %5 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 5
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -48
  %8 = icmp ult i32 %7, 10
  br i1 %8, label %9, label %79

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 4
  %11 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 2
  br label %14

12:                                               ; preds = %3
  %13 = tail call zeroext i1 @_ZN2v88internal7Scanner37ScanDecimalAsSmiWithNumericSeparatorsEPm(%"class.v8::internal::Scanner"* %0, i64* %1)
  br label %79

14:                                               ; preds = %9, %75
  %15 = phi i32 [ %7, %9 ], [ %77, %75 ]
  %16 = load i64, i64* %1, align 8
  %17 = mul i64 %16, 10
  %18 = zext i32 %15 to i64
  %19 = add i64 %17, %18
  store i64 %19, i64* %1, align 8
  %20 = load i32, i32* %5, align 8
  %21 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %10, align 8
  %22 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %21, i64 0, i32 2
  %23 = load i16*, i16** %22, align 8
  %24 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %21, i64 0, i32 3
  %25 = load i16*, i16** %24, align 8
  %26 = icmp ult i16* %23, %25
  br i1 %26, label %27, label %30, !prof !4

27:                                               ; preds = %14
  %28 = load i16, i16* %23, align 2
  %29 = zext i16 %28 to i32
  br label %44

30:                                               ; preds = %14
  %31 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %21, i64 0, i32 6
  %32 = load i8, i8* %31, align 8, !range !2
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %34, label %44

34:                                               ; preds = %30
  %35 = bitcast %"class.v8::internal::Utf16CharacterStream"* %21 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %36 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %35, align 8
  %37 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %36, i64 5
  %38 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %37, align 8
  %39 = tail call zeroext i1 %38(%"class.v8::internal::Utf16CharacterStream"* %21) #8
  %40 = load i16*, i16** %22, align 8
  br i1 %39, label %41, label %44

41:                                               ; preds = %34
  %42 = load i16, i16* %40, align 2
  %43 = zext i16 %42 to i32
  br label %44

44:                                               ; preds = %27, %30, %34, %41
  %45 = phi i16* [ %23, %27 ], [ %40, %41 ], [ %23, %30 ], [ %40, %34 ]
  %46 = phi i32 [ %29, %27 ], [ %43, %41 ], [ -1, %30 ], [ -1, %34 ]
  %47 = getelementptr inbounds i16, i16* %45, i64 1
  store i16* %47, i16** %22, align 8
  store i32 %46, i32* %5, align 8
  %48 = load %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"** %11, align 8
  %49 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %48, i64 0, i32 1
  %50 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %48, i64 0, i32 1, i32 2
  %51 = load i8, i8* %50, align 4, !range !2
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %74, label %53

53:                                               ; preds = %44
  %54 = icmp ult i32 %20, 256
  br i1 %54, label %55, label %73

55:                                               ; preds = %53
  %56 = trunc i32 %20 to i8
  %57 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %48, i64 0, i32 1, i32 1
  %58 = load i32, i32* %57, align 8
  %59 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %48, i64 0, i32 1, i32 0, i32 1
  %60 = load i64, i64* %59, align 8
  %61 = trunc i64 %60 to i32
  %62 = icmp slt i32 %58, %61
  br i1 %62, label %65, label %63

63:                                               ; preds = %55
  tail call void @_ZN2v88internal13LiteralBuffer12ExpandBufferEv(%"class.v8::internal::LiteralBuffer"* %49) #8
  %64 = load i32, i32* %57, align 8
  br label %65

65:                                               ; preds = %63, %55
  %66 = phi i32 [ %58, %55 ], [ %64, %63 ]
  %67 = sext i32 %66 to i64
  %68 = getelementptr inbounds %"class.v8::internal::LiteralBuffer", %"class.v8::internal::LiteralBuffer"* %49, i64 0, i32 0, i32 0
  %69 = load i8*, i8** %68, align 8
  %70 = getelementptr inbounds i8, i8* %69, i64 %67
  store i8 %56, i8* %70, align 1
  %71 = load i32, i32* %57, align 8
  %72 = add nsw i32 %71, 1
  store i32 %72, i32* %57, align 8
  br label %75

73:                                               ; preds = %53
  tail call void @_ZN2v88internal13LiteralBuffer16ConvertToTwoByteEv(%"class.v8::internal::LiteralBuffer"* %49) #8
  br label %74

74:                                               ; preds = %73, %44
  tail call void @_ZN2v88internal13LiteralBuffer14AddTwoByteCharEj(%"class.v8::internal::LiteralBuffer"* %49, i32 %20) #8
  br label %75

75:                                               ; preds = %65, %74
  %76 = load i32, i32* %5, align 8
  %77 = add i32 %76, -48
  %78 = icmp ult i32 %77, 10
  br i1 %78, label %14, label %79

79:                                               ; preds = %75, %4, %12
  %80 = phi i1 [ %13, %12 ], [ true, %4 ], [ true, %75 ]
  ret i1 %80
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal7Scanner16ScanBinaryDigitsEv(%"class.v8::internal::Scanner"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 5
  %3 = load i32, i32* %2, align 8
  %4 = or i32 %3, 1
  %5 = icmp eq i32 %4, 49
  br i1 %5, label %6, label %149

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 2
  %8 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 4
  br label %9

9:                                                ; preds = %122, %6
  %10 = phi i32 [ %3, %6 ], [ %123, %122 ]
  %11 = phi i1 [ false, %6 ], [ %124, %122 ]
  %12 = or i32 %10, 1
  %13 = icmp eq i32 %12, 49
  %14 = icmp eq i32 %10, 95
  br i1 %13, label %16, label %15

15:                                               ; preds = %9
  br i1 %14, label %17, label %125

16:                                               ; preds = %9
  br i1 %14, label %17, label %64

17:                                               ; preds = %16, %15
  %18 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %8, align 8
  %19 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %18, i64 0, i32 2
  %20 = load i16*, i16** %19, align 8
  %21 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %18, i64 0, i32 3
  %22 = load i16*, i16** %21, align 8
  %23 = icmp ult i16* %20, %22
  br i1 %23, label %35, label %24, !prof !4

24:                                               ; preds = %17
  %25 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %18, i64 0, i32 6
  %26 = load i8, i8* %25, align 8, !range !2
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %28, label %116

28:                                               ; preds = %24
  %29 = bitcast %"class.v8::internal::Utf16CharacterStream"* %18 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %30 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %29, align 8
  %31 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %30, i64 5
  %32 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %31, align 8
  %33 = tail call zeroext i1 %32(%"class.v8::internal::Utf16CharacterStream"* %18) #8
  %34 = load i16*, i16** %19, align 8
  br i1 %33, label %35, label %116

35:                                               ; preds = %28, %17
  %36 = phi i16* [ %20, %17 ], [ %34, %28 ]
  %37 = load i16, i16* %36, align 2
  %38 = zext i16 %37 to i32
  %39 = getelementptr inbounds i16, i16* %36, i64 1
  store i16* %39, i16** %19, align 8
  store i32 %38, i32* %2, align 8
  %40 = icmp eq i16 %37, 95
  br i1 %40, label %41, label %122

41:                                               ; preds = %35
  %42 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %8, align 8
  %43 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %42, i64 0, i32 4
  %44 = load i64, i64* %43, align 8
  %45 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %42, i64 0, i32 2
  %46 = bitcast i16** %45 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %42, i64 0, i32 1
  %49 = bitcast i16** %48 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = sub i64 %47, %50
  %52 = lshr exact i64 %51, 1
  %53 = add i64 %52, %44
  %54 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 14
  %55 = load i32, i32* %54, align 4
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %149

57:                                               ; preds = %41
  %58 = add i64 %53, 4294967295
  store i32 225, i32* %54, align 4
  %59 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 15
  %60 = bitcast %"struct.v8::internal::Scanner::Location"* %59 to i64*
  %61 = shl i64 %53, 32
  %62 = and i64 %58, 4294967295
  %63 = or i64 %62, %61
  store i64 %63, i64* %60, align 8
  br label %149

64:                                               ; preds = %16
  %65 = load %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"** %7, align 8
  %66 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %65, i64 0, i32 1
  %67 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %65, i64 0, i32 1, i32 2
  %68 = load i8, i8* %67, align 4, !range !2
  %69 = icmp eq i8 %68, 0
  br i1 %69, label %91, label %70

70:                                               ; preds = %64
  %71 = icmp ult i32 %10, 256
  br i1 %71, label %72, label %90

72:                                               ; preds = %70
  %73 = trunc i32 %10 to i8
  %74 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %65, i64 0, i32 1, i32 1
  %75 = load i32, i32* %74, align 8
  %76 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %65, i64 0, i32 1, i32 0, i32 1
  %77 = load i64, i64* %76, align 8
  %78 = trunc i64 %77 to i32
  %79 = icmp slt i32 %75, %78
  br i1 %79, label %82, label %80

80:                                               ; preds = %72
  tail call void @_ZN2v88internal13LiteralBuffer12ExpandBufferEv(%"class.v8::internal::LiteralBuffer"* %66) #8
  %81 = load i32, i32* %74, align 8
  br label %82

82:                                               ; preds = %80, %72
  %83 = phi i32 [ %75, %72 ], [ %81, %80 ]
  %84 = sext i32 %83 to i64
  %85 = getelementptr inbounds %"class.v8::internal::LiteralBuffer", %"class.v8::internal::LiteralBuffer"* %66, i64 0, i32 0, i32 0
  %86 = load i8*, i8** %85, align 8
  %87 = getelementptr inbounds i8, i8* %86, i64 %84
  store i8 %73, i8* %87, align 1
  %88 = load i32, i32* %74, align 8
  %89 = add nsw i32 %88, 1
  store i32 %89, i32* %74, align 8
  br label %92

90:                                               ; preds = %70
  tail call void @_ZN2v88internal13LiteralBuffer16ConvertToTwoByteEv(%"class.v8::internal::LiteralBuffer"* %66) #8
  br label %91

91:                                               ; preds = %90, %64
  tail call void @_ZN2v88internal13LiteralBuffer14AddTwoByteCharEj(%"class.v8::internal::LiteralBuffer"* %66, i32 %10) #8
  br label %92

92:                                               ; preds = %91, %82
  %93 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %8, align 8
  %94 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %93, i64 0, i32 2
  %95 = load i16*, i16** %94, align 8
  %96 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %93, i64 0, i32 3
  %97 = load i16*, i16** %96, align 8
  %98 = icmp ult i16* %95, %97
  br i1 %98, label %99, label %102, !prof !4

99:                                               ; preds = %92
  %100 = load i16, i16* %95, align 2
  %101 = zext i16 %100 to i32
  br label %116

102:                                              ; preds = %92
  %103 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %93, i64 0, i32 6
  %104 = load i8, i8* %103, align 8, !range !2
  %105 = icmp eq i8 %104, 0
  br i1 %105, label %106, label %116

106:                                              ; preds = %102
  %107 = bitcast %"class.v8::internal::Utf16CharacterStream"* %93 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %108 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %107, align 8
  %109 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %108, i64 5
  %110 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %109, align 8
  %111 = tail call zeroext i1 %110(%"class.v8::internal::Utf16CharacterStream"* %93) #8
  %112 = load i16*, i16** %94, align 8
  br i1 %111, label %113, label %116

113:                                              ; preds = %106
  %114 = load i16, i16* %112, align 2
  %115 = zext i16 %114 to i32
  br label %116

116:                                              ; preds = %99, %102, %106, %113, %24, %28
  %117 = phi i16* [ %34, %28 ], [ %20, %24 ], [ %95, %99 ], [ %112, %113 ], [ %95, %102 ], [ %112, %106 ]
  %118 = phi i16** [ %19, %28 ], [ %19, %24 ], [ %94, %99 ], [ %94, %113 ], [ %94, %102 ], [ %94, %106 ]
  %119 = phi i32 [ -1, %28 ], [ -1, %24 ], [ %101, %99 ], [ %115, %113 ], [ -1, %102 ], [ -1, %106 ]
  %120 = phi i1 [ true, %28 ], [ true, %24 ], [ false, %99 ], [ false, %113 ], [ false, %102 ], [ false, %106 ]
  %121 = getelementptr inbounds i16, i16* %117, i64 1
  store i16* %121, i16** %118, align 8
  store i32 %119, i32* %2, align 8
  br label %122

122:                                              ; preds = %116, %35
  %123 = phi i32 [ %38, %35 ], [ %119, %116 ]
  %124 = phi i1 [ true, %35 ], [ %120, %116 ]
  br label %9

125:                                              ; preds = %15
  br i1 %11, label %126, label %149

126:                                              ; preds = %125
  %127 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %8, align 8
  %128 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %127, i64 0, i32 4
  %129 = load i64, i64* %128, align 8
  %130 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %127, i64 0, i32 2
  %131 = bitcast i16** %130 to i64*
  %132 = load i64, i64* %131, align 8
  %133 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %127, i64 0, i32 1
  %134 = bitcast i16** %133 to i64*
  %135 = load i64, i64* %134, align 8
  %136 = sub i64 %132, %135
  %137 = lshr exact i64 %136, 1
  %138 = add i64 %137, %129
  %139 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 14
  %140 = load i32, i32* %139, align 4
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %142, label %149

142:                                              ; preds = %126
  %143 = add i64 %138, 4294967295
  store i32 224, i32* %139, align 4
  %144 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 15
  %145 = bitcast %"struct.v8::internal::Scanner::Location"* %144 to i64*
  %146 = shl i64 %138, 32
  %147 = and i64 %143, 4294967295
  %148 = or i64 %147, %146
  store i64 %148, i64* %145, align 8
  br label %149

149:                                              ; preds = %1, %41, %57, %125, %126, %142
  %150 = phi i1 [ false, %1 ], [ true, %125 ], [ false, %41 ], [ false, %57 ], [ false, %126 ], [ false, %142 ]
  ret i1 %150
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal7Scanner15ScanOctalDigitsEv(%"class.v8::internal::Scanner"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 5
  %3 = load i32, i32* %2, align 8
  %4 = and i32 %3, -8
  %5 = icmp eq i32 %4, 48
  br i1 %5, label %6, label %149

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 2
  %8 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 4
  br label %9

9:                                                ; preds = %122, %6
  %10 = phi i32 [ %3, %6 ], [ %123, %122 ]
  %11 = phi i1 [ false, %6 ], [ %124, %122 ]
  %12 = and i32 %10, -8
  %13 = icmp eq i32 %12, 48
  %14 = icmp eq i32 %10, 95
  br i1 %13, label %16, label %15

15:                                               ; preds = %9
  br i1 %14, label %17, label %125

16:                                               ; preds = %9
  br i1 %14, label %17, label %64

17:                                               ; preds = %16, %15
  %18 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %8, align 8
  %19 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %18, i64 0, i32 2
  %20 = load i16*, i16** %19, align 8
  %21 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %18, i64 0, i32 3
  %22 = load i16*, i16** %21, align 8
  %23 = icmp ult i16* %20, %22
  br i1 %23, label %35, label %24, !prof !4

24:                                               ; preds = %17
  %25 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %18, i64 0, i32 6
  %26 = load i8, i8* %25, align 8, !range !2
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %28, label %116

28:                                               ; preds = %24
  %29 = bitcast %"class.v8::internal::Utf16CharacterStream"* %18 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %30 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %29, align 8
  %31 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %30, i64 5
  %32 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %31, align 8
  %33 = tail call zeroext i1 %32(%"class.v8::internal::Utf16CharacterStream"* %18) #8
  %34 = load i16*, i16** %19, align 8
  br i1 %33, label %35, label %116

35:                                               ; preds = %28, %17
  %36 = phi i16* [ %20, %17 ], [ %34, %28 ]
  %37 = load i16, i16* %36, align 2
  %38 = zext i16 %37 to i32
  %39 = getelementptr inbounds i16, i16* %36, i64 1
  store i16* %39, i16** %19, align 8
  store i32 %38, i32* %2, align 8
  %40 = icmp eq i16 %37, 95
  br i1 %40, label %41, label %122

41:                                               ; preds = %35
  %42 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %8, align 8
  %43 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %42, i64 0, i32 4
  %44 = load i64, i64* %43, align 8
  %45 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %42, i64 0, i32 2
  %46 = bitcast i16** %45 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %42, i64 0, i32 1
  %49 = bitcast i16** %48 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = sub i64 %47, %50
  %52 = lshr exact i64 %51, 1
  %53 = add i64 %52, %44
  %54 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 14
  %55 = load i32, i32* %54, align 4
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %149

57:                                               ; preds = %41
  %58 = add i64 %53, 4294967295
  store i32 225, i32* %54, align 4
  %59 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 15
  %60 = bitcast %"struct.v8::internal::Scanner::Location"* %59 to i64*
  %61 = shl i64 %53, 32
  %62 = and i64 %58, 4294967295
  %63 = or i64 %62, %61
  store i64 %63, i64* %60, align 8
  br label %149

64:                                               ; preds = %16
  %65 = load %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"** %7, align 8
  %66 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %65, i64 0, i32 1
  %67 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %65, i64 0, i32 1, i32 2
  %68 = load i8, i8* %67, align 4, !range !2
  %69 = icmp eq i8 %68, 0
  br i1 %69, label %91, label %70

70:                                               ; preds = %64
  %71 = icmp ult i32 %10, 256
  br i1 %71, label %72, label %90

72:                                               ; preds = %70
  %73 = trunc i32 %10 to i8
  %74 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %65, i64 0, i32 1, i32 1
  %75 = load i32, i32* %74, align 8
  %76 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %65, i64 0, i32 1, i32 0, i32 1
  %77 = load i64, i64* %76, align 8
  %78 = trunc i64 %77 to i32
  %79 = icmp slt i32 %75, %78
  br i1 %79, label %82, label %80

80:                                               ; preds = %72
  tail call void @_ZN2v88internal13LiteralBuffer12ExpandBufferEv(%"class.v8::internal::LiteralBuffer"* %66) #8
  %81 = load i32, i32* %74, align 8
  br label %82

82:                                               ; preds = %80, %72
  %83 = phi i32 [ %75, %72 ], [ %81, %80 ]
  %84 = sext i32 %83 to i64
  %85 = getelementptr inbounds %"class.v8::internal::LiteralBuffer", %"class.v8::internal::LiteralBuffer"* %66, i64 0, i32 0, i32 0
  %86 = load i8*, i8** %85, align 8
  %87 = getelementptr inbounds i8, i8* %86, i64 %84
  store i8 %73, i8* %87, align 1
  %88 = load i32, i32* %74, align 8
  %89 = add nsw i32 %88, 1
  store i32 %89, i32* %74, align 8
  br label %92

90:                                               ; preds = %70
  tail call void @_ZN2v88internal13LiteralBuffer16ConvertToTwoByteEv(%"class.v8::internal::LiteralBuffer"* %66) #8
  br label %91

91:                                               ; preds = %90, %64
  tail call void @_ZN2v88internal13LiteralBuffer14AddTwoByteCharEj(%"class.v8::internal::LiteralBuffer"* %66, i32 %10) #8
  br label %92

92:                                               ; preds = %91, %82
  %93 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %8, align 8
  %94 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %93, i64 0, i32 2
  %95 = load i16*, i16** %94, align 8
  %96 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %93, i64 0, i32 3
  %97 = load i16*, i16** %96, align 8
  %98 = icmp ult i16* %95, %97
  br i1 %98, label %99, label %102, !prof !4

99:                                               ; preds = %92
  %100 = load i16, i16* %95, align 2
  %101 = zext i16 %100 to i32
  br label %116

102:                                              ; preds = %92
  %103 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %93, i64 0, i32 6
  %104 = load i8, i8* %103, align 8, !range !2
  %105 = icmp eq i8 %104, 0
  br i1 %105, label %106, label %116

106:                                              ; preds = %102
  %107 = bitcast %"class.v8::internal::Utf16CharacterStream"* %93 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %108 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %107, align 8
  %109 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %108, i64 5
  %110 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %109, align 8
  %111 = tail call zeroext i1 %110(%"class.v8::internal::Utf16CharacterStream"* %93) #8
  %112 = load i16*, i16** %94, align 8
  br i1 %111, label %113, label %116

113:                                              ; preds = %106
  %114 = load i16, i16* %112, align 2
  %115 = zext i16 %114 to i32
  br label %116

116:                                              ; preds = %99, %102, %106, %113, %24, %28
  %117 = phi i16* [ %34, %28 ], [ %20, %24 ], [ %95, %99 ], [ %112, %113 ], [ %95, %102 ], [ %112, %106 ]
  %118 = phi i16** [ %19, %28 ], [ %19, %24 ], [ %94, %99 ], [ %94, %113 ], [ %94, %102 ], [ %94, %106 ]
  %119 = phi i32 [ -1, %28 ], [ -1, %24 ], [ %101, %99 ], [ %115, %113 ], [ -1, %102 ], [ -1, %106 ]
  %120 = phi i1 [ true, %28 ], [ true, %24 ], [ false, %99 ], [ false, %113 ], [ false, %102 ], [ false, %106 ]
  %121 = getelementptr inbounds i16, i16* %117, i64 1
  store i16* %121, i16** %118, align 8
  store i32 %119, i32* %2, align 8
  br label %122

122:                                              ; preds = %116, %35
  %123 = phi i32 [ %38, %35 ], [ %119, %116 ]
  %124 = phi i1 [ true, %35 ], [ %120, %116 ]
  br label %9

125:                                              ; preds = %15
  br i1 %11, label %126, label %149

126:                                              ; preds = %125
  %127 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %8, align 8
  %128 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %127, i64 0, i32 4
  %129 = load i64, i64* %128, align 8
  %130 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %127, i64 0, i32 2
  %131 = bitcast i16** %130 to i64*
  %132 = load i64, i64* %131, align 8
  %133 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %127, i64 0, i32 1
  %134 = bitcast i16** %133 to i64*
  %135 = load i64, i64* %134, align 8
  %136 = sub i64 %132, %135
  %137 = lshr exact i64 %136, 1
  %138 = add i64 %137, %129
  %139 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 14
  %140 = load i32, i32* %139, align 4
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %142, label %149

142:                                              ; preds = %126
  %143 = add i64 %138, 4294967295
  store i32 224, i32* %139, align 4
  %144 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 15
  %145 = bitcast %"struct.v8::internal::Scanner::Location"* %144 to i64*
  %146 = shl i64 %138, 32
  %147 = and i64 %143, 4294967295
  %148 = or i64 %147, %146
  store i64 %148, i64* %145, align 8
  br label %149

149:                                              ; preds = %1, %41, %57, %125, %126, %142
  %150 = phi i1 [ false, %1 ], [ true, %125 ], [ false, %41 ], [ false, %57 ], [ false, %126 ], [ false, %142 ]
  ret i1 %150
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal7Scanner23ScanImplicitOctalDigitsEiPNS1_10NumberKindE(%"class.v8::internal::Scanner"* nocapture, i32, i32* nocapture) local_unnamed_addr #0 align 2 {
  store i32 0, i32* %2, align 4
  %4 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 5
  %5 = load i32, i32* %4, align 8
  %6 = and i32 %5, -2
  %7 = icmp eq i32 %6, 56
  br i1 %7, label %11, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 2
  %10 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 4
  br label %12

11:                                               ; preds = %88, %3
  store i32 5, i32* %2, align 4
  br label %94

12:                                               ; preds = %8, %88
  %13 = phi i32 [ %5, %8 ], [ %90, %88 ]
  %14 = and i32 %13, -8
  %15 = icmp eq i32 %14, 48
  br i1 %15, label %36, label %16

16:                                               ; preds = %12
  %17 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %10, align 8
  %18 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %17, i64 0, i32 4
  %19 = load i64, i64* %18, align 8
  %20 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %17, i64 0, i32 2
  %21 = bitcast i16** %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %17, i64 0, i32 1
  %24 = bitcast i16** %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = sub i64 %22, %25
  %27 = lshr exact i64 %26, 1
  %28 = add i64 %27, %19
  %29 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 12
  %30 = bitcast %"struct.v8::internal::Scanner::Location"* %29 to i64*
  %31 = shl i64 %28, 32
  %32 = add i64 %31, -4294967296
  %33 = zext i32 %1 to i64
  %34 = or i64 %32, %33
  store i64 %34, i64* %30, align 8
  %35 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 13
  store i32 313, i32* %35, align 8
  br label %94

36:                                               ; preds = %12
  %37 = load %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"** %9, align 8
  %38 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %37, i64 0, i32 1
  %39 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %37, i64 0, i32 1, i32 2
  %40 = load i8, i8* %39, align 4, !range !2
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %63, label %42

42:                                               ; preds = %36
  %43 = icmp ult i32 %13, 256
  br i1 %43, label %44, label %62

44:                                               ; preds = %42
  %45 = trunc i32 %13 to i8
  %46 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %37, i64 0, i32 1, i32 1
  %47 = load i32, i32* %46, align 8
  %48 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %37, i64 0, i32 1, i32 0, i32 1
  %49 = load i64, i64* %48, align 8
  %50 = trunc i64 %49 to i32
  %51 = icmp slt i32 %47, %50
  br i1 %51, label %54, label %52

52:                                               ; preds = %44
  tail call void @_ZN2v88internal13LiteralBuffer12ExpandBufferEv(%"class.v8::internal::LiteralBuffer"* %38) #8
  %53 = load i32, i32* %46, align 8
  br label %54

54:                                               ; preds = %52, %44
  %55 = phi i32 [ %47, %44 ], [ %53, %52 ]
  %56 = sext i32 %55 to i64
  %57 = getelementptr inbounds %"class.v8::internal::LiteralBuffer", %"class.v8::internal::LiteralBuffer"* %38, i64 0, i32 0, i32 0
  %58 = load i8*, i8** %57, align 8
  %59 = getelementptr inbounds i8, i8* %58, i64 %56
  store i8 %45, i8* %59, align 1
  %60 = load i32, i32* %46, align 8
  %61 = add nsw i32 %60, 1
  store i32 %61, i32* %46, align 8
  br label %64

62:                                               ; preds = %42
  tail call void @_ZN2v88internal13LiteralBuffer16ConvertToTwoByteEv(%"class.v8::internal::LiteralBuffer"* %38) #8
  br label %63

63:                                               ; preds = %62, %36
  tail call void @_ZN2v88internal13LiteralBuffer14AddTwoByteCharEj(%"class.v8::internal::LiteralBuffer"* %38, i32 %13) #8
  br label %64

64:                                               ; preds = %63, %54
  %65 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %10, align 8
  %66 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %65, i64 0, i32 2
  %67 = load i16*, i16** %66, align 8
  %68 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %65, i64 0, i32 3
  %69 = load i16*, i16** %68, align 8
  %70 = icmp ult i16* %67, %69
  br i1 %70, label %71, label %74, !prof !4

71:                                               ; preds = %64
  %72 = load i16, i16* %67, align 2
  %73 = zext i16 %72 to i32
  br label %88

74:                                               ; preds = %64
  %75 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %65, i64 0, i32 6
  %76 = load i8, i8* %75, align 8, !range !2
  %77 = icmp eq i8 %76, 0
  br i1 %77, label %78, label %88

78:                                               ; preds = %74
  %79 = bitcast %"class.v8::internal::Utf16CharacterStream"* %65 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %80 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %79, align 8
  %81 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %80, i64 5
  %82 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %81, align 8
  %83 = tail call zeroext i1 %82(%"class.v8::internal::Utf16CharacterStream"* %65) #8
  %84 = load i16*, i16** %66, align 8
  br i1 %83, label %85, label %88

85:                                               ; preds = %78
  %86 = load i16, i16* %84, align 2
  %87 = zext i16 %86 to i32
  br label %88

88:                                               ; preds = %71, %74, %78, %85
  %89 = phi i16* [ %67, %71 ], [ %84, %85 ], [ %67, %74 ], [ %84, %78 ]
  %90 = phi i32 [ %73, %71 ], [ %87, %85 ], [ -1, %74 ], [ -1, %78 ]
  %91 = getelementptr inbounds i16, i16* %89, i64 1
  store i16* %91, i16** %66, align 8
  store i32 %90, i32* %4, align 8
  %92 = and i32 %90, -2
  %93 = icmp eq i32 %92, 56
  br i1 %93, label %11, label %12

94:                                               ; preds = %16, %11
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal7Scanner13ScanHexDigitsEv(%"class.v8::internal::Scanner"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 5
  %3 = load i32, i32* %2, align 8
  %4 = add i32 %3, -48
  %5 = icmp ult i32 %4, 10
  br i1 %5, label %10, label %6

6:                                                ; preds = %1
  %7 = or i32 %3, 32
  %8 = add i32 %7, -97
  %9 = icmp ult i32 %8, 6
  br i1 %9, label %10, label %157

10:                                               ; preds = %1, %6
  %11 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 2
  %12 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 4
  br label %13

13:                                               ; preds = %130, %10
  %14 = phi i32 [ %3, %10 ], [ %131, %130 ]
  %15 = phi i1 [ false, %10 ], [ %132, %130 ]
  %16 = add i32 %14, -48
  %17 = icmp ult i32 %16, 10
  br i1 %17, label %72, label %18

18:                                               ; preds = %13
  %19 = or i32 %14, 32
  %20 = add i32 %19, -97
  %21 = icmp ult i32 %20, 6
  %22 = icmp eq i32 %14, 95
  br i1 %21, label %24, label %23

23:                                               ; preds = %18
  br i1 %22, label %25, label %133

24:                                               ; preds = %18
  br i1 %22, label %25, label %72

25:                                               ; preds = %24, %23
  %26 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %12, align 8
  %27 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %26, i64 0, i32 2
  %28 = load i16*, i16** %27, align 8
  %29 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %26, i64 0, i32 3
  %30 = load i16*, i16** %29, align 8
  %31 = icmp ult i16* %28, %30
  br i1 %31, label %43, label %32, !prof !4

32:                                               ; preds = %25
  %33 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %26, i64 0, i32 6
  %34 = load i8, i8* %33, align 8, !range !2
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %36, label %124

36:                                               ; preds = %32
  %37 = bitcast %"class.v8::internal::Utf16CharacterStream"* %26 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %38 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %37, align 8
  %39 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %38, i64 5
  %40 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %39, align 8
  %41 = tail call zeroext i1 %40(%"class.v8::internal::Utf16CharacterStream"* %26) #8
  %42 = load i16*, i16** %27, align 8
  br i1 %41, label %43, label %124

43:                                               ; preds = %36, %25
  %44 = phi i16* [ %28, %25 ], [ %42, %36 ]
  %45 = load i16, i16* %44, align 2
  %46 = zext i16 %45 to i32
  %47 = getelementptr inbounds i16, i16* %44, i64 1
  store i16* %47, i16** %27, align 8
  store i32 %46, i32* %2, align 8
  %48 = icmp eq i16 %45, 95
  br i1 %48, label %49, label %130

49:                                               ; preds = %43
  %50 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %12, align 8
  %51 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %50, i64 0, i32 4
  %52 = load i64, i64* %51, align 8
  %53 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %50, i64 0, i32 2
  %54 = bitcast i16** %53 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %50, i64 0, i32 1
  %57 = bitcast i16** %56 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = sub i64 %55, %58
  %60 = lshr exact i64 %59, 1
  %61 = add i64 %60, %52
  %62 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 14
  %63 = load i32, i32* %62, align 4
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %157

65:                                               ; preds = %49
  %66 = add i64 %61, 4294967295
  store i32 225, i32* %62, align 4
  %67 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 15
  %68 = bitcast %"struct.v8::internal::Scanner::Location"* %67 to i64*
  %69 = shl i64 %61, 32
  %70 = and i64 %66, 4294967295
  %71 = or i64 %70, %69
  store i64 %71, i64* %68, align 8
  br label %157

72:                                               ; preds = %13, %24
  %73 = load %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"** %11, align 8
  %74 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %73, i64 0, i32 1
  %75 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %73, i64 0, i32 1, i32 2
  %76 = load i8, i8* %75, align 4, !range !2
  %77 = icmp eq i8 %76, 0
  br i1 %77, label %99, label %78

78:                                               ; preds = %72
  %79 = icmp ult i32 %14, 256
  br i1 %79, label %80, label %98

80:                                               ; preds = %78
  %81 = trunc i32 %14 to i8
  %82 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %73, i64 0, i32 1, i32 1
  %83 = load i32, i32* %82, align 8
  %84 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %73, i64 0, i32 1, i32 0, i32 1
  %85 = load i64, i64* %84, align 8
  %86 = trunc i64 %85 to i32
  %87 = icmp slt i32 %83, %86
  br i1 %87, label %90, label %88

88:                                               ; preds = %80
  tail call void @_ZN2v88internal13LiteralBuffer12ExpandBufferEv(%"class.v8::internal::LiteralBuffer"* %74) #8
  %89 = load i32, i32* %82, align 8
  br label %90

90:                                               ; preds = %88, %80
  %91 = phi i32 [ %83, %80 ], [ %89, %88 ]
  %92 = sext i32 %91 to i64
  %93 = getelementptr inbounds %"class.v8::internal::LiteralBuffer", %"class.v8::internal::LiteralBuffer"* %74, i64 0, i32 0, i32 0
  %94 = load i8*, i8** %93, align 8
  %95 = getelementptr inbounds i8, i8* %94, i64 %92
  store i8 %81, i8* %95, align 1
  %96 = load i32, i32* %82, align 8
  %97 = add nsw i32 %96, 1
  store i32 %97, i32* %82, align 8
  br label %100

98:                                               ; preds = %78
  tail call void @_ZN2v88internal13LiteralBuffer16ConvertToTwoByteEv(%"class.v8::internal::LiteralBuffer"* %74) #8
  br label %99

99:                                               ; preds = %98, %72
  tail call void @_ZN2v88internal13LiteralBuffer14AddTwoByteCharEj(%"class.v8::internal::LiteralBuffer"* %74, i32 %14) #8
  br label %100

100:                                              ; preds = %99, %90
  %101 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %12, align 8
  %102 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %101, i64 0, i32 2
  %103 = load i16*, i16** %102, align 8
  %104 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %101, i64 0, i32 3
  %105 = load i16*, i16** %104, align 8
  %106 = icmp ult i16* %103, %105
  br i1 %106, label %107, label %110, !prof !4

107:                                              ; preds = %100
  %108 = load i16, i16* %103, align 2
  %109 = zext i16 %108 to i32
  br label %124

110:                                              ; preds = %100
  %111 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %101, i64 0, i32 6
  %112 = load i8, i8* %111, align 8, !range !2
  %113 = icmp eq i8 %112, 0
  br i1 %113, label %114, label %124

114:                                              ; preds = %110
  %115 = bitcast %"class.v8::internal::Utf16CharacterStream"* %101 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %116 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %115, align 8
  %117 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %116, i64 5
  %118 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %117, align 8
  %119 = tail call zeroext i1 %118(%"class.v8::internal::Utf16CharacterStream"* %101) #8
  %120 = load i16*, i16** %102, align 8
  br i1 %119, label %121, label %124

121:                                              ; preds = %114
  %122 = load i16, i16* %120, align 2
  %123 = zext i16 %122 to i32
  br label %124

124:                                              ; preds = %107, %110, %114, %121, %32, %36
  %125 = phi i16* [ %42, %36 ], [ %28, %32 ], [ %103, %107 ], [ %120, %121 ], [ %103, %110 ], [ %120, %114 ]
  %126 = phi i16** [ %27, %36 ], [ %27, %32 ], [ %102, %107 ], [ %102, %121 ], [ %102, %110 ], [ %102, %114 ]
  %127 = phi i32 [ -1, %36 ], [ -1, %32 ], [ %109, %107 ], [ %123, %121 ], [ -1, %110 ], [ -1, %114 ]
  %128 = phi i1 [ true, %36 ], [ true, %32 ], [ false, %107 ], [ false, %121 ], [ false, %110 ], [ false, %114 ]
  %129 = getelementptr inbounds i16, i16* %125, i64 1
  store i16* %129, i16** %126, align 8
  store i32 %127, i32* %2, align 8
  br label %130

130:                                              ; preds = %124, %43
  %131 = phi i32 [ %46, %43 ], [ %127, %124 ]
  %132 = phi i1 [ true, %43 ], [ %128, %124 ]
  br label %13

133:                                              ; preds = %23
  br i1 %15, label %134, label %157

134:                                              ; preds = %133
  %135 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %12, align 8
  %136 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %135, i64 0, i32 4
  %137 = load i64, i64* %136, align 8
  %138 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %135, i64 0, i32 2
  %139 = bitcast i16** %138 to i64*
  %140 = load i64, i64* %139, align 8
  %141 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %135, i64 0, i32 1
  %142 = bitcast i16** %141 to i64*
  %143 = load i64, i64* %142, align 8
  %144 = sub i64 %140, %143
  %145 = lshr exact i64 %144, 1
  %146 = add i64 %145, %137
  %147 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 14
  %148 = load i32, i32* %147, align 4
  %149 = icmp eq i32 %148, 0
  br i1 %149, label %150, label %157

150:                                              ; preds = %134
  %151 = add i64 %146, 4294967295
  store i32 224, i32* %147, align 4
  %152 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 15
  %153 = bitcast %"struct.v8::internal::Scanner::Location"* %152 to i64*
  %154 = shl i64 %146, 32
  %155 = and i64 %151, 4294967295
  %156 = or i64 %155, %154
  store i64 %156, i64* %153, align 8
  br label %157

157:                                              ; preds = %6, %49, %65, %133, %134, %150
  %158 = phi i1 [ false, %6 ], [ true, %133 ], [ false, %49 ], [ false, %65 ], [ false, %134 ], [ false, %150 ]
  ret i1 %158
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal7Scanner17ScanSignedIntegerEv(%"class.v8::internal::Scanner"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 5
  %3 = load i32, i32* %2, align 8
  switch i32 %3, label %59 [
    i32 43, label %4
    i32 45, label %4
  ]

4:                                                ; preds = %1, %1
  %5 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 2
  %6 = load %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"** %5, align 8
  %7 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %6, i64 0, i32 1
  %8 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %6, i64 0, i32 1, i32 2
  %9 = load i8, i8* %8, align 4, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %29, label %11

11:                                               ; preds = %4
  %12 = trunc i32 %3 to i8
  %13 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %6, i64 0, i32 1, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %6, i64 0, i32 1, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = trunc i64 %16 to i32
  %18 = icmp slt i32 %14, %17
  br i1 %18, label %21, label %19

19:                                               ; preds = %11
  tail call void @_ZN2v88internal13LiteralBuffer12ExpandBufferEv(%"class.v8::internal::LiteralBuffer"* %7) #8
  %20 = load i32, i32* %13, align 8
  br label %21

21:                                               ; preds = %19, %11
  %22 = phi i32 [ %14, %11 ], [ %20, %19 ]
  %23 = sext i32 %22 to i64
  %24 = getelementptr inbounds %"class.v8::internal::LiteralBuffer", %"class.v8::internal::LiteralBuffer"* %7, i64 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = getelementptr inbounds i8, i8* %25, i64 %23
  store i8 %12, i8* %26, align 1
  %27 = load i32, i32* %13, align 8
  %28 = add nsw i32 %27, 1
  store i32 %28, i32* %13, align 8
  br label %30

29:                                               ; preds = %4
  tail call void @_ZN2v88internal13LiteralBuffer14AddTwoByteCharEj(%"class.v8::internal::LiteralBuffer"* %7, i32 %3) #8
  br label %30

30:                                               ; preds = %29, %21
  %31 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 4
  %32 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %31, align 8
  %33 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %32, i64 0, i32 2
  %34 = load i16*, i16** %33, align 8
  %35 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %32, i64 0, i32 3
  %36 = load i16*, i16** %35, align 8
  %37 = icmp ult i16* %34, %36
  br i1 %37, label %38, label %41, !prof !4

38:                                               ; preds = %30
  %39 = load i16, i16* %34, align 2
  %40 = zext i16 %39 to i32
  br label %55

41:                                               ; preds = %30
  %42 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %32, i64 0, i32 6
  %43 = load i8, i8* %42, align 8, !range !2
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %45, label %55

45:                                               ; preds = %41
  %46 = bitcast %"class.v8::internal::Utf16CharacterStream"* %32 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %47 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %46, align 8
  %48 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %47, i64 5
  %49 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %48, align 8
  %50 = tail call zeroext i1 %49(%"class.v8::internal::Utf16CharacterStream"* %32) #8
  %51 = load i16*, i16** %33, align 8
  br i1 %50, label %52, label %55

52:                                               ; preds = %45
  %53 = load i16, i16* %51, align 2
  %54 = zext i16 %53 to i32
  br label %55

55:                                               ; preds = %38, %41, %45, %52
  %56 = phi i16* [ %34, %38 ], [ %51, %52 ], [ %34, %41 ], [ %51, %45 ]
  %57 = phi i32 [ %40, %38 ], [ %54, %52 ], [ -1, %41 ], [ -1, %45 ]
  %58 = getelementptr inbounds i16, i16* %56, i64 1
  store i16* %58, i16** %33, align 8
  store i32 %57, i32* %2, align 8
  br label %59

59:                                               ; preds = %1, %55
  %60 = phi i32 [ %3, %1 ], [ %57, %55 ]
  %61 = add i32 %60, -48
  %62 = icmp ult i32 %61, 10
  br i1 %62, label %63, label %65

63:                                               ; preds = %59
  %64 = tail call zeroext i1 @_ZN2v88internal7Scanner17ScanDecimalDigitsEb(%"class.v8::internal::Scanner"* %0, i1 zeroext true)
  br label %65

65:                                               ; preds = %59, %63
  %66 = phi i1 [ %64, %63 ], [ false, %59 ]
  ret i1 %66
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i8 @_ZN2v88internal7Scanner10ScanNumberEb(%"class.v8::internal::Scanner"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca i64, align 8
  %5 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #8
  store i32 4, i32* %3, align 4
  %6 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 2
  %7 = load %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"** %6, align 8
  %8 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %7, i64 0, i32 1, i32 1
  store i32 0, i32* %8, align 8
  %9 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %7, i64 0, i32 1, i32 2
  store i8 1, i8* %9, align 4
  %10 = xor i1 %1, true
  %11 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 4
  %12 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %12, i64 0, i32 4
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %12, i64 0, i32 2
  %16 = bitcast i16** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %12, i64 0, i32 1
  %19 = bitcast i16** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %17, %20
  %22 = lshr exact i64 %21, 1
  %23 = add i64 %22, %14
  %24 = trunc i64 %23 to i32
  %25 = add nsw i32 %24, -1
  br i1 %1, label %26, label %50

26:                                               ; preds = %2
  %27 = load %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"** %6, align 8
  %28 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %27, i64 0, i32 1
  %29 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %27, i64 0, i32 1, i32 1
  %30 = load i32, i32* %29, align 8
  %31 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %27, i64 0, i32 1, i32 0, i32 1
  %32 = load i64, i64* %31, align 8
  %33 = trunc i64 %32 to i32
  %34 = icmp slt i32 %30, %33
  br i1 %34, label %37, label %35

35:                                               ; preds = %26
  tail call void @_ZN2v88internal13LiteralBuffer12ExpandBufferEv(%"class.v8::internal::LiteralBuffer"* %28) #8
  %36 = load i32, i32* %29, align 8
  br label %37

37:                                               ; preds = %26, %35
  %38 = phi i32 [ %30, %26 ], [ %36, %35 ]
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds %"class.v8::internal::LiteralBuffer", %"class.v8::internal::LiteralBuffer"* %28, i64 0, i32 0, i32 0
  %41 = load i8*, i8** %40, align 8
  %42 = getelementptr inbounds i8, i8* %41, i64 %39
  store i8 46, i8* %42, align 1
  %43 = load i32, i32* %29, align 8
  %44 = add nsw i32 %43, 1
  store i32 %44, i32* %29, align 8
  %45 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 5
  %46 = load i32, i32* %45, align 8
  %47 = icmp eq i32 %46, 95
  br i1 %47, label %616, label %48

48:                                               ; preds = %37
  %49 = tail call zeroext i1 @_ZN2v88internal7Scanner17ScanDecimalDigitsEb(%"class.v8::internal::Scanner"* %0, i1 zeroext true)
  br i1 %49, label %433, label %616

50:                                               ; preds = %2
  %51 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 5
  %52 = load i32, i32* %51, align 8
  %53 = icmp eq i32 %52, 48
  br i1 %53, label %54, label %317

54:                                               ; preds = %50
  %55 = load %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"** %6, align 8
  %56 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %55, i64 0, i32 1
  %57 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %55, i64 0, i32 1, i32 2
  %58 = load i8, i8* %57, align 4, !range !2
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %77, label %60

60:                                               ; preds = %54
  %61 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %55, i64 0, i32 1, i32 1
  %62 = load i32, i32* %61, align 8
  %63 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %55, i64 0, i32 1, i32 0, i32 1
  %64 = load i64, i64* %63, align 8
  %65 = trunc i64 %64 to i32
  %66 = icmp slt i32 %62, %65
  br i1 %66, label %69, label %67

67:                                               ; preds = %60
  tail call void @_ZN2v88internal13LiteralBuffer12ExpandBufferEv(%"class.v8::internal::LiteralBuffer"* %56) #8
  %68 = load i32, i32* %61, align 8
  br label %69

69:                                               ; preds = %67, %60
  %70 = phi i32 [ %62, %60 ], [ %68, %67 ]
  %71 = sext i32 %70 to i64
  %72 = getelementptr inbounds %"class.v8::internal::LiteralBuffer", %"class.v8::internal::LiteralBuffer"* %56, i64 0, i32 0, i32 0
  %73 = load i8*, i8** %72, align 8
  %74 = getelementptr inbounds i8, i8* %73, i64 %71
  store i8 48, i8* %74, align 1
  %75 = load i32, i32* %61, align 8
  %76 = add nsw i32 %75, 1
  store i32 %76, i32* %61, align 8
  br label %78

77:                                               ; preds = %54
  tail call void @_ZN2v88internal13LiteralBuffer14AddTwoByteCharEj(%"class.v8::internal::LiteralBuffer"* %56, i32 48) #8
  br label %78

78:                                               ; preds = %77, %69
  %79 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %11, align 8
  %80 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %79, i64 0, i32 2
  %81 = load i16*, i16** %80, align 8
  %82 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %79, i64 0, i32 3
  %83 = load i16*, i16** %82, align 8
  %84 = icmp ult i16* %81, %83
  br i1 %84, label %99, label %85, !prof !4

85:                                               ; preds = %78
  %86 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %79, i64 0, i32 6
  %87 = load i8, i8* %86, align 8, !range !2
  %88 = icmp eq i8 %87, 0
  br i1 %88, label %89, label %96

89:                                               ; preds = %85
  %90 = bitcast %"class.v8::internal::Utf16CharacterStream"* %79 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %91 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %90, align 8
  %92 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %91, i64 5
  %93 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %92, align 8
  %94 = tail call zeroext i1 %93(%"class.v8::internal::Utf16CharacterStream"* %79) #8
  %95 = load i16*, i16** %80, align 8
  br i1 %94, label %99, label %96

96:                                               ; preds = %89, %85
  %97 = phi i16* [ %95, %89 ], [ %81, %85 ]
  %98 = getelementptr inbounds i16, i16* %97, i64 1
  store i16* %98, i16** %80, align 8
  store i32 -1, i32* %51, align 8
  br label %317

99:                                               ; preds = %89, %78
  %100 = phi i16* [ %81, %78 ], [ %95, %89 ]
  %101 = load i16, i16* %100, align 2
  %102 = zext i16 %101 to i32
  %103 = getelementptr inbounds i16, i16* %100, i64 1
  store i16* %103, i16** %80, align 8
  store i32 %102, i32* %51, align 8
  %104 = or i16 %101, 32
  switch i16 %104, label %276 [
    i16 120, label %105
    i16 111, label %162
    i16 98, label %219
  ]

105:                                              ; preds = %99
  %106 = load %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"** %6, align 8
  %107 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %106, i64 0, i32 1
  %108 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %106, i64 0, i32 1, i32 2
  %109 = load i8, i8* %108, align 4, !range !2
  %110 = icmp eq i8 %109, 0
  br i1 %110, label %132, label %111

111:                                              ; preds = %105
  %112 = icmp ult i16 %101, 256
  br i1 %112, label %113, label %131

113:                                              ; preds = %111
  %114 = trunc i16 %101 to i8
  %115 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %106, i64 0, i32 1, i32 1
  %116 = load i32, i32* %115, align 8
  %117 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %106, i64 0, i32 1, i32 0, i32 1
  %118 = load i64, i64* %117, align 8
  %119 = trunc i64 %118 to i32
  %120 = icmp slt i32 %116, %119
  br i1 %120, label %123, label %121

121:                                              ; preds = %113
  tail call void @_ZN2v88internal13LiteralBuffer12ExpandBufferEv(%"class.v8::internal::LiteralBuffer"* %107) #8
  %122 = load i32, i32* %115, align 8
  br label %123

123:                                              ; preds = %121, %113
  %124 = phi i32 [ %116, %113 ], [ %122, %121 ]
  %125 = sext i32 %124 to i64
  %126 = getelementptr inbounds %"class.v8::internal::LiteralBuffer", %"class.v8::internal::LiteralBuffer"* %107, i64 0, i32 0, i32 0
  %127 = load i8*, i8** %126, align 8
  %128 = getelementptr inbounds i8, i8* %127, i64 %125
  store i8 %114, i8* %128, align 1
  %129 = load i32, i32* %115, align 8
  %130 = add nsw i32 %129, 1
  store i32 %130, i32* %115, align 8
  br label %133

131:                                              ; preds = %111
  tail call void @_ZN2v88internal13LiteralBuffer16ConvertToTwoByteEv(%"class.v8::internal::LiteralBuffer"* %107) #8
  br label %132

132:                                              ; preds = %131, %105
  tail call void @_ZN2v88internal13LiteralBuffer14AddTwoByteCharEj(%"class.v8::internal::LiteralBuffer"* %107, i32 %102) #8
  br label %133

133:                                              ; preds = %132, %123
  %134 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %11, align 8
  %135 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %134, i64 0, i32 2
  %136 = load i16*, i16** %135, align 8
  %137 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %134, i64 0, i32 3
  %138 = load i16*, i16** %137, align 8
  %139 = icmp ult i16* %136, %138
  br i1 %139, label %140, label %143, !prof !4

140:                                              ; preds = %133
  %141 = load i16, i16* %136, align 2
  %142 = zext i16 %141 to i32
  br label %157

143:                                              ; preds = %133
  %144 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %134, i64 0, i32 6
  %145 = load i8, i8* %144, align 8, !range !2
  %146 = icmp eq i8 %145, 0
  br i1 %146, label %147, label %157

147:                                              ; preds = %143
  %148 = bitcast %"class.v8::internal::Utf16CharacterStream"* %134 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %149 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %148, align 8
  %150 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %149, i64 5
  %151 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %150, align 8
  %152 = tail call zeroext i1 %151(%"class.v8::internal::Utf16CharacterStream"* %134) #8
  %153 = load i16*, i16** %135, align 8
  br i1 %152, label %154, label %157

154:                                              ; preds = %147
  %155 = load i16, i16* %153, align 2
  %156 = zext i16 %155 to i32
  br label %157

157:                                              ; preds = %140, %143, %147, %154
  %158 = phi i16* [ %136, %140 ], [ %153, %154 ], [ %136, %143 ], [ %153, %147 ]
  %159 = phi i32 [ %142, %140 ], [ %156, %154 ], [ -1, %143 ], [ -1, %147 ]
  %160 = getelementptr inbounds i16, i16* %158, i64 1
  store i16* %160, i16** %135, align 8
  store i32 %159, i32* %51, align 8
  store i32 3, i32* %3, align 4
  %161 = tail call zeroext i1 @_ZN2v88internal7Scanner13ScanHexDigitsEv(%"class.v8::internal::Scanner"* %0)
  br i1 %161, label %437, label %616

162:                                              ; preds = %99
  %163 = load %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"** %6, align 8
  %164 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %163, i64 0, i32 1
  %165 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %163, i64 0, i32 1, i32 2
  %166 = load i8, i8* %165, align 4, !range !2
  %167 = icmp eq i8 %166, 0
  br i1 %167, label %189, label %168

168:                                              ; preds = %162
  %169 = icmp ult i16 %101, 256
  br i1 %169, label %170, label %188

170:                                              ; preds = %168
  %171 = trunc i16 %101 to i8
  %172 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %163, i64 0, i32 1, i32 1
  %173 = load i32, i32* %172, align 8
  %174 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %163, i64 0, i32 1, i32 0, i32 1
  %175 = load i64, i64* %174, align 8
  %176 = trunc i64 %175 to i32
  %177 = icmp slt i32 %173, %176
  br i1 %177, label %180, label %178

178:                                              ; preds = %170
  tail call void @_ZN2v88internal13LiteralBuffer12ExpandBufferEv(%"class.v8::internal::LiteralBuffer"* %164) #8
  %179 = load i32, i32* %172, align 8
  br label %180

180:                                              ; preds = %178, %170
  %181 = phi i32 [ %173, %170 ], [ %179, %178 ]
  %182 = sext i32 %181 to i64
  %183 = getelementptr inbounds %"class.v8::internal::LiteralBuffer", %"class.v8::internal::LiteralBuffer"* %164, i64 0, i32 0, i32 0
  %184 = load i8*, i8** %183, align 8
  %185 = getelementptr inbounds i8, i8* %184, i64 %182
  store i8 %171, i8* %185, align 1
  %186 = load i32, i32* %172, align 8
  %187 = add nsw i32 %186, 1
  store i32 %187, i32* %172, align 8
  br label %190

188:                                              ; preds = %168
  tail call void @_ZN2v88internal13LiteralBuffer16ConvertToTwoByteEv(%"class.v8::internal::LiteralBuffer"* %164) #8
  br label %189

189:                                              ; preds = %188, %162
  tail call void @_ZN2v88internal13LiteralBuffer14AddTwoByteCharEj(%"class.v8::internal::LiteralBuffer"* %164, i32 %102) #8
  br label %190

190:                                              ; preds = %189, %180
  %191 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %11, align 8
  %192 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %191, i64 0, i32 2
  %193 = load i16*, i16** %192, align 8
  %194 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %191, i64 0, i32 3
  %195 = load i16*, i16** %194, align 8
  %196 = icmp ult i16* %193, %195
  br i1 %196, label %197, label %200, !prof !4

197:                                              ; preds = %190
  %198 = load i16, i16* %193, align 2
  %199 = zext i16 %198 to i32
  br label %214

200:                                              ; preds = %190
  %201 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %191, i64 0, i32 6
  %202 = load i8, i8* %201, align 8, !range !2
  %203 = icmp eq i8 %202, 0
  br i1 %203, label %204, label %214

204:                                              ; preds = %200
  %205 = bitcast %"class.v8::internal::Utf16CharacterStream"* %191 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %206 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %205, align 8
  %207 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %206, i64 5
  %208 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %207, align 8
  %209 = tail call zeroext i1 %208(%"class.v8::internal::Utf16CharacterStream"* %191) #8
  %210 = load i16*, i16** %192, align 8
  br i1 %209, label %211, label %214

211:                                              ; preds = %204
  %212 = load i16, i16* %210, align 2
  %213 = zext i16 %212 to i32
  br label %214

214:                                              ; preds = %197, %200, %204, %211
  %215 = phi i16* [ %193, %197 ], [ %210, %211 ], [ %193, %200 ], [ %210, %204 ]
  %216 = phi i32 [ %199, %197 ], [ %213, %211 ], [ -1, %200 ], [ -1, %204 ]
  %217 = getelementptr inbounds i16, i16* %215, i64 1
  store i16* %217, i16** %192, align 8
  store i32 %216, i32* %51, align 8
  store i32 2, i32* %3, align 4
  %218 = tail call zeroext i1 @_ZN2v88internal7Scanner15ScanOctalDigitsEv(%"class.v8::internal::Scanner"* %0)
  br i1 %218, label %437, label %616

219:                                              ; preds = %99
  %220 = load %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"** %6, align 8
  %221 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %220, i64 0, i32 1
  %222 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %220, i64 0, i32 1, i32 2
  %223 = load i8, i8* %222, align 4, !range !2
  %224 = icmp eq i8 %223, 0
  br i1 %224, label %246, label %225

225:                                              ; preds = %219
  %226 = icmp ult i16 %101, 256
  br i1 %226, label %227, label %245

227:                                              ; preds = %225
  %228 = trunc i16 %101 to i8
  %229 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %220, i64 0, i32 1, i32 1
  %230 = load i32, i32* %229, align 8
  %231 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %220, i64 0, i32 1, i32 0, i32 1
  %232 = load i64, i64* %231, align 8
  %233 = trunc i64 %232 to i32
  %234 = icmp slt i32 %230, %233
  br i1 %234, label %237, label %235

235:                                              ; preds = %227
  tail call void @_ZN2v88internal13LiteralBuffer12ExpandBufferEv(%"class.v8::internal::LiteralBuffer"* %221) #8
  %236 = load i32, i32* %229, align 8
  br label %237

237:                                              ; preds = %235, %227
  %238 = phi i32 [ %230, %227 ], [ %236, %235 ]
  %239 = sext i32 %238 to i64
  %240 = getelementptr inbounds %"class.v8::internal::LiteralBuffer", %"class.v8::internal::LiteralBuffer"* %221, i64 0, i32 0, i32 0
  %241 = load i8*, i8** %240, align 8
  %242 = getelementptr inbounds i8, i8* %241, i64 %239
  store i8 %228, i8* %242, align 1
  %243 = load i32, i32* %229, align 8
  %244 = add nsw i32 %243, 1
  store i32 %244, i32* %229, align 8
  br label %247

245:                                              ; preds = %225
  tail call void @_ZN2v88internal13LiteralBuffer16ConvertToTwoByteEv(%"class.v8::internal::LiteralBuffer"* %221) #8
  br label %246

246:                                              ; preds = %245, %219
  tail call void @_ZN2v88internal13LiteralBuffer14AddTwoByteCharEj(%"class.v8::internal::LiteralBuffer"* %221, i32 %102) #8
  br label %247

247:                                              ; preds = %246, %237
  %248 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %11, align 8
  %249 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %248, i64 0, i32 2
  %250 = load i16*, i16** %249, align 8
  %251 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %248, i64 0, i32 3
  %252 = load i16*, i16** %251, align 8
  %253 = icmp ult i16* %250, %252
  br i1 %253, label %254, label %257, !prof !4

254:                                              ; preds = %247
  %255 = load i16, i16* %250, align 2
  %256 = zext i16 %255 to i32
  br label %271

257:                                              ; preds = %247
  %258 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %248, i64 0, i32 6
  %259 = load i8, i8* %258, align 8, !range !2
  %260 = icmp eq i8 %259, 0
  br i1 %260, label %261, label %271

261:                                              ; preds = %257
  %262 = bitcast %"class.v8::internal::Utf16CharacterStream"* %248 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %263 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %262, align 8
  %264 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %263, i64 5
  %265 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %264, align 8
  %266 = tail call zeroext i1 %265(%"class.v8::internal::Utf16CharacterStream"* %248) #8
  %267 = load i16*, i16** %249, align 8
  br i1 %266, label %268, label %271

268:                                              ; preds = %261
  %269 = load i16, i16* %267, align 2
  %270 = zext i16 %269 to i32
  br label %271

271:                                              ; preds = %254, %257, %261, %268
  %272 = phi i16* [ %250, %254 ], [ %267, %268 ], [ %250, %257 ], [ %267, %261 ]
  %273 = phi i32 [ %256, %254 ], [ %270, %268 ], [ -1, %257 ], [ -1, %261 ]
  %274 = getelementptr inbounds i16, i16* %272, i64 1
  store i16* %274, i16** %249, align 8
  store i32 %273, i32* %51, align 8
  store i32 1, i32* %3, align 4
  %275 = tail call zeroext i1 @_ZN2v88internal7Scanner16ScanBinaryDigitsEv(%"class.v8::internal::Scanner"* %0)
  br i1 %275, label %437, label %616

276:                                              ; preds = %99
  %277 = and i32 %102, 65528
  %278 = icmp eq i32 %277, 48
  br i1 %278, label %308, label %279

279:                                              ; preds = %276
  %280 = and i32 %102, 65534
  %281 = icmp eq i32 %280, 56
  br i1 %281, label %282, label %283

282:                                              ; preds = %279
  store i32 5, i32* %3, align 4
  br label %317

283:                                              ; preds = %279
  %284 = icmp eq i16 %101, 95
  br i1 %284, label %285, label %317

285:                                              ; preds = %283
  %286 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %11, align 8
  %287 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %286, i64 0, i32 4
  %288 = load i64, i64* %287, align 8
  %289 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %286, i64 0, i32 2
  %290 = bitcast i16** %289 to i64*
  %291 = load i64, i64* %290, align 8
  %292 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %286, i64 0, i32 1
  %293 = bitcast i16** %292 to i64*
  %294 = load i64, i64* %293, align 8
  %295 = sub i64 %291, %294
  %296 = lshr exact i64 %295, 1
  %297 = add i64 %296, %288
  %298 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 14
  %299 = load i32, i32* %298, align 4
  %300 = icmp eq i32 %299, 0
  br i1 %300, label %301, label %616

301:                                              ; preds = %285
  %302 = add i64 %297, 4294967295
  store i32 222, i32* %298, align 4
  %303 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 15
  %304 = bitcast %"struct.v8::internal::Scanner::Location"* %303 to i64*
  %305 = shl i64 %297, 32
  %306 = and i64 %302, 4294967295
  %307 = or i64 %306, %305
  store i64 %307, i64* %304, align 8
  br label %616

308:                                              ; preds = %276
  store i32 0, i32* %3, align 4
  %309 = call zeroext i1 @_ZN2v88internal7Scanner23ScanImplicitOctalDigitsEiPNS1_10NumberKindE(%"class.v8::internal::Scanner"* %0, i32 %25, i32* nonnull %3)
  %310 = load i32, i32* %3, align 4
  %311 = and i32 %310, -2
  %312 = icmp eq i32 %311, 4
  br i1 %312, label %313, label %437

313:                                              ; preds = %308
  %314 = icmp ne i32 %310, 5
  %315 = and i1 %314, %10
  %316 = icmp ne i32 %310, 5
  br i1 %315, label %317, label %373

317:                                              ; preds = %50, %283, %96, %282, %313
  %318 = phi i1 [ false, %282 ], [ %316, %313 ], [ true, %96 ], [ true, %283 ], [ true, %50 ]
  %319 = phi i32 [ 5, %282 ], [ %310, %313 ], [ 4, %96 ], [ 4, %283 ], [ 4, %50 ]
  %320 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %320) #8
  store i64 0, i64* %4, align 8
  %321 = call zeroext i1 @_ZN2v88internal7Scanner16ScanDecimalAsSmiEPmb(%"class.v8::internal::Scanner"* %0, i64* nonnull %4, i1 zeroext %318)
  br i1 %321, label %322, label %371

322:                                              ; preds = %317
  %323 = load %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"** %6, align 8
  %324 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %323, i64 0, i32 1, i32 1
  %325 = load i32, i32* %324, align 8
  %326 = icmp slt i32 %325, 11
  %327 = load i64, i64* %4, align 8
  %328 = icmp ult i64 %327, 1073741824
  %329 = and i1 %326, %328
  br i1 %329, label %330, label %370

330:                                              ; preds = %322
  %331 = load i32, i32* %51, align 8
  %332 = icmp eq i32 %331, 46
  br i1 %332, label %370, label %333

333:                                              ; preds = %330
  %334 = icmp ult i32 %331, 256
  br i1 %334, label %335, label %341

335:                                              ; preds = %333
  %336 = zext i32 %331 to i64
  %337 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN2v88internalL17kOneByteCharFlagsE, i64 0, i64 %336
  %338 = load i8, i8* %337, align 1
  %339 = and i8 %338, 1
  %340 = icmp eq i8 %339, 0
  br i1 %340, label %345, label %370

341:                                              ; preds = %333
  %342 = tail call zeroext i1 @_ZN2v88internal21IsIdentifierStartSlowEj(i32 %331) #8
  br i1 %342, label %370, label %343

343:                                              ; preds = %341
  %344 = load %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"** %6, align 8
  br label %345

345:                                              ; preds = %343, %335
  %346 = phi %"struct.v8::internal::Scanner::TokenDesc"* [ %344, %343 ], [ %323, %335 ]
  %347 = trunc i64 %327 to i32
  %348 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %346, i64 0, i32 7
  store i32 %347, i32* %348, align 8
  %349 = icmp eq i32 %319, 5
  br i1 %349, label %350, label %371

350:                                              ; preds = %345
  %351 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %11, align 8
  %352 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %351, i64 0, i32 4
  %353 = load i64, i64* %352, align 8
  %354 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %351, i64 0, i32 2
  %355 = bitcast i16** %354 to i64*
  %356 = load i64, i64* %355, align 8
  %357 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %351, i64 0, i32 1
  %358 = bitcast i16** %357 to i64*
  %359 = load i64, i64* %358, align 8
  %360 = sub i64 %356, %359
  %361 = lshr exact i64 %360, 1
  %362 = add i64 %361, %353
  %363 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 12
  %364 = bitcast %"struct.v8::internal::Scanner::Location"* %363 to i64*
  %365 = shl i64 %362, 32
  %366 = add i64 %365, -4294967296
  %367 = zext i32 %25 to i64
  %368 = or i64 %366, %367
  store i64 %368, i64* %364, align 8
  %369 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 13
  store i32 314, i32* %369, align 8
  br label %371

370:                                              ; preds = %335, %341, %330, %322
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %320) #8
  br label %373

371:                                              ; preds = %345, %350, %317
  %372 = phi i8 [ 112, %317 ], [ 91, %350 ], [ 91, %345 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %320) #8
  br label %616

373:                                              ; preds = %370, %313
  %374 = phi i32 [ %310, %313 ], [ %319, %370 ]
  %375 = phi i1 [ %316, %313 ], [ %318, %370 ]
  %376 = tail call zeroext i1 @_ZN2v88internal7Scanner17ScanDecimalDigitsEb(%"class.v8::internal::Scanner"* %0, i1 zeroext %375)
  br i1 %376, label %377, label %616

377:                                              ; preds = %373
  %378 = load i32, i32* %51, align 8
  %379 = icmp eq i32 %378, 46
  br i1 %379, label %380, label %440

380:                                              ; preds = %377
  %381 = load %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"** %6, align 8
  %382 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %381, i64 0, i32 1
  %383 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %381, i64 0, i32 1, i32 2
  %384 = load i8, i8* %383, align 4, !range !2
  %385 = icmp eq i8 %384, 0
  br i1 %385, label %403, label %386

386:                                              ; preds = %380
  %387 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %381, i64 0, i32 1, i32 1
  %388 = load i32, i32* %387, align 8
  %389 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %381, i64 0, i32 1, i32 0, i32 1
  %390 = load i64, i64* %389, align 8
  %391 = trunc i64 %390 to i32
  %392 = icmp slt i32 %388, %391
  br i1 %392, label %395, label %393

393:                                              ; preds = %386
  tail call void @_ZN2v88internal13LiteralBuffer12ExpandBufferEv(%"class.v8::internal::LiteralBuffer"* %382) #8
  %394 = load i32, i32* %387, align 8
  br label %395

395:                                              ; preds = %393, %386
  %396 = phi i32 [ %388, %386 ], [ %394, %393 ]
  %397 = sext i32 %396 to i64
  %398 = getelementptr inbounds %"class.v8::internal::LiteralBuffer", %"class.v8::internal::LiteralBuffer"* %382, i64 0, i32 0, i32 0
  %399 = load i8*, i8** %398, align 8
  %400 = getelementptr inbounds i8, i8* %399, i64 %397
  store i8 46, i8* %400, align 1
  %401 = load i32, i32* %387, align 8
  %402 = add nsw i32 %401, 1
  store i32 %402, i32* %387, align 8
  br label %404

403:                                              ; preds = %380
  tail call void @_ZN2v88internal13LiteralBuffer14AddTwoByteCharEj(%"class.v8::internal::LiteralBuffer"* %382, i32 46) #8
  br label %404

404:                                              ; preds = %403, %395
  %405 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %11, align 8
  %406 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %405, i64 0, i32 2
  %407 = load i16*, i16** %406, align 8
  %408 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %405, i64 0, i32 3
  %409 = load i16*, i16** %408, align 8
  %410 = icmp ult i16* %407, %409
  br i1 %410, label %425, label %411, !prof !4

411:                                              ; preds = %404
  %412 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %405, i64 0, i32 6
  %413 = load i8, i8* %412, align 8, !range !2
  %414 = icmp eq i8 %413, 0
  br i1 %414, label %415, label %422

415:                                              ; preds = %411
  %416 = bitcast %"class.v8::internal::Utf16CharacterStream"* %405 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %417 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %416, align 8
  %418 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %417, i64 5
  %419 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %418, align 8
  %420 = tail call zeroext i1 %419(%"class.v8::internal::Utf16CharacterStream"* %405) #8
  %421 = load i16*, i16** %406, align 8
  br i1 %420, label %425, label %422

422:                                              ; preds = %411, %415
  %423 = phi i16* [ %421, %415 ], [ %407, %411 ]
  %424 = getelementptr inbounds i16, i16* %423, i64 1
  store i16* %424, i16** %406, align 8
  store i32 -1, i32* %51, align 8
  br label %431

425:                                              ; preds = %415, %404
  %426 = phi i16* [ %407, %404 ], [ %421, %415 ]
  %427 = load i16, i16* %426, align 2
  %428 = zext i16 %427 to i32
  %429 = getelementptr inbounds i16, i16* %426, i64 1
  store i16* %429, i16** %406, align 8
  store i32 %428, i32* %51, align 8
  %430 = icmp eq i16 %427, 95
  br i1 %430, label %616, label %431

431:                                              ; preds = %422, %425
  %432 = tail call zeroext i1 @_ZN2v88internal7Scanner17ScanDecimalDigitsEb(%"class.v8::internal::Scanner"* %0, i1 zeroext true)
  br i1 %432, label %433, label %616

433:                                              ; preds = %48, %431
  %434 = phi i32 [ 4, %48 ], [ %374, %431 ]
  %435 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 5
  %436 = load i32, i32* %435, align 8
  br label %505

437:                                              ; preds = %308, %157, %271, %214
  %438 = phi i32 [ %310, %308 ], [ 3, %157 ], [ 1, %271 ], [ 2, %214 ]
  %439 = load i32, i32* %51, align 8
  br label %440

440:                                              ; preds = %437, %377
  %441 = phi i32 [ %439, %437 ], [ %378, %377 ]
  %442 = phi i32 [ %438, %437 ], [ %374, %377 ]
  %443 = icmp eq i32 %441, 110
  br i1 %443, label %444, label %505

444:                                              ; preds = %440
  %445 = add i32 %442, -1
  %446 = icmp ult i32 %445, 4
  br i1 %446, label %447, label %581

447:                                              ; preds = %444
  %448 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %11, align 8
  %449 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %448, i64 0, i32 4
  %450 = load i64, i64* %449, align 8
  %451 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %448, i64 0, i32 2
  %452 = bitcast i16** %451 to i64*
  %453 = load i64, i64* %452, align 8
  %454 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %448, i64 0, i32 1
  %455 = bitcast i16** %454 to i64*
  %456 = load i64, i64* %455, align 8
  %457 = sub i64 %453, %456
  %458 = lshr exact i64 %457, 1
  %459 = add i64 %458, %450
  %460 = trunc i64 %459 to i32
  %461 = add nsw i32 %460, -1
  %462 = sub i32 1, %24
  %463 = icmp eq i32 %442, 4
  %464 = select i1 %463, i32 0, i32 -2
  %465 = add i32 %464, %462
  %466 = add i32 %465, %461
  %467 = icmp sgt i32 %466, 268435456
  %468 = inttoptr i64 %453 to i16*
  br i1 %467, label %469, label %480

469:                                              ; preds = %447
  %470 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 14
  %471 = load i32, i32* %470, align 4
  %472 = icmp eq i32 %471, 0
  br i1 %472, label %473, label %616

473:                                              ; preds = %469
  store i32 190, i32* %470, align 4
  %474 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 15
  %475 = bitcast %"struct.v8::internal::Scanner::Location"* %474 to i64*
  %476 = zext i32 %461 to i64
  %477 = shl nuw i64 %476, 32
  %478 = zext i32 %25 to i64
  %479 = or i64 %477, %478
  store i64 %479, i64* %475, align 8
  br label %616

480:                                              ; preds = %447
  %481 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %448, i64 0, i32 3
  %482 = load i16*, i16** %481, align 8
  %483 = icmp ugt i16* %482, %468
  br i1 %483, label %484, label %487, !prof !4

484:                                              ; preds = %480
  %485 = load i16, i16* %468, align 2
  %486 = zext i16 %485 to i32
  br label %501

487:                                              ; preds = %480
  %488 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %448, i64 0, i32 6
  %489 = load i8, i8* %488, align 8, !range !2
  %490 = icmp eq i8 %489, 0
  br i1 %490, label %491, label %501

491:                                              ; preds = %487
  %492 = bitcast %"class.v8::internal::Utf16CharacterStream"* %448 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %493 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %492, align 8
  %494 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %493, i64 5
  %495 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %494, align 8
  %496 = tail call zeroext i1 %495(%"class.v8::internal::Utf16CharacterStream"* %448) #8
  %497 = load i16*, i16** %451, align 8
  br i1 %496, label %498, label %501

498:                                              ; preds = %491
  %499 = load i16, i16* %497, align 2
  %500 = zext i16 %499 to i32
  br label %501

501:                                              ; preds = %498, %491, %487, %484
  %502 = phi i16* [ %468, %484 ], [ %497, %498 ], [ %468, %487 ], [ %497, %491 ]
  %503 = phi i32 [ %486, %484 ], [ %500, %498 ], [ -1, %487 ], [ -1, %491 ]
  %504 = getelementptr inbounds i16, i16* %502, i64 1
  store i16* %504, i16** %451, align 8
  store i32 %503, i32* %51, align 8
  br label %573

505:                                              ; preds = %440, %433
  %506 = phi i32 [ %436, %433 ], [ %441, %440 ]
  %507 = phi i32 [ %434, %433 ], [ %442, %440 ]
  %508 = phi i32* [ %435, %433 ], [ %51, %440 ]
  %509 = or i32 %506, 32
  %510 = icmp eq i32 %509, 101
  br i1 %510, label %511, label %573

511:                                              ; preds = %505
  %512 = and i32 %507, -2
  %513 = icmp eq i32 %512, 4
  br i1 %513, label %514, label %616

514:                                              ; preds = %511
  %515 = load %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"** %6, align 8
  %516 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %515, i64 0, i32 1
  %517 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %515, i64 0, i32 1, i32 2
  %518 = load i8, i8* %517, align 4, !range !2
  %519 = icmp eq i8 %518, 0
  br i1 %519, label %541, label %520

520:                                              ; preds = %514
  %521 = icmp ult i32 %506, 256
  br i1 %521, label %522, label %540

522:                                              ; preds = %520
  %523 = trunc i32 %506 to i8
  %524 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %515, i64 0, i32 1, i32 1
  %525 = load i32, i32* %524, align 8
  %526 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %515, i64 0, i32 1, i32 0, i32 1
  %527 = load i64, i64* %526, align 8
  %528 = trunc i64 %527 to i32
  %529 = icmp slt i32 %525, %528
  br i1 %529, label %532, label %530

530:                                              ; preds = %522
  tail call void @_ZN2v88internal13LiteralBuffer12ExpandBufferEv(%"class.v8::internal::LiteralBuffer"* %516) #8
  %531 = load i32, i32* %524, align 8
  br label %532

532:                                              ; preds = %530, %522
  %533 = phi i32 [ %525, %522 ], [ %531, %530 ]
  %534 = sext i32 %533 to i64
  %535 = getelementptr inbounds %"class.v8::internal::LiteralBuffer", %"class.v8::internal::LiteralBuffer"* %516, i64 0, i32 0, i32 0
  %536 = load i8*, i8** %535, align 8
  %537 = getelementptr inbounds i8, i8* %536, i64 %534
  store i8 %523, i8* %537, align 1
  %538 = load i32, i32* %524, align 8
  %539 = add nsw i32 %538, 1
  store i32 %539, i32* %524, align 8
  br label %542

540:                                              ; preds = %520
  tail call void @_ZN2v88internal13LiteralBuffer16ConvertToTwoByteEv(%"class.v8::internal::LiteralBuffer"* %516) #8
  br label %541

541:                                              ; preds = %540, %514
  tail call void @_ZN2v88internal13LiteralBuffer14AddTwoByteCharEj(%"class.v8::internal::LiteralBuffer"* %516, i32 %506) #8
  br label %542

542:                                              ; preds = %541, %532
  %543 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %11, align 8
  %544 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %543, i64 0, i32 2
  %545 = load i16*, i16** %544, align 8
  %546 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %543, i64 0, i32 3
  %547 = load i16*, i16** %546, align 8
  %548 = icmp ult i16* %545, %547
  br i1 %548, label %549, label %552, !prof !4

549:                                              ; preds = %542
  %550 = load i16, i16* %545, align 2
  %551 = zext i16 %550 to i32
  br label %566

552:                                              ; preds = %542
  %553 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %543, i64 0, i32 6
  %554 = load i8, i8* %553, align 8, !range !2
  %555 = icmp eq i8 %554, 0
  br i1 %555, label %556, label %566

556:                                              ; preds = %552
  %557 = bitcast %"class.v8::internal::Utf16CharacterStream"* %543 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %558 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %557, align 8
  %559 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %558, i64 5
  %560 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %559, align 8
  %561 = tail call zeroext i1 %560(%"class.v8::internal::Utf16CharacterStream"* %543) #8
  %562 = load i16*, i16** %544, align 8
  br i1 %561, label %563, label %566

563:                                              ; preds = %556
  %564 = load i16, i16* %562, align 2
  %565 = zext i16 %564 to i32
  br label %566

566:                                              ; preds = %549, %552, %556, %563
  %567 = phi i16* [ %545, %549 ], [ %562, %563 ], [ %545, %552 ], [ %562, %556 ]
  %568 = phi i32 [ %551, %549 ], [ %565, %563 ], [ -1, %552 ], [ -1, %556 ]
  %569 = getelementptr inbounds i16, i16* %567, i64 1
  store i16* %569, i16** %544, align 8
  store i32 %568, i32* %508, align 8
  %570 = tail call zeroext i1 @_ZN2v88internal7Scanner17ScanSignedIntegerEv(%"class.v8::internal::Scanner"* %0)
  br i1 %570, label %571, label %616

571:                                              ; preds = %566
  %572 = load i32, i32* %508, align 8
  br label %573

573:                                              ; preds = %505, %571, %501
  %574 = phi i32 [ %442, %501 ], [ %507, %571 ], [ %507, %505 ]
  %575 = phi i32 [ %503, %501 ], [ %572, %571 ], [ %506, %505 ]
  %576 = phi i8 [ 92, %501 ], [ 90, %571 ], [ 90, %505 ]
  %577 = add i32 %575, -48
  %578 = icmp ult i32 %577, 10
  br i1 %578, label %616, label %579

579:                                              ; preds = %573
  %580 = icmp ult i32 %575, 256
  br i1 %580, label %581, label %590

581:                                              ; preds = %444, %579
  %582 = phi i32 [ %574, %579 ], [ %442, %444 ]
  %583 = phi i32 [ %575, %579 ], [ 110, %444 ]
  %584 = phi i8 [ %576, %579 ], [ 90, %444 ]
  %585 = zext i32 %583 to i64
  %586 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN2v88internalL17kOneByteCharFlagsE, i64 0, i64 %585
  %587 = load i8, i8* %586, align 1
  %588 = and i8 %587, 1
  %589 = icmp eq i8 %588, 0
  br i1 %589, label %592, label %616

590:                                              ; preds = %579
  %591 = tail call zeroext i1 @_ZN2v88internal21IsIdentifierStartSlowEj(i32 %575) #8
  br i1 %591, label %616, label %592

592:                                              ; preds = %581, %590
  %593 = phi i32 [ %582, %581 ], [ %574, %590 ]
  %594 = phi i8 [ %584, %581 ], [ %576, %590 ]
  %595 = icmp eq i32 %593, 5
  br i1 %595, label %596, label %616

596:                                              ; preds = %592
  %597 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %11, align 8
  %598 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %597, i64 0, i32 4
  %599 = load i64, i64* %598, align 8
  %600 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %597, i64 0, i32 2
  %601 = bitcast i16** %600 to i64*
  %602 = load i64, i64* %601, align 8
  %603 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %597, i64 0, i32 1
  %604 = bitcast i16** %603 to i64*
  %605 = load i64, i64* %604, align 8
  %606 = sub i64 %602, %605
  %607 = lshr exact i64 %606, 1
  %608 = add i64 %607, %599
  %609 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 12
  %610 = bitcast %"struct.v8::internal::Scanner::Location"* %609 to i64*
  %611 = shl i64 %608, 32
  %612 = add i64 %611, -4294967296
  %613 = zext i32 %25 to i64
  %614 = or i64 %612, %613
  store i64 %614, i64* %610, align 8
  %615 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 13
  store i32 314, i32* %615, align 8
  br label %616

616:                                              ; preds = %592, %596, %581, %473, %469, %431, %425, %373, %371, %301, %285, %511, %566, %590, %573, %271, %214, %157, %48, %37
  %617 = phi i8 [ 112, %37 ], [ 112, %48 ], [ 112, %157 ], [ 112, %214 ], [ 112, %271 ], [ 112, %511 ], [ 112, %566 ], [ 112, %590 ], [ 112, %573 ], [ 112, %285 ], [ 112, %301 ], [ 112, %581 ], [ 112, %431 ], [ 112, %425 ], [ 112, %373 ], [ %372, %371 ], [ 112, %469 ], [ 112, %473 ], [ %594, %596 ], [ %594, %592 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #8
  ret i8 %617
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2v88internal7Scanner27ScanIdentifierUnicodeEscapeEv(%"class.v8::internal::Scanner"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 4
  %3 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %3, i64 0, i32 2
  %5 = load i16*, i16** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %3, i64 0, i32 3
  %7 = load i16*, i16** %6, align 8
  %8 = icmp ult i16* %5, %7
  br i1 %8, label %24, label %9, !prof !4

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %3, i64 0, i32 6
  %11 = load i8, i8* %10, align 8, !range !2
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %20

13:                                               ; preds = %9
  %14 = bitcast %"class.v8::internal::Utf16CharacterStream"* %3 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %15 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %14, align 8
  %16 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %15, i64 5
  %17 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %16, align 8
  %18 = tail call zeroext i1 %17(%"class.v8::internal::Utf16CharacterStream"* %3) #8
  %19 = load i16*, i16** %4, align 8
  br i1 %18, label %24, label %20

20:                                               ; preds = %9, %13
  %21 = phi i16* [ %19, %13 ], [ %5, %9 ]
  %22 = getelementptr inbounds i16, i16* %21, i64 1
  store i16* %22, i16** %4, align 8
  %23 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 5
  store i32 -1, i32* %23, align 8
  br label %60

24:                                               ; preds = %13, %1
  %25 = phi i16* [ %5, %1 ], [ %19, %13 ]
  %26 = load i16, i16* %25, align 2
  %27 = zext i16 %26 to i32
  %28 = getelementptr inbounds i16, i16* %25, i64 1
  store i16* %28, i16** %4, align 8
  %29 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 5
  store i32 %27, i32* %29, align 8
  %30 = icmp eq i16 %26, 117
  br i1 %30, label %31, label %60

31:                                               ; preds = %24
  %32 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %2, align 8
  %33 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %32, i64 0, i32 2
  %34 = load i16*, i16** %33, align 8
  %35 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %32, i64 0, i32 3
  %36 = load i16*, i16** %35, align 8
  %37 = icmp ult i16* %34, %36
  br i1 %37, label %38, label %41, !prof !4

38:                                               ; preds = %31
  %39 = load i16, i16* %34, align 2
  %40 = zext i16 %39 to i32
  br label %55

41:                                               ; preds = %31
  %42 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %32, i64 0, i32 6
  %43 = load i8, i8* %42, align 8, !range !2
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %45, label %55

45:                                               ; preds = %41
  %46 = bitcast %"class.v8::internal::Utf16CharacterStream"* %32 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %47 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %46, align 8
  %48 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %47, i64 5
  %49 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %48, align 8
  %50 = tail call zeroext i1 %49(%"class.v8::internal::Utf16CharacterStream"* %32) #8
  %51 = load i16*, i16** %33, align 8
  br i1 %50, label %52, label %55

52:                                               ; preds = %45
  %53 = load i16, i16* %51, align 2
  %54 = zext i16 %53 to i32
  br label %55

55:                                               ; preds = %38, %41, %45, %52
  %56 = phi i16* [ %34, %38 ], [ %51, %52 ], [ %34, %41 ], [ %51, %45 ]
  %57 = phi i32 [ %40, %38 ], [ %54, %52 ], [ -1, %41 ], [ -1, %45 ]
  %58 = getelementptr inbounds i16, i16* %56, i64 1
  store i16* %58, i16** %33, align 8
  store i32 %57, i32* %29, align 8
  %59 = tail call i32 @_ZN2v88internal7Scanner17ScanUnicodeEscapeILb0EEEjv(%"class.v8::internal::Scanner"* %0)
  br label %60

60:                                               ; preds = %24, %20, %55
  %61 = phi i32 [ %59, %55 ], [ -1, %20 ], [ -1, %24 ]
  ret i32 %61
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal7Scanner17ScanUnicodeEscapeILb0EEEjv(%"class.v8::internal::Scanner"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 5
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 123
  %5 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 4
  %6 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %6, i64 0, i32 4
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %6, i64 0, i32 2
  %10 = bitcast i16** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %6, i64 0, i32 1
  %13 = bitcast i16** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = sub i64 %11, %14
  %16 = lshr exact i64 %15, 1
  %17 = add i64 %16, %8
  %18 = add i64 %17, 4294967293
  %19 = inttoptr i64 %11 to i16*
  br i1 %4, label %23, label %20

20:                                               ; preds = %1
  %21 = add i32 %3, -48
  %22 = icmp ult i32 %21, 10
  br i1 %22, label %195, label %177

23:                                               ; preds = %1
  %24 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %6, i64 0, i32 3
  %25 = load i16*, i16** %24, align 8
  %26 = icmp ugt i16* %25, %19
  br i1 %26, label %41, label %27, !prof !4

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %6, i64 0, i32 6
  %29 = load i8, i8* %28, align 8, !range !2
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %31, label %38

31:                                               ; preds = %27
  %32 = bitcast %"class.v8::internal::Utf16CharacterStream"* %6 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %33 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %32, align 8
  %34 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %33, i64 5
  %35 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %34, align 8
  %36 = tail call zeroext i1 %35(%"class.v8::internal::Utf16CharacterStream"* %6) #8
  %37 = load i16*, i16** %9, align 8
  br i1 %36, label %41, label %38

38:                                               ; preds = %31, %27
  %39 = phi i16* [ %37, %31 ], [ %19, %27 ]
  %40 = getelementptr inbounds i16, i16* %39, i64 1
  store i16* %40, i16** %9, align 8
  store i32 -1, i32* %2, align 8
  br label %126

41:                                               ; preds = %31, %23
  %42 = phi i16* [ %19, %23 ], [ %37, %31 ]
  %43 = load i16, i16* %42, align 2
  %44 = zext i16 %43 to i32
  %45 = getelementptr inbounds i16, i16* %42, i64 1
  store i16* %45, i16** %9, align 8
  store i32 %44, i32* %2, align 8
  %46 = add nsw i32 %44, -48
  %47 = icmp ult i32 %46, 10
  br i1 %47, label %55, label %48

48:                                               ; preds = %41
  %49 = or i32 %46, 32
  %50 = add nsw i32 %49, -49
  %51 = icmp ugt i32 %50, 5
  %52 = add nsw i32 %49, -39
  %53 = icmp slt i32 %52, 0
  %54 = or i1 %51, %53
  br i1 %54, label %126, label %55

55:                                               ; preds = %48, %41
  %56 = phi i32 [ %52, %48 ], [ %46, %41 ]
  br label %57

57:                                               ; preds = %55, %117
  %58 = phi i32 [ %118, %117 ], [ %56, %55 ]
  %59 = phi i32 [ %61, %117 ], [ 0, %55 ]
  %60 = shl i32 %59, 4
  %61 = add i32 %60, %58
  %62 = icmp ugt i32 %61, 1114111
  %63 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %5, align 8
  br i1 %62, label %64, label %85

64:                                               ; preds = %57
  %65 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 14
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %126

68:                                               ; preds = %64
  %69 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %63, i64 0, i32 2
  %70 = bitcast i16** %69 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %63, i64 0, i32 1
  %73 = bitcast i16** %72 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = sub i64 %71, %74
  %76 = lshr exact i64 %75, 1
  %77 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %63, i64 0, i32 4
  %78 = load i64, i64* %77, align 8
  %79 = add i64 %76, %78
  store i32 353, i32* %65, align 4
  %80 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 15
  %81 = bitcast %"struct.v8::internal::Scanner::Location"* %80 to i64*
  %82 = shl i64 %79, 32
  %83 = and i64 %18, 4294967295
  %84 = or i64 %82, %83
  store i64 %84, i64* %81, align 8
  br label %126

85:                                               ; preds = %57
  %86 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %63, i64 0, i32 2
  %87 = load i16*, i16** %86, align 8
  %88 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %63, i64 0, i32 3
  %89 = load i16*, i16** %88, align 8
  %90 = icmp ult i16* %87, %89
  br i1 %90, label %105, label %91, !prof !4

91:                                               ; preds = %85
  %92 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %63, i64 0, i32 6
  %93 = load i8, i8* %92, align 8, !range !2
  %94 = icmp eq i8 %93, 0
  br i1 %94, label %95, label %102

95:                                               ; preds = %91
  %96 = bitcast %"class.v8::internal::Utf16CharacterStream"* %63 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %97 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %96, align 8
  %98 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %97, i64 5
  %99 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %98, align 8
  %100 = tail call zeroext i1 %99(%"class.v8::internal::Utf16CharacterStream"* %63) #8
  %101 = load i16*, i16** %86, align 8
  br i1 %100, label %105, label %102

102:                                              ; preds = %95, %91
  %103 = phi i16* [ %101, %95 ], [ %87, %91 ]
  %104 = getelementptr inbounds i16, i16* %103, i64 1
  store i16* %104, i16** %86, align 8
  store i32 -1, i32* %2, align 8
  br label %126

105:                                              ; preds = %95, %85
  %106 = phi i16* [ %87, %85 ], [ %101, %95 ]
  %107 = load i16, i16* %106, align 2
  %108 = zext i16 %107 to i32
  %109 = getelementptr inbounds i16, i16* %106, i64 1
  store i16* %109, i16** %86, align 8
  store i32 %108, i32* %2, align 8
  %110 = add nsw i32 %108, -48
  %111 = icmp ult i32 %110, 10
  br i1 %111, label %117, label %112

112:                                              ; preds = %105
  %113 = or i32 %110, 32
  %114 = add nsw i32 %113, -49
  %115 = icmp ult i32 %114, 6
  %116 = add nsw i32 %113, -39
  br i1 %115, label %117, label %124

117:                                              ; preds = %112, %105
  %118 = phi i32 [ %110, %105 ], [ %116, %112 ]
  %119 = icmp sgt i32 %118, -1
  br i1 %119, label %57, label %120

120:                                              ; preds = %117
  %121 = icmp ne i32 %61, -1
  %122 = icmp eq i16 %107, 125
  %123 = and i1 %121, %122
  br i1 %123, label %149, label %126

124:                                              ; preds = %112
  %125 = icmp eq i16 %107, 125
  br i1 %125, label %149, label %126

126:                                              ; preds = %120, %38, %48, %68, %64, %102, %124
  %127 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %5, align 8
  %128 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %127, i64 0, i32 4
  %129 = load i64, i64* %128, align 8
  %130 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %127, i64 0, i32 2
  %131 = bitcast i16** %130 to i64*
  %132 = load i64, i64* %131, align 8
  %133 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %127, i64 0, i32 1
  %134 = bitcast i16** %133 to i64*
  %135 = load i64, i64* %134, align 8
  %136 = sub i64 %132, %135
  %137 = lshr exact i64 %136, 1
  %138 = add i64 %137, %129
  %139 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 14
  %140 = load i32, i32* %139, align 4
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %142, label %221

142:                                              ; preds = %126
  %143 = add i64 %138, 4294967295
  store i32 352, i32* %139, align 4
  %144 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 15
  %145 = bitcast %"struct.v8::internal::Scanner::Location"* %144 to i64*
  %146 = shl i64 %138, 32
  %147 = and i64 %143, 4294967295
  %148 = or i64 %147, %146
  store i64 %148, i64* %145, align 8
  br label %221

149:                                              ; preds = %120, %124
  %150 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %5, align 8
  %151 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %150, i64 0, i32 2
  %152 = load i16*, i16** %151, align 8
  %153 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %150, i64 0, i32 3
  %154 = load i16*, i16** %153, align 8
  %155 = icmp ult i16* %152, %154
  br i1 %155, label %156, label %159, !prof !4

156:                                              ; preds = %149
  %157 = load i16, i16* %152, align 2
  %158 = zext i16 %157 to i32
  br label %173

159:                                              ; preds = %149
  %160 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %150, i64 0, i32 6
  %161 = load i8, i8* %160, align 8, !range !2
  %162 = icmp eq i8 %161, 0
  br i1 %162, label %163, label %173

163:                                              ; preds = %159
  %164 = bitcast %"class.v8::internal::Utf16CharacterStream"* %150 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %165 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %164, align 8
  %166 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %165, i64 5
  %167 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %166, align 8
  %168 = tail call zeroext i1 %167(%"class.v8::internal::Utf16CharacterStream"* %150) #8
  %169 = load i16*, i16** %151, align 8
  br i1 %168, label %170, label %173

170:                                              ; preds = %163
  %171 = load i16, i16* %169, align 2
  %172 = zext i16 %171 to i32
  br label %173

173:                                              ; preds = %156, %159, %163, %170
  %174 = phi i16* [ %152, %156 ], [ %169, %170 ], [ %152, %159 ], [ %169, %163 ]
  %175 = phi i32 [ %158, %156 ], [ %172, %170 ], [ -1, %159 ], [ -1, %163 ]
  %176 = getelementptr inbounds i16, i16* %174, i64 1
  store i16* %176, i16** %151, align 8
  store i32 %175, i32* %2, align 8
  br label %221

177:                                              ; preds = %20
  %178 = or i32 %21, 32
  %179 = add i32 %178, -49
  %180 = icmp ugt i32 %179, 5
  %181 = add i32 %178, -39
  %182 = icmp slt i32 %181, 0
  %183 = or i1 %180, %182
  br i1 %183, label %184, label %195

184:                                              ; preds = %289, %251, %211, %299, %261, %223, %177
  %185 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 14
  %186 = load i32, i32* %185, align 4
  %187 = icmp eq i32 %186, 0
  br i1 %187, label %188, label %221

188:                                              ; preds = %184
  store i32 352, i32* %185, align 4
  %189 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 15
  %190 = bitcast %"struct.v8::internal::Scanner::Location"* %189 to i64*
  %191 = shl i64 %17, 32
  %192 = add i64 %191, 12884901888
  %193 = and i64 %18, 4294967295
  %194 = or i64 %192, %193
  store i64 %194, i64* %190, align 8
  br label %221

195:                                              ; preds = %177, %20
  %196 = phi i32 [ %21, %20 ], [ %181, %177 ]
  %197 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %6, i64 0, i32 3
  %198 = load i16*, i16** %197, align 8
  %199 = icmp ugt i16* %198, %19
  br i1 %199, label %214, label %200, !prof !4

200:                                              ; preds = %195
  %201 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %6, i64 0, i32 6
  %202 = load i8, i8* %201, align 8, !range !2
  %203 = icmp eq i8 %202, 0
  br i1 %203, label %204, label %211

204:                                              ; preds = %200
  %205 = bitcast %"class.v8::internal::Utf16CharacterStream"* %6 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %206 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %205, align 8
  %207 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %206, i64 5
  %208 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %207, align 8
  %209 = tail call zeroext i1 %208(%"class.v8::internal::Utf16CharacterStream"* %6) #8
  %210 = load i16*, i16** %9, align 8
  br i1 %209, label %214, label %211

211:                                              ; preds = %204, %200
  %212 = phi i16* [ %210, %204 ], [ %19, %200 ]
  %213 = getelementptr inbounds i16, i16* %212, i64 1
  store i16* %213, i16** %9, align 8
  store i32 -1, i32* %2, align 8
  br label %184

214:                                              ; preds = %204, %195
  %215 = phi i16* [ %19, %195 ], [ %210, %204 ]
  %216 = load i16, i16* %215, align 2
  %217 = zext i16 %216 to i32
  %218 = getelementptr inbounds i16, i16* %215, i64 1
  store i16* %218, i16** %9, align 8
  store i32 %217, i32* %2, align 8
  %219 = add nsw i32 %217, -48
  %220 = icmp ult i32 %219, 10
  br i1 %220, label %230, label %223

221:                                              ; preds = %333, %188, %184, %142, %126, %173
  %222 = phi i32 [ %61, %173 ], [ -1, %126 ], [ -1, %142 ], [ -1, %184 ], [ -1, %188 ], [ %309, %333 ]
  ret i32 %222

223:                                              ; preds = %214
  %224 = or i32 %219, 32
  %225 = add nsw i32 %224, -49
  %226 = icmp ugt i32 %225, 5
  %227 = add nsw i32 %224, -39
  %228 = icmp slt i32 %227, 0
  %229 = or i1 %226, %228
  br i1 %229, label %184, label %230

230:                                              ; preds = %223, %214
  %231 = phi i32 [ %219, %214 ], [ %227, %223 ]
  %232 = shl i32 %196, 4
  %233 = add i32 %231, %232
  %234 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %5, align 8
  %235 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %234, i64 0, i32 2
  %236 = load i16*, i16** %235, align 8
  %237 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %234, i64 0, i32 3
  %238 = load i16*, i16** %237, align 8
  %239 = icmp ult i16* %236, %238
  br i1 %239, label %254, label %240, !prof !4

240:                                              ; preds = %230
  %241 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %234, i64 0, i32 6
  %242 = load i8, i8* %241, align 8, !range !2
  %243 = icmp eq i8 %242, 0
  br i1 %243, label %244, label %251

244:                                              ; preds = %240
  %245 = bitcast %"class.v8::internal::Utf16CharacterStream"* %234 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %246 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %245, align 8
  %247 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %246, i64 5
  %248 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %247, align 8
  %249 = tail call zeroext i1 %248(%"class.v8::internal::Utf16CharacterStream"* %234) #8
  %250 = load i16*, i16** %235, align 8
  br i1 %249, label %254, label %251

251:                                              ; preds = %244, %240
  %252 = phi i16* [ %250, %244 ], [ %236, %240 ]
  %253 = getelementptr inbounds i16, i16* %252, i64 1
  store i16* %253, i16** %235, align 8
  store i32 -1, i32* %2, align 8
  br label %184

254:                                              ; preds = %230, %244
  %255 = phi i16* [ %250, %244 ], [ %236, %230 ]
  %256 = load i16, i16* %255, align 2
  %257 = zext i16 %256 to i32
  %258 = getelementptr inbounds i16, i16* %255, i64 1
  store i16* %258, i16** %235, align 8
  store i32 %257, i32* %2, align 8
  %259 = add nsw i32 %257, -48
  %260 = icmp ult i32 %259, 10
  br i1 %260, label %268, label %261

261:                                              ; preds = %254
  %262 = or i32 %259, 32
  %263 = add nsw i32 %262, -49
  %264 = icmp ugt i32 %263, 5
  %265 = add nsw i32 %262, -39
  %266 = icmp slt i32 %265, 0
  %267 = or i1 %264, %266
  br i1 %267, label %184, label %268

268:                                              ; preds = %261, %254
  %269 = phi i32 [ %259, %254 ], [ %265, %261 ]
  %270 = shl i32 %233, 4
  %271 = add i32 %269, %270
  %272 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %5, align 8
  %273 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %272, i64 0, i32 2
  %274 = load i16*, i16** %273, align 8
  %275 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %272, i64 0, i32 3
  %276 = load i16*, i16** %275, align 8
  %277 = icmp ult i16* %274, %276
  br i1 %277, label %292, label %278, !prof !4

278:                                              ; preds = %268
  %279 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %272, i64 0, i32 6
  %280 = load i8, i8* %279, align 8, !range !2
  %281 = icmp eq i8 %280, 0
  br i1 %281, label %282, label %289

282:                                              ; preds = %278
  %283 = bitcast %"class.v8::internal::Utf16CharacterStream"* %272 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %284 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %283, align 8
  %285 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %284, i64 5
  %286 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %285, align 8
  %287 = tail call zeroext i1 %286(%"class.v8::internal::Utf16CharacterStream"* %272) #8
  %288 = load i16*, i16** %273, align 8
  br i1 %287, label %292, label %289

289:                                              ; preds = %282, %278
  %290 = phi i16* [ %288, %282 ], [ %274, %278 ]
  %291 = getelementptr inbounds i16, i16* %290, i64 1
  store i16* %291, i16** %273, align 8
  store i32 -1, i32* %2, align 8
  br label %184

292:                                              ; preds = %268, %282
  %293 = phi i16* [ %288, %282 ], [ %274, %268 ]
  %294 = load i16, i16* %293, align 2
  %295 = zext i16 %294 to i32
  %296 = getelementptr inbounds i16, i16* %293, i64 1
  store i16* %296, i16** %273, align 8
  store i32 %295, i32* %2, align 8
  %297 = add nsw i32 %295, -48
  %298 = icmp ult i32 %297, 10
  br i1 %298, label %306, label %299

299:                                              ; preds = %292
  %300 = or i32 %297, 32
  %301 = add nsw i32 %300, -49
  %302 = icmp ugt i32 %301, 5
  %303 = add nsw i32 %300, -39
  %304 = icmp slt i32 %303, 0
  %305 = or i1 %302, %304
  br i1 %305, label %184, label %306

306:                                              ; preds = %299, %292
  %307 = phi i32 [ %297, %292 ], [ %303, %299 ]
  %308 = shl i32 %271, 4
  %309 = add i32 %307, %308
  %310 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %5, align 8
  %311 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %310, i64 0, i32 2
  %312 = load i16*, i16** %311, align 8
  %313 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %310, i64 0, i32 3
  %314 = load i16*, i16** %313, align 8
  %315 = icmp ult i16* %312, %314
  br i1 %315, label %330, label %316, !prof !4

316:                                              ; preds = %306
  %317 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %310, i64 0, i32 6
  %318 = load i8, i8* %317, align 8, !range !2
  %319 = icmp eq i8 %318, 0
  br i1 %319, label %320, label %333

320:                                              ; preds = %316
  %321 = bitcast %"class.v8::internal::Utf16CharacterStream"* %310 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %322 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %321, align 8
  %323 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %322, i64 5
  %324 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %323, align 8
  %325 = tail call zeroext i1 %324(%"class.v8::internal::Utf16CharacterStream"* %310) #8
  %326 = load i16*, i16** %311, align 8
  br i1 %325, label %327, label %333

327:                                              ; preds = %320
  %328 = load i16, i16* %326, align 2
  %329 = zext i16 %328 to i32
  br label %333

330:                                              ; preds = %306
  %331 = load i16, i16* %312, align 2
  %332 = zext i16 %331 to i32
  br label %333

333:                                              ; preds = %330, %327, %320, %316
  %334 = phi i16* [ %312, %330 ], [ %326, %327 ], [ %312, %316 ], [ %326, %320 ]
  %335 = phi i32 [ %332, %330 ], [ %329, %327 ], [ -1, %316 ], [ -1, %320 ]
  %336 = getelementptr inbounds i16, i16* %334, i64 1
  store i16* %336, i16** %311, align 8
  store i32 %335, i32* %2, align 8
  br label %221
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i8 @_ZN2v88internal7Scanner32ScanIdentifierOrKeywordInnerSlowEbb(%"class.v8::internal::Scanner"*, i1 zeroext, i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = zext i1 %1 to i8
  %5 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 5
  %6 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 4
  %7 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 2
  br label %8

8:                                                ; preds = %120, %3
  %9 = phi i1 [ %2, %3 ], [ %95, %120 ]
  %10 = phi i8 [ %4, %3 ], [ 1, %120 ]
  br label %11

11:                                               ; preds = %8, %274
  %12 = phi i1 [ %222, %274 ], [ %9, %8 ]
  %13 = load i32, i32* %5, align 8
  %14 = icmp eq i32 %13, 92
  br i1 %14, label %15, label %123

15:                                               ; preds = %11
  %16 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %6, align 8
  %17 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %16, i64 0, i32 2
  %18 = load i16*, i16** %17, align 8
  %19 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %16, i64 0, i32 3
  %20 = load i16*, i16** %19, align 8
  %21 = icmp ult i16* %18, %20
  br i1 %21, label %36, label %22, !prof !4

22:                                               ; preds = %15
  %23 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %16, i64 0, i32 6
  %24 = load i8, i8* %23, align 8, !range !2
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %26, label %33

26:                                               ; preds = %22
  %27 = bitcast %"class.v8::internal::Utf16CharacterStream"* %16 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %28 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %27, align 8
  %29 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %28, i64 5
  %30 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %29, align 8
  %31 = tail call zeroext i1 %30(%"class.v8::internal::Utf16CharacterStream"* %16) #8
  %32 = load i16*, i16** %17, align 8
  br i1 %31, label %36, label %33

33:                                               ; preds = %26, %22
  %34 = phi i16* [ %32, %26 ], [ %18, %22 ]
  %35 = getelementptr inbounds i16, i16* %34, i64 1
  store i16* %35, i16** %17, align 8
  store i32 -1, i32* %5, align 8
  br label %80

36:                                               ; preds = %26, %15
  %37 = phi i16* [ %18, %15 ], [ %32, %26 ]
  %38 = load i16, i16* %37, align 2
  %39 = zext i16 %38 to i32
  %40 = getelementptr inbounds i16, i16* %37, i64 1
  store i16* %40, i16** %17, align 8
  store i32 %39, i32* %5, align 8
  %41 = icmp eq i16 %38, 117
  br i1 %41, label %42, label %80

42:                                               ; preds = %36
  %43 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %6, align 8
  %44 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %43, i64 0, i32 2
  %45 = load i16*, i16** %44, align 8
  %46 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %43, i64 0, i32 3
  %47 = load i16*, i16** %46, align 8
  %48 = icmp ult i16* %45, %47
  br i1 %48, label %49, label %52, !prof !4

49:                                               ; preds = %42
  %50 = load i16, i16* %45, align 2
  %51 = zext i16 %50 to i32
  br label %66

52:                                               ; preds = %42
  %53 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %43, i64 0, i32 6
  %54 = load i8, i8* %53, align 8, !range !2
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %56, label %66

56:                                               ; preds = %52
  %57 = bitcast %"class.v8::internal::Utf16CharacterStream"* %43 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %58 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %57, align 8
  %59 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %58, i64 5
  %60 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %59, align 8
  %61 = tail call zeroext i1 %60(%"class.v8::internal::Utf16CharacterStream"* %43) #8
  %62 = load i16*, i16** %44, align 8
  br i1 %61, label %63, label %66

63:                                               ; preds = %56
  %64 = load i16, i16* %62, align 2
  %65 = zext i16 %64 to i32
  br label %66

66:                                               ; preds = %49, %52, %56, %63
  %67 = phi i16* [ %45, %49 ], [ %62, %63 ], [ %45, %52 ], [ %62, %56 ]
  %68 = phi i32 [ %51, %49 ], [ %65, %63 ], [ -1, %52 ], [ -1, %56 ]
  %69 = getelementptr inbounds i16, i16* %67, i64 1
  store i16* %69, i16** %44, align 8
  store i32 %68, i32* %5, align 8
  %70 = tail call i32 @_ZN2v88internal7Scanner17ScanUnicodeEscapeILb0EEEjv(%"class.v8::internal::Scanner"* %0) #8
  %71 = icmp eq i32 %70, 92
  br i1 %71, label %341, label %72

72:                                               ; preds = %66
  %73 = icmp ult i32 %70, 256
  br i1 %73, label %74, label %80

74:                                               ; preds = %72
  %75 = zext i32 %70 to i64
  %76 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN2v88internalL17kOneByteCharFlagsE, i64 0, i64 %75
  %77 = load i8, i8* %76, align 1
  %78 = and i8 %77, 2
  %79 = icmp eq i8 %78, 0
  br i1 %79, label %341, label %83

80:                                               ; preds = %33, %36, %72
  %81 = phi i32 [ %70, %72 ], [ -1, %36 ], [ -1, %33 ]
  %82 = tail call zeroext i1 @_ZN2v88internal20IsIdentifierPartSlowEj(i32 %81) #8
  br i1 %82, label %92, label %341

83:                                               ; preds = %74
  %84 = icmp ult i32 %70, 128
  %85 = and i1 %12, %84
  br i1 %85, label %86, label %92

86:                                               ; preds = %83
  %87 = zext i32 %70 to i64
  %88 = getelementptr inbounds [128 x i8], [128 x i8]* @_ZN2v88internalL20character_scan_flagsE, i64 0, i64 %87
  %89 = load i8, i8* %88, align 1
  %90 = and i8 %89, 2
  %91 = icmp eq i8 %90, 0
  br label %92

92:                                               ; preds = %80, %83, %86
  %93 = phi i1 [ true, %83 ], [ true, %86 ], [ false, %80 ]
  %94 = phi i32 [ %70, %83 ], [ %70, %86 ], [ %81, %80 ]
  %95 = phi i1 [ false, %83 ], [ %91, %86 ], [ false, %80 ]
  %96 = load %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"** %7, align 8
  %97 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %96, i64 0, i32 1
  %98 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %96, i64 0, i32 1, i32 2
  %99 = load i8, i8* %98, align 4, !range !2
  %100 = icmp eq i8 %99, 0
  br i1 %100, label %122, label %101

101:                                              ; preds = %92
  br i1 %93, label %102, label %121

102:                                              ; preds = %101
  %103 = trunc i32 %94 to i8
  %104 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %96, i64 0, i32 1, i32 1
  %105 = load i32, i32* %104, align 8
  %106 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %96, i64 0, i32 1, i32 0, i32 1
  %107 = load i64, i64* %106, align 8
  %108 = trunc i64 %107 to i32
  %109 = icmp slt i32 %105, %108
  br i1 %109, label %112, label %110

110:                                              ; preds = %102
  tail call void @_ZN2v88internal13LiteralBuffer12ExpandBufferEv(%"class.v8::internal::LiteralBuffer"* %97) #8
  %111 = load i32, i32* %104, align 8
  br label %112

112:                                              ; preds = %110, %102
  %113 = phi i32 [ %105, %102 ], [ %111, %110 ]
  %114 = sext i32 %113 to i64
  %115 = getelementptr inbounds %"class.v8::internal::LiteralBuffer", %"class.v8::internal::LiteralBuffer"* %97, i64 0, i32 0, i32 0
  %116 = load i8*, i8** %115, align 8
  %117 = getelementptr inbounds i8, i8* %116, i64 %114
  store i8 %103, i8* %117, align 1
  %118 = load i32, i32* %104, align 8
  %119 = add nsw i32 %118, 1
  store i32 %119, i32* %104, align 8
  br label %120

120:                                              ; preds = %112, %122
  br label %8

121:                                              ; preds = %101
  tail call void @_ZN2v88internal13LiteralBuffer16ConvertToTwoByteEv(%"class.v8::internal::LiteralBuffer"* %97) #8
  br label %122

122:                                              ; preds = %121, %92
  tail call void @_ZN2v88internal13LiteralBuffer14AddTwoByteCharEj(%"class.v8::internal::LiteralBuffer"* %97, i32 %94) #8
  br label %120

123:                                              ; preds = %11
  %124 = icmp ult i32 %13, 256
  br i1 %124, label %125, label %131

125:                                              ; preds = %123
  %126 = zext i32 %13 to i64
  %127 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN2v88internalL17kOneByteCharFlagsE, i64 0, i64 %126
  %128 = load i8, i8* %127, align 1
  %129 = and i8 %128, 2
  %130 = icmp eq i8 %129, 0
  br i1 %130, label %135, label %211

131:                                              ; preds = %123
  %132 = tail call zeroext i1 @_ZN2v88internal20IsIdentifierPartSlowEj(i32 %13) #8
  br i1 %132, label %211, label %133

133:                                              ; preds = %131
  %134 = load i32, i32* %5, align 8
  br label %135

135:                                              ; preds = %133, %125
  %136 = phi i32 [ %134, %133 ], [ %13, %125 ]
  %137 = and i32 %136, 64512
  %138 = icmp eq i32 %137, 55296
  br i1 %138, label %139, label %278

139:                                              ; preds = %135
  %140 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %6, align 8
  %141 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %140, i64 0, i32 2
  %142 = load i16*, i16** %141, align 8
  %143 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %140, i64 0, i32 3
  %144 = load i16*, i16** %143, align 8
  %145 = icmp ult i16* %142, %144
  br i1 %145, label %160, label %146, !prof !4

146:                                              ; preds = %139
  %147 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %140, i64 0, i32 6
  %148 = load i8, i8* %147, align 8, !range !2
  %149 = icmp eq i8 %148, 0
  br i1 %149, label %150, label %157

150:                                              ; preds = %146
  %151 = bitcast %"class.v8::internal::Utf16CharacterStream"* %140 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %152 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %151, align 8
  %153 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %152, i64 5
  %154 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %153, align 8
  %155 = tail call zeroext i1 %154(%"class.v8::internal::Utf16CharacterStream"* %140) #8
  %156 = load i16*, i16** %141, align 8
  br i1 %155, label %160, label %157

157:                                              ; preds = %150, %146
  %158 = phi i16* [ %156, %150 ], [ %142, %146 ]
  %159 = getelementptr inbounds i16, i16* %158, i64 1
  store i16* %159, i16** %141, align 8
  br label %167

160:                                              ; preds = %150, %139
  %161 = phi i16* [ %142, %139 ], [ %156, %150 ]
  %162 = load i16, i16* %161, align 2
  %163 = zext i16 %162 to i32
  %164 = getelementptr inbounds i16, i16* %161, i64 1
  store i16* %164, i16** %141, align 8
  %165 = and i32 %163, 64512
  %166 = icmp eq i32 %165, 56320
  br i1 %166, label %195, label %167

167:                                              ; preds = %160, %157
  %168 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %6, align 8
  %169 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %168, i64 0, i32 2
  %170 = load i16*, i16** %169, align 8
  %171 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %168, i64 0, i32 1
  %172 = load i16*, i16** %171, align 8
  %173 = icmp ugt i16* %170, %172
  %174 = ptrtoint i16* %172 to i64
  br i1 %173, label %175, label %177, !prof !4

175:                                              ; preds = %167
  %176 = getelementptr inbounds i16, i16* %170, i64 -1
  store i16* %176, i16** %169, align 8
  br label %278

177:                                              ; preds = %167
  %178 = ptrtoint i16* %170 to i64
  %179 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %168, i64 0, i32 4
  %180 = load i64, i64* %179, align 8
  %181 = bitcast i16** %169 to i64*
  %182 = sub i64 %178, %174
  %183 = ashr exact i64 %182, 1
  %184 = add nsw i64 %183, -1
  %185 = add i64 %184, %180
  store i64 %185, i64* %179, align 8
  store i64 %174, i64* %181, align 8
  %186 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %168, i64 0, i32 6
  %187 = load i8, i8* %186, align 8, !range !2
  %188 = icmp eq i8 %187, 0
  br i1 %188, label %189, label %278

189:                                              ; preds = %177
  %190 = bitcast %"class.v8::internal::Utf16CharacterStream"* %168 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %191 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %190, align 8
  %192 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %191, i64 5
  %193 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %192, align 8
  %194 = tail call zeroext i1 %193(%"class.v8::internal::Utf16CharacterStream"* %168) #8
  br label %278

195:                                              ; preds = %160
  %196 = load i32, i32* %5, align 8
  %197 = shl i32 %196, 10
  %198 = and i32 %197, 1047552
  %199 = add nuw nsw i32 %198, 65536
  %200 = and i32 %163, 1023
  %201 = or i32 %199, %200
  store i32 %201, i32* %5, align 8
  %202 = icmp ult i32 %201, 256
  br i1 %202, label %203, label %209

203:                                              ; preds = %195
  %204 = zext i32 %201 to i64
  %205 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN2v88internalL17kOneByteCharFlagsE, i64 0, i64 %204
  %206 = load i8, i8* %205, align 1
  %207 = and i8 %206, 2
  %208 = icmp eq i8 %207, 0
  br i1 %208, label %278, label %211

209:                                              ; preds = %195
  %210 = tail call zeroext i1 @_ZN2v88internal20IsIdentifierPartSlowEj(i32 %201) #8
  br i1 %210, label %211, label %278

211:                                              ; preds = %125, %203, %209, %131
  %212 = load i32, i32* %5, align 8
  %213 = icmp ult i32 %212, 128
  %214 = and i1 %12, %213
  br i1 %214, label %215, label %221

215:                                              ; preds = %211
  %216 = zext i32 %212 to i64
  %217 = getelementptr inbounds [128 x i8], [128 x i8]* @_ZN2v88internalL20character_scan_flagsE, i64 0, i64 %216
  %218 = load i8, i8* %217, align 1
  %219 = and i8 %218, 2
  %220 = icmp eq i8 %219, 0
  br label %221

221:                                              ; preds = %211, %215
  %222 = phi i1 [ %220, %215 ], [ false, %211 ]
  %223 = load %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"** %7, align 8
  %224 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %223, i64 0, i32 1
  %225 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %223, i64 0, i32 1, i32 2
  %226 = load i8, i8* %225, align 4, !range !2
  %227 = icmp eq i8 %226, 0
  br i1 %227, label %249, label %228

228:                                              ; preds = %221
  %229 = icmp ult i32 %212, 256
  br i1 %229, label %230, label %248

230:                                              ; preds = %228
  %231 = trunc i32 %212 to i8
  %232 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %223, i64 0, i32 1, i32 1
  %233 = load i32, i32* %232, align 8
  %234 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %223, i64 0, i32 1, i32 0, i32 1
  %235 = load i64, i64* %234, align 8
  %236 = trunc i64 %235 to i32
  %237 = icmp slt i32 %233, %236
  br i1 %237, label %240, label %238

238:                                              ; preds = %230
  tail call void @_ZN2v88internal13LiteralBuffer12ExpandBufferEv(%"class.v8::internal::LiteralBuffer"* %224) #8
  %239 = load i32, i32* %232, align 8
  br label %240

240:                                              ; preds = %238, %230
  %241 = phi i32 [ %233, %230 ], [ %239, %238 ]
  %242 = sext i32 %241 to i64
  %243 = getelementptr inbounds %"class.v8::internal::LiteralBuffer", %"class.v8::internal::LiteralBuffer"* %224, i64 0, i32 0, i32 0
  %244 = load i8*, i8** %243, align 8
  %245 = getelementptr inbounds i8, i8* %244, i64 %242
  store i8 %231, i8* %245, align 1
  %246 = load i32, i32* %232, align 8
  %247 = add nsw i32 %246, 1
  store i32 %247, i32* %232, align 8
  br label %250

248:                                              ; preds = %228
  tail call void @_ZN2v88internal13LiteralBuffer16ConvertToTwoByteEv(%"class.v8::internal::LiteralBuffer"* %224) #8
  br label %249

249:                                              ; preds = %248, %221
  tail call void @_ZN2v88internal13LiteralBuffer14AddTwoByteCharEj(%"class.v8::internal::LiteralBuffer"* %224, i32 %212) #8
  br label %250

250:                                              ; preds = %249, %240
  %251 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %6, align 8
  %252 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %251, i64 0, i32 2
  %253 = load i16*, i16** %252, align 8
  %254 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %251, i64 0, i32 3
  %255 = load i16*, i16** %254, align 8
  %256 = icmp ult i16* %253, %255
  br i1 %256, label %257, label %260, !prof !4

257:                                              ; preds = %250
  %258 = load i16, i16* %253, align 2
  %259 = zext i16 %258 to i32
  br label %274

260:                                              ; preds = %250
  %261 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %251, i64 0, i32 6
  %262 = load i8, i8* %261, align 8, !range !2
  %263 = icmp eq i8 %262, 0
  br i1 %263, label %264, label %274

264:                                              ; preds = %260
  %265 = bitcast %"class.v8::internal::Utf16CharacterStream"* %251 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %266 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %265, align 8
  %267 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %266, i64 5
  %268 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %267, align 8
  %269 = tail call zeroext i1 %268(%"class.v8::internal::Utf16CharacterStream"* %251) #8
  %270 = load i16*, i16** %252, align 8
  br i1 %269, label %271, label %274

271:                                              ; preds = %264
  %272 = load i16, i16* %270, align 2
  %273 = zext i16 %272 to i32
  br label %274

274:                                              ; preds = %257, %260, %264, %271
  %275 = phi i16* [ %253, %257 ], [ %270, %271 ], [ %253, %260 ], [ %270, %264 ]
  %276 = phi i32 [ %259, %257 ], [ %273, %271 ], [ -1, %260 ], [ -1, %264 ]
  %277 = getelementptr inbounds i16, i16* %275, i64 1
  store i16* %277, i16** %252, align 8
  store i32 %276, i32* %5, align 8
  br label %11

278:                                              ; preds = %203, %135, %209, %189, %177, %175
  br i1 %12, label %279, label %341

279:                                              ; preds = %278
  %280 = load %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"** %7, align 8
  %281 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %280, i64 0, i32 1, i32 2
  %282 = load i8, i8* %281, align 4, !range !2
  %283 = icmp eq i8 %282, 0
  br i1 %283, label %341, label %284

284:                                              ; preds = %279
  %285 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %280, i64 0, i32 1, i32 0, i32 0
  %286 = load i8*, i8** %285, align 8
  %287 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %280, i64 0, i32 1, i32 1
  %288 = load i32, i32* %287, align 8
  %289 = add i32 %288, -2
  %290 = icmp ult i32 %289, 9
  br i1 %290, label %291, label %341

291:                                              ; preds = %284
  %292 = getelementptr inbounds i8, i8* %286, i64 1
  %293 = load i8, i8* %292, align 1
  %294 = zext i8 %293 to i64
  %295 = getelementptr inbounds [128 x i8], [128 x i8]* @_ZZN2v88internal18PerfectKeywordHash4HashEPKciE11asso_values, i64 0, i64 %294
  %296 = load i8, i8* %295, align 1
  %297 = zext i8 %296 to i32
  %298 = add nuw nsw i32 %288, %297
  %299 = load i8, i8* %286, align 1
  %300 = zext i8 %299 to i64
  %301 = getelementptr inbounds [128 x i8], [128 x i8]* @_ZZN2v88internal18PerfectKeywordHash4HashEPKciE11asso_values, i64 0, i64 %300
  %302 = load i8, i8* %301, align 1
  %303 = zext i8 %302 to i32
  %304 = add nuw nsw i32 %298, %303
  %305 = and i32 %304, 63
  %306 = zext i32 %305 to i64
  %307 = getelementptr inbounds [64 x i8], [64 x i8]* bitcast (<{ [56 x i8], [8 x i8] }>* @_ZN2v88internalL26kPerfectKeywordLengthTableE to [64 x i8]*), i64 0, i64 %306
  %308 = load i8, i8* %307, align 1
  %309 = zext i8 %308 to i32
  %310 = icmp eq i32 %288, %309
  br i1 %310, label %311, label %341

311:                                              ; preds = %291
  %312 = getelementptr inbounds [64 x %"struct.v8::internal::PerfectKeywordHashTableEntry"], [64 x %"struct.v8::internal::PerfectKeywordHashTableEntry"]* @_ZN2v88internalL24kPerfectKeywordHashTableE, i64 0, i64 %306, i32 0
  %313 = load i8*, i8** %312, align 16
  br label %314

314:                                              ; preds = %319, %311
  %315 = phi i8* [ %286, %311 ], [ %321, %319 ]
  %316 = phi i8* [ %313, %311 ], [ %320, %319 ]
  %317 = load i8, i8* %316, align 1
  %318 = icmp eq i8 %317, 0
  br i1 %318, label %324, label %319

319:                                              ; preds = %314
  %320 = getelementptr inbounds i8, i8* %316, i64 1
  %321 = getelementptr inbounds i8, i8* %315, i64 1
  %322 = load i8, i8* %315, align 1
  %323 = icmp eq i8 %317, %322
  br i1 %323, label %314, label %341

324:                                              ; preds = %314
  %325 = getelementptr inbounds [64 x %"struct.v8::internal::PerfectKeywordHashTableEntry"], [64 x %"struct.v8::internal::PerfectKeywordHashTableEntry"]* @_ZN2v88internalL24kPerfectKeywordHashTableE, i64 0, i64 %306, i32 1
  %326 = load i8, i8* %325, align 8
  %327 = add i8 %326, -95
  %328 = icmp ult i8 %327, 6
  br i1 %328, label %341, label %329

329:                                              ; preds = %324
  %330 = lshr i64 2251821559054848, %306
  %331 = and i64 %330, 1
  %332 = icmp eq i64 %331, 0
  %333 = icmp ne i8 %10, 0
  br i1 %332, label %336, label %334

334:                                              ; preds = %329
  %335 = select i1 %333, i8 104, i8 %326
  br label %341

336:                                              ; preds = %329
  br i1 %333, label %337, label %341

337:                                              ; preds = %336
  %338 = add i8 %326, -101
  %339 = icmp ult i8 %338, 2
  %340 = select i1 %339, i8 104, i8 113
  br label %341

341:                                              ; preds = %74, %66, %80, %319, %278, %279, %284, %291, %324, %334, %336, %337
  %342 = phi i8 [ 95, %278 ], [ 95, %279 ], [ %326, %324 ], [ %335, %334 ], [ %326, %336 ], [ %340, %337 ], [ 95, %291 ], [ 95, %284 ], [ 95, %319 ], [ 112, %80 ], [ 112, %66 ], [ 112, %74 ]
  ret i8 %342
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal7Scanner17ScanRegExpPatternEv(%"class.v8::internal::Scanner"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 2
  %3 = load %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"** %2, align 8
  %4 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %3, i64 0, i32 1, i32 1
  store i32 0, i32* %4, align 8
  %5 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %3, i64 0, i32 1, i32 2
  store i8 1, i8* %5, align 4
  %6 = load %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"** %2, align 8
  %7 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %6, i64 0, i32 3
  %8 = load i8, i8* %7, align 8
  %9 = icmp eq i8 %8, 28
  br i1 %9, label %10, label %28

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %6, i64 0, i32 1
  %12 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %6, i64 0, i32 1, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %6, i64 0, i32 1, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = trunc i64 %15 to i32
  %17 = icmp slt i32 %13, %16
  br i1 %17, label %20, label %18

18:                                               ; preds = %10
  tail call void @_ZN2v88internal13LiteralBuffer12ExpandBufferEv(%"class.v8::internal::LiteralBuffer"* %11) #8
  %19 = load i32, i32* %12, align 8
  br label %20

20:                                               ; preds = %10, %18
  %21 = phi i32 [ %13, %10 ], [ %19, %18 ]
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds %"class.v8::internal::LiteralBuffer", %"class.v8::internal::LiteralBuffer"* %11, i64 0, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8
  %25 = getelementptr inbounds i8, i8* %24, i64 %22
  store i8 61, i8* %25, align 1
  %26 = load i32, i32* %12, align 8
  %27 = add nsw i32 %26, 1
  store i32 %27, i32* %12, align 8
  br label %28

28:                                               ; preds = %20, %1
  %29 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 5
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, 47
  br i1 %31, label %205, label %32

32:                                               ; preds = %28
  %33 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 4
  br label %34

34:                                               ; preds = %32, %195
  %35 = phi i32 [ %30, %32 ], [ %198, %195 ]
  %36 = phi i8 [ 0, %32 ], [ %199, %195 ]
  switch i32 %35, label %140 [
    i32 -1, label %236
    i32 8232, label %236
    i32 13, label %236
    i32 10, label %236
    i32 8233, label %236
    i32 92, label %37
    i32 91, label %139
  ]

37:                                               ; preds = %34
  %38 = load %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"** %2, align 8
  %39 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %38, i64 0, i32 1
  %40 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %38, i64 0, i32 1, i32 2
  %41 = load i8, i8* %40, align 4, !range !2
  %42 = icmp eq i8 %41, 0
  br i1 %42, label %60, label %43

43:                                               ; preds = %37
  %44 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %38, i64 0, i32 1, i32 1
  %45 = load i32, i32* %44, align 8
  %46 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %38, i64 0, i32 1, i32 0, i32 1
  %47 = load i64, i64* %46, align 8
  %48 = trunc i64 %47 to i32
  %49 = icmp slt i32 %45, %48
  br i1 %49, label %52, label %50

50:                                               ; preds = %43
  tail call void @_ZN2v88internal13LiteralBuffer12ExpandBufferEv(%"class.v8::internal::LiteralBuffer"* %39) #8
  %51 = load i32, i32* %44, align 8
  br label %52

52:                                               ; preds = %50, %43
  %53 = phi i32 [ %45, %43 ], [ %51, %50 ]
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds %"class.v8::internal::LiteralBuffer", %"class.v8::internal::LiteralBuffer"* %39, i64 0, i32 0, i32 0
  %56 = load i8*, i8** %55, align 8
  %57 = getelementptr inbounds i8, i8* %56, i64 %54
  store i8 92, i8* %57, align 1
  %58 = load i32, i32* %44, align 8
  %59 = add nsw i32 %58, 1
  store i32 %59, i32* %44, align 8
  br label %61

60:                                               ; preds = %37
  tail call void @_ZN2v88internal13LiteralBuffer14AddTwoByteCharEj(%"class.v8::internal::LiteralBuffer"* %39, i32 92) #8
  br label %61

61:                                               ; preds = %60, %52
  %62 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %33, align 8
  %63 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %62, i64 0, i32 2
  %64 = load i16*, i16** %63, align 8
  %65 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %62, i64 0, i32 3
  %66 = load i16*, i16** %65, align 8
  %67 = icmp ult i16* %64, %66
  br i1 %67, label %82, label %68, !prof !4

68:                                               ; preds = %61
  %69 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %62, i64 0, i32 6
  %70 = load i8, i8* %69, align 8, !range !2
  %71 = icmp eq i8 %70, 0
  br i1 %71, label %72, label %79

72:                                               ; preds = %68
  %73 = bitcast %"class.v8::internal::Utf16CharacterStream"* %62 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %74 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %73, align 8
  %75 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %74, i64 5
  %76 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %75, align 8
  %77 = tail call zeroext i1 %76(%"class.v8::internal::Utf16CharacterStream"* %62) #8
  %78 = load i16*, i16** %63, align 8
  br i1 %77, label %82, label %79

79:                                               ; preds = %68, %72
  %80 = phi i16* [ %78, %72 ], [ %64, %68 ]
  %81 = getelementptr inbounds i16, i16* %80, i64 1
  store i16* %81, i16** %63, align 8
  store i32 -1, i32* %29, align 8
  br label %236

82:                                               ; preds = %72, %61
  %83 = phi i16* [ %64, %61 ], [ %78, %72 ]
  %84 = load i16, i16* %83, align 2
  %85 = zext i16 %84 to i32
  %86 = getelementptr inbounds i16, i16* %83, i64 1
  store i16* %86, i16** %63, align 8
  store i32 %85, i32* %29, align 8
  switch i16 %84, label %87 [
    i16 8232, label %236
    i16 13, label %236
    i16 10, label %236
    i16 8233, label %236
  ]

87:                                               ; preds = %82
  %88 = load %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"** %2, align 8
  %89 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %88, i64 0, i32 1
  %90 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %88, i64 0, i32 1, i32 2
  %91 = load i8, i8* %90, align 4, !range !2
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %114, label %93

93:                                               ; preds = %87
  %94 = icmp ult i16 %84, 256
  br i1 %94, label %95, label %113

95:                                               ; preds = %93
  %96 = trunc i16 %84 to i8
  %97 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %88, i64 0, i32 1, i32 1
  %98 = load i32, i32* %97, align 8
  %99 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %88, i64 0, i32 1, i32 0, i32 1
  %100 = load i64, i64* %99, align 8
  %101 = trunc i64 %100 to i32
  %102 = icmp slt i32 %98, %101
  br i1 %102, label %105, label %103

103:                                              ; preds = %95
  tail call void @_ZN2v88internal13LiteralBuffer12ExpandBufferEv(%"class.v8::internal::LiteralBuffer"* %89) #8
  %104 = load i32, i32* %97, align 8
  br label %105

105:                                              ; preds = %103, %95
  %106 = phi i32 [ %98, %95 ], [ %104, %103 ]
  %107 = sext i32 %106 to i64
  %108 = getelementptr inbounds %"class.v8::internal::LiteralBuffer", %"class.v8::internal::LiteralBuffer"* %89, i64 0, i32 0, i32 0
  %109 = load i8*, i8** %108, align 8
  %110 = getelementptr inbounds i8, i8* %109, i64 %107
  store i8 %96, i8* %110, align 1
  %111 = load i32, i32* %97, align 8
  %112 = add nsw i32 %111, 1
  store i32 %112, i32* %97, align 8
  br label %115

113:                                              ; preds = %93
  tail call void @_ZN2v88internal13LiteralBuffer16ConvertToTwoByteEv(%"class.v8::internal::LiteralBuffer"* %89) #8
  br label %114

114:                                              ; preds = %113, %87
  tail call void @_ZN2v88internal13LiteralBuffer14AddTwoByteCharEj(%"class.v8::internal::LiteralBuffer"* %89, i32 %85) #8
  br label %115

115:                                              ; preds = %114, %105
  %116 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %33, align 8
  %117 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %116, i64 0, i32 2
  %118 = load i16*, i16** %117, align 8
  %119 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %116, i64 0, i32 3
  %120 = load i16*, i16** %119, align 8
  %121 = icmp ult i16* %118, %120
  br i1 %121, label %122, label %125, !prof !4

122:                                              ; preds = %115
  %123 = load i16, i16* %118, align 2
  %124 = zext i16 %123 to i32
  br label %195

125:                                              ; preds = %115
  %126 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %116, i64 0, i32 6
  %127 = load i8, i8* %126, align 8, !range !2
  %128 = icmp eq i8 %127, 0
  br i1 %128, label %129, label %195

129:                                              ; preds = %125
  %130 = bitcast %"class.v8::internal::Utf16CharacterStream"* %116 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %131 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %130, align 8
  %132 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %131, i64 5
  %133 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %132, align 8
  %134 = tail call zeroext i1 %133(%"class.v8::internal::Utf16CharacterStream"* %116) #8
  %135 = load i16*, i16** %117, align 8
  br i1 %134, label %136, label %195

136:                                              ; preds = %129
  %137 = load i16, i16* %135, align 2
  %138 = zext i16 %137 to i32
  br label %195

139:                                              ; preds = %34
  br label %140

140:                                              ; preds = %34, %139
  %141 = phi i8 [ 1, %139 ], [ %36, %34 ]
  %142 = icmp eq i32 %35, 93
  %143 = select i1 %142, i8 0, i8 %141
  %144 = load %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"** %2, align 8
  %145 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %144, i64 0, i32 1
  %146 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %144, i64 0, i32 1, i32 2
  %147 = load i8, i8* %146, align 4, !range !2
  %148 = icmp eq i8 %147, 0
  br i1 %148, label %170, label %149

149:                                              ; preds = %140
  %150 = icmp ult i32 %35, 256
  br i1 %150, label %151, label %169

151:                                              ; preds = %149
  %152 = trunc i32 %35 to i8
  %153 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %144, i64 0, i32 1, i32 1
  %154 = load i32, i32* %153, align 8
  %155 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %144, i64 0, i32 1, i32 0, i32 1
  %156 = load i64, i64* %155, align 8
  %157 = trunc i64 %156 to i32
  %158 = icmp slt i32 %154, %157
  br i1 %158, label %161, label %159

159:                                              ; preds = %151
  tail call void @_ZN2v88internal13LiteralBuffer12ExpandBufferEv(%"class.v8::internal::LiteralBuffer"* %145) #8
  %160 = load i32, i32* %153, align 8
  br label %161

161:                                              ; preds = %159, %151
  %162 = phi i32 [ %154, %151 ], [ %160, %159 ]
  %163 = sext i32 %162 to i64
  %164 = getelementptr inbounds %"class.v8::internal::LiteralBuffer", %"class.v8::internal::LiteralBuffer"* %145, i64 0, i32 0, i32 0
  %165 = load i8*, i8** %164, align 8
  %166 = getelementptr inbounds i8, i8* %165, i64 %163
  store i8 %152, i8* %166, align 1
  %167 = load i32, i32* %153, align 8
  %168 = add nsw i32 %167, 1
  store i32 %168, i32* %153, align 8
  br label %171

169:                                              ; preds = %149
  tail call void @_ZN2v88internal13LiteralBuffer16ConvertToTwoByteEv(%"class.v8::internal::LiteralBuffer"* %145) #8
  br label %170

170:                                              ; preds = %169, %140
  tail call void @_ZN2v88internal13LiteralBuffer14AddTwoByteCharEj(%"class.v8::internal::LiteralBuffer"* %145, i32 %35) #8
  br label %171

171:                                              ; preds = %170, %161
  %172 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %33, align 8
  %173 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %172, i64 0, i32 2
  %174 = load i16*, i16** %173, align 8
  %175 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %172, i64 0, i32 3
  %176 = load i16*, i16** %175, align 8
  %177 = icmp ult i16* %174, %176
  br i1 %177, label %178, label %181, !prof !4

178:                                              ; preds = %171
  %179 = load i16, i16* %174, align 2
  %180 = zext i16 %179 to i32
  br label %195

181:                                              ; preds = %171
  %182 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %172, i64 0, i32 6
  %183 = load i8, i8* %182, align 8, !range !2
  %184 = icmp eq i8 %183, 0
  br i1 %184, label %185, label %195

185:                                              ; preds = %181
  %186 = bitcast %"class.v8::internal::Utf16CharacterStream"* %172 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %187 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %186, align 8
  %188 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %187, i64 5
  %189 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %188, align 8
  %190 = tail call zeroext i1 %189(%"class.v8::internal::Utf16CharacterStream"* %172) #8
  %191 = load i16*, i16** %173, align 8
  br i1 %190, label %192, label %195

192:                                              ; preds = %185
  %193 = load i16, i16* %191, align 2
  %194 = zext i16 %193 to i32
  br label %195

195:                                              ; preds = %192, %185, %181, %178, %136, %129, %125, %122
  %196 = phi i16* [ %118, %122 ], [ %135, %136 ], [ %118, %125 ], [ %135, %129 ], [ %174, %178 ], [ %191, %192 ], [ %174, %181 ], [ %191, %185 ]
  %197 = phi i16** [ %117, %122 ], [ %117, %136 ], [ %117, %125 ], [ %117, %129 ], [ %173, %178 ], [ %173, %192 ], [ %173, %181 ], [ %173, %185 ]
  %198 = phi i32 [ %124, %122 ], [ %138, %136 ], [ -1, %125 ], [ -1, %129 ], [ %180, %178 ], [ %194, %192 ], [ -1, %181 ], [ -1, %185 ]
  %199 = phi i8 [ %36, %122 ], [ %36, %136 ], [ %36, %125 ], [ %36, %129 ], [ %143, %178 ], [ %143, %192 ], [ %143, %181 ], [ %143, %185 ]
  %200 = getelementptr inbounds i16, i16* %196, i64 1
  store i16* %200, i16** %197, align 8
  store i32 %198, i32* %29, align 8
  %201 = icmp ne i32 %198, 47
  %202 = and i8 %199, 1
  %203 = icmp ne i8 %202, 0
  %204 = or i1 %203, %201
  br i1 %204, label %34, label %205

205:                                              ; preds = %195, %28
  %206 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 4
  %207 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %206, align 8
  %208 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %207, i64 0, i32 2
  %209 = load i16*, i16** %208, align 8
  %210 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %207, i64 0, i32 3
  %211 = load i16*, i16** %210, align 8
  %212 = icmp ult i16* %209, %211
  br i1 %212, label %213, label %216, !prof !4

213:                                              ; preds = %205
  %214 = load i16, i16* %209, align 2
  %215 = zext i16 %214 to i32
  br label %230

216:                                              ; preds = %205
  %217 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %207, i64 0, i32 6
  %218 = load i8, i8* %217, align 8, !range !2
  %219 = icmp eq i8 %218, 0
  br i1 %219, label %220, label %230

220:                                              ; preds = %216
  %221 = bitcast %"class.v8::internal::Utf16CharacterStream"* %207 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %222 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %221, align 8
  %223 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %222, i64 5
  %224 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %223, align 8
  %225 = tail call zeroext i1 %224(%"class.v8::internal::Utf16CharacterStream"* %207) #8
  %226 = load i16*, i16** %208, align 8
  br i1 %225, label %227, label %230

227:                                              ; preds = %220
  %228 = load i16, i16* %226, align 2
  %229 = zext i16 %228 to i32
  br label %230

230:                                              ; preds = %213, %216, %220, %227
  %231 = phi i16* [ %209, %213 ], [ %226, %227 ], [ %209, %216 ], [ %226, %220 ]
  %232 = phi i32 [ %215, %213 ], [ %229, %227 ], [ -1, %216 ], [ -1, %220 ]
  %233 = getelementptr inbounds i16, i16* %231, i64 1
  store i16* %233, i16** %208, align 8
  store i32 %232, i32* %29, align 8
  %234 = load %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"** %2, align 8
  %235 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %234, i64 0, i32 3
  store i8 116, i8* %235, align 8
  br label %236

236:                                              ; preds = %34, %34, %34, %34, %34, %82, %82, %82, %82, %79, %230
  %237 = phi i1 [ true, %230 ], [ false, %79 ], [ false, %82 ], [ false, %82 ], [ false, %82 ], [ false, %82 ], [ false, %34 ], [ false, %34 ], [ false, %34 ], [ false, %34 ], [ false, %34 ]
  ret i1 %237
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal7Scanner15ScanRegExpFlagsEv(%"class.v8::internal::Scanner"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 5
  %3 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 4
  %4 = load i32, i32* %2, align 8
  br label %5

5:                                                ; preds = %79, %1
  %6 = phi i32 [ %4, %1 ], [ %81, %79 ]
  %7 = phi i32 [ 0, %1 ], [ %83, %79 ]
  %8 = icmp ult i32 %6, 256
  br i1 %8, label %9, label %15

9:                                                ; preds = %5
  %10 = zext i32 %6 to i64
  %11 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN2v88internalL17kOneByteCharFlagsE, i64 0, i64 %10
  %12 = load i8, i8* %11, align 1
  %13 = and i8 %12, 2
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %84, label %19

15:                                               ; preds = %5
  %16 = tail call zeroext i1 @_ZN2v88internal20IsIdentifierPartSlowEj(i32 %6) #8
  br i1 %16, label %17, label %84

17:                                               ; preds = %15
  %18 = load i32, i32* %2, align 8
  br label %19

19:                                               ; preds = %17, %9
  %20 = phi i32 [ %18, %17 ], [ %6, %9 ]
  %21 = trunc i32 %20 to i8
  %22 = add i8 %21, -103
  %23 = lshr i8 %22, 1
  %24 = shl i8 %22, 7
  %25 = or i8 %23, %24
  %26 = icmp ult i8 %25, 10
  br i1 %26, label %39, label %27

27:                                               ; preds = %39, %19
  %28 = load i8, i8* @_ZN2v88internal38FLAG_enable_experimental_regexp_engineE, align 1, !range !2
  %29 = icmp ne i8 %28, 0
  %30 = icmp eq i8 %21, 108
  %31 = and i1 %30, %29
  br i1 %31, label %48, label %32

32:                                               ; preds = %27
  %33 = load i8, i8* @_ZN2v88internal33FLAG_harmony_regexp_match_indicesE, align 1, !range !2
  %34 = icmp ne i8 %33, 0
  %35 = icmp eq i8 %21, 100
  %36 = and i1 %35, %34
  %37 = select i1 %36, i32 128, i32 0
  %38 = zext i1 %36 to i64
  br label %48

39:                                               ; preds = %19
  %40 = zext i8 %25 to i16
  %41 = lshr i16 715, %40
  %42 = and i16 %41, 1
  %43 = icmp eq i16 %42, 0
  br i1 %43, label %27, label %44

44:                                               ; preds = %39
  %45 = sext i8 %25 to i64
  %46 = getelementptr inbounds [10 x i32], [10 x i32]* @switch.table._ZN2v88internal7Scanner15ScanRegExpFlagsEv, i64 0, i64 %45
  %47 = load i32, i32* %46, align 4
  br label %48

48:                                               ; preds = %44, %27, %32
  %49 = phi i64 [ 1, %27 ], [ %38, %32 ], [ 1, %44 ]
  %50 = phi i32 [ 64, %27 ], [ %37, %32 ], [ %47, %44 ]
  %51 = icmp ne i64 %49, 0
  %52 = and i32 %50, %7
  %53 = icmp eq i32 %52, 0
  %54 = and i1 %51, %53
  br i1 %54, label %55, label %105

55:                                               ; preds = %48
  %56 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %3, align 8
  %57 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %56, i64 0, i32 2
  %58 = load i16*, i16** %57, align 8
  %59 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %56, i64 0, i32 3
  %60 = load i16*, i16** %59, align 8
  %61 = icmp ult i16* %58, %60
  br i1 %61, label %62, label %65, !prof !4

62:                                               ; preds = %55
  %63 = load i16, i16* %58, align 2
  %64 = zext i16 %63 to i32
  br label %79

65:                                               ; preds = %55
  %66 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %56, i64 0, i32 6
  %67 = load i8, i8* %66, align 8, !range !2
  %68 = icmp eq i8 %67, 0
  br i1 %68, label %69, label %79

69:                                               ; preds = %65
  %70 = bitcast %"class.v8::internal::Utf16CharacterStream"* %56 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %71 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %70, align 8
  %72 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %71, i64 5
  %73 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %72, align 8
  %74 = tail call zeroext i1 %73(%"class.v8::internal::Utf16CharacterStream"* %56) #8
  %75 = load i16*, i16** %57, align 8
  br i1 %74, label %76, label %79

76:                                               ; preds = %69
  %77 = load i16, i16* %75, align 2
  %78 = zext i16 %77 to i32
  br label %79

79:                                               ; preds = %76, %69, %65, %62
  %80 = phi i16* [ %58, %62 ], [ %75, %76 ], [ %58, %65 ], [ %75, %69 ]
  %81 = phi i32 [ %64, %62 ], [ %78, %76 ], [ -1, %65 ], [ -1, %69 ]
  %82 = getelementptr inbounds i16, i16* %80, i64 1
  store i16* %82, i16** %57, align 8
  store i32 %81, i32* %2, align 8
  %83 = or i32 %50, %7
  br label %5

84:                                               ; preds = %9, %15
  %85 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %3, align 8
  %86 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %85, i64 0, i32 4
  %87 = load i64, i64* %86, align 8
  %88 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %85, i64 0, i32 2
  %89 = bitcast i16** %88 to i64*
  %90 = load i64, i64* %89, align 8
  %91 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %85, i64 0, i32 1
  %92 = bitcast i16** %91 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = sub i64 %90, %93
  %95 = lshr exact i64 %94, 1
  %96 = add i64 %95, %87
  %97 = trunc i64 %96 to i32
  %98 = add nsw i32 %97, -1
  %99 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 2
  %100 = load %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"** %99, align 8
  %101 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %100, i64 0, i32 0, i32 1
  store i32 %98, i32* %101, align 4
  %102 = zext i32 %7 to i64
  %103 = shl nuw i64 %102, 32
  %104 = or i64 %103, 1
  br label %105

105:                                              ; preds = %48, %84
  %106 = phi i64 [ %104, %84 ], [ 0, %48 ]
  ret i64 %106
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::AstRawString"* @_ZNK2v88internal7Scanner13CurrentSymbolEPNS0_15AstValueFactoryE(%"class.v8::internal::Scanner"* nocapture readonly, %"class.v8::internal::AstValueFactory"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 1
  %4 = load %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"** %3, align 8
  %5 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %4, i64 0, i32 1, i32 2
  %6 = load i8, i8* %5, align 4, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %15, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %4, i64 0, i32 1, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %4, i64 0, i32 1, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = sext i32 %12 to i64
  %14 = tail call %"class.v8::internal::AstRawString"* @_ZN2v88internal15AstValueFactory24GetOneByteStringInternalENS0_6VectorIKhEE(%"class.v8::internal::AstValueFactory"* %1, i8* %10, i64 %13) #8
  br label %24

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %4, i64 0, i32 1
  %17 = bitcast %"class.v8::internal::LiteralBuffer"* %16 to i16**
  %18 = load i16*, i16** %17, align 8
  %19 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %4, i64 0, i32 1, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = ashr i32 %20, 1
  %22 = sext i32 %21 to i64
  %23 = tail call %"class.v8::internal::AstRawString"* @_ZN2v88internal15AstValueFactory24GetTwoByteStringInternalENS0_6VectorIKtEE(%"class.v8::internal::AstValueFactory"* %1, i16* %18, i64 %22) #8
  br label %24

24:                                               ; preds = %15, %8
  %25 = phi %"class.v8::internal::AstRawString"* [ %14, %8 ], [ %23, %15 ]
  ret %"class.v8::internal::AstRawString"* %25
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::AstRawString"* @_ZNK2v88internal7Scanner10NextSymbolEPNS0_15AstValueFactoryE(%"class.v8::internal::Scanner"* nocapture readonly, %"class.v8::internal::AstValueFactory"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 2
  %4 = load %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"** %3, align 8
  %5 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %4, i64 0, i32 1, i32 2
  %6 = load i8, i8* %5, align 4, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %15, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %4, i64 0, i32 1, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %4, i64 0, i32 1, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = sext i32 %12 to i64
  %14 = tail call %"class.v8::internal::AstRawString"* @_ZN2v88internal15AstValueFactory24GetOneByteStringInternalENS0_6VectorIKhEE(%"class.v8::internal::AstValueFactory"* %1, i8* %10, i64 %13) #8
  br label %24

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %4, i64 0, i32 1
  %17 = bitcast %"class.v8::internal::LiteralBuffer"* %16 to i16**
  %18 = load i16*, i16** %17, align 8
  %19 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %4, i64 0, i32 1, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = ashr i32 %20, 1
  %22 = sext i32 %21 to i64
  %23 = tail call %"class.v8::internal::AstRawString"* @_ZN2v88internal15AstValueFactory24GetTwoByteStringInternalENS0_6VectorIKtEE(%"class.v8::internal::AstValueFactory"* %1, i16* %18, i64 %22) #8
  br label %24

24:                                               ; preds = %15, %8
  %25 = phi %"class.v8::internal::AstRawString"* [ %14, %8 ], [ %23, %15 ]
  ret %"class.v8::internal::AstRawString"* %25
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::AstRawString"* @_ZNK2v88internal7Scanner16CurrentRawSymbolEPNS0_15AstValueFactoryE(%"class.v8::internal::Scanner"* nocapture readonly, %"class.v8::internal::AstValueFactory"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 1
  %4 = load %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"** %3, align 8
  %5 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %4, i64 0, i32 2, i32 2
  %6 = load i8, i8* %5, align 4, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %15, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %4, i64 0, i32 2, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %4, i64 0, i32 2, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = sext i32 %12 to i64
  %14 = tail call %"class.v8::internal::AstRawString"* @_ZN2v88internal15AstValueFactory24GetOneByteStringInternalENS0_6VectorIKhEE(%"class.v8::internal::AstValueFactory"* %1, i8* %10, i64 %13) #8
  br label %24

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %4, i64 0, i32 2
  %17 = bitcast %"class.v8::internal::LiteralBuffer"* %16 to i16**
  %18 = load i16*, i16** %17, align 8
  %19 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %4, i64 0, i32 2, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = ashr i32 %20, 1
  %22 = sext i32 %21 to i64
  %23 = tail call %"class.v8::internal::AstRawString"* @_ZN2v88internal15AstValueFactory24GetTwoByteStringInternalENS0_6VectorIKtEE(%"class.v8::internal::AstValueFactory"* %1, i16* %18, i64 %22) #8
  br label %24

24:                                               ; preds = %15, %8
  %25 = phi %"class.v8::internal::AstRawString"* [ %14, %8 ], [ %23, %15 ]
  ret %"class.v8::internal::AstRawString"* %25
}

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZN2v88internal7Scanner11DoubleValueEv(%"class.v8::internal::Scanner"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 1
  %3 = load %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"** %2, align 8
  %4 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %3, i64 0, i32 1, i32 0, i32 0
  %5 = load i8*, i8** %4, align 8
  %6 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %3, i64 0, i32 1, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = sext i32 %7 to i64
  %9 = tail call double @_ZN2v88internal14StringToDoubleENS0_6VectorIKhEEid(i8* %5, i64 %8, i32 15, double 0.000000e+00) #8
  ret double %9
}

declare double @_ZN2v88internal14StringToDoubleENS0_6VectorIKhEEid(i8*, i64, i32, double) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZNK2v88internal7Scanner23CurrentLiteralAsCStringEPNS0_4ZoneE(%"class.v8::internal::Scanner"* nocapture readonly, %"class.v8::internal::Zone"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 1
  %4 = load %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"** %3, align 8
  %5 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %4, i64 0, i32 1, i32 0, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %4, i64 0, i32 1, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = sext i32 %8 to i64
  %10 = add nsw i64 %9, 8
  %11 = and i64 %10, -8
  %12 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1, i64 0, i32 2
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1, i64 0, i32 3
  %15 = load i64, i64* %14, align 8
  %16 = sub i64 %15, %13
  %17 = icmp ugt i64 %11, %16
  br i1 %17, label %18, label %20, !prof !3

18:                                               ; preds = %2
  %19 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %1, i64 %11) #8
  br label %22

20:                                               ; preds = %2
  %21 = add i64 %11, %13
  store i64 %21, i64* %12, align 8
  br label %22

22:                                               ; preds = %18, %20
  %23 = phi i64 [ %19, %18 ], [ %13, %20 ]
  %24 = inttoptr i64 %23 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %24, i8* align 1 %6, i64 %9, i1 false) #8
  %25 = getelementptr inbounds i8, i8* %24, i64 %9
  store i8 0, i8* %25, align 1
  ret i8* %24
}

; Function Attrs: noreturn
declare void @_Z8V8_FatalPKcz(i8*, ...) local_unnamed_addr #6

declare zeroext i1 @_ZN2v88internal16IsWhiteSpaceSlowEj(i32) local_unnamed_addr #2

declare void @_ZN2v88internal13LiteralBuffer16ConvertToTwoByteEv(%"class.v8::internal::LiteralBuffer"*) local_unnamed_addr #2

declare void @_ZN2v88internal13LiteralBuffer14AddTwoByteCharEj(%"class.v8::internal::LiteralBuffer"*, i32) local_unnamed_addr #2

declare void @_ZN2v88internal13LiteralBuffer12ExpandBufferEv(%"class.v8::internal::LiteralBuffer"*) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #7

declare zeroext i1 @_ZN2v88internal21IsIdentifierStartSlowEj(i32) local_unnamed_addr #2

declare zeroext i1 @_ZN2v88internal20IsIdentifierPartSlowEj(i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare %"class.v8::internal::AstRawString"* @_ZN2v88internal15AstValueFactory24GetOneByteStringInternalENS0_6VectorIKhEE(%"class.v8::internal::AstValueFactory"*, i8*, i64) local_unnamed_addr #2

declare %"class.v8::internal::AstRawString"* @_ZN2v88internal15AstValueFactory24GetTwoByteStringInternalENS0_6VectorIKtEE(%"class.v8::internal::AstValueFactory"*, i16*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal7Scanner7AdvanceILb1EEEvv(%"class.v8::internal::Scanner"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 5
  %3 = load i32, i32* %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 2
  %5 = load %"struct.v8::internal::Scanner::TokenDesc"*, %"struct.v8::internal::Scanner::TokenDesc"** %4, align 8
  %6 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %5, i64 0, i32 2
  %7 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %5, i64 0, i32 2, i32 2
  %8 = load i8, i8* %7, align 4, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %31, label %10

10:                                               ; preds = %1
  %11 = icmp ult i32 %3, 256
  br i1 %11, label %12, label %30

12:                                               ; preds = %10
  %13 = trunc i32 %3 to i8
  %14 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %5, i64 0, i32 2, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = getelementptr inbounds %"struct.v8::internal::Scanner::TokenDesc", %"struct.v8::internal::Scanner::TokenDesc"* %5, i64 0, i32 2, i32 0, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = trunc i64 %17 to i32
  %19 = icmp slt i32 %15, %18
  br i1 %19, label %22, label %20

20:                                               ; preds = %12
  tail call void @_ZN2v88internal13LiteralBuffer12ExpandBufferEv(%"class.v8::internal::LiteralBuffer"* %6) #8
  %21 = load i32, i32* %14, align 8
  br label %22

22:                                               ; preds = %20, %12
  %23 = phi i32 [ %15, %12 ], [ %21, %20 ]
  %24 = sext i32 %23 to i64
  %25 = getelementptr inbounds %"class.v8::internal::LiteralBuffer", %"class.v8::internal::LiteralBuffer"* %6, i64 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  %27 = getelementptr inbounds i8, i8* %26, i64 %24
  store i8 %13, i8* %27, align 1
  %28 = load i32, i32* %14, align 8
  %29 = add nsw i32 %28, 1
  store i32 %29, i32* %14, align 8
  br label %32

30:                                               ; preds = %10
  tail call void @_ZN2v88internal13LiteralBuffer16ConvertToTwoByteEv(%"class.v8::internal::LiteralBuffer"* %6) #8
  br label %31

31:                                               ; preds = %30, %1
  tail call void @_ZN2v88internal13LiteralBuffer14AddTwoByteCharEj(%"class.v8::internal::LiteralBuffer"* %6, i32 %3) #8
  br label %32

32:                                               ; preds = %22, %31
  %33 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 4
  %34 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %33, align 8
  %35 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %34, i64 0, i32 2
  %36 = load i16*, i16** %35, align 8
  %37 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %34, i64 0, i32 3
  %38 = load i16*, i16** %37, align 8
  %39 = icmp ult i16* %36, %38
  br i1 %39, label %40, label %43, !prof !4

40:                                               ; preds = %32
  %41 = load i16, i16* %36, align 2
  %42 = zext i16 %41 to i32
  br label %57

43:                                               ; preds = %32
  %44 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %34, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !2
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %47, label %57

47:                                               ; preds = %43
  %48 = bitcast %"class.v8::internal::Utf16CharacterStream"* %34 to i1 (%"class.v8::internal::Utf16CharacterStream"*)***
  %49 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)**, i1 (%"class.v8::internal::Utf16CharacterStream"*)*** %48, align 8
  %50 = getelementptr inbounds i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %49, i64 5
  %51 = load i1 (%"class.v8::internal::Utf16CharacterStream"*)*, i1 (%"class.v8::internal::Utf16CharacterStream"*)** %50, align 8
  %52 = tail call zeroext i1 %51(%"class.v8::internal::Utf16CharacterStream"* %34) #8
  %53 = load i16*, i16** %35, align 8
  br i1 %52, label %54, label %57

54:                                               ; preds = %47
  %55 = load i16, i16* %53, align 2
  %56 = zext i16 %55 to i32
  br label %57

57:                                               ; preds = %40, %43, %47, %54
  %58 = phi i16* [ %36, %40 ], [ %53, %54 ], [ %36, %43 ], [ %53, %47 ]
  %59 = phi i32 [ %42, %40 ], [ %56, %54 ], [ -1, %43 ], [ -1, %47 ]
  %60 = getelementptr inbounds i16, i16* %58, i64 1
  store i16* %60, i16** %35, align 8
  store i32 %59, i32* %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal7Scanner17ScanUnicodeEscapeILb1EEEjv(%"class.v8::internal::Scanner"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 5
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 123
  %5 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 4
  %6 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %6, i64 0, i32 4
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %6, i64 0, i32 2
  %10 = bitcast i16** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %6, i64 0, i32 1
  %13 = bitcast i16** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = sub i64 %11, %14
  %16 = lshr exact i64 %15, 1
  %17 = add i64 %16, %8
  %18 = add i64 %17, 4294967293
  br i1 %4, label %22, label %19

19:                                               ; preds = %1
  %20 = add i32 %3, -48
  %21 = icmp ult i32 %20, 10
  br i1 %21, label %119, label %101

22:                                               ; preds = %1
  tail call void @_ZN2v88internal7Scanner7AdvanceILb1EEEvv(%"class.v8::internal::Scanner"* %0)
  %23 = load i32, i32* %2, align 8
  %24 = add i32 %23, -48
  %25 = icmp ult i32 %24, 10
  br i1 %25, label %33, label %26

26:                                               ; preds = %22
  %27 = or i32 %24, 32
  %28 = add i32 %27, -49
  %29 = icmp ugt i32 %28, 5
  %30 = add i32 %27, -39
  %31 = icmp slt i32 %30, 0
  %32 = or i1 %29, %31
  br i1 %32, label %77, label %33

33:                                               ; preds = %26, %22
  %34 = phi i32 [ %30, %26 ], [ %24, %22 ]
  br label %35

35:                                               ; preds = %33, %72
  %36 = phi i32 [ %73, %72 ], [ %34, %33 ]
  %37 = phi i32 [ %39, %72 ], [ 0, %33 ]
  %38 = shl i32 %37, 4
  %39 = add i32 %38, %36
  %40 = icmp ugt i32 %39, 1114111
  br i1 %40, label %41, label %63

41:                                               ; preds = %35
  %42 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %5, align 8
  %43 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 14
  %44 = load i32, i32* %43, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %77

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %42, i64 0, i32 2
  %48 = bitcast i16** %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %42, i64 0, i32 1
  %51 = bitcast i16** %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = sub i64 %49, %52
  %54 = lshr exact i64 %53, 1
  %55 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %42, i64 0, i32 4
  %56 = load i64, i64* %55, align 8
  %57 = add i64 %54, %56
  store i32 353, i32* %43, align 4
  %58 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 15
  %59 = bitcast %"struct.v8::internal::Scanner::Location"* %58 to i64*
  %60 = shl i64 %57, 32
  %61 = and i64 %18, 4294967295
  %62 = or i64 %60, %61
  store i64 %62, i64* %59, align 8
  br label %77

63:                                               ; preds = %35
  tail call void @_ZN2v88internal7Scanner7AdvanceILb1EEEvv(%"class.v8::internal::Scanner"* %0) #8
  %64 = load i32, i32* %2, align 8
  %65 = add i32 %64, -48
  %66 = icmp ult i32 %65, 10
  br i1 %66, label %72, label %67

67:                                               ; preds = %63
  %68 = or i32 %65, 32
  %69 = add i32 %68, -49
  %70 = icmp ult i32 %69, 6
  %71 = add i32 %68, -39
  br i1 %70, label %72, label %75

72:                                               ; preds = %67, %63
  %73 = phi i32 [ %65, %63 ], [ %71, %67 ]
  %74 = icmp sgt i32 %73, -1
  br i1 %74, label %35, label %75

75:                                               ; preds = %72, %67
  %76 = icmp eq i32 %64, 125
  br i1 %76, label %100, label %77

77:                                               ; preds = %26, %46, %41, %75
  %78 = load %"class.v8::internal::Utf16CharacterStream"*, %"class.v8::internal::Utf16CharacterStream"** %5, align 8
  %79 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %78, i64 0, i32 4
  %80 = load i64, i64* %79, align 8
  %81 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %78, i64 0, i32 2
  %82 = bitcast i16** %81 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = getelementptr inbounds %"class.v8::internal::Utf16CharacterStream", %"class.v8::internal::Utf16CharacterStream"* %78, i64 0, i32 1
  %85 = bitcast i16** %84 to i64*
  %86 = load i64, i64* %85, align 8
  %87 = sub i64 %83, %86
  %88 = lshr exact i64 %87, 1
  %89 = add i64 %88, %80
  %90 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 14
  %91 = load i32, i32* %90, align 4
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %93, label %124

93:                                               ; preds = %77
  %94 = add i64 %89, 4294967295
  store i32 352, i32* %90, align 4
  %95 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 15
  %96 = bitcast %"struct.v8::internal::Scanner::Location"* %95 to i64*
  %97 = shl i64 %89, 32
  %98 = and i64 %94, 4294967295
  %99 = or i64 %98, %97
  store i64 %99, i64* %96, align 8
  br label %124

100:                                              ; preds = %75
  tail call void @_ZN2v88internal7Scanner7AdvanceILb1EEEvv(%"class.v8::internal::Scanner"* %0)
  br label %124

101:                                              ; preds = %19
  %102 = or i32 %20, 32
  %103 = add i32 %102, -49
  %104 = icmp ugt i32 %103, 5
  %105 = add i32 %102, -39
  %106 = icmp slt i32 %105, 0
  %107 = or i1 %104, %106
  br i1 %107, label %108, label %119

108:                                              ; preds = %154, %140, %126, %101
  %109 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 14
  %110 = load i32, i32* %109, align 4
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %124

112:                                              ; preds = %108
  store i32 352, i32* %109, align 4
  %113 = getelementptr inbounds %"class.v8::internal::Scanner", %"class.v8::internal::Scanner"* %0, i64 0, i32 15
  %114 = bitcast %"struct.v8::internal::Scanner::Location"* %113 to i64*
  %115 = shl i64 %17, 32
  %116 = add i64 %115, 12884901888
  %117 = and i64 %18, 4294967295
  %118 = or i64 %116, %117
  store i64 %118, i64* %114, align 8
  br label %124

119:                                              ; preds = %101, %19
  %120 = phi i32 [ %20, %19 ], [ %105, %101 ]
  tail call void @_ZN2v88internal7Scanner7AdvanceILb1EEEvv(%"class.v8::internal::Scanner"* %0) #8
  %121 = load i32, i32* %2, align 8
  %122 = add i32 %121, -48
  %123 = icmp ult i32 %122, 10
  br i1 %123, label %133, label %126

124:                                              ; preds = %161, %112, %108, %93, %77, %100
  %125 = phi i32 [ %39, %100 ], [ -1, %77 ], [ -1, %93 ], [ -1, %108 ], [ -1, %112 ], [ %164, %161 ]
  ret i32 %125

126:                                              ; preds = %119
  %127 = or i32 %122, 32
  %128 = add i32 %127, -49
  %129 = icmp ugt i32 %128, 5
  %130 = add i32 %127, -39
  %131 = icmp slt i32 %130, 0
  %132 = or i1 %129, %131
  br i1 %132, label %108, label %133

133:                                              ; preds = %126, %119
  %134 = phi i32 [ %122, %119 ], [ %130, %126 ]
  %135 = shl i32 %120, 4
  %136 = add i32 %134, %135
  tail call void @_ZN2v88internal7Scanner7AdvanceILb1EEEvv(%"class.v8::internal::Scanner"* %0) #8
  %137 = load i32, i32* %2, align 8
  %138 = add i32 %137, -48
  %139 = icmp ult i32 %138, 10
  br i1 %139, label %147, label %140

140:                                              ; preds = %133
  %141 = or i32 %138, 32
  %142 = add i32 %141, -49
  %143 = icmp ugt i32 %142, 5
  %144 = add i32 %141, -39
  %145 = icmp slt i32 %144, 0
  %146 = or i1 %143, %145
  br i1 %146, label %108, label %147

147:                                              ; preds = %140, %133
  %148 = phi i32 [ %138, %133 ], [ %144, %140 ]
  %149 = shl i32 %136, 4
  %150 = add i32 %148, %149
  tail call void @_ZN2v88internal7Scanner7AdvanceILb1EEEvv(%"class.v8::internal::Scanner"* %0) #8
  %151 = load i32, i32* %2, align 8
  %152 = add i32 %151, -48
  %153 = icmp ult i32 %152, 10
  br i1 %153, label %161, label %154

154:                                              ; preds = %147
  %155 = or i32 %152, 32
  %156 = add i32 %155, -49
  %157 = icmp ugt i32 %156, 5
  %158 = add i32 %155, -39
  %159 = icmp slt i32 %158, 0
  %160 = or i1 %157, %159
  br i1 %160, label %108, label %161

161:                                              ; preds = %154, %147
  %162 = phi i32 [ %152, %147 ], [ %158, %154 ]
  %163 = shl i32 %150, 4
  %164 = add i32 %162, %163
  tail call void @_ZN2v88internal7Scanner7AdvanceILb1EEEvv(%"class.v8::internal::Scanner"* %0) #8
  br label %124
}

declare i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"*, i64) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { noreturn nounwind }
attributes #10 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!"branch_weights", i32 2000, i32 1}
!5 = !{!"branch_weights", i32 2002, i32 2000}
!6 = !{!"branch_weights", i32 2000, i32 3, i32 2000, i32 2000}
