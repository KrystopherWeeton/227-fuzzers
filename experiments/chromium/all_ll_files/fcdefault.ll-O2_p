; ModuleID = '../../third_party/fontconfig/src/src/fcdefault.c'
source_filename = "../../third_party/fontconfig/src/src/fcdefault.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct._FcStrSet = type { %struct._FcRef, i32, i32, i8**, i32 }
%struct._FcRef = type { i32 }
%struct._FcPattern = type { i32, i32, i64, %struct._FcRef }
%struct._FcPatternIter = type { i8*, i8* }
%struct._FcValue = type { i32, %union.anon }
%union.anon = type { i8* }
%struct._FcRange = type { double, double }

@default_langs = common hidden global %struct._FcStrSet* null, align 8
@.str = private unnamed_addr constant [8 x i8] c"FC_LANG\00", align 1
@.str.1 = private unnamed_addr constant [7 x i8] c"LC_ALL\00", align 1
@.str.2 = private unnamed_addr constant [9 x i8] c"LC_CTYPE\00", align 1
@.str.3 = private unnamed_addr constant [5 x i8] c"LANG\00", align 1
@.str.4 = private unnamed_addr constant [3 x i8] c"en\00", align 1
@default_lang = internal global i8* null, align 8
@default_prgname = internal global i8* null, align 8
@.str.5 = private unnamed_addr constant [15 x i8] c"/proc/self/exe\00", align 1
@.str.6 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7 = private unnamed_addr constant [6 x i8] c"en-us\00", align 1

@FcGetDefaultLangs = hidden alias %struct._FcStrSet* (), %struct._FcStrSet* ()* @IA__FcGetDefaultLangs
@FcDefaultSubstitute = hidden alias void (%struct._FcPattern*), void (%struct._FcPattern*)* @IA__FcDefaultSubstitute

; Function Attrs: nounwind ssp uwtable
define hidden %struct._FcStrSet* @IA__FcGetDefaultLangs() #0 {
  fence seq_cst
  %1 = load %struct._FcStrSet*, %struct._FcStrSet** @default_langs, align 8
  %2 = icmp eq %struct._FcStrSet* %1, null
  br i1 %2, label %3, label %42

3:                                                ; preds = %0, %39
  %4 = tail call %struct._FcStrSet* @IA__FcStrSetCreate() #6
  %5 = tail call i8* @getenv(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0)) #6
  %6 = icmp eq i8* %5, null
  br i1 %6, label %10, label %7

7:                                                ; preds = %3
  %8 = load i8, i8* %5, align 1
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %28

10:                                               ; preds = %3, %7
  %11 = tail call i8* @getenv(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0)) #6
  %12 = icmp eq i8* %11, null
  br i1 %12, label %16, label %13

13:                                               ; preds = %10
  %14 = load i8, i8* %11, align 1
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %16, label %28

16:                                               ; preds = %10, %13
  %17 = tail call i8* @getenv(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0)) #6
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %16
  %20 = load i8, i8* %17, align 1
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %22, label %28

22:                                               ; preds = %16, %19
  %23 = tail call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0)) #6
  %24 = icmp eq i8* %23, null
  br i1 %24, label %32, label %25

25:                                               ; preds = %22
  %26 = load i8, i8* %23, align 1
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %13, %7, %19, %25
  %29 = phi i8* [ %23, %25 ], [ %17, %19 ], [ %5, %7 ], [ %11, %13 ]
  %30 = tail call i32 @FcStrSetAddLangs(%struct._FcStrSet* %4, i8* nonnull %29) #6
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %34

32:                                               ; preds = %22, %25, %28
  %33 = tail call i32 @IA__FcStrSetAdd(%struct._FcStrSet* %4, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4, i64 0, i64 0)) #6
  br label %34

34:                                               ; preds = %32, %28
  %35 = getelementptr inbounds %struct._FcStrSet, %struct._FcStrSet* %4, i64 0, i32 0, i32 0
  store i32 -1, i32* %35, align 4
  %36 = ptrtoint %struct._FcStrSet* %4 to i64
  %37 = cmpxchg i64* bitcast (%struct._FcStrSet** @default_langs to i64*), i64 0, i64 %36 seq_cst seq_cst
  %38 = extractvalue { i64, i1 } %37, 1
  br i1 %38, label %42, label %39

39:                                               ; preds = %34
  store i32 1, i32* %35, align 4
  tail call void @IA__FcStrSetDestroy(%struct._FcStrSet* %4) #6
  fence seq_cst
  %40 = load %struct._FcStrSet*, %struct._FcStrSet** @default_langs, align 8
  %41 = icmp eq %struct._FcStrSet* %40, null
  br i1 %41, label %3, label %42

42:                                               ; preds = %39, %34, %0
  %43 = phi %struct._FcStrSet* [ %1, %0 ], [ %4, %34 ], [ %40, %39 ]
  ret %struct._FcStrSet* %43
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare hidden %struct._FcStrSet* @IA__FcStrSetCreate() local_unnamed_addr #2

; Function Attrs: nofree nounwind readonly
declare i8* @getenv(i8* nocapture) local_unnamed_addr #3

declare hidden i32 @FcStrSetAddLangs(%struct._FcStrSet*, i8*) local_unnamed_addr #2

declare hidden i32 @IA__FcStrSetAdd(%struct._FcStrSet*, i8*) local_unnamed_addr #2

declare hidden void @IA__FcStrSetDestroy(%struct._FcStrSet*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden i8* @FcGetDefaultLang() local_unnamed_addr #0 {
  fence seq_cst
  %1 = load i8*, i8** @default_lang, align 8
  %2 = icmp eq i8* %1, null
  br i1 %2, label %3, label %15

3:                                                ; preds = %0, %12
  %4 = tail call %struct._FcStrSet* @IA__FcGetDefaultLangs()
  %5 = getelementptr inbounds %struct._FcStrSet, %struct._FcStrSet* %4, i64 0, i32 3
  %6 = load i8**, i8*** %5, align 8
  %7 = load i8*, i8** %6, align 8
  %8 = tail call noalias i8* @strdup(i8* %7) #6
  %9 = ptrtoint i8* %8 to i64
  %10 = cmpxchg i64* bitcast (i8** @default_lang to i64*), i64 0, i64 %9 seq_cst seq_cst
  %11 = extractvalue { i64, i1 } %10, 1
  br i1 %11, label %15, label %12

12:                                               ; preds = %3
  tail call void @free(i8* %8) #6
  fence seq_cst
  %13 = load i8*, i8** @default_lang, align 8
  %14 = icmp eq i8* %13, null
  br i1 %14, label %3, label %15

15:                                               ; preds = %12, %3, %0
  %16 = phi i8* [ %1, %0 ], [ %8, %3 ], [ %13, %12 ]
  ret i8* %16
}

; Function Attrs: nofree nounwind
declare noalias i8* @strdup(i8* nocapture readonly) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden i8* @FcGetPrgname() local_unnamed_addr #0 {
  fence seq_cst
  %1 = load i8*, i8** @default_prgname, align 8
  %2 = icmp eq i8* %1, null
  br i1 %2, label %3, label %43

3:                                                ; preds = %0, %38
  %4 = tail call noalias i8* @malloc(i64 4096) #6
  %5 = icmp eq i8* %4, null
  br i1 %5, label %29, label %6

6:                                                ; preds = %3, %15
  %7 = phi i8* [ %17, %15 ], [ %4, %3 ]
  %8 = phi i64 [ %16, %15 ], [ 4096, %3 ]
  %9 = add i64 %8, -1
  %10 = tail call i64 @readlink(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.5, i64 0, i64 0), i8* nonnull %7, i64 %9) #6
  %11 = icmp slt i64 %10, 0
  br i1 %11, label %12, label %13

12:                                               ; preds = %6
  tail call void @free(i8* nonnull %7) #6
  br label %29

13:                                               ; preds = %6
  %14 = icmp ult i64 %10, %9
  br i1 %14, label %19, label %15

15:                                               ; preds = %13
  tail call void @free(i8* nonnull %7) #6
  %16 = shl i64 %8, 1
  %17 = tail call noalias i8* @malloc(i64 %16) #6
  %18 = icmp eq i8* %17, null
  br i1 %18, label %29, label %6

19:                                               ; preds = %13
  %20 = getelementptr inbounds i8, i8* %7, i64 %10
  store i8 0, i8* %20, align 1
  %21 = tail call i8* @strrchr(i8* nonnull %7, i32 47) #7
  %22 = icmp eq i8* %21, null
  %23 = getelementptr inbounds i8, i8* %21, i64 1
  %24 = select i1 %22, i8* %7, i8* %23
  %25 = tail call noalias i8* @strdup(i8* %24) #6
  %26 = icmp eq i8* %25, null
  br i1 %26, label %27, label %31

27:                                               ; preds = %19
  %28 = tail call noalias i8* @strdup(i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i64 0, i64 0)) #6
  br label %31

29:                                               ; preds = %15, %3, %12
  %30 = tail call noalias i8* @strdup(i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i64 0, i64 0)) #6
  br label %33

31:                                               ; preds = %19, %27
  %32 = phi i8* [ %28, %27 ], [ %25, %19 ]
  tail call void @free(i8* nonnull %7) #6
  br label %33

33:                                               ; preds = %29, %31
  %34 = phi i8* [ %32, %31 ], [ %30, %29 ]
  %35 = ptrtoint i8* %34 to i64
  %36 = cmpxchg i64* bitcast (i8** @default_prgname to i64*), i64 0, i64 %35 seq_cst seq_cst
  %37 = extractvalue { i64, i1 } %36, 1
  br i1 %37, label %41, label %38

38:                                               ; preds = %33
  tail call void @free(i8* %34) #6
  fence seq_cst
  %39 = load i8*, i8** @default_prgname, align 8
  %40 = icmp eq i8* %39, null
  br i1 %40, label %3, label %43

41:                                               ; preds = %33
  %42 = icmp eq i8* %34, null
  br i1 %42, label %47, label %43

43:                                               ; preds = %38, %0, %41
  %44 = phi i8* [ %34, %41 ], [ %1, %0 ], [ %39, %38 ]
  %45 = load i8, i8* %44, align 1
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %49, label %47

47:                                               ; preds = %43, %41
  %48 = phi i8* [ %44, %43 ], [ null, %41 ]
  br label %49

49:                                               ; preds = %43, %47
  %50 = phi i8* [ %48, %47 ], [ null, %43 ]
  ret i8* %50
}

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #4

; Function Attrs: nofree nounwind
declare i64 @readlink(i8* nocapture readonly, i8* nocapture, i64) local_unnamed_addr #4

; Function Attrs: nofree nounwind readonly
declare i8* @strrchr(i8*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @FcDefaultFini() local_unnamed_addr #0 {
  fence seq_cst
  %1 = load i8*, i8** @default_lang, align 8
  %2 = icmp eq i8* %1, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %0
  %4 = ptrtoint i8* %1 to i64
  %5 = cmpxchg i64* bitcast (i8** @default_lang to i64*), i64 %4, i64 0 seq_cst seq_cst
  %6 = extractvalue { i64, i1 } %5, 1
  br i1 %6, label %7, label %8

7:                                                ; preds = %3
  tail call void @free(i8* nonnull %1) #6
  br label %8

8:                                                ; preds = %0, %7, %3
  fence seq_cst
  %9 = load %struct._FcStrSet*, %struct._FcStrSet** @default_langs, align 8
  %10 = icmp eq %struct._FcStrSet* %9, null
  br i1 %10, label %17, label %11

11:                                               ; preds = %8
  %12 = ptrtoint %struct._FcStrSet* %9 to i64
  %13 = cmpxchg i64* bitcast (%struct._FcStrSet** @default_langs to i64*), i64 %12, i64 0 seq_cst seq_cst
  %14 = extractvalue { i64, i1 } %13, 1
  br i1 %14, label %15, label %17

15:                                               ; preds = %11
  %16 = getelementptr inbounds %struct._FcStrSet, %struct._FcStrSet* %9, i64 0, i32 0, i32 0
  store i32 1, i32* %16, align 4
  tail call void @IA__FcStrSetDestroy(%struct._FcStrSet* nonnull %9) #6
  br label %17

17:                                               ; preds = %8, %15, %11
  fence seq_cst
  %18 = load i8*, i8** @default_prgname, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %17
  %21 = ptrtoint i8* %18 to i64
  %22 = cmpxchg i64* bitcast (i8** @default_prgname to i64*), i64 %21, i64 0 seq_cst seq_cst
  %23 = extractvalue { i64, i1 } %22, 1
  br i1 %23, label %24, label %25

24:                                               ; preds = %20
  tail call void @free(i8* nonnull %18) #6
  br label %25

25:                                               ; preds = %17, %24, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @IA__FcDefaultSubstitute(%struct._FcPattern*) #0 {
  %2 = alloca %struct._FcPatternIter, align 8
  %3 = alloca %struct._FcValue, align 8
  %4 = alloca %struct._FcValue, align 8
  %5 = alloca double, align 8
  %6 = alloca double, align 8
  %7 = alloca double, align 8
  %8 = alloca %struct._FcRange*, align 8
  %9 = alloca double, align 8
  %10 = alloca double, align 8
  %11 = bitcast %struct._FcPatternIter* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #6
  %12 = bitcast %struct._FcValue* %3 to i8*
  %13 = bitcast %struct._FcPatternIter* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 16, i1 false)
  %14 = bitcast %struct._FcValue* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 16, i1 false)
  %15 = bitcast double* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #6
  store double 0xFFFFFFFFFFFFFFFF, double* %5, align 8
  %16 = bitcast double* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #6
  store double 0xFFFFFFFFFFFFFFFF, double* %6, align 8
  %17 = bitcast double* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #6
  store double 0xFFFFFFFFFFFFFFFF, double* %7, align 8
  %18 = call i32 @FcPatternFindObjectIter(%struct._FcPattern* %0, %struct._FcPatternIter* nonnull %2, i32 8) #6
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %22

20:                                               ; preds = %1
  %21 = call i32 @FcPatternObjectAddInteger(%struct._FcPattern* %0, i32 8, i32 80) #6
  br label %22

22:                                               ; preds = %1, %20
  %23 = call i32 @FcPatternFindObjectIter(%struct._FcPattern* %0, %struct._FcPatternIter* nonnull %2, i32 7) #6
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %27

25:                                               ; preds = %22
  %26 = call i32 @FcPatternObjectAddInteger(%struct._FcPattern* %0, i32 7, i32 0) #6
  br label %27

27:                                               ; preds = %22, %25
  %28 = call i32 @FcPatternFindObjectIter(%struct._FcPattern* %0, %struct._FcPatternIter* nonnull %2, i32 9) #6
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %32

30:                                               ; preds = %27
  %31 = call i32 @FcPatternObjectAddInteger(%struct._FcPattern* %0, i32 9, i32 100) #6
  br label %32

32:                                               ; preds = %27, %30
  %33 = call i32 @FcPatternFindObjectIter(%struct._FcPattern* %0, %struct._FcPatternIter* nonnull %2, i32 17) #6
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %37

35:                                               ; preds = %32
  %36 = call i32 @FcPatternObjectAddBool(%struct._FcPattern* %0, i32 17, i32 1) #6
  br label %37

37:                                               ; preds = %32, %35
  %38 = call i32 @FcPatternFindObjectIter(%struct._FcPattern* %0, %struct._FcPatternIter* nonnull %2, i32 18) #6
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %166, label %168

40:                                               ; preds = %198
  %41 = bitcast %struct._FcRange** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41) #6
  store %struct._FcRange* inttoptr (i64 -6148914691236517206 to %struct._FcRange*), %struct._FcRange** %8, align 8
  %42 = bitcast double* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42) #6
  store double 0xFFFFFFFFFFFFFFFF, double* %9, align 8
  %43 = bitcast double* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #6
  store double 0xFFFFFFFFFFFFFFFF, double* %10, align 8
  %44 = call i32 @FcPatternObjectGetRange(%struct._FcPattern* %0, i32 10, i32 0, %struct._FcRange** nonnull %8) #6
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %55

46:                                               ; preds = %40
  %47 = load %struct._FcRange*, %struct._FcRange** %8, align 8
  %48 = call i32 @IA__FcRangeGetDouble(%struct._FcRange* %47, double* nonnull %9, double* nonnull %10) #6
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %55, label %50

50:                                               ; preds = %46
  %51 = load double, double* %9, align 8
  %52 = load double, double* %10, align 8
  %53 = fadd double %51, %52
  %54 = fmul double %53, 5.000000e-01
  br label %55

55:                                               ; preds = %40, %46, %50
  %56 = phi double [ %54, %50 ], [ 1.200000e+01, %46 ], [ 1.200000e+01, %40 ]
  store double %56, double* %6, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41) #6
  br label %57

57:                                               ; preds = %198, %55
  %58 = call i32 @FcPatternObjectGetDouble(%struct._FcPattern* %0, i32 28, i32 0, double* nonnull %7) #6
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %61, label %60

60:                                               ; preds = %57
  store double 1.000000e+00, double* %7, align 8
  br label %61

61:                                               ; preds = %57, %60
  %62 = call i32 @FcPatternObjectGetDouble(%struct._FcPattern* %0, i32 26, i32 0, double* nonnull %5) #6
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %65, label %64

64:                                               ; preds = %61
  store double 7.500000e+01, double* %5, align 8
  br label %65

65:                                               ; preds = %61, %64
  %66 = call i32 @FcPatternFindObjectIter(%struct._FcPattern* %0, %struct._FcPatternIter* nonnull %2, i32 12) #6
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %82

68:                                               ; preds = %65
  %69 = call i32 @FcPatternObjectDel(%struct._FcPattern* %0, i32 28) #6
  %70 = load double, double* %7, align 8
  %71 = call i32 @FcPatternObjectAddDouble(%struct._FcPattern* %0, i32 28, double %70) #6
  %72 = load double, double* %6, align 8
  %73 = load double, double* %7, align 8
  %74 = fmul double %72, %73
  %75 = call i32 @FcPatternObjectDel(%struct._FcPattern* %0, i32 26) #6
  %76 = load double, double* %5, align 8
  %77 = call i32 @FcPatternObjectAddDouble(%struct._FcPattern* %0, i32 26, double %76) #6
  %78 = load double, double* %5, align 8
  %79 = fdiv double %78, 7.200000e+01
  %80 = fmul double %74, %79
  %81 = call i32 @FcPatternObjectAddDouble(%struct._FcPattern* %0, i32 12, double %80) #6
  br label %92

82:                                               ; preds = %65
  %83 = call i32 @IA__FcPatternIterGetValue(%struct._FcPattern* %0, %struct._FcPatternIter* nonnull %2, i32 0, %struct._FcValue* nonnull %3, i32* null) #6
  %84 = getelementptr inbounds %struct._FcValue, %struct._FcValue* %3, i64 0, i32 1
  %85 = bitcast %union.anon* %84 to double*
  %86 = load double, double* %85, align 8
  %87 = load double, double* %5, align 8
  %88 = fdiv double %86, %87
  %89 = fmul double %88, 7.200000e+01
  %90 = load double, double* %7, align 8
  %91 = fdiv double %89, %90
  store double %91, double* %6, align 8
  br label %92

92:                                               ; preds = %82, %68
  %93 = call i32 @FcPatternObjectDel(%struct._FcPattern* %0, i32 10) #6
  %94 = load double, double* %6, align 8
  %95 = call i32 @FcPatternObjectAddDouble(%struct._FcPattern* %0, i32 10, double %94) #6
  %96 = call i32 @FcPatternFindObjectIter(%struct._FcPattern* %0, %struct._FcPatternIter* nonnull %2, i32 35) #6
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %98, label %100

98:                                               ; preds = %92
  %99 = call i32 @FcPatternObjectAddInteger(%struct._FcPattern* %0, i32 35, i32 2147483647) #6
  br label %100

100:                                              ; preds = %92, %98
  %101 = call i32 @FcPatternFindObjectIter(%struct._FcPattern* %0, %struct._FcPatternIter* nonnull %2, i32 16) #6
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %103, label %105

103:                                              ; preds = %100
  %104 = call i32 @FcPatternObjectAddInteger(%struct._FcPattern* %0, i32 16, i32 3) #6
  br label %105

105:                                              ; preds = %100, %103
  %106 = call i32 @FcPatternFindObjectIter(%struct._FcPattern* %0, %struct._FcPatternIter* nonnull %2, i32 42) #6
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %108, label %126

108:                                              ; preds = %105
  fence seq_cst
  %109 = load i8*, i8** @default_lang, align 8
  %110 = icmp eq i8* %109, null
  br i1 %110, label %111, label %123

111:                                              ; preds = %108, %120
  %112 = call %struct._FcStrSet* @IA__FcGetDefaultLangs() #6
  %113 = getelementptr inbounds %struct._FcStrSet, %struct._FcStrSet* %112, i64 0, i32 3
  %114 = load i8**, i8*** %113, align 8
  %115 = load i8*, i8** %114, align 8
  %116 = call noalias i8* @strdup(i8* %115) #6
  %117 = ptrtoint i8* %116 to i64
  %118 = cmpxchg i64* bitcast (i8** @default_lang to i64*), i64 0, i64 %117 seq_cst seq_cst
  %119 = extractvalue { i64, i1 } %118, 1
  br i1 %119, label %123, label %120

120:                                              ; preds = %111
  call void @free(i8* %116) #6
  fence seq_cst
  %121 = load i8*, i8** @default_lang, align 8
  %122 = icmp eq i8* %121, null
  br i1 %122, label %111, label %123

123:                                              ; preds = %111, %120, %108
  %124 = phi i8* [ %109, %108 ], [ %121, %120 ], [ %116, %111 ]
  %125 = call i32 @FcPatternObjectAddString(%struct._FcPattern* %0, i32 42, i8* %124) #6
  br label %126

126:                                              ; preds = %105, %123
  %127 = call i32 @FcPatternObjectGet(%struct._FcPattern* %0, i32 42, i32 0, %struct._FcValue* nonnull %4) #6
  %128 = call i32 @FcPatternFindObjectIter(%struct._FcPattern* %0, %struct._FcPatternIter* nonnull %2, i32 2) #6
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %130, label %137

130:                                              ; preds = %126
  %131 = getelementptr inbounds %struct._FcValue, %struct._FcValue* %4, i64 0, i32 0
  %132 = load i32, i32* %131, align 8
  %133 = getelementptr inbounds %struct._FcValue, %struct._FcValue* %4, i64 0, i32 1, i32 0
  %134 = load i8*, i8** %133, align 8
  %135 = call i32 @FcPatternObjectAdd(%struct._FcPattern* %0, i32 2, i32 %132, i8* %134, i32 1) #6
  %136 = call i32 @FcPatternObjectAddWithBinding(%struct._FcPattern* %0, i32 2, i32 3, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.7, i64 0, i64 0), i32 0, i32 1) #6
  br label %137

137:                                              ; preds = %126, %130
  %138 = call i32 @FcPatternFindObjectIter(%struct._FcPattern* %0, %struct._FcPatternIter* nonnull %2, i32 4) #6
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %140, label %147

140:                                              ; preds = %137
  %141 = getelementptr inbounds %struct._FcValue, %struct._FcValue* %4, i64 0, i32 0
  %142 = load i32, i32* %141, align 8
  %143 = getelementptr inbounds %struct._FcValue, %struct._FcValue* %4, i64 0, i32 1, i32 0
  %144 = load i8*, i8** %143, align 8
  %145 = call i32 @FcPatternObjectAdd(%struct._FcPattern* %0, i32 4, i32 %142, i8* %144, i32 1) #6
  %146 = call i32 @FcPatternObjectAddWithBinding(%struct._FcPattern* %0, i32 4, i32 3, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.7, i64 0, i64 0), i32 0, i32 1) #6
  br label %147

147:                                              ; preds = %137, %140
  %148 = call i32 @FcPatternFindObjectIter(%struct._FcPattern* %0, %struct._FcPatternIter* nonnull %2, i32 6) #6
  %149 = icmp eq i32 %148, 0
  br i1 %149, label %150, label %157

150:                                              ; preds = %147
  %151 = getelementptr inbounds %struct._FcValue, %struct._FcValue* %4, i64 0, i32 0
  %152 = load i32, i32* %151, align 8
  %153 = getelementptr inbounds %struct._FcValue, %struct._FcValue* %4, i64 0, i32 1, i32 0
  %154 = load i8*, i8** %153, align 8
  %155 = call i32 @FcPatternObjectAdd(%struct._FcPattern* %0, i32 6, i32 %152, i8* %154, i32 1) #6
  %156 = call i32 @FcPatternObjectAddWithBinding(%struct._FcPattern* %0, i32 6, i32 3, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.7, i64 0, i64 0), i32 0, i32 1) #6
  br label %157

157:                                              ; preds = %147, %150
  %158 = call i32 @FcPatternObjectGet(%struct._FcPattern* %0, i32 44, i32 0, %struct._FcValue* nonnull %3) #6
  %159 = icmp eq i32 %158, 1
  br i1 %159, label %160, label %165

160:                                              ; preds = %157
  %161 = call i8* @FcGetPrgname()
  %162 = icmp eq i8* %161, null
  br i1 %162, label %165, label %163

163:                                              ; preds = %160
  %164 = call i32 @FcPatternObjectAddString(%struct._FcPattern* %0, i32 44, i8* nonnull %161) #6
  br label %165

165:                                              ; preds = %163, %160, %157
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #6
  ret void

166:                                              ; preds = %37
  %167 = call i32 @FcPatternObjectAddBool(%struct._FcPattern* %0, i32 18, i32 0) #6
  br label %168

168:                                              ; preds = %166, %37
  %169 = call i32 @FcPatternFindObjectIter(%struct._FcPattern* %0, %struct._FcPatternIter* nonnull %2, i32 19) #6
  %170 = icmp eq i32 %169, 0
  br i1 %170, label %171, label %173

171:                                              ; preds = %168
  %172 = call i32 @FcPatternObjectAddBool(%struct._FcPattern* %0, i32 19, i32 0) #6
  br label %173

173:                                              ; preds = %171, %168
  %174 = call i32 @FcPatternFindObjectIter(%struct._FcPattern* %0, %struct._FcPatternIter* nonnull %2, i32 20) #6
  %175 = icmp eq i32 %174, 0
  br i1 %175, label %176, label %178

176:                                              ; preds = %173
  %177 = call i32 @FcPatternObjectAddBool(%struct._FcPattern* %0, i32 20, i32 1) #6
  br label %178

178:                                              ; preds = %176, %173
  %179 = call i32 @FcPatternFindObjectIter(%struct._FcPattern* %0, %struct._FcPatternIter* nonnull %2, i32 39) #6
  %180 = icmp eq i32 %179, 0
  br i1 %180, label %181, label %183

181:                                              ; preds = %178
  %182 = call i32 @FcPatternObjectAddBool(%struct._FcPattern* %0, i32 39, i32 1) #6
  br label %183

183:                                              ; preds = %181, %178
  %184 = call i32 @FcPatternFindObjectIter(%struct._FcPattern* %0, %struct._FcPatternIter* nonnull %2, i32 40) #6
  %185 = icmp eq i32 %184, 0
  br i1 %185, label %186, label %188

186:                                              ; preds = %183
  %187 = call i32 @FcPatternObjectAddBool(%struct._FcPattern* %0, i32 40, i32 0) #6
  br label %188

188:                                              ; preds = %186, %183
  %189 = call i32 @FcPatternFindObjectIter(%struct._FcPattern* %0, %struct._FcPatternIter* nonnull %2, i32 48) #6
  %190 = icmp eq i32 %189, 0
  br i1 %190, label %191, label %193

191:                                              ; preds = %188
  %192 = call i32 @FcPatternObjectAddBool(%struct._FcPattern* %0, i32 48, i32 0) #6
  br label %193

193:                                              ; preds = %191, %188
  %194 = call i32 @FcPatternFindObjectIter(%struct._FcPattern* %0, %struct._FcPatternIter* nonnull %2, i32 50) #6
  %195 = icmp eq i32 %194, 0
  br i1 %195, label %196, label %198

196:                                              ; preds = %193
  %197 = call i32 @FcPatternObjectAddBool(%struct._FcPattern* %0, i32 50, i32 0) #6
  br label %198

198:                                              ; preds = %196, %193
  %199 = call i32 @FcPatternObjectGetDouble(%struct._FcPattern* %0, i32 10, i32 0, double* nonnull %6) #6
  %200 = icmp eq i32 %199, 0
  br i1 %200, label %57, label %40
}

declare hidden i32 @FcPatternFindObjectIter(%struct._FcPattern*, %struct._FcPatternIter*, i32) local_unnamed_addr #2

declare hidden i32 @FcPatternObjectAddInteger(%struct._FcPattern*, i32, i32) local_unnamed_addr #2

declare hidden i32 @FcPatternObjectAddBool(%struct._FcPattern*, i32, i32) local_unnamed_addr #2

declare hidden i32 @FcPatternObjectGetDouble(%struct._FcPattern*, i32, i32, double*) local_unnamed_addr #2

declare hidden i32 @FcPatternObjectGetRange(%struct._FcPattern*, i32, i32, %struct._FcRange**) local_unnamed_addr #2

declare hidden i32 @IA__FcRangeGetDouble(%struct._FcRange*, double*, double*) local_unnamed_addr #2

declare hidden i32 @FcPatternObjectDel(%struct._FcPattern*, i32) local_unnamed_addr #2

declare hidden i32 @FcPatternObjectAddDouble(%struct._FcPattern*, i32, double) local_unnamed_addr #2

declare hidden i32 @IA__FcPatternIterGetValue(%struct._FcPattern*, %struct._FcPatternIter*, i32, %struct._FcValue*, i32*) local_unnamed_addr #2

declare hidden i32 @FcPatternObjectAddString(%struct._FcPattern*, i32, i8*) local_unnamed_addr #2

declare hidden i32 @FcPatternObjectGet(%struct._FcPattern*, i32, i32, %struct._FcValue*) local_unnamed_addr #2

declare hidden i32 @FcPatternObjectAdd(%struct._FcPattern*, i32, i32, i8*, i32) local_unnamed_addr #2

declare hidden i32 @FcPatternObjectAddWithBinding(%struct._FcPattern*, i32, i32, i8*, i32, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
