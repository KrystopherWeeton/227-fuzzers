; ModuleID = '../../third_party/boringssl/src/ssl/tls_method.cc'
source_filename = "../../third_party/boringssl/src/ssl/tls_method.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.stack_st_CRYPTO_BUFFER = type opaque
%"struct.bssl::CERT" = type { %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.1", %struct.stack_st_X509*, %struct.x509_st*, %struct.x509_st*, %struct.ssl_private_key_method_st*, %"struct.bssl::SSL_X509_METHOD"*, %"class.bssl::Array.36", i32 (%struct.ssl_st*, i8*)*, i8*, %struct.x509_store_st*, %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86", i8, [32 x i8], %"class.std::__1::unique_ptr.113", %"class.std::__1::unique_ptr", %struct.ssl_private_key_method_st* }
%"class.std::__1::unique_ptr.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %struct.stack_st_CRYPTO_BUFFER* }
%struct.stack_st_X509 = type opaque
%struct.x509_st = type { %struct.x509_cinf_st*, %struct.X509_algor_st*, %struct.asn1_string_st*, i32, %struct.crypto_ex_data_st, i64, i64, i64, i64, i64, i64, %struct.asn1_string_st*, %struct.AUTHORITY_KEYID_st*, %struct.X509_POLICY_CACHE_st*, %struct.stack_st_DIST_POINT*, %struct.stack_st_GENERAL_NAME*, %struct.NAME_CONSTRAINTS_st*, [20 x i8], %struct.x509_cert_aux_st*, %struct.crypto_buffer_st*, %union.crypto_mutex_st }
%struct.x509_cinf_st = type { %struct.asn1_string_st*, %struct.asn1_string_st*, %struct.X509_algor_st*, %struct.X509_name_st*, %struct.X509_val_st*, %struct.X509_name_st*, %struct.X509_pubkey_st*, %struct.asn1_string_st*, %struct.asn1_string_st*, %struct.stack_st_X509_EXTENSION*, %struct.ASN1_ENCODING_st }
%struct.X509_val_st = type opaque
%struct.X509_name_st = type { %struct.stack_st_X509_NAME_ENTRY*, i32, %struct.buf_mem_st*, i8*, i32 }
%struct.stack_st_X509_NAME_ENTRY = type opaque
%struct.buf_mem_st = type { i64, i8*, i64 }
%struct.X509_pubkey_st = type opaque
%struct.stack_st_X509_EXTENSION = type opaque
%struct.ASN1_ENCODING_st = type { i8*, i64, i32, i8 }
%struct.X509_algor_st = type { %struct.asn1_object_st*, %struct.asn1_type_st* }
%struct.asn1_object_st = type { i8*, i8*, i32, i32, i8*, i32 }
%struct.asn1_type_st = type { i32, %union.anon.6 }
%union.anon.6 = type { i8* }
%struct.crypto_ex_data_st = type { %struct.stack_st_void* }
%struct.stack_st_void = type opaque
%struct.asn1_string_st = type { i32, i32, i8*, i64 }
%struct.AUTHORITY_KEYID_st = type opaque
%struct.X509_POLICY_CACHE_st = type opaque
%struct.stack_st_DIST_POINT = type opaque
%struct.stack_st_GENERAL_NAME = type opaque
%struct.NAME_CONSTRAINTS_st = type opaque
%struct.x509_cert_aux_st = type opaque
%struct.crypto_buffer_st = type opaque
%union.crypto_mutex_st = type { double, [48 x i8] }
%"struct.bssl::SSL_X509_METHOD" = type { i1 (%struct.stack_st_CRYPTO_BUFFER*)*, {}*, {}*, void (%"struct.bssl::CERT"*, %"struct.bssl::CERT"*)*, {}*, {}*, i1 (%struct.ssl_session_st*)*, i1 (%struct.ssl_session_st*, %struct.ssl_session_st*)*, void (%struct.ssl_session_st*)*, i1 (%struct.ssl_session_st*, %"struct.bssl::SSL_HANDSHAKE"*, i8*)*, void (%"struct.bssl::SSL_HANDSHAKE"*)*, i1 (%"struct.bssl::SSL_HANDSHAKE"*)*, void (%"struct.bssl::SSL_CONFIG"*)*, void (%"struct.bssl::SSL_CONFIG"*)*, i1 (%"struct.bssl::SSL_HANDSHAKE"*)*, i1 (%struct.ssl_ctx_st*)*, void (%struct.ssl_ctx_st*)*, void (%struct.ssl_ctx_st*)* }
%"class.bssl::Array.36" = type { i16*, i64 }
%struct.ssl_st = type <{ %"struct.bssl::SSL_PROTOCOL_METHOD"*, %"class.std::__1::unique_ptr.13", i16, i16, [4 x i8], %"class.std::__1::unique_ptr.45", %"class.std::__1::unique_ptr.45", i32 (%"struct.bssl::SSL_HANDSHAKE"*)*, %"struct.bssl::SSL3_STATE"*, %"struct.bssl::DTLS1_STATE"*, void (i32, i32, i32, i8*, i64, %struct.ssl_st*, i8*)*, i8*, i32, [4 x i8], %"class.std::__1::unique_ptr.68", void (%struct.ssl_st*, i32, i32)*, %"class.std::__1::unique_ptr.108", %"class.std::__1::unique_ptr.108", %struct.crypto_ex_data_st, i32, i32, i32, [4 x i8], %"class.std::__1::unique_ptr.31", %struct.ssl_quic_method_st*, i32, i8, [3 x i8] }>
%"struct.bssl::SSL_PROTOCOL_METHOD" = type { i8, i1 (%struct.ssl_st*)*, void (%struct.ssl_st*)*, i1 (%struct.ssl_st*, %"struct.bssl::SSLMessage"*)*, void (%struct.ssl_st*)*, i1 (%struct.ssl_st*)*, i32 (%struct.ssl_st*, i64*, i8*, i8*, i64)*, i32 (%struct.ssl_st*, i64*, i8*, i8*, i64)*, i32 (%struct.ssl_st*, %"class.bssl::Span"*, i64*, i8*, i8*, i64)*, i32 (%struct.ssl_st*, i8*, i8*, i32)*, i32 (%struct.ssl_st*)*, i1 (%struct.ssl_st*, %struct.cbb_st*, %struct.cbb_st*, i8)*, i1 (%struct.ssl_st*, %struct.cbb_st*, %"class.bssl::Array"*)*, i1 (%struct.ssl_st*, %"class.bssl::Array"*)*, i1 (%struct.ssl_st*)*, i32 (%struct.ssl_st*)*, void (%struct.ssl_st*)*, i1 (%struct.ssl_st*, i32, %"class.bssl::SSLAEADContext"*, i8*, i64)*, i1 (%struct.ssl_st*, i32, %"class.bssl::SSLAEADContext"*, i8*, i64)* }
%"struct.bssl::SSLMessage" = type { i8, i8, %struct.cbs_st, %struct.cbs_st }
%struct.cbs_st = type { i8*, i64 }
%"class.bssl::Span" = type { i8*, i64 }
%struct.cbb_st = type { %struct.cbb_buffer_st*, %struct.cbb_st*, i64, i8, i8, i8 }
%struct.cbb_buffer_st = type { i8*, i64, i64, i8, i8 }
%"class.bssl::Array" = type { i8*, i64 }
%"class.bssl::SSLAEADContext" = type <{ %struct.ssl_cipher_st*, %"class.bssl::internal::StackAllocated", [12 x i8], i8, i8, i16, i8, i8, [6 x i8] }>
%struct.ssl_cipher_st = type { i8*, i8*, i32, i32, i32, i32, i32, i32 }
%"class.bssl::internal::StackAllocated" = type { %struct.evp_aead_ctx_st }
%struct.evp_aead_ctx_st = type { %struct.evp_aead_st*, %union.evp_aead_ctx_st_state, i8 }
%struct.evp_aead_st = type opaque
%union.evp_aead_ctx_st_state = type { i64, [576 x i8] }
%"class.std::__1::unique_ptr.13" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"struct.bssl::SSL_CONFIG"* }
%"struct.bssl::SSL_CONFIG" = type <{ %struct.ssl_st*, i16, i16, [4 x i8], %struct.X509_VERIFY_PARAM_st*, %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.26", i32 (i32, %struct.x509_store_ctx_st*)*, i32 (%struct.ssl_st*, i8*)*, %"class.std::__1::unique_ptr.31", i32 (%struct.ssl_st*, i8*, i8*, i32, i8*, i32)*, i32 (%struct.ssl_st*, i8*, i8*, i32)*, %"class.std::__1::unique_ptr.1", %struct.stack_st_X509_NAME*, %"class.bssl::Array.36", %"class.std::__1::unique_ptr", %"class.bssl::Array", %"class.bssl::GrowableArray", %"class.bssl::Array", %"class.bssl::Array", %"class.bssl::Array.36", %"class.std::__1::unique_ptr.38", i8, i16, [5 x i8] }>
%struct.X509_VERIFY_PARAM_st = type { i8*, i64, i64, i64, i32, i32, i32, %struct.stack_st_ASN1_OBJECT*, %struct.X509_VERIFY_PARAM_ID_st* }
%struct.stack_st_ASN1_OBJECT = type opaque
%struct.X509_VERIFY_PARAM_ID_st = type opaque
%"class.std::__1::unique_ptr.16" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"struct.bssl::SSLCipherPreferenceList"* }
%"struct.bssl::SSLCipherPreferenceList" = type { %"class.std::__1::unique_ptr.19", i8* }
%"class.std::__1::unique_ptr.19" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %struct.stack_st_SSL_CIPHER* }
%struct.stack_st_SSL_CIPHER = type opaque
%"class.std::__1::unique_ptr.26" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"struct.bssl::CERT"* }
%struct.x509_store_ctx_st = type { %struct.x509_store_st*, %struct.x509_st*, %struct.stack_st_X509*, %struct.stack_st_X509_CRL*, %struct.X509_VERIFY_PARAM_st*, i8*, i32 (%struct.x509_store_ctx_st*)*, {}*, i32 (%struct.x509_st**, %struct.x509_store_ctx_st*, %struct.x509_st*)*, i32 (%struct.x509_store_ctx_st*, %struct.x509_st*, %struct.x509_st*)*, i32 (%struct.x509_store_ctx_st*)*, i32 (%struct.x509_store_ctx_st*, %struct.X509_crl_st**, %struct.x509_st*)*, i32 (%struct.x509_store_ctx_st*, %struct.X509_crl_st*)*, i32 (%struct.x509_store_ctx_st*, %struct.X509_crl_st*, %struct.x509_st*)*, i32 (%struct.x509_store_ctx_st*)*, %struct.stack_st_X509* (%struct.x509_store_ctx_st*, %struct.X509_name_st*)*, %struct.stack_st_X509_CRL* (%struct.x509_store_ctx_st*, %struct.X509_name_st*)*, i32 (%struct.x509_store_ctx_st*)*, i32, i32, %struct.stack_st_X509*, %struct.X509_POLICY_TREE_st*, i32, i32, i32, %struct.x509_st*, %struct.x509_st*, %struct.X509_crl_st*, i32, i32, %struct.x509_store_ctx_st*, %struct.crypto_ex_data_st }
%struct.stack_st_X509_CRL = type opaque
%struct.X509_POLICY_TREE_st = type opaque
%struct.X509_crl_st = type { %struct.X509_crl_info_st*, %struct.X509_algor_st*, %struct.asn1_string_st*, i32, i32, %struct.AUTHORITY_KEYID_st*, %struct.ISSUING_DIST_POINT_st*, i32, i32, %struct.asn1_string_st*, %struct.asn1_string_st*, [20 x i8], %struct.stack_st_GENERAL_NAMES*, %struct.x509_crl_method_st*, i8* }
%struct.X509_crl_info_st = type { %struct.asn1_string_st*, %struct.X509_algor_st*, %struct.X509_name_st*, %struct.asn1_string_st*, %struct.asn1_string_st*, %struct.stack_st_X509_REVOKED*, %struct.stack_st_X509_EXTENSION*, %struct.ASN1_ENCODING_st }
%struct.stack_st_X509_REVOKED = type opaque
%struct.ISSUING_DIST_POINT_st = type opaque
%struct.stack_st_GENERAL_NAMES = type opaque
%struct.x509_crl_method_st = type opaque
%struct.stack_st_X509_NAME = type opaque
%"class.bssl::GrowableArray" = type { i64, %"class.bssl::Array.37" }
%"class.bssl::Array.37" = type { %"struct.bssl::ALPSConfig"*, i64 }
%"struct.bssl::ALPSConfig" = type { %"class.bssl::Array", %"class.bssl::Array" }
%"class.std::__1::unique_ptr.38" = type { %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %struct.stack_st_SRTP_PROTECTION_PROFILE* }
%struct.stack_st_SRTP_PROTECTION_PROFILE = type opaque
%"class.std::__1::unique_ptr.45" = type { %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %struct.bio_st* }
%struct.bio_st = type { %struct.bio_method_st*, i32, i32, i32, i32, i32, i32, i8*, %struct.bio_st*, i64, i64 }
%struct.bio_method_st = type { i32, i8*, i32 (%struct.bio_st*, i8*, i32)*, i32 (%struct.bio_st*, i8*, i32)*, i32 (%struct.bio_st*, i8*)*, i32 (%struct.bio_st*, i8*, i32)*, i64 (%struct.bio_st*, i32, i64, i8*)*, i32 (%struct.bio_st*)*, i32 (%struct.bio_st*)*, i64 (%struct.bio_st*, i32, i64 (%struct.bio_st*, i32, i8*, i32, i64, i64)*)* }
%"struct.bssl::SSL_HANDSHAKE" = type <{ %struct.ssl_st*, %"struct.bssl::SSL_CONFIG"*, i32, i32, i32, i16, i16, i64, [48 x i8], [48 x i8], [48 x i8], [48 x i8], [48 x i8], [48 x i8], [48 x i8], %union.anon.50, i16, [2 x i8], %"class.std::__1::unique_ptr.51", [2 x %"class.std::__1::unique_ptr.56"], %"class.bssl::SSLTranscript", %"class.bssl::Array", %"class.bssl::Array", %"class.bssl::Array", %"class.bssl::Array", %"class.bssl::Array", %"class.bssl::Array.36", %"class.bssl::Array.36", %"class.bssl::Array.36", %"class.bssl::Array", i16, [6 x i8], %"class.bssl::internal::StackAllocated.67", %"class.bssl::Array", %"class.std::__1::unique_ptr.31", %"class.std::__1::unique_ptr.1", %struct.stack_st_X509_NAME*, %"class.bssl::Array", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.78", %struct.ssl_cipher_st*, %"class.bssl::Array", %"class.std::__1::unique_ptr.93", i32, i16, i16, i16, i8, [32 x i8], i8, [6 x i8], [6 x i8] }>
%union.anon.50 = type { i32 }
%"class.std::__1::unique_ptr.51" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %struct.err_save_state_st* }
%struct.err_save_state_st = type opaque
%"class.std::__1::unique_ptr.56" = type { %"class.std::__1::__compressed_pair.57" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { %"class.bssl::SSLKeyShare"* }
%"class.bssl::SSLKeyShare" = type { i32 (...)** }
%"class.bssl::SSLTranscript" = type { %"class.std::__1::unique_ptr.61", %"class.bssl::internal::StackAllocated.66" }
%"class.std::__1::unique_ptr.61" = type { %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %struct.buf_mem_st* }
%"class.bssl::internal::StackAllocated.66" = type { %struct.env_md_ctx_st }
%struct.env_md_ctx_st = type { %struct.env_md_st*, i8*, %struct.evp_pkey_ctx_st*, %struct.evp_md_pctx_ops* }
%struct.env_md_st = type opaque
%struct.evp_pkey_ctx_st = type opaque
%struct.evp_md_pctx_ops = type opaque
%"class.bssl::internal::StackAllocated.67" = type { %struct.evp_hpke_ctx_st }
%struct.evp_hpke_ctx_st = type { %struct.evp_hpke_aead_st*, %struct.evp_hpke_kdf_st*, %struct.evp_aead_ctx_st, [24 x i8], [64 x i8], i64, i32 }
%struct.evp_hpke_aead_st = type opaque
%struct.evp_hpke_kdf_st = type opaque
%"class.std::__1::unique_ptr.78" = type { %"class.std::__1::__compressed_pair.79" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %struct.ssl_ech_server_config_list_st* }
%struct.ssl_ech_server_config_list_st = type <{ %"class.bssl::GrowableArray.81", i32, [4 x i8] }>
%"class.bssl::GrowableArray.81" = type { i64, %"class.bssl::Array.82" }
%"class.bssl::Array.82" = type { %"class.std::__1::unique_ptr.83"*, i64 }
%"class.std::__1::unique_ptr.83" = type opaque
%"class.std::__1::unique_ptr.93" = type { %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %"struct.bssl::SSL_HANDSHAKE_HINTS"* }
%"struct.bssl::SSL_HANDSHAKE_HINTS" = type <{ %"class.bssl::Array", i16, [6 x i8], %"class.bssl::Array", %"class.bssl::Array", i16, [6 x i8], %"class.bssl::Array", %"class.bssl::Array", %"class.bssl::Array", %"class.bssl::Array", i8, [7 x i8] }>
%"struct.bssl::SSL3_STATE" = type <{ [8 x i8], [8 x i8], [32 x i8], [32 x i8], %"class.bssl::SSLBuffer", %"class.bssl::SSLBuffer", %"class.bssl::Span", i32, i32, i32, i32, i8*, i32, i32, %"class.std::__1::unique_ptr.51", i32, i32, i32, i32, i16, i8, i8, i8, i16, i8, %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.61", i32, i32, i32, [4 x i8], %"class.std::__1::unique_ptr.7", %"class.std::__1::unique_ptr.7", %"class.std::__1::unique_ptr.98", [48 x i8], [48 x i8], [48 x i8], i8, i8, i8, [12 x i8], i8, i8, [12 x i8], [2 x i8], i8, %"class.std::__1::unique_ptr.68", %"class.bssl::Array", %"class.bssl::Array", %"class.std::__1::unique_ptr.31", [64 x i8], %"class.bssl::Array", %struct.srtp_protection_profile_st* }>
%"class.bssl::SSLBuffer" = type <{ i8*, i16, i16, i16, [5 x i8], i8, [4 x i8] }>
%"class.std::__1::unique_ptr.7" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.bssl::SSLAEADContext"* }
%"class.std::__1::unique_ptr.98" = type { %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.100" = type { %"struct.bssl::SSL_HANDSHAKE"* }
%struct.srtp_protection_profile_st = type { i8*, i64 }
%"struct.bssl::DTLS1_STATE" = type <{ i8, [256 x i8], [7 x i8], i64, i16, i16, [4 x i8], %"struct.bssl::DTLS1_BITMAP", i16, i16, [8 x i8], [4 x i8], %"class.std::__1::unique_ptr.7", [7 x %"class.std::__1::unique_ptr.103"], [7 x %"struct.bssl::DTLS_OUTGOING_MESSAGE"], i8, i8, [2 x i8], i32, i32, i32, %"struct.bssl::OPENSSL_timeval", i32, [4 x i8] }>
%"struct.bssl::DTLS1_BITMAP" = type { i64, i64 }
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"struct.bssl::hm_fragment"* }
%"struct.bssl::hm_fragment" = type { i8, i16, i32, i8*, i8* }
%"struct.bssl::DTLS_OUTGOING_MESSAGE" = type <{ i8*, i32, i16, i8, i8 }>
%"struct.bssl::OPENSSL_timeval" = type { i64, i32 }
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %struct.ssl_session_st* }
%struct.ssl_session_st = type { i32, i16, i16, i16, i32, [48 x i8], i32, [32 x i8], i8, [32 x i8], %"class.std::__1::unique_ptr.31", %"class.std::__1::unique_ptr.1", %"struct.bssl::SSL_X509_METHOD"*, %struct.x509_st*, %struct.stack_st_X509*, %struct.stack_st_X509*, i64, i32, i32, i64, %struct.ssl_cipher_st*, %struct.crypto_ex_data_st, %struct.ssl_session_st*, %struct.ssl_session_st*, %"class.bssl::Array", %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86", [32 x i8], [64 x i8], i8, i32, i32, i32, %"class.bssl::Array", %"class.bssl::Array", %"class.bssl::Array", i8, %"class.bssl::Array" }
%"class.std::__1::unique_ptr.108" = type { %"class.std::__1::__compressed_pair.109" }
%"class.std::__1::__compressed_pair.109" = type { %"struct.std::__1::__compressed_pair_elem.110" }
%"struct.std::__1::__compressed_pair_elem.110" = type { %struct.ssl_ctx_st* }
%struct.ssl_ctx_st = type <{ %"struct.bssl::SSL_PROTOCOL_METHOD"*, %"struct.bssl::SSL_X509_METHOD"*, %union.crypto_mutex_st, i16, i16, [4 x i8], %struct.ssl_quic_method_st*, %"class.std::__1::unique_ptr.16", %struct.x509_store_st*, %struct.lhash_st_SSL_SESSION*, i64, %struct.ssl_session_st*, %struct.ssl_session_st*, i32, i32, i32, i32, i32 (%struct.ssl_st*, %struct.ssl_session_st*)*, void (%struct.ssl_ctx_st*, %struct.ssl_session_st*)*, %struct.ssl_session_st* (%struct.ssl_st*, i8*, i32, i32*)*, i32, [4 x i8], i32 (%struct.x509_store_ctx_st*, i8*)*, i8*, i32 (%struct.ssl_st*, i8*)*, i32 (i8*, i32, i32, i8*)*, i8*, i32 (%struct.ssl_st*, %struct.x509_st**, %struct.evp_pkey_st**)*, void (%struct.ssl_st*, %struct.evp_pkey_st**)*, %struct.crypto_ex_data_st, void (%struct.ssl_st*, i32, i32)*, %"class.std::__1::unique_ptr.1", %struct.stack_st_X509_NAME*, i32, i32, i32, [4 x i8], %"class.std::__1::unique_ptr.26", void (i32, i32, i32, i8*, i64, %struct.ssl_st*, i8*)*, i8*, i32, [4 x i8], i32 (i32, %struct.x509_store_ctx_st*)*, %struct.X509_VERIFY_PARAM_st*, i32 (%struct.ssl_early_callback_ctx*)*, i32 (%struct.ssl_early_callback_ctx*)*, i8, i8, i16, [4 x i8], i32 (%struct.ssl_st*, i32*, i8*)*, i8*, %"class.std::__1::unique_ptr.71", %"class.std::__1::unique_ptr.71", i32 (%struct.ssl_st*, i8*, i8*, %struct.evp_cipher_ctx_st*, %struct.hmac_ctx_st*, i32)*, %"class.std::__1::unique_ptr.31", i32 (%struct.ssl_st*, i8*, i8*, i32, i8*, i32)*, i32 (%struct.ssl_st*, i8*, i8*, i32)*, i32 (%struct.ssl_st*, i8**, i32*, i8*)*, i8*, i32 (%struct.ssl_st*, i8**, i8*, i8*, i32, i8*)*, i8*, i32 (%struct.ssl_st*, i8**, i8*, i8*, i32, i8*)*, i8*, %"class.bssl::Array", %"class.std::__1::unique_ptr.38", %"class.bssl::GrowableArray.76", %"class.bssl::Array.36", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.78", void (%struct.ssl_st*, i8*)*, void (%struct.ssl_st*, %struct.timeval*)*, %struct.crypto_buffer_pool_st*, %struct.ssl_ticket_aead_method_st*, i32 (%struct.ssl_st*, i8*)*, i8*, %"class.bssl::Array.36", i16, [6 x i8] }>
%struct.lhash_st_SSL_SESSION = type opaque
%struct.evp_pkey_st = type { i32, i32, %union.anon, %struct.evp_pkey_asn1_method_st* }
%union.anon = type { i8* }
%struct.evp_pkey_asn1_method_st = type opaque
%struct.ssl_early_callback_ctx = type { %struct.ssl_st*, i8*, i64, i16, i8*, i64, i8*, i64, i8*, i64, i8*, i64, i8*, i64 }
%"class.std::__1::unique_ptr.71" = type { %"class.std::__1::__compressed_pair.72" }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.73" = type { %"struct.bssl::TicketKey"* }
%"struct.bssl::TicketKey" = type { [16 x i8], [16 x i8], [16 x i8], i64 }
%struct.evp_cipher_ctx_st = type { %struct.evp_cipher_st*, i8*, i8*, i32, i32, i32, [16 x i8], [16 x i8], [32 x i8], i32, i32, i32, [32 x i8] }
%struct.evp_cipher_st = type { i32, i32, i32, i32, i32, i32, i8*, i32 (%struct.evp_cipher_ctx_st*, i8*, i8*, i32)*, i32 (%struct.evp_cipher_ctx_st*, i8*, i8*, i64)*, void (%struct.evp_cipher_ctx_st*)*, i32 (%struct.evp_cipher_ctx_st*, i32, i32, i8*)* }
%struct.hmac_ctx_st = type { %struct.env_md_st*, %struct.env_md_ctx_st, %struct.env_md_ctx_st, %struct.env_md_ctx_st }
%"class.bssl::GrowableArray.76" = type { i64, %"class.bssl::Array.77" }
%"class.bssl::Array.77" = type { %"struct.bssl::CertCompressionAlg"*, i64 }
%"struct.bssl::CertCompressionAlg" = type <{ i32 (%struct.ssl_st*, %struct.cbb_st*, i8*, i64)*, i32 (%struct.ssl_st*, %struct.crypto_buffer_st**, i64, i8*, i64)*, i16, [6 x i8] }>
%struct.timeval = type { i64, i64 }
%struct.crypto_buffer_pool_st = type opaque
%struct.ssl_ticket_aead_method_st = type { i64 (%struct.ssl_st*)*, i32 (%struct.ssl_st*, i8*, i64*, i64, i8*, i64)*, i32 (%struct.ssl_st*, i8*, i64*, i64, i8*, i64)* }
%"class.std::__1::unique_ptr.31" = type { %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { i8* }
%struct.ssl_quic_method_st = type { i32 (%struct.ssl_st*, i32, %struct.ssl_cipher_st*, i8*, i64)*, i32 (%struct.ssl_st*, i32, %struct.ssl_cipher_st*, i8*, i64)*, i32 (%struct.ssl_st*, i32, i8*, i64)*, i32 (%struct.ssl_st*)*, i32 (%struct.ssl_st*, i32, i8)* }
%struct.x509_store_st = type { i32, %struct.stack_st_X509_OBJECT*, %union.crypto_mutex_st, %struct.stack_st_X509*, %struct.stack_st_X509_LOOKUP*, %struct.X509_VERIFY_PARAM_st*, i32 (%struct.x509_store_ctx_st*)*, {}*, i32 (%struct.x509_st**, %struct.x509_store_ctx_st*, %struct.x509_st*)*, i32 (%struct.x509_store_ctx_st*, %struct.x509_st*, %struct.x509_st*)*, i32 (%struct.x509_store_ctx_st*)*, i32 (%struct.x509_store_ctx_st*, %struct.X509_crl_st**, %struct.x509_st*)*, i32 (%struct.x509_store_ctx_st*, %struct.X509_crl_st*)*, i32 (%struct.x509_store_ctx_st*, %struct.X509_crl_st*, %struct.x509_st*)*, %struct.stack_st_X509* (%struct.x509_store_ctx_st*, %struct.X509_name_st*)*, %struct.stack_st_X509_CRL* (%struct.x509_store_ctx_st*, %struct.X509_name_st*)*, i32 (%struct.x509_store_ctx_st*)*, i32 }
%struct.stack_st_X509_OBJECT = type opaque
%struct.stack_st_X509_LOOKUP = type opaque
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %struct.crypto_buffer_st* }
%"class.std::__1::unique_ptr.113" = type { %"class.std::__1::__compressed_pair.114" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115" }
%"struct.std::__1::__compressed_pair_elem.115" = type { %"struct.bssl::DC"* }
%"struct.bssl::DC" = type { %"class.std::__1::unique_ptr.86", i16, %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %struct.evp_pkey_st* }
%struct.ssl_private_key_method_st = type { i32 (%struct.ssl_st*, i8*, i64*, i64, i16, i8*, i64)*, i32 (%struct.ssl_st*, i8*, i64*, i64, i8*, i64)*, i32 (%struct.ssl_st*, i8*, i64*, i64)* }
%struct.ssl_method_st = type { i16, %"struct.bssl::SSL_PROTOCOL_METHOD"*, %"struct.bssl::SSL_X509_METHOD"* }

@_ZN4bssl20ssl_noop_x509_methodE = hidden constant { i1 (%struct.stack_st_CRYPTO_BUFFER*)*, void (%"struct.bssl::CERT"*)*, void (%"struct.bssl::CERT"*)*, void (%"struct.bssl::CERT"*, %"struct.bssl::CERT"*)*, void (%"struct.bssl::CERT"*)*, void (%"struct.bssl::CERT"*)*, i1 (%struct.ssl_session_st*)*, i1 (%struct.ssl_session_st*, %struct.ssl_session_st*)*, void (%struct.ssl_session_st*)*, i1 (%struct.ssl_session_st*, %"struct.bssl::SSL_HANDSHAKE"*, i8*)*, void (%"struct.bssl::SSL_HANDSHAKE"*)*, i1 (%"struct.bssl::SSL_HANDSHAKE"*)*, void (%"struct.bssl::SSL_CONFIG"*)*, void (%"struct.bssl::SSL_CONFIG"*)*, i1 (%"struct.bssl::SSL_HANDSHAKE"*)*, i1 (%struct.ssl_ctx_st*)*, void (%struct.ssl_ctx_st*)*, void (%struct.ssl_ctx_st*)* } { i1 (%struct.stack_st_CRYPTO_BUFFER*)* @_ZN4bsslL35ssl_noop_x509_check_client_CA_namesEP22stack_st_CRYPTO_BUFFER, void (%"struct.bssl::CERT"*)* @_ZN4bsslL19ssl_noop_x509_clearEPNS_4CERTE, void (%"struct.bssl::CERT"*)* @_ZN4bsslL18ssl_noop_x509_freeEPNS_4CERTE, void (%"struct.bssl::CERT"*, %"struct.bssl::CERT"*)* @_ZN4bsslL17ssl_noop_x509_dupEPNS_4CERTEPKS0_, void (%"struct.bssl::CERT"*)* @_ZN4bsslL32ssl_noop_x509_flush_cached_chainEPNS_4CERTE, void (%"struct.bssl::CERT"*)* @_ZN4bsslL31ssl_noop_x509_flush_cached_leafEPNS_4CERTE, i1 (%struct.ssl_session_st*)* @_ZN4bsslL35ssl_noop_x509_session_cache_objectsEP14ssl_session_st, i1 (%struct.ssl_session_st*, %struct.ssl_session_st*)* @_ZN4bsslL25ssl_noop_x509_session_dupEP14ssl_session_stPKS0_, void (%struct.ssl_session_st*)* @_ZN4bsslL27ssl_noop_x509_session_clearEP14ssl_session_st, i1 (%struct.ssl_session_st*, %"struct.bssl::SSL_HANDSHAKE"*, i8*)* @_ZN4bsslL39ssl_noop_x509_session_verify_cert_chainEP14ssl_session_stPNS_13SSL_HANDSHAKEEPh, void (%"struct.bssl::SSL_HANDSHAKE"*)* @_ZN4bsslL38ssl_noop_x509_hs_flush_cached_ca_namesEPNS_13SSL_HANDSHAKEE, i1 (%"struct.bssl::SSL_HANDSHAKE"*)* @_ZN4bsslL21ssl_noop_x509_ssl_newEPNS_13SSL_HANDSHAKEE, void (%"struct.bssl::SSL_CONFIG"*)* @_ZN4bsslL29ssl_noop_x509_ssl_config_freeEPNS_10SSL_CONFIGE, void (%"struct.bssl::SSL_CONFIG"*)* @_ZN4bsslL40ssl_noop_x509_ssl_flush_cached_client_CAEPNS_10SSL_CONFIGE, i1 (%"struct.bssl::SSL_HANDSHAKE"*)* @_ZN4bsslL38ssl_noop_x509_ssl_auto_chain_if_neededEPNS_13SSL_HANDSHAKEE, i1 (%struct.ssl_ctx_st*)* @_ZN4bsslL25ssl_noop_x509_ssl_ctx_newEP10ssl_ctx_st, void (%struct.ssl_ctx_st*)* @_ZN4bsslL26ssl_noop_x509_ssl_ctx_freeEP10ssl_ctx_st, void (%struct.ssl_ctx_st*)* @_ZN4bsslL44ssl_noop_x509_ssl_ctx_flush_cached_client_CAEP10ssl_ctx_st }, align 8
@_ZZ10TLS_methodE7kMethod = internal constant %struct.ssl_method_st { i16 0, %"struct.bssl::SSL_PROTOCOL_METHOD"* @_ZN4bsslL18kTLSProtocolMethodE, %"struct.bssl::SSL_X509_METHOD"* @_ZN4bssl22ssl_crypto_x509_methodE }, align 8
@_ZN4bsslL18kTLSProtocolMethodE = internal constant %"struct.bssl::SSL_PROTOCOL_METHOD" { i8 0, i1 (%struct.ssl_st*)* @_ZN4bssl7tls_newEP6ssl_st, void (%struct.ssl_st*)* @_ZN4bssl8tls_freeEP6ssl_st, i1 (%struct.ssl_st*, %"struct.bssl::SSLMessage"*)* @_ZN4bssl15tls_get_messageEPK6ssl_stPNS_10SSLMessageE, void (%struct.ssl_st*)* @_ZN4bssl16tls_next_messageEP6ssl_st, i1 (%struct.ssl_st*)* @_ZN4bssl34tls_has_unprocessed_handshake_dataEPK6ssl_st, i32 (%struct.ssl_st*, i64*, i8*, i8*, i64)* @_ZN4bssl18tls_open_handshakeEP6ssl_stPmPhNS_4SpanIhEE, i32 (%struct.ssl_st*, i64*, i8*, i8*, i64)* @_ZN4bssl27tls_open_change_cipher_specEP6ssl_stPmPhNS_4SpanIhEE, i32 (%struct.ssl_st*, %"class.bssl::Span"*, i64*, i8*, i8*, i64)* @_ZN4bssl17tls_open_app_dataEP6ssl_stPNS_4SpanIhEEPmPhS3_, i32 (%struct.ssl_st*, i8*, i8*, i32)* @_ZN4bssl18tls_write_app_dataEP6ssl_stPbPKhi, i32 (%struct.ssl_st*)* @_ZN4bssl18tls_dispatch_alertEP6ssl_st, i1 (%struct.ssl_st*, %struct.cbb_st*, %struct.cbb_st*, i8)* @_ZN4bssl16tls_init_messageEP6ssl_stP6cbb_stS3_h, i1 (%struct.ssl_st*, %struct.cbb_st*, %"class.bssl::Array"*)* @_ZN4bssl18tls_finish_messageEP6ssl_stP6cbb_stPNS_5ArrayIhEE, i1 (%struct.ssl_st*, %"class.bssl::Array"*)* @_ZN4bssl15tls_add_messageEP6ssl_stNS_5ArrayIhEE, i1 (%struct.ssl_st*)* @_ZN4bssl26tls_add_change_cipher_specEP6ssl_st, i32 (%struct.ssl_st*)* @_ZN4bssl16tls_flush_flightEP6ssl_st, void (%struct.ssl_st*)* @_ZN4bsslL25tls_on_handshake_completeEP6ssl_st, i1 (%struct.ssl_st*, i32, %"class.bssl::SSLAEADContext"*, i8*, i64)* @_ZN4bsslL18tls_set_read_stateEP6ssl_st22ssl_encryption_level_tNSt3__110unique_ptrINS_14SSLAEADContextENS_8internal7DeleterIS5_EEEENS_4SpanIKhEE, i1 (%struct.ssl_st*, i32, %"class.bssl::SSLAEADContext"*, i8*, i64)* @_ZN4bsslL19tls_set_write_stateEP6ssl_st22ssl_encryption_level_tNSt3__110unique_ptrINS_14SSLAEADContextENS_8internal7DeleterIS5_EEEENS_4SpanIKhEE }, align 8
@_ZN4bssl22ssl_crypto_x509_methodE = external global %"struct.bssl::SSL_X509_METHOD", align 8
@_ZZ23TLS_with_buffers_methodE7kMethod = internal constant %struct.ssl_method_st { i16 0, %"struct.bssl::SSL_PROTOCOL_METHOD"* @_ZN4bsslL18kTLSProtocolMethodE, %"struct.bssl::SSL_X509_METHOD"* bitcast ({ i1 (%struct.stack_st_CRYPTO_BUFFER*)*, void (%"struct.bssl::CERT"*)*, void (%"struct.bssl::CERT"*)*, void (%"struct.bssl::CERT"*, %"struct.bssl::CERT"*)*, void (%"struct.bssl::CERT"*)*, void (%"struct.bssl::CERT"*)*, i1 (%struct.ssl_session_st*)*, i1 (%struct.ssl_session_st*, %struct.ssl_session_st*)*, void (%struct.ssl_session_st*)*, i1 (%struct.ssl_session_st*, %"struct.bssl::SSL_HANDSHAKE"*, i8*)*, void (%"struct.bssl::SSL_HANDSHAKE"*)*, i1 (%"struct.bssl::SSL_HANDSHAKE"*)*, void (%"struct.bssl::SSL_CONFIG"*)*, void (%"struct.bssl::SSL_CONFIG"*)*, i1 (%"struct.bssl::SSL_HANDSHAKE"*)*, i1 (%struct.ssl_ctx_st*)*, void (%struct.ssl_ctx_st*)*, void (%struct.ssl_ctx_st*)* }* @_ZN4bssl20ssl_noop_x509_methodE to %"struct.bssl::SSL_X509_METHOD"*) }, align 8
@_ZZ14TLSv1_2_methodE7kMethod = internal constant %struct.ssl_method_st { i16 771, %"struct.bssl::SSL_PROTOCOL_METHOD"* @_ZN4bsslL18kTLSProtocolMethodE, %"struct.bssl::SSL_X509_METHOD"* @_ZN4bssl22ssl_crypto_x509_methodE }, align 8
@_ZZ14TLSv1_1_methodE7kMethod = internal constant %struct.ssl_method_st { i16 770, %"struct.bssl::SSL_PROTOCOL_METHOD"* @_ZN4bsslL18kTLSProtocolMethodE, %"struct.bssl::SSL_X509_METHOD"* @_ZN4bssl22ssl_crypto_x509_methodE }, align 8
@_ZZ12TLSv1_methodE7kMethod = internal constant %struct.ssl_method_st { i16 769, %"struct.bssl::SSL_PROTOCOL_METHOD"* @_ZN4bsslL18kTLSProtocolMethodE, %"struct.bssl::SSL_X509_METHOD"* @_ZN4bssl22ssl_crypto_x509_methodE }, align 8
@.str = private unnamed_addr constant [50 x i8] c"../../third_party/boringssl/src/ssl/tls_method.cc\00", align 1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal zeroext i1 @_ZN4bsslL35ssl_noop_x509_check_client_CA_namesEP22stack_st_CRYPTO_BUFFER(%struct.stack_st_CRYPTO_BUFFER* nocapture readnone) #0 {
  ret i1 true
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @_ZN4bsslL19ssl_noop_x509_clearEPNS_4CERTE(%"struct.bssl::CERT"* nocapture) #0 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @_ZN4bsslL18ssl_noop_x509_freeEPNS_4CERTE(%"struct.bssl::CERT"* nocapture) #0 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @_ZN4bsslL17ssl_noop_x509_dupEPNS_4CERTEPKS0_(%"struct.bssl::CERT"* nocapture, %"struct.bssl::CERT"* nocapture) #0 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @_ZN4bsslL32ssl_noop_x509_flush_cached_chainEPNS_4CERTE(%"struct.bssl::CERT"* nocapture) #0 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @_ZN4bsslL31ssl_noop_x509_flush_cached_leafEPNS_4CERTE(%"struct.bssl::CERT"* nocapture) #0 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal zeroext i1 @_ZN4bsslL35ssl_noop_x509_session_cache_objectsEP14ssl_session_st(%struct.ssl_session_st* nocapture readnone) #0 {
  ret i1 true
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal zeroext i1 @_ZN4bsslL25ssl_noop_x509_session_dupEP14ssl_session_stPKS0_(%struct.ssl_session_st* nocapture readnone, %struct.ssl_session_st* nocapture readnone) #0 {
  ret i1 true
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @_ZN4bsslL27ssl_noop_x509_session_clearEP14ssl_session_st(%struct.ssl_session_st* nocapture) #0 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal zeroext i1 @_ZN4bsslL39ssl_noop_x509_session_verify_cert_chainEP14ssl_session_stPNS_13SSL_HANDSHAKEEPh(%struct.ssl_session_st* nocapture readnone, %"struct.bssl::SSL_HANDSHAKE"* nocapture readnone, i8* nocapture readnone) #0 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @_ZN4bsslL38ssl_noop_x509_hs_flush_cached_ca_namesEPNS_13SSL_HANDSHAKEE(%"struct.bssl::SSL_HANDSHAKE"* nocapture) #0 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal zeroext i1 @_ZN4bsslL21ssl_noop_x509_ssl_newEPNS_13SSL_HANDSHAKEE(%"struct.bssl::SSL_HANDSHAKE"* nocapture readnone) #0 {
  ret i1 true
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @_ZN4bsslL29ssl_noop_x509_ssl_config_freeEPNS_10SSL_CONFIGE(%"struct.bssl::SSL_CONFIG"* nocapture) #0 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @_ZN4bsslL40ssl_noop_x509_ssl_flush_cached_client_CAEPNS_10SSL_CONFIGE(%"struct.bssl::SSL_CONFIG"* nocapture) #0 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal zeroext i1 @_ZN4bsslL38ssl_noop_x509_ssl_auto_chain_if_neededEPNS_13SSL_HANDSHAKEE(%"struct.bssl::SSL_HANDSHAKE"* nocapture readnone) #0 {
  ret i1 true
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal zeroext i1 @_ZN4bsslL25ssl_noop_x509_ssl_ctx_newEP10ssl_ctx_st(%struct.ssl_ctx_st* nocapture readnone) #0 {
  ret i1 true
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @_ZN4bsslL26ssl_noop_x509_ssl_ctx_freeEP10ssl_ctx_st(%struct.ssl_ctx_st* nocapture) #0 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @_ZN4bsslL44ssl_noop_x509_ssl_ctx_flush_cached_client_CAEP10ssl_ctx_st(%struct.ssl_ctx_st* nocapture) #0 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden nonnull %struct.ssl_method_st* @TLS_method() local_unnamed_addr #0 {
  ret %struct.ssl_method_st* @_ZZ10TLS_methodE7kMethod
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden nonnull %struct.ssl_method_st* @SSLv23_method() local_unnamed_addr #0 {
  ret %struct.ssl_method_st* @_ZZ10TLS_methodE7kMethod
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden nonnull %struct.ssl_method_st* @TLS_with_buffers_method() local_unnamed_addr #0 {
  ret %struct.ssl_method_st* @_ZZ23TLS_with_buffers_methodE7kMethod
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden nonnull %struct.ssl_method_st* @TLSv1_2_method() local_unnamed_addr #0 {
  ret %struct.ssl_method_st* @_ZZ14TLSv1_2_methodE7kMethod
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden nonnull %struct.ssl_method_st* @TLSv1_1_method() local_unnamed_addr #0 {
  ret %struct.ssl_method_st* @_ZZ14TLSv1_1_methodE7kMethod
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden nonnull %struct.ssl_method_st* @TLSv1_method() local_unnamed_addr #0 {
  ret %struct.ssl_method_st* @_ZZ12TLSv1_methodE7kMethod
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden nonnull %struct.ssl_method_st* @TLSv1_2_server_method() local_unnamed_addr #0 {
  ret %struct.ssl_method_st* @_ZZ14TLSv1_2_methodE7kMethod
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden nonnull %struct.ssl_method_st* @TLSv1_1_server_method() local_unnamed_addr #0 {
  ret %struct.ssl_method_st* @_ZZ14TLSv1_1_methodE7kMethod
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden nonnull %struct.ssl_method_st* @TLSv1_server_method() local_unnamed_addr #0 {
  ret %struct.ssl_method_st* @_ZZ12TLSv1_methodE7kMethod
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden nonnull %struct.ssl_method_st* @TLSv1_2_client_method() local_unnamed_addr #0 {
  ret %struct.ssl_method_st* @_ZZ14TLSv1_2_methodE7kMethod
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden nonnull %struct.ssl_method_st* @TLSv1_1_client_method() local_unnamed_addr #0 {
  ret %struct.ssl_method_st* @_ZZ14TLSv1_1_methodE7kMethod
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden nonnull %struct.ssl_method_st* @TLSv1_client_method() local_unnamed_addr #0 {
  ret %struct.ssl_method_st* @_ZZ12TLSv1_methodE7kMethod
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden nonnull %struct.ssl_method_st* @SSLv23_server_method() local_unnamed_addr #0 {
  ret %struct.ssl_method_st* @_ZZ10TLS_methodE7kMethod
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden nonnull %struct.ssl_method_st* @SSLv23_client_method() local_unnamed_addr #0 {
  ret %struct.ssl_method_st* @_ZZ10TLS_methodE7kMethod
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden nonnull %struct.ssl_method_st* @TLS_server_method() local_unnamed_addr #0 {
  ret %struct.ssl_method_st* @_ZZ10TLS_methodE7kMethod
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden nonnull %struct.ssl_method_st* @TLS_client_method() local_unnamed_addr #0 {
  ret %struct.ssl_method_st* @_ZZ10TLS_methodE7kMethod
}

declare zeroext i1 @_ZN4bssl7tls_newEP6ssl_st(%struct.ssl_st*) #1

declare void @_ZN4bssl8tls_freeEP6ssl_st(%struct.ssl_st*) #1

declare zeroext i1 @_ZN4bssl15tls_get_messageEPK6ssl_stPNS_10SSLMessageE(%struct.ssl_st*, %"struct.bssl::SSLMessage"*) #1

declare void @_ZN4bssl16tls_next_messageEP6ssl_st(%struct.ssl_st*) #1

declare zeroext i1 @_ZN4bssl34tls_has_unprocessed_handshake_dataEPK6ssl_st(%struct.ssl_st*) #1

declare i32 @_ZN4bssl18tls_open_handshakeEP6ssl_stPmPhNS_4SpanIhEE(%struct.ssl_st*, i64*, i8*, i8*, i64) #1

declare i32 @_ZN4bssl27tls_open_change_cipher_specEP6ssl_stPmPhNS_4SpanIhEE(%struct.ssl_st*, i64*, i8*, i8*, i64) #1

declare i32 @_ZN4bssl17tls_open_app_dataEP6ssl_stPNS_4SpanIhEEPmPhS3_(%struct.ssl_st*, %"class.bssl::Span"*, i64*, i8*, i8*, i64) #1

declare i32 @_ZN4bssl18tls_write_app_dataEP6ssl_stPbPKhi(%struct.ssl_st*, i8*, i8*, i32) #1

declare i32 @_ZN4bssl18tls_dispatch_alertEP6ssl_st(%struct.ssl_st*) #1

declare zeroext i1 @_ZN4bssl16tls_init_messageEP6ssl_stP6cbb_stS3_h(%struct.ssl_st*, %struct.cbb_st*, %struct.cbb_st*, i8 zeroext) #1

declare zeroext i1 @_ZN4bssl18tls_finish_messageEP6ssl_stP6cbb_stPNS_5ArrayIhEE(%struct.ssl_st*, %struct.cbb_st*, %"class.bssl::Array"*) #1

declare zeroext i1 @_ZN4bssl15tls_add_messageEP6ssl_stNS_5ArrayIhEE(%struct.ssl_st*, %"class.bssl::Array"*) #1

declare zeroext i1 @_ZN4bssl26tls_add_change_cipher_specEP6ssl_st(%struct.ssl_st*) #1

declare i32 @_ZN4bssl16tls_flush_flightEP6ssl_st(%struct.ssl_st*) #1

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4bsslL25tls_on_handshake_completeEP6ssl_st(%struct.ssl_st* nocapture readonly) #2 {
  %2 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 8
  %3 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %2, align 8
  %4 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %3, i64 0, i32 25, i32 0, i32 0, i32 0
  %5 = load %struct.buf_mem_st*, %struct.buf_mem_st** %4, align 8
  %6 = icmp eq %struct.buf_mem_st* %5, null
  br i1 %6, label %12, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %struct.buf_mem_st, %struct.buf_mem_st* %5, i64 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %11, label %12

11:                                               ; preds = %7
  store %struct.buf_mem_st* null, %struct.buf_mem_st** %4, align 8
  tail call void @BUF_MEM_free(%struct.buf_mem_st* nonnull %5) #4
  br label %12

12:                                               ; preds = %1, %11, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN4bsslL18tls_set_read_stateEP6ssl_st22ssl_encryption_level_tNSt3__110unique_ptrINS_14SSLAEADContextENS_8internal7DeleterIS5_EEEENS_4SpanIKhEE(%struct.ssl_st*, i32, %"class.bssl::SSLAEADContext"*, i8*, i64) #2 {
  %6 = ptrtoint %"class.bssl::SSLAEADContext"* %2 to i64
  %7 = tail call zeroext i1 @_ZN4bssl34tls_has_unprocessed_handshake_dataEPK6ssl_st(%struct.ssl_st* %0) #4
  br i1 %7, label %8, label %9

8:                                                ; preds = %5
  tail call void @ERR_put_error(i32 16, i32 0, i32 255, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str, i64 0, i64 0), i32 90) #4
  tail call void @_ZN4bssl14ssl_send_alertEP6ssl_stii(%struct.ssl_st* %0, i32 2, i32 10) #4
  br label %48

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 24
  %11 = load %struct.ssl_quic_method_st*, %struct.ssl_quic_method_st** %10, align 8
  %12 = icmp eq %struct.ssl_quic_method_st* %11, null
  br i1 %12, label %33, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 8
  %15 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %14, align 8
  %16 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %15, i64 0, i32 34, i32 0, i32 0, i32 0
  %17 = load %"struct.bssl::SSL_HANDSHAKE"*, %"struct.bssl::SSL_HANDSHAKE"** %16, align 8
  %18 = icmp eq %"struct.bssl::SSL_HANDSHAKE"* %17, null
  br i1 %18, label %24, label %19

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %17, i64 0, i32 46
  %21 = load i32, i32* %20, align 8
  %22 = and i32 %21, 8388608
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %31

24:                                               ; preds = %19, %13
  %25 = getelementptr inbounds %struct.ssl_quic_method_st, %struct.ssl_quic_method_st* %11, i64 0, i32 0
  %26 = load i32 (%struct.ssl_st*, i32, %struct.ssl_cipher_st*, i8*, i64)*, i32 (%struct.ssl_st*, i32, %struct.ssl_cipher_st*, i8*, i64)** %25, align 8
  %27 = getelementptr inbounds %"class.bssl::SSLAEADContext", %"class.bssl::SSLAEADContext"* %2, i64 0, i32 0
  %28 = load %struct.ssl_cipher_st*, %struct.ssl_cipher_st** %27, align 8
  %29 = tail call i32 %26(%struct.ssl_st* %0, i32 %1, %struct.ssl_cipher_st* %28, i8* %3, i64 %4) #4
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %48, label %31

31:                                               ; preds = %24, %19
  %32 = icmp eq i32 %1, 1
  br i1 %32, label %48, label %33

33:                                               ; preds = %9, %31
  %34 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 8
  %35 = bitcast %"struct.bssl::SSL3_STATE"** %34 to i64**
  %36 = load i64*, i64** %35, align 8
  store i64 0, i64* %36, align 1
  %37 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %34, align 8
  %38 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %37, i64 0, i32 32
  %39 = getelementptr inbounds %"class.std::__1::unique_ptr.7", %"class.std::__1::unique_ptr.7"* %38, i64 0, i32 0, i32 0, i32 0
  %40 = load %"class.bssl::SSLAEADContext"*, %"class.bssl::SSLAEADContext"** %39, align 8
  %41 = bitcast %"class.std::__1::unique_ptr.7"* %38 to i64*
  store i64 %6, i64* %41, align 8
  %42 = icmp eq %"class.bssl::SSLAEADContext"* %40, null
  br i1 %42, label %45, label %43

43:                                               ; preds = %33
  tail call void @_ZN4bssl14SSLAEADContextD1Ev(%"class.bssl::SSLAEADContext"* nonnull %40) #4
  %44 = bitcast %"class.bssl::SSLAEADContext"* %40 to i8*
  tail call void @OPENSSL_free(i8* nonnull %44) #4
  br label %45

45:                                               ; preds = %43, %33
  %46 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %34, align 8
  %47 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %46, i64 0, i32 17
  store i32 %1, i32* %47, align 8
  br label %53

48:                                               ; preds = %31, %24, %8
  %49 = phi i1 [ false, %8 ], [ false, %24 ], [ true, %31 ]
  %50 = icmp eq %"class.bssl::SSLAEADContext"* %2, null
  br i1 %50, label %53, label %51

51:                                               ; preds = %48
  tail call void @_ZN4bssl14SSLAEADContextD1Ev(%"class.bssl::SSLAEADContext"* nonnull %2) #4
  %52 = bitcast %"class.bssl::SSLAEADContext"* %2 to i8*
  tail call void @OPENSSL_free(i8* nonnull %52) #4
  br label %53

53:                                               ; preds = %45, %48, %51
  %54 = phi i1 [ true, %45 ], [ %49, %48 ], [ %49, %51 ]
  ret i1 %54
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN4bsslL19tls_set_write_stateEP6ssl_st22ssl_encryption_level_tNSt3__110unique_ptrINS_14SSLAEADContextENS_8internal7DeleterIS5_EEEENS_4SpanIKhEE(%struct.ssl_st*, i32, %"class.bssl::SSLAEADContext"*, i8*, i64) #2 {
  %6 = ptrtoint %"class.bssl::SSLAEADContext"* %2 to i64
  %7 = tail call zeroext i1 @_ZN4bssl25tls_flush_pending_hs_dataEP6ssl_st(%struct.ssl_st* %0) #4
  br i1 %7, label %8, label %48

8:                                                ; preds = %5
  %9 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 24
  %10 = load %struct.ssl_quic_method_st*, %struct.ssl_quic_method_st** %9, align 8
  %11 = icmp eq %struct.ssl_quic_method_st* %10, null
  br i1 %11, label %32, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 8
  %14 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %13, align 8
  %15 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %14, i64 0, i32 34, i32 0, i32 0, i32 0
  %16 = load %"struct.bssl::SSL_HANDSHAKE"*, %"struct.bssl::SSL_HANDSHAKE"** %15, align 8
  %17 = icmp eq %"struct.bssl::SSL_HANDSHAKE"* %16, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %16, i64 0, i32 46
  %20 = load i32, i32* %19, align 8
  %21 = and i32 %20, 8388608
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %30

23:                                               ; preds = %18, %12
  %24 = getelementptr inbounds %struct.ssl_quic_method_st, %struct.ssl_quic_method_st* %10, i64 0, i32 1
  %25 = load i32 (%struct.ssl_st*, i32, %struct.ssl_cipher_st*, i8*, i64)*, i32 (%struct.ssl_st*, i32, %struct.ssl_cipher_st*, i8*, i64)** %24, align 8
  %26 = getelementptr inbounds %"class.bssl::SSLAEADContext", %"class.bssl::SSLAEADContext"* %2, i64 0, i32 0
  %27 = load %struct.ssl_cipher_st*, %struct.ssl_cipher_st** %26, align 8
  %28 = tail call i32 %25(%struct.ssl_st* %0, i32 %1, %struct.ssl_cipher_st* %27, i8* %3, i64 %4) #4
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %48, label %30

30:                                               ; preds = %23, %18
  %31 = icmp eq i32 %1, 1
  br i1 %31, label %48, label %32

32:                                               ; preds = %8, %30
  %33 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 8
  %34 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %33, align 8
  %35 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %34, i64 0, i32 1, i64 0
  %36 = bitcast i8* %35 to i64*
  store i64 0, i64* %36, align 1
  %37 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %33, align 8
  %38 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %37, i64 0, i32 33
  %39 = getelementptr inbounds %"class.std::__1::unique_ptr.7", %"class.std::__1::unique_ptr.7"* %38, i64 0, i32 0, i32 0, i32 0
  %40 = load %"class.bssl::SSLAEADContext"*, %"class.bssl::SSLAEADContext"** %39, align 8
  %41 = bitcast %"class.std::__1::unique_ptr.7"* %38 to i64*
  store i64 %6, i64* %41, align 8
  %42 = icmp eq %"class.bssl::SSLAEADContext"* %40, null
  br i1 %42, label %45, label %43

43:                                               ; preds = %32
  tail call void @_ZN4bssl14SSLAEADContextD1Ev(%"class.bssl::SSLAEADContext"* nonnull %40) #4
  %44 = bitcast %"class.bssl::SSLAEADContext"* %40 to i8*
  tail call void @OPENSSL_free(i8* nonnull %44) #4
  br label %45

45:                                               ; preds = %43, %32
  %46 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %33, align 8
  %47 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %46, i64 0, i32 18
  store i32 %1, i32* %47, align 4
  br label %53

48:                                               ; preds = %30, %23, %5
  %49 = phi i1 [ false, %5 ], [ false, %23 ], [ true, %30 ]
  %50 = icmp eq %"class.bssl::SSLAEADContext"* %2, null
  br i1 %50, label %53, label %51

51:                                               ; preds = %48
  tail call void @_ZN4bssl14SSLAEADContextD1Ev(%"class.bssl::SSLAEADContext"* nonnull %2) #4
  %52 = bitcast %"class.bssl::SSLAEADContext"* %2 to i8*
  tail call void @OPENSSL_free(i8* nonnull %52) #4
  br label %53

53:                                               ; preds = %45, %48, %51
  %54 = phi i1 [ true, %45 ], [ %49, %48 ], [ %49, %51 ]
  ret i1 %54
}

declare void @BUF_MEM_free(%struct.buf_mem_st*) local_unnamed_addr #1

declare void @ERR_put_error(i32, i32, i32, i8*, i32) local_unnamed_addr #1

declare void @_ZN4bssl14ssl_send_alertEP6ssl_stii(%struct.ssl_st*, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4bssl14SSLAEADContextD1Ev(%"class.bssl::SSLAEADContext"*) unnamed_addr #3

declare void @OPENSSL_free(i8*) local_unnamed_addr #1

declare zeroext i1 @_ZN4bssl25tls_flush_pending_hs_dataEP6ssl_st(%struct.ssl_st*) local_unnamed_addr #1

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
