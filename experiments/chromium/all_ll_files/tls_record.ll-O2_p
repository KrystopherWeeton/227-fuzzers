; ModuleID = '../../third_party/boringssl/src/ssl/tls_record.cc'
source_filename = "../../third_party/boringssl/src/ssl/tls_record.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.ssl_st = type <{ %"struct.bssl::SSL_PROTOCOL_METHOD"*, %"class.std::__1::unique_ptr.2", i16, i16, [4 x i8], %"class.std::__1::unique_ptr.91", %"class.std::__1::unique_ptr.91", i32 (%"struct.bssl::SSL_HANDSHAKE"*)*, %"struct.bssl::SSL3_STATE"*, %"struct.bssl::DTLS1_STATE"*, void (i32, i32, i32, i8*, i64, %struct.ssl_st*, i8*)*, i8*, i32, [4 x i8], %"class.std::__1::unique_ptr.58", void (%struct.ssl_st*, i32, i32)*, %"class.std::__1::unique_ptr.106", %"class.std::__1::unique_ptr.106", %struct.crypto_ex_data_st, i32, i32, i32, [4 x i8], %"class.std::__1::unique_ptr.29", %struct.ssl_quic_method_st*, i32, i8, [3 x i8] }>
%"struct.bssl::SSL_PROTOCOL_METHOD" = type { i8, i1 (%struct.ssl_st*)*, void (%struct.ssl_st*)*, i1 (%struct.ssl_st*, %"struct.bssl::SSLMessage"*)*, void (%struct.ssl_st*)*, i1 (%struct.ssl_st*)*, i32 (%struct.ssl_st*, i64*, i8*, i8*, i64)*, i32 (%struct.ssl_st*, i64*, i8*, i8*, i64)*, i32 (%struct.ssl_st*, %"class.bssl::Span"*, i64*, i8*, i8*, i64)*, i32 (%struct.ssl_st*, i8*, i8*, i32)*, i32 (%struct.ssl_st*)*, i1 (%struct.ssl_st*, %struct.cbb_st*, %struct.cbb_st*, i8)*, i1 (%struct.ssl_st*, %struct.cbb_st*, %"class.bssl::Array"*)*, i1 (%struct.ssl_st*, %"class.bssl::Array"*)*, i1 (%struct.ssl_st*)*, i32 (%struct.ssl_st*)*, void (%struct.ssl_st*)*, i1 (%struct.ssl_st*, i32, %"class.bssl::SSLAEADContext"*, i8*, i64)*, i1 (%struct.ssl_st*, i32, %"class.bssl::SSLAEADContext"*, i8*, i64)* }
%"struct.bssl::SSLMessage" = type { i8, i8, %struct.cbs_st, %struct.cbs_st }
%struct.cbs_st = type { i8*, i64 }
%"class.bssl::Span" = type { i8*, i64 }
%struct.cbb_st = type { %struct.cbb_buffer_st*, %struct.cbb_st*, i64, i8, i8, i8 }
%struct.cbb_buffer_st = type { i8*, i64, i64, i8, i8 }
%"class.bssl::Array" = type { i8*, i64 }
%"class.bssl::SSLAEADContext" = type <{ %struct.ssl_cipher_st*, %"class.bssl::internal::StackAllocated", [12 x i8], i8, i8, i16, i8, i8, [6 x i8] }>
%struct.ssl_cipher_st = type { i8*, i8*, i32, i32, i32, i32, i32, i32 }
%"class.bssl::internal::StackAllocated" = type { %struct.evp_aead_ctx_st }
%struct.evp_aead_ctx_st = type { %struct.evp_aead_st*, %union.evp_aead_ctx_st_state, i8 }
%struct.evp_aead_st = type opaque
%union.evp_aead_ctx_st_state = type { i64, [576 x i8] }
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"struct.bssl::SSL_CONFIG"* }
%"struct.bssl::SSL_CONFIG" = type <{ %struct.ssl_st*, i16, i16, [4 x i8], %struct.X509_VERIFY_PARAM_st*, %"class.std::__1::unique_ptr.5", %"class.std::__1::unique_ptr.15", i32 (i32, %struct.x509_store_ctx_st*)*, i32 (%struct.ssl_st*, i8*)*, %"class.std::__1::unique_ptr.29", i32 (%struct.ssl_st*, i8*, i8*, i32, i8*, i32)*, i32 (%struct.ssl_st*, i8*, i8*, i32)*, %"class.std::__1::unique_ptr.23", %struct.stack_st_X509_NAME*, %"class.bssl::Array.56", %"class.std::__1::unique_ptr.18", %"class.bssl::Array", %"class.bssl::GrowableArray.82", %"class.bssl::Array", %"class.bssl::Array", %"class.bssl::Array.56", %"class.std::__1::unique_ptr.84", i8, i16, [5 x i8] }>
%struct.X509_VERIFY_PARAM_st = type { i8*, i64, i64, i64, i32, i32, i32, %struct.stack_st_ASN1_OBJECT*, %struct.X509_VERIFY_PARAM_ID_st* }
%struct.stack_st_ASN1_OBJECT = type opaque
%struct.X509_VERIFY_PARAM_ID_st = type opaque
%"class.std::__1::unique_ptr.5" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"struct.bssl::SSLCipherPreferenceList"* }
%"struct.bssl::SSLCipherPreferenceList" = type { %"class.std::__1::unique_ptr.8", i8* }
%"class.std::__1::unique_ptr.8" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %struct.stack_st_SSL_CIPHER* }
%struct.stack_st_SSL_CIPHER = type opaque
%"class.std::__1::unique_ptr.15" = type { %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"struct.bssl::CERT"* }
%"struct.bssl::CERT" = type { %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.23", %struct.stack_st_X509*, %struct.x509_st*, %struct.x509_st*, %struct.ssl_private_key_method_st*, %"struct.bssl::SSL_X509_METHOD"*, %"class.bssl::Array.56", i32 (%struct.ssl_st*, i8*)*, i8*, %struct.x509_store_st*, %"class.std::__1::unique_ptr.34", %"class.std::__1::unique_ptr.34", i8, [32 x i8], %"class.std::__1::unique_ptr.75", %"class.std::__1::unique_ptr.18", %struct.ssl_private_key_method_st* }
%struct.stack_st_X509 = type opaque
%struct.x509_st = type { %struct.x509_cinf_st*, %struct.X509_algor_st*, %struct.asn1_string_st*, i32, %struct.crypto_ex_data_st, i64, i64, i64, i64, i64, i64, %struct.asn1_string_st*, %struct.AUTHORITY_KEYID_st*, %struct.X509_POLICY_CACHE_st*, %struct.stack_st_DIST_POINT*, %struct.stack_st_GENERAL_NAME*, %struct.NAME_CONSTRAINTS_st*, [20 x i8], %struct.x509_cert_aux_st*, %struct.crypto_buffer_st*, %union.crypto_mutex_st }
%struct.x509_cinf_st = type { %struct.asn1_string_st*, %struct.asn1_string_st*, %struct.X509_algor_st*, %struct.X509_name_st*, %struct.X509_val_st*, %struct.X509_name_st*, %struct.X509_pubkey_st*, %struct.asn1_string_st*, %struct.asn1_string_st*, %struct.stack_st_X509_EXTENSION*, %struct.ASN1_ENCODING_st }
%struct.X509_val_st = type opaque
%struct.X509_name_st = type { %struct.stack_st_X509_NAME_ENTRY*, i32, %struct.buf_mem_st*, i8*, i32 }
%struct.stack_st_X509_NAME_ENTRY = type opaque
%struct.buf_mem_st = type { i64, i8*, i64 }
%struct.X509_pubkey_st = type opaque
%struct.stack_st_X509_EXTENSION = type opaque
%struct.ASN1_ENCODING_st = type { i8*, i64, i32, i8 }
%struct.X509_algor_st = type { %struct.asn1_object_st*, %struct.asn1_type_st* }
%struct.asn1_object_st = type { i8*, i8*, i32, i32, i8*, i32 }
%struct.asn1_type_st = type { i32, %union.anon.28 }
%union.anon.28 = type { i8* }
%struct.asn1_string_st = type { i32, i32, i8*, i64 }
%struct.AUTHORITY_KEYID_st = type opaque
%struct.X509_POLICY_CACHE_st = type opaque
%struct.stack_st_DIST_POINT = type opaque
%struct.stack_st_GENERAL_NAME = type opaque
%struct.NAME_CONSTRAINTS_st = type opaque
%struct.x509_cert_aux_st = type opaque
%struct.crypto_buffer_st = type opaque
%union.crypto_mutex_st = type { double, [48 x i8] }
%"struct.bssl::SSL_X509_METHOD" = type { i1 (%struct.stack_st_CRYPTO_BUFFER*)*, void (%"struct.bssl::CERT"*)*, void (%"struct.bssl::CERT"*)*, void (%"struct.bssl::CERT"*, %"struct.bssl::CERT"*)*, void (%"struct.bssl::CERT"*)*, void (%"struct.bssl::CERT"*)*, i1 (%struct.ssl_session_st*)*, i1 (%struct.ssl_session_st*, %struct.ssl_session_st*)*, void (%struct.ssl_session_st*)*, i1 (%struct.ssl_session_st*, %"struct.bssl::SSL_HANDSHAKE"*, i8*)*, void (%"struct.bssl::SSL_HANDSHAKE"*)*, i1 (%"struct.bssl::SSL_HANDSHAKE"*)*, void (%"struct.bssl::SSL_CONFIG"*)*, void (%"struct.bssl::SSL_CONFIG"*)*, i1 (%"struct.bssl::SSL_HANDSHAKE"*)*, i1 (%struct.ssl_ctx_st*)*, void (%struct.ssl_ctx_st*)*, void (%struct.ssl_ctx_st*)* }
%struct.stack_st_CRYPTO_BUFFER = type opaque
%struct.ssl_session_st = type { i32, i16, i16, i16, i32, [48 x i8], i32, [32 x i8], i8, [32 x i8], %"class.std::__1::unique_ptr.29", %"class.std::__1::unique_ptr.23", %"struct.bssl::SSL_X509_METHOD"*, %struct.x509_st*, %struct.stack_st_X509*, %struct.stack_st_X509*, i64, i32, i32, i64, %struct.ssl_cipher_st*, %struct.crypto_ex_data_st, %struct.ssl_session_st*, %struct.ssl_session_st*, %"class.bssl::Array", %"class.std::__1::unique_ptr.34", %"class.std::__1::unique_ptr.34", [32 x i8], [64 x i8], i8, i32, i32, i32, %"class.bssl::Array", %"class.bssl::Array", %"class.bssl::Array", i8, %"class.bssl::Array" }
%"struct.bssl::SSL_HANDSHAKE" = type <{ %struct.ssl_st*, %"struct.bssl::SSL_CONFIG"*, i32, i32, i32, i16, i16, i64, [48 x i8], [48 x i8], [48 x i8], [48 x i8], [48 x i8], [48 x i8], [48 x i8], %union.anon.39, i16, [2 x i8], %"class.std::__1::unique_ptr.40", [2 x %"class.std::__1::unique_ptr.45"], %"class.bssl::SSLTranscript", %"class.bssl::Array", %"class.bssl::Array", %"class.bssl::Array", %"class.bssl::Array", %"class.bssl::Array", %"class.bssl::Array.56", %"class.bssl::Array.56", %"class.bssl::Array.56", %"class.bssl::Array", i16, [6 x i8], %"class.bssl::internal::StackAllocated.57", %"class.bssl::Array", %"class.std::__1::unique_ptr.29", %"class.std::__1::unique_ptr.23", %struct.stack_st_X509_NAME*, %"class.bssl::Array", %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.58", %"class.std::__1::unique_ptr.58", %"class.std::__1::unique_ptr.63", %struct.ssl_cipher_st*, %"class.bssl::Array", %"class.std::__1::unique_ptr.70", i32, i16, i16, i16, i8, [32 x i8], i8, [6 x i8], [6 x i8] }>
%union.anon.39 = type { i32 }
%"class.std::__1::unique_ptr.40" = type { %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %struct.err_save_state_st* }
%struct.err_save_state_st = type opaque
%"class.std::__1::unique_ptr.45" = type { %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"class.bssl::SSLKeyShare"* }
%"class.bssl::SSLKeyShare" = type { i32 (...)** }
%"class.bssl::SSLTranscript" = type { %"class.std::__1::unique_ptr.50", %"class.bssl::internal::StackAllocated.55" }
%"class.std::__1::unique_ptr.50" = type { %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %struct.buf_mem_st* }
%"class.bssl::internal::StackAllocated.55" = type { %struct.env_md_ctx_st }
%struct.env_md_ctx_st = type { %struct.env_md_st*, i8*, %struct.evp_pkey_ctx_st*, %struct.evp_md_pctx_ops* }
%struct.env_md_st = type opaque
%struct.evp_pkey_ctx_st = type opaque
%struct.evp_md_pctx_ops = type opaque
%"class.bssl::internal::StackAllocated.57" = type { %struct.evp_hpke_ctx_st }
%struct.evp_hpke_ctx_st = type { %struct.evp_hpke_aead_st*, %struct.evp_hpke_kdf_st*, %struct.evp_aead_ctx_st, [24 x i8], [64 x i8], i64, i32 }
%struct.evp_hpke_aead_st = type opaque
%struct.evp_hpke_kdf_st = type opaque
%"class.std::__1::unique_ptr.63" = type { %"class.std::__1::__compressed_pair.64" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.65" = type { %struct.ssl_ech_server_config_list_st* }
%struct.ssl_ech_server_config_list_st = type <{ %"class.bssl::GrowableArray", i32, [4 x i8] }>
%"class.bssl::GrowableArray" = type { i64, %"class.bssl::Array.66" }
%"class.bssl::Array.66" = type { %"class.std::__1::unique_ptr.67"*, i64 }
%"class.std::__1::unique_ptr.67" = type opaque
%"class.std::__1::unique_ptr.70" = type { %"class.std::__1::__compressed_pair.71" }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"struct.std::__1::__compressed_pair_elem.72" = type { %"struct.bssl::SSL_HANDSHAKE_HINTS"* }
%"struct.bssl::SSL_HANDSHAKE_HINTS" = type <{ %"class.bssl::Array", i16, [6 x i8], %"class.bssl::Array", %"class.bssl::Array", i16, [6 x i8], %"class.bssl::Array", %"class.bssl::Array", %"class.bssl::Array", %"class.bssl::Array", i8, [7 x i8] }>
%struct.ssl_ctx_st = type <{ %"struct.bssl::SSL_PROTOCOL_METHOD"*, %"struct.bssl::SSL_X509_METHOD"*, %union.crypto_mutex_st, i16, i16, [4 x i8], %struct.ssl_quic_method_st*, %"class.std::__1::unique_ptr.5", %struct.x509_store_st*, %struct.lhash_st_SSL_SESSION*, i64, %struct.ssl_session_st*, %struct.ssl_session_st*, i32, i32, i32, i32, i32 (%struct.ssl_st*, %struct.ssl_session_st*)*, void (%struct.ssl_ctx_st*, %struct.ssl_session_st*)*, %struct.ssl_session_st* (%struct.ssl_st*, i8*, i32, i32*)*, i32, [4 x i8], i32 (%struct.x509_store_ctx_st*, i8*)*, i8*, i32 (%struct.ssl_st*, i8*)*, i32 (i8*, i32, i32, i8*)*, i8*, i32 (%struct.ssl_st*, %struct.x509_st**, %struct.evp_pkey_st**)*, void (%struct.ssl_st*, %struct.evp_pkey_st**)*, %struct.crypto_ex_data_st, void (%struct.ssl_st*, i32, i32)*, %"class.std::__1::unique_ptr.23", %struct.stack_st_X509_NAME*, i32, i32, i32, [4 x i8], %"class.std::__1::unique_ptr.15", void (i32, i32, i32, i8*, i64, %struct.ssl_st*, i8*)*, i8*, i32, [4 x i8], i32 (i32, %struct.x509_store_ctx_st*)*, %struct.X509_VERIFY_PARAM_st*, i32 (%struct.ssl_early_callback_ctx*)*, i32 (%struct.ssl_early_callback_ctx*)*, i8, i8, i16, [4 x i8], i32 (%struct.ssl_st*, i32*, i8*)*, i8*, %"class.std::__1::unique_ptr.109", %"class.std::__1::unique_ptr.109", i32 (%struct.ssl_st*, i8*, i8*, %struct.evp_cipher_ctx_st*, %struct.hmac_ctx_st*, i32)*, %"class.std::__1::unique_ptr.29", i32 (%struct.ssl_st*, i8*, i8*, i32, i8*, i32)*, i32 (%struct.ssl_st*, i8*, i8*, i32)*, i32 (%struct.ssl_st*, i8**, i32*, i8*)*, i8*, i32 (%struct.ssl_st*, i8**, i8*, i8*, i32, i8*)*, i8*, i32 (%struct.ssl_st*, i8**, i8*, i8*, i32, i8*)*, i8*, %"class.bssl::Array", %"class.std::__1::unique_ptr.84", %"class.bssl::GrowableArray.114", %"class.bssl::Array.56", %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.63", void (%struct.ssl_st*, i8*)*, void (%struct.ssl_st*, %struct.timeval*)*, %struct.crypto_buffer_pool_st*, %struct.ssl_ticket_aead_method_st*, i32 (%struct.ssl_st*, i8*)*, i8*, %"class.bssl::Array.56", i16, [6 x i8] }>
%struct.lhash_st_SSL_SESSION = type opaque
%struct.x509_store_ctx_st = type { %struct.x509_store_st*, %struct.x509_st*, %struct.stack_st_X509*, %struct.stack_st_X509_CRL*, %struct.X509_VERIFY_PARAM_st*, i8*, {}*, i32 (i32, %struct.x509_store_ctx_st*)*, i32 (%struct.x509_st**, %struct.x509_store_ctx_st*, %struct.x509_st*)*, i32 (%struct.x509_store_ctx_st*, %struct.x509_st*, %struct.x509_st*)*, {}*, i32 (%struct.x509_store_ctx_st*, %struct.X509_crl_st**, %struct.x509_st*)*, i32 (%struct.x509_store_ctx_st*, %struct.X509_crl_st*)*, i32 (%struct.x509_store_ctx_st*, %struct.X509_crl_st*, %struct.x509_st*)*, {}*, %struct.stack_st_X509* (%struct.x509_store_ctx_st*, %struct.X509_name_st*)*, %struct.stack_st_X509_CRL* (%struct.x509_store_ctx_st*, %struct.X509_name_st*)*, {}*, i32, i32, %struct.stack_st_X509*, %struct.X509_POLICY_TREE_st*, i32, i32, i32, %struct.x509_st*, %struct.x509_st*, %struct.X509_crl_st*, i32, i32, %struct.x509_store_ctx_st*, %struct.crypto_ex_data_st }
%struct.stack_st_X509_CRL = type opaque
%struct.X509_POLICY_TREE_st = type opaque
%struct.X509_crl_st = type { %struct.X509_crl_info_st*, %struct.X509_algor_st*, %struct.asn1_string_st*, i32, i32, %struct.AUTHORITY_KEYID_st*, %struct.ISSUING_DIST_POINT_st*, i32, i32, %struct.asn1_string_st*, %struct.asn1_string_st*, [20 x i8], %struct.stack_st_GENERAL_NAMES*, %struct.x509_crl_method_st*, i8* }
%struct.X509_crl_info_st = type { %struct.asn1_string_st*, %struct.X509_algor_st*, %struct.X509_name_st*, %struct.asn1_string_st*, %struct.asn1_string_st*, %struct.stack_st_X509_REVOKED*, %struct.stack_st_X509_EXTENSION*, %struct.ASN1_ENCODING_st }
%struct.stack_st_X509_REVOKED = type opaque
%struct.ISSUING_DIST_POINT_st = type opaque
%struct.stack_st_GENERAL_NAMES = type opaque
%struct.x509_crl_method_st = type opaque
%struct.evp_pkey_st = type { i32, i32, %union.anon, %struct.evp_pkey_asn1_method_st* }
%union.anon = type { i8* }
%struct.evp_pkey_asn1_method_st = type opaque
%struct.ssl_early_callback_ctx = type { %struct.ssl_st*, i8*, i64, i16, i8*, i64, i8*, i64, i8*, i64, i8*, i64, i8*, i64 }
%"class.std::__1::unique_ptr.109" = type { %"class.std::__1::__compressed_pair.110" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.111" = type { %"struct.bssl::TicketKey"* }
%"struct.bssl::TicketKey" = type { [16 x i8], [16 x i8], [16 x i8], i64 }
%struct.evp_cipher_ctx_st = type { %struct.evp_cipher_st*, i8*, i8*, i32, i32, i32, [16 x i8], [16 x i8], [32 x i8], i32, i32, i32, [32 x i8] }
%struct.evp_cipher_st = type { i32, i32, i32, i32, i32, i32, i8*, i32 (%struct.evp_cipher_ctx_st*, i8*, i8*, i32)*, i32 (%struct.evp_cipher_ctx_st*, i8*, i8*, i64)*, void (%struct.evp_cipher_ctx_st*)*, i32 (%struct.evp_cipher_ctx_st*, i32, i32, i8*)* }
%struct.hmac_ctx_st = type { %struct.env_md_st*, %struct.env_md_ctx_st, %struct.env_md_ctx_st, %struct.env_md_ctx_st }
%"class.bssl::GrowableArray.114" = type { i64, %"class.bssl::Array.115" }
%"class.bssl::Array.115" = type { %"struct.bssl::CertCompressionAlg"*, i64 }
%"struct.bssl::CertCompressionAlg" = type <{ i32 (%struct.ssl_st*, %struct.cbb_st*, i8*, i64)*, i32 (%struct.ssl_st*, %struct.crypto_buffer_st**, i64, i8*, i64)*, i16, [6 x i8] }>
%struct.timeval = type { i64, i64 }
%struct.crypto_buffer_pool_st = type opaque
%struct.ssl_ticket_aead_method_st = type { i64 (%struct.ssl_st*)*, i32 (%struct.ssl_st*, i8*, i64*, i64, i8*, i64)*, i32 (%struct.ssl_st*, i8*, i64*, i64, i8*, i64)* }
%struct.x509_store_st = type { i32, %struct.stack_st_X509_OBJECT*, %union.crypto_mutex_st, %struct.stack_st_X509*, %struct.stack_st_X509_LOOKUP*, %struct.X509_VERIFY_PARAM_st*, i32 (%struct.x509_store_ctx_st*)*, i32 (i32, %struct.x509_store_ctx_st*)*, i32 (%struct.x509_st**, %struct.x509_store_ctx_st*, %struct.x509_st*)*, i32 (%struct.x509_store_ctx_st*, %struct.x509_st*, %struct.x509_st*)*, i32 (%struct.x509_store_ctx_st*)*, i32 (%struct.x509_store_ctx_st*, %struct.X509_crl_st**, %struct.x509_st*)*, i32 (%struct.x509_store_ctx_st*, %struct.X509_crl_st*)*, i32 (%struct.x509_store_ctx_st*, %struct.X509_crl_st*, %struct.x509_st*)*, %struct.stack_st_X509* (%struct.x509_store_ctx_st*, %struct.X509_name_st*)*, %struct.stack_st_X509_CRL* (%struct.x509_store_ctx_st*, %struct.X509_name_st*)*, i32 (%struct.x509_store_ctx_st*)*, i32 }
%struct.stack_st_X509_OBJECT = type opaque
%struct.stack_st_X509_LOOKUP = type opaque
%"class.std::__1::unique_ptr.34" = type { %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %struct.crypto_buffer_st* }
%"class.std::__1::unique_ptr.75" = type { %"class.std::__1::__compressed_pair.76" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { %"struct.bssl::DC"* }
%"struct.bssl::DC" = type { %"class.std::__1::unique_ptr.34", i16, %"class.std::__1::unique_ptr.18" }
%struct.ssl_private_key_method_st = type { i32 (%struct.ssl_st*, i8*, i64*, i64, i16, i8*, i64)*, i32 (%struct.ssl_st*, i8*, i64*, i64, i8*, i64)*, i32 (%struct.ssl_st*, i8*, i64*, i64)* }
%"class.std::__1::unique_ptr.23" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %struct.stack_st_CRYPTO_BUFFER* }
%struct.stack_st_X509_NAME = type opaque
%"class.std::__1::unique_ptr.18" = type { %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %struct.evp_pkey_st* }
%"class.bssl::GrowableArray.82" = type { i64, %"class.bssl::Array.83" }
%"class.bssl::Array.83" = type { %"struct.bssl::ALPSConfig"*, i64 }
%"struct.bssl::ALPSConfig" = type { %"class.bssl::Array", %"class.bssl::Array" }
%"class.bssl::Array.56" = type { i16*, i64 }
%"class.std::__1::unique_ptr.84" = type { %"class.std::__1::__compressed_pair.85" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"struct.std::__1::__compressed_pair_elem.86" = type { %struct.stack_st_SRTP_PROTECTION_PROFILE* }
%struct.stack_st_SRTP_PROTECTION_PROFILE = type opaque
%"class.std::__1::unique_ptr.91" = type { %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { %struct.bio_st* }
%struct.bio_st = type { %struct.bio_method_st*, i32, i32, i32, i32, i32, i32, i8*, %struct.bio_st*, i64, i64 }
%struct.bio_method_st = type { i32, i8*, i32 (%struct.bio_st*, i8*, i32)*, i32 (%struct.bio_st*, i8*, i32)*, i32 (%struct.bio_st*, i8*)*, i32 (%struct.bio_st*, i8*, i32)*, i64 (%struct.bio_st*, i32, i64, i8*)*, i32 (%struct.bio_st*)*, i32 (%struct.bio_st*)*, i64 (%struct.bio_st*, i32, i64 (%struct.bio_st*, i32, i8*, i32, i64, i64)*)* }
%"struct.bssl::SSL3_STATE" = type <{ [8 x i8], [8 x i8], [32 x i8], [32 x i8], %"class.bssl::SSLBuffer", %"class.bssl::SSLBuffer", %"class.bssl::Span", i32, i32, i32, i32, i8*, i32, i32, %"class.std::__1::unique_ptr.40", i32, i32, i32, i32, i16, i8, i8, i8, i16, i8, %"class.std::__1::unique_ptr.50", %"class.std::__1::unique_ptr.50", %"class.std::__1::unique_ptr.50", i32, i32, i32, [4 x i8], %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.96", [48 x i8], [48 x i8], [48 x i8], i8, i8, i8, [12 x i8], i8, i8, [12 x i8], [2 x i8], i8, %"class.std::__1::unique_ptr.58", %"class.bssl::Array", %"class.bssl::Array", %"class.std::__1::unique_ptr.29", [64 x i8], %"class.bssl::Array", %struct.srtp_protection_profile_st* }>
%"class.bssl::SSLBuffer" = type <{ i8*, i16, i16, i16, [5 x i8], i8, [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.bssl::SSLAEADContext"* }
%"class.std::__1::unique_ptr.96" = type { %"class.std::__1::__compressed_pair.97" }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"struct.std::__1::__compressed_pair_elem.98" = type { %"struct.bssl::SSL_HANDSHAKE"* }
%struct.srtp_protection_profile_st = type { i8*, i64 }
%"struct.bssl::DTLS1_STATE" = type <{ i8, [256 x i8], [7 x i8], i64, i16, i16, [4 x i8], %"struct.bssl::DTLS1_BITMAP", i16, i16, [8 x i8], [4 x i8], %"class.std::__1::unique_ptr", [7 x %"class.std::__1::unique_ptr.101"], [7 x %"struct.bssl::DTLS_OUTGOING_MESSAGE"], i8, i8, [2 x i8], i32, i32, i32, %"struct.bssl::OPENSSL_timeval", i32, [4 x i8] }>
%"struct.bssl::DTLS1_BITMAP" = type { i64, i64 }
%"class.std::__1::unique_ptr.101" = type { %"class.std::__1::__compressed_pair.102" }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"struct.std::__1::__compressed_pair_elem.103" = type { %"struct.bssl::hm_fragment"* }
%"struct.bssl::hm_fragment" = type { i8, i16, i32, i8*, i8* }
%"struct.bssl::DTLS_OUTGOING_MESSAGE" = type <{ i8*, i32, i16, i8, i8 }>
%"struct.bssl::OPENSSL_timeval" = type { i64, i32 }
%"class.std::__1::unique_ptr.58" = type { %"class.std::__1::__compressed_pair.59" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { %struct.ssl_session_st* }
%"class.std::__1::unique_ptr.106" = type { %"class.std::__1::__compressed_pair.107" }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.108" }
%"struct.std::__1::__compressed_pair_elem.108" = type { %struct.ssl_ctx_st* }
%struct.crypto_ex_data_st = type { %struct.stack_st_void* }
%struct.stack_st_void = type opaque
%"class.std::__1::unique_ptr.29" = type { %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { i8* }
%struct.ssl_quic_method_st = type { i32 (%struct.ssl_st*, i32, %struct.ssl_cipher_st*, i8*, i64)*, i32 (%struct.ssl_st*, i32, %struct.ssl_cipher_st*, i8*, i64)*, i32 (%struct.ssl_st*, i32, i8*, i64)*, i32 (%struct.ssl_st*)*, i32 (%struct.ssl_st*, i32, i8)* }
%"class.bssl::Span.1" = type { i8*, i64 }

@.str = private unnamed_addr constant [50 x i8] c"../../third_party/boringssl/src/ssl/tls_record.cc\00", align 1
@.str.1 = private unnamed_addr constant [20 x i8] c"SSL alert number %d\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4bssl26ssl_record_sequence_updateEPhm(i8* nocapture, i64) local_unnamed_addr #0 {
  br label %3

3:                                                ; preds = %7, %2
  %4 = phi i64 [ %1, %2 ], [ %5, %7 ]
  %5 = add i64 %4, -1
  %6 = icmp ult i64 %5, %1
  br i1 %6, label %7, label %12

7:                                                ; preds = %3
  %8 = getelementptr inbounds i8, i8* %0, i64 %5
  %9 = load i8, i8* %8, align 1
  %10 = add i8 %9, 1
  store i8 %10, i8* %8, align 1
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %3, label %13

12:                                               ; preds = %3
  tail call void @ERR_put_error(i32 16, i32 0, i32 69, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str, i64 0, i64 0), i32 161) #3
  br label %13

13:                                               ; preds = %7, %12
  %14 = phi i1 [ false, %12 ], [ true, %7 ]
  ret i1 %14
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare void @ERR_put_error(i32, i32, i32, i8*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN4bssl21ssl_record_prefix_lenEPK6ssl_st(%struct.ssl_st*) local_unnamed_addr #0 {
  %2 = tail call i32 @SSL_is_dtls(%struct.ssl_st* %0) #3
  %3 = icmp eq i32 %2, 0
  %4 = select i1 %3, i64 5, i64 13
  %5 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 8
  %6 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %5, align 8
  %7 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %6, i64 0, i32 32, i32 0, i32 0, i32 0
  %8 = load %"class.bssl::SSLAEADContext"*, %"class.bssl::SSLAEADContext"** %7, align 8
  %9 = tail call i64 @_ZNK4bssl14SSLAEADContext16ExplicitNonceLenEv(%"class.bssl::SSLAEADContext"* %8) #3
  %10 = add i64 %9, %4
  ret i64 %10
}

declare i32 @SSL_is_dtls(%struct.ssl_st*) local_unnamed_addr #2

declare i64 @_ZNK4bssl14SSLAEADContext16ExplicitNonceLenEv(%"class.bssl::SSLAEADContext"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN4bssl25ssl_seal_align_prefix_lenEPK6ssl_st(%struct.ssl_st*) local_unnamed_addr #0 {
  %2 = tail call i32 @SSL_is_dtls(%struct.ssl_st* %0) #3
  %3 = icmp eq i32 %2, 0
  %4 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 8
  %5 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %4, align 8
  %6 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %5, i64 0, i32 33, i32 0, i32 0, i32 0
  %7 = load %"class.bssl::SSLAEADContext"*, %"class.bssl::SSLAEADContext"** %6, align 8
  %8 = tail call i64 @_ZNK4bssl14SSLAEADContext16ExplicitNonceLenEv(%"class.bssl::SSLAEADContext"* %7) #3
  br i1 %3, label %11, label %9

9:                                                ; preds = %1
  %10 = add i64 %8, 13
  br label %44

11:                                               ; preds = %1
  %12 = add i64 %8, 5
  %13 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %4, align 8
  %14 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %13, i64 0, i32 33, i32 0, i32 0, i32 0
  %15 = load %"class.bssl::SSLAEADContext"*, %"class.bssl::SSLAEADContext"** %14, align 8
  %16 = getelementptr inbounds %"class.bssl::SSLAEADContext", %"class.bssl::SSLAEADContext"* %15, i64 0, i32 0
  %17 = load %struct.ssl_cipher_st*, %struct.ssl_cipher_st** %16, align 8
  %18 = icmp eq %struct.ssl_cipher_st* %17, null
  br i1 %18, label %44, label %19

19:                                               ; preds = %11
  %20 = tail call zeroext i16 @_ZNK4bssl14SSLAEADContext15ProtocolVersionEv(%"class.bssl::SSLAEADContext"* %15) #3
  %21 = icmp ult i16 %20, 770
  br i1 %21, label %22, label %44

22:                                               ; preds = %19
  %23 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 20
  %24 = load i32, i32* %23, align 4
  %25 = and i32 %24, 256
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %44, label %27

27:                                               ; preds = %22
  %28 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %4, align 8
  %29 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %28, i64 0, i32 33, i32 0, i32 0, i32 0
  %30 = load %"class.bssl::SSLAEADContext"*, %"class.bssl::SSLAEADContext"** %29, align 8
  %31 = getelementptr inbounds %"class.bssl::SSLAEADContext", %"class.bssl::SSLAEADContext"* %30, i64 0, i32 0
  %32 = load %struct.ssl_cipher_st*, %struct.ssl_cipher_st** %31, align 8
  %33 = tail call i32 @SSL_CIPHER_is_block_cipher(%struct.ssl_cipher_st* %32) #3
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %44, label %35

35:                                               ; preds = %27
  %36 = add i64 %8, 10
  %37 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %4, align 8
  %38 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %37, i64 0, i32 33, i32 0, i32 0, i32 0
  %39 = load %"class.bssl::SSLAEADContext"*, %"class.bssl::SSLAEADContext"** %38, align 8
  %40 = getelementptr inbounds %"class.bssl::SSLAEADContext", %"class.bssl::SSLAEADContext"* %39, i64 0, i32 0
  %41 = load %struct.ssl_cipher_st*, %struct.ssl_cipher_st** %40, align 8
  %42 = tail call i64 @_ZN4bssl31ssl_cipher_get_record_split_lenEPK13ssl_cipher_st(%struct.ssl_cipher_st* %41) #3
  %43 = add i64 %36, %42
  br label %44

44:                                               ; preds = %27, %11, %19, %22, %35, %9
  %45 = phi i64 [ %10, %9 ], [ %43, %35 ], [ %12, %27 ], [ %12, %22 ], [ %12, %19 ], [ %12, %11 ]
  ret i64 %45
}

declare i64 @_ZN4bssl31ssl_cipher_get_record_split_lenEPK13ssl_cipher_st(%struct.ssl_cipher_st*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4bssl15tls_open_recordEP6ssl_stPhPNS_4SpanIhEEPmS2_S4_(%struct.ssl_st*, i8* nocapture, %"class.bssl::Span"*, i64* nocapture, i8*, %"class.bssl::Span"* nocapture readonly byval(%"class.bssl::Span") align 8) local_unnamed_addr #0 {
  %7 = alloca %struct.cbs_st, align 8
  %8 = alloca i8, align 1
  %9 = alloca i16, align 2
  %10 = alloca i16, align 2
  %11 = alloca %struct.cbs_st, align 8
  %12 = alloca %"class.bssl::Span.1", align 8
  %13 = alloca %"class.bssl::Span", align 8
  store i64 0, i64* %3, align 8
  %14 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 8
  %15 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %14, align 8
  %16 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %15, i64 0, i32 12
  %17 = load i32, i32* %16, align 8
  %18 = icmp eq i32 %17, 1
  br i1 %18, label %270, label %19

19:                                               ; preds = %6
  %20 = tail call zeroext i1 @_ZN4bssl29tls_can_accept_handshake_dataEPK6ssl_stPh(%struct.ssl_st* %0, i8* %4) #3
  br i1 %20, label %21, label %270

21:                                               ; preds = %19
  %22 = bitcast %struct.cbs_st* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %22) #3
  %23 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %7, i64 0, i32 1
  %24 = bitcast %"class.bssl::Span"* %5 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = getelementptr inbounds %"class.bssl::Span", %"class.bssl::Span"* %5, i64 0, i32 1
  %27 = load i64, i64* %26, align 8
  %28 = bitcast %struct.cbs_st* %7 to i64*
  store i64 %25, i64* %28, align 8
  store i64 %27, i64* %23, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %8) #3
  store i8 -86, i8* %8, align 1
  %29 = bitcast i16* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %29) #3
  store i16 -21846, i16* %9, align 2
  %30 = bitcast i16* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %30) #3
  store i16 -21846, i16* %10, align 2
  %31 = call i32 @CBS_get_u8(%struct.cbs_st* nonnull %7, i8* nonnull %8) #3
  %32 = icmp eq i32 %31, 0
  %33 = inttoptr i64 %25 to i8*
  br i1 %32, label %40, label %34

34:                                               ; preds = %21
  %35 = call i32 @CBS_get_u16(%struct.cbs_st* nonnull %7, i16* nonnull %9) #3
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %40, label %37

37:                                               ; preds = %34
  %38 = call i32 @CBS_get_u16(%struct.cbs_st* nonnull %7, i16* nonnull %10) #3
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %41

40:                                               ; preds = %37, %34, %21
  store i64 5, i64* %3, align 8
  br label %268

41:                                               ; preds = %37
  %42 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %14, align 8
  %43 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %42, i64 0, i32 32, i32 0, i32 0, i32 0
  %44 = load %"class.bssl::SSLAEADContext"*, %"class.bssl::SSLAEADContext"** %43, align 8
  %45 = getelementptr inbounds %"class.bssl::SSLAEADContext", %"class.bssl::SSLAEADContext"* %44, i64 0, i32 0
  %46 = load %struct.ssl_cipher_st*, %struct.ssl_cipher_st** %45, align 8
  %47 = icmp eq %struct.ssl_cipher_st* %46, null
  %48 = load i16, i16* %9, align 2
  br i1 %47, label %49, label %52

49:                                               ; preds = %41
  %50 = and i16 %48, -256
  %51 = icmp eq i16 %50, 768
  br i1 %51, label %56, label %55

52:                                               ; preds = %41
  %53 = call zeroext i16 @_ZNK4bssl14SSLAEADContext13RecordVersionEv(%"class.bssl::SSLAEADContext"* %44) #3
  %54 = icmp eq i16 %48, %53
  br i1 %54, label %56, label %55

55:                                               ; preds = %49, %52
  call void @ERR_put_error(i32 16, i32 0, i32 247, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str, i64 0, i64 0), i32 242) #3
  store i8 70, i8* %4, align 1
  br label %268

56:                                               ; preds = %49, %52
  %57 = load i16, i16* %10, align 2
  %58 = icmp ugt i16 %57, 16704
  br i1 %58, label %59, label %60

59:                                               ; preds = %56
  call void @ERR_put_error(i32 16, i32 0, i32 146, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str, i64 0, i64 0), i32 249) #3
  store i8 22, i8* %4, align 1
  br label %268

60:                                               ; preds = %56
  %61 = bitcast %struct.cbs_st* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %61) #3
  %62 = zext i16 %57 to i64
  %63 = bitcast %struct.cbs_st* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %63, i8 -86, i64 16, i1 false)
  %64 = call i32 @CBS_get_bytes(%struct.cbs_st* nonnull %7, %struct.cbs_st* nonnull %11, i64 %62) #3
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %70

66:                                               ; preds = %60
  %67 = load i16, i16* %10, align 2
  %68 = zext i16 %67 to i64
  %69 = add nuw nsw i64 %68, 5
  store i64 %69, i64* %3, align 8
  br label %266

70:                                               ; preds = %60
  %71 = icmp ult i64 %27, 5
  %72 = select i1 %71, i64 %27, i64 5
  call void @_ZN4bssl19ssl_do_msg_callbackEPK6ssl_stiiNS_4SpanIKhEE(%struct.ssl_st* %0, i32 0, i32 256, i8* %33, i64 %72) #3
  %73 = call i64 @CBS_len(%struct.cbs_st* nonnull %7) #3
  %74 = sub i64 %27, %73
  store i64 %74, i64* %3, align 8
  %75 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %14, align 8
  %76 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %75, i64 0, i32 23
  %77 = load i16, i16* %76, align 1
  %78 = and i16 %77, 2
  %79 = icmp eq i16 %78, 0
  br i1 %79, label %106, label %80

80:                                               ; preds = %70
  %81 = call zeroext i16 @_ZN4bssl20ssl_protocol_versionEPK6ssl_st(%struct.ssl_st* %0) #3
  %82 = icmp ugt i16 %81, 771
  br i1 %82, label %83, label %106

83:                                               ; preds = %80
  %84 = call i32 @SSL_in_init(%struct.ssl_st* %0) #3
  %85 = icmp ne i32 %84, 0
  %86 = load i8, i8* %8, align 1
  %87 = icmp eq i8 %86, 20
  %88 = and i1 %85, %87
  %89 = load i16, i16* %10, align 2
  %90 = icmp eq i16 %89, 1
  %91 = and i1 %88, %90
  br i1 %91, label %92, label %106

92:                                               ; preds = %83
  %93 = call i8* @CBS_data(%struct.cbs_st* nonnull %11) #3
  %94 = load i8, i8* %93, align 1
  %95 = icmp eq i8 %94, 1
  br i1 %95, label %96, label %106

96:                                               ; preds = %92
  %97 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %14, align 8
  %98 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %97, i64 0, i32 20
  %99 = load i8, i8* %98, align 2
  %100 = add i8 %99, 1
  store i8 %100, i8* %98, align 2
  %101 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %14, align 8
  %102 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %101, i64 0, i32 20
  %103 = load i8, i8* %102, align 2
  %104 = icmp ugt i8 %103, 32
  br i1 %104, label %105, label %266

105:                                              ; preds = %96
  call void @ERR_put_error(i32 16, i32 0, i32 219, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str, i64 0, i64 0), i32 274) #3
  store i8 10, i8* %4, align 1
  br label %266

106:                                              ; preds = %83, %70, %92, %80
  %107 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %14, align 8
  %108 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %107, i64 0, i32 23
  %109 = load i16, i16* %108, align 1
  %110 = and i16 %109, 1
  %111 = icmp eq i16 %110, 0
  %112 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %107, i64 0, i32 32, i32 0, i32 0, i32 0
  %113 = load %"class.bssl::SSLAEADContext"*, %"class.bssl::SSLAEADContext"** %112, align 8
  br i1 %111, label %114, label %116

114:                                              ; preds = %106
  %115 = load i8, i8* %8, align 1
  br label %142

116:                                              ; preds = %106
  %117 = getelementptr inbounds %"class.bssl::SSLAEADContext", %"class.bssl::SSLAEADContext"* %113, i64 0, i32 0
  %118 = load %struct.ssl_cipher_st*, %struct.ssl_cipher_st** %117, align 8
  %119 = icmp eq %struct.ssl_cipher_st* %118, null
  %120 = load i8, i8* %8, align 1
  %121 = icmp eq i8 %120, 23
  %122 = and i1 %119, %121
  br i1 %122, label %123, label %142

123:                                              ; preds = %116
  %124 = load i64, i64* %3, align 8
  %125 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %107, i64 0, i32 19
  %126 = load i16, i16* %125, align 8
  %127 = trunc i64 %124 to i16
  %128 = add i16 %126, %127
  store i16 %128, i16* %125, align 8
  %129 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %14, align 8
  %130 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %129, i64 0, i32 19
  %131 = load i16, i16* %130, align 8
  %132 = zext i16 %131 to i64
  %133 = icmp ugt i64 %124, %132
  br i1 %133, label %134, label %138

134:                                              ; preds = %123
  store i16 16385, i16* %130, align 8
  %135 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %14, align 8
  %136 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %135, i64 0, i32 19
  %137 = load i16, i16* %136, align 8
  br label %138

138:                                              ; preds = %134, %123
  %139 = phi i16 [ %137, %134 ], [ %131, %123 ]
  %140 = icmp ugt i16 %139, 16384
  br i1 %140, label %141, label %266

141:                                              ; preds = %138
  call void @ERR_put_error(i32 16, i32 0, i32 270, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str, i64 0, i64 0), i32 198) #3
  store i8 10, i8* %4, align 1
  br label %266

142:                                              ; preds = %114, %116
  %143 = phi i8 [ %115, %114 ], [ %120, %116 ]
  %144 = load i16, i16* %9, align 2
  %145 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %107, i64 0, i32 0, i64 0
  %146 = bitcast %"class.bssl::Span.1"* %12 to i64*
  store i64 %25, i64* %146, align 8
  %147 = getelementptr inbounds %"class.bssl::Span.1", %"class.bssl::Span.1"* %12, i64 0, i32 1
  store i64 %72, i64* %147, align 8
  %148 = call i8* @CBS_data(%struct.cbs_st* nonnull %11) #3
  %149 = call i64 @CBS_len(%struct.cbs_st* nonnull %11) #3
  %150 = getelementptr inbounds %"class.bssl::Span", %"class.bssl::Span"* %13, i64 0, i32 0
  store i8* %148, i8** %150, align 8
  %151 = getelementptr inbounds %"class.bssl::Span", %"class.bssl::Span"* %13, i64 0, i32 1
  store i64 %149, i64* %151, align 8
  %152 = call zeroext i1 @_ZN4bssl14SSLAEADContext4OpenEPNS_4SpanIhEEhtPKhNS1_IS4_EES2_(%"class.bssl::SSLAEADContext"* %113, %"class.bssl::Span"* %2, i8 zeroext %143, i16 zeroext %144, i8* %145, %"class.bssl::Span.1"* nonnull byval(%"class.bssl::Span.1") align 8 %12, %"class.bssl::Span"* nonnull byval(%"class.bssl::Span") align 8 %13) #3
  %153 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %14, align 8
  %154 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %153, i64 0, i32 23
  %155 = load i16, i16* %154, align 1
  br i1 %152, label %186, label %156

156:                                              ; preds = %142
  %157 = and i16 %155, 1
  %158 = icmp eq i16 %157, 0
  br i1 %158, label %185, label %159

159:                                              ; preds = %156
  %160 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %153, i64 0, i32 32, i32 0, i32 0, i32 0
  %161 = load %"class.bssl::SSLAEADContext"*, %"class.bssl::SSLAEADContext"** %160, align 8
  %162 = getelementptr inbounds %"class.bssl::SSLAEADContext", %"class.bssl::SSLAEADContext"* %161, i64 0, i32 0
  %163 = load %struct.ssl_cipher_st*, %struct.ssl_cipher_st** %162, align 8
  %164 = icmp eq %struct.ssl_cipher_st* %163, null
  br i1 %164, label %185, label %165

165:                                              ; preds = %159
  call void @ERR_clear_error() #3
  %166 = load i64, i64* %3, align 8
  %167 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %14, align 8
  %168 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %167, i64 0, i32 19
  %169 = load i16, i16* %168, align 8
  %170 = trunc i64 %166 to i16
  %171 = add i16 %169, %170
  store i16 %171, i16* %168, align 8
  %172 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %14, align 8
  %173 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %172, i64 0, i32 19
  %174 = load i16, i16* %173, align 8
  %175 = zext i16 %174 to i64
  %176 = icmp ugt i64 %166, %175
  br i1 %176, label %177, label %181

177:                                              ; preds = %165
  store i16 16385, i16* %173, align 8
  %178 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %14, align 8
  %179 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %178, i64 0, i32 19
  %180 = load i16, i16* %179, align 8
  br label %181

181:                                              ; preds = %177, %165
  %182 = phi i16 [ %180, %177 ], [ %174, %165 ]
  %183 = icmp ugt i16 %182, 16384
  br i1 %183, label %184, label %266

184:                                              ; preds = %181
  call void @ERR_put_error(i32 16, i32 0, i32 270, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str, i64 0, i64 0), i32 198) #3
  store i8 10, i8* %4, align 1
  br label %266

185:                                              ; preds = %156, %159
  call void @ERR_put_error(i32 16, i32 0, i32 139, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str, i64 0, i64 0), i32 298) #3
  store i8 20, i8* %4, align 1
  br label %266

186:                                              ; preds = %142
  %187 = and i16 %155, -2
  store i16 %187, i16* %154, align 1
  %188 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %14, align 8
  br label %189

189:                                              ; preds = %193, %186
  %190 = phi i64 [ 8, %186 ], [ %191, %193 ]
  %191 = add nsw i64 %190, -1
  %192 = icmp ult i64 %191, 8
  br i1 %192, label %193, label %198

193:                                              ; preds = %189
  %194 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %188, i64 0, i32 0, i64 %191
  %195 = load i8, i8* %194, align 1
  %196 = add i8 %195, 1
  store i8 %196, i8* %194, align 1
  %197 = icmp eq i8 %196, 0
  br i1 %197, label %189, label %199

198:                                              ; preds = %189
  call void @ERR_put_error(i32 16, i32 0, i32 69, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str, i64 0, i64 0), i32 161) #3
  store i8 80, i8* %4, align 1
  br label %266

199:                                              ; preds = %193
  %200 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %14, align 8
  %201 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %200, i64 0, i32 32, i32 0, i32 0, i32 0
  %202 = load %"class.bssl::SSLAEADContext"*, %"class.bssl::SSLAEADContext"** %201, align 8
  %203 = getelementptr inbounds %"class.bssl::SSLAEADContext", %"class.bssl::SSLAEADContext"* %202, i64 0, i32 0
  %204 = load %struct.ssl_cipher_st*, %struct.ssl_cipher_st** %203, align 8
  %205 = icmp eq %struct.ssl_cipher_st* %204, null
  br i1 %205, label %210, label %206

206:                                              ; preds = %199
  %207 = call zeroext i16 @_ZNK4bssl14SSLAEADContext15ProtocolVersionEv(%"class.bssl::SSLAEADContext"* %202) #3
  %208 = icmp ugt i16 %207, 771
  %209 = select i1 %208, i64 16385, i64 16384
  br label %210

210:                                              ; preds = %206, %199
  %211 = phi i1 [ false, %199 ], [ %208, %206 ]
  %212 = phi i64 [ 16384, %199 ], [ %209, %206 ]
  %213 = getelementptr inbounds %"class.bssl::Span", %"class.bssl::Span"* %2, i64 0, i32 1
  %214 = load i64, i64* %213, align 8
  %215 = icmp ugt i64 %214, %212
  br i1 %215, label %216, label %217

216:                                              ; preds = %210
  call void @ERR_put_error(i32 16, i32 0, i32 136, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str, i64 0, i64 0), i32 320) #3
  store i8 22, i8* %4, align 1
  br label %266

217:                                              ; preds = %210
  br i1 %211, label %218, label %236

218:                                              ; preds = %217
  %219 = load i8, i8* %8, align 1
  %220 = icmp eq i8 %219, 23
  br i1 %220, label %222, label %221

221:                                              ; preds = %218
  call void @ERR_put_error(i32 16, i32 0, i32 251, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str, i64 0, i64 0), i32 328) #3
  store i8 50, i8* %4, align 1
  br label %266

222:                                              ; preds = %218
  %223 = getelementptr inbounds %"class.bssl::Span", %"class.bssl::Span"* %2, i64 0, i32 0
  br label %224

224:                                              ; preds = %222, %228
  %225 = phi i64 [ %214, %222 ], [ %234, %228 ]
  %226 = icmp eq i64 %225, 0
  br i1 %226, label %227, label %228

227:                                              ; preds = %224
  call void @ERR_put_error(i32 16, i32 0, i32 139, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str, i64 0, i64 0), i32 335) #3
  store i8 51, i8* %4, align 1
  br label %266

228:                                              ; preds = %224
  %229 = load i8*, i8** %223, align 8
  %230 = add i64 %225, -1
  %231 = getelementptr inbounds i8, i8* %229, i64 %230
  %232 = load i8, i8* %231, align 1
  store i8 %232, i8* %8, align 1
  %233 = icmp ugt i64 %225, %230
  %234 = select i1 %233, i64 %230, i64 %225
  store i64 %234, i64* %213, align 8
  %235 = icmp eq i8 %232, 0
  br i1 %235, label %224, label %236

236:                                              ; preds = %228, %217
  %237 = phi i64 [ %214, %217 ], [ %234, %228 ]
  %238 = icmp eq i64 %237, 0
  %239 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %14, align 8
  %240 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %239, i64 0, i32 20
  br i1 %238, label %241, label %249

241:                                              ; preds = %236
  %242 = load i8, i8* %240, align 2
  %243 = add i8 %242, 1
  store i8 %243, i8* %240, align 2
  %244 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %14, align 8
  %245 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %244, i64 0, i32 20
  %246 = load i8, i8* %245, align 2
  %247 = icmp ugt i8 %246, 32
  br i1 %247, label %248, label %250

248:                                              ; preds = %241
  call void @ERR_put_error(i32 16, i32 0, i32 219, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str, i64 0, i64 0), i32 348) #3
  store i8 10, i8* %4, align 1
  br label %266

249:                                              ; preds = %236
  store i8 0, i8* %240, align 2
  br label %250

250:                                              ; preds = %241, %249
  %251 = load i8, i8* %8, align 1
  switch i8 %251, label %257 [
    i8 21, label %252
    i8 22, label %262
  ]

252:                                              ; preds = %250
  %253 = getelementptr inbounds %"class.bssl::Span", %"class.bssl::Span"* %2, i64 0, i32 0
  %254 = load i8*, i8** %253, align 8
  %255 = load i64, i64* %213, align 8
  %256 = call i32 @_ZN4bssl17ssl_process_alertEP6ssl_stPhNS_4SpanIKhEE(%struct.ssl_st* %0, i8* %4, i8* %254, i64 %255)
  br label %266

257:                                              ; preds = %250
  %258 = call zeroext i1 @_ZN4bssl34tls_has_unprocessed_handshake_dataEPK6ssl_st(%struct.ssl_st* %0) #3
  br i1 %258, label %261, label %259

259:                                              ; preds = %257
  %260 = load i8, i8* %8, align 1
  br label %262

261:                                              ; preds = %257
  call void @ERR_put_error(i32 16, i32 0, i32 225, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str, i64 0, i64 0), i32 365) #3
  store i8 10, i8* %4, align 1
  br label %266

262:                                              ; preds = %259, %250
  %263 = phi i8 [ %260, %259 ], [ %251, %250 ]
  %264 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %14, align 8
  %265 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %264, i64 0, i32 21
  store i8 0, i8* %265, align 1
  store i8 %263, i8* %1, align 1
  br label %266

266:                                              ; preds = %105, %185, %198, %96, %262, %261, %252, %248, %227, %221, %216, %138, %141, %181, %184, %66
  %267 = phi i32 [ 2, %66 ], [ 4, %105 ], [ 4, %185 ], [ 4, %198 ], [ 1, %96 ], [ 4, %216 ], [ 4, %221 ], [ 4, %227 ], [ 4, %248 ], [ %256, %252 ], [ 4, %261 ], [ 0, %262 ], [ 4, %141 ], [ 1, %138 ], [ 4, %184 ], [ 1, %181 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %61) #3
  br label %268

268:                                              ; preds = %55, %59, %266, %40
  %269 = phi i32 [ 2, %40 ], [ 4, %59 ], [ %267, %266 ], [ 4, %55 ]
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %30) #3
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %29) #3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %8) #3
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %22) #3
  br label %270

270:                                              ; preds = %19, %6, %268
  %271 = phi i32 [ %269, %268 ], [ 3, %6 ], [ 4, %19 ]
  ret i32 %271
}

declare zeroext i1 @_ZN4bssl29tls_can_accept_handshake_dataEPK6ssl_stPh(%struct.ssl_st*, i8*) local_unnamed_addr #2

declare i32 @CBS_get_u8(%struct.cbs_st*, i8*) local_unnamed_addr #2

declare i32 @CBS_get_u16(%struct.cbs_st*, i16*) local_unnamed_addr #2

declare zeroext i16 @_ZNK4bssl14SSLAEADContext13RecordVersionEv(%"class.bssl::SSLAEADContext"*) local_unnamed_addr #2

declare i32 @CBS_get_bytes(%struct.cbs_st*, %struct.cbs_st*, i64) local_unnamed_addr #2

declare void @_ZN4bssl19ssl_do_msg_callbackEPK6ssl_stiiNS_4SpanIKhEE(%struct.ssl_st*, i32, i32, i8*, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare i64 @CBS_len(%struct.cbs_st*) local_unnamed_addr #2

declare zeroext i16 @_ZN4bssl20ssl_protocol_versionEPK6ssl_st(%struct.ssl_st*) local_unnamed_addr #2

declare i32 @SSL_in_init(%struct.ssl_st*) local_unnamed_addr #2

declare i8* @CBS_data(%struct.cbs_st*) local_unnamed_addr #2

declare zeroext i1 @_ZN4bssl14SSLAEADContext4OpenEPNS_4SpanIhEEhtPKhNS1_IS4_EES2_(%"class.bssl::SSLAEADContext"*, %"class.bssl::Span"*, i8 zeroext, i16 zeroext, i8*, %"class.bssl::Span.1"* byval(%"class.bssl::Span.1") align 8, %"class.bssl::Span"* byval(%"class.bssl::Span") align 8) local_unnamed_addr #2

declare void @ERR_clear_error() local_unnamed_addr #2

declare zeroext i16 @_ZNK4bssl14SSLAEADContext15ProtocolVersionEv(%"class.bssl::SSLAEADContext"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4bssl17ssl_process_alertEP6ssl_stPhNS_4SpanIKhEE(%struct.ssl_st*, i8* nocapture, i8*, i64) local_unnamed_addr #0 {
  %5 = icmp eq i64 %3, 2
  br i1 %5, label %7, label %6

6:                                                ; preds = %4
  store i8 50, i8* %1, align 1
  tail call void @ERR_put_error(i32 16, i32 0, i32 102, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str, i64 0, i64 0), i32 553) #3
  br label %47

7:                                                ; preds = %4
  tail call void @_ZN4bssl19ssl_do_msg_callbackEPK6ssl_stiiNS_4SpanIKhEE(%struct.ssl_st* %0, i32 0, i32 21, i8* %2, i64 2) #3
  %8 = load i8, i8* %2, align 1
  %9 = getelementptr inbounds i8, i8* %2, i64 1
  %10 = load i8, i8* %9, align 1
  %11 = zext i8 %8 to i32
  %12 = shl nuw nsw i32 %11, 8
  %13 = zext i8 %10 to i32
  %14 = or i32 %12, %13
  tail call void @_ZN4bssl20ssl_do_info_callbackEPK6ssl_stii(%struct.ssl_st* %0, i32 16388, i32 %14) #3
  switch i8 %8, label %46 [
    i8 1, label %15
    i8 2, label %44
  ]

15:                                               ; preds = %7
  %16 = icmp eq i8 %10, 0
  %17 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 8
  %18 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %17, align 8
  br i1 %16, label %19, label %21

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %18, i64 0, i32 12
  store i32 1, i32* %20, align 8
  br label %47

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %18, i64 0, i32 23
  %23 = load i16, i16* %22, align 1
  %24 = and i16 %23, 2
  %25 = icmp eq i16 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = tail call zeroext i16 @_ZN4bssl20ssl_protocol_versionEPK6ssl_st(%struct.ssl_st* %0) #3
  %28 = icmp ult i16 %27, 772
  %29 = icmp eq i8 %10, 90
  %30 = or i1 %29, %28
  br i1 %30, label %31, label %33

31:                                               ; preds = %26
  %32 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %17, align 8
  br label %34

33:                                               ; preds = %26
  store i8 50, i8* %1, align 1
  tail call void @ERR_put_error(i32 16, i32 0, i32 102, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str, i64 0, i64 0), i32 580) #3
  br label %47

34:                                               ; preds = %31, %21
  %35 = phi %"struct.bssl::SSL3_STATE"* [ %32, %31 ], [ %18, %21 ]
  %36 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %35, i64 0, i32 21
  %37 = load i8, i8* %36, align 1
  %38 = add i8 %37, 1
  store i8 %38, i8* %36, align 1
  %39 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %17, align 8
  %40 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %39, i64 0, i32 21
  %41 = load i8, i8* %40, align 1
  %42 = icmp ugt i8 %41, 4
  br i1 %42, label %43, label %47

43:                                               ; preds = %34
  store i8 10, i8* %1, align 1
  tail call void @ERR_put_error(i32 16, i32 0, i32 220, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str, i64 0, i64 0), i32 587) #3
  br label %47

44:                                               ; preds = %7
  %45 = add nuw nsw i32 %13, 1000
  tail call void @ERR_put_error(i32 16, i32 0, i32 %45, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str, i64 0, i64 0), i32 594) #3
  tail call void (i8*, ...) @ERR_add_error_dataf(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i32 %13) #3
  store i8 0, i8* %1, align 1
  br label %47

46:                                               ; preds = %7
  store i8 47, i8* %1, align 1
  tail call void @ERR_put_error(i32 16, i32 0, i32 227, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str, i64 0, i64 0), i32 601) #3
  br label %47

47:                                               ; preds = %19, %33, %43, %44, %46, %34, %6
  %48 = phi i32 [ 4, %6 ], [ 3, %19 ], [ 4, %33 ], [ 4, %43 ], [ 4, %44 ], [ 4, %46 ], [ 1, %34 ]
  ret i32 %48
}

declare zeroext i1 @_ZN4bssl34tls_has_unprocessed_handshake_dataEPK6ssl_st(%struct.ssl_st*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4bssl15tls_seal_recordEP6ssl_stPhPmmhPKhm(%struct.ssl_st*, i8*, i64* nocapture, i64, i8 zeroext, i8*, i64) local_unnamed_addr #0 {
  %8 = alloca i64, align 8
  %9 = ptrtoint i8* %5 to i64
  %10 = ptrtoint i8* %1 to i64
  %11 = add i64 %9, %6
  %12 = icmp ugt i64 %11, %10
  %13 = add i64 %10, %3
  %14 = icmp ugt i64 %13, %9
  %15 = and i1 %14, %12
  br i1 %15, label %16, label %17

16:                                               ; preds = %7
  tail call void @ERR_put_error(i32 16, i32 0, i32 189, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str, i64 0, i64 0), i32 518) #3
  br label %129

17:                                               ; preds = %7
  %18 = icmp eq i8 %4, 23
  %19 = icmp ugt i64 %6, 1
  %20 = and i1 %18, %19
  br i1 %20, label %21, label %53

21:                                               ; preds = %17
  %22 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 8
  %23 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %22, align 8
  %24 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %23, i64 0, i32 33, i32 0, i32 0, i32 0
  %25 = load %"class.bssl::SSLAEADContext"*, %"class.bssl::SSLAEADContext"** %24, align 8
  %26 = getelementptr inbounds %"class.bssl::SSLAEADContext", %"class.bssl::SSLAEADContext"* %25, i64 0, i32 0
  %27 = load %struct.ssl_cipher_st*, %struct.ssl_cipher_st** %26, align 8
  %28 = icmp eq %struct.ssl_cipher_st* %27, null
  br i1 %28, label %53, label %29

29:                                               ; preds = %21
  %30 = tail call zeroext i16 @_ZNK4bssl14SSLAEADContext15ProtocolVersionEv(%"class.bssl::SSLAEADContext"* %25) #3
  %31 = icmp ult i16 %30, 770
  br i1 %31, label %32, label %53

32:                                               ; preds = %29
  %33 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 20
  %34 = load i32, i32* %33, align 4
  %35 = and i32 %34, 256
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %53, label %37

37:                                               ; preds = %32
  %38 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %22, align 8
  %39 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %38, i64 0, i32 33, i32 0, i32 0, i32 0
  %40 = load %"class.bssl::SSLAEADContext"*, %"class.bssl::SSLAEADContext"** %39, align 8
  %41 = getelementptr inbounds %"class.bssl::SSLAEADContext", %"class.bssl::SSLAEADContext"* %40, i64 0, i32 0
  %42 = load %struct.ssl_cipher_st*, %struct.ssl_cipher_st** %41, align 8
  %43 = tail call i32 @SSL_CIPHER_is_block_cipher(%struct.ssl_cipher_st* %42) #3
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %53, label %45

45:                                               ; preds = %37
  %46 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %22, align 8
  %47 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %46, i64 0, i32 33, i32 0, i32 0, i32 0
  %48 = load %"class.bssl::SSLAEADContext"*, %"class.bssl::SSLAEADContext"** %47, align 8
  %49 = getelementptr inbounds %"class.bssl::SSLAEADContext", %"class.bssl::SSLAEADContext"* %48, i64 0, i32 0
  %50 = load %struct.ssl_cipher_st*, %struct.ssl_cipher_st** %49, align 8
  %51 = tail call i64 @_ZN4bssl31ssl_cipher_get_record_split_lenEPK13ssl_cipher_st(%struct.ssl_cipher_st* %50) #3
  %52 = add i64 %51, 9
  br label %60

53:                                               ; preds = %37, %21, %29, %32, %17
  %54 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 8
  %55 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %54, align 8
  %56 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %55, i64 0, i32 33, i32 0, i32 0, i32 0
  %57 = load %"class.bssl::SSLAEADContext"*, %"class.bssl::SSLAEADContext"** %56, align 8
  %58 = tail call i64 @_ZNK4bssl14SSLAEADContext16ExplicitNonceLenEv(%"class.bssl::SSLAEADContext"* %57) #3
  %59 = add i64 %58, 5
  br label %60

60:                                               ; preds = %45, %53
  %61 = phi i64 [ %52, %45 ], [ %59, %53 ]
  %62 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %62) #3
  store i64 -6148914691236517206, i64* %8, align 8
  %63 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 8
  %64 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %63, align 8
  %65 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %64, i64 0, i32 33, i32 0, i32 0, i32 0
  %66 = load %"class.bssl::SSLAEADContext"*, %"class.bssl::SSLAEADContext"** %65, align 8
  %67 = getelementptr inbounds %"class.bssl::SSLAEADContext", %"class.bssl::SSLAEADContext"* %66, i64 0, i32 0
  %68 = load %struct.ssl_cipher_st*, %struct.ssl_cipher_st** %67, align 8
  %69 = icmp eq %struct.ssl_cipher_st* %68, null
  br i1 %69, label %74, label %70

70:                                               ; preds = %60
  %71 = tail call zeroext i16 @_ZNK4bssl14SSLAEADContext15ProtocolVersionEv(%"class.bssl::SSLAEADContext"* %66) #3
  %72 = icmp ugt i16 %71, 771
  %73 = zext i1 %72 to i64
  br label %74

74:                                               ; preds = %70, %60
  %75 = phi i64 [ 0, %60 ], [ %73, %70 ]
  br i1 %20, label %76, label %103

76:                                               ; preds = %74
  %77 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %63, align 8
  %78 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %77, i64 0, i32 33, i32 0, i32 0, i32 0
  %79 = load %"class.bssl::SSLAEADContext"*, %"class.bssl::SSLAEADContext"** %78, align 8
  %80 = getelementptr inbounds %"class.bssl::SSLAEADContext", %"class.bssl::SSLAEADContext"* %79, i64 0, i32 0
  %81 = load %struct.ssl_cipher_st*, %struct.ssl_cipher_st** %80, align 8
  %82 = icmp eq %struct.ssl_cipher_st* %81, null
  br i1 %82, label %100, label %83

83:                                               ; preds = %76
  %84 = tail call zeroext i16 @_ZNK4bssl14SSLAEADContext15ProtocolVersionEv(%"class.bssl::SSLAEADContext"* %79) #3
  %85 = icmp ult i16 %84, 770
  br i1 %85, label %86, label %100

86:                                               ; preds = %83
  %87 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 20
  %88 = load i32, i32* %87, align 4
  %89 = and i32 %88, 256
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %100, label %91

91:                                               ; preds = %86
  %92 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %63, align 8
  %93 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %92, i64 0, i32 33, i32 0, i32 0, i32 0
  %94 = load %"class.bssl::SSLAEADContext"*, %"class.bssl::SSLAEADContext"** %93, align 8
  %95 = getelementptr inbounds %"class.bssl::SSLAEADContext", %"class.bssl::SSLAEADContext"* %94, i64 0, i32 0
  %96 = load %struct.ssl_cipher_st*, %struct.ssl_cipher_st** %95, align 8
  %97 = tail call i32 @SSL_CIPHER_is_block_cipher(%struct.ssl_cipher_st* %96) #3
  %98 = icmp ne i32 %97, 0
  %99 = zext i1 %98 to i64
  br label %100

100:                                              ; preds = %76, %83, %86, %91
  %101 = phi i64 [ 0, %86 ], [ 0, %83 ], [ 0, %76 ], [ %99, %91 ]
  %102 = sub nuw i64 %6, %101
  br label %103

103:                                              ; preds = %74, %100
  %104 = phi i64 [ %6, %74 ], [ %102, %100 ]
  %105 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %63, align 8
  %106 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %105, i64 0, i32 33, i32 0, i32 0, i32 0
  %107 = load %"class.bssl::SSLAEADContext"*, %"class.bssl::SSLAEADContext"** %106, align 8
  %108 = call zeroext i1 @_ZNK4bssl14SSLAEADContext9SuffixLenEPmmm(%"class.bssl::SSLAEADContext"* %107, i64* nonnull %8, i64 %104, i64 %75) #3
  br i1 %108, label %109, label %127

109:                                              ; preds = %103
  %110 = add i64 %61, %6
  %111 = icmp ult i64 %110, %6
  br i1 %111, label %116, label %112

112:                                              ; preds = %109
  %113 = load i64, i64* %8, align 8
  %114 = add i64 %113, %110
  %115 = icmp ult i64 %114, %110
  br i1 %115, label %116, label %117

116:                                              ; preds = %112, %109
  call void @ERR_put_error(i32 16, i32 0, i32 200, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str, i64 0, i64 0), i32 529) #3
  br label %127

117:                                              ; preds = %112
  %118 = icmp ugt i64 %114, %3
  br i1 %118, label %119, label %120

119:                                              ; preds = %117
  call void @ERR_put_error(i32 16, i32 0, i32 121, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str, i64 0, i64 0), i32 533) #3
  br label %127

120:                                              ; preds = %117
  %121 = getelementptr inbounds i8, i8* %1, i64 %61
  %122 = getelementptr inbounds i8, i8* %121, i64 %6
  %123 = call fastcc zeroext i1 @_ZN4bsslL23tls_seal_scatter_recordEP6ssl_stPhS2_S2_hPKhm(%struct.ssl_st* %0, i8* %1, i8* %121, i8* %122, i8 zeroext %4, i8* %5, i64 %6)
  br i1 %123, label %124, label %127

124:                                              ; preds = %120
  %125 = load i64, i64* %8, align 8
  %126 = add i64 %125, %110
  store i64 %126, i64* %2, align 8
  br label %127

127:                                              ; preds = %124, %120, %103, %119, %116
  %128 = phi i1 [ false, %116 ], [ false, %119 ], [ false, %103 ], [ true, %124 ], [ false, %120 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %62) #3
  br label %129

129:                                              ; preds = %127, %16
  %130 = phi i1 [ false, %16 ], [ %128, %127 ]
  ret i1 %130
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN4bsslL23tls_seal_scatter_recordEP6ssl_stPhS2_S2_hPKhm(%struct.ssl_st*, i8*, i8*, i8*, i8 zeroext, i8*, i64) unnamed_addr #0 {
  %8 = alloca i64, align 8
  %9 = alloca [5 x i8], align 4
  %10 = icmp eq i8 %4, 23
  %11 = icmp ugt i64 %6, 1
  %12 = and i1 %10, %11
  br i1 %12, label %13, label %66

13:                                               ; preds = %7
  %14 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 8
  %15 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %14, align 8
  %16 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %15, i64 0, i32 33, i32 0, i32 0, i32 0
  %17 = load %"class.bssl::SSLAEADContext"*, %"class.bssl::SSLAEADContext"** %16, align 8
  %18 = getelementptr inbounds %"class.bssl::SSLAEADContext", %"class.bssl::SSLAEADContext"* %17, i64 0, i32 0
  %19 = load %struct.ssl_cipher_st*, %struct.ssl_cipher_st** %18, align 8
  %20 = icmp eq %struct.ssl_cipher_st* %19, null
  br i1 %20, label %66, label %21

21:                                               ; preds = %13
  %22 = tail call zeroext i16 @_ZNK4bssl14SSLAEADContext15ProtocolVersionEv(%"class.bssl::SSLAEADContext"* %17) #3
  %23 = icmp ult i16 %22, 770
  br i1 %23, label %24, label %66

24:                                               ; preds = %21
  %25 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 20
  %26 = load i32, i32* %25, align 4
  %27 = and i32 %26, 256
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %66, label %29

29:                                               ; preds = %24
  %30 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %14, align 8
  %31 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %30, i64 0, i32 33, i32 0, i32 0, i32 0
  %32 = load %"class.bssl::SSLAEADContext"*, %"class.bssl::SSLAEADContext"** %31, align 8
  %33 = getelementptr inbounds %"class.bssl::SSLAEADContext", %"class.bssl::SSLAEADContext"* %32, i64 0, i32 0
  %34 = load %struct.ssl_cipher_st*, %struct.ssl_cipher_st** %33, align 8
  %35 = tail call i32 @SSL_CIPHER_is_block_cipher(%struct.ssl_cipher_st* %34) #3
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %66, label %37

37:                                               ; preds = %29
  %38 = getelementptr inbounds i8, i8* %1, i64 5
  %39 = getelementptr inbounds i8, i8* %1, i64 6
  %40 = tail call fastcc zeroext i1 @_ZN4bsslL14do_seal_recordEP6ssl_stPhS2_S2_hPKhm(%struct.ssl_st* %0, i8* %1, i8* %38, i8* %39, i8 zeroext 23, i8* %5, i64 1)
  br i1 %40, label %41, label %68

41:                                               ; preds = %37
  %42 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42) #3
  store i64 -6148914691236517206, i64* %8, align 8
  %43 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %14, align 8
  %44 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %43, i64 0, i32 33, i32 0, i32 0, i32 0
  %45 = load %"class.bssl::SSLAEADContext"*, %"class.bssl::SSLAEADContext"** %44, align 8
  %46 = call zeroext i1 @_ZNK4bssl14SSLAEADContext9SuffixLenEPmmm(%"class.bssl::SSLAEADContext"* %45, i64* nonnull %8, i64 1, i64 0) #3
  br i1 %46, label %47, label %64

47:                                               ; preds = %41
  %48 = load i64, i64* %8, align 8
  %49 = getelementptr inbounds [5 x i8], [5 x i8]* %9, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 5, i8* nonnull %49) #3
  %50 = getelementptr inbounds i8, i8* %2, i64 1
  %51 = getelementptr inbounds i8, i8* %5, i64 1
  %52 = add i64 %6, -1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %49, i8 -86, i64 5, i1 false)
  %53 = call fastcc zeroext i1 @_ZN4bsslL14do_seal_recordEP6ssl_stPhS2_S2_hPKhm(%struct.ssl_st* %0, i8* nonnull %49, i8* %50, i8* %3, i8 zeroext 23, i8* %51, i64 %52)
  br i1 %53, label %54, label %62

54:                                               ; preds = %47
  %55 = getelementptr inbounds [5 x i8], [5 x i8]* %9, i64 0, i64 4
  %56 = add i64 %48, 6
  %57 = getelementptr inbounds i8, i8* %1, i64 %56
  %58 = bitcast [5 x i8]* %9 to i32*
  %59 = bitcast i8* %57 to i32*
  %60 = load i32, i32* %58, align 4
  store i32 %60, i32* %59, align 1
  %61 = load i8, i8* %55, align 4
  store i8 %61, i8* %2, align 1
  br label %62

62:                                               ; preds = %47, %54
  %63 = phi i1 [ true, %54 ], [ false, %47 ]
  call void @llvm.lifetime.end.p0i8(i64 5, i8* nonnull %49) #3
  br label %64

64:                                               ; preds = %41, %62
  %65 = phi i1 [ %63, %62 ], [ false, %41 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42) #3
  br label %68

66:                                               ; preds = %29, %13, %21, %24, %7
  %67 = tail call fastcc zeroext i1 @_ZN4bsslL14do_seal_recordEP6ssl_stPhS2_S2_hPKhm(%struct.ssl_st* %0, i8* %1, i8* %2, i8* %3, i8 zeroext %4, i8* %5, i64 %6)
  br label %68

68:                                               ; preds = %64, %37, %66
  %69 = phi i1 [ %67, %66 ], [ %65, %64 ], [ false, %37 ]
  ret i1 %69
}

declare void @_ZN4bssl20ssl_do_info_callbackEPK6ssl_stii(%struct.ssl_st*, i32, i32) local_unnamed_addr #2

declare void @ERR_add_error_dataf(i8*, ...) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4bssl10OpenRecordEP6ssl_stPNS_4SpanIhEEPmPhS3_(%struct.ssl_st*, %"class.bssl::Span"* nocapture, i64* nocapture, i8*, i8*, i64) local_unnamed_addr #0 {
  %7 = alloca %"class.bssl::Span", align 8
  %8 = alloca i8, align 1
  %9 = alloca %"class.bssl::Span", align 8
  %10 = tail call i32 @SSL_in_init(%struct.ssl_st* %0) #3
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %18

12:                                               ; preds = %6
  %13 = tail call i32 @SSL_is_dtls(%struct.ssl_st* %0) #3
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %12
  %16 = tail call zeroext i16 @_ZN4bssl20ssl_protocol_versionEPK6ssl_st(%struct.ssl_st* %0) #3
  %17 = icmp ugt i16 %16, 771
  br i1 %17, label %18, label %19

18:                                               ; preds = %12, %6, %15
  store i8 80, i8* %3, align 1
  br label %32

19:                                               ; preds = %15
  %20 = bitcast %"class.bssl::Span"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %20) #3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 0, i64 16, i1 false) #3
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %8) #3
  store i8 0, i8* %8, align 1
  %21 = getelementptr inbounds %"class.bssl::Span", %"class.bssl::Span"* %9, i64 0, i32 0
  store i8* %4, i8** %21, align 8
  %22 = getelementptr inbounds %"class.bssl::Span", %"class.bssl::Span"* %9, i64 0, i32 1
  store i64 %5, i64* %22, align 8
  %23 = call i32 @_ZN4bssl15tls_open_recordEP6ssl_stPhPNS_4SpanIhEEPmS2_S4_(%struct.ssl_st* %0, i8* nonnull %8, %"class.bssl::Span"* nonnull %7, i64* %2, i8* %3, %"class.bssl::Span"* nonnull byval(%"class.bssl::Span") align 8 %9)
  switch i32 %23, label %29 [
    i32 0, label %24
    i32 1, label %30
    i32 2, label %30
    i32 3, label %30
    i32 4, label %30
  ]

24:                                               ; preds = %19
  %25 = load i8, i8* %8, align 1
  switch i8 %25, label %26 [
    i8 23, label %27
    i8 21, label %27
  ]

26:                                               ; preds = %24
  store i8 10, i8* %3, align 1
  br label %30

27:                                               ; preds = %24, %24
  %28 = bitcast %"class.bssl::Span"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* nonnull align 8 %20, i64 16, i1 false)
  br label %30

29:                                               ; preds = %19
  br label %30

30:                                               ; preds = %19, %19, %19, %19, %29, %27, %26
  %31 = phi i32 [ 4, %29 ], [ 4, %26 ], [ 0, %27 ], [ %23, %19 ], [ %23, %19 ], [ %23, %19 ], [ %23, %19 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %8) #3
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %20) #3
  br label %32

32:                                               ; preds = %30, %18
  %33 = phi i32 [ 4, %18 ], [ %31, %30 ]
  ret i32 %33
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN4bssl19SealRecordPrefixLenEPK6ssl_stm(%struct.ssl_st* nocapture readonly, i64) local_unnamed_addr #0 {
  %3 = icmp ugt i64 %1, 1
  br i1 %3, label %4, label %36

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 8
  %6 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %5, align 8
  %7 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %6, i64 0, i32 33, i32 0, i32 0, i32 0
  %8 = load %"class.bssl::SSLAEADContext"*, %"class.bssl::SSLAEADContext"** %7, align 8
  %9 = getelementptr inbounds %"class.bssl::SSLAEADContext", %"class.bssl::SSLAEADContext"* %8, i64 0, i32 0
  %10 = load %struct.ssl_cipher_st*, %struct.ssl_cipher_st** %9, align 8
  %11 = icmp eq %struct.ssl_cipher_st* %10, null
  br i1 %11, label %36, label %12

12:                                               ; preds = %4
  %13 = tail call zeroext i16 @_ZNK4bssl14SSLAEADContext15ProtocolVersionEv(%"class.bssl::SSLAEADContext"* %8) #3
  %14 = icmp ult i16 %13, 770
  br i1 %14, label %15, label %36

15:                                               ; preds = %12
  %16 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 20
  %17 = load i32, i32* %16, align 4
  %18 = and i32 %17, 256
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %36, label %20

20:                                               ; preds = %15
  %21 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %5, align 8
  %22 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %21, i64 0, i32 33, i32 0, i32 0, i32 0
  %23 = load %"class.bssl::SSLAEADContext"*, %"class.bssl::SSLAEADContext"** %22, align 8
  %24 = getelementptr inbounds %"class.bssl::SSLAEADContext", %"class.bssl::SSLAEADContext"* %23, i64 0, i32 0
  %25 = load %struct.ssl_cipher_st*, %struct.ssl_cipher_st** %24, align 8
  %26 = tail call i32 @SSL_CIPHER_is_block_cipher(%struct.ssl_cipher_st* %25) #3
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %36, label %28

28:                                               ; preds = %20
  %29 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %5, align 8
  %30 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %29, i64 0, i32 33, i32 0, i32 0, i32 0
  %31 = load %"class.bssl::SSLAEADContext"*, %"class.bssl::SSLAEADContext"** %30, align 8
  %32 = getelementptr inbounds %"class.bssl::SSLAEADContext", %"class.bssl::SSLAEADContext"* %31, i64 0, i32 0
  %33 = load %struct.ssl_cipher_st*, %struct.ssl_cipher_st** %32, align 8
  %34 = tail call i64 @_ZN4bssl31ssl_cipher_get_record_split_lenEPK13ssl_cipher_st(%struct.ssl_cipher_st* %33) #3
  %35 = add i64 %34, 9
  br label %43

36:                                               ; preds = %20, %4, %12, %15, %2
  %37 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 8
  %38 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %37, align 8
  %39 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %38, i64 0, i32 33, i32 0, i32 0, i32 0
  %40 = load %"class.bssl::SSLAEADContext"*, %"class.bssl::SSLAEADContext"** %39, align 8
  %41 = tail call i64 @_ZNK4bssl14SSLAEADContext16ExplicitNonceLenEv(%"class.bssl::SSLAEADContext"* %40) #3
  %42 = add i64 %41, 5
  br label %43

43:                                               ; preds = %28, %36
  %44 = phi i64 [ %35, %28 ], [ %42, %36 ]
  ret i64 %44
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN4bssl19SealRecordSuffixLenEPK6ssl_stm(%struct.ssl_st* nocapture readonly, i64) local_unnamed_addr #0 {
  %3 = alloca i64, align 8
  %4 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #3
  store i64 -6148914691236517206, i64* %3, align 8
  %5 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 8
  %6 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %5, align 8
  %7 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %6, i64 0, i32 33, i32 0, i32 0, i32 0
  %8 = load %"class.bssl::SSLAEADContext"*, %"class.bssl::SSLAEADContext"** %7, align 8
  %9 = getelementptr inbounds %"class.bssl::SSLAEADContext", %"class.bssl::SSLAEADContext"* %8, i64 0, i32 0
  %10 = load %struct.ssl_cipher_st*, %struct.ssl_cipher_st** %9, align 8
  %11 = icmp eq %struct.ssl_cipher_st* %10, null
  br i1 %11, label %16, label %12

12:                                               ; preds = %2
  %13 = tail call zeroext i16 @_ZNK4bssl14SSLAEADContext15ProtocolVersionEv(%"class.bssl::SSLAEADContext"* %8) #3
  %14 = icmp ugt i16 %13, 771
  %15 = zext i1 %14 to i64
  br label %16

16:                                               ; preds = %12, %2
  %17 = phi i64 [ 0, %2 ], [ %15, %12 ]
  %18 = icmp ugt i64 %1, 1
  br i1 %18, label %19, label %46

19:                                               ; preds = %16
  %20 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %5, align 8
  %21 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %20, i64 0, i32 33, i32 0, i32 0, i32 0
  %22 = load %"class.bssl::SSLAEADContext"*, %"class.bssl::SSLAEADContext"** %21, align 8
  %23 = getelementptr inbounds %"class.bssl::SSLAEADContext", %"class.bssl::SSLAEADContext"* %22, i64 0, i32 0
  %24 = load %struct.ssl_cipher_st*, %struct.ssl_cipher_st** %23, align 8
  %25 = icmp eq %struct.ssl_cipher_st* %24, null
  br i1 %25, label %43, label %26

26:                                               ; preds = %19
  %27 = tail call zeroext i16 @_ZNK4bssl14SSLAEADContext15ProtocolVersionEv(%"class.bssl::SSLAEADContext"* %22) #3
  %28 = icmp ult i16 %27, 770
  br i1 %28, label %29, label %43

29:                                               ; preds = %26
  %30 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 20
  %31 = load i32, i32* %30, align 4
  %32 = and i32 %31, 256
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %43, label %34

34:                                               ; preds = %29
  %35 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %5, align 8
  %36 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %35, i64 0, i32 33, i32 0, i32 0, i32 0
  %37 = load %"class.bssl::SSLAEADContext"*, %"class.bssl::SSLAEADContext"** %36, align 8
  %38 = getelementptr inbounds %"class.bssl::SSLAEADContext", %"class.bssl::SSLAEADContext"* %37, i64 0, i32 0
  %39 = load %struct.ssl_cipher_st*, %struct.ssl_cipher_st** %38, align 8
  %40 = tail call i32 @SSL_CIPHER_is_block_cipher(%struct.ssl_cipher_st* %39) #3
  %41 = icmp ne i32 %40, 0
  %42 = zext i1 %41 to i64
  br label %43

43:                                               ; preds = %19, %26, %29, %34
  %44 = phi i64 [ 0, %29 ], [ 0, %26 ], [ 0, %19 ], [ %42, %34 ]
  %45 = sub nuw i64 %1, %44
  br label %46

46:                                               ; preds = %16, %43
  %47 = phi i64 [ %1, %16 ], [ %45, %43 ]
  %48 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %5, align 8
  %49 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %48, i64 0, i32 33, i32 0, i32 0, i32 0
  %50 = load %"class.bssl::SSLAEADContext"*, %"class.bssl::SSLAEADContext"** %49, align 8
  %51 = call zeroext i1 @_ZNK4bssl14SSLAEADContext9SuffixLenEPmmm(%"class.bssl::SSLAEADContext"* %50, i64* nonnull %3, i64 %47, i64 %17) #3
  br i1 %51, label %53, label %52

52:                                               ; preds = %46
  call void @ERR_put_error(i32 16, i32 0, i32 68, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str, i64 0, i64 0), i32 654) #3
  br label %55

53:                                               ; preds = %46
  %54 = load i64, i64* %3, align 8
  br label %55

55:                                               ; preds = %53, %52
  %56 = phi i64 [ %54, %53 ], [ 0, %52 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #3
  ret i64 %56
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4bssl10SealRecordEP6ssl_stNS_4SpanIhEES3_S3_NS2_IKhEE(%struct.ssl_st*, i8*, i64, i8*, i64, %"class.bssl::Span"* nocapture readonly byval(%"class.bssl::Span") align 8, %"class.bssl::Span.1"* nocapture readonly byval(%"class.bssl::Span.1") align 8) local_unnamed_addr #0 {
  %8 = tail call i32 @SSL_in_init(%struct.ssl_st* %0) #3
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %16

10:                                               ; preds = %7
  %11 = tail call i32 @SSL_is_dtls(%struct.ssl_st* %0) #3
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %16

13:                                               ; preds = %10
  %14 = tail call zeroext i16 @_ZN4bssl20ssl_protocol_versionEPK6ssl_st(%struct.ssl_st* %0) #3
  %15 = icmp ugt i16 %14, 771
  br i1 %15, label %16, label %17

16:                                               ; preds = %10, %7, %13
  tail call void @ERR_put_error(i32 16, i32 0, i32 68, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str, i64 0, i64 0), i32 670) #3
  br label %36

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.bssl::Span.1", %"class.bssl::Span.1"* %6, i64 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = tail call i64 @_ZN4bssl19SealRecordPrefixLenEPK6ssl_stm(%struct.ssl_st* %0, i64 %19)
  %21 = icmp eq i64 %20, %2
  %22 = icmp eq i64 %19, %4
  %23 = and i1 %22, %21
  br i1 %23, label %24, label %29

24:                                               ; preds = %17
  %25 = getelementptr inbounds %"class.bssl::Span", %"class.bssl::Span"* %5, i64 0, i32 1
  %26 = load i64, i64* %25, align 8
  %27 = tail call i64 @_ZN4bssl19SealRecordSuffixLenEPK6ssl_stm(%struct.ssl_st* %0, i64 %4)
  %28 = icmp eq i64 %26, %27
  br i1 %28, label %30, label %29

29:                                               ; preds = %24, %17
  tail call void @ERR_put_error(i32 16, i32 0, i32 121, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str, i64 0, i64 0), i32 677) #3
  br label %36

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.bssl::Span", %"class.bssl::Span"* %5, i64 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = getelementptr inbounds %"class.bssl::Span.1", %"class.bssl::Span.1"* %6, i64 0, i32 0
  %34 = load i8*, i8** %33, align 8
  %35 = tail call fastcc zeroext i1 @_ZN4bsslL23tls_seal_scatter_recordEP6ssl_stPhS2_S2_hPKhm(%struct.ssl_st* %0, i8* %1, i8* %3, i8* %32, i8 zeroext 23, i8* %34, i64 %4)
  br label %36

36:                                               ; preds = %30, %29, %16
  %37 = phi i1 [ false, %16 ], [ false, %29 ], [ %35, %30 ]
  ret i1 %37
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @SSL_max_seal_overhead(%struct.ssl_st*) local_unnamed_addr #0 {
  %2 = tail call i32 @SSL_is_dtls(%struct.ssl_st* %0) #3
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %6, label %4

4:                                                ; preds = %1
  %5 = tail call i64 @_ZN4bssl22dtls_max_seal_overheadEPK6ssl_stNS_17dtls1_use_epoch_tE(%struct.ssl_st* %0, i32 1) #3
  br label %48

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 8
  %8 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %7, align 8
  %9 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %8, i64 0, i32 33, i32 0, i32 0, i32 0
  %10 = load %"class.bssl::SSLAEADContext"*, %"class.bssl::SSLAEADContext"** %9, align 8
  %11 = tail call i64 @_ZNK4bssl14SSLAEADContext11MaxOverheadEv(%"class.bssl::SSLAEADContext"* %10) #3
  %12 = add i64 %11, 5
  %13 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %7, align 8
  %14 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %13, i64 0, i32 33, i32 0, i32 0, i32 0
  %15 = load %"class.bssl::SSLAEADContext"*, %"class.bssl::SSLAEADContext"** %14, align 8
  %16 = getelementptr inbounds %"class.bssl::SSLAEADContext", %"class.bssl::SSLAEADContext"* %15, i64 0, i32 0
  %17 = load %struct.ssl_cipher_st*, %struct.ssl_cipher_st** %16, align 8
  %18 = icmp eq %struct.ssl_cipher_st* %17, null
  br i1 %18, label %48, label %19

19:                                               ; preds = %6
  %20 = tail call zeroext i16 @_ZNK4bssl14SSLAEADContext15ProtocolVersionEv(%"class.bssl::SSLAEADContext"* %15) #3
  %21 = icmp ugt i16 %20, 771
  %22 = add i64 %11, 6
  %23 = select i1 %21, i64 %22, i64 %12
  %24 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %7, align 8
  %25 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %24, i64 0, i32 33, i32 0, i32 0, i32 0
  %26 = load %"class.bssl::SSLAEADContext"*, %"class.bssl::SSLAEADContext"** %25, align 8
  %27 = getelementptr inbounds %"class.bssl::SSLAEADContext", %"class.bssl::SSLAEADContext"* %26, i64 0, i32 0
  %28 = load %struct.ssl_cipher_st*, %struct.ssl_cipher_st** %27, align 8
  %29 = icmp eq %struct.ssl_cipher_st* %28, null
  br i1 %29, label %48, label %30

30:                                               ; preds = %19
  %31 = tail call zeroext i16 @_ZNK4bssl14SSLAEADContext15ProtocolVersionEv(%"class.bssl::SSLAEADContext"* %26) #3
  %32 = icmp ult i16 %31, 770
  br i1 %32, label %33, label %48

33:                                               ; preds = %30
  %34 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 20
  %35 = load i32, i32* %34, align 4
  %36 = and i32 %35, 256
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %48, label %38

38:                                               ; preds = %33
  %39 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %7, align 8
  %40 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %39, i64 0, i32 33, i32 0, i32 0, i32 0
  %41 = load %"class.bssl::SSLAEADContext"*, %"class.bssl::SSLAEADContext"** %40, align 8
  %42 = getelementptr inbounds %"class.bssl::SSLAEADContext", %"class.bssl::SSLAEADContext"* %41, i64 0, i32 0
  %43 = load %struct.ssl_cipher_st*, %struct.ssl_cipher_st** %42, align 8
  %44 = tail call i32 @SSL_CIPHER_is_block_cipher(%struct.ssl_cipher_st* %43) #3
  %45 = icmp ne i32 %44, 0
  %46 = zext i1 %45 to i64
  %47 = shl i64 %23, %46
  ret i64 %47

48:                                               ; preds = %6, %19, %30, %33, %4
  %49 = phi i64 [ %5, %4 ], [ %23, %33 ], [ %23, %30 ], [ %23, %19 ], [ %12, %6 ]
  ret i64 %49
}

declare i64 @_ZN4bssl22dtls_max_seal_overheadEPK6ssl_stNS_17dtls1_use_epoch_tE(%struct.ssl_st*, i32) local_unnamed_addr #2

declare i64 @_ZNK4bssl14SSLAEADContext11MaxOverheadEv(%"class.bssl::SSLAEADContext"*) local_unnamed_addr #2

declare i32 @SSL_CIPHER_is_block_cipher(%struct.ssl_cipher_st*) local_unnamed_addr #2

declare zeroext i1 @_ZNK4bssl14SSLAEADContext9SuffixLenEPmmm(%"class.bssl::SSLAEADContext"*, i64*, i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN4bsslL14do_seal_recordEP6ssl_stPhS2_S2_hPKhm(%struct.ssl_st*, i8*, i8*, i8*, i8 zeroext, i8*, i64) unnamed_addr #0 {
  %8 = alloca i8, align 1
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca %"class.bssl::Span.1", align 8
  store i8 %4, i8* %8, align 1
  %12 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 8
  %13 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %12, align 8
  %14 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %13, i64 0, i32 33, i32 0, i32 0, i32 0
  %15 = load %"class.bssl::SSLAEADContext"*, %"class.bssl::SSLAEADContext"** %14, align 8
  %16 = getelementptr inbounds %"class.bssl::SSLAEADContext", %"class.bssl::SSLAEADContext"* %15, i64 0, i32 0
  %17 = load %struct.ssl_cipher_st*, %struct.ssl_cipher_st** %16, align 8
  %18 = icmp eq %struct.ssl_cipher_st* %17, null
  br i1 %18, label %24, label %19

19:                                               ; preds = %7
  %20 = tail call zeroext i16 @_ZNK4bssl14SSLAEADContext15ProtocolVersionEv(%"class.bssl::SSLAEADContext"* %15) #3
  %21 = icmp ugt i16 %20, 771
  %22 = zext i1 %21 to i64
  %23 = select i1 %21, i8* %8, i8* null
  br label %24

24:                                               ; preds = %19, %7
  %25 = phi i64 [ 0, %7 ], [ %22, %19 ]
  %26 = phi i8* [ null, %7 ], [ %23, %19 ]
  %27 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #3
  store i64 -6148914691236517206, i64* %9, align 8
  %28 = bitcast i64* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #3
  store i64 -6148914691236517206, i64* %10, align 8
  %29 = call zeroext i1 @_ZNK4bssl14SSLAEADContext9SuffixLenEPmmm(%"class.bssl::SSLAEADContext"* %15, i64* nonnull %9, i64 %6, i64 %25) #3
  br i1 %29, label %30, label %32

30:                                               ; preds = %24
  %31 = call zeroext i1 @_ZNK4bssl14SSLAEADContext13CiphertextLenEPmmm(%"class.bssl::SSLAEADContext"* %15, i64* nonnull %10, i64 %6, i64 %25) #3
  br i1 %31, label %33, label %32

32:                                               ; preds = %30, %24
  call void @ERR_put_error(i32 16, i32 0, i32 200, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str, i64 0, i64 0), i32 392) #3
  br label %69

33:                                               ; preds = %30
  %34 = icmp eq i64 %25, 0
  %35 = select i1 %34, i8 %4, i8 23
  store i8 %35, i8* %1, align 1
  %36 = call zeroext i16 @_ZNK4bssl14SSLAEADContext13RecordVersionEv(%"class.bssl::SSLAEADContext"* %15) #3
  %37 = lshr i16 %36, 8
  %38 = trunc i16 %37 to i8
  %39 = getelementptr inbounds i8, i8* %1, i64 1
  store i8 %38, i8* %39, align 1
  %40 = trunc i16 %36 to i8
  %41 = getelementptr inbounds i8, i8* %1, i64 2
  store i8 %40, i8* %41, align 1
  %42 = load i64, i64* %10, align 8
  %43 = lshr i64 %42, 8
  %44 = trunc i64 %43 to i8
  %45 = getelementptr inbounds i8, i8* %1, i64 3
  store i8 %44, i8* %45, align 1
  %46 = trunc i64 %42 to i8
  %47 = getelementptr inbounds i8, i8* %1, i64 4
  store i8 %46, i8* %47, align 1
  %48 = ptrtoint i8* %1 to i64
  %49 = getelementptr inbounds i8, i8* %1, i64 5
  %50 = load i8, i8* %1, align 1
  %51 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %12, align 8
  %52 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %51, i64 0, i32 1, i64 0
  %53 = bitcast %"class.bssl::Span.1"* %11 to i64*
  store i64 %48, i64* %53, align 8
  %54 = getelementptr inbounds %"class.bssl::Span.1", %"class.bssl::Span.1"* %11, i64 0, i32 1
  store i64 5, i64* %54, align 8
  %55 = call zeroext i1 @_ZN4bssl14SSLAEADContext11SealScatterEPhS1_S1_htPKhNS_4SpanIS2_EES3_mS3_m(%"class.bssl::SSLAEADContext"* %15, i8* %49, i8* %2, i8* %3, i8 zeroext %50, i16 zeroext %36, i8* %52, %"class.bssl::Span.1"* nonnull byval(%"class.bssl::Span.1") align 8 %11, i8* %5, i64 %6, i8* %26, i64 %25) #3
  br i1 %55, label %56, label %69

56:                                               ; preds = %33
  %57 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %12, align 8
  br label %58

58:                                               ; preds = %62, %56
  %59 = phi i64 [ 8, %56 ], [ %60, %62 ]
  %60 = add nsw i64 %59, -1
  %61 = icmp ult i64 %60, 8
  br i1 %61, label %62, label %67

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %57, i64 0, i32 1, i64 %60
  %64 = load i8, i8* %63, align 1
  %65 = add i8 %64, 1
  store i8 %65, i8* %63, align 1
  %66 = icmp eq i8 %65, 0
  br i1 %66, label %58, label %68

67:                                               ; preds = %58
  call void @ERR_put_error(i32 16, i32 0, i32 69, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str, i64 0, i64 0), i32 161) #3
  br label %69

68:                                               ; preds = %62
  call void @_ZN4bssl19ssl_do_msg_callbackEPK6ssl_stiiNS_4SpanIKhEE(%struct.ssl_st* %0, i32 1, i32 256, i8* %1, i64 5) #3
  br label %69

69:                                               ; preds = %68, %33, %67, %32
  %70 = phi i1 [ false, %32 ], [ true, %68 ], [ false, %67 ], [ false, %33 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #3
  ret i1 %70
}

declare zeroext i1 @_ZNK4bssl14SSLAEADContext13CiphertextLenEPmmm(%"class.bssl::SSLAEADContext"*, i64*, i64, i64) local_unnamed_addr #2

declare zeroext i1 @_ZN4bssl14SSLAEADContext11SealScatterEPhS1_S1_htPKhNS_4SpanIS2_EES3_mS3_m(%"class.bssl::SSLAEADContext"*, i8*, i8*, i8*, i8 zeroext, i16 zeroext, i8*, %"class.bssl::Span.1"* byval(%"class.bssl::Span.1") align 8, i8*, i64, i8*, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
