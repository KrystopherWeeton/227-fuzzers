; ModuleID = '../../cc/paint/display_item_list.cc'
source_filename = "../../cc/paint/display_item_list.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%"struct.cc::PlaybackParams" = type <{ %"class.cc::ImageProvider"*, %class.SkM44, %"class.base::RepeatingCallback", %"class.base::RepeatingCallback.103", %"class.absl::optional.104", [6 x i8] }>
%"class.cc::ImageProvider" = type opaque
%class.SkM44 = type { [16 x float] }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.101 }
%class.scoped_refptr.101 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.102", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.102" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::RepeatingCallback.103" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.absl::optional.104" = type { %"class.absl::optional_internal::optional_data.105" }
%"class.absl::optional_internal::optional_data.105" = type { %"class.absl::optional_internal::optional_data_base.106" }
%"class.absl::optional_internal::optional_data_base.106" = type { %"class.absl::optional_internal::optional_data_dtor_base.107" }
%"class.absl::optional_internal::optional_data_dtor_base.107" = type { i8, %union.anon.108 }
%union.anon.108 = type { i8 }
%struct.SkRect = type { float, float, float, float }
%class.sk_sp.145 = type { %class.SkBBoxHierarchy* }
%class.SkBBoxHierarchy = type { %class.SkRefCnt.base, [4 x i8] }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"class.std::__1::unique_ptr.146" = type { %"class.std::__1::__compressed_pair.147" }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.148" }
%"struct.std::__1::__compressed_pair_elem.148" = type { %class.SkRecorder* }
%class.SkRecorder = type opaque
%class.sk_sp.152 = type { %class.SkRecord* }
%class.SkRecord = type opaque
%"class.std::__1::unique_ptr.153" = type { %"class.std::__1::__compressed_pair.154" }
%"class.std::__1::__compressed_pair.154" = type { %"struct.std::__1::__compressed_pair_elem.155" }
%"struct.std::__1::__compressed_pair_elem.155" = type { %class.SkMiniRecorder* }
%class.SkMiniRecorder = type opaque
%"class.cc::DisplayItemList" = type <{ %"class.base::RefCountedThreadSafe", [4 x i8], %"class.cc::RTree", %"class.cc::DiscardableImageMap", %"class.cc::PaintOpBuffer", %"class.std::__1::vector.68", %"class.std::__1::vector.75", %"class.std::__1::vector.82", i32, [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.cc::RTree" = type <{ i64, %"struct.cc::RTree<unsigned long>::Branch", %"class.std::__1::vector", i8, [7 x i8] }>
%"struct.cc::RTree<unsigned long>::Branch" = type { %"struct.cc::RTree<unsigned long>::Node"*, i64, %"class.gfx::Rect" }
%"struct.cc::RTree<unsigned long>::Node" = type { i16, i16, [11 x %"struct.cc::RTree<unsigned long>::Branch"] }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.cc::RTree<unsigned long>::Node"*, %"struct.cc::RTree<unsigned long>::Node"*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.cc::RTree<unsigned long>::Node"* }
%"class.cc::DiscardableImageMap" = type { %"class.base::flat_map", %"class.std::__1::vector.9", %"class.base::flat_map.23", i8, i8, [6 x i8], %"class.cc::RTree.33", %"class.std::__1::vector.60" }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.2" }
%"class.std::__1::vector.2" = type { %"class.std::__1::__vector_base.3" }
%"class.std::__1::__vector_base.3" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.4" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.std::__1::pair"* }
%"class.std::__1::vector.9" = type { %"class.std::__1::__vector_base.10" }
%"class.std::__1::__vector_base.10" = type { %"struct.cc::DiscardableImageMap::AnimatedImageMetadata"*, %"struct.cc::DiscardableImageMap::AnimatedImageMetadata"*, %"class.std::__1::__compressed_pair.18" }
%"struct.cc::DiscardableImageMap::AnimatedImageMetadata" = type { i32, i32, %"class.std::__1::vector.11", i32, i32 }
%"class.std::__1::vector.11" = type { %"class.std::__1::__vector_base.12" }
%"class.std::__1::__vector_base.12" = type { %"struct.cc::FrameMetadata"*, %"struct.cc::FrameMetadata"*, %"class.std::__1::__compressed_pair.13" }
%"struct.cc::FrameMetadata" = type { i8, %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"struct.cc::FrameMetadata"* }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"struct.cc::DiscardableImageMap::AnimatedImageMetadata"* }
%"class.base::flat_map.23" = type { %"class.base::internal::flat_tree.24" }
%"class.base::internal::flat_tree.24" = type { %"class.std::__1::vector.25" }
%"class.std::__1::vector.25" = type { %"class.std::__1::__vector_base.26" }
%"class.std::__1::__vector_base.26" = type { %"struct.std::__1::pair.27"*, %"struct.std::__1::pair.27"*, %"class.std::__1::__compressed_pair.28" }
%"struct.std::__1::pair.27" = type { i32, i32 }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"struct.std::__1::pair.27"* }
%"class.cc::RTree.33" = type <{ i64, %"struct.cc::RTree<cc::DrawImage>::Branch", %"class.std::__1::vector.52", i8, [7 x i8] }>
%"struct.cc::RTree<cc::DrawImage>::Branch" = type { %"struct.cc::RTree<cc::DrawImage>::Node"*, %"class.cc::DrawImage", %"class.gfx::Rect" }
%"struct.cc::RTree<cc::DrawImage>::Node" = type opaque
%"class.cc::DrawImage" = type <{ %"class.cc::PaintImage", i8, [3 x i8], %struct.SkIRect, i32, %struct.SkSize, i8, [7 x i8], %"class.absl::optional", %"class.absl::optional.47", float, [4 x i8] }>
%"class.cc::PaintImage" = type { %class.sk_sp, %class.sk_sp.40, %"class.gfx::Rect", i32, %class.sk_sp.44, %class.sk_sp.45, i32, i32, i32, i32, i8, i8, i32, i32, %class.sk_sp, %class.scoped_refptr }
%class.sk_sp.40 = type { %"class.cc::PaintOpBuffer"* }
%class.sk_sp.44 = type { %"class.cc::PaintImageGenerator"* }
%"class.cc::PaintImageGenerator" = type opaque
%class.sk_sp.45 = type { %"class.cc::TextureBacking"* }
%"class.cc::TextureBacking" = type opaque
%class.sk_sp = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.34, i32, i32 }
%class.sk_sp.34 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.35" }
%"struct.std::__1::atomic.35" = type { %"struct.std::__1::__atomic_base.36" }
%"struct.std::__1::__atomic_base.36" = type { %"struct.std::__1::__atomic_base.37" }
%"struct.std::__1::__atomic_base.37" = type { %"struct.std::__1::__cxx_atomic_impl.38" }
%"struct.std::__1::__cxx_atomic_impl.38" = type { %"struct.std::__1::__cxx_atomic_base_impl.39" }
%"struct.std::__1::__cxx_atomic_base_impl.39" = type { i8 }
%struct.SkISize = type { i32, i32 }
%class.scoped_refptr = type { %"class.cc::PaintWorkletInput"* }
%"class.cc::PaintWorkletInput" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.46", [4 x i8] }>
%"class.base::RefCountedThreadSafe.46" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%struct.SkIRect = type { i32, i32, i32, i32 }
%struct.SkSize = type { float, float }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { i64 }
%"class.absl::optional.47" = type { %"class.absl::optional_internal::optional_data.48" }
%"class.absl::optional_internal::optional_data.48" = type { %"class.absl::optional_internal::optional_data_base.49" }
%"class.absl::optional_internal::optional_data_base.49" = type { %"class.absl::optional_internal::optional_data_dtor_base.50" }
%"class.absl::optional_internal::optional_data_dtor_base.50" = type { i8, %union.anon.51 }
%union.anon.51 = type { %"class.gfx::ColorSpace" }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%"class.std::__1::vector.52" = type { %"class.std::__1::__vector_base.53" }
%"class.std::__1::__vector_base.53" = type { %"struct.cc::RTree<cc::DrawImage>::Node"*, %"struct.cc::RTree<cc::DrawImage>::Node"*, %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"struct.cc::RTree<cc::DrawImage>::Node"* }
%"class.std::__1::vector.60" = type { %"class.std::__1::__vector_base.61" }
%"class.std::__1::__vector_base.61" = type { %"struct.std::__1::pair.62"*, %"struct.std::__1::pair.62"*, %"class.std::__1::__compressed_pair.63" }
%"struct.std::__1::pair.62" = type opaque
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"struct.std::__1::pair.62"* }
%"class.cc::PaintOpBuffer" = type <{ %class.SkRefCnt.base, [4 x i8], %"class.std::__1::unique_ptr", i64, i64, i64, i64, i64, i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { i8* }
%"class.std::__1::vector.68" = type { %"class.std::__1::__vector_base.69" }
%"class.std::__1::__vector_base.69" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.70" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %"class.gfx::Rect"* }
%"class.std::__1::vector.75" = type { %"class.std::__1::__vector_base.76" }
%"class.std::__1::__vector_base.76" = type { i64*, i64*, %"class.std::__1::__compressed_pair.77" }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"struct.std::__1::__compressed_pair_elem.78" = type { i64* }
%"class.std::__1::vector.82" = type { %"class.std::__1::__vector_base.83" }
%"class.std::__1::__vector_base.83" = type { %"struct.cc::DisplayItemList::PairedBeginInfo"*, %"struct.cc::DisplayItemList::PairedBeginInfo"*, %"class.std::__1::__compressed_pair.84" }
%"struct.cc::DisplayItemList::PairedBeginInfo" = type { i64, i64 }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { %"struct.cc::DisplayItemList::PairedBeginInfo"* }
%class.SkCanvas = type { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.89, [384 x i64], %class.sk_sp.90, %class.SkSurfaceProps, i32, %"class.std::__1::unique_ptr.91", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.95" }
%class.SkDeque = type { i8*, i8*, %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"*, i64, i8*, i32, i32 }
%"struct.SkDeque::Block" = type opaque
%"class.SkCanvas::MCRec" = type opaque
%class.sk_sp.89 = type { %class.SkMarkerStack* }
%class.SkMarkerStack = type opaque
%class.sk_sp.90 = type { %class.SkBaseDevice* }
%class.SkBaseDevice = type opaque
%class.SkSurfaceProps = type { i32, i32 }
%"class.std::__1::unique_ptr.91" = type { %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { %class.SkRasterHandleAllocator* }
%class.SkRasterHandleAllocator = type { i32 (...)** }
%class.SkSurface_Base = type opaque
%"class.std::__1::unique_ptr.95" = type { %"class.std::__1::__compressed_pair.96" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.97" = type { %class.SkGlyphRunBuilder* }
%class.SkGlyphRunBuilder = type opaque
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::vector.109" = type { %"class.std::__1::__vector_base.110" }
%"class.std::__1::__vector_base.110" = type { %"struct.cc::NodeInfo"*, %"struct.cc::NodeInfo"*, %"class.std::__1::__compressed_pair.111" }
%"struct.cc::NodeInfo" = type { i32, %"class.gfx::Rect" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"struct.cc::NodeInfo"* }
%"class.cc::PaintOpBuffer::OffsetIterator" = type { %"class.cc::PaintOpBuffer"*, i8*, %"class.std::__1::vector.75"*, i64, i64 }
%class.anon = type { %"class.std::__1::vector.109"* }
%"class.cc::PaintOp" = type { i32 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type opaque
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::vector.246" = type { %"class.std::__1::__vector_base.247" }
%"class.std::__1::__vector_base.247" = type { %"struct.cc::RTree<unsigned long>::Branch"*, %"struct.cc::RTree<unsigned long>::Branch"*, %"class.std::__1::__compressed_pair.248" }
%"class.std::__1::__compressed_pair.248" = type { %"struct.std::__1::__compressed_pair_elem.249" }
%"struct.std::__1::__compressed_pair_elem.249" = type { %"struct.cc::RTree<unsigned long>::Branch"* }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"class.std::__1::unique_ptr.119" = type { %"class.std::__1::__compressed_pair.120" }
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.121" }
%"struct.std::__1::__compressed_pair_elem.121" = type { %"class.base::trace_event::TracedValue"* }
%"class.base::trace_event::TracedValue" = type { %"class.base::trace_event::ConvertableToTraceFormat", %"class.std::__1::unique_ptr.122" }
%"class.base::trace_event::ConvertableToTraceFormat" = type { i32 (...)** }
%"class.std::__1::unique_ptr.122" = type { %"class.std::__1::__compressed_pair.123" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"class.base::trace_event::TracedValue::Writer"* }
%"class.base::trace_event::TracedValue::Writer" = type { i32 (...)** }
%"class.protozero::HeapBuffered" = type { %"class.protozero::ScatteredHeapBuffer", %"class.protozero::ScatteredStreamWriter", %"class.protozero::RootMessage" }
%"class.protozero::ScatteredHeapBuffer" = type { %"class.protozero::ScatteredStreamWriter::Delegate", i64, i64, %"class.protozero::ScatteredStreamWriter"*, %"class.std::__1::vector.205", %"class.protozero::ScatteredHeapBuffer::Slice" }
%"class.protozero::ScatteredStreamWriter::Delegate" = type { i32 (...)** }
%"class.std::__1::vector.205" = type { %"class.std::__1::__vector_base.206" }
%"class.std::__1::__vector_base.206" = type { %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.std::__1::__compressed_pair.213" }
%"class.std::__1::__compressed_pair.213" = type { %"struct.std::__1::__compressed_pair_elem.214" }
%"struct.std::__1::__compressed_pair_elem.214" = type { %"class.protozero::ScatteredHeapBuffer::Slice"* }
%"class.protozero::ScatteredHeapBuffer::Slice" = type { %"class.std::__1::unique_ptr.207", i64, i64 }
%"class.std::__1::unique_ptr.207" = type { %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { i8* }
%"class.protozero::ScatteredStreamWriter" = type { %"class.protozero::ScatteredStreamWriter::Delegate"*, %"struct.protozero::ContiguousMemoryRange", i8*, i64 }
%"struct.protozero::ContiguousMemoryRange" = type { i8*, i8* }
%"class.protozero::RootMessage" = type { %"class.perfetto::protos::pbzero::DebugAnnotation.base", %"class.protozero::MessageArena" }
%"class.perfetto::protos::pbzero::DebugAnnotation.base" = type { %"class.protozero::Message.base" }
%"class.protozero::Message.base" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8 }>
%"class.protozero::Message" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8, [7 x i8] }>
%"class.protozero::MessageArena" = type { %"class.std::__1::list" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.218" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.143" }
%"struct.std::__1::__compressed_pair_elem.143" = type { i64 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.131" }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.132" }
%"struct.std::__1::__compressed_pair_elem.132" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.133 }
%union.anon.133 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::trace_event::TracedValueJSON" = type { %"class.base::trace_event::TracedValue" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.137", %"class.std::__1::__compressed_pair.142" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.137" = type { %"struct.std::__1::__compressed_pair_elem.138" }
%"struct.std::__1::__compressed_pair_elem.138" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.143" }
%"class.cc::PaintOpBuffer::Iterator" = type { %"class.cc::PaintOpBuffer"*, i8*, i64 }
%class.SkPictureRecorder = type { i8, %struct.SkRect, %class.sk_sp.145, %"class.std::__1::unique_ptr.146", %class.sk_sp.152, %"class.std::__1::unique_ptr.153" }
%class.sk_sp.159 = type { %class.SkPicture* }
%class.SkPicture = type <{ %class.SkRefCnt.base, i32, %"struct.std::__1::atomic.160", [7 x i8] }>
%"struct.std::__1::atomic.160" = type { %"struct.std::__1::__atomic_base.161" }
%"struct.std::__1::__atomic_base.161" = type { %"struct.std::__1::__cxx_atomic_impl.162" }
%"struct.std::__1::__cxx_atomic_impl.162" = type { %"struct.std::__1::__cxx_atomic_base_impl.163" }
%"struct.std::__1::__cxx_atomic_base_impl.163" = type { i8 }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair.261" }
%"struct.std::__1::pair.261" = type { i64, %"class.gfx::Rect" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%class.SkBBHFactory = type { i32 (...)** }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%"class.cc::DrawImageRectOp" = type { %"class.cc::PaintOpWithFlags", %"class.cc::PaintImage", %struct.SkRect, %struct.SkRect, %struct.SkSamplingOptions, i32, %struct.SkSize }
%"class.cc::PaintOpWithFlags" = type { %"class.cc::PaintOp", [4 x i8], %"class.cc::PaintFlags" }
%"class.cc::PaintFlags" = type <{ %class.sk_sp.174, %class.sk_sp.175, %class.sk_sp.200, %class.sk_sp.201, %class.sk_sp.202, %class.sk_sp.203, i32, float, float, i32, %union.anon.204, [4 x i8] }>
%class.sk_sp.174 = type { %class.SkPathEffect* }
%class.SkPathEffect = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.sk_sp.175 = type { %"class.cc::PaintShader"* }
%"class.cc::PaintShader" = type <{ %class.SkRefCnt.base, i8, [3 x i8], i32, float, float, i32, i32, i32, i8, [3 x i8], %"class.absl::optional.176", %struct.SkPoint, %struct.SkRect, %struct.SkPoint, %struct.SkPoint, float, float, %"class.cc::PaintImage", %class.sk_sp.40, i32, %"class.absl::optional.181", %"class.std::__1::vector.186", %"class.std::__1::vector.193", %class.sk_sp.159, %class.sk_sp, i32, [4 x i8] }>
%"class.absl::optional.176" = type { %"class.absl::optional_internal::optional_data.177" }
%"class.absl::optional_internal::optional_data.177" = type { %"class.absl::optional_internal::optional_data_base.178" }
%"class.absl::optional_internal::optional_data_base.178" = type { %"class.absl::optional_internal::optional_data_dtor_base.179" }
%"class.absl::optional_internal::optional_data_dtor_base.179" = type { i8, %union.anon.180 }
%union.anon.180 = type { %class.SkMatrix }
%class.SkMatrix = type { [9 x float], i32 }
%struct.SkPoint = type { float, float }
%"class.absl::optional.181" = type { %"class.absl::optional_internal::optional_data.182" }
%"class.absl::optional_internal::optional_data.182" = type { %"class.absl::optional_internal::optional_data_base.183" }
%"class.absl::optional_internal::optional_data_base.183" = type { %"class.absl::optional_internal::optional_data_dtor_base.184" }
%"class.absl::optional_internal::optional_data_dtor_base.184" = type { i8, %union.anon.185 }
%union.anon.185 = type { %"class.gfx::SizeF" }
%"class.std::__1::vector.186" = type { %"class.std::__1::__vector_base.187" }
%"class.std::__1::__vector_base.187" = type { i32*, i32*, %"class.std::__1::__compressed_pair.188" }
%"class.std::__1::__compressed_pair.188" = type { %"struct.std::__1::__compressed_pair_elem.189" }
%"struct.std::__1::__compressed_pair_elem.189" = type { i32* }
%"class.std::__1::vector.193" = type { %"class.std::__1::__vector_base.194" }
%"class.std::__1::__vector_base.194" = type { float*, float*, %"class.std::__1::__compressed_pair.195" }
%"class.std::__1::__compressed_pair.195" = type { %"struct.std::__1::__compressed_pair_elem.196" }
%"struct.std::__1::__compressed_pair_elem.196" = type { float* }
%class.sk_sp.200 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.201 = type { %class.SkColorFilter* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.202 = type { %class.SkDrawLooper* }
%class.SkDrawLooper = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.203 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type opaque
%union.anon.204 = type { i32 }
%struct.SkSamplingOptions = type { i8, %struct.SkCubicResampler, i32, i32 }
%struct.SkCubicResampler = type { float, float }
%"class.base::trace_event::ConvertableToTraceFormat::ProtoAppender" = type { i32 (...)** }
%"class.base::trace_event::TraceEventMemoryOverhead" = type { [14 x %"struct.base::trace_event::TraceEventMemoryOverhead::ObjectCountAndSize"] }
%"struct.base::trace_event::TraceEventMemoryOverhead::ObjectCountAndSize" = type { i64, i64, i64 }

$_ZNK2cc5RTreeImE6SearchERKN3gfx4RectEPNSt3__16vectorImNS6_9allocatorImEEEEPNS7_IS3_NS8_IS3_EEEE = comdat any

$_ZN2cc13PaintOpBuffer14OffsetIteratorppEv = comdat any

$_ZN20trace_event_internal13AddTraceEventINSt3__110unique_ptrIN4base11trace_event11TracedValueENS1_14default_deleteIS5_EEEEEENS4_16TraceEventHandleEcPKhPKcSD_yjySD_OT_ = comdat any

$_ZN2cc13PaintOpBuffer8IteratorppEv = comdat any

$_ZN4base11trace_event15TracedValueJSOND0Ev = comdat any

$_ZNSt3__16vectorIN3gfx4RectENS_9allocatorIS2_EEE8__appendEmRKS2_ = comdat any

$_ZNK2cc5RTreeImE15SearchRecursiveEPNS1_4NodeImEERKN3gfx4RectEPNSt3__16vectorImNS9_9allocatorImEEEEPNSA_IS6_NSB_IS6_EEEE = comdat any

$_ZN2cc5RTreeImE14BuildRecursiveEPNSt3__16vectorINS1_6BranchImEENS2_9allocatorIS5_EEEEi = comdat any

$_ZNSt3__16vectorIN2cc5RTreeImE4NodeImEENS_9allocatorIS5_EEE24__emplace_back_slow_pathIJRiEEEvDpOT_ = comdat any

$_ZNSt3__16vectorIN2cc5RTreeImE6BranchImEENS_9allocatorIS5_EEE8__appendEm = comdat any

$_ZNK2cc5RTreeImE21GetAllBoundsRecursiveEPNS1_4NodeImEEPNSt3__13mapImN3gfx4RectENS5_4lessImEENS5_9allocatorINS5_4pairIKmS8_EEEEEE = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeImN3gfx4RectEEENS_19__map_value_compareImS4_NS_4lessImEELb1EEENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE = comdat any

$_ZTVN4base11trace_event15TracedValueJSONE = comdat any

@_ZN4base11trace_event16CategoryRegistry11categories_E = external global [300 x %"struct.base::trace_event::TraceCategory"], align 16
@.str = private unnamed_addr constant [26 x i8] c"DisplayItemList::Finalize\00", align 1
@_ZZNK2cc15DisplayItemList17EmitTraceSnapshotEvE28trace_event_unique_atomic216 = internal global i64 0, align 8
@.str.1 = private unnamed_addr constant [126 x i8] c"disabled-by-default-cc.debug.display_items,disabled-by-default-cc.debug.picture,disabled-by-default-devtools.timeline.picture\00", align 1
@.str.2 = private unnamed_addr constant [20 x i8] c"cc::DisplayItemList\00", align 1
@.str.3 = private unnamed_addr constant [9 x i8] c"snapshot\00", align 1
@.str.4 = private unnamed_addr constant [7 x i8] c"params\00", align 1
@.str.5 = private unnamed_addr constant [6 x i8] c"items\00", align 1
@__const._ZNK2cc15DisplayItemList10AddToValueEPN4base11trace_event11TracedValueEb.params = private unnamed_addr constant %"struct.cc::PlaybackParams" <{ %"class.cc::ImageProvider"* inttoptr (i64 -6148914691236517206 to %"class.cc::ImageProvider"*), %class.SkM44 { [16 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000] }, %"class.base::RepeatingCallback" { %"class.base::internal::CallbackBaseCopyable" { %"class.base::internal::CallbackBase" { %class.scoped_refptr.101 { %"class.base::internal::BindStateBase"* inttoptr (i64 -6148914691236517206 to %"class.base::internal::BindStateBase"*) } } } }, %"class.base::RepeatingCallback.103" { %"class.base::internal::CallbackBaseCopyable" { %"class.base::internal::CallbackBase" { %class.scoped_refptr.101 { %"class.base::internal::BindStateBase"* inttoptr (i64 -6148914691236517206 to %"class.base::internal::BindStateBase"*) } } } }, %"class.absl::optional.104" { %"class.absl::optional_internal::optional_data.105" { %"class.absl::optional_internal::optional_data_base.106" { %"class.absl::optional_internal::optional_data_dtor_base.107" { i8 -86, %union.anon.108 { i8 -86 } } } } }, [6 x i8] c"\AA\AA\AA\AA\AA\AA" }>, align 8
@.str.6 = private unnamed_addr constant [5 x i8] c"name\00", align 1
@.str.7 = private unnamed_addr constant [12 x i8] c"visual_rect\00", align 1
@.str.8 = private unnamed_addr constant [6 x i8] c"skp64\00", align 1
@.str.9 = private unnamed_addr constant [11 x i8] c"layer_rect\00", align 1
@__const._ZNK2cc15DisplayItemList10AddToValueEPN4base11trace_event11TracedValueEb.recorder.10 = private unnamed_addr constant { i8, [3 x i8], %struct.SkRect, [4 x i8], %class.sk_sp.145, %"class.std::__1::unique_ptr.146", %class.sk_sp.152, %"class.std::__1::unique_ptr.153" } { i8 -86, [3 x i8] c"\AA\AA\AA", %struct.SkRect { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, [4 x i8] c"\AA\AA\AA\AA", %class.sk_sp.145 { %class.SkBBoxHierarchy* inttoptr (i64 -6148914691236517206 to %class.SkBBoxHierarchy*) }, %"class.std::__1::unique_ptr.146" { %"class.std::__1::__compressed_pair.147" { %"struct.std::__1::__compressed_pair_elem.148" { %class.SkRecorder* inttoptr (i64 -6148914691236517206 to %class.SkRecorder*) } } }, %class.sk_sp.152 { %class.SkRecord* inttoptr (i64 -6148914691236517206 to %class.SkRecord*) }, %"class.std::__1::unique_ptr.153" { %"class.std::__1::__compressed_pair.154" { %"struct.std::__1::__compressed_pair_elem.155" { %class.SkMiniRecorder* inttoptr (i64 -6148914691236517206 to %class.SkMiniRecorder*) } } } }, align 8
@.str.11 = private unnamed_addr constant [28 x i8] c"target_offset >= op_offset_\00", align 1
@.str.12 = private unnamed_addr constant [33 x i8] c"../../cc/paint/paint_op_buffer.h\00", align 1
@.str.13 = private unnamed_addr constant [31 x i8] c"target_offset < buffer_->used_\00", align 1
@_ZTVN4base11trace_event15TracedValueJSONE = linkonce_odr hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.base::trace_event::TracedValue"*)* @_ZN4base11trace_event11TracedValueD2Ev to i8*), i8* bitcast (void (%"class.base::trace_event::TracedValueJSON"*)* @_ZN4base11trace_event15TracedValueJSOND0Ev to i8*), i8* bitcast (void (%"class.base::trace_event::TracedValue"*, %"class.std::__1::basic_string"*)* @_ZNK4base11trace_event11TracedValue19AppendAsTraceFormatEPNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE to i8*), i8* bitcast (i1 (%"class.base::trace_event::TracedValue"*, %"class.base::trace_event::ConvertableToTraceFormat::ProtoAppender"*)* @_ZN4base11trace_event11TracedValue13AppendToProtoEPNS0_24ConvertableToTraceFormat13ProtoAppenderE to i8*), i8* bitcast (void (%"class.base::trace_event::TracedValue"*, %"class.base::trace_event::TraceEventMemoryOverhead"*)* @_ZN4base11trace_event11TracedValue27EstimateTraceMemoryOverheadEPNS0_24TraceEventMemoryOverheadE to i8*)] }, comdat, align 8
@constinit = private unnamed_addr constant [16 x float] [float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00], align 4
@.str.14 = private unnamed_addr constant [29 x i8] c"op_offset_ <= buffer_->used_\00", align 1

@_ZN2cc15DisplayItemListC1ENS0_9UsageHintE = hidden unnamed_addr alias void (%"class.cc::DisplayItemList"*, i32), void (%"class.cc::DisplayItemList"*, i32)* @_ZN2cc15DisplayItemListC2ENS0_9UsageHintE
@_ZN2cc15DisplayItemListD1Ev = hidden unnamed_addr alias void (%"class.cc::DisplayItemList"*), void (%"class.cc::DisplayItemList"*)* @_ZN2cc15DisplayItemListD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc15DisplayItemListC2ENS0_9UsageHintE(%"class.cc::DisplayItemList"*, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 0, i32* %3, align 4
  %4 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 2, i32 0
  store i64 0, i64* %4, align 8
  %5 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 2, i32 1, i32 2
  %6 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 2, i32 3
  %7 = bitcast %"class.gfx::Rect"* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %7, i8 0, i64 40, i1 false) #12
  store i8 1, i8* %6, align 8
  %8 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 3
  tail call void @_ZN2cc19DiscardableImageMapC1Ev(%"class.cc::DiscardableImageMap"* %8) #12
  %9 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 4
  tail call void @_ZN2cc13PaintOpBufferC1Ev(%"class.cc::PaintOpBuffer"* %9) #12
  %10 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 5
  %11 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 8
  %12 = bitcast %"class.std::__1::vector.68"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 72, i1 false)
  store i32 %1, i32* %11, align 8
  %13 = icmp eq i32 %1, 0
  br i1 %13, label %14, label %44

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 7
  %16 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 6
  %17 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %18 = bitcast %"class.gfx::Rect"** %17 to i64*
  %19 = tail call i8* @_Znwm(i64 16384) #13
  %20 = getelementptr inbounds i8, i8* %19, i64 16384
  %21 = ptrtoint i8* %20 to i64
  %22 = insertelement <2 x i8*> undef, i8* %19, i32 0
  %23 = shufflevector <2 x i8*> %22, <2 x i8*> undef, <2 x i32> zeroinitializer
  %24 = ptrtoint <2 x i8*> %23 to <2 x i64>
  %25 = bitcast %"class.std::__1::vector.68"* %10 to <2 x i64>*
  store <2 x i64> %24, <2 x i64>* %25, align 8
  store i64 %21, i64* %18, align 8
  %26 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  %27 = bitcast i64** %26 to i64*
  %28 = tail call i8* @_Znwm(i64 8192) #13
  %29 = getelementptr inbounds i8, i8* %28, i64 8192
  %30 = ptrtoint i8* %29 to i64
  %31 = insertelement <2 x i8*> undef, i8* %28, i32 0
  %32 = shufflevector <2 x i8*> %31, <2 x i8*> undef, <2 x i32> zeroinitializer
  %33 = ptrtoint <2 x i8*> %32 to <2 x i64>
  %34 = bitcast %"class.std::__1::vector.75"* %16 to <2 x i64>*
  store <2 x i64> %33, <2 x i64>* %34, align 8
  store i64 %30, i64* %27, align 8
  %35 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 7, i32 0, i32 2, i32 0, i32 0
  %36 = bitcast %"struct.cc::DisplayItemList::PairedBeginInfo"** %35 to i64*
  %37 = tail call i8* @_Znwm(i64 512) #13
  %38 = getelementptr inbounds i8, i8* %37, i64 512
  %39 = ptrtoint i8* %38 to i64
  %40 = insertelement <2 x i8*> undef, i8* %37, i32 0
  %41 = shufflevector <2 x i8*> %40, <2 x i8*> undef, <2 x i32> zeroinitializer
  %42 = ptrtoint <2 x i8*> %41 to <2 x i64>
  %43 = bitcast %"class.std::__1::vector.82"* %15 to <2 x i64>*
  store <2 x i64> %42, <2 x i64>* %43, align 8
  store i64 %39, i64* %36, align 8
  br label %44

44:                                               ; preds = %14, %2
  ret void
}

declare void @_ZN2cc19DiscardableImageMapC1Ev(%"class.cc::DiscardableImageMap"*) unnamed_addr #1

declare void @_ZN2cc13PaintOpBufferC1Ev(%"class.cc::PaintOpBuffer"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc15DisplayItemListD2Ev(%"class.cc::DisplayItemList"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 7, i32 0, i32 0
  %3 = load %"struct.cc::DisplayItemList::PairedBeginInfo"*, %"struct.cc::DisplayItemList::PairedBeginInfo"** %2, align 8
  %4 = icmp eq %"struct.cc::DisplayItemList::PairedBeginInfo"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = ptrtoint %"struct.cc::DisplayItemList::PairedBeginInfo"* %3 to i64
  %7 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 7, i32 0, i32 1
  %8 = bitcast %"struct.cc::DisplayItemList::PairedBeginInfo"** %7 to i64*
  store i64 %6, i64* %8, align 8
  %9 = bitcast %"struct.cc::DisplayItemList::PairedBeginInfo"* %3 to i8*
  tail call void @_ZdlPv(i8* %9) #13
  br label %10

10:                                               ; preds = %1, %5
  %11 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 6, i32 0, i32 0
  %12 = load i64*, i64** %11, align 8
  %13 = icmp eq i64* %12, null
  br i1 %13, label %19, label %14

14:                                               ; preds = %10
  %15 = ptrtoint i64* %12 to i64
  %16 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 6, i32 0, i32 1
  %17 = bitcast i64** %16 to i64*
  store i64 %15, i64* %17, align 8
  %18 = bitcast i64* %12 to i8*
  tail call void @_ZdlPv(i8* %18) #13
  br label %19

19:                                               ; preds = %10, %14
  %20 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 5, i32 0, i32 0
  %21 = load %"class.gfx::Rect"*, %"class.gfx::Rect"** %20, align 8
  %22 = icmp eq %"class.gfx::Rect"* %21, null
  br i1 %22, label %28, label %23

23:                                               ; preds = %19
  %24 = ptrtoint %"class.gfx::Rect"* %21 to i64
  %25 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 5, i32 0, i32 1
  %26 = bitcast %"class.gfx::Rect"** %25 to i64*
  store i64 %24, i64* %26, align 8
  %27 = bitcast %"class.gfx::Rect"* %21 to i8*
  tail call void @_ZdlPv(i8* %27) #13
  br label %28

28:                                               ; preds = %19, %23
  %29 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 4
  tail call void @_ZN2cc13PaintOpBufferD1Ev(%"class.cc::PaintOpBuffer"* %29) #12
  %30 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 3
  tail call void @_ZN2cc19DiscardableImageMapD1Ev(%"class.cc::DiscardableImageMap"* %30) #12
  %31 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 2, i32 2, i32 0, i32 0
  %32 = load %"struct.cc::RTree<unsigned long>::Node"*, %"struct.cc::RTree<unsigned long>::Node"** %31, align 8
  %33 = icmp eq %"struct.cc::RTree<unsigned long>::Node"* %32, null
  br i1 %33, label %39, label %34

34:                                               ; preds = %28
  %35 = ptrtoint %"struct.cc::RTree<unsigned long>::Node"* %32 to i64
  %36 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 2, i32 2, i32 0, i32 1
  %37 = bitcast %"struct.cc::RTree<unsigned long>::Node"** %36 to i64*
  store i64 %35, i64* %37, align 8
  %38 = bitcast %"struct.cc::RTree<unsigned long>::Node"* %32 to i8*
  tail call void @_ZdlPv(i8* %38) #13
  br label %39

39:                                               ; preds = %28, %34
  ret void
}

; Function Attrs: nounwind
declare void @_ZN2cc13PaintOpBufferD1Ev(%"class.cc::PaintOpBuffer"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2cc19DiscardableImageMapD1Ev(%"class.cc::DiscardableImageMap"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2cc15DisplayItemList6RasterEP8SkCanvasPNS_13ImageProviderE(%"class.cc::DisplayItemList"*, %class.SkCanvas*, %"class.cc::ImageProvider"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %struct.SkRect, align 8
  %5 = alloca { <2 x float>, <2 x float> }, align 8
  %6 = alloca %"class.gfx::Rect", align 8
  %7 = alloca %"class.std::__1::vector.75", align 8
  %8 = alloca %"struct.cc::PlaybackParams", align 8
  %9 = bitcast %"class.gfx::Rect"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 16, i1 false) #12
  %10 = bitcast %struct.SkRect* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #12
  %11 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %4, i64 0, i32 2
  %12 = tail call { <2 x float>, <2 x float> } @_ZNK8SkCanvas18getLocalClipBoundsEv(%class.SkCanvas* %1) #12
  %13 = extractvalue { <2 x float>, <2 x float> } %12, 0
  %14 = extractvalue { <2 x float>, <2 x float> } %12, 1
  %15 = bitcast %struct.SkRect* %4 to <2 x float>*
  store <2 x float> %13, <2 x float>* %15, align 8
  %16 = bitcast float* %11 to <2 x float>*
  store <2 x float> %14, <2 x float>* %16, align 8
  %17 = extractelement <2 x float> %13, i32 0
  %18 = extractelement <2 x float> %14, i32 0
  %19 = fcmp olt float %17, %18
  br i1 %19, label %20, label %24

20:                                               ; preds = %3
  %21 = extractelement <2 x float> %14, i32 1
  %22 = extractelement <2 x float> %13, i32 1
  %23 = fcmp olt float %22, %21
  br i1 %23, label %25, label %24

24:                                               ; preds = %20, %3
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #12
  br label %52

25:                                               ; preds = %20
  %26 = bitcast { <2 x float>, <2 x float> }* %5 to %"class.gfx::RectF"*
  %27 = bitcast { <2 x float>, <2 x float> }* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %27) #12
  %28 = call { <2 x float>, <2 x float> } @_ZN3gfx13SkRectToRectFERK6SkRect(%struct.SkRect* nonnull dereferenceable(16) %4) #12
  %29 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 0
  %30 = extractvalue { <2 x float>, <2 x float> } %28, 0
  store <2 x float> %30, <2 x float>* %29, align 8
  %31 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 1
  %32 = extractvalue { <2 x float>, <2 x float> } %28, 1
  store <2 x float> %32, <2 x float>* %31, align 8
  %33 = call { i64, i64 } @_ZN3gfx15ToEnclosingRectERKNS_5RectFE(%"class.gfx::RectF"* nonnull dereferenceable(16) %26) #12
  %34 = extractvalue { i64, i64 } %33, 0
  %35 = extractvalue { i64, i64 } %33, 1
  %36 = bitcast %"class.gfx::Rect"* %6 to i64*
  store i64 %34, i64* %36, align 8
  %37 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %6, i64 0, i32 1
  %38 = bitcast %"class.gfx::Size"* %37 to i64*
  store i64 %35, i64* %38, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %27) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #12
  %39 = bitcast %"class.std::__1::vector.75"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %39) #12
  %40 = getelementptr inbounds %"class.std::__1::vector.75", %"class.std::__1::vector.75"* %7, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %39, i8 0, i64 24, i1 false) #12
  %41 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 2
  call void @_ZNK2cc5RTreeImE6SearchERKN3gfx4RectEPNSt3__16vectorImNS6_9allocatorImEEEEPNS7_IS3_NS8_IS3_EEEE(%"class.cc::RTree"* %41, %"class.gfx::Rect"* nonnull dereferenceable(16) %6, %"class.std::__1::vector.75"* nonnull %7, %"class.std::__1::vector.68"* null)
  %42 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 4
  %43 = bitcast %"struct.cc::PlaybackParams"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %43) #12
  call void @_ZN2cc14PlaybackParamsC1EPNS_13ImageProviderE(%"struct.cc::PlaybackParams"* nonnull %8, %"class.cc::ImageProvider"* %2) #12
  call void @_ZNK2cc13PaintOpBuffer8PlaybackEP8SkCanvasRKNS_14PlaybackParamsEPKNSt3__16vectorImNS6_9allocatorImEEEE(%"class.cc::PaintOpBuffer"* %42, %class.SkCanvas* %1, %"struct.cc::PlaybackParams"* nonnull dereferenceable(96) %8, %"class.std::__1::vector.75"* nonnull %7) #12
  call void @_ZN2cc14PlaybackParamsD1Ev(%"struct.cc::PlaybackParams"* nonnull %8) #12
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %43) #12
  %44 = load i64*, i64** %40, align 8
  %45 = icmp eq i64* %44, null
  br i1 %45, label %51, label %46

46:                                               ; preds = %25
  %47 = getelementptr inbounds %"class.std::__1::vector.75", %"class.std::__1::vector.75"* %7, i64 0, i32 0, i32 1
  %48 = ptrtoint i64* %44 to i64
  %49 = bitcast i64** %47 to i64*
  store i64 %48, i64* %49, align 8
  %50 = bitcast i64* %44 to i8*
  call void @_ZdlPv(i8* %50) #13
  br label %51

51:                                               ; preds = %25, %46
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %39) #12
  br label %52

52:                                               ; preds = %24, %51
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #12
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK2cc5RTreeImE6SearchERKN3gfx4RectEPNSt3__16vectorImNS6_9allocatorImEEEEPNS7_IS3_NS8_IS3_EEEE(%"class.cc::RTree"*, %"class.gfx::Rect"* dereferenceable(16), %"class.std::__1::vector.75"*, %"class.std::__1::vector.68"*) local_unnamed_addr #0 comdat align 2 {
  %5 = bitcast %"class.std::__1::vector.75"* %2 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::vector.75", %"class.std::__1::vector.75"* %2, i64 0, i32 0, i32 1
  %8 = bitcast i64** %7 to i64*
  store i64 %6, i64* %8, align 8
  %9 = getelementptr inbounds %"class.cc::RTree", %"class.cc::RTree"* %0, i64 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %183, label %12

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.cc::RTree", %"class.cc::RTree"* %0, i64 0, i32 3
  %14 = load i8, i8* %13, align 8, !range !2
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %16, label %177

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.cc::RTree", %"class.cc::RTree"* %0, i64 0, i32 1, i32 0
  %18 = load %"struct.cc::RTree<unsigned long>::Node"*, %"struct.cc::RTree<unsigned long>::Node"** %17, align 8
  %19 = getelementptr inbounds %"struct.cc::RTree<unsigned long>::Node", %"struct.cc::RTree<unsigned long>::Node"* %18, i64 0, i32 0
  %20 = load i16, i16* %19, align 8
  %21 = icmp eq i16 %20, 0
  br i1 %21, label %183, label %22

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"struct.cc::RTree<unsigned long>::Node", %"struct.cc::RTree<unsigned long>::Node"* %18, i64 0, i32 1
  %24 = icmp eq %"class.std::__1::vector.68"* %3, null
  %25 = getelementptr inbounds %"class.std::__1::vector.75", %"class.std::__1::vector.75"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %26 = bitcast i64** %25 to i64*
  %27 = getelementptr inbounds %"class.std::__1::vector.75", %"class.std::__1::vector.75"* %2, i64 0, i32 0, i32 0
  %28 = getelementptr inbounds %"class.std::__1::vector.68", %"class.std::__1::vector.68"* %3, i64 0, i32 0, i32 1
  %29 = getelementptr inbounds %"class.std::__1::vector.68", %"class.std::__1::vector.68"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %30 = bitcast %"class.gfx::Rect"** %28 to i64*
  %31 = bitcast %"class.std::__1::vector.68"* %3 to i64*
  %32 = bitcast %"class.gfx::Rect"** %29 to i64*
  %33 = getelementptr inbounds %"class.std::__1::vector.68", %"class.std::__1::vector.68"* %3, i64 0, i32 0, i32 0
  br label %34

34:                                               ; preds = %172, %22
  %35 = phi i64 [ 0, %22 ], [ %173, %172 ]
  %36 = load i16, i16* %23, align 2
  %37 = icmp eq i16 %36, 0
  br i1 %37, label %38, label %169

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"struct.cc::RTree<unsigned long>::Node", %"struct.cc::RTree<unsigned long>::Node"* %18, i64 0, i32 2, i64 %35, i32 2
  %40 = tail call zeroext i1 @_ZNK3gfx4Rect10IntersectsERKS0_(%"class.gfx::Rect"* %1, %"class.gfx::Rect"* dereferenceable(16) %39) #12
  br i1 %40, label %41, label %172

41:                                               ; preds = %38
  %42 = getelementptr inbounds %"struct.cc::RTree<unsigned long>::Node", %"struct.cc::RTree<unsigned long>::Node"* %18, i64 0, i32 2, i64 %35, i32 1
  %43 = load i64*, i64** %7, align 8
  %44 = load i64*, i64** %25, align 8
  %45 = icmp eq i64* %43, %44
  %46 = ptrtoint i64* %44 to i64
  br i1 %45, label %51, label %47

47:                                               ; preds = %41
  %48 = load i64, i64* %42, align 8
  store i64 %48, i64* %43, align 8
  %49 = getelementptr inbounds i64, i64* %43, i64 1
  %50 = ptrtoint i64* %49 to i64
  store i64 %50, i64* %8, align 8
  br label %104

51:                                               ; preds = %41
  %52 = ptrtoint i64* %43 to i64
  %53 = load i64, i64* %5, align 8
  %54 = sub i64 %52, %53
  %55 = ashr exact i64 %54, 3
  %56 = add nsw i64 %55, 1
  %57 = icmp ugt i64 %56, 2305843009213693951
  br i1 %57, label %58, label %60

58:                                               ; preds = %51
  %59 = bitcast %"class.std::__1::vector.75"* %2 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %59) #14
  unreachable

60:                                               ; preds = %51
  %61 = sub i64 %46, %53
  %62 = ashr exact i64 %61, 3
  %63 = icmp ult i64 %62, 1152921504606846975
  br i1 %63, label %64, label %72

64:                                               ; preds = %60
  %65 = ashr exact i64 %61, 2
  %66 = icmp ult i64 %65, %56
  %67 = select i1 %66, i64 %56, i64 %65
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %77, label %69

69:                                               ; preds = %64
  %70 = icmp ugt i64 %67, 2305843009213693951
  br i1 %70, label %71, label %72

71:                                               ; preds = %69
  tail call void @abort() #14
  unreachable

72:                                               ; preds = %69, %60
  %73 = phi i64 [ %67, %69 ], [ 2305843009213693951, %60 ]
  %74 = shl i64 %73, 3
  %75 = tail call i8* @_Znwm(i64 %74) #13
  %76 = bitcast i8* %75 to i64*
  br label %77

77:                                               ; preds = %72, %64
  %78 = phi i64 [ %73, %72 ], [ 0, %64 ]
  %79 = phi i64* [ %76, %72 ], [ null, %64 ]
  %80 = getelementptr inbounds i64, i64* %79, i64 %55
  %81 = getelementptr inbounds i64, i64* %79, i64 %78
  %82 = ptrtoint i64* %81 to i64
  %83 = load i64, i64* %42, align 8
  store i64 %83, i64* %80, align 8
  %84 = getelementptr inbounds i64, i64* %80, i64 1
  %85 = ptrtoint i64* %84 to i64
  %86 = load i64*, i64** %27, align 8
  %87 = load i64, i64* %8, align 8
  %88 = ptrtoint i64* %86 to i64
  %89 = sub i64 %87, %88
  %90 = ashr exact i64 %89, 3
  %91 = sub nsw i64 0, %90
  %92 = getelementptr inbounds i64, i64* %80, i64 %91
  %93 = ptrtoint i64* %92 to i64
  %94 = icmp sgt i64 %89, 0
  br i1 %94, label %95, label %99

95:                                               ; preds = %77
  %96 = bitcast i64* %92 to i8*
  %97 = bitcast i64* %86 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %96, i8* align 8 %97, i64 %89, i1 false) #12
  %98 = load i64*, i64** %27, align 8
  br label %99

99:                                               ; preds = %95, %77
  %100 = phi i64* [ %86, %77 ], [ %98, %95 ]
  store i64 %93, i64* %5, align 8
  store i64 %85, i64* %8, align 8
  store i64 %82, i64* %26, align 8
  %101 = icmp eq i64* %100, null
  br i1 %101, label %104, label %102

102:                                              ; preds = %99
  %103 = bitcast i64* %100 to i8*
  tail call void @_ZdlPv(i8* %103) #13
  br label %104

104:                                              ; preds = %47, %99, %102
  br i1 %24, label %172, label %105

105:                                              ; preds = %104
  %106 = load %"class.gfx::Rect"*, %"class.gfx::Rect"** %28, align 8
  %107 = load %"class.gfx::Rect"*, %"class.gfx::Rect"** %29, align 8
  %108 = icmp eq %"class.gfx::Rect"* %106, %107
  %109 = ptrtoint %"class.gfx::Rect"* %107 to i64
  br i1 %108, label %115, label %110

110:                                              ; preds = %105
  %111 = bitcast %"class.gfx::Rect"* %106 to i8*
  %112 = bitcast %"class.gfx::Rect"* %39 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %111, i8* align 4 %112, i64 16, i1 false) #12
  %113 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %106, i64 1
  %114 = ptrtoint %"class.gfx::Rect"* %113 to i64
  store i64 %114, i64* %30, align 8
  br label %172

115:                                              ; preds = %105
  %116 = ptrtoint %"class.gfx::Rect"* %106 to i64
  %117 = load i64, i64* %31, align 8
  %118 = sub i64 %116, %117
  %119 = ashr exact i64 %118, 4
  %120 = add nsw i64 %119, 1
  %121 = icmp ugt i64 %120, 1152921504606846975
  br i1 %121, label %122, label %124

122:                                              ; preds = %115
  %123 = bitcast %"class.std::__1::vector.68"* %3 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %123) #14
  unreachable

124:                                              ; preds = %115
  %125 = sub i64 %109, %117
  %126 = ashr exact i64 %125, 4
  %127 = icmp ult i64 %126, 576460752303423487
  br i1 %127, label %128, label %136

128:                                              ; preds = %124
  %129 = ashr exact i64 %125, 3
  %130 = icmp ult i64 %129, %120
  %131 = select i1 %130, i64 %120, i64 %129
  %132 = icmp eq i64 %131, 0
  br i1 %132, label %141, label %133

133:                                              ; preds = %128
  %134 = icmp ugt i64 %131, 1152921504606846975
  br i1 %134, label %135, label %136

135:                                              ; preds = %133
  tail call void @abort() #14
  unreachable

136:                                              ; preds = %133, %124
  %137 = phi i64 [ %131, %133 ], [ 1152921504606846975, %124 ]
  %138 = shl i64 %137, 4
  %139 = tail call i8* @_Znwm(i64 %138) #13
  %140 = bitcast i8* %139 to %"class.gfx::Rect"*
  br label %141

141:                                              ; preds = %136, %128
  %142 = phi i64 [ %137, %136 ], [ 0, %128 ]
  %143 = phi %"class.gfx::Rect"* [ %140, %136 ], [ null, %128 ]
  %144 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %143, i64 %119
  %145 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %143, i64 %142
  %146 = ptrtoint %"class.gfx::Rect"* %145 to i64
  %147 = bitcast %"class.gfx::Rect"* %144 to i8*
  %148 = bitcast %"class.gfx::Rect"* %39 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %147, i8* align 4 %148, i64 16, i1 false) #12
  %149 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %144, i64 1
  %150 = ptrtoint %"class.gfx::Rect"* %149 to i64
  %151 = load %"class.gfx::Rect"*, %"class.gfx::Rect"** %33, align 8
  %152 = load i64, i64* %30, align 8
  %153 = ptrtoint %"class.gfx::Rect"* %151 to i64
  %154 = sub i64 %152, %153
  %155 = ashr exact i64 %154, 4
  %156 = sub nsw i64 0, %155
  %157 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %144, i64 %156
  %158 = ptrtoint %"class.gfx::Rect"* %157 to i64
  %159 = icmp sgt i64 %154, 0
  br i1 %159, label %160, label %164

160:                                              ; preds = %141
  %161 = bitcast %"class.gfx::Rect"* %157 to i8*
  %162 = bitcast %"class.gfx::Rect"* %151 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %161, i8* align 4 %162, i64 %154, i1 false) #12
  %163 = load %"class.gfx::Rect"*, %"class.gfx::Rect"** %33, align 8
  br label %164

164:                                              ; preds = %160, %141
  %165 = phi %"class.gfx::Rect"* [ %151, %141 ], [ %163, %160 ]
  store i64 %158, i64* %31, align 8
  store i64 %150, i64* %30, align 8
  store i64 %146, i64* %32, align 8
  %166 = icmp eq %"class.gfx::Rect"* %165, null
  br i1 %166, label %172, label %167

167:                                              ; preds = %164
  %168 = bitcast %"class.gfx::Rect"* %165 to i8*
  tail call void @_ZdlPv(i8* %168) #13
  br label %172

169:                                              ; preds = %34
  %170 = getelementptr inbounds %"struct.cc::RTree<unsigned long>::Node", %"struct.cc::RTree<unsigned long>::Node"* %18, i64 0, i32 2, i64 %35, i32 0
  %171 = load %"struct.cc::RTree<unsigned long>::Node"*, %"struct.cc::RTree<unsigned long>::Node"** %170, align 8
  tail call void @_ZNK2cc5RTreeImE15SearchRecursiveEPNS1_4NodeImEERKN3gfx4RectEPNSt3__16vectorImNS9_9allocatorImEEEEPNSA_IS6_NSB_IS6_EEEE(%"class.cc::RTree"* %0, %"struct.cc::RTree<unsigned long>::Node"* %171, %"class.gfx::Rect"* dereferenceable(16) %1, %"class.std::__1::vector.75"* %2, %"class.std::__1::vector.68"* %3) #12
  br label %172

172:                                              ; preds = %167, %164, %110, %169, %104, %38
  %173 = add nuw nsw i64 %35, 1
  %174 = load i16, i16* %19, align 8
  %175 = zext i16 %174 to i64
  %176 = icmp ult i64 %173, %175
  br i1 %176, label %34, label %183

177:                                              ; preds = %12
  %178 = getelementptr inbounds %"class.cc::RTree", %"class.cc::RTree"* %0, i64 0, i32 1, i32 2
  %179 = tail call zeroext i1 @_ZNK3gfx4Rect10IntersectsERKS0_(%"class.gfx::Rect"* %1, %"class.gfx::Rect"* dereferenceable(16) %178) #12
  br i1 %179, label %180, label %183

180:                                              ; preds = %177
  %181 = getelementptr inbounds %"class.cc::RTree", %"class.cc::RTree"* %0, i64 0, i32 1, i32 0
  %182 = load %"struct.cc::RTree<unsigned long>::Node"*, %"struct.cc::RTree<unsigned long>::Node"** %181, align 8
  tail call void @_ZNK2cc5RTreeImE15SearchRecursiveEPNS1_4NodeImEERKN3gfx4RectEPNSt3__16vectorImNS9_9allocatorImEEEEPNSA_IS6_NSB_IS6_EEEE(%"class.cc::RTree"* %0, %"struct.cc::RTree<unsigned long>::Node"* %182, %"class.gfx::Rect"* dereferenceable(16) %1, %"class.std::__1::vector.75"* %2, %"class.std::__1::vector.68"* %3)
  br label %183

183:                                              ; preds = %172, %16, %177, %180, %4
  ret void
}

declare void @_ZNK2cc13PaintOpBuffer8PlaybackEP8SkCanvasRKNS_14PlaybackParamsEPKNSt3__16vectorImNS6_9allocatorImEEEE(%"class.cc::PaintOpBuffer"*, %class.SkCanvas*, %"struct.cc::PlaybackParams"* dereferenceable(96), %"class.std::__1::vector.75"*) local_unnamed_addr #1

declare void @_ZN2cc14PlaybackParamsC1EPNS_13ImageProviderE(%"struct.cc::PlaybackParams"*, %"class.cc::ImageProvider"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2cc14PlaybackParamsD1Ev(%"struct.cc::PlaybackParams"*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2cc15DisplayItemList14CaptureContentERKN3gfx4RectEPNSt3__16vectorINS_8NodeInfoENS5_9allocatorIS7_EEEE(%"class.cc::DisplayItemList"*, %"class.gfx::Rect"* dereferenceable(16), %"class.std::__1::vector.109"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.cc::PaintOpBuffer::OffsetIterator", align 8
  %5 = alloca %"class.std::__1::vector.75", align 8
  %6 = alloca %"class.std::__1::vector.68", align 8
  %7 = alloca %class.anon, align 8
  %8 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 4
  %9 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 4, i32 9
  %10 = load i8, i8* %9, align 4
  %11 = and i8 %10, 8
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %168, label %13

13:                                               ; preds = %3
  %14 = bitcast %"class.std::__1::vector.75"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #12
  %15 = getelementptr inbounds %"class.std::__1::vector.75", %"class.std::__1::vector.75"* %5, i64 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.std::__1::vector.75", %"class.std::__1::vector.75"* %5, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 0, i64 24, i1 false) #12
  %17 = bitcast %"class.std::__1::vector.68"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #12
  %18 = getelementptr inbounds %"class.std::__1::vector.68", %"class.std::__1::vector.68"* %6, i64 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.std::__1::vector.68", %"class.std::__1::vector.68"* %6, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 0, i64 24, i1 false) #12
  %20 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 2
  call void @_ZNK2cc5RTreeImE6SearchERKN3gfx4RectEPNSt3__16vectorImNS6_9allocatorImEEEEPNS7_IS3_NS8_IS3_EEEE(%"class.cc::RTree"* %20, %"class.gfx::Rect"* dereferenceable(16) %1, %"class.std::__1::vector.75"* nonnull %5, %"class.std::__1::vector.68"* nonnull %6)
  %21 = bitcast %class.anon* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #12
  %22 = getelementptr inbounds %class.anon, %class.anon* %7, i64 0, i32 0
  store %"class.std::__1::vector.109"* %2, %"class.std::__1::vector.109"** %22, align 8
  %23 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 4, i32 2, i32 0, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8
  %25 = bitcast %"class.cc::PaintOpBuffer::OffsetIterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %25) #12
  %26 = getelementptr inbounds %"class.cc::PaintOpBuffer::OffsetIterator", %"class.cc::PaintOpBuffer::OffsetIterator"* %4, i64 0, i32 0
  %27 = getelementptr inbounds %"class.cc::PaintOpBuffer::OffsetIterator", %"class.cc::PaintOpBuffer::OffsetIterator"* %4, i64 0, i32 1
  %28 = getelementptr inbounds %"class.cc::PaintOpBuffer::OffsetIterator", %"class.cc::PaintOpBuffer::OffsetIterator"* %4, i64 0, i32 2
  %29 = getelementptr inbounds %"class.cc::PaintOpBuffer::OffsetIterator", %"class.cc::PaintOpBuffer::OffsetIterator"* %4, i64 0, i32 3
  store %"class.cc::PaintOpBuffer"* %8, %"class.cc::PaintOpBuffer"** %26, align 8, !alias.scope !3
  store i8* %24, i8** %27, align 8, !alias.scope !3
  store %"class.std::__1::vector.75"* %5, %"class.std::__1::vector.75"** %28, align 8, !alias.scope !3
  %30 = bitcast i64* %29 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 16, i1 false) #12, !alias.scope !3
  %31 = load i64*, i64** %15, align 8, !noalias !3
  %32 = load i64*, i64** %16, align 8, !noalias !3
  %33 = icmp eq i64* %31, %32
  br i1 %33, label %34, label %39

34:                                               ; preds = %13
  %35 = getelementptr inbounds %"class.cc::PaintOpBuffer::OffsetIterator", %"class.cc::PaintOpBuffer::OffsetIterator"* %4, i64 0, i32 4
  %36 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 4, i32 3
  %37 = load i64, i64* %36, align 8, !noalias !6
  %38 = getelementptr inbounds i8, i8* %24, i64 %37
  store %"class.cc::PaintOpBuffer"* %8, %"class.cc::PaintOpBuffer"** %26, align 8, !alias.scope !3
  store i8* %38, i8** %27, align 8, !alias.scope !3
  store i64 %37, i64* %29, align 8, !alias.scope !3
  store i64 0, i64* %35, align 8, !alias.scope !3
  br label %153

39:                                               ; preds = %13
  %40 = load i64, i64* %31, align 8, !noalias !3
  store i64 %40, i64* %29, align 8, !alias.scope !3
  %41 = getelementptr inbounds i8, i8* %24, i64 %40
  store i8* %41, i8** %27, align 8, !alias.scope !3
  %42 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 4, i32 3
  %43 = load i64, i64* %42, align 8, !noalias !9
  %44 = icmp eq i64 %43, %40
  br i1 %44, label %153, label %45

45:                                               ; preds = %39
  %46 = bitcast i8* %41 to %"class.cc::PaintOp"*
  %47 = bitcast i8** %27 to %"class.cc::PaintOp"**
  %48 = getelementptr inbounds %"class.std::__1::vector.109", %"class.std::__1::vector.109"* %2, i64 0, i32 0, i32 0
  %49 = getelementptr inbounds %"class.std::__1::vector.109", %"class.std::__1::vector.109"* %2, i64 0, i32 0, i32 1
  %50 = getelementptr inbounds %"class.std::__1::vector.109", %"class.std::__1::vector.109"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %51 = bitcast %"struct.cc::NodeInfo"** %49 to i64*
  %52 = bitcast %"class.std::__1::vector.109"* %2 to i64*
  %53 = bitcast %"struct.cc::NodeInfo"** %50 to i64*
  br label %54

54:                                               ; preds = %150, %45
  %55 = phi %"class.cc::PaintOp"* [ %46, %45 ], [ %152, %150 ]
  %56 = phi i64 [ 0, %45 ], [ %151, %150 ]
  %57 = getelementptr inbounds %"class.cc::PaintOp", %"class.cc::PaintOp"* %55, i64 0, i32 0
  %58 = load i32, i32* %57, align 4
  %59 = trunc i32 %58 to i8
  switch i8 %59, label %146 [
    i8 18, label %60
    i8 14, label %140
  ]

60:                                               ; preds = %54
  %61 = load %"class.gfx::Rect"*, %"class.gfx::Rect"** %18, align 8
  %62 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %61, i64 %56
  %63 = load %"struct.cc::NodeInfo"*, %"struct.cc::NodeInfo"** %48, align 8
  %64 = load %"struct.cc::NodeInfo"*, %"struct.cc::NodeInfo"** %49, align 8
  %65 = icmp eq %"struct.cc::NodeInfo"* %63, %64
  %66 = ptrtoint %"struct.cc::NodeInfo"* %63 to i64
  br i1 %65, label %75, label %67

67:                                               ; preds = %60
  %68 = getelementptr inbounds %"struct.cc::NodeInfo", %"struct.cc::NodeInfo"* %64, i64 -1, i32 0
  %69 = load i32, i32* %68, align 4
  %70 = getelementptr inbounds %"class.cc::PaintOp", %"class.cc::PaintOp"* %55, i64 24, i32 0
  %71 = load i32, i32* %70, align 8
  %72 = icmp eq i32 %69, %71
  br i1 %72, label %73, label %75

73:                                               ; preds = %67
  %74 = getelementptr inbounds %"struct.cc::NodeInfo", %"struct.cc::NodeInfo"* %64, i64 -1, i32 1
  call void @_ZN3gfx4Rect5UnionERKS0_(%"class.gfx::Rect"* %74, %"class.gfx::Rect"* dereferenceable(16) %62) #12
  br label %146

75:                                               ; preds = %67, %60
  %76 = getelementptr inbounds %"class.cc::PaintOp", %"class.cc::PaintOp"* %55, i64 24, i32 0
  %77 = load %"struct.cc::NodeInfo"*, %"struct.cc::NodeInfo"** %50, align 8
  %78 = icmp ult %"struct.cc::NodeInfo"* %64, %77
  %79 = ptrtoint %"struct.cc::NodeInfo"* %77 to i64
  br i1 %78, label %80, label %88

80:                                               ; preds = %75
  %81 = load i32, i32* %76, align 4
  %82 = getelementptr inbounds %"struct.cc::NodeInfo", %"struct.cc::NodeInfo"* %64, i64 0, i32 0
  store i32 %81, i32* %82, align 4
  %83 = getelementptr inbounds %"struct.cc::NodeInfo", %"struct.cc::NodeInfo"* %64, i64 0, i32 1
  %84 = bitcast %"class.gfx::Rect"* %83 to i8*
  %85 = bitcast %"class.gfx::Rect"* %62 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %84, i8* align 4 %85, i64 16, i1 false) #12
  %86 = getelementptr inbounds %"struct.cc::NodeInfo", %"struct.cc::NodeInfo"* %64, i64 1
  %87 = ptrtoint %"struct.cc::NodeInfo"* %86 to i64
  store i64 %87, i64* %51, align 8
  br label %146

88:                                               ; preds = %75
  %89 = ptrtoint %"struct.cc::NodeInfo"* %64 to i64
  %90 = sub i64 %89, %66
  %91 = sdiv exact i64 %90, 20
  %92 = add nsw i64 %91, 1
  %93 = icmp ugt i64 %92, 922337203685477580
  br i1 %93, label %94, label %96

94:                                               ; preds = %88
  %95 = bitcast %"class.std::__1::vector.109"* %2 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %95) #14
  unreachable

96:                                               ; preds = %88
  %97 = sub i64 %79, %66
  %98 = sdiv exact i64 %97, 20
  %99 = icmp ult i64 %98, 461168601842738790
  br i1 %99, label %100, label %105

100:                                              ; preds = %96
  %101 = shl nsw i64 %98, 1
  %102 = icmp ult i64 %101, %92
  %103 = select i1 %102, i64 %92, i64 %101
  %104 = icmp eq i64 %103, 0
  br i1 %104, label %110, label %105

105:                                              ; preds = %100, %96
  %106 = phi i64 [ %103, %100 ], [ 922337203685477580, %96 ]
  %107 = mul i64 %106, 20
  %108 = call i8* @_Znwm(i64 %107) #13
  %109 = bitcast i8* %108 to %"struct.cc::NodeInfo"*
  br label %110

110:                                              ; preds = %105, %100
  %111 = phi i64 [ %106, %105 ], [ 0, %100 ]
  %112 = phi %"struct.cc::NodeInfo"* [ %109, %105 ], [ null, %100 ]
  %113 = getelementptr inbounds %"struct.cc::NodeInfo", %"struct.cc::NodeInfo"* %112, i64 %91
  %114 = getelementptr inbounds %"struct.cc::NodeInfo", %"struct.cc::NodeInfo"* %112, i64 %111
  %115 = ptrtoint %"struct.cc::NodeInfo"* %114 to i64
  %116 = load i32, i32* %76, align 4
  %117 = getelementptr inbounds %"struct.cc::NodeInfo", %"struct.cc::NodeInfo"* %113, i64 0, i32 0
  store i32 %116, i32* %117, align 4
  %118 = getelementptr inbounds %"struct.cc::NodeInfo", %"struct.cc::NodeInfo"* %112, i64 %91, i32 1
  %119 = bitcast %"class.gfx::Rect"* %118 to i8*
  %120 = bitcast %"class.gfx::Rect"* %62 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %119, i8* align 4 %120, i64 16, i1 false) #12
  %121 = getelementptr inbounds %"struct.cc::NodeInfo", %"struct.cc::NodeInfo"* %113, i64 1
  %122 = ptrtoint %"struct.cc::NodeInfo"* %121 to i64
  %123 = load %"struct.cc::NodeInfo"*, %"struct.cc::NodeInfo"** %48, align 8
  %124 = load i64, i64* %51, align 8
  %125 = ptrtoint %"struct.cc::NodeInfo"* %123 to i64
  %126 = sub i64 %124, %125
  %127 = sdiv exact i64 %126, -20
  %128 = getelementptr inbounds %"struct.cc::NodeInfo", %"struct.cc::NodeInfo"* %113, i64 %127
  %129 = ptrtoint %"struct.cc::NodeInfo"* %128 to i64
  %130 = icmp sgt i64 %126, 0
  br i1 %130, label %131, label %135

131:                                              ; preds = %110
  %132 = bitcast %"struct.cc::NodeInfo"* %128 to i8*
  %133 = bitcast %"struct.cc::NodeInfo"* %123 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %132, i8* align 4 %133, i64 %126, i1 false) #12
  %134 = load %"struct.cc::NodeInfo"*, %"struct.cc::NodeInfo"** %48, align 8
  br label %135

135:                                              ; preds = %131, %110
  %136 = phi %"struct.cc::NodeInfo"* [ %123, %110 ], [ %134, %131 ]
  store i64 %129, i64* %52, align 8
  store i64 %122, i64* %51, align 8
  store i64 %115, i64* %53, align 8
  %137 = icmp eq %"struct.cc::NodeInfo"* %136, null
  br i1 %137, label %146, label %138

138:                                              ; preds = %135
  %139 = bitcast %"struct.cc::NodeInfo"* %136 to i8*
  call void @_ZdlPv(i8* %139) #13
  br label %146

140:                                              ; preds = %54
  %141 = getelementptr inbounds %"class.cc::PaintOp", %"class.cc::PaintOp"* %55, i64 2
  %142 = bitcast %"class.cc::PaintOp"* %141 to %"class.cc::PaintOpBuffer"**
  %143 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %142, align 8
  %144 = load %"class.gfx::Rect"*, %"class.gfx::Rect"** %18, align 8
  %145 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %144, i64 %56
  call fastcc void @"_ZN2cc12_GLOBAL__N_118IterateTextContentIZNKS_15DisplayItemList14CaptureContentERKN3gfx4RectEPNSt3__16vectorINS_8NodeInfoENS7_9allocatorIS9_EEEEE3$_0EEvRKNS_13PaintOpBufferERKT_S6_"(%"class.cc::PaintOpBuffer"* dereferenceable(72) %143, %class.anon* nonnull dereferenceable(8) %7, %"class.gfx::Rect"* dereferenceable(16) %145) #12
  br label %146

146:                                              ; preds = %140, %138, %135, %80, %73, %54
  %147 = call dereferenceable(40) %"class.cc::PaintOpBuffer::OffsetIterator"* @_ZN2cc13PaintOpBuffer14OffsetIteratorppEv(%"class.cc::PaintOpBuffer::OffsetIterator"* nonnull %4) #12
  %148 = load i64, i64* %29, align 8
  %149 = icmp eq i64 %43, %148
  br i1 %149, label %153, label %150

150:                                              ; preds = %146
  %151 = add i64 %56, 1
  %152 = load %"class.cc::PaintOp"*, %"class.cc::PaintOp"** %47, align 8
  br label %54

153:                                              ; preds = %146, %34, %39
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %25) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #12
  %154 = load %"class.gfx::Rect"*, %"class.gfx::Rect"** %18, align 8
  %155 = icmp eq %"class.gfx::Rect"* %154, null
  br i1 %155, label %160, label %156

156:                                              ; preds = %153
  %157 = ptrtoint %"class.gfx::Rect"* %154 to i64
  %158 = bitcast %"class.gfx::Rect"** %19 to i64*
  store i64 %157, i64* %158, align 8
  %159 = bitcast %"class.gfx::Rect"* %154 to i8*
  call void @_ZdlPv(i8* %159) #13
  br label %160

160:                                              ; preds = %153, %156
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #12
  %161 = load i64*, i64** %15, align 8
  %162 = icmp eq i64* %161, null
  br i1 %162, label %167, label %163

163:                                              ; preds = %160
  %164 = ptrtoint i64* %161 to i64
  %165 = bitcast i64** %16 to i64*
  store i64 %164, i64* %165, align 8
  %166 = bitcast i64* %161 to i8*
  call void @_ZdlPv(i8* %166) #13
  br label %167

167:                                              ; preds = %160, %163
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #12
  br label %168

168:                                              ; preds = %3, %167
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZNK2cc15DisplayItemList14AreaOfDrawTextERKN3gfx4RectE(%"class.cc::DisplayItemList"*, %"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::vector.75", align 8
  %4 = alloca %"class.std::__1::vector.68", align 8
  %5 = alloca %"class.cc::PaintOpBuffer::OffsetIterator", align 8
  %6 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 4
  %7 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 4, i32 9
  %8 = load i8, i8* %7, align 4
  %9 = and i8 %8, 8
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %93, label %11

11:                                               ; preds = %2
  %12 = bitcast %"class.std::__1::vector.75"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #12
  %13 = getelementptr inbounds %"class.std::__1::vector.75", %"class.std::__1::vector.75"* %3, i64 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.std::__1::vector.75", %"class.std::__1::vector.75"* %3, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 0, i64 24, i1 false) #12
  %15 = bitcast %"class.std::__1::vector.68"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #12
  %16 = getelementptr inbounds %"class.std::__1::vector.68", %"class.std::__1::vector.68"* %4, i64 0, i32 0, i32 0
  %17 = getelementptr inbounds %"class.std::__1::vector.68", %"class.std::__1::vector.68"* %4, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 0, i64 24, i1 false) #12
  %18 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 2
  call void @_ZNK2cc5RTreeImE6SearchERKN3gfx4RectEPNSt3__16vectorImNS6_9allocatorImEEEEPNS7_IS3_NS8_IS3_EEEE(%"class.cc::RTree"* %18, %"class.gfx::Rect"* dereferenceable(16) %1, %"class.std::__1::vector.75"* nonnull %3, %"class.std::__1::vector.68"* nonnull %4)
  %19 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 4, i32 2, i32 0, i32 0, i32 0
  %20 = load i8*, i8** %19, align 8
  %21 = load i64*, i64** %13, align 8
  %22 = load i64*, i64** %14, align 8
  %23 = icmp eq i64* %21, %22
  %24 = bitcast %"class.cc::PaintOpBuffer::OffsetIterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %24) #12
  %25 = getelementptr inbounds %"class.cc::PaintOpBuffer::OffsetIterator", %"class.cc::PaintOpBuffer::OffsetIterator"* %5, i64 0, i32 0
  %26 = getelementptr inbounds %"class.cc::PaintOpBuffer::OffsetIterator", %"class.cc::PaintOpBuffer::OffsetIterator"* %5, i64 0, i32 1
  %27 = getelementptr inbounds %"class.cc::PaintOpBuffer::OffsetIterator", %"class.cc::PaintOpBuffer::OffsetIterator"* %5, i64 0, i32 2
  %28 = getelementptr inbounds %"class.cc::PaintOpBuffer::OffsetIterator", %"class.cc::PaintOpBuffer::OffsetIterator"* %5, i64 0, i32 3
  store %"class.cc::PaintOpBuffer"* %6, %"class.cc::PaintOpBuffer"** %25, align 8, !alias.scope !12
  store i8* %20, i8** %26, align 8, !alias.scope !12
  store %"class.std::__1::vector.75"* %3, %"class.std::__1::vector.75"** %27, align 8, !alias.scope !12
  %29 = bitcast i64* %28 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 16, i1 false) #12, !alias.scope !12
  br i1 %23, label %30, label %35

30:                                               ; preds = %11
  %31 = getelementptr inbounds %"class.cc::PaintOpBuffer::OffsetIterator", %"class.cc::PaintOpBuffer::OffsetIterator"* %5, i64 0, i32 4
  %32 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 4, i32 3
  %33 = load i64, i64* %32, align 8, !noalias !15
  %34 = getelementptr inbounds i8, i8* %20, i64 %33
  store %"class.cc::PaintOpBuffer"* %6, %"class.cc::PaintOpBuffer"** %25, align 8, !alias.scope !12
  store i8* %34, i8** %26, align 8, !alias.scope !12
  store i64 %33, i64* %28, align 8, !alias.scope !12
  store i64 0, i64* %31, align 8, !alias.scope !12
  br label %44

35:                                               ; preds = %11
  %36 = load i64, i64* %21, align 8, !noalias !12
  store i64 %36, i64* %28, align 8, !alias.scope !12
  %37 = getelementptr inbounds i8, i8* %20, i64 %36
  store i8* %37, i8** %26, align 8, !alias.scope !12
  %38 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 4, i32 3
  %39 = load i64, i64* %38, align 8, !noalias !18
  %40 = icmp eq i64 %39, %36
  br i1 %40, label %44, label %41

41:                                               ; preds = %35
  %42 = bitcast i8* %37 to %"class.cc::PaintOp"*
  %43 = bitcast i8** %26 to %"class.cc::PaintOp"**
  br label %60

44:                                               ; preds = %85, %30, %35
  %45 = phi double [ 0.000000e+00, %35 ], [ 0.000000e+00, %30 ], [ %86, %85 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %24) #12
  %46 = load %"class.gfx::Rect"*, %"class.gfx::Rect"** %16, align 8
  %47 = icmp eq %"class.gfx::Rect"* %46, null
  br i1 %47, label %52, label %48

48:                                               ; preds = %44
  %49 = ptrtoint %"class.gfx::Rect"* %46 to i64
  %50 = bitcast %"class.gfx::Rect"** %17 to i64*
  store i64 %49, i64* %50, align 8
  %51 = bitcast %"class.gfx::Rect"* %46 to i8*
  call void @_ZdlPv(i8* %51) #13
  br label %52

52:                                               ; preds = %44, %48
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #12
  %53 = load i64*, i64** %13, align 8
  %54 = icmp eq i64* %53, null
  br i1 %54, label %59, label %55

55:                                               ; preds = %52
  %56 = ptrtoint i64* %53 to i64
  %57 = bitcast i64** %14 to i64*
  store i64 %56, i64* %57, align 8
  %58 = bitcast i64* %53 to i8*
  call void @_ZdlPv(i8* %58) #13
  br label %59

59:                                               ; preds = %52, %55
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #12
  br label %93

60:                                               ; preds = %90, %41
  %61 = phi %"class.cc::PaintOp"* [ %42, %41 ], [ %92, %90 ]
  %62 = phi i64 [ 0, %41 ], [ %91, %90 ]
  %63 = phi double [ 0.000000e+00, %41 ], [ %86, %90 ]
  %64 = getelementptr inbounds %"class.cc::PaintOp", %"class.cc::PaintOp"* %61, i64 0, i32 0
  %65 = load i32, i32* %64, align 4
  %66 = trunc i32 %65 to i8
  switch i8 %66, label %85 [
    i8 18, label %75
    i8 14, label %67
  ]

67:                                               ; preds = %60
  %68 = getelementptr inbounds %"class.cc::PaintOp", %"class.cc::PaintOp"* %61, i64 2
  %69 = bitcast %"class.cc::PaintOp"* %68 to %"class.cc::PaintOpBuffer"**
  %70 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %69, align 8
  %71 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %70, i64 0, i32 9
  %72 = load i8, i8* %71, align 4
  %73 = and i8 %72, 8
  %74 = icmp eq i8 %73, 0
  br i1 %74, label %85, label %75

75:                                               ; preds = %67, %60
  %76 = load %"class.gfx::Rect"*, %"class.gfx::Rect"** %16, align 8
  %77 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %76, i64 %62, i32 1, i32 0
  %78 = load i32, i32* %77, align 4
  %79 = sitofp i32 %78 to double
  %80 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %76, i64 %62, i32 1, i32 1
  %81 = load i32, i32* %80, align 4
  %82 = sitofp i32 %81 to double
  %83 = fmul double %79, %82
  %84 = fadd double %63, %83
  br label %85

85:                                               ; preds = %67, %60, %75
  %86 = phi double [ %84, %75 ], [ %63, %67 ], [ %63, %60 ]
  %87 = call dereferenceable(40) %"class.cc::PaintOpBuffer::OffsetIterator"* @_ZN2cc13PaintOpBuffer14OffsetIteratorppEv(%"class.cc::PaintOpBuffer::OffsetIterator"* nonnull %5)
  %88 = load i64, i64* %28, align 8
  %89 = icmp eq i64 %39, %88
  br i1 %89, label %44, label %90

90:                                               ; preds = %85
  %91 = add i64 %62, 1
  %92 = load %"class.cc::PaintOp"*, %"class.cc::PaintOp"** %43, align 8
  br label %60

93:                                               ; preds = %2, %59
  %94 = phi double [ %45, %59 ], [ 0.000000e+00, %2 ]
  ret double %94
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(40) %"class.cc::PaintOpBuffer::OffsetIterator"* @_ZN2cc13PaintOpBuffer14OffsetIteratorppEv(%"class.cc::PaintOpBuffer::OffsetIterator"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca i64, align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.cc::PaintOpBuffer::OffsetIterator", %"class.cc::PaintOpBuffer::OffsetIterator"* %0, i64 0, i32 4
  %10 = load i64, i64* %9, align 8
  %11 = add i64 %10, 1
  store i64 %11, i64* %9, align 8
  %12 = getelementptr inbounds %"class.cc::PaintOpBuffer::OffsetIterator", %"class.cc::PaintOpBuffer::OffsetIterator"* %0, i64 0, i32 2
  %13 = load %"class.std::__1::vector.75"*, %"class.std::__1::vector.75"** %12, align 8
  %14 = getelementptr inbounds %"class.std::__1::vector.75", %"class.std::__1::vector.75"* %13, i64 0, i32 0, i32 1
  %15 = bitcast i64** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"class.std::__1::vector.75"* %13 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = icmp ult i64 %11, %20
  br i1 %21, label %32, label %22

22:                                               ; preds = %1
  %23 = getelementptr inbounds %"class.cc::PaintOpBuffer::OffsetIterator", %"class.cc::PaintOpBuffer::OffsetIterator"* %0, i64 0, i32 0
  %24 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %23, align 8, !noalias !21
  %25 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %24, i64 0, i32 2, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8, !noalias !21
  %27 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %24, i64 0, i32 3
  %28 = load i64, i64* %27, align 8, !noalias !21
  %29 = getelementptr inbounds i8, i8* %26, i64 %28
  %30 = getelementptr inbounds %"class.cc::PaintOpBuffer::OffsetIterator", %"class.cc::PaintOpBuffer::OffsetIterator"* %0, i64 0, i32 1
  store i8* %29, i8** %30, align 8
  %31 = getelementptr inbounds %"class.cc::PaintOpBuffer::OffsetIterator", %"class.cc::PaintOpBuffer::OffsetIterator"* %0, i64 0, i32 3
  store i64 %28, i64* %31, align 8
  store i64 0, i64* %9, align 8
  br label %81

32:                                               ; preds = %1
  %33 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #12
  store i64 -6148914691236517206, i64* %4, align 8
  %34 = getelementptr inbounds %"class.std::__1::vector.75", %"class.std::__1::vector.75"* %13, i64 0, i32 0, i32 0
  %35 = load i64*, i64** %34, align 8
  %36 = getelementptr inbounds i64, i64* %35, i64 %11
  %37 = load i64, i64* %36, align 8
  store i64 %37, i64* %4, align 8
  %38 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #12
  %39 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %39, align 8
  %40 = getelementptr inbounds %"class.cc::PaintOpBuffer::OffsetIterator", %"class.cc::PaintOpBuffer::OffsetIterator"* %0, i64 0, i32 3
  %41 = load i64, i64* %40, align 8
  %42 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42)
  %43 = icmp ult i64 %37, %41
  br i1 %43, label %45, label %44

44:                                               ; preds = %32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  store i8* null, i8** %39, align 8
  br label %54

45:                                               ; preds = %32
  %46 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %37) #12
  %47 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %41) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11, i64 0, i64 0), i8* %46, i8* %47) #12
  %48 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %49 = load i8*, i8** %48, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  store i8* %49, i8** %39, align 8
  %50 = icmp eq i8* %49, null
  br i1 %50, label %54, label %51

51:                                               ; preds = %45
  %52 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.12, i64 0, i64 0), i32 1242, %"class.logging::CheckOpResult"* nonnull %5) #12
  %53 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #12
  br label %54

54:                                               ; preds = %44, %45, %51
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #12
  call void @_ZN4base5debug5AliasEPKv(i8* nonnull %33) #12
  %55 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #12
  %56 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %56, align 8
  %57 = load i64, i64* %4, align 8
  %58 = getelementptr inbounds %"class.cc::PaintOpBuffer::OffsetIterator", %"class.cc::PaintOpBuffer::OffsetIterator"* %0, i64 0, i32 0
  %59 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %58, align 8
  %60 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %59, i64 0, i32 3
  %61 = load i64, i64* %60, align 8
  %62 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %62)
  %63 = icmp ult i64 %57, %61
  br i1 %63, label %64, label %65

64:                                               ; preds = %54
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %62)
  store i8* null, i8** %56, align 8
  br label %74

65:                                               ; preds = %54
  %66 = call i8* @_ZN7logging15CheckOpValueStrEm(i64 %57) #12
  %67 = call i8* @_ZN7logging15CheckOpValueStrEm(i64 %61) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.13, i64 0, i64 0), i8* %66, i8* %67) #12
  %68 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %69 = load i8*, i8** %68, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %62)
  store i8* %69, i8** %56, align 8
  %70 = icmp eq i8* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %65
  %72 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %72) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.12, i64 0, i64 0), i32 1245, %"class.logging::CheckOpResult"* nonnull %7) #12
  %73 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %72) #12
  br label %74

74:                                               ; preds = %64, %65, %71
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #12
  %75 = load i64, i64* %4, align 8
  %76 = load i64, i64* %40, align 8
  %77 = sub i64 %75, %76
  %78 = getelementptr inbounds %"class.cc::PaintOpBuffer::OffsetIterator", %"class.cc::PaintOpBuffer::OffsetIterator"* %0, i64 0, i32 1
  %79 = load i8*, i8** %78, align 8
  %80 = getelementptr inbounds i8, i8* %79, i64 %77
  store i8* %80, i8** %78, align 8
  store i64 %75, i64* %40, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #12
  br label %81

81:                                               ; preds = %74, %22
  ret %"class.cc::PaintOpBuffer::OffsetIterator"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc15DisplayItemList19EndPaintOfPairedEndEv(%"class.cc::DisplayItemList"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.gfx::Rect", align 4
  %3 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 8
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 1
  br i1 %5, label %93, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 7, i32 0, i32 1
  %8 = load %"struct.cc::DisplayItemList::PairedBeginInfo"*, %"struct.cc::DisplayItemList::PairedBeginInfo"** %7, align 8
  %9 = getelementptr inbounds %"struct.cc::DisplayItemList::PairedBeginInfo", %"struct.cc::DisplayItemList::PairedBeginInfo"* %8, i64 -1, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"struct.cc::DisplayItemList::PairedBeginInfo", %"struct.cc::DisplayItemList::PairedBeginInfo"* %8, i64 -1, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.gfx::Rect"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #12
  %14 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 5
  %15 = getelementptr inbounds %"class.std::__1::vector.68", %"class.std::__1::vector.68"* %14, i64 0, i32 0, i32 0
  %16 = bitcast %"class.gfx::Rect"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %16, i8 -86, i64 16, i1 false)
  %17 = load %"class.gfx::Rect"*, %"class.gfx::Rect"** %15, align 8
  %18 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %17, i64 %10
  %19 = bitcast %"class.gfx::Rect"* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %13, i8* align 4 %19, i64 16, i1 false)
  %20 = icmp ugt i64 %12, 1
  br i1 %20, label %21, label %32

21:                                               ; preds = %6
  %22 = add i64 %10, 1
  %23 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %17, i64 %22
  %24 = bitcast %"class.gfx::Rect"* %23 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %24, i8* nonnull align 4 %13, i64 16, i1 false)
  %25 = icmp eq i64 %12, 2
  br i1 %25, label %42, label %26

26:                                               ; preds = %21
  %27 = add i64 %12, -2
  %28 = and i64 %27, 1
  %29 = icmp eq i64 %12, 3
  br i1 %29, label %34, label %30

30:                                               ; preds = %26
  %31 = sub i64 %27, %28
  br label %78

32:                                               ; preds = %6
  %33 = ptrtoint %"class.gfx::Rect"* %17 to i64
  br label %46

34:                                               ; preds = %78, %26
  %35 = phi i64 [ 2, %26 ], [ %90, %78 ]
  %36 = icmp eq i64 %28, 0
  br i1 %36, label %42, label %37

37:                                               ; preds = %34
  %38 = load %"class.gfx::Rect"*, %"class.gfx::Rect"** %15, align 8
  %39 = add i64 %35, %10
  %40 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %38, i64 %39
  %41 = bitcast %"class.gfx::Rect"* %40 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %41, i8* nonnull align 4 %13, i64 16, i1 false)
  br label %42

42:                                               ; preds = %37, %34, %21
  %43 = load %"struct.cc::DisplayItemList::PairedBeginInfo"*, %"struct.cc::DisplayItemList::PairedBeginInfo"** %7, align 8
  %44 = bitcast %"class.std::__1::vector.68"* %14 to i64*
  %45 = load i64, i64* %44, align 8
  br label %46

46:                                               ; preds = %32, %42
  %47 = phi i64 [ %45, %42 ], [ %33, %32 ]
  %48 = phi %"struct.cc::DisplayItemList::PairedBeginInfo"* [ %43, %42 ], [ %8, %32 ]
  %49 = getelementptr inbounds %"struct.cc::DisplayItemList::PairedBeginInfo", %"struct.cc::DisplayItemList::PairedBeginInfo"* %48, i64 -1
  store %"struct.cc::DisplayItemList::PairedBeginInfo"* %49, %"struct.cc::DisplayItemList::PairedBeginInfo"** %7, align 8
  %50 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 4, i32 5
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 5, i32 0, i32 1
  %53 = bitcast %"class.gfx::Rect"** %52 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = sub i64 %54, %47
  %56 = ashr exact i64 %55, 4
  %57 = icmp ugt i64 %51, %56
  %58 = inttoptr i64 %47 to %"class.gfx::Rect"*
  br i1 %57, label %59, label %62

59:                                               ; preds = %46
  %60 = sub i64 %51, %56
  call void @_ZNSt3__16vectorIN3gfx4RectENS_9allocatorIS2_EEE8__appendEmRKS2_(%"class.std::__1::vector.68"* %14, i64 %60, %"class.gfx::Rect"* nonnull dereferenceable(16) %2) #12
  %61 = load %"struct.cc::DisplayItemList::PairedBeginInfo"*, %"struct.cc::DisplayItemList::PairedBeginInfo"** %7, align 8
  br label %66

62:                                               ; preds = %46
  %63 = icmp ult i64 %51, %56
  br i1 %63, label %64, label %66

64:                                               ; preds = %62
  %65 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %58, i64 %51
  store %"class.gfx::Rect"* %65, %"class.gfx::Rect"** %52, align 8
  br label %66

66:                                               ; preds = %59, %62, %64
  %67 = phi %"struct.cc::DisplayItemList::PairedBeginInfo"* [ %61, %59 ], [ %49, %62 ], [ %49, %64 ]
  %68 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 7, i32 0, i32 0
  %69 = load %"struct.cc::DisplayItemList::PairedBeginInfo"*, %"struct.cc::DisplayItemList::PairedBeginInfo"** %68, align 8
  %70 = icmp eq %"struct.cc::DisplayItemList::PairedBeginInfo"* %69, %67
  br i1 %70, label %77, label %71

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"struct.cc::DisplayItemList::PairedBeginInfo", %"struct.cc::DisplayItemList::PairedBeginInfo"* %67, i64 -1, i32 0
  %73 = load i64, i64* %72, align 8
  %74 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 5, i32 0, i32 0
  %75 = load %"class.gfx::Rect"*, %"class.gfx::Rect"** %74, align 8
  %76 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %75, i64 %73
  call void @_ZN3gfx4Rect5UnionERKS0_(%"class.gfx::Rect"* %76, %"class.gfx::Rect"* nonnull dereferenceable(16) %2) #12
  br label %77

77:                                               ; preds = %66, %71
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #12
  br label %93

78:                                               ; preds = %78, %30
  %79 = phi i64 [ 2, %30 ], [ %90, %78 ]
  %80 = phi i64 [ %31, %30 ], [ %91, %78 ]
  %81 = load %"class.gfx::Rect"*, %"class.gfx::Rect"** %15, align 8
  %82 = add i64 %79, %10
  %83 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %81, i64 %82
  %84 = bitcast %"class.gfx::Rect"* %83 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %84, i8* nonnull align 4 %13, i64 16, i1 false)
  %85 = or i64 %79, 1
  %86 = load %"class.gfx::Rect"*, %"class.gfx::Rect"** %15, align 8
  %87 = add i64 %85, %10
  %88 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %86, i64 %87
  %89 = bitcast %"class.gfx::Rect"* %88 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %89, i8* nonnull align 4 %13, i64 16, i1 false)
  %90 = add nuw i64 %79, 2
  %91 = add i64 %80, -2
  %92 = icmp eq i64 %91, 0
  br i1 %92, label %34, label %78

93:                                               ; preds = %1, %77
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc15DisplayItemList8FinalizeEv(%"class.cc::DisplayItemList"*) local_unnamed_addr #0 align 2 {
  %2 = alloca i32, align 4
  %3 = alloca %"class.std::__1::vector.246", align 8
  %4 = alloca %"struct.cc::RTree<unsigned long>::Branch", align 8
  %5 = alloca %"class.base::TimeTicks", align 8
  %6 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 157, i32 0), align 16
  %7 = and i8 %6, 25
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %15, label %9, !prof !24

9:                                                ; preds = %1
  %10 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #12
  %11 = bitcast %"class.base::TimeTicks"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #12
  %12 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %5, i64 0, i32 0, i32 0
  %13 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #12
  store i64 %13, i64* %12, align 8
  %14 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 157, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %10, %"class.base::TimeTicks"* nonnull dereferenceable(8) %5, %"class.base::trace_event::TraceArguments"* null, i32 0) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #12
  br label %15

15:                                               ; preds = %1, %9
  %16 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %1 ], [ getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), %9 ]
  %17 = phi i8* [ null, %1 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 157, i32 0), %9 ]
  %18 = phi i64 [ -6148914691236517206, %1 ], [ %14, %9 ]
  %19 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 8
  %20 = load i32, i32* %19, align 8
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %302

22:                                               ; preds = %15
  %23 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 2
  %24 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 5
  %25 = bitcast %"class.std::__1::vector.246"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #12
  %26 = getelementptr inbounds %"class.std::__1::vector.246", %"class.std::__1::vector.246"* %3, i64 0, i32 0, i32 0
  %27 = getelementptr inbounds %"class.std::__1::vector.246", %"class.std::__1::vector.246"* %3, i64 0, i32 0, i32 1
  %28 = getelementptr inbounds %"class.std::__1::vector.246", %"class.std::__1::vector.246"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 0, i64 24, i1 false) #12
  %29 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 5, i32 0, i32 1
  %30 = bitcast %"class.gfx::Rect"** %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %"class.std::__1::vector.68"* %24 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = sub i64 %31, %33
  %35 = ashr exact i64 %34, 4
  %36 = bitcast %"struct.cc::RTree<unsigned long>::Branch"** %28 to i64*
  %37 = bitcast %"class.std::__1::vector.246"* %3 to i64*
  %38 = icmp eq i64 %34, 0
  br i1 %38, label %39, label %41

39:                                               ; preds = %22
  %40 = bitcast %"struct.cc::RTree<unsigned long>::Branch"** %27 to i64*
  br label %52

41:                                               ; preds = %22
  %42 = icmp ugt i64 %35, 576460752303423487
  br i1 %42, label %43, label %44

43:                                               ; preds = %41
  call void @abort() #14
  unreachable

44:                                               ; preds = %41
  %45 = bitcast %"struct.cc::RTree<unsigned long>::Branch"** %27 to i64*
  %46 = shl i64 %34, 1
  %47 = call i8* @_Znwm(i64 %46) #13
  %48 = bitcast i8* %47 to %"struct.cc::RTree<unsigned long>::Branch"*
  %49 = ptrtoint i8* %47 to i64
  %50 = getelementptr inbounds %"struct.cc::RTree<unsigned long>::Branch", %"struct.cc::RTree<unsigned long>::Branch"* %48, i64 %35
  %51 = ptrtoint %"struct.cc::RTree<unsigned long>::Branch"* %50 to i64
  store i64 %49, i64* %37, align 8
  store i64 %49, i64* %45, align 8
  store i64 %51, i64* %36, align 8
  br label %52

52:                                               ; preds = %39, %44
  %53 = phi i64* [ %40, %39 ], [ %45, %44 ]
  %54 = phi %"struct.cc::RTree<unsigned long>::Branch"* [ null, %39 ], [ %48, %44 ]
  %55 = phi i64 [ 0, %39 ], [ %49, %44 ]
  %56 = icmp eq i64 %31, %33
  br i1 %56, label %59, label %57

57:                                               ; preds = %52
  %58 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 6, i32 0, i32 0
  br label %66

59:                                               ; preds = %150, %52
  %60 = phi i64 [ %55, %52 ], [ %152, %150 ]
  %61 = phi i64 [ %55, %52 ], [ %153, %150 ]
  %62 = sub i64 %61, %60
  %63 = ashr exact i64 %62, 5
  %64 = getelementptr inbounds %"class.cc::RTree", %"class.cc::RTree"* %23, i64 0, i32 0
  store i64 %63, i64* %64, align 8
  %65 = inttoptr i64 %60 to %"struct.cc::RTree<unsigned long>::Branch"*
  switch i64 %63, label %245 [
    i64 1, label %161
    i64 0, label %295
  ]

66:                                               ; preds = %57, %150
  %67 = phi %"struct.cc::RTree<unsigned long>::Branch"* [ %151, %150 ], [ %54, %57 ]
  %68 = phi i64 [ %152, %150 ], [ %55, %57 ]
  %69 = phi i64 [ %153, %150 ], [ %55, %57 ]
  %70 = phi %"struct.cc::RTree<unsigned long>::Branch"* [ %154, %150 ], [ %54, %57 ]
  %71 = phi i64 [ %157, %150 ], [ %33, %57 ]
  %72 = phi i64 [ %155, %150 ], [ 0, %57 ]
  %73 = inttoptr i64 %71 to %"class.gfx::Rect"*
  %74 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %73, i64 %72
  %75 = bitcast %"class.gfx::Rect"* %74 to i64*
  %76 = load i64, i64* %75, align 4
  %77 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %73, i64 %72, i32 1
  %78 = bitcast %"class.gfx::Size"* %77 to i64*
  %79 = load i64, i64* %78, align 4
  %80 = trunc i64 %79 to i32
  %81 = icmp eq i32 %80, 0
  %82 = icmp ult i64 %79, 4294967296
  %83 = or i1 %82, %81
  br i1 %83, label %150, label %84

84:                                               ; preds = %66
  %85 = load i64*, i64** %58, align 8
  %86 = getelementptr inbounds i64, i64* %85, i64 %72
  %87 = load i64, i64* %86, align 8
  %88 = load %"struct.cc::RTree<unsigned long>::Branch"*, %"struct.cc::RTree<unsigned long>::Branch"** %28, align 8
  %89 = icmp ult %"struct.cc::RTree<unsigned long>::Branch"* %70, %88
  %90 = ptrtoint %"struct.cc::RTree<unsigned long>::Branch"* %88 to i64
  br i1 %89, label %91, label %99

91:                                               ; preds = %84
  %92 = getelementptr inbounds %"struct.cc::RTree<unsigned long>::Branch", %"struct.cc::RTree<unsigned long>::Branch"* %70, i64 0, i32 1
  store i64 %87, i64* %92, align 8
  %93 = getelementptr inbounds %"struct.cc::RTree<unsigned long>::Branch", %"struct.cc::RTree<unsigned long>::Branch"* %70, i64 0, i32 2
  %94 = bitcast %"class.gfx::Rect"* %93 to i64*
  store i64 %76, i64* %94, align 8
  %95 = getelementptr inbounds %"struct.cc::RTree<unsigned long>::Branch", %"struct.cc::RTree<unsigned long>::Branch"* %70, i64 0, i32 2, i32 1
  %96 = bitcast %"class.gfx::Size"* %95 to i64*
  store i64 %79, i64* %96, align 8
  %97 = getelementptr inbounds %"struct.cc::RTree<unsigned long>::Branch", %"struct.cc::RTree<unsigned long>::Branch"* %70, i64 1
  %98 = ptrtoint %"struct.cc::RTree<unsigned long>::Branch"* %97 to i64
  store i64 %98, i64* %53, align 8
  br label %150

99:                                               ; preds = %84
  %100 = sub i64 %69, %68
  %101 = ashr exact i64 %100, 5
  %102 = add nsw i64 %101, 1
  %103 = icmp ugt i64 %102, 576460752303423487
  br i1 %103, label %104, label %106

104:                                              ; preds = %99
  %105 = bitcast %"class.std::__1::vector.246"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %105) #14
  unreachable

106:                                              ; preds = %99
  %107 = sub i64 %90, %68
  %108 = ashr exact i64 %107, 5
  %109 = icmp ult i64 %108, 288230376151711743
  br i1 %109, label %110, label %118

110:                                              ; preds = %106
  %111 = ashr exact i64 %107, 4
  %112 = icmp ult i64 %111, %102
  %113 = select i1 %112, i64 %102, i64 %111
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %123, label %115

115:                                              ; preds = %110
  %116 = icmp ugt i64 %113, 576460752303423487
  br i1 %116, label %117, label %118

117:                                              ; preds = %115
  call void @abort() #14
  unreachable

118:                                              ; preds = %115, %106
  %119 = phi i64 [ %113, %115 ], [ 576460752303423487, %106 ]
  %120 = shl i64 %119, 5
  %121 = call i8* @_Znwm(i64 %120) #13
  %122 = bitcast i8* %121 to %"struct.cc::RTree<unsigned long>::Branch"*
  br label %123

123:                                              ; preds = %118, %110
  %124 = phi i64 [ %119, %118 ], [ 0, %110 ]
  %125 = phi %"struct.cc::RTree<unsigned long>::Branch"* [ %122, %118 ], [ null, %110 ]
  %126 = getelementptr inbounds %"struct.cc::RTree<unsigned long>::Branch", %"struct.cc::RTree<unsigned long>::Branch"* %125, i64 %101
  %127 = getelementptr inbounds %"struct.cc::RTree<unsigned long>::Branch", %"struct.cc::RTree<unsigned long>::Branch"* %125, i64 %124
  %128 = ptrtoint %"struct.cc::RTree<unsigned long>::Branch"* %127 to i64
  %129 = getelementptr inbounds %"struct.cc::RTree<unsigned long>::Branch", %"struct.cc::RTree<unsigned long>::Branch"* %125, i64 %101, i32 1
  store i64 %87, i64* %129, align 8
  %130 = getelementptr inbounds %"struct.cc::RTree<unsigned long>::Branch", %"struct.cc::RTree<unsigned long>::Branch"* %125, i64 %101, i32 2
  %131 = bitcast %"class.gfx::Rect"* %130 to i64*
  store i64 %76, i64* %131, align 8
  %132 = getelementptr inbounds %"struct.cc::RTree<unsigned long>::Branch", %"struct.cc::RTree<unsigned long>::Branch"* %125, i64 %101, i32 2, i32 1
  %133 = bitcast %"class.gfx::Size"* %132 to i64*
  store i64 %79, i64* %133, align 8
  %134 = getelementptr inbounds %"struct.cc::RTree<unsigned long>::Branch", %"struct.cc::RTree<unsigned long>::Branch"* %126, i64 1
  %135 = ptrtoint %"struct.cc::RTree<unsigned long>::Branch"* %134 to i64
  %136 = ptrtoint %"struct.cc::RTree<unsigned long>::Branch"* %67 to i64
  %137 = sub i64 %69, %136
  %138 = ashr exact i64 %137, 5
  %139 = sub nsw i64 0, %138
  %140 = getelementptr inbounds %"struct.cc::RTree<unsigned long>::Branch", %"struct.cc::RTree<unsigned long>::Branch"* %126, i64 %139
  %141 = ptrtoint %"struct.cc::RTree<unsigned long>::Branch"* %140 to i64
  %142 = icmp sgt i64 %137, 0
  br i1 %142, label %143, label %146

143:                                              ; preds = %123
  %144 = bitcast %"struct.cc::RTree<unsigned long>::Branch"* %140 to i8*
  %145 = bitcast %"struct.cc::RTree<unsigned long>::Branch"* %67 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %144, i8* align 8 %145, i64 %137, i1 false) #12
  br label %146

146:                                              ; preds = %143, %123
  store i64 %141, i64* %37, align 8
  store i64 %135, i64* %53, align 8
  store i64 %128, i64* %36, align 8
  %147 = icmp eq %"struct.cc::RTree<unsigned long>::Branch"* %67, null
  br i1 %147, label %150, label %148

148:                                              ; preds = %146
  %149 = bitcast %"struct.cc::RTree<unsigned long>::Branch"* %67 to i8*
  call void @_ZdlPv(i8* %149) #13
  br label %150

150:                                              ; preds = %148, %146, %91, %66
  %151 = phi %"struct.cc::RTree<unsigned long>::Branch"* [ %67, %66 ], [ %67, %91 ], [ %140, %146 ], [ %140, %148 ]
  %152 = phi i64 [ %68, %66 ], [ %68, %91 ], [ %141, %146 ], [ %141, %148 ]
  %153 = phi i64 [ %69, %66 ], [ %98, %91 ], [ %135, %146 ], [ %135, %148 ]
  %154 = phi %"struct.cc::RTree<unsigned long>::Branch"* [ %70, %66 ], [ %97, %91 ], [ %134, %146 ], [ %134, %148 ]
  %155 = add nuw i64 %72, 1
  %156 = load i64, i64* %30, align 8
  %157 = load i64, i64* %32, align 8
  %158 = sub i64 %156, %157
  %159 = ashr exact i64 %158, 4
  %160 = icmp ult i64 %155, %159
  br i1 %160, label %66, label %59

161:                                              ; preds = %59
  %162 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 2, i32 2
  %163 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 2, i32 2, i32 0, i32 2, i32 0, i32 0
  %164 = bitcast %"struct.cc::RTree<unsigned long>::Node"** %163 to i64*
  %165 = load i64, i64* %164, align 8
  %166 = bitcast %"class.std::__1::vector"* %162 to i64*
  %167 = load i64, i64* %166, align 8
  %168 = icmp eq i64 %165, %167
  %169 = inttoptr i64 %165 to %"struct.cc::RTree<unsigned long>::Node"*
  br i1 %168, label %170, label %195

170:                                              ; preds = %161
  %171 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 2, i32 2, i32 0, i32 1
  %172 = bitcast %"struct.cc::RTree<unsigned long>::Node"** %171 to i64*
  %173 = load i64, i64* %172, align 8
  %174 = sub i64 %173, %165
  %175 = sdiv exact i64 %174, 360
  %176 = call i8* @_Znwm(i64 360) #13
  %177 = bitcast i8* %176 to %"struct.cc::RTree<unsigned long>::Node"*
  %178 = getelementptr inbounds %"struct.cc::RTree<unsigned long>::Node", %"struct.cc::RTree<unsigned long>::Node"* %177, i64 %175
  %179 = ptrtoint %"struct.cc::RTree<unsigned long>::Node"* %178 to i64
  %180 = getelementptr inbounds i8, i8* %176, i64 360
  %181 = ptrtoint i8* %180 to i64
  %182 = sdiv exact i64 %174, -360
  %183 = getelementptr inbounds %"struct.cc::RTree<unsigned long>::Node", %"struct.cc::RTree<unsigned long>::Node"* %178, i64 %182
  %184 = ptrtoint %"struct.cc::RTree<unsigned long>::Node"* %183 to i64
  %185 = icmp sgt i64 %174, 0
  br i1 %185, label %186, label %189

186:                                              ; preds = %170
  %187 = bitcast %"struct.cc::RTree<unsigned long>::Node"* %183 to i8*
  %188 = inttoptr i64 %165 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %187, i8* align 8 %188, i64 %174, i1 false) #12
  br label %189

189:                                              ; preds = %186, %170
  store i64 %184, i64* %166, align 8
  store i64 %179, i64* %172, align 8
  store i64 %181, i64* %164, align 8
  %190 = icmp eq i64 %165, 0
  %191 = bitcast i8* %180 to %"struct.cc::RTree<unsigned long>::Node"*
  br i1 %190, label %195, label %192

192:                                              ; preds = %189
  %193 = inttoptr i64 %165 to i8*
  call void @_ZdlPv(i8* %193) #13
  %194 = load %"struct.cc::RTree<unsigned long>::Node"*, %"struct.cc::RTree<unsigned long>::Node"** %163, align 8
  br label %195

195:                                              ; preds = %192, %189, %161
  %196 = phi %"struct.cc::RTree<unsigned long>::Node"* [ %169, %161 ], [ %191, %189 ], [ %194, %192 ]
  %197 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %197) #12
  store i32 0, i32* %2, align 4
  %198 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 2, i32 2, i32 0, i32 1
  %199 = load %"struct.cc::RTree<unsigned long>::Node"*, %"struct.cc::RTree<unsigned long>::Node"** %198, align 8
  %200 = icmp ult %"struct.cc::RTree<unsigned long>::Node"* %199, %196
  br i1 %200, label %201, label %229

201:                                              ; preds = %195
  %202 = getelementptr inbounds %"struct.cc::RTree<unsigned long>::Node", %"struct.cc::RTree<unsigned long>::Node"* %199, i64 0, i32 0
  store i16 0, i16* %202, align 8
  %203 = getelementptr inbounds %"struct.cc::RTree<unsigned long>::Node", %"struct.cc::RTree<unsigned long>::Node"* %199, i64 0, i32 1
  store i16 0, i16* %203, align 2
  %204 = getelementptr inbounds %"struct.cc::RTree<unsigned long>::Node", %"struct.cc::RTree<unsigned long>::Node"* %199, i64 0, i32 2, i64 0, i32 2
  %205 = bitcast %"class.gfx::Rect"* %204 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %205, i8 0, i64 16, i1 false) #12
  %206 = getelementptr inbounds %"struct.cc::RTree<unsigned long>::Node", %"struct.cc::RTree<unsigned long>::Node"* %199, i64 0, i32 2, i64 1, i32 2
  %207 = bitcast %"class.gfx::Rect"* %206 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %207, i8 0, i64 16, i1 false) #12
  %208 = getelementptr inbounds %"struct.cc::RTree<unsigned long>::Node", %"struct.cc::RTree<unsigned long>::Node"* %199, i64 0, i32 2, i64 2, i32 2
  %209 = bitcast %"class.gfx::Rect"* %208 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %209, i8 0, i64 16, i1 false) #12
  %210 = getelementptr inbounds %"struct.cc::RTree<unsigned long>::Node", %"struct.cc::RTree<unsigned long>::Node"* %199, i64 0, i32 2, i64 3, i32 2
  %211 = bitcast %"class.gfx::Rect"* %210 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %211, i8 0, i64 16, i1 false) #12
  %212 = getelementptr inbounds %"struct.cc::RTree<unsigned long>::Node", %"struct.cc::RTree<unsigned long>::Node"* %199, i64 0, i32 2, i64 4, i32 2
  %213 = bitcast %"class.gfx::Rect"* %212 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %213, i8 0, i64 16, i1 false) #12
  %214 = getelementptr inbounds %"struct.cc::RTree<unsigned long>::Node", %"struct.cc::RTree<unsigned long>::Node"* %199, i64 0, i32 2, i64 5, i32 2
  %215 = bitcast %"class.gfx::Rect"* %214 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %215, i8 0, i64 16, i1 false) #12
  %216 = getelementptr inbounds %"struct.cc::RTree<unsigned long>::Node", %"struct.cc::RTree<unsigned long>::Node"* %199, i64 0, i32 2, i64 6, i32 2
  %217 = bitcast %"class.gfx::Rect"* %216 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %217, i8 0, i64 16, i1 false) #12
  %218 = getelementptr inbounds %"struct.cc::RTree<unsigned long>::Node", %"struct.cc::RTree<unsigned long>::Node"* %199, i64 0, i32 2, i64 7, i32 2
  %219 = bitcast %"class.gfx::Rect"* %218 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %219, i8 0, i64 16, i1 false) #12
  %220 = getelementptr inbounds %"struct.cc::RTree<unsigned long>::Node", %"struct.cc::RTree<unsigned long>::Node"* %199, i64 0, i32 2, i64 8, i32 2
  %221 = bitcast %"class.gfx::Rect"* %220 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %221, i8 0, i64 16, i1 false) #12
  %222 = getelementptr inbounds %"struct.cc::RTree<unsigned long>::Node", %"struct.cc::RTree<unsigned long>::Node"* %199, i64 0, i32 2, i64 9, i32 2
  %223 = bitcast %"class.gfx::Rect"* %222 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %223, i8 0, i64 16, i1 false) #12
  %224 = getelementptr inbounds %"struct.cc::RTree<unsigned long>::Node", %"struct.cc::RTree<unsigned long>::Node"* %199, i64 0, i32 2, i64 10, i32 2
  %225 = bitcast %"class.gfx::Rect"* %224 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %225, i8 0, i64 16, i1 false) #12
  %226 = getelementptr inbounds %"struct.cc::RTree<unsigned long>::Node", %"struct.cc::RTree<unsigned long>::Node"* %199, i64 1
  %227 = ptrtoint %"struct.cc::RTree<unsigned long>::Node"* %226 to i64
  %228 = bitcast %"struct.cc::RTree<unsigned long>::Node"** %198 to i64*
  store i64 %227, i64* %228, align 8
  br label %231

229:                                              ; preds = %195
  call void @_ZNSt3__16vectorIN2cc5RTreeImE4NodeImEENS_9allocatorIS5_EEE24__emplace_back_slow_pathIJRiEEEvDpOT_(%"class.std::__1::vector"* %162, i32* nonnull dereferenceable(4) %2) #12
  %230 = load %"struct.cc::RTree<unsigned long>::Node"*, %"struct.cc::RTree<unsigned long>::Node"** %198, align 8
  br label %231

231:                                              ; preds = %229, %201
  %232 = phi %"struct.cc::RTree<unsigned long>::Node"* [ %226, %201 ], [ %230, %229 ]
  %233 = getelementptr inbounds %"struct.cc::RTree<unsigned long>::Node", %"struct.cc::RTree<unsigned long>::Node"* %232, i64 -1
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %197) #12
  %234 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 2, i32 1, i32 0
  store %"struct.cc::RTree<unsigned long>::Node"* %233, %"struct.cc::RTree<unsigned long>::Node"** %234, align 8
  %235 = load %"struct.cc::RTree<unsigned long>::Branch"*, %"struct.cc::RTree<unsigned long>::Branch"** %26, align 8
  %236 = getelementptr inbounds %"struct.cc::RTree<unsigned long>::Branch", %"struct.cc::RTree<unsigned long>::Branch"* %235, i64 0, i32 2
  %237 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 2, i32 1, i32 2
  %238 = bitcast %"class.gfx::Rect"* %237 to i8*
  %239 = bitcast %"class.gfx::Rect"* %236 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %238, i8* align 4 %239, i64 16, i1 false) #12
  %240 = getelementptr inbounds %"struct.cc::RTree<unsigned long>::Node", %"struct.cc::RTree<unsigned long>::Node"* %233, i64 0, i32 0
  store i16 1, i16* %240, align 8
  %241 = load %"struct.cc::RTree<unsigned long>::Branch"*, %"struct.cc::RTree<unsigned long>::Branch"** %26, align 8
  %242 = getelementptr inbounds %"struct.cc::RTree<unsigned long>::Node", %"struct.cc::RTree<unsigned long>::Node"* %232, i64 -1, i32 2, i64 0
  %243 = bitcast %"struct.cc::RTree<unsigned long>::Branch"* %242 to i8*
  %244 = bitcast %"struct.cc::RTree<unsigned long>::Branch"* %241 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %243, i8* align 8 %244, i64 32, i1 false) #12
  br label %295

245:                                              ; preds = %59
  %246 = uitofp i64 %63 to double
  %247 = call double @log(double %246) #12
  %248 = fdiv double %247, 0x40032EE3B77F374C
  %249 = call double @pow(double 1.100000e+01, double %248) #12
  %250 = fadd double %249, -1.000000e+00
  %251 = fdiv double %250, 1.000000e+01
  %252 = fptoui double %251 to i64
  %253 = add i64 %252, 6
  %254 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 2, i32 2
  %255 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 2, i32 2, i32 0, i32 2, i32 0, i32 0
  %256 = bitcast %"struct.cc::RTree<unsigned long>::Node"** %255 to i64*
  %257 = load i64, i64* %256, align 8
  %258 = bitcast %"class.std::__1::vector"* %254 to i64*
  %259 = load i64, i64* %258, align 8
  %260 = sub i64 %257, %259
  %261 = sdiv exact i64 %260, 360
  %262 = icmp ult i64 %261, %253
  br i1 %262, label %263, label %290

263:                                              ; preds = %245
  %264 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 2, i32 2, i32 0, i32 1
  %265 = bitcast %"struct.cc::RTree<unsigned long>::Node"** %264 to i64*
  %266 = icmp ugt i64 %253, 51240955760304310
  br i1 %266, label %267, label %268

267:                                              ; preds = %263
  call void @abort() #14
  unreachable

268:                                              ; preds = %263
  %269 = load i64, i64* %265, align 8
  %270 = sub i64 %269, %259
  %271 = sdiv exact i64 %270, 360
  %272 = mul i64 %253, 360
  %273 = call i8* @_Znwm(i64 %272) #13
  %274 = bitcast i8* %273 to %"struct.cc::RTree<unsigned long>::Node"*
  %275 = getelementptr inbounds %"struct.cc::RTree<unsigned long>::Node", %"struct.cc::RTree<unsigned long>::Node"* %274, i64 %271
  %276 = ptrtoint %"struct.cc::RTree<unsigned long>::Node"* %275 to i64
  %277 = getelementptr inbounds %"struct.cc::RTree<unsigned long>::Node", %"struct.cc::RTree<unsigned long>::Node"* %274, i64 %253
  %278 = ptrtoint %"struct.cc::RTree<unsigned long>::Node"* %277 to i64
  %279 = sdiv exact i64 %270, -360
  %280 = getelementptr inbounds %"struct.cc::RTree<unsigned long>::Node", %"struct.cc::RTree<unsigned long>::Node"* %275, i64 %279
  %281 = ptrtoint %"struct.cc::RTree<unsigned long>::Node"* %280 to i64
  %282 = icmp sgt i64 %270, 0
  br i1 %282, label %283, label %286

283:                                              ; preds = %268
  %284 = bitcast %"struct.cc::RTree<unsigned long>::Node"* %280 to i8*
  %285 = inttoptr i64 %259 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %284, i8* align 8 %285, i64 %270, i1 false) #12
  br label %286

286:                                              ; preds = %283, %268
  store i64 %281, i64* %258, align 8
  store i64 %276, i64* %265, align 8
  store i64 %278, i64* %256, align 8
  %287 = icmp eq i64 %259, 0
  br i1 %287, label %290, label %288

288:                                              ; preds = %286
  %289 = inttoptr i64 %259 to i8*
  call void @_ZdlPv(i8* %289) #13
  br label %290

290:                                              ; preds = %288, %286, %245
  %291 = bitcast %"struct.cc::RTree<unsigned long>::Branch"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %291) #12
  call void @_ZN2cc5RTreeImE14BuildRecursiveEPNSt3__16vectorINS1_6BranchImEENS2_9allocatorIS5_EEEEi(%"struct.cc::RTree<unsigned long>::Branch"* nonnull sret %4, %"class.cc::RTree"* %23, %"class.std::__1::vector.246"* nonnull %3, i32 0) #12
  %292 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 2, i32 1
  %293 = bitcast %"struct.cc::RTree<unsigned long>::Branch"* %292 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %293, i8* nonnull align 8 %291, i64 32, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %291) #12
  %294 = load %"struct.cc::RTree<unsigned long>::Branch"*, %"struct.cc::RTree<unsigned long>::Branch"** %26, align 8
  br label %295

295:                                              ; preds = %290, %231, %59
  %296 = phi %"struct.cc::RTree<unsigned long>::Branch"* [ %65, %59 ], [ %294, %290 ], [ %241, %231 ]
  %297 = icmp eq %"struct.cc::RTree<unsigned long>::Branch"* %296, null
  br i1 %297, label %301, label %298

298:                                              ; preds = %295
  %299 = ptrtoint %"struct.cc::RTree<unsigned long>::Branch"* %296 to i64
  store i64 %299, i64* %53, align 8
  %300 = bitcast %"struct.cc::RTree<unsigned long>::Branch"* %296 to i8*
  call void @_ZdlPv(i8* %300) #13
  br label %301

301:                                              ; preds = %295, %298
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #12
  br label %302

302:                                              ; preds = %15, %301
  %303 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 4
  call void @_ZN2cc13PaintOpBuffer11ShrinkToFitEv(%"class.cc::PaintOpBuffer"* %303) #12
  %304 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 5
  %305 = bitcast %"class.std::__1::vector.68"* %304 to i64*
  %306 = load i64, i64* %305, align 8
  %307 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 5, i32 0, i32 1
  %308 = bitcast %"class.gfx::Rect"** %307 to i64*
  store i64 %306, i64* %308, align 8
  %309 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %310 = bitcast %"class.gfx::Rect"** %309 to i64*
  %311 = load i64, i64* %310, align 8
  %312 = icmp eq i64 %311, %306
  br i1 %312, label %318, label %313

313:                                              ; preds = %302
  %314 = icmp eq i64 %306, 0
  %315 = bitcast %"class.std::__1::vector.68"* %304 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %315, i8 0, i64 24, i1 false)
  br i1 %314, label %318, label %316

316:                                              ; preds = %313
  %317 = inttoptr i64 %306 to i8*
  call void @_ZdlPv(i8* %317) #13
  br label %318

318:                                              ; preds = %302, %313, %316
  %319 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 6
  %320 = bitcast %"class.std::__1::vector.75"* %319 to i64*
  %321 = load i64, i64* %320, align 8
  %322 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 6, i32 0, i32 1
  %323 = bitcast i64** %322 to i64*
  store i64 %321, i64* %323, align 8
  %324 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  %325 = bitcast i64** %324 to i64*
  %326 = load i64, i64* %325, align 8
  %327 = icmp eq i64 %326, %321
  br i1 %327, label %333, label %328

328:                                              ; preds = %318
  %329 = icmp eq i64 %321, 0
  %330 = bitcast %"class.std::__1::vector.75"* %319 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %330, i8 0, i64 24, i1 false)
  br i1 %329, label %333, label %331

331:                                              ; preds = %328
  %332 = inttoptr i64 %321 to i8*
  call void @_ZdlPv(i8* %332) #13
  br label %333

333:                                              ; preds = %318, %328, %331
  %334 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 7
  %335 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 7, i32 0, i32 2, i32 0, i32 0
  %336 = bitcast %"struct.cc::DisplayItemList::PairedBeginInfo"** %335 to i64*
  %337 = load i64, i64* %336, align 8
  %338 = bitcast %"class.std::__1::vector.82"* %334 to i64*
  %339 = load i64, i64* %338, align 8
  %340 = sub i64 %337, %339
  %341 = ashr exact i64 %340, 4
  %342 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 7, i32 0, i32 1
  %343 = bitcast %"struct.cc::DisplayItemList::PairedBeginInfo"** %342 to i64*
  %344 = load i64, i64* %343, align 8
  %345 = sub i64 %344, %339
  %346 = ashr exact i64 %345, 4
  %347 = icmp ugt i64 %341, %346
  br i1 %347, label %348, label %371

348:                                              ; preds = %333
  %349 = icmp eq i64 %345, 0
  br i1 %349, label %350, label %353

350:                                              ; preds = %348
  %351 = getelementptr inbounds %"struct.cc::DisplayItemList::PairedBeginInfo", %"struct.cc::DisplayItemList::PairedBeginInfo"* null, i64 %346
  %352 = ptrtoint %"struct.cc::DisplayItemList::PairedBeginInfo"* %351 to i64
  br label %365

353:                                              ; preds = %348
  %354 = icmp ugt i64 %346, 1152921504606846975
  br i1 %354, label %355, label %356

355:                                              ; preds = %353
  call void @abort() #14
  unreachable

356:                                              ; preds = %353
  %357 = call i8* @_Znwm(i64 %345) #13
  %358 = bitcast i8* %357 to %"struct.cc::DisplayItemList::PairedBeginInfo"*
  %359 = getelementptr inbounds %"struct.cc::DisplayItemList::PairedBeginInfo", %"struct.cc::DisplayItemList::PairedBeginInfo"* %358, i64 %346
  %360 = ptrtoint %"struct.cc::DisplayItemList::PairedBeginInfo"* %359 to i64
  %361 = ptrtoint i8* %357 to i64
  %362 = icmp sgt i64 %345, 0
  br i1 %362, label %363, label %365

363:                                              ; preds = %356
  %364 = inttoptr i64 %339 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %357, i8* align 8 %364, i64 %345, i1 false) #12
  br label %365

365:                                              ; preds = %363, %356, %350
  %366 = phi i64 [ %361, %356 ], [ %361, %363 ], [ 0, %350 ]
  %367 = phi i64 [ %360, %356 ], [ %360, %363 ], [ %352, %350 ]
  store i64 %366, i64* %338, align 8
  store i64 %367, i64* %343, align 8
  store i64 %367, i64* %336, align 8
  %368 = icmp eq i64 %339, 0
  br i1 %368, label %371, label %369

369:                                              ; preds = %365
  %370 = inttoptr i64 %339 to i8*
  call void @_ZdlPv(i8* %370) #13
  br label %371

371:                                              ; preds = %333, %365, %369
  %372 = icmp eq i8* %17, null
  br i1 %372, label %377, label %373

373:                                              ; preds = %371
  %374 = load i8, i8* %17, align 1
  %375 = icmp eq i8 %374, 0
  br i1 %375, label %377, label %376

376:                                              ; preds = %373
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %17, i8* %16, i64 %18) #12
  br label %377

377:                                              ; preds = %371, %373, %376
  ret void
}

declare void @_ZN2cc13PaintOpBuffer11ShrinkToFitEv(%"class.cc::PaintOpBuffer"*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK2cc15DisplayItemList9BytesUsedEv(%"class.cc::DisplayItemList"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 4, i32 4
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 4, i32 6
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %3, 712
  %7 = add i64 %6, %5
  ret i64 %7
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2cc15DisplayItemList17EmitTraceSnapshotEv(%"class.cc::DisplayItemList"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::unique_ptr.119", align 8
  %3 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 159, i32 0), align 16
  %4 = and i8 %3, 9
  %5 = icmp ne i8 %4, 0
  %6 = load atomic i64, i64* @_ZZNK2cc15DisplayItemList17EmitTraceSnapshotEvE28trace_event_unique_atomic216 monotonic, align 8
  %7 = inttoptr i64 %6 to i8*
  %8 = icmp eq i64 %6, 0
  br i1 %8, label %9, label %12, !prof !25

9:                                                ; preds = %1
  %10 = tail call i8* @_ZN4base11trace_event8TraceLog23GetCategoryGroupEnabledEPKc(i8* getelementptr inbounds ([126 x i8], [126 x i8]* @.str.1, i64 0, i64 0)) #12
  %11 = ptrtoint i8* %10 to i64
  store atomic volatile i64 %11, i64* @_ZZNK2cc15DisplayItemList17EmitTraceSnapshotEvE28trace_event_unique_atomic216 monotonic, align 8
  br label %12

12:                                               ; preds = %9, %1
  %13 = phi i8* [ %10, %9 ], [ %7, %1 ]
  %14 = load i8, i8* %13, align 1
  %15 = and i8 %14, 25
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %33, label %17, !prof !24

17:                                               ; preds = %12
  %18 = ptrtoint %"class.cc::DisplayItemList"* %0 to i64
  %19 = bitcast %"class.std::__1::unique_ptr.119"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #12
  %20 = tail call i8* @_Znwm(i64 16) #13
  %21 = bitcast i8* %20 to %"class.base::trace_event::TracedValue"*
  tail call void @_ZN4base11trace_event11TracedValueC1Em(%"class.base::trace_event::TracedValue"* nonnull %21, i64 0) #12
  tail call void @_ZNK2cc15DisplayItemList10AddToValueEPN4base11trace_event11TracedValueEb(%"class.cc::DisplayItemList"* %0, %"class.base::trace_event::TracedValue"* nonnull %21, i1 zeroext %5) #12
  %22 = getelementptr inbounds %"class.std::__1::unique_ptr.119", %"class.std::__1::unique_ptr.119"* %2, i64 0, i32 0, i32 0, i32 0
  %23 = bitcast %"class.std::__1::unique_ptr.119"* %2 to i8**
  store i8* %20, i8** %23, align 8
  %24 = call i64 @_ZN20trace_event_internal13AddTraceEventINSt3__110unique_ptrIN4base11trace_event11TracedValueENS1_14default_deleteIS5_EEEEEENS4_16TraceEventHandleEcPKhPKcSD_yjySD_OT_(i8 signext 79, i8* %13, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.2, i64 0, i64 0), i8* null, i64 %18, i32 2048, i64 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.3, i64 0, i64 0), %"class.std::__1::unique_ptr.119"* nonnull dereferenceable(8) %2)
  %25 = load %"class.base::trace_event::TracedValue"*, %"class.base::trace_event::TracedValue"** %22, align 8
  store %"class.base::trace_event::TracedValue"* null, %"class.base::trace_event::TracedValue"** %22, align 8
  %26 = icmp eq %"class.base::trace_event::TracedValue"* %25, null
  br i1 %26, label %32, label %27

27:                                               ; preds = %17
  %28 = bitcast %"class.base::trace_event::TracedValue"* %25 to void (%"class.base::trace_event::TracedValue"*)***
  %29 = load void (%"class.base::trace_event::TracedValue"*)**, void (%"class.base::trace_event::TracedValue"*)*** %28, align 8
  %30 = getelementptr inbounds void (%"class.base::trace_event::TracedValue"*)*, void (%"class.base::trace_event::TracedValue"*)** %29, i64 1
  %31 = load void (%"class.base::trace_event::TracedValue"*)*, void (%"class.base::trace_event::TracedValue"*)** %30, align 8
  call void %31(%"class.base::trace_event::TracedValue"* nonnull %25) #12
  br label %32

32:                                               ; preds = %17, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #12
  br label %33

33:                                               ; preds = %12, %32
  ret void
}

declare i8* @_ZN4base11trace_event8TraceLog23GetCategoryGroupEnabledEPKc(i8*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN20trace_event_internal13AddTraceEventINSt3__110unique_ptrIN4base11trace_event11TracedValueENS1_14default_deleteIS5_EEEEEENS4_16TraceEventHandleEcPKhPKcSD_yjySD_OT_(i8 signext, i8*, i8*, i8*, i64, i32, i64, i8*, %"class.std::__1::unique_ptr.119"* dereferenceable(8)) local_unnamed_addr #5 comdat {
  %10 = alloca %"class.base::trace_event::TraceArguments", align 8
  %11 = alloca %"class.base::TimeTicks", align 8
  %12 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #12
  %13 = bitcast %"class.base::TimeTicks"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #12
  %14 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %11, i64 0, i32 0, i32 0
  %15 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #12
  store i64 %15, i64* %14, align 8
  %16 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %16) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 40, i1 false) #12
  store i8 1, i8* %16, align 8
  %17 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 1, i64 0
  store i8 8, i8* %17, align 1
  %18 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 2, i64 0
  store i8* %7, i8** %18, align 8
  %19 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 0
  %20 = getelementptr inbounds %"class.std::__1::unique_ptr.119", %"class.std::__1::unique_ptr.119"* %8, i64 0, i32 0, i32 0, i32 0
  %21 = load %"class.base::trace_event::TracedValue"*, %"class.base::trace_event::TracedValue"** %20, align 8
  store %"class.base::trace_event::TracedValue"* null, %"class.base::trace_event::TracedValue"** %20, align 8
  %22 = getelementptr inbounds %"class.base::trace_event::TracedValue", %"class.base::trace_event::TracedValue"* %21, i64 0, i32 0
  %23 = bitcast %"union.base::trace_event::TraceValue"* %19 to %"class.base::trace_event::ConvertableToTraceFormat"**
  store %"class.base::trace_event::ConvertableToTraceFormat"* %22, %"class.base::trace_event::ConvertableToTraceFormat"** %23, align 8
  %24 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext %0, i8* %1, i8* %2, i8* %3, i64 %4, i64 %6, i32 %12, %"class.base::TimeTicks"* nonnull dereferenceable(8) %11, %"class.base::trace_event::TraceArguments"* nonnull %10, i32 %5) #12
  %25 = load i8, i8* %16, align 8
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %61, label %27

27:                                               ; preds = %9, %56
  %28 = phi i64 [ %57, %56 ], [ 0, %9 ]
  %29 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 1, i64 %28
  %30 = load i8, i8* %29, align 1
  %31 = icmp eq i8 %30, 8
  br i1 %31, label %32, label %43

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 %28
  %34 = bitcast %"union.base::trace_event::TraceValue"* %33 to %"class.base::trace_event::ConvertableToTraceFormat"**
  %35 = load %"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::ConvertableToTraceFormat"** %34, align 8
  %36 = icmp eq %"class.base::trace_event::ConvertableToTraceFormat"* %35, null
  br i1 %36, label %56, label %37

37:                                               ; preds = %32
  %38 = bitcast %"class.base::trace_event::ConvertableToTraceFormat"* %35 to void (%"class.base::trace_event::ConvertableToTraceFormat"*)***
  %39 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)**, void (%"class.base::trace_event::ConvertableToTraceFormat"*)*** %38, align 8
  %40 = getelementptr inbounds void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %39, i64 1
  %41 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %40, align 8
  call void %41(%"class.base::trace_event::ConvertableToTraceFormat"* nonnull %35) #12
  %42 = load i8, i8* %29, align 1
  br label %43

43:                                               ; preds = %37, %27
  %44 = phi i8 [ %30, %27 ], [ %42, %37 ]
  %45 = icmp eq i8 %44, 9
  br i1 %45, label %46, label %56

46:                                               ; preds = %43
  %47 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 %28
  %48 = bitcast %"union.base::trace_event::TraceValue"* %47 to %"class.protozero::HeapBuffered"**
  %49 = load %"class.protozero::HeapBuffered"*, %"class.protozero::HeapBuffered"** %48, align 8
  %50 = icmp eq %"class.protozero::HeapBuffered"* %49, null
  br i1 %50, label %56, label %51

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %49, i64 0, i32 2, i32 1
  call void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"* %52) #12
  %53 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %49, i64 0, i32 1
  call void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"* %53) #12
  %54 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %49, i64 0, i32 0
  call void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"* %54) #12
  %55 = bitcast %"class.protozero::HeapBuffered"* %49 to i8*
  call void @_ZdlPv(i8* %55) #13
  br label %56

56:                                               ; preds = %51, %46, %43, %32
  %57 = add nuw nsw i64 %28, 1
  %58 = load i8, i8* %16, align 8
  %59 = zext i8 %58 to i64
  %60 = icmp ult i64 %57, %59
  br i1 %60, label %27, label %61

61:                                               ; preds = %56, %9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %16) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #12
  ret i64 %24
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.base::trace_event::TracedValue"* @_ZNK2cc15DisplayItemList17CreateTracedValueEb(%"class.cc::DisplayItemList"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = tail call i8* @_Znwm(i64 16) #13
  %4 = bitcast i8* %3 to %"class.base::trace_event::TracedValue"*
  tail call void @_ZN4base11trace_event11TracedValueC1Em(%"class.base::trace_event::TracedValue"* nonnull %4, i64 0) #12
  tail call void @_ZNK2cc15DisplayItemList10AddToValueEPN4base11trace_event11TracedValueEb(%"class.cc::DisplayItemList"* %0, %"class.base::trace_event::TracedValue"* nonnull %4, i1 zeroext %1)
  ret %"class.base::trace_event::TracedValue"* %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2cc15DisplayItemList8ToStringEv(%"class.std::__1::basic_string"* noalias sret, %"class.cc::DisplayItemList"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::trace_event::TracedValueJSON", align 8
  %4 = bitcast %"class.base::trace_event::TracedValueJSON"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #12
  %5 = getelementptr inbounds %"class.base::trace_event::TracedValueJSON", %"class.base::trace_event::TracedValueJSON"* %3, i64 0, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.base::trace_event::TracedValueJSON", %"class.base::trace_event::TracedValueJSON"* %3, i64 0, i32 0
  %7 = bitcast %"class.base::trace_event::TracedValueJSON"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 16, i1 false)
  call void @_ZN4base11trace_event11TracedValueC2Emb(%"class.base::trace_event::TracedValue"* nonnull %6, i64 0, i1 zeroext true) #12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN4base11trace_event15TracedValueJSONE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  call void @_ZNK2cc15DisplayItemList10AddToValueEPN4base11trace_event11TracedValueEb(%"class.cc::DisplayItemList"* %1, %"class.base::trace_event::TracedValue"* nonnull %6, i1 zeroext true)
  call void @_ZNK4base11trace_event15TracedValueJSON15ToFormattedJSONEv(%"class.std::__1::basic_string"* sret %0, %"class.base::trace_event::TracedValueJSON"* nonnull %3) #12
  call void @_ZN4base11trace_event11TracedValueD2Ev(%"class.base::trace_event::TracedValue"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2cc15DisplayItemList10AddToValueEPN4base11trace_event11TracedValueEb(%"class.cc::DisplayItemList"*, %"class.base::trace_event::TracedValue"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = alloca <2 x i64>, align 16
  %5 = bitcast <2 x i64>* %4 to %"class.gfx::Rect"*
  %6 = alloca %"struct.cc::PlaybackParams", align 8
  %7 = alloca %class.SkM44, align 4
  %8 = alloca %"class.base::RepeatingCallback", align 8
  %9 = alloca %"class.base::RepeatingCallback.103", align 8
  %10 = alloca %"class.std::__1::map", align 8
  %11 = alloca %"class.cc::PaintOpBuffer::Iterator", align 8
  %12 = alloca %"class.std::__1::basic_string", align 8
  %13 = alloca %class.SkPictureRecorder, align 8
  %14 = alloca { <2 x float>, <2 x float> }, align 8
  %15 = bitcast { <2 x float>, <2 x float> }* %14 to %struct.SkRect*
  %16 = alloca %class.sk_sp.159, align 8
  %17 = alloca %"class.std::__1::basic_string", align 8
  %18 = alloca %class.SkPictureRecorder, align 8
  %19 = alloca { <2 x float>, <2 x float> }, align 8
  %20 = bitcast { <2 x float>, <2 x float> }* %19 to %struct.SkRect*
  %21 = alloca { <2 x float>, <2 x float> }, align 8
  %22 = bitcast { <2 x float>, <2 x float> }* %21 to %struct.SkRect*
  %23 = alloca %class.sk_sp.159, align 8
  %24 = alloca %"class.std::__1::basic_string", align 8
  tail call void @_ZN4base11trace_event11TracedValue15BeginDictionaryEPKc(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.4, i64 0, i64 0)) #12
  %25 = bitcast <2 x i64>* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %25) #12
  %26 = bitcast <2 x i64>* %4 to i32*
  %27 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %5, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %25, i8 0, i64 16, i1 false) #12
  %28 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 2
  %29 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 2, i32 3
  %30 = load i8, i8* %29, align 8, !range !2
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %36, label %32

32:                                               ; preds = %3
  %33 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 2, i32 1, i32 2
  %34 = bitcast %"class.gfx::Rect"* %33 to <2 x i64>*
  %35 = load <2 x i64>, <2 x i64>* %34, align 8
  store <2 x i64> %35, <2 x i64>* %4, align 16
  br label %38

36:                                               ; preds = %3
  %37 = bitcast <2 x i64>* %4 to <4 x i32>*
  store <4 x i32> <i32 0, i32 0, i32 2147483647, i32 2147483647>, <4 x i32>* %37, align 16
  br label %38

38:                                               ; preds = %36, %32
  br i1 %2, label %39, label %222

39:                                               ; preds = %38
  tail call void @_ZN4base11trace_event11TracedValue10BeginArrayEPKc(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i64 0, i64 0)) #12
  %40 = bitcast %"struct.cc::PlaybackParams"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %40) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %40, i8* align 8 bitcast (%"struct.cc::PlaybackParams"* @__const._ZNK2cc15DisplayItemList10AddToValueEPN4base11trace_event11TracedValueEb.params to i8*), i64 96, i1 false)
  %41 = bitcast %class.SkM44* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %41) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %41, i8* align 4 bitcast ([16 x float]* @constinit to i8*), i64 64, i1 false) #12
  %42 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %42, align 8
  %43 = getelementptr inbounds %"class.base::RepeatingCallback.103", %"class.base::RepeatingCallback.103"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %43, align 8
  call void @_ZN2cc14PlaybackParamsC1EPNS_13ImageProviderERK5SkM44N4base17RepeatingCallbackIFvP8SkCanvasjEEENS7_IFvvEEE(%"struct.cc::PlaybackParams"* nonnull %6, %"class.cc::ImageProvider"* null, %class.SkM44* nonnull dereferenceable(64) %7, %"class.base::RepeatingCallback"* nonnull %8, %"class.base::RepeatingCallback.103"* nonnull %9) #12
  %44 = getelementptr inbounds %"class.base::RepeatingCallback.103", %"class.base::RepeatingCallback.103"* %9, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %44) #12
  %45 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %8, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %45) #12
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %41) #12
  %46 = bitcast %"class.std::__1::map"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %46) #12
  %47 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %10, i64 0, i32 0, i32 0
  %48 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %10, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %49 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %10, i64 0, i32 0, i32 2, i32 0, i32 0
  %50 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %10, i64 0, i32 0, i32 1, i32 0, i32 0
  %51 = bitcast %"class.std::__1::__tree_node_base"** %48 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %51, i8 0, i64 16, i1 false) #12, !alias.scope !26
  store %"class.std::__1::__tree_end_node"* %50, %"class.std::__1::__tree_end_node"** %47, align 8, !alias.scope !26
  %52 = getelementptr inbounds %"class.cc::RTree", %"class.cc::RTree"* %28, i64 0, i32 0
  %53 = load i64, i64* %52, align 8, !noalias !26
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %39
  %56 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 2, i32 1, i32 0
  %57 = load %"struct.cc::RTree<unsigned long>::Node"*, %"struct.cc::RTree<unsigned long>::Node"** %56, align 8, !noalias !26
  call void @_ZNK2cc5RTreeImE21GetAllBoundsRecursiveEPNS1_4NodeImEEPNSt3__13mapImN3gfx4RectENS5_4lessImEENS5_9allocatorINS5_4pairIKmS8_EEEEEE(%"class.cc::RTree"* %28, %"struct.cc::RTree<unsigned long>::Node"* %57, %"class.std::__1::map"* nonnull %10) #12
  br label %58

58:                                               ; preds = %39, %55
  %59 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 4
  %60 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 4, i32 2, i32 0, i32 0, i32 0
  %61 = bitcast i8** %60 to i64*
  %62 = bitcast %"class.cc::PaintOpBuffer::Iterator"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %62) #12
  %63 = getelementptr inbounds %"class.cc::PaintOpBuffer::Iterator", %"class.cc::PaintOpBuffer::Iterator"* %11, i64 0, i32 0
  %64 = getelementptr inbounds %"class.cc::PaintOpBuffer::Iterator", %"class.cc::PaintOpBuffer::Iterator"* %11, i64 0, i32 1
  %65 = getelementptr inbounds %"class.cc::PaintOpBuffer::Iterator", %"class.cc::PaintOpBuffer::Iterator"* %11, i64 0, i32 2
  %66 = load i64, i64* %61, align 8, !noalias !29
  store %"class.cc::PaintOpBuffer"* %59, %"class.cc::PaintOpBuffer"** %63, align 8, !alias.scope !29
  %67 = bitcast i8** %64 to i64*
  store i64 %66, i64* %67, align 8, !alias.scope !29
  store i64 0, i64* %65, align 8, !alias.scope !29
  %68 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 4, i32 3
  %69 = load i64, i64* %68, align 8, !noalias !32
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %73

71:                                               ; preds = %58
  %72 = bitcast %"class.std::__1::__tree_end_node"* %50 to %"class.std::__1::__tree_node"**
  br label %95

73:                                               ; preds = %58
  %74 = inttoptr i64 %66 to %"class.cc::PaintOp"*
  %75 = bitcast i8** %64 to %"class.cc::PaintOp"**
  %76 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  %77 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %78 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %77, i64 0, i32 1, i32 0
  %79 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %81 = bitcast %"class.std::__1::__tree_end_node"* %50 to %"class.std::__1::__tree_node"**
  %82 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %50, i64 0, i32 0
  %83 = bitcast %"class.std::__1::map"* %10 to i64*
  %84 = getelementptr inbounds %class.SkPictureRecorder, %class.SkPictureRecorder* %13, i64 0, i32 0
  %85 = bitcast { <2 x float>, <2 x float> }* %14 to i8*
  %86 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %14, i64 0, i32 0
  %87 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %14, i64 0, i32 1
  %88 = bitcast %class.sk_sp.159* %16 to i8*
  %89 = getelementptr inbounds %class.sk_sp.159, %class.sk_sp.159* %16, i64 0, i32 0
  %90 = bitcast %"class.std::__1::basic_string"* %17 to i8*
  %91 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %92 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %93 = bitcast %"class.std::__1::basic_string"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %94 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %93, i64 0, i32 1, i32 0
  br label %99

95:                                               ; preds = %216, %71
  %96 = phi %"class.std::__1::__tree_node"** [ %72, %71 ], [ %81, %216 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %62) #12
  call void @_ZN4base11trace_event11TracedValue8EndArrayEv(%"class.base::trace_event::TracedValue"* %1) #12
  %97 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %10, i64 0, i32 0
  %98 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %96, align 8
  call void @_ZNSt3__16__treeINS_12__value_typeImN3gfx4RectEEENS_19__map_value_compareImS4_NS_4lessImEELb1EEENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE(%"class.std::__1::__tree"* nonnull %97, %"class.std::__1::__tree_node"* %98) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %46) #12
  call void @_ZN2cc14PlaybackParamsD1Ev(%"struct.cc::PlaybackParams"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %40) #12
  br label %222

99:                                               ; preds = %220, %73
  %100 = phi %"class.cc::PaintOp"* [ %221, %220 ], [ %74, %73 ]
  call void @_ZN4base11trace_event11TracedValue15BeginDictionaryEv(%"class.base::trace_event::TracedValue"* %1) #12
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %76) #12
  %101 = getelementptr inbounds %"class.cc::PaintOp", %"class.cc::PaintOp"* %100, i64 0, i32 0
  %102 = load i32, i32* %101, align 4
  %103 = trunc i32 %102 to i8
  call void @_ZN2cc19PaintOpTypeToStringENS_11PaintOpTypeE(%"class.std::__1::basic_string"* nonnull sret %12, i8 zeroext %103) #12
  %104 = load i8, i8* %78, align 1
  %105 = icmp slt i8 %104, 0
  %106 = load i8*, i8** %79, align 8
  %107 = select i1 %105, i8* %106, i8* %76
  %108 = load i64, i64* %80, align 8
  %109 = zext i8 %104 to i64
  %110 = select i1 %105, i64 %108, i64 %109
  call void @_ZN4base11trace_event11TracedValue9SetStringEPKcNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6, i64 0, i64 0), i8* %107, i64 %110) #12
  %111 = load i8, i8* %78, align 1
  %112 = icmp slt i8 %111, 0
  br i1 %112, label %113, label %115

113:                                              ; preds = %99
  %114 = load i8*, i8** %79, align 8
  call void @_ZdlPv(i8* %114) #13
  br label %115

115:                                              ; preds = %99, %113
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %76) #12
  %116 = load i64, i64* %61, align 8
  %117 = ptrtoint %"class.cc::PaintOp"* %100 to i64
  %118 = sub i64 %117, %116
  %119 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %81, align 8
  %120 = icmp eq %"class.std::__1::__tree_node"* %119, null
  br i1 %120, label %147, label %121

121:                                              ; preds = %115, %143
  %122 = phi %"class.std::__1::__tree_node"* [ %146, %143 ], [ %119, %115 ]
  %123 = phi %"class.std::__1::__tree_node_base"** [ %145, %143 ], [ %48, %115 ]
  %124 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %122, i64 0, i32 1, i32 0, i32 0
  %125 = load i64, i64* %124, align 8
  %126 = icmp ult i64 %118, %125
  br i1 %126, label %127, label %133

127:                                              ; preds = %121
  %128 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %122, i64 0, i32 0, i32 0, i32 0
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = icmp eq %"class.std::__1::__tree_node_base"* %129, null
  br i1 %130, label %131, label %143

131:                                              ; preds = %127
  %132 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %122, i64 0, i32 0, i32 0
  br label %147

133:                                              ; preds = %121
  %134 = icmp ult i64 %125, %118
  br i1 %134, label %135, label %141

135:                                              ; preds = %133
  %136 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %122, i64 0, i32 0, i32 1
  %137 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %136, align 8
  %138 = icmp eq %"class.std::__1::__tree_node_base"* %137, null
  br i1 %138, label %139, label %143

139:                                              ; preds = %135
  %140 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %122, i64 0, i32 0, i32 0
  br label %147

141:                                              ; preds = %133
  %142 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %122, i64 0, i32 0, i32 0
  br label %147

143:                                              ; preds = %135, %127
  %144 = phi %"class.std::__1::__tree_node_base"* [ %129, %127 ], [ %137, %135 ]
  %145 = phi %"class.std::__1::__tree_node_base"** [ %128, %127 ], [ %136, %135 ]
  %146 = bitcast %"class.std::__1::__tree_node_base"* %144 to %"class.std::__1::__tree_node"*
  br label %121

147:                                              ; preds = %115, %141, %139, %131
  %148 = phi %"class.std::__1::__tree_end_node"* [ %132, %131 ], [ %140, %139 ], [ %142, %141 ], [ %50, %115 ]
  %149 = phi %"class.std::__1::__tree_node_base"** [ %128, %131 ], [ %136, %139 ], [ %123, %141 ], [ %82, %115 ]
  %150 = bitcast %"class.std::__1::__tree_node_base"** %149 to %"class.std::__1::__tree_node"**
  %151 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %150, align 8
  %152 = icmp eq %"class.std::__1::__tree_node"* %151, null
  br i1 %152, label %153, label %175

153:                                              ; preds = %147
  %154 = call i8* @_Znwm(i64 56) #13, !noalias !35
  %155 = getelementptr inbounds i8, i8* %154, i64 32
  %156 = bitcast i8* %155 to i64*
  store i64 %118, i64* %156, align 8, !noalias !35
  %157 = getelementptr inbounds i8, i8* %154, i64 40
  call void @llvm.memset.p0i8.i64(i8* align 4 %157, i8 0, i64 16, i1 false) #12, !noalias !35
  %158 = bitcast i8* %154 to %"class.std::__1::__tree_node"*
  %159 = bitcast i8* %154 to %"class.std::__1::__tree_node_base"*
  %160 = getelementptr inbounds i8, i8* %154, i64 16
  %161 = bitcast i8* %160 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %154, i8 0, i64 16, i1 false) #12
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %161, align 8
  %162 = bitcast %"class.std::__1::__tree_node_base"** %149 to i8**
  store i8* %154, i8** %162, align 8
  %163 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %47, align 8
  %164 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %163, i64 0, i32 0
  %165 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %164, align 8
  %166 = icmp eq %"class.std::__1::__tree_node_base"* %165, null
  br i1 %166, label %170, label %167

167:                                              ; preds = %153
  %168 = ptrtoint %"class.std::__1::__tree_node_base"* %165 to i64
  store i64 %168, i64* %83, align 8
  %169 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %149, align 8
  br label %170

170:                                              ; preds = %167, %153
  %171 = phi %"class.std::__1::__tree_node_base"* [ %159, %153 ], [ %169, %167 ]
  %172 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %48, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %172, %"class.std::__1::__tree_node_base"* %171) #12
  %173 = load i64, i64* %49, align 8
  %174 = add i64 %173, 1
  store i64 %174, i64* %49, align 8
  br label %175

175:                                              ; preds = %147, %170
  %176 = phi %"class.std::__1::__tree_node"* [ %158, %170 ], [ %151, %147 ]
  %177 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %176, i64 0, i32 1, i32 0, i32 1
  call void @_ZN2cc8MathUtil16AddToTracedValueEPKcRKN3gfx4RectEPN4base11trace_event11TracedValueE(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.7, i64 0, i64 0), %"class.gfx::Rect"* dereferenceable(16) %177, %"class.base::trace_event::TracedValue"* %1) #12
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %84) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %84, i8* align 8 getelementptr inbounds ({ i8, [3 x i8], %struct.SkRect, [4 x i8], %class.sk_sp.145, %"class.std::__1::unique_ptr.146", %class.sk_sp.152, %"class.std::__1::unique_ptr.153" }, { i8, [3 x i8], %struct.SkRect, [4 x i8], %class.sk_sp.145, %"class.std::__1::unique_ptr.146", %class.sk_sp.152, %"class.std::__1::unique_ptr.153" }* @__const._ZNK2cc15DisplayItemList10AddToValueEPN4base11trace_event11TracedValueEb.recorder.10, i64 0, i32 0), i64 56, i1 false)
  call void @_ZN17SkPictureRecorderC1Ev(%class.SkPictureRecorder* nonnull %13) #12
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %85) #12
  %178 = call { <2 x float>, <2 x float> } @_ZN3gfx12RectToSkRectERKNS_4RectE(%"class.gfx::Rect"* nonnull dereferenceable(16) %5) #12
  %179 = extractvalue { <2 x float>, <2 x float> } %178, 0
  store <2 x float> %179, <2 x float>* %86, align 8
  %180 = extractvalue { <2 x float>, <2 x float> } %178, 1
  store <2 x float> %180, <2 x float>* %87, align 8
  %181 = call %class.SkCanvas* @_ZN17SkPictureRecorder14beginRecordingERK6SkRectP12SkBBHFactory(%class.SkPictureRecorder* nonnull %13, %struct.SkRect* nonnull dereferenceable(16) %15, %class.SkBBHFactory* null) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %85) #12
  call void @_ZNK2cc7PaintOp6RasterEP8SkCanvasRKNS_14PlaybackParamsE(%"class.cc::PaintOp"* %100, %class.SkCanvas* %181, %"struct.cc::PlaybackParams"* nonnull dereferenceable(96) %6) #12
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %88) #12
  store %class.SkPicture* inttoptr (i64 -6148914691236517206 to %class.SkPicture*), %class.SkPicture** %89, align 8
  call void @_ZN17SkPictureRecorder24finishRecordingAsPictureEv(%class.sk_sp.159* nonnull sret %16, %class.SkPictureRecorder* nonnull %13) #12
  %182 = load %class.SkPicture*, %class.SkPicture** %89, align 8
  %183 = bitcast %class.SkPicture* %182 to i32 (%class.SkPicture*, i1)***
  %184 = load i32 (%class.SkPicture*, i1)**, i32 (%class.SkPicture*, i1)*** %183, align 8
  %185 = getelementptr inbounds i32 (%class.SkPicture*, i1)*, i32 (%class.SkPicture*, i1)** %184, i64 5
  %186 = load i32 (%class.SkPicture*, i1)*, i32 (%class.SkPicture*, i1)** %185, align 8
  %187 = call i32 %186(%class.SkPicture* %182, i1 zeroext false) #12
  %188 = icmp eq i32 %187, 0
  br i1 %188, label %203, label %189

189:                                              ; preds = %175
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %90) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %90, i8 0, i64 24, i1 false) #12
  %190 = load %class.SkPicture*, %class.SkPicture** %89, align 8
  call void @_ZN2cc16PictureDebugUtil17SerializeAsBase64EPK9SkPicturePNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%class.SkPicture* %190, %"class.std::__1::basic_string"* nonnull %17) #12
  %191 = load i8, i8* %94, align 1
  %192 = icmp slt i8 %191, 0
  %193 = load i8*, i8** %91, align 8
  %194 = select i1 %192, i8* %193, i8* %90
  %195 = load i64, i64* %92, align 8
  %196 = zext i8 %191 to i64
  %197 = select i1 %192, i64 %195, i64 %196
  call void @_ZN4base11trace_event11TracedValue9SetStringEPKcNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.8, i64 0, i64 0), i8* %194, i64 %197) #12
  %198 = load i8, i8* %94, align 1
  %199 = icmp slt i8 %198, 0
  br i1 %199, label %200, label %202

200:                                              ; preds = %189
  %201 = load i8*, i8** %91, align 8
  call void @_ZdlPv(i8* %201) #13
  br label %202

202:                                              ; preds = %189, %200
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %90) #12
  br label %203

203:                                              ; preds = %175, %202
  call void @_ZN4base11trace_event11TracedValue13EndDictionaryEv(%"class.base::trace_event::TracedValue"* %1) #12
  %204 = load %class.SkPicture*, %class.SkPicture** %89, align 8
  %205 = icmp eq %class.SkPicture* %204, null
  br i1 %205, label %216, label %206

206:                                              ; preds = %203
  %207 = getelementptr inbounds %class.SkPicture, %class.SkPicture* %204, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %208 = atomicrmw add i32* %207, i32 -1 acq_rel
  %209 = icmp eq i32 %208, 1
  br i1 %209, label %210, label %216

210:                                              ; preds = %206
  %211 = bitcast %class.SkPicture* %204 to %class.SkRefCntBase*
  %212 = bitcast %class.SkPicture* %204 to void (%class.SkRefCntBase*)***
  %213 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %212, align 8
  %214 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %213, i64 2
  %215 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %214, align 8
  call void %215(%class.SkRefCntBase* nonnull %211) #12
  br label %216

216:                                              ; preds = %203, %206, %210
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %88) #12
  call void @_ZN17SkPictureRecorderD1Ev(%class.SkPictureRecorder* nonnull %13) #12
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %84) #12
  %217 = call dereferenceable(24) %"class.cc::PaintOpBuffer::Iterator"* @_ZN2cc13PaintOpBuffer8IteratorppEv(%"class.cc::PaintOpBuffer::Iterator"* nonnull %11)
  %218 = load i64, i64* %65, align 8
  %219 = icmp eq i64 %69, %218
  br i1 %219, label %95, label %220

220:                                              ; preds = %216
  %221 = load %"class.cc::PaintOp"*, %"class.cc::PaintOp"** %75, align 8
  br label %99

222:                                              ; preds = %95, %38
  call void @_ZN2cc8MathUtil16AddToTracedValueEPKcRKN3gfx4RectEPN4base11trace_event11TracedValueE(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.9, i64 0, i64 0), %"class.gfx::Rect"* nonnull dereferenceable(16) %5, %"class.base::trace_event::TracedValue"* %1) #12
  call void @_ZN4base11trace_event11TracedValue13EndDictionaryEv(%"class.base::trace_event::TracedValue"* %1) #12
  %223 = getelementptr inbounds %class.SkPictureRecorder, %class.SkPictureRecorder* %18, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %223) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %223, i8* align 8 getelementptr inbounds ({ i8, [3 x i8], %struct.SkRect, [4 x i8], %class.sk_sp.145, %"class.std::__1::unique_ptr.146", %class.sk_sp.152, %"class.std::__1::unique_ptr.153" }, { i8, [3 x i8], %struct.SkRect, [4 x i8], %class.sk_sp.145, %"class.std::__1::unique_ptr.146", %class.sk_sp.152, %"class.std::__1::unique_ptr.153" }* @__const._ZNK2cc15DisplayItemList10AddToValueEPN4base11trace_event11TracedValueEb.recorder.10, i64 0, i32 0), i64 56, i1 false)
  call void @_ZN17SkPictureRecorderC1Ev(%class.SkPictureRecorder* nonnull %18) #12
  %224 = bitcast { <2 x float>, <2 x float> }* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %224) #12
  %225 = call { <2 x float>, <2 x float> } @_ZN3gfx12RectToSkRectERKNS_4RectE(%"class.gfx::Rect"* nonnull dereferenceable(16) %5) #12
  %226 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %19, i64 0, i32 0
  %227 = extractvalue { <2 x float>, <2 x float> } %225, 0
  store <2 x float> %227, <2 x float>* %226, align 8
  %228 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %19, i64 0, i32 1
  %229 = extractvalue { <2 x float>, <2 x float> } %225, 1
  store <2 x float> %229, <2 x float>* %228, align 8
  %230 = call %class.SkCanvas* @_ZN17SkPictureRecorder14beginRecordingERK6SkRectP12SkBBHFactory(%class.SkPictureRecorder* nonnull %18, %struct.SkRect* nonnull dereferenceable(16) %20, %class.SkBBHFactory* null) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %224) #12
  %231 = load i32, i32* %26, align 16
  %232 = sub nsw i32 0, %231
  %233 = sitofp i32 %232 to float
  %234 = load i32, i32* %27, align 4
  %235 = sub nsw i32 0, %234
  %236 = sitofp i32 %235 to float
  call void @_ZN8SkCanvas9translateEff(%class.SkCanvas* %230, float %233, float %236) #12
  %237 = bitcast { <2 x float>, <2 x float> }* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %237) #12
  %238 = call { <2 x float>, <2 x float> } @_ZN3gfx12RectToSkRectERKNS_4RectE(%"class.gfx::Rect"* nonnull dereferenceable(16) %5) #12
  %239 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %21, i64 0, i32 0
  %240 = extractvalue { <2 x float>, <2 x float> } %238, 0
  store <2 x float> %240, <2 x float>* %239, align 8
  %241 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %21, i64 0, i32 1
  %242 = extractvalue { <2 x float>, <2 x float> } %238, 1
  store <2 x float> %242, <2 x float>* %241, align 8
  call void @_ZN8SkCanvas8clipRectERK6SkRect8SkClipOpb(%class.SkCanvas* %230, %struct.SkRect* nonnull dereferenceable(16) %22, i32 1, i1 zeroext false) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %237) #12
  call void @_ZNK2cc15DisplayItemList6RasterEP8SkCanvasPNS_13ImageProviderE(%"class.cc::DisplayItemList"* %0, %class.SkCanvas* %230, %"class.cc::ImageProvider"* null)
  %243 = bitcast %class.sk_sp.159* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %243) #12
  %244 = getelementptr inbounds %class.sk_sp.159, %class.sk_sp.159* %23, i64 0, i32 0
  store %class.SkPicture* inttoptr (i64 -6148914691236517206 to %class.SkPicture*), %class.SkPicture** %244, align 8
  call void @_ZN17SkPictureRecorder24finishRecordingAsPictureEv(%class.sk_sp.159* nonnull sret %23, %class.SkPictureRecorder* nonnull %18) #12
  %245 = bitcast %"class.std::__1::basic_string"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %245) #12
  %246 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %247 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %245, i8 0, i64 24, i1 false) #12
  %248 = load %class.SkPicture*, %class.SkPicture** %244, align 8
  call void @_ZN2cc16PictureDebugUtil17SerializeAsBase64EPK9SkPicturePNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%class.SkPicture* %248, %"class.std::__1::basic_string"* nonnull %24) #12
  %249 = bitcast %"class.std::__1::basic_string"* %24 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %250 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %249, i64 0, i32 1, i32 0
  %251 = load i8, i8* %250, align 1
  %252 = icmp slt i8 %251, 0
  %253 = load i8*, i8** %246, align 8
  %254 = select i1 %252, i8* %253, i8* %245
  %255 = load i64, i64* %247, align 8
  %256 = zext i8 %251 to i64
  %257 = select i1 %252, i64 %255, i64 %256
  call void @_ZN4base11trace_event11TracedValue9SetStringEPKcNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.8, i64 0, i64 0), i8* %254, i64 %257) #12
  %258 = load i8, i8* %250, align 1
  %259 = icmp slt i8 %258, 0
  br i1 %259, label %260, label %262

260:                                              ; preds = %222
  %261 = load i8*, i8** %246, align 8
  call void @_ZdlPv(i8* %261) #13
  br label %262

262:                                              ; preds = %222, %260
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %245) #12
  %263 = load %class.SkPicture*, %class.SkPicture** %244, align 8
  %264 = icmp eq %class.SkPicture* %263, null
  br i1 %264, label %275, label %265

265:                                              ; preds = %262
  %266 = getelementptr inbounds %class.SkPicture, %class.SkPicture* %263, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %267 = atomicrmw add i32* %266, i32 -1 acq_rel
  %268 = icmp eq i32 %267, 1
  br i1 %268, label %269, label %275

269:                                              ; preds = %265
  %270 = bitcast %class.SkPicture* %263 to %class.SkRefCntBase*
  %271 = bitcast %class.SkPicture* %263 to void (%class.SkRefCntBase*)***
  %272 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %271, align 8
  %273 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %272, i64 2
  %274 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %273, align 8
  call void %274(%class.SkRefCntBase* nonnull %270) #12
  br label %275

275:                                              ; preds = %262, %265, %269
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %243) #12
  call void @_ZN17SkPictureRecorderD1Ev(%class.SkPictureRecorder* nonnull %18) #12
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %223) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %25) #12
  ret void
}

declare void @_ZNK4base11trace_event15TracedValueJSON15ToFormattedJSONEv(%"class.std::__1::basic_string"* sret, %"class.base::trace_event::TracedValueJSON"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base11trace_event11TracedValueD2Ev(%"class.base::trace_event::TracedValue"*) unnamed_addr #2

declare void @_ZN4base11trace_event11TracedValue15BeginDictionaryEPKc(%"class.base::trace_event::TracedValue"*, i8*) local_unnamed_addr #1

declare void @_ZN4base11trace_event11TracedValue10BeginArrayEPKc(%"class.base::trace_event::TracedValue"*, i8*) local_unnamed_addr #1

declare void @_ZN2cc14PlaybackParamsC1EPNS_13ImageProviderERK5SkM44N4base17RepeatingCallbackIFvP8SkCanvasjEEENS7_IFvvEEE(%"struct.cc::PlaybackParams"*, %"class.cc::ImageProvider"*, %class.SkM44* dereferenceable(64), %"class.base::RepeatingCallback"*, %"class.base::RepeatingCallback.103"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #2

declare void @_ZN4base11trace_event11TracedValue15BeginDictionaryEv(%"class.base::trace_event::TracedValue"*) local_unnamed_addr #1

declare void @_ZN4base11trace_event11TracedValue9SetStringEPKcNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::trace_event::TracedValue"*, i8*, i8*, i64) local_unnamed_addr #1

declare void @_ZN2cc19PaintOpTypeToStringENS_11PaintOpTypeE(%"class.std::__1::basic_string"* sret, i8 zeroext) local_unnamed_addr #1

declare void @_ZN2cc8MathUtil16AddToTracedValueEPKcRKN3gfx4RectEPN4base11trace_event11TracedValueE(i8*, %"class.gfx::Rect"* dereferenceable(16), %"class.base::trace_event::TracedValue"*) local_unnamed_addr #1

declare void @_ZN17SkPictureRecorderC1Ev(%class.SkPictureRecorder*) unnamed_addr #1

declare %class.SkCanvas* @_ZN17SkPictureRecorder14beginRecordingERK6SkRectP12SkBBHFactory(%class.SkPictureRecorder*, %struct.SkRect* dereferenceable(16), %class.SkBBHFactory*) local_unnamed_addr #1

declare { <2 x float>, <2 x float> } @_ZN3gfx12RectToSkRectERKNS_4RectE(%"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZNK2cc7PaintOp6RasterEP8SkCanvasRKNS_14PlaybackParamsE(%"class.cc::PaintOp"*, %class.SkCanvas*, %"struct.cc::PlaybackParams"* dereferenceable(96)) local_unnamed_addr #1

declare void @_ZN17SkPictureRecorder24finishRecordingAsPictureEv(%class.sk_sp.159* sret, %class.SkPictureRecorder*) local_unnamed_addr #1

declare void @_ZN2cc16PictureDebugUtil17SerializeAsBase64EPK9SkPicturePNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%class.SkPicture*, %"class.std::__1::basic_string"*) local_unnamed_addr #1

declare void @_ZN4base11trace_event11TracedValue13EndDictionaryEv(%"class.base::trace_event::TracedValue"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN17SkPictureRecorderD1Ev(%class.SkPictureRecorder*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.cc::PaintOpBuffer::Iterator"* @_ZN2cc13PaintOpBuffer8IteratorppEv(%"class.cc::PaintOpBuffer::Iterator"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = getelementptr inbounds %"class.cc::PaintOpBuffer::Iterator", %"class.cc::PaintOpBuffer::Iterator"* %0, i64 0, i32 1
  %6 = bitcast i8** %5 to %"class.cc::PaintOp"**
  %7 = load %"class.cc::PaintOp"*, %"class.cc::PaintOp"** %6, align 8
  %8 = getelementptr inbounds %"class.cc::PaintOp", %"class.cc::PaintOp"* %7, i64 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = lshr i32 %9, 8
  %11 = bitcast %"class.cc::PaintOp"* %7 to i8*
  %12 = zext i32 %10 to i64
  %13 = getelementptr inbounds i8, i8* %11, i64 %12
  store i8* %13, i8** %5, align 8
  %14 = load i32, i32* %8, align 4
  %15 = lshr i32 %14, 8
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %"class.cc::PaintOpBuffer::Iterator", %"class.cc::PaintOpBuffer::Iterator"* %0, i64 0, i32 2
  %18 = load i64, i64* %17, align 8
  %19 = add i64 %18, %16
  store i64 %19, i64* %17, align 8
  %20 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #12
  %21 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %21, align 8
  %22 = getelementptr inbounds %"class.cc::PaintOpBuffer::Iterator", %"class.cc::PaintOpBuffer::Iterator"* %0, i64 0, i32 0
  %23 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %22, align 8
  %24 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %23, i64 0, i32 3
  %25 = load i64, i64* %24, align 8
  %26 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26)
  %27 = icmp ugt i64 %19, %25
  br i1 %27, label %29, label %28

28:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* null, i8** %21, align 8
  br label %38

29:                                               ; preds = %1
  %30 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %19) #12
  %31 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %25) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.14, i64 0, i64 0), i8* %30, i8* %31) #12
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* %33, i8** %21, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.12, i64 0, i64 0), i32 1194, %"class.logging::CheckOpResult"* nonnull %3) #12
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #12
  br label %38

38:                                               ; preds = %28, %29, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #12
  ret %"class.cc::PaintOpBuffer::Iterator"* %0
}

declare void @_ZN4base11trace_event11TracedValue8EndArrayEv(%"class.base::trace_event::TracedValue"*) local_unnamed_addr #1

declare void @_ZN8SkCanvas9translateEff(%class.SkCanvas*, float, float) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc15DisplayItemList33GenerateDiscardableImagesMetadataEv(%"class.cc::DisplayItemList"*) local_unnamed_addr #0 align 2 {
  %2 = alloca <2 x i64>, align 16
  %3 = bitcast <2 x i64>* %2 to %"class.gfx::Rect"*
  %4 = bitcast <2 x i64>* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %4, i8 0, i64 16, i1 false) #12
  %5 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 2, i32 3
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %12, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 2, i32 1, i32 2
  %10 = bitcast %"class.gfx::Rect"* %9 to <2 x i64>*
  %11 = load <2 x i64>, <2 x i64>* %10, align 8
  store <2 x i64> %11, <2 x i64>* %2, align 16
  br label %14

12:                                               ; preds = %1
  %13 = bitcast <2 x i64>* %2 to <4 x i32>*
  store <4 x i32> <i32 0, i32 0, i32 2147483647, i32 2147483647>, <4 x i32>* %13, align 16
  br label %14

14:                                               ; preds = %12, %8
  %15 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 3
  %16 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 4
  call void @_ZN2cc19DiscardableImageMap8GenerateEPKNS_13PaintOpBufferERKN3gfx4RectE(%"class.cc::DiscardableImageMap"* %15, %"class.cc::PaintOpBuffer"* %16, %"class.gfx::Rect"* nonnull dereferenceable(16) %3) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #12
  ret void
}

declare void @_ZN2cc19DiscardableImageMap8GenerateEPKNS_13PaintOpBufferERKN3gfx4RectE(%"class.cc::DiscardableImageMap"*, %"class.cc::PaintOpBuffer"*, %"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc15DisplayItemList5ResetEv(%"class.cc::DisplayItemList"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 2, i32 0
  store i64 0, i64* %2, align 8
  %3 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 2, i32 2
  %4 = bitcast %"class.std::__1::vector"* %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 2, i32 2, i32 0, i32 1
  %7 = bitcast %"struct.cc::RTree<unsigned long>::Node"** %6 to i64*
  store i64 %5, i64* %7, align 8
  %8 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 2, i32 1, i32 2
  %9 = bitcast %"class.gfx::Rect"* %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 16, i1 false) #12
  %10 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 2, i32 3
  store i8 1, i8* %10, align 8
  %11 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 3
  tail call void @_ZN2cc19DiscardableImageMap5ResetEv(%"class.cc::DiscardableImageMap"* %11) #12
  %12 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 4
  tail call void @_ZN2cc13PaintOpBuffer5ResetEv(%"class.cc::PaintOpBuffer"* %12) #12
  %13 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 5
  %14 = bitcast %"class.std::__1::vector.68"* %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 5, i32 0, i32 1
  %17 = bitcast %"class.gfx::Rect"** %16 to i64*
  store i64 %15, i64* %17, align 8
  %18 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %19 = bitcast %"class.gfx::Rect"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = icmp eq i64 %20, %15
  br i1 %21, label %27, label %22

22:                                               ; preds = %1
  %23 = icmp eq i64 %15, 0
  %24 = bitcast %"class.std::__1::vector.68"* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 24, i1 false)
  br i1 %23, label %27, label %25

25:                                               ; preds = %22
  %26 = inttoptr i64 %15 to i8*
  tail call void @_ZdlPv(i8* %26) #13
  br label %27

27:                                               ; preds = %1, %22, %25
  %28 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 6
  %29 = bitcast %"class.std::__1::vector.75"* %28 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 6, i32 0, i32 1
  %32 = bitcast i64** %31 to i64*
  store i64 %30, i64* %32, align 8
  %33 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  %34 = bitcast i64** %33 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = icmp eq i64 %35, %30
  br i1 %36, label %42, label %37

37:                                               ; preds = %27
  %38 = icmp eq i64 %30, 0
  %39 = bitcast %"class.std::__1::vector.75"* %28 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %39, i8 0, i64 24, i1 false)
  br i1 %38, label %42, label %40

40:                                               ; preds = %37
  %41 = inttoptr i64 %30 to i8*
  tail call void @_ZdlPv(i8* %41) #13
  br label %42

42:                                               ; preds = %27, %37, %40
  %43 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 7
  %44 = bitcast %"class.std::__1::vector.82"* %43 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 7, i32 0, i32 1
  %47 = bitcast %"struct.cc::DisplayItemList::PairedBeginInfo"** %46 to i64*
  store i64 %45, i64* %47, align 8
  %48 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 7, i32 0, i32 2, i32 0, i32 0
  %49 = bitcast %"struct.cc::DisplayItemList::PairedBeginInfo"** %48 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = icmp eq i64 %50, %45
  br i1 %51, label %57, label %52

52:                                               ; preds = %42
  %53 = icmp eq i64 %45, 0
  %54 = bitcast %"class.std::__1::vector.82"* %43 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %54, i8 0, i64 24, i1 false)
  br i1 %53, label %57, label %55

55:                                               ; preds = %52
  %56 = inttoptr i64 %45 to i8*
  tail call void @_ZdlPv(i8* %56) #13
  br label %57

57:                                               ; preds = %42, %52, %55
  ret void
}

declare void @_ZN2cc19DiscardableImageMap5ResetEv(%"class.cc::DiscardableImageMap"*) local_unnamed_addr #1

declare void @_ZN2cc13PaintOpBuffer5ResetEv(%"class.cc::PaintOpBuffer"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc15DisplayItemList15ReleaseAsRecordEv(%class.sk_sp.40* noalias nocapture sret, %"class.cc::DisplayItemList"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %1, i64 0, i32 4
  %4 = tail call i8* @_Znwm(i64 72) #13, !noalias !38
  %5 = bitcast i8* %4 to %"class.cc::PaintOpBuffer"*
  tail call void @_ZN2cc13PaintOpBufferC1EOS0_(%"class.cc::PaintOpBuffer"* nonnull %5, %"class.cc::PaintOpBuffer"* dereferenceable(72) %3) #12, !noalias !38
  %6 = bitcast %class.sk_sp.40* %0 to i8**
  store i8* %4, i8** %6, align 8, !alias.scope !38
  tail call void @_ZN2cc15DisplayItemList5ResetEv(%"class.cc::DisplayItemList"* %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2cc15DisplayItemList21GetColorIfSolidInRectERKN3gfx4RectEPji(%"class.cc::DisplayItemList"*, %"class.gfx::Rect"* dereferenceable(16), i32* nocapture, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::vector.75", align 8
  %6 = alloca <2 x i64>, align 16
  %7 = bitcast %"class.std::__1::vector.75"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #12
  %8 = getelementptr inbounds %"class.std::__1::vector.75", %"class.std::__1::vector.75"* %5, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.std::__1::vector.75", %"class.std::__1::vector.75"* %5, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 24, i1 false) #12
  %10 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 2
  %11 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 2, i32 3
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  %14 = bitcast <2 x i64>* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #12
  br i1 %13, label %22, label %15

15:                                               ; preds = %4
  %16 = bitcast <2 x i64>* %6 to %"class.gfx::Rect"*
  %17 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 2, i32 1, i32 2
  %18 = bitcast %"class.gfx::Rect"* %17 to <2 x i64>*
  %19 = load <2 x i64>, <2 x i64>* %18, align 8
  store <2 x i64> %19, <2 x i64>* %6, align 16
  %20 = call zeroext i1 @_ZNK3gfx4Rect8ContainsERKS0_(%"class.gfx::Rect"* %1, %"class.gfx::Rect"* nonnull dereferenceable(16) %16) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #12
  br i1 %20, label %23, label %21

21:                                               ; preds = %15
  call void @_ZNK2cc5RTreeImE6SearchERKN3gfx4RectEPNSt3__16vectorImNS6_9allocatorImEEEEPNS7_IS3_NS8_IS3_EEEE(%"class.cc::RTree"* %10, %"class.gfx::Rect"* dereferenceable(16) %1, %"class.std::__1::vector.75"* nonnull %5, %"class.std::__1::vector.68"* null)
  br label %23

22:                                               ; preds = %4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #12
  br label %23

23:                                               ; preds = %15, %22, %21
  %24 = phi %"class.std::__1::vector.75"* [ %5, %21 ], [ null, %15 ], [ null, %22 ]
  %25 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 4
  %26 = call i64 @_ZN2cc18SolidColorAnalyzer21DetermineIfSolidColorEPKNS_13PaintOpBufferERKN3gfx4RectEiPKNSt3__16vectorImNS8_9allocatorImEEEE(%"class.cc::PaintOpBuffer"* %25, %"class.gfx::Rect"* dereferenceable(16) %1, i32 %3, %"class.std::__1::vector.75"* %24) #12
  %27 = trunc i64 %26 to i8
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %32, label %29

29:                                               ; preds = %23
  %30 = lshr i64 %26, 32
  %31 = trunc i64 %30 to i32
  store i32 %31, i32* %2, align 4
  br label %32

32:                                               ; preds = %23, %29
  %33 = phi i1 [ true, %29 ], [ false, %23 ]
  %34 = load i64*, i64** %8, align 8
  %35 = icmp eq i64* %34, null
  br i1 %35, label %40, label %36

36:                                               ; preds = %32
  %37 = ptrtoint i64* %34 to i64
  %38 = bitcast i64** %9 to i64*
  store i64 %37, i64* %38, align 8
  %39 = bitcast i64* %34 to i8*
  call void @_ZdlPv(i8* %39) #13
  br label %40

40:                                               ; preds = %32, %36
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #12
  ret i1 %33
}

declare zeroext i1 @_ZNK3gfx4Rect8ContainsERKS0_(%"class.gfx::Rect"*, %"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #1

declare i64 @_ZN2cc18SolidColorAnalyzer21DetermineIfSolidColorEPKNS_13PaintOpBufferERKN3gfx4RectEiPKNSt3__16vectorImNS8_9allocatorImEEEE(%"class.cc::PaintOpBuffer"*, %"class.gfx::Rect"* dereferenceable(16), i32, %"class.std::__1::vector.75"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZNK2cc15DisplayItemList32GetDirectlyCompositedImageResultEN3gfx4SizeE(%"class.cc::DisplayItemList"*, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca { i64, i64 }, align 8
  %4 = alloca %"class.cc::PaintOpBuffer::Iterator", align 8
  %5 = trunc i64 %1 to i32
  %6 = lshr i64 %1, 32
  %7 = trunc i64 %6 to i32
  %8 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 4, i32 5
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 1
  br i1 %10, label %11, label %24

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 4
  %13 = getelementptr inbounds %"class.cc::DisplayItemList", %"class.cc::DisplayItemList"* %0, i64 0, i32 4, i32 2, i32 0, i32 0, i32 0
  %14 = bitcast i8** %13 to %"class.cc::PaintOp"**
  %15 = load %"class.cc::PaintOp"*, %"class.cc::PaintOp"** %14, align 8
  %16 = getelementptr inbounds %"class.cc::PaintOp", %"class.cc::PaintOp"* %15, i64 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = trunc i32 %17 to i8
  %19 = icmp eq i8 %18, 14
  br i1 %19, label %20, label %26

20:                                               ; preds = %11
  %21 = getelementptr inbounds %"class.cc::PaintOp", %"class.cc::PaintOp"* %15, i64 2
  %22 = bitcast %"class.cc::PaintOp"* %21 to %"class.cc::PaintOpBuffer"**
  %23 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %22, align 8
  br label %26

24:                                               ; preds = %2
  %25 = bitcast { i64, i64 }* %3 to i8*
  store i8 0, i8* %25, align 8
  br label %190

26:                                               ; preds = %11, %20
  %27 = phi %"class.cc::PaintOpBuffer"* [ %23, %20 ], [ %12, %11 ]
  %28 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %27, i64 0, i32 5
  %29 = load i64, i64* %28, align 8
  %30 = icmp eq i64 %29, 1
  br i1 %30, label %31, label %41

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %27, i64 0, i32 2, i32 0, i32 0, i32 0
  %33 = bitcast i8** %32 to %"class.cc::PaintOp"**
  %34 = load %"class.cc::PaintOp"*, %"class.cc::PaintOp"** %33, align 8
  %35 = getelementptr inbounds %"class.cc::PaintOp", %"class.cc::PaintOp"* %34, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = trunc i32 %36 to i8
  %38 = icmp eq i8 %37, 9
  br i1 %38, label %39, label %43

39:                                               ; preds = %31
  %40 = bitcast %"class.cc::PaintOp"* %34 to %"class.cc::DrawImageRectOp"*
  br label %104

41:                                               ; preds = %26
  %42 = icmp ult i64 %29, 10
  br i1 %42, label %43, label %108

43:                                               ; preds = %31, %41
  %44 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %27, i64 0, i32 2, i32 0, i32 0, i32 0
  %45 = bitcast i8** %44 to i64*
  %46 = bitcast %"class.cc::PaintOpBuffer::Iterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %46) #12
  %47 = getelementptr inbounds %"class.cc::PaintOpBuffer::Iterator", %"class.cc::PaintOpBuffer::Iterator"* %4, i64 0, i32 0
  %48 = getelementptr inbounds %"class.cc::PaintOpBuffer::Iterator", %"class.cc::PaintOpBuffer::Iterator"* %4, i64 0, i32 1
  %49 = getelementptr inbounds %"class.cc::PaintOpBuffer::Iterator", %"class.cc::PaintOpBuffer::Iterator"* %4, i64 0, i32 2
  %50 = load i64, i64* %45, align 8, !noalias !41
  store %"class.cc::PaintOpBuffer"* %27, %"class.cc::PaintOpBuffer"** %47, align 8, !alias.scope !41
  %51 = bitcast i8** %48 to i64*
  store i64 %50, i64* %51, align 8, !alias.scope !41
  store i64 0, i64* %49, align 8, !alias.scope !41
  %52 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %27, i64 0, i32 3
  %53 = load i64, i64* %52, align 8, !noalias !44
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %43
  %56 = inttoptr i64 %50 to %"class.cc::PaintOp"*
  %57 = bitcast i8** %48 to %"class.cc::PaintOp"**
  br label %61

58:                                               ; preds = %94, %43
  %59 = phi %"class.cc::DrawImageRectOp"* [ null, %43 ], [ %95, %94 ]
  %60 = phi i8 [ 0, %43 ], [ %96, %94 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %46) #12
  br label %104

61:                                               ; preds = %100, %55
  %62 = phi %"class.cc::PaintOp"* [ %56, %55 ], [ %101, %100 ]
  %63 = phi i8 [ 0, %55 ], [ %96, %100 ]
  %64 = phi %"class.cc::DrawImageRectOp"* [ null, %55 ], [ %95, %100 ]
  %65 = getelementptr inbounds %"class.cc::PaintOp", %"class.cc::PaintOp"* %62, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  %67 = trunc i32 %66 to i8
  switch i8 %67, label %102 [
    i8 22, label %94
    i8 20, label %94
    i8 28, label %68
    i8 4, label %78
    i8 9, label %90
  ]

68:                                               ; preds = %61
  %69 = getelementptr inbounds %"class.cc::PaintOp", %"class.cc::PaintOp"* %62, i64 1
  %70 = bitcast %"class.cc::PaintOp"* %69 to float*
  %71 = load float, float* %70, align 4
  %72 = fcmp une float %71, 0.000000e+00
  br i1 %72, label %102, label %73

73:                                               ; preds = %68
  %74 = getelementptr inbounds %"class.cc::PaintOp", %"class.cc::PaintOp"* %62, i64 2
  %75 = bitcast %"class.cc::PaintOp"* %74 to float*
  %76 = load float, float* %75, align 4
  %77 = fcmp une float %76, 0.000000e+00
  br i1 %77, label %102, label %94

78:                                               ; preds = %61
  %79 = and i8 %63, 1
  %80 = icmp eq i8 %79, 0
  br i1 %80, label %81, label %102

81:                                               ; preds = %78
  %82 = getelementptr inbounds %"class.cc::PaintOp", %"class.cc::PaintOp"* %62, i64 1
  %83 = bitcast %"class.cc::PaintOp"* %82 to %class.SkM44*
  %84 = call zeroext i1 @_ZN2cc8MathUtil29SkM44Preserves2DAxisAlignmentERK5SkM44(%class.SkM44* dereferenceable(64) %83) #12
  br i1 %84, label %85, label %102

85:                                               ; preds = %81
  %86 = bitcast %"class.cc::PaintOp"* %82 to float*
  %87 = load float, float* %86, align 4
  %88 = fcmp oeq float %87, 0.000000e+00
  %89 = zext i1 %88 to i8
  br label %94

90:                                               ; preds = %61
  %91 = icmp eq %"class.cc::DrawImageRectOp"* %64, null
  br i1 %91, label %92, label %102

92:                                               ; preds = %90
  %93 = bitcast %"class.cc::PaintOp"* %62 to %"class.cc::DrawImageRectOp"*
  br label %94

94:                                               ; preds = %73, %85, %61, %61, %92
  %95 = phi %"class.cc::DrawImageRectOp"* [ %93, %92 ], [ %64, %61 ], [ %64, %61 ], [ %64, %85 ], [ %64, %73 ]
  %96 = phi i8 [ %63, %92 ], [ %63, %61 ], [ %63, %61 ], [ %89, %85 ], [ %63, %73 ]
  %97 = call dereferenceable(24) %"class.cc::PaintOpBuffer::Iterator"* @_ZN2cc13PaintOpBuffer8IteratorppEv(%"class.cc::PaintOpBuffer::Iterator"* nonnull %4)
  %98 = load i64, i64* %49, align 8
  %99 = icmp eq i64 %53, %98
  br i1 %99, label %58, label %100

100:                                              ; preds = %94
  %101 = load %"class.cc::PaintOp"*, %"class.cc::PaintOp"** %57, align 8
  br label %61

102:                                              ; preds = %61, %90, %81, %78, %73, %68
  %103 = bitcast { i64, i64 }* %3 to i8*
  store i8 0, i8* %103, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %46) #12
  br label %190

104:                                              ; preds = %58, %39
  %105 = phi %"class.cc::DrawImageRectOp"* [ %40, %39 ], [ %59, %58 ]
  %106 = phi i8 [ 0, %39 ], [ %60, %58 ]
  %107 = icmp eq %"class.cc::DrawImageRectOp"* %105, null
  br i1 %107, label %108, label %110

108:                                              ; preds = %41, %104
  %109 = bitcast { i64, i64 }* %3 to i8*
  store i8 0, i8* %109, align 8
  br label %190

110:                                              ; preds = %104
  %111 = getelementptr inbounds %"class.cc::DrawImageRectOp", %"class.cc::DrawImageRectOp"* %105, i64 0, i32 2, i32 0
  %112 = load float, float* %111, align 4
  %113 = fcmp une float %112, 0.000000e+00
  br i1 %113, label %131, label %114

114:                                              ; preds = %110
  %115 = getelementptr inbounds %"class.cc::DrawImageRectOp", %"class.cc::DrawImageRectOp"* %105, i64 0, i32 2, i32 1
  %116 = load float, float* %115, align 4
  %117 = fcmp une float %116, 0.000000e+00
  br i1 %117, label %131, label %118

118:                                              ; preds = %114
  %119 = getelementptr inbounds %"class.cc::DrawImageRectOp", %"class.cc::DrawImageRectOp"* %105, i64 0, i32 2, i32 2
  %120 = load float, float* %119, align 4
  %121 = getelementptr inbounds %"class.cc::DrawImageRectOp", %"class.cc::DrawImageRectOp"* %105, i64 0, i32 1
  %122 = call i32 @_ZNK2cc10PaintImage5widthEv(%"class.cc::PaintImage"* %121) #12
  %123 = sitofp i32 %122 to float
  %124 = fcmp une float %120, %123
  br i1 %124, label %131, label %125

125:                                              ; preds = %118
  %126 = getelementptr inbounds %"class.cc::DrawImageRectOp", %"class.cc::DrawImageRectOp"* %105, i64 0, i32 2, i32 3
  %127 = load float, float* %126, align 4
  %128 = call i32 @_ZNK2cc10PaintImage6heightEv(%"class.cc::PaintImage"* %121) #12
  %129 = sitofp i32 %128 to float
  %130 = fcmp une float %127, %129
  br i1 %130, label %131, label %133

131:                                              ; preds = %125, %118, %114, %110
  %132 = bitcast { i64, i64 }* %3 to i8*
  store i8 0, i8* %132, align 8
  br label %190

133:                                              ; preds = %125
  %134 = and i8 %106, 1
  %135 = icmp ne i8 %134, 0
  %136 = getelementptr inbounds %"class.cc::DrawImageRectOp", %"class.cc::DrawImageRectOp"* %105, i64 0, i32 3, i32 3
  %137 = getelementptr inbounds %"class.cc::DrawImageRectOp", %"class.cc::DrawImageRectOp"* %105, i64 0, i32 3, i32 2
  %138 = getelementptr inbounds %"class.cc::DrawImageRectOp", %"class.cc::DrawImageRectOp"* %105, i64 0, i32 3, i32 0
  %139 = load float, float* %138, align 4
  %140 = fcmp une float %139, 0.000000e+00
  br i1 %140, label %155, label %141

141:                                              ; preds = %133
  %142 = select i1 %135, float* %137, float* %136
  %143 = load float, float* %142, align 4
  %144 = fptosi float %143 to i32
  %145 = select i1 %135, float* %136, float* %137
  %146 = load float, float* %145, align 4
  %147 = fptosi float %146 to i32
  %148 = getelementptr inbounds %"class.cc::DrawImageRectOp", %"class.cc::DrawImageRectOp"* %105, i64 0, i32 3, i32 1
  %149 = load float, float* %148, align 4
  %150 = fcmp oeq float %149, 0.000000e+00
  %151 = icmp eq i32 %5, %147
  %152 = and i1 %150, %151
  %153 = icmp eq i32 %7, %144
  %154 = and i1 %153, %152
  br i1 %154, label %157, label %155

155:                                              ; preds = %141, %133
  %156 = bitcast { i64, i64 }* %3 to i8*
  store i8 0, i8* %156, align 8
  br label %190

157:                                              ; preds = %141
  br i1 %135, label %158, label %161

158:                                              ; preds = %157
  %159 = call i32 @_ZNK2cc10PaintImage6heightEv(%"class.cc::PaintImage"* %121) #12
  %160 = call i32 @_ZNK2cc10PaintImage5widthEv(%"class.cc::PaintImage"* %121) #12
  br label %164

161:                                              ; preds = %157
  %162 = call i32 @_ZNK2cc10PaintImage5widthEv(%"class.cc::PaintImage"* %121) #12
  %163 = call i32 @_ZNK2cc10PaintImage6heightEv(%"class.cc::PaintImage"* %121) #12
  br label %164

164:                                              ; preds = %161, %158
  %165 = phi i32 [ %159, %158 ], [ %162, %161 ]
  %166 = phi i32 [ %160, %158 ], [ %163, %161 ]
  %167 = icmp sgt i32 %165, 0
  %168 = select i1 %167, i32 %165, i32 0
  %169 = icmp sgt i32 %166, 0
  %170 = select i1 %169, i32 %166, i32 0
  %171 = getelementptr inbounds %"class.cc::DrawImageRectOp", %"class.cc::DrawImageRectOp"* %105, i64 0, i32 0, i32 2, i32 10
  %172 = bitcast %union.anon.204* %171 to i16*
  %173 = load i16, i16* %172, align 8
  %174 = and i16 %173, 768
  %175 = icmp eq i16 %174, 0
  %176 = zext i1 %175 to i8
  %177 = bitcast { i64, i64 }* %3 to i8*
  store i8 1, i8* %177, align 8
  %178 = zext i32 %170 to i64
  %179 = shl nuw nsw i64 %178, 32
  %180 = zext i32 %168 to i64
  %181 = or i64 %179, %180
  %182 = getelementptr inbounds i8, i8* %177, i64 4
  %183 = bitcast i8* %182 to i64*
  store i64 %181, i64* %183, align 4
  %184 = getelementptr inbounds i8, i8* %177, i64 12
  store i8 %176, i8* %184, align 4
  %185 = getelementptr inbounds i8, i8* %177, i64 13
  store i8 -86, i8* %185, align 1
  %186 = getelementptr inbounds i8, i8* %177, i64 14
  store i8 -86, i8* %186, align 2
  %187 = getelementptr inbounds i8, i8* %177, i64 15
  store i8 -86, i8* %187, align 1
  %188 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 1
  %189 = load i64, i64* %188, align 8
  br label %190

190:                                              ; preds = %102, %108, %155, %164, %131, %24
  %191 = phi i64 [ undef, %102 ], [ undef, %108 ], [ undef, %155 ], [ %189, %164 ], [ undef, %131 ], [ undef, %24 ]
  %192 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 0
  %193 = load i64, i64* %192, align 8
  %194 = insertvalue { i64, i64 } undef, i64 %193, 0
  %195 = insertvalue { i64, i64 } %194, i64 %191, 1
  ret { i64, i64 } %195
}

declare zeroext i1 @_ZN2cc8MathUtil29SkM44Preserves2DAxisAlignmentERK5SkM44(%class.SkM44* dereferenceable(64)) local_unnamed_addr #1

declare i32 @_ZNK2cc10PaintImage5widthEv(%"class.cc::PaintImage"*) local_unnamed_addr #1

declare i32 @_ZNK2cc10PaintImage6heightEv(%"class.cc::PaintImage"*) local_unnamed_addr #1

declare { i64, i64 } @_ZN3gfx15ToEnclosingRectERKNS_5RectFE(%"class.gfx::RectF"* dereferenceable(16)) local_unnamed_addr #1

declare { <2 x float>, <2 x float> } @_ZN3gfx13SkRectToRectFERK6SkRect(%struct.SkRect* dereferenceable(16)) local_unnamed_addr #1

declare { <2 x float>, <2 x float> } @_ZNK8SkCanvas18getLocalClipBoundsEv(%class.SkCanvas*) local_unnamed_addr #1

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #2

declare void @_ZN4base5debug5AliasEPKv(i8*) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

declare void @_ZN3gfx4Rect5UnionERKS0_(%"class.gfx::Rect"*, %"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #1

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #1

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #1

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #1

declare void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8*, i8*, i64) local_unnamed_addr #1

declare void @_ZN4base11trace_event11TracedValueC2Emb(%"class.base::trace_event::TracedValue"*, i64, i1 zeroext) unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base11trace_event15TracedValueJSOND0Ev(%"class.base::trace_event::TracedValueJSON"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::trace_event::TracedValueJSON", %"class.base::trace_event::TracedValueJSON"* %0, i64 0, i32 0
  tail call void @_ZN4base11trace_event11TracedValueD2Ev(%"class.base::trace_event::TracedValue"* %2) #12
  %3 = bitcast %"class.base::trace_event::TracedValueJSON"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #13
  ret void
}

declare void @_ZNK4base11trace_event11TracedValue19AppendAsTraceFormatEPNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.base::trace_event::TracedValue"*, %"class.std::__1::basic_string"*) unnamed_addr #1

declare zeroext i1 @_ZN4base11trace_event11TracedValue13AppendToProtoEPNS0_24ConvertableToTraceFormat13ProtoAppenderE(%"class.base::trace_event::TracedValue"*, %"class.base::trace_event::ConvertableToTraceFormat::ProtoAppender"*) unnamed_addr #1

declare void @_ZN4base11trace_event11TracedValue27EstimateTraceMemoryOverheadEPNS0_24TraceEventMemoryOverheadE(%"class.base::trace_event::TracedValue"*, %"class.base::trace_event::TraceEventMemoryOverhead"*) unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

declare void @_ZN8SkCanvas8clipRectERK6SkRect8SkClipOpb(%class.SkCanvas*, %struct.SkRect* dereferenceable(16), i32, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3gfx4RectENS_9allocatorIS2_EEE8__appendEmRKS2_(%"class.std::__1::vector.68"*, i64, %"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::vector.68", %"class.std::__1::vector.68"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %5 = bitcast %"class.gfx::Rect"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::vector.68", %"class.std::__1::vector.68"* %0, i64 0, i32 0, i32 1
  %8 = bitcast %"class.gfx::Rect"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = sub i64 %6, %9
  %11 = ashr exact i64 %10, 4
  %12 = icmp ult i64 %11, %1
  br i1 %12, label %50, label %13

13:                                               ; preds = %3
  %14 = inttoptr i64 %9 to %"class.gfx::Rect"*
  %15 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %14, i64 %1
  %16 = icmp eq i64 %1, 0
  br i1 %16, label %48, label %17

17:                                               ; preds = %13
  %18 = bitcast %"class.gfx::Rect"* %2 to i8*
  %19 = shl nsw i64 %1, 4
  %20 = add i64 %19, -16
  %21 = lshr exact i64 %20, 4
  %22 = add nuw nsw i64 %21, 1
  %23 = and i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %32, label %25

25:                                               ; preds = %17, %25
  %26 = phi %"class.gfx::Rect"* [ %29, %25 ], [ %14, %17 ]
  %27 = phi i64 [ %30, %25 ], [ %23, %17 ]
  %28 = bitcast %"class.gfx::Rect"* %26 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %28, i8* align 4 %18, i64 16, i1 false) #12
  %29 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %26, i64 1
  %30 = add i64 %27, -1
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %32, label %25, !llvm.loop !47

32:                                               ; preds = %25, %17
  %33 = phi %"class.gfx::Rect"* [ %14, %17 ], [ %29, %25 ]
  %34 = icmp ult i64 %20, 48
  br i1 %34, label %35, label %37

35:                                               ; preds = %37, %32
  %36 = ptrtoint %"class.gfx::Rect"* %15 to i64
  br label %48

37:                                               ; preds = %32, %37
  %38 = phi %"class.gfx::Rect"* [ %46, %37 ], [ %33, %32 ]
  %39 = bitcast %"class.gfx::Rect"* %38 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %39, i8* align 4 %18, i64 16, i1 false) #12
  %40 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %38, i64 1
  %41 = bitcast %"class.gfx::Rect"* %40 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %41, i8* align 4 %18, i64 16, i1 false) #12
  %42 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %38, i64 2
  %43 = bitcast %"class.gfx::Rect"* %42 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %43, i8* align 4 %18, i64 16, i1 false) #12
  %44 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %38, i64 3
  %45 = bitcast %"class.gfx::Rect"* %44 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %45, i8* align 4 %18, i64 16, i1 false) #12
  %46 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %38, i64 4
  %47 = icmp eq %"class.gfx::Rect"* %46, %15
  br i1 %47, label %35, label %37

48:                                               ; preds = %13, %35
  %49 = phi i64 [ %36, %35 ], [ %9, %13 ]
  store i64 %49, i64* %8, align 8
  br label %132

50:                                               ; preds = %3
  %51 = bitcast %"class.std::__1::vector.68"* %0 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = sub i64 %9, %52
  %54 = ashr exact i64 %53, 4
  %55 = add i64 %54, %1
  %56 = icmp ugt i64 %55, 1152921504606846975
  br i1 %56, label %57, label %59

57:                                               ; preds = %50
  %58 = bitcast %"class.std::__1::vector.68"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %58) #14
  unreachable

59:                                               ; preds = %50
  %60 = sub i64 %6, %52
  %61 = ashr exact i64 %60, 4
  %62 = icmp ult i64 %61, 576460752303423487
  br i1 %62, label %63, label %71

63:                                               ; preds = %59
  %64 = ashr exact i64 %60, 3
  %65 = icmp ult i64 %64, %55
  %66 = select i1 %65, i64 %55, i64 %64
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %76, label %68

68:                                               ; preds = %63
  %69 = icmp ugt i64 %66, 1152921504606846975
  br i1 %69, label %70, label %71

70:                                               ; preds = %68
  tail call void @abort() #14
  unreachable

71:                                               ; preds = %59, %68
  %72 = phi i64 [ %66, %68 ], [ 1152921504606846975, %59 ]
  %73 = shl i64 %72, 4
  %74 = tail call i8* @_Znwm(i64 %73) #13
  %75 = bitcast i8* %74 to %"class.gfx::Rect"*
  br label %76

76:                                               ; preds = %71, %63
  %77 = phi i64 [ %72, %71 ], [ 0, %63 ]
  %78 = phi %"class.gfx::Rect"* [ %75, %71 ], [ null, %63 ]
  %79 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %78, i64 %54
  %80 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %78, i64 %77
  %81 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %79, i64 %1
  %82 = bitcast %"class.gfx::Rect"* %2 to i8*
  %83 = shl nsw i64 %1, 4
  %84 = add i64 %83, -16
  %85 = lshr exact i64 %84, 4
  %86 = add nuw nsw i64 %85, 1
  %87 = and i64 %86, 3
  %88 = icmp eq i64 %87, 0
  br i1 %88, label %96, label %89

89:                                               ; preds = %76, %89
  %90 = phi %"class.gfx::Rect"* [ %93, %89 ], [ %79, %76 ]
  %91 = phi i64 [ %94, %89 ], [ %87, %76 ]
  %92 = bitcast %"class.gfx::Rect"* %90 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %92, i8* align 4 %82, i64 16, i1 false) #12
  %93 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %90, i64 1
  %94 = add i64 %91, -1
  %95 = icmp eq i64 %94, 0
  br i1 %95, label %96, label %89, !llvm.loop !49

96:                                               ; preds = %89, %76
  %97 = phi %"class.gfx::Rect"* [ %79, %76 ], [ %93, %89 ]
  %98 = icmp ult i64 %84, 48
  br i1 %98, label %110, label %99

99:                                               ; preds = %96, %99
  %100 = phi %"class.gfx::Rect"* [ %108, %99 ], [ %97, %96 ]
  %101 = bitcast %"class.gfx::Rect"* %100 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %101, i8* align 4 %82, i64 16, i1 false) #12
  %102 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %100, i64 1
  %103 = bitcast %"class.gfx::Rect"* %102 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %103, i8* align 4 %82, i64 16, i1 false) #12
  %104 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %100, i64 2
  %105 = bitcast %"class.gfx::Rect"* %104 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %105, i8* align 4 %82, i64 16, i1 false) #12
  %106 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %100, i64 3
  %107 = bitcast %"class.gfx::Rect"* %106 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %107, i8* align 4 %82, i64 16, i1 false) #12
  %108 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %100, i64 4
  %109 = icmp eq %"class.gfx::Rect"* %81, %108
  br i1 %109, label %110, label %99

110:                                              ; preds = %99, %96
  %111 = ptrtoint %"class.gfx::Rect"* %80 to i64
  %112 = ptrtoint %"class.gfx::Rect"* %81 to i64
  %113 = getelementptr inbounds %"class.std::__1::vector.68", %"class.std::__1::vector.68"* %0, i64 0, i32 0, i32 0
  %114 = load %"class.gfx::Rect"*, %"class.gfx::Rect"** %113, align 8
  %115 = load i64, i64* %8, align 8
  %116 = ptrtoint %"class.gfx::Rect"* %114 to i64
  %117 = sub i64 %115, %116
  %118 = ashr exact i64 %117, 4
  %119 = sub nsw i64 0, %118
  %120 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %79, i64 %119
  %121 = ptrtoint %"class.gfx::Rect"* %120 to i64
  %122 = icmp sgt i64 %117, 0
  br i1 %122, label %123, label %127

123:                                              ; preds = %110
  %124 = bitcast %"class.gfx::Rect"* %120 to i8*
  %125 = bitcast %"class.gfx::Rect"* %114 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %124, i8* align 4 %125, i64 %117, i1 false) #12
  %126 = load %"class.gfx::Rect"*, %"class.gfx::Rect"** %113, align 8
  br label %127

127:                                              ; preds = %110, %123
  %128 = phi %"class.gfx::Rect"* [ %114, %110 ], [ %126, %123 ]
  store i64 %121, i64* %51, align 8
  store i64 %112, i64* %8, align 8
  store i64 %111, i64* %5, align 8
  %129 = icmp eq %"class.gfx::Rect"* %128, null
  br i1 %129, label %132, label %130

130:                                              ; preds = %127
  %131 = bitcast %"class.gfx::Rect"* %128 to i8*
  tail call void @_ZdlPv(i8* %131) #13
  br label %132

132:                                              ; preds = %130, %127, %48
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

declare zeroext i1 @_ZNK3gfx4Rect10IntersectsERKS0_(%"class.gfx::Rect"*, %"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK2cc5RTreeImE15SearchRecursiveEPNS1_4NodeImEERKN3gfx4RectEPNSt3__16vectorImNS9_9allocatorImEEEEPNSA_IS6_NSB_IS6_EEEE(%"class.cc::RTree"*, %"struct.cc::RTree<unsigned long>::Node"*, %"class.gfx::Rect"* dereferenceable(16), %"class.std::__1::vector.75"*, %"class.std::__1::vector.68"*) local_unnamed_addr #0 comdat align 2 {
  %6 = getelementptr inbounds %"struct.cc::RTree<unsigned long>::Node", %"struct.cc::RTree<unsigned long>::Node"* %1, i64 0, i32 0
  %7 = load i16, i16* %6, align 8
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %24, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"struct.cc::RTree<unsigned long>::Node", %"struct.cc::RTree<unsigned long>::Node"* %1, i64 0, i32 1
  %11 = getelementptr inbounds %"class.std::__1::vector.75", %"class.std::__1::vector.75"* %3, i64 0, i32 0, i32 1
  %12 = getelementptr inbounds %"class.std::__1::vector.75", %"class.std::__1::vector.75"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %13 = bitcast i64** %11 to i64*
  %14 = bitcast %"class.std::__1::vector.75"* %3 to i64*
  %15 = bitcast i64** %12 to i64*
  %16 = getelementptr inbounds %"class.std::__1::vector.75", %"class.std::__1::vector.75"* %3, i64 0, i32 0, i32 0
  %17 = icmp eq %"class.std::__1::vector.68"* %4, null
  %18 = getelementptr inbounds %"class.std::__1::vector.68", %"class.std::__1::vector.68"* %4, i64 0, i32 0, i32 1
  %19 = getelementptr inbounds %"class.std::__1::vector.68", %"class.std::__1::vector.68"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %20 = bitcast %"class.gfx::Rect"** %18 to i64*
  %21 = bitcast %"class.std::__1::vector.68"* %4 to i64*
  %22 = bitcast %"class.gfx::Rect"** %19 to i64*
  %23 = getelementptr inbounds %"class.std::__1::vector.68", %"class.std::__1::vector.68"* %4, i64 0, i32 0, i32 0
  br label %25

24:                                               ; preds = %163, %5
  ret void

25:                                               ; preds = %9, %163
  %26 = phi i64 [ 0, %9 ], [ %164, %163 ]
  %27 = getelementptr inbounds %"struct.cc::RTree<unsigned long>::Node", %"struct.cc::RTree<unsigned long>::Node"* %1, i64 0, i32 2, i64 %26, i32 2
  %28 = tail call zeroext i1 @_ZNK3gfx4Rect10IntersectsERKS0_(%"class.gfx::Rect"* %2, %"class.gfx::Rect"* dereferenceable(16) %27) #12
  br i1 %28, label %29, label %163

29:                                               ; preds = %25
  %30 = load i16, i16* %10, align 2
  %31 = icmp eq i16 %30, 0
  br i1 %31, label %32, label %160

32:                                               ; preds = %29
  %33 = getelementptr inbounds %"struct.cc::RTree<unsigned long>::Node", %"struct.cc::RTree<unsigned long>::Node"* %1, i64 0, i32 2, i64 %26, i32 1
  %34 = load i64*, i64** %11, align 8
  %35 = load i64*, i64** %12, align 8
  %36 = icmp eq i64* %34, %35
  %37 = ptrtoint i64* %35 to i64
  br i1 %36, label %42, label %38

38:                                               ; preds = %32
  %39 = load i64, i64* %33, align 8
  store i64 %39, i64* %34, align 8
  %40 = getelementptr inbounds i64, i64* %34, i64 1
  %41 = ptrtoint i64* %40 to i64
  store i64 %41, i64* %13, align 8
  br label %95

42:                                               ; preds = %32
  %43 = ptrtoint i64* %34 to i64
  %44 = load i64, i64* %14, align 8
  %45 = sub i64 %43, %44
  %46 = ashr exact i64 %45, 3
  %47 = add nsw i64 %46, 1
  %48 = icmp ugt i64 %47, 2305843009213693951
  br i1 %48, label %49, label %51

49:                                               ; preds = %42
  %50 = bitcast %"class.std::__1::vector.75"* %3 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %50) #14
  unreachable

51:                                               ; preds = %42
  %52 = sub i64 %37, %44
  %53 = ashr exact i64 %52, 3
  %54 = icmp ult i64 %53, 1152921504606846975
  br i1 %54, label %55, label %63

55:                                               ; preds = %51
  %56 = ashr exact i64 %52, 2
  %57 = icmp ult i64 %56, %47
  %58 = select i1 %57, i64 %47, i64 %56
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %68, label %60

60:                                               ; preds = %55
  %61 = icmp ugt i64 %58, 2305843009213693951
  br i1 %61, label %62, label %63

62:                                               ; preds = %60
  tail call void @abort() #14
  unreachable

63:                                               ; preds = %60, %51
  %64 = phi i64 [ %58, %60 ], [ 2305843009213693951, %51 ]
  %65 = shl i64 %64, 3
  %66 = tail call i8* @_Znwm(i64 %65) #13
  %67 = bitcast i8* %66 to i64*
  br label %68

68:                                               ; preds = %63, %55
  %69 = phi i64 [ %64, %63 ], [ 0, %55 ]
  %70 = phi i64* [ %67, %63 ], [ null, %55 ]
  %71 = getelementptr inbounds i64, i64* %70, i64 %46
  %72 = getelementptr inbounds i64, i64* %70, i64 %69
  %73 = ptrtoint i64* %72 to i64
  %74 = load i64, i64* %33, align 8
  store i64 %74, i64* %71, align 8
  %75 = getelementptr inbounds i64, i64* %71, i64 1
  %76 = ptrtoint i64* %75 to i64
  %77 = load i64*, i64** %16, align 8
  %78 = load i64, i64* %13, align 8
  %79 = ptrtoint i64* %77 to i64
  %80 = sub i64 %78, %79
  %81 = ashr exact i64 %80, 3
  %82 = sub nsw i64 0, %81
  %83 = getelementptr inbounds i64, i64* %71, i64 %82
  %84 = ptrtoint i64* %83 to i64
  %85 = icmp sgt i64 %80, 0
  br i1 %85, label %86, label %90

86:                                               ; preds = %68
  %87 = bitcast i64* %83 to i8*
  %88 = bitcast i64* %77 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %87, i8* align 8 %88, i64 %80, i1 false) #12
  %89 = load i64*, i64** %16, align 8
  br label %90

90:                                               ; preds = %86, %68
  %91 = phi i64* [ %77, %68 ], [ %89, %86 ]
  store i64 %84, i64* %14, align 8
  store i64 %76, i64* %13, align 8
  store i64 %73, i64* %15, align 8
  %92 = icmp eq i64* %91, null
  br i1 %92, label %95, label %93

93:                                               ; preds = %90
  %94 = bitcast i64* %91 to i8*
  tail call void @_ZdlPv(i8* %94) #13
  br label %95

95:                                               ; preds = %38, %90, %93
  br i1 %17, label %163, label %96

96:                                               ; preds = %95
  %97 = load %"class.gfx::Rect"*, %"class.gfx::Rect"** %18, align 8
  %98 = load %"class.gfx::Rect"*, %"class.gfx::Rect"** %19, align 8
  %99 = icmp eq %"class.gfx::Rect"* %97, %98
  %100 = ptrtoint %"class.gfx::Rect"* %98 to i64
  br i1 %99, label %106, label %101

101:                                              ; preds = %96
  %102 = bitcast %"class.gfx::Rect"* %97 to i8*
  %103 = bitcast %"class.gfx::Rect"* %27 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %102, i8* align 4 %103, i64 16, i1 false) #12
  %104 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %97, i64 1
  %105 = ptrtoint %"class.gfx::Rect"* %104 to i64
  store i64 %105, i64* %20, align 8
  br label %163

106:                                              ; preds = %96
  %107 = ptrtoint %"class.gfx::Rect"* %97 to i64
  %108 = load i64, i64* %21, align 8
  %109 = sub i64 %107, %108
  %110 = ashr exact i64 %109, 4
  %111 = add nsw i64 %110, 1
  %112 = icmp ugt i64 %111, 1152921504606846975
  br i1 %112, label %113, label %115

113:                                              ; preds = %106
  %114 = bitcast %"class.std::__1::vector.68"* %4 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %114) #14
  unreachable

115:                                              ; preds = %106
  %116 = sub i64 %100, %108
  %117 = ashr exact i64 %116, 4
  %118 = icmp ult i64 %117, 576460752303423487
  br i1 %118, label %119, label %127

119:                                              ; preds = %115
  %120 = ashr exact i64 %116, 3
  %121 = icmp ult i64 %120, %111
  %122 = select i1 %121, i64 %111, i64 %120
  %123 = icmp eq i64 %122, 0
  br i1 %123, label %132, label %124

124:                                              ; preds = %119
  %125 = icmp ugt i64 %122, 1152921504606846975
  br i1 %125, label %126, label %127

126:                                              ; preds = %124
  tail call void @abort() #14
  unreachable

127:                                              ; preds = %124, %115
  %128 = phi i64 [ %122, %124 ], [ 1152921504606846975, %115 ]
  %129 = shl i64 %128, 4
  %130 = tail call i8* @_Znwm(i64 %129) #13
  %131 = bitcast i8* %130 to %"class.gfx::Rect"*
  br label %132

132:                                              ; preds = %127, %119
  %133 = phi i64 [ %128, %127 ], [ 0, %119 ]
  %134 = phi %"class.gfx::Rect"* [ %131, %127 ], [ null, %119 ]
  %135 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %134, i64 %110
  %136 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %134, i64 %133
  %137 = ptrtoint %"class.gfx::Rect"* %136 to i64
  %138 = bitcast %"class.gfx::Rect"* %135 to i8*
  %139 = bitcast %"class.gfx::Rect"* %27 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %138, i8* align 4 %139, i64 16, i1 false) #12
  %140 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %135, i64 1
  %141 = ptrtoint %"class.gfx::Rect"* %140 to i64
  %142 = load %"class.gfx::Rect"*, %"class.gfx::Rect"** %23, align 8
  %143 = load i64, i64* %20, align 8
  %144 = ptrtoint %"class.gfx::Rect"* %142 to i64
  %145 = sub i64 %143, %144
  %146 = ashr exact i64 %145, 4
  %147 = sub nsw i64 0, %146
  %148 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %135, i64 %147
  %149 = ptrtoint %"class.gfx::Rect"* %148 to i64
  %150 = icmp sgt i64 %145, 0
  br i1 %150, label %151, label %155

151:                                              ; preds = %132
  %152 = bitcast %"class.gfx::Rect"* %148 to i8*
  %153 = bitcast %"class.gfx::Rect"* %142 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %152, i8* align 4 %153, i64 %145, i1 false) #12
  %154 = load %"class.gfx::Rect"*, %"class.gfx::Rect"** %23, align 8
  br label %155

155:                                              ; preds = %151, %132
  %156 = phi %"class.gfx::Rect"* [ %142, %132 ], [ %154, %151 ]
  store i64 %149, i64* %21, align 8
  store i64 %141, i64* %20, align 8
  store i64 %137, i64* %22, align 8
  %157 = icmp eq %"class.gfx::Rect"* %156, null
  br i1 %157, label %163, label %158

158:                                              ; preds = %155
  %159 = bitcast %"class.gfx::Rect"* %156 to i8*
  tail call void @_ZdlPv(i8* %159) #13
  br label %163

160:                                              ; preds = %29
  %161 = getelementptr inbounds %"struct.cc::RTree<unsigned long>::Node", %"struct.cc::RTree<unsigned long>::Node"* %1, i64 0, i32 2, i64 %26, i32 0
  %162 = load %"struct.cc::RTree<unsigned long>::Node"*, %"struct.cc::RTree<unsigned long>::Node"** %161, align 8
  tail call void @_ZNK2cc5RTreeImE15SearchRecursiveEPNS1_4NodeImEERKN3gfx4RectEPNSt3__16vectorImNS9_9allocatorImEEEEPNSA_IS6_NSB_IS6_EEEE(%"class.cc::RTree"* %0, %"struct.cc::RTree<unsigned long>::Node"* %162, %"class.gfx::Rect"* dereferenceable(16) %2, %"class.std::__1::vector.75"* %3, %"class.std::__1::vector.68"* %4)
  br label %163

163:                                              ; preds = %158, %155, %101, %95, %25, %160
  %164 = add nuw nsw i64 %26, 1
  %165 = load i16, i16* %6, align 8
  %166 = zext i16 %165 to i64
  %167 = icmp ult i64 %164, %166
  br i1 %167, label %25, label %24
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @"_ZN2cc12_GLOBAL__N_118IterateTextContentIZNKS_15DisplayItemList14CaptureContentERKN3gfx4RectEPNSt3__16vectorINS_8NodeInfoENS7_9allocatorIS9_EEEEE3$_0EEvRKNS_13PaintOpBufferERKT_S6_"(%"class.cc::PaintOpBuffer"* dereferenceable(72), %class.anon* nocapture readonly dereferenceable(8), %"class.gfx::Rect"* dereferenceable(16)) unnamed_addr #0 {
  %4 = alloca %"class.cc::PaintOpBuffer::Iterator", align 8
  %5 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %0, i64 0, i32 9
  %6 = load i8, i8* %5, align 4
  %7 = and i8 %6, 8
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %126, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %11 = bitcast i8** %10 to i64*
  %12 = bitcast %"class.cc::PaintOpBuffer::Iterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #12
  %13 = getelementptr inbounds %"class.cc::PaintOpBuffer::Iterator", %"class.cc::PaintOpBuffer::Iterator"* %4, i64 0, i32 0
  %14 = getelementptr inbounds %"class.cc::PaintOpBuffer::Iterator", %"class.cc::PaintOpBuffer::Iterator"* %4, i64 0, i32 1
  %15 = getelementptr inbounds %"class.cc::PaintOpBuffer::Iterator", %"class.cc::PaintOpBuffer::Iterator"* %4, i64 0, i32 2
  %16 = load i64, i64* %11, align 8, !noalias !50
  store %"class.cc::PaintOpBuffer"* %0, %"class.cc::PaintOpBuffer"** %13, align 8, !alias.scope !50
  %17 = bitcast i8** %14 to i64*
  store i64 %16, i64* %17, align 8, !alias.scope !50
  store i64 0, i64* %15, align 8, !alias.scope !50
  %18 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %0, i64 0, i32 3
  %19 = load i64, i64* %18, align 8, !noalias !53
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %26, label %21

21:                                               ; preds = %9
  %22 = inttoptr i64 %16 to %"class.cc::PaintOp"*
  %23 = bitcast i8** %14 to %"class.cc::PaintOp"**
  %24 = getelementptr inbounds %class.anon, %class.anon* %1, i64 0, i32 0
  %25 = bitcast %"class.gfx::Rect"* %2 to i8*
  br label %27

26:                                               ; preds = %120, %9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #12
  br label %126

27:                                               ; preds = %124, %21
  %28 = phi %"class.cc::PaintOp"* [ %125, %124 ], [ %22, %21 ]
  %29 = getelementptr inbounds %"class.cc::PaintOp", %"class.cc::PaintOp"* %28, i64 0, i32 0
  %30 = load i32, i32* %29, align 4
  %31 = trunc i32 %30 to i8
  switch i8 %31, label %120 [
    i8 18, label %32
    i8 14, label %116
  ]

32:                                               ; preds = %27
  %33 = load %"class.std::__1::vector.109"*, %"class.std::__1::vector.109"** %24, align 8
  %34 = getelementptr inbounds %"class.std::__1::vector.109", %"class.std::__1::vector.109"* %33, i64 0, i32 0, i32 0
  %35 = load %"struct.cc::NodeInfo"*, %"struct.cc::NodeInfo"** %34, align 8
  %36 = getelementptr inbounds %"class.std::__1::vector.109", %"class.std::__1::vector.109"* %33, i64 0, i32 0, i32 1
  %37 = load %"struct.cc::NodeInfo"*, %"struct.cc::NodeInfo"** %36, align 8
  %38 = icmp eq %"struct.cc::NodeInfo"* %35, %37
  %39 = ptrtoint %"struct.cc::NodeInfo"* %35 to i64
  br i1 %38, label %48, label %40

40:                                               ; preds = %32
  %41 = getelementptr inbounds %"struct.cc::NodeInfo", %"struct.cc::NodeInfo"* %37, i64 -1, i32 0
  %42 = load i32, i32* %41, align 4
  %43 = getelementptr inbounds %"class.cc::PaintOp", %"class.cc::PaintOp"* %28, i64 24, i32 0
  %44 = load i32, i32* %43, align 8
  %45 = icmp eq i32 %42, %44
  br i1 %45, label %46, label %48

46:                                               ; preds = %40
  %47 = getelementptr inbounds %"struct.cc::NodeInfo", %"struct.cc::NodeInfo"* %37, i64 -1, i32 1
  call void @_ZN3gfx4Rect5UnionERKS0_(%"class.gfx::Rect"* %47, %"class.gfx::Rect"* dereferenceable(16) %2) #12
  br label %120

48:                                               ; preds = %40, %32
  %49 = getelementptr inbounds %"class.cc::PaintOp", %"class.cc::PaintOp"* %28, i64 24, i32 0
  %50 = getelementptr inbounds %"class.std::__1::vector.109", %"class.std::__1::vector.109"* %33, i64 0, i32 0, i32 2, i32 0, i32 0
  %51 = load %"struct.cc::NodeInfo"*, %"struct.cc::NodeInfo"** %50, align 8
  %52 = icmp ult %"struct.cc::NodeInfo"* %37, %51
  %53 = ptrtoint %"struct.cc::NodeInfo"* %51 to i64
  br i1 %52, label %54, label %62

54:                                               ; preds = %48
  %55 = load i32, i32* %49, align 4
  %56 = getelementptr inbounds %"struct.cc::NodeInfo", %"struct.cc::NodeInfo"* %37, i64 0, i32 0
  store i32 %55, i32* %56, align 4
  %57 = getelementptr inbounds %"struct.cc::NodeInfo", %"struct.cc::NodeInfo"* %37, i64 0, i32 1
  %58 = bitcast %"class.gfx::Rect"* %57 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %58, i8* align 4 %25, i64 16, i1 false) #12
  %59 = getelementptr inbounds %"struct.cc::NodeInfo", %"struct.cc::NodeInfo"* %37, i64 1
  %60 = ptrtoint %"struct.cc::NodeInfo"* %59 to i64
  %61 = bitcast %"struct.cc::NodeInfo"** %36 to i64*
  store i64 %60, i64* %61, align 8
  br label %120

62:                                               ; preds = %48
  %63 = ptrtoint %"struct.cc::NodeInfo"* %37 to i64
  %64 = bitcast %"struct.cc::NodeInfo"** %36 to i64*
  %65 = bitcast %"class.std::__1::vector.109"* %33 to i64*
  %66 = sub i64 %63, %39
  %67 = sdiv exact i64 %66, 20
  %68 = add nsw i64 %67, 1
  %69 = icmp ugt i64 %68, 922337203685477580
  br i1 %69, label %70, label %72

70:                                               ; preds = %62
  %71 = bitcast %"class.std::__1::vector.109"* %33 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %71) #14
  unreachable

72:                                               ; preds = %62
  %73 = bitcast %"struct.cc::NodeInfo"** %50 to i64*
  %74 = sub i64 %53, %39
  %75 = sdiv exact i64 %74, 20
  %76 = icmp ult i64 %75, 461168601842738790
  br i1 %76, label %77, label %82

77:                                               ; preds = %72
  %78 = shl nsw i64 %75, 1
  %79 = icmp ult i64 %78, %68
  %80 = select i1 %79, i64 %68, i64 %78
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %87, label %82

82:                                               ; preds = %77, %72
  %83 = phi i64 [ %80, %77 ], [ 922337203685477580, %72 ]
  %84 = mul i64 %83, 20
  %85 = call i8* @_Znwm(i64 %84) #13
  %86 = bitcast i8* %85 to %"struct.cc::NodeInfo"*
  br label %87

87:                                               ; preds = %82, %77
  %88 = phi i64 [ %83, %82 ], [ 0, %77 ]
  %89 = phi %"struct.cc::NodeInfo"* [ %86, %82 ], [ null, %77 ]
  %90 = getelementptr inbounds %"struct.cc::NodeInfo", %"struct.cc::NodeInfo"* %89, i64 %67
  %91 = getelementptr inbounds %"struct.cc::NodeInfo", %"struct.cc::NodeInfo"* %89, i64 %88
  %92 = ptrtoint %"struct.cc::NodeInfo"* %91 to i64
  %93 = load i32, i32* %49, align 4
  %94 = getelementptr inbounds %"struct.cc::NodeInfo", %"struct.cc::NodeInfo"* %90, i64 0, i32 0
  store i32 %93, i32* %94, align 4
  %95 = getelementptr inbounds %"struct.cc::NodeInfo", %"struct.cc::NodeInfo"* %89, i64 %67, i32 1
  %96 = bitcast %"class.gfx::Rect"* %95 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %96, i8* align 4 %25, i64 16, i1 false) #12
  %97 = getelementptr inbounds %"struct.cc::NodeInfo", %"struct.cc::NodeInfo"* %90, i64 1
  %98 = ptrtoint %"struct.cc::NodeInfo"* %97 to i64
  %99 = load %"struct.cc::NodeInfo"*, %"struct.cc::NodeInfo"** %34, align 8
  %100 = load i64, i64* %64, align 8
  %101 = ptrtoint %"struct.cc::NodeInfo"* %99 to i64
  %102 = sub i64 %100, %101
  %103 = sdiv exact i64 %102, -20
  %104 = getelementptr inbounds %"struct.cc::NodeInfo", %"struct.cc::NodeInfo"* %90, i64 %103
  %105 = ptrtoint %"struct.cc::NodeInfo"* %104 to i64
  %106 = icmp sgt i64 %102, 0
  br i1 %106, label %107, label %111

107:                                              ; preds = %87
  %108 = bitcast %"struct.cc::NodeInfo"* %104 to i8*
  %109 = bitcast %"struct.cc::NodeInfo"* %99 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %108, i8* align 4 %109, i64 %102, i1 false) #12
  %110 = load %"struct.cc::NodeInfo"*, %"struct.cc::NodeInfo"** %34, align 8
  br label %111

111:                                              ; preds = %107, %87
  %112 = phi %"struct.cc::NodeInfo"* [ %99, %87 ], [ %110, %107 ]
  store i64 %105, i64* %65, align 8
  store i64 %98, i64* %64, align 8
  store i64 %92, i64* %73, align 8
  %113 = icmp eq %"struct.cc::NodeInfo"* %112, null
  br i1 %113, label %120, label %114

114:                                              ; preds = %111
  %115 = bitcast %"struct.cc::NodeInfo"* %112 to i8*
  call void @_ZdlPv(i8* %115) #13
  br label %120

116:                                              ; preds = %27
  %117 = getelementptr inbounds %"class.cc::PaintOp", %"class.cc::PaintOp"* %28, i64 2
  %118 = bitcast %"class.cc::PaintOp"* %117 to %"class.cc::PaintOpBuffer"**
  %119 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %118, align 8
  call fastcc void @"_ZN2cc12_GLOBAL__N_118IterateTextContentIZNKS_15DisplayItemList14CaptureContentERKN3gfx4RectEPNSt3__16vectorINS_8NodeInfoENS7_9allocatorIS9_EEEEE3$_0EEvRKNS_13PaintOpBufferERKT_S6_"(%"class.cc::PaintOpBuffer"* dereferenceable(72) %119, %class.anon* dereferenceable(8) %1, %"class.gfx::Rect"* dereferenceable(16) %2)
  br label %120

120:                                              ; preds = %27, %46, %54, %111, %114, %116
  %121 = call dereferenceable(24) %"class.cc::PaintOpBuffer::Iterator"* @_ZN2cc13PaintOpBuffer8IteratorppEv(%"class.cc::PaintOpBuffer::Iterator"* nonnull %4)
  %122 = load i64, i64* %15, align 8
  %123 = icmp eq i64 %19, %122
  br i1 %123, label %26, label %124

124:                                              ; preds = %120
  %125 = load %"class.cc::PaintOp"*, %"class.cc::PaintOp"** %23, align 8
  br label %27

126:                                              ; preds = %3, %26
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2cc5RTreeImE14BuildRecursiveEPNSt3__16vectorINS1_6BranchImEENS2_9allocatorIS5_EEEEi(%"struct.cc::RTree<unsigned long>::Branch"* noalias sret, %"class.cc::RTree"*, %"class.std::__1::vector.246"*, i32) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca i32, align 4
  %6 = getelementptr inbounds %"class.std::__1::vector.246", %"class.std::__1::vector.246"* %2, i64 0, i32 0, i32 1
  %7 = bitcast %"struct.cc::RTree<unsigned long>::Branch"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.std::__1::vector.246"* %2 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = sub i64 %8, %10
  %12 = icmp eq i64 %11, 32
  br i1 %12, label %13, label %16

13:                                               ; preds = %4
  %14 = inttoptr i64 %10 to i8*
  %15 = bitcast %"struct.cc::RTree<unsigned long>::Branch"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 %14, i64 32, i1 false)
  br label %225

16:                                               ; preds = %4
  %17 = ashr exact i64 %11, 5
  %18 = urem i64 %17, 11
  %19 = trunc i64 %18 to i32
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %25, label %21

21:                                               ; preds = %16
  %22 = icmp ugt i32 %19, 5
  %23 = sub nsw i32 6, %19
  %24 = select i1 %22, i32 0, i32 %23
  br label %25

25:                                               ; preds = %21, %16
  %26 = phi i32 [ 0, %16 ], [ %24, %21 ]
  %27 = icmp eq i64 %11, 0
  br i1 %27, label %215, label %28

28:                                               ; preds = %25
  %29 = bitcast i32* %5 to i8*
  %30 = getelementptr inbounds %"class.cc::RTree", %"class.cc::RTree"* %1, i64 0, i32 2, i32 0, i32 1
  %31 = getelementptr inbounds %"class.cc::RTree", %"class.cc::RTree"* %1, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %32 = getelementptr inbounds %"class.cc::RTree", %"class.cc::RTree"* %1, i64 0, i32 2
  %33 = trunc i32 %3 to i16
  %34 = bitcast %"struct.cc::RTree<unsigned long>::Node"** %30 to i64*
  %35 = getelementptr inbounds %"class.std::__1::vector.246", %"class.std::__1::vector.246"* %2, i64 0, i32 0, i32 0
  %36 = getelementptr inbounds %"class.cc::RTree", %"class.cc::RTree"* %1, i64 0, i32 3
  br label %37

37:                                               ; preds = %28, %112
  %38 = phi i64 [ 0, %28 ], [ %163, %112 ]
  %39 = phi i64 [ 0, %28 ], [ %117, %112 ]
  %40 = phi i32 [ %26, %28 ], [ %49, %112 ]
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %48, label %42

42:                                               ; preds = %37
  %43 = icmp slt i32 %40, 6
  br i1 %43, label %44, label %46

44:                                               ; preds = %42
  %45 = sub nsw i32 11, %40
  br label %48

46:                                               ; preds = %42
  %47 = add nsw i32 %40, -5
  br label %48

48:                                               ; preds = %37, %44, %46
  %49 = phi i32 [ 0, %44 ], [ %47, %46 ], [ 0, %37 ]
  %50 = phi i32 [ %45, %44 ], [ 6, %46 ], [ 11, %37 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %29)
  store i32 %3, i32* %5, align 4
  %51 = load %"struct.cc::RTree<unsigned long>::Node"*, %"struct.cc::RTree<unsigned long>::Node"** %30, align 8
  %52 = load %"struct.cc::RTree<unsigned long>::Node"*, %"struct.cc::RTree<unsigned long>::Node"** %31, align 8
  %53 = icmp ult %"struct.cc::RTree<unsigned long>::Node"* %51, %52
  br i1 %53, label %54, label %81

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"struct.cc::RTree<unsigned long>::Node", %"struct.cc::RTree<unsigned long>::Node"* %51, i64 0, i32 0
  store i16 0, i16* %55, align 8
  %56 = getelementptr inbounds %"struct.cc::RTree<unsigned long>::Node", %"struct.cc::RTree<unsigned long>::Node"* %51, i64 0, i32 1
  store i16 %33, i16* %56, align 2
  %57 = getelementptr inbounds %"struct.cc::RTree<unsigned long>::Node", %"struct.cc::RTree<unsigned long>::Node"* %51, i64 0, i32 2, i64 0, i32 2
  %58 = bitcast %"class.gfx::Rect"* %57 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %58, i8 0, i64 16, i1 false) #12
  %59 = getelementptr inbounds %"struct.cc::RTree<unsigned long>::Node", %"struct.cc::RTree<unsigned long>::Node"* %51, i64 0, i32 2, i64 1, i32 2
  %60 = bitcast %"class.gfx::Rect"* %59 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %60, i8 0, i64 16, i1 false) #12
  %61 = getelementptr inbounds %"struct.cc::RTree<unsigned long>::Node", %"struct.cc::RTree<unsigned long>::Node"* %51, i64 0, i32 2, i64 2, i32 2
  %62 = bitcast %"class.gfx::Rect"* %61 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %62, i8 0, i64 16, i1 false) #12
  %63 = getelementptr inbounds %"struct.cc::RTree<unsigned long>::Node", %"struct.cc::RTree<unsigned long>::Node"* %51, i64 0, i32 2, i64 3, i32 2
  %64 = bitcast %"class.gfx::Rect"* %63 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %64, i8 0, i64 16, i1 false) #12
  %65 = getelementptr inbounds %"struct.cc::RTree<unsigned long>::Node", %"struct.cc::RTree<unsigned long>::Node"* %51, i64 0, i32 2, i64 4, i32 2
  %66 = bitcast %"class.gfx::Rect"* %65 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %66, i8 0, i64 16, i1 false) #12
  %67 = getelementptr inbounds %"struct.cc::RTree<unsigned long>::Node", %"struct.cc::RTree<unsigned long>::Node"* %51, i64 0, i32 2, i64 5, i32 2
  %68 = bitcast %"class.gfx::Rect"* %67 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %68, i8 0, i64 16, i1 false) #12
  %69 = getelementptr inbounds %"struct.cc::RTree<unsigned long>::Node", %"struct.cc::RTree<unsigned long>::Node"* %51, i64 0, i32 2, i64 6, i32 2
  %70 = bitcast %"class.gfx::Rect"* %69 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %70, i8 0, i64 16, i1 false) #12
  %71 = getelementptr inbounds %"struct.cc::RTree<unsigned long>::Node", %"struct.cc::RTree<unsigned long>::Node"* %51, i64 0, i32 2, i64 7, i32 2
  %72 = bitcast %"class.gfx::Rect"* %71 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %72, i8 0, i64 16, i1 false) #12
  %73 = getelementptr inbounds %"struct.cc::RTree<unsigned long>::Node", %"struct.cc::RTree<unsigned long>::Node"* %51, i64 0, i32 2, i64 8, i32 2
  %74 = bitcast %"class.gfx::Rect"* %73 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %74, i8 0, i64 16, i1 false) #12
  %75 = getelementptr inbounds %"struct.cc::RTree<unsigned long>::Node", %"struct.cc::RTree<unsigned long>::Node"* %51, i64 0, i32 2, i64 9, i32 2
  %76 = bitcast %"class.gfx::Rect"* %75 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %76, i8 0, i64 16, i1 false) #12
  %77 = getelementptr inbounds %"struct.cc::RTree<unsigned long>::Node", %"struct.cc::RTree<unsigned long>::Node"* %51, i64 0, i32 2, i64 10, i32 2
  %78 = bitcast %"class.gfx::Rect"* %77 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %78, i8 0, i64 16, i1 false) #12
  %79 = getelementptr inbounds %"struct.cc::RTree<unsigned long>::Node", %"struct.cc::RTree<unsigned long>::Node"* %51, i64 1
  %80 = ptrtoint %"struct.cc::RTree<unsigned long>::Node"* %79 to i64
  store i64 %80, i64* %34, align 8
  br label %83

81:                                               ; preds = %48
  call void @_ZNSt3__16vectorIN2cc5RTreeImE4NodeImEENS_9allocatorIS5_EEE24__emplace_back_slow_pathIJRiEEEvDpOT_(%"class.std::__1::vector"* %32, i32* nonnull dereferenceable(4) %5) #12
  %82 = load %"struct.cc::RTree<unsigned long>::Node"*, %"struct.cc::RTree<unsigned long>::Node"** %30, align 8
  br label %83

83:                                               ; preds = %54, %81
  %84 = phi %"struct.cc::RTree<unsigned long>::Node"* [ %79, %54 ], [ %82, %81 ]
  %85 = getelementptr inbounds %"struct.cc::RTree<unsigned long>::Node", %"struct.cc::RTree<unsigned long>::Node"* %84, i64 -1
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %29)
  %86 = getelementptr inbounds %"struct.cc::RTree<unsigned long>::Node", %"struct.cc::RTree<unsigned long>::Node"* %85, i64 0, i32 0
  store i16 1, i16* %86, align 8
  %87 = load %"struct.cc::RTree<unsigned long>::Branch"*, %"struct.cc::RTree<unsigned long>::Branch"** %35, align 8
  %88 = getelementptr inbounds %"struct.cc::RTree<unsigned long>::Branch", %"struct.cc::RTree<unsigned long>::Branch"* %87, i64 %39
  %89 = getelementptr inbounds %"struct.cc::RTree<unsigned long>::Node", %"struct.cc::RTree<unsigned long>::Node"* %84, i64 -1, i32 2
  %90 = bitcast [11 x %"struct.cc::RTree<unsigned long>::Branch"]* %89 to i8*
  %91 = bitcast %"struct.cc::RTree<unsigned long>::Branch"* %88 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %90, i8* align 8 %91, i64 32, i1 false)
  %92 = load %"struct.cc::RTree<unsigned long>::Branch"*, %"struct.cc::RTree<unsigned long>::Branch"** %35, align 8
  %93 = getelementptr inbounds %"struct.cc::RTree<unsigned long>::Branch", %"struct.cc::RTree<unsigned long>::Branch"* %92, i64 %39, i32 2, i32 0, i32 0
  %94 = load i32, i32* %93, align 4
  %95 = getelementptr inbounds %"struct.cc::RTree<unsigned long>::Branch", %"struct.cc::RTree<unsigned long>::Branch"* %92, i64 %39, i32 2, i32 0, i32 1
  %96 = load i32, i32* %95, align 4
  %97 = getelementptr inbounds %"struct.cc::RTree<unsigned long>::Branch", %"struct.cc::RTree<unsigned long>::Branch"* %92, i64 %39, i32 2, i32 1, i32 0
  %98 = load i32, i32* %97, align 4
  %99 = getelementptr inbounds %"struct.cc::RTree<unsigned long>::Branch", %"struct.cc::RTree<unsigned long>::Branch"* %92, i64 %39, i32 2, i32 1, i32 1
  %100 = load i32, i32* %99, align 4
  %101 = add nsw i32 %98, %94
  %102 = add nsw i32 %100, %96
  %103 = add nuw i64 %39, 1
  %104 = icmp sgt i32 %50, 1
  br i1 %104, label %105, label %112

105:                                              ; preds = %83
  %106 = ptrtoint %"struct.cc::RTree<unsigned long>::Branch"* %92 to i64
  %107 = zext i32 %50 to i64
  %108 = load i64, i64* %7, align 8
  %109 = sub i64 %108, %106
  %110 = ashr exact i64 %109, 5
  %111 = icmp ult i64 %103, %110
  br i1 %111, label %169, label %112

112:                                              ; preds = %169, %204, %105, %83
  %113 = phi i32 [ %96, %83 ], [ %96, %105 ], [ %186, %204 ], [ %186, %169 ]
  %114 = phi i32 [ %101, %83 ], [ %101, %105 ], [ %191, %204 ], [ %191, %169 ]
  %115 = phi i32 [ %102, %83 ], [ %102, %105 ], [ %196, %204 ], [ %196, %169 ]
  %116 = phi i32 [ %94, %83 ], [ %94, %105 ], [ %182, %204 ], [ %182, %169 ]
  %117 = phi i64 [ %103, %83 ], [ %103, %105 ], [ %202, %204 ], [ %202, %169 ]
  %118 = icmp sgt i32 %116, -1
  %119 = select i1 %118, i32 -2147483648, i32 2147483647
  %120 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %114, i32 %116) #12
  %121 = extractvalue { i32, i1 } %120, 1
  %122 = extractvalue { i32, i1 } %120, 0
  %123 = select i1 %121, i32 %119, i32 %122, !prof !25
  %124 = icmp sgt i32 %113, -1
  %125 = select i1 %124, i32 -2147483648, i32 2147483647
  %126 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %115, i32 %113) #12
  %127 = extractvalue { i32, i1 } %126, 1
  %128 = extractvalue { i32, i1 } %126, 0
  %129 = select i1 %127, i32 %125, i32 %128, !prof !25
  %130 = icmp sgt i32 %116, 0
  %131 = icmp sgt i32 %123, 0
  %132 = and i1 %130, %131
  %133 = sub nuw nsw i32 2147483647, %116
  %134 = icmp ult i32 %133, %123
  %135 = and i1 %134, %132
  %136 = select i1 %135, i32 %133, i32 %123
  %137 = icmp sgt i32 %136, 0
  %138 = select i1 %137, i32 %136, i32 0
  %139 = icmp sgt i32 %113, 0
  %140 = icmp sgt i32 %129, 0
  %141 = and i1 %139, %140
  %142 = sub nuw nsw i32 2147483647, %113
  %143 = icmp ult i32 %142, %129
  %144 = and i1 %143, %141
  %145 = select i1 %144, i32 %142, i32 %129
  %146 = icmp sgt i32 %145, 0
  %147 = select i1 %146, i32 %145, i32 0
  %148 = add nsw i32 %138, %116
  %149 = icmp eq i32 %148, %114
  %150 = add nsw i32 %147, %113
  %151 = icmp eq i32 %150, %115
  %152 = and i1 %151, %149
  %153 = zext i1 %152 to i8
  %154 = load i8, i8* %36, align 8, !range !2
  %155 = and i8 %154, %153
  store i8 %155, i8* %36, align 8
  %156 = load %"struct.cc::RTree<unsigned long>::Branch"*, %"struct.cc::RTree<unsigned long>::Branch"** %35, align 8
  %157 = getelementptr inbounds %"struct.cc::RTree<unsigned long>::Branch", %"struct.cc::RTree<unsigned long>::Branch"* %156, i64 %38, i32 0
  store %"struct.cc::RTree<unsigned long>::Node"* %85, %"struct.cc::RTree<unsigned long>::Node"** %157, align 8
  %158 = getelementptr inbounds %"struct.cc::RTree<unsigned long>::Branch", %"struct.cc::RTree<unsigned long>::Branch"* %156, i64 %38, i32 1
  store i64 -6148914691236517206, i64* %158, align 8
  %159 = getelementptr inbounds %"struct.cc::RTree<unsigned long>::Branch", %"struct.cc::RTree<unsigned long>::Branch"* %156, i64 %38, i32 2, i32 0, i32 0
  store i32 %116, i32* %159, align 8
  %160 = getelementptr inbounds %"struct.cc::RTree<unsigned long>::Branch", %"struct.cc::RTree<unsigned long>::Branch"* %156, i64 %38, i32 2, i32 0, i32 1
  store i32 %113, i32* %160, align 4
  %161 = getelementptr inbounds %"struct.cc::RTree<unsigned long>::Branch", %"struct.cc::RTree<unsigned long>::Branch"* %156, i64 %38, i32 2, i32 1, i32 0
  store i32 %138, i32* %161, align 8
  %162 = getelementptr inbounds %"struct.cc::RTree<unsigned long>::Branch", %"struct.cc::RTree<unsigned long>::Branch"* %156, i64 %38, i32 2, i32 1, i32 1
  store i32 %147, i32* %162, align 4
  %163 = add i64 %38, 1
  %164 = load i64, i64* %7, align 8
  %165 = load i64, i64* %9, align 8
  %166 = sub i64 %164, %165
  %167 = ashr exact i64 %166, 5
  %168 = icmp ult i64 %117, %167
  br i1 %168, label %37, label %211

169:                                              ; preds = %105, %204
  %170 = phi i32 [ %186, %204 ], [ %96, %105 ]
  %171 = phi i32 [ %191, %204 ], [ %101, %105 ]
  %172 = phi i32 [ %196, %204 ], [ %102, %105 ]
  %173 = phi i32 [ %182, %204 ], [ %94, %105 ]
  %174 = phi i64 [ %202, %204 ], [ %103, %105 ]
  %175 = phi i64 [ %201, %204 ], [ 1, %105 ]
  %176 = phi %"struct.cc::RTree<unsigned long>::Branch"* [ %206, %204 ], [ %92, %105 ]
  %177 = phi i16 [ %200, %204 ], [ 1, %105 ]
  %178 = getelementptr inbounds %"struct.cc::RTree<unsigned long>::Branch", %"struct.cc::RTree<unsigned long>::Branch"* %176, i64 %174
  %179 = getelementptr inbounds %"struct.cc::RTree<unsigned long>::Branch", %"struct.cc::RTree<unsigned long>::Branch"* %176, i64 %174, i32 2, i32 0, i32 0
  %180 = load i32, i32* %179, align 4
  %181 = icmp slt i32 %180, %173
  %182 = select i1 %181, i32 %180, i32 %173
  %183 = getelementptr inbounds %"struct.cc::RTree<unsigned long>::Branch", %"struct.cc::RTree<unsigned long>::Branch"* %176, i64 %174, i32 2, i32 0, i32 1
  %184 = load i32, i32* %183, align 4
  %185 = icmp slt i32 %184, %170
  %186 = select i1 %185, i32 %184, i32 %170
  %187 = getelementptr inbounds %"struct.cc::RTree<unsigned long>::Branch", %"struct.cc::RTree<unsigned long>::Branch"* %176, i64 %174, i32 2, i32 1, i32 0
  %188 = load i32, i32* %187, align 4
  %189 = add nsw i32 %188, %180
  %190 = icmp slt i32 %171, %189
  %191 = select i1 %190, i32 %189, i32 %171
  %192 = getelementptr inbounds %"struct.cc::RTree<unsigned long>::Branch", %"struct.cc::RTree<unsigned long>::Branch"* %176, i64 %174, i32 2, i32 1, i32 1
  %193 = load i32, i32* %192, align 4
  %194 = add nsw i32 %193, %184
  %195 = icmp slt i32 %172, %194
  %196 = select i1 %195, i32 %194, i32 %172
  %197 = getelementptr inbounds %"struct.cc::RTree<unsigned long>::Node", %"struct.cc::RTree<unsigned long>::Node"* %84, i64 -1, i32 2, i64 %175
  %198 = bitcast %"struct.cc::RTree<unsigned long>::Branch"* %197 to i8*
  %199 = bitcast %"struct.cc::RTree<unsigned long>::Branch"* %178 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %198, i8* align 8 %199, i64 32, i1 false)
  %200 = add i16 %177, 1
  store i16 %200, i16* %86, align 8
  %201 = add nuw nsw i64 %175, 1
  %202 = add nuw i64 %174, 1
  %203 = icmp eq i64 %201, %107
  br i1 %203, label %112, label %204

204:                                              ; preds = %169
  %205 = load i64, i64* %9, align 8
  %206 = inttoptr i64 %205 to %"struct.cc::RTree<unsigned long>::Branch"*
  %207 = load i64, i64* %7, align 8
  %208 = sub i64 %207, %205
  %209 = ashr exact i64 %208, 5
  %210 = icmp ult i64 %202, %209
  br i1 %210, label %169, label %112

211:                                              ; preds = %112
  %212 = icmp ugt i64 %163, %167
  br i1 %212, label %213, label %215

213:                                              ; preds = %211
  %214 = sub i64 %163, %167
  call void @_ZNSt3__16vectorIN2cc5RTreeImE6BranchImEENS_9allocatorIS5_EEE8__appendEm(%"class.std::__1::vector.246"* %2, i64 %214) #12
  br label %223

215:                                              ; preds = %25, %211
  %216 = phi i64 [ %165, %211 ], [ %10, %25 ]
  %217 = phi i64 [ %167, %211 ], [ 0, %25 ]
  %218 = phi i64 [ %163, %211 ], [ 0, %25 ]
  %219 = icmp ult i64 %218, %217
  br i1 %219, label %220, label %223

220:                                              ; preds = %215
  %221 = inttoptr i64 %216 to %"struct.cc::RTree<unsigned long>::Branch"*
  %222 = getelementptr inbounds %"struct.cc::RTree<unsigned long>::Branch", %"struct.cc::RTree<unsigned long>::Branch"* %221, i64 %218
  store %"struct.cc::RTree<unsigned long>::Branch"* %222, %"struct.cc::RTree<unsigned long>::Branch"** %6, align 8
  br label %223

223:                                              ; preds = %213, %215, %220
  %224 = add nsw i32 %3, 1
  call void @_ZN2cc5RTreeImE14BuildRecursiveEPNSt3__16vectorINS1_6BranchImEENS2_9allocatorIS5_EEEEi(%"struct.cc::RTree<unsigned long>::Branch"* sret %0, %"class.cc::RTree"* %1, %"class.std::__1::vector.246"* %2, i32 %224)
  br label %225

225:                                              ; preds = %223, %13
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN2cc5RTreeImE4NodeImEENS_9allocatorIS5_EEE24__emplace_back_slow_pathIJRiEEEvDpOT_(%"class.std::__1::vector"*, i32* dereferenceable(4)) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.cc::RTree<unsigned long>::Node"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 360
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 51240955760304310
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #14
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.cc::RTree<unsigned long>::Node"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 360
  %20 = icmp ult i64 %19, 25620477880152155
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 51240955760304310, %14 ]
  %28 = mul i64 %27, 360
  %29 = tail call i8* @_Znwm(i64 %28) #13
  %30 = bitcast i8* %29 to %"struct.cc::RTree<unsigned long>::Node"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"struct.cc::RTree<unsigned long>::Node"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"struct.cc::RTree<unsigned long>::Node", %"struct.cc::RTree<unsigned long>::Node"* %33, i64 %9
  %35 = getelementptr inbounds %"struct.cc::RTree<unsigned long>::Node", %"struct.cc::RTree<unsigned long>::Node"* %33, i64 %32
  %36 = ptrtoint %"struct.cc::RTree<unsigned long>::Node"* %35 to i64
  %37 = load i32, i32* %1, align 4
  %38 = trunc i32 %37 to i16
  %39 = getelementptr inbounds %"struct.cc::RTree<unsigned long>::Node", %"struct.cc::RTree<unsigned long>::Node"* %34, i64 0, i32 0
  store i16 0, i16* %39, align 8
  %40 = getelementptr inbounds %"struct.cc::RTree<unsigned long>::Node", %"struct.cc::RTree<unsigned long>::Node"* %33, i64 %9, i32 1
  store i16 %38, i16* %40, align 2
  %41 = getelementptr inbounds %"struct.cc::RTree<unsigned long>::Node", %"struct.cc::RTree<unsigned long>::Node"* %33, i64 %9, i32 2, i64 0, i32 2
  %42 = bitcast %"class.gfx::Rect"* %41 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %42, i8 0, i64 16, i1 false) #12
  %43 = getelementptr inbounds %"struct.cc::RTree<unsigned long>::Node", %"struct.cc::RTree<unsigned long>::Node"* %33, i64 %9, i32 2, i64 1, i32 2
  %44 = bitcast %"class.gfx::Rect"* %43 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %44, i8 0, i64 16, i1 false) #12
  %45 = getelementptr inbounds %"struct.cc::RTree<unsigned long>::Node", %"struct.cc::RTree<unsigned long>::Node"* %33, i64 %9, i32 2, i64 2, i32 2
  %46 = bitcast %"class.gfx::Rect"* %45 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %46, i8 0, i64 16, i1 false) #12
  %47 = getelementptr inbounds %"struct.cc::RTree<unsigned long>::Node", %"struct.cc::RTree<unsigned long>::Node"* %33, i64 %9, i32 2, i64 3, i32 2
  %48 = bitcast %"class.gfx::Rect"* %47 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %48, i8 0, i64 16, i1 false) #12
  %49 = getelementptr inbounds %"struct.cc::RTree<unsigned long>::Node", %"struct.cc::RTree<unsigned long>::Node"* %33, i64 %9, i32 2, i64 4, i32 2
  %50 = bitcast %"class.gfx::Rect"* %49 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %50, i8 0, i64 16, i1 false) #12
  %51 = getelementptr inbounds %"struct.cc::RTree<unsigned long>::Node", %"struct.cc::RTree<unsigned long>::Node"* %33, i64 %9, i32 2, i64 5, i32 2
  %52 = bitcast %"class.gfx::Rect"* %51 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %52, i8 0, i64 16, i1 false) #12
  %53 = getelementptr inbounds %"struct.cc::RTree<unsigned long>::Node", %"struct.cc::RTree<unsigned long>::Node"* %33, i64 %9, i32 2, i64 6, i32 2
  %54 = bitcast %"class.gfx::Rect"* %53 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %54, i8 0, i64 16, i1 false) #12
  %55 = getelementptr inbounds %"struct.cc::RTree<unsigned long>::Node", %"struct.cc::RTree<unsigned long>::Node"* %33, i64 %9, i32 2, i64 7, i32 2
  %56 = bitcast %"class.gfx::Rect"* %55 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %56, i8 0, i64 16, i1 false) #12
  %57 = getelementptr inbounds %"struct.cc::RTree<unsigned long>::Node", %"struct.cc::RTree<unsigned long>::Node"* %33, i64 %9, i32 2, i64 8, i32 2
  %58 = bitcast %"class.gfx::Rect"* %57 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %58, i8 0, i64 16, i1 false) #12
  %59 = getelementptr inbounds %"struct.cc::RTree<unsigned long>::Node", %"struct.cc::RTree<unsigned long>::Node"* %33, i64 %9, i32 2, i64 9, i32 2
  %60 = bitcast %"class.gfx::Rect"* %59 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %60, i8 0, i64 16, i1 false) #12
  %61 = getelementptr inbounds %"struct.cc::RTree<unsigned long>::Node", %"struct.cc::RTree<unsigned long>::Node"* %33, i64 %9, i32 2, i64 10, i32 2
  %62 = bitcast %"class.gfx::Rect"* %61 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %62, i8 0, i64 16, i1 false) #12
  %63 = getelementptr inbounds %"struct.cc::RTree<unsigned long>::Node", %"struct.cc::RTree<unsigned long>::Node"* %34, i64 1
  %64 = ptrtoint %"struct.cc::RTree<unsigned long>::Node"* %63 to i64
  %65 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %66 = load %"struct.cc::RTree<unsigned long>::Node"*, %"struct.cc::RTree<unsigned long>::Node"** %65, align 8
  %67 = load i64, i64* %4, align 8
  %68 = ptrtoint %"struct.cc::RTree<unsigned long>::Node"* %66 to i64
  %69 = sub i64 %67, %68
  %70 = sdiv exact i64 %69, -360
  %71 = getelementptr inbounds %"struct.cc::RTree<unsigned long>::Node", %"struct.cc::RTree<unsigned long>::Node"* %34, i64 %70
  %72 = ptrtoint %"struct.cc::RTree<unsigned long>::Node"* %71 to i64
  %73 = icmp sgt i64 %69, 0
  br i1 %73, label %74, label %78

74:                                               ; preds = %31
  %75 = bitcast %"struct.cc::RTree<unsigned long>::Node"* %71 to i8*
  %76 = bitcast %"struct.cc::RTree<unsigned long>::Node"* %66 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %75, i8* align 8 %76, i64 %69, i1 false) #12
  %77 = load %"struct.cc::RTree<unsigned long>::Node"*, %"struct.cc::RTree<unsigned long>::Node"** %65, align 8
  br label %78

78:                                               ; preds = %31, %74
  %79 = phi %"struct.cc::RTree<unsigned long>::Node"* [ %66, %31 ], [ %77, %74 ]
  store i64 %72, i64* %6, align 8
  store i64 %64, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %80 = icmp eq %"struct.cc::RTree<unsigned long>::Node"* %79, null
  br i1 %80, label %83, label %81

81:                                               ; preds = %78
  %82 = bitcast %"struct.cc::RTree<unsigned long>::Node"* %79 to i8*
  tail call void @_ZdlPv(i8* %82) #13
  br label %83

83:                                               ; preds = %78, %81
  ret void
}

; Function Attrs: nofree nounwind
declare double @log(double) local_unnamed_addr #10

; Function Attrs: nofree nounwind
declare double @pow(double, double) local_unnamed_addr #10

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.ssub.with.overflow.i32(i32, i32) #11

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN2cc5RTreeImE6BranchImEENS_9allocatorIS5_EEE8__appendEm(%"class.std::__1::vector.246"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.246", %"class.std::__1::vector.246"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"struct.cc::RTree<unsigned long>::Branch"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.246", %"class.std::__1::vector.246"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %"struct.cc::RTree<unsigned long>::Branch"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 5
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to %"struct.cc::RTree<unsigned long>::Branch"*
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %27, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %"struct.cc::RTree<unsigned long>::Branch", %"struct.cc::RTree<unsigned long>::Branch"* %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr %"struct.cc::RTree<unsigned long>::Branch", %"struct.cc::RTree<unsigned long>::Branch"* %13, i64 %18, i32 0
  %20 = bitcast %"struct.cc::RTree<unsigned long>::Node"** %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = add i64 %23, 32
  %25 = and i64 %24, -32
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 %25, i1 false) #12
  %26 = ptrtoint %"struct.cc::RTree<unsigned long>::Branch"* %16 to i64
  br label %27

27:                                               ; preds = %12, %15
  %28 = phi i64 [ %26, %15 ], [ %8, %12 ]
  store i64 %28, i64* %7, align 8
  br label %84

29:                                               ; preds = %2
  %30 = bitcast %"class.std::__1::vector.246"* %0 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %8, %31
  %33 = ashr exact i64 %32, 5
  %34 = add i64 %33, %1
  %35 = icmp ugt i64 %34, 576460752303423487
  br i1 %35, label %36, label %38

36:                                               ; preds = %29
  %37 = bitcast %"class.std::__1::vector.246"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %37) #14
  unreachable

38:                                               ; preds = %29
  %39 = sub i64 %5, %31
  %40 = ashr exact i64 %39, 5
  %41 = icmp ult i64 %40, 288230376151711743
  br i1 %41, label %42, label %50

42:                                               ; preds = %38
  %43 = ashr exact i64 %39, 4
  %44 = icmp ult i64 %43, %34
  %45 = select i1 %44, i64 %34, i64 %43
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %55, label %47

47:                                               ; preds = %42
  %48 = icmp ugt i64 %45, 576460752303423487
  br i1 %48, label %49, label %50

49:                                               ; preds = %47
  tail call void @abort() #14
  unreachable

50:                                               ; preds = %38, %47
  %51 = phi i64 [ %45, %47 ], [ 576460752303423487, %38 ]
  %52 = shl i64 %51, 5
  %53 = tail call i8* @_Znwm(i64 %52) #13
  %54 = bitcast i8* %53 to %"struct.cc::RTree<unsigned long>::Branch"*
  br label %55

55:                                               ; preds = %42, %50
  %56 = phi i64 [ %51, %50 ], [ 0, %42 ]
  %57 = phi %"struct.cc::RTree<unsigned long>::Branch"* [ %54, %50 ], [ null, %42 ]
  %58 = getelementptr inbounds %"struct.cc::RTree<unsigned long>::Branch", %"struct.cc::RTree<unsigned long>::Branch"* %57, i64 %33
  %59 = bitcast %"struct.cc::RTree<unsigned long>::Branch"* %58 to i8*
  %60 = getelementptr inbounds %"struct.cc::RTree<unsigned long>::Branch", %"struct.cc::RTree<unsigned long>::Branch"* %57, i64 %56
  %61 = getelementptr inbounds %"struct.cc::RTree<unsigned long>::Branch", %"struct.cc::RTree<unsigned long>::Branch"* %58, i64 %1
  %62 = shl nsw i64 %1, 5
  call void @llvm.memset.p0i8.i64(i8* align 8 %59, i8 0, i64 %62, i1 false)
  %63 = ptrtoint %"struct.cc::RTree<unsigned long>::Branch"* %60 to i64
  %64 = ptrtoint %"struct.cc::RTree<unsigned long>::Branch"* %61 to i64
  %65 = getelementptr inbounds %"class.std::__1::vector.246", %"class.std::__1::vector.246"* %0, i64 0, i32 0, i32 0
  %66 = load %"struct.cc::RTree<unsigned long>::Branch"*, %"struct.cc::RTree<unsigned long>::Branch"** %65, align 8
  %67 = load i64, i64* %7, align 8
  %68 = ptrtoint %"struct.cc::RTree<unsigned long>::Branch"* %66 to i64
  %69 = sub i64 %67, %68
  %70 = ashr exact i64 %69, 5
  %71 = sub nsw i64 0, %70
  %72 = getelementptr inbounds %"struct.cc::RTree<unsigned long>::Branch", %"struct.cc::RTree<unsigned long>::Branch"* %58, i64 %71
  %73 = ptrtoint %"struct.cc::RTree<unsigned long>::Branch"* %72 to i64
  %74 = icmp sgt i64 %69, 0
  br i1 %74, label %75, label %79

75:                                               ; preds = %55
  %76 = bitcast %"struct.cc::RTree<unsigned long>::Branch"* %72 to i8*
  %77 = bitcast %"struct.cc::RTree<unsigned long>::Branch"* %66 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %76, i8* align 8 %77, i64 %69, i1 false) #12
  %78 = load %"struct.cc::RTree<unsigned long>::Branch"*, %"struct.cc::RTree<unsigned long>::Branch"** %65, align 8
  br label %79

79:                                               ; preds = %55, %75
  %80 = phi %"struct.cc::RTree<unsigned long>::Branch"* [ %66, %55 ], [ %78, %75 ]
  store i64 %73, i64* %30, align 8
  store i64 %64, i64* %7, align 8
  store i64 %63, i64* %4, align 8
  %81 = icmp eq %"struct.cc::RTree<unsigned long>::Branch"* %80, null
  br i1 %81, label %84, label %82

82:                                               ; preds = %79
  %83 = bitcast %"struct.cc::RTree<unsigned long>::Branch"* %80 to i8*
  tail call void @_ZdlPv(i8* %83) #13
  br label %84

84:                                               ; preds = %82, %79, %27
  ret void
}

; Function Attrs: nounwind
declare void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"*) unnamed_addr #2

declare void @_ZN4base11trace_event11TracedValueC1Em(%"class.base::trace_event::TracedValue"*, i64) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK2cc5RTreeImE21GetAllBoundsRecursiveEPNS1_4NodeImEEPNSt3__13mapImN3gfx4RectENS5_4lessImEENS5_9allocatorINS5_4pairIKmS8_EEEEEE(%"class.cc::RTree"*, %"struct.cc::RTree<unsigned long>::Node"*, %"class.std::__1::map"*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"struct.cc::RTree<unsigned long>::Node", %"struct.cc::RTree<unsigned long>::Node"* %1, i64 0, i32 0
  %5 = load i16, i16* %4, align 8
  %6 = icmp eq i16 %5, 0
  br i1 %6, label %16, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"struct.cc::RTree<unsigned long>::Node", %"struct.cc::RTree<unsigned long>::Node"* %1, i64 0, i32 1
  %9 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %2, i64 0, i32 0, i32 1, i32 0, i32 0
  %10 = bitcast %"class.std::__1::__tree_end_node"* %9 to %"class.std::__1::__tree_node"**
  %11 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %2, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %9, i64 0, i32 0
  %13 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %2, i64 0, i32 0, i32 0
  %14 = bitcast %"class.std::__1::map"* %2 to i64*
  %15 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  br label %17

16:                                               ; preds = %91, %3
  ret void

17:                                               ; preds = %7, %91
  %18 = phi i64 [ 0, %7 ], [ %92, %91 ]
  %19 = load i16, i16* %8, align 2
  %20 = icmp eq i16 %19, 0
  br i1 %20, label %21, label %88

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"struct.cc::RTree<unsigned long>::Node", %"struct.cc::RTree<unsigned long>::Node"* %1, i64 0, i32 2, i64 %18, i32 2
  %23 = getelementptr inbounds %"struct.cc::RTree<unsigned long>::Node", %"struct.cc::RTree<unsigned long>::Node"* %1, i64 0, i32 2, i64 %18, i32 1
  %24 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %10, align 8
  %25 = icmp eq %"class.std::__1::__tree_node"* %24, null
  br i1 %25, label %54, label %26

26:                                               ; preds = %21
  %27 = load i64, i64* %23, align 8
  br label %28

28:                                               ; preds = %50, %26
  %29 = phi %"class.std::__1::__tree_node"* [ %53, %50 ], [ %24, %26 ]
  %30 = phi %"class.std::__1::__tree_node_base"** [ %52, %50 ], [ %11, %26 ]
  %31 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %29, i64 0, i32 1, i32 0, i32 0
  %32 = load i64, i64* %31, align 8
  %33 = icmp ult i64 %27, %32
  br i1 %33, label %34, label %40

34:                                               ; preds = %28
  %35 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %29, i64 0, i32 0, i32 0, i32 0
  %36 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %35, align 8
  %37 = icmp eq %"class.std::__1::__tree_node_base"* %36, null
  br i1 %37, label %38, label %50

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %29, i64 0, i32 0, i32 0
  br label %54

40:                                               ; preds = %28
  %41 = icmp ult i64 %32, %27
  br i1 %41, label %42, label %48

42:                                               ; preds = %40
  %43 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %29, i64 0, i32 0, i32 1
  %44 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %43, align 8
  %45 = icmp eq %"class.std::__1::__tree_node_base"* %44, null
  br i1 %45, label %46, label %50

46:                                               ; preds = %42
  %47 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %29, i64 0, i32 0, i32 0
  br label %54

48:                                               ; preds = %40
  %49 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %29, i64 0, i32 0, i32 0
  br label %54

50:                                               ; preds = %42, %34
  %51 = phi %"class.std::__1::__tree_node_base"* [ %36, %34 ], [ %44, %42 ]
  %52 = phi %"class.std::__1::__tree_node_base"** [ %35, %34 ], [ %43, %42 ]
  %53 = bitcast %"class.std::__1::__tree_node_base"* %51 to %"class.std::__1::__tree_node"*
  br label %28

54:                                               ; preds = %21, %48, %46, %38
  %55 = phi %"class.std::__1::__tree_end_node"* [ %39, %38 ], [ %47, %46 ], [ %49, %48 ], [ %9, %21 ]
  %56 = phi %"class.std::__1::__tree_node_base"** [ %35, %38 ], [ %43, %46 ], [ %30, %48 ], [ %12, %21 ]
  %57 = bitcast %"class.std::__1::__tree_node_base"** %56 to %"class.std::__1::__tree_node"**
  %58 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %57, align 8
  %59 = icmp eq %"class.std::__1::__tree_node"* %58, null
  br i1 %59, label %60, label %83

60:                                               ; preds = %54
  %61 = tail call i8* @_Znwm(i64 56) #13, !noalias !56
  %62 = getelementptr inbounds i8, i8* %61, i64 32
  %63 = bitcast i8* %62 to i64*
  %64 = load i64, i64* %23, align 8, !noalias !56
  store i64 %64, i64* %63, align 8, !noalias !56
  %65 = getelementptr inbounds i8, i8* %61, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %65, i8 0, i64 16, i1 false) #12, !noalias !56
  %66 = bitcast i8* %61 to %"class.std::__1::__tree_node"*
  %67 = bitcast i8* %61 to %"class.std::__1::__tree_node_base"*
  %68 = getelementptr inbounds i8, i8* %61, i64 16
  %69 = bitcast i8* %68 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %61, i8 0, i64 16, i1 false) #12
  store %"class.std::__1::__tree_end_node"* %55, %"class.std::__1::__tree_end_node"** %69, align 8
  %70 = bitcast %"class.std::__1::__tree_node_base"** %56 to i8**
  store i8* %61, i8** %70, align 8
  %71 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %13, align 8
  %72 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %71, i64 0, i32 0
  %73 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %72, align 8
  %74 = icmp eq %"class.std::__1::__tree_node_base"* %73, null
  br i1 %74, label %78, label %75

75:                                               ; preds = %60
  %76 = ptrtoint %"class.std::__1::__tree_node_base"* %73 to i64
  store i64 %76, i64* %14, align 8
  %77 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %56, align 8
  br label %78

78:                                               ; preds = %75, %60
  %79 = phi %"class.std::__1::__tree_node_base"* [ %67, %60 ], [ %77, %75 ]
  %80 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %11, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %80, %"class.std::__1::__tree_node_base"* %79) #12
  %81 = load i64, i64* %15, align 8
  %82 = add i64 %81, 1
  store i64 %82, i64* %15, align 8
  br label %83

83:                                               ; preds = %54, %78
  %84 = phi %"class.std::__1::__tree_node"* [ %66, %78 ], [ %58, %54 ]
  %85 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %84, i64 0, i32 1, i32 0, i32 1
  %86 = bitcast %"class.gfx::Rect"* %85 to i8*
  %87 = bitcast %"class.gfx::Rect"* %22 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %86, i8* align 4 %87, i64 16, i1 false)
  br label %91

88:                                               ; preds = %17
  %89 = getelementptr inbounds %"struct.cc::RTree<unsigned long>::Node", %"struct.cc::RTree<unsigned long>::Node"* %1, i64 0, i32 2, i64 %18, i32 0
  %90 = load %"struct.cc::RTree<unsigned long>::Node"*, %"struct.cc::RTree<unsigned long>::Node"** %89, align 8
  tail call void @_ZNK2cc5RTreeImE21GetAllBoundsRecursiveEPNS1_4NodeImEEPNSt3__13mapImN3gfx4RectENS5_4lessImEENS5_9allocatorINS5_4pairIKmS8_EEEEEE(%"class.cc::RTree"* %0, %"struct.cc::RTree<unsigned long>::Node"* %90, %"class.std::__1::map"* %2)
  br label %91

91:                                               ; preds = %83, %88
  %92 = add nuw nsw i64 %18, 1
  %93 = load i16, i16* %4, align 8
  %94 = zext i16 %93 to i64
  %95 = icmp ult i64 %92, %94
  br i1 %95, label %17, label %16
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !2
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeImN3gfx4RectEEENS_19__map_value_compareImS4_NS_4lessImEELb1EEENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeImN3gfx4RectEEENS_19__map_value_compareImS4_NS_4lessImEELb1EEENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %6) #12
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeImN3gfx4RectEEENS_19__map_value_compareImS4_NS_4lessImEELb1EEENS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %9) #12
  %10 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #13
  ret void

11:                                               ; preds = %2
  ret void
}

declare void @_ZN2cc13PaintOpBufferC1EOS0_(%"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"* dereferenceable(72)) unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind readnone speculatable }
attributes #12 = { nounwind }
attributes #13 = { builtin nounwind }
attributes #14 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN2cc13PaintOpBuffer14OffsetIterator5beginEv: argument 0"}
!5 = distinct !{!5, !"_ZN2cc13PaintOpBuffer14OffsetIterator5beginEv"}
!6 = !{!7, !4}
!7 = distinct !{!7, !8, !"_ZN2cc13PaintOpBuffer14OffsetIterator3endEv: argument 0"}
!8 = distinct !{!8, !"_ZN2cc13PaintOpBuffer14OffsetIterator3endEv"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZN2cc13PaintOpBuffer14OffsetIterator3endEv: argument 0"}
!11 = distinct !{!11, !"_ZN2cc13PaintOpBuffer14OffsetIterator3endEv"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZN2cc13PaintOpBuffer14OffsetIterator5beginEv: argument 0"}
!14 = distinct !{!14, !"_ZN2cc13PaintOpBuffer14OffsetIterator5beginEv"}
!15 = !{!16, !13}
!16 = distinct !{!16, !17, !"_ZN2cc13PaintOpBuffer14OffsetIterator3endEv: argument 0"}
!17 = distinct !{!17, !"_ZN2cc13PaintOpBuffer14OffsetIterator3endEv"}
!18 = !{!19}
!19 = distinct !{!19, !20, !"_ZN2cc13PaintOpBuffer14OffsetIterator3endEv: argument 0"}
!20 = distinct !{!20, !"_ZN2cc13PaintOpBuffer14OffsetIterator3endEv"}
!21 = !{!22}
!22 = distinct !{!22, !23, !"_ZN2cc13PaintOpBuffer14OffsetIterator3endEv: argument 0"}
!23 = distinct !{!23, !"_ZN2cc13PaintOpBuffer14OffsetIterator3endEv"}
!24 = !{!"branch_weights", i32 2000, i32 1}
!25 = !{!"branch_weights", i32 1, i32 2000}
!26 = !{!27}
!27 = distinct !{!27, !28, !"_ZNK2cc5RTreeImE22GetAllBoundsForTracingEv: argument 0"}
!28 = distinct !{!28, !"_ZNK2cc5RTreeImE22GetAllBoundsForTracingEv"}
!29 = !{!30}
!30 = distinct !{!30, !31, !"_ZN2cc13PaintOpBuffer8Iterator5beginEv: argument 0"}
!31 = distinct !{!31, !"_ZN2cc13PaintOpBuffer8Iterator5beginEv"}
!32 = !{!33}
!33 = distinct !{!33, !34, !"_ZN2cc13PaintOpBuffer8Iterator3endEv: argument 0"}
!34 = distinct !{!34, !"_ZN2cc13PaintOpBuffer8Iterator3endEv"}
!35 = !{!36}
!36 = distinct !{!36, !37, !"_ZNSt3__16__treeINS_12__value_typeImN3gfx4RectEEENS_19__map_value_compareImS4_NS_4lessImEELb1EEENS_9allocatorIS4_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOmEEENSG_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS4_PvEENS_22__tree_node_destructorINS9_ISN_EEEEEEDpOT_: argument 0"}
!37 = distinct !{!37, !"_ZNSt3__16__treeINS_12__value_typeImN3gfx4RectEEENS_19__map_value_compareImS4_NS_4lessImEELb1EEENS_9allocatorIS4_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOmEEENSG_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS4_PvEENS_22__tree_node_destructorINS9_ISN_EEEEEEDpOT_"}
!38 = !{!39}
!39 = distinct !{!39, !40, !"_Z10sk_make_spIN2cc13PaintOpBufferEJS1_EE5sk_spIT_EDpOT0_: argument 0"}
!40 = distinct !{!40, !"_Z10sk_make_spIN2cc13PaintOpBufferEJS1_EE5sk_spIT_EDpOT0_"}
!41 = !{!42}
!42 = distinct !{!42, !43, !"_ZN2cc13PaintOpBuffer8Iterator5beginEv: argument 0"}
!43 = distinct !{!43, !"_ZN2cc13PaintOpBuffer8Iterator5beginEv"}
!44 = !{!45}
!45 = distinct !{!45, !46, !"_ZN2cc13PaintOpBuffer8Iterator3endEv: argument 0"}
!46 = distinct !{!46, !"_ZN2cc13PaintOpBuffer8Iterator3endEv"}
!47 = distinct !{!47, !48}
!48 = !{!"llvm.loop.unroll.disable"}
!49 = distinct !{!49, !48}
!50 = !{!51}
!51 = distinct !{!51, !52, !"_ZN2cc13PaintOpBuffer8Iterator5beginEv: argument 0"}
!52 = distinct !{!52, !"_ZN2cc13PaintOpBuffer8Iterator5beginEv"}
!53 = !{!54}
!54 = distinct !{!54, !55, !"_ZN2cc13PaintOpBuffer8Iterator3endEv: argument 0"}
!55 = distinct !{!55, !"_ZN2cc13PaintOpBuffer8Iterator3endEv"}
!56 = !{!57}
!57 = distinct !{!57, !58, !"_ZNSt3__16__treeINS_12__value_typeImN3gfx4RectEEENS_19__map_value_compareImS4_NS_4lessImEELb1EEENS_9allocatorIS4_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKmEEENSG_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS4_PvEENS_22__tree_node_destructorINS9_ISO_EEEEEEDpOT_: argument 0"}
!58 = distinct !{!58, !"_ZNSt3__16__treeINS_12__value_typeImN3gfx4RectEEENS_19__map_value_compareImS4_NS_4lessImEELb1EEENS_9allocatorIS4_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKmEEENSG_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS4_PvEENS_22__tree_node_destructorINS9_ISO_EEEEEEDpOT_"}
