; ModuleID = '../../third_party/swiftshader/third_party/subzero/src/IceGlobalInits.cpp'
source_filename = "../../third_party/swiftshader/third_party/subzero/src/IceGlobalInits.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.Ice::FunctionDeclaration" = type <{ %"class.Ice::GlobalDeclaration", %"class.Ice::FuncSigType", i32, i8, [3 x i8] }>
%"class.Ice::GlobalDeclaration" = type { i32 (...)**, i32, i32, %"class.Ice::StringID" }
%"class.Ice::StringID" = type { i64 }
%"class.Ice::FuncSigType" = type { i32, %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i32*, i32*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i32* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.Ice::GlobalContext" = type { %"class.std::__1::mutex", %"class.llvm::BumpPtrAllocatorImpl", [16 x i8], %"class.std::__1::mutex", %"class.Ice::VariableDeclarationList", [8 x i8], %"class.std::__1::mutex", %"class.std::__1::vector.26", %"class.std::__1::mutex", %"class.std::__1::unique_ptr.40", [16 x i8], %"class.std::__1::mutex", %"class.std::__1::unique_ptr.65", [16 x i8], %"class.std::__1::mutex", %"class.std::__1::vector.71", %"class.std::__1::mutex", %"class.Ice::ErrorCode", %"class.std::__1::mutex", %"class.Ice::GlobalContext::CodeStats", %"class.std::__1::mutex", %"class.Ice::GlobalContext::TimerList", %"class.std::__1::mutex", %"class.llvm::raw_ostream"*, %"class.llvm::raw_ostream"*, %"class.llvm::raw_ostream"*, %"struct.std::__1::atomic", [63 x i8], %"class.std::__1::unique_ptr.132", i64, %"class.Ice::BoundedProducerConsumerQueue", %"class.Ice::BoundedProducerConsumerQueue.148", %"class.std::__1::unique_ptr.261", i8, %"class.std::__1::unique_ptr.267", i8, [15 x %"class.Ice::Constant"*], %"class.Ice::Constant"*, [36 x %"class.Ice::Constant"*], %"class.llvm::SmallVector.273", %"class.llvm::SmallVector.279", %"class.llvm::SmallVector.279" }
%"class.llvm::BumpPtrAllocatorImpl" = type <{ i8*, i8*, %"class.llvm::SmallVector", %"class.llvm::SmallVector.1", i64, %"class.llvm::MallocAllocator", [7 x i8] }>
%"class.llvm::SmallVector" = type { %"class.llvm::SmallVectorImpl", %"struct.llvm::SmallVectorStorage" }
%"class.llvm::SmallVectorImpl" = type { %"class.llvm::SmallVectorTemplateBase" }
%"class.llvm::SmallVectorTemplateBase" = type { %"class.llvm::SmallVectorTemplateCommon" }
%"class.llvm::SmallVectorTemplateCommon" = type { %"class.llvm::SmallVectorBase", %"struct.llvm::AlignedCharArrayUnion" }
%"class.llvm::SmallVectorBase" = type { i8*, i8*, i8* }
%"struct.llvm::AlignedCharArrayUnion" = type { %"struct.llvm::AlignedCharArray" }
%"struct.llvm::AlignedCharArray" = type { [8 x i8] }
%"struct.llvm::SmallVectorStorage" = type { [3 x %"struct.llvm::AlignedCharArrayUnion"] }
%"class.llvm::SmallVector.1" = type <{ %"class.llvm::SmallVectorImpl.2", %"struct.llvm::SmallVectorStorage.7", [7 x i8] }>
%"class.llvm::SmallVectorImpl.2" = type { %"class.llvm::SmallVectorTemplateBase.3" }
%"class.llvm::SmallVectorTemplateBase.3" = type { %"class.llvm::SmallVectorTemplateCommon.4" }
%"class.llvm::SmallVectorTemplateCommon.4" = type { %"class.llvm::SmallVectorBase", %"struct.llvm::AlignedCharArrayUnion.5" }
%"struct.llvm::AlignedCharArrayUnion.5" = type { %"struct.llvm::AlignedCharArray.6" }
%"struct.llvm::AlignedCharArray.6" = type { [16 x i8] }
%"struct.llvm::SmallVectorStorage.7" = type { i8 }
%"class.llvm::MallocAllocator" = type { i8 }
%"class.Ice::VariableDeclarationList" = type { %"class.std::__1::unique_ptr", %"class.std::__1::vector.12", %"class.std::__1::vector.26", %"class.std::__1::vector.33" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.std::__1::vector.12" = type { %"class.std::__1::__vector_base.13" }
%"class.std::__1::__vector_base.13" = type { %"class.Ice::VariableDeclaration"**, %"class.Ice::VariableDeclaration"**, %"class.std::__1::__compressed_pair.21" }
%"class.Ice::VariableDeclaration" = type <{ %"class.Ice::GlobalDeclaration", %"class.std::__1::vector.14", i8, [3 x i8], i32, i8, i8, [6 x i8] }>
%"class.std::__1::vector.14" = type { %"class.std::__1::__vector_base.15" }
%"class.std::__1::__vector_base.15" = type { %"class.Ice::VariableDeclaration::Initializer"**, %"class.Ice::VariableDeclaration::Initializer"**, %"class.std::__1::__compressed_pair.16" }
%"class.Ice::VariableDeclaration::Initializer" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"class.Ice::VariableDeclaration::Initializer"** }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.Ice::VariableDeclaration"** }
%"class.std::__1::vector.33" = type { %"class.std::__1::__vector_base.34" }
%"class.std::__1::__vector_base.34" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"class.std::__1::unique_ptr"* }
%"class.std::__1::vector.26" = type { %"class.std::__1::__vector_base.27" }
%"class.std::__1::__vector_base.27" = type { %"class.std::__1::function"*, %"class.std::__1::function"*, %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"union.std::__1::__function::__policy_storage"*)* }
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"class.std::__1::function"* }
%"class.std::__1::unique_ptr.40" = type { %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"class.Ice::StringPool"* }
%"class.Ice::StringPool" = type { i64, %"class.std::__1::unordered_map" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.43", %"class.std::__1::__compressed_pair.52", %"class.std::__1::__compressed_pair.57", %"class.std::__1::__compressed_pair.59", [4 x i8] }>
%"class.std::__1::unique_ptr.43" = type { %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45", %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { i64 }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { float }
%"class.std::__1::unique_ptr.65" = type { %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"class.Ice::ConstantPool"* }
%"class.Ice::ConstantPool" = type opaque
%"class.std::__1::vector.71" = type { %"class.std::__1::__vector_base.72" }
%"class.std::__1::__vector_base.72" = type { %"class.Ice::JumpTableData"*, %"class.Ice::JumpTableData"*, %"class.std::__1::__compressed_pair.80" }
%"class.Ice::JumpTableData" = type { %"class.Ice::StringID", %"class.Ice::StringID", i32, %"class.std::__1::vector.73" }
%"class.std::__1::vector.73" = type { %"class.std::__1::__vector_base.74" }
%"class.std::__1::__vector_base.74" = type { i64*, i64*, %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { i64* }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"struct.std::__1::__compressed_pair_elem.81" = type { %"class.Ice::JumpTableData"* }
%"class.Ice::ErrorCode" = type <{ %"class.std::__1::error_code", i8, [7 x i8] }>
%"class.std::__1::error_code" = type { i32, %"class.std::__1::error_category"* }
%"class.std::__1::error_category" = type { i32 (...)** }
%"class.Ice::GlobalContext::CodeStats" = type { %"struct.std::__1::array" }
%"struct.std::__1::array" = type { [6 x i32] }
%"class.Ice::GlobalContext::TimerList" = type { %"class.std::__1::vector.85" }
%"class.std::__1::vector.85" = type { %"class.std::__1::__vector_base.86" }
%"class.std::__1::__vector_base.86" = type { %"class.Ice::TimerStack"*, %"class.Ice::TimerStack"*, %"class.std::__1::__compressed_pair.127" }
%"class.Ice::TimerStack" = type { %"class.std::__1::basic_string", double, double, i64, %"class.std::__1::map", %"class.std::__1::vector.99", %"class.std::__1::vector.106", %"class.std::__1::vector.120", %"class.std::__1::vector.108", i64 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.92", %"class.std::__1::__compressed_pair.97" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"class.std::__1::vector.99" = type { %"class.std::__1::__vector_base.100" }
%"class.std::__1::__vector_base.100" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.101" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.102" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::vector.106" = type { %"class.std::__1::__vector_base.107" }
%"class.std::__1::__vector_base.107" = type { %"class.Ice::TimerStack::TimerTreeNode"*, %"class.Ice::TimerStack::TimerTreeNode"*, %"class.std::__1::__compressed_pair.115" }
%"class.Ice::TimerStack::TimerTreeNode" = type { %"class.std::__1::vector.108", i64, i32, double, i64 }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"class.Ice::TimerStack::TimerTreeNode"* }
%"class.std::__1::vector.120" = type { %"class.std::__1::__vector_base.121" }
%"class.std::__1::__vector_base.121" = type { double*, double*, %"class.std::__1::__compressed_pair.122" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"struct.std::__1::__compressed_pair_elem.123" = type { double* }
%"class.std::__1::vector.108" = type { %"class.std::__1::__vector_base.109" }
%"class.std::__1::__vector_base.109" = type { i64*, i64*, %"class.std::__1::__compressed_pair.110" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.111" = type { i64* }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.128" }
%"struct.std::__1::__compressed_pair_elem.128" = type { %"class.Ice::TimerStack"* }
%"class.std::__1::mutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.llvm::raw_ostream" = type <{ i32 (...)**, i8*, i8*, i8*, i32, [4 x i8] }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i8 }
%"class.std::__1::unique_ptr.132" = type { %"class.std::__1::__compressed_pair.133" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.134" }
%"struct.std::__1::__compressed_pair_elem.134" = type { %"class.Ice::ELFObjectWriter"* }
%"class.Ice::ELFObjectWriter" = type opaque
%"class.Ice::BoundedProducerConsumerQueue" = type <{ [65536 x %"class.std::__1::unique_ptr.138"], %"class.std::__1::mutex", [24 x i8], %"class.std::__1::condition_variable", i64, [8 x i8], %"class.std::__1::condition_variable", i64, [8 x i8], i64, i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.Ice::OptWorkItem"* }
%"class.Ice::OptWorkItem" = type { i32 (...)** }
%"class.std::__1::condition_variable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.144, %union.anon.146, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.144 = type { i64 }
%union.anon.146 = type { i64 }
%"class.Ice::BoundedProducerConsumerQueue.148" = type <{ [128 x %"class.std::__1::unique_ptr.149"], %"class.std::__1::mutex", [24 x i8], %"class.std::__1::condition_variable", i64, [8 x i8], %"class.std::__1::condition_variable", i64, [8 x i8], i64, i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.149" = type { %"class.std::__1::__compressed_pair.150" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.151" = type { %"class.Ice::EmitterWorkItem"* }
%"class.Ice::EmitterWorkItem" = type { i32, i32, %"class.std::__1::unique_ptr.152", %"class.std::__1::unique_ptr.158", %"class.std::__1::unique_ptr.175" }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.Ice::VariableDeclarationList"* }
%"class.std::__1::unique_ptr.158" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { %"class.Ice::Assembler"* }
%"class.Ice::Assembler" = type { i32 (...)**, i32, [4 x i8], %"class.llvm::BumpPtrAllocatorImpl.161", %"class.Ice::StringID", i8, i8, [6 x i8], %"class.Ice::AssemblerBuffer" }
%"class.llvm::BumpPtrAllocatorImpl.161" = type <{ i8*, i8*, %"class.llvm::SmallVector", %"class.llvm::SmallVector.1", i64, %"class.llvm::MallocAllocator", [7 x i8] }>
%"class.Ice::AssemblerBuffer" = type <{ i8, [7 x i8], i64, i64, i64, %"class.Ice::Assembler"*, %"class.std::__1::vector.164", i8, [7 x i8] }>
%"class.std::__1::vector.164" = type { %"class.std::__1::__vector_base.165" }
%"class.std::__1::__vector_base.165" = type { %"class.Ice::AssemblerFixup"**, %"class.Ice::AssemblerFixup"**, %"class.std::__1::__compressed_pair.167" }
%"class.Ice::AssemblerFixup" = type { i32 (...)**, i64, i32, i32, i8, %union.anon.166 }
%union.anon.166 = type { %"class.Ice::Constant"* }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.168" }
%"struct.std::__1::__compressed_pair_elem.168" = type { %"class.Ice::AssemblerFixup"** }
%"class.std::__1::unique_ptr.175" = type { %"class.std::__1::__compressed_pair.176" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177" }
%"struct.std::__1::__compressed_pair_elem.177" = type { %"class.Ice::Cfg"* }
%"class.Ice::Cfg" = type <{ %"class.std::__1::unique_ptr", %"class.Ice::GlobalContext"*, i32, i32, i32, [4 x i8], %"class.Ice::StringID", i32, i8, i8, i8, i8, %"class.std::__1::basic_string", %"class.Ice::CfgNode"*, %"class.std::__1::vector.178", i32, [4 x i8], %"class.std::__1::vector.183", %"class.std::__1::vector.183", %"class.std::__1::vector.183", %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.189", %"class.std::__1::unique_ptr.195", %"class.std::__1::unique_ptr.201", %"class.std::__1::unique_ptr.158", %"class.std::__1::unique_ptr.152", %"class.std::__1::vector.219", %"class.Ice::CfgNode"*, %"class.std::__1::vector.225", i32, [4 x i8] }>
%"class.std::__1::vector.178" = type { %"class.std::__1::__vector_base.179" }
%"class.std::__1::__vector_base.179" = type { %"class.Ice::CfgNode"**, %"class.Ice::CfgNode"**, %"class.std::__1::__compressed_pair.180" }
%"class.std::__1::__compressed_pair.180" = type { %"struct.std::__1::__compressed_pair_elem.181", %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.181" = type { %"class.Ice::CfgNode"** }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"struct.Ice::sz_allocator" }
%"struct.Ice::sz_allocator" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.std::__1::vector.183" = type { %"class.std::__1::__vector_base.184" }
%"class.std::__1::__vector_base.184" = type { %"class.Ice::Variable"**, %"class.Ice::Variable"**, %"class.std::__1::__compressed_pair.185" }
%"class.Ice::Variable" = type { %"class.Ice::Operand", i32, %"class.Ice::StringID.285", i8, i8, i8, i8, i8, i8, %"class.Ice::RegNumT", %"class.Ice::RegNumT", i32, %"class.Ice::LiveRange", [1 x %"class.Ice::Variable"*], %"class.Ice::Variable"*, i8* }
%"class.Ice::Operand" = type { i32 (...)**, i32, i32, i32, %"class.Ice::Variable"**, i8* }
%"class.Ice::StringID.285" = type { i64 }
%"class.Ice::RegNumT" = type { i32 }
%"class.Ice::LiveRange" = type { %"class.std::__1::vector.286", %"class.std::__1::unordered_map.292", %"class.std::__1::__wrap_iter" }
%"class.std::__1::vector.286" = type { %"class.std::__1::__vector_base.287" }
%"class.std::__1::__vector_base.287" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.288" }
%"struct.std::__1::pair" = type { i32, i32 }
%"class.std::__1::__compressed_pair.288" = type { %"struct.std::__1::__compressed_pair_elem.289", %"struct.std::__1::__compressed_pair_elem.290" }
%"struct.std::__1::__compressed_pair_elem.289" = type { %"struct.std::__1::pair"* }
%"struct.std::__1::__compressed_pair_elem.290" = type { %"struct.Ice::sz_allocator.291" }
%"struct.Ice::sz_allocator.291" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.std::__1::unordered_map.292" = type { %"class.std::__1::__hash_table.293" }
%"class.std::__1::__hash_table.293" = type <{ %"class.std::__1::unique_ptr.294", %"class.std::__1::__compressed_pair.303", %"class.std::__1::__compressed_pair.307", %"class.std::__1::__compressed_pair.312", [4 x i8] }>
%"class.std::__1::unique_ptr.294" = type { %"class.std::__1::__compressed_pair.295" }
%"class.std::__1::__compressed_pair.295" = type { %"struct.std::__1::__compressed_pair_elem.296", %"struct.std::__1::__compressed_pair_elem.298" }
%"struct.std::__1::__compressed_pair_elem.296" = type { %"struct.std::__1::__hash_node_base.297"** }
%"struct.std::__1::__hash_node_base.297" = type { %"struct.std::__1::__hash_node_base.297"* }
%"struct.std::__1::__compressed_pair_elem.298" = type { %"class.std::__1::__bucket_list_deallocator.299" }
%"class.std::__1::__bucket_list_deallocator.299" = type { %"class.std::__1::__compressed_pair.300" }
%"class.std::__1::__compressed_pair.300" = type { %"struct.std::__1::__compressed_pair_elem.48", %"struct.std::__1::__compressed_pair_elem.301" }
%"struct.std::__1::__compressed_pair_elem.301" = type { %"struct.Ice::sz_allocator.302" }
%"struct.Ice::sz_allocator.302" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.std::__1::__compressed_pair.303" = type { %"struct.std::__1::__compressed_pair_elem.304", %"struct.std::__1::__compressed_pair_elem.305" }
%"struct.std::__1::__compressed_pair_elem.304" = type { %"struct.std::__1::__hash_node_base.297" }
%"struct.std::__1::__compressed_pair_elem.305" = type { %"struct.Ice::sz_allocator.306" }
%"struct.Ice::sz_allocator.306" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.std::__1::__compressed_pair.307" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"class.std::__1::__compressed_pair.312" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"class.std::__1::__wrap_iter" = type { %"struct.std::__1::pair"* }
%"class.std::__1::__compressed_pair.185" = type { %"struct.std::__1::__compressed_pair_elem.186", %"struct.std::__1::__compressed_pair_elem.187" }
%"struct.std::__1::__compressed_pair_elem.186" = type { %"class.Ice::Variable"** }
%"struct.std::__1::__compressed_pair_elem.187" = type { %"struct.Ice::sz_allocator.188" }
%"struct.Ice::sz_allocator.188" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.std::__1::unique_ptr.189" = type { %"class.std::__1::__compressed_pair.190" }
%"class.std::__1::__compressed_pair.190" = type { %"struct.std::__1::__compressed_pair_elem.191" }
%"struct.std::__1::__compressed_pair_elem.191" = type { %"class.Ice::Liveness"* }
%"class.Ice::Liveness" = type opaque
%"class.std::__1::unique_ptr.195" = type { %"class.std::__1::__compressed_pair.196" }
%"class.std::__1::__compressed_pair.196" = type { %"struct.std::__1::__compressed_pair_elem.197" }
%"struct.std::__1::__compressed_pair_elem.197" = type { %"class.Ice::TargetLowering"* }
%"class.Ice::TargetLowering" = type opaque
%"class.std::__1::unique_ptr.201" = type { %"class.std::__1::__compressed_pair.202" }
%"class.std::__1::__compressed_pair.202" = type { %"struct.std::__1::__compressed_pair_elem.203" }
%"struct.std::__1::__compressed_pair_elem.203" = type { %"class.Ice::VariablesMetadata"* }
%"class.Ice::VariablesMetadata" = type { %"class.Ice::Cfg"*, i32, %"class.std::__1::vector.204" }
%"class.std::__1::vector.204" = type { %"class.std::__1::__vector_base.205" }
%"class.std::__1::__vector_base.205" = type { %"class.Ice::VariableTracking"*, %"class.Ice::VariableTracking"*, %"class.std::__1::__compressed_pair.212" }
%"class.Ice::VariableTracking" = type <{ i32, i32, %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"*, %"class.std::__1::vector.206", %"class.Ice::Inst"*, %"class.Ice::RegWeight", [4 x i8] }>
%"class.std::__1::vector.206" = type { %"class.std::__1::__vector_base.207" }
%"class.std::__1::__vector_base.207" = type { %"class.Ice::Inst"**, %"class.Ice::Inst"**, %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209", %"struct.std::__1::__compressed_pair_elem.210" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"class.Ice::Inst"** }
%"struct.std::__1::__compressed_pair_elem.210" = type { %"struct.Ice::sz_allocator.211" }
%"struct.Ice::sz_allocator.211" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.Ice::Inst" = type opaque
%"class.Ice::RegWeight" = type { i32 }
%"class.std::__1::__compressed_pair.212" = type { %"struct.std::__1::__compressed_pair_elem.213", %"struct.std::__1::__compressed_pair_elem.214" }
%"struct.std::__1::__compressed_pair_elem.213" = type { %"class.Ice::VariableTracking"* }
%"struct.std::__1::__compressed_pair_elem.214" = type { %"struct.Ice::sz_allocator.215" }
%"struct.Ice::sz_allocator.215" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.std::__1::vector.219" = type { %"class.std::__1::__vector_base.220" }
%"class.std::__1::__vector_base.220" = type { %"class.Ice::InstJumpTable"**, %"class.Ice::InstJumpTable"**, %"class.std::__1::__compressed_pair.221" }
%"class.Ice::InstJumpTable" = type opaque
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.222", %"struct.std::__1::__compressed_pair_elem.223" }
%"struct.std::__1::__compressed_pair_elem.222" = type { %"class.Ice::InstJumpTable"** }
%"struct.std::__1::__compressed_pair_elem.223" = type { %"struct.Ice::sz_allocator.224" }
%"struct.Ice::sz_allocator.224" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.Ice::CfgNode" = type opaque
%"class.std::__1::vector.225" = type { %"class.std::__1::__vector_base.226" }
%"class.std::__1::__vector_base.226" = type { %"struct.Ice::Loop"*, %"struct.Ice::Loop"*, %"class.std::__1::__compressed_pair.250" }
%"struct.Ice::Loop" = type { %"class.Ice::CfgNode"*, %"class.Ice::CfgNode"*, %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.227" }
%"class.std::__1::__hash_table.227" = type <{ %"class.std::__1::unique_ptr.228", %"class.std::__1::__compressed_pair.237", %"class.std::__1::__compressed_pair.241", %"class.std::__1::__compressed_pair.245", [4 x i8] }>
%"class.std::__1::unique_ptr.228" = type { %"class.std::__1::__compressed_pair.229" }
%"class.std::__1::__compressed_pair.229" = type { %"struct.std::__1::__compressed_pair_elem.230", %"struct.std::__1::__compressed_pair_elem.232" }
%"struct.std::__1::__compressed_pair_elem.230" = type { %"struct.std::__1::__hash_node_base.231"** }
%"struct.std::__1::__hash_node_base.231" = type { %"struct.std::__1::__hash_node_base.231"* }
%"struct.std::__1::__compressed_pair_elem.232" = type { %"class.std::__1::__bucket_list_deallocator.233" }
%"class.std::__1::__bucket_list_deallocator.233" = type { %"class.std::__1::__compressed_pair.234" }
%"class.std::__1::__compressed_pair.234" = type { %"struct.std::__1::__compressed_pair_elem.48", %"struct.std::__1::__compressed_pair_elem.235" }
%"struct.std::__1::__compressed_pair_elem.235" = type { %"struct.Ice::sz_allocator.236" }
%"struct.Ice::sz_allocator.236" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.238", %"struct.std::__1::__compressed_pair_elem.239" }
%"struct.std::__1::__compressed_pair_elem.238" = type { %"struct.std::__1::__hash_node_base.231" }
%"struct.std::__1::__compressed_pair_elem.239" = type { %"struct.Ice::sz_allocator.240" }
%"struct.Ice::sz_allocator.240" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.std::__1::__compressed_pair.241" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"class.std::__1::__compressed_pair.245" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"class.std::__1::__compressed_pair.250" = type { %"struct.std::__1::__compressed_pair_elem.251", %"struct.std::__1::__compressed_pair_elem.252" }
%"struct.std::__1::__compressed_pair_elem.251" = type { %"struct.Ice::Loop"* }
%"struct.std::__1::__compressed_pair_elem.252" = type { %"struct.Ice::sz_allocator.253" }
%"struct.Ice::sz_allocator.253" = type { %"class.llvm::BumpPtrAllocatorImpl"* }
%"class.std::__1::unique_ptr.261" = type { %"class.std::__1::__compressed_pair.262" }
%"class.std::__1::__compressed_pair.262" = type { %"struct.std::__1::__compressed_pair_elem.263" }
%"struct.std::__1::__compressed_pair_elem.263" = type { %"class.Ice::TargetDataLowering"* }
%"class.Ice::TargetDataLowering" = type opaque
%"class.std::__1::unique_ptr.267" = type { %"class.std::__1::__compressed_pair.268" }
%"class.std::__1::__compressed_pair.268" = type { %"struct.std::__1::__compressed_pair_elem.269" }
%"struct.std::__1::__compressed_pair_elem.269" = type { %"class.Ice::Instrumentation"* }
%"class.Ice::Instrumentation" = type { i32 (...)**, %"class.Ice::GlobalContext"*, i8, %"class.std::__1::mutex", %"class.std::__1::condition_variable" }
%"class.Ice::Constant" = type <{ %"class.Ice::Operand", %"class.Ice::StringID", i8, i8, [6 x i8] }>
%"class.llvm::SmallVector.273" = type { %"class.llvm::SmallVectorImpl.274", %"struct.llvm::SmallVectorStorage.278" }
%"class.llvm::SmallVectorImpl.274" = type { %"class.llvm::SmallVectorTemplateBase.275" }
%"class.llvm::SmallVectorTemplateBase.275" = type { %"class.llvm::SmallVectorTemplateCommon.276" }
%"class.llvm::SmallVectorTemplateCommon.276" = type { %"class.llvm::SmallVectorBase", %"struct.llvm::AlignedCharArrayUnion.277" }
%"struct.llvm::AlignedCharArrayUnion.277" = type { %"struct.llvm::AlignedCharArray" }
%"struct.llvm::SmallVectorStorage.278" = type { [127 x %"struct.llvm::AlignedCharArrayUnion.277"] }
%"class.llvm::SmallVector.279" = type { %"class.llvm::SmallVectorImpl.280", %"struct.llvm::SmallVectorStorage.284" }
%"class.llvm::SmallVectorImpl.280" = type { %"class.llvm::SmallVectorTemplateBase.281" }
%"class.llvm::SmallVectorTemplateBase.281" = type { %"class.llvm::SmallVectorTemplateCommon.282" }
%"class.llvm::SmallVectorTemplateCommon.282" = type { %"class.llvm::SmallVectorBase", %"struct.llvm::AlignedCharArrayUnion.283" }
%"struct.llvm::AlignedCharArrayUnion.283" = type { %"struct.llvm::AlignedCharArray" }
%"struct.llvm::SmallVectorStorage.284" = type { [127 x %"struct.llvm::AlignedCharArrayUnion.283"] }
%"class.llvm::raw_string_ostream" = type { %"class.llvm::raw_ostream.base", %"class.std::__1::basic_string"* }
%"class.llvm::raw_ostream.base" = type <{ i32 (...)**, i8*, i8*, i8*, i32 }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.Ice::VariableDeclaration::DataInitializer" = type { %"class.Ice::VariableDeclaration::Initializer.base", i32, i8* }
%"class.Ice::VariableDeclaration::Initializer.base" = type <{ i32 (...)**, i32 }>
%"class.Ice::VariableDeclaration::ZeroInitializer" = type { %"class.Ice::VariableDeclaration::Initializer.base", i32 }
%"class.Ice::VariableDeclaration::RelocInitializer" = type { %"class.Ice::VariableDeclaration::Initializer.base", %"class.Ice::GlobalDeclaration"*, i32, %"class.Ice::RelocOffset"**, i8, i32 }
%"class.Ice::RelocOffset" = type { i8, i8, i32 }

$_ZN3IcelsINS_22GlobalStringPoolTraitsEEERN4llvm11raw_ostreamES4_RKNS_8StringIDIT_EE = comdat any

$_ZN3Ice19FunctionDeclarationD2Ev = comdat any

$_ZN3Ice19FunctionDeclarationD0Ev = comdat any

$_ZNK3Ice19FunctionDeclaration19getSuppressManglingEv = comdat any

$_ZNK3Ice19VariableDeclaration15DataInitializer11getNumBytesEv = comdat any

$_ZNK3Ice19VariableDeclaration15ZeroInitializer11getNumBytesEv = comdat any

$_ZNK3Ice19VariableDeclaration16RelocInitializer11getNumBytesEv = comdat any

$_ZN3Ice19VariableDeclarationD2Ev = comdat any

$_ZN3Ice19VariableDeclarationD0Ev = comdat any

$_ZNK3Ice19VariableDeclaration19getSuppressManglingEv = comdat any

$_ZN4llvm11raw_ostreamlsENS_9StringRefE = comdat any

@.str = private unnamed_addr constant [27 x i8] c"Invalid type signature for\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.2 = private unnamed_addr constant [3 x i8] c": \00", align 1
@_ZTVN3Ice19FunctionDeclarationE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.Ice::FunctionDeclaration"*)* @_ZN3Ice19FunctionDeclarationD2Ev to i8*), i8* bitcast (void (%"class.Ice::FunctionDeclaration"*)* @_ZN3Ice19FunctionDeclarationD0Ev to i8*), i8* bitcast (void (%"class.Ice::FunctionDeclaration"*, %"class.llvm::raw_ostream"*)* @_ZNK3Ice19FunctionDeclaration8dumpTypeERN4llvm11raw_ostreamE to i8*), i8* bitcast (void (%"class.Ice::FunctionDeclaration"*, %"class.llvm::raw_ostream"*)* @_ZNK3Ice19FunctionDeclaration4dumpERN4llvm11raw_ostreamE to i8*), i8* bitcast (i1 (%"class.Ice::FunctionDeclaration"*)* @_ZNK3Ice19FunctionDeclaration19getSuppressManglingEv to i8*)] }, align 8
@_ZTVN3Ice19VariableDeclaration11InitializerE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.Ice::VariableDeclaration::Initializer"*, %"class.llvm::raw_ostream"*)* @_ZNK3Ice19VariableDeclaration11Initializer8dumpTypeERN4llvm11raw_ostreamE to i8*)] }, align 8
@_ZTVN3Ice19VariableDeclaration15DataInitializerE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (i32 (%"class.Ice::VariableDeclaration::DataInitializer"*)* @_ZNK3Ice19VariableDeclaration15DataInitializer11getNumBytesEv to i8*), i8* bitcast (void (%"class.Ice::VariableDeclaration::DataInitializer"*, %"class.llvm::raw_ostream"*)* @_ZNK3Ice19VariableDeclaration15DataInitializer4dumpERN4llvm11raw_ostreamE to i8*), i8* bitcast (void (%"class.Ice::VariableDeclaration::Initializer"*, %"class.llvm::raw_ostream"*)* @_ZNK3Ice19VariableDeclaration11Initializer8dumpTypeERN4llvm11raw_ostreamE to i8*)] }, align 8
@_ZTVN3Ice19VariableDeclaration15ZeroInitializerE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (i32 (%"class.Ice::VariableDeclaration::ZeroInitializer"*)* @_ZNK3Ice19VariableDeclaration15ZeroInitializer11getNumBytesEv to i8*), i8* bitcast (void (%"class.Ice::VariableDeclaration::ZeroInitializer"*, %"class.llvm::raw_ostream"*)* @_ZNK3Ice19VariableDeclaration15ZeroInitializer4dumpERN4llvm11raw_ostreamE to i8*), i8* bitcast (void (%"class.Ice::VariableDeclaration::Initializer"*, %"class.llvm::raw_ostream"*)* @_ZNK3Ice19VariableDeclaration11Initializer8dumpTypeERN4llvm11raw_ostreamE to i8*)] }, align 8
@_ZTVN3Ice19VariableDeclaration16RelocInitializerE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (i32 (%"class.Ice::VariableDeclaration::RelocInitializer"*)* @_ZNK3Ice19VariableDeclaration16RelocInitializer11getNumBytesEv to i8*), i8* bitcast (void (%"class.Ice::VariableDeclaration::RelocInitializer"*, %"class.llvm::raw_ostream"*)* @_ZNK3Ice19VariableDeclaration16RelocInitializer4dumpERN4llvm11raw_ostreamE to i8*), i8* bitcast (void (%"class.Ice::VariableDeclaration::RelocInitializer"*, %"class.llvm::raw_ostream"*)* @_ZNK3Ice19VariableDeclaration16RelocInitializer8dumpTypeERN4llvm11raw_ostreamE to i8*)] }, align 8
@_ZTVN3Ice19VariableDeclarationE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.Ice::VariableDeclaration"*)* @_ZN3Ice19VariableDeclarationD2Ev to i8*), i8* bitcast (void (%"class.Ice::VariableDeclaration"*)* @_ZN3Ice19VariableDeclarationD0Ev to i8*), i8* bitcast (void (%"class.Ice::VariableDeclaration"*, %"class.llvm::raw_ostream"*)* @_ZNK3Ice19VariableDeclaration8dumpTypeERN4llvm11raw_ostreamE to i8*), i8* bitcast (void (%"class.Ice::VariableDeclaration"*, %"class.llvm::raw_ostream"*)* @_ZNK3Ice19VariableDeclaration4dumpERN4llvm11raw_ostreamE to i8*), i8* bitcast (i1 (%"class.Ice::VariableDeclaration"*)* @_ZNK3Ice19VariableDeclaration19getSuppressManglingEv to i8*)] }, align 8
@_ZTVN4llvm18raw_string_ostreamE = external unnamed_addr constant { [13 x i8*] }, align 8
@.str.3 = private unnamed_addr constant [47 x i8] c"toString() called when hasStdString() is false\00", align 1

; Function Attrs: nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZNK3Ice19FunctionDeclaration21validateTypeSignatureEv(%"class.Ice::FunctionDeclaration"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.Ice::FunctionDeclaration", %"class.Ice::FunctionDeclaration"* %0, i64 0, i32 1, i32 1
  %3 = getelementptr inbounds %"class.Ice::FunctionDeclaration", %"class.Ice::FunctionDeclaration"* %0, i64 0, i32 1, i32 1, i32 0, i32 1
  %4 = bitcast i32** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = lshr exact i64 %8, 2
  %10 = trunc i64 %9 to i32
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %27, label %19

12:                                               ; preds = %19
  %13 = load i64, i64* %4, align 8
  %14 = load i64, i64* %6, align 8
  %15 = sub i64 %13, %14
  %16 = lshr exact i64 %15, 2
  %17 = and i64 %16, 4294967295
  %18 = icmp ult i64 %26, %17
  br i1 %18, label %19, label %27

19:                                               ; preds = %1, %12
  %20 = phi i64 [ %14, %12 ], [ %7, %1 ]
  %21 = phi i64 [ %26, %12 ], [ 0, %1 ]
  %22 = inttoptr i64 %20 to i32*
  %23 = getelementptr inbounds i32, i32* %22, i64 %21
  %24 = load i32, i32* %23, align 4
  %25 = tail call zeroext i1 @_ZN3Ice19isCallParameterTypeENS_4TypeE(i32 %24) #8
  %26 = add nuw nsw i64 %21, 1
  br i1 %25, label %12, label %33

27:                                               ; preds = %12, %1
  %28 = getelementptr inbounds %"class.Ice::FunctionDeclaration", %"class.Ice::FunctionDeclaration"* %0, i64 0, i32 1, i32 0
  %29 = load i32, i32* %28, align 8
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %33, label %31

31:                                               ; preds = %27
  %32 = tail call zeroext i1 @_ZN3Ice19isCallParameterTypeENS_4TypeE(i32 %29) #8
  br label %33

33:                                               ; preds = %19, %31, %27
  %34 = phi i1 [ true, %27 ], [ %32, %31 ], [ false, %19 ]
  ret i1 %34
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: optsize
declare zeroext i1 @_ZN3Ice19isCallParameterTypeENS_4TypeE(i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3Ice19FunctionDeclaration21getTypeSignatureErrorEPKNS_13GlobalContextE(%"class.std::__1::basic_string"* noalias sret, %"class.Ice::FunctionDeclaration"*, %"class.Ice::GlobalContext"* nocapture readnone) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.llvm::raw_string_ostream", align 8
  %6 = alloca %"class.Ice::StringID", align 8
  %7 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #9
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 24, i1 false) #9
  %9 = bitcast %"class.llvm::raw_string_ostream"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %9) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 40, i1 false)
  %10 = getelementptr inbounds %"class.llvm::raw_string_ostream", %"class.llvm::raw_string_ostream"* %5, i64 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.llvm::raw_string_ostream", %"class.llvm::raw_string_ostream"* %5, i64 0, i32 0, i32 4
  store i32 1, i32* %11, align 8
  %12 = getelementptr inbounds %"class.llvm::raw_string_ostream", %"class.llvm::raw_string_ostream"* %5, i64 0, i32 0, i32 1
  %13 = bitcast i8** %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 24, i1 false) #9
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN4llvm18raw_string_ostreamE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %14 = getelementptr inbounds %"class.llvm::raw_string_ostream", %"class.llvm::raw_string_ostream"* %5, i64 0, i32 1
  store %"class.std::__1::basic_string"* %4, %"class.std::__1::basic_string"** %14, align 8
  %15 = bitcast %"class.llvm::raw_string_ostream"* %5 to %"class.llvm::raw_ostream"*
  %16 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* nonnull %15, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str, i64 0, i64 0), i64 26) #8
  %17 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* nonnull %15, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0), i64 1) #8
  %18 = bitcast %"class.Ice::StringID"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #9
  %19 = getelementptr inbounds %"class.Ice::FunctionDeclaration", %"class.Ice::FunctionDeclaration"* %1, i64 0, i32 0, i32 3, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds %"class.Ice::StringID", %"class.Ice::StringID"* %6, i64 0, i32 0
  store i64 %20, i64* %21, align 8
  %22 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN3IcelsINS_22GlobalStringPoolTraitsEEERN4llvm11raw_ostreamES4_RKNS_8StringIDIT_EE(%"class.llvm::raw_ostream"* dereferenceable(40) %17, %"class.Ice::StringID"* nonnull dereferenceable(8) %6) #10
  %23 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %22, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i64 2) #8
  %24 = getelementptr inbounds %"class.Ice::FunctionDeclaration", %"class.Ice::FunctionDeclaration"* %1, i64 0, i32 1
  call void @_ZNK3Ice11FuncSigType4dumpERN4llvm11raw_ostreamE(%"class.Ice::FuncSigType"* %24, %"class.llvm::raw_ostream"* dereferenceable(40) %23) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #9
  %25 = getelementptr inbounds %"class.llvm::raw_string_ostream", %"class.llvm::raw_string_ostream"* %5, i64 0, i32 0, i32 3
  %26 = load i8*, i8** %25, align 8
  %27 = load i8*, i8** %12, align 8
  %28 = icmp eq i8* %26, %27
  br i1 %28, label %30, label %29

29:                                               ; preds = %3
  call void @_ZN4llvm11raw_ostream14flush_nonemptyEv(%"class.llvm::raw_ostream"* nonnull %15) #8
  br label %30

30:                                               ; preds = %3, %29
  %31 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %14, align 8
  %32 = bitcast %"class.std::__1::basic_string"* %31 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %32, i64 0, i32 1, i32 0
  %34 = load i8, i8* %33, align 1
  %35 = icmp slt i8 %34, 0
  br i1 %35, label %39, label %36

36:                                               ; preds = %30
  %37 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %38 = bitcast %"class.std::__1::basic_string"* %31 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 8 %38, i64 24, i1 false) #9
  br label %44

39:                                               ; preds = %30
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load i8*, i8** %40, align 8
  %42 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %43 = load i64, i64* %42, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %0, i8* %41, i64 %43) #8
  br label %44

44:                                               ; preds = %36, %39
  call void @_ZN4llvm18raw_string_ostreamD1Ev(%"class.llvm::raw_string_ostream"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %9) #9
  %45 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  %47 = load i8, i8* %46, align 1
  %48 = icmp slt i8 %47, 0
  br i1 %48, label %49, label %51

49:                                               ; preds = %44
  %50 = load i8*, i8** %8, align 8
  call void @_ZdlPv(i8* %50) #11
  br label %51

51:                                               ; preds = %44, %49
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #9
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN3IcelsINS_22GlobalStringPoolTraitsEEERN4llvm11raw_ostreamES4_RKNS_8StringIDIT_EE(%"class.llvm::raw_ostream"* dereferenceable(40), %"class.Ice::StringID"* dereferenceable(8)) local_unnamed_addr #0 comdat {
  %3 = getelementptr inbounds %"class.Ice::StringID", %"class.Ice::StringID"* %1, i64 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = icmp ne i64 %4, 0
  %6 = and i64 %4, 1
  %7 = icmp eq i64 %6, 0
  %8 = and i1 %5, %7
  br i1 %8, label %10, label %9

9:                                                ; preds = %2
  tail call void @_ZN4llvm18report_fatal_errorEPKcb(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.3, i64 0, i64 0), i1 zeroext true) #12
  unreachable

10:                                               ; preds = %2
  %11 = inttoptr i64 %4 to %"class.std::__1::basic_string"*
  %12 = inttoptr i64 %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = inttoptr i64 %4 to i8*
  %21 = zext i8 %14 to i64
  %22 = select i1 %15, i8* %17, i8* %20
  %23 = select i1 %15, i64 %19, i64 %21
  %24 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostream5writeEPKcm(%"class.llvm::raw_ostream"* %0, i8* %22, i64 %23) #8
  ret %"class.llvm::raw_ostream"* %24
}

; Function Attrs: nounwind optsize
declare void @_ZN4llvm18raw_string_ostreamD1Ev(%"class.llvm::raw_string_ostream"*) unnamed_addr #3

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden void @_ZNK3Ice19FunctionDeclaration8dumpTypeERN4llvm11raw_ostreamE(%"class.Ice::FunctionDeclaration"* nocapture, %"class.llvm::raw_ostream"* nocapture dereferenceable(40)) unnamed_addr #4 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden void @_ZNK3Ice19FunctionDeclaration4dumpERN4llvm11raw_ostreamE(%"class.Ice::FunctionDeclaration"* nocapture, %"class.llvm::raw_ostream"* nocapture dereferenceable(40)) unnamed_addr #4 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden void @_ZNK3Ice19VariableDeclaration8dumpTypeERN4llvm11raw_ostreamE(%"class.Ice::VariableDeclaration"* nocapture, %"class.llvm::raw_ostream"* nocapture dereferenceable(40)) unnamed_addr #4 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden void @_ZNK3Ice19VariableDeclaration4dumpERN4llvm11raw_ostreamE(%"class.Ice::VariableDeclaration"* nocapture, %"class.llvm::raw_ostream"* nocapture dereferenceable(40)) unnamed_addr #4 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden void @_ZNK3Ice19VariableDeclaration11Initializer8dumpTypeERN4llvm11raw_ostreamE(%"class.Ice::VariableDeclaration::Initializer"* nocapture, %"class.llvm::raw_ostream"* nocapture dereferenceable(40)) unnamed_addr #4 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden void @_ZNK3Ice19VariableDeclaration15DataInitializer4dumpERN4llvm11raw_ostreamE(%"class.Ice::VariableDeclaration::DataInitializer"* nocapture, %"class.llvm::raw_ostream"* nocapture dereferenceable(40)) unnamed_addr #4 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden void @_ZNK3Ice19VariableDeclaration15ZeroInitializer4dumpERN4llvm11raw_ostreamE(%"class.Ice::VariableDeclaration::ZeroInitializer"* nocapture, %"class.llvm::raw_ostream"* nocapture dereferenceable(40)) unnamed_addr #4 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden void @_ZNK3Ice19VariableDeclaration16RelocInitializer8dumpTypeERN4llvm11raw_ostreamE(%"class.Ice::VariableDeclaration::RelocInitializer"* nocapture, %"class.llvm::raw_ostream"* nocapture dereferenceable(40)) unnamed_addr #4 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden void @_ZNK3Ice19VariableDeclaration16RelocInitializer4dumpERN4llvm11raw_ostreamE(%"class.Ice::VariableDeclaration::RelocInitializer"* nocapture, %"class.llvm::raw_ostream"* nocapture dereferenceable(40)) unnamed_addr #4 align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice19FunctionDeclarationD2Ev(%"class.Ice::FunctionDeclaration"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.Ice::FunctionDeclaration", %"class.Ice::FunctionDeclaration"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN3Ice19FunctionDeclarationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.Ice::FunctionDeclaration", %"class.Ice::FunctionDeclaration"* %0, i64 0, i32 1, i32 1, i32 0, i32 0
  %4 = load i32*, i32** %3, align 8
  %5 = icmp eq i32* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint i32* %4 to i64
  %8 = getelementptr inbounds %"class.Ice::FunctionDeclaration", %"class.Ice::FunctionDeclaration"* %0, i64 0, i32 1, i32 1, i32 0, i32 1
  %9 = bitcast i32** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast i32* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #11
  br label %11

11:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice19FunctionDeclarationD0Ev(%"class.Ice::FunctionDeclaration"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.Ice::FunctionDeclaration", %"class.Ice::FunctionDeclaration"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN3Ice19FunctionDeclarationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.Ice::FunctionDeclaration", %"class.Ice::FunctionDeclaration"* %0, i64 0, i32 1, i32 1, i32 0, i32 0
  %4 = load i32*, i32** %3, align 8
  %5 = icmp eq i32* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint i32* %4 to i64
  %8 = getelementptr inbounds %"class.Ice::FunctionDeclaration", %"class.Ice::FunctionDeclaration"* %0, i64 0, i32 1, i32 1, i32 0, i32 1
  %9 = bitcast i32** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast i32* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #11
  br label %11

11:                                               ; preds = %1, %6
  %12 = bitcast %"class.Ice::FunctionDeclaration"* %0 to i8*
  tail call void @_ZdlPv(i8* %12) #11
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK3Ice19FunctionDeclaration19getSuppressManglingEv(%"class.Ice::FunctionDeclaration"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.Ice::FunctionDeclaration", %"class.Ice::FunctionDeclaration"* %0, i64 0, i32 0, i32 2
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %9

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.Ice::FunctionDeclaration", %"class.Ice::FunctionDeclaration"* %0, i64 0, i32 3
  %7 = load i8, i8* %6, align 4, !range !2
  %8 = icmp ne i8 %7, 0
  br label %9

9:                                                ; preds = %5, %1
  %10 = phi i1 [ false, %1 ], [ %8, %5 ]
  ret i1 %10
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden i32 @_ZNK3Ice19VariableDeclaration15DataInitializer11getNumBytesEv(%"class.Ice::VariableDeclaration::DataInitializer"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.Ice::VariableDeclaration::DataInitializer", %"class.Ice::VariableDeclaration::DataInitializer"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden i32 @_ZNK3Ice19VariableDeclaration15ZeroInitializer11getNumBytesEv(%"class.Ice::VariableDeclaration::ZeroInitializer"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.Ice::VariableDeclaration::ZeroInitializer", %"class.Ice::VariableDeclaration::ZeroInitializer"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden i32 @_ZNK3Ice19VariableDeclaration16RelocInitializer11getNumBytesEv(%"class.Ice::VariableDeclaration::RelocInitializer"*) unnamed_addr #0 comdat align 2 {
  ret i32 4
}

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice19VariableDeclarationD2Ev(%"class.Ice::VariableDeclaration"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.Ice::VariableDeclaration", %"class.Ice::VariableDeclaration"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN3Ice19VariableDeclarationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.Ice::VariableDeclaration", %"class.Ice::VariableDeclaration"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"class.Ice::VariableDeclaration::Initializer"**, %"class.Ice::VariableDeclaration::Initializer"*** %3, align 8
  %5 = icmp eq %"class.Ice::VariableDeclaration::Initializer"** %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"class.Ice::VariableDeclaration::Initializer"** %4 to i64
  %8 = getelementptr inbounds %"class.Ice::VariableDeclaration", %"class.Ice::VariableDeclaration"* %0, i64 0, i32 1, i32 0, i32 1
  %9 = bitcast %"class.Ice::VariableDeclaration::Initializer"*** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast %"class.Ice::VariableDeclaration::Initializer"** %4 to i8*
  tail call void @_ZdlPv(i8* %10) #11
  br label %11

11:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3Ice19VariableDeclarationD0Ev(%"class.Ice::VariableDeclaration"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.Ice::VariableDeclaration", %"class.Ice::VariableDeclaration"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN3Ice19VariableDeclarationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.Ice::VariableDeclaration", %"class.Ice::VariableDeclaration"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"class.Ice::VariableDeclaration::Initializer"**, %"class.Ice::VariableDeclaration::Initializer"*** %3, align 8
  %5 = icmp eq %"class.Ice::VariableDeclaration::Initializer"** %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"class.Ice::VariableDeclaration::Initializer"** %4 to i64
  %8 = getelementptr inbounds %"class.Ice::VariableDeclaration", %"class.Ice::VariableDeclaration"* %0, i64 0, i32 1, i32 0, i32 1
  %9 = bitcast %"class.Ice::VariableDeclaration::Initializer"*** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast %"class.Ice::VariableDeclaration::Initializer"** %4 to i8*
  tail call void @_ZdlPv(i8* %10) #11
  br label %11

11:                                               ; preds = %1, %6
  %12 = bitcast %"class.Ice::VariableDeclaration"* %0 to i8*
  tail call void @_ZdlPv(i8* %12) #11
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK3Ice19VariableDeclaration19getSuppressManglingEv(%"class.Ice::VariableDeclaration"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.Ice::VariableDeclaration", %"class.Ice::VariableDeclaration"* %0, i64 0, i32 6
  %3 = load i8, i8* %2, align 1, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %13

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.Ice::VariableDeclaration", %"class.Ice::VariableDeclaration"* %0, i64 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %13

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.Ice::VariableDeclaration", %"class.Ice::VariableDeclaration"* %0, i64 0, i32 2
  %11 = load i8, i8* %10, align 8, !range !2
  %12 = icmp eq i8 %11, 0
  br label %13

13:                                               ; preds = %5, %9, %1
  %14 = phi i1 [ true, %1 ], [ false, %5 ], [ %12, %9 ]
  ret i1 %14
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"*, i8*, i64) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.llvm::raw_ostream", %"class.llvm::raw_ostream"* %0, i64 0, i32 2
  %5 = bitcast i8** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.llvm::raw_ostream", %"class.llvm::raw_ostream"* %0, i64 0, i32 3
  %8 = load i8*, i8** %7, align 8
  %9 = ptrtoint i8* %8 to i64
  %10 = sub i64 %6, %9
  %11 = icmp ult i64 %10, %2
  br i1 %11, label %12, label %14

12:                                               ; preds = %3
  %13 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostream5writeEPKcm(%"class.llvm::raw_ostream"* %0, i8* %1, i64 %2) #8
  br label %19

14:                                               ; preds = %3
  %15 = icmp eq i64 %2, 0
  br i1 %15, label %19, label %16

16:                                               ; preds = %14
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %8, i8* align 1 %1, i64 %2, i1 false)
  %17 = load i8*, i8** %7, align 8
  %18 = getelementptr inbounds i8, i8* %17, i64 %2
  store i8* %18, i8** %7, align 8
  br label %19

19:                                               ; preds = %16, %14, %12
  %20 = phi %"class.llvm::raw_ostream"* [ %13, %12 ], [ %0, %14 ], [ %0, %16 ]
  ret %"class.llvm::raw_ostream"* %20
}

; Function Attrs: optsize
declare dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostream5writeEPKcm(%"class.llvm::raw_ostream"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: optsize
declare void @_ZNK3Ice11FuncSigType4dumpERN4llvm11raw_ostreamE(%"class.Ice::FuncSigType"*, %"class.llvm::raw_ostream"* dereferenceable(40)) local_unnamed_addr #2

; Function Attrs: optsize
declare void @_ZN4llvm11raw_ostream14flush_nonemptyEv(%"class.llvm::raw_ostream"*) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind optsize
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: optsize
declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: noreturn optsize
declare void @_ZN4llvm18report_fatal_errorEPKcb(i8*, i1 zeroext) local_unnamed_addr #7

attributes #0 = { nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind optsize readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind optsize }
attributes #9 = { nounwind }
attributes #10 = { optsize }
attributes #11 = { builtin nounwind optsize }
attributes #12 = { noreturn nounwind optsize }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
