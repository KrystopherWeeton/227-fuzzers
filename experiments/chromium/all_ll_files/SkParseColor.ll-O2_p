; ModuleID = '../../third_party/skia/src/utils/SkParseColor.cpp'
source_filename = "../../third_party/skia/src/utils/SkParseColor.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.ColorRec = type { i8, i8, i8 }

@_ZL11gColorNames = internal constant [140 x i8*] [i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.7, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.8, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.9, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.10, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.11, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.12, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.13, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.15, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.16, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.17, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.18, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.19, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.20, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.21, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.22, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.23, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.24, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.25, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.26, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.27, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.29, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.30, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.31, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.32, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.33, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.34, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.35, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.36, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.37, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.38, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.39, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.40, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.41, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.42, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.43, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.44, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.45, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.46, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.47, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.48, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.49, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.50, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.51, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.52, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.53, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.54, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.55, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.56, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.57, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.58, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.59, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.60, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.61, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.62, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.63, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.64, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.65, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.66, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.67, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.68, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.69, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.70, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.71, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.72, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.73, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.74, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.75, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.76, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.77, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.78, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.79, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.80, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.81, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.82, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.83, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.84, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.85, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.86, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.87, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.88, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.89, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.90, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.91, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.92, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.93, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.94, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.95, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.96, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.97, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.98, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.99, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.100, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.101, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.102, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.103, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.104, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.105, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.106, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.107, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.108, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.109, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.110, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.111, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.112, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.113, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.114, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.115, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.116, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.117, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.118, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.119, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.120, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.121, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.122, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.123, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.124, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.125, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.126, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.127, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.128, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.129, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.130, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.131, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.132, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.133, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.134, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.135, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.136, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.137, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.138, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.139, i32 0, i32 0)], align 16
@_ZL7gColors = internal unnamed_addr constant [140 x %struct.ColorRec] [%struct.ColorRec { i8 -16, i8 -8, i8 -1 }, %struct.ColorRec { i8 -6, i8 -21, i8 -41 }, %struct.ColorRec { i8 0, i8 -1, i8 -1 }, %struct.ColorRec { i8 127, i8 -1, i8 -44 }, %struct.ColorRec { i8 -16, i8 -1, i8 -1 }, %struct.ColorRec { i8 -11, i8 -11, i8 -36 }, %struct.ColorRec { i8 -1, i8 -28, i8 -60 }, %struct.ColorRec zeroinitializer, %struct.ColorRec { i8 -1, i8 -21, i8 -51 }, %struct.ColorRec { i8 0, i8 0, i8 -1 }, %struct.ColorRec { i8 -118, i8 43, i8 -30 }, %struct.ColorRec { i8 -91, i8 42, i8 42 }, %struct.ColorRec { i8 -34, i8 -72, i8 -121 }, %struct.ColorRec { i8 95, i8 -98, i8 -96 }, %struct.ColorRec { i8 127, i8 -1, i8 0 }, %struct.ColorRec { i8 -46, i8 105, i8 30 }, %struct.ColorRec { i8 -1, i8 127, i8 80 }, %struct.ColorRec { i8 100, i8 -107, i8 -19 }, %struct.ColorRec { i8 -1, i8 -8, i8 -36 }, %struct.ColorRec { i8 -36, i8 20, i8 60 }, %struct.ColorRec { i8 0, i8 -1, i8 -1 }, %struct.ColorRec { i8 0, i8 0, i8 -117 }, %struct.ColorRec { i8 0, i8 -117, i8 -117 }, %struct.ColorRec { i8 -72, i8 -122, i8 11 }, %struct.ColorRec { i8 -87, i8 -87, i8 -87 }, %struct.ColorRec { i8 0, i8 100, i8 0 }, %struct.ColorRec { i8 -67, i8 -73, i8 107 }, %struct.ColorRec { i8 -117, i8 0, i8 -117 }, %struct.ColorRec { i8 85, i8 107, i8 47 }, %struct.ColorRec { i8 -1, i8 -116, i8 0 }, %struct.ColorRec { i8 -103, i8 50, i8 -52 }, %struct.ColorRec { i8 -117, i8 0, i8 0 }, %struct.ColorRec { i8 -23, i8 -106, i8 122 }, %struct.ColorRec { i8 -113, i8 -68, i8 -113 }, %struct.ColorRec { i8 72, i8 61, i8 -117 }, %struct.ColorRec { i8 47, i8 79, i8 79 }, %struct.ColorRec { i8 0, i8 -50, i8 -47 }, %struct.ColorRec { i8 -108, i8 0, i8 -45 }, %struct.ColorRec { i8 -1, i8 20, i8 -109 }, %struct.ColorRec { i8 0, i8 -65, i8 -1 }, %struct.ColorRec { i8 105, i8 105, i8 105 }, %struct.ColorRec { i8 30, i8 -112, i8 -1 }, %struct.ColorRec { i8 -78, i8 34, i8 34 }, %struct.ColorRec { i8 -1, i8 -6, i8 -16 }, %struct.ColorRec { i8 34, i8 -117, i8 34 }, %struct.ColorRec { i8 -1, i8 0, i8 -1 }, %struct.ColorRec { i8 -36, i8 -36, i8 -36 }, %struct.ColorRec { i8 -8, i8 -8, i8 -1 }, %struct.ColorRec { i8 -1, i8 -41, i8 0 }, %struct.ColorRec { i8 -38, i8 -91, i8 32 }, %struct.ColorRec { i8 -128, i8 -128, i8 -128 }, %struct.ColorRec { i8 0, i8 -128, i8 0 }, %struct.ColorRec { i8 -83, i8 -1, i8 47 }, %struct.ColorRec { i8 -16, i8 -1, i8 -16 }, %struct.ColorRec { i8 -1, i8 105, i8 -76 }, %struct.ColorRec { i8 -51, i8 92, i8 92 }, %struct.ColorRec { i8 75, i8 0, i8 -126 }, %struct.ColorRec { i8 -1, i8 -1, i8 -16 }, %struct.ColorRec { i8 -16, i8 -26, i8 -116 }, %struct.ColorRec { i8 -26, i8 -26, i8 -6 }, %struct.ColorRec { i8 -1, i8 -16, i8 -11 }, %struct.ColorRec { i8 124, i8 -4, i8 0 }, %struct.ColorRec { i8 -1, i8 -6, i8 -51 }, %struct.ColorRec { i8 -83, i8 -40, i8 -26 }, %struct.ColorRec { i8 -16, i8 -128, i8 -128 }, %struct.ColorRec { i8 -32, i8 -1, i8 -1 }, %struct.ColorRec { i8 -6, i8 -6, i8 -46 }, %struct.ColorRec { i8 -112, i8 -18, i8 -112 }, %struct.ColorRec { i8 -45, i8 -45, i8 -45 }, %struct.ColorRec { i8 -1, i8 -74, i8 -63 }, %struct.ColorRec { i8 -1, i8 -96, i8 122 }, %struct.ColorRec { i8 32, i8 -78, i8 -86 }, %struct.ColorRec { i8 -121, i8 -50, i8 -6 }, %struct.ColorRec { i8 119, i8 -120, i8 -103 }, %struct.ColorRec { i8 -80, i8 -60, i8 -34 }, %struct.ColorRec { i8 -1, i8 -1, i8 -32 }, %struct.ColorRec { i8 0, i8 -1, i8 0 }, %struct.ColorRec { i8 50, i8 -51, i8 50 }, %struct.ColorRec { i8 -6, i8 -16, i8 -26 }, %struct.ColorRec { i8 -1, i8 0, i8 -1 }, %struct.ColorRec { i8 -128, i8 0, i8 0 }, %struct.ColorRec { i8 102, i8 -51, i8 -86 }, %struct.ColorRec { i8 0, i8 0, i8 -51 }, %struct.ColorRec { i8 -70, i8 85, i8 -45 }, %struct.ColorRec { i8 -109, i8 112, i8 -37 }, %struct.ColorRec { i8 60, i8 -77, i8 113 }, %struct.ColorRec { i8 123, i8 104, i8 -18 }, %struct.ColorRec { i8 0, i8 -6, i8 -102 }, %struct.ColorRec { i8 72, i8 -47, i8 -52 }, %struct.ColorRec { i8 -57, i8 21, i8 -123 }, %struct.ColorRec { i8 25, i8 25, i8 112 }, %struct.ColorRec { i8 -11, i8 -1, i8 -6 }, %struct.ColorRec { i8 -1, i8 -28, i8 -31 }, %struct.ColorRec { i8 -1, i8 -28, i8 -75 }, %struct.ColorRec { i8 -1, i8 -34, i8 -83 }, %struct.ColorRec { i8 0, i8 0, i8 -128 }, %struct.ColorRec { i8 -3, i8 -11, i8 -26 }, %struct.ColorRec { i8 -128, i8 -128, i8 0 }, %struct.ColorRec { i8 107, i8 -114, i8 35 }, %struct.ColorRec { i8 -1, i8 -91, i8 0 }, %struct.ColorRec { i8 -1, i8 69, i8 0 }, %struct.ColorRec { i8 -38, i8 112, i8 -42 }, %struct.ColorRec { i8 -18, i8 -24, i8 -86 }, %struct.ColorRec { i8 -104, i8 -5, i8 -104 }, %struct.ColorRec { i8 -81, i8 -18, i8 -18 }, %struct.ColorRec { i8 -37, i8 112, i8 -109 }, %struct.ColorRec { i8 -1, i8 -17, i8 -43 }, %struct.ColorRec { i8 -1, i8 -38, i8 -71 }, %struct.ColorRec { i8 -51, i8 -123, i8 63 }, %struct.ColorRec { i8 -1, i8 -64, i8 -53 }, %struct.ColorRec { i8 -35, i8 -96, i8 -35 }, %struct.ColorRec { i8 -80, i8 -32, i8 -26 }, %struct.ColorRec { i8 -128, i8 0, i8 -128 }, %struct.ColorRec { i8 -1, i8 0, i8 0 }, %struct.ColorRec { i8 -68, i8 -113, i8 -113 }, %struct.ColorRec { i8 65, i8 105, i8 -31 }, %struct.ColorRec { i8 -117, i8 69, i8 19 }, %struct.ColorRec { i8 -6, i8 -128, i8 114 }, %struct.ColorRec { i8 -12, i8 -92, i8 96 }, %struct.ColorRec { i8 46, i8 -117, i8 87 }, %struct.ColorRec { i8 -1, i8 -11, i8 -18 }, %struct.ColorRec { i8 -96, i8 82, i8 45 }, %struct.ColorRec { i8 -64, i8 -64, i8 -64 }, %struct.ColorRec { i8 -121, i8 -50, i8 -21 }, %struct.ColorRec { i8 106, i8 90, i8 -51 }, %struct.ColorRec { i8 112, i8 -128, i8 -112 }, %struct.ColorRec { i8 -1, i8 -6, i8 -6 }, %struct.ColorRec { i8 0, i8 -1, i8 127 }, %struct.ColorRec { i8 70, i8 -126, i8 -76 }, %struct.ColorRec { i8 -46, i8 -76, i8 -116 }, %struct.ColorRec { i8 0, i8 -128, i8 -128 }, %struct.ColorRec { i8 -40, i8 -65, i8 -40 }, %struct.ColorRec { i8 -1, i8 99, i8 71 }, %struct.ColorRec { i8 64, i8 -32, i8 -48 }, %struct.ColorRec { i8 -18, i8 -126, i8 -18 }, %struct.ColorRec { i8 -11, i8 -34, i8 -77 }, %struct.ColorRec { i8 -1, i8 -1, i8 -1 }, %struct.ColorRec { i8 -11, i8 -11, i8 -11 }, %struct.ColorRec { i8 -1, i8 -1, i8 0 }, %struct.ColorRec { i8 -102, i8 -51, i8 50 }], align 16
@.str = private unnamed_addr constant [10 x i8] c"aliceblue\00", align 1
@.str.1 = private unnamed_addr constant [13 x i8] c"antiquewhite\00", align 1
@.str.2 = private unnamed_addr constant [5 x i8] c"aqua\00", align 1
@.str.3 = private unnamed_addr constant [11 x i8] c"aquamarine\00", align 1
@.str.4 = private unnamed_addr constant [6 x i8] c"azure\00", align 1
@.str.5 = private unnamed_addr constant [6 x i8] c"beige\00", align 1
@.str.6 = private unnamed_addr constant [7 x i8] c"bisque\00", align 1
@.str.7 = private unnamed_addr constant [6 x i8] c"black\00", align 1
@.str.8 = private unnamed_addr constant [15 x i8] c"blanchedalmond\00", align 1
@.str.9 = private unnamed_addr constant [5 x i8] c"blue\00", align 1
@.str.10 = private unnamed_addr constant [11 x i8] c"blueviolet\00", align 1
@.str.11 = private unnamed_addr constant [6 x i8] c"brown\00", align 1
@.str.12 = private unnamed_addr constant [10 x i8] c"burlywood\00", align 1
@.str.13 = private unnamed_addr constant [10 x i8] c"cadetblue\00", align 1
@.str.14 = private unnamed_addr constant [11 x i8] c"chartreuse\00", align 1
@.str.15 = private unnamed_addr constant [10 x i8] c"chocolate\00", align 1
@.str.16 = private unnamed_addr constant [6 x i8] c"coral\00", align 1
@.str.17 = private unnamed_addr constant [15 x i8] c"cornflowerblue\00", align 1
@.str.18 = private unnamed_addr constant [9 x i8] c"cornsilk\00", align 1
@.str.19 = private unnamed_addr constant [8 x i8] c"crimson\00", align 1
@.str.20 = private unnamed_addr constant [5 x i8] c"cyan\00", align 1
@.str.21 = private unnamed_addr constant [9 x i8] c"darkblue\00", align 1
@.str.22 = private unnamed_addr constant [9 x i8] c"darkcyan\00", align 1
@.str.23 = private unnamed_addr constant [14 x i8] c"darkgoldenrod\00", align 1
@.str.24 = private unnamed_addr constant [9 x i8] c"darkgray\00", align 1
@.str.25 = private unnamed_addr constant [10 x i8] c"darkgreen\00", align 1
@.str.26 = private unnamed_addr constant [10 x i8] c"darkkhaki\00", align 1
@.str.27 = private unnamed_addr constant [12 x i8] c"darkmagenta\00", align 1
@.str.28 = private unnamed_addr constant [15 x i8] c"darkolivegreen\00", align 1
@.str.29 = private unnamed_addr constant [11 x i8] c"darkorange\00", align 1
@.str.30 = private unnamed_addr constant [11 x i8] c"darkorchid\00", align 1
@.str.31 = private unnamed_addr constant [8 x i8] c"darkred\00", align 1
@.str.32 = private unnamed_addr constant [11 x i8] c"darksalmon\00", align 1
@.str.33 = private unnamed_addr constant [13 x i8] c"darkseagreen\00", align 1
@.str.34 = private unnamed_addr constant [14 x i8] c"darkslateblue\00", align 1
@.str.35 = private unnamed_addr constant [14 x i8] c"darkslategray\00", align 1
@.str.36 = private unnamed_addr constant [14 x i8] c"darkturquoise\00", align 1
@.str.37 = private unnamed_addr constant [11 x i8] c"darkviolet\00", align 1
@.str.38 = private unnamed_addr constant [9 x i8] c"deeppink\00", align 1
@.str.39 = private unnamed_addr constant [12 x i8] c"deepskyblue\00", align 1
@.str.40 = private unnamed_addr constant [8 x i8] c"dimgray\00", align 1
@.str.41 = private unnamed_addr constant [11 x i8] c"dodgerblue\00", align 1
@.str.42 = private unnamed_addr constant [10 x i8] c"firebrick\00", align 1
@.str.43 = private unnamed_addr constant [12 x i8] c"floralwhite\00", align 1
@.str.44 = private unnamed_addr constant [12 x i8] c"forestgreen\00", align 1
@.str.45 = private unnamed_addr constant [8 x i8] c"fuchsia\00", align 1
@.str.46 = private unnamed_addr constant [10 x i8] c"gainsboro\00", align 1
@.str.47 = private unnamed_addr constant [11 x i8] c"ghostwhite\00", align 1
@.str.48 = private unnamed_addr constant [5 x i8] c"gold\00", align 1
@.str.49 = private unnamed_addr constant [10 x i8] c"goldenrod\00", align 1
@.str.50 = private unnamed_addr constant [5 x i8] c"gray\00", align 1
@.str.51 = private unnamed_addr constant [6 x i8] c"green\00", align 1
@.str.52 = private unnamed_addr constant [12 x i8] c"greenyellow\00", align 1
@.str.53 = private unnamed_addr constant [9 x i8] c"honeydew\00", align 1
@.str.54 = private unnamed_addr constant [8 x i8] c"hotpink\00", align 1
@.str.55 = private unnamed_addr constant [10 x i8] c"indianred\00", align 1
@.str.56 = private unnamed_addr constant [7 x i8] c"indigo\00", align 1
@.str.57 = private unnamed_addr constant [6 x i8] c"ivory\00", align 1
@.str.58 = private unnamed_addr constant [6 x i8] c"khaki\00", align 1
@.str.59 = private unnamed_addr constant [9 x i8] c"lavender\00", align 1
@.str.60 = private unnamed_addr constant [14 x i8] c"lavenderblush\00", align 1
@.str.61 = private unnamed_addr constant [10 x i8] c"lawngreen\00", align 1
@.str.62 = private unnamed_addr constant [13 x i8] c"lemonchiffon\00", align 1
@.str.63 = private unnamed_addr constant [10 x i8] c"lightblue\00", align 1
@.str.64 = private unnamed_addr constant [11 x i8] c"lightcoral\00", align 1
@.str.65 = private unnamed_addr constant [10 x i8] c"lightcyan\00", align 1
@.str.66 = private unnamed_addr constant [21 x i8] c"lightgoldenrodyellow\00", align 1
@.str.67 = private unnamed_addr constant [11 x i8] c"lightgreen\00", align 1
@.str.68 = private unnamed_addr constant [10 x i8] c"lightgrey\00", align 1
@.str.69 = private unnamed_addr constant [10 x i8] c"lightpink\00", align 1
@.str.70 = private unnamed_addr constant [12 x i8] c"lightsalmon\00", align 1
@.str.71 = private unnamed_addr constant [14 x i8] c"lightseagreen\00", align 1
@.str.72 = private unnamed_addr constant [13 x i8] c"lightskyblue\00", align 1
@.str.73 = private unnamed_addr constant [15 x i8] c"lightslategray\00", align 1
@.str.74 = private unnamed_addr constant [15 x i8] c"lightsteelblue\00", align 1
@.str.75 = private unnamed_addr constant [12 x i8] c"lightyellow\00", align 1
@.str.76 = private unnamed_addr constant [5 x i8] c"lime\00", align 1
@.str.77 = private unnamed_addr constant [10 x i8] c"limegreen\00", align 1
@.str.78 = private unnamed_addr constant [6 x i8] c"linen\00", align 1
@.str.79 = private unnamed_addr constant [8 x i8] c"magenta\00", align 1
@.str.80 = private unnamed_addr constant [7 x i8] c"maroon\00", align 1
@.str.81 = private unnamed_addr constant [17 x i8] c"mediumaquamarine\00", align 1
@.str.82 = private unnamed_addr constant [11 x i8] c"mediumblue\00", align 1
@.str.83 = private unnamed_addr constant [13 x i8] c"mediumorchid\00", align 1
@.str.84 = private unnamed_addr constant [13 x i8] c"mediumpurple\00", align 1
@.str.85 = private unnamed_addr constant [15 x i8] c"mediumseagreen\00", align 1
@.str.86 = private unnamed_addr constant [16 x i8] c"mediumslateblue\00", align 1
@.str.87 = private unnamed_addr constant [18 x i8] c"mediumspringgreen\00", align 1
@.str.88 = private unnamed_addr constant [16 x i8] c"mediumturquoise\00", align 1
@.str.89 = private unnamed_addr constant [16 x i8] c"mediumvioletred\00", align 1
@.str.90 = private unnamed_addr constant [13 x i8] c"midnightblue\00", align 1
@.str.91 = private unnamed_addr constant [10 x i8] c"mintcream\00", align 1
@.str.92 = private unnamed_addr constant [10 x i8] c"mistyrose\00", align 1
@.str.93 = private unnamed_addr constant [9 x i8] c"moccasin\00", align 1
@.str.94 = private unnamed_addr constant [12 x i8] c"navajowhite\00", align 1
@.str.95 = private unnamed_addr constant [5 x i8] c"navy\00", align 1
@.str.96 = private unnamed_addr constant [8 x i8] c"oldlace\00", align 1
@.str.97 = private unnamed_addr constant [6 x i8] c"olive\00", align 1
@.str.98 = private unnamed_addr constant [10 x i8] c"olivedrab\00", align 1
@.str.99 = private unnamed_addr constant [7 x i8] c"orange\00", align 1
@.str.100 = private unnamed_addr constant [10 x i8] c"orangered\00", align 1
@.str.101 = private unnamed_addr constant [7 x i8] c"orchid\00", align 1
@.str.102 = private unnamed_addr constant [14 x i8] c"palegoldenrod\00", align 1
@.str.103 = private unnamed_addr constant [10 x i8] c"palegreen\00", align 1
@.str.104 = private unnamed_addr constant [14 x i8] c"paleturquoise\00", align 1
@.str.105 = private unnamed_addr constant [14 x i8] c"palevioletred\00", align 1
@.str.106 = private unnamed_addr constant [11 x i8] c"papayawhip\00", align 1
@.str.107 = private unnamed_addr constant [10 x i8] c"peachpuff\00", align 1
@.str.108 = private unnamed_addr constant [5 x i8] c"peru\00", align 1
@.str.109 = private unnamed_addr constant [5 x i8] c"pink\00", align 1
@.str.110 = private unnamed_addr constant [5 x i8] c"plum\00", align 1
@.str.111 = private unnamed_addr constant [11 x i8] c"powderblue\00", align 1
@.str.112 = private unnamed_addr constant [7 x i8] c"purple\00", align 1
@.str.113 = private unnamed_addr constant [4 x i8] c"red\00", align 1
@.str.114 = private unnamed_addr constant [10 x i8] c"rosybrown\00", align 1
@.str.115 = private unnamed_addr constant [10 x i8] c"royalblue\00", align 1
@.str.116 = private unnamed_addr constant [12 x i8] c"saddlebrown\00", align 1
@.str.117 = private unnamed_addr constant [7 x i8] c"salmon\00", align 1
@.str.118 = private unnamed_addr constant [11 x i8] c"sandybrown\00", align 1
@.str.119 = private unnamed_addr constant [9 x i8] c"seagreen\00", align 1
@.str.120 = private unnamed_addr constant [9 x i8] c"seashell\00", align 1
@.str.121 = private unnamed_addr constant [7 x i8] c"sienna\00", align 1
@.str.122 = private unnamed_addr constant [7 x i8] c"silver\00", align 1
@.str.123 = private unnamed_addr constant [8 x i8] c"skyblue\00", align 1
@.str.124 = private unnamed_addr constant [10 x i8] c"slateblue\00", align 1
@.str.125 = private unnamed_addr constant [10 x i8] c"slategray\00", align 1
@.str.126 = private unnamed_addr constant [5 x i8] c"snow\00", align 1
@.str.127 = private unnamed_addr constant [12 x i8] c"springgreen\00", align 1
@.str.128 = private unnamed_addr constant [10 x i8] c"steelblue\00", align 1
@.str.129 = private unnamed_addr constant [4 x i8] c"tan\00", align 1
@.str.130 = private unnamed_addr constant [5 x i8] c"teal\00", align 1
@.str.131 = private unnamed_addr constant [8 x i8] c"thistle\00", align 1
@.str.132 = private unnamed_addr constant [7 x i8] c"tomato\00", align 1
@.str.133 = private unnamed_addr constant [10 x i8] c"turquoise\00", align 1
@.str.134 = private unnamed_addr constant [7 x i8] c"violet\00", align 1
@.str.135 = private unnamed_addr constant [6 x i8] c"wheat\00", align 1
@.str.136 = private unnamed_addr constant [6 x i8] c"white\00", align 1
@.str.137 = private unnamed_addr constant [11 x i8] c"whitesmoke\00", align 1
@.str.138 = private unnamed_addr constant [7 x i8] c"yellow\00", align 1
@.str.139 = private unnamed_addr constant [12 x i8] c"yellowgreen\00", align 1

; Function Attrs: nofree nounwind ssp uwtable
define hidden i8* @_ZN7SkParse14FindNamedColorEPKcmPj(i8*, i64, i32*) local_unnamed_addr #0 align 2 {
  br label %4

4:                                                ; preds = %4, %3
  %5 = phi i64 [ 140, %3 ], [ %16, %4 ]
  %6 = phi i8** [ getelementptr inbounds ([140 x i8*], [140 x i8*]* @_ZL11gColorNames, i64 0, i64 0), %3 ], [ %15, %4 ]
  %7 = lshr i64 %5, 1
  %8 = getelementptr inbounds i8*, i8** %6, i64 %7
  %9 = load i8*, i8** %8, align 8
  %10 = tail call i32 @strcmp(i8* %9, i8* %0) #6
  %11 = icmp slt i32 %10, 0
  %12 = getelementptr inbounds i8*, i8** %8, i64 1
  %13 = xor i64 %7, -1
  %14 = add i64 %5, %13
  %15 = select i1 %11, i8** %12, i8** %6
  %16 = select i1 %11, i64 %14, i64 %7
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %18, label %4

18:                                               ; preds = %4
  %19 = icmp eq i8** %15, getelementptr inbounds ([140 x i8*], [140 x i8*]* @_ZL11gColorNames, i64 1, i64 0)
  br i1 %19, label %50, label %20

20:                                               ; preds = %18
  %21 = load i8*, i8** %15, align 8
  %22 = tail call i32 @strcmp(i8* %0, i8* %21) #6
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %50

24:                                               ; preds = %20
  %25 = icmp eq i32* %2, null
  br i1 %25, label %46, label %26

26:                                               ; preds = %24
  %27 = ptrtoint i8** %15 to i64
  %28 = sub i64 %27, ptrtoint ([140 x i8*]* @_ZL11gColorNames to i64)
  %29 = shl i64 %28, 29
  %30 = ashr i64 %29, 32
  %31 = getelementptr inbounds [140 x %struct.ColorRec], [140 x %struct.ColorRec]* @_ZL7gColors, i64 0, i64 %30, i32 0
  %32 = load i8, i8* %31, align 1
  %33 = zext i8 %32 to i32
  %34 = getelementptr inbounds [140 x %struct.ColorRec], [140 x %struct.ColorRec]* @_ZL7gColors, i64 0, i64 %30, i32 1
  %35 = load i8, i8* %34, align 1
  %36 = zext i8 %35 to i32
  %37 = getelementptr inbounds [140 x %struct.ColorRec], [140 x %struct.ColorRec]* @_ZL7gColors, i64 0, i64 %30, i32 2
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i32
  %40 = shl nuw nsw i32 %33, 16
  %41 = shl nuw nsw i32 %36, 8
  %42 = or i32 %40, %41
  %43 = or i32 %42, %39
  %44 = or i32 %43, -16777216
  store i32 %44, i32* %2, align 4
  %45 = load i8*, i8** %15, align 8
  br label %46

46:                                               ; preds = %24, %26
  %47 = phi i8* [ %21, %24 ], [ %45, %26 ]
  %48 = tail call i64 @strlen(i8* %47) #6
  %49 = getelementptr inbounds i8, i8* %0, i64 %48
  br label %50

50:                                               ; preds = %18, %20, %46
  %51 = phi i8* [ %49, %46 ], [ null, %20 ], [ null, %18 ]
  ret i8* %51
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree nounwind readonly
declare i32 @strcmp(i8* nocapture, i8* nocapture) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN7SkParse9FindColorEPKcPj(i8*, i32*) local_unnamed_addr #4 align 2 {
  %3 = alloca i32, align 4
  %4 = load i32, i32* %1, align 4
  %5 = lshr i32 %4, 24
  %6 = load i8, i8* %0, align 1
  %7 = icmp eq i8 %6, 35
  br i1 %7, label %8, label %57

8:                                                ; preds = %2
  %9 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #7
  store i32 -1431655766, i32* %3, align 4
  %10 = getelementptr inbounds i8, i8* %0, i64 1
  %11 = call i8* @_ZN7SkParse7FindHexEPKcPj(i8* %10, i32* nonnull %3) #7
  %12 = icmp eq i8* %11, null
  br i1 %12, label %55, label %13

13:                                               ; preds = %8
  %14 = ptrtoint i8* %11 to i64
  %15 = ptrtoint i8* %0 to i64
  %16 = xor i64 %15, -1
  %17 = add i64 %14, %16
  %18 = add i64 %17, -3
  %19 = icmp ult i64 %18, 2
  br i1 %19, label %20, label %46

20:                                               ; preds = %13
  %21 = icmp eq i64 %17, 4
  %22 = load i32, i32* %3, align 4
  br i1 %21, label %23, label %27

23:                                               ; preds = %20
  %24 = lshr i32 %22, 12
  %25 = shl nuw nsw i32 %24, 4
  %26 = or i32 %25, %24
  br label %27

27:                                               ; preds = %20, %23
  %28 = phi i32 [ %26, %23 ], [ %5, %20 ]
  %29 = lshr i32 %22, 8
  %30 = and i32 %29, 15
  %31 = shl nuw nsw i32 %30, 4
  %32 = or i32 %31, %30
  %33 = lshr i32 %22, 4
  %34 = and i32 %33, 15
  %35 = shl nuw nsw i32 %34, 4
  %36 = or i32 %35, %34
  %37 = and i32 %22, 15
  %38 = shl nuw nsw i32 %37, 4
  %39 = shl i32 %28, 24
  %40 = shl nuw nsw i32 %32, 16
  %41 = shl nuw nsw i32 %36, 8
  %42 = or i32 %37, %39
  %43 = or i32 %42, %38
  %44 = or i32 %43, %40
  %45 = or i32 %44, %41
  store i32 %45, i32* %1, align 4
  br label %55

46:                                               ; preds = %13
  switch i64 %17, label %55 [
    i64 6, label %49
    i64 8, label %47
  ]

47:                                               ; preds = %46
  %48 = load i32, i32* %3, align 4
  br label %53

49:                                               ; preds = %46
  %50 = and i32 %4, -16777216
  %51 = load i32, i32* %3, align 4
  %52 = or i32 %51, %50
  store i32 %52, i32* %3, align 4
  br label %53

53:                                               ; preds = %47, %49
  %54 = phi i32 [ %48, %47 ], [ %52, %49 ]
  store i32 %54, i32* %1, align 4
  br label %55

55:                                               ; preds = %27, %53, %46, %8
  %56 = phi i8* [ null, %8 ], [ %11, %27 ], [ %11, %53 ], [ null, %46 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #7
  br label %59

57:                                               ; preds = %2
  %58 = tail call i8* @_ZN7SkParse14FindNamedColorEPKcmPj(i8* %0, i64 undef, i32* %1)
  br label %59

59:                                               ; preds = %57, %55
  %60 = phi i8* [ %56, %55 ], [ %58, %57 ]
  ret i8* %60
}

declare i8* @_ZN7SkParse7FindHexEPKcPj(i8*, i32*) local_unnamed_addr #5

attributes #0 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readonly }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
