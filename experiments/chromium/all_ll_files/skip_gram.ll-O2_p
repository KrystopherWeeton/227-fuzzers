; ModuleID = '../../third_party/tflite/src/tensorflow/lite/kernels/skip_gram.cc'
source_filename = "../../third_party/tflite/src/tensorflow/lite/kernels/skip_gram.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.TfLiteRegistration = type { i8* (%struct.TfLiteContext*, i8*, i64)*, void (%struct.TfLiteContext*, i8*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 }
%struct.TfLiteContext = type { i64, i32 (%struct.TfLiteContext*, %struct.TfLiteIntArray**)*, %struct.TfLiteTensor*, i8*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, void (%struct.TfLiteContext*, i8*, ...)*, i32 (%struct.TfLiteContext*, i32, i32*)*, i32 (%struct.TfLiteContext*, i32, %struct.TfLiteNode**, %struct.TfLiteRegistration**)*, {}*, i32, %struct.TfLiteExternalContext* (%struct.TfLiteContext*, i32)*, void (%struct.TfLiteContext*, i32, %struct.TfLiteExternalContext*)*, i8, i8*, i32 (%struct.TfLiteContext*, i64, i8**)*, i32 (%struct.TfLiteContext*, i64, i8**)*, i32 (%struct.TfLiteContext*, i64, i32*)*, i8* (%struct.TfLiteContext*, i32)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, i32, i32*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteIntArray*, %struct.TfLiteDelegateParams**, i32*)* }
%struct.TfLiteIntArray = type { i32, [0 x i32] }
%struct.TfLiteTensor = type { i32, %union.TfLitePtrUnion, %struct.TfLiteIntArray*, %struct.TfLiteQuantizationParams, i32, i64, i8*, i8*, %struct.TfLiteDelegate*, i32, i8, i8, %struct.TfLiteQuantization, %struct.TfLiteSparsity*, %struct.TfLiteIntArray* }
%union.TfLitePtrUnion = type { i32* }
%struct.TfLiteQuantizationParams = type { float, i32 }
%struct.TfLiteDelegate = type { i8*, i32 (%struct.TfLiteContext*, %struct.TfLiteDelegate*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteDelegate*, i32, %struct.TfLiteTensor*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteDelegate*, i32, %struct.TfLiteTensor*)*, void (%struct.TfLiteContext*, %struct.TfLiteDelegate*, i32*)*, i64 }
%struct.TfLiteQuantization = type { i32, i8* }
%struct.TfLiteSparsity = type { %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteDimensionMetadata*, i32 }
%struct.TfLiteDimensionMetadata = type { i32, i32, %struct.TfLiteIntArray*, %struct.TfLiteIntArray* }
%struct.TfLiteNode = type { %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, i8*, i8*, i8*, i32, %struct.TfLiteDelegate* }
%struct.TfLiteExternalContext = type { i32, i32 (%struct.TfLiteContext*)* }
%struct.TfLiteDelegateParams = type { %struct.TfLiteDelegate*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.tflite::StringRef"*, %"struct.tflite::StringRef"*, %"class.std::__1::__compressed_pair" }
%"struct.tflite::StringRef" = type { i8*, i32 }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.tflite::StringRef"* }
%"class.tflite::DynamicBuffer" = type { %"class.std::__1::vector.1", %"class.std::__1::vector.8" }
%"class.std::__1::vector.1" = type { %"class.std::__1::__vector_base.2" }
%"class.std::__1::__vector_base.2" = type { i8*, i8*, %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { i8* }
%"class.std::__1::vector.8" = type { %"class.std::__1::__vector_base.9" }
%"class.std::__1::__vector_base.9" = type { i32*, i32*, %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { i32* }
%struct.TfLiteSkipGramParams = type { i32, i32, i8 }
%"class.std::__1::__vector_base_common" = type { i8 }

@_ZZN6tflite3ops7builtin18Register_SKIP_GRAMEvE1r = internal global %struct.TfLiteRegistration { i8* (%struct.TfLiteContext*, i8*, i64)* null, void (%struct.TfLiteContext*, i8*)* null, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)* null, i32 0, i8* null, i32 0 }, align 8
@.str = private unnamed_addr constant [26 x i8] c"%s:%d %s != %s (%d != %d)\00", align 1
@.str.1 = private unnamed_addr constant [66 x i8] c"../../third_party/tflite/src/tensorflow/lite/kernels/skip_gram.cc\00", align 1
@.str.2 = private unnamed_addr constant [16 x i8] c"NumInputs(node)\00", align 1
@.str.3 = private unnamed_addr constant [2 x i8] c"1\00", align 1
@.str.4 = private unnamed_addr constant [17 x i8] c"NumOutputs(node)\00", align 1
@.str.5 = private unnamed_addr constant [26 x i8] c"%s:%d %s != %s (%s != %s)\00", align 1
@.str.6 = private unnamed_addr constant [33 x i8] c"GetInput(context, node, 0)->type\00", align 1
@.str.7 = private unnamed_addr constant [14 x i8] c"kTfLiteString\00", align 1
@.str.8 = private unnamed_addr constant [34 x i8] c"GetOutput(context, node, 0)->type\00", align 1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden nonnull %struct.TfLiteRegistration* @_ZN6tflite3ops7builtin18Register_SKIP_GRAMEv() local_unnamed_addr #0 {
  ret %struct.TfLiteRegistration* @_ZZN6tflite3ops7builtin18Register_SKIP_GRAMEvE1r
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZN6tflite3ops7builtin12_GLOBAL__N_17PrepareEP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext*, %struct.TfLiteNode* nocapture readonly) #1 {
  %3 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %4 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %3, align 8
  %5 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %4, i64 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %10 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %9, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %10(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.1, i64 0, i64 0), i32 48, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0), i32 %6, i32 1) #9
  br label %76

11:                                               ; preds = %2
  %12 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %13 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %12, align 8
  %14 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %13, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 1
  br i1 %16, label %20, label %17

17:                                               ; preds = %11
  %18 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %19 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %18, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %19(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.1, i64 0, i64 0), i32 49, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0), i32 %15, i32 1) #9
  br label %76

20:                                               ; preds = %11
  %21 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %4, i64 0, i32 1, i64 0
  %22 = load i32, i32* %21, align 4
  %23 = icmp slt i32 %22, 0
  br i1 %23, label %29, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %26 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %25, align 8
  %27 = sext i32 %22 to i64
  %28 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %26, i64 %27
  br label %29

29:                                               ; preds = %20, %24
  %30 = phi %struct.TfLiteTensor* [ %28, %24 ], [ null, %20 ]
  %31 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %30, i64 0, i32 0
  %32 = load i32, i32* %31, align 8
  %33 = icmp eq i32 %32, 5
  br i1 %33, label %48, label %34

34:                                               ; preds = %29
  %35 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %36 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %35, align 8
  br i1 %23, label %42, label %37

37:                                               ; preds = %34
  %38 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %39 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %38, align 8
  %40 = sext i32 %22 to i64
  %41 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %39, i64 %40
  br label %42

42:                                               ; preds = %34, %37
  %43 = phi %struct.TfLiteTensor* [ %41, %37 ], [ null, %34 ]
  %44 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %43, i64 0, i32 0
  %45 = load i32, i32* %44, align 8
  %46 = tail call i8* @TfLiteTypeGetName(i32 %45) #9
  %47 = tail call i8* @TfLiteTypeGetName(i32 5) #9
  tail call void (%struct.TfLiteContext*, i8*, ...) %36(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.1, i64 0, i64 0), i32 52, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.7, i64 0, i64 0), i8* %46, i8* %47) #9
  br label %76

48:                                               ; preds = %29
  %49 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %13, i64 0, i32 1, i64 0
  %50 = load i32, i32* %49, align 4
  %51 = icmp slt i32 %50, 0
  br i1 %51, label %57, label %52

52:                                               ; preds = %48
  %53 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %54 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %53, align 8
  %55 = sext i32 %50 to i64
  %56 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %54, i64 %55
  br label %57

57:                                               ; preds = %48, %52
  %58 = phi %struct.TfLiteTensor* [ %56, %52 ], [ null, %48 ]
  %59 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %58, i64 0, i32 0
  %60 = load i32, i32* %59, align 8
  %61 = icmp eq i32 %60, 5
  br i1 %61, label %76, label %62

62:                                               ; preds = %57
  %63 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %64 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %63, align 8
  br i1 %51, label %70, label %65

65:                                               ; preds = %62
  %66 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %67 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %66, align 8
  %68 = sext i32 %50 to i64
  %69 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %67, i64 %68
  br label %70

70:                                               ; preds = %62, %65
  %71 = phi %struct.TfLiteTensor* [ %69, %65 ], [ null, %62 ]
  %72 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %71, i64 0, i32 0
  %73 = load i32, i32* %72, align 8
  %74 = tail call i8* @TfLiteTypeGetName(i32 %73) #9
  %75 = tail call i8* @TfLiteTypeGetName(i32 5) #9
  tail call void (%struct.TfLiteContext*, i8*, ...) %64(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.1, i64 0, i64 0), i32 54, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.7, i64 0, i64 0), i8* %74, i8* %75) #9
  br label %76

76:                                               ; preds = %57, %70, %42, %17, %8
  %77 = phi i32 [ 1, %8 ], [ 1, %17 ], [ 1, %42 ], [ 1, %70 ], [ 0, %57 ]
  ret i32 %77
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZN6tflite3ops7builtin12_GLOBAL__N_14EvalEP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext* nocapture readonly, %struct.TfLiteNode* nocapture readonly) #1 {
  %3 = alloca %"class.std::__1::vector", align 8
  %4 = alloca %"class.tflite::DynamicBuffer", align 8
  %5 = alloca %"class.std::__1::vector.8", align 8
  %6 = alloca %"class.std::__1::vector", align 8
  %7 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 5
  %8 = bitcast i8** %7 to %struct.TfLiteSkipGramParams**
  %9 = load %struct.TfLiteSkipGramParams*, %struct.TfLiteSkipGramParams** %8, align 8
  %10 = bitcast %"class.std::__1::vector"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #9
  %11 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 0, i64 24, i1 false) #9
  %14 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %15 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %14, align 8
  %16 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %15, i64 0, i32 1, i64 0
  %17 = load i32, i32* %16, align 4
  %18 = icmp slt i32 %17, 0
  br i1 %18, label %24, label %19

19:                                               ; preds = %2
  %20 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %21 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %20, align 8
  %22 = sext i32 %17 to i64
  %23 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %21, i64 %22
  br label %24

24:                                               ; preds = %2, %19
  %25 = phi %struct.TfLiteTensor* [ %23, %19 ], [ null, %2 ]
  %26 = tail call { i8*, i32 } @_ZN6tflite9GetStringEPK12TfLiteTensori(%struct.TfLiteTensor* %25, i32 0) #9
  %27 = extractvalue { i8*, i32 } %26, 0
  %28 = extractvalue { i8*, i32 } %26, 1
  %29 = icmp sgt i32 %28, 1
  br i1 %29, label %30, label %36

30:                                               ; preds = %24
  %31 = tail call i16** @__ctype_b_loc() #10
  %32 = bitcast %"struct.tflite::StringRef"** %12 to i64*
  %33 = bitcast %"class.std::__1::vector"* %3 to i64*
  %34 = bitcast %"struct.tflite::StringRef"** %13 to i64*
  %35 = zext i32 %28 to i64
  br label %46

36:                                               ; preds = %143, %24
  %37 = phi i64 [ 0, %24 ], [ %148, %143 ]
  %38 = phi %"struct.tflite::StringRef"* [ null, %24 ], [ %145, %143 ]
  %39 = phi i64 [ 0, %24 ], [ %146, %143 ]
  %40 = phi %"struct.tflite::StringRef"* [ null, %24 ], [ %147, %143 ]
  %41 = phi i32 [ 0, %24 ], [ %150, %143 ]
  %42 = icmp sgt i32 %28, %41
  br i1 %42, label %152, label %43

43:                                               ; preds = %36
  %44 = bitcast %"struct.tflite::StringRef"** %12 to i64*
  %45 = bitcast %"class.std::__1::vector"* %3 to i64*
  br label %218

46:                                               ; preds = %143, %30
  %47 = phi %"struct.tflite::StringRef"* [ null, %30 ], [ %145, %143 ]
  %48 = phi i64 [ 0, %30 ], [ %146, %143 ]
  %49 = phi %"struct.tflite::StringRef"* [ null, %30 ], [ %147, %143 ]
  %50 = phi i64 [ 0, %30 ], [ %148, %143 ]
  %51 = phi %"struct.tflite::StringRef"* [ null, %30 ], [ %149, %143 ]
  %52 = phi i64 [ 1, %30 ], [ %144, %143 ]
  %53 = phi i32 [ 0, %30 ], [ %150, %143 ]
  %54 = getelementptr inbounds i8, i8* %27, i64 %52
  %55 = load i8, i8* %54, align 1
  %56 = load i16*, i16** %31, align 8
  %57 = sext i8 %55 to i64
  %58 = getelementptr inbounds i16, i16* %56, i64 %57
  %59 = load i16, i16* %58, align 2
  %60 = and i16 %59, 8192
  %61 = icmp eq i16 %60, 0
  br i1 %61, label %62, label %64

62:                                               ; preds = %46
  %63 = add nuw nsw i64 %52, 1
  br label %143

64:                                               ; preds = %46
  %65 = sext i32 %53 to i64
  %66 = icmp sgt i64 %52, %65
  br i1 %66, label %67, label %135

67:                                               ; preds = %64
  %68 = getelementptr inbounds i8, i8* %27, i64 %65
  %69 = load i8, i8* %68, align 1
  %70 = sext i8 %69 to i64
  %71 = getelementptr inbounds i16, i16* %56, i64 %70
  %72 = load i16, i16* %71, align 2
  %73 = and i16 %72, 8192
  %74 = icmp eq i16 %73, 0
  br i1 %74, label %75, label %135

75:                                               ; preds = %67
  %76 = trunc i64 %52 to i32
  %77 = sub nsw i32 %76, %53
  %78 = load %"struct.tflite::StringRef"*, %"struct.tflite::StringRef"** %13, align 8
  %79 = icmp ult %"struct.tflite::StringRef"* %51, %78
  %80 = ptrtoint %"struct.tflite::StringRef"* %78 to i64
  br i1 %79, label %81, label %86

81:                                               ; preds = %75
  %82 = getelementptr inbounds %"struct.tflite::StringRef", %"struct.tflite::StringRef"* %51, i64 0, i32 0
  store i8* %68, i8** %82, align 8
  %83 = getelementptr inbounds %"struct.tflite::StringRef", %"struct.tflite::StringRef"* %51, i64 0, i32 1
  store i32 %77, i32* %83, align 8
  %84 = getelementptr inbounds %"struct.tflite::StringRef", %"struct.tflite::StringRef"* %51, i64 1
  %85 = ptrtoint %"struct.tflite::StringRef"* %84 to i64
  store i64 %85, i64* %32, align 8
  br label %135

86:                                               ; preds = %75
  %87 = ptrtoint %"struct.tflite::StringRef"* %51 to i64
  %88 = load i64, i64* %33, align 8
  %89 = sub i64 %87, %88
  %90 = ashr exact i64 %89, 4
  %91 = add nsw i64 %90, 1
  %92 = icmp ugt i64 %91, 1152921504606846975
  br i1 %92, label %93, label %95

93:                                               ; preds = %86
  %94 = bitcast %"class.std::__1::vector"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %94) #11
  unreachable

95:                                               ; preds = %86
  %96 = sub i64 %80, %88
  %97 = ashr exact i64 %96, 4
  %98 = icmp ult i64 %97, 576460752303423487
  br i1 %98, label %99, label %107

99:                                               ; preds = %95
  %100 = ashr exact i64 %96, 3
  %101 = icmp ult i64 %100, %91
  %102 = select i1 %101, i64 %91, i64 %100
  %103 = icmp eq i64 %102, 0
  br i1 %103, label %112, label %104

104:                                              ; preds = %99
  %105 = icmp ugt i64 %102, 1152921504606846975
  br i1 %105, label %106, label %107

106:                                              ; preds = %104
  tail call void @abort() #11
  unreachable

107:                                              ; preds = %104, %95
  %108 = phi i64 [ %102, %104 ], [ 1152921504606846975, %95 ]
  %109 = shl i64 %108, 4
  %110 = tail call i8* @_Znwm(i64 %109) #12
  %111 = bitcast i8* %110 to %"struct.tflite::StringRef"*
  br label %112

112:                                              ; preds = %107, %99
  %113 = phi i64 [ %108, %107 ], [ 0, %99 ]
  %114 = phi %"struct.tflite::StringRef"* [ %111, %107 ], [ null, %99 ]
  %115 = getelementptr inbounds %"struct.tflite::StringRef", %"struct.tflite::StringRef"* %114, i64 %90
  %116 = getelementptr inbounds %"struct.tflite::StringRef", %"struct.tflite::StringRef"* %114, i64 %113
  %117 = ptrtoint %"struct.tflite::StringRef"* %116 to i64
  %118 = getelementptr inbounds %"struct.tflite::StringRef", %"struct.tflite::StringRef"* %115, i64 0, i32 0
  store i8* %68, i8** %118, align 8
  %119 = getelementptr inbounds %"struct.tflite::StringRef", %"struct.tflite::StringRef"* %114, i64 %90, i32 1
  store i32 %77, i32* %119, align 8
  %120 = getelementptr inbounds %"struct.tflite::StringRef", %"struct.tflite::StringRef"* %115, i64 1
  %121 = ptrtoint %"struct.tflite::StringRef"* %120 to i64
  %122 = sub i64 %50, %88
  %123 = ashr exact i64 %122, 4
  %124 = sub nsw i64 0, %123
  %125 = getelementptr inbounds %"struct.tflite::StringRef", %"struct.tflite::StringRef"* %115, i64 %124
  %126 = ptrtoint %"struct.tflite::StringRef"* %125 to i64
  %127 = icmp sgt i64 %122, 0
  br i1 %127, label %128, label %131

128:                                              ; preds = %112
  %129 = bitcast %"struct.tflite::StringRef"* %125 to i8*
  %130 = inttoptr i64 %88 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %129, i8* align 8 %130, i64 %122, i1 false) #9
  br label %131

131:                                              ; preds = %128, %112
  store i64 %126, i64* %33, align 8
  store i64 %121, i64* %32, align 8
  store i64 %117, i64* %34, align 8
  %132 = icmp eq i64 %88, 0
  br i1 %132, label %135, label %133

133:                                              ; preds = %131
  %134 = inttoptr i64 %88 to i8*
  tail call void @_ZdlPv(i8* %134) #12
  br label %135

135:                                              ; preds = %133, %131, %81, %67, %64
  %136 = phi %"struct.tflite::StringRef"* [ %125, %133 ], [ %125, %131 ], [ %47, %81 ], [ %47, %67 ], [ %47, %64 ]
  %137 = phi i64 [ %126, %133 ], [ %126, %131 ], [ %48, %81 ], [ %48, %67 ], [ %48, %64 ]
  %138 = phi %"struct.tflite::StringRef"* [ %120, %133 ], [ %120, %131 ], [ %84, %81 ], [ %49, %67 ], [ %49, %64 ]
  %139 = phi i64 [ %121, %133 ], [ %121, %131 ], [ %85, %81 ], [ %50, %67 ], [ %50, %64 ]
  %140 = phi %"struct.tflite::StringRef"* [ %120, %133 ], [ %120, %131 ], [ %84, %81 ], [ %51, %67 ], [ %51, %64 ]
  %141 = add nuw nsw i64 %52, 1
  %142 = trunc i64 %141 to i32
  br label %143

143:                                              ; preds = %62, %135
  %144 = phi i64 [ %63, %62 ], [ %141, %135 ]
  %145 = phi %"struct.tflite::StringRef"* [ %47, %62 ], [ %136, %135 ]
  %146 = phi i64 [ %48, %62 ], [ %137, %135 ]
  %147 = phi %"struct.tflite::StringRef"* [ %49, %62 ], [ %138, %135 ]
  %148 = phi i64 [ %50, %62 ], [ %139, %135 ]
  %149 = phi %"struct.tflite::StringRef"* [ %51, %62 ], [ %140, %135 ]
  %150 = phi i32 [ %53, %62 ], [ %142, %135 ]
  %151 = icmp eq i64 %144, %35
  br i1 %151, label %36, label %46

152:                                              ; preds = %36
  %153 = sext i32 %41 to i64
  %154 = getelementptr inbounds i8, i8* %27, i64 %153
  %155 = sub nsw i32 %28, %41
  %156 = load %"struct.tflite::StringRef"*, %"struct.tflite::StringRef"** %13, align 8
  %157 = icmp ult %"struct.tflite::StringRef"* %40, %156
  %158 = ptrtoint %"struct.tflite::StringRef"* %156 to i64
  br i1 %157, label %159, label %166

159:                                              ; preds = %152
  %160 = getelementptr inbounds %"struct.tflite::StringRef", %"struct.tflite::StringRef"* %40, i64 0, i32 0
  store i8* %154, i8** %160, align 8
  %161 = getelementptr inbounds %"struct.tflite::StringRef", %"struct.tflite::StringRef"* %40, i64 0, i32 1
  store i32 %155, i32* %161, align 8
  %162 = getelementptr inbounds %"struct.tflite::StringRef", %"struct.tflite::StringRef"* %40, i64 1
  %163 = ptrtoint %"struct.tflite::StringRef"* %162 to i64
  %164 = bitcast %"struct.tflite::StringRef"** %12 to i64*
  store i64 %163, i64* %164, align 8
  %165 = bitcast %"class.std::__1::vector"* %3 to i64*
  br label %218

166:                                              ; preds = %152
  %167 = ptrtoint %"struct.tflite::StringRef"* %40 to i64
  %168 = bitcast %"struct.tflite::StringRef"** %12 to i64*
  %169 = bitcast %"class.std::__1::vector"* %3 to i64*
  %170 = sub i64 %167, %39
  %171 = ashr exact i64 %170, 4
  %172 = add nsw i64 %171, 1
  %173 = icmp ugt i64 %172, 1152921504606846975
  br i1 %173, label %174, label %176

174:                                              ; preds = %166
  %175 = bitcast %"class.std::__1::vector"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %175) #11
  unreachable

176:                                              ; preds = %166
  %177 = bitcast %"struct.tflite::StringRef"** %13 to i64*
  %178 = sub i64 %158, %39
  %179 = ashr exact i64 %178, 4
  %180 = icmp ult i64 %179, 576460752303423487
  br i1 %180, label %181, label %189

181:                                              ; preds = %176
  %182 = ashr exact i64 %178, 3
  %183 = icmp ult i64 %182, %172
  %184 = select i1 %183, i64 %172, i64 %182
  %185 = icmp eq i64 %184, 0
  br i1 %185, label %194, label %186

186:                                              ; preds = %181
  %187 = icmp ugt i64 %184, 1152921504606846975
  br i1 %187, label %188, label %189

188:                                              ; preds = %186
  tail call void @abort() #11
  unreachable

189:                                              ; preds = %186, %176
  %190 = phi i64 [ %184, %186 ], [ 1152921504606846975, %176 ]
  %191 = shl i64 %190, 4
  %192 = tail call i8* @_Znwm(i64 %191) #12
  %193 = bitcast i8* %192 to %"struct.tflite::StringRef"*
  br label %194

194:                                              ; preds = %189, %181
  %195 = phi i64 [ %190, %189 ], [ 0, %181 ]
  %196 = phi %"struct.tflite::StringRef"* [ %193, %189 ], [ null, %181 ]
  %197 = getelementptr inbounds %"struct.tflite::StringRef", %"struct.tflite::StringRef"* %196, i64 %171
  %198 = getelementptr inbounds %"struct.tflite::StringRef", %"struct.tflite::StringRef"* %196, i64 %195
  %199 = ptrtoint %"struct.tflite::StringRef"* %198 to i64
  %200 = getelementptr inbounds %"struct.tflite::StringRef", %"struct.tflite::StringRef"* %197, i64 0, i32 0
  store i8* %154, i8** %200, align 8
  %201 = getelementptr inbounds %"struct.tflite::StringRef", %"struct.tflite::StringRef"* %196, i64 %171, i32 1
  store i32 %155, i32* %201, align 8
  %202 = getelementptr inbounds %"struct.tflite::StringRef", %"struct.tflite::StringRef"* %197, i64 1
  %203 = ptrtoint %"struct.tflite::StringRef"* %202 to i64
  %204 = ptrtoint %"struct.tflite::StringRef"* %38 to i64
  %205 = sub i64 %37, %204
  %206 = ashr exact i64 %205, 4
  %207 = sub nsw i64 0, %206
  %208 = getelementptr inbounds %"struct.tflite::StringRef", %"struct.tflite::StringRef"* %197, i64 %207
  %209 = ptrtoint %"struct.tflite::StringRef"* %208 to i64
  %210 = icmp sgt i64 %205, 0
  br i1 %210, label %211, label %214

211:                                              ; preds = %194
  %212 = bitcast %"struct.tflite::StringRef"* %208 to i8*
  %213 = bitcast %"struct.tflite::StringRef"* %38 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %212, i8* align 8 %213, i64 %205, i1 false) #9
  br label %214

214:                                              ; preds = %211, %194
  store i64 %209, i64* %169, align 8
  store i64 %203, i64* %168, align 8
  store i64 %199, i64* %177, align 8
  %215 = icmp eq %"struct.tflite::StringRef"* %38, null
  br i1 %215, label %218, label %216

216:                                              ; preds = %214
  %217 = bitcast %"struct.tflite::StringRef"* %38 to i8*
  tail call void @_ZdlPv(i8* %217) #12
  br label %218

218:                                              ; preds = %43, %216, %214, %159
  %219 = phi i64* [ %45, %43 ], [ %169, %216 ], [ %169, %214 ], [ %165, %159 ]
  %220 = phi i64* [ %44, %43 ], [ %168, %216 ], [ %168, %214 ], [ %164, %159 ]
  %221 = phi i64 [ %39, %43 ], [ %209, %216 ], [ %209, %214 ], [ %39, %159 ]
  %222 = phi i64 [ %37, %43 ], [ %203, %216 ], [ %203, %214 ], [ %163, %159 ]
  %223 = bitcast %"class.tflite::DynamicBuffer"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %223) #9
  %224 = getelementptr inbounds %"class.tflite::DynamicBuffer", %"class.tflite::DynamicBuffer"* %4, i64 0, i32 0, i32 0, i32 0
  %225 = getelementptr inbounds %"class.tflite::DynamicBuffer", %"class.tflite::DynamicBuffer"* %4, i64 0, i32 0, i32 0, i32 1
  %226 = getelementptr inbounds %"class.tflite::DynamicBuffer", %"class.tflite::DynamicBuffer"* %4, i64 0, i32 1, i32 0, i32 0
  %227 = getelementptr inbounds %"class.tflite::DynamicBuffer", %"class.tflite::DynamicBuffer"* %4, i64 0, i32 1, i32 0, i32 1
  %228 = getelementptr inbounds %"class.tflite::DynamicBuffer", %"class.tflite::DynamicBuffer"* %4, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %229 = getelementptr inbounds %"class.tflite::DynamicBuffer", %"class.tflite::DynamicBuffer"* %4, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %223, i8 0, i64 24, i1 false) #9
  %230 = tail call i8* @_Znwm(i64 4) #12
  %231 = bitcast %"class.std::__1::vector.8"* %229 to i8**
  store i8* %230, i8** %231, align 8
  %232 = getelementptr inbounds i8, i8* %230, i64 4
  %233 = bitcast i32** %228 to i8**
  store i8* %232, i8** %233, align 8
  %234 = bitcast i32** %227 to i64*
  %235 = bitcast i8* %230 to i32*
  store i32 0, i32* %235, align 4
  %236 = ptrtoint i8* %232 to i64
  store i64 %236, i64* %234, align 8
  %237 = sub i64 %222, %221
  %238 = ashr exact i64 %237, 4
  %239 = getelementptr inbounds %struct.TfLiteSkipGramParams, %struct.TfLiteSkipGramParams* %9, i64 0, i32 0
  %240 = load i32, i32* %239, align 4
  %241 = sext i32 %240 to i64
  %242 = icmp ult i64 %238, %241
  br i1 %242, label %243, label %256

243:                                              ; preds = %218
  %244 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %245 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %244, align 8
  %246 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %245, i64 0, i32 1, i64 0
  %247 = load i32, i32* %246, align 4
  %248 = icmp slt i32 %247, 0
  br i1 %248, label %254, label %249

249:                                              ; preds = %243
  %250 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %251 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %250, align 8
  %252 = sext i32 %247 to i64
  %253 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %251, i64 %252
  br label %254

254:                                              ; preds = %243, %249
  %255 = phi %struct.TfLiteTensor* [ %253, %249 ], [ null, %243 ]
  call void @_ZN6tflite13DynamicBuffer21WriteToTensorAsVectorEP12TfLiteTensor(%"class.tflite::DynamicBuffer"* nonnull %4, %struct.TfLiteTensor* %255) #9
  br label %433

256:                                              ; preds = %218
  %257 = bitcast %"class.std::__1::vector.8"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %257) #9
  %258 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %5, i64 0, i32 0, i32 0
  %259 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %5, i64 0, i32 0, i32 1
  %260 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  %261 = bitcast %"class.std::__1::vector.8"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %261, i8 -86, i64 24, i1 false)
  %262 = load i32, i32* %239, align 4
  %263 = sext i32 %262 to i64
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %257, i8 0, i64 24, i1 false) #9
  %264 = icmp eq i32 %262, 0
  br i1 %264, label %277, label %265

265:                                              ; preds = %256
  %266 = icmp slt i32 %262, 0
  br i1 %266, label %267, label %269

267:                                              ; preds = %265
  %268 = bitcast %"class.std::__1::vector.8"* %5 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %268) #11
  unreachable

269:                                              ; preds = %265
  %270 = shl nsw i64 %263, 2
  %271 = tail call i8* @_Znwm(i64 %270) #12
  %272 = bitcast i8* %271 to i32*
  %273 = bitcast %"class.std::__1::vector.8"* %5 to i8**
  store i8* %271, i8** %273, align 8
  %274 = getelementptr inbounds i32, i32* %272, i64 %263
  store i32* %274, i32** %260, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %271, i8 0, i64 %270, i1 false)
  %275 = bitcast i32** %259 to i64*
  %276 = ptrtoint i32* %274 to i64
  store i64 %276, i64* %275, align 8
  br label %277

277:                                              ; preds = %256, %269
  %278 = load i64, i64* %219, align 8
  %279 = sub i64 %222, %278
  %280 = lshr exact i64 %279, 4
  %281 = trunc i64 %280 to i32
  %282 = getelementptr inbounds %struct.TfLiteSkipGramParams, %struct.TfLiteSkipGramParams* %9, i64 0, i32 1
  %283 = getelementptr inbounds %struct.TfLiteSkipGramParams, %struct.TfLiteSkipGramParams* %9, i64 0, i32 2
  %284 = bitcast %"class.std::__1::vector"* %6 to i8*
  %285 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 0
  %286 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 1
  %287 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  %288 = bitcast %"class.std::__1::vector"* %6 to i8**
  %289 = bitcast %"struct.tflite::StringRef"** %286 to i64*
  br label %290

290:                                              ; preds = %277, %410
  %291 = phi i32 [ 1, %277 ], [ %411, %410 ]
  %292 = load i32, i32* %239, align 4
  %293 = icmp sgt i32 %292, %291
  br i1 %293, label %294, label %321

294:                                              ; preds = %290
  %295 = sext i32 %291 to i64
  %296 = load i32*, i32** %258, align 8
  %297 = getelementptr inbounds i32, i32* %296, i64 %295
  %298 = load i32, i32* %297, align 4
  %299 = add nsw i32 %298, 1
  %300 = icmp slt i32 %299, %281
  br i1 %300, label %301, label %321

301:                                              ; preds = %294
  %302 = icmp eq i32 %291, 0
  br i1 %302, label %311, label %303

303:                                              ; preds = %301
  %304 = add nsw i32 %291, -1
  %305 = sext i32 %304 to i64
  %306 = getelementptr inbounds i32, i32* %296, i64 %305
  %307 = load i32, i32* %306, align 4
  %308 = sub nsw i32 %298, %307
  %309 = load i32, i32* %282, align 4
  %310 = icmp sgt i32 %308, %309
  br i1 %310, label %323, label %311

311:                                              ; preds = %301, %303
  store i32 %299, i32* %297, align 4
  %312 = add nuw nsw i32 %291, 1
  %313 = load i32, i32* %239, align 4
  %314 = icmp slt i32 %312, %313
  br i1 %314, label %315, label %410

315:                                              ; preds = %311
  %316 = load i32*, i32** %258, align 8
  %317 = getelementptr inbounds i32, i32* %316, i64 %295
  %318 = load i32, i32* %317, align 4
  %319 = sext i32 %312 to i64
  %320 = getelementptr inbounds i32, i32* %316, i64 %319
  store i32 %318, i32* %320, align 4
  br label %410

321:                                              ; preds = %294, %290
  %322 = icmp slt i32 %291, 1
  br i1 %322, label %408, label %323

323:                                              ; preds = %303, %321
  %324 = load i8, i8* %283, align 4, !range !2
  %325 = icmp eq i8 %324, 0
  br i1 %325, label %328, label %326

326:                                              ; preds = %323
  %327 = icmp slt i32 %292, %291
  br i1 %327, label %408, label %330

328:                                              ; preds = %323
  %329 = icmp eq i32 %292, %291
  br i1 %329, label %330, label %408

330:                                              ; preds = %326, %328
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %284) #9
  %331 = sext i32 %291 to i64
  %332 = shl nsw i64 %331, 4
  %333 = call i8* @_Znwm(i64 %332) #12
  %334 = bitcast i8* %333 to %"struct.tflite::StringRef"*
  store i8* %333, i8** %288, align 8
  %335 = getelementptr inbounds %"struct.tflite::StringRef", %"struct.tflite::StringRef"* %334, i64 %331
  store %"struct.tflite::StringRef"* %335, %"struct.tflite::StringRef"** %287, align 8
  %336 = ptrtoint i8* %333 to i64
  %337 = add nsw i64 %331, -1
  %338 = getelementptr %"struct.tflite::StringRef", %"struct.tflite::StringRef"* %334, i64 %337, i32 0
  %339 = ptrtoint i8** %338 to i64
  %340 = sub i64 16, %336
  %341 = add i64 %340, %339
  %342 = and i64 %341, -16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %333, i8 0, i64 %342, i1 false) #9
  %343 = ptrtoint %"struct.tflite::StringRef"* %335 to i64
  store i64 %343, i64* %289, align 8
  %344 = icmp sgt i32 %291, 0
  br i1 %344, label %345, label %374

345:                                              ; preds = %330
  %346 = load i32*, i32** %258, align 8
  %347 = load i32, i32* %346, align 4
  %348 = sext i32 %347 to i64
  %349 = load %"struct.tflite::StringRef"*, %"struct.tflite::StringRef"** %11, align 8
  %350 = getelementptr inbounds %"struct.tflite::StringRef", %"struct.tflite::StringRef"* %349, i64 %348
  %351 = bitcast %"struct.tflite::StringRef"* %350 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %333, i8* align 8 %351, i64 16, i1 false)
  %352 = icmp eq i32 %291, 1
  br i1 %352, label %374, label %353

353:                                              ; preds = %345
  %354 = zext i32 %291 to i64
  %355 = add nsw i64 %354, -1
  %356 = and i64 %355, 1
  %357 = icmp eq i32 %291, 2
  br i1 %357, label %360, label %358

358:                                              ; preds = %353
  %359 = sub nsw i64 %355, %356
  br label %381

360:                                              ; preds = %381, %353
  %361 = phi i64 [ 1, %353 ], [ %405, %381 ]
  %362 = icmp eq i64 %356, 0
  br i1 %362, label %374, label %363

363:                                              ; preds = %360
  %364 = load %"struct.tflite::StringRef"*, %"struct.tflite::StringRef"** %285, align 8
  %365 = load i32*, i32** %258, align 8
  %366 = getelementptr inbounds i32, i32* %365, i64 %361
  %367 = load i32, i32* %366, align 4
  %368 = sext i32 %367 to i64
  %369 = load %"struct.tflite::StringRef"*, %"struct.tflite::StringRef"** %11, align 8
  %370 = getelementptr inbounds %"struct.tflite::StringRef", %"struct.tflite::StringRef"* %369, i64 %368
  %371 = getelementptr inbounds %"struct.tflite::StringRef", %"struct.tflite::StringRef"* %364, i64 %361
  %372 = bitcast %"struct.tflite::StringRef"* %371 to i8*
  %373 = bitcast %"struct.tflite::StringRef"* %370 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %372, i8* align 8 %373, i64 16, i1 false)
  br label %374

374:                                              ; preds = %363, %360, %345, %330
  call void @_ZN6tflite13DynamicBuffer15AddJoinedStringERKNSt3__16vectorINS_9StringRefENS1_9allocatorIS3_EEEEc(%"class.tflite::DynamicBuffer"* nonnull %4, %"class.std::__1::vector"* nonnull dereferenceable(24) %6, i8 signext 32) #9
  %375 = load %"struct.tflite::StringRef"*, %"struct.tflite::StringRef"** %285, align 8
  %376 = icmp eq %"struct.tflite::StringRef"* %375, null
  br i1 %376, label %380, label %377

377:                                              ; preds = %374
  %378 = ptrtoint %"struct.tflite::StringRef"* %375 to i64
  store i64 %378, i64* %289, align 8
  %379 = bitcast %"struct.tflite::StringRef"* %375 to i8*
  call void @_ZdlPv(i8* %379) #12
  br label %380

380:                                              ; preds = %374, %377
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %284) #9
  br label %408

381:                                              ; preds = %381, %358
  %382 = phi i64 [ 1, %358 ], [ %405, %381 ]
  %383 = phi i64 [ %359, %358 ], [ %406, %381 ]
  %384 = load %"struct.tflite::StringRef"*, %"struct.tflite::StringRef"** %285, align 8
  %385 = load i32*, i32** %258, align 8
  %386 = getelementptr inbounds i32, i32* %385, i64 %382
  %387 = load i32, i32* %386, align 4
  %388 = sext i32 %387 to i64
  %389 = load %"struct.tflite::StringRef"*, %"struct.tflite::StringRef"** %11, align 8
  %390 = getelementptr inbounds %"struct.tflite::StringRef", %"struct.tflite::StringRef"* %389, i64 %388
  %391 = getelementptr inbounds %"struct.tflite::StringRef", %"struct.tflite::StringRef"* %384, i64 %382
  %392 = bitcast %"struct.tflite::StringRef"* %391 to i8*
  %393 = bitcast %"struct.tflite::StringRef"* %390 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %392, i8* align 8 %393, i64 16, i1 false)
  %394 = add nuw nsw i64 %382, 1
  %395 = load %"struct.tflite::StringRef"*, %"struct.tflite::StringRef"** %285, align 8
  %396 = load i32*, i32** %258, align 8
  %397 = getelementptr inbounds i32, i32* %396, i64 %394
  %398 = load i32, i32* %397, align 4
  %399 = sext i32 %398 to i64
  %400 = load %"struct.tflite::StringRef"*, %"struct.tflite::StringRef"** %11, align 8
  %401 = getelementptr inbounds %"struct.tflite::StringRef", %"struct.tflite::StringRef"* %400, i64 %399
  %402 = getelementptr inbounds %"struct.tflite::StringRef", %"struct.tflite::StringRef"* %395, i64 %394
  %403 = bitcast %"struct.tflite::StringRef"* %402 to i8*
  %404 = bitcast %"struct.tflite::StringRef"* %401 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %403, i8* align 8 %404, i64 16, i1 false)
  %405 = add nuw nsw i64 %382, 2
  %406 = add i64 %383, -2
  %407 = icmp eq i64 %406, 0
  br i1 %407, label %360, label %381

408:                                              ; preds = %326, %321, %380, %328
  %409 = add nsw i32 %291, -1
  br label %410

410:                                              ; preds = %311, %315, %408
  %411 = phi i32 [ %312, %315 ], [ %312, %311 ], [ %409, %408 ]
  %412 = icmp sgt i32 %411, -1
  br i1 %412, label %290, label %413

413:                                              ; preds = %410
  %414 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %415 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %414, align 8
  %416 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %415, i64 0, i32 1, i64 0
  %417 = load i32, i32* %416, align 4
  %418 = icmp slt i32 %417, 0
  br i1 %418, label %424, label %419

419:                                              ; preds = %413
  %420 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %421 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %420, align 8
  %422 = sext i32 %417 to i64
  %423 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %421, i64 %422
  br label %424

424:                                              ; preds = %413, %419
  %425 = phi %struct.TfLiteTensor* [ %423, %419 ], [ null, %413 ]
  call void @_ZN6tflite13DynamicBuffer21WriteToTensorAsVectorEP12TfLiteTensor(%"class.tflite::DynamicBuffer"* nonnull %4, %struct.TfLiteTensor* %425) #9
  %426 = load i32*, i32** %258, align 8
  %427 = icmp eq i32* %426, null
  br i1 %427, label %432, label %428

428:                                              ; preds = %424
  %429 = ptrtoint i32* %426 to i64
  %430 = bitcast i32** %259 to i64*
  store i64 %429, i64* %430, align 8
  %431 = bitcast i32* %426 to i8*
  call void @_ZdlPv(i8* %431) #12
  br label %432

432:                                              ; preds = %424, %428
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %257) #9
  br label %433

433:                                              ; preds = %432, %254
  %434 = load i32*, i32** %226, align 8
  %435 = icmp eq i32* %434, null
  br i1 %435, label %439, label %436

436:                                              ; preds = %433
  %437 = ptrtoint i32* %434 to i64
  store i64 %437, i64* %234, align 8
  %438 = bitcast i32* %434 to i8*
  call void @_ZdlPv(i8* %438) #12
  br label %439

439:                                              ; preds = %436, %433
  %440 = load i8*, i8** %224, align 8
  %441 = icmp eq i8* %440, null
  br i1 %441, label %445, label %442

442:                                              ; preds = %439
  %443 = ptrtoint i8* %440 to i64
  %444 = bitcast i8** %225 to i64*
  store i64 %443, i64* %444, align 8
  call void @_ZdlPv(i8* nonnull %440) #12
  br label %445

445:                                              ; preds = %439, %442
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %223) #9
  %446 = load %"struct.tflite::StringRef"*, %"struct.tflite::StringRef"** %11, align 8
  %447 = icmp eq %"struct.tflite::StringRef"* %446, null
  br i1 %447, label %451, label %448

448:                                              ; preds = %445
  %449 = ptrtoint %"struct.tflite::StringRef"* %446 to i64
  store i64 %449, i64* %220, align 8
  %450 = bitcast %"struct.tflite::StringRef"* %446 to i8*
  call void @_ZdlPv(i8* %450) #12
  br label %451

451:                                              ; preds = %445, %448
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #9
  ret i32 0
}

declare i8* @TfLiteTypeGetName(i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

declare { i8*, i32 } @_ZN6tflite9GetStringEPK12TfLiteTensori(%struct.TfLiteTensor*, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare void @_ZN6tflite13DynamicBuffer21WriteToTensorAsVectorEP12TfLiteTensor(%"class.tflite::DynamicBuffer"*, %struct.TfLiteTensor*) local_unnamed_addr #2

declare void @_ZN6tflite13DynamicBuffer15AddJoinedStringERKNSt3__16vectorINS_9StringRefENS1_9allocatorIS3_EEEEc(%"class.tflite::DynamicBuffer"*, %"class.std::__1::vector"* dereferenceable(24), i8 signext) local_unnamed_addr #2

; Function Attrs: nounwind readnone
declare i16** @__ctype_b_loc() local_unnamed_addr #4

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #5

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { nounwind readnone }
attributes #11 = { noreturn nounwind }
attributes #12 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
