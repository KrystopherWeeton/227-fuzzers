; ModuleID = '../../third_party/skia/src/core/SkRemoteGlyphCache.cpp'
source_filename = "../../third_party/skia/src/core/SkRemoteGlyphCache.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.SkExecutor = type opaque
%"class.GrContextOptions::PersistentCache" = type { i32 (...)** }
%"class.GrContextOptions::ShaderErrorHandler" = type { i32 (...)** }
%class.GrDriverBugWorkarounds = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"struct.std::__1::piecewise_construct_t" = type { i8 }
%class.RemoteStrike = type { %class.SkStrikeForGPU, %class.SkAutoDescriptor, i32, %struct.SkGlyphPositionRoundingSpec, %"class.std::__1::unique_ptr", %class.SkTypeface*, %struct.SkScalerContextEffects, i8, %class.LowerRangeBitVector, %class.SkTHashTable, %class.SkTHashTable.17, %"class.std::__1::vector", %"class.std::__1::vector", %class.SkArenaAllocWithReset }
%class.SkStrikeForGPU = type { i32 (...)** }
%class.SkAutoDescriptor = type { %class.SkDescriptor*, [120 x i8] }
%struct.SkGlyphPositionRoundingSpec = type { %struct.SkPoint, %struct.SkIPoint, %struct.SkIPoint }
%struct.SkPoint = type { float, float }
%struct.SkIPoint = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.SkScalerContext* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic" }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkOnce = type { %"struct.std::__1::atomic.2" }
%"struct.std::__1::atomic.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl.5" }
%"struct.std::__1::__cxx_atomic_impl.5" = type { %"struct.std::__1::__cxx_atomic_base_impl.6" }
%"struct.std::__1::__cxx_atomic_base_impl.6" = type { i8 }
%struct.SkScalerContextEffects = type { %class.SkPathEffect*, %class.SkMaskFilter* }
%class.SkPathEffect = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.SkMaskFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.LowerRangeBitVector = type { %"class.std::__1::bitset" }
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { [8 x i64] }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr.11" }
%"class.std::__1::unique_ptr.11" = type { %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"struct.SkTHashTable<RemoteStrike::MaskSummary, SkPackedGlyphID, RemoteStrike::MaskSummaryTraits>::Slot"* }
%"struct.SkTHashTable<RemoteStrike::MaskSummary, SkPackedGlyphID, RemoteStrike::MaskSummaryTraits>::Slot" = type { %"struct.RemoteStrike::MaskSummary", i32 }
%"struct.RemoteStrike::MaskSummary" = type { i32 }
%class.SkTHashTable.17 = type { i32, i32, %class.SkAutoTArray.18 }
%class.SkAutoTArray.18 = type { %"class.std::__1::unique_ptr.19" }
%"class.std::__1::unique_ptr.19" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"struct.SkTHashTable<RemoteStrike::PathSummary, unsigned short, RemoteStrike::PathSummaryTraits>::Slot"* }
%"struct.SkTHashTable<RemoteStrike::PathSummary, unsigned short, RemoteStrike::PathSummaryTraits>::Slot" = type { %"struct.RemoteStrike::PathSummary", i32 }
%"struct.RemoteStrike::PathSummary" = type { i16, i16 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %class.SkGlyph*, %class.SkGlyph*, %"class.std::__1::__compressed_pair.34" }
%class.SkGlyph = type { i16, i16, i16, i16, i8*, %"struct.SkGlyph::PathData"*, float, float, i8, i8, %struct.SkPackedGlyphID }
%"struct.SkGlyph::PathData" = type <{ %"struct.SkGlyph::Intercept"*, %class.SkPath, i8, [7 x i8] }>
%"struct.SkGlyph::Intercept" = type { %"struct.SkGlyph::Intercept"*, [2 x float], [2 x float] }
%class.SkPath = type <{ %class.sk_sp.25, i32, %"struct.std::__1::atomic.2", %"struct.std::__1::atomic.2", i8, i8 }>
%class.sk_sp.25 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt.26, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.27, %class.SkTDArray.28, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt.26 = type { %"struct.std::__1::atomic" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%class.SkTDArray.27 = type { i8*, i32, i32 }
%class.SkTDArray.28 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.29 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.29 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.30", [3 x i8] }
%"struct.std::__1::atomic.30" = type { %"struct.std::__1::__atomic_base.31" }
%"struct.std::__1::__atomic_base.31" = type { %"struct.std::__1::__cxx_atomic_impl.32" }
%"struct.std::__1::__cxx_atomic_impl.32" = type { %"struct.std::__1::__cxx_atomic_base_impl.33" }
%"struct.std::__1::__cxx_atomic_base_impl.33" = type { i8 }
%struct.SkPackedGlyphID = type { i32 }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %class.SkGlyph* }
%class.SkArenaAllocWithReset = type { %class.SkArenaAlloc.base, i8*, i32, i32 }
%class.SkArenaAlloc.base = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes }>
%class.SkFibBlockSizes = type { i32 }
%class.SkDescriptor = type { i32, i32, i32 }
%class.SkScalerContext = type { i32 (...)**, %struct.SkScalerContextRec, %class.sk_sp.1, %class.sk_sp.7, %class.sk_sp.8, i8, %class.SkTMaskPreBlend }
%struct.SkScalerContextRec = type { i32, float, float, float, [2 x [2 x float]], float, float, i32, i8, i8, i8, i8, i8, i8, i16 }
%class.sk_sp.1 = type { %class.SkTypeface* }
%class.sk_sp.7 = type { %class.SkPathEffect* }
%class.sk_sp.8 = type { %class.SkMaskFilter* }
%class.SkTMaskPreBlend = type { %class.sk_sp.9, i8*, i8*, i8* }
%class.sk_sp.9 = type { %class.SkTMaskGamma* }
%class.SkTMaskGamma = type { %class.SkRefCnt.base, [8 x [256 x i8]], i8, [3 x i8] }
%class.SkStrikeServerImpl = type { %class.SkStrikeForGPUCacheInterface, %"class.std::__1::unordered_map", %"class.SkStrikeServer::DiscardableHandleManager"*, %class.SkTHashSet, i64, %class.SkTHashMap, %class.SkTHashSet.109, %"class.std::__1::vector.118" }
%class.SkStrikeForGPUCacheInterface = type { i32 (...)** }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.74", %"class.std::__1::__compressed_pair.83", %"class.std::__1::__compressed_pair.88", %"class.std::__1::__compressed_pair.90", [4 x i8] }>
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76", %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.77" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.78" }
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.79" }
%"struct.std::__1::__compressed_pair_elem.79" = type { i64 }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"struct.std::__1::__compressed_pair_elem.84" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.79" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"struct.std::__1::__compressed_pair_elem.91" = type { float }
%class.SkTHashSet = type { %class.SkTHashTable.93 }
%class.SkTHashTable.93 = type { i32, i32, %class.SkAutoTArray.94 }
%class.SkAutoTArray.94 = type { %"class.std::__1::unique_ptr.95" }
%"class.std::__1::unique_ptr.95" = type { %"class.std::__1::__compressed_pair.96" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"struct.SkTHashTable<unsigned int, unsigned int, SkTHashSet<unsigned int, SkGoodHash>::Traits>::Slot"* }
%"struct.SkTHashTable<unsigned int, unsigned int, SkTHashSet<unsigned int, SkGoodHash>::Traits>::Slot" = type { i32, i32 }
%class.SkTHashMap = type { %class.SkTHashTable.101 }
%class.SkTHashTable.101 = type { i32, i32, %class.SkAutoTArray.102 }
%class.SkAutoTArray.102 = type { %"class.std::__1::unique_ptr.103" }
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair" = type { %"struct.std::__1::pair.258" }
%"struct.std::__1::pair.258" = type { i32, %class.sk_sp }
%class.sk_sp = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%class.SkTHashSet.109 = type { %class.SkTHashTable.110 }
%class.SkTHashTable.110 = type { i32, i32, %class.SkAutoTArray.111 }
%class.SkAutoTArray.111 = type { %"class.std::__1::unique_ptr.112" }
%"class.std::__1::unique_ptr.112" = type { %"class.std::__1::__compressed_pair.113" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.114" }
%"struct.std::__1::__compressed_pair_elem.114" = type { %"struct.SkTHashTable<RemoteStrike *, RemoteStrike *, SkTHashSet<RemoteStrike *, SkGoodHash>::Traits>::Slot"* }
%"struct.SkTHashTable<RemoteStrike *, RemoteStrike *, SkTHashSet<RemoteStrike *, SkGoodHash>::Traits>::Slot" = type <{ %class.RemoteStrike*, i32, [4 x i8] }>
%"class.std::__1::vector.118" = type { %"class.std::__1::__vector_base.119" }
%"class.std::__1::__vector_base.119" = type { %struct.WireTypeface*, %struct.WireTypeface*, %"class.std::__1::__compressed_pair.120" }
%struct.WireTypeface = type <{ i32, i32, %class.SkFontStyle, i8, [3 x i8] }>
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.121" }
%"struct.std::__1::__compressed_pair_elem.121" = type { %struct.WireTypeface* }
%"class.SkStrikeServer::DiscardableHandleManager" = type { i32 (...)** }
%class.SkStrikeServer = type { %"class.std::__1::unique_ptr.149" }
%"class.std::__1::unique_ptr.149" = type { %"class.std::__1::__compressed_pair.150" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.151" = type { %class.SkStrikeServerImpl* }
%class.SkStrikeClientImpl = type <{ %class.SkTHashMap.203, %class.sk_sp.212, %class.SkStrikeCache*, i8, [7 x i8] }>
%class.SkTHashMap.203 = type { %class.SkTHashTable.204 }
%class.SkTHashTable.204 = type { i32, i32, %class.SkAutoTArray.205 }
%class.SkAutoTArray.205 = type { %"class.std::__1::unique_ptr.206" }
%"class.std::__1::unique_ptr.206" = type { %"class.std::__1::__compressed_pair.207" }
%"class.std::__1::__compressed_pair.207" = type { %"struct.std::__1::__compressed_pair_elem.208" }
%"struct.std::__1::__compressed_pair_elem.208" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair" = type { %"struct.std::__1::pair.259" }
%"struct.std::__1::pair.259" = type { i32, %class.sk_sp.1 }
%class.sk_sp.212 = type { %"class.SkStrikeClient::DiscardableHandleManager"* }
%"class.SkStrikeClient::DiscardableHandleManager" = type { %class.SkRefCnt.base, [4 x i8] }
%class.SkStrikeCache = type { %class.SkStrikeForGPUCacheInterface, %class.SkMutex, %"class.SkStrikeCache::Strike"*, %"class.SkStrikeCache::Strike"*, %class.SkTHashTable.235, i64, i64, i32, i32 }
%"class.SkStrikeCache::Strike" = type <{ %class.SkRefCnt.base, [4 x i8], %class.SkStrikeForGPU, %class.SkStrikeCache*, %"class.SkStrikeCache::Strike"*, %"class.SkStrikeCache::Strike"*, %class.SkScalerCache, %"class.std::__1::unique_ptr.229", i64, i8, [7 x i8] }>
%class.SkScalerCache = type { %class.SkAutoDescriptor, %"class.std::__1::unique_ptr", %struct.SkFontMetrics, %struct.SkGlyphPositionRoundingSpec, %class.SkMutex, %class.SkTHashMap.213, %"class.std::__1::vector.222", %class.SkArenaAlloc }
%struct.SkFontMetrics = type { i32, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float }
%class.SkTHashMap.213 = type { %class.SkTHashTable.214 }
%class.SkTHashTable.214 = type { i32, i32, %class.SkAutoTArray.215 }
%class.SkAutoTArray.215 = type { %"class.std::__1::unique_ptr.216" }
%"class.std::__1::unique_ptr.216" = type { %"class.std::__1::__compressed_pair.217" }
%"class.std::__1::__compressed_pair.217" = type { %"struct.std::__1::__compressed_pair_elem.218" }
%"struct.std::__1::__compressed_pair_elem.218" = type { %"struct.SkTHashTable<SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair, SkPackedGlyphID, SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair, SkPackedGlyphID, SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair>::Slot" = type { %"struct.SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair", i32 }
%"struct.SkTHashMap<SkPackedGlyphID, SkGlyphDigest, SkGoodHash>::Pair" = type { %"struct.std::__1::pair.257" }
%"struct.std::__1::pair.257" = type { %struct.SkPackedGlyphID, %class.SkGlyphDigest }
%class.SkGlyphDigest = type { [3 x i8], i8 }
%"class.std::__1::vector.222" = type { %"class.std::__1::__vector_base.223" }
%"class.std::__1::__vector_base.223" = type { %class.SkGlyph**, %class.SkGlyph**, %"class.std::__1::__compressed_pair.224" }
%"class.std::__1::__compressed_pair.224" = type { %"struct.std::__1::__compressed_pair_elem.225" }
%"struct.std::__1::__compressed_pair_elem.225" = type { %class.SkGlyph** }
%class.SkArenaAlloc = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes, [4 x i8] }>
%"class.std::__1::unique_ptr.229" = type { %"class.std::__1::__compressed_pair.230" }
%"class.std::__1::__compressed_pair.230" = type { %"struct.std::__1::__compressed_pair_elem.231" }
%"struct.std::__1::__compressed_pair_elem.231" = type { %class.SkStrikePinner* }
%class.SkStrikePinner = type { i32 (...)** }
%class.SkTHashTable.235 = type { i32, i32, %class.SkAutoTArray.236 }
%class.SkAutoTArray.236 = type { %"class.std::__1::unique_ptr.237" }
%"class.std::__1::unique_ptr.237" = type { %"class.std::__1::__compressed_pair.238" }
%"class.std::__1::__compressed_pair.238" = type { %"struct.std::__1::__compressed_pair_elem.239" }
%"struct.std::__1::__compressed_pair_elem.239" = type { %"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot"* }
%"struct.SkTHashTable<sk_sp<SkStrikeCache::Strike>, SkDescriptor, SkStrikeCache::StrikeTraits>::Slot" = type opaque
%class.SkStrikeClient = type { %"class.std::__1::unique_ptr.251" }
%"class.std::__1::unique_ptr.251" = type { %"class.std::__1::__compressed_pair.252" }
%"class.std::__1::__compressed_pair.252" = type { %"struct.std::__1::__compressed_pair_elem.253" }
%"struct.std::__1::__compressed_pair_elem.253" = type { %class.SkStrikeClientImpl* }
%struct.MapOps = type { i8 }
%class.Serializer = type { %"class.std::__1::vector.37"* }
%"class.std::__1::vector.37" = type { %"class.std::__1::__vector_base.38" }
%"class.std::__1::__vector_base.38" = type { i8*, i8*, %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { i8* }
%class.SkDrawableGlyphBuffer = type { i64, i64, i64, %class.SkAutoTArray.44, %class.SkAutoTMalloc }
%class.SkAutoTArray.44 = type { %"class.std::__1::unique_ptr.45" }
%"class.std::__1::unique_ptr.45" = type { %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %class.SkGlyphVariant* }
%class.SkGlyphVariant = type { %union.anon }
%union.anon = type { %class.SkGlyph* }
%class.SkAutoTMalloc = type { %"class.std::__1::unique_ptr.51" }
%"class.std::__1::unique_ptr.51" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %struct.SkPoint* }
%class.SkSourceGlyphBuffer = type { %class.SkZip, i64, i32, i32, %class.SkZip.56, %class.SkSTArray, %class.SkSTArray.61 }
%class.SkZip = type { %"class.std::__1::tuple", i64 }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf", %"class.std::__1::__tuple_leaf.55" }
%"class.std::__1::__tuple_leaf" = type { i16* }
%"class.std::__1::__tuple_leaf.55" = type { %struct.SkPoint* }
%class.SkZip.56 = type { %"class.std::__1::tuple.57", i64 }
%"class.std::__1::tuple.57" = type { %"struct.std::__1::__tuple_impl.58" }
%"struct.std::__1::__tuple_impl.58" = type { %"class.std::__1::__tuple_leaf.59", %"class.std::__1::__tuple_leaf.60" }
%"class.std::__1::__tuple_leaf.59" = type { i16* }
%"class.std::__1::__tuple_leaf.60" = type { %struct.SkPoint* }
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray }
%class.SkAlignedSTStorage = type { [8 x i8] }
%class.SkTArray = type { i16*, i64 }
%class.SkSTArray.61 = type { %class.SkAlignedSTStorage.62, %class.SkTArray.63 }
%class.SkAlignedSTStorage.62 = type { [32 x i8] }
%class.SkTArray.63 = type { %struct.SkPoint*, i64 }
%class.SkEnumerate = type { %class.SkZip.64, i64, %"class.SkZip<SkGlyphVariant, SkPoint>::Iterator", %"class.SkZip<SkGlyphVariant, SkPoint>::Iterator" }
%class.SkZip.64 = type { %"class.std::__1::tuple.65", i64 }
%"class.std::__1::tuple.65" = type { %"struct.std::__1::__tuple_impl.66" }
%"struct.std::__1::__tuple_impl.66" = type { %"class.std::__1::__tuple_leaf.67", %"class.std::__1::__tuple_leaf.60" }
%"class.std::__1::__tuple_leaf.67" = type { %class.SkGlyphVariant* }
%"class.SkZip<SkGlyphVariant, SkPoint>::Iterator" = type { %class.SkZip.64*, i64 }
%"class.std::__1::__vector_base_common" = type { i8 }
%class.SkPaint = type <{ %class.sk_sp.7, %class.sk_sp.128, %class.sk_sp.8, %class.sk_sp.129, %class.sk_sp.130, %struct.SkRGBA4f, float, float, %union.anon.131, [4 x i8] }>
%class.sk_sp.128 = type { %class.SkShader* }
%class.SkShader = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.129 = type { %class.SkColorFilter* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.130 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%struct.SkRGBA4f = type { float, float, float, float }
%union.anon.131 = type { %struct.anon }
%struct.anon = type { i32 }
%class.SkFont = type <{ %class.sk_sp.1, float, float, float, i8, i8, i8, i8 }>
%class.SkSurfaceProps = type { i32, i32 }
%class.SkMatrix = type { [9 x float], i32 }
%"class.std::__1::unique_ptr.310" = type { %"class.std::__1::__compressed_pair.311" }
%"class.std::__1::__compressed_pair.311" = type { %"struct.std::__1::__compressed_pair_elem.312", %"struct.std::__1::__compressed_pair_elem.313" }
%"struct.std::__1::__compressed_pair_elem.312" = type { %"struct.std::__1::__hash_node"* }
%"struct.std::__1::__hash_node" = type { %"struct.std::__1::__hash_node_base", i64, %"struct.std::__1::__hash_value_type" }
%"struct.std::__1::__hash_value_type" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { %class.SkDescriptor*, %"class.std::__1::unique_ptr.136" }
%"class.std::__1::unique_ptr.136" = type { %"class.std::__1::__compressed_pair.137" }
%"class.std::__1::__compressed_pair.137" = type { %"struct.std::__1::__compressed_pair_elem.138" }
%"struct.std::__1::__compressed_pair_elem.138" = type { %class.RemoteStrike* }
%"struct.std::__1::__compressed_pair_elem.313" = type { %"class.std::__1::__hash_node_destructor" }
%"class.std::__1::__hash_node_destructor" = type <{ %"class.std::__1::allocator.86"*, i8, [7 x i8] }>
%"class.std::__1::allocator.86" = type { i8 }
%"class.std::__1::tuple.318" = type { %"struct.std::__1::__tuple_impl.319" }
%"struct.std::__1::__tuple_impl.319" = type { %"class.std::__1::__tuple_leaf.320" }
%"class.std::__1::__tuple_leaf.320" = type { %class.SkDescriptor** }
%"class.std::__1::tuple.273" = type { i8 }
%"class.skia::tracing_internals::ScopedTracer" = type { %"struct.skia::tracing_internals::ScopedTracer::Data"*, %"struct.skia::tracing_internals::ScopedTracer::Data" }
%"struct.skia::tracing_internals::ScopedTracer::Data" = type { i8*, i8*, i64 }
%class.SkString = type { %class.sk_sp.147 }
%class.sk_sp.147 = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%class.SkEventTracer = type { i32 (...)** }
%class.SkCanvas = type { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.158, [384 x i64], %class.sk_sp.159, %class.SkSurfaceProps, i32, %"class.std::__1::unique_ptr.162", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.168" }
%class.SkDeque = type { i8*, i8*, %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"*, i64, i8*, i32, i32 }
%"struct.SkDeque::Block" = type opaque
%"class.SkCanvas::MCRec" = type opaque
%class.sk_sp.158 = type { %class.SkMarkerStack* }
%class.SkMarkerStack = type opaque
%class.sk_sp.159 = type { %class.SkBaseDevice* }
%class.SkBaseDevice = type { %class.SkRefCnt.base, %class.SkMatrixProvider, %class.SkMarkerStack*, %struct.SkImageInfo, %class.SkSurfaceProps, %class.SkM44, %class.SkM44 }
%class.SkMatrixProvider = type { i32 (...)**, %class.SkM44, %class.SkMatrix }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.160, i32, i32 }
%class.sk_sp.160 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt.161, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt.161 = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%struct.SkISize = type { i32, i32 }
%class.SkM44 = type { [16 x float] }
%"class.std::__1::unique_ptr.162" = type { %"class.std::__1::__compressed_pair.163" }
%"class.std::__1::__compressed_pair.163" = type { %"struct.std::__1::__compressed_pair_elem.164" }
%"struct.std::__1::__compressed_pair_elem.164" = type { %class.SkRasterHandleAllocator* }
%class.SkRasterHandleAllocator = type { i32 (...)** }
%class.SkSurface_Base = type opaque
%struct.SkIRect = type { i32, i32, i32, i32 }
%"class.std::__1::unique_ptr.168" = type { %"class.std::__1::__compressed_pair.169" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.170" }
%"struct.std::__1::__compressed_pair_elem.170" = type { %class.SkGlyphRunBuilder* }
%class.SkGlyphRunBuilder = type { i32, %class.SkAutoTMalloc, i32, %class.SkAutoTMalloc, %"class.std::__1::vector.171", %class.SkGlyphRunList, %"class.std::__1::vector.187" }
%"class.std::__1::vector.171" = type { %"class.std::__1::__vector_base.172" }
%"class.std::__1::__vector_base.172" = type { %class.SkGlyphRun*, %class.SkGlyphRun*, %"class.std::__1::__compressed_pair.175" }
%class.SkGlyphRun = type { %class.SkZip, %class.SkSpan, %class.SkSpan.173, %class.SkSpan.174, %class.SkFont }
%class.SkSpan = type { i8*, i64 }
%class.SkSpan.173 = type { i32*, i64 }
%class.SkSpan.174 = type { %struct.SkPoint*, i64 }
%"class.std::__1::__compressed_pair.175" = type { %"struct.std::__1::__compressed_pair_elem.176" }
%"struct.std::__1::__compressed_pair_elem.176" = type { %class.SkGlyphRun* }
%class.SkGlyphRunList = type { %class.SkSpan.180, %class.SkTextBlob*, %struct.SkRect, %struct.SkPoint }
%class.SkSpan.180 = type { %class.SkGlyphRun*, i64 }
%class.SkTextBlob = type { %class.SkNVRefCnt.181, %struct.SkRect, i32, %"struct.std::__1::atomic.182" }
%class.SkNVRefCnt.181 = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic.182" = type { %"struct.std::__1::__atomic_base.183" }
%"struct.std::__1::__atomic_base.183" = type { %"struct.std::__1::__atomic_base.184" }
%"struct.std::__1::__atomic_base.184" = type { %"struct.std::__1::__cxx_atomic_impl.185" }
%"struct.std::__1::__cxx_atomic_impl.185" = type { %"struct.std::__1::__cxx_atomic_base_impl.186" }
%"struct.std::__1::__cxx_atomic_base_impl.186" = type { i32 }
%"class.std::__1::vector.187" = type { %"class.std::__1::__vector_base.188" }
%"class.std::__1::__vector_base.188" = type { i16*, i16*, %"class.std::__1::__compressed_pair.189" }
%"class.std::__1::__compressed_pair.189" = type { %"struct.std::__1::__compressed_pair_elem.190" }
%"struct.std::__1::__compressed_pair_elem.190" = type { i16* }
%class.SkNoPixelsDevice = type { %class.SkBaseDevice, %struct.SkIRect, %class.SkSTArray.200 }
%class.SkSTArray.200 = type { %class.SkAlignedSTStorage.201, %class.SkTArray.202 }
%class.SkAlignedSTStorage.201 = type { [160 x i8] }
%class.SkTArray.202 = type { %"struct.SkNoPixelsDevice::ClipState"*, i64 }
%"struct.SkNoPixelsDevice::ClipState" = type <{ %class.SkConservativeClip, i32, [4 x i8] }>
%class.SkConservativeClip = type { %struct.SkIRect, i8, i8, %struct.SkIRect* }
%class.SkGlyphRunListPainter = type { %class.SkSurfaceProps, %class.SkSurfaceProps, i32, i32, %class.SkStrikeForGPUCacheInterface*, %class.SkDrawableGlyphBuffer, %class.SkSourceGlyphBuffer }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%class.SkTLazy = type { [40 x i8], %class.SkGlyph* }
%class.Deserializer = type { i8*, i64, i64 }
%"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData" = type { i64, i64, i64, i64, i64, i64 }
%class.sk_sp.243 = type { %"class.SkStrikeCache::Strike"* }
%class.GlyphTrackingDevice = type { %class.SkNoPixelsDevice, %class.SkStrikeServerImpl*, i8, %class.SkGlyphRunListPainter }
%class.GrRecordingContext = type opaque
%class.GrSurfaceDrawContext = type opaque
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%class.SkRegion = type { %struct.SkIRect, %"struct.SkRegion::RunHead"* }
%"struct.SkRegion::RunHead" = type opaque
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%struct.SkSamplingOptions = type { i8, %struct.SkCubicResampler, i32, i32 }
%struct.SkCubicResampler = type { float, float }
%"struct.SkCanvas::Lattice" = type { i32*, i32*, i8*, i32, i32, %struct.SkIRect*, i32* }
%class.SkVertices = type opaque
%struct.SkDrawShadowRec = type opaque
%struct.SkRSXform = type { float, float, float, float }
%"struct.SkCanvas::ImageSetEntry" = type <{ %class.sk_sp.293, %struct.SkRect, %struct.SkRect, i32, float, i32, i8, [3 x i8] }>
%class.sk_sp.293 = type { %class.SkImage* }
%class.SkDrawable = type opaque
%struct.GrContextOptions = type { i8, i32, i32, i32, %class.SkExecutor*, i8, i8, i8, i8, i8, i64, float, float, i32, i8, i8, i32, i32, i8, i8, i32, %"class.GrContextOptions::PersistentCache"*, i32, %"class.GrContextOptions::ShaderErrorHandler"*, i32, i32, i8, i8, %class.GrDriverBugWorkarounds }
%class.GrSDFTControl = type <{ float, float, i8, [3 x i8] }>
%class.SkGlyphRunPainterInterface = type { i32 (...)** }
%class.SkSpecialImage = type opaque
%"class.skif::Mapping" = type opaque
%class.sk_sp.294 = type { %class.SkSurface* }
%class.SkSurface = type { %class.SkRefCnt.base, %class.SkSurfaceProps, i32, i32, i32 }
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%"struct.SkBaseDevice::CreateInfo" = type { %struct.SkImageInfo, i32, i32, i8, %class.SkRasterHandleAllocator* }
%class.SkBitmap = type { %class.sk_sp.295, %class.SkPixmap, %class.sk_sp.296 }
%class.sk_sp.295 = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.sk_sp.296 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%class.SkImageFilterCache = type opaque
%class.DiscardableStrikePinner = type { %class.SkStrikePinner, i32, %class.sk_sp.212 }
%class.SkTypefaceProxy = type { %class.SkTypeface.base, i32, i32, i8, %class.sk_sp.212 }
%class.SkTypeface.base = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8 }>
%struct.SkFontArguments = type { i32, %"struct.SkFontArguments::VariationPosition" }
%"struct.SkFontArguments::VariationPosition" = type { %"struct.SkFontArguments::VariationPosition::Coordinate"*, i32 }
%"struct.SkFontArguments::VariationPosition::Coordinate" = type { i32, float }
%class.SkScalerContextProxy = type { %class.SkScalerContext, %class.sk_sp.212 }
%struct.SkAdvancedTypefaceMetrics = type { %class.SkString, %class.SkString, i32, i8, i8, i16, i16, i16, i16, i16, %struct.SkIRect }
%class.SkStreamAsset = type { %class.SkStreamSeekable }
%class.SkStreamSeekable = type { %class.SkStreamRewindable }
%class.SkStreamRewindable = type { %class.SkStream }
%class.SkStream = type { i32 (...)** }
%"struct.SkFontParameters::Variation::Axis" = type <{ i32, float, float, float, i16, [2 x i8] }>
%class.SkFontDescriptor = type { %class.SkString, %class.SkString, %class.SkString, %class.SkFontStyle, %"class.std::__1::unique_ptr.328", i32, i8, i32, %class.SkAutoSTMalloc }
%"class.std::__1::unique_ptr.328" = type { %"class.std::__1::__compressed_pair.329" }
%"class.std::__1::__compressed_pair.329" = type { %"struct.std::__1::__compressed_pair_elem.330" }
%"struct.std::__1::__compressed_pair_elem.330" = type { %class.SkStreamAsset* }
%class.SkAutoSTMalloc = type { %"struct.SkFontArguments::VariationPosition::Coordinate"*, %union.anon.334 }
%union.anon.334 = type { [8 x i32] }
%"class.SkTypeface::LocalizedStrings" = type { i32 (...)** }

$_ZN12SkTHashTableIN12RemoteStrike11MaskSummaryE15SkPackedGlyphIDNS0_17MaskSummaryTraitsEE3setES1_ = comdat any

$_ZN19SkSourceGlyphBuffer6rejectEm = comdat any

$_ZN10SkTHashSetIP12RemoteStrike10SkGoodHashE3addES1_ = comdat any

$_ZNK12RemoteStrike13getDescriptorEv = comdat any

$_ZN12RemoteStrikeD2Ev = comdat any

$_ZN12RemoteStrikeD0Ev = comdat any

$_ZNK12RemoteStrike12roundingSpecEv = comdat any

$_ZN12RemoteStrike18onAboutToExitScopeEv = comdat any

$_ZN18SkStrikeServerImplD2Ev = comdat any

$_ZN18SkStrikeServerImplD0Ev = comdat any

$_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm = comdat any

$_ZN8SkTArrayItLb0EE12checkReallocEiNS0_11ReallocTypeE = comdat any

$_ZN8SkTArrayI7SkPointLb0EE12checkReallocEiNS1_11ReallocTypeE = comdat any

$_ZN16SkNoPixelsDeviceC2ERK7SkIRectRK14SkSurfaceProps5sk_spI12SkColorSpaceE = comdat any

$_ZN19GlyphTrackingDeviceD2Ev = comdat any

$_ZN19GlyphTrackingDeviceD0Ev = comdat any

$_ZNK12SkRefCntBase16internal_disposeEv = comdat any

$_ZNK12SkBaseDevice15getRasterHandleEv = comdat any

$_ZNK12SkBaseDevice29localToDeviceHitsPixelCentersEv = comdat any

$_ZN12SkBaseDevice17validateDevBoundsERK7SkIRect = comdat any

$_ZN12SkBaseDevice29android_utils_clipWithStencilEv = comdat any

$_ZNK12SkBaseDevice16recordingContextEv = comdat any

$_ZN12SkBaseDevice18surfaceDrawContextEv = comdat any

$_ZNK16SkNoPixelsDevice10onClipIsAAEv = comdat any

$_ZNK16SkNoPixelsDevice16onClipIsWideOpenEv = comdat any

$_ZNK16SkNoPixelsDevice11onAsRgnClipEP8SkRegion = comdat any

$_ZNK16SkNoPixelsDevice15onDevClipBoundsEv = comdat any

$_ZN16SkNoPixelsDevice9drawPaintERK7SkPaint = comdat any

$_ZN16SkNoPixelsDevice10drawPointsEN8SkCanvas9PointModeEmPK7SkPointRK7SkPaint = comdat any

$_ZN16SkNoPixelsDevice8drawRectERK6SkRectRK7SkPaint = comdat any

$_ZN16SkNoPixelsDevice8drawOvalERK6SkRectRK7SkPaint = comdat any

$_ZN16SkNoPixelsDevice9drawRRectERK7SkRRectRK7SkPaint = comdat any

$_ZN16SkNoPixelsDevice8drawPathERK6SkPathRK7SkPaintb = comdat any

$_ZN16SkNoPixelsDevice13drawImageRectEPK7SkImagePK6SkRectRS4_RK17SkSamplingOptionsRK7SkPaintN8SkCanvas17SrcRectConstraintE = comdat any

$_ZN16SkNoPixelsDevice12drawVerticesEPK10SkVertices11SkBlendModeRK7SkPaint = comdat any

$_ZN12SkBaseDevice14drawAnnotationERK6SkRectPKcP6SkData = comdat any

$_ZN19GlyphTrackingDevice18onDrawGlyphRunListERK14SkGlyphRunListRK7SkPaint = comdat any

$_ZN16SkNoPixelsDevice10drawDeviceEP12SkBaseDeviceRK17SkSamplingOptionsRK7SkPaint = comdat any

$_ZN16SkNoPixelsDevice17drawFilteredImageERKN4skif7MappingEP14SkSpecialImagePK13SkImageFilterRK17SkSamplingOptionsRK7SkPaint = comdat any

$_ZN12SkBaseDevice12setImmutableEv = comdat any

$_ZN12SkBaseDevice12onPeekPixelsEP8SkPixmap = comdat any

$_ZN12SkBaseDevice14onAccessPixelsEP8SkPixmap = comdat any

$_ZN19GlyphTrackingDevice14onCreateDeviceERKN12SkBaseDevice10CreateInfoEPK7SkPaint = comdat any

$_ZNK16SkNoPixelsDevice16isNoPixelsDeviceEv = comdat any

$_ZN12SkBaseDevice36replaceBitmapBackendForRasterSurfaceERK8SkBitmap = comdat any

$_ZNK12SkBaseDevice27forceConservativeRasterClipEv = comdat any

$_ZN12SkBaseDevice19getImageFilterCacheEv = comdat any

$_ZThn16_N19GlyphTrackingDeviceD1Ev = comdat any

$_ZThn16_N19GlyphTrackingDeviceD0Ev = comdat any

$_ZThn16_NK12SkBaseDevice29localToDeviceHitsPixelCentersEv = comdat any

$_ZN8SkTArrayIN16SkNoPixelsDevice9ClipStateELb0EE12checkReallocEiNS2_11ReallocTypeE = comdat any

$_ZN12SkTHashTableIN12RemoteStrike11MaskSummaryE15SkPackedGlyphIDNS0_17MaskSummaryTraitsEE6resizeEi = comdat any

$_ZN12SkTHashTableIN12RemoteStrike11PathSummaryEtNS0_17PathSummaryTraitsEE6resizeEi = comdat any

$_ZN12SkTHashTableIN10SkTHashMapIj5sk_spI6SkDataE10SkGoodHashE4PairEjS6_E6resizeEi = comdat any

$_ZN12SkTHashTableIN10SkTHashMapIj5sk_spI6SkDataE10SkGoodHashE4PairEjS6_E12uncheckedSetEOS6_ = comdat any

$_ZN12SkAutoTArrayIN12SkTHashTableIN10SkTHashMapIj5sk_spI6SkDataE10SkGoodHashE4PairEjS7_E4SlotEEC2Ei = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPK12SkDescriptorNS_10unique_ptrI12RemoteStrikeNS_14default_deleteIS6_EEEEEENS_22__unordered_map_hasherIS4_SA_6MapOpsSC_Lb1EEENS_21__unordered_map_equalIS4_SA_SC_SC_Lb1EEENS_9allocatorISA_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeISA_PvEEEE = comdat any

$_ZN12SkTHashTableIP12RemoteStrikeS1_N10SkTHashSetIS1_10SkGoodHashE6TraitsEE6resizeEi = comdat any

$_ZN12SkTHashTableIjjN10SkTHashSetIj10SkGoodHashE6TraitsEE6resizeEi = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPK12SkDescriptorNS_10unique_ptrI12RemoteStrikeNS_14default_deleteIS6_EEEEEENS_22__unordered_map_hasherIS4_SA_6MapOpsSC_Lb1EEENS_21__unordered_map_equalIS4_SA_SC_SC_Lb1EEENS_9allocatorISA_EEE25__emplace_unique_key_argsIS4_JRKNS_21piecewise_construct_tENS_5tupleIJRKS4_EEENSN_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISA_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPK12SkDescriptorNS_10unique_ptrI12RemoteStrikeNS_14default_deleteIS6_EEEEEENS_22__unordered_map_hasherIS4_SA_6MapOpsSC_Lb1EEENS_21__unordered_map_equalIS4_SA_SC_SC_Lb1EEENS_9allocatorISA_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPK12SkDescriptorNS_10unique_ptrI12RemoteStrikeNS_14default_deleteIS6_EEEEEENS_22__unordered_map_hasherIS4_SA_6MapOpsSC_Lb1EEENS_21__unordered_map_equalIS4_SA_SC_SC_Lb1EEENS_9allocatorISA_EEE8__rehashEm = comdat any

$_ZN23DiscardableStrikePinnerD2Ev = comdat any

$_ZN23DiscardableStrikePinnerD0Ev = comdat any

$_ZN23DiscardableStrikePinner9canDeleteEv = comdat any

$_ZN15SkTypefaceProxyD2Ev = comdat any

$_ZN15SkTypefaceProxyD0Ev = comdat any

$_ZNK12SkWeakRefCnt16internal_disposeEv = comdat any

$_ZNK12SkWeakRefCnt12weak_disposeEv = comdat any

$_ZNK15SkTypefaceProxy11onMakeCloneERK15SkFontArguments = comdat any

$_ZNK15SkTypefaceProxy21onCreateScalerContextERK22SkScalerContextEffectsPK12SkDescriptor = comdat any

$_ZNK15SkTypefaceProxy11onFilterRecEP18SkScalerContextRec = comdat any

$_ZNK15SkTypefaceProxy20onGetAdvancedMetricsEv = comdat any

$_ZNK15SkTypefaceProxy23getPostScriptGlyphNamesEP8SkString = comdat any

$_ZNK15SkTypefaceProxy20getGlyphToUnicodeMapEPi = comdat any

$_ZNK15SkTypefaceProxy12onOpenStreamEPi = comdat any

$_ZNK15SkTypefaceProxy28onGetVariationDesignPositionEPN15SkFontArguments17VariationPosition10CoordinateEi = comdat any

$_ZNK15SkTypefaceProxy30onGetVariationDesignParametersEPN16SkFontParameters9Variation4AxisEi = comdat any

$_ZNK15SkTypefaceProxy19onGetFontDescriptorEP16SkFontDescriptorPb = comdat any

$_ZNK15SkTypefaceProxy15onCharsToGlyphsEPKiiPt = comdat any

$_ZNK15SkTypefaceProxy13onCountGlyphsEv = comdat any

$_ZNK15SkTypefaceProxy9onGetUPEMEv = comdat any

$_ZNK15SkTypefaceProxy15onGetFamilyNameEP8SkString = comdat any

$_ZNK15SkTypefaceProxy19onGetPostScriptNameEP8SkString = comdat any

$_ZNK15SkTypefaceProxy26onCreateFamilyNameIteratorEv = comdat any

$_ZNK15SkTypefaceProxy14onGetTableTagsEPj = comdat any

$_ZNK15SkTypefaceProxy14onGetTableDataEjmmPv = comdat any

$_ZNK15SkTypefaceProxy14onGetCTFontRefEv = comdat any

$_ZN12SkTHashTableIN10SkTHashMapIj5sk_spI10SkTypefaceE10SkGoodHashE4PairEjS6_E6resizeEi = comdat any

$_ZN12SkTHashTableIN10SkTHashMapIj5sk_spI10SkTypefaceE10SkGoodHashE4PairEjS6_E12uncheckedSetEOS6_ = comdat any

$_ZTV19GlyphTrackingDevice = comdat any

$_ZTV23DiscardableStrikePinner = comdat any

$_ZTV15SkTypefaceProxy = comdat any

@_ZTV12RemoteStrike = hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.RemoteStrike*)* @_ZN12RemoteStrikeD2Ev to i8*), i8* bitcast (void (%class.RemoteStrike*)* @_ZN12RemoteStrikeD0Ev to i8*), i8* bitcast (%class.SkDescriptor* (%class.RemoteStrike*)* @_ZNK12RemoteStrike13getDescriptorEv to i8*), i8* bitcast (void (%class.RemoteStrike*, %class.SkDrawableGlyphBuffer*, %class.SkSourceGlyphBuffer*)* @_ZN12RemoteStrike21prepareForMaskDrawingEP21SkDrawableGlyphBufferP19SkSourceGlyphBuffer to i8*), i8* bitcast (void (%class.RemoteStrike*, %class.SkDrawableGlyphBuffer*, %class.SkSourceGlyphBuffer*)* @_ZN12RemoteStrike21prepareForSDFTDrawingEP21SkDrawableGlyphBufferP19SkSourceGlyphBuffer to i8*), i8* bitcast (void (%class.RemoteStrike*, %class.SkDrawableGlyphBuffer*, %class.SkSourceGlyphBuffer*)* @_ZN12RemoteStrike21prepareForPathDrawingEP21SkDrawableGlyphBufferP19SkSourceGlyphBuffer to i8*), i8* bitcast (%struct.SkGlyphPositionRoundingSpec* (%class.RemoteStrike*)* @_ZNK12RemoteStrike12roundingSpecEv to i8*), i8* bitcast (void (%class.RemoteStrike*)* @_ZN12RemoteStrike18onAboutToExitScopeEv to i8*)] }, align 8
@_ZTV18SkStrikeServerImpl = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkStrikeServerImpl*)* @_ZN18SkStrikeServerImplD2Ev to i8*), i8* bitcast (void (%class.SkStrikeServerImpl*)* @_ZN18SkStrikeServerImplD0Ev to i8*), i8* bitcast (%class.SkStrikeForGPU* (%class.SkStrikeServerImpl*, %class.SkDescriptor*, %struct.SkScalerContextEffects*, %class.SkTypeface*)* @_ZN18SkStrikeServerImpl24findOrCreateScopedStrikeERK12SkDescriptorRK22SkScalerContextEffectsRK10SkTypeface to i8*)] }, align 8
@.str = private unnamed_addr constant [25 x i8] c"disabled-by-default-skia\00", align 1
@.str.1 = private unnamed_addr constant [11 x i8] c"RecForDesc\00", align 1
@.str.2 = private unnamed_addr constant [4 x i8] c"rec\00", align 1
@.str.3 = private unnamed_addr constant [55 x i8] c"../../third_party/skia/src/core/SkRemoteGlyphCache.cpp\00", align 1
@.str.4 = private unnamed_addr constant [37 x i8] c"Bad font data serialization line: %d\00", align 1
@.str.8 = private unnamed_addr constant [9 x i8] c"    Rec\0A\00", align 1
@.str.9 = private unnamed_addr constant [61 x i8] c"      textsize %a prescale %a preskew %a post [%a %a %a %a]\0A\00", align 1
@.str.10 = private unnamed_addr constant [61 x i8] c"      frame %g miter %g format %d join %d cap %d flags %#hx\0A\00", align 1
@.str.11 = private unnamed_addr constant [64 x i8] c"      lum bits %x, device gamma %d, paint gamma %d contrast %d\0A\00", align 1
@_ZTV19GlyphTrackingDevice = linkonce_odr hidden unnamed_addr constant { [63 x i8*], [6 x i8*] } { [63 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GlyphTrackingDevice*)* @_ZN19GlyphTrackingDeviceD2Ev to i8*), i8* bitcast (void (%class.GlyphTrackingDevice*)* @_ZN19GlyphTrackingDeviceD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (i8* (%class.SkBaseDevice*)* @_ZNK12SkBaseDevice15getRasterHandleEv to i8*), i8* bitcast (i1 (%class.SkBaseDevice*, i32, %class.SkM44*)* @_ZNK12SkBaseDevice16getLocalToMarkerEjP5SkM44 to i8*), i8* bitcast (i1 (%class.SkBaseDevice*)* @_ZNK12SkBaseDevice29localToDeviceHitsPixelCentersEv to i8*), i8* bitcast (void (%class.SkBaseDevice*, %struct.SkIRect*)* @_ZN12SkBaseDevice17validateDevBoundsERK7SkIRect to i8*), i8* bitcast (i1 (%class.SkBaseDevice*)* @_ZN12SkBaseDevice29android_utils_clipWithStencilEv to i8*), i8* bitcast (%class.GrRecordingContext* (%class.SkBaseDevice*)* @_ZNK12SkBaseDevice16recordingContextEv to i8*), i8* bitcast (%class.GrSurfaceDrawContext* (%class.SkBaseDevice*)* @_ZN12SkBaseDevice18surfaceDrawContextEv to i8*), i8* bitcast (void (%class.SkNoPixelsDevice*)* @_ZN16SkNoPixelsDevice6onSaveEv to i8*), i8* bitcast (void (%class.SkNoPixelsDevice*)* @_ZN16SkNoPixelsDevice9onRestoreEv to i8*), i8* bitcast (void (%class.SkNoPixelsDevice*, %struct.SkRect*, i32, i1)* @_ZN16SkNoPixelsDevice10onClipRectERK6SkRect8SkClipOpb to i8*), i8* bitcast (void (%class.SkNoPixelsDevice*, %class.SkRRect*, i32, i1)* @_ZN16SkNoPixelsDevice11onClipRRectERK7SkRRect8SkClipOpb to i8*), i8* bitcast (void (%class.SkNoPixelsDevice*, %class.SkPath*, i32, i1)* @_ZN16SkNoPixelsDevice10onClipPathERK6SkPath8SkClipOpb to i8*), i8* bitcast (void (%class.SkNoPixelsDevice*, %class.sk_sp.128*)* @_ZN16SkNoPixelsDevice12onClipShaderE5sk_spI8SkShaderE to i8*), i8* bitcast (void (%class.SkNoPixelsDevice*, %class.SkRegion*, i32)* @_ZN16SkNoPixelsDevice12onClipRegionERK8SkRegion8SkClipOp to i8*), i8* bitcast (void (%class.SkNoPixelsDevice*, %struct.SkIRect*)* @_ZN16SkNoPixelsDevice13onReplaceClipERK7SkIRect to i8*), i8* bitcast (void (%class.SkNoPixelsDevice*, %struct.SkIRect*)* @_ZN16SkNoPixelsDevice26onSetDeviceClipRestrictionEP7SkIRect to i8*), i8* bitcast (i1 (%class.SkNoPixelsDevice*)* @_ZNK16SkNoPixelsDevice10onClipIsAAEv to i8*), i8* bitcast (i1 (%class.SkNoPixelsDevice*)* @_ZNK16SkNoPixelsDevice16onClipIsWideOpenEv to i8*), i8* bitcast (void (%class.SkNoPixelsDevice*, %class.SkRegion*)* @_ZNK16SkNoPixelsDevice11onAsRgnClipEP8SkRegion to i8*), i8* bitcast (i32 (%class.SkNoPixelsDevice*)* @_ZNK16SkNoPixelsDevice13onGetClipTypeEv to i8*), i8* bitcast ({ i64, i64 } (%class.SkNoPixelsDevice*)* @_ZNK16SkNoPixelsDevice15onDevClipBoundsEv to i8*), i8* bitcast (void (%class.SkNoPixelsDevice*, %class.SkPaint*)* @_ZN16SkNoPixelsDevice9drawPaintERK7SkPaint to i8*), i8* bitcast (void (%class.SkNoPixelsDevice*, i32, i64, %struct.SkPoint*, %class.SkPaint*)* @_ZN16SkNoPixelsDevice10drawPointsEN8SkCanvas9PointModeEmPK7SkPointRK7SkPaint to i8*), i8* bitcast (void (%class.SkNoPixelsDevice*, %struct.SkRect*, %class.SkPaint*)* @_ZN16SkNoPixelsDevice8drawRectERK6SkRectRK7SkPaint to i8*), i8* bitcast (void (%class.SkBaseDevice*, %class.SkRegion*, %class.SkPaint*)* @_ZN12SkBaseDevice10drawRegionERK8SkRegionRK7SkPaint to i8*), i8* bitcast (void (%class.SkNoPixelsDevice*, %struct.SkRect*, %class.SkPaint*)* @_ZN16SkNoPixelsDevice8drawOvalERK6SkRectRK7SkPaint to i8*), i8* bitcast (void (%class.SkBaseDevice*, %struct.SkRect*, float, float, i1, %class.SkPaint*)* @_ZN12SkBaseDevice7drawArcERK6SkRectffbRK7SkPaint to i8*), i8* bitcast (void (%class.SkNoPixelsDevice*, %class.SkRRect*, %class.SkPaint*)* @_ZN16SkNoPixelsDevice9drawRRectERK7SkRRectRK7SkPaint to i8*), i8* bitcast (void (%class.SkBaseDevice*, %class.SkRRect*, %class.SkRRect*, %class.SkPaint*)* @_ZN12SkBaseDevice10drawDRRectERK7SkRRectS2_RK7SkPaint to i8*), i8* bitcast (void (%class.SkNoPixelsDevice*, %class.SkPath*, %class.SkPaint*, i1)* @_ZN16SkNoPixelsDevice8drawPathERK6SkPathRK7SkPaintb to i8*), i8* bitcast (void (%class.SkNoPixelsDevice*, %class.SkImage*, %struct.SkRect*, %struct.SkRect*, %struct.SkSamplingOptions*, %class.SkPaint*, i32)* @_ZN16SkNoPixelsDevice13drawImageRectEPK7SkImagePK6SkRectRS4_RK17SkSamplingOptionsRK7SkPaintN8SkCanvas17SrcRectConstraintE to i8*), i8* bitcast (void (%class.SkBaseDevice*, %class.SkImage*, %"struct.SkCanvas::Lattice"*, %struct.SkRect*, i32, %class.SkPaint*)* @_ZN12SkBaseDevice16drawImageLatticeEPK7SkImageRKN8SkCanvas7LatticeERK6SkRect12SkFilterModeRK7SkPaint to i8*), i8* bitcast (void (%class.SkNoPixelsDevice*, %class.SkVertices*, i32, %class.SkPaint*)* @_ZN16SkNoPixelsDevice12drawVerticesEPK10SkVertices11SkBlendModeRK7SkPaint to i8*), i8* bitcast (void (%class.SkBaseDevice*, %class.SkPath*, %struct.SkDrawShadowRec*)* @_ZN12SkBaseDevice10drawShadowERK6SkPathRK15SkDrawShadowRec to i8*), i8* bitcast (void (%class.SkBaseDevice*, %struct.SkPoint*, i32*, %struct.SkPoint*, i32, %class.SkPaint*)* @_ZN12SkBaseDevice9drawPatchEPK7SkPointPKjS2_11SkBlendModeRK7SkPaint to i8*), i8* bitcast (void (%class.SkBaseDevice*, %class.SkImage*, %struct.SkRSXform*, %struct.SkRect*, i32*, i32, i32, %struct.SkSamplingOptions*, %class.SkPaint*)* @_ZN12SkBaseDevice9drawAtlasEPK7SkImagePK9SkRSXformPK6SkRectPKji11SkBlendModeRK17SkSamplingOptionsRK7SkPaint to i8*), i8* bitcast (void (%class.SkBaseDevice*, %struct.SkRect*, i8*, %class.SkData*)* @_ZN12SkBaseDevice14drawAnnotationERK6SkRectPKcP6SkData to i8*), i8* bitcast (void (%class.SkBaseDevice*, %struct.SkRect*, %struct.SkPoint*, i32, %struct.SkRGBA4f*, i32)* @_ZN12SkBaseDevice14drawEdgeAAQuadERK6SkRectPK7SkPointN8SkCanvas11QuadAAFlagsERK8SkRGBA4fIL11SkAlphaType3EE11SkBlendMode to i8*), i8* bitcast (void (%class.SkBaseDevice*, %"struct.SkCanvas::ImageSetEntry"*, i32, %struct.SkPoint*, %class.SkMatrix*, %struct.SkSamplingOptions*, %class.SkPaint*, i32)* @_ZN12SkBaseDevice18drawEdgeAAImageSetEPKN8SkCanvas13ImageSetEntryEiPK7SkPointPK8SkMatrixRK17SkSamplingOptionsRK7SkPaintNS0_17SrcRectConstraintE to i8*), i8* bitcast (void (%class.SkBaseDevice*, %class.SkDrawable*, %class.SkMatrix*, %class.SkCanvas*)* @_ZN12SkBaseDevice12drawDrawableEP10SkDrawablePK8SkMatrixP8SkCanvas to i8*), i8* bitcast (void (%class.GlyphTrackingDevice*, %class.SkGlyphRunList*, %class.SkPaint*)* @_ZN19GlyphTrackingDevice18onDrawGlyphRunListERK14SkGlyphRunListRK7SkPaint to i8*), i8* bitcast (void (%class.SkNoPixelsDevice*, %class.SkBaseDevice*, %struct.SkSamplingOptions*, %class.SkPaint*)* @_ZN16SkNoPixelsDevice10drawDeviceEP12SkBaseDeviceRK17SkSamplingOptionsRK7SkPaint to i8*), i8* bitcast (void (%class.SkBaseDevice*, %class.SkSpecialImage*, %class.SkMatrix*, %struct.SkSamplingOptions*, %class.SkPaint*)* @_ZN12SkBaseDevice11drawSpecialEP14SkSpecialImageRK8SkMatrixRK17SkSamplingOptionsRK7SkPaint to i8*), i8* bitcast (void (%class.SkNoPixelsDevice*, %"class.skif::Mapping"*, %class.SkSpecialImage*, %class.SkImageFilter*, %struct.SkSamplingOptions*, %class.SkPaint*)* @_ZN16SkNoPixelsDevice17drawFilteredImageERKN4skif7MappingEP14SkSpecialImagePK13SkImageFilterRK17SkSamplingOptionsRK7SkPaint to i8*), i8* bitcast (void ()* @_ZN12SkBaseDevice11makeSpecialERK8SkBitmap to i8*), i8* bitcast (void ()* @_ZN12SkBaseDevice11makeSpecialEPK7SkImage to i8*), i8* bitcast (void ()* @_ZN12SkBaseDevice11snapSpecialERK7SkIRectb to i8*), i8* bitcast (void (%class.SkBaseDevice*)* @_ZN12SkBaseDevice12setImmutableEv to i8*), i8* bitcast (void (%class.sk_sp.294*, %class.SkBaseDevice*, %struct.SkImageInfo*, %class.SkSurfaceProps*)* @_ZN12SkBaseDevice11makeSurfaceERK11SkImageInfoRK14SkSurfaceProps to i8*), i8* bitcast (i1 (%class.SkBaseDevice*, %class.SkPixmap*)* @_ZN12SkBaseDevice12onPeekPixelsEP8SkPixmap to i8*), i8* bitcast (i1 (%class.SkBaseDevice*, %class.SkPixmap*, i32, i32)* @_ZN12SkBaseDevice12onReadPixelsERK8SkPixmapii to i8*), i8* bitcast (i1 (%class.SkBaseDevice*, %class.SkPixmap*, i32, i32)* @_ZN12SkBaseDevice13onWritePixelsERK8SkPixmapii to i8*), i8* bitcast (i1 (%class.SkBaseDevice*, %class.SkPixmap*)* @_ZN12SkBaseDevice14onAccessPixelsEP8SkPixmap to i8*), i8* bitcast (%class.SkBaseDevice* (%class.GlyphTrackingDevice*, %"struct.SkBaseDevice::CreateInfo"*, %class.SkPaint*)* @_ZN19GlyphTrackingDevice14onCreateDeviceERKN12SkBaseDevice10CreateInfoEPK7SkPaint to i8*), i8* bitcast (i1 (%class.SkNoPixelsDevice*)* @_ZNK16SkNoPixelsDevice16isNoPixelsDeviceEv to i8*), i8* bitcast (void (%class.SkBaseDevice*, %class.SkBitmap*)* @_ZN12SkBaseDevice36replaceBitmapBackendForRasterSurfaceERK8SkBitmap to i8*), i8* bitcast (i1 (%class.SkBaseDevice*)* @_ZNK12SkBaseDevice27forceConservativeRasterClipEv to i8*), i8* bitcast (%class.SkImageFilterCache* (%class.SkBaseDevice*)* @_ZN12SkBaseDevice19getImageFilterCacheEv to i8*)], [6 x i8*] [i8* inttoptr (i64 -16 to i8*), i8* null, i8* bitcast (void (%class.GlyphTrackingDevice*)* @_ZThn16_N19GlyphTrackingDeviceD1Ev to i8*), i8* bitcast (void (%class.GlyphTrackingDevice*)* @_ZThn16_N19GlyphTrackingDeviceD0Ev to i8*), i8* bitcast (i1 (%class.SkBaseDevice*, i32, %class.SkM44*)* @_ZThn16_NK12SkBaseDevice16getLocalToMarkerEjP5SkM44 to i8*), i8* bitcast (i1 (%class.SkBaseDevice*)* @_ZThn16_NK12SkBaseDevice29localToDeviceHitsPixelCentersEv to i8*)] }, comdat, align 8
@_ZTV16SkNoPixelsDevice = external unnamed_addr constant { [63 x i8*], [6 x i8*] }, align 8
@constinit = private unnamed_addr constant [16 x float] [float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00], align 4
@_ZTV12SkBaseDevice = external unnamed_addr constant { [63 x i8*], [6 x i8*] }, align 8
@__const._ZN19GlyphTrackingDevice18onDrawGlyphRunListERK14SkGlyphRunListRK7SkPaint.ctxOptions = private unnamed_addr constant { i8, [3 x i8], i32, i32, i32, %class.SkExecutor*, i8, i8, i8, i8, i8, [3 x i8], i64, float, float, i32, i8, i8, [2 x i8], i32, i32, i8, i8, [2 x i8], i32, %"class.GrContextOptions::PersistentCache"*, i32, [4 x i8], %"class.GrContextOptions::ShaderErrorHandler"*, i32, i32, i8, i8, %class.GrDriverBugWorkarounds } { i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766, i32 -1431655766, i32 -1431655766, %class.SkExecutor* inttoptr (i64 -6148914691236517206 to %class.SkExecutor*), i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, [3 x i8] c"\AA\AA\AA", i64 -6148914691236517206, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, i32 -1431655766, i8 -86, i8 -86, [2 x i8] c"\AA\AA", i32 -1431655766, i32 -1431655766, i8 -86, i8 -86, [2 x i8] c"\AA\AA", i32 -1431655766, %"class.GrContextOptions::PersistentCache"* inttoptr (i64 -6148914691236517206 to %"class.GrContextOptions::PersistentCache"*), i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %"class.GrContextOptions::ShaderErrorHandler"* inttoptr (i64 -6148914691236517206 to %"class.GrContextOptions::ShaderErrorHandler"*), i32 -1431655766, i32 -1431655766, i8 -86, i8 -86, %class.GrDriverBugWorkarounds { i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86 } }, align 8
@.str.12 = private unnamed_addr constant [11 x i8] c"Cache Diff\00", align 1
@_ZN6SkOpts7hash_fnE = external local_unnamed_addr global i32 (i8*, i64, i32)*, align 8
@_ZNSt3__1L19piecewise_constructE = internal constant %"struct.std::__1::piecewise_construct_t" undef, align 1
@_ZTV23DiscardableStrikePinner = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.DiscardableStrikePinner*)* @_ZN23DiscardableStrikePinnerD2Ev to i8*), i8* bitcast (void (%class.DiscardableStrikePinner*)* @_ZN23DiscardableStrikePinnerD0Ev to i8*), i8* bitcast (i1 (%class.DiscardableStrikePinner*)* @_ZN23DiscardableStrikePinner9canDeleteEv to i8*)] }, comdat, align 8
@_ZTV15SkTypefaceProxy = linkonce_odr hidden unnamed_addr constant { [28 x i8*] } { [28 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkTypefaceProxy*)* @_ZN15SkTypefaceProxyD2Ev to i8*), i8* bitcast (void (%class.SkTypefaceProxy*)* @_ZN15SkTypefaceProxyD0Ev to i8*), i8* bitcast (void (%class.SkWeakRefCnt*)* @_ZNK12SkWeakRefCnt16internal_disposeEv to i8*), i8* bitcast (void (%class.SkWeakRefCnt*)* @_ZNK12SkWeakRefCnt12weak_disposeEv to i8*), i8* bitcast (void (%class.sk_sp.1*, %class.SkTypefaceProxy*, %struct.SkFontArguments*)* @_ZNK15SkTypefaceProxy11onMakeCloneERK15SkFontArguments to i8*), i8* bitcast (%class.SkScalerContext* (%class.SkTypefaceProxy*, %struct.SkScalerContextEffects*, %class.SkDescriptor*)* @_ZNK15SkTypefaceProxy21onCreateScalerContextERK22SkScalerContextEffectsPK12SkDescriptor to i8*), i8* bitcast (void (%class.SkTypefaceProxy*, %struct.SkScalerContextRec*)* @_ZNK15SkTypefaceProxy11onFilterRecEP18SkScalerContextRec to i8*), i8* bitcast (%struct.SkAdvancedTypefaceMetrics* (%class.SkTypefaceProxy*)* @_ZNK15SkTypefaceProxy20onGetAdvancedMetricsEv to i8*), i8* bitcast (void (%class.SkTypefaceProxy*, %class.SkString*)* @_ZNK15SkTypefaceProxy23getPostScriptGlyphNamesEP8SkString to i8*), i8* bitcast (void (%class.SkTypefaceProxy*, i32*)* @_ZNK15SkTypefaceProxy20getGlyphToUnicodeMapEPi to i8*), i8* bitcast (%class.SkStreamAsset* (%class.SkTypefaceProxy*, i32*)* @_ZNK15SkTypefaceProxy12onOpenStreamEPi to i8*), i8* bitcast (i32 (%class.SkTypefaceProxy*, %"struct.SkFontArguments::VariationPosition::Coordinate"*, i32)* @_ZNK15SkTypefaceProxy28onGetVariationDesignPositionEPN15SkFontArguments17VariationPosition10CoordinateEi to i8*), i8* bitcast (i32 (%class.SkTypefaceProxy*, %"struct.SkFontParameters::Variation::Axis"*, i32)* @_ZNK15SkTypefaceProxy30onGetVariationDesignParametersEPN16SkFontParameters9Variation4AxisEi to i8*), i8* bitcast (void (%class.SkTypefaceProxy*, %class.SkFontDescriptor*, i8*)* @_ZNK15SkTypefaceProxy19onGetFontDescriptorEP16SkFontDescriptorPb to i8*), i8* bitcast (void (%class.SkTypefaceProxy*, i32*, i32, i16*)* @_ZNK15SkTypefaceProxy15onCharsToGlyphsEPKiiPt to i8*), i8* bitcast (i32 (%class.SkTypefaceProxy*)* @_ZNK15SkTypefaceProxy13onCountGlyphsEv to i8*), i8* bitcast (i32 (%class.SkTypefaceProxy*)* @_ZNK15SkTypefaceProxy9onGetUPEMEv to i8*), i8* bitcast (i1 (%class.SkTypeface*, i16*, i32, i32*)* @_ZNK10SkTypeface27onGetKerningPairAdjustmentsEPKtiPi to i8*), i8* bitcast (void (%class.SkTypefaceProxy*, %class.SkString*)* @_ZNK15SkTypefaceProxy15onGetFamilyNameEP8SkString to i8*), i8* bitcast (i1 (%class.SkTypefaceProxy*, %class.SkString*)* @_ZNK15SkTypefaceProxy19onGetPostScriptNameEP8SkString to i8*), i8* bitcast (%"class.SkTypeface::LocalizedStrings"* (%class.SkTypefaceProxy*)* @_ZNK15SkTypefaceProxy26onCreateFamilyNameIteratorEv to i8*), i8* bitcast (i32 (%class.SkTypefaceProxy*, i32*)* @_ZNK15SkTypefaceProxy14onGetTableTagsEPj to i8*), i8* bitcast (i64 (%class.SkTypefaceProxy*, i32, i64, i64, i8*)* @_ZNK15SkTypefaceProxy14onGetTableDataEjmmPv to i8*), i8* bitcast (void (%class.sk_sp*, %class.SkTypeface*, i32)* @_ZNK10SkTypeface15onCopyTableDataEj to i8*), i8* bitcast (i1 (%class.SkTypeface*, %struct.SkRect*)* @_ZNK10SkTypeface15onComputeBoundsEP6SkRect to i8*), i8* bitcast (i8* (%class.SkTypefaceProxy*)* @_ZNK15SkTypefaceProxy14onGetCTFontRefEv to i8*)] }, comdat, align 8
@.str.13 = private unnamed_addr constant [52 x i8] c"../../third_party/skia/src/core/SkTypeface_remote.h\00", align 1
@.str.14 = private unnamed_addr constant [24 x i8] c"Should never be called.\00", align 1
@.str.15 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@_ZZN18SkStrikeServerImpl16getOrCreateCacheERK12SkDescriptorRK10SkTypeface22SkScalerContextEffectsE28trace_event_unique_atomic765.0.0 = internal unnamed_addr global i64 0, align 8

@_ZN12RemoteStrikeC1ERK12SkDescriptorNSt3__110unique_ptrI15SkScalerContextNS3_14default_deleteIS5_EEEEj = hidden unnamed_addr alias void (%class.RemoteStrike*, %class.SkDescriptor*, %class.SkScalerContext*, i32), void (%class.RemoteStrike*, %class.SkDescriptor*, %class.SkScalerContext*, i32)* @_ZN12RemoteStrikeC2ERK12SkDescriptorNSt3__110unique_ptrI15SkScalerContextNS3_14default_deleteIS5_EEEEj
@_ZN18SkStrikeServerImplC1EPN14SkStrikeServer24DiscardableHandleManagerE = hidden unnamed_addr alias void (%class.SkStrikeServerImpl*, %"class.SkStrikeServer::DiscardableHandleManager"*), void (%class.SkStrikeServerImpl*, %"class.SkStrikeServer::DiscardableHandleManager"*)* @_ZN18SkStrikeServerImplC2EPN14SkStrikeServer24DiscardableHandleManagerE
@_ZN14SkStrikeServerC1EPNS_24DiscardableHandleManagerE = hidden unnamed_addr alias void (%class.SkStrikeServer*, %"class.SkStrikeServer::DiscardableHandleManager"*), void (%class.SkStrikeServer*, %"class.SkStrikeServer::DiscardableHandleManager"*)* @_ZN14SkStrikeServerC2EPNS_24DiscardableHandleManagerE
@_ZN14SkStrikeServerD1Ev = hidden unnamed_addr alias void (%class.SkStrikeServer*), void (%class.SkStrikeServer*)* @_ZN14SkStrikeServerD2Ev
@_ZN18SkStrikeClientImplC1E5sk_spIN14SkStrikeClient24DiscardableHandleManagerEEbP13SkStrikeCache = hidden unnamed_addr alias void (%class.SkStrikeClientImpl*, %class.sk_sp.212*, i1, %class.SkStrikeCache*), void (%class.SkStrikeClientImpl*, %class.sk_sp.212*, i1, %class.SkStrikeCache*)* @_ZN18SkStrikeClientImplC2E5sk_spIN14SkStrikeClient24DiscardableHandleManagerEEbP13SkStrikeCache
@_ZN14SkStrikeClientC1E5sk_spINS_24DiscardableHandleManagerEEbP13SkStrikeCache = hidden unnamed_addr alias void (%class.SkStrikeClient*, %class.sk_sp.212*, i1, %class.SkStrikeCache*), void (%class.SkStrikeClient*, %class.sk_sp.212*, i1, %class.SkStrikeCache*)* @_ZN14SkStrikeClientC2E5sk_spINS_24DiscardableHandleManagerEEbP13SkStrikeCache
@_ZN14SkStrikeClientD1Ev = hidden unnamed_addr alias void (%class.SkStrikeClient*), void (%class.SkStrikeClient*)* @_ZN14SkStrikeClientD2Ev

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_Z3padmm(i64, i64) local_unnamed_addr #0 {
  %3 = add i64 %0, -1
  %4 = add i64 %3, %1
  %5 = sub i64 0, %1
  %6 = and i64 %4, %5
  ret i64 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_Z29SkFuzzDeserializeSkDescriptor5sk_spI6SkDataEP16SkAutoDescriptor(%class.sk_sp* nocapture readonly, %class.SkAutoDescriptor*) local_unnamed_addr #1 {
  %3 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  %4 = load %class.SkData*, %class.SkData** %3, align 8
  %5 = getelementptr inbounds %class.SkData, %class.SkData* %4, i64 0, i32 3
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %class.SkData, %class.SkData* %4, i64 0, i32 4
  %8 = load i64, i64* %7, align 8
  %9 = icmp ult i64 %8, 4
  %10 = icmp eq i8* %6, null
  %11 = or i1 %10, %9
  br i1 %11, label %37, label %12

12:                                               ; preds = %2
  %13 = bitcast i8* %6 to i32*
  %14 = load i32, i32* %13, align 1
  %15 = icmp ult i32 %14, 12
  br i1 %15, label %37, label %16

16:                                               ; preds = %12
  %17 = add i32 %14, 3
  %18 = and i32 %17, -4
  %19 = icmp eq i32 %14, %18
  br i1 %19, label %20, label %37

20:                                               ; preds = %16
  %21 = zext i32 %14 to i64
  %22 = add i64 %8, -4
  %23 = icmp ult i64 %22, %21
  br i1 %23, label %37, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds i8, i8* %6, i64 4
  %26 = icmp eq i8* %25, null
  br i1 %26, label %37, label %27

27:                                               ; preds = %24
  tail call void @_ZN16SkAutoDescriptor5resetEm(%class.SkAutoDescriptor* %1, i64 %21) #16
  %28 = getelementptr inbounds %class.SkAutoDescriptor, %class.SkAutoDescriptor* %1, i64 0, i32 0
  %29 = bitcast %class.SkAutoDescriptor* %1 to i8**
  %30 = load i8*, i8** %29, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %30, i8* nonnull align 1 %25, i64 %21, i1 false) #16
  %31 = load %class.SkDescriptor*, %class.SkDescriptor** %28, align 8
  %32 = getelementptr inbounds %class.SkDescriptor, %class.SkDescriptor* %31, i64 0, i32 1
  %33 = load i32, i32* %32, align 4
  %34 = icmp ugt i32 %33, %14
  br i1 %34, label %37, label %35

35:                                               ; preds = %27
  %36 = tail call zeroext i1 @_ZNK12SkDescriptor7isValidEv(%class.SkDescriptor* %31) #16
  br label %37

37:                                               ; preds = %2, %12, %16, %20, %24, %27, %35
  %38 = phi i1 [ false, %12 ], [ false, %16 ], [ %36, %35 ], [ false, %24 ], [ false, %27 ], [ false, %2 ], [ false, %20 ]
  ret i1 %38
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK6MapOpsclEPK12SkDescriptor(%struct.MapOps* nocapture readnone, %class.SkDescriptor* nocapture readonly) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %class.SkDescriptor, %class.SkDescriptor* %1, i64 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = zext i32 %4 to i64
  ret i64 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK6MapOpsclEPK12SkDescriptorS2_(%struct.MapOps* nocapture readnone, %class.SkDescriptor*, %class.SkDescriptor*) local_unnamed_addr #1 align 2 {
  %4 = tail call zeroext i1 @_ZNK12SkDescriptoreqERKS_(%class.SkDescriptor* %1, %class.SkDescriptor* dereferenceable(12) %2) #16
  ret i1 %4
}

declare zeroext i1 @_ZNK12SkDescriptoreqERKS_(%class.SkDescriptor*, %class.SkDescriptor* dereferenceable(12)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12RemoteStrikeC2ERK12SkDescriptorNSt3__110unique_ptrI15SkScalerContextNS3_14default_deleteIS5_EEEEj(%class.RemoteStrike*, %class.SkDescriptor* dereferenceable(12), %class.SkScalerContext*, i32) unnamed_addr #1 align 2 {
  %5 = ptrtoint %class.SkScalerContext* %2 to i64
  %6 = getelementptr inbounds %class.RemoteStrike, %class.RemoteStrike* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV12RemoteStrike, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %class.RemoteStrike, %class.RemoteStrike* %0, i64 0, i32 1
  tail call void @_ZN16SkAutoDescriptorC1ERK12SkDescriptor(%class.SkAutoDescriptor* %7, %class.SkDescriptor* dereferenceable(12) %1) #16
  %8 = getelementptr inbounds %class.RemoteStrike, %class.RemoteStrike* %0, i64 0, i32 2
  store i32 %3, i32* %8, align 8
  %9 = getelementptr inbounds %class.RemoteStrike, %class.RemoteStrike* %0, i64 0, i32 3
  %10 = getelementptr inbounds %class.SkScalerContext, %class.SkScalerContext* %2, i64 0, i32 1, i32 14
  %11 = load i16, i16* %10, align 2
  %12 = and i16 %11, 16
  %13 = icmp ne i16 %12, 0
  %14 = tail call i32 @_ZNK15SkScalerContext28computeAxisAlignmentForHTextEv(%class.SkScalerContext* %2) #16
  tail call void @_ZN27SkGlyphPositionRoundingSpecC1Eb15SkAxisAlignment(%struct.SkGlyphPositionRoundingSpec* %9, i1 zeroext %13, i32 %14) #16
  %15 = getelementptr inbounds %class.RemoteStrike, %class.RemoteStrike* %0, i64 0, i32 4
  %16 = bitcast %"class.std::__1::unique_ptr"* %15 to i64*
  store i64 %5, i64* %16, align 8
  %17 = getelementptr inbounds %class.RemoteStrike, %class.RemoteStrike* %0, i64 0, i32 5
  %18 = getelementptr inbounds %class.RemoteStrike, %class.RemoteStrike* %0, i64 0, i32 8
  %19 = getelementptr inbounds %class.RemoteStrike, %class.RemoteStrike* %0, i64 0, i32 13
  %20 = bitcast %class.SkTypeface** %17 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 25, i1 false)
  %21 = bitcast %class.LowerRangeBitVector* %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 144, i1 false)
  tail call void @_ZN21SkArenaAllocWithResetC2EPcmm(%class.SkArenaAllocWithReset* %19, i8* null, i64 0, i64 256) #16
  ret void
}

declare void @_ZN16SkAutoDescriptorC1ERK12SkDescriptor(%class.SkAutoDescriptor*, %class.SkDescriptor* dereferenceable(12)) unnamed_addr #4

declare i32 @_ZNK15SkScalerContext28computeAxisAlignmentForHTextEv(%class.SkScalerContext*) local_unnamed_addr #4

declare void @_ZN27SkGlyphPositionRoundingSpecC1Eb15SkAxisAlignment(%struct.SkGlyphPositionRoundingSpec*, i1 zeroext, i32) unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12RemoteStrike18writePendingGlyphsEP10Serializer(%class.RemoteStrike*, %class.Serializer* nocapture readonly) local_unnamed_addr #1 align 2 {
  %3 = alloca %struct.SkFontMetrics, align 4
  %4 = getelementptr inbounds %class.RemoteStrike, %class.RemoteStrike* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %5 = load %class.SkScalerContext*, %class.SkScalerContext** %4, align 8
  %6 = getelementptr inbounds %class.SkScalerContext, %class.SkScalerContext* %5, i64 0, i32 2, i32 0
  %7 = load %class.SkTypeface*, %class.SkTypeface** %6, align 8
  %8 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %7, i64 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = getelementptr inbounds %class.RemoteStrike, %class.RemoteStrike* %0, i64 0, i32 2
  %11 = getelementptr inbounds %class.Serializer, %class.Serializer* %1, i64 0, i32 0
  %12 = load %"class.std::__1::vector.37"*, %"class.std::__1::vector.37"** %11, align 8
  %13 = getelementptr inbounds %"class.std::__1::vector.37", %"class.std::__1::vector.37"* %12, i64 0, i32 0, i32 1
  %14 = bitcast i8** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %"class.std::__1::vector.37"* %12 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %15, %17
  %19 = add i64 %18, 7
  %20 = and i64 %19, -8
  %21 = add i64 %20, 8
  %22 = icmp ugt i64 %21, %18
  %23 = inttoptr i64 %17 to i8*
  br i1 %22, label %24, label %26

24:                                               ; preds = %2
  %25 = sub i64 %21, %18
  tail call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector.37"* %12, i64 %25) #16
  br label %30

26:                                               ; preds = %2
  %27 = icmp ult i64 %21, %18
  br i1 %27, label %28, label %30

28:                                               ; preds = %26
  %29 = getelementptr inbounds i8, i8* %23, i64 %21
  store i8* %29, i8** %13, align 8
  br label %30

30:                                               ; preds = %24, %26, %28
  %31 = load %"class.std::__1::vector.37"*, %"class.std::__1::vector.37"** %11, align 8
  %32 = getelementptr inbounds %"class.std::__1::vector.37", %"class.std::__1::vector.37"* %31, i64 0, i32 0, i32 0
  %33 = load i8*, i8** %32, align 8
  %34 = getelementptr inbounds i8, i8* %33, i64 %20
  %35 = load i32, i32* %10, align 4
  %36 = bitcast i8* %34 to i32*
  store i32 %9, i32* %36, align 4
  %37 = getelementptr inbounds i8, i8* %34, i64 4
  %38 = bitcast i8* %37 to i32*
  store i32 %35, i32* %38, align 4
  %39 = getelementptr inbounds %class.RemoteStrike, %class.RemoteStrike* %0, i64 0, i32 1, i32 0
  %40 = load %class.SkDescriptor*, %class.SkDescriptor** %39, align 8
  %41 = getelementptr inbounds %class.SkDescriptor, %class.SkDescriptor* %40, i64 0, i32 1
  %42 = load i32, i32* %41, align 4
  %43 = load %"class.std::__1::vector.37"*, %"class.std::__1::vector.37"** %11, align 8
  %44 = getelementptr inbounds %"class.std::__1::vector.37", %"class.std::__1::vector.37"* %43, i64 0, i32 0, i32 1
  %45 = bitcast i8** %44 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = bitcast %"class.std::__1::vector.37"* %43 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = sub i64 %46, %48
  %50 = add i64 %49, 3
  %51 = and i64 %50, -4
  %52 = add i64 %51, 4
  %53 = icmp ugt i64 %52, %49
  %54 = inttoptr i64 %48 to i8*
  br i1 %53, label %55, label %57

55:                                               ; preds = %30
  %56 = sub i64 %52, %49
  tail call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector.37"* %43, i64 %56) #16
  br label %61

57:                                               ; preds = %30
  %58 = icmp ult i64 %52, %49
  br i1 %58, label %59, label %61

59:                                               ; preds = %57
  %60 = getelementptr inbounds i8, i8* %54, i64 %52
  store i8* %60, i8** %44, align 8
  br label %61

61:                                               ; preds = %59, %57, %55
  %62 = load %"class.std::__1::vector.37"*, %"class.std::__1::vector.37"** %11, align 8
  %63 = getelementptr inbounds %"class.std::__1::vector.37", %"class.std::__1::vector.37"* %62, i64 0, i32 0, i32 0
  %64 = load i8*, i8** %63, align 8
  %65 = getelementptr inbounds i8, i8* %64, i64 %51
  %66 = bitcast i8* %65 to i32*
  store i32 %42, i32* %66, align 4
  %67 = load i32, i32* %41, align 4
  %68 = zext i32 %67 to i64
  %69 = load %"class.std::__1::vector.37"*, %"class.std::__1::vector.37"** %11, align 8
  %70 = getelementptr inbounds %"class.std::__1::vector.37", %"class.std::__1::vector.37"* %69, i64 0, i32 0, i32 1
  %71 = bitcast i8** %70 to i64*
  %72 = load i64, i64* %71, align 8
  %73 = bitcast %"class.std::__1::vector.37"* %69 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = sub i64 %72, %74
  %76 = add i64 %75, 3
  %77 = and i64 %76, -4
  %78 = add i64 %77, %68
  %79 = icmp ugt i64 %78, %75
  %80 = inttoptr i64 %74 to i8*
  br i1 %79, label %81, label %83

81:                                               ; preds = %61
  %82 = sub i64 %78, %75
  tail call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector.37"* %69, i64 %82) #16
  br label %87

83:                                               ; preds = %61
  %84 = icmp ult i64 %78, %75
  br i1 %84, label %85, label %87

85:                                               ; preds = %83
  %86 = getelementptr inbounds i8, i8* %80, i64 %78
  store i8* %86, i8** %70, align 8
  br label %87

87:                                               ; preds = %81, %83, %85
  %88 = load %"class.std::__1::vector.37"*, %"class.std::__1::vector.37"** %11, align 8
  %89 = getelementptr inbounds %"class.std::__1::vector.37", %"class.std::__1::vector.37"* %88, i64 0, i32 0, i32 0
  %90 = load i8*, i8** %89, align 8
  %91 = getelementptr inbounds i8, i8* %90, i64 %77
  %92 = bitcast %class.SkDescriptor* %40 to i8*
  %93 = load i32, i32* %41, align 4
  %94 = zext i32 %93 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %91, i8* align 4 %92, i64 %94, i1 false) #16
  %95 = getelementptr inbounds %class.RemoteStrike, %class.RemoteStrike* %0, i64 0, i32 7
  %96 = load %"class.std::__1::vector.37"*, %"class.std::__1::vector.37"** %11, align 8
  %97 = getelementptr inbounds %"class.std::__1::vector.37", %"class.std::__1::vector.37"* %96, i64 0, i32 0, i32 1
  %98 = bitcast i8** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast %"class.std::__1::vector.37"* %96 to i64*
  %101 = load i64, i64* %100, align 8
  %102 = sub i64 %99, %101
  %103 = icmp eq i64 %102, -1
  br i1 %103, label %105, label %104

104:                                              ; preds = %87
  tail call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector.37"* %96, i64 1) #16
  br label %107

105:                                              ; preds = %87
  %106 = inttoptr i64 %101 to i8*
  store i8* %106, i8** %97, align 8
  br label %107

107:                                              ; preds = %104, %105
  %108 = load %"class.std::__1::vector.37"*, %"class.std::__1::vector.37"** %11, align 8
  %109 = getelementptr inbounds %"class.std::__1::vector.37", %"class.std::__1::vector.37"* %108, i64 0, i32 0, i32 0
  %110 = load i8*, i8** %109, align 8
  %111 = getelementptr inbounds i8, i8* %110, i64 %102
  %112 = load i8, i8* %95, align 1, !range !2
  store i8 %112, i8* %111, align 1
  %113 = load i8, i8* %95, align 8, !range !2
  %114 = icmp eq i8 %113, 0
  br i1 %114, label %115, label %144

115:                                              ; preds = %107
  %116 = bitcast %struct.SkFontMetrics* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %116) #16
  %117 = getelementptr inbounds %struct.SkFontMetrics, %struct.SkFontMetrics* %3, i64 0, i32 0
  store i32 -1431655766, i32* %117, align 4
  %118 = getelementptr inbounds %struct.SkFontMetrics, %struct.SkFontMetrics* %3, i64 0, i32 1
  %119 = bitcast float* %118 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %119, i8 -1, i64 60, i1 false)
  %120 = load %class.SkScalerContext*, %class.SkScalerContext** %4, align 8
  call void @_ZN15SkScalerContext14getFontMetricsEP13SkFontMetrics(%class.SkScalerContext* %120, %struct.SkFontMetrics* nonnull %3) #16
  %121 = load %"class.std::__1::vector.37"*, %"class.std::__1::vector.37"** %11, align 8
  %122 = getelementptr inbounds %"class.std::__1::vector.37", %"class.std::__1::vector.37"* %121, i64 0, i32 0, i32 1
  %123 = bitcast i8** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %"class.std::__1::vector.37"* %121 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = sub i64 %124, %126
  %128 = add i64 %127, 3
  %129 = and i64 %128, -4
  %130 = add i64 %129, 64
  %131 = icmp ugt i64 %130, %127
  %132 = inttoptr i64 %126 to i8*
  br i1 %131, label %133, label %135

133:                                              ; preds = %115
  %134 = sub i64 %130, %127
  call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector.37"* %121, i64 %134) #16
  br label %139

135:                                              ; preds = %115
  %136 = icmp ult i64 %130, %127
  br i1 %136, label %137, label %139

137:                                              ; preds = %135
  %138 = getelementptr inbounds i8, i8* %132, i64 %130
  store i8* %138, i8** %122, align 8
  br label %139

139:                                              ; preds = %133, %135, %137
  %140 = load %"class.std::__1::vector.37"*, %"class.std::__1::vector.37"** %11, align 8
  %141 = getelementptr inbounds %"class.std::__1::vector.37", %"class.std::__1::vector.37"* %140, i64 0, i32 0, i32 0
  %142 = load i8*, i8** %141, align 8
  %143 = getelementptr inbounds i8, i8* %142, i64 %129
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %143, i8* nonnull align 4 %116, i64 64, i1 false) #16
  store i8 1, i8* %95, align 8
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %116) #16
  br label %144

144:                                              ; preds = %107, %139
  %145 = getelementptr inbounds %class.RemoteStrike, %class.RemoteStrike* %0, i64 0, i32 11
  %146 = getelementptr inbounds %class.RemoteStrike, %class.RemoteStrike* %0, i64 0, i32 11, i32 0, i32 1
  %147 = bitcast %class.SkGlyph** %146 to i64*
  %148 = load i64, i64* %147, align 8
  %149 = bitcast %"class.std::__1::vector"* %145 to i64*
  %150 = load i64, i64* %149, align 8
  %151 = sub i64 %148, %150
  %152 = sdiv exact i64 %151, 40
  %153 = load %"class.std::__1::vector.37"*, %"class.std::__1::vector.37"** %11, align 8
  %154 = getelementptr inbounds %"class.std::__1::vector.37", %"class.std::__1::vector.37"* %153, i64 0, i32 0, i32 1
  %155 = bitcast i8** %154 to i64*
  %156 = load i64, i64* %155, align 8
  %157 = bitcast %"class.std::__1::vector.37"* %153 to i64*
  %158 = load i64, i64* %157, align 8
  %159 = sub i64 %156, %158
  %160 = add i64 %159, 7
  %161 = and i64 %160, -8
  %162 = add i64 %161, 8
  %163 = icmp ugt i64 %162, %159
  %164 = inttoptr i64 %158 to i8*
  br i1 %163, label %165, label %167

165:                                              ; preds = %144
  %166 = sub i64 %162, %159
  call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector.37"* %153, i64 %166) #16
  br label %171

167:                                              ; preds = %144
  %168 = icmp ult i64 %162, %159
  br i1 %168, label %169, label %171

169:                                              ; preds = %167
  %170 = getelementptr inbounds i8, i8* %164, i64 %162
  store i8* %170, i8** %154, align 8
  br label %171

171:                                              ; preds = %165, %167, %169
  %172 = load %"class.std::__1::vector.37"*, %"class.std::__1::vector.37"** %11, align 8
  %173 = getelementptr inbounds %"class.std::__1::vector.37", %"class.std::__1::vector.37"* %172, i64 0, i32 0, i32 0
  %174 = load i8*, i8** %173, align 8
  %175 = getelementptr inbounds i8, i8* %174, i64 %161
  %176 = bitcast i8* %175 to i64*
  store i64 %152, i64* %176, align 8
  %177 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %145, i64 0, i32 0, i32 0
  %178 = load %class.SkGlyph*, %class.SkGlyph** %177, align 8
  %179 = load %class.SkGlyph*, %class.SkGlyph** %146, align 8
  %180 = icmp eq %class.SkGlyph* %178, %179
  %181 = ptrtoint %class.SkGlyph* %178 to i64
  br i1 %180, label %184, label %223

182:                                              ; preds = %258
  %183 = load i64, i64* %149, align 8
  br label %184

184:                                              ; preds = %182, %171
  %185 = phi i64 [ %183, %182 ], [ %181, %171 ]
  store i64 %185, i64* %147, align 8
  %186 = getelementptr inbounds %class.RemoteStrike, %class.RemoteStrike* %0, i64 0, i32 12
  %187 = getelementptr inbounds %class.RemoteStrike, %class.RemoteStrike* %0, i64 0, i32 12, i32 0, i32 1
  %188 = bitcast %class.SkGlyph** %187 to i64*
  %189 = load i64, i64* %188, align 8
  %190 = bitcast %"class.std::__1::vector"* %186 to i64*
  %191 = load i64, i64* %190, align 8
  %192 = sub i64 %189, %191
  %193 = sdiv exact i64 %192, 40
  %194 = load %"class.std::__1::vector.37"*, %"class.std::__1::vector.37"** %11, align 8
  %195 = getelementptr inbounds %"class.std::__1::vector.37", %"class.std::__1::vector.37"* %194, i64 0, i32 0, i32 1
  %196 = bitcast i8** %195 to i64*
  %197 = load i64, i64* %196, align 8
  %198 = bitcast %"class.std::__1::vector.37"* %194 to i64*
  %199 = load i64, i64* %198, align 8
  %200 = sub i64 %197, %199
  %201 = add i64 %200, 7
  %202 = and i64 %201, -8
  %203 = add i64 %202, 8
  %204 = icmp ugt i64 %203, %200
  %205 = inttoptr i64 %199 to i8*
  br i1 %204, label %206, label %208

206:                                              ; preds = %184
  %207 = sub i64 %203, %200
  call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector.37"* %194, i64 %207) #16
  br label %212

208:                                              ; preds = %184
  %209 = icmp ult i64 %203, %200
  br i1 %209, label %210, label %212

210:                                              ; preds = %208
  %211 = getelementptr inbounds i8, i8* %205, i64 %203
  store i8* %211, i8** %195, align 8
  br label %212

212:                                              ; preds = %206, %208, %210
  %213 = load %"class.std::__1::vector.37"*, %"class.std::__1::vector.37"** %11, align 8
  %214 = getelementptr inbounds %"class.std::__1::vector.37", %"class.std::__1::vector.37"* %213, i64 0, i32 0, i32 0
  %215 = load i8*, i8** %214, align 8
  %216 = getelementptr inbounds i8, i8* %215, i64 %202
  %217 = bitcast i8* %216 to i64*
  store i64 %193, i64* %217, align 8
  %218 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %186, i64 0, i32 0, i32 0
  %219 = load %class.SkGlyph*, %class.SkGlyph** %218, align 8
  %220 = load %class.SkGlyph*, %class.SkGlyph** %187, align 8
  %221 = icmp eq %class.SkGlyph* %219, %220
  %222 = ptrtoint %class.SkGlyph* %219 to i64
  br i1 %221, label %263, label %266

223:                                              ; preds = %171, %258
  %224 = phi %class.SkGlyph* [ %259, %258 ], [ %178, %171 ]
  call fastcc void @_ZL10writeGlyphRK7SkGlyphP10Serializer(%class.SkGlyph* dereferenceable(40) %224, %class.Serializer* %1)
  %225 = call i64 @_ZNK7SkGlyph9imageSizeEv(%class.SkGlyph* %224) #16
  %226 = icmp eq i64 %225, 0
  br i1 %226, label %258, label %227

227:                                              ; preds = %223
  %228 = call zeroext i1 @_ZN14SkStrikeForGPU11FitsInAtlasERK7SkGlyph(%class.SkGlyph* dereferenceable(40) %224) #16
  br i1 %228, label %229, label %258

229:                                              ; preds = %227
  %230 = call i64 @_ZNK7SkGlyph15formatAlignmentEv(%class.SkGlyph* %224) #16
  %231 = load %"class.std::__1::vector.37"*, %"class.std::__1::vector.37"** %11, align 8
  %232 = getelementptr inbounds %"class.std::__1::vector.37", %"class.std::__1::vector.37"* %231, i64 0, i32 0, i32 1
  %233 = bitcast i8** %232 to i64*
  %234 = load i64, i64* %233, align 8
  %235 = bitcast %"class.std::__1::vector.37"* %231 to i64*
  %236 = load i64, i64* %235, align 8
  %237 = sub i64 %234, %236
  %238 = add i64 %230, -1
  %239 = add i64 %238, %237
  %240 = sub i64 0, %230
  %241 = and i64 %239, %240
  %242 = add i64 %241, %225
  %243 = icmp ugt i64 %242, %237
  %244 = inttoptr i64 %236 to i8*
  br i1 %243, label %245, label %247

245:                                              ; preds = %229
  %246 = sub i64 %242, %237
  call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector.37"* %231, i64 %246) #16
  br label %251

247:                                              ; preds = %229
  %248 = icmp ult i64 %242, %237
  br i1 %248, label %249, label %251

249:                                              ; preds = %247
  %250 = getelementptr inbounds i8, i8* %244, i64 %242
  store i8* %250, i8** %232, align 8
  br label %251

251:                                              ; preds = %245, %247, %249
  %252 = load %"class.std::__1::vector.37"*, %"class.std::__1::vector.37"** %11, align 8
  %253 = getelementptr inbounds %"class.std::__1::vector.37", %"class.std::__1::vector.37"* %252, i64 0, i32 0, i32 0
  %254 = load i8*, i8** %253, align 8
  %255 = getelementptr inbounds i8, i8* %254, i64 %241
  %256 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %224, i64 0, i32 4
  store i8* %255, i8** %256, align 8
  %257 = load %class.SkScalerContext*, %class.SkScalerContext** %4, align 8
  call void @_ZN15SkScalerContext8getImageERK7SkGlyph(%class.SkScalerContext* %257, %class.SkGlyph* dereferenceable(40) %224) #16
  br label %258

258:                                              ; preds = %223, %251, %227
  %259 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %224, i64 1
  %260 = icmp eq %class.SkGlyph* %259, %179
  br i1 %260, label %182, label %223

261:                                              ; preds = %266
  %262 = load i64, i64* %190, align 8
  br label %263

263:                                              ; preds = %261, %212
  %264 = phi i64 [ %262, %261 ], [ %222, %212 ]
  store i64 %264, i64* %188, align 8
  %265 = getelementptr inbounds %class.RemoteStrike, %class.RemoteStrike* %0, i64 0, i32 13
  call void @_ZN21SkArenaAllocWithReset5resetEv(%class.SkArenaAllocWithReset* %265) #16
  ret void

266:                                              ; preds = %212, %266
  %267 = phi %class.SkGlyph* [ %268, %266 ], [ %219, %212 ]
  call fastcc void @_ZL10writeGlyphRK7SkGlyphP10Serializer(%class.SkGlyph* dereferenceable(40) %267, %class.Serializer* %1)
  call void @_ZNK12RemoteStrike14writeGlyphPathERK7SkGlyphP10Serializer(%class.RemoteStrike* undef, %class.SkGlyph* dereferenceable(40) %267, %class.Serializer* %1)
  %268 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %267, i64 1
  %269 = icmp eq %class.SkGlyph* %268, %220
  br i1 %269, label %261, label %266
}

declare void @_ZN15SkScalerContext14getFontMetricsEP13SkFontMetrics(%class.SkScalerContext*, %struct.SkFontMetrics*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZL10writeGlyphRK7SkGlyphP10Serializer(%class.SkGlyph* nocapture readonly dereferenceable(40), %class.Serializer* nocapture readonly) unnamed_addr #1 {
  %3 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %0, i64 0, i32 10, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %class.Serializer, %class.Serializer* %1, i64 0, i32 0
  %6 = load %"class.std::__1::vector.37"*, %"class.std::__1::vector.37"** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::vector.37", %"class.std::__1::vector.37"* %6, i64 0, i32 0, i32 1
  %8 = bitcast i8** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector.37"* %6 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %9, %11
  %13 = add i64 %12, 3
  %14 = and i64 %13, -4
  %15 = add i64 %14, 4
  %16 = icmp ugt i64 %15, %12
  %17 = inttoptr i64 %11 to i8*
  br i1 %16, label %18, label %20

18:                                               ; preds = %2
  %19 = sub i64 %15, %12
  tail call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector.37"* %6, i64 %19) #16
  br label %24

20:                                               ; preds = %2
  %21 = icmp ult i64 %15, %12
  br i1 %21, label %22, label %24

22:                                               ; preds = %20
  %23 = getelementptr inbounds i8, i8* %17, i64 %15
  store i8* %23, i8** %7, align 8
  br label %24

24:                                               ; preds = %18, %20, %22
  %25 = load %"class.std::__1::vector.37"*, %"class.std::__1::vector.37"** %5, align 8
  %26 = getelementptr inbounds %"class.std::__1::vector.37", %"class.std::__1::vector.37"* %25, i64 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds i8, i8* %27, i64 %14
  %29 = bitcast i8* %28 to i32*
  store i32 %4, i32* %29, align 4
  %30 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %0, i64 0, i32 6
  %31 = bitcast float* %30 to i32*
  %32 = load i32, i32* %31, align 8
  %33 = load %"class.std::__1::vector.37"*, %"class.std::__1::vector.37"** %5, align 8
  %34 = getelementptr inbounds %"class.std::__1::vector.37", %"class.std::__1::vector.37"* %33, i64 0, i32 0, i32 1
  %35 = bitcast i8** %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = bitcast %"class.std::__1::vector.37"* %33 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = sub i64 %36, %38
  %40 = add i64 %39, 3
  %41 = and i64 %40, -4
  %42 = add i64 %41, 4
  %43 = icmp ugt i64 %42, %39
  %44 = inttoptr i64 %38 to i8*
  br i1 %43, label %45, label %47

45:                                               ; preds = %24
  %46 = sub i64 %42, %39
  tail call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector.37"* %33, i64 %46) #16
  br label %51

47:                                               ; preds = %24
  %48 = icmp ult i64 %42, %39
  br i1 %48, label %49, label %51

49:                                               ; preds = %47
  %50 = getelementptr inbounds i8, i8* %44, i64 %42
  store i8* %50, i8** %34, align 8
  br label %51

51:                                               ; preds = %45, %47, %49
  %52 = load %"class.std::__1::vector.37"*, %"class.std::__1::vector.37"** %5, align 8
  %53 = getelementptr inbounds %"class.std::__1::vector.37", %"class.std::__1::vector.37"* %52, i64 0, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  %55 = getelementptr inbounds i8, i8* %54, i64 %41
  %56 = bitcast i8* %55 to i32*
  store i32 %32, i32* %56, align 4
  %57 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %0, i64 0, i32 7
  %58 = bitcast float* %57 to i32*
  %59 = load i32, i32* %58, align 4
  %60 = load %"class.std::__1::vector.37"*, %"class.std::__1::vector.37"** %5, align 8
  %61 = getelementptr inbounds %"class.std::__1::vector.37", %"class.std::__1::vector.37"* %60, i64 0, i32 0, i32 1
  %62 = bitcast i8** %61 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = bitcast %"class.std::__1::vector.37"* %60 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = sub i64 %63, %65
  %67 = add i64 %66, 3
  %68 = and i64 %67, -4
  %69 = add i64 %68, 4
  %70 = icmp ugt i64 %69, %66
  %71 = inttoptr i64 %65 to i8*
  br i1 %70, label %72, label %74

72:                                               ; preds = %51
  %73 = sub i64 %69, %66
  tail call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector.37"* %60, i64 %73) #16
  br label %78

74:                                               ; preds = %51
  %75 = icmp ult i64 %69, %66
  br i1 %75, label %76, label %78

76:                                               ; preds = %74
  %77 = getelementptr inbounds i8, i8* %71, i64 %69
  store i8* %77, i8** %61, align 8
  br label %78

78:                                               ; preds = %72, %74, %76
  %79 = load %"class.std::__1::vector.37"*, %"class.std::__1::vector.37"** %5, align 8
  %80 = getelementptr inbounds %"class.std::__1::vector.37", %"class.std::__1::vector.37"* %79, i64 0, i32 0, i32 0
  %81 = load i8*, i8** %80, align 8
  %82 = getelementptr inbounds i8, i8* %81, i64 %68
  %83 = bitcast i8* %82 to i32*
  store i32 %59, i32* %83, align 4
  %84 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %0, i64 0, i32 0
  %85 = load i16, i16* %84, align 8
  %86 = load %"class.std::__1::vector.37"*, %"class.std::__1::vector.37"** %5, align 8
  %87 = getelementptr inbounds %"class.std::__1::vector.37", %"class.std::__1::vector.37"* %86, i64 0, i32 0, i32 1
  %88 = bitcast i8** %87 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = bitcast %"class.std::__1::vector.37"* %86 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = sub i64 %89, %91
  %93 = add i64 %92, 1
  %94 = and i64 %93, -2
  %95 = add i64 %94, 2
  %96 = icmp ugt i64 %95, %92
  %97 = inttoptr i64 %91 to i8*
  br i1 %96, label %98, label %100

98:                                               ; preds = %78
  %99 = sub i64 %95, %92
  tail call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector.37"* %86, i64 %99) #16
  br label %104

100:                                              ; preds = %78
  %101 = icmp ult i64 %95, %92
  br i1 %101, label %102, label %104

102:                                              ; preds = %100
  %103 = getelementptr inbounds i8, i8* %97, i64 %95
  store i8* %103, i8** %87, align 8
  br label %104

104:                                              ; preds = %98, %100, %102
  %105 = load %"class.std::__1::vector.37"*, %"class.std::__1::vector.37"** %5, align 8
  %106 = getelementptr inbounds %"class.std::__1::vector.37", %"class.std::__1::vector.37"* %105, i64 0, i32 0, i32 0
  %107 = load i8*, i8** %106, align 8
  %108 = getelementptr inbounds i8, i8* %107, i64 %94
  %109 = bitcast i8* %108 to i16*
  store i16 %85, i16* %109, align 2
  %110 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %0, i64 0, i32 1
  %111 = load i16, i16* %110, align 2
  %112 = load %"class.std::__1::vector.37"*, %"class.std::__1::vector.37"** %5, align 8
  %113 = getelementptr inbounds %"class.std::__1::vector.37", %"class.std::__1::vector.37"* %112, i64 0, i32 0, i32 1
  %114 = bitcast i8** %113 to i64*
  %115 = load i64, i64* %114, align 8
  %116 = bitcast %"class.std::__1::vector.37"* %112 to i64*
  %117 = load i64, i64* %116, align 8
  %118 = sub i64 %115, %117
  %119 = add i64 %118, 1
  %120 = and i64 %119, -2
  %121 = add i64 %120, 2
  %122 = icmp ugt i64 %121, %118
  %123 = inttoptr i64 %117 to i8*
  br i1 %122, label %124, label %126

124:                                              ; preds = %104
  %125 = sub i64 %121, %118
  tail call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector.37"* %112, i64 %125) #16
  br label %130

126:                                              ; preds = %104
  %127 = icmp ult i64 %121, %118
  br i1 %127, label %128, label %130

128:                                              ; preds = %126
  %129 = getelementptr inbounds i8, i8* %123, i64 %121
  store i8* %129, i8** %113, align 8
  br label %130

130:                                              ; preds = %124, %126, %128
  %131 = load %"class.std::__1::vector.37"*, %"class.std::__1::vector.37"** %5, align 8
  %132 = getelementptr inbounds %"class.std::__1::vector.37", %"class.std::__1::vector.37"* %131, i64 0, i32 0, i32 0
  %133 = load i8*, i8** %132, align 8
  %134 = getelementptr inbounds i8, i8* %133, i64 %120
  %135 = bitcast i8* %134 to i16*
  store i16 %111, i16* %135, align 2
  %136 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %0, i64 0, i32 2
  %137 = load i16, i16* %136, align 4
  %138 = load %"class.std::__1::vector.37"*, %"class.std::__1::vector.37"** %5, align 8
  %139 = getelementptr inbounds %"class.std::__1::vector.37", %"class.std::__1::vector.37"* %138, i64 0, i32 0, i32 1
  %140 = bitcast i8** %139 to i64*
  %141 = load i64, i64* %140, align 8
  %142 = bitcast %"class.std::__1::vector.37"* %138 to i64*
  %143 = load i64, i64* %142, align 8
  %144 = sub i64 %141, %143
  %145 = add i64 %144, 1
  %146 = and i64 %145, -2
  %147 = add i64 %146, 2
  %148 = icmp ugt i64 %147, %144
  %149 = inttoptr i64 %143 to i8*
  br i1 %148, label %150, label %152

150:                                              ; preds = %130
  %151 = sub i64 %147, %144
  tail call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector.37"* %138, i64 %151) #16
  br label %156

152:                                              ; preds = %130
  %153 = icmp ult i64 %147, %144
  br i1 %153, label %154, label %156

154:                                              ; preds = %152
  %155 = getelementptr inbounds i8, i8* %149, i64 %147
  store i8* %155, i8** %139, align 8
  br label %156

156:                                              ; preds = %150, %152, %154
  %157 = load %"class.std::__1::vector.37"*, %"class.std::__1::vector.37"** %5, align 8
  %158 = getelementptr inbounds %"class.std::__1::vector.37", %"class.std::__1::vector.37"* %157, i64 0, i32 0, i32 0
  %159 = load i8*, i8** %158, align 8
  %160 = getelementptr inbounds i8, i8* %159, i64 %146
  %161 = bitcast i8* %160 to i16*
  store i16 %137, i16* %161, align 2
  %162 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %0, i64 0, i32 3
  %163 = load i16, i16* %162, align 2
  %164 = load %"class.std::__1::vector.37"*, %"class.std::__1::vector.37"** %5, align 8
  %165 = getelementptr inbounds %"class.std::__1::vector.37", %"class.std::__1::vector.37"* %164, i64 0, i32 0, i32 1
  %166 = bitcast i8** %165 to i64*
  %167 = load i64, i64* %166, align 8
  %168 = bitcast %"class.std::__1::vector.37"* %164 to i64*
  %169 = load i64, i64* %168, align 8
  %170 = sub i64 %167, %169
  %171 = add i64 %170, 1
  %172 = and i64 %171, -2
  %173 = add i64 %172, 2
  %174 = icmp ugt i64 %173, %170
  %175 = inttoptr i64 %169 to i8*
  br i1 %174, label %176, label %178

176:                                              ; preds = %156
  %177 = sub i64 %173, %170
  tail call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector.37"* %164, i64 %177) #16
  br label %182

178:                                              ; preds = %156
  %179 = icmp ult i64 %173, %170
  br i1 %179, label %180, label %182

180:                                              ; preds = %178
  %181 = getelementptr inbounds i8, i8* %175, i64 %173
  store i8* %181, i8** %165, align 8
  br label %182

182:                                              ; preds = %176, %178, %180
  %183 = load %"class.std::__1::vector.37"*, %"class.std::__1::vector.37"** %5, align 8
  %184 = getelementptr inbounds %"class.std::__1::vector.37", %"class.std::__1::vector.37"* %183, i64 0, i32 0, i32 0
  %185 = load i8*, i8** %184, align 8
  %186 = getelementptr inbounds i8, i8* %185, i64 %172
  %187 = bitcast i8* %186 to i16*
  store i16 %163, i16* %187, align 2
  %188 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %0, i64 0, i32 8
  %189 = load i8, i8* %188, align 8
  %190 = load %"class.std::__1::vector.37"*, %"class.std::__1::vector.37"** %5, align 8
  %191 = getelementptr inbounds %"class.std::__1::vector.37", %"class.std::__1::vector.37"* %190, i64 0, i32 0, i32 1
  %192 = bitcast i8** %191 to i64*
  %193 = load i64, i64* %192, align 8
  %194 = bitcast %"class.std::__1::vector.37"* %190 to i64*
  %195 = load i64, i64* %194, align 8
  %196 = sub i64 %193, %195
  %197 = icmp eq i64 %196, -1
  br i1 %197, label %199, label %198

198:                                              ; preds = %182
  tail call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector.37"* %190, i64 1) #16
  br label %201

199:                                              ; preds = %182
  %200 = inttoptr i64 %195 to i8*
  store i8* %200, i8** %191, align 8
  br label %201

201:                                              ; preds = %198, %199
  %202 = load %"class.std::__1::vector.37"*, %"class.std::__1::vector.37"** %5, align 8
  %203 = getelementptr inbounds %"class.std::__1::vector.37", %"class.std::__1::vector.37"* %202, i64 0, i32 0, i32 0
  %204 = load i8*, i8** %203, align 8
  %205 = getelementptr inbounds i8, i8* %204, i64 %196
  store i8 %189, i8* %205, align 1
  ret void
}

declare i64 @_ZNK7SkGlyph9imageSizeEv(%class.SkGlyph*) local_unnamed_addr #4

declare zeroext i1 @_ZN14SkStrikeForGPU11FitsInAtlasERK7SkGlyph(%class.SkGlyph* dereferenceable(40)) local_unnamed_addr #4

declare i64 @_ZNK7SkGlyph15formatAlignmentEv(%class.SkGlyph*) local_unnamed_addr #4

declare void @_ZN15SkScalerContext8getImageERK7SkGlyph(%class.SkScalerContext*, %class.SkGlyph* dereferenceable(40)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK12RemoteStrike14writeGlyphPathERK7SkGlyphP10Serializer(%class.RemoteStrike* nocapture readnone, %class.SkGlyph* dereferenceable(40), %class.Serializer* nocapture readonly) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %1, i64 0, i32 8
  %5 = load i8, i8* %4, align 8
  %6 = icmp eq i8 %5, 3
  br i1 %6, label %11, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %1, i64 0, i32 0
  %9 = load i16, i16* %8, align 8
  %10 = icmp eq i16 %9, 0
  br i1 %10, label %11, label %37

11:                                               ; preds = %7, %3
  %12 = getelementptr inbounds %class.Serializer, %class.Serializer* %2, i64 0, i32 0
  %13 = load %"class.std::__1::vector.37"*, %"class.std::__1::vector.37"** %12, align 8
  %14 = getelementptr inbounds %"class.std::__1::vector.37", %"class.std::__1::vector.37"* %13, i64 0, i32 0, i32 1
  %15 = bitcast i8** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"class.std::__1::vector.37"* %13 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %16, %18
  %20 = add i64 %19, 7
  %21 = and i64 %20, -8
  %22 = add i64 %21, 8
  %23 = icmp ugt i64 %22, %19
  %24 = inttoptr i64 %18 to i8*
  br i1 %23, label %25, label %27

25:                                               ; preds = %11
  %26 = sub i64 %22, %19
  tail call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector.37"* %13, i64 %26) #16
  br label %31

27:                                               ; preds = %11
  %28 = icmp ult i64 %22, %19
  br i1 %28, label %29, label %31

29:                                               ; preds = %27
  %30 = getelementptr inbounds i8, i8* %24, i64 %22
  store i8* %30, i8** %14, align 8
  br label %31

31:                                               ; preds = %25, %27, %29
  %32 = load %"class.std::__1::vector.37"*, %"class.std::__1::vector.37"** %12, align 8
  %33 = getelementptr inbounds %"class.std::__1::vector.37", %"class.std::__1::vector.37"* %32, i64 0, i32 0, i32 0
  %34 = load i8*, i8** %33, align 8
  %35 = getelementptr inbounds i8, i8* %34, i64 %21
  %36 = bitcast i8* %35 to i64*
  store i64 0, i64* %36, align 8
  br label %117

37:                                               ; preds = %7
  %38 = tail call %class.SkPath* @_ZNK7SkGlyph4pathEv(%class.SkGlyph* %1) #16
  %39 = icmp eq %class.SkPath* %38, null
  br i1 %39, label %40, label %66

40:                                               ; preds = %37
  %41 = getelementptr inbounds %class.Serializer, %class.Serializer* %2, i64 0, i32 0
  %42 = load %"class.std::__1::vector.37"*, %"class.std::__1::vector.37"** %41, align 8
  %43 = getelementptr inbounds %"class.std::__1::vector.37", %"class.std::__1::vector.37"* %42, i64 0, i32 0, i32 1
  %44 = bitcast i8** %43 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = bitcast %"class.std::__1::vector.37"* %42 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = sub i64 %45, %47
  %49 = add i64 %48, 7
  %50 = and i64 %49, -8
  %51 = add i64 %50, 8
  %52 = icmp ugt i64 %51, %48
  %53 = inttoptr i64 %47 to i8*
  br i1 %52, label %54, label %56

54:                                               ; preds = %40
  %55 = sub i64 %51, %48
  tail call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector.37"* %42, i64 %55) #16
  br label %60

56:                                               ; preds = %40
  %57 = icmp ult i64 %51, %48
  br i1 %57, label %58, label %60

58:                                               ; preds = %56
  %59 = getelementptr inbounds i8, i8* %53, i64 %51
  store i8* %59, i8** %43, align 8
  br label %60

60:                                               ; preds = %54, %56, %58
  %61 = load %"class.std::__1::vector.37"*, %"class.std::__1::vector.37"** %41, align 8
  %62 = getelementptr inbounds %"class.std::__1::vector.37", %"class.std::__1::vector.37"* %61, i64 0, i32 0, i32 0
  %63 = load i8*, i8** %62, align 8
  %64 = getelementptr inbounds i8, i8* %63, i64 %50
  %65 = bitcast i8* %64 to i64*
  store i64 0, i64* %65, align 8
  br label %117

66:                                               ; preds = %37
  %67 = tail call i64 @_ZNK6SkPath13writeToMemoryEPv(%class.SkPath* nonnull %38, i8* null) #16
  %68 = getelementptr inbounds %class.Serializer, %class.Serializer* %2, i64 0, i32 0
  %69 = load %"class.std::__1::vector.37"*, %"class.std::__1::vector.37"** %68, align 8
  %70 = getelementptr inbounds %"class.std::__1::vector.37", %"class.std::__1::vector.37"* %69, i64 0, i32 0, i32 1
  %71 = bitcast i8** %70 to i64*
  %72 = load i64, i64* %71, align 8
  %73 = bitcast %"class.std::__1::vector.37"* %69 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = sub i64 %72, %74
  %76 = add i64 %75, 7
  %77 = and i64 %76, -8
  %78 = add i64 %77, 8
  %79 = icmp ugt i64 %78, %75
  %80 = inttoptr i64 %74 to i8*
  br i1 %79, label %81, label %83

81:                                               ; preds = %66
  %82 = sub i64 %78, %75
  tail call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector.37"* %69, i64 %82) #16
  br label %87

83:                                               ; preds = %66
  %84 = icmp ult i64 %78, %75
  br i1 %84, label %85, label %87

85:                                               ; preds = %83
  %86 = getelementptr inbounds i8, i8* %80, i64 %78
  store i8* %86, i8** %70, align 8
  br label %87

87:                                               ; preds = %81, %83, %85
  %88 = load %"class.std::__1::vector.37"*, %"class.std::__1::vector.37"** %68, align 8
  %89 = getelementptr inbounds %"class.std::__1::vector.37", %"class.std::__1::vector.37"* %88, i64 0, i32 0, i32 0
  %90 = load i8*, i8** %89, align 8
  %91 = getelementptr inbounds i8, i8* %90, i64 %77
  %92 = bitcast i8* %91 to i64*
  store i64 %67, i64* %92, align 8
  %93 = load %"class.std::__1::vector.37"*, %"class.std::__1::vector.37"** %68, align 8
  %94 = getelementptr inbounds %"class.std::__1::vector.37", %"class.std::__1::vector.37"* %93, i64 0, i32 0, i32 1
  %95 = bitcast i8** %94 to i64*
  %96 = load i64, i64* %95, align 8
  %97 = bitcast %"class.std::__1::vector.37"* %93 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = sub i64 %96, %98
  %100 = add i64 %99, 3
  %101 = and i64 %100, -4
  %102 = add i64 %101, %67
  %103 = icmp ugt i64 %102, %99
  %104 = inttoptr i64 %98 to i8*
  br i1 %103, label %105, label %107

105:                                              ; preds = %87
  %106 = sub i64 %102, %99
  tail call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector.37"* %93, i64 %106) #16
  br label %111

107:                                              ; preds = %87
  %108 = icmp ult i64 %102, %99
  br i1 %108, label %109, label %111

109:                                              ; preds = %107
  %110 = getelementptr inbounds i8, i8* %104, i64 %102
  store i8* %110, i8** %94, align 8
  br label %111

111:                                              ; preds = %105, %107, %109
  %112 = load %"class.std::__1::vector.37"*, %"class.std::__1::vector.37"** %68, align 8
  %113 = getelementptr inbounds %"class.std::__1::vector.37", %"class.std::__1::vector.37"* %112, i64 0, i32 0, i32 0
  %114 = load i8*, i8** %113, align 8
  %115 = getelementptr inbounds i8, i8* %114, i64 %101
  %116 = tail call i64 @_ZNK6SkPath13writeToMemoryEPv(%class.SkPath* nonnull %38, i8* %115) #16
  br label %117

117:                                              ; preds = %60, %111, %31
  ret void
}

declare void @_ZN21SkArenaAllocWithReset5resetEv(%class.SkArenaAllocWithReset*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12RemoteStrike19ensureScalerContextEv(%class.RemoteStrike*) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %class.RemoteStrike, %class.RemoteStrike* %0, i64 0, i32 4
  %3 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %2, i64 0, i32 0, i32 0, i32 0
  %4 = load %class.SkScalerContext*, %class.SkScalerContext** %3, align 8
  %5 = icmp eq %class.SkScalerContext* %4, null
  br i1 %5, label %6, label %22

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.RemoteStrike, %class.RemoteStrike* %0, i64 0, i32 5
  %8 = load %class.SkTypeface*, %class.SkTypeface** %7, align 8
  %9 = getelementptr inbounds %class.RemoteStrike, %class.RemoteStrike* %0, i64 0, i32 6
  %10 = getelementptr inbounds %class.RemoteStrike, %class.RemoteStrike* %0, i64 0, i32 1, i32 0
  %11 = load %class.SkDescriptor*, %class.SkDescriptor** %10, align 8
  %12 = tail call %class.SkScalerContext* @_ZNK10SkTypeface19createScalerContextERK22SkScalerContextEffectsPK12SkDescriptor(%class.SkTypeface* %8, %struct.SkScalerContextEffects* dereferenceable(16) %9, %class.SkDescriptor* %11) #16
  %13 = ptrtoint %class.SkScalerContext* %12 to i64
  %14 = load %class.SkScalerContext*, %class.SkScalerContext** %3, align 8
  %15 = bitcast %"class.std::__1::unique_ptr"* %2 to i64*
  store i64 %13, i64* %15, align 8
  %16 = icmp eq %class.SkScalerContext* %14, null
  br i1 %16, label %22, label %17

17:                                               ; preds = %6
  %18 = bitcast %class.SkScalerContext* %14 to void (%class.SkScalerContext*)***
  %19 = load void (%class.SkScalerContext*)**, void (%class.SkScalerContext*)*** %18, align 8
  %20 = getelementptr inbounds void (%class.SkScalerContext*)*, void (%class.SkScalerContext*)** %19, i64 1
  %21 = load void (%class.SkScalerContext*)*, void (%class.SkScalerContext*)** %20, align 8
  tail call void %21(%class.SkScalerContext* nonnull %14) #16
  br label %22

22:                                               ; preds = %6, %17, %1
  ret void
}

declare %class.SkScalerContext* @_ZNK10SkTypeface19createScalerContextERK22SkScalerContextEffectsPK12SkDescriptor(%class.SkTypeface*, %struct.SkScalerContextEffects* dereferenceable(16), %class.SkDescriptor*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12RemoteStrike18resetScalerContextEv(%class.RemoteStrike* nocapture) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %class.RemoteStrike, %class.RemoteStrike* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %3 = load %class.SkScalerContext*, %class.SkScalerContext** %2, align 8
  store %class.SkScalerContext* null, %class.SkScalerContext** %2, align 8
  %4 = icmp eq %class.SkScalerContext* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = bitcast %class.SkScalerContext* %3 to void (%class.SkScalerContext*)***
  %7 = load void (%class.SkScalerContext*)**, void (%class.SkScalerContext*)*** %6, align 8
  %8 = getelementptr inbounds void (%class.SkScalerContext*)*, void (%class.SkScalerContext*)** %7, i64 1
  %9 = load void (%class.SkScalerContext*)*, void (%class.SkScalerContext*)** %8, align 8
  tail call void %9(%class.SkScalerContext* nonnull %3) #16
  br label %10

10:                                               ; preds = %1, %5
  %11 = getelementptr inbounds %class.RemoteStrike, %class.RemoteStrike* %0, i64 0, i32 5
  store %class.SkTypeface* null, %class.SkTypeface** %11, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN12RemoteStrike21setTypefaceAndEffectsEPK10SkTypeface22SkScalerContextEffects(%class.RemoteStrike* nocapture, %class.SkTypeface*, %class.SkPathEffect*, %class.SkMaskFilter*) local_unnamed_addr #5 align 2 {
  %5 = getelementptr inbounds %class.RemoteStrike, %class.RemoteStrike* %0, i64 0, i32 5
  store %class.SkTypeface* %1, %class.SkTypeface** %5, align 8
  %6 = getelementptr inbounds %class.RemoteStrike, %class.RemoteStrike* %0, i64 0, i32 6, i32 0
  store %class.SkPathEffect* %2, %class.SkPathEffect** %6, align 8
  %7 = getelementptr inbounds %class.RemoteStrike, %class.RemoteStrike* %0, i64 0, i32 6, i32 1
  store %class.SkMaskFilter* %3, %class.SkMaskFilter** %7, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare %class.SkPath* @_ZNK7SkGlyph4pathEv(%class.SkGlyph*) local_unnamed_addr #4

declare i64 @_ZNK6SkPath13writeToMemoryEPv(%class.SkPath*, i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12RemoteStrike21prepareForMaskDrawingEP21SkDrawableGlyphBufferP19SkSourceGlyphBuffer(%class.RemoteStrike*, %class.SkDrawableGlyphBuffer* nocapture readonly, %class.SkSourceGlyphBuffer*) unnamed_addr #1 align 2 {
  %4 = alloca %class.SkEnumerate, align 16
  %5 = alloca %class.SkGlyph, align 8
  %6 = bitcast %class.SkEnumerate* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %6) #16
  %7 = getelementptr inbounds %class.SkDrawableGlyphBuffer, %class.SkDrawableGlyphBuffer* %1, i64 0, i32 1
  %8 = load i64, i64* %7, align 8, !noalias !3
  %9 = getelementptr inbounds %class.SkDrawableGlyphBuffer, %class.SkDrawableGlyphBuffer* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %10 = bitcast %class.SkGlyphVariant** %9 to <2 x i64>*
  %11 = load <2 x i64>, <2 x i64>* %10, align 8, !noalias !3
  %12 = getelementptr inbounds %class.SkEnumerate, %class.SkEnumerate* %4, i64 0, i32 0
  %13 = bitcast %class.SkEnumerate* %4 to <2 x i64>*
  store <2 x i64> %11, <2 x i64>* %13, align 16
  %14 = getelementptr inbounds %class.SkEnumerate, %class.SkEnumerate* %4, i64 0, i32 0, i32 1
  store i64 %8, i64* %14, align 16
  %15 = getelementptr inbounds %class.SkEnumerate, %class.SkEnumerate* %4, i64 0, i32 1
  store i64 0, i64* %15, align 8, !alias.scope !6
  %16 = getelementptr inbounds %class.SkEnumerate, %class.SkEnumerate* %4, i64 0, i32 2, i32 0
  store %class.SkZip.64* %12, %class.SkZip.64** %16, align 16, !alias.scope !9
  %17 = getelementptr inbounds %class.SkEnumerate, %class.SkEnumerate* %4, i64 0, i32 2, i32 1
  store i64 0, i64* %17, align 8, !alias.scope !9
  %18 = getelementptr inbounds %class.SkEnumerate, %class.SkEnumerate* %4, i64 0, i32 3, i32 0
  store %class.SkZip.64* %12, %class.SkZip.64** %18, align 16, !alias.scope !14
  %19 = getelementptr inbounds %class.SkEnumerate, %class.SkEnumerate* %4, i64 0, i32 3, i32 1
  store i64 %8, i64* %19, align 8, !alias.scope !14
  %20 = icmp eq i64 %8, 0
  br i1 %20, label %42, label %21

21:                                               ; preds = %3
  %22 = extractelement <2 x i64> %11, i32 0
  %23 = inttoptr i64 %22 to %class.SkGlyphVariant*
  %24 = getelementptr inbounds %class.SkEnumerate, %class.SkEnumerate* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = getelementptr inbounds %class.RemoteStrike, %class.RemoteStrike* %0, i64 0, i32 9
  %26 = getelementptr inbounds %class.RemoteStrike, %class.RemoteStrike* %0, i64 0, i32 9, i32 1
  %27 = getelementptr inbounds %class.RemoteStrike, %class.RemoteStrike* %0, i64 0, i32 9, i32 2, i32 0, i32 0, i32 0, i32 0
  %28 = getelementptr inbounds %class.RemoteStrike, %class.RemoteStrike* %0, i64 0, i32 4
  %29 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %28, i64 0, i32 0, i32 0, i32 0
  %30 = getelementptr inbounds %class.RemoteStrike, %class.RemoteStrike* %0, i64 0, i32 5
  %31 = getelementptr inbounds %class.RemoteStrike, %class.RemoteStrike* %0, i64 0, i32 6
  %32 = getelementptr inbounds %class.RemoteStrike, %class.RemoteStrike* %0, i64 0, i32 1, i32 0
  %33 = bitcast %"class.std::__1::unique_ptr"* %28 to i64*
  %34 = getelementptr inbounds %class.RemoteStrike, %class.RemoteStrike* %0, i64 0, i32 11
  %35 = bitcast %class.SkGlyph* %5 to i8*
  %36 = getelementptr inbounds %class.RemoteStrike, %class.RemoteStrike* %0, i64 0, i32 11, i32 0, i32 1
  %37 = getelementptr inbounds %class.RemoteStrike, %class.RemoteStrike* %0, i64 0, i32 11, i32 0, i32 2, i32 0, i32 0
  %38 = bitcast %class.SkGlyph** %36 to i64*
  %39 = bitcast %"class.std::__1::vector"* %34 to i64*
  %40 = bitcast %class.SkGlyph** %37 to i64*
  %41 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %34, i64 0, i32 0, i32 0
  br label %43

42:                                               ; preds = %207, %3
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %6) #16
  ret void

43:                                               ; preds = %210, %21
  %44 = phi %class.SkGlyphVariant* [ %23, %21 ], [ %211, %210 ]
  %45 = phi i64 [ 0, %21 ], [ %208, %210 ]
  %46 = getelementptr inbounds %class.SkGlyphVariant, %class.SkGlyphVariant* %44, i64 %45
  %47 = bitcast %class.SkGlyphVariant* %46 to i32*
  %48 = load i32, i32* %47, align 8
  %49 = icmp ult i32 %48, 512
  br i1 %49, label %50, label %59

50:                                               ; preds = %43
  %51 = zext i32 %48 to i64
  %52 = lshr i64 %51, 6
  %53 = getelementptr inbounds %class.RemoteStrike, %class.RemoteStrike* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i64 %52
  %54 = and i64 %51, 63
  %55 = shl i64 1, %54
  %56 = load i64, i64* %53, align 8
  %57 = and i64 %56, %55
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %59, label %207

59:                                               ; preds = %50, %43
  %60 = lshr i32 %48, 16
  %61 = xor i32 %60, %48
  %62 = mul i32 %61, -2048144789
  %63 = lshr i32 %62, 16
  %64 = xor i32 %63, %62
  %65 = icmp eq i32 %64, 0
  %66 = select i1 %65, i32 1, i32 %64
  %67 = load i32, i32* %26, align 4
  %68 = icmp sgt i32 %67, 0
  br i1 %68, label %69, label %98

69:                                               ; preds = %59
  %70 = add nsw i32 %67, -1
  %71 = and i32 %70, %66
  %72 = load %"struct.SkTHashTable<RemoteStrike::MaskSummary, SkPackedGlyphID, RemoteStrike::MaskSummaryTraits>::Slot"*, %"struct.SkTHashTable<RemoteStrike::MaskSummary, SkPackedGlyphID, RemoteStrike::MaskSummaryTraits>::Slot"** %27, align 8
  br label %73

73:                                               ; preds = %88, %69
  %74 = phi i32 [ 0, %69 ], [ %93, %88 ]
  %75 = phi i32 [ %71, %69 ], [ %92, %88 ]
  %76 = sext i32 %75 to i64
  %77 = getelementptr inbounds %"struct.SkTHashTable<RemoteStrike::MaskSummary, SkPackedGlyphID, RemoteStrike::MaskSummaryTraits>::Slot", %"struct.SkTHashTable<RemoteStrike::MaskSummary, SkPackedGlyphID, RemoteStrike::MaskSummaryTraits>::Slot"* %72, i64 %76
  %78 = getelementptr inbounds %"struct.SkTHashTable<RemoteStrike::MaskSummary, SkPackedGlyphID, RemoteStrike::MaskSummaryTraits>::Slot", %"struct.SkTHashTable<RemoteStrike::MaskSummary, SkPackedGlyphID, RemoteStrike::MaskSummaryTraits>::Slot"* %72, i64 %76, i32 1
  %79 = load i32, i32* %78, align 4
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %98, label %81

81:                                               ; preds = %73
  %82 = icmp eq i32 %66, %79
  br i1 %82, label %83, label %88

83:                                               ; preds = %81
  %84 = getelementptr inbounds %"struct.SkTHashTable<RemoteStrike::MaskSummary, SkPackedGlyphID, RemoteStrike::MaskSummaryTraits>::Slot", %"struct.SkTHashTable<RemoteStrike::MaskSummary, SkPackedGlyphID, RemoteStrike::MaskSummaryTraits>::Slot"* %77, i64 0, i32 0, i32 0
  %85 = load i32, i32* %84, align 4
  %86 = and i32 %85, 1048575
  %87 = icmp eq i32 %48, %86
  br i1 %87, label %95, label %88

88:                                               ; preds = %83, %81
  %89 = add nsw i32 %75, -1
  %90 = icmp slt i32 %75, 1
  %91 = select i1 %90, i32 %67, i32 0
  %92 = add nsw i32 %89, %91
  %93 = add nuw nsw i32 %74, 1
  %94 = icmp eq i32 %93, %67
  br i1 %94, label %98, label %73

95:                                               ; preds = %83
  %96 = getelementptr inbounds %"struct.SkTHashTable<RemoteStrike::MaskSummary, SkPackedGlyphID, RemoteStrike::MaskSummaryTraits>::Slot", %"struct.SkTHashTable<RemoteStrike::MaskSummary, SkPackedGlyphID, RemoteStrike::MaskSummaryTraits>::Slot"* %77, i64 0, i32 0
  %97 = icmp eq %"struct.SkTHashTable<RemoteStrike::MaskSummary, SkPackedGlyphID, RemoteStrike::MaskSummaryTraits>::Slot"* %77, null
  br i1 %97, label %98, label %200

98:                                               ; preds = %73, %88, %59, %95
  %99 = load %class.SkScalerContext*, %class.SkScalerContext** %29, align 8
  %100 = icmp eq %class.SkScalerContext* %99, null
  br i1 %100, label %101, label %114

101:                                              ; preds = %98
  %102 = load %class.SkTypeface*, %class.SkTypeface** %30, align 8
  %103 = load %class.SkDescriptor*, %class.SkDescriptor** %32, align 8
  %104 = call %class.SkScalerContext* @_ZNK10SkTypeface19createScalerContextERK22SkScalerContextEffectsPK12SkDescriptor(%class.SkTypeface* %102, %struct.SkScalerContextEffects* dereferenceable(16) %31, %class.SkDescriptor* %103) #16
  %105 = ptrtoint %class.SkScalerContext* %104 to i64
  %106 = load %class.SkScalerContext*, %class.SkScalerContext** %29, align 8
  store i64 %105, i64* %33, align 8
  %107 = icmp eq %class.SkScalerContext* %106, null
  br i1 %107, label %114, label %108

108:                                              ; preds = %101
  %109 = bitcast %class.SkScalerContext* %106 to void (%class.SkScalerContext*)***
  %110 = load void (%class.SkScalerContext*)**, void (%class.SkScalerContext*)*** %109, align 8
  %111 = getelementptr inbounds void (%class.SkScalerContext*)*, void (%class.SkScalerContext*)** %110, i64 1
  %112 = load void (%class.SkScalerContext*)*, void (%class.SkScalerContext*)** %111, align 8
  call void %112(%class.SkScalerContext* nonnull %106) #16
  %113 = load %class.SkScalerContext*, %class.SkScalerContext** %29, align 8
  br label %114

114:                                              ; preds = %98, %101, %108
  %115 = phi %class.SkScalerContext* [ %99, %98 ], [ %104, %101 ], [ %113, %108 ]
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %35) #16
  call void @_ZN15SkScalerContext9makeGlyphE15SkPackedGlyphID(%class.SkGlyph* nonnull sret %5, %class.SkScalerContext* %115, i32 %48) #16
  %116 = load %class.SkGlyph*, %class.SkGlyph** %36, align 8
  %117 = load %class.SkGlyph*, %class.SkGlyph** %37, align 8
  %118 = icmp ult %class.SkGlyph* %116, %117
  %119 = ptrtoint %class.SkGlyph* %117 to i64
  br i1 %118, label %120, label %124

120:                                              ; preds = %114
  %121 = bitcast %class.SkGlyph* %116 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %121, i8* nonnull align 8 %35, i64 40, i1 false) #16
  %122 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %116, i64 1
  %123 = ptrtoint %class.SkGlyph* %122 to i64
  store i64 %123, i64* %38, align 8
  br label %174

124:                                              ; preds = %114
  %125 = ptrtoint %class.SkGlyph* %116 to i64
  %126 = load i64, i64* %39, align 8
  %127 = sub i64 %125, %126
  %128 = sdiv exact i64 %127, 40
  %129 = add nsw i64 %128, 1
  %130 = icmp ugt i64 %129, 461168601842738790
  br i1 %130, label %131, label %133

131:                                              ; preds = %124
  %132 = bitcast %"class.std::__1::vector"* %34 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %132) #17
  unreachable

133:                                              ; preds = %124
  %134 = sub i64 %119, %126
  %135 = sdiv exact i64 %134, 40
  %136 = icmp ult i64 %135, 230584300921369395
  br i1 %136, label %137, label %142

137:                                              ; preds = %133
  %138 = shl nsw i64 %135, 1
  %139 = icmp ult i64 %138, %129
  %140 = select i1 %139, i64 %129, i64 %138
  %141 = icmp eq i64 %140, 0
  br i1 %141, label %147, label %142

142:                                              ; preds = %137, %133
  %143 = phi i64 [ %140, %137 ], [ 461168601842738790, %133 ]
  %144 = mul i64 %143, 40
  %145 = call i8* @_Znwm(i64 %144) #18
  %146 = bitcast i8* %145 to %class.SkGlyph*
  br label %147

147:                                              ; preds = %142, %137
  %148 = phi i64 [ %143, %142 ], [ 0, %137 ]
  %149 = phi %class.SkGlyph* [ %146, %142 ], [ null, %137 ]
  %150 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %149, i64 %128
  %151 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %149, i64 %148
  %152 = ptrtoint %class.SkGlyph* %151 to i64
  %153 = bitcast %class.SkGlyph* %150 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %153, i8* nonnull align 8 %35, i64 40, i1 false) #16
  %154 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %150, i64 1
  %155 = ptrtoint %class.SkGlyph* %154 to i64
  %156 = load %class.SkGlyph*, %class.SkGlyph** %41, align 8
  %157 = load i64, i64* %38, align 8
  %158 = ptrtoint %class.SkGlyph* %156 to i64
  %159 = sub i64 %157, %158
  %160 = sdiv exact i64 %159, -40
  %161 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %150, i64 %160
  %162 = ptrtoint %class.SkGlyph* %161 to i64
  %163 = icmp sgt i64 %159, 0
  br i1 %163, label %164, label %168

164:                                              ; preds = %147
  %165 = bitcast %class.SkGlyph* %161 to i8*
  %166 = bitcast %class.SkGlyph* %156 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %165, i8* align 8 %166, i64 %159, i1 false) #16
  %167 = load %class.SkGlyph*, %class.SkGlyph** %41, align 8
  br label %168

168:                                              ; preds = %164, %147
  %169 = phi %class.SkGlyph* [ %156, %147 ], [ %167, %164 ]
  store i64 %162, i64* %39, align 8
  store i64 %155, i64* %38, align 8
  store i64 %152, i64* %40, align 8
  %170 = icmp eq %class.SkGlyph* %169, null
  br i1 %170, label %174, label %171

171:                                              ; preds = %168
  %172 = bitcast %class.SkGlyph* %169 to i8*
  call void @_ZdlPv(i8* %172) #18
  %173 = load %class.SkGlyph*, %class.SkGlyph** %36, align 8
  br label %174

174:                                              ; preds = %120, %168, %171
  %175 = phi %class.SkGlyph* [ %122, %120 ], [ %154, %168 ], [ %173, %171 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %35) #16
  %176 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %175, i64 -1
  %177 = and i32 %48, 1073741823
  %178 = call zeroext i1 @_ZN14SkStrikeForGPU13CanDrawAsMaskERK7SkGlyph(%class.SkGlyph* dereferenceable(40) %176) #16
  %179 = zext i1 %178 to i32
  %180 = shl nuw nsw i32 %179, 30
  %181 = or i32 %180, %177
  %182 = call zeroext i1 @_ZN14SkStrikeForGPU13CanDrawAsSDFTERK7SkGlyph(%class.SkGlyph* dereferenceable(40) %176) #16
  %183 = zext i1 %182 to i32
  %184 = shl nuw i32 %183, 31
  %185 = or i32 %181, %184
  %186 = call %"struct.RemoteStrike::MaskSummary"* @_ZN12SkTHashTableIN12RemoteStrike11MaskSummaryE15SkPackedGlyphIDNS0_17MaskSummaryTraitsEE3setES1_(%class.SkTHashTable* %25, i32 %185)
  %187 = getelementptr inbounds %"struct.RemoteStrike::MaskSummary", %"struct.RemoteStrike::MaskSummary"* %186, i64 0, i32 0
  %188 = load i32, i32* %187, align 4
  %189 = icmp ult i32 %188, -1073741824
  %190 = xor i1 %49, true
  %191 = or i1 %189, %190
  br i1 %191, label %200, label %192

192:                                              ; preds = %174
  %193 = zext i32 %48 to i64
  %194 = lshr i64 %193, 6
  %195 = getelementptr inbounds %class.RemoteStrike, %class.RemoteStrike* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i64 %194
  %196 = and i64 %193, 63
  %197 = shl i64 1, %196
  %198 = load i64, i64* %195, align 8
  %199 = or i64 %198, %197
  store i64 %199, i64* %195, align 8
  br label %200

200:                                              ; preds = %174, %192, %95
  %201 = phi %"struct.RemoteStrike::MaskSummary"* [ %96, %95 ], [ %186, %174 ], [ %186, %192 ]
  %202 = getelementptr inbounds %"struct.RemoteStrike::MaskSummary", %"struct.RemoteStrike::MaskSummary"* %201, i64 0, i32 0
  %203 = load i32, i32* %202, align 4
  %204 = and i32 %203, 1073741824
  %205 = icmp eq i32 %204, 0
  br i1 %205, label %206, label %207

206:                                              ; preds = %200
  call void @_ZN19SkSourceGlyphBuffer6rejectEm(%class.SkSourceGlyphBuffer* %2, i64 %45)
  br label %207

207:                                              ; preds = %50, %200, %206
  %208 = add nuw i64 %45, 1
  %209 = icmp eq i64 %208, %8
  br i1 %209, label %42, label %210

210:                                              ; preds = %207
  %211 = load %class.SkGlyphVariant*, %class.SkGlyphVariant** %24, align 16, !noalias !19
  br label %43
}

declare void @_ZN15SkScalerContext9makeGlyphE15SkPackedGlyphID(%class.SkGlyph* sret, %class.SkScalerContext*, i32) local_unnamed_addr #4

declare zeroext i1 @_ZN14SkStrikeForGPU13CanDrawAsMaskERK7SkGlyph(%class.SkGlyph* dereferenceable(40)) local_unnamed_addr #4

declare zeroext i1 @_ZN14SkStrikeForGPU13CanDrawAsSDFTERK7SkGlyph(%class.SkGlyph* dereferenceable(40)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.RemoteStrike::MaskSummary"* @_ZN12SkTHashTableIN12RemoteStrike11MaskSummaryE15SkPackedGlyphIDNS0_17MaskSummaryTraitsEE3setES1_(%class.SkTHashTable*, i32) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %class.SkTHashTable, %class.SkTHashTable* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = shl nsw i32 %4, 2
  %6 = getelementptr inbounds %class.SkTHashTable, %class.SkTHashTable* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = mul nsw i32 %7, 3
  %9 = icmp slt i32 %5, %8
  br i1 %9, label %15, label %10

10:                                               ; preds = %2
  %11 = icmp sgt i32 %7, 0
  %12 = shl nsw i32 %7, 1
  %13 = select i1 %11, i32 %12, i32 4
  tail call void @_ZN12SkTHashTableIN12RemoteStrike11MaskSummaryE15SkPackedGlyphIDNS0_17MaskSummaryTraitsEE6resizeEi(%class.SkTHashTable* %0, i32 %13)
  %14 = load i32, i32* %6, align 4
  br label %15

15:                                               ; preds = %2, %10
  %16 = phi i32 [ %7, %2 ], [ %14, %10 ]
  %17 = and i32 %1, 1048575
  %18 = lshr i32 %17, 16
  %19 = xor i32 %18, %17
  %20 = mul i32 %19, -2048144789
  %21 = lshr i32 %20, 16
  %22 = xor i32 %21, %20
  %23 = icmp eq i32 %22, 0
  %24 = select i1 %23, i32 1, i32 %22
  %25 = icmp sgt i32 %16, 0
  br i1 %25, label %26, label %62

26:                                               ; preds = %15
  %27 = add nsw i32 %16, -1
  %28 = and i32 %27, %24
  %29 = getelementptr inbounds %class.SkTHashTable, %class.SkTHashTable* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %30 = load %"struct.SkTHashTable<RemoteStrike::MaskSummary, SkPackedGlyphID, RemoteStrike::MaskSummaryTraits>::Slot"*, %"struct.SkTHashTable<RemoteStrike::MaskSummary, SkPackedGlyphID, RemoteStrike::MaskSummaryTraits>::Slot"** %29, align 8
  br label %31

31:                                               ; preds = %55, %26
  %32 = phi i32 [ 0, %26 ], [ %60, %55 ]
  %33 = phi i32 [ %28, %26 ], [ %59, %55 ]
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds %"struct.SkTHashTable<RemoteStrike::MaskSummary, SkPackedGlyphID, RemoteStrike::MaskSummaryTraits>::Slot", %"struct.SkTHashTable<RemoteStrike::MaskSummary, SkPackedGlyphID, RemoteStrike::MaskSummaryTraits>::Slot"* %30, i64 %34
  %36 = getelementptr inbounds %"struct.SkTHashTable<RemoteStrike::MaskSummary, SkPackedGlyphID, RemoteStrike::MaskSummaryTraits>::Slot", %"struct.SkTHashTable<RemoteStrike::MaskSummary, SkPackedGlyphID, RemoteStrike::MaskSummaryTraits>::Slot"* %30, i64 %34, i32 1
  %37 = load i32, i32* %36, align 4
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %45

39:                                               ; preds = %31
  %40 = getelementptr inbounds %"struct.SkTHashTable<RemoteStrike::MaskSummary, SkPackedGlyphID, RemoteStrike::MaskSummaryTraits>::Slot", %"struct.SkTHashTable<RemoteStrike::MaskSummary, SkPackedGlyphID, RemoteStrike::MaskSummaryTraits>::Slot"* %30, i64 %34, i32 1
  %41 = getelementptr inbounds %"struct.SkTHashTable<RemoteStrike::MaskSummary, SkPackedGlyphID, RemoteStrike::MaskSummaryTraits>::Slot", %"struct.SkTHashTable<RemoteStrike::MaskSummary, SkPackedGlyphID, RemoteStrike::MaskSummaryTraits>::Slot"* %35, i64 0, i32 0
  %42 = getelementptr inbounds %"struct.SkTHashTable<RemoteStrike::MaskSummary, SkPackedGlyphID, RemoteStrike::MaskSummaryTraits>::Slot", %"struct.SkTHashTable<RemoteStrike::MaskSummary, SkPackedGlyphID, RemoteStrike::MaskSummaryTraits>::Slot"* %35, i64 0, i32 0, i32 0
  store i32 %1, i32* %42, align 4
  store i32 %24, i32* %40, align 4
  %43 = load i32, i32* %3, align 8
  %44 = add nsw i32 %43, 1
  store i32 %44, i32* %3, align 8
  br label %62

45:                                               ; preds = %31
  %46 = icmp eq i32 %24, %37
  br i1 %46, label %47, label %55

47:                                               ; preds = %45
  %48 = getelementptr inbounds %"struct.SkTHashTable<RemoteStrike::MaskSummary, SkPackedGlyphID, RemoteStrike::MaskSummaryTraits>::Slot", %"struct.SkTHashTable<RemoteStrike::MaskSummary, SkPackedGlyphID, RemoteStrike::MaskSummaryTraits>::Slot"* %35, i64 0, i32 0, i32 0
  %49 = load i32, i32* %48, align 4
  %50 = and i32 %49, 1048575
  %51 = icmp eq i32 %17, %50
  br i1 %51, label %52, label %55

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"struct.SkTHashTable<RemoteStrike::MaskSummary, SkPackedGlyphID, RemoteStrike::MaskSummaryTraits>::Slot", %"struct.SkTHashTable<RemoteStrike::MaskSummary, SkPackedGlyphID, RemoteStrike::MaskSummaryTraits>::Slot"* %35, i64 0, i32 0, i32 0
  %54 = getelementptr inbounds %"struct.SkTHashTable<RemoteStrike::MaskSummary, SkPackedGlyphID, RemoteStrike::MaskSummaryTraits>::Slot", %"struct.SkTHashTable<RemoteStrike::MaskSummary, SkPackedGlyphID, RemoteStrike::MaskSummaryTraits>::Slot"* %35, i64 0, i32 0
  store i32 %1, i32* %53, align 4
  br label %62

55:                                               ; preds = %47, %45
  %56 = add nsw i32 %33, -1
  %57 = icmp slt i32 %33, 1
  %58 = select i1 %57, i32 %16, i32 0
  %59 = add nsw i32 %56, %58
  %60 = add nuw nsw i32 %32, 1
  %61 = icmp eq i32 %60, %16
  br i1 %61, label %62, label %31

62:                                               ; preds = %55, %15, %39, %52
  %63 = phi %"struct.RemoteStrike::MaskSummary"* [ %54, %52 ], [ %41, %39 ], [ null, %15 ], [ null, %55 ]
  ret %"struct.RemoteStrike::MaskSummary"* %63
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN19SkSourceGlyphBuffer6rejectEm(%class.SkSourceGlyphBuffer*, i64) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %class.SkSourceGlyphBuffer, %class.SkSourceGlyphBuffer* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i16*, i16** %3, align 8
  %5 = getelementptr inbounds %class.SkSourceGlyphBuffer, %class.SkSourceGlyphBuffer* %0, i64 0, i32 5, i32 0, i32 0, i64 8
  %6 = bitcast i8* %5 to i16**
  %7 = load i16*, i16** %6, align 8
  %8 = icmp eq i16* %4, %7
  %9 = getelementptr inbounds i16, i16* %4, i64 %1
  %10 = getelementptr inbounds %class.SkSourceGlyphBuffer, %class.SkSourceGlyphBuffer* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %11 = load %struct.SkPoint*, %struct.SkPoint** %10, align 8
  %12 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %11, i64 %1
  br i1 %8, label %47, label %13

13:                                               ; preds = %2
  %14 = bitcast i8* %5 to %class.SkTArray*
  tail call void @_ZN8SkTArrayItLb0EE12checkReallocEiNS0_11ReallocTypeE(%class.SkTArray* %14, i32 1, i32 1) #16
  %15 = load i16*, i16** %6, align 8
  %16 = getelementptr inbounds %class.SkSourceGlyphBuffer, %class.SkSourceGlyphBuffer* %0, i64 0, i32 5, i32 0, i32 0, i64 16
  %17 = bitcast i8* %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = lshr i64 %18, 1
  %20 = and i64 %19, 2147483647
  %21 = getelementptr inbounds i16, i16* %15, i64 %20
  %22 = add i64 %18, 2
  %23 = and i64 %22, 4294967294
  %24 = and i64 %18, -4294967295
  %25 = or i64 %23, %24
  store i64 %25, i64* %17, align 8
  %26 = load i16, i16* %9, align 2
  store i16 %26, i16* %21, align 2
  %27 = getelementptr inbounds %class.SkSourceGlyphBuffer, %class.SkSourceGlyphBuffer* %0, i64 0, i32 6, i32 0, i32 0, i64 32
  %28 = bitcast i8* %27 to %class.SkTArray.63*
  tail call void @_ZN8SkTArrayI7SkPointLb0EE12checkReallocEiNS1_11ReallocTypeE(%class.SkTArray.63* %28, i32 1, i32 1) #16
  %29 = bitcast i8* %27 to %struct.SkPoint**
  %30 = load %struct.SkPoint*, %struct.SkPoint** %29, align 8
  %31 = getelementptr inbounds %class.SkSourceGlyphBuffer, %class.SkSourceGlyphBuffer* %0, i64 0, i32 6, i32 0, i32 0, i64 40
  %32 = bitcast i8* %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = lshr i64 %33, 1
  %35 = and i64 %34, 2147483647
  %36 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %30, i64 %35
  %37 = add i64 %33, 2
  %38 = and i64 %37, 4294967294
  %39 = and i64 %33, -4294967295
  %40 = or i64 %38, %39
  store i64 %40, i64* %32, align 8
  %41 = bitcast %struct.SkPoint* %12 to i64*
  %42 = bitcast %struct.SkPoint* %36 to i64*
  %43 = load i64, i64* %41, align 4
  store i64 %43, i64* %42, align 4
  %44 = getelementptr inbounds %class.SkSourceGlyphBuffer, %class.SkSourceGlyphBuffer* %0, i64 0, i32 1
  %45 = load i64, i64* %44, align 8
  %46 = add i64 %45, 1
  store i64 %46, i64* %44, align 8
  br label %61

47:                                               ; preds = %2
  %48 = getelementptr inbounds %class.SkSourceGlyphBuffer, %class.SkSourceGlyphBuffer* %0, i64 0, i32 1
  %49 = load i64, i64* %48, align 8
  %50 = add i64 %49, 1
  store i64 %50, i64* %48, align 8
  %51 = getelementptr inbounds %class.SkSourceGlyphBuffer, %class.SkSourceGlyphBuffer* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %52 = load i16*, i16** %51, align 8
  %53 = getelementptr inbounds i16, i16* %52, i64 %49
  %54 = getelementptr inbounds %class.SkSourceGlyphBuffer, %class.SkSourceGlyphBuffer* %0, i64 0, i32 4, i32 0, i32 0, i32 1, i32 0
  %55 = load %struct.SkPoint*, %struct.SkPoint** %54, align 8
  %56 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %55, i64 %49
  %57 = load i16, i16* %9, align 2
  store i16 %57, i16* %53, align 2
  %58 = bitcast %struct.SkPoint* %12 to i64*
  %59 = bitcast %struct.SkPoint* %56 to i64*
  %60 = load i64, i64* %58, align 4
  store i64 %60, i64* %59, align 4
  br label %61

61:                                               ; preds = %47, %13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12RemoteStrike21prepareForSDFTDrawingEP21SkDrawableGlyphBufferP19SkSourceGlyphBuffer(%class.RemoteStrike*, %class.SkDrawableGlyphBuffer* nocapture readonly, %class.SkSourceGlyphBuffer*) unnamed_addr #6 align 2 {
  %4 = alloca %class.SkGlyph, align 8
  %5 = alloca %class.SkEnumerate, align 16
  %6 = bitcast %class.SkEnumerate* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %6) #16
  %7 = getelementptr inbounds %class.SkDrawableGlyphBuffer, %class.SkDrawableGlyphBuffer* %1, i64 0, i32 1
  %8 = load i64, i64* %7, align 8, !noalias !22
  %9 = getelementptr inbounds %class.SkDrawableGlyphBuffer, %class.SkDrawableGlyphBuffer* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %10 = bitcast %class.SkGlyphVariant** %9 to <2 x i64>*
  %11 = load <2 x i64>, <2 x i64>* %10, align 8, !noalias !22
  %12 = getelementptr inbounds %class.SkEnumerate, %class.SkEnumerate* %5, i64 0, i32 0
  %13 = bitcast %class.SkEnumerate* %5 to <2 x i64>*
  store <2 x i64> %11, <2 x i64>* %13, align 16
  %14 = getelementptr inbounds %class.SkEnumerate, %class.SkEnumerate* %5, i64 0, i32 0, i32 1
  store i64 %8, i64* %14, align 16
  %15 = getelementptr inbounds %class.SkEnumerate, %class.SkEnumerate* %5, i64 0, i32 1
  store i64 0, i64* %15, align 8, !alias.scope !25
  %16 = getelementptr inbounds %class.SkEnumerate, %class.SkEnumerate* %5, i64 0, i32 2, i32 0
  store %class.SkZip.64* %12, %class.SkZip.64** %16, align 16, !alias.scope !28
  %17 = getelementptr inbounds %class.SkEnumerate, %class.SkEnumerate* %5, i64 0, i32 2, i32 1
  store i64 0, i64* %17, align 8, !alias.scope !28
  %18 = getelementptr inbounds %class.SkEnumerate, %class.SkEnumerate* %5, i64 0, i32 3, i32 0
  store %class.SkZip.64* %12, %class.SkZip.64** %18, align 16, !alias.scope !33
  %19 = getelementptr inbounds %class.SkEnumerate, %class.SkEnumerate* %5, i64 0, i32 3, i32 1
  store i64 %8, i64* %19, align 8, !alias.scope !33
  %20 = icmp eq i64 %8, 0
  br i1 %20, label %186, label %21

21:                                               ; preds = %3
  %22 = extractelement <2 x i64> %11, i32 0
  %23 = inttoptr i64 %22 to %class.SkGlyphVariant*
  %24 = getelementptr inbounds %class.SkEnumerate, %class.SkEnumerate* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = bitcast %class.SkGlyph* %4 to i8*
  %26 = getelementptr inbounds %class.RemoteStrike, %class.RemoteStrike* %0, i64 0, i32 9
  %27 = getelementptr inbounds %class.RemoteStrike, %class.RemoteStrike* %0, i64 0, i32 9, i32 1
  %28 = getelementptr inbounds %class.RemoteStrike, %class.RemoteStrike* %0, i64 0, i32 9, i32 2, i32 0, i32 0, i32 0, i32 0
  %29 = getelementptr inbounds %class.RemoteStrike, %class.RemoteStrike* %0, i64 0, i32 4
  %30 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %29, i64 0, i32 0, i32 0, i32 0
  %31 = getelementptr inbounds %class.RemoteStrike, %class.RemoteStrike* %0, i64 0, i32 5
  %32 = getelementptr inbounds %class.RemoteStrike, %class.RemoteStrike* %0, i64 0, i32 6
  %33 = getelementptr inbounds %class.RemoteStrike, %class.RemoteStrike* %0, i64 0, i32 1, i32 0
  %34 = bitcast %"class.std::__1::unique_ptr"* %29 to i64*
  %35 = getelementptr inbounds %class.RemoteStrike, %class.RemoteStrike* %0, i64 0, i32 11
  %36 = getelementptr inbounds %class.RemoteStrike, %class.RemoteStrike* %0, i64 0, i32 11, i32 0, i32 1
  %37 = getelementptr inbounds %class.RemoteStrike, %class.RemoteStrike* %0, i64 0, i32 11, i32 0, i32 2, i32 0, i32 0
  %38 = bitcast %class.SkGlyph** %36 to i64*
  %39 = bitcast %"class.std::__1::vector"* %35 to i64*
  %40 = bitcast %class.SkGlyph** %37 to i64*
  %41 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %35, i64 0, i32 0, i32 0
  br label %42

42:                                               ; preds = %184, %21
  %43 = phi %class.SkGlyphVariant* [ %23, %21 ], [ %185, %184 ]
  %44 = phi i64 [ 0, %21 ], [ %182, %184 ]
  %45 = getelementptr inbounds %class.SkGlyphVariant, %class.SkGlyphVariant* %43, i64 %44
  %46 = bitcast %class.SkGlyphVariant* %45 to i32*
  %47 = load i32, i32* %46, align 8
  %48 = lshr i32 %47, 16
  %49 = xor i32 %48, %47
  %50 = mul i32 %49, -2048144789
  %51 = lshr i32 %50, 16
  %52 = xor i32 %51, %50
  %53 = icmp eq i32 %52, 0
  %54 = select i1 %53, i32 1, i32 %52
  %55 = load i32, i32* %27, align 4
  %56 = icmp sgt i32 %55, 0
  br i1 %56, label %57, label %86

57:                                               ; preds = %42
  %58 = add nsw i32 %55, -1
  %59 = and i32 %54, %58
  %60 = load %"struct.SkTHashTable<RemoteStrike::MaskSummary, SkPackedGlyphID, RemoteStrike::MaskSummaryTraits>::Slot"*, %"struct.SkTHashTable<RemoteStrike::MaskSummary, SkPackedGlyphID, RemoteStrike::MaskSummaryTraits>::Slot"** %28, align 8
  br label %61

61:                                               ; preds = %76, %57
  %62 = phi i32 [ 0, %57 ], [ %81, %76 ]
  %63 = phi i32 [ %59, %57 ], [ %80, %76 ]
  %64 = sext i32 %63 to i64
  %65 = getelementptr inbounds %"struct.SkTHashTable<RemoteStrike::MaskSummary, SkPackedGlyphID, RemoteStrike::MaskSummaryTraits>::Slot", %"struct.SkTHashTable<RemoteStrike::MaskSummary, SkPackedGlyphID, RemoteStrike::MaskSummaryTraits>::Slot"* %60, i64 %64
  %66 = getelementptr inbounds %"struct.SkTHashTable<RemoteStrike::MaskSummary, SkPackedGlyphID, RemoteStrike::MaskSummaryTraits>::Slot", %"struct.SkTHashTable<RemoteStrike::MaskSummary, SkPackedGlyphID, RemoteStrike::MaskSummaryTraits>::Slot"* %60, i64 %64, i32 1
  %67 = load i32, i32* %66, align 4
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %86, label %69

69:                                               ; preds = %61
  %70 = icmp eq i32 %54, %67
  br i1 %70, label %71, label %76

71:                                               ; preds = %69
  %72 = getelementptr inbounds %"struct.SkTHashTable<RemoteStrike::MaskSummary, SkPackedGlyphID, RemoteStrike::MaskSummaryTraits>::Slot", %"struct.SkTHashTable<RemoteStrike::MaskSummary, SkPackedGlyphID, RemoteStrike::MaskSummaryTraits>::Slot"* %65, i64 0, i32 0, i32 0
  %73 = load i32, i32* %72, align 4
  %74 = and i32 %73, 1048575
  %75 = icmp eq i32 %74, %47
  br i1 %75, label %83, label %76

76:                                               ; preds = %71, %69
  %77 = add nsw i32 %63, -1
  %78 = icmp slt i32 %63, 1
  %79 = select i1 %78, i32 %55, i32 0
  %80 = add nsw i32 %77, %79
  %81 = add nuw nsw i32 %62, 1
  %82 = icmp eq i32 %81, %55
  br i1 %82, label %86, label %61

83:                                               ; preds = %71
  %84 = getelementptr inbounds %"struct.SkTHashTable<RemoteStrike::MaskSummary, SkPackedGlyphID, RemoteStrike::MaskSummaryTraits>::Slot", %"struct.SkTHashTable<RemoteStrike::MaskSummary, SkPackedGlyphID, RemoteStrike::MaskSummaryTraits>::Slot"* %65, i64 0, i32 0
  %85 = icmp eq %"struct.SkTHashTable<RemoteStrike::MaskSummary, SkPackedGlyphID, RemoteStrike::MaskSummaryTraits>::Slot"* %65, null
  br i1 %85, label %86, label %175

86:                                               ; preds = %76, %61, %83, %42
  %87 = load %class.SkScalerContext*, %class.SkScalerContext** %30, align 8
  %88 = icmp eq %class.SkScalerContext* %87, null
  br i1 %88, label %89, label %102

89:                                               ; preds = %86
  %90 = load %class.SkTypeface*, %class.SkTypeface** %31, align 8
  %91 = load %class.SkDescriptor*, %class.SkDescriptor** %33, align 8
  %92 = call %class.SkScalerContext* @_ZNK10SkTypeface19createScalerContextERK22SkScalerContextEffectsPK12SkDescriptor(%class.SkTypeface* %90, %struct.SkScalerContextEffects* dereferenceable(16) %32, %class.SkDescriptor* %91) #16
  %93 = ptrtoint %class.SkScalerContext* %92 to i64
  %94 = load %class.SkScalerContext*, %class.SkScalerContext** %30, align 8
  store i64 %93, i64* %34, align 8
  %95 = icmp eq %class.SkScalerContext* %94, null
  br i1 %95, label %102, label %96

96:                                               ; preds = %89
  %97 = bitcast %class.SkScalerContext* %94 to void (%class.SkScalerContext*)***
  %98 = load void (%class.SkScalerContext*)**, void (%class.SkScalerContext*)*** %97, align 8
  %99 = getelementptr inbounds void (%class.SkScalerContext*)*, void (%class.SkScalerContext*)** %98, i64 1
  %100 = load void (%class.SkScalerContext*)*, void (%class.SkScalerContext*)** %99, align 8
  call void %100(%class.SkScalerContext* nonnull %94) #16
  %101 = load %class.SkScalerContext*, %class.SkScalerContext** %30, align 8
  br label %102

102:                                              ; preds = %96, %89, %86
  %103 = phi %class.SkScalerContext* [ %87, %86 ], [ %92, %89 ], [ %101, %96 ]
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %25) #16
  call void @_ZN15SkScalerContext9makeGlyphE15SkPackedGlyphID(%class.SkGlyph* nonnull sret %4, %class.SkScalerContext* %103, i32 %47) #16
  %104 = load %class.SkGlyph*, %class.SkGlyph** %36, align 8
  %105 = load %class.SkGlyph*, %class.SkGlyph** %37, align 8
  %106 = icmp ult %class.SkGlyph* %104, %105
  %107 = ptrtoint %class.SkGlyph* %105 to i64
  br i1 %106, label %108, label %112

108:                                              ; preds = %102
  %109 = bitcast %class.SkGlyph* %104 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %109, i8* nonnull align 8 %25, i64 40, i1 false) #16
  %110 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %104, i64 1
  %111 = ptrtoint %class.SkGlyph* %110 to i64
  store i64 %111, i64* %38, align 8
  br label %162

112:                                              ; preds = %102
  %113 = ptrtoint %class.SkGlyph* %104 to i64
  %114 = load i64, i64* %39, align 8
  %115 = sub i64 %113, %114
  %116 = sdiv exact i64 %115, 40
  %117 = add nsw i64 %116, 1
  %118 = icmp ugt i64 %117, 461168601842738790
  br i1 %118, label %119, label %121

119:                                              ; preds = %112
  %120 = bitcast %"class.std::__1::vector"* %35 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %120) #17
  unreachable

121:                                              ; preds = %112
  %122 = sub i64 %107, %114
  %123 = sdiv exact i64 %122, 40
  %124 = icmp ult i64 %123, 230584300921369395
  br i1 %124, label %125, label %130

125:                                              ; preds = %121
  %126 = shl nsw i64 %123, 1
  %127 = icmp ult i64 %126, %117
  %128 = select i1 %127, i64 %117, i64 %126
  %129 = icmp eq i64 %128, 0
  br i1 %129, label %135, label %130

130:                                              ; preds = %125, %121
  %131 = phi i64 [ %128, %125 ], [ 461168601842738790, %121 ]
  %132 = mul i64 %131, 40
  %133 = call i8* @_Znwm(i64 %132) #18
  %134 = bitcast i8* %133 to %class.SkGlyph*
  br label %135

135:                                              ; preds = %130, %125
  %136 = phi i64 [ %131, %130 ], [ 0, %125 ]
  %137 = phi %class.SkGlyph* [ %134, %130 ], [ null, %125 ]
  %138 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %137, i64 %116
  %139 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %137, i64 %136
  %140 = ptrtoint %class.SkGlyph* %139 to i64
  %141 = bitcast %class.SkGlyph* %138 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %141, i8* nonnull align 8 %25, i64 40, i1 false) #16
  %142 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %138, i64 1
  %143 = ptrtoint %class.SkGlyph* %142 to i64
  %144 = load %class.SkGlyph*, %class.SkGlyph** %41, align 8
  %145 = load i64, i64* %38, align 8
  %146 = ptrtoint %class.SkGlyph* %144 to i64
  %147 = sub i64 %145, %146
  %148 = sdiv exact i64 %147, -40
  %149 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %138, i64 %148
  %150 = ptrtoint %class.SkGlyph* %149 to i64
  %151 = icmp sgt i64 %147, 0
  br i1 %151, label %152, label %156

152:                                              ; preds = %135
  %153 = bitcast %class.SkGlyph* %149 to i8*
  %154 = bitcast %class.SkGlyph* %144 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %153, i8* align 8 %154, i64 %147, i1 false) #16
  %155 = load %class.SkGlyph*, %class.SkGlyph** %41, align 8
  br label %156

156:                                              ; preds = %152, %135
  %157 = phi %class.SkGlyph* [ %144, %135 ], [ %155, %152 ]
  store i64 %150, i64* %39, align 8
  store i64 %143, i64* %38, align 8
  store i64 %140, i64* %40, align 8
  %158 = icmp eq %class.SkGlyph* %157, null
  br i1 %158, label %162, label %159

159:                                              ; preds = %156
  %160 = bitcast %class.SkGlyph* %157 to i8*
  call void @_ZdlPv(i8* %160) #18
  %161 = load %class.SkGlyph*, %class.SkGlyph** %36, align 8
  br label %162

162:                                              ; preds = %159, %156, %108
  %163 = phi %class.SkGlyph* [ %110, %108 ], [ %142, %156 ], [ %161, %159 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %25) #16
  %164 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %163, i64 -1
  %165 = and i32 %47, 1073741823
  %166 = call zeroext i1 @_ZN14SkStrikeForGPU13CanDrawAsMaskERK7SkGlyph(%class.SkGlyph* dereferenceable(40) %164) #16
  %167 = zext i1 %166 to i32
  %168 = shl nuw nsw i32 %167, 30
  %169 = or i32 %168, %165
  %170 = call zeroext i1 @_ZN14SkStrikeForGPU13CanDrawAsSDFTERK7SkGlyph(%class.SkGlyph* dereferenceable(40) %164) #16
  %171 = zext i1 %170 to i32
  %172 = shl nuw i32 %171, 31
  %173 = or i32 %169, %172
  %174 = call %"struct.RemoteStrike::MaskSummary"* @_ZN12SkTHashTableIN12RemoteStrike11MaskSummaryE15SkPackedGlyphIDNS0_17MaskSummaryTraitsEE3setES1_(%class.SkTHashTable* %26, i32 %173) #16
  br label %175

175:                                              ; preds = %162, %83
  %176 = phi %"struct.RemoteStrike::MaskSummary"* [ %174, %162 ], [ %84, %83 ]
  %177 = getelementptr inbounds %"struct.RemoteStrike::MaskSummary", %"struct.RemoteStrike::MaskSummary"* %176, i64 0, i32 0
  %178 = load i32, i32* %177, align 4
  %179 = icmp sgt i32 %178, -1
  br i1 %179, label %180, label %181

180:                                              ; preds = %175
  call void @_ZN19SkSourceGlyphBuffer6rejectEm(%class.SkSourceGlyphBuffer* %2, i64 %44) #16
  br label %181

181:                                              ; preds = %180, %175
  %182 = add nuw i64 %44, 1
  %183 = icmp eq i64 %182, %8
  br i1 %183, label %186, label %184

184:                                              ; preds = %181
  %185 = load %class.SkGlyphVariant*, %class.SkGlyphVariant** %24, align 16, !noalias !38
  br label %42

186:                                              ; preds = %181, %3
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %6) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12RemoteStrike21prepareForPathDrawingEP21SkDrawableGlyphBufferP19SkSourceGlyphBuffer(%class.RemoteStrike*, %class.SkDrawableGlyphBuffer* nocapture readonly, %class.SkSourceGlyphBuffer*) unnamed_addr #6 align 2 {
  %4 = alloca %class.SkGlyph, align 8
  %5 = alloca %class.SkEnumerate, align 16
  %6 = bitcast %class.SkEnumerate* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %6) #16
  %7 = getelementptr inbounds %class.SkDrawableGlyphBuffer, %class.SkDrawableGlyphBuffer* %1, i64 0, i32 1
  %8 = load i64, i64* %7, align 8, !noalias !41
  %9 = getelementptr inbounds %class.SkDrawableGlyphBuffer, %class.SkDrawableGlyphBuffer* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %10 = bitcast %class.SkGlyphVariant** %9 to <2 x i64>*
  %11 = load <2 x i64>, <2 x i64>* %10, align 8, !noalias !41
  %12 = getelementptr inbounds %class.SkEnumerate, %class.SkEnumerate* %5, i64 0, i32 0
  %13 = bitcast %class.SkEnumerate* %5 to <2 x i64>*
  store <2 x i64> %11, <2 x i64>* %13, align 16
  %14 = getelementptr inbounds %class.SkEnumerate, %class.SkEnumerate* %5, i64 0, i32 0, i32 1
  store i64 %8, i64* %14, align 16
  %15 = getelementptr inbounds %class.SkEnumerate, %class.SkEnumerate* %5, i64 0, i32 1
  store i64 0, i64* %15, align 8, !alias.scope !44
  %16 = getelementptr inbounds %class.SkEnumerate, %class.SkEnumerate* %5, i64 0, i32 2, i32 0
  store %class.SkZip.64* %12, %class.SkZip.64** %16, align 16, !alias.scope !47
  %17 = getelementptr inbounds %class.SkEnumerate, %class.SkEnumerate* %5, i64 0, i32 2, i32 1
  store i64 0, i64* %17, align 8, !alias.scope !47
  %18 = getelementptr inbounds %class.SkEnumerate, %class.SkEnumerate* %5, i64 0, i32 3, i32 0
  store %class.SkZip.64* %12, %class.SkZip.64** %18, align 16, !alias.scope !52
  %19 = getelementptr inbounds %class.SkEnumerate, %class.SkEnumerate* %5, i64 0, i32 3, i32 1
  store i64 %8, i64* %19, align 8, !alias.scope !52
  %20 = icmp eq i64 %8, 0
  br i1 %20, label %266, label %21

21:                                               ; preds = %3
  %22 = extractelement <2 x i64> %11, i32 0
  %23 = inttoptr i64 %22 to %class.SkGlyphVariant*
  %24 = getelementptr inbounds %class.SkEnumerate, %class.SkEnumerate* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = bitcast %class.SkGlyph* %4 to i8*
  %26 = getelementptr inbounds %class.RemoteStrike, %class.RemoteStrike* %0, i64 0, i32 10
  %27 = getelementptr inbounds %class.RemoteStrike, %class.RemoteStrike* %0, i64 0, i32 10, i32 1
  %28 = getelementptr inbounds %class.RemoteStrike, %class.RemoteStrike* %0, i64 0, i32 10, i32 2, i32 0, i32 0, i32 0, i32 0
  %29 = getelementptr inbounds %class.RemoteStrike, %class.RemoteStrike* %0, i64 0, i32 4
  %30 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %29, i64 0, i32 0, i32 0, i32 0
  %31 = getelementptr inbounds %class.RemoteStrike, %class.RemoteStrike* %0, i64 0, i32 5
  %32 = getelementptr inbounds %class.RemoteStrike, %class.RemoteStrike* %0, i64 0, i32 6
  %33 = getelementptr inbounds %class.RemoteStrike, %class.RemoteStrike* %0, i64 0, i32 1, i32 0
  %34 = bitcast %"class.std::__1::unique_ptr"* %29 to i64*
  %35 = getelementptr inbounds %class.RemoteStrike, %class.RemoteStrike* %0, i64 0, i32 12
  %36 = getelementptr inbounds %class.RemoteStrike, %class.RemoteStrike* %0, i64 0, i32 12, i32 0, i32 1
  %37 = getelementptr inbounds %class.RemoteStrike, %class.RemoteStrike* %0, i64 0, i32 12, i32 0, i32 2, i32 0, i32 0
  %38 = bitcast %class.SkGlyph** %36 to i64*
  %39 = bitcast %"class.std::__1::vector"* %35 to i64*
  %40 = bitcast %class.SkGlyph** %37 to i64*
  %41 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %35, i64 0, i32 0, i32 0
  %42 = getelementptr inbounds %class.RemoteStrike, %class.RemoteStrike* %0, i64 0, i32 13
  %43 = bitcast %class.SkArenaAllocWithReset* %42 to %class.SkArenaAlloc*
  %44 = getelementptr inbounds %class.SkTHashTable.17, %class.SkTHashTable.17* %26, i64 0, i32 0
  %45 = getelementptr inbounds %class.SkSourceGlyphBuffer, %class.SkSourceGlyphBuffer* %2, i64 0, i32 3
  br label %46

46:                                               ; preds = %264, %21
  %47 = phi %class.SkGlyphVariant* [ %23, %21 ], [ %265, %264 ]
  %48 = phi i64 [ 0, %21 ], [ %262, %264 ]
  %49 = getelementptr inbounds %class.SkGlyphVariant, %class.SkGlyphVariant* %47, i64 %48
  %50 = bitcast %class.SkGlyphVariant* %49 to i32*
  %51 = load i32, i32* %50, align 8
  %52 = lshr i32 %51, 2
  %53 = trunc i32 %52 to i16
  %54 = and i32 %52, 65535
  %55 = mul i32 %54, -2048144789
  %56 = lshr i32 %55, 16
  %57 = xor i32 %56, %55
  %58 = icmp eq i32 %57, 0
  %59 = select i1 %58, i32 1, i32 %57
  %60 = load i32, i32* %27, align 4
  %61 = icmp sgt i32 %60, 0
  br i1 %61, label %62, label %91

62:                                               ; preds = %46
  %63 = add nsw i32 %60, -1
  %64 = and i32 %59, %63
  %65 = load %"struct.SkTHashTable<RemoteStrike::PathSummary, unsigned short, RemoteStrike::PathSummaryTraits>::Slot"*, %"struct.SkTHashTable<RemoteStrike::PathSummary, unsigned short, RemoteStrike::PathSummaryTraits>::Slot"** %28, align 8
  br label %66

66:                                               ; preds = %81, %62
  %67 = phi i32 [ 0, %62 ], [ %86, %81 ]
  %68 = phi i32 [ %64, %62 ], [ %85, %81 ]
  %69 = sext i32 %68 to i64
  %70 = getelementptr inbounds %"struct.SkTHashTable<RemoteStrike::PathSummary, unsigned short, RemoteStrike::PathSummaryTraits>::Slot", %"struct.SkTHashTable<RemoteStrike::PathSummary, unsigned short, RemoteStrike::PathSummaryTraits>::Slot"* %65, i64 %69
  %71 = getelementptr inbounds %"struct.SkTHashTable<RemoteStrike::PathSummary, unsigned short, RemoteStrike::PathSummaryTraits>::Slot", %"struct.SkTHashTable<RemoteStrike::PathSummary, unsigned short, RemoteStrike::PathSummaryTraits>::Slot"* %65, i64 %69, i32 1
  %72 = load i32, i32* %71, align 4
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %91, label %74

74:                                               ; preds = %66
  %75 = icmp eq i32 %59, %72
  br i1 %75, label %76, label %81

76:                                               ; preds = %74
  %77 = bitcast %"struct.SkTHashTable<RemoteStrike::PathSummary, unsigned short, RemoteStrike::PathSummaryTraits>::Slot"* %70 to i32*
  %78 = load i32, i32* %77, align 4
  %79 = trunc i32 %78 to i16
  %80 = icmp eq i16 %53, %79
  br i1 %80, label %88, label %81

81:                                               ; preds = %76, %74
  %82 = add nsw i32 %68, -1
  %83 = icmp slt i32 %68, 1
  %84 = select i1 %83, i32 %60, i32 0
  %85 = add nsw i32 %82, %84
  %86 = add nuw nsw i32 %67, 1
  %87 = icmp eq i32 %86, %60
  br i1 %87, label %91, label %66

88:                                               ; preds = %76
  %89 = getelementptr inbounds %"struct.SkTHashTable<RemoteStrike::PathSummary, unsigned short, RemoteStrike::PathSummaryTraits>::Slot", %"struct.SkTHashTable<RemoteStrike::PathSummary, unsigned short, RemoteStrike::PathSummaryTraits>::Slot"* %70, i64 0, i32 0
  %90 = icmp eq %"struct.SkTHashTable<RemoteStrike::PathSummary, unsigned short, RemoteStrike::PathSummaryTraits>::Slot"* %70, null
  br i1 %90, label %91, label %251

91:                                               ; preds = %81, %66, %88, %46
  %92 = load %class.SkScalerContext*, %class.SkScalerContext** %30, align 8
  %93 = icmp eq %class.SkScalerContext* %92, null
  br i1 %93, label %94, label %107

94:                                               ; preds = %91
  %95 = load %class.SkTypeface*, %class.SkTypeface** %31, align 8
  %96 = load %class.SkDescriptor*, %class.SkDescriptor** %33, align 8
  %97 = call %class.SkScalerContext* @_ZNK10SkTypeface19createScalerContextERK22SkScalerContextEffectsPK12SkDescriptor(%class.SkTypeface* %95, %struct.SkScalerContextEffects* dereferenceable(16) %32, %class.SkDescriptor* %96) #16
  %98 = ptrtoint %class.SkScalerContext* %97 to i64
  %99 = load %class.SkScalerContext*, %class.SkScalerContext** %30, align 8
  store i64 %98, i64* %34, align 8
  %100 = icmp eq %class.SkScalerContext* %99, null
  br i1 %100, label %107, label %101

101:                                              ; preds = %94
  %102 = bitcast %class.SkScalerContext* %99 to void (%class.SkScalerContext*)***
  %103 = load void (%class.SkScalerContext*)**, void (%class.SkScalerContext*)*** %102, align 8
  %104 = getelementptr inbounds void (%class.SkScalerContext*)*, void (%class.SkScalerContext*)** %103, i64 1
  %105 = load void (%class.SkScalerContext*)*, void (%class.SkScalerContext*)** %104, align 8
  call void %105(%class.SkScalerContext* nonnull %99) #16
  %106 = load %class.SkScalerContext*, %class.SkScalerContext** %30, align 8
  br label %107

107:                                              ; preds = %101, %94, %91
  %108 = phi %class.SkScalerContext* [ %92, %91 ], [ %97, %94 ], [ %106, %101 ]
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %25) #16
  %109 = shl nuw nsw i32 %54, 2
  call void @_ZN15SkScalerContext9makeGlyphE15SkPackedGlyphID(%class.SkGlyph* nonnull sret %4, %class.SkScalerContext* %108, i32 %109) #16
  %110 = load %class.SkGlyph*, %class.SkGlyph** %36, align 8
  %111 = load %class.SkGlyph*, %class.SkGlyph** %37, align 8
  %112 = icmp ult %class.SkGlyph* %110, %111
  %113 = ptrtoint %class.SkGlyph* %111 to i64
  br i1 %112, label %114, label %118

114:                                              ; preds = %107
  %115 = bitcast %class.SkGlyph* %110 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %115, i8* nonnull align 8 %25, i64 40, i1 false) #16
  %116 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %110, i64 1
  %117 = ptrtoint %class.SkGlyph* %116 to i64
  store i64 %117, i64* %38, align 8
  br label %168

118:                                              ; preds = %107
  %119 = ptrtoint %class.SkGlyph* %110 to i64
  %120 = load i64, i64* %39, align 8
  %121 = sub i64 %119, %120
  %122 = sdiv exact i64 %121, 40
  %123 = add nsw i64 %122, 1
  %124 = icmp ugt i64 %123, 461168601842738790
  br i1 %124, label %125, label %127

125:                                              ; preds = %118
  %126 = bitcast %"class.std::__1::vector"* %35 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %126) #17
  unreachable

127:                                              ; preds = %118
  %128 = sub i64 %113, %120
  %129 = sdiv exact i64 %128, 40
  %130 = icmp ult i64 %129, 230584300921369395
  br i1 %130, label %131, label %136

131:                                              ; preds = %127
  %132 = shl nsw i64 %129, 1
  %133 = icmp ult i64 %132, %123
  %134 = select i1 %133, i64 %123, i64 %132
  %135 = icmp eq i64 %134, 0
  br i1 %135, label %141, label %136

136:                                              ; preds = %131, %127
  %137 = phi i64 [ %134, %131 ], [ 461168601842738790, %127 ]
  %138 = mul i64 %137, 40
  %139 = call i8* @_Znwm(i64 %138) #18
  %140 = bitcast i8* %139 to %class.SkGlyph*
  br label %141

141:                                              ; preds = %136, %131
  %142 = phi i64 [ %137, %136 ], [ 0, %131 ]
  %143 = phi %class.SkGlyph* [ %140, %136 ], [ null, %131 ]
  %144 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %143, i64 %122
  %145 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %143, i64 %142
  %146 = ptrtoint %class.SkGlyph* %145 to i64
  %147 = bitcast %class.SkGlyph* %144 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %147, i8* nonnull align 8 %25, i64 40, i1 false) #16
  %148 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %144, i64 1
  %149 = ptrtoint %class.SkGlyph* %148 to i64
  %150 = load %class.SkGlyph*, %class.SkGlyph** %41, align 8
  %151 = load i64, i64* %38, align 8
  %152 = ptrtoint %class.SkGlyph* %150 to i64
  %153 = sub i64 %151, %152
  %154 = sdiv exact i64 %153, -40
  %155 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %144, i64 %154
  %156 = ptrtoint %class.SkGlyph* %155 to i64
  %157 = icmp sgt i64 %153, 0
  br i1 %157, label %158, label %162

158:                                              ; preds = %141
  %159 = bitcast %class.SkGlyph* %155 to i8*
  %160 = bitcast %class.SkGlyph* %150 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %159, i8* align 8 %160, i64 %153, i1 false) #16
  %161 = load %class.SkGlyph*, %class.SkGlyph** %41, align 8
  br label %162

162:                                              ; preds = %158, %141
  %163 = phi %class.SkGlyph* [ %150, %141 ], [ %161, %158 ]
  store i64 %156, i64* %39, align 8
  store i64 %149, i64* %38, align 8
  store i64 %146, i64* %40, align 8
  %164 = icmp eq %class.SkGlyph* %163, null
  br i1 %164, label %168, label %165

165:                                              ; preds = %162
  %166 = bitcast %class.SkGlyph* %163 to i8*
  call void @_ZdlPv(i8* %166) #18
  %167 = load %class.SkGlyph*, %class.SkGlyph** %36, align 8
  br label %168

168:                                              ; preds = %165, %162, %114
  %169 = phi %class.SkGlyph* [ %116, %114 ], [ %148, %162 ], [ %167, %165 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %25) #16
  %170 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %169, i64 -1
  %171 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %170, i64 0, i32 0
  %172 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %169, i64 -1, i32 1
  %173 = load i16, i16* %171, align 2
  %174 = load i16, i16* %172, align 2
  %175 = icmp ult i16 %173, %174
  %176 = select i1 %175, i16 %174, i16 %173
  %177 = zext i16 %176 to i32
  %178 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %169, i64 -1, i32 8
  %179 = load i8, i8* %178, align 8
  %180 = icmp eq i8 %179, 3
  %181 = icmp eq i16 %173, 0
  %182 = or i1 %181, %180
  br i1 %182, label %189, label %183

183:                                              ; preds = %168
  %184 = load %class.SkScalerContext*, %class.SkScalerContext** %30, align 8
  %185 = call zeroext i1 @_ZN7SkGlyph7setPathEP12SkArenaAllocP15SkScalerContext(%class.SkGlyph* %170, %class.SkArenaAlloc* %43, %class.SkScalerContext* %184) #16
  %186 = call %class.SkPath* @_ZNK7SkGlyph4pathEv(%class.SkGlyph* %170) #16
  %187 = icmp eq %class.SkPath* %186, null
  %188 = select i1 %187, i32 %177, i32 0
  br label %189

189:                                              ; preds = %183, %168
  %190 = phi i32 [ %177, %168 ], [ %188, %183 ]
  %191 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %169, i64 -1, i32 10, i32 0
  %192 = load i32, i32* %191, align 4
  %193 = lshr i32 %192, 2
  %194 = shl i32 %190, 16
  %195 = and i32 %193, 65535
  %196 = or i32 %195, %194
  %197 = load i32, i32* %44, align 8
  %198 = shl nsw i32 %197, 2
  %199 = load i32, i32* %27, align 4
  %200 = mul nsw i32 %199, 3
  %201 = icmp slt i32 %198, %200
  br i1 %201, label %207, label %202

202:                                              ; preds = %189
  %203 = icmp sgt i32 %199, 0
  %204 = shl nsw i32 %199, 1
  %205 = select i1 %203, i32 %204, i32 4
  call void @_ZN12SkTHashTableIN12RemoteStrike11PathSummaryEtNS0_17PathSummaryTraitsEE6resizeEi(%class.SkTHashTable.17* %26, i32 %205) #16
  %206 = load i32, i32* %27, align 4
  br label %207

207:                                              ; preds = %202, %189
  %208 = phi i32 [ %199, %189 ], [ %206, %202 ]
  %209 = trunc i32 %193 to i16
  %210 = mul i32 %195, -2048144789
  %211 = lshr i32 %210, 16
  %212 = xor i32 %211, %210
  %213 = icmp eq i32 %212, 0
  %214 = select i1 %213, i32 1, i32 %212
  %215 = icmp sgt i32 %208, 0
  br i1 %215, label %216, label %251

216:                                              ; preds = %207
  %217 = add nsw i32 %208, -1
  %218 = and i32 %217, %214
  %219 = load %"struct.SkTHashTable<RemoteStrike::PathSummary, unsigned short, RemoteStrike::PathSummaryTraits>::Slot"*, %"struct.SkTHashTable<RemoteStrike::PathSummary, unsigned short, RemoteStrike::PathSummaryTraits>::Slot"** %28, align 8
  br label %220

220:                                              ; preds = %244, %216
  %221 = phi i32 [ 0, %216 ], [ %249, %244 ]
  %222 = phi i32 [ %218, %216 ], [ %248, %244 ]
  %223 = sext i32 %222 to i64
  %224 = getelementptr inbounds %"struct.SkTHashTable<RemoteStrike::PathSummary, unsigned short, RemoteStrike::PathSummaryTraits>::Slot", %"struct.SkTHashTable<RemoteStrike::PathSummary, unsigned short, RemoteStrike::PathSummaryTraits>::Slot"* %219, i64 %223
  %225 = getelementptr inbounds %"struct.SkTHashTable<RemoteStrike::PathSummary, unsigned short, RemoteStrike::PathSummaryTraits>::Slot", %"struct.SkTHashTable<RemoteStrike::PathSummary, unsigned short, RemoteStrike::PathSummaryTraits>::Slot"* %219, i64 %223, i32 1
  %226 = load i32, i32* %225, align 4
  %227 = icmp eq i32 %226, 0
  br i1 %227, label %228, label %234

228:                                              ; preds = %220
  %229 = getelementptr inbounds %"struct.SkTHashTable<RemoteStrike::PathSummary, unsigned short, RemoteStrike::PathSummaryTraits>::Slot", %"struct.SkTHashTable<RemoteStrike::PathSummary, unsigned short, RemoteStrike::PathSummaryTraits>::Slot"* %219, i64 %223, i32 1
  %230 = getelementptr inbounds %"struct.SkTHashTable<RemoteStrike::PathSummary, unsigned short, RemoteStrike::PathSummaryTraits>::Slot", %"struct.SkTHashTable<RemoteStrike::PathSummary, unsigned short, RemoteStrike::PathSummaryTraits>::Slot"* %224, i64 0, i32 0
  %231 = bitcast %"struct.SkTHashTable<RemoteStrike::PathSummary, unsigned short, RemoteStrike::PathSummaryTraits>::Slot"* %224 to i32*
  store i32 %196, i32* %231, align 4
  store i32 %214, i32* %229, align 4
  %232 = load i32, i32* %44, align 8
  %233 = add nsw i32 %232, 1
  store i32 %233, i32* %44, align 8
  br label %251

234:                                              ; preds = %220
  %235 = icmp eq i32 %214, %226
  br i1 %235, label %236, label %244

236:                                              ; preds = %234
  %237 = bitcast %"struct.SkTHashTable<RemoteStrike::PathSummary, unsigned short, RemoteStrike::PathSummaryTraits>::Slot"* %224 to i32*
  %238 = load i32, i32* %237, align 4
  %239 = trunc i32 %238 to i16
  %240 = icmp eq i16 %209, %239
  br i1 %240, label %241, label %244

241:                                              ; preds = %236
  %242 = bitcast %"struct.SkTHashTable<RemoteStrike::PathSummary, unsigned short, RemoteStrike::PathSummaryTraits>::Slot"* %224 to i32*
  %243 = getelementptr inbounds %"struct.SkTHashTable<RemoteStrike::PathSummary, unsigned short, RemoteStrike::PathSummaryTraits>::Slot", %"struct.SkTHashTable<RemoteStrike::PathSummary, unsigned short, RemoteStrike::PathSummaryTraits>::Slot"* %224, i64 0, i32 0
  store i32 %196, i32* %242, align 4
  br label %251

244:                                              ; preds = %236, %234
  %245 = add nsw i32 %222, -1
  %246 = icmp slt i32 %222, 1
  %247 = select i1 %246, i32 %208, i32 0
  %248 = add nsw i32 %245, %247
  %249 = add nuw nsw i32 %221, 1
  %250 = icmp eq i32 %249, %208
  br i1 %250, label %251, label %220

251:                                              ; preds = %244, %241, %228, %207, %88
  %252 = phi %"struct.RemoteStrike::PathSummary"* [ %89, %88 ], [ %243, %241 ], [ %230, %228 ], [ null, %207 ], [ null, %244 ]
  %253 = getelementptr inbounds %"struct.RemoteStrike::PathSummary", %"struct.RemoteStrike::PathSummary"* %252, i64 0, i32 1
  %254 = load i16, i16* %253, align 2
  %255 = icmp eq i16 %254, 0
  br i1 %255, label %261, label %256

256:                                              ; preds = %251
  %257 = zext i16 %254 to i32
  %258 = load i32, i32* %45, align 4
  %259 = icmp slt i32 %258, %257
  %260 = select i1 %259, i32 %257, i32 %258
  store i32 %260, i32* %45, align 4
  call void @_ZN19SkSourceGlyphBuffer6rejectEm(%class.SkSourceGlyphBuffer* %2, i64 %48) #16
  br label %261

261:                                              ; preds = %256, %251
  %262 = add nuw i64 %48, 1
  %263 = icmp eq i64 %262, %8
  br i1 %263, label %266, label %264

264:                                              ; preds = %261
  %265 = load %class.SkGlyphVariant*, %class.SkGlyphVariant** %24, align 16, !noalias !57
  br label %46

266:                                              ; preds = %261, %3
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %6) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18SkStrikeServerImplC2EPN14SkStrikeServer24DiscardableHandleManagerE(%class.SkStrikeServerImpl* nocapture, %"class.SkStrikeServer::DiscardableHandleManager"*) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %class.SkStrikeServerImpl, %class.SkStrikeServerImpl* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV18SkStrikeServerImpl, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %class.SkStrikeServerImpl, %class.SkStrikeServerImpl* %0, i64 0, i32 1
  %5 = getelementptr inbounds %class.SkStrikeServerImpl, %class.SkStrikeServerImpl* %0, i64 0, i32 1, i32 0, i32 3
  %6 = bitcast %"class.std::__1::__compressed_pair.90"* %5 to i32*
  %7 = bitcast %"class.std::__1::unordered_map"* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 32, i1 false) #16
  store i32 1065353216, i32* %6, align 4
  %8 = getelementptr inbounds %class.SkStrikeServerImpl, %class.SkStrikeServerImpl* %0, i64 0, i32 2
  store %"class.SkStrikeServer::DiscardableHandleManager"* %1, %"class.SkStrikeServer::DiscardableHandleManager"** %8, align 8
  %9 = getelementptr inbounds %class.SkStrikeServerImpl, %class.SkStrikeServerImpl* %0, i64 0, i32 3
  %10 = bitcast %class.SkTHashSet* %9 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 16, i1 false) #16
  %11 = getelementptr inbounds %class.SkStrikeServerImpl, %class.SkStrikeServerImpl* %0, i64 0, i32 4
  store i64 2000, i64* %11, align 8
  %12 = getelementptr inbounds %class.SkStrikeServerImpl, %class.SkStrikeServerImpl* %0, i64 0, i32 5
  %13 = bitcast %class.SkTHashMap* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 56, i1 false)
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN18SkStrikeServerImpl38setMaxEntriesInDescriptorMapForTestingEm(%class.SkStrikeServerImpl* nocapture, i64) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %class.SkStrikeServerImpl, %class.SkStrikeServerImpl* %0, i64 0, i32 4
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK18SkStrikeServerImpl29remoteStrikeMapSizeForTestingEv(%class.SkStrikeServerImpl* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %class.SkStrikeServerImpl, %class.SkStrikeServerImpl* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  ret i64 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18SkStrikeServerImpl17serializeTypefaceEP10SkTypeface(%class.sk_sp* noalias nocapture sret, %class.SkStrikeServerImpl*, %class.SkTypeface*) local_unnamed_addr #1 align 2 {
  %4 = alloca %"struct.SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair", align 8
  %5 = alloca %struct.WireTypeface, align 4
  %6 = alloca %class.sk_sp, align 8
  %7 = getelementptr inbounds %class.SkStrikeServerImpl, %class.SkStrikeServerImpl* %1, i64 0, i32 5
  %8 = tail call i32 @_ZN10SkTypeface8UniqueIDEPKS_(%class.SkTypeface* %2) #16
  %9 = lshr i32 %8, 16
  %10 = xor i32 %9, %8
  %11 = mul i32 %10, -2048144789
  %12 = lshr i32 %11, 13
  %13 = xor i32 %12, %11
  %14 = mul i32 %13, -1028477387
  %15 = lshr i32 %14, 16
  %16 = xor i32 %15, %14
  %17 = icmp eq i32 %16, 0
  %18 = select i1 %17, i32 1, i32 %16
  %19 = getelementptr inbounds %class.SkStrikeServerImpl, %class.SkStrikeServerImpl* %1, i64 0, i32 5, i32 0, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = icmp sgt i32 %20, 0
  br i1 %21, label %22, label %62

22:                                               ; preds = %3
  %23 = add nsw i32 %20, -1
  %24 = and i32 %18, %23
  %25 = getelementptr inbounds %class.SkStrikeServerImpl, %class.SkStrikeServerImpl* %1, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %26 = load %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair>::Slot"*, %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair>::Slot"** %25, align 8
  br label %27

27:                                               ; preds = %41, %22
  %28 = phi i32 [ 0, %22 ], [ %46, %41 ]
  %29 = phi i32 [ %24, %22 ], [ %45, %41 ]
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair>::Slot"* %26, i64 %30, i32 1
  %32 = load i32, i32* %31, align 8
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %62, label %34

34:                                               ; preds = %27
  %35 = icmp eq i32 %18, %32
  br i1 %35, label %36, label %41

36:                                               ; preds = %34
  %37 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair>::Slot"* %26, i64 %30, i32 0
  %38 = getelementptr inbounds %"struct.SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair", %"struct.SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair"* %37, i64 0, i32 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = icmp eq i32 %8, %39
  br i1 %40, label %48, label %41

41:                                               ; preds = %36, %34
  %42 = add nsw i32 %29, -1
  %43 = icmp slt i32 %29, 1
  %44 = select i1 %43, i32 %20, i32 0
  %45 = add nsw i32 %42, %44
  %46 = add nuw nsw i32 %28, 1
  %47 = icmp eq i32 %46, %20
  br i1 %47, label %62, label %27

48:                                               ; preds = %36
  %49 = icmp eq %"struct.SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair"* %37, null
  %50 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair>::Slot"* %26, i64 %30, i32 0, i32 0, i32 1
  %51 = icmp eq %class.sk_sp* %50, null
  %52 = or i1 %49, %51
  br i1 %52, label %62, label %53

53:                                               ; preds = %48
  %54 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  %55 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %50, i64 0, i32 0
  %56 = load %class.SkData*, %class.SkData** %55, align 8
  %57 = icmp eq %class.SkData* %56, null
  br i1 %57, label %61, label %58

58:                                               ; preds = %53
  %59 = getelementptr inbounds %class.SkData, %class.SkData* %56, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = atomicrmw add i32* %59, i32 1 monotonic
  br label %61

61:                                               ; preds = %53, %58
  store %class.SkData* %56, %class.SkData** %54, align 8
  br label %123

62:                                               ; preds = %27, %41, %3, %48
  %63 = bitcast %struct.WireTypeface* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %63) #16
  %64 = getelementptr inbounds %struct.WireTypeface, %struct.WireTypeface* %5, i64 0, i32 0
  %65 = getelementptr inbounds %struct.WireTypeface, %struct.WireTypeface* %5, i64 0, i32 1
  %66 = getelementptr inbounds %struct.WireTypeface, %struct.WireTypeface* %5, i64 0, i32 2, i32 0
  %67 = getelementptr inbounds %struct.WireTypeface, %struct.WireTypeface* %5, i64 0, i32 3
  %68 = bitcast %struct.WireTypeface* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %68, i8 -86, i64 16, i1 false)
  %69 = tail call i32 @_ZN10SkTypeface8UniqueIDEPKS_(%class.SkTypeface* %2) #16
  %70 = tail call i32 @_ZNK10SkTypeface11countGlyphsEv(%class.SkTypeface* %2) #16
  %71 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %2, i64 0, i32 2, i32 0
  %72 = load i32, i32* %71, align 4
  %73 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %2, i64 0, i32 5
  %74 = load i8, i8* %73, align 1, !range !2
  store i32 %69, i32* %64, align 4
  store i32 %70, i32* %65, align 4
  store i32 %72, i32* %66, align 4
  store i8 %74, i8* %67, align 4
  %75 = tail call i32 @_ZN10SkTypeface8UniqueIDEPKS_(%class.SkTypeface* %2) #16
  call void @_ZN6SkData12MakeWithCopyEPKvm(%class.sk_sp* nonnull sret %6, i8* nonnull %63, i64 16) #16
  %76 = bitcast %"struct.SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %76)
  %77 = getelementptr inbounds %class.SkTHashMap, %class.SkTHashMap* %7, i64 0, i32 0
  %78 = getelementptr inbounds %"struct.SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair", %"struct.SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair"* %4, i64 0, i32 0, i32 0
  store i32 %75, i32* %78, align 8
  %79 = getelementptr inbounds %"struct.SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair", %"struct.SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair"* %4, i64 0, i32 0, i32 1
  %80 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %6, i64 0, i32 0
  %81 = bitcast %class.sk_sp* %6 to i64*
  %82 = load i64, i64* %81, align 8
  store %class.SkData* null, %class.SkData** %80, align 8
  %83 = bitcast %class.sk_sp* %79 to i64*
  store i64 %82, i64* %83, align 8
  %84 = getelementptr inbounds %class.SkTHashMap, %class.SkTHashMap* %7, i64 0, i32 0, i32 0
  %85 = load i32, i32* %84, align 8
  %86 = shl nsw i32 %85, 2
  %87 = load i32, i32* %19, align 4
  %88 = mul nsw i32 %87, 3
  %89 = icmp slt i32 %86, %88
  br i1 %89, label %94, label %90

90:                                               ; preds = %62
  %91 = icmp sgt i32 %87, 0
  %92 = shl nsw i32 %87, 1
  %93 = select i1 %91, i32 %92, i32 4
  call void @_ZN12SkTHashTableIN10SkTHashMapIj5sk_spI6SkDataE10SkGoodHashE4PairEjS6_E6resizeEi(%class.SkTHashTable.101* %77, i32 %93) #16
  br label %94

94:                                               ; preds = %90, %62
  %95 = call %"struct.SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair"* @_ZN12SkTHashTableIN10SkTHashMapIj5sk_spI6SkDataE10SkGoodHashE4PairEjS6_E12uncheckedSetEOS6_(%class.SkTHashTable.101* %77, %"struct.SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair"* nonnull dereferenceable(16) %4) #16
  %96 = getelementptr inbounds %"struct.SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair", %"struct.SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair"* %4, i64 0, i32 0, i32 1, i32 0
  %97 = load %class.SkData*, %class.SkData** %96, align 8
  %98 = icmp eq %class.SkData* %97, null
  br i1 %98, label %105, label %99

99:                                               ; preds = %94
  %100 = getelementptr inbounds %class.SkData, %class.SkData* %97, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %101 = atomicrmw add i32* %100, i32 -1 acq_rel
  %102 = icmp eq i32 %101, 1
  br i1 %102, label %103, label %105

103:                                              ; preds = %99
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %97) #16
  %104 = bitcast %class.SkData* %97 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %104) #16
  br label %105

105:                                              ; preds = %94, %99, %103
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %76)
  %106 = load %class.SkData*, %class.SkData** %80, align 8
  %107 = icmp eq %class.SkData* %106, null
  br i1 %107, label %114, label %108

108:                                              ; preds = %105
  %109 = getelementptr inbounds %class.SkData, %class.SkData* %106, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %110 = atomicrmw add i32* %109, i32 -1 acq_rel
  %111 = icmp eq i32 %110, 1
  br i1 %111, label %112, label %114

112:                                              ; preds = %108
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %106) #16
  %113 = bitcast %class.SkData* %106 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %113) #16
  br label %114

114:                                              ; preds = %105, %108, %112
  %115 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  %116 = getelementptr inbounds %"struct.SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair", %"struct.SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair"* %95, i64 0, i32 0, i32 1, i32 0
  %117 = load %class.SkData*, %class.SkData** %116, align 8
  %118 = icmp eq %class.SkData* %117, null
  br i1 %118, label %122, label %119

119:                                              ; preds = %114
  %120 = getelementptr inbounds %class.SkData, %class.SkData* %117, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %121 = atomicrmw add i32* %120, i32 1 monotonic
  br label %122

122:                                              ; preds = %114, %119
  store %class.SkData* %117, %class.SkData** %115, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %63) #16
  br label %123

123:                                              ; preds = %122, %61
  ret void
}

declare i32 @_ZN10SkTypeface8UniqueIDEPKS_(%class.SkTypeface*) local_unnamed_addr #4

declare i32 @_ZNK10SkTypeface11countGlyphsEv(%class.SkTypeface*) local_unnamed_addr #4

declare void @_ZN6SkData12MakeWithCopyEPKvm(%class.sk_sp* sret, i8*, i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18SkStrikeServerImpl15writeStrikeDataEPNSt3__16vectorIhNS0_9allocatorIhEEEE(%class.SkStrikeServerImpl* nocapture, %"class.std::__1::vector.37"*) local_unnamed_addr #1 align 2 {
  %3 = alloca %class.Serializer, align 8
  %4 = getelementptr inbounds %class.SkStrikeServerImpl, %class.SkStrikeServerImpl* %0, i64 0, i32 6
  %5 = getelementptr inbounds %class.SkStrikeServerImpl, %class.SkStrikeServerImpl* %0, i64 0, i32 6, i32 0, i32 1
  %6 = load i32, i32* %5, align 4
  %7 = icmp sgt i32 %6, 0
  br i1 %7, label %8, label %61

8:                                                ; preds = %2
  %9 = getelementptr inbounds %class.SkStrikeServerImpl, %class.SkStrikeServerImpl* %0, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0
  br label %10

10:                                               ; preds = %46, %8
  %11 = phi i32 [ %6, %8 ], [ %47, %46 ]
  %12 = phi i64 [ 0, %8 ], [ %48, %46 ]
  %13 = phi i64 [ 0, %8 ], [ %49, %46 ]
  %14 = load %"struct.SkTHashTable<RemoteStrike *, RemoteStrike *, SkTHashSet<RemoteStrike *, SkGoodHash>::Traits>::Slot"*, %"struct.SkTHashTable<RemoteStrike *, RemoteStrike *, SkTHashSet<RemoteStrike *, SkGoodHash>::Traits>::Slot"** %9, align 8
  %15 = getelementptr inbounds %"struct.SkTHashTable<RemoteStrike *, RemoteStrike *, SkTHashSet<RemoteStrike *, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<RemoteStrike *, RemoteStrike *, SkTHashSet<RemoteStrike *, SkGoodHash>::Traits>::Slot"* %14, i64 %13, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %46, label %18

18:                                               ; preds = %10
  %19 = getelementptr inbounds %"struct.SkTHashTable<RemoteStrike *, RemoteStrike *, SkTHashSet<RemoteStrike *, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<RemoteStrike *, RemoteStrike *, SkTHashSet<RemoteStrike *, SkGoodHash>::Traits>::Slot"* %14, i64 %13, i32 0
  %20 = load %class.RemoteStrike*, %class.RemoteStrike** %19, align 8
  %21 = getelementptr inbounds %class.RemoteStrike, %class.RemoteStrike* %20, i64 0, i32 11, i32 0, i32 0
  %22 = load %class.SkGlyph*, %class.SkGlyph** %21, align 8
  %23 = getelementptr inbounds %class.RemoteStrike, %class.RemoteStrike* %20, i64 0, i32 11, i32 0, i32 1
  %24 = load %class.SkGlyph*, %class.SkGlyph** %23, align 8
  %25 = icmp eq %class.SkGlyph* %22, %24
  br i1 %25, label %26, label %32

26:                                               ; preds = %18
  %27 = getelementptr inbounds %class.RemoteStrike, %class.RemoteStrike* %20, i64 0, i32 12, i32 0, i32 0
  %28 = load %class.SkGlyph*, %class.SkGlyph** %27, align 8
  %29 = getelementptr inbounds %class.RemoteStrike, %class.RemoteStrike* %20, i64 0, i32 12, i32 0, i32 1
  %30 = load %class.SkGlyph*, %class.SkGlyph** %29, align 8
  %31 = icmp eq %class.SkGlyph* %28, %30
  br i1 %31, label %34, label %32

32:                                               ; preds = %26, %18
  %33 = add i64 %12, 1
  br label %46

34:                                               ; preds = %26
  %35 = getelementptr inbounds %class.RemoteStrike, %class.RemoteStrike* %20, i64 0, i32 4, i32 0, i32 0, i32 0
  %36 = load %class.SkScalerContext*, %class.SkScalerContext** %35, align 8
  store %class.SkScalerContext* null, %class.SkScalerContext** %35, align 8
  %37 = icmp eq %class.SkScalerContext* %36, null
  br i1 %37, label %43, label %38

38:                                               ; preds = %34
  %39 = bitcast %class.SkScalerContext* %36 to void (%class.SkScalerContext*)***
  %40 = load void (%class.SkScalerContext*)**, void (%class.SkScalerContext*)*** %39, align 8
  %41 = getelementptr inbounds void (%class.SkScalerContext*)*, void (%class.SkScalerContext*)** %40, i64 1
  %42 = load void (%class.SkScalerContext*)*, void (%class.SkScalerContext*)** %41, align 8
  tail call void %42(%class.SkScalerContext* nonnull %36) #16
  br label %43

43:                                               ; preds = %38, %34
  %44 = getelementptr inbounds %class.RemoteStrike, %class.RemoteStrike* %20, i64 0, i32 5
  store %class.SkTypeface* null, %class.SkTypeface** %44, align 8
  %45 = load i32, i32* %5, align 4
  br label %46

46:                                               ; preds = %43, %32, %10
  %47 = phi i32 [ %11, %10 ], [ %45, %43 ], [ %11, %32 ]
  %48 = phi i64 [ %12, %10 ], [ %12, %43 ], [ %33, %32 ]
  %49 = add nuw nsw i64 %13, 1
  %50 = sext i32 %47 to i64
  %51 = icmp slt i64 %49, %50
  br i1 %51, label %10, label %52

52:                                               ; preds = %46
  %53 = icmp eq i64 %48, 0
  br i1 %53, label %61, label %54

54:                                               ; preds = %52
  %55 = getelementptr inbounds %class.SkStrikeServerImpl, %class.SkStrikeServerImpl* %0, i64 0, i32 7, i32 0, i32 1
  %56 = bitcast %struct.WireTypeface** %55 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = getelementptr inbounds %class.SkStrikeServerImpl, %class.SkStrikeServerImpl* %0, i64 0, i32 7
  %59 = bitcast %"class.std::__1::vector.118"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  br label %80

61:                                               ; preds = %2, %52
  %62 = getelementptr inbounds %class.SkStrikeServerImpl, %class.SkStrikeServerImpl* %0, i64 0, i32 7, i32 0, i32 0
  %63 = load %struct.WireTypeface*, %struct.WireTypeface** %62, align 8
  %64 = getelementptr inbounds %class.SkStrikeServerImpl, %class.SkStrikeServerImpl* %0, i64 0, i32 7, i32 0, i32 1
  %65 = load %struct.WireTypeface*, %struct.WireTypeface** %64, align 8
  %66 = icmp eq %struct.WireTypeface* %63, %65
  br i1 %66, label %71, label %67

67:                                               ; preds = %61
  %68 = ptrtoint %struct.WireTypeface* %63 to i64
  %69 = ptrtoint %struct.WireTypeface* %65 to i64
  %70 = bitcast %struct.WireTypeface** %64 to i64*
  br label %80

71:                                               ; preds = %61
  %72 = getelementptr inbounds %class.SkTHashSet.109, %class.SkTHashSet.109* %4, i64 0, i32 0, i32 0
  store i32 0, i32* %72, align 8
  store i32 0, i32* %5, align 4
  %73 = getelementptr inbounds %class.SkStrikeServerImpl, %class.SkStrikeServerImpl* %0, i64 0, i32 6, i32 0, i32 2
  %74 = getelementptr inbounds %class.SkAutoTArray.111, %class.SkAutoTArray.111* %73, i64 0, i32 0, i32 0, i32 0, i32 0
  %75 = load %"struct.SkTHashTable<RemoteStrike *, RemoteStrike *, SkTHashSet<RemoteStrike *, SkGoodHash>::Traits>::Slot"*, %"struct.SkTHashTable<RemoteStrike *, RemoteStrike *, SkTHashSet<RemoteStrike *, SkGoodHash>::Traits>::Slot"** %74, align 8
  %76 = bitcast %class.SkAutoTArray.111* %73 to i64*
  store i64 0, i64* %76, align 8
  %77 = icmp eq %"struct.SkTHashTable<RemoteStrike *, RemoteStrike *, SkTHashSet<RemoteStrike *, SkGoodHash>::Traits>::Slot"* %75, null
  br i1 %77, label %219, label %78

78:                                               ; preds = %71
  %79 = bitcast %"struct.SkTHashTable<RemoteStrike *, RemoteStrike *, SkTHashSet<RemoteStrike *, SkGoodHash>::Traits>::Slot"* %75 to i8*
  tail call void @_ZdaPv(i8* %79) #18
  br label %219

80:                                               ; preds = %67, %54
  %81 = phi i64* [ %70, %67 ], [ %56, %54 ]
  %82 = phi i64 [ %68, %67 ], [ %60, %54 ]
  %83 = phi i64 [ %69, %67 ], [ %57, %54 ]
  %84 = phi i64 [ 0, %67 ], [ %48, %54 ]
  %85 = bitcast %class.Serializer* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %85) #16
  %86 = getelementptr inbounds %class.Serializer, %class.Serializer* %3, i64 0, i32 0
  store %"class.std::__1::vector.37"* %1, %"class.std::__1::vector.37"** %86, align 8
  %87 = getelementptr inbounds %class.SkStrikeServerImpl, %class.SkStrikeServerImpl* %0, i64 0, i32 7
  %88 = getelementptr inbounds %class.SkStrikeServerImpl, %class.SkStrikeServerImpl* %0, i64 0, i32 7, i32 0, i32 1
  %89 = bitcast %"class.std::__1::vector.118"* %87 to i64*
  %90 = sub i64 %83, %82
  %91 = ashr exact i64 %90, 4
  %92 = getelementptr inbounds %"class.std::__1::vector.37", %"class.std::__1::vector.37"* %1, i64 0, i32 0, i32 1
  %93 = bitcast i8** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = bitcast %"class.std::__1::vector.37"* %1 to i64*
  %96 = load i64, i64* %95, align 8
  %97 = sub i64 %94, %96
  %98 = add i64 %97, 7
  %99 = and i64 %98, -8
  %100 = add i64 %99, 8
  %101 = icmp ugt i64 %100, %97
  %102 = inttoptr i64 %96 to i8*
  br i1 %101, label %103, label %107

103:                                              ; preds = %80
  %104 = sub i64 %100, %97
  tail call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector.37"* %1, i64 %104) #16
  %105 = getelementptr inbounds %"class.std::__1::vector.37", %"class.std::__1::vector.37"* %1, i64 0, i32 0, i32 0
  %106 = load i8*, i8** %105, align 8
  br label %111

107:                                              ; preds = %80
  %108 = icmp ult i64 %100, %97
  br i1 %108, label %109, label %111

109:                                              ; preds = %107
  %110 = getelementptr inbounds i8, i8* %102, i64 %100
  store i8* %110, i8** %92, align 8
  br label %111

111:                                              ; preds = %103, %107, %109
  %112 = phi i8* [ %106, %103 ], [ %102, %107 ], [ %102, %109 ]
  %113 = getelementptr inbounds %"class.std::__1::vector.37", %"class.std::__1::vector.37"* %1, i64 0, i32 0, i32 0
  %114 = getelementptr inbounds i8, i8* %112, i64 %99
  %115 = bitcast i8* %114 to i64*
  store i64 %91, i64* %115, align 8
  %116 = getelementptr inbounds %"class.std::__1::vector.118", %"class.std::__1::vector.118"* %87, i64 0, i32 0, i32 0
  %117 = load %struct.WireTypeface*, %struct.WireTypeface** %116, align 8
  %118 = load %struct.WireTypeface*, %struct.WireTypeface** %88, align 8
  %119 = icmp eq %struct.WireTypeface* %117, %118
  %120 = ptrtoint %struct.WireTypeface* %117 to i64
  br i1 %119, label %123, label %196

121:                                              ; preds = %213
  %122 = load i64, i64* %89, align 8
  br label %123

123:                                              ; preds = %121, %111
  %124 = phi i64 [ %122, %121 ], [ %120, %111 ]
  store i64 %124, i64* %81, align 8
  %125 = load i64, i64* %93, align 8
  %126 = load i64, i64* %95, align 8
  %127 = sub i64 %125, %126
  %128 = add i64 %127, 7
  %129 = and i64 %128, -8
  %130 = add i64 %129, 8
  %131 = icmp ugt i64 %130, %127
  %132 = inttoptr i64 %126 to i8*
  br i1 %131, label %133, label %136

133:                                              ; preds = %123
  %134 = sub i64 %130, %127
  tail call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector.37"* %1, i64 %134) #16
  %135 = load i8*, i8** %113, align 8
  br label %140

136:                                              ; preds = %123
  %137 = icmp ult i64 %130, %127
  br i1 %137, label %138, label %140

138:                                              ; preds = %136
  %139 = getelementptr inbounds i8, i8* %132, i64 %130
  store i8* %139, i8** %92, align 8
  br label %140

140:                                              ; preds = %133, %136, %138
  %141 = phi i8* [ %135, %133 ], [ %132, %136 ], [ %132, %138 ]
  %142 = getelementptr inbounds i8, i8* %141, i64 %129
  %143 = bitcast i8* %142 to i64*
  store i64 %84, i64* %143, align 8
  %144 = load i32, i32* %5, align 4
  %145 = icmp sgt i32 %144, 0
  br i1 %145, label %146, label %186

146:                                              ; preds = %140
  %147 = getelementptr inbounds %class.SkStrikeServerImpl, %class.SkStrikeServerImpl* %0, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0
  br label %148

148:                                              ; preds = %181, %146
  %149 = phi i32 [ %144, %146 ], [ %182, %181 ]
  %150 = phi i64 [ 0, %146 ], [ %183, %181 ]
  %151 = load %"struct.SkTHashTable<RemoteStrike *, RemoteStrike *, SkTHashSet<RemoteStrike *, SkGoodHash>::Traits>::Slot"*, %"struct.SkTHashTable<RemoteStrike *, RemoteStrike *, SkTHashSet<RemoteStrike *, SkGoodHash>::Traits>::Slot"** %147, align 8
  %152 = getelementptr inbounds %"struct.SkTHashTable<RemoteStrike *, RemoteStrike *, SkTHashSet<RemoteStrike *, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<RemoteStrike *, RemoteStrike *, SkTHashSet<RemoteStrike *, SkGoodHash>::Traits>::Slot"* %151, i64 %150, i32 1
  %153 = load i32, i32* %152, align 8
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %181, label %155

155:                                              ; preds = %148
  %156 = getelementptr inbounds %"struct.SkTHashTable<RemoteStrike *, RemoteStrike *, SkTHashSet<RemoteStrike *, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<RemoteStrike *, RemoteStrike *, SkTHashSet<RemoteStrike *, SkGoodHash>::Traits>::Slot"* %151, i64 %150, i32 0
  %157 = load %class.RemoteStrike*, %class.RemoteStrike** %156, align 8
  %158 = getelementptr inbounds %class.RemoteStrike, %class.RemoteStrike* %157, i64 0, i32 11, i32 0, i32 0
  %159 = load %class.SkGlyph*, %class.SkGlyph** %158, align 8
  %160 = getelementptr inbounds %class.RemoteStrike, %class.RemoteStrike* %157, i64 0, i32 11, i32 0, i32 1
  %161 = load %class.SkGlyph*, %class.SkGlyph** %160, align 8
  %162 = icmp eq %class.SkGlyph* %159, %161
  br i1 %162, label %163, label %169

163:                                              ; preds = %155
  %164 = getelementptr inbounds %class.RemoteStrike, %class.RemoteStrike* %157, i64 0, i32 12, i32 0, i32 0
  %165 = load %class.SkGlyph*, %class.SkGlyph** %164, align 8
  %166 = getelementptr inbounds %class.RemoteStrike, %class.RemoteStrike* %157, i64 0, i32 12, i32 0, i32 1
  %167 = load %class.SkGlyph*, %class.SkGlyph** %166, align 8
  %168 = icmp eq %class.SkGlyph* %165, %167
  br i1 %168, label %181, label %169

169:                                              ; preds = %163, %155
  call void @_ZN12RemoteStrike18writePendingGlyphsEP10Serializer(%class.RemoteStrike* %157, %class.Serializer* nonnull %3) #16
  %170 = getelementptr inbounds %class.RemoteStrike, %class.RemoteStrike* %157, i64 0, i32 4, i32 0, i32 0, i32 0
  %171 = load %class.SkScalerContext*, %class.SkScalerContext** %170, align 8
  store %class.SkScalerContext* null, %class.SkScalerContext** %170, align 8
  %172 = icmp eq %class.SkScalerContext* %171, null
  br i1 %172, label %178, label %173

173:                                              ; preds = %169
  %174 = bitcast %class.SkScalerContext* %171 to void (%class.SkScalerContext*)***
  %175 = load void (%class.SkScalerContext*)**, void (%class.SkScalerContext*)*** %174, align 8
  %176 = getelementptr inbounds void (%class.SkScalerContext*)*, void (%class.SkScalerContext*)** %175, i64 1
  %177 = load void (%class.SkScalerContext*)*, void (%class.SkScalerContext*)** %176, align 8
  tail call void %177(%class.SkScalerContext* nonnull %171) #16
  br label %178

178:                                              ; preds = %173, %169
  %179 = getelementptr inbounds %class.RemoteStrike, %class.RemoteStrike* %157, i64 0, i32 5
  store %class.SkTypeface* null, %class.SkTypeface** %179, align 8
  %180 = load i32, i32* %5, align 4
  br label %181

181:                                              ; preds = %178, %163, %148
  %182 = phi i32 [ %180, %178 ], [ %149, %163 ], [ %149, %148 ]
  %183 = add nuw nsw i64 %150, 1
  %184 = sext i32 %182 to i64
  %185 = icmp slt i64 %183, %184
  br i1 %185, label %148, label %186

186:                                              ; preds = %181, %140
  %187 = getelementptr inbounds %class.SkTHashSet.109, %class.SkTHashSet.109* %4, i64 0, i32 0, i32 0
  store i32 0, i32* %187, align 8
  store i32 0, i32* %5, align 4
  %188 = getelementptr inbounds %class.SkStrikeServerImpl, %class.SkStrikeServerImpl* %0, i64 0, i32 6, i32 0, i32 2
  %189 = getelementptr inbounds %class.SkAutoTArray.111, %class.SkAutoTArray.111* %188, i64 0, i32 0, i32 0, i32 0, i32 0
  %190 = load %"struct.SkTHashTable<RemoteStrike *, RemoteStrike *, SkTHashSet<RemoteStrike *, SkGoodHash>::Traits>::Slot"*, %"struct.SkTHashTable<RemoteStrike *, RemoteStrike *, SkTHashSet<RemoteStrike *, SkGoodHash>::Traits>::Slot"** %189, align 8
  %191 = bitcast %class.SkAutoTArray.111* %188 to i64*
  store i64 0, i64* %191, align 8
  %192 = icmp eq %"struct.SkTHashTable<RemoteStrike *, RemoteStrike *, SkTHashSet<RemoteStrike *, SkGoodHash>::Traits>::Slot"* %190, null
  br i1 %192, label %195, label %193

193:                                              ; preds = %186
  %194 = bitcast %"struct.SkTHashTable<RemoteStrike *, RemoteStrike *, SkTHashSet<RemoteStrike *, SkGoodHash>::Traits>::Slot"* %190 to i8*
  tail call void @_ZdaPv(i8* %194) #18
  br label %195

195:                                              ; preds = %186, %193
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %85) #16
  br label %219

196:                                              ; preds = %111, %213
  %197 = phi %struct.WireTypeface* [ %217, %213 ], [ %117, %111 ]
  %198 = load i64, i64* %93, align 8
  %199 = load i64, i64* %95, align 8
  %200 = sub i64 %198, %199
  %201 = add i64 %200, 3
  %202 = and i64 %201, -4
  %203 = add i64 %202, 16
  %204 = icmp ugt i64 %203, %200
  %205 = inttoptr i64 %199 to i8*
  br i1 %204, label %206, label %209

206:                                              ; preds = %196
  %207 = sub i64 %203, %200
  tail call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector.37"* %1, i64 %207) #16
  %208 = load i8*, i8** %113, align 8
  br label %213

209:                                              ; preds = %196
  %210 = icmp ult i64 %203, %200
  br i1 %210, label %211, label %213

211:                                              ; preds = %209
  %212 = getelementptr inbounds i8, i8* %205, i64 %203
  store i8* %212, i8** %92, align 8
  br label %213

213:                                              ; preds = %206, %209, %211
  %214 = phi i8* [ %208, %206 ], [ %205, %209 ], [ %205, %211 ]
  %215 = getelementptr inbounds i8, i8* %214, i64 %202
  %216 = bitcast %struct.WireTypeface* %197 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %215, i8* align 4 %216, i64 16, i1 false) #16
  %217 = getelementptr inbounds %struct.WireTypeface, %struct.WireTypeface* %197, i64 1
  %218 = icmp eq %struct.WireTypeface* %217, %118
  br i1 %218, label %121, label %196

219:                                              ; preds = %78, %71, %195
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %class.RemoteStrike* @_ZN18SkStrikeServerImpl16getOrCreateCacheERK7SkPaintRK6SkFontRK14SkSurfacePropsRK8SkMatrix20SkScalerContextFlagsP22SkScalerContextEffects(%class.SkStrikeServerImpl*, %class.SkPaint* dereferenceable(72), %class.SkFont* dereferenceable(24), %class.SkSurfaceProps* dereferenceable(8), %class.SkMatrix* dereferenceable(40), i32, %struct.SkScalerContextEffects*) local_unnamed_addr #1 align 2 {
  %8 = alloca %struct.SkScalerContextRec, align 4
  %9 = alloca %class.SkAutoDescriptor, align 8
  %10 = bitcast %class.SkAutoDescriptor* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %10) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 128, i1 false)
  call void @_ZN16SkAutoDescriptorC1Ev(%class.SkAutoDescriptor* nonnull %9) #16
  %11 = bitcast %struct.SkScalerContextRec* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 52, i8* nonnull %11) #16
  %12 = getelementptr inbounds %struct.SkScalerContextRec, %struct.SkScalerContextRec* %8, i64 0, i32 0
  store i32 -1431655766, i32* %12, align 4
  %13 = getelementptr inbounds %struct.SkScalerContextRec, %struct.SkScalerContextRec* %8, i64 0, i32 1
  %14 = getelementptr inbounds %struct.SkScalerContextRec, %struct.SkScalerContextRec* %8, i64 0, i32 7
  %15 = bitcast float* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %15, i8 -1, i64 36, i1 false) #16
  %16 = getelementptr inbounds %struct.SkScalerContextRec, %struct.SkScalerContextRec* %8, i64 0, i32 11
  %17 = bitcast i32* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %17, i8 -86, i64 12, i1 false) #16
  store i8 0, i8* %16, align 1
  call void @_ZN15SkScalerContext17MakeRecAndEffectsERK6SkFontRK7SkPaintRK14SkSurfaceProps20SkScalerContextFlagsRK8SkMatrixP18SkScalerContextRecP22SkScalerContextEffects(%class.SkFont* dereferenceable(24) %2, %class.SkPaint* dereferenceable(72) %1, %class.SkSurfaceProps* dereferenceable(8) %3, i32 %5, %class.SkMatrix* dereferenceable(40) %4, %struct.SkScalerContextRec* nonnull %8, %struct.SkScalerContextEffects* %6) #16
  %18 = call %class.SkDescriptor* @_ZN15SkScalerContext32AutoDescriptorGivenRecAndEffectsERK18SkScalerContextRecRK22SkScalerContextEffectsP16SkAutoDescriptor(%struct.SkScalerContextRec* nonnull dereferenceable(52) %8, %struct.SkScalerContextEffects* dereferenceable(16) %6, %class.SkAutoDescriptor* nonnull %9) #16
  call void @llvm.lifetime.end.p0i8(i64 52, i8* nonnull %11) #16
  %19 = call %class.SkTypeface* @_ZNK6SkFont20getTypefaceOrDefaultEv(%class.SkFont* %2) #16
  %20 = getelementptr inbounds %struct.SkScalerContextEffects, %struct.SkScalerContextEffects* %6, i64 0, i32 0
  %21 = load %class.SkPathEffect*, %class.SkPathEffect** %20, align 8
  %22 = getelementptr inbounds %struct.SkScalerContextEffects, %struct.SkScalerContextEffects* %6, i64 0, i32 1
  %23 = load %class.SkMaskFilter*, %class.SkMaskFilter** %22, align 8
  %24 = call %class.RemoteStrike* @_ZN18SkStrikeServerImpl16getOrCreateCacheERK12SkDescriptorRK10SkTypeface22SkScalerContextEffects(%class.SkStrikeServerImpl* %0, %class.SkDescriptor* dereferenceable(12) %18, %class.SkTypeface* dereferenceable(48) %19, %class.SkPathEffect* %21, %class.SkMaskFilter* %23)
  call void @_ZN16SkAutoDescriptorD1Ev(%class.SkAutoDescriptor* nonnull %9) #16
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %10) #16
  ret %class.RemoteStrike* %24
}

declare void @_ZN16SkAutoDescriptorC1Ev(%class.SkAutoDescriptor*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden %class.RemoteStrike* @_ZN18SkStrikeServerImpl16getOrCreateCacheERK12SkDescriptorRK10SkTypeface22SkScalerContextEffects(%class.SkStrikeServerImpl*, %class.SkDescriptor* dereferenceable(12), %class.SkTypeface* dereferenceable(48), %class.SkPathEffect*, %class.SkMaskFilter*) local_unnamed_addr #1 align 2 {
  %6 = alloca %"class.std::__1::unique_ptr.310", align 8
  %7 = alloca %"class.std::__1::tuple.318", align 8
  %8 = alloca %"class.std::__1::tuple.273", align 1
  %9 = alloca i8*, align 8
  %10 = alloca [1 x i8], align 1
  %11 = alloca [1 x i64], align 8
  %12 = alloca <2 x i64>, align 16
  %13 = bitcast <2 x i64>* %12 to %struct.SkScalerContextEffects*
  %14 = alloca %"class.skia::tracing_internals::ScopedTracer", align 8
  %15 = alloca %class.SkString, align 8
  %16 = alloca %class.RemoteStrike*, align 8
  %17 = alloca %class.SkDescriptor*, align 8
  %18 = bitcast <2 x i64>* %12 to %class.SkPathEffect**
  store %class.SkPathEffect* %3, %class.SkPathEffect** %18, align 16
  %19 = getelementptr inbounds %struct.SkScalerContextEffects, %struct.SkScalerContextEffects* %13, i64 0, i32 1
  store %class.SkMaskFilter* %4, %class.SkMaskFilter** %19, align 8
  %20 = load atomic i64, i64* @_ZZN18SkStrikeServerImpl16getOrCreateCacheERK12SkDescriptorRK10SkTypeface22SkScalerContextEffectsE28trace_event_unique_atomic765.0.0 monotonic, align 8
  %21 = inttoptr i64 %20 to i8*
  %22 = icmp eq i64 %20, 0
  br i1 %22, label %23, label %31

23:                                               ; preds = %5
  %24 = tail call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #16
  %25 = bitcast %class.SkEventTracer* %24 to i8* (%class.SkEventTracer*, i8*)***
  %26 = load i8* (%class.SkEventTracer*, i8*)**, i8* (%class.SkEventTracer*, i8*)*** %25, align 8
  %27 = getelementptr inbounds i8* (%class.SkEventTracer*, i8*)*, i8* (%class.SkEventTracer*, i8*)** %26, i64 2
  %28 = load i8* (%class.SkEventTracer*, i8*)*, i8* (%class.SkEventTracer*, i8*)** %27, align 8
  %29 = tail call i8* %28(%class.SkEventTracer* %24, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str, i64 0, i64 0)) #16
  %30 = ptrtoint i8* %29 to i64
  store atomic i64 %30, i64* @_ZZN18SkStrikeServerImpl16getOrCreateCacheERK12SkDescriptorRK10SkTypeface22SkScalerContextEffectsE28trace_event_unique_atomic765.0.0 monotonic, align 8
  br label %31

31:                                               ; preds = %5, %23
  %32 = phi i8* [ %21, %5 ], [ %29, %23 ]
  %33 = bitcast %"class.skia::tracing_internals::ScopedTracer"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %33) #16
  %34 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %14, i64 0, i32 0
  %35 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %14, i64 0, i32 1, i32 0
  %36 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %14, i64 0, i32 1, i32 1
  %37 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %14, i64 0, i32 1, i32 2
  %38 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %14, i64 0, i32 1
  %39 = bitcast %"struct.skia::tracing_internals::ScopedTracer::Data"* %38 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %39, i8 -86, i64 24, i1 false)
  store %"struct.skia::tracing_internals::ScopedTracer::Data"* null, %"struct.skia::tracing_internals::ScopedTracer::Data"** %34, align 8
  %40 = load i8, i8* %32, align 1
  %41 = and i8 %40, 5
  %42 = icmp eq i8 %41, 0
  br i1 %42, label %123, label %43

43:                                               ; preds = %31
  %44 = bitcast %class.SkString* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44) #16
  %45 = tail call i8* @_ZNK12SkDescriptor9findEntryEjPj(%class.SkDescriptor* %1, i32 1936876899, i32* null) #16, !noalias !60
  %46 = getelementptr inbounds i8, i8* %45, i64 4
  %47 = bitcast i8* %46 to float*
  %48 = load float, float* %47, align 1, !noalias !60
  %49 = getelementptr inbounds i8, i8* %45, i64 8
  %50 = bitcast i8* %49 to float*
  %51 = load float, float* %50, align 1, !noalias !60
  %52 = getelementptr inbounds i8, i8* %45, i64 12
  %53 = bitcast i8* %52 to float*
  %54 = load float, float* %53, align 1, !noalias !60
  %55 = getelementptr inbounds i8, i8* %45, i64 16
  %56 = bitcast i8* %55 to float*
  %57 = load float, float* %56, align 1, !noalias !60
  %58 = getelementptr inbounds i8, i8* %45, i64 20
  %59 = bitcast i8* %58 to float*
  %60 = load float, float* %59, align 1, !noalias !60
  %61 = getelementptr inbounds i8, i8* %45, i64 24
  %62 = bitcast i8* %61 to float*
  %63 = load float, float* %62, align 1, !noalias !60
  %64 = getelementptr inbounds i8, i8* %45, i64 28
  %65 = bitcast i8* %64 to float*
  %66 = load float, float* %65, align 1, !noalias !60
  %67 = getelementptr inbounds i8, i8* %45, i64 32
  %68 = bitcast i8* %67 to float*
  %69 = load float, float* %68, align 1, !noalias !60
  %70 = getelementptr inbounds i8, i8* %45, i64 36
  %71 = bitcast i8* %70 to float*
  %72 = load float, float* %71, align 1, !noalias !60
  %73 = getelementptr inbounds i8, i8* %45, i64 40
  %74 = bitcast i8* %73 to i32*
  %75 = load i32, i32* %74, align 1, !noalias !60
  %76 = getelementptr inbounds i8, i8* %45, i64 44
  %77 = load i8, i8* %76, align 1, !noalias !60
  %78 = getelementptr inbounds i8, i8* %45, i64 45
  %79 = load i8, i8* %78, align 1, !noalias !60
  %80 = getelementptr inbounds i8, i8* %45, i64 46
  %81 = load i8, i8* %80, align 1, !noalias !60
  %82 = getelementptr inbounds i8, i8* %45, i64 48
  %83 = load i8, i8* %82, align 1, !noalias !60
  %84 = getelementptr inbounds i8, i8* %45, i64 49
  %85 = load i8, i8* %84, align 1, !noalias !60
  %86 = getelementptr inbounds i8, i8* %45, i64 50
  %87 = bitcast i8* %86 to i16*
  %88 = load i16, i16* %87, align 1, !noalias !60
  %89 = getelementptr inbounds %class.SkString, %class.SkString* %15, i64 0, i32 0, i32 0
  store %"struct.SkString::Rec"* inttoptr (i64 -6148914691236517206 to %"struct.SkString::Rec"*), %"struct.SkString::Rec"** %89, align 8, !alias.scope !63
  call void @_ZN8SkStringC1Ev(%class.SkString* nonnull %15) #16
  call void (%class.SkString*, i8*, ...) @_ZN8SkString7appendfEPKcz(%class.SkString* nonnull %15, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.8, i64 0, i64 0)) #16
  %90 = fpext float %48 to double
  %91 = fpext float %51 to double
  %92 = fpext float %54 to double
  %93 = fpext float %57 to double
  %94 = fpext float %60 to double
  %95 = fpext float %63 to double
  %96 = fpext float %66 to double
  call void (%class.SkString*, i8*, ...) @_ZN8SkString7appendfEPKcz(%class.SkString* nonnull %15, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.9, i64 0, i64 0), double %90, double %91, double %92, double %93, double %94, double %95, double %96) #16
  %97 = fpext float %69 to double
  %98 = fpext float %72 to double
  %99 = zext i8 %83 to i32
  %100 = and i8 %85, 15
  %101 = zext i8 %100 to i32
  %102 = lshr i8 %85, 4
  %103 = zext i8 %102 to i32
  %104 = zext i16 %88 to i32
  call void (%class.SkString*, i8*, ...) @_ZN8SkString7appendfEPKcz(%class.SkString* nonnull %15, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.10, i64 0, i64 0), double %97, double %98, i32 %99, i32 %101, i32 %103, i32 %104) #16
  %105 = zext i8 %77 to i32
  %106 = zext i8 %79 to i32
  %107 = zext i8 %81 to i32
  call void (%class.SkString*, i8*, ...) @_ZN8SkString7appendfEPKcz(%class.SkString* nonnull %15, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.11, i64 0, i64 0), i32 %75, i32 %105, i32 %106, i32 %107) #16
  %108 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %89, align 8
  %109 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %108, i64 0, i32 2
  %110 = ptrtoint i8* %109 to i64
  %111 = bitcast i8** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %111)
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0), i8** %9, align 8
  %112 = getelementptr inbounds [1 x i8], [1 x i8]* %10, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %112) #16
  %113 = bitcast [1 x i64]* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %113) #16
  %114 = getelementptr inbounds [1 x i64], [1 x i64]* %11, i64 0, i64 0
  store i8 7, i8* %112, align 1
  store i64 %110, i64* %114, align 8
  %115 = call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #16
  %116 = bitcast %class.SkEventTracer* %115 to i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)***
  %117 = load i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)**, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*** %116, align 8
  %118 = getelementptr inbounds i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)** %117, i64 4
  %119 = load i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)*, i64 (%class.SkEventTracer*, i8, i8*, i8*, i64, i32, i8**, i8*, i64*, i8)** %118, align 8
  %120 = call i64 %119(%class.SkEventTracer* %115, i8 signext 88, i8* %32, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i64 0, i32 1, i8** nonnull %9, i8* nonnull %112, i64* nonnull %114, i8 zeroext 0) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %113) #16
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %112) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %111)
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %15) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44) #16
  %121 = getelementptr inbounds %"class.skia::tracing_internals::ScopedTracer", %"class.skia::tracing_internals::ScopedTracer"* %14, i64 0, i32 1
  %122 = getelementptr inbounds %"struct.skia::tracing_internals::ScopedTracer::Data", %"struct.skia::tracing_internals::ScopedTracer::Data"* %121, i64 0, i32 0
  store i8* %32, i8** %122, align 8
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8** %36, align 8
  store i64 %120, i64* %37, align 8
  store %"struct.skia::tracing_internals::ScopedTracer::Data"* %121, %"struct.skia::tracing_internals::ScopedTracer::Data"** %34, align 8
  br label %123

123:                                              ; preds = %31, %43
  %124 = getelementptr inbounds %class.SkStrikeServerImpl, %class.SkStrikeServerImpl* %0, i64 0, i32 1
  %125 = getelementptr inbounds %class.SkDescriptor, %class.SkDescriptor* %1, i64 0, i32 0
  %126 = load i32, i32* %125, align 4
  %127 = zext i32 %126 to i64
  %128 = getelementptr inbounds %class.SkStrikeServerImpl, %class.SkStrikeServerImpl* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %129 = load i64, i64* %128, align 8
  %130 = icmp eq i64 %129, 0
  br i1 %130, label %260, label %131

131:                                              ; preds = %123
  %132 = call i64 @llvm.ctpop.i64(i64 %129) #16, !range !66
  %133 = icmp ugt i64 %132, 1
  br i1 %133, label %137, label %134

134:                                              ; preds = %131
  %135 = add i64 %129, 4294967295
  %136 = and i64 %135, %127
  br label %141

137:                                              ; preds = %131
  %138 = icmp ugt i64 %129, %127
  br i1 %138, label %141, label %139

139:                                              ; preds = %137
  %140 = urem i64 %127, %129
  br label %141

141:                                              ; preds = %139, %137, %134
  %142 = phi i64 [ %136, %134 ], [ %140, %139 ], [ %127, %137 ]
  %143 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %124, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %144 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %143, align 8
  %145 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %144, i64 %142
  %146 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %145, align 8
  %147 = icmp eq %"struct.std::__1::__hash_node_base"* %146, null
  br i1 %147, label %260, label %148

148:                                              ; preds = %141
  %149 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %146, i64 0, i32 0
  %150 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %149, align 8
  %151 = icmp eq %"struct.std::__1::__hash_node_base"* %150, null
  br i1 %151, label %260, label %152

152:                                              ; preds = %148
  %153 = add i64 %129, -1
  br label %154

154:                                              ; preds = %175, %152
  %155 = phi %"struct.std::__1::__hash_node_base"* [ %150, %152 ], [ %177, %175 ]
  %156 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %155, i64 1
  %157 = bitcast %"struct.std::__1::__hash_node_base"* %156 to i64*
  %158 = load i64, i64* %157, align 8
  %159 = icmp eq i64 %158, %127
  br i1 %159, label %170, label %160

160:                                              ; preds = %154
  br i1 %133, label %163, label %161

161:                                              ; preds = %160
  %162 = and i64 %158, %153
  br label %167

163:                                              ; preds = %160
  %164 = icmp ult i64 %158, %129
  br i1 %164, label %167, label %165

165:                                              ; preds = %163
  %166 = urem i64 %158, %129
  br label %167

167:                                              ; preds = %165, %163, %161
  %168 = phi i64 [ %162, %161 ], [ %166, %165 ], [ %158, %163 ]
  %169 = icmp eq i64 %168, %142
  br i1 %169, label %175, label %260

170:                                              ; preds = %154
  %171 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %155, i64 2
  %172 = bitcast %"struct.std::__1::__hash_node_base"* %171 to %class.SkDescriptor**
  %173 = load %class.SkDescriptor*, %class.SkDescriptor** %172, align 8
  %174 = call zeroext i1 @_ZNK12SkDescriptoreqERKS_(%class.SkDescriptor* %173, %class.SkDescriptor* dereferenceable(12) %1) #16
  br i1 %174, label %179, label %175

175:                                              ; preds = %170, %167
  %176 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %155, i64 0, i32 0
  %177 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %176, align 8
  %178 = icmp eq %"struct.std::__1::__hash_node_base"* %177, null
  br i1 %178, label %260, label %154

179:                                              ; preds = %170
  %180 = bitcast %class.RemoteStrike** %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %180) #16
  %181 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %155, i64 3
  %182 = bitcast %"struct.std::__1::__hash_node_base"* %181 to %class.RemoteStrike**
  %183 = load %class.RemoteStrike*, %class.RemoteStrike** %182, align 8
  store %class.RemoteStrike* %183, %class.RemoteStrike** %16, align 8
  %184 = load <2 x i64>, <2 x i64>* %12, align 16
  %185 = getelementptr inbounds %class.RemoteStrike, %class.RemoteStrike* %183, i64 0, i32 5
  store %class.SkTypeface* %2, %class.SkTypeface** %185, align 8
  %186 = getelementptr inbounds %class.RemoteStrike, %class.RemoteStrike* %183, i64 0, i32 6, i32 0
  %187 = bitcast %class.SkPathEffect** %186 to <2 x i64>*
  store <2 x i64> %184, <2 x i64>* %187, align 8
  %188 = getelementptr inbounds %class.SkStrikeServerImpl, %class.SkStrikeServerImpl* %0, i64 0, i32 6
  %189 = load i32 (i8*, i64, i32)*, i32 (i8*, i64, i32)** @_ZN6SkOpts7hash_fnE, align 8
  %190 = call i32 %189(i8* nonnull %180, i64 8, i32 0) #16
  %191 = icmp eq i32 %190, 0
  %192 = select i1 %191, i32 1, i32 %190
  %193 = getelementptr inbounds %class.SkStrikeServerImpl, %class.SkStrikeServerImpl* %0, i64 0, i32 6, i32 0, i32 1
  %194 = load i32, i32* %193, align 4
  %195 = icmp sgt i32 %194, 0
  br i1 %195, label %196, label %224

196:                                              ; preds = %179
  %197 = add nsw i32 %194, -1
  %198 = and i32 %192, %197
  %199 = getelementptr inbounds %class.SkStrikeServerImpl, %class.SkStrikeServerImpl* %0, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %200 = load %"struct.SkTHashTable<RemoteStrike *, RemoteStrike *, SkTHashSet<RemoteStrike *, SkGoodHash>::Traits>::Slot"*, %"struct.SkTHashTable<RemoteStrike *, RemoteStrike *, SkTHashSet<RemoteStrike *, SkGoodHash>::Traits>::Slot"** %199, align 8
  %201 = load %class.RemoteStrike*, %class.RemoteStrike** %16, align 8
  br label %202

202:                                              ; preds = %215, %196
  %203 = phi i32 [ 0, %196 ], [ %220, %215 ]
  %204 = phi i32 [ %198, %196 ], [ %219, %215 ]
  %205 = sext i32 %204 to i64
  %206 = getelementptr inbounds %"struct.SkTHashTable<RemoteStrike *, RemoteStrike *, SkTHashSet<RemoteStrike *, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<RemoteStrike *, RemoteStrike *, SkTHashSet<RemoteStrike *, SkGoodHash>::Traits>::Slot"* %200, i64 %205, i32 1
  %207 = load i32, i32* %206, align 8
  %208 = icmp eq i32 %207, 0
  br i1 %208, label %224, label %209

209:                                              ; preds = %202
  %210 = icmp eq i32 %192, %207
  br i1 %210, label %211, label %215

211:                                              ; preds = %209
  %212 = getelementptr inbounds %"struct.SkTHashTable<RemoteStrike *, RemoteStrike *, SkTHashSet<RemoteStrike *, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<RemoteStrike *, RemoteStrike *, SkTHashSet<RemoteStrike *, SkGoodHash>::Traits>::Slot"* %200, i64 %205, i32 0
  %213 = load %class.RemoteStrike*, %class.RemoteStrike** %212, align 8
  %214 = icmp eq %class.RemoteStrike* %201, %213
  br i1 %214, label %222, label %215

215:                                              ; preds = %211, %209
  %216 = add nsw i32 %204, -1
  %217 = icmp slt i32 %204, 1
  %218 = select i1 %217, i32 %194, i32 0
  %219 = add nsw i32 %216, %218
  %220 = add nuw nsw i32 %203, 1
  %221 = icmp eq i32 %220, %194
  br i1 %221, label %224, label %202

222:                                              ; preds = %211
  %223 = icmp eq %class.RemoteStrike** %212, null
  br i1 %223, label %224, label %492

224:                                              ; preds = %215, %202, %222, %179
  %225 = getelementptr inbounds %class.SkStrikeServerImpl, %class.SkStrikeServerImpl* %0, i64 0, i32 2
  %226 = load %"class.SkStrikeServer::DiscardableHandleManager"*, %"class.SkStrikeServer::DiscardableHandleManager"** %225, align 8
  %227 = load %class.RemoteStrike*, %class.RemoteStrike** %182, align 8
  %228 = getelementptr inbounds %class.RemoteStrike, %class.RemoteStrike* %227, i64 0, i32 2
  %229 = load i32, i32* %228, align 8
  %230 = bitcast %"class.SkStrikeServer::DiscardableHandleManager"* %226 to i1 (%"class.SkStrikeServer::DiscardableHandleManager"*, i32)***
  %231 = load i1 (%"class.SkStrikeServer::DiscardableHandleManager"*, i32)**, i1 (%"class.SkStrikeServer::DiscardableHandleManager"*, i32)*** %230, align 8
  %232 = getelementptr inbounds i1 (%"class.SkStrikeServer::DiscardableHandleManager"*, i32)*, i1 (%"class.SkStrikeServer::DiscardableHandleManager"*, i32)** %231, i64 3
  %233 = load i1 (%"class.SkStrikeServer::DiscardableHandleManager"*, i32)*, i1 (%"class.SkStrikeServer::DiscardableHandleManager"*, i32)** %232, align 8
  %234 = call zeroext i1 %233(%"class.SkStrikeServer::DiscardableHandleManager"* %226, i32 %229) #16
  br i1 %234, label %235, label %238

235:                                              ; preds = %224
  %236 = load %class.RemoteStrike*, %class.RemoteStrike** %16, align 8
  call void @_ZN10SkTHashSetIP12RemoteStrike10SkGoodHashE3addES1_(%class.SkTHashSet.109* %188, %class.RemoteStrike* %236)
  %237 = load %class.RemoteStrike*, %class.RemoteStrike** %16, align 8
  br label %492

238:                                              ; preds = %224
  %239 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %124, i64 0, i32 0
  %240 = bitcast %"class.std::__1::unique_ptr.310"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %240) #16
  call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPK12SkDescriptorNS_10unique_ptrI12RemoteStrikeNS_14default_deleteIS6_EEEEEENS_22__unordered_map_hasherIS4_SA_6MapOpsSC_Lb1EEENS_21__unordered_map_equalIS4_SA_SC_SC_Lb1EEENS_9allocatorISA_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeISA_PvEEEE(%"class.std::__1::unique_ptr.310"* nonnull sret %6, %"class.std::__1::__hash_table"* %239, %"struct.std::__1::__hash_node_base"* %155) #16
  %241 = getelementptr inbounds %"class.std::__1::unique_ptr.310", %"class.std::__1::unique_ptr.310"* %6, i64 0, i32 0, i32 0, i32 0
  %242 = load %"struct.std::__1::__hash_node"*, %"struct.std::__1::__hash_node"** %241, align 8
  store %"struct.std::__1::__hash_node"* null, %"struct.std::__1::__hash_node"** %241, align 8
  %243 = icmp eq %"struct.std::__1::__hash_node"* %242, null
  br i1 %243, label %259, label %244

244:                                              ; preds = %238
  %245 = getelementptr inbounds %"class.std::__1::unique_ptr.310", %"class.std::__1::unique_ptr.310"* %6, i64 0, i32 0, i32 1, i32 0, i32 1
  %246 = load i8, i8* %245, align 8, !range !2
  %247 = icmp eq i8 %246, 0
  br i1 %247, label %257, label %248

248:                                              ; preds = %244
  %249 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %242, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %250 = load %class.RemoteStrike*, %class.RemoteStrike** %249, align 8
  store %class.RemoteStrike* null, %class.RemoteStrike** %249, align 8
  %251 = icmp eq %class.RemoteStrike* %250, null
  br i1 %251, label %257, label %252

252:                                              ; preds = %248
  %253 = bitcast %class.RemoteStrike* %250 to void (%class.RemoteStrike*)***
  %254 = load void (%class.RemoteStrike*)**, void (%class.RemoteStrike*)*** %253, align 8
  %255 = getelementptr inbounds void (%class.RemoteStrike*)*, void (%class.RemoteStrike*)** %254, i64 1
  %256 = load void (%class.RemoteStrike*)*, void (%class.RemoteStrike*)** %255, align 8
  call void %256(%class.RemoteStrike* nonnull %250) #16
  br label %257

257:                                              ; preds = %252, %248, %244
  %258 = bitcast %"struct.std::__1::__hash_node"* %242 to i8*
  call void @_ZdlPv(i8* %258) #18
  br label %259

259:                                              ; preds = %257, %238
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %240) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %180) #16
  br label %260

260:                                              ; preds = %175, %167, %148, %123, %141, %259
  %261 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %2, i64 0, i32 1
  %262 = load i32, i32* %261, align 8
  %263 = getelementptr inbounds %class.SkStrikeServerImpl, %class.SkStrikeServerImpl* %0, i64 0, i32 3
  %264 = lshr i32 %262, 16
  %265 = xor i32 %264, %262
  %266 = mul i32 %265, -2048144789
  %267 = lshr i32 %266, 13
  %268 = xor i32 %267, %266
  %269 = mul i32 %268, -1028477387
  %270 = lshr i32 %269, 16
  %271 = xor i32 %270, %269
  %272 = icmp eq i32 %271, 0
  %273 = select i1 %272, i32 1, i32 %271
  %274 = getelementptr inbounds %class.SkStrikeServerImpl, %class.SkStrikeServerImpl* %0, i64 0, i32 3, i32 0, i32 1
  %275 = load i32, i32* %274, align 4
  %276 = icmp sgt i32 %275, 0
  br i1 %276, label %277, label %305

277:                                              ; preds = %260
  %278 = add nsw i32 %275, -1
  %279 = and i32 %273, %278
  %280 = getelementptr inbounds %class.SkStrikeServerImpl, %class.SkStrikeServerImpl* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %281 = load %"struct.SkTHashTable<unsigned int, unsigned int, SkTHashSet<unsigned int, SkGoodHash>::Traits>::Slot"*, %"struct.SkTHashTable<unsigned int, unsigned int, SkTHashSet<unsigned int, SkGoodHash>::Traits>::Slot"** %280, align 8
  br label %282

282:                                              ; preds = %295, %277
  %283 = phi i32 [ 0, %277 ], [ %300, %295 ]
  %284 = phi i32 [ %279, %277 ], [ %299, %295 ]
  %285 = sext i32 %284 to i64
  %286 = getelementptr inbounds %"struct.SkTHashTable<unsigned int, unsigned int, SkTHashSet<unsigned int, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<unsigned int, unsigned int, SkTHashSet<unsigned int, SkGoodHash>::Traits>::Slot"* %281, i64 %285, i32 1
  %287 = load i32, i32* %286, align 4
  %288 = icmp eq i32 %287, 0
  br i1 %288, label %305, label %289

289:                                              ; preds = %282
  %290 = icmp eq i32 %273, %287
  br i1 %290, label %291, label %295

291:                                              ; preds = %289
  %292 = getelementptr inbounds %"struct.SkTHashTable<unsigned int, unsigned int, SkTHashSet<unsigned int, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<unsigned int, unsigned int, SkTHashSet<unsigned int, SkGoodHash>::Traits>::Slot"* %281, i64 %285, i32 0
  %293 = load i32, i32* %292, align 4
  %294 = icmp eq i32 %262, %293
  br i1 %294, label %302, label %295

295:                                              ; preds = %291, %289
  %296 = add nsw i32 %284, -1
  %297 = icmp slt i32 %284, 1
  %298 = select i1 %297, i32 %275, i32 0
  %299 = add nsw i32 %296, %298
  %300 = add nuw nsw i32 %283, 1
  %301 = icmp eq i32 %300, %275
  br i1 %301, label %305, label %282

302:                                              ; preds = %291
  %303 = getelementptr inbounds %"struct.SkTHashTable<unsigned int, unsigned int, SkTHashSet<unsigned int, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<unsigned int, unsigned int, SkTHashSet<unsigned int, SkGoodHash>::Traits>::Slot"* %281, i64 %285, i32 0
  %304 = icmp eq i32* %303, null
  br i1 %304, label %305, label %433

305:                                              ; preds = %295, %282, %302, %260
  %306 = getelementptr inbounds %class.SkTHashSet, %class.SkTHashSet* %263, i64 0, i32 0, i32 0
  %307 = load i32, i32* %306, align 8
  %308 = shl nsw i32 %307, 2
  %309 = mul nsw i32 %275, 3
  %310 = icmp slt i32 %308, %309
  br i1 %310, label %316, label %311

311:                                              ; preds = %305
  %312 = getelementptr inbounds %class.SkTHashSet, %class.SkTHashSet* %263, i64 0, i32 0
  %313 = shl nsw i32 %275, 1
  %314 = select i1 %276, i32 %313, i32 4
  call void @_ZN12SkTHashTableIjjN10SkTHashSetIj10SkGoodHashE6TraitsEE6resizeEi(%class.SkTHashTable.93* %312, i32 %314) #16
  %315 = load i32, i32* %274, align 4
  br label %316

316:                                              ; preds = %305, %311
  %317 = phi i32 [ %275, %305 ], [ %315, %311 ]
  %318 = icmp sgt i32 %317, 0
  br i1 %318, label %319, label %352

319:                                              ; preds = %316
  %320 = add nsw i32 %317, -1
  %321 = and i32 %320, %273
  %322 = getelementptr inbounds %class.SkStrikeServerImpl, %class.SkStrikeServerImpl* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %323 = load %"struct.SkTHashTable<unsigned int, unsigned int, SkTHashSet<unsigned int, SkGoodHash>::Traits>::Slot"*, %"struct.SkTHashTable<unsigned int, unsigned int, SkTHashSet<unsigned int, SkGoodHash>::Traits>::Slot"** %322, align 8
  br label %324

324:                                              ; preds = %345, %319
  %325 = phi i32 [ 0, %319 ], [ %350, %345 ]
  %326 = phi i32 [ %321, %319 ], [ %349, %345 ]
  %327 = sext i32 %326 to i64
  %328 = getelementptr inbounds %"struct.SkTHashTable<unsigned int, unsigned int, SkTHashSet<unsigned int, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<unsigned int, unsigned int, SkTHashSet<unsigned int, SkGoodHash>::Traits>::Slot"* %323, i64 %327
  %329 = getelementptr inbounds %"struct.SkTHashTable<unsigned int, unsigned int, SkTHashSet<unsigned int, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<unsigned int, unsigned int, SkTHashSet<unsigned int, SkGoodHash>::Traits>::Slot"* %323, i64 %327, i32 1
  %330 = load i32, i32* %329, align 4
  %331 = icmp eq i32 %330, 0
  br i1 %331, label %332, label %337

332:                                              ; preds = %324
  %333 = getelementptr inbounds %"struct.SkTHashTable<unsigned int, unsigned int, SkTHashSet<unsigned int, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<unsigned int, unsigned int, SkTHashSet<unsigned int, SkGoodHash>::Traits>::Slot"* %323, i64 %327, i32 1
  %334 = getelementptr inbounds %"struct.SkTHashTable<unsigned int, unsigned int, SkTHashSet<unsigned int, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<unsigned int, unsigned int, SkTHashSet<unsigned int, SkGoodHash>::Traits>::Slot"* %328, i64 0, i32 0
  store i32 %262, i32* %334, align 4
  store i32 %273, i32* %333, align 4
  %335 = load i32, i32* %306, align 8
  %336 = add nsw i32 %335, 1
  store i32 %336, i32* %306, align 8
  br label %352

337:                                              ; preds = %324
  %338 = icmp eq i32 %273, %330
  br i1 %338, label %339, label %345

339:                                              ; preds = %337
  %340 = getelementptr inbounds %"struct.SkTHashTable<unsigned int, unsigned int, SkTHashSet<unsigned int, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<unsigned int, unsigned int, SkTHashSet<unsigned int, SkGoodHash>::Traits>::Slot"* %328, i64 0, i32 0
  %341 = load i32, i32* %340, align 4
  %342 = icmp eq i32 %262, %341
  br i1 %342, label %343, label %345

343:                                              ; preds = %339
  %344 = getelementptr inbounds %"struct.SkTHashTable<unsigned int, unsigned int, SkTHashSet<unsigned int, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<unsigned int, unsigned int, SkTHashSet<unsigned int, SkGoodHash>::Traits>::Slot"* %328, i64 0, i32 0
  store i32 %262, i32* %344, align 4
  br label %352

345:                                              ; preds = %339, %337
  %346 = add nsw i32 %326, -1
  %347 = icmp slt i32 %326, 1
  %348 = select i1 %347, i32 %317, i32 0
  %349 = add nsw i32 %346, %348
  %350 = add nuw nsw i32 %325, 1
  %351 = icmp eq i32 %350, %317
  br i1 %351, label %352, label %324

352:                                              ; preds = %345, %316, %332, %343
  %353 = getelementptr inbounds %class.SkStrikeServerImpl, %class.SkStrikeServerImpl* %0, i64 0, i32 7
  %354 = call i32 @_ZNK10SkTypeface11countGlyphsEv(%class.SkTypeface* %2) #16
  %355 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %2, i64 0, i32 2, i32 0
  %356 = load i32, i32* %355, align 4
  %357 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %2, i64 0, i32 5
  %358 = load i8, i8* %357, align 1, !range !2
  %359 = getelementptr inbounds %class.SkStrikeServerImpl, %class.SkStrikeServerImpl* %0, i64 0, i32 7, i32 0, i32 1
  %360 = load %struct.WireTypeface*, %struct.WireTypeface** %359, align 8
  %361 = getelementptr inbounds %class.SkStrikeServerImpl, %class.SkStrikeServerImpl* %0, i64 0, i32 7, i32 0, i32 2, i32 0, i32 0
  %362 = load %struct.WireTypeface*, %struct.WireTypeface** %361, align 8
  %363 = icmp ult %struct.WireTypeface* %360, %362
  %364 = ptrtoint %struct.WireTypeface* %362 to i64
  br i1 %363, label %365, label %373

365:                                              ; preds = %352
  %366 = getelementptr inbounds %struct.WireTypeface, %struct.WireTypeface* %360, i64 0, i32 0
  store i32 %262, i32* %366, align 4
  %367 = getelementptr inbounds %struct.WireTypeface, %struct.WireTypeface* %360, i64 0, i32 1
  store i32 %354, i32* %367, align 4
  %368 = getelementptr inbounds %struct.WireTypeface, %struct.WireTypeface* %360, i64 0, i32 2, i32 0
  store i32 %356, i32* %368, align 4
  %369 = getelementptr inbounds %struct.WireTypeface, %struct.WireTypeface* %360, i64 0, i32 3
  store i8 %358, i8* %369, align 4
  %370 = getelementptr inbounds %struct.WireTypeface, %struct.WireTypeface* %360, i64 1
  %371 = ptrtoint %struct.WireTypeface* %370 to i64
  %372 = bitcast %struct.WireTypeface** %359 to i64*
  store i64 %371, i64* %372, align 8
  br label %433

373:                                              ; preds = %352
  %374 = ptrtoint %struct.WireTypeface* %360 to i64
  %375 = bitcast %struct.WireTypeface** %359 to i64*
  %376 = bitcast %"class.std::__1::vector.118"* %353 to i64*
  %377 = load i64, i64* %376, align 8
  %378 = sub i64 %374, %377
  %379 = ashr exact i64 %378, 4
  %380 = add nsw i64 %379, 1
  %381 = icmp ugt i64 %380, 1152921504606846975
  br i1 %381, label %382, label %384

382:                                              ; preds = %373
  %383 = bitcast %"class.std::__1::vector.118"* %353 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %383) #17
  unreachable

384:                                              ; preds = %373
  %385 = bitcast %struct.WireTypeface** %361 to i64*
  %386 = sub i64 %364, %377
  %387 = ashr exact i64 %386, 4
  %388 = icmp ult i64 %387, 576460752303423487
  br i1 %388, label %389, label %397

389:                                              ; preds = %384
  %390 = ashr exact i64 %386, 3
  %391 = icmp ult i64 %390, %380
  %392 = select i1 %391, i64 %380, i64 %390
  %393 = icmp eq i64 %392, 0
  br i1 %393, label %402, label %394

394:                                              ; preds = %389
  %395 = icmp ugt i64 %392, 1152921504606846975
  br i1 %395, label %396, label %397

396:                                              ; preds = %394
  call void @abort() #17
  unreachable

397:                                              ; preds = %394, %384
  %398 = phi i64 [ %392, %394 ], [ 1152921504606846975, %384 ]
  %399 = shl i64 %398, 4
  %400 = call i8* @_Znwm(i64 %399) #18
  %401 = bitcast i8* %400 to %struct.WireTypeface*
  br label %402

402:                                              ; preds = %397, %389
  %403 = phi i64 [ %398, %397 ], [ 0, %389 ]
  %404 = phi %struct.WireTypeface* [ %401, %397 ], [ null, %389 ]
  %405 = getelementptr inbounds %struct.WireTypeface, %struct.WireTypeface* %404, i64 %379
  %406 = getelementptr inbounds %struct.WireTypeface, %struct.WireTypeface* %404, i64 %403
  %407 = ptrtoint %struct.WireTypeface* %406 to i64
  %408 = getelementptr inbounds %struct.WireTypeface, %struct.WireTypeface* %405, i64 0, i32 0
  store i32 %262, i32* %408, align 4
  %409 = getelementptr inbounds %struct.WireTypeface, %struct.WireTypeface* %404, i64 %379, i32 1
  store i32 %354, i32* %409, align 4
  %410 = getelementptr inbounds %struct.WireTypeface, %struct.WireTypeface* %404, i64 %379, i32 2, i32 0
  store i32 %356, i32* %410, align 4
  %411 = getelementptr inbounds %struct.WireTypeface, %struct.WireTypeface* %404, i64 %379, i32 3
  store i8 %358, i8* %411, align 4
  %412 = getelementptr inbounds %struct.WireTypeface, %struct.WireTypeface* %405, i64 1
  %413 = ptrtoint %struct.WireTypeface* %412 to i64
  %414 = getelementptr inbounds %"class.std::__1::vector.118", %"class.std::__1::vector.118"* %353, i64 0, i32 0, i32 0
  %415 = load %struct.WireTypeface*, %struct.WireTypeface** %414, align 8
  %416 = load i64, i64* %375, align 8
  %417 = ptrtoint %struct.WireTypeface* %415 to i64
  %418 = sub i64 %416, %417
  %419 = ashr exact i64 %418, 4
  %420 = sub nsw i64 0, %419
  %421 = getelementptr inbounds %struct.WireTypeface, %struct.WireTypeface* %405, i64 %420
  %422 = ptrtoint %struct.WireTypeface* %421 to i64
  %423 = icmp sgt i64 %418, 0
  br i1 %423, label %424, label %428

424:                                              ; preds = %402
  %425 = bitcast %struct.WireTypeface* %421 to i8*
  %426 = bitcast %struct.WireTypeface* %415 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %425, i8* align 4 %426, i64 %418, i1 false) #16
  %427 = load %struct.WireTypeface*, %struct.WireTypeface** %414, align 8
  br label %428

428:                                              ; preds = %424, %402
  %429 = phi %struct.WireTypeface* [ %415, %402 ], [ %427, %424 ]
  store i64 %422, i64* %376, align 8
  store i64 %413, i64* %375, align 8
  store i64 %407, i64* %385, align 8
  %430 = icmp eq %struct.WireTypeface* %429, null
  br i1 %430, label %433, label %431

431:                                              ; preds = %428
  %432 = bitcast %struct.WireTypeface* %429 to i8*
  call void @_ZdlPv(i8* %432) #18
  br label %433

433:                                              ; preds = %431, %428, %302, %365
  %434 = call %class.SkScalerContext* @_ZNK10SkTypeface19createScalerContextERK22SkScalerContextEffectsPK12SkDescriptor(%class.SkTypeface* %2, %struct.SkScalerContextEffects* nonnull dereferenceable(16) %13, %class.SkDescriptor* %1) #16
  %435 = ptrtoint %class.SkScalerContext* %434 to i64
  %436 = getelementptr inbounds %class.SkStrikeServerImpl, %class.SkStrikeServerImpl* %0, i64 0, i32 2
  %437 = load %"class.SkStrikeServer::DiscardableHandleManager"*, %"class.SkStrikeServer::DiscardableHandleManager"** %436, align 8
  %438 = bitcast %"class.SkStrikeServer::DiscardableHandleManager"* %437 to i32 (%"class.SkStrikeServer::DiscardableHandleManager"*)***
  %439 = load i32 (%"class.SkStrikeServer::DiscardableHandleManager"*)**, i32 (%"class.SkStrikeServer::DiscardableHandleManager"*)*** %438, align 8
  %440 = getelementptr inbounds i32 (%"class.SkStrikeServer::DiscardableHandleManager"*)*, i32 (%"class.SkStrikeServer::DiscardableHandleManager"*)** %439, i64 2
  %441 = load i32 (%"class.SkStrikeServer::DiscardableHandleManager"*)*, i32 (%"class.SkStrikeServer::DiscardableHandleManager"*)** %440, align 8
  %442 = call i32 %441(%"class.SkStrikeServer::DiscardableHandleManager"* %437) #16
  %443 = call i8* @_Znwm(i64 400) #18
  %444 = bitcast i8* %443 to %class.RemoteStrike*
  %445 = bitcast i8* %443 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV12RemoteStrike, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %445, align 8
  %446 = getelementptr inbounds i8, i8* %443, i64 8
  %447 = bitcast i8* %446 to %class.SkAutoDescriptor*
  call void @_ZN16SkAutoDescriptorC1ERK12SkDescriptor(%class.SkAutoDescriptor* %447, %class.SkDescriptor* dereferenceable(12) %1) #16
  %448 = getelementptr inbounds i8, i8* %443, i64 136
  %449 = bitcast i8* %448 to i32*
  store i32 %442, i32* %449, align 8
  %450 = getelementptr inbounds i8, i8* %443, i64 140
  %451 = bitcast i8* %450 to %struct.SkGlyphPositionRoundingSpec*
  %452 = getelementptr inbounds %class.SkScalerContext, %class.SkScalerContext* %434, i64 0, i32 1, i32 14
  %453 = load i16, i16* %452, align 2
  %454 = and i16 %453, 16
  %455 = icmp ne i16 %454, 0
  %456 = call i32 @_ZNK15SkScalerContext28computeAxisAlignmentForHTextEv(%class.SkScalerContext* %434) #16
  call void @_ZN27SkGlyphPositionRoundingSpecC1Eb15SkAxisAlignment(%struct.SkGlyphPositionRoundingSpec* %451, i1 zeroext %455, i32 %456) #16
  %457 = getelementptr inbounds i8, i8* %443, i64 168
  %458 = bitcast i8* %457 to i64*
  store i64 %435, i64* %458, align 8
  %459 = getelementptr inbounds i8, i8* %443, i64 176
  %460 = getelementptr inbounds i8, i8* %443, i64 208
  %461 = getelementptr inbounds i8, i8* %443, i64 352
  %462 = bitcast i8* %461 to %class.SkArenaAllocWithReset*
  call void @llvm.memset.p0i8.i64(i8* align 8 %459, i8 0, i64 25, i1 false) #16
  call void @llvm.memset.p0i8.i64(i8* align 8 %460, i8 0, i64 144, i1 false) #16
  call void @_ZN21SkArenaAllocWithResetC2EPcmm(%class.SkArenaAllocWithReset* %462, i8* null, i64 0, i64 256) #16
  %463 = ptrtoint i8* %443 to i64
  %464 = load <2 x i64>, <2 x i64>* %12, align 16
  %465 = bitcast i8* %459 to %class.SkTypeface**
  store %class.SkTypeface* %2, %class.SkTypeface** %465, align 8
  %466 = getelementptr inbounds i8, i8* %443, i64 184
  %467 = bitcast i8* %466 to <2 x i64>*
  store <2 x i64> %464, <2 x i64>* %467, align 8
  %468 = getelementptr inbounds %class.SkStrikeServerImpl, %class.SkStrikeServerImpl* %0, i64 0, i32 6
  call void @_ZN10SkTHashSetIP12RemoteStrike10SkGoodHashE3addES1_(%class.SkTHashSet.109* %468, %class.RemoteStrike* nonnull %444)
  %469 = bitcast %class.SkDescriptor** %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %469) #16
  %470 = bitcast i8* %446 to i64*
  %471 = load i64, i64* %470, align 8
  %472 = bitcast %class.SkDescriptor** %17 to i64*
  store i64 %471, i64* %472, align 8
  %473 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %124, i64 0, i32 0
  %474 = bitcast %"class.std::__1::tuple.318"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %474) #16
  %475 = getelementptr inbounds %"class.std::__1::tuple.318", %"class.std::__1::tuple.318"* %7, i64 0, i32 0, i32 0, i32 0
  store %class.SkDescriptor** %17, %class.SkDescriptor*** %475, align 8
  %476 = getelementptr inbounds %"class.std::__1::tuple.273", %"class.std::__1::tuple.273"* %8, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %476) #16
  %477 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPK12SkDescriptorNS_10unique_ptrI12RemoteStrikeNS_14default_deleteIS6_EEEEEENS_22__unordered_map_hasherIS4_SA_6MapOpsSC_Lb1EEENS_21__unordered_map_equalIS4_SA_SC_SC_Lb1EEENS_9allocatorISA_EEE25__emplace_unique_key_argsIS4_JRKNS_21piecewise_construct_tENS_5tupleIJRKS4_EEENSN_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISA_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %473, %class.SkDescriptor** nonnull dereferenceable(8) %17, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.318"* nonnull dereferenceable(8) %7, %"class.std::__1::tuple.273"* nonnull dereferenceable(1) %8) #16
  %478 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %477, 0
  %479 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %478, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %476) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %474) #16
  %480 = bitcast %"struct.std::__1::__hash_node_base"* %479 to %class.RemoteStrike**
  %481 = load %class.RemoteStrike*, %class.RemoteStrike** %480, align 8
  %482 = bitcast %"struct.std::__1::__hash_node_base"* %479 to i64*
  store i64 %463, i64* %482, align 8
  %483 = icmp eq %class.RemoteStrike* %481, null
  br i1 %483, label %489, label %484

484:                                              ; preds = %433
  %485 = bitcast %class.RemoteStrike* %481 to void (%class.RemoteStrike*)***
  %486 = load void (%class.RemoteStrike*)**, void (%class.RemoteStrike*)*** %485, align 8
  %487 = getelementptr inbounds void (%class.RemoteStrike*)*, void (%class.RemoteStrike*)** %486, i64 1
  %488 = load void (%class.RemoteStrike*)*, void (%class.RemoteStrike*)** %487, align 8
  call void %488(%class.RemoteStrike* nonnull %481) #16
  br label %489

489:                                              ; preds = %433, %484
  call void @_ZN18SkStrikeServerImpl22checkForDeletedEntriesEv(%class.SkStrikeServerImpl* %0)
  %490 = load <2 x i64>, <2 x i64>* %12, align 16
  store %class.SkTypeface* %2, %class.SkTypeface** %465, align 8
  %491 = bitcast i8* %466 to <2 x i64>*
  store <2 x i64> %490, <2 x i64>* %491, align 8
  br label %492

492:                                              ; preds = %235, %222, %489
  %493 = phi i8* [ %469, %489 ], [ %180, %222 ], [ %180, %235 ]
  %494 = phi %class.RemoteStrike* [ %444, %489 ], [ %201, %222 ], [ %237, %235 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %493) #16
  %495 = load %"struct.skia::tracing_internals::ScopedTracer::Data"*, %"struct.skia::tracing_internals::ScopedTracer::Data"** %34, align 8
  %496 = icmp eq %"struct.skia::tracing_internals::ScopedTracer::Data"* %495, null
  br i1 %496, label %510, label %497

497:                                              ; preds = %492
  %498 = load i8*, i8** %35, align 8
  %499 = load i8, i8* %498, align 1
  %500 = icmp eq i8 %499, 0
  br i1 %500, label %510, label %501

501:                                              ; preds = %497
  %502 = call %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() #16
  %503 = load i8*, i8** %35, align 8
  %504 = load i8*, i8** %36, align 8
  %505 = load i64, i64* %37, align 8
  %506 = bitcast %class.SkEventTracer* %502 to void (%class.SkEventTracer*, i8*, i8*, i64)***
  %507 = load void (%class.SkEventTracer*, i8*, i8*, i64)**, void (%class.SkEventTracer*, i8*, i8*, i64)*** %506, align 8
  %508 = getelementptr inbounds void (%class.SkEventTracer*, i8*, i8*, i64)*, void (%class.SkEventTracer*, i8*, i8*, i64)** %507, i64 5
  %509 = load void (%class.SkEventTracer*, i8*, i8*, i64)*, void (%class.SkEventTracer*, i8*, i8*, i64)** %508, align 8
  call void %509(%class.SkEventTracer* %502, i8* %503, i8* %504, i64 %505) #16
  br label %510

510:                                              ; preds = %492, %497, %501
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %33) #16
  ret %class.RemoteStrike* %494
}

declare %class.SkTypeface* @_ZNK6SkFont20getTypefaceOrDefaultEv(%class.SkFont*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN16SkAutoDescriptorD1Ev(%class.SkAutoDescriptor*) unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden %class.SkStrikeForGPU* @_ZN18SkStrikeServerImpl24findOrCreateScopedStrikeERK12SkDescriptorRK22SkScalerContextEffectsRK10SkTypeface(%class.SkStrikeServerImpl*, %class.SkDescriptor* dereferenceable(12), %struct.SkScalerContextEffects* nocapture readonly dereferenceable(16), %class.SkTypeface* dereferenceable(48)) unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %struct.SkScalerContextEffects, %struct.SkScalerContextEffects* %2, i64 0, i32 0
  %6 = load %class.SkPathEffect*, %class.SkPathEffect** %5, align 8
  %7 = getelementptr inbounds %struct.SkScalerContextEffects, %struct.SkScalerContextEffects* %2, i64 0, i32 1
  %8 = load %class.SkMaskFilter*, %class.SkMaskFilter** %7, align 8
  %9 = tail call %class.RemoteStrike* @_ZN18SkStrikeServerImpl16getOrCreateCacheERK12SkDescriptorRK10SkTypeface22SkScalerContextEffects(%class.SkStrikeServerImpl* %0, %class.SkDescriptor* dereferenceable(12) %1, %class.SkTypeface* dereferenceable(48) %3, %class.SkPathEffect* %6, %class.SkMaskFilter* %8)
  %10 = getelementptr inbounds %class.RemoteStrike, %class.RemoteStrike* %9, i64 0, i32 0
  ret %class.SkStrikeForGPU* %10
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18SkStrikeServerImpl22checkForDeletedEntriesEv(%class.SkStrikeServerImpl*) local_unnamed_addr #1 align 2 {
  %2 = alloca %"class.std::__1::unique_ptr.310", align 8
  %3 = getelementptr inbounds %class.SkStrikeServerImpl, %class.SkStrikeServerImpl* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %class.SkStrikeServerImpl, %class.SkStrikeServerImpl* %0, i64 0, i32 4
  %6 = load i64, i64* %5, align 8
  %7 = icmp ugt i64 %4, %6
  br i1 %7, label %8, label %61

8:                                                ; preds = %1
  %9 = getelementptr inbounds %class.SkStrikeServerImpl, %class.SkStrikeServerImpl* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %10 = bitcast %"struct.std::__1::__hash_node_base"** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %class.SkStrikeServerImpl, %class.SkStrikeServerImpl* %0, i64 0, i32 2
  %13 = getelementptr inbounds %class.SkStrikeServerImpl, %class.SkStrikeServerImpl* %0, i64 0, i32 1, i32 0
  %14 = bitcast %"class.std::__1::unique_ptr.310"* %2 to i8*
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr.310", %"class.std::__1::unique_ptr.310"* %2, i64 0, i32 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.std::__1::unique_ptr.310", %"class.std::__1::unique_ptr.310"* %2, i64 0, i32 0, i32 1, i32 0, i32 1
  br label %17

17:                                               ; preds = %8, %56
  %18 = phi i64 [ %11, %8 ], [ %57, %56 ]
  %19 = inttoptr i64 %18 to %"struct.std::__1::__hash_node_base"*
  %20 = icmp eq i64 %18, 0
  br i1 %20, label %61, label %21

21:                                               ; preds = %17
  %22 = inttoptr i64 %18 to %"struct.std::__1::__hash_node"*
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %22, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %24 = load %class.RemoteStrike*, %class.RemoteStrike** %23, align 8
  %25 = load %"class.SkStrikeServer::DiscardableHandleManager"*, %"class.SkStrikeServer::DiscardableHandleManager"** %12, align 8
  %26 = getelementptr inbounds %class.RemoteStrike, %class.RemoteStrike* %24, i64 0, i32 2
  %27 = load i32, i32* %26, align 8
  %28 = bitcast %"class.SkStrikeServer::DiscardableHandleManager"* %25 to i1 (%"class.SkStrikeServer::DiscardableHandleManager"*, i32)***
  %29 = load i1 (%"class.SkStrikeServer::DiscardableHandleManager"*, i32)**, i1 (%"class.SkStrikeServer::DiscardableHandleManager"*, i32)*** %28, align 8
  %30 = getelementptr inbounds i1 (%"class.SkStrikeServer::DiscardableHandleManager"*, i32)*, i1 (%"class.SkStrikeServer::DiscardableHandleManager"*, i32)** %29, i64 4
  %31 = load i1 (%"class.SkStrikeServer::DiscardableHandleManager"*, i32)*, i1 (%"class.SkStrikeServer::DiscardableHandleManager"*, i32)** %30, align 8
  %32 = call zeroext i1 %31(%"class.SkStrikeServer::DiscardableHandleManager"* %25, i32 %27) #16
  br i1 %32, label %33, label %53

33:                                               ; preds = %21
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #16
  %34 = inttoptr i64 %18 to i64*
  %35 = load i64, i64* %34, align 8
  call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPK12SkDescriptorNS_10unique_ptrI12RemoteStrikeNS_14default_deleteIS6_EEEEEENS_22__unordered_map_hasherIS4_SA_6MapOpsSC_Lb1EEENS_21__unordered_map_equalIS4_SA_SC_SC_Lb1EEENS_9allocatorISA_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeISA_PvEEEE(%"class.std::__1::unique_ptr.310"* nonnull sret %2, %"class.std::__1::__hash_table"* %13, %"struct.std::__1::__hash_node_base"* nonnull %19) #16
  %36 = load %"struct.std::__1::__hash_node"*, %"struct.std::__1::__hash_node"** %15, align 8
  store %"struct.std::__1::__hash_node"* null, %"struct.std::__1::__hash_node"** %15, align 8
  %37 = icmp eq %"struct.std::__1::__hash_node"* %36, null
  br i1 %37, label %52, label %38

38:                                               ; preds = %33
  %39 = load i8, i8* %16, align 8, !range !2
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %50, label %41

41:                                               ; preds = %38
  %42 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %36, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %43 = load %class.RemoteStrike*, %class.RemoteStrike** %42, align 8
  store %class.RemoteStrike* null, %class.RemoteStrike** %42, align 8
  %44 = icmp eq %class.RemoteStrike* %43, null
  br i1 %44, label %50, label %45

45:                                               ; preds = %41
  %46 = bitcast %class.RemoteStrike* %43 to void (%class.RemoteStrike*)***
  %47 = load void (%class.RemoteStrike*)**, void (%class.RemoteStrike*)*** %46, align 8
  %48 = getelementptr inbounds void (%class.RemoteStrike*)*, void (%class.RemoteStrike*)** %47, i64 1
  %49 = load void (%class.RemoteStrike*)*, void (%class.RemoteStrike*)** %48, align 8
  call void %49(%class.RemoteStrike* nonnull %43) #16
  br label %50

50:                                               ; preds = %45, %41, %38
  %51 = bitcast %"struct.std::__1::__hash_node"* %36 to i8*
  call void @_ZdlPv(i8* %51) #18
  br label %52

52:                                               ; preds = %33, %50
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #16
  br label %56

53:                                               ; preds = %21
  %54 = inttoptr i64 %18 to i64*
  %55 = load i64, i64* %54, align 8
  br label %56

56:                                               ; preds = %53, %52
  %57 = phi i64 [ %35, %52 ], [ %55, %53 ]
  %58 = load i64, i64* %3, align 8
  %59 = load i64, i64* %5, align 8
  %60 = icmp ugt i64 %58, %59
  br i1 %60, label %17, label %61

61:                                               ; preds = %56, %17, %1
  ret void
}

declare %class.SkEventTracer* @_ZN13SkEventTracer11GetInstanceEv() local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN8SkStringD1Ev(%class.SkString*) unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN10SkTHashSetIP12RemoteStrike10SkGoodHashE3addES1_(%class.SkTHashSet.109*, %class.RemoteStrike*) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %class.RemoteStrike*, align 8
  %4 = bitcast %class.RemoteStrike** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4)
  store %class.RemoteStrike* %1, %class.RemoteStrike** %3, align 8
  %5 = getelementptr inbounds %class.SkTHashSet.109, %class.SkTHashSet.109* %0, i64 0, i32 0, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = shl nsw i32 %6, 2
  %8 = getelementptr inbounds %class.SkTHashSet.109, %class.SkTHashSet.109* %0, i64 0, i32 0, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = mul nsw i32 %9, 3
  %11 = icmp slt i32 %7, %10
  br i1 %11, label %17, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %class.SkTHashSet.109, %class.SkTHashSet.109* %0, i64 0, i32 0
  %14 = icmp sgt i32 %9, 0
  %15 = shl nsw i32 %9, 1
  %16 = select i1 %14, i32 %15, i32 4
  tail call void @_ZN12SkTHashTableIP12RemoteStrikeS1_N10SkTHashSetIS1_10SkGoodHashE6TraitsEE6resizeEi(%class.SkTHashTable.110* %13, i32 %16) #16
  br label %17

17:                                               ; preds = %2, %12
  %18 = load i32 (i8*, i64, i32)*, i32 (i8*, i64, i32)** @_ZN6SkOpts7hash_fnE, align 8
  %19 = call i32 %18(i8* nonnull %4, i64 8, i32 0) #16
  %20 = icmp eq i32 %19, 0
  %21 = select i1 %20, i32 1, i32 %19
  %22 = load i32, i32* %8, align 4
  %23 = icmp sgt i32 %22, 0
  br i1 %23, label %24, label %58

24:                                               ; preds = %17
  %25 = add nsw i32 %22, -1
  %26 = and i32 %21, %25
  %27 = getelementptr inbounds %class.SkTHashSet.109, %class.SkTHashSet.109* %0, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %28 = load %"struct.SkTHashTable<RemoteStrike *, RemoteStrike *, SkTHashSet<RemoteStrike *, SkGoodHash>::Traits>::Slot"*, %"struct.SkTHashTable<RemoteStrike *, RemoteStrike *, SkTHashSet<RemoteStrike *, SkGoodHash>::Traits>::Slot"** %27, align 8
  %29 = load %class.RemoteStrike*, %class.RemoteStrike** %3, align 8
  %30 = ptrtoint %class.RemoteStrike* %29 to i64
  br label %31

31:                                               ; preds = %51, %24
  %32 = phi i32 [ 0, %24 ], [ %56, %51 ]
  %33 = phi i32 [ %26, %24 ], [ %55, %51 ]
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds %"struct.SkTHashTable<RemoteStrike *, RemoteStrike *, SkTHashSet<RemoteStrike *, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<RemoteStrike *, RemoteStrike *, SkTHashSet<RemoteStrike *, SkGoodHash>::Traits>::Slot"* %28, i64 %34
  %36 = getelementptr inbounds %"struct.SkTHashTable<RemoteStrike *, RemoteStrike *, SkTHashSet<RemoteStrike *, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<RemoteStrike *, RemoteStrike *, SkTHashSet<RemoteStrike *, SkGoodHash>::Traits>::Slot"* %28, i64 %34, i32 1
  %37 = load i32, i32* %36, align 8
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %43

39:                                               ; preds = %31
  %40 = bitcast %"struct.SkTHashTable<RemoteStrike *, RemoteStrike *, SkTHashSet<RemoteStrike *, SkGoodHash>::Traits>::Slot"* %35 to i64*
  store i64 %30, i64* %40, align 8
  store i32 %21, i32* %36, align 8
  %41 = load i32, i32* %5, align 8
  %42 = add nsw i32 %41, 1
  store i32 %42, i32* %5, align 8
  br label %58

43:                                               ; preds = %31
  %44 = icmp eq i32 %21, %37
  br i1 %44, label %45, label %51

45:                                               ; preds = %43
  %46 = getelementptr inbounds %"struct.SkTHashTable<RemoteStrike *, RemoteStrike *, SkTHashSet<RemoteStrike *, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<RemoteStrike *, RemoteStrike *, SkTHashSet<RemoteStrike *, SkGoodHash>::Traits>::Slot"* %35, i64 0, i32 0
  %47 = load %class.RemoteStrike*, %class.RemoteStrike** %46, align 8
  %48 = icmp eq %class.RemoteStrike* %29, %47
  br i1 %48, label %49, label %51

49:                                               ; preds = %45
  %50 = bitcast %"struct.SkTHashTable<RemoteStrike *, RemoteStrike *, SkTHashSet<RemoteStrike *, SkGoodHash>::Traits>::Slot"* %35 to i64*
  store i64 %30, i64* %50, align 8
  br label %58

51:                                               ; preds = %45, %43
  %52 = add nsw i32 %33, -1
  %53 = icmp slt i32 %33, 1
  %54 = select i1 %53, i32 %22, i32 0
  %55 = add nsw i32 %52, %54
  %56 = add nuw nsw i32 %32, 1
  %57 = icmp eq i32 %56, %22
  br i1 %57, label %58, label %31

58:                                               ; preds = %51, %17, %39, %49
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(12) %class.SkDescriptor* @_ZNK12RemoteStrike13getDescriptorEv(%class.RemoteStrike*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %class.RemoteStrike, %class.RemoteStrike* %0, i64 0, i32 1, i32 0
  %3 = load %class.SkDescriptor*, %class.SkDescriptor** %2, align 8
  ret %class.SkDescriptor* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14SkStrikeServerC2EPNS_24DiscardableHandleManagerE(%class.SkStrikeServer* nocapture, %"class.SkStrikeServer::DiscardableHandleManager"*) unnamed_addr #1 align 2 {
  %3 = tail call i8* @_Znwm(i64 136) #18
  %4 = bitcast i8* %3 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV18SkStrikeServerImpl, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds i8, i8* %3, i64 8
  %6 = getelementptr inbounds i8, i8* %3, i64 40
  %7 = bitcast i8* %6 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 32, i1 false) #16
  store i32 1065353216, i32* %7, align 4
  %8 = getelementptr inbounds i8, i8* %3, i64 48
  %9 = bitcast i8* %8 to %"class.SkStrikeServer::DiscardableHandleManager"**
  store %"class.SkStrikeServer::DiscardableHandleManager"* %1, %"class.SkStrikeServer::DiscardableHandleManager"** %9, align 8
  %10 = getelementptr inbounds i8, i8* %3, i64 56
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 16, i1 false) #16
  %11 = getelementptr inbounds i8, i8* %3, i64 72
  %12 = bitcast i8* %11 to i64*
  store i64 2000, i64* %12, align 8
  %13 = getelementptr inbounds i8, i8* %3, i64 80
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 56, i1 false) #16
  %14 = ptrtoint i8* %3 to i64
  %15 = bitcast %class.SkStrikeServer* %0 to i64*
  store i64 %14, i64* %15, align 8
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14SkStrikeServerD2Ev(%class.SkStrikeServer* nocapture) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %class.SkStrikeServer, %class.SkStrikeServer* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = load %class.SkStrikeServerImpl*, %class.SkStrikeServerImpl** %2, align 8
  store %class.SkStrikeServerImpl* null, %class.SkStrikeServerImpl** %2, align 8
  %4 = icmp eq %class.SkStrikeServerImpl* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = bitcast %class.SkStrikeServerImpl* %3 to void (%class.SkStrikeServerImpl*)***
  %7 = load void (%class.SkStrikeServerImpl*)**, void (%class.SkStrikeServerImpl*)*** %6, align 8
  %8 = getelementptr inbounds void (%class.SkStrikeServerImpl*)*, void (%class.SkStrikeServerImpl*)** %7, i64 1
  %9 = load void (%class.SkStrikeServerImpl*)*, void (%class.SkStrikeServerImpl*)** %8, align 8
  tail call void %9(%class.SkStrikeServerImpl* nonnull %3) #16
  br label %10

10:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %class.SkCanvas* @_ZN14SkStrikeServer18makeAnalysisCanvasEiiRK14SkSurfaceProps5sk_spI12SkColorSpaceEb(%class.SkStrikeServer* nocapture readonly, i32, i32, %class.SkSurfaceProps* dereferenceable(8), %class.sk_sp.160* nocapture, i1 zeroext) local_unnamed_addr #1 align 2 {
  %7 = alloca { i64, i64 }, align 8
  %8 = alloca %class.sk_sp.160, align 8
  %9 = alloca %class.sk_sp.159, align 8
  %10 = tail call i8* @_Znwm(i64 712) #18
  %11 = zext i32 %2 to i64
  %12 = shl nuw i64 %11, 32
  %13 = getelementptr inbounds %class.SkStrikeServer, %class.SkStrikeServer* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %14 = load %class.SkStrikeServerImpl*, %class.SkStrikeServerImpl** %13, align 8
  %15 = getelementptr inbounds %class.sk_sp.160, %class.sk_sp.160* %4, i64 0, i32 0
  %16 = bitcast %class.sk_sp.160* %4 to i64*
  %17 = load i64, i64* %16, align 8
  store %class.SkColorSpace* null, %class.SkColorSpace** %15, align 8
  %18 = bitcast %class.sk_sp.160* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = bitcast { i64, i64 }* %7 to %struct.SkIRect*
  %20 = zext i1 %5 to i8
  %21 = bitcast i8* %10 to %class.SkNoPixelsDevice*
  %22 = bitcast { i64, i64 }* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %22) #16
  %23 = zext i32 %1 to i64
  %24 = or i64 %12, %23
  %25 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i64 0, i32 0
  store i64 0, i64* %25, align 8
  %26 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i64 0, i32 1
  store i64 %24, i64* %26, align 8
  %27 = bitcast %class.sk_sp.160* %8 to i64*
  store i64 %17, i64* %27, align 8
  call void @_ZN16SkNoPixelsDeviceC2ERK7SkIRectRK14SkSurfaceProps5sk_spI12SkColorSpaceE(%class.SkNoPixelsDevice* nonnull %21, %struct.SkIRect* nonnull dereferenceable(16) %19, %class.SkSurfaceProps* dereferenceable(8) %3, %class.sk_sp.160* nonnull %8) #16
  %28 = getelementptr inbounds %class.sk_sp.160, %class.sk_sp.160* %8, i64 0, i32 0
  %29 = load %class.SkColorSpace*, %class.SkColorSpace** %28, align 8
  %30 = icmp eq %class.SkColorSpace* %29, null
  br i1 %30, label %37, label %31

31:                                               ; preds = %6
  %32 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = atomicrmw add i32* %32, i32 -1 acq_rel
  %34 = icmp eq i32 %33, 1
  br i1 %34, label %35, label %37

35:                                               ; preds = %31
  %36 = bitcast %class.SkColorSpace* %29 to i8*
  call void @_ZdlPv(i8* %36) #18
  br label %37

37:                                               ; preds = %35, %31, %6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %22) #16
  %38 = bitcast i8* %10 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [63 x i8*], [6 x i8*] }, { [63 x i8*], [6 x i8*] }* @_ZTV19GlyphTrackingDevice, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %38, align 8
  %39 = getelementptr inbounds i8, i8* %10, i64 16
  %40 = bitcast i8* %39 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [63 x i8*], [6 x i8*] }, { [63 x i8*], [6 x i8*] }* @_ZTV19GlyphTrackingDevice, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %40, align 8
  %41 = getelementptr inbounds i8, i8* %10, i64 488
  %42 = bitcast i8* %41 to %class.SkStrikeServerImpl**
  store %class.SkStrikeServerImpl* %14, %class.SkStrikeServerImpl** %42, align 8
  %43 = getelementptr inbounds i8, i8* %10, i64 496
  store i8 %20, i8* %43, align 8
  %44 = getelementptr inbounds i8, i8* %10, i64 504
  %45 = bitcast i8* %44 to %class.SkGlyphRunListPainter*
  %46 = getelementptr inbounds i8, i8* %10, i64 136
  %47 = bitcast i8* %46 to %class.SkColorSpace**
  %48 = load %class.SkColorSpace*, %class.SkColorSpace** %47, align 8
  %49 = getelementptr inbounds %class.SkStrikeServerImpl, %class.SkStrikeServerImpl* %14, i64 0, i32 0
  call void @_ZN21SkGlyphRunListPainterC1ERK14SkSurfaceProps11SkColorTypeP12SkColorSpaceP28SkStrikeForGPUCacheInterface(%class.SkGlyphRunListPainter* %45, %class.SkSurfaceProps* dereferenceable(8) %3, i32 0, %class.SkColorSpace* %48, %class.SkStrikeForGPUCacheInterface* %49) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  %50 = ptrtoint i8* %10 to i64
  %51 = bitcast %class.sk_sp.159* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51)
  %52 = call i8* @_Znwm(i64 3232) #18
  %53 = bitcast i8* %52 to %class.SkCanvas*
  %54 = bitcast %class.sk_sp.159* %9 to i64*
  store i64 %50, i64* %54, align 8
  call void @_ZN8SkCanvasC1E5sk_spI12SkBaseDeviceE(%class.SkCanvas* nonnull %53, %class.sk_sp.159* nonnull %9) #16
  %55 = getelementptr inbounds %class.sk_sp.159, %class.sk_sp.159* %9, i64 0, i32 0
  %56 = load %class.SkBaseDevice*, %class.SkBaseDevice** %55, align 8
  %57 = icmp eq %class.SkBaseDevice* %56, null
  br i1 %57, label %68, label %58

58:                                               ; preds = %37
  %59 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %56, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = atomicrmw add i32* %59, i32 -1 acq_rel
  %61 = icmp eq i32 %60, 1
  br i1 %61, label %62, label %68

62:                                               ; preds = %58
  %63 = bitcast %class.SkBaseDevice* %56 to %class.SkRefCntBase*
  %64 = bitcast %class.SkBaseDevice* %56 to void (%class.SkRefCntBase*)***
  %65 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %64, align 8
  %66 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %65, i64 2
  %67 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %66, align 8
  call void %67(%class.SkRefCntBase* nonnull %63) #16
  br label %68

68:                                               ; preds = %62, %58, %37
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51)
  ret %class.SkCanvas* %53
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %class.SkStrikeServerImpl* @_ZN14SkStrikeServer4implEv(%class.SkStrikeServer* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %class.SkStrikeServer, %class.SkStrikeServer* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = load %class.SkStrikeServerImpl*, %class.SkStrikeServerImpl** %2, align 8
  ret %class.SkStrikeServerImpl* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14SkStrikeServer17serializeTypefaceEP10SkTypeface(%class.sk_sp* noalias nocapture sret, %class.SkStrikeServer* nocapture readonly, %class.SkTypeface*) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %class.SkStrikeServer, %class.SkStrikeServer* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %class.SkStrikeServerImpl*, %class.SkStrikeServerImpl** %4, align 8
  tail call void @_ZN18SkStrikeServerImpl17serializeTypefaceEP10SkTypeface(%class.sk_sp* sret %0, %class.SkStrikeServerImpl* %5, %class.SkTypeface* %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14SkStrikeServer15writeStrikeDataEPNSt3__16vectorIhNS0_9allocatorIhEEEE(%class.SkStrikeServer* nocapture readonly, %"class.std::__1::vector.37"*) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %class.SkStrikeServer, %class.SkStrikeServer* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = load %class.SkStrikeServerImpl*, %class.SkStrikeServerImpl** %3, align 8
  tail call void @_ZN18SkStrikeServerImpl15writeStrikeDataEPNSt3__16vectorIhNS0_9allocatorIhEEEE(%class.SkStrikeServerImpl* %4, %"class.std::__1::vector.37"* %1)
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN14SkStrikeServer38setMaxEntriesInDescriptorMapForTestingEm(%class.SkStrikeServer* nocapture readonly, i64) local_unnamed_addr #9 align 2 {
  %3 = getelementptr inbounds %class.SkStrikeServer, %class.SkStrikeServer* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = load %class.SkStrikeServerImpl*, %class.SkStrikeServerImpl** %3, align 8
  %5 = getelementptr inbounds %class.SkStrikeServerImpl, %class.SkStrikeServerImpl* %4, i64 0, i32 4
  store i64 %1, i64* %5, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK14SkStrikeServer29remoteStrikeMapSizeForTestingEv(%class.SkStrikeServer* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %class.SkStrikeServer, %class.SkStrikeServer* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = load %class.SkStrikeServerImpl*, %class.SkStrikeServerImpl** %2, align 8
  %4 = getelementptr inbounds %class.SkStrikeServerImpl, %class.SkStrikeServerImpl* %3, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  ret i64 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18SkStrikeClientImplC2E5sk_spIN14SkStrikeClient24DiscardableHandleManagerEEbP13SkStrikeCache(%class.SkStrikeClientImpl* nocapture, %class.sk_sp.212* nocapture, i1 zeroext, %class.SkStrikeCache*) unnamed_addr #1 align 2 {
  %5 = zext i1 %2 to i8
  %6 = bitcast %class.SkStrikeClientImpl* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 16, i1 false) #16
  %7 = getelementptr inbounds %class.SkStrikeClientImpl, %class.SkStrikeClientImpl* %0, i64 0, i32 1
  %8 = getelementptr inbounds %class.sk_sp.212, %class.sk_sp.212* %1, i64 0, i32 0
  %9 = bitcast %class.sk_sp.212* %1 to i64*
  %10 = load i64, i64* %9, align 8
  store %"class.SkStrikeClient::DiscardableHandleManager"* null, %"class.SkStrikeClient::DiscardableHandleManager"** %8, align 8
  %11 = bitcast %class.sk_sp.212* %7 to i64*
  store i64 %10, i64* %11, align 8
  %12 = getelementptr inbounds %class.SkStrikeClientImpl, %class.SkStrikeClientImpl* %0, i64 0, i32 2
  %13 = icmp eq %class.SkStrikeCache* %3, null
  br i1 %13, label %14, label %16

14:                                               ; preds = %4
  %15 = tail call %class.SkStrikeCache* @_ZN13SkStrikeCache17GlobalStrikeCacheEv() #16
  br label %16

16:                                               ; preds = %4, %14
  %17 = phi %class.SkStrikeCache* [ %15, %14 ], [ %3, %4 ]
  store %class.SkStrikeCache* %17, %class.SkStrikeCache** %12, align 8
  %18 = getelementptr inbounds %class.SkStrikeClientImpl, %class.SkStrikeClientImpl* %0, i64 0, i32 3
  store i8 %5, i8* %18, align 8
  ret void
}

declare %class.SkStrikeCache* @_ZN13SkStrikeCache17GlobalStrikeCacheEv() local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN18SkStrikeClientImpl9ReadGlyphER7SkTLazyI7SkGlyphEP12Deserializer(%class.SkTLazy* dereferenceable(48), %class.Deserializer*) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %class.Deserializer, %class.Deserializer* %1, i64 0, i32 2
  %4 = load i64, i64* %3, align 8
  %5 = add i64 %4, 3
  %6 = and i64 %5, -4
  %7 = getelementptr inbounds %class.Deserializer, %class.Deserializer* %1, i64 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = icmp ult i64 %8, %6
  %10 = sub i64 %8, %6
  %11 = icmp ult i64 %10, 4
  %12 = or i1 %9, %11
  br i1 %12, label %154, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %class.Deserializer, %class.Deserializer* %1, i64 0, i32 0
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr inbounds i8, i8* %15, i64 %6
  %17 = add i64 %6, 4
  store i64 %17, i64* %3, align 8
  %18 = icmp eq i8* %16, null
  br i1 %18, label %154, label %19

19:                                               ; preds = %13
  %20 = bitcast i8* %16 to i32*
  %21 = load i32, i32* %20, align 1
  %22 = getelementptr inbounds %class.SkTLazy, %class.SkTLazy* %0, i64 0, i32 1
  %23 = load %class.SkGlyph*, %class.SkGlyph** %22, align 8
  %24 = icmp eq %class.SkGlyph* %23, null
  br i1 %24, label %26, label %25

25:                                               ; preds = %19
  store %class.SkGlyph* null, %class.SkGlyph** %22, align 8
  br label %26

26:                                               ; preds = %19, %25
  %27 = getelementptr inbounds %class.SkTLazy, %class.SkTLazy* %0, i64 0, i32 0, i64 36
  %28 = bitcast i8* %27 to i32*
  %29 = getelementptr inbounds %class.SkTLazy, %class.SkTLazy* %0, i64 0, i32 0, i64 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 34, i1 false) #16
  store i32 %21, i32* %28, align 4
  %30 = bitcast %class.SkGlyph** %22 to %class.SkTLazy**
  store %class.SkTLazy* %0, %class.SkTLazy** %30, align 8
  %31 = getelementptr inbounds %class.SkTLazy, %class.SkTLazy* %0, i64 0, i32 0, i64 24
  %32 = load i64, i64* %3, align 8
  %33 = add i64 %32, 3
  %34 = and i64 %33, -4
  %35 = load i64, i64* %7, align 8
  %36 = icmp ult i64 %35, %34
  %37 = sub i64 %35, %34
  %38 = icmp ult i64 %37, 4
  %39 = or i1 %36, %38
  br i1 %39, label %154, label %40

40:                                               ; preds = %26
  %41 = load i8*, i8** %14, align 8
  %42 = getelementptr inbounds i8, i8* %41, i64 %34
  %43 = add i64 %34, 4
  store i64 %43, i64* %3, align 8
  %44 = icmp eq i8* %42, null
  br i1 %44, label %154, label %45

45:                                               ; preds = %40
  %46 = bitcast i8* %42 to i32*
  %47 = bitcast i8* %31 to i32*
  %48 = load i32, i32* %46, align 1
  store i32 %48, i32* %47, align 4
  %49 = load %class.SkGlyph*, %class.SkGlyph** %22, align 8
  %50 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %49, i64 0, i32 7
  %51 = load i64, i64* %3, align 8
  %52 = add i64 %51, 3
  %53 = and i64 %52, -4
  %54 = load i64, i64* %7, align 8
  %55 = icmp ult i64 %54, %53
  %56 = sub i64 %54, %53
  %57 = icmp ult i64 %56, 4
  %58 = or i1 %55, %57
  br i1 %58, label %154, label %59

59:                                               ; preds = %45
  %60 = load i8*, i8** %14, align 8
  %61 = getelementptr inbounds i8, i8* %60, i64 %53
  %62 = add i64 %53, 4
  store i64 %62, i64* %3, align 8
  %63 = icmp eq i8* %61, null
  br i1 %63, label %154, label %64

64:                                               ; preds = %59
  %65 = bitcast i8* %61 to i32*
  %66 = bitcast float* %50 to i32*
  %67 = load i32, i32* %65, align 1
  store i32 %67, i32* %66, align 4
  %68 = load %class.SkGlyph*, %class.SkGlyph** %22, align 8
  %69 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %68, i64 0, i32 0
  %70 = load i64, i64* %3, align 8
  %71 = add i64 %70, 1
  %72 = and i64 %71, -2
  %73 = load i64, i64* %7, align 8
  %74 = icmp ult i64 %73, %72
  %75 = sub i64 %73, %72
  %76 = icmp ult i64 %75, 2
  %77 = or i1 %74, %76
  br i1 %77, label %154, label %78

78:                                               ; preds = %64
  %79 = load i8*, i8** %14, align 8
  %80 = getelementptr inbounds i8, i8* %79, i64 %72
  %81 = add i64 %72, 2
  store i64 %81, i64* %3, align 8
  %82 = icmp eq i8* %80, null
  br i1 %82, label %154, label %83

83:                                               ; preds = %78
  %84 = bitcast i8* %80 to i16*
  %85 = load i16, i16* %84, align 1
  store i16 %85, i16* %69, align 2
  %86 = load %class.SkGlyph*, %class.SkGlyph** %22, align 8
  %87 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %86, i64 0, i32 1
  %88 = load i64, i64* %3, align 8
  %89 = add i64 %88, 1
  %90 = and i64 %89, -2
  %91 = load i64, i64* %7, align 8
  %92 = icmp ult i64 %91, %90
  %93 = sub i64 %91, %90
  %94 = icmp ult i64 %93, 2
  %95 = or i1 %92, %94
  br i1 %95, label %154, label %96

96:                                               ; preds = %83
  %97 = load i8*, i8** %14, align 8
  %98 = getelementptr inbounds i8, i8* %97, i64 %90
  %99 = add i64 %90, 2
  store i64 %99, i64* %3, align 8
  %100 = icmp eq i8* %98, null
  br i1 %100, label %154, label %101

101:                                              ; preds = %96
  %102 = bitcast i8* %98 to i16*
  %103 = load i16, i16* %102, align 1
  store i16 %103, i16* %87, align 2
  %104 = load %class.SkGlyph*, %class.SkGlyph** %22, align 8
  %105 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %104, i64 0, i32 2
  %106 = load i64, i64* %3, align 8
  %107 = add i64 %106, 1
  %108 = and i64 %107, -2
  %109 = load i64, i64* %7, align 8
  %110 = icmp ult i64 %109, %108
  %111 = sub i64 %109, %108
  %112 = icmp ult i64 %111, 2
  %113 = or i1 %110, %112
  br i1 %113, label %154, label %114

114:                                              ; preds = %101
  %115 = load i8*, i8** %14, align 8
  %116 = getelementptr inbounds i8, i8* %115, i64 %108
  %117 = add i64 %108, 2
  store i64 %117, i64* %3, align 8
  %118 = icmp eq i8* %116, null
  br i1 %118, label %154, label %119

119:                                              ; preds = %114
  %120 = bitcast i8* %116 to i16*
  %121 = load i16, i16* %120, align 1
  store i16 %121, i16* %105, align 2
  %122 = load %class.SkGlyph*, %class.SkGlyph** %22, align 8
  %123 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %122, i64 0, i32 3
  %124 = load i64, i64* %3, align 8
  %125 = add i64 %124, 1
  %126 = and i64 %125, -2
  %127 = load i64, i64* %7, align 8
  %128 = icmp ult i64 %127, %126
  %129 = sub i64 %127, %126
  %130 = icmp ult i64 %129, 2
  %131 = or i1 %128, %130
  br i1 %131, label %154, label %132

132:                                              ; preds = %119
  %133 = load i8*, i8** %14, align 8
  %134 = getelementptr inbounds i8, i8* %133, i64 %126
  %135 = add i64 %126, 2
  store i64 %135, i64* %3, align 8
  %136 = icmp eq i8* %134, null
  br i1 %136, label %154, label %137

137:                                              ; preds = %132
  %138 = bitcast i8* %134 to i16*
  %139 = load i16, i16* %138, align 1
  store i16 %139, i16* %123, align 2
  %140 = load i64, i64* %3, align 8
  %141 = load i64, i64* %7, align 8
  %142 = icmp ugt i64 %141, %140
  br i1 %142, label %143, label %154

143:                                              ; preds = %137
  %144 = load i8*, i8** %14, align 8
  %145 = getelementptr inbounds i8, i8* %144, i64 %140
  %146 = add nuw i64 %140, 1
  store i64 %146, i64* %3, align 8
  %147 = icmp eq i8* %145, null
  br i1 %147, label %154, label %148

148:                                              ; preds = %143
  %149 = load i8, i8* %145, align 1
  %150 = icmp ult i8 %149, 6
  br i1 %150, label %151, label %154

151:                                              ; preds = %148
  %152 = load %class.SkGlyph*, %class.SkGlyph** %22, align 8
  %153 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %152, i64 0, i32 8
  store i8 %149, i8* %153, align 8
  br label %154

154:                                              ; preds = %137, %143, %119, %132, %101, %114, %83, %96, %64, %78, %45, %59, %26, %40, %2, %13, %151, %148
  %155 = phi i1 [ true, %151 ], [ false, %148 ], [ false, %13 ], [ false, %2 ], [ false, %40 ], [ false, %26 ], [ false, %59 ], [ false, %45 ], [ false, %78 ], [ false, %64 ], [ false, %96 ], [ false, %83 ], [ false, %114 ], [ false, %101 ], [ false, %132 ], [ false, %119 ], [ false, %143 ], [ false, %137 ]
  ret i1 %155
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN18SkStrikeClientImpl14readStrikeDataEPVKvm(%class.SkStrikeClientImpl*, i8*, i64) local_unnamed_addr #1 align 2 {
  %4 = alloca i32, align 4
  %5 = alloca %struct.SkScalerContextRec, align 4
  %6 = alloca i32, align 4
  %7 = alloca %class.Deserializer, align 8
  %8 = alloca %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData", align 8
  %9 = alloca %struct.WireTypeface, align 4
  %10 = alloca %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData", align 8
  %11 = alloca %class.sk_sp.1, align 8
  %12 = alloca %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData", align 8
  %13 = alloca %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData", align 8
  %14 = alloca %class.SkAutoDescriptor, align 8
  %15 = alloca %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData", align 8
  %16 = alloca %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData", align 8
  %17 = alloca %struct.SkFontMetrics, align 4
  %18 = alloca %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData", align 8
  %19 = alloca %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData", align 8
  %20 = alloca %class.SkAutoDescriptor, align 8
  %21 = alloca %class.sk_sp.243, align 8
  %22 = alloca %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData", align 8
  %23 = alloca %struct.SkScalerContextEffects, align 8
  %24 = alloca %class.sk_sp.243, align 8
  %25 = alloca %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData", align 8
  %26 = alloca %class.SkTLazy, align 8
  %27 = alloca %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData", align 8
  %28 = alloca %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData", align 8
  %29 = alloca %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData", align 8
  %30 = alloca %class.SkTLazy, align 8
  %31 = alloca %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData", align 8
  %32 = alloca %class.SkPath, align 8
  %33 = alloca %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData", align 8
  %34 = alloca %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData", align 8
  %35 = alloca %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData", align 8
  %36 = bitcast %class.Deserializer* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %36) #16
  %37 = getelementptr inbounds %class.Deserializer, %class.Deserializer* %7, i64 0, i32 0
  %38 = getelementptr inbounds %class.Deserializer, %class.Deserializer* %7, i64 0, i32 1
  %39 = getelementptr inbounds %class.Deserializer, %class.Deserializer* %7, i64 0, i32 2
  store i8* %1, i8** %37, align 8
  store i64 %2, i64* %38, align 8
  store i64 0, i64* %39, align 8
  %40 = icmp ult i64 %2, 8
  br i1 %40, label %55, label %41

41:                                               ; preds = %3
  store i64 8, i64* %39, align 8
  %42 = icmp eq i8* %1, null
  br i1 %42, label %55, label %43

43:                                               ; preds = %41
  %44 = bitcast i8* %1 to i64*
  %45 = load i64, i64* %44, align 1
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %118, label %47

47:                                               ; preds = %43
  %48 = bitcast %struct.WireTypeface* %9 to i8*
  %49 = getelementptr inbounds %struct.WireTypeface, %struct.WireTypeface* %9, i64 0, i32 0
  %50 = getelementptr inbounds %struct.WireTypeface, %struct.WireTypeface* %9, i64 0, i32 1
  %51 = getelementptr inbounds %struct.WireTypeface, %struct.WireTypeface* %9, i64 0, i32 2, i32 0
  %52 = getelementptr inbounds %struct.WireTypeface, %struct.WireTypeface* %9, i64 0, i32 3
  %53 = getelementptr inbounds %class.sk_sp.1, %class.sk_sp.1* %11, i64 0, i32 0
  %54 = bitcast %struct.WireTypeface* %9 to i8*
  br label %68

55:                                               ; preds = %41, %3
  %56 = phi i64 [ 8, %41 ], [ 0, %3 ]
  tail call void (i8*, i32, i8*, ...) @_Z17SkDebugf_FileLinePKciS0_z(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3, i64 0, i64 0), i32 978, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.4, i64 0, i64 0), i32 978) #16
  %57 = bitcast %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %57) #16
  %58 = getelementptr inbounds %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData", %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"* %8, i64 0, i32 0
  %59 = getelementptr inbounds %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData", %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"* %8, i64 0, i32 1
  %60 = getelementptr inbounds %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData", %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"* %8, i64 0, i32 2
  store i64 %2, i64* %58, align 8
  store i64 %56, i64* %59, align 8
  %61 = getelementptr inbounds %class.SkStrikeClientImpl, %class.SkStrikeClientImpl* %0, i64 0, i32 1, i32 0
  %62 = bitcast i64* %60 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %62, i8 0, i64 32, i1 false)
  %63 = load %"class.SkStrikeClient::DiscardableHandleManager"*, %"class.SkStrikeClient::DiscardableHandleManager"** %61, align 8
  %64 = bitcast %"class.SkStrikeClient::DiscardableHandleManager"* %63 to void (%"class.SkStrikeClient::DiscardableHandleManager"*, %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"*)***
  %65 = load void (%"class.SkStrikeClient::DiscardableHandleManager"*, %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"*)**, void (%"class.SkStrikeClient::DiscardableHandleManager"*, %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"*)*** %64, align 8
  %66 = getelementptr inbounds void (%"class.SkStrikeClient::DiscardableHandleManager"*, %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"*)*, void (%"class.SkStrikeClient::DiscardableHandleManager"*, %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"*)** %65, i64 6
  %67 = load void (%"class.SkStrikeClient::DiscardableHandleManager"*, %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"*)*, void (%"class.SkStrikeClient::DiscardableHandleManager"*, %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"*)** %66, align 8
  call void %67(%"class.SkStrikeClient::DiscardableHandleManager"* %63, %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"* nonnull dereferenceable(48) %8) #16
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %57) #16
  br label %758

68:                                               ; preds = %96, %47
  %69 = phi i64 [ %2, %47 ], [ %100, %96 ]
  %70 = phi i64 [ 8, %47 ], [ %99, %96 ]
  %71 = phi i64 [ 0, %47 ], [ %97, %96 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %48) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %54, i8 -86, i64 16, i1 false)
  store i32 0, i32* %49, align 4
  store i32 0, i32* %50, align 4
  store i32 328080, i32* %51, align 4
  store i8 0, i8* %52, align 4
  %72 = add i64 %70, 3
  %73 = and i64 %72, -4
  %74 = icmp ult i64 %69, %73
  %75 = sub i64 %69, %73
  %76 = icmp ult i64 %75, 16
  %77 = or i1 %74, %76
  br i1 %77, label %101, label %78

78:                                               ; preds = %68
  %79 = load i8*, i8** %37, align 8
  %80 = getelementptr inbounds i8, i8* %79, i64 %73
  %81 = add i64 %73, 16
  store i64 %81, i64* %39, align 8
  %82 = icmp eq i8* %80, null
  br i1 %82, label %101, label %83

83:                                               ; preds = %78
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %48, i8* nonnull align 1 %80, i64 16, i1 false) #16
  call void @_ZN18SkStrikeClientImpl11addTypefaceERK12WireTypeface(%class.sk_sp.1* nonnull sret %11, %class.SkStrikeClientImpl* %0, %struct.WireTypeface* nonnull dereferenceable(16) %9)
  %84 = load %class.SkTypeface*, %class.SkTypeface** %53, align 8
  %85 = icmp eq %class.SkTypeface* %84, null
  br i1 %85, label %96, label %86

86:                                               ; preds = %83
  %87 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %84, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = atomicrmw add i32* %87, i32 -1 acq_rel
  %89 = icmp eq i32 %88, 1
  br i1 %89, label %90, label %96

90:                                               ; preds = %86
  %91 = bitcast %class.SkTypeface* %84 to %class.SkRefCntBase*
  %92 = bitcast %class.SkTypeface* %84 to void (%class.SkRefCntBase*)***
  %93 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %92, align 8
  %94 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %93, i64 2
  %95 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %94, align 8
  call void %95(%class.SkRefCntBase* nonnull %91) #16
  br label %96

96:                                               ; preds = %83, %86, %90
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %48) #16
  %97 = add nuw i64 %71, 1
  %98 = icmp eq i64 %97, %45
  %99 = load i64, i64* %39, align 8
  %100 = load i64, i64* %38, align 8
  br i1 %98, label %115, label %68

101:                                              ; preds = %78, %68
  call void (i8*, i32, i8*, ...) @_Z17SkDebugf_FileLinePKciS0_z(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3, i64 0, i64 0), i32 981, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.4, i64 0, i64 0), i32 981) #16
  %102 = bitcast %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %102) #16
  %103 = getelementptr inbounds %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData", %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"* %10, i64 0, i32 0
  %104 = getelementptr inbounds %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData", %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"* %10, i64 0, i32 1
  %105 = getelementptr inbounds %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData", %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"* %10, i64 0, i32 2
  %106 = getelementptr inbounds %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData", %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"* %10, i64 0, i32 3
  store i64 %2, i64* %103, align 8
  %107 = load i64, i64* %39, align 8
  store i64 %107, i64* %104, align 8
  store i64 %45, i64* %105, align 8
  %108 = getelementptr inbounds %class.SkStrikeClientImpl, %class.SkStrikeClientImpl* %0, i64 0, i32 1, i32 0
  %109 = bitcast i64* %106 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %109, i8 0, i64 24, i1 false)
  %110 = load %"class.SkStrikeClient::DiscardableHandleManager"*, %"class.SkStrikeClient::DiscardableHandleManager"** %108, align 8
  %111 = bitcast %"class.SkStrikeClient::DiscardableHandleManager"* %110 to void (%"class.SkStrikeClient::DiscardableHandleManager"*, %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"*)***
  %112 = load void (%"class.SkStrikeClient::DiscardableHandleManager"*, %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"*)**, void (%"class.SkStrikeClient::DiscardableHandleManager"*, %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"*)*** %111, align 8
  %113 = getelementptr inbounds void (%"class.SkStrikeClient::DiscardableHandleManager"*, %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"*)*, void (%"class.SkStrikeClient::DiscardableHandleManager"*, %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"*)** %112, i64 6
  %114 = load void (%"class.SkStrikeClient::DiscardableHandleManager"*, %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"*)*, void (%"class.SkStrikeClient::DiscardableHandleManager"*, %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"*)** %113, align 8
  call void %114(%"class.SkStrikeClient::DiscardableHandleManager"* %110, %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"* nonnull dereferenceable(48) %10) #16
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %102) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %48) #16
  br label %758

115:                                              ; preds = %96
  %116 = add i64 %99, 7
  %117 = and i64 %116, -8
  br label %118

118:                                              ; preds = %115, %43
  %119 = phi i64 [ %100, %115 ], [ %2, %43 ]
  %120 = phi i64 [ %117, %115 ], [ 8, %43 ]
  %121 = icmp ult i64 %119, %120
  %122 = sub i64 %119, %120
  %123 = icmp ult i64 %122, 8
  %124 = or i1 %121, %123
  br i1 %124, label %258, label %125

125:                                              ; preds = %118
  %126 = load i8*, i8** %37, align 8
  %127 = getelementptr inbounds i8, i8* %126, i64 %120
  %128 = add i64 %120, 8
  store i64 %128, i64* %39, align 8
  %129 = icmp eq i8* %127, null
  br i1 %129, label %258, label %130

130:                                              ; preds = %125
  %131 = bitcast i8* %127 to i64*
  %132 = load i64, i64* %131, align 1
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %758, label %134

134:                                              ; preds = %130
  %135 = bitcast %class.SkAutoDescriptor* %14 to i8*
  %136 = getelementptr inbounds %class.SkAutoDescriptor, %class.SkAutoDescriptor* %14, i64 0, i32 0
  %137 = bitcast %class.SkAutoDescriptor* %14 to i8**
  %138 = bitcast %struct.SkFontMetrics* %17 to i8*
  %139 = getelementptr inbounds %class.SkStrikeClientImpl, %class.SkStrikeClientImpl* %0, i64 0, i32 0, i32 0, i32 1
  %140 = getelementptr inbounds %class.SkStrikeClientImpl, %class.SkStrikeClientImpl* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %141 = bitcast %class.SkAutoDescriptor* %20 to i8*
  %142 = getelementptr inbounds %class.SkAutoDescriptor, %class.SkAutoDescriptor* %20, i64 0, i32 0
  %143 = bitcast i32* %4 to i8*
  %144 = bitcast %struct.SkScalerContextRec* %5 to i8*
  %145 = getelementptr inbounds %struct.SkScalerContextRec, %struct.SkScalerContextRec* %5, i64 0, i32 0
  %146 = getelementptr inbounds %struct.SkScalerContextRec, %struct.SkScalerContextRec* %5, i64 0, i32 1
  %147 = getelementptr inbounds %struct.SkScalerContextRec, %struct.SkScalerContextRec* %5, i64 0, i32 7
  %148 = bitcast float* %146 to i8*
  %149 = getelementptr inbounds %struct.SkScalerContextRec, %struct.SkScalerContextRec* %5, i64 0, i32 11
  %150 = bitcast i32* %147 to i8*
  %151 = bitcast i32* %6 to i8*
  %152 = bitcast %class.sk_sp.243* %21 to i8*
  %153 = getelementptr inbounds %class.sk_sp.243, %class.sk_sp.243* %21, i64 0, i32 0
  %154 = getelementptr inbounds %class.SkStrikeClientImpl, %class.SkStrikeClientImpl* %0, i64 0, i32 2
  %155 = bitcast %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"* %22 to i8*
  %156 = getelementptr inbounds %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData", %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"* %22, i64 0, i32 0
  %157 = getelementptr inbounds %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData", %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"* %22, i64 0, i32 1
  %158 = getelementptr inbounds %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData", %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"* %22, i64 0, i32 2
  %159 = getelementptr inbounds %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData", %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"* %22, i64 0, i32 3
  %160 = getelementptr inbounds %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData", %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"* %22, i64 0, i32 4
  %161 = getelementptr inbounds %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData", %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"* %22, i64 0, i32 5
  %162 = getelementptr inbounds %class.SkStrikeClientImpl, %class.SkStrikeClientImpl* %0, i64 0, i32 1, i32 0
  %163 = bitcast %struct.SkScalerContextEffects* %23 to i8*
  %164 = bitcast %class.sk_sp.243* %24 to i8*
  %165 = getelementptr inbounds %class.sk_sp.243, %class.sk_sp.243* %24, i64 0, i32 0
  %166 = bitcast %class.sk_sp.243* %24 to i64*
  %167 = bitcast %class.sk_sp.243* %21 to i64*
  %168 = getelementptr inbounds %class.SkTLazy, %class.SkTLazy* %26, i64 0, i32 0, i64 0
  %169 = getelementptr inbounds %class.SkTLazy, %class.SkTLazy* %26, i64 0, i32 1
  %170 = bitcast %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"* %27 to i8*
  %171 = getelementptr inbounds %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData", %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"* %27, i64 0, i32 0
  %172 = getelementptr inbounds %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData", %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"* %27, i64 0, i32 1
  %173 = getelementptr inbounds %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData", %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"* %27, i64 0, i32 2
  %174 = getelementptr inbounds %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData", %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"* %27, i64 0, i32 3
  %175 = getelementptr inbounds %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData", %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"* %27, i64 0, i32 4
  %176 = getelementptr inbounds %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData", %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"* %27, i64 0, i32 5
  %177 = bitcast %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"* %28 to i8*
  %178 = getelementptr inbounds %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData", %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"* %28, i64 0, i32 0
  %179 = getelementptr inbounds %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData", %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"* %28, i64 0, i32 1
  %180 = getelementptr inbounds %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData", %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"* %28, i64 0, i32 2
  %181 = getelementptr inbounds %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData", %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"* %28, i64 0, i32 3
  %182 = getelementptr inbounds %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData", %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"* %28, i64 0, i32 4
  %183 = getelementptr inbounds %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData", %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"* %28, i64 0, i32 5
  %184 = getelementptr inbounds %class.SkTLazy, %class.SkTLazy* %30, i64 0, i32 0, i64 0
  %185 = getelementptr inbounds %class.SkTLazy, %class.SkTLazy* %30, i64 0, i32 1
  %186 = bitcast %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"* %31 to i8*
  %187 = getelementptr inbounds %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData", %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"* %31, i64 0, i32 0
  %188 = getelementptr inbounds %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData", %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"* %31, i64 0, i32 1
  %189 = getelementptr inbounds %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData", %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"* %31, i64 0, i32 2
  %190 = getelementptr inbounds %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData", %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"* %31, i64 0, i32 3
  %191 = getelementptr inbounds %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData", %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"* %31, i64 0, i32 4
  %192 = getelementptr inbounds %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData", %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"* %31, i64 0, i32 5
  %193 = bitcast %class.SkPath* %32 to i8*
  %194 = bitcast %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"* %35 to i8*
  %195 = getelementptr inbounds %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData", %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"* %35, i64 0, i32 0
  %196 = getelementptr inbounds %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData", %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"* %35, i64 0, i32 1
  %197 = getelementptr inbounds %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData", %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"* %35, i64 0, i32 2
  %198 = getelementptr inbounds %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData", %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"* %35, i64 0, i32 3
  %199 = getelementptr inbounds %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData", %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"* %35, i64 0, i32 4
  %200 = getelementptr inbounds %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData", %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"* %35, i64 0, i32 5
  %201 = bitcast %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"* %34 to i8*
  %202 = getelementptr inbounds %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData", %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"* %34, i64 0, i32 0
  %203 = getelementptr inbounds %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData", %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"* %34, i64 0, i32 1
  %204 = getelementptr inbounds %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData", %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"* %34, i64 0, i32 2
  %205 = getelementptr inbounds %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData", %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"* %34, i64 0, i32 3
  %206 = getelementptr inbounds %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData", %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"* %34, i64 0, i32 4
  %207 = getelementptr inbounds %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData", %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"* %34, i64 0, i32 5
  %208 = bitcast %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"* %33 to i8*
  %209 = getelementptr inbounds %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData", %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"* %33, i64 0, i32 0
  %210 = getelementptr inbounds %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData", %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"* %33, i64 0, i32 1
  %211 = getelementptr inbounds %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData", %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"* %33, i64 0, i32 2
  %212 = getelementptr inbounds %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData", %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"* %33, i64 0, i32 3
  %213 = getelementptr inbounds %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData", %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"* %33, i64 0, i32 4
  %214 = getelementptr inbounds %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData", %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"* %33, i64 0, i32 5
  %215 = bitcast %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"* %29 to i8*
  %216 = getelementptr inbounds %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData", %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"* %29, i64 0, i32 0
  %217 = getelementptr inbounds %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData", %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"* %29, i64 0, i32 1
  %218 = getelementptr inbounds %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData", %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"* %29, i64 0, i32 2
  %219 = getelementptr inbounds %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData", %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"* %29, i64 0, i32 3
  %220 = getelementptr inbounds %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData", %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"* %29, i64 0, i32 4
  %221 = getelementptr inbounds %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData", %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"* %29, i64 0, i32 5
  %222 = bitcast %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"* %25 to i8*
  %223 = getelementptr inbounds %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData", %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"* %25, i64 0, i32 0
  %224 = getelementptr inbounds %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData", %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"* %25, i64 0, i32 1
  %225 = getelementptr inbounds %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData", %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"* %25, i64 0, i32 2
  %226 = getelementptr inbounds %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData", %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"* %25, i64 0, i32 3
  %227 = getelementptr inbounds %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData", %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"* %25, i64 0, i32 4
  %228 = getelementptr inbounds %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData", %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"* %25, i64 0, i32 5
  %229 = bitcast %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"* %19 to i8*
  %230 = getelementptr inbounds %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData", %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"* %19, i64 0, i32 0
  %231 = getelementptr inbounds %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData", %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"* %19, i64 0, i32 1
  %232 = getelementptr inbounds %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData", %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"* %19, i64 0, i32 2
  %233 = getelementptr inbounds %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData", %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"* %19, i64 0, i32 3
  %234 = getelementptr inbounds %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData", %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"* %19, i64 0, i32 4
  %235 = getelementptr inbounds %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData", %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"* %19, i64 0, i32 5
  %236 = bitcast %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"* %18 to i8*
  %237 = getelementptr inbounds %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData", %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"* %18, i64 0, i32 0
  %238 = getelementptr inbounds %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData", %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"* %18, i64 0, i32 1
  %239 = getelementptr inbounds %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData", %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"* %18, i64 0, i32 2
  %240 = getelementptr inbounds %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData", %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"* %18, i64 0, i32 3
  %241 = getelementptr inbounds %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData", %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"* %18, i64 0, i32 4
  %242 = getelementptr inbounds %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData", %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"* %18, i64 0, i32 5
  %243 = bitcast %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"* %16 to i8*
  %244 = getelementptr inbounds %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData", %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"* %16, i64 0, i32 0
  %245 = getelementptr inbounds %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData", %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"* %16, i64 0, i32 1
  %246 = getelementptr inbounds %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData", %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"* %16, i64 0, i32 2
  %247 = getelementptr inbounds %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData", %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"* %16, i64 0, i32 3
  %248 = getelementptr inbounds %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData", %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"* %16, i64 0, i32 4
  %249 = getelementptr inbounds %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData", %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"* %16, i64 0, i32 5
  %250 = bitcast %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"* %15 to i8*
  %251 = getelementptr inbounds %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData", %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"* %15, i64 0, i32 0
  %252 = getelementptr inbounds %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData", %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"* %15, i64 0, i32 1
  %253 = getelementptr inbounds %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData", %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"* %15, i64 0, i32 2
  %254 = getelementptr inbounds %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData", %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"* %15, i64 0, i32 3
  %255 = getelementptr inbounds %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData", %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"* %15, i64 0, i32 4
  %256 = getelementptr inbounds %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData", %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"* %15, i64 0, i32 5
  %257 = bitcast %class.SkPath* %32 to i8*
  br label %274

258:                                              ; preds = %125, %118
  call void (i8*, i32, i8*, ...) @_Z17SkDebugf_FileLinePKciS0_z(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3, i64 0, i64 0), i32 994, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.4, i64 0, i64 0), i32 994) #16
  %259 = bitcast %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %259) #16
  %260 = getelementptr inbounds %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData", %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"* %12, i64 0, i32 0
  %261 = getelementptr inbounds %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData", %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"* %12, i64 0, i32 1
  %262 = getelementptr inbounds %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData", %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"* %12, i64 0, i32 2
  %263 = getelementptr inbounds %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData", %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"* %12, i64 0, i32 3
  store i64 %2, i64* %260, align 8
  %264 = load i64, i64* %39, align 8
  store i64 %264, i64* %261, align 8
  store i64 %45, i64* %262, align 8
  %265 = getelementptr inbounds %class.SkStrikeClientImpl, %class.SkStrikeClientImpl* %0, i64 0, i32 1, i32 0
  %266 = bitcast i64* %263 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %266, i8 0, i64 24, i1 false)
  %267 = load %"class.SkStrikeClient::DiscardableHandleManager"*, %"class.SkStrikeClient::DiscardableHandleManager"** %265, align 8
  %268 = bitcast %"class.SkStrikeClient::DiscardableHandleManager"* %267 to void (%"class.SkStrikeClient::DiscardableHandleManager"*, %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"*)***
  %269 = load void (%"class.SkStrikeClient::DiscardableHandleManager"*, %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"*)**, void (%"class.SkStrikeClient::DiscardableHandleManager"*, %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"*)*** %268, align 8
  %270 = getelementptr inbounds void (%"class.SkStrikeClient::DiscardableHandleManager"*, %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"*)*, void (%"class.SkStrikeClient::DiscardableHandleManager"*, %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"*)** %269, i64 6
  %271 = load void (%"class.SkStrikeClient::DiscardableHandleManager"*, %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"*)*, void (%"class.SkStrikeClient::DiscardableHandleManager"*, %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"*)** %270, align 8
  call void %271(%"class.SkStrikeClient::DiscardableHandleManager"* %267, %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"* nonnull dereferenceable(48) %12) #16
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %259) #16
  br label %758

272:                                              ; preds = %752
  %273 = icmp eq i64 %757, %132
  br i1 %273, label %758, label %274

274:                                              ; preds = %272, %134
  %275 = phi i64 [ 0, %134 ], [ %757, %272 ]
  %276 = phi i64 [ 0, %134 ], [ %754, %272 ]
  %277 = phi i64 [ 0, %134 ], [ %753, %272 ]
  %278 = load i64, i64* %39, align 8
  %279 = add i64 %278, 7
  %280 = and i64 %279, -8
  %281 = load i64, i64* %38, align 8
  %282 = icmp ult i64 %281, %280
  %283 = sub i64 %281, %280
  %284 = icmp ult i64 %283, 8
  %285 = or i1 %282, %284
  br i1 %285, label %291, label %286

286:                                              ; preds = %274
  %287 = load i8*, i8** %37, align 8
  %288 = getelementptr inbounds i8, i8* %287, i64 %280
  %289 = add i64 %280, 8
  store i64 %289, i64* %39, align 8
  %290 = icmp eq i8* %288, null
  br i1 %290, label %291, label %305

291:                                              ; preds = %274, %286
  call void (i8*, i32, i8*, ...) @_Z17SkDebugf_FileLinePKciS0_z(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3, i64 0, i64 0), i32 998, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.4, i64 0, i64 0), i32 998) #16
  %292 = bitcast %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %292) #16
  %293 = getelementptr inbounds %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData", %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"* %13, i64 0, i32 0
  %294 = getelementptr inbounds %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData", %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"* %13, i64 0, i32 1
  %295 = getelementptr inbounds %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData", %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"* %13, i64 0, i32 2
  %296 = getelementptr inbounds %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData", %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"* %13, i64 0, i32 3
  %297 = getelementptr inbounds %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData", %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"* %13, i64 0, i32 4
  %298 = getelementptr inbounds %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData", %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"* %13, i64 0, i32 5
  store i64 %2, i64* %293, align 8
  %299 = load i64, i64* %39, align 8
  store i64 %299, i64* %294, align 8
  store i64 %45, i64* %295, align 8
  store i64 %132, i64* %296, align 8
  store i64 %277, i64* %297, align 8
  store i64 %276, i64* %298, align 8
  %300 = load %"class.SkStrikeClient::DiscardableHandleManager"*, %"class.SkStrikeClient::DiscardableHandleManager"** %162, align 8
  %301 = bitcast %"class.SkStrikeClient::DiscardableHandleManager"* %300 to void (%"class.SkStrikeClient::DiscardableHandleManager"*, %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"*)***
  %302 = load void (%"class.SkStrikeClient::DiscardableHandleManager"*, %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"*)**, void (%"class.SkStrikeClient::DiscardableHandleManager"*, %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"*)*** %301, align 8
  %303 = getelementptr inbounds void (%"class.SkStrikeClient::DiscardableHandleManager"*, %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"*)*, void (%"class.SkStrikeClient::DiscardableHandleManager"*, %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"*)** %302, i64 6
  %304 = load void (%"class.SkStrikeClient::DiscardableHandleManager"*, %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"*)*, void (%"class.SkStrikeClient::DiscardableHandleManager"*, %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"*)** %303, align 8
  call void %304(%"class.SkStrikeClient::DiscardableHandleManager"* %300, %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"* nonnull dereferenceable(48) %13) #16
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %292) #16
  br label %758

305:                                              ; preds = %286
  %306 = bitcast i8* %288 to i64*
  %307 = load i64, i64* %306, align 1
  %308 = trunc i64 %307 to i32
  %309 = lshr i64 %307, 32
  %310 = trunc i64 %309 to i32
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %135) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %135, i8 -86, i64 128, i1 false)
  call void @_ZN16SkAutoDescriptorC1Ev(%class.SkAutoDescriptor* nonnull %14) #16
  %311 = load i64, i64* %39, align 8
  %312 = add i64 %311, 3
  %313 = and i64 %312, -4
  %314 = load i64, i64* %38, align 8
  %315 = icmp ult i64 %314, %313
  %316 = sub i64 %314, %313
  %317 = icmp ult i64 %316, 4
  %318 = or i1 %315, %317
  br i1 %318, label %352, label %319

319:                                              ; preds = %305
  %320 = load i8*, i8** %37, align 8
  %321 = getelementptr inbounds i8, i8* %320, i64 %313
  %322 = add i64 %313, 4
  store i64 %322, i64* %39, align 8
  %323 = icmp eq i8* %321, null
  br i1 %323, label %352, label %324

324:                                              ; preds = %319
  %325 = bitcast i8* %321 to i32*
  %326 = load i32, i32* %325, align 1
  %327 = icmp ult i32 %326, 12
  br i1 %327, label %352, label %328

328:                                              ; preds = %324
  %329 = add i32 %326, 3
  %330 = and i32 %329, -4
  %331 = icmp eq i32 %326, %330
  br i1 %331, label %332, label %352

332:                                              ; preds = %328
  %333 = zext i32 %326 to i64
  %334 = add i64 %313, 7
  %335 = and i64 %334, -4
  %336 = icmp ult i64 %314, %335
  %337 = sub i64 %314, %335
  %338 = icmp ult i64 %337, %333
  %339 = or i1 %336, %338
  br i1 %339, label %352, label %340

340:                                              ; preds = %332
  %341 = getelementptr inbounds i8, i8* %320, i64 %335
  %342 = add i64 %335, %333
  store i64 %342, i64* %39, align 8
  %343 = icmp eq i8* %341, null
  br i1 %343, label %352, label %344

344:                                              ; preds = %340
  call void @_ZN16SkAutoDescriptor5resetEm(%class.SkAutoDescriptor* nonnull %14, i64 %333) #16
  %345 = load i8*, i8** %137, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %345, i8* nonnull align 1 %341, i64 %333, i1 false) #16
  %346 = load %class.SkDescriptor*, %class.SkDescriptor** %136, align 8
  %347 = getelementptr inbounds %class.SkDescriptor, %class.SkDescriptor* %346, i64 0, i32 1
  %348 = load i32, i32* %347, align 4
  %349 = icmp ugt i32 %348, %326
  br i1 %349, label %352, label %350

350:                                              ; preds = %344
  %351 = call zeroext i1 @_ZNK12SkDescriptor7isValidEv(%class.SkDescriptor* %346) #16
  br i1 %351, label %359, label %352

352:                                              ; preds = %332, %305, %319, %344, %340, %328, %324, %350
  call void (i8*, i32, i8*, ...) @_Z17SkDebugf_FileLinePKciS0_z(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3, i64 0, i64 0), i32 1001, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.4, i64 0, i64 0), i32 1001) #16
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %250) #16
  store i64 %2, i64* %251, align 8
  %353 = load i64, i64* %39, align 8
  store i64 %353, i64* %252, align 8
  store i64 %45, i64* %253, align 8
  store i64 %132, i64* %254, align 8
  store i64 %277, i64* %255, align 8
  store i64 %276, i64* %256, align 8
  %354 = load %"class.SkStrikeClient::DiscardableHandleManager"*, %"class.SkStrikeClient::DiscardableHandleManager"** %162, align 8
  %355 = bitcast %"class.SkStrikeClient::DiscardableHandleManager"* %354 to void (%"class.SkStrikeClient::DiscardableHandleManager"*, %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"*)***
  %356 = load void (%"class.SkStrikeClient::DiscardableHandleManager"*, %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"*)**, void (%"class.SkStrikeClient::DiscardableHandleManager"*, %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"*)*** %355, align 8
  %357 = getelementptr inbounds void (%"class.SkStrikeClient::DiscardableHandleManager"*, %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"*)*, void (%"class.SkStrikeClient::DiscardableHandleManager"*, %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"*)** %356, i64 6
  %358 = load void (%"class.SkStrikeClient::DiscardableHandleManager"*, %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"*)*, void (%"class.SkStrikeClient::DiscardableHandleManager"*, %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"*)** %357, align 8
  call void %358(%"class.SkStrikeClient::DiscardableHandleManager"* %354, %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"* nonnull dereferenceable(48) %15) #16
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %250) #16
  br label %752

359:                                              ; preds = %350
  %360 = load i64, i64* %39, align 8
  %361 = load i64, i64* %38, align 8
  %362 = icmp ugt i64 %361, %360
  br i1 %362, label %363, label %368

363:                                              ; preds = %359
  %364 = load i8*, i8** %37, align 8
  %365 = getelementptr inbounds i8, i8* %364, i64 %360
  %366 = add nuw i64 %360, 1
  store i64 %366, i64* %39, align 8
  %367 = icmp eq i8* %365, null
  br i1 %367, label %368, label %375

368:                                              ; preds = %363, %359
  call void (i8*, i32, i8*, ...) @_Z17SkDebugf_FileLinePKciS0_z(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3, i64 0, i64 0), i32 1007, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.4, i64 0, i64 0), i32 1007) #16
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %243) #16
  store i64 %2, i64* %244, align 8
  %369 = load i64, i64* %39, align 8
  store i64 %369, i64* %245, align 8
  store i64 %45, i64* %246, align 8
  store i64 %132, i64* %247, align 8
  store i64 %277, i64* %248, align 8
  store i64 %276, i64* %249, align 8
  %370 = load %"class.SkStrikeClient::DiscardableHandleManager"*, %"class.SkStrikeClient::DiscardableHandleManager"** %162, align 8
  %371 = bitcast %"class.SkStrikeClient::DiscardableHandleManager"* %370 to void (%"class.SkStrikeClient::DiscardableHandleManager"*, %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"*)***
  %372 = load void (%"class.SkStrikeClient::DiscardableHandleManager"*, %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"*)**, void (%"class.SkStrikeClient::DiscardableHandleManager"*, %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"*)*** %371, align 8
  %373 = getelementptr inbounds void (%"class.SkStrikeClient::DiscardableHandleManager"*, %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"*)*, void (%"class.SkStrikeClient::DiscardableHandleManager"*, %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"*)** %372, i64 6
  %374 = load void (%"class.SkStrikeClient::DiscardableHandleManager"*, %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"*)*, void (%"class.SkStrikeClient::DiscardableHandleManager"*, %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"*)** %373, align 8
  call void %374(%"class.SkStrikeClient::DiscardableHandleManager"* %370, %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"* nonnull dereferenceable(48) %16) #16
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %243) #16
  br label %752

375:                                              ; preds = %363
  %376 = load i8, i8* %365, align 1
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %138) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %138, i8 0, i64 64, i1 false)
  %377 = icmp eq i8 %376, 0
  br i1 %377, label %378, label %397

378:                                              ; preds = %375
  %379 = add i64 %360, 4
  %380 = and i64 %379, -4
  %381 = icmp ult i64 %361, %380
  %382 = sub i64 %361, %380
  %383 = icmp ult i64 %382, 64
  %384 = or i1 %381, %383
  br i1 %384, label %390, label %385

385:                                              ; preds = %378
  %386 = getelementptr inbounds i8, i8* %364, i64 %380
  %387 = add i64 %380, 64
  store i64 %387, i64* %39, align 8
  %388 = icmp eq i8* %386, null
  br i1 %388, label %390, label %389

389:                                              ; preds = %385
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %138, i8* nonnull align 1 %386, i64 64, i1 false) #16
  br label %397

390:                                              ; preds = %385, %378
  call void (i8*, i32, i8*, ...) @_Z17SkDebugf_FileLinePKciS0_z(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3, i64 0, i64 0), i32 1011, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.4, i64 0, i64 0), i32 1011) #16
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %236) #16
  store i64 %2, i64* %237, align 8
  %391 = load i64, i64* %39, align 8
  store i64 %391, i64* %238, align 8
  store i64 %45, i64* %239, align 8
  store i64 %132, i64* %240, align 8
  store i64 %277, i64* %241, align 8
  store i64 %276, i64* %242, align 8
  %392 = load %"class.SkStrikeClient::DiscardableHandleManager"*, %"class.SkStrikeClient::DiscardableHandleManager"** %162, align 8
  %393 = bitcast %"class.SkStrikeClient::DiscardableHandleManager"* %392 to void (%"class.SkStrikeClient::DiscardableHandleManager"*, %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"*)***
  %394 = load void (%"class.SkStrikeClient::DiscardableHandleManager"*, %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"*)**, void (%"class.SkStrikeClient::DiscardableHandleManager"*, %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"*)*** %393, align 8
  %395 = getelementptr inbounds void (%"class.SkStrikeClient::DiscardableHandleManager"*, %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"*)*, void (%"class.SkStrikeClient::DiscardableHandleManager"*, %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"*)** %394, i64 6
  %396 = load void (%"class.SkStrikeClient::DiscardableHandleManager"*, %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"*)*, void (%"class.SkStrikeClient::DiscardableHandleManager"*, %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"*)** %395, align 8
  call void %396(%"class.SkStrikeClient::DiscardableHandleManager"* %392, %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"* nonnull dereferenceable(48) %18) #16
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %236) #16
  br label %748

397:                                              ; preds = %389, %375
  %398 = lshr i32 %308, 16
  %399 = xor i32 %398, %308
  %400 = mul i32 %399, -2048144789
  %401 = lshr i32 %400, 13
  %402 = xor i32 %401, %400
  %403 = mul i32 %402, -1028477387
  %404 = lshr i32 %403, 16
  %405 = xor i32 %404, %403
  %406 = icmp eq i32 %405, 0
  %407 = select i1 %406, i32 1, i32 %405
  %408 = load i32, i32* %139, align 4
  %409 = icmp sgt i32 %408, 0
  br i1 %409, label %410, label %440

410:                                              ; preds = %397
  %411 = add nsw i32 %408, -1
  %412 = and i32 %411, %407
  %413 = load %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair>::Slot"*, %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair>::Slot"** %140, align 8
  br label %414

414:                                              ; preds = %428, %410
  %415 = phi i32 [ 0, %410 ], [ %433, %428 ]
  %416 = phi i32 [ %412, %410 ], [ %432, %428 ]
  %417 = sext i32 %416 to i64
  %418 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair>::Slot"* %413, i64 %417, i32 1
  %419 = load i32, i32* %418, align 8
  %420 = icmp eq i32 %419, 0
  br i1 %420, label %440, label %421

421:                                              ; preds = %414
  %422 = icmp eq i32 %407, %419
  br i1 %422, label %423, label %428

423:                                              ; preds = %421
  %424 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair>::Slot"* %413, i64 %417, i32 0
  %425 = getelementptr inbounds %"struct.SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair", %"struct.SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair"* %424, i64 0, i32 0, i32 0
  %426 = load i32, i32* %425, align 4
  %427 = icmp eq i32 %426, %308
  br i1 %427, label %435, label %428

428:                                              ; preds = %423, %421
  %429 = add nsw i32 %416, -1
  %430 = icmp slt i32 %416, 1
  %431 = select i1 %430, i32 %408, i32 0
  %432 = add nsw i32 %429, %431
  %433 = add nuw nsw i32 %415, 1
  %434 = icmp eq i32 %433, %408
  br i1 %434, label %440, label %414

435:                                              ; preds = %423
  %436 = icmp eq %"struct.SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair"* %424, null
  %437 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair>::Slot"* %413, i64 %417, i32 0, i32 0, i32 1
  %438 = icmp eq %class.sk_sp.1* %437, null
  %439 = or i1 %436, %438
  br i1 %439, label %440, label %447

440:                                              ; preds = %414, %428, %397, %435
  call void (i8*, i32, i8*, ...) @_Z17SkDebugf_FileLinePKciS0_z(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3, i64 0, i64 0), i32 1017, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.4, i64 0, i64 0), i32 1017) #16
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %229) #16
  store i64 %2, i64* %230, align 8
  %441 = load i64, i64* %39, align 8
  store i64 %441, i64* %231, align 8
  store i64 %45, i64* %232, align 8
  store i64 %132, i64* %233, align 8
  store i64 %277, i64* %234, align 8
  store i64 %276, i64* %235, align 8
  %442 = load %"class.SkStrikeClient::DiscardableHandleManager"*, %"class.SkStrikeClient::DiscardableHandleManager"** %162, align 8
  %443 = bitcast %"class.SkStrikeClient::DiscardableHandleManager"* %442 to void (%"class.SkStrikeClient::DiscardableHandleManager"*, %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"*)***
  %444 = load void (%"class.SkStrikeClient::DiscardableHandleManager"*, %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"*)**, void (%"class.SkStrikeClient::DiscardableHandleManager"*, %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"*)*** %443, align 8
  %445 = getelementptr inbounds void (%"class.SkStrikeClient::DiscardableHandleManager"*, %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"*)*, void (%"class.SkStrikeClient::DiscardableHandleManager"*, %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"*)** %444, i64 6
  %446 = load void (%"class.SkStrikeClient::DiscardableHandleManager"*, %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"*)*, void (%"class.SkStrikeClient::DiscardableHandleManager"*, %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"*)** %445, align 8
  call void %446(%"class.SkStrikeClient::DiscardableHandleManager"* %442, %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"* nonnull dereferenceable(48) %19) #16
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %229) #16
  br label %748

447:                                              ; preds = %435
  %448 = getelementptr inbounds %class.sk_sp.1, %class.sk_sp.1* %437, i64 0, i32 0
  %449 = load %class.SkTypeface*, %class.SkTypeface** %448, align 8
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %141) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %141, i8 -86, i64 128, i1 false)
  call void @_ZN16SkAutoDescriptorC1Ev(%class.SkAutoDescriptor* nonnull %20) #16
  %450 = load %class.SkDescriptor*, %class.SkDescriptor** %136, align 8
  %451 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %449, i64 0, i32 1
  %452 = load i32, i32* %451, align 8
  %453 = getelementptr inbounds %class.SkDescriptor, %class.SkDescriptor* %450, i64 0, i32 1
  %454 = load i32, i32* %453, align 4
  %455 = zext i32 %454 to i64
  call void @_ZN16SkAutoDescriptor5resetEm(%class.SkAutoDescriptor* nonnull %20, i64 %455) #16
  %456 = load %class.SkDescriptor*, %class.SkDescriptor** %142, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %143) #16
  store i32 -1431655766, i32* %4, align 4
  %457 = call i8* @_ZNK12SkDescriptor9findEntryEjPj(%class.SkDescriptor* %450, i32 1936876899, i32* nonnull %4) #16
  call void @llvm.lifetime.start.p0i8(i64 52, i8* nonnull %144) #16
  call void @llvm.memset.p0i8.i64(i8* align 4 %148, i8 -1, i64 36, i1 false) #16
  call void @llvm.memset.p0i8.i64(i8* align 4 %150, i8 -86, i64 12, i1 false) #16
  store i8 0, i8* %149, align 1
  %458 = load i32, i32* %4, align 4
  %459 = zext i32 %458 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %144, i8* align 1 %457, i64 %459, i1 false) #16
  store i32 %452, i32* %145, align 4
  %460 = call i8* @_ZN12SkDescriptor8addEntryEjmPKv(%class.SkDescriptor* %456, i32 1936876899, i64 52, i8* nonnull %144) #16
  call void @llvm.lifetime.end.p0i8(i64 52, i8* nonnull %144) #16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %143) #16
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %151) #16
  store i32 -1431655766, i32* %6, align 4
  %461 = call i8* @_ZNK12SkDescriptor9findEntryEjPj(%class.SkDescriptor* %450, i32 1701208948, i32* nonnull %6) #16
  %462 = icmp eq i8* %461, null
  br i1 %462, label %467, label %463

463:                                              ; preds = %447
  %464 = load i32, i32* %6, align 4
  %465 = zext i32 %464 to i64
  %466 = call i8* @_ZN12SkDescriptor8addEntryEjmPKv(%class.SkDescriptor* %456, i32 1701208948, i64 %465, i8* nonnull %461) #16
  br label %467

467:                                              ; preds = %447, %463
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %151) #16
  call void @_ZN12SkDescriptor15computeChecksumEv(%class.SkDescriptor* %456) #16
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %152) #16
  store %"class.SkStrikeCache::Strike"* inttoptr (i64 -6148914691236517206 to %"class.SkStrikeCache::Strike"*), %"class.SkStrikeCache::Strike"** %153, align 8
  %468 = load %class.SkStrikeCache*, %class.SkStrikeCache** %154, align 8
  call void @_ZN13SkStrikeCache10findStrikeERK12SkDescriptor(%class.sk_sp.243* nonnull sret %21, %class.SkStrikeCache* %468, %class.SkDescriptor* dereferenceable(12) %456) #16
  %469 = load %"class.SkStrikeCache::Strike"*, %"class.SkStrikeCache::Strike"** %153, align 8
  %470 = icmp eq %"class.SkStrikeCache::Strike"* %469, null
  br i1 %377, label %479, label %471

471:                                              ; preds = %467
  br i1 %470, label %472, label %524

472:                                              ; preds = %471
  call void (i8*, i32, i8*, ...) @_Z17SkDebugf_FileLinePKciS0_z(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3, i64 0, i64 0), i32 1032, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.4, i64 0, i64 0), i32 1032) #16
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %155) #16
  store i64 %2, i64* %156, align 8
  %473 = load i64, i64* %39, align 8
  store i64 %473, i64* %157, align 8
  store i64 %45, i64* %158, align 8
  store i64 %132, i64* %159, align 8
  store i64 %277, i64* %160, align 8
  store i64 %276, i64* %161, align 8
  %474 = load %"class.SkStrikeClient::DiscardableHandleManager"*, %"class.SkStrikeClient::DiscardableHandleManager"** %162, align 8
  %475 = bitcast %"class.SkStrikeClient::DiscardableHandleManager"* %474 to void (%"class.SkStrikeClient::DiscardableHandleManager"*, %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"*)***
  %476 = load void (%"class.SkStrikeClient::DiscardableHandleManager"*, %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"*)**, void (%"class.SkStrikeClient::DiscardableHandleManager"*, %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"*)*** %475, align 8
  %477 = getelementptr inbounds void (%"class.SkStrikeClient::DiscardableHandleManager"*, %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"*)*, void (%"class.SkStrikeClient::DiscardableHandleManager"*, %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"*)** %476, i64 6
  %478 = load void (%"class.SkStrikeClient::DiscardableHandleManager"*, %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"*)*, void (%"class.SkStrikeClient::DiscardableHandleManager"*, %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"*)** %477, align 8
  call void %478(%"class.SkStrikeClient::DiscardableHandleManager"* %474, %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"* nonnull dereferenceable(48) %22) #16
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %155) #16
  br label %731

479:                                              ; preds = %467
  br i1 %470, label %480, label %524

480:                                              ; preds = %479
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %163) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %163, i8 0, i64 16, i1 false) #16
  %481 = call %class.SkScalerContext* @_ZNK10SkTypeface19createScalerContextERK22SkScalerContextEffectsPK12SkDescriptor(%class.SkTypeface* %449, %struct.SkScalerContextEffects* nonnull dereferenceable(16) %23, %class.SkDescriptor* %456) #16
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %164) #16
  %482 = load %class.SkStrikeCache*, %class.SkStrikeCache** %154, align 8
  %483 = call i8* @_Znwm(i64 24) #18
  %484 = load %"class.SkStrikeClient::DiscardableHandleManager"*, %"class.SkStrikeClient::DiscardableHandleManager"** %162, align 8
  %485 = icmp eq %"class.SkStrikeClient::DiscardableHandleManager"* %484, null
  br i1 %485, label %489, label %486

486:                                              ; preds = %480
  %487 = getelementptr inbounds %"class.SkStrikeClient::DiscardableHandleManager", %"class.SkStrikeClient::DiscardableHandleManager"* %484, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %488 = atomicrmw add i32* %487, i32 1 monotonic
  br label %489

489:                                              ; preds = %480, %486
  %490 = ptrtoint %"class.SkStrikeClient::DiscardableHandleManager"* %484 to i64
  %491 = bitcast i8* %483 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV23DiscardableStrikePinner, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %491, align 8
  %492 = getelementptr inbounds i8, i8* %483, i64 8
  %493 = bitcast i8* %492 to i32*
  store i32 %310, i32* %493, align 8
  %494 = getelementptr inbounds i8, i8* %483, i64 16
  %495 = bitcast i8* %494 to i64*
  store i64 %490, i64* %495, align 8
  %496 = bitcast i8* %483 to %class.SkStrikePinner*
  call void @_ZN13SkStrikeCache12createStrikeERK12SkDescriptorNSt3__110unique_ptrI15SkScalerContextNS3_14default_deleteIS5_EEEEP13SkFontMetricsNS4_I14SkStrikePinnerNS6_ISB_EEEE(%class.sk_sp.243* nonnull sret %24, %class.SkStrikeCache* %482, %class.SkDescriptor* dereferenceable(12) %456, %class.SkScalerContext* %481, %struct.SkFontMetrics* nonnull %17, %class.SkStrikePinner* nonnull %496) #16
  %497 = load i64, i64* %166, align 8
  store %"class.SkStrikeCache::Strike"* null, %"class.SkStrikeCache::Strike"** %165, align 8
  %498 = load %"class.SkStrikeCache::Strike"*, %"class.SkStrikeCache::Strike"** %153, align 8
  store i64 %497, i64* %167, align 8
  %499 = icmp eq %"class.SkStrikeCache::Strike"* %498, null
  br i1 %499, label %523, label %500

500:                                              ; preds = %489
  %501 = getelementptr inbounds %"class.SkStrikeCache::Strike", %"class.SkStrikeCache::Strike"* %498, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %502 = atomicrmw add i32* %501, i32 -1 acq_rel
  %503 = icmp eq i32 %502, 1
  br i1 %503, label %504, label %510

504:                                              ; preds = %500
  %505 = bitcast %"class.SkStrikeCache::Strike"* %498 to %class.SkRefCntBase*
  %506 = bitcast %"class.SkStrikeCache::Strike"* %498 to void (%class.SkRefCntBase*)***
  %507 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %506, align 8
  %508 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %507, i64 2
  %509 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %508, align 8
  call void %509(%class.SkRefCntBase* nonnull %505) #16
  br label %510

510:                                              ; preds = %500, %504
  %511 = load %"class.SkStrikeCache::Strike"*, %"class.SkStrikeCache::Strike"** %165, align 8
  %512 = icmp eq %"class.SkStrikeCache::Strike"* %511, null
  br i1 %512, label %523, label %513

513:                                              ; preds = %510
  %514 = getelementptr inbounds %"class.SkStrikeCache::Strike", %"class.SkStrikeCache::Strike"* %511, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %515 = atomicrmw add i32* %514, i32 -1 acq_rel
  %516 = icmp eq i32 %515, 1
  br i1 %516, label %517, label %523

517:                                              ; preds = %513
  %518 = bitcast %"class.SkStrikeCache::Strike"* %511 to %class.SkRefCntBase*
  %519 = bitcast %"class.SkStrikeCache::Strike"* %511 to void (%class.SkRefCntBase*)***
  %520 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %519, align 8
  %521 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %520, i64 2
  %522 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %521, align 8
  call void %522(%class.SkRefCntBase* nonnull %518) #16
  br label %523

523:                                              ; preds = %489, %510, %513, %517
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %164) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %163) #16
  br label %524

524:                                              ; preds = %471, %523, %479
  %525 = load i64, i64* %39, align 8
  %526 = add i64 %525, 7
  %527 = and i64 %526, -8
  %528 = load i64, i64* %38, align 8
  %529 = icmp ult i64 %528, %527
  %530 = sub i64 %528, %527
  %531 = icmp ult i64 %530, 8
  %532 = or i1 %529, %531
  br i1 %532, label %542, label %533

533:                                              ; preds = %524
  %534 = load i8*, i8** %37, align 8
  %535 = getelementptr inbounds i8, i8* %534, i64 %527
  %536 = add i64 %527, 8
  store i64 %536, i64* %39, align 8
  %537 = icmp eq i8* %535, null
  br i1 %537, label %542, label %538

538:                                              ; preds = %533
  %539 = bitcast i8* %535 to i64*
  %540 = load i64, i64* %539, align 1
  %541 = icmp eq i64 %540, 0
  br i1 %541, label %617, label %551

542:                                              ; preds = %533, %524
  call void (i8*, i32, i8*, ...) @_Z17SkDebugf_FileLinePKciS0_z(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3, i64 0, i64 0), i32 1045, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.4, i64 0, i64 0), i32 1045) #16
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %222) #16
  store i64 %2, i64* %223, align 8
  %543 = load i64, i64* %39, align 8
  store i64 %543, i64* %224, align 8
  store i64 %45, i64* %225, align 8
  store i64 %132, i64* %226, align 8
  store i64 %277, i64* %227, align 8
  store i64 %276, i64* %228, align 8
  %544 = load %"class.SkStrikeClient::DiscardableHandleManager"*, %"class.SkStrikeClient::DiscardableHandleManager"** %162, align 8
  %545 = bitcast %"class.SkStrikeClient::DiscardableHandleManager"* %544 to void (%"class.SkStrikeClient::DiscardableHandleManager"*, %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"*)***
  %546 = load void (%"class.SkStrikeClient::DiscardableHandleManager"*, %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"*)**, void (%"class.SkStrikeClient::DiscardableHandleManager"*, %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"*)*** %545, align 8
  %547 = getelementptr inbounds void (%"class.SkStrikeClient::DiscardableHandleManager"*, %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"*)*, void (%"class.SkStrikeClient::DiscardableHandleManager"*, %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"*)** %546, i64 6
  %548 = load void (%"class.SkStrikeClient::DiscardableHandleManager"*, %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"*)*, void (%"class.SkStrikeClient::DiscardableHandleManager"*, %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"*)** %547, align 8
  call void %548(%"class.SkStrikeClient::DiscardableHandleManager"* %544, %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"* nonnull dereferenceable(48) %25) #16
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %222) #16
  br label %731

549:                                              ; preds = %611
  %550 = icmp eq i64 %613, %540
  br i1 %550, label %614, label %551

551:                                              ; preds = %538, %549
  %552 = phi i64 [ %613, %549 ], [ 0, %538 ]
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %168) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %168, i8 -86, i64 40, i1 false)
  store %class.SkGlyph* null, %class.SkGlyph** %169, align 8
  %553 = call zeroext i1 @_ZN18SkStrikeClientImpl9ReadGlyphER7SkTLazyI7SkGlyphEP12Deserializer(%class.SkTLazy* nonnull dereferenceable(48) %26, %class.Deserializer* nonnull %7)
  br i1 %553, label %561, label %554

554:                                              ; preds = %551
  call void (i8*, i32, i8*, ...) @_Z17SkDebugf_FileLinePKciS0_z(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3, i64 0, i64 0), i32 1048, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.4, i64 0, i64 0), i32 1048) #16
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %170) #16
  store i64 %2, i64* %171, align 8
  %555 = load i64, i64* %39, align 8
  store i64 %555, i64* %172, align 8
  store i64 %45, i64* %173, align 8
  store i64 %132, i64* %174, align 8
  store i64 %540, i64* %175, align 8
  store i64 %276, i64* %176, align 8
  %556 = load %"class.SkStrikeClient::DiscardableHandleManager"*, %"class.SkStrikeClient::DiscardableHandleManager"** %162, align 8
  %557 = bitcast %"class.SkStrikeClient::DiscardableHandleManager"* %556 to void (%"class.SkStrikeClient::DiscardableHandleManager"*, %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"*)***
  %558 = load void (%"class.SkStrikeClient::DiscardableHandleManager"*, %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"*)**, void (%"class.SkStrikeClient::DiscardableHandleManager"*, %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"*)*** %557, align 8
  %559 = getelementptr inbounds void (%"class.SkStrikeClient::DiscardableHandleManager"*, %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"*)*, void (%"class.SkStrikeClient::DiscardableHandleManager"*, %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"*)** %558, i64 6
  %560 = load void (%"class.SkStrikeClient::DiscardableHandleManager"*, %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"*)*, void (%"class.SkStrikeClient::DiscardableHandleManager"*, %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"*)** %559, align 8
  call void %560(%"class.SkStrikeClient::DiscardableHandleManager"* %556, %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"* nonnull dereferenceable(48) %27) #16
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %170) #16
  br label %606

561:                                              ; preds = %551
  %562 = load %class.SkGlyph*, %class.SkGlyph** %169, align 8
  %563 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %562, i64 0, i32 0
  %564 = load i16, i16* %563, align 8
  %565 = icmp eq i16 %564, 0
  br i1 %565, label %598, label %566

566:                                              ; preds = %561
  %567 = call zeroext i1 @_ZN14SkStrikeForGPU11FitsInAtlasERK7SkGlyph(%class.SkGlyph* dereferenceable(40) %562) #16
  br i1 %567, label %568, label %598

568:                                              ; preds = %566
  %569 = load %class.SkGlyph*, %class.SkGlyph** %169, align 8
  %570 = call i64 @_ZNK7SkGlyph9imageSizeEv(%class.SkGlyph* %569) #16
  %571 = load %class.SkGlyph*, %class.SkGlyph** %169, align 8
  %572 = call i64 @_ZNK7SkGlyph15formatAlignmentEv(%class.SkGlyph* %571) #16
  %573 = load i64, i64* %39, align 8
  %574 = add i64 %572, -1
  %575 = add i64 %574, %573
  %576 = sub i64 0, %572
  %577 = and i64 %575, %576
  %578 = load i64, i64* %38, align 8
  %579 = icmp ult i64 %578, %577
  %580 = sub i64 %578, %577
  %581 = icmp ult i64 %580, %570
  %582 = or i1 %579, %581
  br i1 %582, label %591, label %583

583:                                              ; preds = %568
  %584 = load i8*, i8** %37, align 8
  %585 = getelementptr inbounds i8, i8* %584, i64 %577
  %586 = add i64 %577, %570
  store i64 %586, i64* %39, align 8
  %587 = icmp eq i8* %585, null
  br i1 %587, label %591, label %588

588:                                              ; preds = %583
  %589 = load %class.SkGlyph*, %class.SkGlyph** %169, align 8
  %590 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %589, i64 0, i32 4
  store i8* %585, i8** %590, align 8
  br label %598

591:                                              ; preds = %568, %583
  call void (i8*, i32, i8*, ...) @_Z17SkDebugf_FileLinePKciS0_z(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3, i64 0, i64 0), i32 1053, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.4, i64 0, i64 0), i32 1053) #16
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %177) #16
  store i64 %2, i64* %178, align 8
  %592 = load i64, i64* %39, align 8
  store i64 %592, i64* %179, align 8
  store i64 %45, i64* %180, align 8
  store i64 %132, i64* %181, align 8
  store i64 %540, i64* %182, align 8
  store i64 %276, i64* %183, align 8
  %593 = load %"class.SkStrikeClient::DiscardableHandleManager"*, %"class.SkStrikeClient::DiscardableHandleManager"** %162, align 8
  %594 = bitcast %"class.SkStrikeClient::DiscardableHandleManager"* %593 to void (%"class.SkStrikeClient::DiscardableHandleManager"*, %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"*)***
  %595 = load void (%"class.SkStrikeClient::DiscardableHandleManager"*, %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"*)**, void (%"class.SkStrikeClient::DiscardableHandleManager"*, %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"*)*** %594, align 8
  %596 = getelementptr inbounds void (%"class.SkStrikeClient::DiscardableHandleManager"*, %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"*)*, void (%"class.SkStrikeClient::DiscardableHandleManager"*, %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"*)** %595, i64 6
  %597 = load void (%"class.SkStrikeClient::DiscardableHandleManager"*, %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"*)*, void (%"class.SkStrikeClient::DiscardableHandleManager"*, %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"*)** %596, align 8
  call void %597(%"class.SkStrikeClient::DiscardableHandleManager"* %593, %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"* nonnull dereferenceable(48) %28) #16
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %177) #16
  br label %606

598:                                              ; preds = %588, %566, %561
  %599 = load %"class.SkStrikeCache::Strike"*, %"class.SkStrikeCache::Strike"** %153, align 8
  %600 = load %class.SkGlyph*, %class.SkGlyph** %169, align 8
  %601 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %600, i64 0, i32 10, i32 0
  %602 = load i32, i32* %601, align 4
  %603 = getelementptr inbounds %"class.SkStrikeCache::Strike", %"class.SkStrikeCache::Strike"* %599, i64 0, i32 6
  %604 = call { %class.SkGlyph*, i64 } @_ZN13SkScalerCache18mergeGlyphAndImageE15SkPackedGlyphIDRK7SkGlyph(%class.SkScalerCache* %603, i32 %602, %class.SkGlyph* dereferenceable(40) %600) #16
  %605 = extractvalue { %class.SkGlyph*, i64 } %604, 1
  call void @_ZN13SkStrikeCache6Strike11updateDeltaEm(%"class.SkStrikeCache::Strike"* %599, i64 %605) #16
  br label %606

606:                                              ; preds = %591, %598, %554
  %607 = phi i32 [ 0, %598 ], [ 1, %591 ], [ 1, %554 ]
  %608 = load %class.SkGlyph*, %class.SkGlyph** %169, align 8
  %609 = icmp eq %class.SkGlyph* %608, null
  br i1 %609, label %611, label %610

610:                                              ; preds = %606
  store %class.SkGlyph* null, %class.SkGlyph** %169, align 8
  br label %611

611:                                              ; preds = %606, %610
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %168) #16
  %612 = icmp eq i32 %607, 0
  %613 = add nuw i64 %552, 1
  br i1 %612, label %549, label %731

614:                                              ; preds = %549
  %615 = load i64, i64* %39, align 8
  %616 = load i64, i64* %38, align 8
  br label %617

617:                                              ; preds = %614, %538
  %618 = phi i64 [ %616, %614 ], [ %528, %538 ]
  %619 = phi i64 [ %615, %614 ], [ %536, %538 ]
  %620 = add i64 %619, 7
  %621 = and i64 %620, -8
  %622 = icmp ult i64 %618, %621
  %623 = sub i64 %618, %621
  %624 = icmp ult i64 %623, 8
  %625 = or i1 %622, %624
  br i1 %625, label %635, label %626

626:                                              ; preds = %617
  %627 = load i8*, i8** %37, align 8
  %628 = getelementptr inbounds i8, i8* %627, i64 %621
  %629 = add i64 %621, 8
  store i64 %629, i64* %39, align 8
  %630 = icmp eq i8* %628, null
  br i1 %630, label %635, label %631

631:                                              ; preds = %626
  %632 = bitcast i8* %628 to i64*
  %633 = load i64, i64* %632, align 1
  %634 = icmp eq i64 %633, 0
  br i1 %634, label %731, label %644

635:                                              ; preds = %626, %617
  call void (i8*, i32, i8*, ...) @_Z17SkDebugf_FileLinePKciS0_z(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3, i64 0, i64 0), i32 1060, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.4, i64 0, i64 0), i32 1060) #16
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %215) #16
  store i64 %2, i64* %216, align 8
  %636 = load i64, i64* %39, align 8
  store i64 %636, i64* %217, align 8
  store i64 %45, i64* %218, align 8
  store i64 %132, i64* %219, align 8
  store i64 %540, i64* %220, align 8
  store i64 %276, i64* %221, align 8
  %637 = load %"class.SkStrikeClient::DiscardableHandleManager"*, %"class.SkStrikeClient::DiscardableHandleManager"** %162, align 8
  %638 = bitcast %"class.SkStrikeClient::DiscardableHandleManager"* %637 to void (%"class.SkStrikeClient::DiscardableHandleManager"*, %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"*)***
  %639 = load void (%"class.SkStrikeClient::DiscardableHandleManager"*, %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"*)**, void (%"class.SkStrikeClient::DiscardableHandleManager"*, %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"*)*** %638, align 8
  %640 = getelementptr inbounds void (%"class.SkStrikeClient::DiscardableHandleManager"*, %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"*)*, void (%"class.SkStrikeClient::DiscardableHandleManager"*, %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"*)** %639, i64 6
  %641 = load void (%"class.SkStrikeClient::DiscardableHandleManager"*, %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"*)*, void (%"class.SkStrikeClient::DiscardableHandleManager"*, %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"*)** %640, align 8
  call void %641(%"class.SkStrikeClient::DiscardableHandleManager"* %637, %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"* nonnull dereferenceable(48) %29) #16
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %215) #16
  br label %731

642:                                              ; preds = %728
  %643 = icmp eq i64 %730, %633
  br i1 %643, label %731, label %644

644:                                              ; preds = %631, %642
  %645 = phi i64 [ %730, %642 ], [ 0, %631 ]
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %184) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %184, i8 -86, i64 40, i1 false)
  store %class.SkGlyph* null, %class.SkGlyph** %185, align 8
  %646 = call zeroext i1 @_ZN18SkStrikeClientImpl9ReadGlyphER7SkTLazyI7SkGlyphEP12Deserializer(%class.SkTLazy* nonnull dereferenceable(48) %30, %class.Deserializer* nonnull %7)
  br i1 %646, label %654, label %647

647:                                              ; preds = %644
  call void (i8*, i32, i8*, ...) @_Z17SkDebugf_FileLinePKciS0_z(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3, i64 0, i64 0), i32 1063, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.4, i64 0, i64 0), i32 1063) #16
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %186) #16
  store i64 %2, i64* %187, align 8
  %648 = load i64, i64* %39, align 8
  store i64 %648, i64* %188, align 8
  store i64 %45, i64* %189, align 8
  store i64 %132, i64* %190, align 8
  store i64 %540, i64* %191, align 8
  store i64 %633, i64* %192, align 8
  %649 = load %"class.SkStrikeClient::DiscardableHandleManager"*, %"class.SkStrikeClient::DiscardableHandleManager"** %162, align 8
  %650 = bitcast %"class.SkStrikeClient::DiscardableHandleManager"* %649 to void (%"class.SkStrikeClient::DiscardableHandleManager"*, %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"*)***
  %651 = load void (%"class.SkStrikeClient::DiscardableHandleManager"*, %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"*)**, void (%"class.SkStrikeClient::DiscardableHandleManager"*, %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"*)*** %650, align 8
  %652 = getelementptr inbounds void (%"class.SkStrikeClient::DiscardableHandleManager"*, %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"*)*, void (%"class.SkStrikeClient::DiscardableHandleManager"*, %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"*)** %651, i64 6
  %653 = load void (%"class.SkStrikeClient::DiscardableHandleManager"*, %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"*)*, void (%"class.SkStrikeClient::DiscardableHandleManager"*, %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"*)** %652, align 8
  call void %653(%"class.SkStrikeClient::DiscardableHandleManager"* %649, %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"* nonnull dereferenceable(48) %31) #16
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %186) #16
  br label %723

654:                                              ; preds = %644
  %655 = load %"class.SkStrikeCache::Strike"*, %"class.SkStrikeCache::Strike"** %153, align 8
  %656 = load %class.SkGlyph*, %class.SkGlyph** %185, align 8
  %657 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %656, i64 0, i32 10, i32 0
  %658 = load i32, i32* %657, align 4
  %659 = getelementptr inbounds %"class.SkStrikeCache::Strike", %"class.SkStrikeCache::Strike"* %655, i64 0, i32 6
  %660 = call { %class.SkGlyph*, i64 } @_ZN13SkScalerCache18mergeGlyphAndImageE15SkPackedGlyphIDRK7SkGlyph(%class.SkScalerCache* %659, i32 %658, %class.SkGlyph* dereferenceable(40) %656) #16
  %661 = extractvalue { %class.SkGlyph*, i64 } %660, 0
  %662 = extractvalue { %class.SkGlyph*, i64 } %660, 1
  call void @_ZN13SkStrikeCache6Strike11updateDeltaEm(%"class.SkStrikeCache::Strike"* %655, i64 %662) #16
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %193) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %257, i8 -86, i64 16, i1 false)
  call void @_ZN6SkPathC1Ev(%class.SkPath* nonnull %32) #16
  %663 = load i64, i64* %39, align 8
  %664 = add i64 %663, 7
  %665 = and i64 %664, -8
  %666 = load i64, i64* %38, align 8
  %667 = icmp ult i64 %666, %665
  %668 = sub i64 %666, %665
  %669 = icmp ult i64 %668, 8
  %670 = or i1 %667, %669
  br i1 %670, label %676, label %671

671:                                              ; preds = %654
  %672 = load i8*, i8** %37, align 8
  %673 = getelementptr inbounds i8, i8* %672, i64 %665
  %674 = add i64 %665, 8
  store i64 %674, i64* %39, align 8
  %675 = icmp eq i8* %673, null
  br i1 %675, label %676, label %683

676:                                              ; preds = %671, %654
  call void (i8*, i32, i8*, ...) @_Z17SkDebugf_FileLinePKciS0_z(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3, i64 0, i64 0), i32 1070, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.4, i64 0, i64 0), i32 1070) #16
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %208) #16
  store i64 %2, i64* %209, align 8
  %677 = load i64, i64* %39, align 8
  store i64 %677, i64* %210, align 8
  store i64 %45, i64* %211, align 8
  store i64 %132, i64* %212, align 8
  store i64 %540, i64* %213, align 8
  store i64 %633, i64* %214, align 8
  %678 = load %"class.SkStrikeClient::DiscardableHandleManager"*, %"class.SkStrikeClient::DiscardableHandleManager"** %162, align 8
  %679 = bitcast %"class.SkStrikeClient::DiscardableHandleManager"* %678 to void (%"class.SkStrikeClient::DiscardableHandleManager"*, %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"*)***
  %680 = load void (%"class.SkStrikeClient::DiscardableHandleManager"*, %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"*)**, void (%"class.SkStrikeClient::DiscardableHandleManager"*, %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"*)*** %679, align 8
  %681 = getelementptr inbounds void (%"class.SkStrikeClient::DiscardableHandleManager"*, %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"*)*, void (%"class.SkStrikeClient::DiscardableHandleManager"*, %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"*)** %680, i64 6
  %682 = load void (%"class.SkStrikeClient::DiscardableHandleManager"*, %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"*)*, void (%"class.SkStrikeClient::DiscardableHandleManager"*, %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"*)** %681, align 8
  call void %682(%"class.SkStrikeClient::DiscardableHandleManager"* %678, %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"* nonnull dereferenceable(48) %33) #16
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %208) #16
  br label %721

683:                                              ; preds = %671
  %684 = bitcast i8* %673 to i64*
  %685 = load i64, i64* %684, align 1
  %686 = icmp eq i64 %685, 0
  br i1 %686, label %715, label %687

687:                                              ; preds = %683
  %688 = add i64 %665, 11
  %689 = and i64 %688, -8
  %690 = icmp ult i64 %666, %689
  %691 = sub i64 %666, %689
  %692 = icmp ult i64 %691, %685
  %693 = or i1 %690, %692
  br i1 %693, label %698, label %694

694:                                              ; preds = %687
  %695 = getelementptr inbounds i8, i8* %672, i64 %689
  %696 = add i64 %689, %685
  store i64 %696, i64* %39, align 8
  %697 = icmp eq i8* %695, null
  br i1 %697, label %698, label %705

698:                                              ; preds = %687, %694
  call void (i8*, i32, i8*, ...) @_Z17SkDebugf_FileLinePKciS0_z(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3, i64 0, i64 0), i32 1074, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.4, i64 0, i64 0), i32 1074) #16
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %201) #16
  store i64 %2, i64* %202, align 8
  %699 = load i64, i64* %39, align 8
  store i64 %699, i64* %203, align 8
  store i64 %45, i64* %204, align 8
  store i64 %132, i64* %205, align 8
  store i64 %540, i64* %206, align 8
  store i64 %633, i64* %207, align 8
  %700 = load %"class.SkStrikeClient::DiscardableHandleManager"*, %"class.SkStrikeClient::DiscardableHandleManager"** %162, align 8
  %701 = bitcast %"class.SkStrikeClient::DiscardableHandleManager"* %700 to void (%"class.SkStrikeClient::DiscardableHandleManager"*, %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"*)***
  %702 = load void (%"class.SkStrikeClient::DiscardableHandleManager"*, %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"*)**, void (%"class.SkStrikeClient::DiscardableHandleManager"*, %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"*)*** %701, align 8
  %703 = getelementptr inbounds void (%"class.SkStrikeClient::DiscardableHandleManager"*, %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"*)*, void (%"class.SkStrikeClient::DiscardableHandleManager"*, %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"*)** %702, i64 6
  %704 = load void (%"class.SkStrikeClient::DiscardableHandleManager"*, %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"*)*, void (%"class.SkStrikeClient::DiscardableHandleManager"*, %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"*)** %703, align 8
  call void %704(%"class.SkStrikeClient::DiscardableHandleManager"* %700, %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"* nonnull dereferenceable(48) %34) #16
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %201) #16
  br label %721

705:                                              ; preds = %694
  %706 = call i64 @_ZN6SkPath14readFromMemoryEPKvm(%class.SkPath* nonnull %32, i8* nonnull %695, i64 %685) #16
  %707 = icmp eq i64 %706, 0
  br i1 %707, label %708, label %715

708:                                              ; preds = %705
  call void (i8*, i32, i8*, ...) @_Z17SkDebugf_FileLinePKciS0_z(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3, i64 0, i64 0), i32 1075, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.4, i64 0, i64 0), i32 1075) #16
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %194) #16
  store i64 %2, i64* %195, align 8
  %709 = load i64, i64* %39, align 8
  store i64 %709, i64* %196, align 8
  store i64 %45, i64* %197, align 8
  store i64 %132, i64* %198, align 8
  store i64 %540, i64* %199, align 8
  store i64 %633, i64* %200, align 8
  %710 = load %"class.SkStrikeClient::DiscardableHandleManager"*, %"class.SkStrikeClient::DiscardableHandleManager"** %162, align 8
  %711 = bitcast %"class.SkStrikeClient::DiscardableHandleManager"* %710 to void (%"class.SkStrikeClient::DiscardableHandleManager"*, %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"*)***
  %712 = load void (%"class.SkStrikeClient::DiscardableHandleManager"*, %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"*)**, void (%"class.SkStrikeClient::DiscardableHandleManager"*, %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"*)*** %711, align 8
  %713 = getelementptr inbounds void (%"class.SkStrikeClient::DiscardableHandleManager"*, %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"*)*, void (%"class.SkStrikeClient::DiscardableHandleManager"*, %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"*)** %712, i64 6
  %714 = load void (%"class.SkStrikeClient::DiscardableHandleManager"*, %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"*)*, void (%"class.SkStrikeClient::DiscardableHandleManager"*, %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"*)** %713, align 8
  call void %714(%"class.SkStrikeClient::DiscardableHandleManager"* %710, %"struct.SkStrikeClient::DiscardableHandleManager::ReadFailureData"* nonnull dereferenceable(48) %35) #16
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %194) #16
  br label %721

715:                                              ; preds = %705, %683
  %716 = phi %class.SkPath* [ null, %683 ], [ %32, %705 ]
  %717 = load %"class.SkStrikeCache::Strike"*, %"class.SkStrikeCache::Strike"** %153, align 8
  %718 = getelementptr inbounds %"class.SkStrikeCache::Strike", %"class.SkStrikeCache::Strike"* %717, i64 0, i32 6
  %719 = call { %class.SkPath*, i64 } @_ZN13SkScalerCache9mergePathEP7SkGlyphPK6SkPath(%class.SkScalerCache* %718, %class.SkGlyph* %661, %class.SkPath* %716) #16
  %720 = extractvalue { %class.SkPath*, i64 } %719, 1
  call void @_ZN13SkStrikeCache6Strike11updateDeltaEm(%"class.SkStrikeCache::Strike"* %717, i64 %720) #16
  br label %721

721:                                              ; preds = %698, %708, %715, %676
  %722 = phi i32 [ 0, %715 ], [ 1, %676 ], [ 1, %708 ], [ 1, %698 ]
  call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %32) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %193) #16
  br label %723

723:                                              ; preds = %721, %647
  %724 = phi i32 [ %722, %721 ], [ 1, %647 ]
  %725 = load %class.SkGlyph*, %class.SkGlyph** %185, align 8
  %726 = icmp eq %class.SkGlyph* %725, null
  br i1 %726, label %728, label %727

727:                                              ; preds = %723
  store %class.SkGlyph* null, %class.SkGlyph** %185, align 8
  br label %728

728:                                              ; preds = %723, %727
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %184) #16
  %729 = icmp eq i32 %724, 0
  %730 = add nuw i64 %645, 1
  br i1 %729, label %642, label %731

731:                                              ; preds = %611, %728, %642, %631, %635, %542, %472
  %732 = phi i64 [ %540, %635 ], [ %277, %542 ], [ %277, %472 ], [ %540, %631 ], [ %540, %642 ], [ %540, %728 ], [ %540, %611 ]
  %733 = phi i64 [ %276, %635 ], [ %276, %542 ], [ %276, %472 ], [ 0, %631 ], [ %633, %642 ], [ %633, %728 ], [ %276, %611 ]
  %734 = phi i32 [ 1, %635 ], [ 1, %542 ], [ 1, %472 ], [ 0, %631 ], [ 1, %728 ], [ 0, %642 ], [ 1, %611 ]
  %735 = load %"class.SkStrikeCache::Strike"*, %"class.SkStrikeCache::Strike"** %153, align 8
  %736 = icmp eq %"class.SkStrikeCache::Strike"* %735, null
  br i1 %736, label %747, label %737

737:                                              ; preds = %731
  %738 = getelementptr inbounds %"class.SkStrikeCache::Strike", %"class.SkStrikeCache::Strike"* %735, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %739 = atomicrmw add i32* %738, i32 -1 acq_rel
  %740 = icmp eq i32 %739, 1
  br i1 %740, label %741, label %747

741:                                              ; preds = %737
  %742 = bitcast %"class.SkStrikeCache::Strike"* %735 to %class.SkRefCntBase*
  %743 = bitcast %"class.SkStrikeCache::Strike"* %735 to void (%class.SkRefCntBase*)***
  %744 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %743, align 8
  %745 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %744, i64 2
  %746 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %745, align 8
  call void %746(%class.SkRefCntBase* nonnull %742) #16
  br label %747

747:                                              ; preds = %731, %737, %741
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %152) #16
  call void @_ZN16SkAutoDescriptorD1Ev(%class.SkAutoDescriptor* nonnull %20) #16
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %141) #16
  br label %748

748:                                              ; preds = %440, %747, %390
  %749 = phi i64 [ %277, %440 ], [ %732, %747 ], [ %277, %390 ]
  %750 = phi i64 [ %276, %440 ], [ %733, %747 ], [ %276, %390 ]
  %751 = phi i32 [ 1, %440 ], [ %734, %747 ], [ 1, %390 ]
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %138) #16
  br label %752

752:                                              ; preds = %352, %748, %368
  %753 = phi i64 [ %277, %352 ], [ %749, %748 ], [ %277, %368 ]
  %754 = phi i64 [ %276, %352 ], [ %750, %748 ], [ %276, %368 ]
  %755 = phi i32 [ 1, %352 ], [ %751, %748 ], [ 1, %368 ]
  call void @_ZN16SkAutoDescriptorD1Ev(%class.SkAutoDescriptor* nonnull %14) #16
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %135) #16
  %756 = icmp eq i32 %755, 0
  %757 = add nuw i64 %275, 1
  br i1 %756, label %272, label %758

758:                                              ; preds = %752, %272, %130, %291, %101, %258, %55
  %759 = phi i1 [ false, %258 ], [ false, %101 ], [ false, %55 ], [ false, %291 ], [ true, %130 ], [ true, %272 ], [ false, %752 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %36) #16
  ret i1 %759
}

declare void @_Z17SkDebugf_FileLinePKciS0_z(i8*, i32, i8*, ...) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18SkStrikeClientImpl11addTypefaceERK12WireTypeface(%class.sk_sp.1* noalias nocapture sret, %class.SkStrikeClientImpl*, %struct.WireTypeface* dereferenceable(16)) local_unnamed_addr #1 align 2 {
  %4 = alloca %"struct.SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair", align 8
  %5 = getelementptr inbounds %struct.WireTypeface, %struct.WireTypeface* %2, i64 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = lshr i32 %6, 16
  %8 = xor i32 %7, %6
  %9 = mul i32 %8, -2048144789
  %10 = lshr i32 %9, 13
  %11 = xor i32 %10, %9
  %12 = mul i32 %11, -1028477387
  %13 = lshr i32 %12, 16
  %14 = xor i32 %13, %12
  %15 = icmp eq i32 %14, 0
  %16 = select i1 %15, i32 1, i32 %14
  %17 = getelementptr inbounds %class.SkStrikeClientImpl, %class.SkStrikeClientImpl* %1, i64 0, i32 0, i32 0, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = icmp sgt i32 %18, 0
  br i1 %19, label %20, label %60

20:                                               ; preds = %3
  %21 = add nsw i32 %18, -1
  %22 = and i32 %16, %21
  %23 = getelementptr inbounds %class.SkStrikeClientImpl, %class.SkStrikeClientImpl* %1, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %24 = load %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair>::Slot"*, %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair>::Slot"** %23, align 8
  br label %25

25:                                               ; preds = %39, %20
  %26 = phi i32 [ 0, %20 ], [ %44, %39 ]
  %27 = phi i32 [ %22, %20 ], [ %43, %39 ]
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair>::Slot"* %24, i64 %28, i32 1
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %60, label %32

32:                                               ; preds = %25
  %33 = icmp eq i32 %16, %30
  br i1 %33, label %34, label %39

34:                                               ; preds = %32
  %35 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair>::Slot"* %24, i64 %28, i32 0
  %36 = getelementptr inbounds %"struct.SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair", %"struct.SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair"* %35, i64 0, i32 0, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = icmp eq i32 %6, %37
  br i1 %38, label %46, label %39

39:                                               ; preds = %34, %32
  %40 = add nsw i32 %27, -1
  %41 = icmp slt i32 %27, 1
  %42 = select i1 %41, i32 %18, i32 0
  %43 = add nsw i32 %40, %42
  %44 = add nuw nsw i32 %26, 1
  %45 = icmp eq i32 %44, %18
  br i1 %45, label %60, label %25

46:                                               ; preds = %34
  %47 = icmp eq %"struct.SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair"* %35, null
  %48 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair>::Slot"* %24, i64 %28, i32 0, i32 0, i32 1
  %49 = icmp eq %class.sk_sp.1* %48, null
  %50 = or i1 %47, %49
  br i1 %50, label %60, label %51

51:                                               ; preds = %46
  %52 = getelementptr inbounds %class.sk_sp.1, %class.sk_sp.1* %0, i64 0, i32 0
  %53 = getelementptr inbounds %class.sk_sp.1, %class.sk_sp.1* %48, i64 0, i32 0
  %54 = load %class.SkTypeface*, %class.SkTypeface** %53, align 8
  %55 = icmp eq %class.SkTypeface* %54, null
  br i1 %55, label %59, label %56

56:                                               ; preds = %51
  %57 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %54, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = atomicrmw add i32* %57, i32 1 monotonic
  br label %59

59:                                               ; preds = %51, %56
  store %class.SkTypeface* %54, %class.SkTypeface** %52, align 8
  br label %121

60:                                               ; preds = %25, %39, %3, %46
  %61 = getelementptr inbounds %struct.WireTypeface, %struct.WireTypeface* %2, i64 0, i32 1
  %62 = getelementptr inbounds %struct.WireTypeface, %struct.WireTypeface* %2, i64 0, i32 2
  %63 = getelementptr inbounds %class.SkStrikeClientImpl, %class.SkStrikeClientImpl* %1, i64 0, i32 3
  %64 = tail call i8* @_Znwm(i64 64) #18, !noalias !67
  %65 = load i32, i32* %61, align 4, !noalias !67
  %66 = getelementptr inbounds %class.SkStrikeClientImpl, %class.SkStrikeClientImpl* %1, i64 0, i32 1, i32 0
  %67 = load %"class.SkStrikeClient::DiscardableHandleManager"*, %"class.SkStrikeClient::DiscardableHandleManager"** %66, align 8, !noalias !67
  %68 = icmp eq %"class.SkStrikeClient::DiscardableHandleManager"* %67, null
  br i1 %68, label %72, label %69

69:                                               ; preds = %60
  %70 = getelementptr inbounds %"class.SkStrikeClient::DiscardableHandleManager", %"class.SkStrikeClient::DiscardableHandleManager"* %67, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = atomicrmw add i32* %70, i32 1 monotonic, !noalias !67
  br label %72

72:                                               ; preds = %60, %69
  %73 = ptrtoint %"class.SkStrikeClient::DiscardableHandleManager"* %67 to i64
  %74 = load i8, i8* %63, align 1, !range !2, !noalias !67
  %75 = bitcast i8* %64 to %class.SkTypeface*
  tail call void @_ZN10SkTypefaceC2ERK11SkFontStyleb(%class.SkTypeface* nonnull %75, %class.SkFontStyle* dereferenceable(4) %62, i1 zeroext false) #16, !noalias !67
  %76 = bitcast i8* %64 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [28 x i8*] }, { [28 x i8*] }* @_ZTV15SkTypefaceProxy, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %76, align 8, !noalias !67
  %77 = getelementptr inbounds i8, i8* %64, i64 44
  %78 = bitcast i8* %77 to i32*
  store i32 %6, i32* %78, align 4, !noalias !67
  %79 = getelementptr inbounds i8, i8* %64, i64 48
  %80 = bitcast i8* %79 to i32*
  store i32 %65, i32* %80, align 8, !noalias !67
  %81 = getelementptr inbounds i8, i8* %64, i64 52
  store i8 %74, i8* %81, align 4, !noalias !67
  %82 = getelementptr inbounds i8, i8* %64, i64 56
  %83 = bitcast i8* %82 to i64*
  store i64 %73, i64* %83, align 8, !noalias !67
  %84 = ptrtoint i8* %64 to i64
  %85 = load i32, i32* %5, align 4
  %86 = getelementptr inbounds i8, i8* %64, i64 8
  %87 = bitcast i8* %86 to i32*
  %88 = atomicrmw add i32* %87, i32 1 monotonic
  %89 = bitcast %"struct.SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %89)
  %90 = getelementptr inbounds %class.SkStrikeClientImpl, %class.SkStrikeClientImpl* %1, i64 0, i32 0, i32 0
  %91 = getelementptr inbounds %"struct.SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair", %"struct.SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair"* %4, i64 0, i32 0, i32 0
  store i32 %85, i32* %91, align 8
  %92 = getelementptr inbounds %"struct.SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair", %"struct.SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair"* %4, i64 0, i32 0, i32 1
  %93 = bitcast %class.sk_sp.1* %92 to i64*
  store i64 %84, i64* %93, align 8
  %94 = getelementptr inbounds %class.SkStrikeClientImpl, %class.SkStrikeClientImpl* %1, i64 0, i32 0, i32 0, i32 0
  %95 = load i32, i32* %94, align 8
  %96 = shl nsw i32 %95, 2
  %97 = load i32, i32* %17, align 4
  %98 = mul nsw i32 %97, 3
  %99 = icmp slt i32 %96, %98
  br i1 %99, label %104, label %100

100:                                              ; preds = %72
  %101 = icmp sgt i32 %97, 0
  %102 = shl nsw i32 %97, 1
  %103 = select i1 %101, i32 %102, i32 4
  tail call void @_ZN12SkTHashTableIN10SkTHashMapIj5sk_spI10SkTypefaceE10SkGoodHashE4PairEjS6_E6resizeEi(%class.SkTHashTable.204* %90, i32 %103) #16
  br label %104

104:                                              ; preds = %100, %72
  %105 = call %"struct.SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair"* @_ZN12SkTHashTableIN10SkTHashMapIj5sk_spI10SkTypefaceE10SkGoodHashE4PairEjS6_E12uncheckedSetEOS6_(%class.SkTHashTable.204* %90, %"struct.SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair"* nonnull dereferenceable(16) %4) #16
  %106 = getelementptr inbounds %"struct.SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair", %"struct.SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair"* %4, i64 0, i32 0, i32 1, i32 0
  %107 = load %class.SkTypeface*, %class.SkTypeface** %106, align 8
  %108 = icmp eq %class.SkTypeface* %107, null
  br i1 %108, label %119, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %107, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %111 = atomicrmw add i32* %110, i32 -1 acq_rel
  %112 = icmp eq i32 %111, 1
  br i1 %112, label %113, label %119

113:                                              ; preds = %109
  %114 = bitcast %class.SkTypeface* %107 to %class.SkRefCntBase*
  %115 = bitcast %class.SkTypeface* %107 to void (%class.SkRefCntBase*)***
  %116 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %115, align 8
  %117 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %116, i64 2
  %118 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %117, align 8
  call void %118(%class.SkRefCntBase* nonnull %114) #16
  br label %119

119:                                              ; preds = %104, %109, %113
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %89)
  %120 = bitcast %class.sk_sp.1* %0 to i64*
  store i64 %84, i64* %120, align 8
  br label %121

121:                                              ; preds = %119, %59
  ret void
}

declare void @_ZN13SkStrikeCache10findStrikeERK12SkDescriptor(%class.sk_sp.243* sret, %class.SkStrikeCache*, %class.SkDescriptor* dereferenceable(12)) local_unnamed_addr #4

declare void @_ZN13SkStrikeCache12createStrikeERK12SkDescriptorNSt3__110unique_ptrI15SkScalerContextNS3_14default_deleteIS5_EEEEP13SkFontMetricsNS4_I14SkStrikePinnerNS6_ISB_EEEE(%class.sk_sp.243* sret, %class.SkStrikeCache*, %class.SkDescriptor* dereferenceable(12), %class.SkScalerContext*, %struct.SkFontMetrics*, %class.SkStrikePinner*) local_unnamed_addr #4

declare void @_ZN6SkPathC1Ev(%class.SkPath*) unnamed_addr #4

declare i64 @_ZN6SkPath14readFromMemoryEPKvm(%class.SkPath*, i8*, i64) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN6SkPathD1Ev(%class.SkPath*) unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18SkStrikeClientImpl19deserializeTypefaceEPKvm(%class.sk_sp.1* noalias nocapture sret, %class.SkStrikeClientImpl*, i8* nocapture readonly, i64) local_unnamed_addr #1 align 2 {
  %5 = alloca %struct.WireTypeface, align 4
  %6 = bitcast %struct.WireTypeface* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #16
  %7 = getelementptr inbounds %struct.WireTypeface, %struct.WireTypeface* %5, i64 0, i32 0
  %8 = getelementptr inbounds %struct.WireTypeface, %struct.WireTypeface* %5, i64 0, i32 1
  %9 = getelementptr inbounds %struct.WireTypeface, %struct.WireTypeface* %5, i64 0, i32 2, i32 0
  %10 = getelementptr inbounds %struct.WireTypeface, %struct.WireTypeface* %5, i64 0, i32 3
  %11 = bitcast %struct.WireTypeface* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %11, i8 -86, i64 16, i1 false)
  store i32 0, i32* %7, align 4
  store i32 0, i32* %8, align 4
  store i32 328080, i32* %9, align 4
  store i8 0, i8* %10, align 4
  %12 = icmp eq i64 %3, 16
  br i1 %12, label %15, label %13

13:                                               ; preds = %4
  %14 = getelementptr inbounds %class.sk_sp.1, %class.sk_sp.1* %0, i64 0, i32 0
  store %class.SkTypeface* null, %class.SkTypeface** %14, align 8
  br label %16

15:                                               ; preds = %4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %6, i8* align 1 %2, i64 16, i1 false)
  call void @_ZN18SkStrikeClientImpl11addTypefaceERK12WireTypeface(%class.sk_sp.1* sret %0, %class.SkStrikeClientImpl* %1, %struct.WireTypeface* nonnull dereferenceable(16) %5)
  br label %16

16:                                               ; preds = %15, %13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14SkStrikeClientC2E5sk_spINS_24DiscardableHandleManagerEEbP13SkStrikeCache(%class.SkStrikeClient* nocapture, %class.sk_sp.212* nocapture, i1 zeroext, %class.SkStrikeCache*) unnamed_addr #1 align 2 {
  %5 = tail call i8* @_Znwm(i64 40) #18
  %6 = getelementptr inbounds %class.sk_sp.212, %class.sk_sp.212* %1, i64 0, i32 0
  %7 = bitcast %class.sk_sp.212* %1 to i64*
  %8 = load i64, i64* %7, align 8
  store %"class.SkStrikeClient::DiscardableHandleManager"* null, %"class.SkStrikeClient::DiscardableHandleManager"** %6, align 8
  %9 = zext i1 %2 to i8
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 16, i1 false) #16
  %10 = getelementptr inbounds i8, i8* %5, i64 16
  %11 = bitcast i8* %10 to i64*
  store i64 %8, i64* %11, align 8
  %12 = getelementptr inbounds i8, i8* %5, i64 24
  %13 = bitcast i8* %12 to %class.SkStrikeCache**
  %14 = icmp eq %class.SkStrikeCache* %3, null
  br i1 %14, label %15, label %17

15:                                               ; preds = %4
  %16 = tail call %class.SkStrikeCache* @_ZN13SkStrikeCache17GlobalStrikeCacheEv() #16
  br label %17

17:                                               ; preds = %15, %4
  %18 = phi %class.SkStrikeCache* [ %16, %15 ], [ %3, %4 ]
  store %class.SkStrikeCache* %18, %class.SkStrikeCache** %13, align 8
  %19 = getelementptr inbounds i8, i8* %5, i64 32
  store i8 %9, i8* %19, align 8
  %20 = ptrtoint i8* %5 to i64
  %21 = bitcast %class.SkStrikeClient* %0 to i64*
  store i64 %20, i64* %21, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14SkStrikeClientD2Ev(%class.SkStrikeClient* nocapture) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %class.SkStrikeClient, %class.SkStrikeClient* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = load %class.SkStrikeClientImpl*, %class.SkStrikeClientImpl** %2, align 8
  store %class.SkStrikeClientImpl* null, %class.SkStrikeClientImpl** %2, align 8
  %4 = icmp eq %class.SkStrikeClientImpl* %3, null
  br i1 %4, label %52, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.SkStrikeClientImpl, %class.SkStrikeClientImpl* %3, i64 0, i32 1, i32 0
  %7 = load %"class.SkStrikeClient::DiscardableHandleManager"*, %"class.SkStrikeClient::DiscardableHandleManager"** %6, align 8
  %8 = icmp eq %"class.SkStrikeClient::DiscardableHandleManager"* %7, null
  br i1 %8, label %19, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.SkStrikeClient::DiscardableHandleManager", %"class.SkStrikeClient::DiscardableHandleManager"* %7, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = atomicrmw add i32* %10, i32 -1 acq_rel
  %12 = icmp eq i32 %11, 1
  br i1 %12, label %13, label %19

13:                                               ; preds = %9
  %14 = bitcast %"class.SkStrikeClient::DiscardableHandleManager"* %7 to %class.SkRefCntBase*
  %15 = bitcast %"class.SkStrikeClient::DiscardableHandleManager"* %7 to void (%class.SkRefCntBase*)***
  %16 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %15, align 8
  %17 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %16, i64 2
  %18 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %17, align 8
  tail call void %18(%class.SkRefCntBase* nonnull %14) #16
  br label %19

19:                                               ; preds = %13, %9, %5
  %20 = getelementptr inbounds %class.SkStrikeClientImpl, %class.SkStrikeClientImpl* %3, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %21 = load %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair>::Slot"*, %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair>::Slot"** %20, align 8
  store %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair>::Slot"* null, %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair>::Slot"** %20, align 8
  %22 = icmp eq %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair>::Slot"* %21, null
  br i1 %22, label %50, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair>::Slot"* %21, i64 -1, i32 1
  %25 = bitcast i32* %24 to i8*
  %26 = bitcast i32* %24 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %49, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair>::Slot"* %21, i64 %27
  br label %31

31:                                               ; preds = %47, %29
  %32 = phi %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair>::Slot"* [ %33, %47 ], [ %30, %29 ]
  %33 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair>::Slot"* %32, i64 -1
  %34 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair>::Slot"* %32, i64 -1, i32 0, i32 0, i32 1, i32 0
  %35 = load %class.SkTypeface*, %class.SkTypeface** %34, align 8
  %36 = icmp eq %class.SkTypeface* %35, null
  br i1 %36, label %47, label %37

37:                                               ; preds = %31
  %38 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %35, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = atomicrmw add i32* %38, i32 -1 acq_rel
  %40 = icmp eq i32 %39, 1
  br i1 %40, label %41, label %47

41:                                               ; preds = %37
  %42 = bitcast %class.SkTypeface* %35 to %class.SkRefCntBase*
  %43 = bitcast %class.SkTypeface* %35 to void (%class.SkRefCntBase*)***
  %44 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %43, align 8
  %45 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %44, i64 2
  %46 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %45, align 8
  tail call void %46(%class.SkRefCntBase* nonnull %42) #16
  br label %47

47:                                               ; preds = %41, %37, %31
  %48 = icmp eq %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair>::Slot"* %33, %21
  br i1 %48, label %49, label %31

49:                                               ; preds = %47, %23
  tail call void @_ZdaPv(i8* %25) #18
  br label %50

50:                                               ; preds = %49, %19
  %51 = bitcast %class.SkStrikeClientImpl* %3 to i8*
  tail call void @_ZdlPv(i8* %51) #18
  br label %52

52:                                               ; preds = %1, %50
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN14SkStrikeClient14readStrikeDataEPVKvm(%class.SkStrikeClient* nocapture readonly, i8*, i64) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %class.SkStrikeClient, %class.SkStrikeClient* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %class.SkStrikeClientImpl*, %class.SkStrikeClientImpl** %4, align 8
  %6 = tail call zeroext i1 @_ZN18SkStrikeClientImpl14readStrikeDataEPVKvm(%class.SkStrikeClientImpl* %5, i8* %1, i64 %2)
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14SkStrikeClient19deserializeTypefaceEPKvm(%class.sk_sp.1* noalias nocapture sret, %class.SkStrikeClient* nocapture readonly, i8* nocapture readonly, i64) local_unnamed_addr #1 align 2 {
  %5 = alloca %struct.WireTypeface, align 4
  %6 = getelementptr inbounds %class.SkStrikeClient, %class.SkStrikeClient* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load %class.SkStrikeClientImpl*, %class.SkStrikeClientImpl** %6, align 8
  %8 = bitcast %struct.WireTypeface* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #16, !noalias !70
  %9 = getelementptr inbounds %struct.WireTypeface, %struct.WireTypeface* %5, i64 0, i32 0
  %10 = getelementptr inbounds %struct.WireTypeface, %struct.WireTypeface* %5, i64 0, i32 1
  %11 = getelementptr inbounds %struct.WireTypeface, %struct.WireTypeface* %5, i64 0, i32 2, i32 0
  %12 = getelementptr inbounds %struct.WireTypeface, %struct.WireTypeface* %5, i64 0, i32 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %8, i8 -86, i64 16, i1 false) #16, !noalias !70
  store i32 0, i32* %9, align 4, !noalias !70
  store i32 0, i32* %10, align 4, !noalias !70
  store i32 328080, i32* %11, align 4, !noalias !70
  store i8 0, i8* %12, align 4, !noalias !70
  %13 = icmp eq i64 %3, 16
  br i1 %13, label %16, label %14

14:                                               ; preds = %4
  %15 = getelementptr inbounds %class.sk_sp.1, %class.sk_sp.1* %0, i64 0, i32 0
  store %class.SkTypeface* null, %class.SkTypeface** %15, align 8, !alias.scope !70
  br label %17

16:                                               ; preds = %4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %8, i8* align 1 %2, i64 16, i1 false) #16, !noalias !70
  call void @_ZN18SkStrikeClientImpl11addTypefaceERK12WireTypeface(%class.sk_sp.1* sret %0, %class.SkStrikeClientImpl* %7, %struct.WireTypeface* nonnull dereferenceable(16) %5) #16
  br label %17

17:                                               ; preds = %14, %16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #16, !noalias !70
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12RemoteStrikeD2Ev(%class.RemoteStrike*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %class.RemoteStrike, %class.RemoteStrike* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV12RemoteStrike, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.RemoteStrike, %class.RemoteStrike* %0, i64 0, i32 13
  %4 = bitcast %class.SkArenaAllocWithReset* %3 to %class.SkArenaAlloc*
  tail call void @_ZN12SkArenaAllocD2Ev(%class.SkArenaAlloc* %4) #16
  %5 = getelementptr inbounds %class.RemoteStrike, %class.RemoteStrike* %0, i64 0, i32 12, i32 0, i32 0
  %6 = load %class.SkGlyph*, %class.SkGlyph** %5, align 8
  %7 = icmp eq %class.SkGlyph* %6, null
  br i1 %7, label %13, label %8

8:                                                ; preds = %1
  %9 = ptrtoint %class.SkGlyph* %6 to i64
  %10 = getelementptr inbounds %class.RemoteStrike, %class.RemoteStrike* %0, i64 0, i32 12, i32 0, i32 1
  %11 = bitcast %class.SkGlyph** %10 to i64*
  store i64 %9, i64* %11, align 8
  %12 = bitcast %class.SkGlyph* %6 to i8*
  tail call void @_ZdlPv(i8* %12) #18
  br label %13

13:                                               ; preds = %1, %8
  %14 = getelementptr inbounds %class.RemoteStrike, %class.RemoteStrike* %0, i64 0, i32 11, i32 0, i32 0
  %15 = load %class.SkGlyph*, %class.SkGlyph** %14, align 8
  %16 = icmp eq %class.SkGlyph* %15, null
  br i1 %16, label %22, label %17

17:                                               ; preds = %13
  %18 = ptrtoint %class.SkGlyph* %15 to i64
  %19 = getelementptr inbounds %class.RemoteStrike, %class.RemoteStrike* %0, i64 0, i32 11, i32 0, i32 1
  %20 = bitcast %class.SkGlyph** %19 to i64*
  store i64 %18, i64* %20, align 8
  %21 = bitcast %class.SkGlyph* %15 to i8*
  tail call void @_ZdlPv(i8* %21) #18
  br label %22

22:                                               ; preds = %13, %17
  %23 = getelementptr inbounds %class.RemoteStrike, %class.RemoteStrike* %0, i64 0, i32 10, i32 2, i32 0, i32 0, i32 0, i32 0
  %24 = load %"struct.SkTHashTable<RemoteStrike::PathSummary, unsigned short, RemoteStrike::PathSummaryTraits>::Slot"*, %"struct.SkTHashTable<RemoteStrike::PathSummary, unsigned short, RemoteStrike::PathSummaryTraits>::Slot"** %23, align 8
  store %"struct.SkTHashTable<RemoteStrike::PathSummary, unsigned short, RemoteStrike::PathSummaryTraits>::Slot"* null, %"struct.SkTHashTable<RemoteStrike::PathSummary, unsigned short, RemoteStrike::PathSummaryTraits>::Slot"** %23, align 8
  %25 = icmp eq %"struct.SkTHashTable<RemoteStrike::PathSummary, unsigned short, RemoteStrike::PathSummaryTraits>::Slot"* %24, null
  br i1 %25, label %28, label %26

26:                                               ; preds = %22
  %27 = bitcast %"struct.SkTHashTable<RemoteStrike::PathSummary, unsigned short, RemoteStrike::PathSummaryTraits>::Slot"* %24 to i8*
  tail call void @_ZdaPv(i8* %27) #18
  br label %28

28:                                               ; preds = %22, %26
  %29 = getelementptr inbounds %class.RemoteStrike, %class.RemoteStrike* %0, i64 0, i32 9, i32 2, i32 0, i32 0, i32 0, i32 0
  %30 = load %"struct.SkTHashTable<RemoteStrike::MaskSummary, SkPackedGlyphID, RemoteStrike::MaskSummaryTraits>::Slot"*, %"struct.SkTHashTable<RemoteStrike::MaskSummary, SkPackedGlyphID, RemoteStrike::MaskSummaryTraits>::Slot"** %29, align 8
  store %"struct.SkTHashTable<RemoteStrike::MaskSummary, SkPackedGlyphID, RemoteStrike::MaskSummaryTraits>::Slot"* null, %"struct.SkTHashTable<RemoteStrike::MaskSummary, SkPackedGlyphID, RemoteStrike::MaskSummaryTraits>::Slot"** %29, align 8
  %31 = icmp eq %"struct.SkTHashTable<RemoteStrike::MaskSummary, SkPackedGlyphID, RemoteStrike::MaskSummaryTraits>::Slot"* %30, null
  br i1 %31, label %34, label %32

32:                                               ; preds = %28
  %33 = bitcast %"struct.SkTHashTable<RemoteStrike::MaskSummary, SkPackedGlyphID, RemoteStrike::MaskSummaryTraits>::Slot"* %30 to i8*
  tail call void @_ZdaPv(i8* %33) #18
  br label %34

34:                                               ; preds = %28, %32
  %35 = getelementptr inbounds %class.RemoteStrike, %class.RemoteStrike* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %36 = load %class.SkScalerContext*, %class.SkScalerContext** %35, align 8
  store %class.SkScalerContext* null, %class.SkScalerContext** %35, align 8
  %37 = icmp eq %class.SkScalerContext* %36, null
  br i1 %37, label %43, label %38

38:                                               ; preds = %34
  %39 = bitcast %class.SkScalerContext* %36 to void (%class.SkScalerContext*)***
  %40 = load void (%class.SkScalerContext*)**, void (%class.SkScalerContext*)*** %39, align 8
  %41 = getelementptr inbounds void (%class.SkScalerContext*)*, void (%class.SkScalerContext*)** %40, i64 1
  %42 = load void (%class.SkScalerContext*)*, void (%class.SkScalerContext*)** %41, align 8
  tail call void %42(%class.SkScalerContext* nonnull %36) #16
  br label %43

43:                                               ; preds = %34, %38
  %44 = getelementptr inbounds %class.RemoteStrike, %class.RemoteStrike* %0, i64 0, i32 1
  tail call void @_ZN16SkAutoDescriptorD1Ev(%class.SkAutoDescriptor* %44) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12RemoteStrikeD0Ev(%class.RemoteStrike*) unnamed_addr #1 comdat align 2 {
  tail call void @_ZN12RemoteStrikeD2Ev(%class.RemoteStrike* %0) #16
  %2 = bitcast %class.RemoteStrike* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %struct.SkGlyphPositionRoundingSpec* @_ZNK12RemoteStrike12roundingSpecEv(%class.RemoteStrike*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %class.RemoteStrike, %class.RemoteStrike* %0, i64 0, i32 3
  ret %struct.SkGlyphPositionRoundingSpec* %2
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12RemoteStrike18onAboutToExitScopeEv(%class.RemoteStrike*) unnamed_addr #1 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN18SkStrikeServerImplD2Ev(%class.SkStrikeServerImpl*) unnamed_addr #10 comdat align 2 {
  %2 = getelementptr inbounds %class.SkStrikeServerImpl, %class.SkStrikeServerImpl* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV18SkStrikeServerImpl, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkStrikeServerImpl, %class.SkStrikeServerImpl* %0, i64 0, i32 7, i32 0, i32 0
  %4 = load %struct.WireTypeface*, %struct.WireTypeface** %3, align 8
  %5 = icmp eq %struct.WireTypeface* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %struct.WireTypeface* %4 to i64
  %8 = getelementptr inbounds %class.SkStrikeServerImpl, %class.SkStrikeServerImpl* %0, i64 0, i32 7, i32 0, i32 1
  %9 = bitcast %struct.WireTypeface** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast %struct.WireTypeface* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #18
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %class.SkStrikeServerImpl, %class.SkStrikeServerImpl* %0, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %13 = load %"struct.SkTHashTable<RemoteStrike *, RemoteStrike *, SkTHashSet<RemoteStrike *, SkGoodHash>::Traits>::Slot"*, %"struct.SkTHashTable<RemoteStrike *, RemoteStrike *, SkTHashSet<RemoteStrike *, SkGoodHash>::Traits>::Slot"** %12, align 8
  store %"struct.SkTHashTable<RemoteStrike *, RemoteStrike *, SkTHashSet<RemoteStrike *, SkGoodHash>::Traits>::Slot"* null, %"struct.SkTHashTable<RemoteStrike *, RemoteStrike *, SkTHashSet<RemoteStrike *, SkGoodHash>::Traits>::Slot"** %12, align 8
  %14 = icmp eq %"struct.SkTHashTable<RemoteStrike *, RemoteStrike *, SkTHashSet<RemoteStrike *, SkGoodHash>::Traits>::Slot"* %13, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %11
  %16 = bitcast %"struct.SkTHashTable<RemoteStrike *, RemoteStrike *, SkTHashSet<RemoteStrike *, SkGoodHash>::Traits>::Slot"* %13 to i8*
  tail call void @_ZdaPv(i8* %16) #18
  br label %17

17:                                               ; preds = %11, %15
  %18 = getelementptr inbounds %class.SkStrikeServerImpl, %class.SkStrikeServerImpl* %0, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %19 = load %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair>::Slot"*, %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair>::Slot"** %18, align 8
  store %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair>::Slot"* null, %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair>::Slot"** %18, align 8
  %20 = icmp eq %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair>::Slot"* %19, null
  br i1 %20, label %44, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair>::Slot"* %19, i64 -1, i32 1
  %23 = bitcast i32* %22 to i8*
  %24 = bitcast i32* %22 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %43, label %27

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair>::Slot"* %19, i64 %25
  br label %29

29:                                               ; preds = %41, %27
  %30 = phi %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair>::Slot"* [ %31, %41 ], [ %28, %27 ]
  %31 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair>::Slot"* %30, i64 -1
  %32 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair>::Slot"* %30, i64 -1, i32 0, i32 0, i32 1, i32 0
  %33 = load %class.SkData*, %class.SkData** %32, align 8
  %34 = icmp eq %class.SkData* %33, null
  br i1 %34, label %41, label %35

35:                                               ; preds = %29
  %36 = getelementptr inbounds %class.SkData, %class.SkData* %33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = atomicrmw add i32* %36, i32 -1 acq_rel
  %38 = icmp eq i32 %37, 1
  br i1 %38, label %39, label %41

39:                                               ; preds = %35
  tail call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %33) #16
  %40 = bitcast %class.SkData* %33 to i8*
  tail call void @_ZN6SkDatadlEPv(i8* nonnull %40) #16
  br label %41

41:                                               ; preds = %39, %35, %29
  %42 = icmp eq %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair>::Slot"* %31, %19
  br i1 %42, label %43, label %29

43:                                               ; preds = %41, %21
  tail call void @_ZdaPv(i8* %23) #18
  br label %44

44:                                               ; preds = %17, %43
  %45 = getelementptr inbounds %class.SkStrikeServerImpl, %class.SkStrikeServerImpl* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %46 = load %"struct.SkTHashTable<unsigned int, unsigned int, SkTHashSet<unsigned int, SkGoodHash>::Traits>::Slot"*, %"struct.SkTHashTable<unsigned int, unsigned int, SkTHashSet<unsigned int, SkGoodHash>::Traits>::Slot"** %45, align 8
  store %"struct.SkTHashTable<unsigned int, unsigned int, SkTHashSet<unsigned int, SkGoodHash>::Traits>::Slot"* null, %"struct.SkTHashTable<unsigned int, unsigned int, SkTHashSet<unsigned int, SkGoodHash>::Traits>::Slot"** %45, align 8
  %47 = icmp eq %"struct.SkTHashTable<unsigned int, unsigned int, SkTHashSet<unsigned int, SkGoodHash>::Traits>::Slot"* %46, null
  br i1 %47, label %50, label %48

48:                                               ; preds = %44
  %49 = bitcast %"struct.SkTHashTable<unsigned int, unsigned int, SkTHashSet<unsigned int, SkGoodHash>::Traits>::Slot"* %46 to i8*
  tail call void @_ZdaPv(i8* %49) #18
  br label %50

50:                                               ; preds = %44, %48
  %51 = getelementptr inbounds %class.SkStrikeServerImpl, %class.SkStrikeServerImpl* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %52 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %51, align 8
  %53 = icmp eq %"struct.std::__1::__hash_node_base"* %52, null
  br i1 %53, label %70, label %54

54:                                               ; preds = %50, %67
  %55 = phi %"struct.std::__1::__hash_node_base"* [ %57, %67 ], [ %52, %50 ]
  %56 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %55, i64 0, i32 0
  %57 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %56, align 8
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %55, i64 3
  %59 = bitcast %"struct.std::__1::__hash_node_base"* %58 to %class.RemoteStrike**
  %60 = load %class.RemoteStrike*, %class.RemoteStrike** %59, align 8
  store %class.RemoteStrike* null, %class.RemoteStrike** %59, align 8
  %61 = icmp eq %class.RemoteStrike* %60, null
  br i1 %61, label %67, label %62

62:                                               ; preds = %54
  %63 = bitcast %class.RemoteStrike* %60 to void (%class.RemoteStrike*)***
  %64 = load void (%class.RemoteStrike*)**, void (%class.RemoteStrike*)*** %63, align 8
  %65 = getelementptr inbounds void (%class.RemoteStrike*)*, void (%class.RemoteStrike*)** %64, i64 1
  %66 = load void (%class.RemoteStrike*)*, void (%class.RemoteStrike*)** %65, align 8
  tail call void %66(%class.RemoteStrike* nonnull %60) #16
  br label %67

67:                                               ; preds = %62, %54
  %68 = bitcast %"struct.std::__1::__hash_node_base"* %55 to i8*
  tail call void @_ZdlPv(i8* %68) #18
  %69 = icmp eq %"struct.std::__1::__hash_node_base"* %57, null
  br i1 %69, label %70, label %54

70:                                               ; preds = %67, %50
  %71 = getelementptr inbounds %class.SkStrikeServerImpl, %class.SkStrikeServerImpl* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %71, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %71, align 8
  %73 = icmp eq %"struct.std::__1::__hash_node_base"** %72, null
  br i1 %73, label %76, label %74

74:                                               ; preds = %70
  %75 = bitcast %"struct.std::__1::__hash_node_base"** %72 to i8*
  tail call void @_ZdlPv(i8* %75) #18
  br label %76

76:                                               ; preds = %70, %74
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN18SkStrikeServerImplD0Ev(%class.SkStrikeServerImpl*) unnamed_addr #10 comdat align 2 {
  tail call void @_ZN18SkStrikeServerImplD2Ev(%class.SkStrikeServerImpl* %0) #16
  %2 = bitcast %class.SkStrikeServerImpl* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #18
  ret void
}

declare void @_ZN16SkAutoDescriptor5resetEm(%class.SkAutoDescriptor*, i64) local_unnamed_addr #4

declare zeroext i1 @_ZNK12SkDescriptor7isValidEv(%class.SkDescriptor*) local_unnamed_addr #4

declare void @_ZN21SkArenaAllocWithResetC2EPcmm(%class.SkArenaAllocWithReset*, i8*, i64, i64) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIhNS_9allocatorIhEEE8__appendEm(%"class.std::__1::vector.37"*, i64) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.37", %"class.std::__1::vector.37"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast i8** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.37", %"class.std::__1::vector.37"* %0, i64 0, i32 0, i32 1
  %7 = bitcast i8** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = icmp ult i64 %9, %1
  br i1 %10, label %22, label %11

11:                                               ; preds = %2
  %12 = inttoptr i64 %8 to i8*
  %13 = icmp eq i64 %1, 0
  br i1 %13, label %20, label %14

14:                                               ; preds = %11
  %15 = getelementptr inbounds i8, i8* %12, i64 %1
  %16 = sub i64 %1, %8
  %17 = getelementptr i8, i8* %12, i64 %16
  %18 = ptrtoint i8* %17 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %12, i8 0, i64 %18, i1 false) #16
  %19 = ptrtoint i8* %15 to i64
  br label %20

20:                                               ; preds = %11, %14
  %21 = phi i64 [ %19, %14 ], [ %8, %11 ]
  store i64 %21, i64* %7, align 8
  br label %68

22:                                               ; preds = %2
  %23 = bitcast %"class.std::__1::vector.37"* %0 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = sub i64 %8, %24
  %26 = add i64 %25, %1
  %27 = icmp slt i64 %26, 0
  br i1 %27, label %28, label %30

28:                                               ; preds = %22
  %29 = bitcast %"class.std::__1::vector.37"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %29) #17
  unreachable

30:                                               ; preds = %22
  %31 = sub i64 %5, %24
  %32 = icmp ult i64 %31, 4611686018427387903
  br i1 %32, label %33, label %38

33:                                               ; preds = %30
  %34 = shl i64 %31, 1
  %35 = icmp ult i64 %34, %26
  %36 = select i1 %35, i64 %26, i64 %34
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %41, label %38

38:                                               ; preds = %30, %33
  %39 = phi i64 [ %36, %33 ], [ 9223372036854775807, %30 ]
  %40 = tail call i8* @_Znwm(i64 %39) #18
  br label %41

41:                                               ; preds = %38, %33
  %42 = phi i64 [ %39, %38 ], [ 0, %33 ]
  %43 = phi i8* [ %40, %38 ], [ null, %33 ]
  %44 = getelementptr inbounds i8, i8* %43, i64 %25
  %45 = ptrtoint i8* %44 to i64
  %46 = getelementptr inbounds i8, i8* %43, i64 %42
  %47 = getelementptr inbounds i8, i8* %44, i64 %1
  %48 = sub i64 %1, %45
  %49 = getelementptr i8, i8* %44, i64 %48
  %50 = ptrtoint i8* %49 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %44, i8 0, i64 %50, i1 false) #16
  %51 = ptrtoint i8* %46 to i64
  %52 = ptrtoint i8* %47 to i64
  %53 = getelementptr inbounds %"class.std::__1::vector.37", %"class.std::__1::vector.37"* %0, i64 0, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  %55 = load i64, i64* %7, align 8
  %56 = ptrtoint i8* %54 to i64
  %57 = sub i64 %55, %56
  %58 = sub i64 0, %57
  %59 = getelementptr inbounds i8, i8* %44, i64 %58
  %60 = ptrtoint i8* %59 to i64
  %61 = icmp sgt i64 %57, 0
  br i1 %61, label %62, label %64

62:                                               ; preds = %41
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %59, i8* align 1 %54, i64 %57, i1 false) #16
  %63 = load i8*, i8** %53, align 8
  br label %64

64:                                               ; preds = %41, %62
  %65 = phi i8* [ %54, %41 ], [ %63, %62 ]
  store i64 %60, i64* %23, align 8
  store i64 %52, i64* %7, align 8
  store i64 %51, i64* %4, align 8
  %66 = icmp eq i8* %65, null
  br i1 %66, label %68, label %67

67:                                               ; preds = %64
  tail call void @_ZdlPv(i8* nonnull %65) #18
  br label %68

68:                                               ; preds = %67, %64, %20
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #11

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #12

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #13

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayItLb0EE12checkReallocEiNS0_11ReallocTypeE(%class.SkTArray*, i32, i32) local_unnamed_addr #1 comdat align 2 {
  %4 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 1
  %7 = trunc i64 %6 to i32
  %8 = and i32 %7, 2147483647
  %9 = add nsw i32 %8, %1
  %10 = sext i32 %9 to i64
  %11 = lshr i64 %5, 33
  %12 = icmp slt i64 %11, %10
  %13 = mul nsw i64 %10, 3
  %14 = icmp sle i64 %11, %13
  %15 = and i64 %5, 1
  %16 = icmp eq i64 %15, 0
  %17 = or i1 %16, %14
  br i1 %17, label %21, label %18

18:                                               ; preds = %3
  %19 = and i64 %5, 4294967296
  %20 = icmp eq i64 %19, 0
  br label %21

21:                                               ; preds = %3, %18
  %22 = phi i1 [ false, %3 ], [ %20, %18 ]
  %23 = or i1 %12, %22
  br i1 %23, label %24, label %75

24:                                               ; preds = %21
  %25 = icmp eq i32 %2, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %24
  %27 = add nsw i64 %10, 1
  %28 = ashr i64 %27, 1
  %29 = add nsw i64 %10, 7
  %30 = add nsw i64 %29, %28
  %31 = and i64 %30, -8
  br label %32

32:                                               ; preds = %24, %26
  %33 = phi i64 [ %31, %26 ], [ %10, %24 ]
  %34 = icmp eq i64 %33, %11
  br i1 %34, label %75, label %35

35:                                               ; preds = %32
  %36 = icmp slt i64 %33, 2147483647
  %37 = select i1 %36, i64 %33, i64 2147483647
  %38 = icmp sgt i64 %37, -2147483647
  %39 = select i1 %38, i64 %37, i64 -2147483647
  %40 = shl i64 %39, 33
  %41 = and i64 %5, 8589934591
  %42 = or i64 %40, %41
  store i64 %42, i64* %4, align 8
  %43 = and i64 %39, 2147483647
  %44 = tail call i8* @_Z15sk_malloc_throwmm(i64 %43, i64 2) #16
  %45 = load i64, i64* %4, align 8
  %46 = and i64 %45, 4294967294
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %63, label %48

48:                                               ; preds = %35
  %49 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %0, i64 0, i32 0
  br label %50

50:                                               ; preds = %50, %48
  %51 = phi i64 [ 0, %48 ], [ %58, %50 ]
  %52 = shl nuw i64 %51, 1
  %53 = getelementptr inbounds i8, i8* %44, i64 %52
  %54 = bitcast i8* %53 to i16*
  %55 = load i16*, i16** %49, align 8
  %56 = getelementptr inbounds i16, i16* %55, i64 %51
  %57 = load i16, i16* %56, align 2
  store i16 %57, i16* %54, align 2
  %58 = add nuw nsw i64 %51, 1
  %59 = load i64, i64* %4, align 8
  %60 = lshr i64 %59, 1
  %61 = and i64 %60, 2147483647
  %62 = icmp ult i64 %58, %61
  br i1 %62, label %50, label %63

63:                                               ; preds = %50, %35
  %64 = phi i64 [ %45, %35 ], [ %59, %50 ]
  %65 = and i64 %64, 1
  %66 = icmp eq i64 %65, 0
  %67 = bitcast %class.SkTArray* %0 to i8**
  br i1 %66, label %71, label %68

68:                                               ; preds = %63
  %69 = load i8*, i8** %67, align 8
  tail call void @_Z7sk_freePv(i8* %69) #16
  %70 = load i64, i64* %4, align 8
  br label %71

71:                                               ; preds = %63, %68
  %72 = phi i64 [ %70, %68 ], [ %64, %63 ]
  store i8* %44, i8** %67, align 8
  %73 = and i64 %72, -4294967298
  %74 = or i64 %73, 1
  store i64 %74, i64* %4, align 8
  br label %75

75:                                               ; preds = %71, %32, %21
  ret void
}

declare i8* @_Z15sk_malloc_throwmm(i64, i64) local_unnamed_addr #4

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayI7SkPointLb0EE12checkReallocEiNS1_11ReallocTypeE(%class.SkTArray.63*, i32, i32) local_unnamed_addr #1 comdat align 2 {
  %4 = getelementptr inbounds %class.SkTArray.63, %class.SkTArray.63* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 1
  %7 = trunc i64 %6 to i32
  %8 = and i32 %7, 2147483647
  %9 = add nsw i32 %8, %1
  %10 = sext i32 %9 to i64
  %11 = lshr i64 %5, 33
  %12 = icmp slt i64 %11, %10
  %13 = mul nsw i64 %10, 3
  %14 = icmp sle i64 %11, %13
  %15 = and i64 %5, 1
  %16 = icmp eq i64 %15, 0
  %17 = or i1 %16, %14
  br i1 %17, label %21, label %18

18:                                               ; preds = %3
  %19 = and i64 %5, 4294967296
  %20 = icmp eq i64 %19, 0
  br label %21

21:                                               ; preds = %3, %18
  %22 = phi i1 [ false, %3 ], [ %20, %18 ]
  %23 = or i1 %12, %22
  br i1 %23, label %24, label %76

24:                                               ; preds = %21
  %25 = icmp eq i32 %2, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %24
  %27 = add nsw i64 %10, 1
  %28 = ashr i64 %27, 1
  %29 = add nsw i64 %10, 7
  %30 = add nsw i64 %29, %28
  %31 = and i64 %30, -8
  br label %32

32:                                               ; preds = %24, %26
  %33 = phi i64 [ %31, %26 ], [ %10, %24 ]
  %34 = icmp eq i64 %33, %11
  br i1 %34, label %76, label %35

35:                                               ; preds = %32
  %36 = icmp slt i64 %33, 2147483647
  %37 = select i1 %36, i64 %33, i64 2147483647
  %38 = icmp sgt i64 %37, -2147483647
  %39 = select i1 %38, i64 %37, i64 -2147483647
  %40 = shl i64 %39, 33
  %41 = and i64 %5, 8589934591
  %42 = or i64 %40, %41
  store i64 %42, i64* %4, align 8
  %43 = and i64 %39, 2147483647
  %44 = tail call i8* @_Z15sk_malloc_throwmm(i64 %43, i64 8) #16
  %45 = load i64, i64* %4, align 8
  %46 = and i64 %45, 4294967294
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %64, label %48

48:                                               ; preds = %35
  %49 = getelementptr inbounds %class.SkTArray.63, %class.SkTArray.63* %0, i64 0, i32 0
  br label %50

50:                                               ; preds = %50, %48
  %51 = phi i64 [ 0, %48 ], [ %59, %50 ]
  %52 = shl nuw nsw i64 %51, 3
  %53 = getelementptr inbounds i8, i8* %44, i64 %52
  %54 = load %struct.SkPoint*, %struct.SkPoint** %49, align 8
  %55 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %54, i64 %51
  %56 = bitcast %struct.SkPoint* %55 to i64*
  %57 = bitcast i8* %53 to i64*
  %58 = load i64, i64* %56, align 4
  store i64 %58, i64* %57, align 4
  %59 = add nuw nsw i64 %51, 1
  %60 = load i64, i64* %4, align 8
  %61 = lshr i64 %60, 1
  %62 = and i64 %61, 2147483647
  %63 = icmp ult i64 %59, %62
  br i1 %63, label %50, label %64

64:                                               ; preds = %50, %35
  %65 = phi i64 [ %45, %35 ], [ %60, %50 ]
  %66 = and i64 %65, 1
  %67 = icmp eq i64 %66, 0
  %68 = bitcast %class.SkTArray.63* %0 to i8**
  br i1 %67, label %72, label %69

69:                                               ; preds = %64
  %70 = load i8*, i8** %68, align 8
  tail call void @_Z7sk_freePv(i8* %70) #16
  %71 = load i64, i64* %4, align 8
  br label %72

72:                                               ; preds = %64, %69
  %73 = phi i64 [ %71, %69 ], [ %65, %64 ]
  store i8* %44, i8** %68, align 8
  %74 = and i64 %73, -4294967298
  %75 = or i64 %74, 1
  store i64 %75, i64* %4, align 8
  br label %76

76:                                               ; preds = %72, %32, %21
  ret void
}

declare void @_ZN15SkScalerContext17MakeRecAndEffectsERK6SkFontRK7SkPaintRK14SkSurfaceProps20SkScalerContextFlagsRK8SkMatrixP18SkScalerContextRecP22SkScalerContextEffects(%class.SkFont* dereferenceable(24), %class.SkPaint* dereferenceable(72), %class.SkSurfaceProps* dereferenceable(8), i32, %class.SkMatrix* dereferenceable(40), %struct.SkScalerContextRec*, %struct.SkScalerContextEffects*) local_unnamed_addr #4

declare %class.SkDescriptor* @_ZN15SkScalerContext32AutoDescriptorGivenRecAndEffectsERK18SkScalerContextRecRK22SkScalerContextEffectsP16SkAutoDescriptor(%struct.SkScalerContextRec* dereferenceable(52), %struct.SkScalerContextEffects* dereferenceable(16), %class.SkAutoDescriptor*) local_unnamed_addr #4

declare i8* @_ZNK12SkDescriptor9findEntryEjPj(%class.SkDescriptor*, i32, i32*) local_unnamed_addr #4

declare void @_ZN8SkStringC1Ev(%class.SkString*) unnamed_addr #4

declare void @_ZN8SkString7appendfEPKcz(%class.SkString*, i8*, ...) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN16SkNoPixelsDeviceC2ERK7SkIRectRK14SkSurfaceProps5sk_spI12SkColorSpaceE(%class.SkNoPixelsDevice*, %struct.SkIRect* dereferenceable(16), %class.SkSurfaceProps* dereferenceable(8), %class.sk_sp.160*) unnamed_addr #1 comdat align 2 {
  %5 = alloca %class.SkM44, align 4
  %6 = alloca %struct.SkImageInfo, align 8
  %7 = alloca %class.SkM44, align 4
  %8 = getelementptr inbounds %class.SkNoPixelsDevice, %class.SkNoPixelsDevice* %0, i64 0, i32 0
  %9 = bitcast %struct.SkImageInfo* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #16
  %10 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = sub i32 %11, %13
  %15 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 3
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = sub i32 %16, %18
  %20 = zext i32 %19 to i64
  %21 = shl nuw i64 %20, 32
  %22 = zext i32 %14 to i64
  %23 = or i64 %21, %22
  %24 = getelementptr inbounds %class.sk_sp.160, %class.sk_sp.160* %3, i64 0, i32 0
  %25 = bitcast %class.sk_sp.160* %3 to i64*
  %26 = load i64, i64* %25, align 8
  store %class.SkColorSpace* null, %class.SkColorSpace** %24, align 8
  %27 = bitcast %struct.SkImageInfo* %6 to i64*
  store i64 %26, i64* %27, align 8, !alias.scope !73
  %28 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %6, i64 0, i32 0, i32 1
  %29 = bitcast i32* %28 to i64*
  store i64 0, i64* %29, align 8, !alias.scope !73
  %30 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %6, i64 0, i32 1
  %31 = bitcast %struct.SkISize* %30 to i64*
  store i64 %23, i64* %31, align 8, !alias.scope !73
  call void @_ZN12SkBaseDeviceC2ERK11SkImageInfoRK14SkSurfaceProps(%class.SkBaseDevice* %8, %struct.SkImageInfo* nonnull dereferenceable(24) %6, %class.SkSurfaceProps* dereferenceable(8) %2) #16
  %32 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %6, i64 0, i32 0, i32 0, i32 0
  %33 = load %class.SkColorSpace*, %class.SkColorSpace** %32, align 8
  %34 = icmp eq %class.SkColorSpace* %33, null
  br i1 %34, label %41, label %35

35:                                               ; preds = %4
  %36 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = atomicrmw add i32* %36, i32 -1 acq_rel
  %38 = icmp eq i32 %37, 1
  br i1 %38, label %39, label %41

39:                                               ; preds = %35
  %40 = bitcast %class.SkColorSpace* %33 to i8*
  call void @_ZdlPv(i8* %40) #18
  br label %41

41:                                               ; preds = %39, %35, %4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #16
  %42 = getelementptr inbounds %class.SkNoPixelsDevice, %class.SkNoPixelsDevice* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [63 x i8*], [6 x i8*] }, { [63 x i8*], [6 x i8*] }* @_ZTV16SkNoPixelsDevice, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %42, align 8
  %43 = getelementptr inbounds %class.SkNoPixelsDevice, %class.SkNoPixelsDevice* %0, i64 0, i32 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [63 x i8*], [6 x i8*] }, { [63 x i8*], [6 x i8*] }* @_ZTV16SkNoPixelsDevice, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %43, align 8
  %44 = getelementptr inbounds %class.SkNoPixelsDevice, %class.SkNoPixelsDevice* %0, i64 0, i32 2, i32 0, i32 0, i64 160
  %45 = getelementptr inbounds %class.SkNoPixelsDevice, %class.SkNoPixelsDevice* %0, i64 0, i32 2, i32 0, i32 0, i64 0
  %46 = getelementptr inbounds %class.SkNoPixelsDevice, %class.SkNoPixelsDevice* %0, i64 0, i32 2, i32 0, i32 0, i64 168
  %47 = bitcast i8* %46 to i64*
  %48 = bitcast i8* %44 to i8**
  store i8* %45, i8** %48, align 8
  store i64 34359738368, i64* %47, align 8
  %49 = bitcast %class.SkM44* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %49) #16
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %49, i8* align 4 bitcast ([16 x float]* @constinit to i8*), i64 64, i1 false) #16
  %50 = load i32, i32* %12, align 4
  %51 = load i32, i32* %17, align 4
  %52 = bitcast %class.SkM44* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %52) #16
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %52, i8* align 4 bitcast ([16 x float]* @constinit to i8*), i64 64, i1 false) #16
  call void @_ZN12SkBaseDevice25setDeviceCoordinateSystemERK5SkM44S2_ii(%class.SkBaseDevice* %8, %class.SkM44* nonnull dereferenceable(64) %5, %class.SkM44* nonnull dereferenceable(64) %7, i32 %50, i32 %51) #16
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %52) #16
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %49) #16
  %53 = bitcast i8* %44 to %class.SkTArray.202*
  %54 = load i64, i64* %47, align 8
  %55 = and i64 %54, -4294967295
  store i64 %55, i64* %47, align 8
  call void @_ZN8SkTArrayIN16SkNoPixelsDevice9ClipStateELb0EE12checkReallocEiNS2_11ReallocTypeE(%class.SkTArray.202* %53, i32 0, i32 2) #16
  %56 = load i64, i64* %47, align 8
  %57 = and i64 %56, -4294967297
  store i64 %57, i64* %47, align 8
  %58 = getelementptr inbounds %class.SkNoPixelsDevice, %class.SkNoPixelsDevice* %0, i64 0, i32 1
  %59 = bitcast %struct.SkIRect* %58 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %59, i8 0, i64 16, i1 false) #16
  call void @_ZN8SkTArrayIN16SkNoPixelsDevice9ClipStateELb0EE12checkReallocEiNS2_11ReallocTypeE(%class.SkTArray.202* %53, i32 1, i32 1) #16
  %60 = bitcast i8* %44 to %"struct.SkNoPixelsDevice::ClipState"**
  %61 = load %"struct.SkNoPixelsDevice::ClipState"*, %"struct.SkNoPixelsDevice::ClipState"** %60, align 8
  %62 = load i64, i64* %47, align 8
  %63 = lshr i64 %62, 1
  %64 = and i64 %63, 2147483647
  %65 = getelementptr inbounds %"struct.SkNoPixelsDevice::ClipState", %"struct.SkNoPixelsDevice::ClipState"* %61, i64 %64
  %66 = bitcast %"struct.SkNoPixelsDevice::ClipState"* %65 to i8*
  %67 = add i64 %62, 2
  %68 = and i64 %67, 4294967294
  %69 = and i64 %62, -4294967295
  %70 = or i64 %68, %69
  store i64 %70, i64* %47, align 8
  %71 = getelementptr inbounds %"struct.SkNoPixelsDevice::ClipState", %"struct.SkNoPixelsDevice::ClipState"* %61, i64 %64, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* align 8 %66, i8 0, i64 16, i1 false) #16
  store i8 1, i8* %71, align 8
  %72 = getelementptr inbounds %"struct.SkNoPixelsDevice::ClipState", %"struct.SkNoPixelsDevice::ClipState"* %61, i64 %64, i32 0, i32 2
  store i8 0, i8* %72, align 1
  %73 = getelementptr inbounds %"struct.SkNoPixelsDevice::ClipState", %"struct.SkNoPixelsDevice::ClipState"* %61, i64 %64, i32 0, i32 3
  store %struct.SkIRect* null, %struct.SkIRect** %73, align 8
  %74 = getelementptr inbounds %"struct.SkNoPixelsDevice::ClipState", %"struct.SkNoPixelsDevice::ClipState"* %61, i64 %64, i32 1
  store i32 0, i32* %74, align 8
  %75 = getelementptr inbounds %class.SkNoPixelsDevice, %class.SkNoPixelsDevice* %0, i64 0, i32 0, i32 3, i32 1, i32 0
  %76 = load i32, i32* %75, align 4
  %77 = getelementptr inbounds %class.SkNoPixelsDevice, %class.SkNoPixelsDevice* %0, i64 0, i32 0, i32 3, i32 1, i32 1
  %78 = load i32, i32* %77, align 4
  %79 = zext i32 %78 to i64
  %80 = shl nuw i64 %79, 32
  %81 = zext i32 %76 to i64
  %82 = or i64 %80, %81
  %83 = bitcast %"struct.SkNoPixelsDevice::ClipState"* %65 to i64*
  store i64 0, i64* %83, align 8
  %84 = getelementptr inbounds %"struct.SkNoPixelsDevice::ClipState", %"struct.SkNoPixelsDevice::ClipState"* %61, i64 %64, i32 0, i32 0, i32 2
  %85 = bitcast i32* %84 to i64*
  store i64 %82, i64* %85, align 8
  store i8 1, i8* %71, align 8
  store i8 0, i8* %72, align 1
  store %struct.SkIRect* %58, %struct.SkIRect** %73, align 8
  ret void
}

declare void @_ZN21SkGlyphRunListPainterC1ERK14SkSurfaceProps11SkColorTypeP12SkColorSpaceP28SkStrikeForGPUCacheInterface(%class.SkGlyphRunListPainter*, %class.SkSurfaceProps* dereferenceable(8), i32, %class.SkColorSpace*, %class.SkStrikeForGPUCacheInterface*) unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN19GlyphTrackingDeviceD2Ev(%class.GlyphTrackingDevice*) unnamed_addr #10 comdat align 2 {
  %2 = getelementptr inbounds %class.GlyphTrackingDevice, %class.GlyphTrackingDevice* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [63 x i8*], [6 x i8*] }, { [63 x i8*], [6 x i8*] }* @_ZTV19GlyphTrackingDevice, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.GlyphTrackingDevice, %class.GlyphTrackingDevice* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [63 x i8*], [6 x i8*] }, { [63 x i8*], [6 x i8*] }* @_ZTV19GlyphTrackingDevice, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %class.GlyphTrackingDevice, %class.GlyphTrackingDevice* %0, i64 0, i32 3, i32 6, i32 6, i32 0, i32 0, i64 40
  %5 = bitcast i8* %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = and i64 %6, 1
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %13, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %class.GlyphTrackingDevice, %class.GlyphTrackingDevice* %0, i64 0, i32 3, i32 6, i32 6, i32 0, i32 0, i64 32
  %11 = bitcast i8* %10 to i8**
  %12 = load i8*, i8** %11, align 8
  tail call void @_Z7sk_freePv(i8* %12) #16
  br label %13

13:                                               ; preds = %9, %1
  %14 = getelementptr inbounds %class.GlyphTrackingDevice, %class.GlyphTrackingDevice* %0, i64 0, i32 3, i32 6, i32 5, i32 0, i32 0, i64 16
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = and i64 %16, 1
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %13
  %20 = getelementptr inbounds %class.GlyphTrackingDevice, %class.GlyphTrackingDevice* %0, i64 0, i32 3, i32 6, i32 5, i32 0, i32 0, i64 8
  %21 = bitcast i8* %20 to i8**
  %22 = load i8*, i8** %21, align 8
  tail call void @_Z7sk_freePv(i8* %22) #16
  br label %23

23:                                               ; preds = %19, %13
  %24 = getelementptr inbounds %class.GlyphTrackingDevice, %class.GlyphTrackingDevice* %0, i64 0, i32 3, i32 5, i32 4
  %25 = getelementptr inbounds %class.SkAutoTMalloc, %class.SkAutoTMalloc* %24, i64 0, i32 0, i32 0, i32 0, i32 0
  %26 = bitcast %class.SkAutoTMalloc* %24 to i64*
  %27 = load i64, i64* %26, align 8
  store %struct.SkPoint* null, %struct.SkPoint** %25, align 8
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %31, label %29

29:                                               ; preds = %23
  %30 = inttoptr i64 %27 to i8*
  tail call void @_Z7sk_freePv(i8* %30) #16
  br label %31

31:                                               ; preds = %29, %23
  %32 = getelementptr inbounds %class.GlyphTrackingDevice, %class.GlyphTrackingDevice* %0, i64 0, i32 3, i32 5, i32 3, i32 0, i32 0, i32 0, i32 0
  %33 = load %class.SkGlyphVariant*, %class.SkGlyphVariant** %32, align 8
  store %class.SkGlyphVariant* null, %class.SkGlyphVariant** %32, align 8
  %34 = icmp eq %class.SkGlyphVariant* %33, null
  br i1 %34, label %37, label %35

35:                                               ; preds = %31
  %36 = bitcast %class.SkGlyphVariant* %33 to i8*
  tail call void @_ZdaPv(i8* %36) #18
  br label %37

37:                                               ; preds = %31, %35
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [63 x i8*], [6 x i8*] }, { [63 x i8*], [6 x i8*] }* @_ZTV16SkNoPixelsDevice, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [63 x i8*], [6 x i8*] }, { [63 x i8*], [6 x i8*] }* @_ZTV16SkNoPixelsDevice, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %38 = getelementptr inbounds %class.GlyphTrackingDevice, %class.GlyphTrackingDevice* %0, i64 0, i32 0, i32 2, i32 0, i32 0, i64 168
  %39 = bitcast i8* %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = and i64 %40, 1
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %47, label %43

43:                                               ; preds = %37
  %44 = getelementptr inbounds %class.GlyphTrackingDevice, %class.GlyphTrackingDevice* %0, i64 0, i32 0, i32 2, i32 0, i32 0, i64 160
  %45 = bitcast i8* %44 to i8**
  %46 = load i8*, i8** %45, align 8
  tail call void @_Z7sk_freePv(i8* %46) #16
  br label %47

47:                                               ; preds = %43, %37
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [63 x i8*], [6 x i8*] }, { [63 x i8*], [6 x i8*] }* @_ZTV12SkBaseDevice, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [63 x i8*], [6 x i8*] }, { [63 x i8*], [6 x i8*] }* @_ZTV12SkBaseDevice, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %48 = getelementptr inbounds %class.GlyphTrackingDevice, %class.GlyphTrackingDevice* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0, i32 0
  %49 = load %class.SkColorSpace*, %class.SkColorSpace** %48, align 8
  %50 = icmp eq %class.SkColorSpace* %49, null
  br i1 %50, label %57, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %49, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = atomicrmw add i32* %52, i32 -1 acq_rel
  %54 = icmp eq i32 %53, 1
  br i1 %54, label %55, label %57

55:                                               ; preds = %51
  %56 = bitcast %class.SkColorSpace* %49 to i8*
  tail call void @_ZdlPv(i8* %56) #18
  br label %57

57:                                               ; preds = %47, %51, %55
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN19GlyphTrackingDeviceD0Ev(%class.GlyphTrackingDevice*) unnamed_addr #10 comdat align 2 {
  tail call void @_ZN19GlyphTrackingDeviceD2Ev(%class.GlyphTrackingDevice* %0) #16
  %2 = bitcast %class.GlyphTrackingDevice* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK12SkRefCntBase16internal_disposeEv(%class.SkRefCntBase*) unnamed_addr #1 comdat align 2 {
  %2 = icmp eq %class.SkRefCntBase* %0, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  %4 = bitcast %class.SkRefCntBase* %0 to void (%class.SkRefCntBase*)***
  %5 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %4, align 8
  %6 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %5, i64 1
  %7 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %6, align 8
  tail call void %7(%class.SkRefCntBase* nonnull %0) #16
  br label %8

8:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK12SkBaseDevice15getRasterHandleEv(%class.SkBaseDevice*) unnamed_addr #1 comdat align 2 {
  ret i8* null
}

declare zeroext i1 @_ZNK12SkBaseDevice16getLocalToMarkerEjP5SkM44(%class.SkBaseDevice*, i32, %class.SkM44*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK12SkBaseDevice29localToDeviceHitsPixelCentersEv(%class.SkBaseDevice*) unnamed_addr #1 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12SkBaseDevice17validateDevBoundsERK7SkIRect(%class.SkBaseDevice*, %struct.SkIRect* dereferenceable(16)) unnamed_addr #1 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN12SkBaseDevice29android_utils_clipWithStencilEv(%class.SkBaseDevice*) unnamed_addr #1 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.GrRecordingContext* @_ZNK12SkBaseDevice16recordingContextEv(%class.SkBaseDevice*) unnamed_addr #1 comdat align 2 {
  ret %class.GrRecordingContext* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.GrSurfaceDrawContext* @_ZN12SkBaseDevice18surfaceDrawContextEv(%class.SkBaseDevice*) unnamed_addr #1 comdat align 2 {
  ret %class.GrSurfaceDrawContext* null
}

declare void @_ZN16SkNoPixelsDevice6onSaveEv(%class.SkNoPixelsDevice*) unnamed_addr #4

declare void @_ZN16SkNoPixelsDevice9onRestoreEv(%class.SkNoPixelsDevice*) unnamed_addr #4

declare void @_ZN16SkNoPixelsDevice10onClipRectERK6SkRect8SkClipOpb(%class.SkNoPixelsDevice*, %struct.SkRect* dereferenceable(16), i32, i1 zeroext) unnamed_addr #4

declare void @_ZN16SkNoPixelsDevice11onClipRRectERK7SkRRect8SkClipOpb(%class.SkNoPixelsDevice*, %class.SkRRect* dereferenceable(52), i32, i1 zeroext) unnamed_addr #4

declare void @_ZN16SkNoPixelsDevice10onClipPathERK6SkPath8SkClipOpb(%class.SkNoPixelsDevice*, %class.SkPath* dereferenceable(16), i32, i1 zeroext) unnamed_addr #4

declare void @_ZN16SkNoPixelsDevice12onClipShaderE5sk_spI8SkShaderE(%class.SkNoPixelsDevice*, %class.sk_sp.128*) unnamed_addr #4

declare void @_ZN16SkNoPixelsDevice12onClipRegionERK8SkRegion8SkClipOp(%class.SkNoPixelsDevice*, %class.SkRegion* dereferenceable(24), i32) unnamed_addr #4

declare void @_ZN16SkNoPixelsDevice13onReplaceClipERK7SkIRect(%class.SkNoPixelsDevice*, %struct.SkIRect* dereferenceable(16)) unnamed_addr #4

declare void @_ZN16SkNoPixelsDevice26onSetDeviceClipRestrictionEP7SkIRect(%class.SkNoPixelsDevice*, %struct.SkIRect*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK16SkNoPixelsDevice10onClipIsAAEv(%class.SkNoPixelsDevice*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %class.SkNoPixelsDevice, %class.SkNoPixelsDevice* %0, i64 0, i32 2, i32 0, i32 0, i64 160
  %3 = bitcast i8* %2 to %"struct.SkNoPixelsDevice::ClipState"**
  %4 = load %"struct.SkNoPixelsDevice::ClipState"*, %"struct.SkNoPixelsDevice::ClipState"** %3, align 8
  %5 = getelementptr inbounds %class.SkNoPixelsDevice, %class.SkNoPixelsDevice* %0, i64 0, i32 2, i32 0, i32 0, i64 168
  %6 = bitcast i8* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = lshr i64 %7, 1
  %9 = and i64 %8, 2147483647
  %10 = add nsw i64 %9, -1
  %11 = getelementptr inbounds %"struct.SkNoPixelsDevice::ClipState", %"struct.SkNoPixelsDevice::ClipState"* %4, i64 %10, i32 0, i32 2
  %12 = load i8, i8* %11, align 1, !range !2
  %13 = icmp ne i8 %12, 0
  ret i1 %13
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK16SkNoPixelsDevice16onClipIsWideOpenEv(%class.SkNoPixelsDevice*) unnamed_addr #1 comdat align 2 {
  %2 = alloca { i64, i64 }, align 8
  %3 = alloca { i64, i64 }, align 8
  %4 = getelementptr inbounds %class.SkNoPixelsDevice, %class.SkNoPixelsDevice* %0, i64 0, i32 2, i32 0, i32 0, i64 160
  %5 = bitcast i8* %4 to %"struct.SkNoPixelsDevice::ClipState"**
  %6 = load %"struct.SkNoPixelsDevice::ClipState"*, %"struct.SkNoPixelsDevice::ClipState"** %5, align 8
  %7 = getelementptr inbounds %class.SkNoPixelsDevice, %class.SkNoPixelsDevice* %0, i64 0, i32 2, i32 0, i32 0, i64 168
  %8 = bitcast i8* %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = lshr i64 %9, 1
  %11 = and i64 %10, 2147483647
  %12 = add nsw i64 %11, -1
  %13 = getelementptr inbounds %"struct.SkNoPixelsDevice::ClipState", %"struct.SkNoPixelsDevice::ClipState"* %6, i64 %12, i32 0, i32 1
  %14 = load i8, i8* %13, align 8, !range !2
  %15 = icmp eq i8 %14, 0
  %16 = bitcast { i64, i64 }* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #16
  %17 = bitcast { i64, i64 }* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #16
  br i1 %15, label %40, label %18

18:                                               ; preds = %1
  %19 = bitcast %class.SkNoPixelsDevice* %0 to { i64, i64 } (%class.SkNoPixelsDevice*)***
  %20 = load { i64, i64 } (%class.SkNoPixelsDevice*)**, { i64, i64 } (%class.SkNoPixelsDevice*)*** %19, align 8
  %21 = getelementptr inbounds { i64, i64 } (%class.SkNoPixelsDevice*)*, { i64, i64 } (%class.SkNoPixelsDevice*)** %20, i64 23
  %22 = load { i64, i64 } (%class.SkNoPixelsDevice*)*, { i64, i64 } (%class.SkNoPixelsDevice*)** %21, align 8
  %23 = tail call { i64, i64 } %22(%class.SkNoPixelsDevice* %0) #16
  %24 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i64 0, i32 0
  %25 = extractvalue { i64, i64 } %23, 0
  store i64 %25, i64* %24, align 8
  %26 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i64 0, i32 1
  %27 = extractvalue { i64, i64 } %23, 1
  store i64 %27, i64* %26, align 8
  %28 = getelementptr inbounds %class.SkNoPixelsDevice, %class.SkNoPixelsDevice* %0, i64 0, i32 0, i32 3, i32 1, i32 0
  %29 = load i32, i32* %28, align 4
  %30 = getelementptr inbounds %class.SkNoPixelsDevice, %class.SkNoPixelsDevice* %0, i64 0, i32 0, i32 3, i32 1, i32 1
  %31 = load i32, i32* %30, align 4
  %32 = zext i32 %31 to i64
  %33 = shl nuw i64 %32, 32
  %34 = zext i32 %29 to i64
  %35 = or i64 %33, %34
  %36 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 0
  store i64 0, i64* %36, align 8
  %37 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 1
  store i64 %35, i64* %37, align 8
  %38 = call i32 @bcmp(i8* nonnull %16, i8* nonnull %17, i64 16) #16
  %39 = icmp eq i32 %38, 0
  br label %40

40:                                               ; preds = %1, %18
  %41 = phi i1 [ false, %1 ], [ %39, %18 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #16
  ret i1 %41
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK16SkNoPixelsDevice11onAsRgnClipEP8SkRegion(%class.SkNoPixelsDevice*, %class.SkRegion*) unnamed_addr #1 comdat align 2 {
  %3 = alloca { i64, i64 }, align 8
  %4 = bitcast { i64, i64 }* %3 to %struct.SkIRect*
  %5 = bitcast { i64, i64 }* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #16
  %6 = bitcast %class.SkNoPixelsDevice* %0 to { i64, i64 } (%class.SkNoPixelsDevice*)***
  %7 = load { i64, i64 } (%class.SkNoPixelsDevice*)**, { i64, i64 } (%class.SkNoPixelsDevice*)*** %6, align 8
  %8 = getelementptr inbounds { i64, i64 } (%class.SkNoPixelsDevice*)*, { i64, i64 } (%class.SkNoPixelsDevice*)** %7, i64 23
  %9 = load { i64, i64 } (%class.SkNoPixelsDevice*)*, { i64, i64 } (%class.SkNoPixelsDevice*)** %8, align 8
  %10 = tail call { i64, i64 } %9(%class.SkNoPixelsDevice* %0) #16
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 0
  %12 = extractvalue { i64, i64 } %10, 0
  store i64 %12, i64* %11, align 8
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 1
  %14 = extractvalue { i64, i64 } %10, 1
  store i64 %14, i64* %13, align 8
  %15 = call zeroext i1 @_ZN8SkRegion7setRectERK7SkIRect(%class.SkRegion* %1, %struct.SkIRect* nonnull dereferenceable(16) %4) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #16
  ret void
}

declare i32 @_ZNK16SkNoPixelsDevice13onGetClipTypeEv(%class.SkNoPixelsDevice*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, i64 } @_ZNK16SkNoPixelsDevice15onDevClipBoundsEv(%class.SkNoPixelsDevice*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %class.SkNoPixelsDevice, %class.SkNoPixelsDevice* %0, i64 0, i32 2, i32 0, i32 0, i64 160
  %3 = bitcast i8* %2 to %"struct.SkNoPixelsDevice::ClipState"**
  %4 = load %"struct.SkNoPixelsDevice::ClipState"*, %"struct.SkNoPixelsDevice::ClipState"** %3, align 8
  %5 = getelementptr inbounds %class.SkNoPixelsDevice, %class.SkNoPixelsDevice* %0, i64 0, i32 2, i32 0, i32 0, i64 168
  %6 = bitcast i8* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = lshr i64 %7, 1
  %9 = and i64 %8, 2147483647
  %10 = add nsw i64 %9, -1
  %11 = getelementptr inbounds %"struct.SkNoPixelsDevice::ClipState", %"struct.SkNoPixelsDevice::ClipState"* %4, i64 %10, i32 0, i32 0
  %12 = bitcast %struct.SkIRect* %11 to i64*
  %13 = load i64, i64* %12, align 4
  %14 = getelementptr inbounds %"struct.SkNoPixelsDevice::ClipState", %"struct.SkNoPixelsDevice::ClipState"* %4, i64 %10, i32 0, i32 0, i32 2
  %15 = bitcast i32* %14 to i64*
  %16 = load i64, i64* %15, align 4
  %17 = insertvalue { i64, i64 } undef, i64 %13, 0
  %18 = insertvalue { i64, i64 } %17, i64 %16, 1
  ret { i64, i64 } %18
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN16SkNoPixelsDevice9drawPaintERK7SkPaint(%class.SkNoPixelsDevice*, %class.SkPaint* dereferenceable(72)) unnamed_addr #1 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN16SkNoPixelsDevice10drawPointsEN8SkCanvas9PointModeEmPK7SkPointRK7SkPaint(%class.SkNoPixelsDevice*, i32, i64, %struct.SkPoint*, %class.SkPaint* dereferenceable(72)) unnamed_addr #1 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN16SkNoPixelsDevice8drawRectERK6SkRectRK7SkPaint(%class.SkNoPixelsDevice*, %struct.SkRect* dereferenceable(16), %class.SkPaint* dereferenceable(72)) unnamed_addr #1 comdat align 2 {
  ret void
}

declare void @_ZN12SkBaseDevice10drawRegionERK8SkRegionRK7SkPaint(%class.SkBaseDevice*, %class.SkRegion* dereferenceable(24), %class.SkPaint* dereferenceable(72)) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN16SkNoPixelsDevice8drawOvalERK6SkRectRK7SkPaint(%class.SkNoPixelsDevice*, %struct.SkRect* dereferenceable(16), %class.SkPaint* dereferenceable(72)) unnamed_addr #1 comdat align 2 {
  ret void
}

declare void @_ZN12SkBaseDevice7drawArcERK6SkRectffbRK7SkPaint(%class.SkBaseDevice*, %struct.SkRect* dereferenceable(16), float, float, i1 zeroext, %class.SkPaint* dereferenceable(72)) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN16SkNoPixelsDevice9drawRRectERK7SkRRectRK7SkPaint(%class.SkNoPixelsDevice*, %class.SkRRect* dereferenceable(52), %class.SkPaint* dereferenceable(72)) unnamed_addr #1 comdat align 2 {
  ret void
}

declare void @_ZN12SkBaseDevice10drawDRRectERK7SkRRectS2_RK7SkPaint(%class.SkBaseDevice*, %class.SkRRect* dereferenceable(52), %class.SkRRect* dereferenceable(52), %class.SkPaint* dereferenceable(72)) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN16SkNoPixelsDevice8drawPathERK6SkPathRK7SkPaintb(%class.SkNoPixelsDevice*, %class.SkPath* dereferenceable(16), %class.SkPaint* dereferenceable(72), i1 zeroext) unnamed_addr #1 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN16SkNoPixelsDevice13drawImageRectEPK7SkImagePK6SkRectRS4_RK17SkSamplingOptionsRK7SkPaintN8SkCanvas17SrcRectConstraintE(%class.SkNoPixelsDevice*, %class.SkImage*, %struct.SkRect*, %struct.SkRect* dereferenceable(16), %struct.SkSamplingOptions* dereferenceable(20), %class.SkPaint* dereferenceable(72), i32) unnamed_addr #1 comdat align 2 {
  ret void
}

declare void @_ZN12SkBaseDevice16drawImageLatticeEPK7SkImageRKN8SkCanvas7LatticeERK6SkRect12SkFilterModeRK7SkPaint(%class.SkBaseDevice*, %class.SkImage*, %"struct.SkCanvas::Lattice"* dereferenceable(48), %struct.SkRect* dereferenceable(16), i32, %class.SkPaint* dereferenceable(72)) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN16SkNoPixelsDevice12drawVerticesEPK10SkVertices11SkBlendModeRK7SkPaint(%class.SkNoPixelsDevice*, %class.SkVertices*, i32, %class.SkPaint* dereferenceable(72)) unnamed_addr #1 comdat align 2 {
  ret void
}

declare void @_ZN12SkBaseDevice10drawShadowERK6SkPathRK15SkDrawShadowRec(%class.SkBaseDevice*, %class.SkPath* dereferenceable(16), %struct.SkDrawShadowRec*) unnamed_addr #4

declare void @_ZN12SkBaseDevice9drawPatchEPK7SkPointPKjS2_11SkBlendModeRK7SkPaint(%class.SkBaseDevice*, %struct.SkPoint*, i32*, %struct.SkPoint*, i32, %class.SkPaint* dereferenceable(72)) unnamed_addr #4

declare void @_ZN12SkBaseDevice9drawAtlasEPK7SkImagePK9SkRSXformPK6SkRectPKji11SkBlendModeRK17SkSamplingOptionsRK7SkPaint(%class.SkBaseDevice*, %class.SkImage*, %struct.SkRSXform*, %struct.SkRect*, i32*, i32, i32, %struct.SkSamplingOptions* dereferenceable(20), %class.SkPaint* dereferenceable(72)) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12SkBaseDevice14drawAnnotationERK6SkRectPKcP6SkData(%class.SkBaseDevice*, %struct.SkRect* dereferenceable(16), i8*, %class.SkData*) unnamed_addr #1 comdat align 2 {
  ret void
}

declare void @_ZN12SkBaseDevice14drawEdgeAAQuadERK6SkRectPK7SkPointN8SkCanvas11QuadAAFlagsERK8SkRGBA4fIL11SkAlphaType3EE11SkBlendMode(%class.SkBaseDevice*, %struct.SkRect* dereferenceable(16), %struct.SkPoint*, i32, %struct.SkRGBA4f* dereferenceable(16), i32) unnamed_addr #4

declare void @_ZN12SkBaseDevice18drawEdgeAAImageSetEPKN8SkCanvas13ImageSetEntryEiPK7SkPointPK8SkMatrixRK17SkSamplingOptionsRK7SkPaintNS0_17SrcRectConstraintE(%class.SkBaseDevice*, %"struct.SkCanvas::ImageSetEntry"*, i32, %struct.SkPoint*, %class.SkMatrix*, %struct.SkSamplingOptions* dereferenceable(20), %class.SkPaint* dereferenceable(72), i32) unnamed_addr #4

declare void @_ZN12SkBaseDevice12drawDrawableEP10SkDrawablePK8SkMatrixP8SkCanvas(%class.SkBaseDevice*, %class.SkDrawable*, %class.SkMatrix*, %class.SkCanvas*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN19GlyphTrackingDevice18onDrawGlyphRunListERK14SkGlyphRunListRK7SkPaint(%class.GlyphTrackingDevice*, %class.SkGlyphRunList* dereferenceable(48), %class.SkPaint* dereferenceable(72)) unnamed_addr #6 comdat align 2 {
  %4 = alloca %struct.GrContextOptions, align 8
  %5 = alloca %class.GrSDFTControl, align 4
  %6 = alloca %class.SkMatrix, align 4
  %7 = getelementptr inbounds %struct.GrContextOptions, %struct.GrContextOptions* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 240, i8* nonnull %7) #16
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %7, i8* align 8 getelementptr inbounds ({ i8, [3 x i8], i32, i32, i32, %class.SkExecutor*, i8, i8, i8, i8, i8, [3 x i8], i64, float, float, i32, i8, i8, [2 x i8], i32, i32, i8, i8, [2 x i8], i32, %"class.GrContextOptions::PersistentCache"*, i32, [4 x i8], %"class.GrContextOptions::ShaderErrorHandler"*, i32, i32, i8, i8, %class.GrDriverBugWorkarounds }, { i8, [3 x i8], i32, i32, i32, %class.SkExecutor*, i8, i8, i8, i8, i8, [3 x i8], i64, float, float, i32, i8, i8, [2 x i8], i32, i32, i8, i8, [2 x i8], i32, %"class.GrContextOptions::PersistentCache"*, i32, [4 x i8], %"class.GrContextOptions::ShaderErrorHandler"*, i32, i32, i8, i8, %class.GrDriverBugWorkarounds }* @__const._ZN19GlyphTrackingDevice18onDrawGlyphRunListERK14SkGlyphRunListRK7SkPaint.ctxOptions, i64 0, i32 0), i64 240, i1 false)
  store i8 0, i8* %7, align 8
  %8 = getelementptr inbounds %struct.GrContextOptions, %struct.GrContextOptions* %4, i64 0, i32 1
  store i32 2, i32* %8, align 4
  %9 = getelementptr inbounds %struct.GrContextOptions, %struct.GrContextOptions* %4, i64 0, i32 2
  store i32 2147483647, i32* %9, align 8
  %10 = getelementptr inbounds %struct.GrContextOptions, %struct.GrContextOptions* %4, i64 0, i32 3
  store i32 -1, i32* %10, align 4
  %11 = getelementptr inbounds %struct.GrContextOptions, %struct.GrContextOptions* %4, i64 0, i32 4
  store %class.SkExecutor* null, %class.SkExecutor** %11, align 8
  %12 = getelementptr inbounds %struct.GrContextOptions, %struct.GrContextOptions* %4, i64 0, i32 5
  store i8 0, i8* %12, align 8
  %13 = getelementptr inbounds %struct.GrContextOptions, %struct.GrContextOptions* %4, i64 0, i32 6
  store i8 1, i8* %13, align 1
  %14 = getelementptr inbounds %struct.GrContextOptions, %struct.GrContextOptions* %4, i64 0, i32 7
  store i8 0, i8* %14, align 2
  %15 = getelementptr inbounds %struct.GrContextOptions, %struct.GrContextOptions* %4, i64 0, i32 8
  store i8 1, i8* %15, align 1
  %16 = getelementptr inbounds %struct.GrContextOptions, %struct.GrContextOptions* %4, i64 0, i32 9
  store i8 0, i8* %16, align 4
  %17 = getelementptr inbounds %struct.GrContextOptions, %struct.GrContextOptions* %4, i64 0, i32 10
  store i64 8388608, i64* %17, align 8
  %18 = getelementptr inbounds %struct.GrContextOptions, %struct.GrContextOptions* %4, i64 0, i32 11
  store float 1.800000e+01, float* %18, align 8
  %19 = getelementptr inbounds %struct.GrContextOptions, %struct.GrContextOptions* %4, i64 0, i32 12
  store float 3.240000e+02, float* %19, align 4
  %20 = getelementptr inbounds %struct.GrContextOptions, %struct.GrContextOptions* %4, i64 0, i32 13
  store i32 2, i32* %20, align 8
  %21 = getelementptr inbounds %struct.GrContextOptions, %struct.GrContextOptions* %4, i64 0, i32 14
  store i8 0, i8* %21, align 4
  %22 = getelementptr inbounds %struct.GrContextOptions, %struct.GrContextOptions* %4, i64 0, i32 15
  store i8 0, i8* %22, align 1
  %23 = getelementptr inbounds %struct.GrContextOptions, %struct.GrContextOptions* %4, i64 0, i32 16
  store i32 2, i32* %23, align 8
  %24 = getelementptr inbounds %struct.GrContextOptions, %struct.GrContextOptions* %4, i64 0, i32 17
  store i32 2, i32* %24, align 4
  %25 = getelementptr inbounds %struct.GrContextOptions, %struct.GrContextOptions* %4, i64 0, i32 18
  store i8 0, i8* %25, align 8
  %26 = getelementptr inbounds %struct.GrContextOptions, %struct.GrContextOptions* %4, i64 0, i32 19
  store i8 0, i8* %26, align 1
  %27 = getelementptr inbounds %struct.GrContextOptions, %struct.GrContextOptions* %4, i64 0, i32 20
  store i32 256, i32* %27, align 4
  %28 = getelementptr inbounds %struct.GrContextOptions, %struct.GrContextOptions* %4, i64 0, i32 21
  store %"class.GrContextOptions::PersistentCache"* null, %"class.GrContextOptions::PersistentCache"** %28, align 8
  %29 = getelementptr inbounds %struct.GrContextOptions, %struct.GrContextOptions* %4, i64 0, i32 22
  store i32 2, i32* %29, align 8
  %30 = getelementptr inbounds %struct.GrContextOptions, %struct.GrContextOptions* %4, i64 0, i32 23
  store %"class.GrContextOptions::ShaderErrorHandler"* null, %"class.GrContextOptions::ShaderErrorHandler"** %30, align 8
  %31 = getelementptr inbounds %struct.GrContextOptions, %struct.GrContextOptions* %4, i64 0, i32 24
  store i32 4, i32* %31, align 8
  %32 = getelementptr inbounds %struct.GrContextOptions, %struct.GrContextOptions* %4, i64 0, i32 25
  store i32 -1, i32* %32, align 4
  %33 = getelementptr inbounds %struct.GrContextOptions, %struct.GrContextOptions* %4, i64 0, i32 26
  store i8 0, i8* %33, align 8
  %34 = getelementptr inbounds %struct.GrContextOptions, %struct.GrContextOptions* %4, i64 0, i32 27
  store i8 0, i8* %34, align 1
  %35 = getelementptr inbounds %struct.GrContextOptions, %struct.GrContextOptions* %4, i64 0, i32 28
  call void @_ZN22GrDriverBugWorkaroundsC1Ev(%class.GrDriverBugWorkarounds* %35) #16
  %36 = bitcast %class.GrSDFTControl* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %36) #16
  %37 = getelementptr inbounds %class.GrSDFTControl, %class.GrSDFTControl* %5, i64 0, i32 0
  store float 0xFFFFFFFFE0000000, float* %37, align 4
  %38 = getelementptr inbounds %class.GrSDFTControl, %class.GrSDFTControl* %5, i64 0, i32 1
  store float 0xFFFFFFFFE0000000, float* %38, align 4
  %39 = getelementptr inbounds %class.GrSDFTControl, %class.GrSDFTControl* %5, i64 0, i32 2
  %40 = getelementptr inbounds %class.GlyphTrackingDevice, %class.GlyphTrackingDevice* %0, i64 0, i32 2
  %41 = bitcast i8* %39 to i32*
  store i32 -1431655766, i32* %41, align 4
  %42 = load i8, i8* %40, align 8, !range !2
  %43 = icmp ne i8 %42, 0
  %44 = getelementptr inbounds %class.GlyphTrackingDevice, %class.GlyphTrackingDevice* %0, i64 0, i32 0, i32 0, i32 4, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = and i32 %45, 1
  %47 = icmp ne i32 %46, 0
  %48 = load float, float* %18, align 8
  %49 = load float, float* %19, align 4
  call void @_ZN13GrSDFTControlC1Ebbff(%class.GrSDFTControl* nonnull %5, i1 zeroext %43, i1 zeroext %47, float %48, float %49) #16
  %50 = bitcast %class.SkMatrix* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %50) #16
  %51 = getelementptr inbounds %class.GlyphTrackingDevice, %class.GlyphTrackingDevice* %0, i64 0, i32 0, i32 0, i32 1, i32 2
  %52 = bitcast %class.SkMatrix* %51 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %50, i8* align 4 %52, i64 40, i1 false)
  %53 = getelementptr inbounds %class.SkGlyphRunList, %class.SkGlyphRunList* %1, i64 0, i32 3
  %54 = bitcast %struct.SkPoint* %53 to <2 x float>*
  %55 = load <2 x float>, <2 x float>* %54, align 8
  %56 = extractelement <2 x float> %55, i32 0
  %57 = extractelement <2 x float> %55, i32 1
  %58 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix12preTranslateEff(%class.SkMatrix* nonnull %6, float %56, float %57) #16
  %59 = getelementptr inbounds %class.SkGlyphRunList, %class.SkGlyphRunList* %1, i64 0, i32 0, i32 0
  %60 = load %class.SkGlyphRun*, %class.SkGlyphRun** %59, align 8
  %61 = getelementptr inbounds %class.SkGlyphRunList, %class.SkGlyphRunList* %1, i64 0, i32 0, i32 1
  %62 = load i64, i64* %61, align 8
  %63 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %60, i64 %62
  %64 = icmp eq i64 %62, 0
  br i1 %64, label %67, label %65

65:                                               ; preds = %3
  %66 = getelementptr inbounds %class.GlyphTrackingDevice, %class.GlyphTrackingDevice* %0, i64 0, i32 3
  br label %68

67:                                               ; preds = %68, %3
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %50) #16
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %36) #16
  call void @_ZN22GrDriverBugWorkaroundsD1Ev(%class.GrDriverBugWorkarounds* %35) #16
  call void @llvm.lifetime.end.p0i8(i64 240, i8* nonnull %7) #16
  ret void

68:                                               ; preds = %65, %68
  %69 = phi %class.SkGlyphRun* [ %60, %65 ], [ %70, %68 ]
  call void @_ZN21SkGlyphRunListPainter15processGlyphRunERK10SkGlyphRunRK8SkMatrixRK7SkPaintRK13GrSDFTControlP26SkGlyphRunPainterInterfacePKc(%class.SkGlyphRunListPainter* %66, %class.SkGlyphRun* dereferenceable(96) %69, %class.SkMatrix* nonnull dereferenceable(40) %6, %class.SkPaint* dereferenceable(72) %2, %class.GrSDFTControl* nonnull dereferenceable(12) %5, %class.SkGlyphRunPainterInterface* null, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.12, i64 0, i64 0)) #16
  %70 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %69, i64 1
  %71 = icmp eq %class.SkGlyphRun* %70, %63
  br i1 %71, label %67, label %68
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN16SkNoPixelsDevice10drawDeviceEP12SkBaseDeviceRK17SkSamplingOptionsRK7SkPaint(%class.SkNoPixelsDevice*, %class.SkBaseDevice*, %struct.SkSamplingOptions* dereferenceable(20), %class.SkPaint* dereferenceable(72)) unnamed_addr #1 comdat align 2 {
  ret void
}

declare void @_ZN12SkBaseDevice11drawSpecialEP14SkSpecialImageRK8SkMatrixRK17SkSamplingOptionsRK7SkPaint(%class.SkBaseDevice*, %class.SkSpecialImage*, %class.SkMatrix* dereferenceable(40), %struct.SkSamplingOptions* dereferenceable(20), %class.SkPaint* dereferenceable(72)) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN16SkNoPixelsDevice17drawFilteredImageERKN4skif7MappingEP14SkSpecialImagePK13SkImageFilterRK17SkSamplingOptionsRK7SkPaint(%class.SkNoPixelsDevice*, %"class.skif::Mapping"*, %class.SkSpecialImage*, %class.SkImageFilter*, %struct.SkSamplingOptions* dereferenceable(20), %class.SkPaint* dereferenceable(72)) unnamed_addr #1 comdat align 2 {
  ret void
}

declare void @_ZN12SkBaseDevice11makeSpecialERK8SkBitmap() unnamed_addr

declare void @_ZN12SkBaseDevice11makeSpecialEPK7SkImage() unnamed_addr

declare void @_ZN12SkBaseDevice11snapSpecialERK7SkIRectb() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12SkBaseDevice12setImmutableEv(%class.SkBaseDevice*) unnamed_addr #1 comdat align 2 {
  ret void
}

declare void @_ZN12SkBaseDevice11makeSurfaceERK11SkImageInfoRK14SkSurfaceProps(%class.sk_sp.294* sret, %class.SkBaseDevice*, %struct.SkImageInfo* dereferenceable(24), %class.SkSurfaceProps* dereferenceable(8)) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN12SkBaseDevice12onPeekPixelsEP8SkPixmap(%class.SkBaseDevice*, %class.SkPixmap*) unnamed_addr #1 comdat align 2 {
  ret i1 false
}

declare zeroext i1 @_ZN12SkBaseDevice12onReadPixelsERK8SkPixmapii(%class.SkBaseDevice*, %class.SkPixmap* dereferenceable(40), i32, i32) unnamed_addr #4

declare zeroext i1 @_ZN12SkBaseDevice13onWritePixelsERK8SkPixmapii(%class.SkBaseDevice*, %class.SkPixmap* dereferenceable(40), i32, i32) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN12SkBaseDevice14onAccessPixelsEP8SkPixmap(%class.SkBaseDevice*, %class.SkPixmap*) unnamed_addr #1 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.SkBaseDevice* @_ZN19GlyphTrackingDevice14onCreateDeviceERKN12SkBaseDevice10CreateInfoEPK7SkPaint(%class.GlyphTrackingDevice*, %"struct.SkBaseDevice::CreateInfo"* dereferenceable(48), %class.SkPaint*) unnamed_addr #1 comdat align 2 {
  %4 = alloca { i64, i64 }, align 8
  %5 = alloca %class.sk_sp.160, align 8
  %6 = alloca %class.SkSurfaceProps, align 4
  %7 = bitcast %class.SkSurfaceProps* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #16
  %8 = getelementptr inbounds %class.SkSurfaceProps, %class.SkSurfaceProps* %6, i64 0, i32 0
  store i32 -1431655766, i32* %8, align 4
  %9 = getelementptr inbounds %class.SkSurfaceProps, %class.SkSurfaceProps* %6, i64 0, i32 1
  store i32 -1431655766, i32* %9, align 4
  %10 = getelementptr inbounds %class.GlyphTrackingDevice, %class.GlyphTrackingDevice* %0, i64 0, i32 0, i32 0, i32 4, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds %"struct.SkBaseDevice::CreateInfo", %"struct.SkBaseDevice::CreateInfo"* %1, i64 0, i32 2
  %13 = load i32, i32* %12, align 4
  call void @_ZN14SkSurfacePropsC1Ej15SkPixelGeometry(%class.SkSurfaceProps* nonnull %6, i32 %11, i32 %13) #16
  %14 = call i8* @_Znwm(i64 712) #18
  %15 = getelementptr inbounds %"struct.SkBaseDevice::CreateInfo", %"struct.SkBaseDevice::CreateInfo"* %1, i64 0, i32 0, i32 1
  %16 = bitcast %struct.SkISize* %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %class.GlyphTrackingDevice, %class.GlyphTrackingDevice* %0, i64 0, i32 1
  %19 = load %class.SkStrikeServerImpl*, %class.SkStrikeServerImpl** %18, align 8
  %20 = getelementptr inbounds %"struct.SkBaseDevice::CreateInfo", %"struct.SkBaseDevice::CreateInfo"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = load %class.SkColorSpace*, %class.SkColorSpace** %20, align 8, !noalias !76
  %22 = icmp eq %class.SkColorSpace* %21, null
  br i1 %22, label %26, label %23

23:                                               ; preds = %3
  %24 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = atomicrmw add i32* %24, i32 1 monotonic, !noalias !76
  br label %26

26:                                               ; preds = %3, %23
  %27 = ptrtoint %class.SkColorSpace* %21 to i64
  %28 = getelementptr inbounds %class.GlyphTrackingDevice, %class.GlyphTrackingDevice* %0, i64 0, i32 2
  %29 = load i8, i8* %28, align 8, !range !2
  %30 = bitcast %class.sk_sp.160* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30)
  %31 = bitcast { i64, i64 }* %4 to %struct.SkIRect*
  %32 = bitcast i8* %14 to %class.SkNoPixelsDevice*
  %33 = bitcast { i64, i64 }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %33) #16
  %34 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 0
  store i64 0, i64* %34, align 8
  %35 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 1
  store i64 %17, i64* %35, align 8
  %36 = bitcast %class.sk_sp.160* %5 to i64*
  store i64 %27, i64* %36, align 8
  call void @_ZN16SkNoPixelsDeviceC2ERK7SkIRectRK14SkSurfaceProps5sk_spI12SkColorSpaceE(%class.SkNoPixelsDevice* nonnull %32, %struct.SkIRect* nonnull dereferenceable(16) %31, %class.SkSurfaceProps* nonnull dereferenceable(8) %6, %class.sk_sp.160* nonnull %5) #16
  %37 = getelementptr inbounds %class.sk_sp.160, %class.sk_sp.160* %5, i64 0, i32 0
  %38 = load %class.SkColorSpace*, %class.SkColorSpace** %37, align 8
  %39 = icmp eq %class.SkColorSpace* %38, null
  br i1 %39, label %46, label %40

40:                                               ; preds = %26
  %41 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = atomicrmw add i32* %41, i32 -1 acq_rel
  %43 = icmp eq i32 %42, 1
  br i1 %43, label %44, label %46

44:                                               ; preds = %40
  %45 = bitcast %class.SkColorSpace* %38 to i8*
  call void @_ZdlPv(i8* %45) #18
  br label %46

46:                                               ; preds = %44, %40, %26
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %33) #16
  %47 = bitcast i8* %14 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [63 x i8*], [6 x i8*] }, { [63 x i8*], [6 x i8*] }* @_ZTV19GlyphTrackingDevice, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %47, align 8
  %48 = getelementptr inbounds i8, i8* %14, i64 16
  %49 = bitcast i8* %48 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [63 x i8*], [6 x i8*] }, { [63 x i8*], [6 x i8*] }* @_ZTV19GlyphTrackingDevice, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %49, align 8
  %50 = getelementptr inbounds i8, i8* %14, i64 488
  %51 = bitcast i8* %50 to %class.SkStrikeServerImpl**
  store %class.SkStrikeServerImpl* %19, %class.SkStrikeServerImpl** %51, align 8
  %52 = getelementptr inbounds i8, i8* %14, i64 496
  store i8 %29, i8* %52, align 8
  %53 = getelementptr inbounds i8, i8* %14, i64 504
  %54 = bitcast i8* %53 to %class.SkGlyphRunListPainter*
  %55 = getelementptr inbounds i8, i8* %14, i64 136
  %56 = bitcast i8* %55 to %class.SkColorSpace**
  %57 = load %class.SkColorSpace*, %class.SkColorSpace** %56, align 8
  %58 = getelementptr inbounds %class.SkStrikeServerImpl, %class.SkStrikeServerImpl* %19, i64 0, i32 0
  call void @_ZN21SkGlyphRunListPainterC1ERK14SkSurfaceProps11SkColorTypeP12SkColorSpaceP28SkStrikeForGPUCacheInterface(%class.SkGlyphRunListPainter* %54, %class.SkSurfaceProps* nonnull dereferenceable(8) %6, i32 0, %class.SkColorSpace* %57, %class.SkStrikeForGPUCacheInterface* %58) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30)
  %59 = bitcast i8* %14 to %class.SkBaseDevice*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #16
  ret %class.SkBaseDevice* %59
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK16SkNoPixelsDevice16isNoPixelsDeviceEv(%class.SkNoPixelsDevice*) unnamed_addr #1 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12SkBaseDevice36replaceBitmapBackendForRasterSurfaceERK8SkBitmap(%class.SkBaseDevice*, %class.SkBitmap* dereferenceable(56)) unnamed_addr #1 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK12SkBaseDevice27forceConservativeRasterClipEv(%class.SkBaseDevice*) unnamed_addr #1 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.SkImageFilterCache* @_ZN12SkBaseDevice19getImageFilterCacheEv(%class.SkBaseDevice*) unnamed_addr #1 comdat align 2 {
  ret %class.SkImageFilterCache* null
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn16_N19GlyphTrackingDeviceD1Ev(%class.GlyphTrackingDevice*) unnamed_addr #10 comdat align 2 {
  %2 = getelementptr inbounds %class.GlyphTrackingDevice, %class.GlyphTrackingDevice* %0, i64 -1, i32 3, i32 6, i32 6, i32 1
  %3 = bitcast %class.SkTArray.63* %2 to %class.GlyphTrackingDevice*
  tail call void @_ZN19GlyphTrackingDeviceD2Ev(%class.GlyphTrackingDevice* %3) #16
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn16_N19GlyphTrackingDeviceD0Ev(%class.GlyphTrackingDevice*) unnamed_addr #10 comdat align 2 {
  %2 = getelementptr inbounds %class.GlyphTrackingDevice, %class.GlyphTrackingDevice* %0, i64 -1, i32 3, i32 6, i32 6, i32 1
  %3 = bitcast %class.SkTArray.63* %2 to %class.GlyphTrackingDevice*
  tail call void @_ZN19GlyphTrackingDeviceD2Ev(%class.GlyphTrackingDevice* %3) #16
  %4 = bitcast %class.SkTArray.63* %2 to i8*
  tail call void @_ZdlPv(i8* %4) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
declare zeroext i1 @_ZThn16_NK12SkBaseDevice16getLocalToMarkerEjP5SkM44(%class.SkBaseDevice*, i32, %class.SkM44*) unnamed_addr #1 align 2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZThn16_NK12SkBaseDevice29localToDeviceHitsPixelCentersEv(%class.SkBaseDevice*) unnamed_addr #1 comdat align 2 {
  ret i1 true
}

declare void @_ZN12SkBaseDeviceC2ERK11SkImageInfoRK14SkSurfaceProps(%class.SkBaseDevice*, %struct.SkImageInfo* dereferenceable(24), %class.SkSurfaceProps* dereferenceable(8)) unnamed_addr #4

declare void @_ZN12SkBaseDevice25setDeviceCoordinateSystemERK5SkM44S2_ii(%class.SkBaseDevice*, %class.SkM44* dereferenceable(64), %class.SkM44* dereferenceable(64), i32, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayIN16SkNoPixelsDevice9ClipStateELb0EE12checkReallocEiNS2_11ReallocTypeE(%class.SkTArray.202*, i32, i32) local_unnamed_addr #1 comdat align 2 {
  %4 = getelementptr inbounds %class.SkTArray.202, %class.SkTArray.202* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 1
  %7 = trunc i64 %6 to i32
  %8 = and i32 %7, 2147483647
  %9 = add nsw i32 %8, %1
  %10 = sext i32 %9 to i64
  %11 = lshr i64 %5, 33
  %12 = icmp slt i64 %11, %10
  %13 = mul nsw i64 %10, 3
  %14 = icmp sle i64 %11, %13
  %15 = and i64 %5, 1
  %16 = icmp eq i64 %15, 0
  %17 = or i1 %16, %14
  br i1 %17, label %21, label %18

18:                                               ; preds = %3
  %19 = and i64 %5, 4294967296
  %20 = icmp eq i64 %19, 0
  br label %21

21:                                               ; preds = %3, %18
  %22 = phi i1 [ false, %3 ], [ %20, %18 ]
  %23 = or i1 %12, %22
  br i1 %23, label %24, label %74

24:                                               ; preds = %21
  %25 = icmp eq i32 %2, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %24
  %27 = add nsw i64 %10, 1
  %28 = ashr i64 %27, 1
  %29 = add nsw i64 %10, 7
  %30 = add nsw i64 %29, %28
  %31 = and i64 %30, -8
  br label %32

32:                                               ; preds = %24, %26
  %33 = phi i64 [ %31, %26 ], [ %10, %24 ]
  %34 = icmp eq i64 %33, %11
  br i1 %34, label %74, label %35

35:                                               ; preds = %32
  %36 = icmp slt i64 %33, 2147483647
  %37 = select i1 %36, i64 %33, i64 2147483647
  %38 = icmp sgt i64 %37, -2147483647
  %39 = select i1 %38, i64 %37, i64 -2147483647
  %40 = shl i64 %39, 33
  %41 = and i64 %5, 8589934591
  %42 = or i64 %40, %41
  store i64 %42, i64* %4, align 8
  %43 = and i64 %39, 2147483647
  %44 = tail call i8* @_Z15sk_malloc_throwmm(i64 %43, i64 40) #16
  %45 = load i64, i64* %4, align 8
  %46 = and i64 %45, 4294967294
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %62, label %48

48:                                               ; preds = %35
  %49 = getelementptr inbounds %class.SkTArray.202, %class.SkTArray.202* %0, i64 0, i32 0
  br label %50

50:                                               ; preds = %50, %48
  %51 = phi i64 [ 0, %48 ], [ %57, %50 ]
  %52 = mul nuw nsw i64 %51, 40
  %53 = getelementptr inbounds i8, i8* %44, i64 %52
  %54 = load %"struct.SkNoPixelsDevice::ClipState"*, %"struct.SkNoPixelsDevice::ClipState"** %49, align 8
  %55 = getelementptr inbounds %"struct.SkNoPixelsDevice::ClipState", %"struct.SkNoPixelsDevice::ClipState"* %54, i64 %51
  %56 = bitcast %"struct.SkNoPixelsDevice::ClipState"* %55 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %53, i8* align 8 %56, i64 40, i1 false) #16
  %57 = add nuw nsw i64 %51, 1
  %58 = load i64, i64* %4, align 8
  %59 = lshr i64 %58, 1
  %60 = and i64 %59, 2147483647
  %61 = icmp ult i64 %57, %60
  br i1 %61, label %50, label %62

62:                                               ; preds = %50, %35
  %63 = phi i64 [ %45, %35 ], [ %58, %50 ]
  %64 = and i64 %63, 1
  %65 = icmp eq i64 %64, 0
  %66 = bitcast %class.SkTArray.202* %0 to i8**
  br i1 %65, label %70, label %67

67:                                               ; preds = %62
  %68 = load i8*, i8** %66, align 8
  tail call void @_Z7sk_freePv(i8* %68) #16
  %69 = load i64, i64* %4, align 8
  br label %70

70:                                               ; preds = %62, %67
  %71 = phi i64 [ %69, %67 ], [ %63, %62 ]
  store i8* %44, i8** %66, align 8
  %72 = and i64 %71, -4294967298
  %73 = or i64 %72, 1
  store i64 %73, i64* %4, align 8
  br label %74

74:                                               ; preds = %70, %32, %21
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #13

declare zeroext i1 @_ZN8SkRegion7setRectERK7SkIRect(%class.SkRegion*, %struct.SkIRect* dereferenceable(16)) local_unnamed_addr #4

declare void @_ZN13GrSDFTControlC1Ebbff(%class.GrSDFTControl*, i1 zeroext, i1 zeroext, float, float) unnamed_addr #4

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix12preTranslateEff(%class.SkMatrix*, float, float) local_unnamed_addr #4

declare void @_ZN21SkGlyphRunListPainter15processGlyphRunERK10SkGlyphRunRK8SkMatrixRK7SkPaintRK13GrSDFTControlP26SkGlyphRunPainterInterfacePKc(%class.SkGlyphRunListPainter*, %class.SkGlyphRun* dereferenceable(96), %class.SkMatrix* dereferenceable(40), %class.SkPaint* dereferenceable(72), %class.GrSDFTControl* dereferenceable(12), %class.SkGlyphRunPainterInterface*, i8*) local_unnamed_addr #4

declare void @_ZN22GrDriverBugWorkaroundsC1Ev(%class.GrDriverBugWorkarounds*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN22GrDriverBugWorkaroundsD1Ev(%class.GrDriverBugWorkarounds*) unnamed_addr #7

declare void @_ZN14SkSurfacePropsC1Ej15SkPixelGeometry(%class.SkSurfaceProps*, i32, i32) unnamed_addr #4

declare i8* @_ZN12SkDescriptor8addEntryEjmPKv(%class.SkDescriptor*, i32, i64, i8*) local_unnamed_addr #4

declare void @_ZN12SkDescriptor15computeChecksumEv(%class.SkDescriptor*) local_unnamed_addr #4

declare { %class.SkGlyph*, i64 } @_ZN13SkScalerCache18mergeGlyphAndImageE15SkPackedGlyphIDRK7SkGlyph(%class.SkScalerCache*, i32, %class.SkGlyph* dereferenceable(40)) local_unnamed_addr #4

declare void @_ZN13SkStrikeCache6Strike11updateDeltaEm(%"class.SkStrikeCache::Strike"*, i64) local_unnamed_addr #4

declare { %class.SkPath*, i64 } @_ZN13SkScalerCache9mergePathEP7SkGlyphPK6SkPath(%class.SkScalerCache*, %class.SkGlyph*, %class.SkPath*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN12SkArenaAllocD2Ev(%class.SkArenaAlloc*) unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN6SkDataD1Ev(%class.SkData*) unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN6SkDatadlEPv(i8*) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12SkTHashTableIN12RemoteStrike11MaskSummaryE15SkPackedGlyphIDNS0_17MaskSummaryTraitsEE6resizeEi(%class.SkTHashTable*, i32) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %class.SkTHashTable, %class.SkTHashTable* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %class.SkTHashTable, %class.SkTHashTable* %0, i64 0, i32 0
  store i32 0, i32* %5, align 8
  store i32 %1, i32* %3, align 4
  %6 = getelementptr inbounds %class.SkTHashTable, %class.SkTHashTable* %0, i64 0, i32 2
  %7 = getelementptr inbounds %class.SkAutoTArray, %class.SkAutoTArray* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = bitcast %class.SkAutoTArray* %6 to i64*
  %9 = load i64, i64* %8, align 8
  store %"struct.SkTHashTable<RemoteStrike::MaskSummary, SkPackedGlyphID, RemoteStrike::MaskSummaryTraits>::Slot"* null, %"struct.SkTHashTable<RemoteStrike::MaskSummary, SkPackedGlyphID, RemoteStrike::MaskSummaryTraits>::Slot"** %7, align 8
  %10 = icmp eq i32 %1, 0
  br i1 %10, label %20, label %11

11:                                               ; preds = %2
  %12 = sext i32 %1 to i64
  %13 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %12, i64 8) #16
  %14 = extractvalue { i64, i1 } %13, 1
  %15 = extractvalue { i64, i1 } %13, 0
  %16 = select i1 %14, i64 -1, i64 %15
  %17 = tail call i8* @_Znam(i64 %16) #18
  %18 = shl nsw i64 %12, 3
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %17, i8 0, i64 %18, i1 false) #16
  %19 = ptrtoint i8* %17 to i64
  br label %20

20:                                               ; preds = %2, %11
  %21 = phi i64 [ %19, %11 ], [ 0, %2 ]
  store i64 %21, i64* %8, align 8
  %22 = icmp sgt i32 %4, 0
  br i1 %22, label %23, label %27

23:                                               ; preds = %20
  %24 = inttoptr i64 %9 to %"struct.SkTHashTable<RemoteStrike::MaskSummary, SkPackedGlyphID, RemoteStrike::MaskSummaryTraits>::Slot"*
  %25 = getelementptr inbounds %class.SkTHashTable, %class.SkTHashTable* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %26 = zext i32 %4 to i64
  br label %32

27:                                               ; preds = %83, %20
  %28 = icmp eq i64 %9, 0
  br i1 %28, label %31, label %29

29:                                               ; preds = %27
  %30 = inttoptr i64 %9 to i8*
  tail call void @_ZdaPv(i8* %30) #18
  br label %31

31:                                               ; preds = %27, %29
  ret void

32:                                               ; preds = %83, %23
  %33 = phi i64 [ 0, %23 ], [ %84, %83 ]
  %34 = getelementptr inbounds %"struct.SkTHashTable<RemoteStrike::MaskSummary, SkPackedGlyphID, RemoteStrike::MaskSummaryTraits>::Slot", %"struct.SkTHashTable<RemoteStrike::MaskSummary, SkPackedGlyphID, RemoteStrike::MaskSummaryTraits>::Slot"* %24, i64 %33, i32 1
  %35 = load i32, i32* %34, align 4
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %83, label %37

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"struct.SkTHashTable<RemoteStrike::MaskSummary, SkPackedGlyphID, RemoteStrike::MaskSummaryTraits>::Slot", %"struct.SkTHashTable<RemoteStrike::MaskSummary, SkPackedGlyphID, RemoteStrike::MaskSummaryTraits>::Slot"* %24, i64 %33, i32 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = and i32 %39, 1048575
  %41 = lshr i32 %40, 16
  %42 = xor i32 %41, %40
  %43 = mul i32 %42, -2048144789
  %44 = lshr i32 %43, 16
  %45 = xor i32 %44, %43
  %46 = icmp eq i32 %45, 0
  %47 = select i1 %46, i32 1, i32 %45
  %48 = load i32, i32* %3, align 4
  %49 = icmp sgt i32 %48, 0
  br i1 %49, label %50, label %83

50:                                               ; preds = %37
  %51 = add nsw i32 %48, -1
  %52 = and i32 %47, %51
  %53 = load %"struct.SkTHashTable<RemoteStrike::MaskSummary, SkPackedGlyphID, RemoteStrike::MaskSummaryTraits>::Slot"*, %"struct.SkTHashTable<RemoteStrike::MaskSummary, SkPackedGlyphID, RemoteStrike::MaskSummaryTraits>::Slot"** %25, align 8
  br label %54

54:                                               ; preds = %76, %50
  %55 = phi i32 [ 0, %50 ], [ %81, %76 ]
  %56 = phi i32 [ %52, %50 ], [ %80, %76 ]
  %57 = sext i32 %56 to i64
  %58 = getelementptr inbounds %"struct.SkTHashTable<RemoteStrike::MaskSummary, SkPackedGlyphID, RemoteStrike::MaskSummaryTraits>::Slot", %"struct.SkTHashTable<RemoteStrike::MaskSummary, SkPackedGlyphID, RemoteStrike::MaskSummaryTraits>::Slot"* %53, i64 %57
  %59 = getelementptr inbounds %"struct.SkTHashTable<RemoteStrike::MaskSummary, SkPackedGlyphID, RemoteStrike::MaskSummaryTraits>::Slot", %"struct.SkTHashTable<RemoteStrike::MaskSummary, SkPackedGlyphID, RemoteStrike::MaskSummaryTraits>::Slot"* %53, i64 %57, i32 1
  %60 = load i32, i32* %59, align 4
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %67

62:                                               ; preds = %54
  %63 = getelementptr inbounds %"struct.SkTHashTable<RemoteStrike::MaskSummary, SkPackedGlyphID, RemoteStrike::MaskSummaryTraits>::Slot", %"struct.SkTHashTable<RemoteStrike::MaskSummary, SkPackedGlyphID, RemoteStrike::MaskSummaryTraits>::Slot"* %53, i64 %57, i32 1
  %64 = getelementptr inbounds %"struct.SkTHashTable<RemoteStrike::MaskSummary, SkPackedGlyphID, RemoteStrike::MaskSummaryTraits>::Slot", %"struct.SkTHashTable<RemoteStrike::MaskSummary, SkPackedGlyphID, RemoteStrike::MaskSummaryTraits>::Slot"* %58, i64 0, i32 0, i32 0
  store i32 %39, i32* %64, align 4
  store i32 %47, i32* %63, align 4
  %65 = load i32, i32* %5, align 8
  %66 = add nsw i32 %65, 1
  store i32 %66, i32* %5, align 8
  br label %83

67:                                               ; preds = %54
  %68 = icmp eq i32 %47, %60
  br i1 %68, label %69, label %76

69:                                               ; preds = %67
  %70 = getelementptr inbounds %"struct.SkTHashTable<RemoteStrike::MaskSummary, SkPackedGlyphID, RemoteStrike::MaskSummaryTraits>::Slot", %"struct.SkTHashTable<RemoteStrike::MaskSummary, SkPackedGlyphID, RemoteStrike::MaskSummaryTraits>::Slot"* %58, i64 0, i32 0, i32 0
  %71 = load i32, i32* %70, align 4
  %72 = and i32 %71, 1048575
  %73 = icmp eq i32 %40, %72
  br i1 %73, label %74, label %76

74:                                               ; preds = %69
  %75 = getelementptr inbounds %"struct.SkTHashTable<RemoteStrike::MaskSummary, SkPackedGlyphID, RemoteStrike::MaskSummaryTraits>::Slot", %"struct.SkTHashTable<RemoteStrike::MaskSummary, SkPackedGlyphID, RemoteStrike::MaskSummaryTraits>::Slot"* %58, i64 0, i32 0, i32 0
  store i32 %39, i32* %75, align 4
  br label %83

76:                                               ; preds = %69, %67
  %77 = add nsw i32 %56, -1
  %78 = icmp slt i32 %56, 1
  %79 = select i1 %78, i32 %48, i32 0
  %80 = add nsw i32 %77, %79
  %81 = add nuw nsw i32 %55, 1
  %82 = icmp eq i32 %81, %48
  br i1 %82, label %83, label %54

83:                                               ; preds = %76, %74, %62, %37, %32
  %84 = add nuw nsw i64 %33, 1
  %85 = icmp eq i64 %84, %26
  br i1 %85, label %27, label %32
}

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #14

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #8

declare zeroext i1 @_ZN7SkGlyph7setPathEP12SkArenaAllocP15SkScalerContext(%class.SkGlyph*, %class.SkArenaAlloc*, %class.SkScalerContext*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12SkTHashTableIN12RemoteStrike11PathSummaryEtNS0_17PathSummaryTraitsEE6resizeEi(%class.SkTHashTable.17*, i32) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %class.SkTHashTable.17, %class.SkTHashTable.17* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %class.SkTHashTable.17, %class.SkTHashTable.17* %0, i64 0, i32 0
  store i32 0, i32* %5, align 8
  store i32 %1, i32* %3, align 4
  %6 = getelementptr inbounds %class.SkTHashTable.17, %class.SkTHashTable.17* %0, i64 0, i32 2
  %7 = getelementptr inbounds %class.SkAutoTArray.18, %class.SkAutoTArray.18* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = bitcast %class.SkAutoTArray.18* %6 to i64*
  %9 = load i64, i64* %8, align 8
  store %"struct.SkTHashTable<RemoteStrike::PathSummary, unsigned short, RemoteStrike::PathSummaryTraits>::Slot"* null, %"struct.SkTHashTable<RemoteStrike::PathSummary, unsigned short, RemoteStrike::PathSummaryTraits>::Slot"** %7, align 8
  %10 = icmp eq i32 %1, 0
  br i1 %10, label %20, label %11

11:                                               ; preds = %2
  %12 = sext i32 %1 to i64
  %13 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %12, i64 8) #16
  %14 = extractvalue { i64, i1 } %13, 1
  %15 = extractvalue { i64, i1 } %13, 0
  %16 = select i1 %14, i64 -1, i64 %15
  %17 = tail call i8* @_Znam(i64 %16) #18
  %18 = shl nsw i64 %12, 3
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %17, i8 0, i64 %18, i1 false) #16
  %19 = ptrtoint i8* %17 to i64
  br label %20

20:                                               ; preds = %2, %11
  %21 = phi i64 [ %19, %11 ], [ 0, %2 ]
  store i64 %21, i64* %8, align 8
  %22 = icmp sgt i32 %4, 0
  br i1 %22, label %23, label %27

23:                                               ; preds = %20
  %24 = inttoptr i64 %9 to %"struct.SkTHashTable<RemoteStrike::PathSummary, unsigned short, RemoteStrike::PathSummaryTraits>::Slot"*
  %25 = getelementptr inbounds %class.SkTHashTable.17, %class.SkTHashTable.17* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %26 = zext i32 %4 to i64
  br label %32

27:                                               ; preds = %83, %20
  %28 = icmp eq i64 %9, 0
  br i1 %28, label %31, label %29

29:                                               ; preds = %27
  %30 = inttoptr i64 %9 to i8*
  tail call void @_ZdaPv(i8* %30) #18
  br label %31

31:                                               ; preds = %27, %29
  ret void

32:                                               ; preds = %83, %23
  %33 = phi i64 [ 0, %23 ], [ %84, %83 ]
  %34 = getelementptr inbounds %"struct.SkTHashTable<RemoteStrike::PathSummary, unsigned short, RemoteStrike::PathSummaryTraits>::Slot", %"struct.SkTHashTable<RemoteStrike::PathSummary, unsigned short, RemoteStrike::PathSummaryTraits>::Slot"* %24, i64 %33, i32 1
  %35 = load i32, i32* %34, align 4
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %83, label %37

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"struct.SkTHashTable<RemoteStrike::PathSummary, unsigned short, RemoteStrike::PathSummaryTraits>::Slot", %"struct.SkTHashTable<RemoteStrike::PathSummary, unsigned short, RemoteStrike::PathSummaryTraits>::Slot"* %24, i64 %33, i32 0
  %39 = bitcast %"struct.RemoteStrike::PathSummary"* %38 to i32*
  %40 = load i32, i32* %39, align 2
  %41 = trunc i32 %40 to i16
  %42 = and i32 %40, 65535
  %43 = mul i32 %42, -2048144789
  %44 = lshr i32 %43, 16
  %45 = xor i32 %44, %43
  %46 = icmp eq i32 %45, 0
  %47 = select i1 %46, i32 1, i32 %45
  %48 = load i32, i32* %3, align 4
  %49 = icmp sgt i32 %48, 0
  br i1 %49, label %50, label %83

50:                                               ; preds = %37
  %51 = add nsw i32 %48, -1
  %52 = and i32 %47, %51
  %53 = load %"struct.SkTHashTable<RemoteStrike::PathSummary, unsigned short, RemoteStrike::PathSummaryTraits>::Slot"*, %"struct.SkTHashTable<RemoteStrike::PathSummary, unsigned short, RemoteStrike::PathSummaryTraits>::Slot"** %25, align 8
  br label %54

54:                                               ; preds = %76, %50
  %55 = phi i32 [ 0, %50 ], [ %81, %76 ]
  %56 = phi i32 [ %52, %50 ], [ %80, %76 ]
  %57 = sext i32 %56 to i64
  %58 = getelementptr inbounds %"struct.SkTHashTable<RemoteStrike::PathSummary, unsigned short, RemoteStrike::PathSummaryTraits>::Slot", %"struct.SkTHashTable<RemoteStrike::PathSummary, unsigned short, RemoteStrike::PathSummaryTraits>::Slot"* %53, i64 %57
  %59 = getelementptr inbounds %"struct.SkTHashTable<RemoteStrike::PathSummary, unsigned short, RemoteStrike::PathSummaryTraits>::Slot", %"struct.SkTHashTable<RemoteStrike::PathSummary, unsigned short, RemoteStrike::PathSummaryTraits>::Slot"* %53, i64 %57, i32 1
  %60 = load i32, i32* %59, align 4
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %67

62:                                               ; preds = %54
  %63 = getelementptr inbounds %"struct.SkTHashTable<RemoteStrike::PathSummary, unsigned short, RemoteStrike::PathSummaryTraits>::Slot", %"struct.SkTHashTable<RemoteStrike::PathSummary, unsigned short, RemoteStrike::PathSummaryTraits>::Slot"* %53, i64 %57, i32 1
  %64 = bitcast %"struct.SkTHashTable<RemoteStrike::PathSummary, unsigned short, RemoteStrike::PathSummaryTraits>::Slot"* %58 to i32*
  store i32 %40, i32* %64, align 4
  store i32 %47, i32* %63, align 4
  %65 = load i32, i32* %5, align 8
  %66 = add nsw i32 %65, 1
  store i32 %66, i32* %5, align 8
  br label %83

67:                                               ; preds = %54
  %68 = icmp eq i32 %47, %60
  br i1 %68, label %69, label %76

69:                                               ; preds = %67
  %70 = bitcast %"struct.SkTHashTable<RemoteStrike::PathSummary, unsigned short, RemoteStrike::PathSummaryTraits>::Slot"* %58 to i32*
  %71 = load i32, i32* %70, align 4
  %72 = trunc i32 %71 to i16
  %73 = icmp eq i16 %41, %72
  br i1 %73, label %74, label %76

74:                                               ; preds = %69
  %75 = bitcast %"struct.SkTHashTable<RemoteStrike::PathSummary, unsigned short, RemoteStrike::PathSummaryTraits>::Slot"* %58 to i32*
  store i32 %40, i32* %75, align 4
  br label %83

76:                                               ; preds = %69, %67
  %77 = add nsw i32 %56, -1
  %78 = icmp slt i32 %56, 1
  %79 = select i1 %78, i32 %48, i32 0
  %80 = add nsw i32 %77, %79
  %81 = add nuw nsw i32 %55, 1
  %82 = icmp eq i32 %81, %48
  br i1 %82, label %83, label %54

83:                                               ; preds = %76, %74, %62, %37, %32
  %84 = add nuw nsw i64 %33, 1
  %85 = icmp eq i64 %84, %26
  br i1 %85, label %27, label %32
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12SkTHashTableIN10SkTHashMapIj5sk_spI6SkDataE10SkGoodHashE4PairEjS6_E6resizeEi(%class.SkTHashTable.101*, i32) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %class.SkAutoTArray.102, align 8
  %4 = getelementptr inbounds %class.SkTHashTable.101, %class.SkTHashTable.101* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %class.SkTHashTable.101, %class.SkTHashTable.101* %0, i64 0, i32 0
  store i32 0, i32* %6, align 8
  store i32 %1, i32* %4, align 4
  %7 = getelementptr inbounds %class.SkTHashTable.101, %class.SkTHashTable.101* %0, i64 0, i32 2
  %8 = getelementptr inbounds %class.SkAutoTArray.102, %class.SkAutoTArray.102* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = bitcast %class.SkAutoTArray.102* %7 to i64*
  %10 = load i64, i64* %9, align 8
  store %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair>::Slot"* null, %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair>::Slot"** %8, align 8
  %11 = bitcast %class.SkAutoTArray.102* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #16
  call void @_ZN12SkAutoTArrayIN12SkTHashTableIN10SkTHashMapIj5sk_spI6SkDataE10SkGoodHashE4PairEjS7_E4SlotEEC2Ei(%class.SkAutoTArray.102* nonnull %3, i32 %1)
  %12 = icmp eq %class.SkAutoTArray.102* %7, %3
  br i1 %12, label %42, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %class.SkAutoTArray.102, %class.SkAutoTArray.102* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %15 = bitcast %class.SkAutoTArray.102* %3 to i64*
  %16 = load i64, i64* %15, align 8
  store %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair>::Slot"* null, %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair>::Slot"** %14, align 8
  %17 = load %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair>::Slot"*, %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair>::Slot"** %8, align 8
  store i64 %16, i64* %9, align 8
  %18 = icmp eq %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair>::Slot"* %17, null
  br i1 %18, label %42, label %19

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair>::Slot"* %17, i64 -1, i32 1
  %21 = bitcast i32* %20 to i8*
  %22 = bitcast i32* %20 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %19
  %26 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair>::Slot"* %17, i64 %23
  br label %27

27:                                               ; preds = %39, %25
  %28 = phi %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair>::Slot"* [ %29, %39 ], [ %26, %25 ]
  %29 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair>::Slot"* %28, i64 -1
  %30 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair>::Slot"* %28, i64 -1, i32 0, i32 0, i32 1, i32 0
  %31 = load %class.SkData*, %class.SkData** %30, align 8
  %32 = icmp eq %class.SkData* %31, null
  br i1 %32, label %39, label %33

33:                                               ; preds = %27
  %34 = getelementptr inbounds %class.SkData, %class.SkData* %31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = atomicrmw add i32* %34, i32 -1 acq_rel
  %36 = icmp eq i32 %35, 1
  br i1 %36, label %37, label %39

37:                                               ; preds = %33
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %31) #16
  %38 = bitcast %class.SkData* %31 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %38) #16
  br label %39

39:                                               ; preds = %37, %33, %27
  %40 = icmp eq %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair>::Slot"* %29, %17
  br i1 %40, label %41, label %27

41:                                               ; preds = %39, %19
  call void @_ZdaPv(i8* %21) #18
  br label %42

42:                                               ; preds = %2, %13, %41
  %43 = getelementptr inbounds %class.SkAutoTArray.102, %class.SkAutoTArray.102* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %44 = load %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair>::Slot"*, %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair>::Slot"** %43, align 8
  store %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair>::Slot"* null, %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair>::Slot"** %43, align 8
  %45 = icmp eq %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair>::Slot"* %44, null
  br i1 %45, label %69, label %46

46:                                               ; preds = %42
  %47 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair>::Slot"* %44, i64 -1, i32 1
  %48 = bitcast i32* %47 to i8*
  %49 = bitcast i32* %47 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %68, label %52

52:                                               ; preds = %46
  %53 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair>::Slot"* %44, i64 %50
  br label %54

54:                                               ; preds = %66, %52
  %55 = phi %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair>::Slot"* [ %56, %66 ], [ %53, %52 ]
  %56 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair>::Slot"* %55, i64 -1
  %57 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair>::Slot"* %55, i64 -1, i32 0, i32 0, i32 1, i32 0
  %58 = load %class.SkData*, %class.SkData** %57, align 8
  %59 = icmp eq %class.SkData* %58, null
  br i1 %59, label %66, label %60

60:                                               ; preds = %54
  %61 = getelementptr inbounds %class.SkData, %class.SkData* %58, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = atomicrmw add i32* %61, i32 -1 acq_rel
  %63 = icmp eq i32 %62, 1
  br i1 %63, label %64, label %66

64:                                               ; preds = %60
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %58) #16
  %65 = bitcast %class.SkData* %58 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %65) #16
  br label %66

66:                                               ; preds = %64, %60, %54
  %67 = icmp eq %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair>::Slot"* %56, %44
  br i1 %67, label %68, label %54

68:                                               ; preds = %66, %46
  call void @_ZdaPv(i8* %48) #18
  br label %69

69:                                               ; preds = %42, %68
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #16
  %70 = icmp sgt i32 %5, 0
  %71 = inttoptr i64 %10 to %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair>::Slot"*
  br i1 %70, label %72, label %74

72:                                               ; preds = %69
  %73 = zext i32 %5 to i64
  br label %100

74:                                               ; preds = %108, %69
  %75 = icmp eq i64 %10, 0
  br i1 %75, label %99, label %76

76:                                               ; preds = %74
  %77 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair>::Slot"* %71, i64 -1, i32 1
  %78 = bitcast i32* %77 to i8*
  %79 = bitcast i32* %77 to i64*
  %80 = load i64, i64* %79, align 8
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %98, label %82

82:                                               ; preds = %76
  %83 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair>::Slot"* %71, i64 %80
  br label %84

84:                                               ; preds = %96, %82
  %85 = phi %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair>::Slot"* [ %86, %96 ], [ %83, %82 ]
  %86 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair>::Slot"* %85, i64 -1
  %87 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair>::Slot"* %85, i64 -1, i32 0, i32 0, i32 1, i32 0
  %88 = load %class.SkData*, %class.SkData** %87, align 8
  %89 = icmp eq %class.SkData* %88, null
  br i1 %89, label %96, label %90

90:                                               ; preds = %84
  %91 = getelementptr inbounds %class.SkData, %class.SkData* %88, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %92 = atomicrmw add i32* %91, i32 -1 acq_rel
  %93 = icmp eq i32 %92, 1
  br i1 %93, label %94, label %96

94:                                               ; preds = %90
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %88) #16
  %95 = bitcast %class.SkData* %88 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %95) #16
  br label %96

96:                                               ; preds = %94, %90, %84
  %97 = icmp eq %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair>::Slot"* %86, %71
  br i1 %97, label %98, label %84

98:                                               ; preds = %96, %76
  call void @_ZdaPv(i8* %78) #18
  br label %99

99:                                               ; preds = %74, %98
  ret void

100:                                              ; preds = %108, %72
  %101 = phi i64 [ 0, %72 ], [ %109, %108 ]
  %102 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair>::Slot"* %71, i64 %101, i32 1
  %103 = load i32, i32* %102, align 8
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %108, label %105

105:                                              ; preds = %100
  %106 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair>::Slot"* %71, i64 %101, i32 0
  %107 = call %"struct.SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair"* @_ZN12SkTHashTableIN10SkTHashMapIj5sk_spI6SkDataE10SkGoodHashE4PairEjS6_E12uncheckedSetEOS6_(%class.SkTHashTable.101* %0, %"struct.SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair"* dereferenceable(16) %106)
  br label %108

108:                                              ; preds = %105, %100
  %109 = add nuw nsw i64 %101, 1
  %110 = icmp eq i64 %109, %73
  br i1 %110, label %74, label %100
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair"* @_ZN12SkTHashTableIN10SkTHashMapIj5sk_spI6SkDataE10SkGoodHashE4PairEjS6_E12uncheckedSetEOS6_(%class.SkTHashTable.101*, %"struct.SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair"* dereferenceable(16)) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"struct.SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair", %"struct.SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair"* %1, i64 0, i32 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = lshr i32 %4, 16
  %6 = xor i32 %5, %4
  %7 = mul i32 %6, -2048144789
  %8 = lshr i32 %7, 13
  %9 = xor i32 %8, %7
  %10 = mul i32 %9, -1028477387
  %11 = lshr i32 %10, 16
  %12 = xor i32 %11, %10
  %13 = icmp eq i32 %12, 0
  %14 = select i1 %13, i32 1, i32 %12
  %15 = getelementptr inbounds %class.SkTHashTable.101, %class.SkTHashTable.101* %0, i64 0, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = icmp sgt i32 %16, 0
  br i1 %17, label %18, label %84

18:                                               ; preds = %2
  %19 = add nsw i32 %16, -1
  %20 = and i32 %14, %19
  %21 = getelementptr inbounds %class.SkTHashTable.101, %class.SkTHashTable.101* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %22 = load %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair>::Slot"*, %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair>::Slot"** %21, align 8
  br label %23

23:                                               ; preds = %18, %77
  %24 = phi i32 [ 0, %18 ], [ %82, %77 ]
  %25 = phi i32 [ %20, %18 ], [ %81, %77 ]
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair>::Slot"* %22, i64 %26
  %28 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair>::Slot"* %22, i64 %26, i32 1
  %29 = load i32, i32* %28, align 8
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %53

31:                                               ; preds = %23
  %32 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair>::Slot"* %27, i64 0, i32 0
  %33 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair>::Slot"* %27, i64 0, i32 0, i32 0, i32 0
  store i32 %4, i32* %33, align 8
  %34 = getelementptr inbounds %"struct.SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair", %"struct.SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair"* %1, i64 0, i32 0, i32 1
  %35 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair>::Slot"* %22, i64 %26, i32 0, i32 0, i32 1
  %36 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %34, i64 0, i32 0
  %37 = bitcast %class.sk_sp* %34 to i64*
  %38 = load i64, i64* %37, align 8
  store %class.SkData* null, %class.SkData** %36, align 8
  %39 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %35, i64 0, i32 0
  %40 = load %class.SkData*, %class.SkData** %39, align 8
  %41 = bitcast %class.sk_sp* %35 to i64*
  store i64 %38, i64* %41, align 8
  %42 = icmp eq %class.SkData* %40, null
  br i1 %42, label %49, label %43

43:                                               ; preds = %31
  %44 = getelementptr inbounds %class.SkData, %class.SkData* %40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = atomicrmw add i32* %44, i32 -1 acq_rel
  %46 = icmp eq i32 %45, 1
  br i1 %46, label %47, label %49

47:                                               ; preds = %43
  tail call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %40) #16
  %48 = bitcast %class.SkData* %40 to i8*
  tail call void @_ZN6SkDatadlEPv(i8* nonnull %48) #16
  br label %49

49:                                               ; preds = %31, %43, %47
  store i32 %14, i32* %28, align 8
  %50 = getelementptr inbounds %class.SkTHashTable.101, %class.SkTHashTable.101* %0, i64 0, i32 0
  %51 = load i32, i32* %50, align 8
  %52 = add nsw i32 %51, 1
  store i32 %52, i32* %50, align 8
  br label %84

53:                                               ; preds = %23
  %54 = icmp eq i32 %14, %29
  br i1 %54, label %55, label %77

55:                                               ; preds = %53
  %56 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair>::Slot"* %27, i64 0, i32 0, i32 0, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq i32 %4, %57
  br i1 %58, label %59, label %77

59:                                               ; preds = %55
  %60 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair>::Slot"* %27, i64 0, i32 0, i32 0, i32 0
  %61 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair>::Slot"* %27, i64 0, i32 0
  store i32 %4, i32* %60, align 8
  %62 = getelementptr inbounds %"struct.SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair", %"struct.SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair"* %1, i64 0, i32 0, i32 1
  %63 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair>::Slot"* %22, i64 %26, i32 0, i32 0, i32 1
  %64 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %62, i64 0, i32 0
  %65 = bitcast %class.sk_sp* %62 to i64*
  %66 = load i64, i64* %65, align 8
  store %class.SkData* null, %class.SkData** %64, align 8
  %67 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %63, i64 0, i32 0
  %68 = load %class.SkData*, %class.SkData** %67, align 8
  %69 = bitcast %class.sk_sp* %63 to i64*
  store i64 %66, i64* %69, align 8
  %70 = icmp eq %class.SkData* %68, null
  br i1 %70, label %84, label %71

71:                                               ; preds = %59
  %72 = getelementptr inbounds %class.SkData, %class.SkData* %68, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = atomicrmw add i32* %72, i32 -1 acq_rel
  %74 = icmp eq i32 %73, 1
  br i1 %74, label %75, label %84

75:                                               ; preds = %71
  tail call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %68) #16
  %76 = bitcast %class.SkData* %68 to i8*
  tail call void @_ZN6SkDatadlEPv(i8* nonnull %76) #16
  br label %84

77:                                               ; preds = %55, %53
  %78 = add nsw i32 %25, -1
  %79 = icmp slt i32 %25, 1
  %80 = select i1 %79, i32 %16, i32 0
  %81 = add nsw i32 %78, %80
  %82 = add nuw nsw i32 %24, 1
  %83 = icmp slt i32 %82, %16
  br i1 %83, label %23, label %84

84:                                               ; preds = %77, %2, %75, %71, %59, %49
  %85 = phi %"struct.SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair"* [ %61, %75 ], [ %61, %71 ], [ %61, %59 ], [ %32, %49 ], [ null, %2 ], [ null, %77 ]
  ret %"struct.SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair"* %85
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12SkAutoTArrayIN12SkTHashTableIN10SkTHashMapIj5sk_spI6SkDataE10SkGoodHashE4PairEjS7_E4SlotEEC2Ei(%class.SkAutoTArray.102*, i32) unnamed_addr #1 comdat align 2 {
  %3 = bitcast %class.SkAutoTArray.102* %0 to i64*
  store i64 0, i64* %3, align 8
  %4 = icmp eq i32 %1, 0
  br i1 %4, label %53, label %5

5:                                                ; preds = %2
  %6 = sext i32 %1 to i64
  %7 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %6, i64 24)
  %8 = extractvalue { i64, i1 } %7, 1
  %9 = extractvalue { i64, i1 } %7, 0
  %10 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %9, i64 8)
  %11 = extractvalue { i64, i1 } %10, 1
  %12 = or i1 %8, %11
  %13 = extractvalue { i64, i1 } %10, 0
  %14 = select i1 %12, i64 -1, i64 %13
  %15 = tail call i8* @_Znam(i64 %14) #18
  %16 = bitcast i8* %15 to i64*
  store i64 %6, i64* %16, align 16
  %17 = getelementptr inbounds i8, i8* %15, i64 8
  %18 = bitcast i8* %17 to %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair>::Slot"*
  %19 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair>::Slot"* %18, i64 %6
  br label %20

20:                                               ; preds = %20, %5
  %21 = phi %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair>::Slot"* [ %18, %5 ], [ %23, %20 ]
  %22 = bitcast %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair>::Slot"* %21 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 20, i1 false) #16
  %23 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair>::Slot"* %21, i64 1
  %24 = icmp eq %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair>::Slot"* %23, %19
  br i1 %24, label %25, label %20

25:                                               ; preds = %20
  %26 = getelementptr inbounds %class.SkAutoTArray.102, %class.SkAutoTArray.102* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %27 = load %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair>::Slot"*, %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair>::Slot"** %26, align 8
  %28 = bitcast %class.SkAutoTArray.102* %0 to i8**
  store i8* %17, i8** %28, align 8
  %29 = icmp eq %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair>::Slot"* %27, null
  br i1 %29, label %53, label %30

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair>::Slot"* %27, i64 -1, i32 1
  %32 = bitcast i32* %31 to i8*
  %33 = bitcast i32* %31 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %52, label %36

36:                                               ; preds = %30
  %37 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair>::Slot"* %27, i64 %34
  br label %38

38:                                               ; preds = %50, %36
  %39 = phi %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair>::Slot"* [ %40, %50 ], [ %37, %36 ]
  %40 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair>::Slot"* %39, i64 -1
  %41 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair>::Slot"* %39, i64 -1, i32 0, i32 0, i32 1, i32 0
  %42 = load %class.SkData*, %class.SkData** %41, align 8
  %43 = icmp eq %class.SkData* %42, null
  br i1 %43, label %50, label %44

44:                                               ; preds = %38
  %45 = getelementptr inbounds %class.SkData, %class.SkData* %42, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = atomicrmw add i32* %45, i32 -1 acq_rel
  %47 = icmp eq i32 %46, 1
  br i1 %47, label %48, label %50

48:                                               ; preds = %44
  tail call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %42) #16
  %49 = bitcast %class.SkData* %42 to i8*
  tail call void @_ZN6SkDatadlEPv(i8* nonnull %49) #16
  br label %50

50:                                               ; preds = %48, %44, %38
  %51 = icmp eq %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkData>, SkGoodHash>::Pair>::Slot"* %40, %27
  br i1 %51, label %52, label %38

52:                                               ; preds = %50, %30
  tail call void @_ZdaPv(i8* %32) #18
  br label %53

53:                                               ; preds = %52, %25, %2
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.uadd.with.overflow.i64(i64, i64) #14

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPK12SkDescriptorNS_10unique_ptrI12RemoteStrikeNS_14default_deleteIS6_EEEEEENS_22__unordered_map_hasherIS4_SA_6MapOpsSC_Lb1EEENS_21__unordered_map_equalIS4_SA_SC_SC_Lb1EEENS_9allocatorISA_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeISA_PvEEEE(%"class.std::__1::unique_ptr.310"* noalias sret, %"class.std::__1::__hash_table"*, %"struct.std::__1::__hash_node_base"*) local_unnamed_addr #1 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %2, i64 1
  %7 = bitcast %"struct.std::__1::__hash_node_base"* %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = tail call i64 @llvm.ctpop.i64(i64 %5) #16, !range !66
  %10 = icmp ugt i64 %9, 1
  br i1 %10, label %14, label %11

11:                                               ; preds = %3
  %12 = add i64 %5, -1
  %13 = and i64 %12, %8
  br label %18

14:                                               ; preds = %3
  %15 = icmp ult i64 %8, %5
  br i1 %15, label %18, label %16

16:                                               ; preds = %14
  %17 = urem i64 %8, %5
  br label %18

18:                                               ; preds = %11, %14, %16
  %19 = phi i64 [ %13, %11 ], [ %17, %16 ], [ %8, %14 ]
  %20 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %20, align 8
  %22 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %21, i64 %19
  %23 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %22, align 8
  br label %24

24:                                               ; preds = %24, %18
  %25 = phi %"struct.std::__1::__hash_node_base"* [ %23, %18 ], [ %27, %24 ]
  %26 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %25, i64 0, i32 0
  %27 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %26, align 8
  %28 = icmp eq %"struct.std::__1::__hash_node_base"* %27, %2
  br i1 %28, label %29, label %24

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 1
  %31 = getelementptr inbounds %"class.std::__1::__compressed_pair.83", %"class.std::__1::__compressed_pair.83"* %30, i64 0, i32 0, i32 0
  %32 = icmp eq %"struct.std::__1::__hash_node_base"* %25, %31
  br i1 %32, label %47, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %25, i64 1
  %35 = bitcast %"struct.std::__1::__hash_node_base"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  br i1 %10, label %40, label %37

37:                                               ; preds = %33
  %38 = add i64 %5, -1
  %39 = and i64 %36, %38
  br label %44

40:                                               ; preds = %33
  %41 = icmp ult i64 %36, %5
  br i1 %41, label %44, label %42

42:                                               ; preds = %40
  %43 = urem i64 %36, %5
  br label %44

44:                                               ; preds = %37, %40, %42
  %45 = phi i64 [ %39, %37 ], [ %43, %42 ], [ %36, %40 ]
  %46 = icmp eq i64 %45, %19
  br i1 %46, label %66, label %47

47:                                               ; preds = %44, %29
  %48 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %2, i64 0, i32 0
  %49 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %48, align 8
  %50 = icmp eq %"struct.std::__1::__hash_node_base"* %49, null
  br i1 %50, label %65, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %49, i64 1
  %53 = bitcast %"struct.std::__1::__hash_node_base"* %52 to i64*
  %54 = load i64, i64* %53, align 8
  br i1 %10, label %58, label %55

55:                                               ; preds = %51
  %56 = add i64 %5, -1
  %57 = and i64 %54, %56
  br label %62

58:                                               ; preds = %51
  %59 = icmp ult i64 %54, %5
  br i1 %59, label %62, label %60

60:                                               ; preds = %58
  %61 = urem i64 %54, %5
  br label %62

62:                                               ; preds = %55, %58, %60
  %63 = phi i64 [ %57, %55 ], [ %61, %60 ], [ %54, %58 ]
  %64 = icmp eq i64 %63, %19
  br i1 %64, label %66, label %65

65:                                               ; preds = %62, %47
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %22, align 8
  br label %66

66:                                               ; preds = %62, %44, %65
  %67 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %2, i64 0, i32 0
  %68 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %67, align 8
  %69 = icmp eq %"struct.std::__1::__hash_node_base"* %68, null
  %70 = ptrtoint %"struct.std::__1::__hash_node_base"* %68 to i64
  br i1 %69, label %90, label %71

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %68, i64 1
  %73 = bitcast %"struct.std::__1::__hash_node_base"* %72 to i64*
  %74 = load i64, i64* %73, align 8
  br i1 %10, label %78, label %75

75:                                               ; preds = %71
  %76 = add i64 %5, -1
  %77 = and i64 %74, %76
  br label %82

78:                                               ; preds = %71
  %79 = icmp ult i64 %74, %5
  br i1 %79, label %82, label %80

80:                                               ; preds = %78
  %81 = urem i64 %74, %5
  br label %82

82:                                               ; preds = %75, %78, %80
  %83 = phi i64 [ %77, %75 ], [ %81, %80 ], [ %74, %78 ]
  %84 = icmp eq i64 %83, %19
  br i1 %84, label %90, label %85

85:                                               ; preds = %82
  %86 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %20, align 8
  %87 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %86, i64 %83
  store %"struct.std::__1::__hash_node_base"* %25, %"struct.std::__1::__hash_node_base"** %87, align 8
  %88 = bitcast %"struct.std::__1::__hash_node_base"* %2 to i64*
  %89 = load i64, i64* %88, align 8
  br label %90

90:                                               ; preds = %85, %82, %66
  %91 = phi i64 [ %89, %85 ], [ %70, %82 ], [ %70, %66 ]
  %92 = bitcast %"struct.std::__1::__hash_node_base"* %25 to i64*
  store i64 %91, i64* %92, align 8
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %67, align 8
  %93 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 2, i32 0, i32 0
  %94 = load i64, i64* %93, align 8
  %95 = add i64 %94, -1
  store i64 %95, i64* %93, align 8
  %96 = ptrtoint %"struct.std::__1::__hash_node_base"* %2 to i64
  %97 = bitcast %"class.std::__1::unique_ptr.310"* %0 to i64*
  store i64 %96, i64* %97, align 8
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.310", %"class.std::__1::unique_ptr.310"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %99 = bitcast %"class.std::__1::allocator.86"** %98 to %"class.std::__1::__compressed_pair.83"**
  store %"class.std::__1::__compressed_pair.83"* %30, %"class.std::__1::__compressed_pair.83"** %99, align 8
  %100 = getelementptr inbounds %"class.std::__1::unique_ptr.310", %"class.std::__1::unique_ptr.310"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  store i8 1, i8* %100, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12SkTHashTableIP12RemoteStrikeS1_N10SkTHashSetIS1_10SkGoodHashE6TraitsEE6resizeEi(%class.SkTHashTable.110*, i32) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %class.SkTHashTable.110, %class.SkTHashTable.110* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %class.SkTHashTable.110, %class.SkTHashTable.110* %0, i64 0, i32 0
  store i32 0, i32* %5, align 8
  store i32 %1, i32* %3, align 4
  %6 = getelementptr inbounds %class.SkTHashTable.110, %class.SkTHashTable.110* %0, i64 0, i32 2
  %7 = getelementptr inbounds %class.SkAutoTArray.111, %class.SkAutoTArray.111* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = bitcast %class.SkAutoTArray.111* %6 to i64*
  %9 = load i64, i64* %8, align 8
  store %"struct.SkTHashTable<RemoteStrike *, RemoteStrike *, SkTHashSet<RemoteStrike *, SkGoodHash>::Traits>::Slot"* null, %"struct.SkTHashTable<RemoteStrike *, RemoteStrike *, SkTHashSet<RemoteStrike *, SkGoodHash>::Traits>::Slot"** %7, align 8
  %10 = icmp eq i32 %1, 0
  br i1 %10, label %11, label %12

11:                                               ; preds = %2
  store i64 0, i64* %8, align 8
  br label %64

12:                                               ; preds = %2
  %13 = sext i32 %1 to i64
  %14 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %13, i64 16) #16
  %15 = extractvalue { i64, i1 } %14, 1
  %16 = extractvalue { i64, i1 } %14, 0
  %17 = select i1 %15, i64 -1, i64 %16
  %18 = tail call i8* @_Znam(i64 %17) #18
  %19 = bitcast i8* %18 to %"struct.SkTHashTable<RemoteStrike *, RemoteStrike *, SkTHashSet<RemoteStrike *, SkGoodHash>::Traits>::Slot"*
  %20 = getelementptr inbounds %"struct.SkTHashTable<RemoteStrike *, RemoteStrike *, SkTHashSet<RemoteStrike *, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<RemoteStrike *, RemoteStrike *, SkTHashSet<RemoteStrike *, SkGoodHash>::Traits>::Slot"* %19, i64 %13
  %21 = shl nsw i64 %13, 4
  %22 = add nsw i64 %21, -16
  %23 = lshr exact i64 %22, 4
  %24 = add nuw nsw i64 %23, 1
  %25 = and i64 %24, 7
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %12, %27
  %28 = phi %"struct.SkTHashTable<RemoteStrike *, RemoteStrike *, SkTHashSet<RemoteStrike *, SkGoodHash>::Traits>::Slot"* [ %32, %27 ], [ %19, %12 ]
  %29 = phi i64 [ %33, %27 ], [ %25, %12 ]
  %30 = getelementptr inbounds %"struct.SkTHashTable<RemoteStrike *, RemoteStrike *, SkTHashSet<RemoteStrike *, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<RemoteStrike *, RemoteStrike *, SkTHashSet<RemoteStrike *, SkGoodHash>::Traits>::Slot"* %28, i64 0, i32 0
  store %class.RemoteStrike* null, %class.RemoteStrike** %30, align 8
  %31 = getelementptr inbounds %"struct.SkTHashTable<RemoteStrike *, RemoteStrike *, SkTHashSet<RemoteStrike *, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<RemoteStrike *, RemoteStrike *, SkTHashSet<RemoteStrike *, SkGoodHash>::Traits>::Slot"* %28, i64 0, i32 1
  store i32 0, i32* %31, align 8
  %32 = getelementptr inbounds %"struct.SkTHashTable<RemoteStrike *, RemoteStrike *, SkTHashSet<RemoteStrike *, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<RemoteStrike *, RemoteStrike *, SkTHashSet<RemoteStrike *, SkGoodHash>::Traits>::Slot"* %28, i64 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !81

35:                                               ; preds = %27, %12
  %36 = phi %"struct.SkTHashTable<RemoteStrike *, RemoteStrike *, SkTHashSet<RemoteStrike *, SkGoodHash>::Traits>::Slot"* [ %19, %12 ], [ %32, %27 ]
  %37 = icmp ult i64 %22, 112
  br i1 %37, label %58, label %38

38:                                               ; preds = %35, %38
  %39 = phi %"struct.SkTHashTable<RemoteStrike *, RemoteStrike *, SkTHashSet<RemoteStrike *, SkGoodHash>::Traits>::Slot"* [ %56, %38 ], [ %36, %35 ]
  %40 = getelementptr inbounds %"struct.SkTHashTable<RemoteStrike *, RemoteStrike *, SkTHashSet<RemoteStrike *, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<RemoteStrike *, RemoteStrike *, SkTHashSet<RemoteStrike *, SkGoodHash>::Traits>::Slot"* %39, i64 0, i32 0
  store %class.RemoteStrike* null, %class.RemoteStrike** %40, align 8
  %41 = getelementptr inbounds %"struct.SkTHashTable<RemoteStrike *, RemoteStrike *, SkTHashSet<RemoteStrike *, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<RemoteStrike *, RemoteStrike *, SkTHashSet<RemoteStrike *, SkGoodHash>::Traits>::Slot"* %39, i64 0, i32 1
  store i32 0, i32* %41, align 8
  %42 = getelementptr inbounds %"struct.SkTHashTable<RemoteStrike *, RemoteStrike *, SkTHashSet<RemoteStrike *, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<RemoteStrike *, RemoteStrike *, SkTHashSet<RemoteStrike *, SkGoodHash>::Traits>::Slot"* %39, i64 1, i32 0
  store %class.RemoteStrike* null, %class.RemoteStrike** %42, align 8
  %43 = getelementptr inbounds %"struct.SkTHashTable<RemoteStrike *, RemoteStrike *, SkTHashSet<RemoteStrike *, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<RemoteStrike *, RemoteStrike *, SkTHashSet<RemoteStrike *, SkGoodHash>::Traits>::Slot"* %39, i64 1, i32 1
  store i32 0, i32* %43, align 8
  %44 = getelementptr inbounds %"struct.SkTHashTable<RemoteStrike *, RemoteStrike *, SkTHashSet<RemoteStrike *, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<RemoteStrike *, RemoteStrike *, SkTHashSet<RemoteStrike *, SkGoodHash>::Traits>::Slot"* %39, i64 2, i32 0
  store %class.RemoteStrike* null, %class.RemoteStrike** %44, align 8
  %45 = getelementptr inbounds %"struct.SkTHashTable<RemoteStrike *, RemoteStrike *, SkTHashSet<RemoteStrike *, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<RemoteStrike *, RemoteStrike *, SkTHashSet<RemoteStrike *, SkGoodHash>::Traits>::Slot"* %39, i64 2, i32 1
  store i32 0, i32* %45, align 8
  %46 = getelementptr inbounds %"struct.SkTHashTable<RemoteStrike *, RemoteStrike *, SkTHashSet<RemoteStrike *, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<RemoteStrike *, RemoteStrike *, SkTHashSet<RemoteStrike *, SkGoodHash>::Traits>::Slot"* %39, i64 3, i32 0
  store %class.RemoteStrike* null, %class.RemoteStrike** %46, align 8
  %47 = getelementptr inbounds %"struct.SkTHashTable<RemoteStrike *, RemoteStrike *, SkTHashSet<RemoteStrike *, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<RemoteStrike *, RemoteStrike *, SkTHashSet<RemoteStrike *, SkGoodHash>::Traits>::Slot"* %39, i64 3, i32 1
  store i32 0, i32* %47, align 8
  %48 = getelementptr inbounds %"struct.SkTHashTable<RemoteStrike *, RemoteStrike *, SkTHashSet<RemoteStrike *, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<RemoteStrike *, RemoteStrike *, SkTHashSet<RemoteStrike *, SkGoodHash>::Traits>::Slot"* %39, i64 4, i32 0
  store %class.RemoteStrike* null, %class.RemoteStrike** %48, align 8
  %49 = getelementptr inbounds %"struct.SkTHashTable<RemoteStrike *, RemoteStrike *, SkTHashSet<RemoteStrike *, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<RemoteStrike *, RemoteStrike *, SkTHashSet<RemoteStrike *, SkGoodHash>::Traits>::Slot"* %39, i64 4, i32 1
  store i32 0, i32* %49, align 8
  %50 = getelementptr inbounds %"struct.SkTHashTable<RemoteStrike *, RemoteStrike *, SkTHashSet<RemoteStrike *, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<RemoteStrike *, RemoteStrike *, SkTHashSet<RemoteStrike *, SkGoodHash>::Traits>::Slot"* %39, i64 5, i32 0
  store %class.RemoteStrike* null, %class.RemoteStrike** %50, align 8
  %51 = getelementptr inbounds %"struct.SkTHashTable<RemoteStrike *, RemoteStrike *, SkTHashSet<RemoteStrike *, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<RemoteStrike *, RemoteStrike *, SkTHashSet<RemoteStrike *, SkGoodHash>::Traits>::Slot"* %39, i64 5, i32 1
  store i32 0, i32* %51, align 8
  %52 = getelementptr inbounds %"struct.SkTHashTable<RemoteStrike *, RemoteStrike *, SkTHashSet<RemoteStrike *, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<RemoteStrike *, RemoteStrike *, SkTHashSet<RemoteStrike *, SkGoodHash>::Traits>::Slot"* %39, i64 6, i32 0
  store %class.RemoteStrike* null, %class.RemoteStrike** %52, align 8
  %53 = getelementptr inbounds %"struct.SkTHashTable<RemoteStrike *, RemoteStrike *, SkTHashSet<RemoteStrike *, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<RemoteStrike *, RemoteStrike *, SkTHashSet<RemoteStrike *, SkGoodHash>::Traits>::Slot"* %39, i64 6, i32 1
  store i32 0, i32* %53, align 8
  %54 = getelementptr inbounds %"struct.SkTHashTable<RemoteStrike *, RemoteStrike *, SkTHashSet<RemoteStrike *, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<RemoteStrike *, RemoteStrike *, SkTHashSet<RemoteStrike *, SkGoodHash>::Traits>::Slot"* %39, i64 7, i32 0
  store %class.RemoteStrike* null, %class.RemoteStrike** %54, align 8
  %55 = getelementptr inbounds %"struct.SkTHashTable<RemoteStrike *, RemoteStrike *, SkTHashSet<RemoteStrike *, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<RemoteStrike *, RemoteStrike *, SkTHashSet<RemoteStrike *, SkGoodHash>::Traits>::Slot"* %39, i64 7, i32 1
  store i32 0, i32* %55, align 8
  %56 = getelementptr inbounds %"struct.SkTHashTable<RemoteStrike *, RemoteStrike *, SkTHashSet<RemoteStrike *, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<RemoteStrike *, RemoteStrike *, SkTHashSet<RemoteStrike *, SkGoodHash>::Traits>::Slot"* %39, i64 8
  %57 = icmp eq %"struct.SkTHashTable<RemoteStrike *, RemoteStrike *, SkTHashSet<RemoteStrike *, SkGoodHash>::Traits>::Slot"* %56, %20
  br i1 %57, label %58, label %38

58:                                               ; preds = %38, %35
  %59 = ptrtoint i8* %18 to i64
  %60 = load %"struct.SkTHashTable<RemoteStrike *, RemoteStrike *, SkTHashSet<RemoteStrike *, SkGoodHash>::Traits>::Slot"*, %"struct.SkTHashTable<RemoteStrike *, RemoteStrike *, SkTHashSet<RemoteStrike *, SkGoodHash>::Traits>::Slot"** %7, align 8
  %61 = icmp eq %"struct.SkTHashTable<RemoteStrike *, RemoteStrike *, SkTHashSet<RemoteStrike *, SkGoodHash>::Traits>::Slot"* %60, null
  store i64 %59, i64* %8, align 8
  br i1 %61, label %64, label %62

62:                                               ; preds = %58
  %63 = bitcast %"struct.SkTHashTable<RemoteStrike *, RemoteStrike *, SkTHashSet<RemoteStrike *, SkGoodHash>::Traits>::Slot"* %60 to i8*
  tail call void @_ZdaPv(i8* %63) #18
  br label %64

64:                                               ; preds = %62, %58, %11
  %65 = icmp sgt i32 %4, 0
  br i1 %65, label %66, label %70

66:                                               ; preds = %64
  %67 = inttoptr i64 %9 to %"struct.SkTHashTable<RemoteStrike *, RemoteStrike *, SkTHashSet<RemoteStrike *, SkGoodHash>::Traits>::Slot"*
  %68 = getelementptr inbounds %class.SkTHashTable.110, %class.SkTHashTable.110* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %69 = zext i32 %4 to i64
  br label %75

70:                                               ; preds = %122, %64
  %71 = icmp eq i64 %9, 0
  br i1 %71, label %74, label %72

72:                                               ; preds = %70
  %73 = inttoptr i64 %9 to i8*
  tail call void @_ZdaPv(i8* %73) #18
  br label %74

74:                                               ; preds = %70, %72
  ret void

75:                                               ; preds = %122, %66
  %76 = phi i64 [ 0, %66 ], [ %123, %122 ]
  %77 = getelementptr inbounds %"struct.SkTHashTable<RemoteStrike *, RemoteStrike *, SkTHashSet<RemoteStrike *, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<RemoteStrike *, RemoteStrike *, SkTHashSet<RemoteStrike *, SkGoodHash>::Traits>::Slot"* %67, i64 %76, i32 1
  %78 = load i32, i32* %77, align 8
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %122, label %80

80:                                               ; preds = %75
  %81 = getelementptr inbounds %"struct.SkTHashTable<RemoteStrike *, RemoteStrike *, SkTHashSet<RemoteStrike *, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<RemoteStrike *, RemoteStrike *, SkTHashSet<RemoteStrike *, SkGoodHash>::Traits>::Slot"* %67, i64 %76, i32 0
  %82 = load i32 (i8*, i64, i32)*, i32 (i8*, i64, i32)** @_ZN6SkOpts7hash_fnE, align 8
  %83 = bitcast %class.RemoteStrike** %81 to i8*
  %84 = tail call i32 %82(i8* %83, i64 8, i32 0) #16
  %85 = icmp eq i32 %84, 0
  %86 = select i1 %85, i32 1, i32 %84
  %87 = load i32, i32* %3, align 4
  %88 = icmp sgt i32 %87, 0
  br i1 %88, label %89, label %122

89:                                               ; preds = %80
  %90 = add nsw i32 %87, -1
  %91 = and i32 %86, %90
  %92 = load %"struct.SkTHashTable<RemoteStrike *, RemoteStrike *, SkTHashSet<RemoteStrike *, SkGoodHash>::Traits>::Slot"*, %"struct.SkTHashTable<RemoteStrike *, RemoteStrike *, SkTHashSet<RemoteStrike *, SkGoodHash>::Traits>::Slot"** %68, align 8
  %93 = load %class.RemoteStrike*, %class.RemoteStrike** %81, align 8
  %94 = ptrtoint %class.RemoteStrike* %93 to i64
  br label %95

95:                                               ; preds = %115, %89
  %96 = phi i32 [ 0, %89 ], [ %120, %115 ]
  %97 = phi i32 [ %91, %89 ], [ %119, %115 ]
  %98 = sext i32 %97 to i64
  %99 = getelementptr inbounds %"struct.SkTHashTable<RemoteStrike *, RemoteStrike *, SkTHashSet<RemoteStrike *, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<RemoteStrike *, RemoteStrike *, SkTHashSet<RemoteStrike *, SkGoodHash>::Traits>::Slot"* %92, i64 %98
  %100 = getelementptr inbounds %"struct.SkTHashTable<RemoteStrike *, RemoteStrike *, SkTHashSet<RemoteStrike *, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<RemoteStrike *, RemoteStrike *, SkTHashSet<RemoteStrike *, SkGoodHash>::Traits>::Slot"* %92, i64 %98, i32 1
  %101 = load i32, i32* %100, align 8
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %103, label %107

103:                                              ; preds = %95
  %104 = bitcast %"struct.SkTHashTable<RemoteStrike *, RemoteStrike *, SkTHashSet<RemoteStrike *, SkGoodHash>::Traits>::Slot"* %99 to i64*
  store i64 %94, i64* %104, align 8
  store i32 %86, i32* %100, align 8
  %105 = load i32, i32* %5, align 8
  %106 = add nsw i32 %105, 1
  store i32 %106, i32* %5, align 8
  br label %122

107:                                              ; preds = %95
  %108 = icmp eq i32 %86, %101
  br i1 %108, label %109, label %115

109:                                              ; preds = %107
  %110 = getelementptr inbounds %"struct.SkTHashTable<RemoteStrike *, RemoteStrike *, SkTHashSet<RemoteStrike *, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<RemoteStrike *, RemoteStrike *, SkTHashSet<RemoteStrike *, SkGoodHash>::Traits>::Slot"* %99, i64 0, i32 0
  %111 = load %class.RemoteStrike*, %class.RemoteStrike** %110, align 8
  %112 = icmp eq %class.RemoteStrike* %93, %111
  br i1 %112, label %113, label %115

113:                                              ; preds = %109
  %114 = bitcast %"struct.SkTHashTable<RemoteStrike *, RemoteStrike *, SkTHashSet<RemoteStrike *, SkGoodHash>::Traits>::Slot"* %99 to i64*
  store i64 %94, i64* %114, align 8
  br label %122

115:                                              ; preds = %109, %107
  %116 = add nsw i32 %97, -1
  %117 = icmp slt i32 %97, 1
  %118 = select i1 %117, i32 %87, i32 0
  %119 = add nsw i32 %116, %118
  %120 = add nuw nsw i32 %96, 1
  %121 = icmp eq i32 %120, %87
  br i1 %121, label %122, label %95

122:                                              ; preds = %115, %113, %103, %80, %75
  %123 = add nuw nsw i64 %76, 1
  %124 = icmp eq i64 %123, %69
  br i1 %124, label %70, label %75
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12SkTHashTableIjjN10SkTHashSetIj10SkGoodHashE6TraitsEE6resizeEi(%class.SkTHashTable.93*, i32) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %class.SkTHashTable.93, %class.SkTHashTable.93* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %class.SkTHashTable.93, %class.SkTHashTable.93* %0, i64 0, i32 0
  store i32 0, i32* %5, align 8
  store i32 %1, i32* %3, align 4
  %6 = getelementptr inbounds %class.SkTHashTable.93, %class.SkTHashTable.93* %0, i64 0, i32 2
  %7 = getelementptr inbounds %class.SkAutoTArray.94, %class.SkAutoTArray.94* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = bitcast %class.SkAutoTArray.94* %6 to i64*
  %9 = load i64, i64* %8, align 8
  store %"struct.SkTHashTable<unsigned int, unsigned int, SkTHashSet<unsigned int, SkGoodHash>::Traits>::Slot"* null, %"struct.SkTHashTable<unsigned int, unsigned int, SkTHashSet<unsigned int, SkGoodHash>::Traits>::Slot"** %7, align 8
  %10 = icmp eq i32 %1, 0
  br i1 %10, label %20, label %11

11:                                               ; preds = %2
  %12 = sext i32 %1 to i64
  %13 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %12, i64 8) #16
  %14 = extractvalue { i64, i1 } %13, 1
  %15 = extractvalue { i64, i1 } %13, 0
  %16 = select i1 %14, i64 -1, i64 %15
  %17 = tail call i8* @_Znam(i64 %16) #18
  %18 = shl nsw i64 %12, 3
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %17, i8 0, i64 %18, i1 false) #16
  %19 = ptrtoint i8* %17 to i64
  br label %20

20:                                               ; preds = %2, %11
  %21 = phi i64 [ %19, %11 ], [ 0, %2 ]
  store i64 %21, i64* %8, align 8
  %22 = icmp sgt i32 %4, 0
  br i1 %22, label %23, label %27

23:                                               ; preds = %20
  %24 = inttoptr i64 %9 to %"struct.SkTHashTable<unsigned int, unsigned int, SkTHashSet<unsigned int, SkGoodHash>::Traits>::Slot"*
  %25 = getelementptr inbounds %class.SkTHashTable.93, %class.SkTHashTable.93* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %26 = zext i32 %4 to i64
  br label %32

27:                                               ; preds = %84, %20
  %28 = icmp eq i64 %9, 0
  br i1 %28, label %31, label %29

29:                                               ; preds = %27
  %30 = inttoptr i64 %9 to i8*
  tail call void @_ZdaPv(i8* %30) #18
  br label %31

31:                                               ; preds = %27, %29
  ret void

32:                                               ; preds = %84, %23
  %33 = phi i64 [ 0, %23 ], [ %85, %84 ]
  %34 = getelementptr inbounds %"struct.SkTHashTable<unsigned int, unsigned int, SkTHashSet<unsigned int, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<unsigned int, unsigned int, SkTHashSet<unsigned int, SkGoodHash>::Traits>::Slot"* %24, i64 %33, i32 1
  %35 = load i32, i32* %34, align 4
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %84, label %37

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"struct.SkTHashTable<unsigned int, unsigned int, SkTHashSet<unsigned int, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<unsigned int, unsigned int, SkTHashSet<unsigned int, SkGoodHash>::Traits>::Slot"* %24, i64 %33, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = lshr i32 %39, 16
  %41 = xor i32 %40, %39
  %42 = mul i32 %41, -2048144789
  %43 = lshr i32 %42, 13
  %44 = xor i32 %43, %42
  %45 = mul i32 %44, -1028477387
  %46 = lshr i32 %45, 16
  %47 = xor i32 %46, %45
  %48 = icmp eq i32 %47, 0
  %49 = select i1 %48, i32 1, i32 %47
  %50 = load i32, i32* %3, align 4
  %51 = icmp sgt i32 %50, 0
  br i1 %51, label %52, label %84

52:                                               ; preds = %37
  %53 = add nsw i32 %50, -1
  %54 = and i32 %49, %53
  %55 = load %"struct.SkTHashTable<unsigned int, unsigned int, SkTHashSet<unsigned int, SkGoodHash>::Traits>::Slot"*, %"struct.SkTHashTable<unsigned int, unsigned int, SkTHashSet<unsigned int, SkGoodHash>::Traits>::Slot"** %25, align 8
  br label %56

56:                                               ; preds = %77, %52
  %57 = phi i32 [ 0, %52 ], [ %82, %77 ]
  %58 = phi i32 [ %54, %52 ], [ %81, %77 ]
  %59 = sext i32 %58 to i64
  %60 = getelementptr inbounds %"struct.SkTHashTable<unsigned int, unsigned int, SkTHashSet<unsigned int, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<unsigned int, unsigned int, SkTHashSet<unsigned int, SkGoodHash>::Traits>::Slot"* %55, i64 %59
  %61 = getelementptr inbounds %"struct.SkTHashTable<unsigned int, unsigned int, SkTHashSet<unsigned int, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<unsigned int, unsigned int, SkTHashSet<unsigned int, SkGoodHash>::Traits>::Slot"* %55, i64 %59, i32 1
  %62 = load i32, i32* %61, align 4
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %69

64:                                               ; preds = %56
  %65 = getelementptr inbounds %"struct.SkTHashTable<unsigned int, unsigned int, SkTHashSet<unsigned int, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<unsigned int, unsigned int, SkTHashSet<unsigned int, SkGoodHash>::Traits>::Slot"* %55, i64 %59, i32 1
  %66 = getelementptr inbounds %"struct.SkTHashTable<unsigned int, unsigned int, SkTHashSet<unsigned int, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<unsigned int, unsigned int, SkTHashSet<unsigned int, SkGoodHash>::Traits>::Slot"* %60, i64 0, i32 0
  store i32 %39, i32* %66, align 4
  store i32 %49, i32* %65, align 4
  %67 = load i32, i32* %5, align 8
  %68 = add nsw i32 %67, 1
  store i32 %68, i32* %5, align 8
  br label %84

69:                                               ; preds = %56
  %70 = icmp eq i32 %49, %62
  br i1 %70, label %71, label %77

71:                                               ; preds = %69
  %72 = getelementptr inbounds %"struct.SkTHashTable<unsigned int, unsigned int, SkTHashSet<unsigned int, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<unsigned int, unsigned int, SkTHashSet<unsigned int, SkGoodHash>::Traits>::Slot"* %60, i64 0, i32 0
  %73 = load i32, i32* %72, align 4
  %74 = icmp eq i32 %39, %73
  br i1 %74, label %75, label %77

75:                                               ; preds = %71
  %76 = getelementptr inbounds %"struct.SkTHashTable<unsigned int, unsigned int, SkTHashSet<unsigned int, SkGoodHash>::Traits>::Slot", %"struct.SkTHashTable<unsigned int, unsigned int, SkTHashSet<unsigned int, SkGoodHash>::Traits>::Slot"* %60, i64 0, i32 0
  store i32 %39, i32* %76, align 4
  br label %84

77:                                               ; preds = %71, %69
  %78 = add nsw i32 %58, -1
  %79 = icmp slt i32 %58, 1
  %80 = select i1 %79, i32 %50, i32 0
  %81 = add nsw i32 %78, %80
  %82 = add nuw nsw i32 %57, 1
  %83 = icmp eq i32 %82, %50
  br i1 %83, label %84, label %56

84:                                               ; preds = %77, %75, %64, %37, %32
  %85 = add nuw nsw i64 %33, 1
  %86 = icmp eq i64 %85, %26
  br i1 %86, label %27, label %32
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPK12SkDescriptorNS_10unique_ptrI12RemoteStrikeNS_14default_deleteIS6_EEEEEENS_22__unordered_map_hasherIS4_SA_6MapOpsSC_Lb1EEENS_21__unordered_map_equalIS4_SA_SC_SC_Lb1EEENS_9allocatorISA_EEE25__emplace_unique_key_argsIS4_JRKNS_21piecewise_construct_tENS_5tupleIJRKS4_EEENSN_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISA_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"*, %class.SkDescriptor** dereferenceable(8), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple.318"* dereferenceable(8), %"class.std::__1::tuple.273"* dereferenceable(1)) local_unnamed_addr #1 comdat align 2 {
  %6 = load %class.SkDescriptor*, %class.SkDescriptor** %1, align 8
  %7 = getelementptr inbounds %class.SkDescriptor, %class.SkDescriptor* %6, i64 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %58, label %13

13:                                               ; preds = %5
  %14 = tail call i64 @llvm.ctpop.i64(i64 %11) #16, !range !66
  %15 = icmp ugt i64 %14, 1
  br i1 %15, label %19, label %16

16:                                               ; preds = %13
  %17 = add i64 %11, 4294967295
  %18 = and i64 %17, %9
  br label %23

19:                                               ; preds = %13
  %20 = icmp ugt i64 %11, %9
  br i1 %20, label %23, label %21

21:                                               ; preds = %19
  %22 = urem i64 %9, %11
  br label %23

23:                                               ; preds = %16, %19, %21
  %24 = phi i64 [ %18, %16 ], [ %22, %21 ], [ %9, %19 ]
  %25 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %26 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %25, align 8
  %27 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %26, i64 %24
  %28 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %27, align 8
  %29 = icmp eq %"struct.std::__1::__hash_node_base"* %28, null
  br i1 %29, label %58, label %30

30:                                               ; preds = %23
  %31 = add i64 %11, -1
  br label %32

32:                                               ; preds = %30, %52
  %33 = phi %"struct.std::__1::__hash_node_base"* [ %35, %52 ], [ %28, %30 ]
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %33, i64 0, i32 0
  %35 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %34, align 8
  %36 = icmp eq %"struct.std::__1::__hash_node_base"* %35, null
  br i1 %36, label %58, label %37

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %35, i64 1
  %39 = bitcast %"struct.std::__1::__hash_node_base"* %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = icmp eq i64 %40, %9
  br i1 %41, label %52, label %42

42:                                               ; preds = %37
  br i1 %15, label %45, label %43

43:                                               ; preds = %42
  %44 = and i64 %40, %31
  br label %49

45:                                               ; preds = %42
  %46 = icmp ult i64 %40, %11
  br i1 %46, label %49, label %47

47:                                               ; preds = %45
  %48 = urem i64 %40, %11
  br label %49

49:                                               ; preds = %43, %45, %47
  %50 = phi i64 [ %44, %43 ], [ %48, %47 ], [ %40, %45 ]
  %51 = icmp eq i64 %50, %24
  br i1 %51, label %52, label %58

52:                                               ; preds = %37, %49
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %35, i64 2
  %54 = bitcast %"struct.std::__1::__hash_node_base"* %53 to %class.SkDescriptor**
  %55 = load %class.SkDescriptor*, %class.SkDescriptor** %54, align 8
  %56 = load %class.SkDescriptor*, %class.SkDescriptor** %1, align 8
  %57 = tail call zeroext i1 @_ZNK12SkDescriptoreqERKS_(%class.SkDescriptor* %55, %class.SkDescriptor* dereferenceable(12) %56) #16
  br i1 %57, label %149, label %32

58:                                               ; preds = %32, %49, %23, %5
  %59 = phi i64 [ %24, %23 ], [ -6148914691236517206, %5 ], [ %24, %49 ], [ %24, %32 ]
  %60 = tail call i8* @_Znwm(i64 32) #18, !noalias !83
  %61 = getelementptr inbounds i8, i8* %60, i64 16
  %62 = bitcast %"class.std::__1::tuple.318"* %3 to i64**
  %63 = load i64*, i64** %62, align 8, !noalias !83
  %64 = load i64, i64* %63, align 8, !noalias !83
  %65 = bitcast i8* %61 to i64*
  store i64 %64, i64* %65, align 8, !noalias !83
  %66 = getelementptr inbounds i8, i8* %60, i64 24
  %67 = bitcast i8* %66 to i64*
  store i64 0, i64* %67, align 8, !noalias !83
  %68 = getelementptr inbounds i8, i8* %60, i64 8
  %69 = bitcast i8* %68 to i64*
  store i64 %9, i64* %69, align 8, !noalias !83
  %70 = bitcast i8* %60 to %"struct.std::__1::__hash_node_base"**
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %70, align 8, !noalias !83
  %71 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %72 = load i64, i64* %71, align 8
  %73 = add i64 %72, 1
  %74 = uitofp i64 %73 to float
  %75 = uitofp i64 %11 to float
  %76 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %77 = load float, float* %76, align 4
  %78 = fmul float %77, %75
  %79 = fcmp olt float %78, %74
  %80 = or i1 %12, %79
  br i1 %80, label %81, label %104

81:                                               ; preds = %58
  %82 = shl i64 %11, 1
  %83 = icmp ult i64 %11, 3
  %84 = tail call i64 @llvm.ctpop.i64(i64 %11) #16, !range !66
  %85 = icmp ugt i64 %84, 1
  %86 = or i1 %83, %85
  %87 = zext i1 %86 to i64
  %88 = or i64 %82, %87
  %89 = fdiv float %74, %77
  %90 = tail call float @llvm.ceil.f32(float %89) #16
  %91 = fptoui float %90 to i64
  %92 = icmp ult i64 %88, %91
  %93 = select i1 %92, i64 %91, i64 %88
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPK12SkDescriptorNS_10unique_ptrI12RemoteStrikeNS_14default_deleteIS6_EEEEEENS_22__unordered_map_hasherIS4_SA_6MapOpsSC_Lb1EEENS_21__unordered_map_equalIS4_SA_SC_SC_Lb1EEENS_9allocatorISA_EEE6rehashEm(%"class.std::__1::__hash_table"* %0, i64 %93)
  %94 = load i64, i64* %10, align 8
  %95 = tail call i64 @llvm.ctpop.i64(i64 %94) #16, !range !66
  %96 = icmp ugt i64 %95, 1
  br i1 %96, label %100, label %97

97:                                               ; preds = %81
  %98 = add i64 %94, 4294967295
  %99 = and i64 %98, %9
  br label %104

100:                                              ; preds = %81
  %101 = icmp ugt i64 %94, %9
  br i1 %101, label %104, label %102

102:                                              ; preds = %100
  %103 = urem i64 %9, %94
  br label %104

104:                                              ; preds = %102, %100, %97, %58
  %105 = phi i64 [ %11, %58 ], [ %94, %97 ], [ %94, %100 ], [ %94, %102 ]
  %106 = phi i64 [ %59, %58 ], [ %99, %97 ], [ %9, %100 ], [ %103, %102 ]
  %107 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %108 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %107, align 8
  %109 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %108, i64 %106
  %110 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %109, align 8
  %111 = icmp eq %"struct.std::__1::__hash_node_base"* %110, null
  br i1 %111, label %112, label %138

112:                                              ; preds = %104
  %113 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %114 = bitcast %"struct.std::__1::__hash_node_base"* %113 to i64*
  %115 = load i64, i64* %114, align 8
  %116 = bitcast i8* %60 to i64*
  store i64 %115, i64* %116, align 8
  %117 = bitcast %"struct.std::__1::__hash_node_base"* %113 to i8**
  store i8* %60, i8** %117, align 8
  store %"struct.std::__1::__hash_node_base"* %113, %"struct.std::__1::__hash_node_base"** %109, align 8
  %118 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %70, align 8
  %119 = icmp eq %"struct.std::__1::__hash_node_base"* %118, null
  br i1 %119, label %145, label %120

120:                                              ; preds = %112
  %121 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %118, i64 1
  %122 = bitcast %"struct.std::__1::__hash_node_base"* %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = tail call i64 @llvm.ctpop.i64(i64 %105) #16, !range !66
  %125 = icmp ugt i64 %124, 1
  br i1 %125, label %129, label %126

126:                                              ; preds = %120
  %127 = add i64 %105, -1
  %128 = and i64 %123, %127
  br label %133

129:                                              ; preds = %120
  %130 = icmp ult i64 %123, %105
  br i1 %130, label %133, label %131

131:                                              ; preds = %129
  %132 = urem i64 %123, %105
  br label %133

133:                                              ; preds = %126, %129, %131
  %134 = phi i64 [ %128, %126 ], [ %132, %131 ], [ %123, %129 ]
  %135 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %107, align 8
  %136 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %135, i64 %134
  %137 = bitcast %"struct.std::__1::__hash_node_base"** %136 to i8**
  br label %143

138:                                              ; preds = %104
  %139 = bitcast %"struct.std::__1::__hash_node_base"* %110 to i64*
  %140 = load i64, i64* %139, align 8
  %141 = bitcast i8* %60 to i64*
  store i64 %140, i64* %141, align 8
  %142 = bitcast %"struct.std::__1::__hash_node_base"* %110 to i8**
  br label %143

143:                                              ; preds = %133, %138
  %144 = phi i8** [ %142, %138 ], [ %137, %133 ]
  store i8* %60, i8** %144, align 8
  br label %145

145:                                              ; preds = %143, %112
  %146 = bitcast i8* %60 to %"struct.std::__1::__hash_node_base"*
  %147 = load i64, i64* %71, align 8
  %148 = add i64 %147, 1
  store i64 %148, i64* %71, align 8
  br label %149

149:                                              ; preds = %52, %145
  %150 = phi i8 [ 1, %145 ], [ 0, %52 ]
  %151 = phi %"struct.std::__1::__hash_node_base"* [ %146, %145 ], [ %35, %52 ]
  %152 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } undef, %"struct.std::__1::__hash_node_base"* %151, 0
  %153 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } %152, i8 %150, 1
  ret { %"struct.std::__1::__hash_node_base"*, i8 } %153
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPK12SkDescriptorNS_10unique_ptrI12RemoteStrikeNS_14default_deleteIS6_EEEEEENS_22__unordered_map_hasherIS4_SA_6MapOpsSC_Lb1EEENS_21__unordered_map_equalIS4_SA_SC_SC_Lb1EEENS_9allocatorISA_EEE6rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #1 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !66
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #16
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPK12SkDescriptorNS_10unique_ptrI12RemoteStrikeNS_14default_deleteIS6_EEEEEENS_22__unordered_map_hasherIS4_SA_6MapOpsSC_Lb1EEENS_21__unordered_map_equalIS4_SA_SC_SC_Lb1EEENS_9allocatorISA_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #16, !range !66
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #16
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #16, !range !66
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #16
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPK12SkDescriptorNS_10unique_ptrI12RemoteStrikeNS_14default_deleteIS6_EEEEEENS_22__unordered_map_hasherIS4_SA_6MapOpsSC_Lb1EEENS_21__unordered_map_equalIS4_SA_SC_SC_Lb1EEENS_9allocatorISA_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPK12SkDescriptorNS_10unique_ptrI12RemoteStrikeNS_14default_deleteIS6_EEEEEENS_22__unordered_map_hasherIS4_SA_6MapOpsSC_Lb1EEENS_21__unordered_map_equalIS4_SA_SC_SC_Lb1EEENS_9allocatorISA_EEE8__rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %145, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #17
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #18
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #18
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !86

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base"* %38, null
  br i1 %39, label %153, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #16, !range !66
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base"* %36, %"struct.std::__1::__hash_node_base"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base"* %75, null
  br i1 %76, label %153, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %139
  %80 = phi %"struct.std::__1::__hash_node_base"* [ %75, %77 ], [ %143, %139 ]
  %81 = phi i64 [ %71, %77 ], [ %141, %139 ]
  %82 = phi %"struct.std::__1::__hash_node_base"* [ %38, %77 ], [ %140, %139 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %139, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base"* %98, null
  br i1 %99, label %112, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 0, i32 0
  %102 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %101, align 8
  %103 = icmp eq %"struct.std::__1::__hash_node_base"* %102, null
  br i1 %103, label %125, label %104

104:                                              ; preds = %100
  %105 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 2
  %106 = bitcast %"struct.std::__1::__hash_node_base"* %105 to %class.SkDescriptor**
  %107 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %102, i64 2
  %108 = load %class.SkDescriptor*, %class.SkDescriptor** %106, align 8
  %109 = bitcast %"struct.std::__1::__hash_node_base"* %107 to %class.SkDescriptor**
  %110 = load %class.SkDescriptor*, %class.SkDescriptor** %109, align 8
  %111 = tail call zeroext i1 @_ZNK12SkDescriptoreqERKS_(%class.SkDescriptor* %108, %class.SkDescriptor* dereferenceable(12) %110) #16
  br i1 %111, label %119, label %125

112:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base"* %82, %"struct.std::__1::__hash_node_base"** %97, align 8
  br label %139

113:                                              ; preds = %119
  %114 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %123, i64 2
  %115 = load %class.SkDescriptor*, %class.SkDescriptor** %106, align 8
  %116 = bitcast %"struct.std::__1::__hash_node_base"* %114 to %class.SkDescriptor**
  %117 = load %class.SkDescriptor*, %class.SkDescriptor** %116, align 8
  %118 = tail call zeroext i1 @_ZNK12SkDescriptoreqERKS_(%class.SkDescriptor* %115, %class.SkDescriptor* dereferenceable(12) %117) #16
  br i1 %118, label %119, label %125

119:                                              ; preds = %104, %113
  %120 = phi %"struct.std::__1::__hash_node_base"** [ %122, %113 ], [ %101, %104 ]
  %121 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %120, align 8
  %122 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %121, i64 0, i32 0
  %123 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %122, align 8
  %124 = icmp eq %"struct.std::__1::__hash_node_base"* %123, null
  br i1 %124, label %125, label %113

125:                                              ; preds = %119, %113, %104, %100
  %126 = phi %"struct.std::__1::__hash_node_base"* [ %80, %100 ], [ %80, %104 ], [ %121, %113 ], [ %121, %119 ]
  %127 = bitcast %"struct.std::__1::__hash_node_base"* %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %"struct.std::__1::__hash_node_base"* %82 to i64*
  store i64 %128, i64* %129, align 8
  %130 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %130, i64 %93
  %132 = bitcast %"struct.std::__1::__hash_node_base"** %131 to i64**
  %133 = load i64*, i64** %132, align 8
  %134 = load i64, i64* %133, align 8
  store i64 %134, i64* %127, align 8
  %135 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %136 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %135, i64 %93
  %137 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %136, align 8
  %138 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %137, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base"* %80, %"struct.std::__1::__hash_node_base"** %138, align 8
  br label %139

139:                                              ; preds = %92, %125, %112
  %140 = phi %"struct.std::__1::__hash_node_base"* [ %80, %112 ], [ %82, %125 ], [ %80, %92 ]
  %141 = phi i64 [ %93, %112 ], [ %81, %125 ], [ %81, %92 ]
  %142 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %140, i64 0, i32 0
  %143 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %142, align 8
  %144 = icmp eq %"struct.std::__1::__hash_node_base"* %143, null
  br i1 %144, label %153, label %79

145:                                              ; preds = %2
  %146 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %147 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %146, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %146, align 8
  %148 = icmp eq %"struct.std::__1::__hash_node_base"** %147, null
  br i1 %148, label %151, label %149

149:                                              ; preds = %145
  %150 = bitcast %"struct.std::__1::__hash_node_base"** %147 to i8*
  tail call void @_ZdlPv(i8* %150) #18
  br label %151

151:                                              ; preds = %145, %149
  %152 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %152, align 8
  br label %153

153:                                              ; preds = %139, %70, %35, %151
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #14

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #14

declare void @_ZN8SkCanvasC1E5sk_spI12SkBaseDeviceE(%class.SkCanvas*, %class.sk_sp.159*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN23DiscardableStrikePinnerD2Ev(%class.DiscardableStrikePinner*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %class.DiscardableStrikePinner, %class.DiscardableStrikePinner* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV23DiscardableStrikePinner, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.DiscardableStrikePinner, %class.DiscardableStrikePinner* %0, i64 0, i32 2, i32 0
  %4 = load %"class.SkStrikeClient::DiscardableHandleManager"*, %"class.SkStrikeClient::DiscardableHandleManager"** %3, align 8
  %5 = icmp eq %"class.SkStrikeClient::DiscardableHandleManager"* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.SkStrikeClient::DiscardableHandleManager", %"class.SkStrikeClient::DiscardableHandleManager"* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %"class.SkStrikeClient::DiscardableHandleManager"* %4 to %class.SkRefCntBase*
  %12 = bitcast %"class.SkStrikeClient::DiscardableHandleManager"* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #16
  br label %16

16:                                               ; preds = %1, %6, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN23DiscardableStrikePinnerD0Ev(%class.DiscardableStrikePinner*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %class.DiscardableStrikePinner, %class.DiscardableStrikePinner* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV23DiscardableStrikePinner, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.DiscardableStrikePinner, %class.DiscardableStrikePinner* %0, i64 0, i32 2, i32 0
  %4 = load %"class.SkStrikeClient::DiscardableHandleManager"*, %"class.SkStrikeClient::DiscardableHandleManager"** %3, align 8
  %5 = icmp eq %"class.SkStrikeClient::DiscardableHandleManager"* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.SkStrikeClient::DiscardableHandleManager", %"class.SkStrikeClient::DiscardableHandleManager"* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %"class.SkStrikeClient::DiscardableHandleManager"* %4 to %class.SkRefCntBase*
  %12 = bitcast %"class.SkStrikeClient::DiscardableHandleManager"* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #16
  br label %16

16:                                               ; preds = %1, %6, %10
  %17 = bitcast %class.DiscardableStrikePinner* %0 to i8*
  tail call void @_ZdlPv(i8* %17) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN23DiscardableStrikePinner9canDeleteEv(%class.DiscardableStrikePinner*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %class.DiscardableStrikePinner, %class.DiscardableStrikePinner* %0, i64 0, i32 2, i32 0
  %3 = load %"class.SkStrikeClient::DiscardableHandleManager"*, %"class.SkStrikeClient::DiscardableHandleManager"** %2, align 8
  %4 = getelementptr inbounds %class.DiscardableStrikePinner, %class.DiscardableStrikePinner* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = bitcast %"class.SkStrikeClient::DiscardableHandleManager"* %3 to i1 (%"class.SkStrikeClient::DiscardableHandleManager"*, i32)***
  %7 = load i1 (%"class.SkStrikeClient::DiscardableHandleManager"*, i32)**, i1 (%"class.SkStrikeClient::DiscardableHandleManager"*, i32)*** %6, align 8
  %8 = getelementptr inbounds i1 (%"class.SkStrikeClient::DiscardableHandleManager"*, i32)*, i1 (%"class.SkStrikeClient::DiscardableHandleManager"*, i32)** %7, i64 3
  %9 = load i1 (%"class.SkStrikeClient::DiscardableHandleManager"*, i32)*, i1 (%"class.SkStrikeClient::DiscardableHandleManager"*, i32)** %8, align 8
  %10 = tail call zeroext i1 %9(%"class.SkStrikeClient::DiscardableHandleManager"* %3, i32 %5) #16
  ret i1 %10
}

declare void @_ZN10SkTypefaceC2ERK11SkFontStyleb(%class.SkTypeface*, %class.SkFontStyle* dereferenceable(4), i1 zeroext) unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN15SkTypefaceProxyD2Ev(%class.SkTypefaceProxy*) unnamed_addr #10 comdat align 2 {
  %2 = getelementptr inbounds %class.SkTypefaceProxy, %class.SkTypefaceProxy* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [28 x i8*] }, { [28 x i8*] }* @_ZTV15SkTypefaceProxy, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkTypefaceProxy, %class.SkTypefaceProxy* %0, i64 0, i32 4, i32 0
  %4 = load %"class.SkStrikeClient::DiscardableHandleManager"*, %"class.SkStrikeClient::DiscardableHandleManager"** %3, align 8
  %5 = icmp eq %"class.SkStrikeClient::DiscardableHandleManager"* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.SkStrikeClient::DiscardableHandleManager", %"class.SkStrikeClient::DiscardableHandleManager"* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %"class.SkStrikeClient::DiscardableHandleManager"* %4 to %class.SkRefCntBase*
  %12 = bitcast %"class.SkStrikeClient::DiscardableHandleManager"* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #16
  br label %16

16:                                               ; preds = %1, %6, %10
  %17 = bitcast %class.SkTypefaceProxy* %0 to %class.SkTypeface*
  tail call void @_ZN10SkTypefaceD2Ev(%class.SkTypeface* %17) #16
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN15SkTypefaceProxyD0Ev(%class.SkTypefaceProxy*) unnamed_addr #10 comdat align 2 {
  %2 = getelementptr inbounds %class.SkTypefaceProxy, %class.SkTypefaceProxy* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [28 x i8*] }, { [28 x i8*] }* @_ZTV15SkTypefaceProxy, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkTypefaceProxy, %class.SkTypefaceProxy* %0, i64 0, i32 4, i32 0
  %4 = load %"class.SkStrikeClient::DiscardableHandleManager"*, %"class.SkStrikeClient::DiscardableHandleManager"** %3, align 8
  %5 = icmp eq %"class.SkStrikeClient::DiscardableHandleManager"* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.SkStrikeClient::DiscardableHandleManager", %"class.SkStrikeClient::DiscardableHandleManager"* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %"class.SkStrikeClient::DiscardableHandleManager"* %4 to %class.SkRefCntBase*
  %12 = bitcast %"class.SkStrikeClient::DiscardableHandleManager"* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #16
  br label %16

16:                                               ; preds = %1, %6, %10
  %17 = bitcast %class.SkTypefaceProxy* %0 to %class.SkTypeface*
  tail call void @_ZN10SkTypefaceD2Ev(%class.SkTypeface* %17) #16
  %18 = bitcast %class.SkTypefaceProxy* %0 to i8*
  tail call void @_ZdlPv(i8* %18) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK12SkWeakRefCnt16internal_disposeEv(%class.SkWeakRefCnt*) unnamed_addr #1 comdat align 2 {
  %2 = bitcast %class.SkWeakRefCnt* %0 to void (%class.SkWeakRefCnt*)***
  %3 = load void (%class.SkWeakRefCnt*)**, void (%class.SkWeakRefCnt*)*** %2, align 8
  %4 = getelementptr inbounds void (%class.SkWeakRefCnt*)*, void (%class.SkWeakRefCnt*)** %3, i64 3
  %5 = load void (%class.SkWeakRefCnt*)*, void (%class.SkWeakRefCnt*)** %4, align 8
  tail call void %5(%class.SkWeakRefCnt* %0) #16
  %6 = getelementptr inbounds %class.SkWeakRefCnt, %class.SkWeakRefCnt* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = atomicrmw add i32* %6, i32 -1 acq_rel
  %8 = icmp ne i32 %7, 1
  %9 = icmp eq %class.SkWeakRefCnt* %0, null
  %10 = or i1 %9, %8
  br i1 %10, label %17, label %11

11:                                               ; preds = %1
  %12 = bitcast %class.SkWeakRefCnt* %0 to %class.SkRefCntBase*
  %13 = bitcast %class.SkWeakRefCnt* %0 to void (%class.SkRefCntBase*)***
  %14 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %13, align 8
  %15 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, i64 1
  %16 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %15, align 8
  tail call void %16(%class.SkRefCntBase* nonnull %12) #16
  br label %17

17:                                               ; preds = %1, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK12SkWeakRefCnt12weak_disposeEv(%class.SkWeakRefCnt*) unnamed_addr #1 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK15SkTypefaceProxy11onMakeCloneERK15SkFontArguments(%class.sk_sp.1* noalias sret, %class.SkTypefaceProxy*, %struct.SkFontArguments* dereferenceable(24)) unnamed_addr #1 comdat align 2 {
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.13, i64 0, i64 0), i32 66, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.14, i64 0, i64 0)) #17
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.SkScalerContext* @_ZNK15SkTypefaceProxy21onCreateScalerContextERK22SkScalerContextEffectsPK12SkDescriptor(%class.SkTypefaceProxy*, %struct.SkScalerContextEffects* dereferenceable(16), %class.SkDescriptor*) unnamed_addr #1 comdat align 2 {
  %4 = alloca %class.sk_sp.1, align 8
  %5 = alloca %class.sk_sp.212, align 8
  %6 = icmp eq %class.SkTypefaceProxy* %0, null
  br i1 %6, label %10, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %class.SkTypefaceProxy, %class.SkTypefaceProxy* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw add i32* %8, i32 1 monotonic, !noalias !87
  br label %10

10:                                               ; preds = %3, %7
  %11 = ptrtoint %class.SkTypefaceProxy* %0 to i64
  %12 = bitcast %class.sk_sp.1* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12)
  %13 = bitcast %class.sk_sp.212* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13)
  %14 = tail call i8* @_Znwm(i64 136) #18
  %15 = bitcast i8* %14 to %class.SkScalerContextProxy*
  %16 = bitcast %class.sk_sp.1* %4 to i64*
  store i64 %11, i64* %16, align 8
  %17 = getelementptr inbounds %class.sk_sp.212, %class.sk_sp.212* %5, i64 0, i32 0
  %18 = getelementptr inbounds %class.SkTypefaceProxy, %class.SkTypefaceProxy* %0, i64 0, i32 4, i32 0
  %19 = load %"class.SkStrikeClient::DiscardableHandleManager"*, %"class.SkStrikeClient::DiscardableHandleManager"** %18, align 8
  %20 = icmp eq %"class.SkStrikeClient::DiscardableHandleManager"* %19, null
  br i1 %20, label %24, label %21

21:                                               ; preds = %10
  %22 = getelementptr inbounds %"class.SkStrikeClient::DiscardableHandleManager", %"class.SkStrikeClient::DiscardableHandleManager"* %19, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = atomicrmw add i32* %22, i32 1 monotonic
  br label %24

24:                                               ; preds = %21, %10
  store %"class.SkStrikeClient::DiscardableHandleManager"* %19, %"class.SkStrikeClient::DiscardableHandleManager"** %17, align 8
  call void @_ZN20SkScalerContextProxyC1E5sk_spI10SkTypefaceERK22SkScalerContextEffectsPK12SkDescriptorS0_IN14SkStrikeClient24DiscardableHandleManagerEE(%class.SkScalerContextProxy* nonnull %15, %class.sk_sp.1* nonnull %4, %struct.SkScalerContextEffects* dereferenceable(16) %1, %class.SkDescriptor* %2, %class.sk_sp.212* nonnull %5) #16
  %25 = load %"class.SkStrikeClient::DiscardableHandleManager"*, %"class.SkStrikeClient::DiscardableHandleManager"** %17, align 8
  %26 = icmp eq %"class.SkStrikeClient::DiscardableHandleManager"* %25, null
  br i1 %26, label %37, label %27

27:                                               ; preds = %24
  %28 = getelementptr inbounds %"class.SkStrikeClient::DiscardableHandleManager", %"class.SkStrikeClient::DiscardableHandleManager"* %25, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = atomicrmw add i32* %28, i32 -1 acq_rel
  %30 = icmp eq i32 %29, 1
  br i1 %30, label %31, label %37

31:                                               ; preds = %27
  %32 = bitcast %"class.SkStrikeClient::DiscardableHandleManager"* %25 to %class.SkRefCntBase*
  %33 = bitcast %"class.SkStrikeClient::DiscardableHandleManager"* %25 to void (%class.SkRefCntBase*)***
  %34 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %33, align 8
  %35 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %34, i64 2
  %36 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %35, align 8
  call void %36(%class.SkRefCntBase* nonnull %32) #16
  br label %37

37:                                               ; preds = %31, %27, %24
  %38 = getelementptr inbounds %class.sk_sp.1, %class.sk_sp.1* %4, i64 0, i32 0
  %39 = load %class.SkTypeface*, %class.SkTypeface** %38, align 8
  %40 = icmp eq %class.SkTypeface* %39, null
  br i1 %40, label %51, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %39, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = atomicrmw add i32* %42, i32 -1 acq_rel
  %44 = icmp eq i32 %43, 1
  br i1 %44, label %45, label %51

45:                                               ; preds = %41
  %46 = bitcast %class.SkTypeface* %39 to %class.SkRefCntBase*
  %47 = bitcast %class.SkTypeface* %39 to void (%class.SkRefCntBase*)***
  %48 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %47, align 8
  %49 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %48, i64 2
  %50 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %49, align 8
  call void %50(%class.SkRefCntBase* nonnull %46) #16
  br label %51

51:                                               ; preds = %37, %41, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13)
  %52 = bitcast i8* %14 to %class.SkScalerContext*
  ret %class.SkScalerContext* %52
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK15SkTypefaceProxy11onFilterRecEP18SkScalerContextRec(%class.SkTypefaceProxy*, %struct.SkScalerContextRec*) unnamed_addr #1 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %struct.SkAdvancedTypefaceMetrics* @_ZNK15SkTypefaceProxy20onGetAdvancedMetricsEv(%class.SkTypefaceProxy*) unnamed_addr #1 comdat align 2 {
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.13, i64 0, i64 0), i32 114, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.14, i64 0, i64 0)) #17
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK15SkTypefaceProxy23getPostScriptGlyphNamesEP8SkString(%class.SkTypefaceProxy*, %class.SkString*) unnamed_addr #1 comdat align 2 {
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.13, i64 0, i64 0), i32 110, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.14, i64 0, i64 0)) #17
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK15SkTypefaceProxy20getGlyphToUnicodeMapEPi(%class.SkTypefaceProxy*, i32*) unnamed_addr #1 comdat align 2 {
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.13, i64 0, i64 0), i32 106, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.14, i64 0, i64 0)) #17
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.SkStreamAsset* @_ZNK15SkTypefaceProxy12onOpenStreamEPi(%class.SkTypefaceProxy*, i32*) unnamed_addr #1 comdat align 2 {
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.13, i64 0, i64 0), i32 63, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.14, i64 0, i64 0)) #17
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK15SkTypefaceProxy28onGetVariationDesignPositionEPN15SkFontArguments17VariationPosition10CoordinateEi(%class.SkTypefaceProxy*, %"struct.SkFontArguments::VariationPosition::Coordinate"*, i32) unnamed_addr #1 comdat align 2 {
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.13, i64 0, i64 0), i32 70, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.14, i64 0, i64 0)) #17
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK15SkTypefaceProxy30onGetVariationDesignParametersEPN16SkFontParameters9Variation4AxisEi(%class.SkTypefaceProxy*, %"struct.SkFontParameters::Variation::Axis"*, i32) unnamed_addr #1 comdat align 2 {
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.13, i64 0, i64 0), i32 74, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.14, i64 0, i64 0)) #17
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK15SkTypefaceProxy19onGetFontDescriptorEP16SkFontDescriptorPb(%class.SkTypefaceProxy*, %class.SkFontDescriptor*, i8*) unnamed_addr #1 comdat align 2 {
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.13, i64 0, i64 0), i32 103, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.14, i64 0, i64 0)) #17
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK15SkTypefaceProxy15onCharsToGlyphsEPKiiPt(%class.SkTypefaceProxy*, i32*, i32, i16*) unnamed_addr #1 comdat align 2 {
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.13, i64 0, i64 0), i32 117, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.14, i64 0, i64 0)) #17
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK15SkTypefaceProxy13onCountGlyphsEv(%class.SkTypefaceProxy*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %class.SkTypefaceProxy, %class.SkTypefaceProxy* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK15SkTypefaceProxy9onGetUPEMEv(%class.SkTypefaceProxy*) unnamed_addr #1 comdat align 2 {
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.13, i64 0, i64 0), i32 61, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.14, i64 0, i64 0)) #17
  unreachable
}

declare zeroext i1 @_ZNK10SkTypeface27onGetKerningPairAdjustmentsEPKtiPi(%class.SkTypeface*, i16*, i32, i32*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK15SkTypefaceProxy15onGetFamilyNameEP8SkString(%class.SkTypefaceProxy*, %class.SkString*) unnamed_addr #1 comdat align 2 {
  %3 = tail call dereferenceable(8) %class.SkString* @_ZN8SkStringaSEPKc(%class.SkString* %1, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.15, i64 0, i64 0)) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK15SkTypefaceProxy19onGetPostScriptNameEP8SkString(%class.SkTypefaceProxy*, %class.SkString*) unnamed_addr #1 comdat align 2 {
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.13, i64 0, i64 0), i32 81, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.14, i64 0, i64 0)) #17
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.SkTypeface::LocalizedStrings"* @_ZNK15SkTypefaceProxy26onCreateFamilyNameIteratorEv(%class.SkTypefaceProxy*) unnamed_addr #1 comdat align 2 {
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.13, i64 0, i64 0), i32 84, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.14, i64 0, i64 0)) #17
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK15SkTypefaceProxy14onGetTableTagsEPj(%class.SkTypefaceProxy*, i32*) unnamed_addr #1 comdat align 2 {
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.13, i64 0, i64 0), i32 87, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.14, i64 0, i64 0)) #17
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK15SkTypefaceProxy14onGetTableDataEjmmPv(%class.SkTypefaceProxy*, i32, i64, i64, i8*) unnamed_addr #1 comdat align 2 {
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.13, i64 0, i64 0), i32 90, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.14, i64 0, i64 0)) #17
  unreachable
}

declare void @_ZNK10SkTypeface15onCopyTableDataEj(%class.sk_sp* sret, %class.SkTypeface*, i32) unnamed_addr #4

declare zeroext i1 @_ZNK10SkTypeface15onComputeBoundsEP6SkRect(%class.SkTypeface*, %struct.SkRect*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK15SkTypefaceProxy14onGetCTFontRefEv(%class.SkTypefaceProxy*) unnamed_addr #1 comdat align 2 {
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.13, i64 0, i64 0), i32 124, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.14, i64 0, i64 0)) #17
  unreachable
}

; Function Attrs: nounwind
declare void @_ZN10SkTypefaceD2Ev(%class.SkTypeface*) unnamed_addr #7

; Function Attrs: noreturn
declare void @_Z16SkAbort_FileLinePKciS0_z(i8*, i32, i8*, ...) local_unnamed_addr #11

declare void @_ZN20SkScalerContextProxyC1E5sk_spI10SkTypefaceERK22SkScalerContextEffectsPK12SkDescriptorS0_IN14SkStrikeClient24DiscardableHandleManagerEE(%class.SkScalerContextProxy*, %class.sk_sp.1*, %struct.SkScalerContextEffects* dereferenceable(16), %class.SkDescriptor*, %class.sk_sp.212*) unnamed_addr #4

declare dereferenceable(8) %class.SkString* @_ZN8SkStringaSEPKc(%class.SkString*, i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12SkTHashTableIN10SkTHashMapIj5sk_spI10SkTypefaceE10SkGoodHashE4PairEjS6_E6resizeEi(%class.SkTHashTable.204*, i32) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %class.SkAutoTArray.205, align 8
  %4 = getelementptr inbounds %class.SkTHashTable.204, %class.SkTHashTable.204* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %class.SkTHashTable.204, %class.SkTHashTable.204* %0, i64 0, i32 0
  store i32 0, i32* %6, align 8
  store i32 %1, i32* %4, align 4
  %7 = getelementptr inbounds %class.SkTHashTable.204, %class.SkTHashTable.204* %0, i64 0, i32 2
  %8 = getelementptr inbounds %class.SkAutoTArray.205, %class.SkAutoTArray.205* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = bitcast %class.SkAutoTArray.205* %7 to i64*
  %10 = load i64, i64* %9, align 8
  store %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair>::Slot"* null, %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair>::Slot"** %8, align 8
  %11 = bitcast %class.SkAutoTArray.205* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #16
  %12 = bitcast %class.SkAutoTArray.205* %3 to i64*
  store i64 0, i64* %12, align 8
  %13 = icmp eq i32 %1, 0
  br i1 %13, label %14, label %16

14:                                               ; preds = %2
  %15 = getelementptr inbounds %class.SkAutoTArray.205, %class.SkAutoTArray.205* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair>::Slot"* null, %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair>::Slot"** %15, align 8
  store i64 0, i64* %9, align 8
  br label %68

16:                                               ; preds = %2
  %17 = sext i32 %1 to i64
  %18 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %17, i64 24) #16
  %19 = extractvalue { i64, i1 } %18, 1
  %20 = extractvalue { i64, i1 } %18, 0
  %21 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %20, i64 8) #16
  %22 = extractvalue { i64, i1 } %21, 1
  %23 = or i1 %19, %22
  %24 = extractvalue { i64, i1 } %21, 0
  %25 = select i1 %23, i64 -1, i64 %24
  %26 = tail call i8* @_Znam(i64 %25) #18
  %27 = bitcast i8* %26 to i64*
  store i64 %17, i64* %27, align 16
  %28 = getelementptr inbounds i8, i8* %26, i64 8
  %29 = bitcast i8* %28 to %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair>::Slot"*
  %30 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair>::Slot"* %29, i64 %17
  br label %31

31:                                               ; preds = %31, %16
  %32 = phi %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair>::Slot"* [ %29, %16 ], [ %34, %31 ]
  %33 = bitcast %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair>::Slot"* %32 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %33, i8 0, i64 20, i1 false) #16
  %34 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair>::Slot"* %32, i64 1
  %35 = icmp eq %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair>::Slot"* %34, %30
  br i1 %35, label %36, label %31

36:                                               ; preds = %31
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair>::Slot"*, %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair>::Slot"** %8, align 8
  %39 = getelementptr inbounds %class.SkAutoTArray.205, %class.SkAutoTArray.205* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair>::Slot"* null, %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair>::Slot"** %39, align 8
  store i64 %37, i64* %9, align 8
  %40 = icmp eq %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair>::Slot"* %38, null
  br i1 %40, label %68, label %41

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair>::Slot"* %38, i64 -1, i32 1
  %43 = bitcast i32* %42 to i8*
  %44 = bitcast i32* %42 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %41
  tail call void @_ZdaPv(i8* %43) #18
  store %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair>::Slot"* null, %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair>::Slot"** %39, align 8
  br label %100

48:                                               ; preds = %41
  %49 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair>::Slot"* %38, i64 %45
  br label %50

50:                                               ; preds = %66, %48
  %51 = phi %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair>::Slot"* [ %52, %66 ], [ %49, %48 ]
  %52 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair>::Slot"* %51, i64 -1
  %53 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair>::Slot"* %51, i64 -1, i32 0, i32 0, i32 1, i32 0
  %54 = load %class.SkTypeface*, %class.SkTypeface** %53, align 8
  %55 = icmp eq %class.SkTypeface* %54, null
  br i1 %55, label %66, label %56

56:                                               ; preds = %50
  %57 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %54, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = atomicrmw add i32* %57, i32 -1 acq_rel
  %59 = icmp eq i32 %58, 1
  br i1 %59, label %60, label %66

60:                                               ; preds = %56
  %61 = bitcast %class.SkTypeface* %54 to %class.SkRefCntBase*
  %62 = bitcast %class.SkTypeface* %54 to void (%class.SkRefCntBase*)***
  %63 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %62, align 8
  %64 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %63, i64 2
  %65 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %64, align 8
  tail call void %65(%class.SkRefCntBase* nonnull %61) #16
  br label %66

66:                                               ; preds = %60, %56, %50
  %67 = icmp eq %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair>::Slot"* %52, %38
  br i1 %67, label %70, label %50

68:                                               ; preds = %36, %14
  %69 = phi %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair>::Slot"** [ %15, %14 ], [ %39, %36 ]
  store %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair>::Slot"* null, %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair>::Slot"** %69, align 8
  br label %100

70:                                               ; preds = %66
  %71 = load %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair>::Slot"*, %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair>::Slot"** %39, align 8
  tail call void @_ZdaPv(i8* %43) #18
  store %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair>::Slot"* null, %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair>::Slot"** %39, align 8
  %72 = icmp eq %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair>::Slot"* %71, null
  br i1 %72, label %100, label %73

73:                                               ; preds = %70
  %74 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair>::Slot"* %71, i64 -1, i32 1
  %75 = bitcast i32* %74 to i8*
  %76 = bitcast i32* %74 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = icmp eq i64 %77, 0
  br i1 %78, label %99, label %79

79:                                               ; preds = %73
  %80 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair>::Slot"* %71, i64 %77
  br label %81

81:                                               ; preds = %97, %79
  %82 = phi %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair>::Slot"* [ %83, %97 ], [ %80, %79 ]
  %83 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair>::Slot"* %82, i64 -1
  %84 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair>::Slot"* %82, i64 -1, i32 0, i32 0, i32 1, i32 0
  %85 = load %class.SkTypeface*, %class.SkTypeface** %84, align 8
  %86 = icmp eq %class.SkTypeface* %85, null
  br i1 %86, label %97, label %87

87:                                               ; preds = %81
  %88 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %85, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %89 = atomicrmw add i32* %88, i32 -1 acq_rel
  %90 = icmp eq i32 %89, 1
  br i1 %90, label %91, label %97

91:                                               ; preds = %87
  %92 = bitcast %class.SkTypeface* %85 to %class.SkRefCntBase*
  %93 = bitcast %class.SkTypeface* %85 to void (%class.SkRefCntBase*)***
  %94 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %93, align 8
  %95 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %94, i64 2
  %96 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %95, align 8
  tail call void %96(%class.SkRefCntBase* nonnull %92) #16
  br label %97

97:                                               ; preds = %91, %87, %81
  %98 = icmp eq %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair>::Slot"* %83, %71
  br i1 %98, label %99, label %81

99:                                               ; preds = %97, %73
  tail call void @_ZdaPv(i8* %75) #18
  br label %100

100:                                              ; preds = %47, %68, %70, %99
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #16
  %101 = icmp sgt i32 %5, 0
  %102 = inttoptr i64 %10 to %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair>::Slot"*
  br i1 %101, label %103, label %105

103:                                              ; preds = %100
  %104 = zext i32 %5 to i64
  br label %135

105:                                              ; preds = %143, %100
  %106 = icmp eq i64 %10, 0
  br i1 %106, label %134, label %107

107:                                              ; preds = %105
  %108 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair>::Slot"* %102, i64 -1, i32 1
  %109 = bitcast i32* %108 to i8*
  %110 = bitcast i32* %108 to i64*
  %111 = load i64, i64* %110, align 8
  %112 = icmp eq i64 %111, 0
  br i1 %112, label %133, label %113

113:                                              ; preds = %107
  %114 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair>::Slot"* %102, i64 %111
  br label %115

115:                                              ; preds = %131, %113
  %116 = phi %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair>::Slot"* [ %117, %131 ], [ %114, %113 ]
  %117 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair>::Slot"* %116, i64 -1
  %118 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair>::Slot"* %116, i64 -1, i32 0, i32 0, i32 1, i32 0
  %119 = load %class.SkTypeface*, %class.SkTypeface** %118, align 8
  %120 = icmp eq %class.SkTypeface* %119, null
  br i1 %120, label %131, label %121

121:                                              ; preds = %115
  %122 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %119, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %123 = atomicrmw add i32* %122, i32 -1 acq_rel
  %124 = icmp eq i32 %123, 1
  br i1 %124, label %125, label %131

125:                                              ; preds = %121
  %126 = bitcast %class.SkTypeface* %119 to %class.SkRefCntBase*
  %127 = bitcast %class.SkTypeface* %119 to void (%class.SkRefCntBase*)***
  %128 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %127, align 8
  %129 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %128, i64 2
  %130 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %129, align 8
  tail call void %130(%class.SkRefCntBase* nonnull %126) #16
  br label %131

131:                                              ; preds = %125, %121, %115
  %132 = icmp eq %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair>::Slot"* %117, %102
  br i1 %132, label %133, label %115

133:                                              ; preds = %131, %107
  tail call void @_ZdaPv(i8* %109) #18
  br label %134

134:                                              ; preds = %105, %133
  ret void

135:                                              ; preds = %143, %103
  %136 = phi i64 [ 0, %103 ], [ %144, %143 ]
  %137 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair>::Slot"* %102, i64 %136, i32 1
  %138 = load i32, i32* %137, align 8
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %143, label %140

140:                                              ; preds = %135
  %141 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair>::Slot"* %102, i64 %136, i32 0
  %142 = tail call %"struct.SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair"* @_ZN12SkTHashTableIN10SkTHashMapIj5sk_spI10SkTypefaceE10SkGoodHashE4PairEjS6_E12uncheckedSetEOS6_(%class.SkTHashTable.204* %0, %"struct.SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair"* dereferenceable(16) %141)
  br label %143

143:                                              ; preds = %140, %135
  %144 = add nuw nsw i64 %136, 1
  %145 = icmp eq i64 %144, %104
  br i1 %145, label %105, label %135
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair"* @_ZN12SkTHashTableIN10SkTHashMapIj5sk_spI10SkTypefaceE10SkGoodHashE4PairEjS6_E12uncheckedSetEOS6_(%class.SkTHashTable.204*, %"struct.SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair"* dereferenceable(16)) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"struct.SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair", %"struct.SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair"* %1, i64 0, i32 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = lshr i32 %4, 16
  %6 = xor i32 %5, %4
  %7 = mul i32 %6, -2048144789
  %8 = lshr i32 %7, 13
  %9 = xor i32 %8, %7
  %10 = mul i32 %9, -1028477387
  %11 = lshr i32 %10, 16
  %12 = xor i32 %11, %10
  %13 = icmp eq i32 %12, 0
  %14 = select i1 %13, i32 1, i32 %12
  %15 = getelementptr inbounds %class.SkTHashTable.204, %class.SkTHashTable.204* %0, i64 0, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = icmp sgt i32 %16, 0
  br i1 %17, label %18, label %92

18:                                               ; preds = %2
  %19 = add nsw i32 %16, -1
  %20 = and i32 %14, %19
  %21 = getelementptr inbounds %class.SkTHashTable.204, %class.SkTHashTable.204* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %22 = load %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair>::Slot"*, %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair>::Slot"** %21, align 8
  br label %23

23:                                               ; preds = %18, %85
  %24 = phi i32 [ 0, %18 ], [ %90, %85 ]
  %25 = phi i32 [ %20, %18 ], [ %89, %85 ]
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair>::Slot"* %22, i64 %26
  %28 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair>::Slot"* %22, i64 %26, i32 1
  %29 = load i32, i32* %28, align 8
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %57

31:                                               ; preds = %23
  %32 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair>::Slot"* %27, i64 0, i32 0
  %33 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair>::Slot"* %27, i64 0, i32 0, i32 0, i32 0
  store i32 %4, i32* %33, align 8
  %34 = getelementptr inbounds %"struct.SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair", %"struct.SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair"* %1, i64 0, i32 0, i32 1
  %35 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair>::Slot"* %22, i64 %26, i32 0, i32 0, i32 1
  %36 = getelementptr inbounds %class.sk_sp.1, %class.sk_sp.1* %34, i64 0, i32 0
  %37 = bitcast %class.sk_sp.1* %34 to i64*
  %38 = load i64, i64* %37, align 8
  store %class.SkTypeface* null, %class.SkTypeface** %36, align 8
  %39 = getelementptr inbounds %class.sk_sp.1, %class.sk_sp.1* %35, i64 0, i32 0
  %40 = load %class.SkTypeface*, %class.SkTypeface** %39, align 8
  %41 = bitcast %class.sk_sp.1* %35 to i64*
  store i64 %38, i64* %41, align 8
  %42 = icmp eq %class.SkTypeface* %40, null
  br i1 %42, label %53, label %43

43:                                               ; preds = %31
  %44 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %40, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = atomicrmw add i32* %44, i32 -1 acq_rel
  %46 = icmp eq i32 %45, 1
  br i1 %46, label %47, label %53

47:                                               ; preds = %43
  %48 = bitcast %class.SkTypeface* %40 to %class.SkRefCntBase*
  %49 = bitcast %class.SkTypeface* %40 to void (%class.SkRefCntBase*)***
  %50 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %49, align 8
  %51 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %50, i64 2
  %52 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %51, align 8
  tail call void %52(%class.SkRefCntBase* nonnull %48) #16
  br label %53

53:                                               ; preds = %31, %43, %47
  store i32 %14, i32* %28, align 8
  %54 = getelementptr inbounds %class.SkTHashTable.204, %class.SkTHashTable.204* %0, i64 0, i32 0
  %55 = load i32, i32* %54, align 8
  %56 = add nsw i32 %55, 1
  store i32 %56, i32* %54, align 8
  br label %92

57:                                               ; preds = %23
  %58 = icmp eq i32 %14, %29
  br i1 %58, label %59, label %85

59:                                               ; preds = %57
  %60 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair>::Slot"* %27, i64 0, i32 0, i32 0, i32 0
  %61 = load i32, i32* %60, align 4
  %62 = icmp eq i32 %4, %61
  br i1 %62, label %63, label %85

63:                                               ; preds = %59
  %64 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair>::Slot"* %27, i64 0, i32 0, i32 0, i32 0
  %65 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair>::Slot"* %27, i64 0, i32 0
  store i32 %4, i32* %64, align 8
  %66 = getelementptr inbounds %"struct.SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair", %"struct.SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair"* %1, i64 0, i32 0, i32 1
  %67 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair>::Slot"* %22, i64 %26, i32 0, i32 0, i32 1
  %68 = getelementptr inbounds %class.sk_sp.1, %class.sk_sp.1* %66, i64 0, i32 0
  %69 = bitcast %class.sk_sp.1* %66 to i64*
  %70 = load i64, i64* %69, align 8
  store %class.SkTypeface* null, %class.SkTypeface** %68, align 8
  %71 = getelementptr inbounds %class.sk_sp.1, %class.sk_sp.1* %67, i64 0, i32 0
  %72 = load %class.SkTypeface*, %class.SkTypeface** %71, align 8
  %73 = bitcast %class.sk_sp.1* %67 to i64*
  store i64 %70, i64* %73, align 8
  %74 = icmp eq %class.SkTypeface* %72, null
  br i1 %74, label %92, label %75

75:                                               ; preds = %63
  %76 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %72, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = atomicrmw add i32* %76, i32 -1 acq_rel
  %78 = icmp eq i32 %77, 1
  br i1 %78, label %79, label %92

79:                                               ; preds = %75
  %80 = bitcast %class.SkTypeface* %72 to %class.SkRefCntBase*
  %81 = bitcast %class.SkTypeface* %72 to void (%class.SkRefCntBase*)***
  %82 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %81, align 8
  %83 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %82, i64 2
  %84 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %83, align 8
  tail call void %84(%class.SkRefCntBase* nonnull %80) #16
  br label %92

85:                                               ; preds = %59, %57
  %86 = add nsw i32 %25, -1
  %87 = icmp slt i32 %25, 1
  %88 = select i1 %87, i32 %16, i32 0
  %89 = add nsw i32 %86, %88
  %90 = add nuw nsw i32 %24, 1
  %91 = icmp slt i32 %90, %16
  br i1 %91, label %23, label %92

92:                                               ; preds = %85, %2, %79, %75, %63, %53
  %93 = phi %"struct.SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair"* [ %65, %79 ], [ %65, %75 ], [ %65, %63 ], [ %32, %53 ], [ null, %2 ], [ null, %85 ]
  ret %"struct.SkTHashMap<unsigned int, sk_sp<SkTypeface>, SkGoodHash>::Pair"* %93
}

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #15

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #14

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nounwind readnone speculatable }
attributes #15 = { nofree nounwind readonly }
attributes #16 = { nounwind }
attributes #17 = { noreturn nounwind }
attributes #18 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN21SkDrawableGlyphBuffer5inputEv: argument 0"}
!5 = distinct !{!5, !"_ZN21SkDrawableGlyphBuffer5inputEv"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_Z15SkMakeEnumerateI5SkZipIJ14SkGlyphVariant7SkPointEENS3_8IteratorEE11SkEnumerateIT0_T_EOS7_: argument 0"}
!8 = distinct !{!8, !"_Z15SkMakeEnumerateI5SkZipIJ14SkGlyphVariant7SkPointEENS3_8IteratorEE11SkEnumerateIT0_T_EOS7_"}
!9 = !{!10, !12, !7}
!10 = distinct !{!10, !11, !"_ZNK5SkZipIJ14SkGlyphVariant7SkPointEE5beginEv: argument 0"}
!11 = distinct !{!11, !"_ZNK5SkZipIJ14SkGlyphVariant7SkPointEE5beginEv"}
!12 = distinct !{!12, !13, !"_ZNSt3__15beginI5SkZipIJ14SkGlyphVariant7SkPointEEEEDTcldtfp_5beginEERT_: argument 0"}
!13 = distinct !{!13, !"_ZNSt3__15beginI5SkZipIJ14SkGlyphVariant7SkPointEEEEDTcldtfp_5beginEERT_"}
!14 = !{!15, !17, !7}
!15 = distinct !{!15, !16, !"_ZNK5SkZipIJ14SkGlyphVariant7SkPointEE3endEv: argument 0"}
!16 = distinct !{!16, !"_ZNK5SkZipIJ14SkGlyphVariant7SkPointEE3endEv"}
!17 = distinct !{!17, !18, !"_ZNSt3__13endI5SkZipIJ14SkGlyphVariant7SkPointEEEEDTcldtfp_3endEERT_: argument 0"}
!18 = distinct !{!18, !"_ZNSt3__13endI5SkZipIJ14SkGlyphVariant7SkPointEEEEDTcldtfp_3endEERT_"}
!19 = !{!20}
!20 = distinct !{!20, !21, !"_ZN11SkEnumerateIN5SkZipIJ14SkGlyphVariant7SkPointEE8IteratorES3_E8IteratordeEv: argument 0"}
!21 = distinct !{!21, !"_ZN11SkEnumerateIN5SkZipIJ14SkGlyphVariant7SkPointEE8IteratorES3_E8IteratordeEv"}
!22 = !{!23}
!23 = distinct !{!23, !24, !"_ZN21SkDrawableGlyphBuffer5inputEv: argument 0"}
!24 = distinct !{!24, !"_ZN21SkDrawableGlyphBuffer5inputEv"}
!25 = !{!26}
!26 = distinct !{!26, !27, !"_Z15SkMakeEnumerateI5SkZipIJ14SkGlyphVariant7SkPointEENS3_8IteratorEE11SkEnumerateIT0_T_EOS7_: argument 0"}
!27 = distinct !{!27, !"_Z15SkMakeEnumerateI5SkZipIJ14SkGlyphVariant7SkPointEENS3_8IteratorEE11SkEnumerateIT0_T_EOS7_"}
!28 = !{!29, !31, !26}
!29 = distinct !{!29, !30, !"_ZNK5SkZipIJ14SkGlyphVariant7SkPointEE5beginEv: argument 0"}
!30 = distinct !{!30, !"_ZNK5SkZipIJ14SkGlyphVariant7SkPointEE5beginEv"}
!31 = distinct !{!31, !32, !"_ZNSt3__15beginI5SkZipIJ14SkGlyphVariant7SkPointEEEEDTcldtfp_5beginEERT_: argument 0"}
!32 = distinct !{!32, !"_ZNSt3__15beginI5SkZipIJ14SkGlyphVariant7SkPointEEEEDTcldtfp_5beginEERT_"}
!33 = !{!34, !36, !26}
!34 = distinct !{!34, !35, !"_ZNK5SkZipIJ14SkGlyphVariant7SkPointEE3endEv: argument 0"}
!35 = distinct !{!35, !"_ZNK5SkZipIJ14SkGlyphVariant7SkPointEE3endEv"}
!36 = distinct !{!36, !37, !"_ZNSt3__13endI5SkZipIJ14SkGlyphVariant7SkPointEEEEDTcldtfp_3endEERT_: argument 0"}
!37 = distinct !{!37, !"_ZNSt3__13endI5SkZipIJ14SkGlyphVariant7SkPointEEEEDTcldtfp_3endEERT_"}
!38 = !{!39}
!39 = distinct !{!39, !40, !"_ZN11SkEnumerateIN5SkZipIJ14SkGlyphVariant7SkPointEE8IteratorES3_E8IteratordeEv: argument 0"}
!40 = distinct !{!40, !"_ZN11SkEnumerateIN5SkZipIJ14SkGlyphVariant7SkPointEE8IteratorES3_E8IteratordeEv"}
!41 = !{!42}
!42 = distinct !{!42, !43, !"_ZN21SkDrawableGlyphBuffer5inputEv: argument 0"}
!43 = distinct !{!43, !"_ZN21SkDrawableGlyphBuffer5inputEv"}
!44 = !{!45}
!45 = distinct !{!45, !46, !"_Z15SkMakeEnumerateI5SkZipIJ14SkGlyphVariant7SkPointEENS3_8IteratorEE11SkEnumerateIT0_T_EOS7_: argument 0"}
!46 = distinct !{!46, !"_Z15SkMakeEnumerateI5SkZipIJ14SkGlyphVariant7SkPointEENS3_8IteratorEE11SkEnumerateIT0_T_EOS7_"}
!47 = !{!48, !50, !45}
!48 = distinct !{!48, !49, !"_ZNK5SkZipIJ14SkGlyphVariant7SkPointEE5beginEv: argument 0"}
!49 = distinct !{!49, !"_ZNK5SkZipIJ14SkGlyphVariant7SkPointEE5beginEv"}
!50 = distinct !{!50, !51, !"_ZNSt3__15beginI5SkZipIJ14SkGlyphVariant7SkPointEEEEDTcldtfp_5beginEERT_: argument 0"}
!51 = distinct !{!51, !"_ZNSt3__15beginI5SkZipIJ14SkGlyphVariant7SkPointEEEEDTcldtfp_5beginEERT_"}
!52 = !{!53, !55, !45}
!53 = distinct !{!53, !54, !"_ZNK5SkZipIJ14SkGlyphVariant7SkPointEE3endEv: argument 0"}
!54 = distinct !{!54, !"_ZNK5SkZipIJ14SkGlyphVariant7SkPointEE3endEv"}
!55 = distinct !{!55, !56, !"_ZNSt3__13endI5SkZipIJ14SkGlyphVariant7SkPointEEEEDTcldtfp_3endEERT_: argument 0"}
!56 = distinct !{!56, !"_ZNSt3__13endI5SkZipIJ14SkGlyphVariant7SkPointEEEEDTcldtfp_3endEERT_"}
!57 = !{!58}
!58 = distinct !{!58, !59, !"_ZN11SkEnumerateIN5SkZipIJ14SkGlyphVariant7SkPointEE8IteratorES3_E8IteratordeEv: argument 0"}
!59 = distinct !{!59, !"_ZN11SkEnumerateIN5SkZipIJ14SkGlyphVariant7SkPointEE8IteratorES3_E8IteratordeEv"}
!60 = !{!61}
!61 = distinct !{!61, !62, !"_ZZN18SkStrikeServerImpl16getOrCreateCacheERK12SkDescriptorRK10SkTypeface22SkScalerContextEffectsENK3$_4clEv: argument 0"}
!62 = distinct !{!62, !"_ZZN18SkStrikeServerImpl16getOrCreateCacheERK12SkDescriptorRK10SkTypeface22SkScalerContextEffectsENK3$_4clEv"}
!63 = !{!64, !61}
!64 = distinct !{!64, !65, !"_ZNK18SkScalerContextRec4dumpEv: argument 0"}
!65 = distinct !{!65, !"_ZNK18SkScalerContextRec4dumpEv"}
!66 = !{i64 0, i64 65}
!67 = !{!68}
!68 = distinct !{!68, !69, !"_Z10sk_make_spI15SkTypefaceProxyJRKjRKiRK11SkFontStyleRKbR5sk_spIN14SkStrikeClient24DiscardableHandleManagerEES9_EESA_IT_EDpOT0_: argument 0"}
!69 = distinct !{!69, !"_Z10sk_make_spI15SkTypefaceProxyJRKjRKiRK11SkFontStyleRKbR5sk_spIN14SkStrikeClient24DiscardableHandleManagerEES9_EESA_IT_EDpOT0_"}
!70 = !{!71}
!71 = distinct !{!71, !72, !"_ZN18SkStrikeClientImpl19deserializeTypefaceEPKvm: argument 0"}
!72 = distinct !{!72, !"_ZN18SkStrikeClientImpl19deserializeTypefaceEPKvm"}
!73 = !{!74}
!74 = distinct !{!74, !75, !"_ZN11SkImageInfo4MakeE7SkISize11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE: argument 0"}
!75 = distinct !{!75, !"_ZN11SkImageInfo4MakeE7SkISize11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE"}
!76 = !{!77, !79}
!77 = distinct !{!77, !78, !"_ZNK11SkColorInfo13refColorSpaceEv: argument 0"}
!78 = distinct !{!78, !"_ZNK11SkColorInfo13refColorSpaceEv"}
!79 = distinct !{!79, !80, !"_ZNK11SkImageInfo13refColorSpaceEv: argument 0"}
!80 = distinct !{!80, !"_ZNK11SkImageInfo13refColorSpaceEv"}
!81 = distinct !{!81, !82}
!82 = !{!"llvm.loop.unroll.disable"}
!83 = !{!84}
!84 = distinct !{!84, !85, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPK12SkDescriptorNS_10unique_ptrI12RemoteStrikeNS_14default_deleteIS6_EEEEEENS_22__unordered_map_hasherIS4_SA_6MapOpsSC_Lb1EEENS_21__unordered_map_equalIS4_SA_SC_SC_Lb1EEENS_9allocatorISA_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS4_EEENSN_IJEEEEEENS5_INS_11__hash_nodeISA_PvEENS_22__hash_node_destructorINSG_ISU_EEEEEEmOT_DpOT0_: argument 0"}
!85 = distinct !{!85, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPK12SkDescriptorNS_10unique_ptrI12RemoteStrikeNS_14default_deleteIS6_EEEEEENS_22__unordered_map_hasherIS4_SA_6MapOpsSC_Lb1EEENS_21__unordered_map_equalIS4_SA_SC_SC_Lb1EEENS_9allocatorISA_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS4_EEENSN_IJEEEEEENS5_INS_11__hash_nodeISA_PvEENS_22__hash_node_destructorINSG_ISU_EEEEEEmOT_DpOT0_"}
!86 = distinct !{!86, !82}
!87 = !{!88}
!88 = distinct !{!88, !89, !"_Z9sk_ref_spI15SkTypefaceProxyE5sk_spIT_EPS2_: argument 0"}
!89 = distinct !{!89, !"_Z9sk_ref_spI15SkTypefaceProxyE5sk_spIT_EPS2_"}
