; ModuleID = 'gen/services/network/public/mojom/http_request_headers.mojom-blink.cc'
source_filename = "gen/services/network/public/mojom/http_request_headers.mojom-blink.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.network::mojom::blink::HttpRequestHeaderKeyValuePair" = type { %"class.WTF::String", %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.network::mojom::blink::HttpRequestHeaders" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.mojo::InlinedStructPtr"*, i32, i32 }
%"class.mojo::InlinedStructPtr" = type <{ %"class.network::mojom::blink::HttpRequestHeaderKeyValuePair", i32, [4 x i8] }>
%"class.perfetto::TracedValue" = type <{ %"class.perfetto::protos::pbzero::DebugAnnotation"*, %"class.perfetto::internal::CheckedScope", [7 x i8] }>
%"class.perfetto::protos::pbzero::DebugAnnotation" = type { %"class.protozero::Message.base", [7 x i8] }
%"class.protozero::Message.base" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8 }>
%"class.protozero::ScatteredStreamWriter" = type { %"class.protozero::ScatteredStreamWriter::Delegate"*, %"struct.protozero::ContiguousMemoryRange", i8*, i64 }
%"class.protozero::ScatteredStreamWriter::Delegate" = type { i32 (...)** }
%"struct.protozero::ContiguousMemoryRange" = type { i8*, i8* }
%"class.protozero::MessageArena" = type { %"class.std::__1::list" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i64 }
%"class.protozero::Message" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8, [7 x i8] }>
%"class.perfetto::internal::CheckedScope" = type { i8 }
%"class.perfetto::TracedDictionary" = type <{ %"class.protozero::Message"*, i32, %"class.perfetto::internal::CheckedScope", [3 x i8] }>
%"class.mojo::internal::ValidationContext" = type <{ %"class.mojo::Message"*, i8*, i32, [4 x i8], i64, i64, i32, i32, i32, i32, i32, [4 x i8] }>
%"class.mojo::Message" = type { %"class.mojo::ScopedHandleBase", %"class.mojo::internal::Buffer", %"class.std::__1::vector", %"class.std::__1::vector.13", %"class.mojo::ConnectionGroup::Ref"*, i8, i8, i8* }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessageHandle" }
%"class.mojo::MessageHandle" = type { i64 }
%"class.mojo::internal::Buffer" = type { %"class.mojo::MessageHandle", i64, i8*, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.mojo::ScopedHandleBase.7"*, %"class.mojo::ScopedHandleBase.7"*, %"class.std::__1::__compressed_pair.8" }
%"class.mojo::ScopedHandleBase.7" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.mojo::ScopedHandleBase.7"* }
%"class.std::__1::vector.13" = type { %"class.std::__1::__vector_base.14" }
%"class.std::__1::__vector_base.14" = type { %"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.std::__1::__compressed_pair.16" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.15 }
%class.scoped_refptr.15 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"class.mojo::ScopedInterfaceEndpointHandle"* }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.21 }
%class.scoped_refptr.21 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.29, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.22" }
%"struct.std::__1::atomic.22" = type { %"struct.std::__1::__atomic_base.23" }
%"struct.std::__1::__atomic_base.23" = type { %"struct.std::__1::__atomic_base.24" }
%"struct.std::__1::__atomic_base.24" = type { %"struct.std::__1::__cxx_atomic_impl.25" }
%"struct.std::__1::__cxx_atomic_impl.25" = type { %"struct.std::__1::__cxx_atomic_base_impl.26" }
%"struct.std::__1::__cxx_atomic_base_impl.26" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.27 }
%class.scoped_refptr.27 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.28", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.28" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.29 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.30" }>
%"class.base::RefCountedThreadSafe.30" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.perfetto::TracedArray" = type <{ %"class.perfetto::protos::pbzero::DebugAnnotation"*, %"class.perfetto::internal::CheckedScope", [7 x i8] }>
%"class.network::mojom::internal::HttpRequestHeaderKeyValuePair_Data" = type { %"struct.mojo::internal::StructHeader", %"struct.mojo::internal::Pointer", %"struct.mojo::internal::Pointer" }
%"struct.mojo::internal::StructHeader" = type { i32, i32 }
%"struct.mojo::internal::Pointer" = type { i64 }
%"class.mojo::internal::Array_Data" = type { %"struct.mojo::internal::ArrayHeader" }
%"struct.mojo::internal::ArrayHeader" = type { i32, i32 }
%"class.network::mojom::internal::HttpRequestHeaders_Data" = type { %"struct.mojo::internal::StructHeader", %"struct.mojo::internal::Pointer.31" }
%"struct.mojo::internal::Pointer.31" = type { i64 }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.network::mojom::blink::HttpRequestHeaders"* }
%"class.mojo::internal::Array_Data.43" = type { %"struct.mojo::internal::ArrayHeader" }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZN8perfetto8internal9WriteImplIPN7network5mojom5blink29HttpRequestHeaderKeyValuePairEEEDTcmclsr17TraceFormatTraitsINS_4base12remove_cvrefIT_E4typeEEE14WriteIntoTraceclL_ZNSt3__17declvalINS_11TracedValueEEEDTclsr3std3__1E9__declvalIS9_ELi0EEEvEEclsr3stdE7declvalIS9_EEEcvv_EENS7_12priority_tagILm3EEESE_OS9_ = comdat any

$_ZNSt3__14swapIN7network5mojom5blink29HttpRequestHeaderKeyValuePairEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS6_EE5valueEvE4typeERS6_S9_ = comdat any

$_ZN7network5mojom5blink29HttpRequestHeaderKeyValuePairaSERKS2_ = comdat any

$_ZN4mojo8internal15ArraySerializerINS_13ArrayDataViewIN7network5mojom37HttpRequestHeaderKeyValuePairDataViewEEEN3WTF6VectorINS_16InlinedStructPtrINS4_5blink29HttpRequestHeaderKeyValuePairEEELj0ENS7_18PartitionAllocatorEEENS0_13ArrayIteratorINS_11ArrayTraitsISE_EESE_Lb0EEEvE19DeserializeElementsEPNS0_10Array_DataINS0_7PointerINS4_8internal34HttpRequestHeaderKeyValuePair_DataEEEEEPSE_PNS_7MessageE = comdat any

$_ZN3WTF6VectorIN4mojo16InlinedStructPtrIN7network5mojom5blink29HttpRequestHeaderKeyValuePairEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo16InlinedStructPtrIN7network5mojom5blink29HttpRequestHeaderKeyValuePairEEEEEmm = comdat any

$_ZN3WTF11VectorMoverILb0EN4mojo16InlinedStructPtrIN7network5mojom5blink29HttpRequestHeaderKeyValuePairEEENS_18PartitionAllocatorEE4MoveEPS7_SA_SA_b = comdat any

$_ZN3WTF6VectorIN4mojo16InlinedStructPtrIN7network5mojom5blink29HttpRequestHeaderKeyValuePairEEELj0ENS_18PartitionAllocatorEE6resizeEj = comdat any

$_ZN3WTF6VectorIN4mojo16InlinedStructPtrIN7network5mojom5blink29HttpRequestHeaderKeyValuePairEEELj0ENS_18PartitionAllocatorEE2atEj = comdat any

@.str = private unnamed_addr constant [4 x i8] c"key\00", align 1
@.str.2 = private unnamed_addr constant [6 x i8] c"value\00", align 1
@.str.3 = private unnamed_addr constant [8 x i8] c"headers\00", align 1
@.str.5 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.6 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo16InlinedStructPtrIN7network5mojom5blink29HttpRequestHeaderKeyValuePairEEEEEPKcv = private unnamed_addr constant [124 x i8] c"const char *WTF::GetStringWithTypeName() [T = mojo::InlinedStructPtr<network::mojom::blink::HttpRequestHeaderKeyValuePair>]\00", align 1
@.str.7 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.9 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1

@_ZN7network5mojom5blink29HttpRequestHeaderKeyValuePairC1Ev = hidden unnamed_addr alias void (%"class.network::mojom::blink::HttpRequestHeaderKeyValuePair"*), void (%"class.network::mojom::blink::HttpRequestHeaderKeyValuePair"*)* @_ZN7network5mojom5blink29HttpRequestHeaderKeyValuePairC2Ev
@_ZN7network5mojom5blink29HttpRequestHeaderKeyValuePairC1ERKN3WTF6StringES6_ = hidden unnamed_addr alias void (%"class.network::mojom::blink::HttpRequestHeaderKeyValuePair"*, %"class.WTF::String"*, %"class.WTF::String"*), void (%"class.network::mojom::blink::HttpRequestHeaderKeyValuePair"*, %"class.WTF::String"*, %"class.WTF::String"*)* @_ZN7network5mojom5blink29HttpRequestHeaderKeyValuePairC2ERKN3WTF6StringES6_
@_ZN7network5mojom5blink29HttpRequestHeaderKeyValuePairD1Ev = hidden unnamed_addr alias void (%"class.network::mojom::blink::HttpRequestHeaderKeyValuePair"*), void (%"class.network::mojom::blink::HttpRequestHeaderKeyValuePair"*)* @_ZN7network5mojom5blink29HttpRequestHeaderKeyValuePairD2Ev
@_ZN7network5mojom5blink18HttpRequestHeadersC1Ev = hidden unnamed_addr alias void (%"class.network::mojom::blink::HttpRequestHeaders"*), void (%"class.network::mojom::blink::HttpRequestHeaders"*)* @_ZN7network5mojom5blink18HttpRequestHeadersC2Ev
@_ZN7network5mojom5blink18HttpRequestHeadersC1EN3WTF6VectorIN4mojo16InlinedStructPtrINS1_29HttpRequestHeaderKeyValuePairEEELj0ENS3_18PartitionAllocatorEEE = hidden unnamed_addr alias void (%"class.network::mojom::blink::HttpRequestHeaders"*, %"class.WTF::Vector"*), void (%"class.network::mojom::blink::HttpRequestHeaders"*, %"class.WTF::Vector"*)* @_ZN7network5mojom5blink18HttpRequestHeadersC2EN3WTF6VectorIN4mojo16InlinedStructPtrINS1_29HttpRequestHeaderKeyValuePairEEELj0ENS3_18PartitionAllocatorEEE
@_ZN7network5mojom5blink18HttpRequestHeadersD1Ev = hidden unnamed_addr alias void (%"class.network::mojom::blink::HttpRequestHeaders"*), void (%"class.network::mojom::blink::HttpRequestHeaders"*)* @_ZN7network5mojom5blink18HttpRequestHeadersD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN7network5mojom5blink29HttpRequestHeaderKeyValuePairC2Ev(%"class.network::mojom::blink::HttpRequestHeaderKeyValuePair"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.network::mojom::blink::HttpRequestHeaderKeyValuePair"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 16, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7network5mojom5blink29HttpRequestHeaderKeyValuePairC2ERKN3WTF6StringES6_(%"class.network::mojom::blink::HttpRequestHeaderKeyValuePair"* nocapture, %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.WTF::String"* nocapture readonly dereferenceable(8)) unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = getelementptr inbounds %"class.network::mojom::blink::HttpRequestHeaderKeyValuePair", %"class.network::mojom::blink::HttpRequestHeaderKeyValuePair"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %5, %"class.WTF::StringImpl"** %6, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %7, label %25, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 2
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %25

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = zext i32 %15 to i33
  %17 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %16, i33 1) #10
  %18 = extractvalue { i33, i1 } %17, 1
  %19 = extractvalue { i33, i1 } %17, 0
  %20 = icmp slt i33 %19, 0
  %21 = or i1 %18, %20
  br i1 %21, label %22, label %23, !prof !2

22:                                               ; preds = %13
  tail call void @llvm.trap() #10
  unreachable

23:                                               ; preds = %13
  %24 = trunc i33 %19 to i32
  store i32 %24, i32* %14, align 4
  br label %25

25:                                               ; preds = %3, %8, %23
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = getelementptr inbounds %"class.network::mojom::blink::HttpRequestHeaderKeyValuePair", %"class.network::mojom::blink::HttpRequestHeaderKeyValuePair"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %27, %"class.WTF::StringImpl"** %28, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %29, label %47, label %30

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %47

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = zext i32 %37 to i33
  %39 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %38, i33 1) #10
  %40 = extractvalue { i33, i1 } %39, 1
  %41 = extractvalue { i33, i1 } %39, 0
  %42 = icmp slt i33 %41, 0
  %43 = or i1 %40, %42
  br i1 %43, label %44, label %45, !prof !2

44:                                               ; preds = %35
  tail call void @llvm.trap() #10
  unreachable

45:                                               ; preds = %35
  %46 = trunc i33 %41 to i32
  store i32 %46, i32* %36, align 4
  br label %47

47:                                               ; preds = %25, %30, %45
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7network5mojom5blink29HttpRequestHeaderKeyValuePairD2Ev(%"class.network::mojom::blink::HttpRequestHeaderKeyValuePair"* nocapture readonly) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.network::mojom::blink::HttpRequestHeaderKeyValuePair", %"class.network::mojom::blink::HttpRequestHeaderKeyValuePair"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %4, label %18, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = and i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %11 = load i32, i32* %10, align 4
  br i1 %9, label %12, label %14

12:                                               ; preds = %5
  %13 = add i32 %11, -1
  store i32 %13, i32* %10, align 4
  br label %14

14:                                               ; preds = %12, %5
  %15 = phi i32 [ %13, %12 ], [ %11, %5 ]
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %14
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %3) #10
  br label %18

18:                                               ; preds = %1, %14, %17
  %19 = getelementptr inbounds %"class.network::mojom::blink::HttpRequestHeaderKeyValuePair", %"class.network::mojom::blink::HttpRequestHeaderKeyValuePair"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  br i1 %21, label %35, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = and i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  br i1 %26, label %29, label %31

29:                                               ; preds = %22
  %30 = add i32 %28, -1
  store i32 %30, i32* %27, align 4
  br label %31

31:                                               ; preds = %29, %22
  %32 = phi i32 [ %30, %29 ], [ %28, %22 ]
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %35

34:                                               ; preds = %31
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %20) #10
  br label %35

35:                                               ; preds = %18, %31, %34
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK7network5mojom5blink29HttpRequestHeaderKeyValuePair4HashEm(%"class.network::mojom::blink::HttpRequestHeaderKeyValuePair"* nocapture readonly, i64) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.network::mojom::blink::HttpRequestHeaderKeyValuePair", %"class.network::mojom::blink::HttpRequestHeaderKeyValuePair"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load atomic i32, i32* %5 monotonic, align 4
  %7 = lshr i32 %6, 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %11

9:                                                ; preds = %2
  %10 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %4) #10
  br label %11

11:                                               ; preds = %2, %9
  %12 = phi i32 [ %10, %9 ], [ %7, %2 ]
  %13 = zext i32 %12 to i64
  %14 = shl i64 %1, 6
  %15 = lshr i64 %1, 2
  %16 = add i64 %15, %14
  %17 = add i64 %16, %13
  %18 = xor i64 %17, %1
  %19 = getelementptr inbounds %"class.network::mojom::blink::HttpRequestHeaderKeyValuePair", %"class.network::mojom::blink::HttpRequestHeaderKeyValuePair"* %0, i64 0, i32 1, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load atomic i32, i32* %21 monotonic, align 4
  %23 = lshr i32 %22, 8
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %27

25:                                               ; preds = %11
  %26 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %20) #10
  br label %27

27:                                               ; preds = %11, %25
  %28 = phi i32 [ %26, %25 ], [ %23, %11 ]
  %29 = zext i32 %28 to i64
  %30 = shl i64 %18, 6
  %31 = lshr i64 %18, 2
  %32 = add i64 %31, %30
  %33 = add i64 %32, %29
  %34 = xor i64 %33, %18
  ret i64 %34
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK7network5mojom5blink29HttpRequestHeaderKeyValuePair14WriteIntoTraceEN8perfetto11TracedValueE(%"class.network::mojom::blink::HttpRequestHeaderKeyValuePair"*, %"class.perfetto::TracedValue"*) local_unnamed_addr #2 align 2 {
  %3 = alloca %"class.perfetto::TracedValue", align 8
  %4 = alloca %"class.perfetto::TracedValue", align 8
  %5 = alloca %"class.perfetto::TracedDictionary", align 8
  %6 = alloca %"class.perfetto::TracedValue", align 8
  %7 = alloca %"class.perfetto::TracedValue", align 8
  %8 = bitcast %"class.perfetto::TracedDictionary"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #10
  %9 = bitcast %"class.perfetto::TracedDictionary"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  call void @_ZNO8perfetto11TracedValue15WriteDictionaryEv(%"class.perfetto::TracedDictionary"* nonnull sret %5, %"class.perfetto::TracedValue"* %1) #10
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %6, %"class.perfetto::TracedDictionary"* nonnull %5, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0)) #10
  %10 = getelementptr inbounds %"class.network::mojom::blink::HttpRequestHeaderKeyValuePair", %"class.network::mojom::blink::HttpRequestHeaderKeyValuePair"* %0, i64 0, i32 0
  %11 = bitcast %"class.perfetto::TracedValue"* %6 to i8*
  %12 = bitcast %"class.perfetto::TracedValue"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %12, i8* nonnull align 8 %11, i64 16, i1 false) #10
  call void @_ZNK3WTF6String14WriteIntoTraceEN8perfetto11TracedValueE(%"class.WTF::String"* %10, %"class.perfetto::TracedValue"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #10
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %7, %"class.perfetto::TracedDictionary"* nonnull %5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0)) #10
  %13 = getelementptr inbounds %"class.network::mojom::blink::HttpRequestHeaderKeyValuePair", %"class.network::mojom::blink::HttpRequestHeaderKeyValuePair"* %0, i64 0, i32 1
  %14 = bitcast %"class.perfetto::TracedValue"* %7 to i8*
  %15 = bitcast %"class.perfetto::TracedValue"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %15, i8* nonnull align 8 %14, i64 16, i1 false) #10
  call void @_ZNK3WTF6String14WriteIntoTraceEN8perfetto11TracedValueE(%"class.WTF::String"* %13, %"class.perfetto::TracedValue"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZNO8perfetto11TracedValue15WriteDictionaryEv(%"class.perfetto::TracedDictionary"* sret, %"class.perfetto::TracedValue"*) local_unnamed_addr #3

declare void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* sret, %"class.perfetto::TracedDictionary"*, i8*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7network5mojom5blink29HttpRequestHeaderKeyValuePair8ValidateEPKvPN4mojo8internal17ValidationContextE(i8*, %"class.mojo::internal::ValidationContext"*) local_unnamed_addr #2 align 2 {
  %3 = tail call zeroext i1 @_ZN7network5mojom8internal34HttpRequestHeaderKeyValuePair_Data8ValidateEPKvPN4mojo8internal17ValidationContextE(i8* %0, %"class.mojo::internal::ValidationContext"* %1) #10
  ret i1 %3
}

declare zeroext i1 @_ZN7network5mojom8internal34HttpRequestHeaderKeyValuePair_Data8ValidateEPKvPN4mojo8internal17ValidationContextE(i8*, %"class.mojo::internal::ValidationContext"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7network5mojom5blink18HttpRequestHeadersC2Ev(%"class.network::mojom::blink::HttpRequestHeaders"* nocapture) unnamed_addr #2 align 2 {
  %2 = bitcast %"class.network::mojom::blink::HttpRequestHeaders"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 16, i1 false) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7network5mojom5blink18HttpRequestHeadersC2EN3WTF6VectorIN4mojo16InlinedStructPtrINS1_29HttpRequestHeaderKeyValuePairEEELj0ENS3_18PartitionAllocatorEEE(%"class.network::mojom::blink::HttpRequestHeaders"* nocapture, %"class.WTF::Vector"* nocapture) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.network::mojom::blink::HttpRequestHeaders", %"class.network::mojom::blink::HttpRequestHeaders"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %4 = getelementptr inbounds %"class.network::mojom::blink::HttpRequestHeaders", %"class.network::mojom::blink::HttpRequestHeaders"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %5 = bitcast %"class.WTF::Vector"* %1 to i64*
  %6 = bitcast %"class.network::mojom::blink::HttpRequestHeaders"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 16, i1 false) #10
  %7 = load i64, i64* %5, align 8
  %8 = bitcast %"class.network::mojom::blink::HttpRequestHeaders"* %0 to i64*
  store atomic i64 0, i64* %5 monotonic, align 8
  store atomic i64 %7, i64* %8 monotonic, align 8
  %9 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 1
  %10 = load i32, i32* %3, align 4
  %11 = load i32, i32* %9, align 4
  store i32 %11, i32* %3, align 4
  store i32 %10, i32* %9, align 4
  %12 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 2
  %13 = load i32, i32* %4, align 4
  %14 = load i32, i32* %12, align 4
  store i32 %14, i32* %4, align 4
  store i32 %13, i32* %12, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7network5mojom5blink18HttpRequestHeadersD2Ev(%"class.network::mojom::blink::HttpRequestHeaders"* nocapture) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.network::mojom::blink::HttpRequestHeaders", %"class.network::mojom::blink::HttpRequestHeaders"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = load %"class.mojo::InlinedStructPtr"*, %"class.mojo::InlinedStructPtr"** %2, align 8
  %4 = icmp eq %"class.mojo::InlinedStructPtr"* %3, null
  br i1 %4, label %56, label %5, !prof !3

5:                                                ; preds = %1
  %6 = bitcast %"class.mojo::InlinedStructPtr"* %3 to i8*
  %7 = getelementptr inbounds %"class.network::mojom::blink::HttpRequestHeaders", %"class.network::mojom::blink::HttpRequestHeaders"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %54, label %10, !prof !2

10:                                               ; preds = %5
  %11 = zext i32 %8 to i64
  %12 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %3, i64 %11
  br label %13

13:                                               ; preds = %10, %48
  %14 = phi %"class.mojo::InlinedStructPtr"* [ %49, %48 ], [ %3, %10 ]
  %15 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %14, i64 0, i32 0, i32 1, i32 0, i32 0
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %17 = icmp eq %"class.WTF::StringImpl"* %16, null
  br i1 %17, label %31, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load atomic i32, i32* %19 monotonic, align 4
  %21 = and i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 0
  %24 = load i32, i32* %23, align 4
  br i1 %22, label %25, label %27

25:                                               ; preds = %18
  %26 = add i32 %24, -1
  store i32 %26, i32* %23, align 4
  br label %27

27:                                               ; preds = %25, %18
  %28 = phi i32 [ %26, %25 ], [ %24, %18 ]
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %31

30:                                               ; preds = %27
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %16) #10
  br label %31

31:                                               ; preds = %30, %27, %13
  %32 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %33, null
  br i1 %34, label %48, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = and i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 0
  %41 = load i32, i32* %40, align 4
  br i1 %39, label %42, label %44

42:                                               ; preds = %35
  %43 = add i32 %41, -1
  store i32 %43, i32* %40, align 4
  br label %44

44:                                               ; preds = %42, %35
  %45 = phi i32 [ %43, %42 ], [ %41, %35 ]
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %44
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %33) #10
  br label %48

48:                                               ; preds = %47, %44, %31
  %49 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %14, i64 1
  %50 = icmp eq %"class.mojo::InlinedStructPtr"* %49, %12
  br i1 %50, label %51, label %13

51:                                               ; preds = %48
  store i32 0, i32* %7, align 4
  %52 = bitcast %"class.network::mojom::blink::HttpRequestHeaders"* %0 to i8**
  %53 = load i8*, i8** %52, align 8
  br label %54

54:                                               ; preds = %51, %5
  %55 = phi i8* [ %53, %51 ], [ %6, %5 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %55) #10
  store %"class.mojo::InlinedStructPtr"* null, %"class.mojo::InlinedStructPtr"** %2, align 8
  br label %56

56:                                               ; preds = %1, %54
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK7network5mojom5blink18HttpRequestHeaders14WriteIntoTraceEN8perfetto11TracedValueE(%"class.network::mojom::blink::HttpRequestHeaders"* nocapture readonly, %"class.perfetto::TracedValue"*) local_unnamed_addr #2 align 2 {
  %3 = alloca %"class.perfetto::TracedValue", align 8
  %4 = alloca %"class.network::mojom::blink::HttpRequestHeaderKeyValuePair"*, align 8
  %5 = alloca %"class.perfetto::TracedValue", align 8
  %6 = alloca %"class.perfetto::TracedArray", align 8
  %7 = alloca %"class.perfetto::TracedValue", align 8
  %8 = alloca %"class.perfetto::TracedDictionary", align 8
  %9 = alloca %"class.perfetto::TracedValue", align 8
  %10 = bitcast %"class.perfetto::TracedDictionary"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #10
  %11 = bitcast %"class.perfetto::TracedDictionary"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false)
  call void @_ZNO8perfetto11TracedValue15WriteDictionaryEv(%"class.perfetto::TracedDictionary"* nonnull sret %8, %"class.perfetto::TracedValue"* %1) #10
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %9, %"class.perfetto::TracedDictionary"* nonnull %8, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3, i64 0, i64 0)) #10
  %12 = bitcast %"class.perfetto::TracedValue"* %9 to i8*
  %13 = bitcast %"class.perfetto::TracedValue"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %13, i8* nonnull align 8 %12, i64 16, i1 false) #10
  %14 = bitcast %"class.perfetto::TracedArray"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 16, i1 false) #10
  call void @_ZNO8perfetto11TracedValue10WriteArrayEv(%"class.perfetto::TracedArray"* nonnull sret %6, %"class.perfetto::TracedValue"* nonnull %7) #10
  %15 = getelementptr inbounds %"class.network::mojom::blink::HttpRequestHeaders", %"class.network::mojom::blink::HttpRequestHeaders"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.mojo::InlinedStructPtr"*, %"class.mojo::InlinedStructPtr"** %15, align 8
  %17 = getelementptr inbounds %"class.network::mojom::blink::HttpRequestHeaders", %"class.network::mojom::blink::HttpRequestHeaders"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %16, i64 %19
  %21 = icmp eq i32 %18, 0
  br i1 %21, label %35, label %22

22:                                               ; preds = %2
  %23 = bitcast %"class.perfetto::TracedValue"* %5 to i8*
  %24 = bitcast %"class.network::mojom::blink::HttpRequestHeaderKeyValuePair"** %4 to i8*
  %25 = bitcast %"class.perfetto::TracedValue"* %3 to i8*
  br label %26

26:                                               ; preds = %26, %22
  %27 = phi %"class.mojo::InlinedStructPtr"* [ %16, %22 ], [ %33, %26 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23) #10
  call void @_ZN8perfetto11TracedArray10AppendItemEv(%"class.perfetto::TracedValue"* nonnull sret %5, %"class.perfetto::TracedArray"* nonnull %6) #10
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #10
  %28 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %27, i64 0, i32 1
  %29 = load i32, i32* %28, align 8
  %30 = icmp eq i32 %29, 0
  %31 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %27, i64 0, i32 0
  %32 = select i1 %30, %"class.network::mojom::blink::HttpRequestHeaderKeyValuePair"* null, %"class.network::mojom::blink::HttpRequestHeaderKeyValuePair"* %31
  store %"class.network::mojom::blink::HttpRequestHeaderKeyValuePair"* %32, %"class.network::mojom::blink::HttpRequestHeaderKeyValuePair"** %4, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %25) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %25, i8* nonnull align 8 %23, i64 16, i1 false) #10
  call void @_ZN8perfetto8internal9WriteImplIPN7network5mojom5blink29HttpRequestHeaderKeyValuePairEEEDTcmclsr17TraceFormatTraitsINS_4base12remove_cvrefIT_E4typeEEE14WriteIntoTraceclL_ZNSt3__17declvalINS_11TracedValueEEEDTclsr3std3__1E9__declvalIS9_ELi0EEEvEEclsr3stdE7declvalIS9_EEEcvv_EENS7_12priority_tagILm3EEESE_OS9_(%"class.perfetto::TracedValue"* nonnull %3, %"class.network::mojom::blink::HttpRequestHeaderKeyValuePair"** nonnull dereferenceable(8) %4) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %25) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #10
  %33 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %27, i64 1
  %34 = icmp eq %"class.mojo::InlinedStructPtr"* %33, %20
  br i1 %34, label %35, label %26

35:                                               ; preds = %26, %2
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7network5mojom5blink18HttpRequestHeaders8ValidateEPKvPN4mojo8internal17ValidationContextE(i8*, %"class.mojo::internal::ValidationContext"*) local_unnamed_addr #2 align 2 {
  %3 = tail call zeroext i1 @_ZN7network5mojom8internal23HttpRequestHeaders_Data8ValidateEPKvPN4mojo8internal17ValidationContextE(i8* %0, %"class.mojo::internal::ValidationContext"* %1) #10
  ret i1 %3
}

declare zeroext i1 @_ZN7network5mojom8internal23HttpRequestHeaders_Data8ValidateEPKvPN4mojo8internal17ValidationContextE(i8*, %"class.mojo::internal::ValidationContext"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4mojo12StructTraitsIN7network5mojom37HttpRequestHeaderKeyValuePairDataViewENS_16InlinedStructPtrINS2_5blink29HttpRequestHeaderKeyValuePairEEEE4ReadES3_PS7_(%"class.network::mojom::internal::HttpRequestHeaderKeyValuePair_Data"*, %"class.mojo::Message"*, %"class.mojo::InlinedStructPtr"*) local_unnamed_addr #2 align 2 {
  %4 = alloca %"class.mojo::InlinedStructPtr", align 8
  %5 = bitcast %"class.mojo::InlinedStructPtr"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %4, i64 0, i32 0, i32 1, i32 0, i32 0
  %8 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %4, i64 0, i32 1
  %9 = bitcast %"class.mojo::InlinedStructPtr"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 24, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 16, i1 false) #10, !alias.scope !4
  store i32 1, i32* %8, align 8, !alias.scope !4
  %10 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %4, i64 0, i32 0
  %11 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %4, i64 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.network::mojom::internal::HttpRequestHeaderKeyValuePair_Data", %"class.network::mojom::internal::HttpRequestHeaderKeyValuePair_Data"* %0, i64 0, i32 1
  %13 = getelementptr inbounds %"struct.mojo::internal::Pointer", %"struct.mojo::internal::Pointer"* %12, i64 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %16, label %17

16:                                               ; preds = %3
  call void @_ZN4mojo12StringTraitsIN3WTF6StringEE9SetToNullEPS2_(%"class.WTF::String"* nonnull %11) #10
  br label %25

17:                                               ; preds = %3
  %18 = bitcast %"struct.mojo::internal::Pointer"* %12 to i8*
  %19 = getelementptr inbounds i8, i8* %18, i64 %14
  %20 = bitcast i8* %19 to %"class.mojo::internal::Array_Data"*
  %21 = call zeroext i1 @_ZN4mojo12StringTraitsIN3WTF6StringEE4ReadENS_14StringDataViewEPS2_(%"class.mojo::internal::Array_Data"* nonnull %20, %"class.WTF::String"* nonnull %11) #10
  br i1 %21, label %22, label %40

22:                                               ; preds = %17
  %23 = call zeroext i1 @_ZN4mojo12StringTraitsIN3WTF6StringEE11IsValidUTF8ERKS2_(%"class.WTF::String"* nonnull dereferenceable(8) %11) #10
  br i1 %23, label %25, label %24

24:                                               ; preds = %22
  call void @_ZN4mojo8internal34RecordInvalidStringDeserializationEv() #10
  br label %25

25:                                               ; preds = %16, %24, %22
  %26 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %4, i64 0, i32 0, i32 1
  %27 = getelementptr inbounds %"class.network::mojom::internal::HttpRequestHeaderKeyValuePair_Data", %"class.network::mojom::internal::HttpRequestHeaderKeyValuePair_Data"* %0, i64 0, i32 2
  %28 = getelementptr inbounds %"struct.mojo::internal::Pointer", %"struct.mojo::internal::Pointer"* %27, i64 0, i32 0
  %29 = load i64, i64* %28, align 8
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %25
  call void @_ZN4mojo12StringTraitsIN3WTF6StringEE9SetToNullEPS2_(%"class.WTF::String"* %26) #10
  br label %40

32:                                               ; preds = %25
  %33 = bitcast %"struct.mojo::internal::Pointer"* %27 to i8*
  %34 = getelementptr inbounds i8, i8* %33, i64 %29
  %35 = bitcast i8* %34 to %"class.mojo::internal::Array_Data"*
  %36 = call zeroext i1 @_ZN4mojo12StringTraitsIN3WTF6StringEE4ReadENS_14StringDataViewEPS2_(%"class.mojo::internal::Array_Data"* nonnull %35, %"class.WTF::String"* %26) #10
  br i1 %36, label %37, label %40

37:                                               ; preds = %32
  %38 = call zeroext i1 @_ZN4mojo12StringTraitsIN3WTF6StringEE11IsValidUTF8ERKS2_(%"class.WTF::String"* dereferenceable(8) %26) #10
  br i1 %38, label %40, label %39

39:                                               ; preds = %37
  call void @_ZN4mojo8internal34RecordInvalidStringDeserializationEv() #10
  br label %40

40:                                               ; preds = %32, %31, %39, %37, %17
  %41 = phi i8 [ 0, %17 ], [ 0, %32 ], [ 1, %31 ], [ 1, %39 ], [ 1, %37 ]
  %42 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %2, i64 0, i32 1
  store i32 0, i32* %42, align 8
  %43 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %2, i64 0, i32 0, i32 1, i32 0, i32 0
  %44 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %43, align 8
  %45 = icmp eq %"class.WTF::StringImpl"* %44, null
  br i1 %45, label %59, label %46

46:                                               ; preds = %40
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = load atomic i32, i32* %47 monotonic, align 4
  %49 = and i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 0
  %52 = load i32, i32* %51, align 4
  br i1 %50, label %53, label %55

53:                                               ; preds = %46
  %54 = add i32 %52, -1
  store i32 %54, i32* %51, align 4
  br label %55

55:                                               ; preds = %53, %46
  %56 = phi i32 [ %54, %53 ], [ %52, %46 ]
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %59

58:                                               ; preds = %55
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %44) #10
  br label %59

59:                                               ; preds = %58, %55, %40
  %60 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %61 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %62 = icmp eq %"class.WTF::StringImpl"* %61, null
  br i1 %62, label %76, label %63

63:                                               ; preds = %59
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load atomic i32, i32* %64 monotonic, align 4
  %66 = and i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 0
  %69 = load i32, i32* %68, align 4
  br i1 %67, label %70, label %72

70:                                               ; preds = %63
  %71 = add i32 %69, -1
  store i32 %71, i32* %68, align 4
  br label %72

72:                                               ; preds = %70, %63
  %73 = phi i32 [ %71, %70 ], [ %69, %63 ]
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %76

75:                                               ; preds = %72
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %61) #10
  br label %76

76:                                               ; preds = %59, %72, %75
  %77 = bitcast %"class.mojo::InlinedStructPtr"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %77, i8 0, i64 16, i1 false) #10
  %78 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %2, i64 0, i32 0
  call void @_ZNSt3__14swapIN7network5mojom5blink29HttpRequestHeaderKeyValuePairEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS6_EE5valueEvE4typeERS6_S9_(%"class.network::mojom::blink::HttpRequestHeaderKeyValuePair"* dereferenceable(16) %78, %"class.network::mojom::blink::HttpRequestHeaderKeyValuePair"* nonnull dereferenceable(16) %10) #10
  %79 = load i32, i32* %42, align 4
  %80 = load i32, i32* %8, align 8
  store i32 %80, i32* %42, align 4
  store i32 %79, i32* %8, align 8
  %81 = icmp ne i8 %41, 0
  %82 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %83 = icmp eq %"class.WTF::StringImpl"* %82, null
  br i1 %83, label %97, label %84

84:                                               ; preds = %76
  %85 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %82, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %86 = load atomic i32, i32* %85 monotonic, align 4
  %87 = and i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %82, i64 0, i32 0
  %90 = load i32, i32* %89, align 4
  br i1 %88, label %91, label %93

91:                                               ; preds = %84
  %92 = add i32 %90, -1
  store i32 %92, i32* %89, align 4
  br label %93

93:                                               ; preds = %91, %84
  %94 = phi i32 [ %92, %91 ], [ %90, %84 ]
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %96, label %97

96:                                               ; preds = %93
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %82) #10
  br label %97

97:                                               ; preds = %96, %93, %76
  %98 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %99 = icmp eq %"class.WTF::StringImpl"* %98, null
  br i1 %99, label %113, label %100

100:                                              ; preds = %97
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = load atomic i32, i32* %101 monotonic, align 4
  %103 = and i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 0
  %106 = load i32, i32* %105, align 4
  br i1 %104, label %107, label %109

107:                                              ; preds = %100
  %108 = add i32 %106, -1
  store i32 %108, i32* %105, align 4
  br label %109

109:                                              ; preds = %107, %100
  %110 = phi i32 [ %108, %107 ], [ %106, %100 ]
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %113

112:                                              ; preds = %109
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %98) #10
  br label %113

113:                                              ; preds = %97, %109, %112
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #10
  ret i1 %81
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4mojo12StructTraitsIN7network5mojom26HttpRequestHeadersDataViewENS_9StructPtrINS2_5blink18HttpRequestHeadersEEEE4ReadES3_PS7_(%"class.network::mojom::internal::HttpRequestHeaders_Data"*, %"class.mojo::Message"*, %"class.mojo::StructPtr"* nocapture) local_unnamed_addr #2 align 2 {
  %4 = tail call i8* @_Znwm(i64 16) #11, !noalias !7
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 0, i64 16, i1 false) #10, !noalias !7
  %5 = ptrtoint i8* %4 to i64
  %6 = getelementptr inbounds %"class.network::mojom::internal::HttpRequestHeaders_Data", %"class.network::mojom::internal::HttpRequestHeaders_Data"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"struct.mojo::internal::Pointer.31", %"struct.mojo::internal::Pointer.31"* %6, i64 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %16, label %10

10:                                               ; preds = %3
  %11 = bitcast i8* %4 to %"class.WTF::Vector"*
  %12 = bitcast %"struct.mojo::internal::Pointer.31"* %6 to i8*
  %13 = getelementptr inbounds i8, i8* %12, i64 %8
  %14 = bitcast i8* %13 to %"class.mojo::internal::Array_Data.43"*
  %15 = tail call zeroext i1 @_ZN4mojo8internal15ArraySerializerINS_13ArrayDataViewIN7network5mojom37HttpRequestHeaderKeyValuePairDataViewEEEN3WTF6VectorINS_16InlinedStructPtrINS4_5blink29HttpRequestHeaderKeyValuePairEEELj0ENS7_18PartitionAllocatorEEENS0_13ArrayIteratorINS_11ArrayTraitsISE_EESE_Lb0EEEvE19DeserializeElementsEPNS0_10Array_DataINS0_7PointerINS4_8internal34HttpRequestHeaderKeyValuePair_DataEEEEEPSE_PNS_7MessageE(%"class.mojo::internal::Array_Data.43"* nonnull %14, %"class.WTF::Vector"* nonnull %11, %"class.mojo::Message"* %1) #10
  br i1 %15, label %16, label %17

16:                                               ; preds = %3, %10
  br label %17

17:                                               ; preds = %10, %16
  %18 = phi i1 [ true, %16 ], [ false, %10 ]
  %19 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %20 = load %"class.network::mojom::blink::HttpRequestHeaders"*, %"class.network::mojom::blink::HttpRequestHeaders"** %19, align 8
  store %"class.network::mojom::blink::HttpRequestHeaders"* null, %"class.network::mojom::blink::HttpRequestHeaders"** %19, align 8
  %21 = icmp eq %"class.network::mojom::blink::HttpRequestHeaders"* %20, null
  br i1 %21, label %22, label %24

22:                                               ; preds = %17
  %23 = bitcast %"class.mojo::StructPtr"* %2 to i64*
  store i64 %5, i64* %23, align 8
  br label %31

24:                                               ; preds = %17
  tail call void @_ZN7network5mojom5blink18HttpRequestHeadersD2Ev(%"class.network::mojom::blink::HttpRequestHeaders"* nonnull %20) #10
  %25 = bitcast %"class.network::mojom::blink::HttpRequestHeaders"* %20 to i8*
  tail call void @_ZdlPv(i8* %25) #11
  %26 = bitcast %"class.mojo::StructPtr"* %2 to i64*
  %27 = load %"class.network::mojom::blink::HttpRequestHeaders"*, %"class.network::mojom::blink::HttpRequestHeaders"** %19, align 8
  store i64 %5, i64* %26, align 8
  %28 = icmp eq %"class.network::mojom::blink::HttpRequestHeaders"* %27, null
  br i1 %28, label %31, label %29

29:                                               ; preds = %24
  tail call void @_ZN7network5mojom5blink18HttpRequestHeadersD2Ev(%"class.network::mojom::blink::HttpRequestHeaders"* nonnull %27) #10
  %30 = bitcast %"class.network::mojom::blink::HttpRequestHeaders"* %27 to i8*
  tail call void @_ZdlPv(i8* %30) #11
  br label %31

31:                                               ; preds = %22, %24, %29
  ret i1 %18
}

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #4

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #3

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

declare i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZNK3WTF6String14WriteIntoTraceEN8perfetto11TracedValueE(%"class.WTF::String"*, %"class.perfetto::TracedValue"*) local_unnamed_addr #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

declare void @_ZNO8perfetto11TracedValue10WriteArrayEv(%"class.perfetto::TracedArray"* sret, %"class.perfetto::TracedValue"*) local_unnamed_addr #3

declare void @_ZN8perfetto11TracedArray10AppendItemEv(%"class.perfetto::TracedValue"* sret, %"class.perfetto::TracedArray"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8perfetto8internal9WriteImplIPN7network5mojom5blink29HttpRequestHeaderKeyValuePairEEEDTcmclsr17TraceFormatTraitsINS_4base12remove_cvrefIT_E4typeEEE14WriteIntoTraceclL_ZNSt3__17declvalINS_11TracedValueEEEDTclsr3std3__1E9__declvalIS9_ELi0EEEvEEclsr3stdE7declvalIS9_EEEcvv_EENS7_12priority_tagILm3EEESE_OS9_(%"class.perfetto::TracedValue"*, %"class.network::mojom::blink::HttpRequestHeaderKeyValuePair"** dereferenceable(8)) local_unnamed_addr #2 comdat {
  %3 = alloca %"class.perfetto::TracedValue", align 8
  %4 = alloca %"class.perfetto::TracedValue", align 8
  %5 = alloca %"class.perfetto::TracedDictionary", align 8
  %6 = alloca %"class.perfetto::TracedValue", align 8
  %7 = alloca %"class.perfetto::TracedValue", align 8
  %8 = alloca %"class.perfetto::TracedValue", align 8
  %9 = alloca %"class.perfetto::TracedValue", align 8
  %10 = bitcast %"class.perfetto::TracedValue"* %9 to i8*
  %11 = bitcast %"class.perfetto::TracedValue"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %10, i8* align 8 %11, i64 16, i1 false)
  %12 = load %"class.network::mojom::blink::HttpRequestHeaderKeyValuePair"*, %"class.network::mojom::blink::HttpRequestHeaderKeyValuePair"** %1, align 8
  %13 = icmp eq %"class.network::mojom::blink::HttpRequestHeaderKeyValuePair"* %12, null
  br i1 %13, label %14, label %15

14:                                               ; preds = %2
  call void @_ZNO8perfetto11TracedValue12WritePointerEPKv(%"class.perfetto::TracedValue"* nonnull %9, i8* null) #10
  br label %24

15:                                               ; preds = %2
  %16 = bitcast %"class.perfetto::TracedValue"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %16, i8* nonnull align 8 %10, i64 16, i1 false) #10
  %17 = bitcast %"class.perfetto::TracedValue"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #10
  %18 = bitcast %"class.perfetto::TracedValue"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %18) #10
  %19 = bitcast %"class.perfetto::TracedDictionary"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 16, i1 false) #10
  call void @_ZNO8perfetto11TracedValue15WriteDictionaryEv(%"class.perfetto::TracedDictionary"* nonnull sret %5, %"class.perfetto::TracedValue"* nonnull %8) #10
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %6, %"class.perfetto::TracedDictionary"* nonnull %5, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0)) #10
  %20 = getelementptr inbounds %"class.network::mojom::blink::HttpRequestHeaderKeyValuePair", %"class.network::mojom::blink::HttpRequestHeaderKeyValuePair"* %12, i64 0, i32 0
  %21 = bitcast %"class.perfetto::TracedValue"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %21) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %21, i8* nonnull align 8 %17, i64 16, i1 false) #10
  call void @_ZNK3WTF6String14WriteIntoTraceEN8perfetto11TracedValueE(%"class.WTF::String"* %20, %"class.perfetto::TracedValue"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %21) #10
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %7, %"class.perfetto::TracedDictionary"* nonnull %5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0)) #10
  %22 = getelementptr inbounds %"class.network::mojom::blink::HttpRequestHeaderKeyValuePair", %"class.network::mojom::blink::HttpRequestHeaderKeyValuePair"* %12, i64 0, i32 1
  %23 = bitcast %"class.perfetto::TracedValue"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %23, i8* nonnull align 8 %18, i64 16, i1 false) #10
  call void @_ZNK3WTF6String14WriteIntoTraceEN8perfetto11TracedValueE(%"class.WTF::String"* %22, %"class.perfetto::TracedValue"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #10
  br label %24

24:                                               ; preds = %14, %15
  ret void
}

declare void @_ZNO8perfetto11TracedValue12WritePointerEPKv(%"class.perfetto::TracedValue"*, i8*) local_unnamed_addr #3

declare zeroext i1 @_ZN4mojo12StringTraitsIN3WTF6StringEE4ReadENS_14StringDataViewEPS2_(%"class.mojo::internal::Array_Data"*, %"class.WTF::String"*) local_unnamed_addr #3

declare zeroext i1 @_ZN4mojo12StringTraitsIN3WTF6StringEE11IsValidUTF8ERKS2_(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #3

declare void @_ZN4mojo8internal34RecordInvalidStringDeserializationEv() local_unnamed_addr #3

declare void @_ZN4mojo12StringTraitsIN3WTF6StringEE9SetToNullEPS2_(%"class.WTF::String"*) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__14swapIN7network5mojom5blink29HttpRequestHeaderKeyValuePairEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS6_EE5valueEvE4typeERS6_S9_(%"class.network::mojom::blink::HttpRequestHeaderKeyValuePair"* dereferenceable(16), %"class.network::mojom::blink::HttpRequestHeaderKeyValuePair"* dereferenceable(16)) local_unnamed_addr #8 comdat {
  %3 = getelementptr inbounds %"class.network::mojom::blink::HttpRequestHeaderKeyValuePair", %"class.network::mojom::blink::HttpRequestHeaderKeyValuePair"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %23, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %23

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = zext i32 %13 to i33
  %15 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %14, i33 1) #10
  %16 = extractvalue { i33, i1 } %15, 1
  %17 = extractvalue { i33, i1 } %15, 0
  %18 = icmp slt i33 %17, 0
  %19 = or i1 %16, %18
  br i1 %19, label %20, label %21, !prof !2

20:                                               ; preds = %11
  tail call void @llvm.trap() #10
  unreachable

21:                                               ; preds = %11
  %22 = trunc i33 %17 to i32
  store i32 %22, i32* %12, align 4
  br label %23

23:                                               ; preds = %21, %6, %2
  %24 = getelementptr inbounds %"class.network::mojom::blink::HttpRequestHeaderKeyValuePair", %"class.network::mojom::blink::HttpRequestHeaderKeyValuePair"* %0, i64 0, i32 1, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %44, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %44

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = zext i32 %34 to i33
  %36 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %35, i33 1) #10
  %37 = extractvalue { i33, i1 } %36, 1
  %38 = extractvalue { i33, i1 } %36, 0
  %39 = icmp slt i33 %38, 0
  %40 = or i1 %37, %39
  br i1 %40, label %41, label %42, !prof !2

41:                                               ; preds = %32
  tail call void @llvm.trap() #10
  unreachable

42:                                               ; preds = %32
  %43 = trunc i33 %38 to i32
  store i32 %43, i32* %33, align 4
  br label %44

44:                                               ; preds = %23, %27, %42
  %45 = tail call dereferenceable(16) %"class.network::mojom::blink::HttpRequestHeaderKeyValuePair"* @_ZN7network5mojom5blink29HttpRequestHeaderKeyValuePairaSERKS2_(%"class.network::mojom::blink::HttpRequestHeaderKeyValuePair"* %0, %"class.network::mojom::blink::HttpRequestHeaderKeyValuePair"* dereferenceable(16) %1) #10
  br i1 %5, label %63, label %46

46:                                               ; preds = %44
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = load atomic i32, i32* %47 monotonic, align 4
  %49 = and i32 %48, 2
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %63

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %53 = load i32, i32* %52, align 4
  %54 = zext i32 %53 to i33
  %55 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %54, i33 1) #10
  %56 = extractvalue { i33, i1 } %55, 1
  %57 = extractvalue { i33, i1 } %55, 0
  %58 = icmp slt i33 %57, 0
  %59 = or i1 %56, %58
  br i1 %59, label %60, label %61, !prof !2

60:                                               ; preds = %51
  tail call void @llvm.trap() #10
  unreachable

61:                                               ; preds = %51
  %62 = trunc i33 %57 to i32
  store i32 %62, i32* %52, align 4
  br label %63

63:                                               ; preds = %61, %46, %44
  %64 = ptrtoint %"class.WTF::StringImpl"* %4 to i64
  %65 = bitcast %"class.network::mojom::blink::HttpRequestHeaderKeyValuePair"* %1 to i64*
  %66 = getelementptr inbounds %"class.network::mojom::blink::HttpRequestHeaderKeyValuePair", %"class.network::mojom::blink::HttpRequestHeaderKeyValuePair"* %1, i64 0, i32 0, i32 0, i32 0
  %67 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %66, align 8
  store i64 %64, i64* %65, align 8
  %68 = icmp eq %"class.WTF::StringImpl"* %67, null
  br i1 %68, label %82, label %69

69:                                               ; preds = %63
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %67, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = load atomic i32, i32* %70 monotonic, align 4
  %72 = and i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %67, i64 0, i32 0
  %75 = load i32, i32* %74, align 4
  br i1 %73, label %76, label %78

76:                                               ; preds = %69
  %77 = add i32 %75, -1
  store i32 %77, i32* %74, align 4
  br label %78

78:                                               ; preds = %76, %69
  %79 = phi i32 [ %77, %76 ], [ %75, %69 ]
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %82

81:                                               ; preds = %78
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %67) #10
  br label %82

82:                                               ; preds = %81, %78, %63
  %83 = getelementptr inbounds %"class.network::mojom::blink::HttpRequestHeaderKeyValuePair", %"class.network::mojom::blink::HttpRequestHeaderKeyValuePair"* %1, i64 0, i32 1
  br i1 %26, label %101, label %84

84:                                               ; preds = %82
  %85 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %86 = load atomic i32, i32* %85 monotonic, align 4
  %87 = and i32 %86, 2
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %101

89:                                               ; preds = %84
  %90 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 0
  %91 = load i32, i32* %90, align 4
  %92 = zext i32 %91 to i33
  %93 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %92, i33 1) #10
  %94 = extractvalue { i33, i1 } %93, 1
  %95 = extractvalue { i33, i1 } %93, 0
  %96 = icmp slt i33 %95, 0
  %97 = or i1 %94, %96
  br i1 %97, label %98, label %99, !prof !2

98:                                               ; preds = %89
  tail call void @llvm.trap() #10
  unreachable

99:                                               ; preds = %89
  %100 = trunc i33 %95 to i32
  store i32 %100, i32* %90, align 4
  br label %101

101:                                              ; preds = %99, %84, %82
  %102 = ptrtoint %"class.WTF::StringImpl"* %25 to i64
  %103 = bitcast %"class.WTF::String"* %83 to i64*
  %104 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %83, i64 0, i32 0, i32 0
  %105 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %104, align 8
  store i64 %102, i64* %103, align 8
  %106 = icmp eq %"class.WTF::StringImpl"* %105, null
  br i1 %106, label %120, label %107

107:                                              ; preds = %101
  %108 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %109 = load atomic i32, i32* %108 monotonic, align 4
  %110 = and i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 0
  %113 = load i32, i32* %112, align 4
  br i1 %111, label %114, label %116

114:                                              ; preds = %107
  %115 = add i32 %113, -1
  store i32 %115, i32* %112, align 4
  br label %116

116:                                              ; preds = %114, %107
  %117 = phi i32 [ %115, %114 ], [ %113, %107 ]
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %119, label %120

119:                                              ; preds = %116
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %105) #10
  br label %120

120:                                              ; preds = %101, %116, %119
  br i1 %26, label %134, label %121

121:                                              ; preds = %120
  %122 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %123 = load atomic i32, i32* %122 monotonic, align 4
  %124 = and i32 %123, 2
  %125 = icmp eq i32 %124, 0
  %126 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 0
  %127 = load i32, i32* %126, align 4
  br i1 %125, label %128, label %130

128:                                              ; preds = %121
  %129 = add i32 %127, -1
  store i32 %129, i32* %126, align 4
  br label %130

130:                                              ; preds = %128, %121
  %131 = phi i32 [ %129, %128 ], [ %127, %121 ]
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %133, label %134

133:                                              ; preds = %130
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %25) #10
  br label %134

134:                                              ; preds = %133, %130, %120
  br i1 %5, label %148, label %135

135:                                              ; preds = %134
  %136 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %137 = load atomic i32, i32* %136 monotonic, align 4
  %138 = and i32 %137, 2
  %139 = icmp eq i32 %138, 0
  %140 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %141 = load i32, i32* %140, align 4
  br i1 %139, label %142, label %144

142:                                              ; preds = %135
  %143 = add i32 %141, -1
  store i32 %143, i32* %140, align 4
  br label %144

144:                                              ; preds = %142, %135
  %145 = phi i32 [ %143, %142 ], [ %141, %135 ]
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %147, label %148

147:                                              ; preds = %144
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #10
  br label %148

148:                                              ; preds = %134, %144, %147
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"class.network::mojom::blink::HttpRequestHeaderKeyValuePair"* @_ZN7network5mojom5blink29HttpRequestHeaderKeyValuePairaSERKS2_(%"class.network::mojom::blink::HttpRequestHeaderKeyValuePair"*, %"class.network::mojom::blink::HttpRequestHeaderKeyValuePair"* dereferenceable(16)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.network::mojom::blink::HttpRequestHeaderKeyValuePair", %"class.network::mojom::blink::HttpRequestHeaderKeyValuePair"* %1, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %23, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %23

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = zext i32 %13 to i33
  %15 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %14, i33 1) #10
  %16 = extractvalue { i33, i1 } %15, 1
  %17 = extractvalue { i33, i1 } %15, 0
  %18 = icmp slt i33 %17, 0
  %19 = or i1 %16, %18
  br i1 %19, label %20, label %21, !prof !2

20:                                               ; preds = %11
  tail call void @llvm.trap() #10
  unreachable

21:                                               ; preds = %11
  %22 = trunc i33 %17 to i32
  store i32 %22, i32* %12, align 4
  br label %23

23:                                               ; preds = %21, %6, %2
  %24 = ptrtoint %"class.WTF::StringImpl"* %4 to i64
  %25 = bitcast %"class.network::mojom::blink::HttpRequestHeaderKeyValuePair"* %0 to i64*
  %26 = getelementptr inbounds %"class.network::mojom::blink::HttpRequestHeaderKeyValuePair", %"class.network::mojom::blink::HttpRequestHeaderKeyValuePair"* %0, i64 0, i32 0, i32 0, i32 0
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  store i64 %24, i64* %25, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #10
  br label %42

42:                                               ; preds = %23, %38, %41
  %43 = getelementptr inbounds %"class.network::mojom::blink::HttpRequestHeaderKeyValuePair", %"class.network::mojom::blink::HttpRequestHeaderKeyValuePair"* %0, i64 0, i32 1
  %44 = getelementptr inbounds %"class.network::mojom::blink::HttpRequestHeaderKeyValuePair", %"class.network::mojom::blink::HttpRequestHeaderKeyValuePair"* %1, i64 0, i32 1, i32 0, i32 0
  %45 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %44, align 8
  %46 = icmp eq %"class.WTF::StringImpl"* %45, null
  br i1 %46, label %64, label %47

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load atomic i32, i32* %48 monotonic, align 4
  %50 = and i32 %49, 2
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %64

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 0
  %54 = load i32, i32* %53, align 4
  %55 = zext i32 %54 to i33
  %56 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %55, i33 1) #10
  %57 = extractvalue { i33, i1 } %56, 1
  %58 = extractvalue { i33, i1 } %56, 0
  %59 = icmp slt i33 %58, 0
  %60 = or i1 %57, %59
  br i1 %60, label %61, label %62, !prof !2

61:                                               ; preds = %52
  tail call void @llvm.trap() #10
  unreachable

62:                                               ; preds = %52
  %63 = trunc i33 %58 to i32
  store i32 %63, i32* %53, align 4
  br label %64

64:                                               ; preds = %62, %47, %42
  %65 = ptrtoint %"class.WTF::StringImpl"* %45 to i64
  %66 = bitcast %"class.WTF::String"* %43 to i64*
  %67 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %43, i64 0, i32 0, i32 0
  %68 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %67, align 8
  store i64 %65, i64* %66, align 8
  %69 = icmp eq %"class.WTF::StringImpl"* %68, null
  br i1 %69, label %83, label %70

70:                                               ; preds = %64
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = load atomic i32, i32* %71 monotonic, align 4
  %73 = and i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 0, i32 0
  %76 = load i32, i32* %75, align 4
  br i1 %74, label %77, label %79

77:                                               ; preds = %70
  %78 = add i32 %76, -1
  store i32 %78, i32* %75, align 4
  br label %79

79:                                               ; preds = %77, %70
  %80 = phi i32 [ %78, %77 ], [ %76, %70 ]
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %83

82:                                               ; preds = %79
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %68) #10
  br label %83

83:                                               ; preds = %64, %79, %82
  ret %"class.network::mojom::blink::HttpRequestHeaderKeyValuePair"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4mojo8internal15ArraySerializerINS_13ArrayDataViewIN7network5mojom37HttpRequestHeaderKeyValuePairDataViewEEEN3WTF6VectorINS_16InlinedStructPtrINS4_5blink29HttpRequestHeaderKeyValuePairEEELj0ENS7_18PartitionAllocatorEEENS0_13ArrayIteratorINS_11ArrayTraitsISE_EESE_Lb0EEEvE19DeserializeElementsEPNS0_10Array_DataINS0_7PointerINS4_8internal34HttpRequestHeaderKeyValuePair_DataEEEEEPSE_PNS_7MessageE(%"class.mojo::internal::Array_Data.43"*, %"class.WTF::Vector"*, %"class.mojo::Message"*) local_unnamed_addr #2 comdat align 2 {
  %4 = getelementptr inbounds %"class.mojo::internal::Array_Data.43", %"class.mojo::internal::Array_Data.43"* %0, i64 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 1
  tail call void @_ZN3WTF6VectorIN4mojo16InlinedStructPtrIN7network5mojom5blink29HttpRequestHeaderKeyValuePairEEELj0ENS_18PartitionAllocatorEE6resizeEj(%"class.WTF::Vector"* %1, i32 %5) #10
  %6 = load i32, i32* %4, align 1
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %67, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.mojo::internal::Array_Data.43", %"class.mojo::internal::Array_Data.43"* %0, i64 1
  br label %10

10:                                               ; preds = %8, %63
  %11 = phi i64 [ 0, %8 ], [ %18, %63 ]
  %12 = getelementptr inbounds %"class.mojo::internal::Array_Data.43", %"class.mojo::internal::Array_Data.43"* %9, i64 %11
  %13 = bitcast %"class.mojo::internal::Array_Data.43"* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = icmp eq i64 %14, 0
  %16 = bitcast %"class.mojo::internal::Array_Data.43"* %12 to i8*
  %17 = getelementptr inbounds i8, i8* %16, i64 %14
  %18 = add nuw nsw i64 %11, 1
  %19 = trunc i64 %11 to i32
  %20 = tail call dereferenceable(24) %"class.mojo::InlinedStructPtr"* @_ZN3WTF6VectorIN4mojo16InlinedStructPtrIN7network5mojom5blink29HttpRequestHeaderKeyValuePairEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %1, i32 %19) #10
  %21 = icmp eq i8* %17, null
  %22 = or i1 %15, %21
  br i1 %22, label %23, label %60

23:                                               ; preds = %10
  %24 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %20, i64 0, i32 1
  store i32 0, i32* %24, align 8
  %25 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %20, i64 0, i32 0, i32 1, i32 0, i32 0
  %26 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  %27 = icmp eq %"class.WTF::StringImpl"* %26, null
  br i1 %27, label %41, label %28

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load atomic i32, i32* %29 monotonic, align 4
  %31 = and i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  br i1 %32, label %35, label %37

35:                                               ; preds = %28
  %36 = add i32 %34, -1
  store i32 %36, i32* %33, align 4
  br label %37

37:                                               ; preds = %35, %28
  %38 = phi i32 [ %36, %35 ], [ %34, %28 ]
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %41

40:                                               ; preds = %37
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %26) #10
  br label %41

41:                                               ; preds = %40, %37, %23
  %42 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %20, i64 0, i32 0, i32 0, i32 0, i32 0
  %43 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %42, align 8
  %44 = icmp eq %"class.WTF::StringImpl"* %43, null
  br i1 %44, label %58, label %45

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load atomic i32, i32* %46 monotonic, align 4
  %48 = and i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 0
  %51 = load i32, i32* %50, align 4
  br i1 %49, label %52, label %54

52:                                               ; preds = %45
  %53 = add i32 %51, -1
  store i32 %53, i32* %50, align 4
  br label %54

54:                                               ; preds = %52, %45
  %55 = phi i32 [ %53, %52 ], [ %51, %45 ]
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %58

57:                                               ; preds = %54
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %43) #10
  br label %58

58:                                               ; preds = %41, %54, %57
  %59 = bitcast %"class.mojo::InlinedStructPtr"* %20 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %59, i8 0, i64 16, i1 false) #10
  br label %63

60:                                               ; preds = %10
  %61 = bitcast i8* %17 to %"class.network::mojom::internal::HttpRequestHeaderKeyValuePair_Data"*
  %62 = tail call zeroext i1 @_ZN4mojo12StructTraitsIN7network5mojom37HttpRequestHeaderKeyValuePairDataViewENS_16InlinedStructPtrINS2_5blink29HttpRequestHeaderKeyValuePairEEEE4ReadES3_PS7_(%"class.network::mojom::internal::HttpRequestHeaderKeyValuePair_Data"* nonnull %61, %"class.mojo::Message"* %2, %"class.mojo::InlinedStructPtr"* %20) #10
  br i1 %62, label %63, label %67

63:                                               ; preds = %58, %60
  %64 = load i32, i32* %4, align 1
  %65 = zext i32 %64 to i64
  %66 = icmp ult i64 %18, %65
  br i1 %66, label %10, label %67

67:                                               ; preds = %63, %60, %3
  %68 = phi i1 [ true, %3 ], [ false, %60 ], [ true, %63 ]
  ret i1 %68
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN4mojo16InlinedStructPtrIN7network5mojom5blink29HttpRequestHeaderKeyValuePairEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #2 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %14

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.mojo::InlinedStructPtr"*, %"class.mojo::InlinedStructPtr"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %6, i64 %9
  %11 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 0, i64* %11 monotonic, align 8
  %12 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %12, align 8
  tail call void @_ZN3WTF11VectorMoverILb0EN4mojo16InlinedStructPtrIN7network5mojom5blink29HttpRequestHeaderKeyValuePairEEENS_18PartitionAllocatorEE4MoveEPS7_SA_SA_b(%"class.mojo::InlinedStructPtr"* %6, %"class.mojo::InlinedStructPtr"* %10, %"class.mojo::InlinedStructPtr"* null, i1 zeroext true) #10
  %13 = bitcast %"class.mojo::InlinedStructPtr"* %6 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %13) #10
  br label %32

14:                                               ; preds = %2
  %15 = zext i32 %1 to i64
  %16 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo16InlinedStructPtrIN7network5mojom5blink29HttpRequestHeaderKeyValuePairEEEEEmm(i64 %15) #10
  %17 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %16, i8* getelementptr inbounds ([124 x i8], [124 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo16InlinedStructPtrIN7network5mojom5blink29HttpRequestHeaderKeyValuePairEEEEEPKcv, i64 0, i64 0)) #10
  %18 = udiv i64 %16, 24
  %19 = bitcast i8* %17 to %"class.mojo::InlinedStructPtr"*
  %20 = ptrtoint i8* %17 to i64
  %21 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %22 = load %"class.mojo::InlinedStructPtr"*, %"class.mojo::InlinedStructPtr"** %21, align 8
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %24 = load i32, i32* %23, align 4
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %22, i64 %25
  tail call void @_ZN3WTF11VectorMoverILb0EN4mojo16InlinedStructPtrIN7network5mojom5blink29HttpRequestHeaderKeyValuePairEEENS_18PartitionAllocatorEE4MoveEPS7_SA_SA_b(%"class.mojo::InlinedStructPtr"* %22, %"class.mojo::InlinedStructPtr"* %26, %"class.mojo::InlinedStructPtr"* %19, i1 zeroext false) #10
  %27 = bitcast %"class.WTF::Vector"* %0 to i8**
  %28 = load i8*, i8** %27, align 8
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %28) #10
  %29 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %20, i64* %29 monotonic, align 8
  %30 = trunc i64 %18 to i32
  %31 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %30, i32* %31, align 8
  br label %32

32:                                               ; preds = %14, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo16InlinedStructPtrIN7network5mojom5blink29HttpRequestHeaderKeyValuePairEEEEEmm(i64) local_unnamed_addr #2 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 89391104
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 89391104) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.5, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.6, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = mul i64 %0, 24
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #10
  ret i64 %21
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #9

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #3

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF11VectorMoverILb0EN4mojo16InlinedStructPtrIN7network5mojom5blink29HttpRequestHeaderKeyValuePairEEENS_18PartitionAllocatorEE4MoveEPS7_SA_SA_b(%"class.mojo::InlinedStructPtr"*, %"class.mojo::InlinedStructPtr"*, %"class.mojo::InlinedStructPtr"*, i1 zeroext) local_unnamed_addr #2 comdat align 2 {
  %5 = icmp eq %"class.mojo::InlinedStructPtr"* %0, %1
  br i1 %5, label %53, label %6

6:                                                ; preds = %4, %49
  %7 = phi %"class.mojo::InlinedStructPtr"* [ %51, %49 ], [ %0, %4 ]
  %8 = phi %"class.mojo::InlinedStructPtr"* [ %50, %49 ], [ %2, %4 ]
  %9 = bitcast %"class.mojo::InlinedStructPtr"* %8 to i8*
  %10 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %8, i64 0, i32 0
  %11 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %8, i64 0, i32 1
  %12 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %7, i64 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 20, i1 false) #10
  tail call void @_ZNSt3__14swapIN7network5mojom5blink29HttpRequestHeaderKeyValuePairEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS6_EE5valueEvE4typeERS6_S9_(%"class.network::mojom::blink::HttpRequestHeaderKeyValuePair"* dereferenceable(16) %10, %"class.network::mojom::blink::HttpRequestHeaderKeyValuePair"* dereferenceable(16) %12) #10
  %13 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %7, i64 0, i32 1
  %14 = load i32, i32* %11, align 4
  %15 = load i32, i32* %13, align 4
  store i32 %15, i32* %11, align 4
  store i32 %14, i32* %13, align 4
  %16 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %7, i64 0, i32 0, i32 1, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %32, label %19

19:                                               ; preds = %6
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  %25 = load i32, i32* %24, align 4
  br i1 %23, label %26, label %28

26:                                               ; preds = %19
  %27 = add i32 %25, -1
  store i32 %27, i32* %24, align 4
  br label %28

28:                                               ; preds = %26, %19
  %29 = phi i32 [ %27, %26 ], [ %25, %19 ]
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %28
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %17) #10
  br label %32

32:                                               ; preds = %31, %28, %6
  %33 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %35, label %49, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  br i1 %40, label %43, label %45

43:                                               ; preds = %36
  %44 = add i32 %42, -1
  store i32 %44, i32* %41, align 4
  br label %45

45:                                               ; preds = %43, %36
  %46 = phi i32 [ %44, %43 ], [ %42, %36 ]
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %49

48:                                               ; preds = %45
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %34) #10
  br label %49

49:                                               ; preds = %32, %45, %48
  %50 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %8, i64 1
  %51 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %7, i64 1
  %52 = icmp eq %"class.mojo::InlinedStructPtr"* %51, %1
  br i1 %52, label %53, label %6

53:                                               ; preds = %49, %4
  ret void
}

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN4mojo16InlinedStructPtrIN7network5mojom5blink29HttpRequestHeaderKeyValuePairEEELj0ENS_18PartitionAllocatorEE6resizeEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = icmp ult i32 %4, %1
  br i1 %5, label %53, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.mojo::InlinedStructPtr"*, %"class.mojo::InlinedStructPtr"** %7, align 8
  %9 = zext i32 %4 to i64
  %10 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %8, i64 %9
  %11 = icmp eq i32 %4, %1
  br i1 %11, label %97, label %12

12:                                               ; preds = %6
  %13 = zext i32 %1 to i64
  %14 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %8, i64 %13
  br label %15

15:                                               ; preds = %12, %50
  %16 = phi %"class.mojo::InlinedStructPtr"* [ %51, %50 ], [ %14, %12 ]
  %17 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %16, i64 0, i32 0, i32 1, i32 0, i32 0
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %19 = icmp eq %"class.WTF::StringImpl"* %18, null
  br i1 %19, label %33, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load atomic i32, i32* %21 monotonic, align 4
  %23 = and i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 0
  %26 = load i32, i32* %25, align 4
  br i1 %24, label %27, label %29

27:                                               ; preds = %20
  %28 = add i32 %26, -1
  store i32 %28, i32* %25, align 4
  br label %29

29:                                               ; preds = %27, %20
  %30 = phi i32 [ %28, %27 ], [ %26, %20 ]
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %29
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %18) #10
  br label %33

33:                                               ; preds = %32, %29, %15
  %34 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %16, i64 0, i32 0, i32 0, i32 0, i32 0
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %36 = icmp eq %"class.WTF::StringImpl"* %35, null
  br i1 %36, label %50, label %37

37:                                               ; preds = %33
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load atomic i32, i32* %38 monotonic, align 4
  %40 = and i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %43 = load i32, i32* %42, align 4
  br i1 %41, label %44, label %46

44:                                               ; preds = %37
  %45 = add i32 %43, -1
  store i32 %45, i32* %42, align 4
  br label %46

46:                                               ; preds = %44, %37
  %47 = phi i32 [ %45, %44 ], [ %43, %37 ]
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %50

49:                                               ; preds = %46
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %35) #10
  br label %50

50:                                               ; preds = %49, %46, %33
  %51 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %16, i64 1
  %52 = icmp eq %"class.mojo::InlinedStructPtr"* %51, %10
  br i1 %52, label %97, label %15

53:                                               ; preds = %2
  %54 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %55 = load i32, i32* %54, align 8
  %56 = icmp ult i32 %55, %1
  br i1 %56, label %57, label %79

57:                                               ; preds = %53
  %58 = lshr i32 %55, 2
  %59 = add nuw i32 %55, 1
  %60 = add i32 %59, %58
  %61 = icmp ugt i32 %60, 4
  %62 = select i1 %61, i32 %60, i32 4
  %63 = icmp ugt i32 %62, %1
  %64 = select i1 %63, i32 %62, i32 %1
  %65 = icmp ult i32 %55, %64
  br i1 %65, label %66, label %79, !prof !3

66:                                               ; preds = %57
  %67 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %68 = load %"class.mojo::InlinedStructPtr"*, %"class.mojo::InlinedStructPtr"** %67, align 8
  %69 = icmp eq %"class.mojo::InlinedStructPtr"* %68, null
  br i1 %69, label %70, label %78

70:                                               ; preds = %66
  %71 = zext i32 %64 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo16InlinedStructPtrIN7network5mojom5blink29HttpRequestHeaderKeyValuePairEEEEEmm(i64 %71) #10
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([124 x i8], [124 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo16InlinedStructPtrIN7network5mojom5blink29HttpRequestHeaderKeyValuePairEEEEEPKcv, i64 0, i64 0)) #10
  %74 = ptrtoint i8* %73 to i64
  %75 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %74, i64* %75 monotonic, align 8
  %76 = udiv i64 %72, 24
  %77 = trunc i64 %76 to i32
  store i32 %77, i32* %54, align 8
  br label %79

78:                                               ; preds = %66
  tail call void @_ZN3WTF6VectorIN4mojo16InlinedStructPtrIN7network5mojom5blink29HttpRequestHeaderKeyValuePairEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector"* %0, i32 %64) #10
  br label %79

79:                                               ; preds = %78, %70, %57, %53
  %80 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %81 = load %"class.mojo::InlinedStructPtr"*, %"class.mojo::InlinedStructPtr"** %80, align 8
  %82 = load i32, i32* %3, align 4
  %83 = zext i32 %82 to i64
  %84 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %81, i64 %83
  %85 = icmp eq i32 %82, %1
  br i1 %85, label %97, label %86

86:                                               ; preds = %79
  %87 = zext i32 %1 to i64
  %88 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %81, i64 %87
  %89 = bitcast %"class.mojo::InlinedStructPtr"* %84 to i8*
  %90 = ptrtoint %"class.mojo::InlinedStructPtr"* %84 to i64
  %91 = getelementptr %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %88, i64 -1, i32 0, i32 0, i32 0, i32 0
  %92 = ptrtoint %"class.WTF::StringImpl"** %91 to i64
  %93 = sub i64 %92, %90
  %94 = urem i64 %93, 24
  %95 = add i64 %93, 24
  %96 = sub i64 %95, %94
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %89, i8 0, i64 %96, i1 false) #10
  br label %97

97:                                               ; preds = %50, %6, %86, %79
  store i32 %1, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.mojo::InlinedStructPtr"* @_ZN3WTF6VectorIN4mojo16InlinedStructPtrIN7network5mojom5blink29HttpRequestHeaderKeyValuePairEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #2 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #10
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.9, i64 0, i64 0), i8* %14, i8* %15) #10
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.7, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #10
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #10
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #10
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.mojo::InlinedStructPtr"*, %"class.mojo::InlinedStructPtr"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %24, i64 %25
  ret %"class.mojo::InlinedStructPtr"* %26
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #3

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone speculatable }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZN7network5mojom5blink29HttpRequestHeaderKeyValuePair3NewIJEEEN4mojo16InlinedStructPtrIS2_EEDpOT_: argument 0"}
!6 = distinct !{!6, !"_ZN7network5mojom5blink29HttpRequestHeaderKeyValuePair3NewIJEEEN4mojo16InlinedStructPtrIS2_EEDpOT_"}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZN7network5mojom5blink18HttpRequestHeaders3NewIJEEEN4mojo9StructPtrIS2_EEDpOT_: argument 0"}
!9 = distinct !{!9, !"_ZN7network5mojom5blink18HttpRequestHeaders3NewIJEEEN4mojo9StructPtrIS2_EEDpOT_"}
