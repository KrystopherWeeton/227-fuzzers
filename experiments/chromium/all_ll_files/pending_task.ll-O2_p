; ModuleID = '../../base/pending_task.cc'
source_filename = "../../base/pending_task.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::PendingTask" = type <{ %"class.base::OnceCallback", %"class.base::Location", %"class.base::TimeTicks", %"class.base::TimeTicks", %"struct.std::__1::array", i32, [4 x i8], i8*, i32, i8, [3 x i8] }>
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"struct.std::__1::array" = type { [4 x i8*] }

@_ZN4base11PendingTaskC1Ev = hidden unnamed_addr alias void (%"struct.base::PendingTask"*), void (%"struct.base::PendingTask"*)* @_ZN4base11PendingTaskC2Ev
@_ZN4base11PendingTaskC1ERKNS_8LocationENS_12OnceCallbackIFvvEEE = hidden unnamed_addr alias void (%"struct.base::PendingTask"*, %"class.base::Location"*, %"class.base::OnceCallback"*), void (%"struct.base::PendingTask"*, %"class.base::Location"*, %"class.base::OnceCallback"*)* @_ZN4base11PendingTaskC2ERKNS_8LocationENS_12OnceCallbackIFvvEEE
@_ZN4base11PendingTaskC1ERKNS_8LocationENS_12OnceCallbackIFvvEEENS_9TimeTicksES7_ = hidden unnamed_addr alias void (%"struct.base::PendingTask"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64, i64), void (%"struct.base::PendingTask"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64, i64)* @_ZN4base11PendingTaskC2ERKNS_8LocationENS_12OnceCallbackIFvvEEENS_9TimeTicksES7_
@_ZN4base11PendingTaskC1EOS0_ = hidden unnamed_addr alias void (%"struct.base::PendingTask"*, %"struct.base::PendingTask"*), void (%"struct.base::PendingTask"*, %"struct.base::PendingTask"*)* @_ZN4base11PendingTaskC2EOS0_
@_ZN4base11PendingTaskD1Ev = hidden unnamed_addr alias void (%"struct.base::PendingTask"*), void (%"struct.base::PendingTask"*)* @_ZN4base11PendingTaskD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base11PendingTaskC2Ev(%"struct.base::PendingTask"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.base::PendingTask", %"struct.base::PendingTask"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %2, align 8
  %3 = getelementptr inbounds %"struct.base::PendingTask", %"struct.base::PendingTask"* %0, i64 0, i32 1
  tail call void @_ZN4base8LocationC1Ev(%"class.base::Location"* %3) #5
  %4 = getelementptr inbounds %"struct.base::PendingTask", %"struct.base::PendingTask"* %0, i64 0, i32 2, i32 0, i32 0
  %5 = getelementptr inbounds %"struct.base::PendingTask", %"struct.base::PendingTask"* %0, i64 0, i32 7
  store i8* null, i8** %5, align 8
  %6 = getelementptr inbounds %"struct.base::PendingTask", %"struct.base::PendingTask"* %0, i64 0, i32 8
  store i32 0, i32* %6, align 8
  %7 = getelementptr inbounds %"struct.base::PendingTask", %"struct.base::PendingTask"* %0, i64 0, i32 9
  store i8 0, i8* %7, align 4
  %8 = bitcast i64* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 52, i1 false)
  ret void
}

declare void @_ZN4base8LocationC1Ev(%"class.base::Location"*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base11PendingTaskC2ERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"struct.base::PendingTask"*, %"class.base::Location"* dereferenceable(32), %"class.base::OnceCallback"* nocapture) unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0, i32 0, i32 0
  %6 = bitcast %"class.base::OnceCallback"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %5, align 8
  %8 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0, i32 0, i32 0
  %9 = bitcast %"struct.base::PendingTask"* %0 to i64*
  store i64 %7, i64* %9, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %8, align 8
  %10 = getelementptr inbounds %"struct.base::PendingTask", %"struct.base::PendingTask"* %0, i64 0, i32 1
  tail call void @_ZN4base8LocationC1ERKS0_(%"class.base::Location"* %10, %"class.base::Location"* dereferenceable(32) %1) #5
  %11 = getelementptr inbounds %"struct.base::PendingTask", %"struct.base::PendingTask"* %0, i64 0, i32 2, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.base::PendingTask", %"struct.base::PendingTask"* %0, i64 0, i32 7
  store i8* null, i8** %12, align 8
  %13 = getelementptr inbounds %"struct.base::PendingTask", %"struct.base::PendingTask"* %0, i64 0, i32 8
  store i32 0, i32* %13, align 8
  %14 = getelementptr inbounds %"struct.base::PendingTask", %"struct.base::PendingTask"* %0, i64 0, i32 9
  store i8 0, i8* %14, align 4
  %15 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  %16 = bitcast i64* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 52, i1 false)
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %15) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base11PendingTaskC2ERKNS_8LocationENS_12OnceCallbackIFvvEEENS_9TimeTicksES7_(%"struct.base::PendingTask"*, %"class.base::Location"* dereferenceable(32), %"class.base::OnceCallback"* nocapture, i64, i64) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0, i32 0, i32 0
  %7 = bitcast %"class.base::OnceCallback"* %2 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"struct.base::PendingTask"* %0 to i64*
  store i64 %8, i64* %9, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %6, align 8
  %10 = getelementptr inbounds %"struct.base::PendingTask", %"struct.base::PendingTask"* %0, i64 0, i32 1
  tail call void @_ZN4base8LocationC1ERKS0_(%"class.base::Location"* %10, %"class.base::Location"* dereferenceable(32) %1) #5
  %11 = getelementptr inbounds %"struct.base::PendingTask", %"struct.base::PendingTask"* %0, i64 0, i32 2, i32 0, i32 0
  store i64 %3, i64* %11, align 8
  %12 = getelementptr inbounds %"struct.base::PendingTask", %"struct.base::PendingTask"* %0, i64 0, i32 3, i32 0, i32 0
  store i64 %4, i64* %12, align 8
  %13 = getelementptr inbounds %"struct.base::PendingTask", %"struct.base::PendingTask"* %0, i64 0, i32 4, i32 0
  %14 = getelementptr inbounds %"struct.base::PendingTask", %"struct.base::PendingTask"* %0, i64 0, i32 7
  store i8* null, i8** %14, align 8
  %15 = getelementptr inbounds %"struct.base::PendingTask", %"struct.base::PendingTask"* %0, i64 0, i32 8
  store i32 0, i32* %15, align 8
  %16 = getelementptr inbounds %"struct.base::PendingTask", %"struct.base::PendingTask"* %0, i64 0, i32 9
  store i8 0, i8* %16, align 4
  %17 = bitcast [4 x i8*]* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 36, i1 false)
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #3

declare void @_ZN4base8LocationC1ERKS0_(%"class.base::Location"*, %"class.base::Location"* dereferenceable(32)) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base11PendingTaskC2EOS0_(%"struct.base::PendingTask"*, %"struct.base::PendingTask"* dereferenceable(112)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.base::PendingTask", %"struct.base::PendingTask"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = bitcast %"struct.base::PendingTask"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"struct.base::PendingTask"* %0 to i64*
  store i64 %5, i64* %6, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %3, align 8
  %7 = getelementptr inbounds %"struct.base::PendingTask", %"struct.base::PendingTask"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"struct.base::PendingTask", %"struct.base::PendingTask"* %1, i64 0, i32 1
  tail call void @_ZN4base8LocationC1ERKS0_(%"class.base::Location"* %7, %"class.base::Location"* dereferenceable(32) %8) #5
  %9 = getelementptr inbounds %"struct.base::PendingTask", %"struct.base::PendingTask"* %0, i64 0, i32 2
  %10 = getelementptr inbounds %"struct.base::PendingTask", %"struct.base::PendingTask"* %1, i64 0, i32 2
  %11 = bitcast %"class.base::TimeTicks"* %9 to i8*
  %12 = bitcast %"class.base::TimeTicks"* %10 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 69, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base11PendingTaskD2Ev(%"struct.base::PendingTask"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.base::PendingTask", %"struct.base::PendingTask"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %2) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(112) %"struct.base::PendingTask"* @_ZN4base11PendingTaskaSEOS0_(%"struct.base::PendingTask"* returned, %"struct.base::PendingTask"* dereferenceable(112)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.base::PendingTask", %"struct.base::PendingTask"* %0, i64 0, i32 0, i32 0
  %4 = getelementptr inbounds %"struct.base::PendingTask", %"struct.base::PendingTask"* %1, i64 0, i32 0, i32 0
  %5 = tail call dereferenceable(8) %"class.base::internal::CallbackBase"* @_ZN4base8internal12CallbackBaseaSEOS1_(%"class.base::internal::CallbackBase"* %3, %"class.base::internal::CallbackBase"* dereferenceable(8) %4) #5
  %6 = getelementptr inbounds %"struct.base::PendingTask", %"struct.base::PendingTask"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"struct.base::PendingTask", %"struct.base::PendingTask"* %1, i64 0, i32 1
  %8 = bitcast %"class.base::Location"* %6 to i8*
  %9 = bitcast %"class.base::Location"* %7 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 32, i1 false)
  %10 = getelementptr inbounds %"struct.base::PendingTask", %"struct.base::PendingTask"* %0, i64 0, i32 2
  %11 = getelementptr inbounds %"struct.base::PendingTask", %"struct.base::PendingTask"* %1, i64 0, i32 2
  %12 = bitcast %"class.base::TimeTicks"* %10 to i8*
  %13 = bitcast %"class.base::TimeTicks"* %11 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 69, i1 false)
  ret %"struct.base::PendingTask"* %0
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK4base11PendingTaskltERKS0_(%"struct.base::PendingTask"* nocapture readonly, %"struct.base::PendingTask"* nocapture readonly dereferenceable(112)) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"struct.base::PendingTask", %"struct.base::PendingTask"* %1, i64 0, i32 3, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"struct.base::PendingTask", %"struct.base::PendingTask"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp slt i64 %6, %4
  br i1 %7, label %16, label %8

8:                                                ; preds = %2
  %9 = icmp sgt i64 %6, %4
  br i1 %9, label %16, label %10

10:                                               ; preds = %8
  %11 = getelementptr inbounds %"struct.base::PendingTask", %"struct.base::PendingTask"* %0, i64 0, i32 8
  %12 = load i32, i32* %11, align 8
  %13 = getelementptr inbounds %"struct.base::PendingTask", %"struct.base::PendingTask"* %1, i64 0, i32 8
  %14 = load i32, i32* %13, align 8
  %15 = icmp sgt i32 %12, %14
  br label %16

16:                                               ; preds = %8, %2, %10
  %17 = phi i1 [ %15, %10 ], [ false, %2 ], [ true, %8 ]
  ret i1 %17
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK4base11PendingTask23GetDesiredExecutionTimeEv(%"struct.base::PendingTask"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"struct.base::PendingTask", %"struct.base::PendingTask"* %0, i64 0, i32 3, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = icmp eq i64 %3, 0
  %5 = getelementptr inbounds %"struct.base::PendingTask", %"struct.base::PendingTask"* %0, i64 0, i32 2, i32 0, i32 0
  %6 = select i1 %4, i64* %5, i64* %2
  %7 = load i64, i64* %6, align 8
  ret i64 %7
}

; Function Attrs: nounwind
declare dereferenceable(8) %"class.base::internal::CallbackBase"* @_ZN4base8internal12CallbackBaseaSEOS1_(%"class.base::internal::CallbackBase"*, %"class.base::internal::CallbackBase"* dereferenceable(8)) local_unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
