; ModuleID = '../../base/sequence_token.cc'
source_filename = "../../base/sequence_token.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.base::NoDestructor" = type { [8 x i8] }
%"class.base::NoDestructor.2" = type { [8 x i8] }
%"class.base::ScopedSetSequenceTokenForCurrentThread" = type { %"class.base::SequenceToken", %"class.base::TaskToken" }
%"class.base::SequenceToken" = type { i32 }
%"class.base::TaskToken" = type { i32 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }

@_ZN4base12_GLOBAL__N_126g_sequence_token_generatorE = internal global { { { i32 } } } zeroinitializer, align 4
@_ZZN4base12_GLOBAL__N_126GetTlsCurrentSequenceTokenEvE8instance = internal global %"class.base::NoDestructor" zeroinitializer, align 8
@_ZGVZN4base12_GLOBAL__N_126GetTlsCurrentSequenceTokenEvE8instance = internal global i64 0, align 8
@_ZN4base12_GLOBAL__N_122g_task_token_generatorE = internal global { { { i32 } } } zeroinitializer, align 4
@_ZZN4base12_GLOBAL__N_122GetTlsCurrentTaskTokenEvE8instance = internal global %"class.base::NoDestructor.2" zeroinitializer, align 8
@_ZGVZN4base12_GLOBAL__N_122GetTlsCurrentTaskTokenEvE8instance = internal global i64 0, align 8

@_ZN4base38ScopedSetSequenceTokenForCurrentThreadC1ERKNS_13SequenceTokenE = hidden unnamed_addr alias void (%"class.base::ScopedSetSequenceTokenForCurrentThread"*, %"class.base::SequenceToken"*), void (%"class.base::ScopedSetSequenceTokenForCurrentThread"*, %"class.base::SequenceToken"*)* @_ZN4base38ScopedSetSequenceTokenForCurrentThreadC2ERKNS_13SequenceTokenE
@_ZN4base38ScopedSetSequenceTokenForCurrentThreadD1Ev = hidden unnamed_addr alias void (%"class.base::ScopedSetSequenceTokenForCurrentThread"*), void (%"class.base::ScopedSetSequenceTokenForCurrentThread"*)* @_ZN4base38ScopedSetSequenceTokenForCurrentThreadD2Ev

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK4base13SequenceTokeneqERKS0_(%"class.base::SequenceToken"* nocapture readonly, %"class.base::SequenceToken"* nocapture readonly dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.base::SequenceToken", %"class.base::SequenceToken"* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"class.base::SequenceToken", %"class.base::SequenceToken"* %1, i64 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %4, %6
  %8 = icmp ne i32 %4, -1
  %9 = and i1 %8, %7
  ret i1 %9
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK4base13SequenceToken7IsValidEv(%"class.base::SequenceToken"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::SequenceToken", %"class.base::SequenceToken"* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 4
  %4 = icmp ne i32 %3, -1
  ret i1 %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK4base13SequenceTokenneERKS0_(%"class.base::SequenceToken"* nocapture readonly, %"class.base::SequenceToken"* nocapture readonly dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.base::SequenceToken", %"class.base::SequenceToken"* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"class.base::SequenceToken", %"class.base::SequenceToken"* %1, i64 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp ne i32 %4, %6
  %8 = icmp eq i32 %4, -1
  %9 = or i1 %8, %7
  ret i1 %9
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK4base13SequenceToken15ToInternalValueEv(%"class.base::SequenceToken"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::SequenceToken", %"class.base::SequenceToken"* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_ZN4base13SequenceToken6CreateEv() local_unnamed_addr #1 align 2 {
  %1 = atomicrmw add i32* getelementptr inbounds ({ { { i32 } } }, { { { i32 } } }* @_ZN4base12_GLOBAL__N_126g_sequence_token_generatorE, i64 0, i32 0, i32 0, i32 0), i32 1 monotonic
  ret i32 %1
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4base13SequenceToken19GetForCurrentThreadEv() local_unnamed_addr #2 align 2 {
  %1 = load atomic i8, i8* bitcast (i64* @_ZGVZN4base12_GLOBAL__N_126GetTlsCurrentSequenceTokenEvE8instance to i8*) acquire, align 8
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %3, label %7, !prof !2

3:                                                ; preds = %0
  %4 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4base12_GLOBAL__N_126GetTlsCurrentSequenceTokenEvE8instance) #5
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %7, label %6

6:                                                ; preds = %3
  store i64 0, i64* bitcast (%"class.base::NoDestructor"* @_ZZN4base12_GLOBAL__N_126GetTlsCurrentSequenceTokenEvE8instance to i64*), align 8
  tail call void @_ZN4base18ThreadLocalStorage4SlotC1EPFvPvE(%"class.base::ThreadLocalStorage::Slot"* bitcast (%"class.base::NoDestructor"* @_ZZN4base12_GLOBAL__N_126GetTlsCurrentSequenceTokenEvE8instance to %"class.base::ThreadLocalStorage::Slot"*), void (i8*)* null) #5
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN4base12_GLOBAL__N_126GetTlsCurrentSequenceTokenEvE8instance) #5
  br label %7

7:                                                ; preds = %0, %3, %6
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* bitcast (%"class.base::NoDestructor"* @_ZZN4base12_GLOBAL__N_126GetTlsCurrentSequenceTokenEvE8instance to %"class.base::ThreadLocalStorage::Slot"*)) #5
  %9 = icmp eq i8* %8, null
  br i1 %9, label %13, label %10

10:                                               ; preds = %7
  %11 = bitcast i8* %8 to i32*
  %12 = load i32, i32* %11, align 4
  br label %13

13:                                               ; preds = %7, %10
  %14 = phi i32 [ %12, %10 ], [ -1, %7 ]
  ret i32 %14
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK4base9TaskTokeneqERKS0_(%"class.base::TaskToken"* nocapture readonly, %"class.base::TaskToken"* nocapture readonly dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.base::TaskToken", %"class.base::TaskToken"* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"class.base::TaskToken", %"class.base::TaskToken"* %1, i64 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %4, %6
  %8 = icmp ne i32 %4, -1
  %9 = and i1 %8, %7
  ret i1 %9
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK4base9TaskToken7IsValidEv(%"class.base::TaskToken"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::TaskToken", %"class.base::TaskToken"* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 4
  %4 = icmp ne i32 %3, -1
  ret i1 %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK4base9TaskTokenneERKS0_(%"class.base::TaskToken"* nocapture readonly, %"class.base::TaskToken"* nocapture readonly dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.base::TaskToken", %"class.base::TaskToken"* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"class.base::TaskToken", %"class.base::TaskToken"* %1, i64 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp ne i32 %4, %6
  %8 = icmp eq i32 %4, -1
  %9 = or i1 %8, %7
  ret i1 %9
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_ZN4base9TaskToken6CreateEv() local_unnamed_addr #1 align 2 {
  %1 = atomicrmw add i32* getelementptr inbounds ({ { { i32 } } }, { { { i32 } } }* @_ZN4base12_GLOBAL__N_122g_task_token_generatorE, i64 0, i32 0, i32 0, i32 0), i32 1 monotonic
  ret i32 %1
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4base9TaskToken19GetForCurrentThreadEv() local_unnamed_addr #2 align 2 {
  %1 = load atomic i8, i8* bitcast (i64* @_ZGVZN4base12_GLOBAL__N_122GetTlsCurrentTaskTokenEvE8instance to i8*) acquire, align 8
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %3, label %7, !prof !2

3:                                                ; preds = %0
  %4 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4base12_GLOBAL__N_122GetTlsCurrentTaskTokenEvE8instance) #5
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %7, label %6

6:                                                ; preds = %3
  store i64 0, i64* bitcast (%"class.base::NoDestructor.2"* @_ZZN4base12_GLOBAL__N_122GetTlsCurrentTaskTokenEvE8instance to i64*), align 8
  tail call void @_ZN4base18ThreadLocalStorage4SlotC1EPFvPvE(%"class.base::ThreadLocalStorage::Slot"* bitcast (%"class.base::NoDestructor.2"* @_ZZN4base12_GLOBAL__N_122GetTlsCurrentTaskTokenEvE8instance to %"class.base::ThreadLocalStorage::Slot"*), void (i8*)* null) #5
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN4base12_GLOBAL__N_122GetTlsCurrentTaskTokenEvE8instance) #5
  br label %7

7:                                                ; preds = %0, %3, %6
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* bitcast (%"class.base::NoDestructor.2"* @_ZZN4base12_GLOBAL__N_122GetTlsCurrentTaskTokenEvE8instance to %"class.base::ThreadLocalStorage::Slot"*)) #5
  %9 = icmp eq i8* %8, null
  br i1 %9, label %13, label %10

10:                                               ; preds = %7
  %11 = bitcast i8* %8 to i32*
  %12 = load i32, i32* %11, align 4
  br label %13

13:                                               ; preds = %7, %10
  %14 = phi i32 [ %12, %10 ], [ -1, %7 ]
  ret i32 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base38ScopedSetSequenceTokenForCurrentThreadC2ERKNS_13SequenceTokenE(%"class.base::ScopedSetSequenceTokenForCurrentThread"*, %"class.base::SequenceToken"* nocapture readonly dereferenceable(4)) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.base::SequenceToken", %"class.base::SequenceToken"* %1, i64 0, i32 0
  %4 = getelementptr inbounds %"class.base::ScopedSetSequenceTokenForCurrentThread", %"class.base::ScopedSetSequenceTokenForCurrentThread"* %0, i64 0, i32 0, i32 0
  %5 = load i32, i32* %3, align 4
  store i32 %5, i32* %4, align 4
  %6 = getelementptr inbounds %"class.base::ScopedSetSequenceTokenForCurrentThread", %"class.base::ScopedSetSequenceTokenForCurrentThread"* %0, i64 0, i32 1
  %7 = atomicrmw add i32* getelementptr inbounds ({ { { i32 } } }, { { { i32 } } }* @_ZN4base12_GLOBAL__N_122g_task_token_generatorE, i64 0, i32 0, i32 0, i32 0), i32 1 monotonic
  %8 = getelementptr inbounds %"class.base::TaskToken", %"class.base::TaskToken"* %6, i64 0, i32 0
  store i32 %7, i32* %8, align 4
  %9 = load atomic i8, i8* bitcast (i64* @_ZGVZN4base12_GLOBAL__N_126GetTlsCurrentSequenceTokenEvE8instance to i8*) acquire, align 8
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %15, !prof !2

11:                                               ; preds = %2
  %12 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4base12_GLOBAL__N_126GetTlsCurrentSequenceTokenEvE8instance) #5
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %15, label %14

14:                                               ; preds = %11
  store i64 0, i64* bitcast (%"class.base::NoDestructor"* @_ZZN4base12_GLOBAL__N_126GetTlsCurrentSequenceTokenEvE8instance to i64*), align 8
  tail call void @_ZN4base18ThreadLocalStorage4SlotC1EPFvPvE(%"class.base::ThreadLocalStorage::Slot"* bitcast (%"class.base::NoDestructor"* @_ZZN4base12_GLOBAL__N_126GetTlsCurrentSequenceTokenEvE8instance to %"class.base::ThreadLocalStorage::Slot"*), void (i8*)* null) #5
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN4base12_GLOBAL__N_126GetTlsCurrentSequenceTokenEvE8instance) #5
  br label %15

15:                                               ; preds = %2, %11, %14
  %16 = bitcast %"class.base::ScopedSetSequenceTokenForCurrentThread"* %0 to i8*
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* bitcast (%"class.base::NoDestructor"* @_ZZN4base12_GLOBAL__N_126GetTlsCurrentSequenceTokenEvE8instance to %"class.base::ThreadLocalStorage::Slot"*), i8* %16) #5
  %17 = load atomic i8, i8* bitcast (i64* @_ZGVZN4base12_GLOBAL__N_122GetTlsCurrentTaskTokenEvE8instance to i8*) acquire, align 8
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %19, label %23, !prof !2

19:                                               ; preds = %15
  %20 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4base12_GLOBAL__N_122GetTlsCurrentTaskTokenEvE8instance) #5
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %23, label %22

22:                                               ; preds = %19
  store i64 0, i64* bitcast (%"class.base::NoDestructor.2"* @_ZZN4base12_GLOBAL__N_122GetTlsCurrentTaskTokenEvE8instance to i64*), align 8
  tail call void @_ZN4base18ThreadLocalStorage4SlotC1EPFvPvE(%"class.base::ThreadLocalStorage::Slot"* bitcast (%"class.base::NoDestructor.2"* @_ZZN4base12_GLOBAL__N_122GetTlsCurrentTaskTokenEvE8instance to %"class.base::ThreadLocalStorage::Slot"*), void (i8*)* null) #5
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN4base12_GLOBAL__N_122GetTlsCurrentTaskTokenEvE8instance) #5
  br label %23

23:                                               ; preds = %15, %19, %22
  %24 = bitcast %"class.base::TaskToken"* %6 to i8*
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* bitcast (%"class.base::NoDestructor.2"* @_ZZN4base12_GLOBAL__N_122GetTlsCurrentTaskTokenEvE8instance to %"class.base::ThreadLocalStorage::Slot"*), i8* %24) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base38ScopedSetSequenceTokenForCurrentThreadD2Ev(%"class.base::ScopedSetSequenceTokenForCurrentThread"* nocapture readnone) unnamed_addr #2 align 2 {
  %2 = load atomic i8, i8* bitcast (i64* @_ZGVZN4base12_GLOBAL__N_126GetTlsCurrentSequenceTokenEvE8instance to i8*) acquire, align 8
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %4, label %8, !prof !2

4:                                                ; preds = %1
  %5 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4base12_GLOBAL__N_126GetTlsCurrentSequenceTokenEvE8instance) #5
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %8, label %7

7:                                                ; preds = %4
  store i64 0, i64* bitcast (%"class.base::NoDestructor"* @_ZZN4base12_GLOBAL__N_126GetTlsCurrentSequenceTokenEvE8instance to i64*), align 8
  tail call void @_ZN4base18ThreadLocalStorage4SlotC1EPFvPvE(%"class.base::ThreadLocalStorage::Slot"* bitcast (%"class.base::NoDestructor"* @_ZZN4base12_GLOBAL__N_126GetTlsCurrentSequenceTokenEvE8instance to %"class.base::ThreadLocalStorage::Slot"*), void (i8*)* null) #5
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN4base12_GLOBAL__N_126GetTlsCurrentSequenceTokenEvE8instance) #5
  br label %8

8:                                                ; preds = %1, %4, %7
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* bitcast (%"class.base::NoDestructor"* @_ZZN4base12_GLOBAL__N_126GetTlsCurrentSequenceTokenEvE8instance to %"class.base::ThreadLocalStorage::Slot"*), i8* null) #5
  %9 = load atomic i8, i8* bitcast (i64* @_ZGVZN4base12_GLOBAL__N_122GetTlsCurrentTaskTokenEvE8instance to i8*) acquire, align 8
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %15, !prof !2

11:                                               ; preds = %8
  %12 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4base12_GLOBAL__N_122GetTlsCurrentTaskTokenEvE8instance) #5
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %15, label %14

14:                                               ; preds = %11
  store i64 0, i64* bitcast (%"class.base::NoDestructor.2"* @_ZZN4base12_GLOBAL__N_122GetTlsCurrentTaskTokenEvE8instance to i64*), align 8
  tail call void @_ZN4base18ThreadLocalStorage4SlotC1EPFvPvE(%"class.base::ThreadLocalStorage::Slot"* bitcast (%"class.base::NoDestructor.2"* @_ZZN4base12_GLOBAL__N_122GetTlsCurrentTaskTokenEvE8instance to %"class.base::ThreadLocalStorage::Slot"*), void (i8*)* null) #5
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN4base12_GLOBAL__N_122GetTlsCurrentTaskTokenEvE8instance) #5
  br label %15

15:                                               ; preds = %8, %11, %14
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* bitcast (%"class.base::NoDestructor.2"* @_ZZN4base12_GLOBAL__N_122GetTlsCurrentTaskTokenEvE8instance to %"class.base::ThreadLocalStorage::Slot"*), i8* null) #5
  ret void
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #3

declare void @_ZN4base18ThreadLocalStorage4SlotC1EPFvPvE(%"class.base::ThreadLocalStorage::Slot"*, void (i8*)*) unnamed_addr #4

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #4

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #4

attributes #0 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 1048575}
