; ModuleID = 'gen/headless/public/devtools/domains/log.cc'
source_filename = "gen/headless/public/devtools/domains/log.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.headless::log::Domain" = type <{ %"class.headless::internal::MessageDispatcher"*, %"class.base::ObserverList", i8, [7 x i8] }>
%"class.base::ObserverList" = type <{ %"class.std::__1::vector", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.headless::internal::MessageDispatcher" = type { i32 (...)** }
%"class.headless::log::ExperimentalDomain" = type { %"class.headless::log::Domain.base", [7 x i8] }
%"class.headless::log::Domain.base" = type <{ %"class.headless::internal::MessageDispatcher"*, %"class.base::ObserverList", i8 }>
%"class.headless::log::Observer" = type { %"class.headless::log::ExperimentalObserver" }
%"class.headless::log::ExperimentalObserver" = type { i32 (...)** }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.2" }
%"union.absl::variant_internal::DestructibleUnionImpl.2" = type { %"union.absl::variant_internal::DestructibleUnionImpl.3" }
%"union.absl::variant_internal::DestructibleUnionImpl.3" = type { %"union.absl::variant_internal::DestructibleUnionImpl.4" }
%"union.absl::variant_internal::DestructibleUnionImpl.4" = type { %"union.absl::variant_internal::DestructibleUnionImpl.5" }
%"union.absl::variant_internal::DestructibleUnionImpl.5" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.headless::ErrorReporter" = type { %"class.std::__1::vector.94", %"class.std::__1::vector.101" }
%"class.std::__1::vector.94" = type { %"class.std::__1::__vector_base.95" }
%"class.std::__1::__vector_base.95" = type { i8**, i8**, %"class.std::__1::__compressed_pair.96" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.97" = type { i8** }
%"class.std::__1::vector.101" = type { %"class.std::__1::__vector_base.102" }
%"class.std::__1::__vector_base.102" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.103" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"struct.std::__1::__compressed_pair_elem.104" = type { %"class.std::__1::basic_string"* }
%"class.base::ObserverList<headless::log::ExperimentalObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter" = type { %"class.base::internal::WeakLinkNode", i64, i64 }
%"class.base::internal::WeakLinkNode" = type { %"class.base::LinkNode", %"class.base::ObserverList"* }
%"class.headless::log::EntryAddedParams" = type { %"class.std::__1::unique_ptr.135" }
%"class.std::__1::unique_ptr.135" = type { %"class.std::__1::__compressed_pair.136" }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.137" }
%"struct.std::__1::__compressed_pair_elem.137" = type { %"class.headless::log::LogEntry"* }
%"class.headless::log::LogEntry" = type { i32, i32, %"class.std::__1::basic_string", double, %"class.absl::optional", %"class.absl::optional.139", %"class.absl::optional.144", %"class.absl::optional", %"class.absl::optional", %"class.absl::optional.159" }
%"class.absl::optional.139" = type { %"class.absl::optional_internal::optional_data.140" }
%"class.absl::optional_internal::optional_data.140" = type { %"class.absl::optional_internal::optional_data_base.141" }
%"class.absl::optional_internal::optional_data_base.141" = type { %"class.absl::optional_internal::optional_data_dtor_base.142" }
%"class.absl::optional_internal::optional_data_dtor_base.142" = type { i8, %union.anon.143 }
%union.anon.143 = type { i32 }
%"class.absl::optional.144" = type { %"class.absl::optional_internal::optional_data.145" }
%"class.absl::optional_internal::optional_data.145" = type { %"class.absl::optional_internal::optional_data_base.146" }
%"class.absl::optional_internal::optional_data_base.146" = type { %"class.absl::optional_internal::optional_data_dtor_base.147" }
%"class.absl::optional_internal::optional_data_dtor_base.147" = type { i8, %union.anon.148 }
%union.anon.148 = type { %"class.std::__1::unique_ptr.149" }
%"class.std::__1::unique_ptr.149" = type { %"class.std::__1::__compressed_pair.150" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.151" = type { %"class.headless::runtime::StackTrace"* }
%"class.headless::runtime::StackTrace" = type { %"class.absl::optional", %"class.std::__1::vector.256", %"class.absl::optional.144", %"class.absl::optional.269" }
%"class.std::__1::vector.256" = type { %"class.std::__1::__vector_base.257" }
%"class.std::__1::__vector_base.257" = type { %"class.std::__1::unique_ptr.258"*, %"class.std::__1::unique_ptr.258"*, %"class.std::__1::__compressed_pair.264" }
%"class.std::__1::unique_ptr.258" = type { %"class.std::__1::__compressed_pair.259" }
%"class.std::__1::__compressed_pair.259" = type { %"struct.std::__1::__compressed_pair_elem.260" }
%"struct.std::__1::__compressed_pair_elem.260" = type { %"class.headless::runtime::CallFrame"* }
%"class.headless::runtime::CallFrame" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, i32 }
%"class.std::__1::__compressed_pair.264" = type { %"struct.std::__1::__compressed_pair_elem.265" }
%"struct.std::__1::__compressed_pair_elem.265" = type { %"class.std::__1::unique_ptr.258"* }
%"class.absl::optional.269" = type { %"class.absl::optional_internal::optional_data.270" }
%"class.absl::optional_internal::optional_data.270" = type { %"class.absl::optional_internal::optional_data_base.271" }
%"class.absl::optional_internal::optional_data_base.271" = type { %"class.absl::optional_internal::optional_data_dtor_base.272" }
%"class.absl::optional_internal::optional_data_dtor_base.272" = type { i8, %union.anon.273 }
%union.anon.273 = type { %"class.std::__1::unique_ptr.274" }
%"class.std::__1::unique_ptr.274" = type { %"class.std::__1::__compressed_pair.275" }
%"class.std::__1::__compressed_pair.275" = type { %"struct.std::__1::__compressed_pair_elem.276" }
%"struct.std::__1::__compressed_pair_elem.276" = type { %"class.headless::runtime::StackTraceId"* }
%"class.headless::runtime::StackTraceId" = type { %"class.std::__1::basic_string", %"class.absl::optional" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.138 }
%union.anon.138 = type { %"class.std::__1::basic_string" }
%"class.absl::optional.159" = type { %"class.absl::optional_internal::optional_data.160" }
%"class.absl::optional_internal::optional_data.160" = type { %"class.absl::optional_internal::optional_data_base.161" }
%"class.absl::optional_internal::optional_data_base.161" = type { %"class.absl::optional_internal::optional_data_dtor_base.162" }
%"class.absl::optional_internal::optional_data_dtor_base.162" = type { i8, %union.anon.163 }
%union.anon.163 = type { %"class.std::__1::vector.164" }
%"class.std::__1::vector.164" = type { %"class.std::__1::__vector_base.165" }
%"class.std::__1::__vector_base.165" = type { %"class.std::__1::unique_ptr.166"*, %"class.std::__1::unique_ptr.166"*, %"class.std::__1::__compressed_pair.240" }
%"class.std::__1::unique_ptr.166" = type { %"class.std::__1::__compressed_pair.167" }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.168" }
%"struct.std::__1::__compressed_pair_elem.168" = type { %"class.headless::runtime::RemoteObject"* }
%"class.headless::runtime::RemoteObject" = type { i32, %"class.absl::optional.169", %"class.absl::optional", %"class.absl::optional.174", %"class.absl::optional", %"class.absl::optional", %"class.absl::optional", %"class.absl::optional.179", %"class.absl::optional.226" }
%"class.absl::optional.169" = type { %"class.absl::optional_internal::optional_data.170" }
%"class.absl::optional_internal::optional_data.170" = type { %"class.absl::optional_internal::optional_data_base.171" }
%"class.absl::optional_internal::optional_data_base.171" = type { %"class.absl::optional_internal::optional_data_dtor_base.172" }
%"class.absl::optional_internal::optional_data_dtor_base.172" = type { i8, %union.anon.173 }
%union.anon.173 = type { i32 }
%"class.absl::optional.174" = type { %"class.absl::optional_internal::optional_data.175" }
%"class.absl::optional_internal::optional_data.175" = type { %"class.absl::optional_internal::optional_data_base.176" }
%"class.absl::optional_internal::optional_data_base.176" = type { %"class.absl::optional_internal::optional_data_dtor_base.177" }
%"class.absl::optional_internal::optional_data_dtor_base.177" = type { i8, %union.anon.178 }
%union.anon.178 = type { %"class.std::__1::unique_ptr.39" }
%"class.std::__1::unique_ptr.39" = type { %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"class.base::Value"* }
%"class.absl::optional.179" = type { %"class.absl::optional_internal::optional_data.180" }
%"class.absl::optional_internal::optional_data.180" = type { %"class.absl::optional_internal::optional_data_base.181" }
%"class.absl::optional_internal::optional_data_base.181" = type { %"class.absl::optional_internal::optional_data_dtor_base.182" }
%"class.absl::optional_internal::optional_data_dtor_base.182" = type { i8, %union.anon.183 }
%union.anon.183 = type { %"class.std::__1::unique_ptr.184" }
%"class.std::__1::unique_ptr.184" = type { %"class.std::__1::__compressed_pair.185" }
%"class.std::__1::__compressed_pair.185" = type { %"struct.std::__1::__compressed_pair_elem.186" }
%"struct.std::__1::__compressed_pair_elem.186" = type { %"class.headless::runtime::ObjectPreview"* }
%"class.headless::runtime::ObjectPreview" = type { i32, %"class.absl::optional.187", %"class.absl::optional", i8, %"class.std::__1::vector.192", %"class.absl::optional.205" }
%"class.absl::optional.187" = type { %"class.absl::optional_internal::optional_data.188" }
%"class.absl::optional_internal::optional_data.188" = type { %"class.absl::optional_internal::optional_data_base.189" }
%"class.absl::optional_internal::optional_data_base.189" = type { %"class.absl::optional_internal::optional_data_dtor_base.190" }
%"class.absl::optional_internal::optional_data_dtor_base.190" = type { i8, %union.anon.191 }
%union.anon.191 = type { i32 }
%"class.std::__1::vector.192" = type { %"class.std::__1::__vector_base.193" }
%"class.std::__1::__vector_base.193" = type { %"class.std::__1::unique_ptr.194"*, %"class.std::__1::unique_ptr.194"*, %"class.std::__1::__compressed_pair.200" }
%"class.std::__1::unique_ptr.194" = type { %"class.std::__1::__compressed_pair.195" }
%"class.std::__1::__compressed_pair.195" = type { %"struct.std::__1::__compressed_pair_elem.196" }
%"struct.std::__1::__compressed_pair_elem.196" = type { %"class.headless::runtime::PropertyPreview"* }
%"class.headless::runtime::PropertyPreview" = type { %"class.std::__1::basic_string", i32, %"class.absl::optional", %"class.absl::optional.179", %"class.absl::optional.251" }
%"class.absl::optional.251" = type { %"class.absl::optional_internal::optional_data.252" }
%"class.absl::optional_internal::optional_data.252" = type { %"class.absl::optional_internal::optional_data_base.253" }
%"class.absl::optional_internal::optional_data_base.253" = type { %"class.absl::optional_internal::optional_data_dtor_base.254" }
%"class.absl::optional_internal::optional_data_dtor_base.254" = type { i8, %union.anon.255 }
%union.anon.255 = type { i32 }
%"class.std::__1::__compressed_pair.200" = type { %"struct.std::__1::__compressed_pair_elem.201" }
%"struct.std::__1::__compressed_pair_elem.201" = type { %"class.std::__1::unique_ptr.194"* }
%"class.absl::optional.205" = type { %"class.absl::optional_internal::optional_data.206" }
%"class.absl::optional_internal::optional_data.206" = type { %"class.absl::optional_internal::optional_data_base.207" }
%"class.absl::optional_internal::optional_data_base.207" = type { %"class.absl::optional_internal::optional_data_dtor_base.208" }
%"class.absl::optional_internal::optional_data_dtor_base.208" = type { i8, %union.anon.209 }
%union.anon.209 = type { %"class.std::__1::vector.210" }
%"class.std::__1::vector.210" = type { %"class.std::__1::__vector_base.211" }
%"class.std::__1::__vector_base.211" = type { %"class.std::__1::unique_ptr.212"*, %"class.std::__1::unique_ptr.212"*, %"class.std::__1::__compressed_pair.218" }
%"class.std::__1::unique_ptr.212" = type { %"class.std::__1::__compressed_pair.213" }
%"class.std::__1::__compressed_pair.213" = type { %"struct.std::__1::__compressed_pair_elem.214" }
%"struct.std::__1::__compressed_pair_elem.214" = type { %"class.headless::runtime::EntryPreview"* }
%"class.headless::runtime::EntryPreview" = type { %"class.absl::optional.179", %"class.std::__1::unique_ptr.184" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.219" }
%"struct.std::__1::__compressed_pair_elem.219" = type { %"class.std::__1::unique_ptr.212"* }
%"class.absl::optional.226" = type { %"class.absl::optional_internal::optional_data.227" }
%"class.absl::optional_internal::optional_data.227" = type { %"class.absl::optional_internal::optional_data_base.228" }
%"class.absl::optional_internal::optional_data_base.228" = type { %"class.absl::optional_internal::optional_data_dtor_base.229" }
%"class.absl::optional_internal::optional_data_dtor_base.229" = type { i8, %union.anon.230 }
%union.anon.230 = type { %"class.std::__1::unique_ptr.231" }
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"class.headless::runtime::CustomPreview"* }
%"class.headless::runtime::CustomPreview" = type { %"class.std::__1::basic_string", %"class.absl::optional" }
%"class.std::__1::__compressed_pair.240" = type { %"struct.std::__1::__compressed_pair_elem.241" }
%"struct.std::__1::__compressed_pair_elem.241" = type { %"class.std::__1::unique_ptr.166"* }
%"class.headless::log::ClearParams" = type { i8 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.44" = type { %"class.base::internal::CallbackBase" }
%"class.std::__1::unique_ptr.88" = type { %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.90" = type { %"class.headless::log::ClearResult"* }
%"class.headless::log::ClearResult" = type { i8 }
%"class.base::OnceCallback.45" = type { %"class.base::internal::CallbackBase" }
%"class.headless::log::DisableParams" = type { i8 }
%"class.base::OnceCallback.52" = type { %"class.base::internal::CallbackBase" }
%"class.std::__1::unique_ptr.108" = type { %"class.std::__1::__compressed_pair.109" }
%"class.std::__1::__compressed_pair.109" = type { %"struct.std::__1::__compressed_pair_elem.110" }
%"struct.std::__1::__compressed_pair_elem.110" = type { %"class.headless::log::DisableResult"* }
%"class.headless::log::DisableResult" = type { i8 }
%"class.headless::log::EnableParams" = type { i8 }
%"class.base::OnceCallback.59" = type { %"class.base::internal::CallbackBase" }
%"class.std::__1::unique_ptr.114" = type { %"class.std::__1::__compressed_pair.115" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"class.headless::log::EnableResult"* }
%"class.headless::log::EnableResult" = type { i8 }
%"class.headless::log::StartViolationsReportParams" = type { %"class.std::__1::vector.63" }
%"class.std::__1::vector.63" = type { %"class.std::__1::__vector_base.64" }
%"class.std::__1::__vector_base.64" = type { %"class.std::__1::unique_ptr.65"*, %"class.std::__1::unique_ptr.65"*, %"class.std::__1::__compressed_pair.71" }
%"class.std::__1::unique_ptr.65" = type { %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"class.headless::log::ViolationSetting"* }
%"class.headless::log::ViolationSetting" = type { i32, double }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"struct.std::__1::__compressed_pair_elem.72" = type { %"class.std::__1::unique_ptr.65"* }
%"class.base::OnceCallback.79" = type { %"class.base::internal::CallbackBase" }
%"class.std::__1::unique_ptr.120" = type { %"class.std::__1::__compressed_pair.121" }
%"class.std::__1::__compressed_pair.121" = type { %"struct.std::__1::__compressed_pair_elem.122" }
%"struct.std::__1::__compressed_pair_elem.122" = type { %"class.headless::log::StartViolationsReportResult"* }
%"class.headless::log::StartViolationsReportResult" = type { i8 }
%"class.headless::log::StopViolationsReportParams" = type { i8 }
%"class.base::OnceCallback.87" = type { %"class.base::internal::CallbackBase" }
%"class.std::__1::unique_ptr.126" = type { %"class.std::__1::__compressed_pair.127" }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.128" }
%"struct.std::__1::__compressed_pair_elem.128" = type { %"class.headless::log::StopViolationsReportResult"* }
%"class.headless::log::StopViolationsReportResult" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"struct.std::__1::default_delete.224" = type { i8 }

$_ZN8headless3log8LogEntryD2Ev = comdat any

$_ZN8headless7runtime12RemoteObjectD2Ev = comdat any

$_ZNKSt3__114default_deleteIN8headless7runtime13ObjectPreviewEEclEPS3_ = comdat any

$_ZN4absl17optional_internal23optional_data_dtor_baseINSt3__16vectorINS2_10unique_ptrIN8headless7runtime12EntryPreviewENS2_14default_deleteIS7_EEEENS2_9allocatorISA_EEEELb0EED2Ev = comdat any

$_ZN8headless7runtime10StackTraceD2Ev = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN8headless3log6DomainEFvRKNS_5ValueEEJNS0_17UnretainedWrapperIS5_EEEEEFvS8_EE3RunEPNS0_13BindStateBaseES8_ = comdat any

$_ZN4base8internal9BindStateIMN8headless3log6DomainEFvRKNS_5ValueEEJNS0_17UnretainedWrapperIS4_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless3log11ClearResultENS4_14default_deleteIS8_EEEEEEERKNS_5ValueEEJSD_EEEFvSG_EE7RunOnceEPNS0_13BindStateBaseESG_ = comdat any

$_ZN4base8internal9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless3log11ClearResultENS3_14default_deleteIS7_EEEEEEERKNS_5ValueEEJSC_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless3log13DisableResultENS4_14default_deleteIS8_EEEEEEERKNS_5ValueEEJSD_EEEFvSG_EE7RunOnceEPNS0_13BindStateBaseESG_ = comdat any

$_ZN4base8internal9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless3log13DisableResultENS3_14default_deleteIS7_EEEEEEERKNS_5ValueEEJSC_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless3log12EnableResultENS4_14default_deleteIS8_EEEEEEERKNS_5ValueEEJSD_EEEFvSG_EE7RunOnceEPNS0_13BindStateBaseESG_ = comdat any

$_ZN4base8internal9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless3log12EnableResultENS3_14default_deleteIS7_EEEEEEERKNS_5ValueEEJSC_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless3log27StartViolationsReportResultENS4_14default_deleteIS8_EEEEEEERKNS_5ValueEEJSD_EEEFvSG_EE7RunOnceEPNS0_13BindStateBaseESG_ = comdat any

$_ZN4base8internal9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless3log27StartViolationsReportResultENS3_14default_deleteIS7_EEEEEEERKNS_5ValueEEJSC_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless3log26StopViolationsReportResultENS4_14default_deleteIS8_EEEEEEERKNS_5ValueEEJSD_EEEFvSG_EE7RunOnceEPNS0_13BindStateBaseESG_ = comdat any

$_ZN4base8internal9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless3log26StopViolationsReportResultENS3_14default_deleteIS7_EEEEEEERKNS_5ValueEEJSC_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

@.str = private unnamed_addr constant [15 x i8] c"Log.entryAdded\00", align 1
@.str.1 = private unnamed_addr constant [10 x i8] c"Log.clear\00", align 1
@.str.2 = private unnamed_addr constant [12 x i8] c"Log.disable\00", align 1
@.str.3 = private unnamed_addr constant [11 x i8] c"Log.enable\00", align 1
@.str.4 = private unnamed_addr constant [26 x i8] c"Log.startViolationsReport\00", align 1
@.str.5 = private unnamed_addr constant [25 x i8] c"Log.stopViolationsReport\00", align 1

@_ZN8headless3log6DomainC1EPNS_8internal17MessageDispatcherE = hidden unnamed_addr alias void (%"class.headless::log::Domain"*, %"class.headless::internal::MessageDispatcher"*), void (%"class.headless::log::Domain"*, %"class.headless::internal::MessageDispatcher"*)* @_ZN8headless3log6DomainC2EPNS_8internal17MessageDispatcherE
@_ZN8headless3log6DomainD1Ev = hidden unnamed_addr alias void (%"class.headless::log::Domain"*), void (%"class.headless::log::Domain"*)* @_ZN8headless3log6DomainD2Ev
@_ZN8headless3log18ExperimentalDomainC1EPNS_8internal17MessageDispatcherE = hidden unnamed_addr alias void (%"class.headless::log::ExperimentalDomain"*, %"class.headless::internal::MessageDispatcher"*), void (%"class.headless::log::ExperimentalDomain"*, %"class.headless::internal::MessageDispatcher"*)* @_ZN8headless3log18ExperimentalDomainC2EPNS_8internal17MessageDispatcherE
@_ZN8headless3log18ExperimentalDomainD2Ev = hidden unnamed_addr alias void (%"class.headless::log::ExperimentalDomain"*), bitcast (void (%"class.headless::log::Domain"*)* @_ZN8headless3log6DomainD2Ev to void (%"class.headless::log::ExperimentalDomain"*)*)
@_ZN8headless3log18ExperimentalDomainD1Ev = hidden unnamed_addr alias void (%"class.headless::log::ExperimentalDomain"*), bitcast (void (%"class.headless::log::Domain"*)* @_ZN8headless3log6DomainD2Ev to void (%"class.headless::log::ExperimentalDomain"*)*)

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %"class.headless::log::ExperimentalDomain"* @_ZN8headless3log6Domain15GetExperimentalEv(%"class.headless::log::Domain"* readnone) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.headless::log::Domain"* %0 to %"class.headless::log::ExperimentalDomain"*
  ret %"class.headless::log::ExperimentalDomain"* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless3log6Domain11AddObserverEPNS0_8ObserverE(%"class.headless::log::Domain"*, %"class.headless::log::Observer"*) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.base::RepeatingCallback", align 8
  %4 = bitcast %"class.base::RepeatingCallback"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4)
  %5 = getelementptr inbounds %"class.headless::log::Domain", %"class.headless::log::Domain"* %0, i64 0, i32 2
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %24

8:                                                ; preds = %2
  store i8 1, i8* %5, align 8
  %9 = getelementptr inbounds %"class.headless::log::Domain", %"class.headless::log::Domain"* %0, i64 0, i32 0
  %10 = load %"class.headless::internal::MessageDispatcher"*, %"class.headless::internal::MessageDispatcher"** %9, align 8
  %11 = ptrtoint %"class.headless::log::Domain"* %0 to i64
  %12 = tail call i8* @_Znwm(i64 56) #9, !noalias !3
  %13 = bitcast i8* %12 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %13, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.base::Value"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN8headless3log6DomainEFvRKNS_5ValueEEJNS0_17UnretainedWrapperIS5_EEEEEFvS8_EE3RunEPNS0_13BindStateBaseES8_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN8headless3log6DomainEFvRKNS_5ValueEEJNS0_17UnretainedWrapperIS4_EEEE7DestroyEPKNS0_13BindStateBaseE) #10, !noalias !3
  %14 = getelementptr inbounds i8, i8* %12, i64 32
  %15 = bitcast i8* %14 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.headless::log::Domain"*, %"class.base::Value"*)* @_ZN8headless3log6Domain23DispatchEntryAddedEventERKN4base5ValueE to i64), i64 0>, <2 x i64>* %15, align 8, !noalias !3
  %16 = getelementptr inbounds i8, i8* %12, i64 48
  %17 = bitcast i8* %16 to i64*
  store i64 %11, i64* %17, align 8, !noalias !3
  %18 = bitcast %"class.base::RepeatingCallback"* %3 to i8**
  store i8* %12, i8** %18, align 8, !alias.scope !3
  %19 = bitcast %"class.headless::internal::MessageDispatcher"* %10 to void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::RepeatingCallback"*)***
  %20 = load void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::RepeatingCallback"*)**, void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::RepeatingCallback"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::RepeatingCallback"*)*, void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::RepeatingCallback"*)** %20, i64 2
  %22 = load void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::RepeatingCallback"*)*, void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::RepeatingCallback"*)** %21, align 8
  call void %22(%"class.headless::internal::MessageDispatcher"* %10, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), %"class.base::RepeatingCallback"* nonnull %3) #10
  %23 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %3, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %23) #10
  br label %24

24:                                               ; preds = %2, %8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4)
  %25 = getelementptr inbounds %"class.headless::log::Domain", %"class.headless::log::Domain"* %0, i64 0, i32 1
  %26 = icmp eq %"class.headless::log::Observer"* %1, null
  br i1 %26, label %27, label %30

27:                                               ; preds = %24
  %28 = getelementptr inbounds %"class.headless::log::Domain", %"class.headless::log::Domain"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %29 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %28, align 8
  br label %48

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %25, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %31, align 8
  %33 = getelementptr inbounds %"class.headless::log::Domain", %"class.headless::log::Domain"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %34 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %33, align 8
  %35 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %32, %34
  %36 = bitcast %"class.headless::log::Observer"* %1 to i8*
  br i1 %35, label %45, label %37

37:                                               ; preds = %30, %42
  %38 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %43, %42 ], [ %32, %30 ]
  %39 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %38, i64 0, i32 0
  %40 = load i8*, i8** %39, align 8
  %41 = icmp eq i8* %40, %36
  br i1 %41, label %45, label %42

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %38, i64 1
  %44 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %43, %34
  br i1 %44, label %48, label %37

45:                                               ; preds = %37, %30
  %46 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %32, %30 ], [ %38, %37 ]
  %47 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %46, %34
  br i1 %47, label %48, label %121

48:                                               ; preds = %42, %27, %45
  %49 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %29, %27 ], [ %34, %45 ], [ %34, %42 ]
  %50 = getelementptr inbounds %"class.headless::log::Domain", %"class.headless::log::Domain"* %0, i64 0, i32 1, i32 2
  %51 = load i64, i64* %50, align 8
  %52 = add i64 %51, 1
  store i64 %52, i64* %50, align 8
  %53 = ptrtoint %"class.headless::log::Observer"* %1 to i64
  %54 = getelementptr inbounds %"class.headless::log::Domain", %"class.headless::log::Domain"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %55 = getelementptr inbounds %"class.headless::log::Domain", %"class.headless::log::Domain"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %56 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %55, align 8
  %57 = icmp ult %"class.base::internal::UncheckedObserverAdapter"* %49, %56
  %58 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %56 to i64
  br i1 %57, label %59, label %64

59:                                               ; preds = %48
  %60 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %49 to i64*
  store i64 %53, i64* %60, align 8
  %61 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %49, i64 1
  %62 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %61 to i64
  %63 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %54 to i64*
  store i64 %62, i64* %63, align 8
  br label %121

64:                                               ; preds = %48
  %65 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %49 to i64
  %66 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %54 to i64*
  %67 = bitcast %"class.base::ObserverList"* %25 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = sub i64 %65, %68
  %70 = ashr exact i64 %69, 3
  %71 = add nsw i64 %70, 1
  %72 = icmp ugt i64 %71, 2305843009213693951
  br i1 %72, label %73, label %75

73:                                               ; preds = %64
  %74 = bitcast %"class.base::ObserverList"* %25 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %74) #11
  unreachable

75:                                               ; preds = %64
  %76 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %55 to i64*
  %77 = sub i64 %58, %68
  %78 = ashr exact i64 %77, 3
  %79 = icmp ult i64 %78, 1152921504606846975
  br i1 %79, label %80, label %88

80:                                               ; preds = %75
  %81 = ashr exact i64 %77, 2
  %82 = icmp ult i64 %81, %71
  %83 = select i1 %82, i64 %71, i64 %81
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %93, label %85

85:                                               ; preds = %80
  %86 = icmp ugt i64 %83, 2305843009213693951
  br i1 %86, label %87, label %88

87:                                               ; preds = %85
  call void @abort() #11
  unreachable

88:                                               ; preds = %85, %75
  %89 = phi i64 [ %83, %85 ], [ 2305843009213693951, %75 ]
  %90 = shl i64 %89, 3
  %91 = call i8* @_Znwm(i64 %90) #9
  %92 = bitcast i8* %91 to %"class.base::internal::UncheckedObserverAdapter"*
  br label %93

93:                                               ; preds = %88, %80
  %94 = phi i64 [ %89, %88 ], [ 0, %80 ]
  %95 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %92, %88 ], [ null, %80 ]
  %96 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %95, i64 %70
  %97 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %95, i64 %94
  %98 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %97 to i64
  %99 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %96 to i64*
  store i64 %53, i64* %99, align 8
  %100 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %96, i64 1
  %101 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %100 to i64
  %102 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %25, i64 0, i32 0, i32 0, i32 0
  %103 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %102, align 8
  %104 = load i64, i64* %66, align 8
  %105 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %103 to i64
  %106 = sub i64 %104, %105
  %107 = ashr exact i64 %106, 3
  %108 = sub nsw i64 0, %107
  %109 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %96, i64 %108
  %110 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %109 to i64
  %111 = icmp sgt i64 %106, 0
  br i1 %111, label %112, label %116

112:                                              ; preds = %93
  %113 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %109 to i8*
  %114 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %103 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %113, i8* align 8 %114, i64 %106, i1 false) #10
  %115 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %102, align 8
  br label %116

116:                                              ; preds = %112, %93
  %117 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %103, %93 ], [ %115, %112 ]
  store i64 %110, i64* %67, align 8
  store i64 %101, i64* %66, align 8
  store i64 %98, i64* %76, align 8
  %118 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %117, null
  br i1 %118, label %121, label %119

119:                                              ; preds = %116
  %120 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %117 to i8*
  call void @_ZdlPv(i8* %120) #9
  br label %121

121:                                              ; preds = %119, %116, %59, %45
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless3log6Domain29RegisterEventHandlersIfNeededEv(%"class.headless::log::Domain"*) local_unnamed_addr #1 align 2 {
  %2 = alloca %"class.base::RepeatingCallback", align 8
  %3 = getelementptr inbounds %"class.headless::log::Domain", %"class.headless::log::Domain"* %0, i64 0, i32 2
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %22

6:                                                ; preds = %1
  store i8 1, i8* %3, align 8
  %7 = getelementptr inbounds %"class.headless::log::Domain", %"class.headless::log::Domain"* %0, i64 0, i32 0
  %8 = load %"class.headless::internal::MessageDispatcher"*, %"class.headless::internal::MessageDispatcher"** %7, align 8
  %9 = ptrtoint %"class.headless::log::Domain"* %0 to i64
  %10 = tail call i8* @_Znwm(i64 56) #9, !noalias !8
  %11 = bitcast i8* %10 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %11, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.base::Value"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN8headless3log6DomainEFvRKNS_5ValueEEJNS0_17UnretainedWrapperIS5_EEEEEFvS8_EE3RunEPNS0_13BindStateBaseES8_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN8headless3log6DomainEFvRKNS_5ValueEEJNS0_17UnretainedWrapperIS4_EEEE7DestroyEPKNS0_13BindStateBaseE) #10, !noalias !8
  %12 = getelementptr inbounds i8, i8* %10, i64 32
  %13 = bitcast i8* %12 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.headless::log::Domain"*, %"class.base::Value"*)* @_ZN8headless3log6Domain23DispatchEntryAddedEventERKN4base5ValueE to i64), i64 0>, <2 x i64>* %13, align 8, !noalias !8
  %14 = getelementptr inbounds i8, i8* %10, i64 48
  %15 = bitcast i8* %14 to i64*
  store i64 %9, i64* %15, align 8, !noalias !8
  %16 = bitcast %"class.base::RepeatingCallback"* %2 to i8**
  store i8* %10, i8** %16, align 8, !alias.scope !8
  %17 = bitcast %"class.headless::internal::MessageDispatcher"* %8 to void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::RepeatingCallback"*)***
  %18 = load void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::RepeatingCallback"*)**, void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::RepeatingCallback"*)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::RepeatingCallback"*)*, void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::RepeatingCallback"*)** %18, i64 2
  %20 = load void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::RepeatingCallback"*)*, void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::RepeatingCallback"*)** %19, align 8
  call void %20(%"class.headless::internal::MessageDispatcher"* %8, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), %"class.base::RepeatingCallback"* nonnull %2) #10
  %21 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %2, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %21) #10
  br label %22

22:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless3log6Domain14RemoveObserverEPNS0_8ObserverE(%"class.headless::log::Domain"*, %"class.headless::log::Observer"* readnone) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.headless::log::Domain", %"class.headless::log::Domain"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %3, align 8
  %5 = getelementptr inbounds %"class.headless::log::Domain", %"class.headless::log::Domain"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %6 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %5, align 8
  %7 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %4, %6
  %8 = bitcast %"class.headless::log::Observer"* %1 to i8*
  %9 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %6 to i64
  br i1 %7, label %18, label %10

10:                                               ; preds = %2, %15
  %11 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %16, %15 ], [ %4, %2 ]
  %12 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %11, i64 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = icmp eq i8* %13, %8
  br i1 %14, label %18, label %15

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %11, i64 1
  %17 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %16, %6
  br i1 %17, label %47, label %10

18:                                               ; preds = %10, %2
  %19 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %4, %2 ], [ %11, %10 ]
  %20 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %19, %6
  br i1 %20, label %47, label %21

21:                                               ; preds = %18
  %22 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %19, i64 0, i32 0
  %23 = load i8*, i8** %22, align 8
  %24 = icmp eq i8* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.headless::log::Domain", %"class.headless::log::Domain"* %0, i64 0, i32 1, i32 2
  %27 = load i64, i64* %26, align 8
  %28 = add i64 %27, -1
  store i64 %28, i64* %26, align 8
  br label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.headless::log::Domain", %"class.headless::log::Domain"* %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 1
  %31 = bitcast %"class.base::internal::LinkNodeBase"** %30 to %"class.base::LinkNode"**
  %32 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %31, align 8
  %33 = getelementptr inbounds %"class.headless::log::Domain", %"class.headless::log::Domain"* %0, i64 0, i32 1, i32 1, i32 0
  %34 = icmp eq %"class.base::LinkNode"* %32, %33
  br i1 %34, label %35, label %46

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %19, i64 1
  %37 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %36 to i64
  %38 = sub i64 %9, %37
  %39 = ashr exact i64 %38, 3
  %40 = icmp eq i64 %38, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %35
  %42 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %19 to i8*
  %43 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %36 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 %38, i1 false) #10
  br label %44

44:                                               ; preds = %41, %35
  %45 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %19, i64 %39
  store %"class.base::internal::UncheckedObserverAdapter"* %45, %"class.base::internal::UncheckedObserverAdapter"** %5, align 8
  br label %47

46:                                               ; preds = %29
  store i8* null, i8** %22, align 8
  br label %47

47:                                               ; preds = %15, %18, %44, %46
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless3log6Domain23DispatchEntryAddedEventERKN4base5ValueE(%"class.headless::log::Domain"*, %"class.base::Value"* dereferenceable(32)) #1 align 2 {
  %3 = alloca %"class.headless::ErrorReporter", align 8
  %4 = alloca %"class.base::ObserverList<headless::log::ExperimentalObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %5 = alloca %"class.base::ObserverList<headless::log::ExperimentalObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %6 = bitcast %"class.headless::ErrorReporter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %6) #10
  %7 = bitcast %"class.headless::ErrorReporter"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 48, i1 false)
  call void @_ZN8headless13ErrorReporterC1Ev(%"class.headless::ErrorReporter"* nonnull %3) #10
  %8 = call %"class.headless::log::EntryAddedParams"* @_ZN8headless3log16EntryAddedParams5ParseERKN4base5ValueEPNS_13ErrorReporterE(%"class.base::Value"* dereferenceable(32) %1, %"class.headless::ErrorReporter"* nonnull %3) #10
  %9 = getelementptr inbounds %"class.headless::log::Domain", %"class.headless::log::Domain"* %0, i64 0, i32 1
  %10 = bitcast %"class.base::ObserverList<headless::log::ExperimentalObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %10) #10
  %11 = getelementptr inbounds %"class.base::ObserverList<headless::log::ExperimentalObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<headless::log::ExperimentalObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 0, i32 1
  %12 = getelementptr inbounds %"class.base::ObserverList<headless::log::ExperimentalObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<headless::log::ExperimentalObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 1
  %13 = getelementptr inbounds %"class.base::ObserverList<headless::log::ExperimentalObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<headless::log::ExperimentalObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 2
  %14 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %9, i64 0, i32 0, i32 0, i32 0
  %15 = bitcast %"class.base::ObserverList<headless::log::ExperimentalObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 40, i1 false)
  %16 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %14, align 8, !noalias !13
  %17 = getelementptr inbounds %"class.headless::log::Domain", %"class.headless::log::Domain"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %18 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %17, align 8, !noalias !13
  %19 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %16, %18
  %20 = getelementptr inbounds %"class.base::ObserverList<headless::log::ExperimentalObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<headless::log::ExperimentalObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 0, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %20) #10
  br i1 %19, label %21, label %23

21:                                               ; preds = %2
  %22 = bitcast %"class.base::ObserverList"** %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 24, i1 false) #10, !alias.scope !13
  br label %63

23:                                               ; preds = %2
  store %"class.base::ObserverList"* %9, %"class.base::ObserverList"** %11, align 8
  %24 = getelementptr inbounds %"class.headless::log::Domain", %"class.headless::log::Domain"* %0, i64 0, i32 1, i32 1, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"* nonnull %20, %"class.base::internal::LinkNodeBase"* %24) #10
  store i64 0, i64* %12, align 8
  %25 = getelementptr inbounds %"class.headless::log::Domain", %"class.headless::log::Domain"* %0, i64 0, i32 1, i32 3
  %26 = load i32, i32* %25, align 8
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %35, label %28

28:                                               ; preds = %23
  %29 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %17 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = bitcast %"class.base::ObserverList"* %9 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = sub i64 %30, %32
  %34 = ashr exact i64 %33, 3
  br label %35

35:                                               ; preds = %28, %23
  %36 = phi i64 [ %34, %28 ], [ -1, %23 ]
  store i64 %36, i64* %13, align 8
  %37 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %11, align 8
  %38 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %37, i64 0, i32 0, i32 0, i32 1
  %39 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = bitcast %"class.base::ObserverList"* %37 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = sub i64 %40, %42
  %44 = ashr exact i64 %43, 3
  %45 = icmp ult i64 %44, %36
  %46 = select i1 %45, i64 %44, i64 %36
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %63, label %48

48:                                               ; preds = %35
  %49 = inttoptr i64 %42 to %"class.base::internal::UncheckedObserverAdapter"*
  %50 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %37, i64 0, i32 0, i32 0, i32 0
  %51 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %49, i64 0, i32 0
  %52 = load i8*, i8** %51, align 8
  %53 = icmp eq i8* %52, null
  br i1 %53, label %54, label %63

54:                                               ; preds = %48, %58
  %55 = phi i64 [ %56, %58 ], [ 0, %48 ]
  %56 = add nuw i64 %55, 1
  store i64 %56, i64* %12, align 8
  %57 = icmp ult i64 %56, %46
  br i1 %57, label %58, label %63

58:                                               ; preds = %54
  %59 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %50, align 8
  %60 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %59, i64 %56, i32 0
  %61 = load i8*, i8** %60, align 8
  %62 = icmp eq i8* %61, null
  br i1 %62, label %54, label %63

63:                                               ; preds = %58, %54, %48, %35, %21
  %64 = bitcast %"class.base::ObserverList<headless::log::ExperimentalObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %64) #10
  %65 = getelementptr inbounds %"class.base::ObserverList<headless::log::ExperimentalObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<headless::log::ExperimentalObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %5, i64 0, i32 0, i32 1
  %66 = getelementptr inbounds %"class.base::ObserverList<headless::log::ExperimentalObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<headless::log::ExperimentalObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %5, i64 0, i32 1
  %67 = getelementptr inbounds %"class.base::ObserverList<headless::log::ExperimentalObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<headless::log::ExperimentalObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %5, i64 0, i32 2
  %68 = getelementptr inbounds %"class.base::ObserverList<headless::log::ExperimentalObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<headless::log::ExperimentalObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %5, i64 0, i32 0, i32 0, i32 0
  %69 = bitcast %"class.base::ObserverList<headless::log::ExperimentalObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %69, i8 -86, i64 40, i1 false)
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %68) #10
  %70 = bitcast %"class.base::ObserverList"** %65 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %70, i8 0, i64 24, i1 false) #10, !alias.scope !16
  %71 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %11, align 8
  br label %72

72:                                               ; preds = %322, %63
  %73 = phi %"class.base::ObserverList"* [ %71, %63 ], [ %320, %322 ]
  %74 = icmp eq %"class.base::ObserverList"* %73, null
  br i1 %74, label %90, label %75

75:                                               ; preds = %72
  %76 = load i64, i64* %12, align 8
  %77 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %73, i64 0, i32 0, i32 0, i32 1
  %78 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %77 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = bitcast %"class.base::ObserverList"* %73 to i64*
  %81 = load i64, i64* %80, align 8
  %82 = sub i64 %79, %81
  %83 = ashr exact i64 %82, 3
  %84 = load i64, i64* %13, align 8
  %85 = icmp ult i64 %83, %84
  %86 = select i1 %85, i64 %83, i64 %84
  %87 = icmp eq i64 %76, %86
  br i1 %87, label %90, label %88

88:                                               ; preds = %75
  %89 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %65, align 8
  br label %106

90:                                               ; preds = %75, %72
  %91 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %65, align 8
  %92 = icmp eq %"class.base::ObserverList"* %91, null
  br i1 %92, label %206, label %93

93:                                               ; preds = %90
  %94 = load i64, i64* %66, align 8
  %95 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %91, i64 0, i32 0, i32 0, i32 1
  %96 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %95 to i64*
  %97 = load i64, i64* %96, align 8
  %98 = bitcast %"class.base::ObserverList"* %91 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = sub i64 %97, %99
  %101 = ashr exact i64 %100, 3
  %102 = load i64, i64* %67, align 8
  %103 = icmp ult i64 %101, %102
  %104 = select i1 %103, i64 %101, i64 %102
  %105 = icmp eq i64 %94, %104
  br i1 %105, label %115, label %106

106:                                              ; preds = %93, %88
  %107 = phi %"class.base::ObserverList"* [ %89, %88 ], [ %91, %93 ]
  %108 = icmp eq %"class.base::ObserverList"* %73, %107
  %109 = load i64, i64* %12, align 8
  %110 = load i64, i64* %66, align 8
  %111 = icmp eq i64 %109, %110
  %112 = and i1 %108, %111
  br i1 %112, label %113, label %310

113:                                              ; preds = %106
  %114 = icmp eq %"class.base::ObserverList"* %73, null
  br i1 %114, label %206, label %115

115:                                              ; preds = %93, %113
  %116 = phi %"class.base::ObserverList"* [ %73, %113 ], [ %91, %93 ]
  %117 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %116, i64 0, i32 1
  %118 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %116, i64 0, i32 1, i32 0, i32 0, i32 1
  %119 = bitcast %"class.base::internal::LinkNodeBase"** %118 to %"class.base::LinkNode"**
  %120 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %119, align 8
  %121 = bitcast %"class.base::LinkedList"* %117 to %"class.base::LinkNode"**
  %122 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %121, align 8
  %123 = icmp eq %"class.base::LinkNode"* %120, %122
  br i1 %123, label %124, label %202

124:                                              ; preds = %115
  %125 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %116, i64 0, i32 0, i32 0, i32 0
  %126 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %125, align 8
  %127 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %116, i64 0, i32 0, i32 0, i32 1
  %128 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %127, align 8
  %129 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %126, %128
  br i1 %129, label %138, label %130

130:                                              ; preds = %124, %135
  %131 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %136, %135 ], [ %126, %124 ]
  %132 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %131, i64 0, i32 0
  %133 = load i8*, i8** %132, align 8
  %134 = icmp eq i8* %133, null
  br i1 %134, label %138, label %135

135:                                              ; preds = %130
  %136 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %131, i64 1
  %137 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %136, %128
  br i1 %137, label %202, label %130

138:                                              ; preds = %130, %124
  %139 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %126, %124 ], [ %131, %130 ]
  %140 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %139 to i64
  %141 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %139, %128
  br i1 %141, label %202, label %142

142:                                              ; preds = %138
  %143 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %139, i64 1
  %144 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %143, %128
  br i1 %144, label %197, label %145

145:                                              ; preds = %142
  %146 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %128, i64 -2, i32 0
  %147 = ptrtoint i8** %146 to i64
  %148 = sub i64 %147, %140
  %149 = lshr i64 %148, 3
  %150 = add nuw nsw i64 %149, 1
  %151 = and i64 %150, 3
  %152 = icmp eq i64 %151, 0
  br i1 %152, label %171, label %153

153:                                              ; preds = %145, %166
  %154 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %168, %166 ], [ %143, %145 ]
  %155 = phi i64 [ %167, %166 ], [ %140, %145 ]
  %156 = phi i64 [ %169, %166 ], [ %151, %145 ]
  %157 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %154, i64 0, i32 0
  %158 = load i8*, i8** %157, align 8
  %159 = icmp eq i8* %158, null
  br i1 %159, label %166, label %160

160:                                              ; preds = %153
  %161 = ptrtoint i8* %158 to i64
  %162 = inttoptr i64 %155 to %"class.base::internal::UncheckedObserverAdapter"*
  %163 = inttoptr i64 %155 to i64*
  store i64 %161, i64* %163, align 8
  %164 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %162, i64 1
  %165 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %164 to i64
  br label %166

166:                                              ; preds = %160, %153
  %167 = phi i64 [ %155, %153 ], [ %165, %160 ]
  %168 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %154, i64 1
  %169 = add i64 %156, -1
  %170 = icmp eq i64 %169, 0
  br i1 %170, label %171, label %153, !llvm.loop !19

171:                                              ; preds = %166, %145
  %172 = phi i64 [ undef, %145 ], [ %167, %166 ]
  %173 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %143, %145 ], [ %168, %166 ]
  %174 = phi i64 [ %140, %145 ], [ %167, %166 ]
  %175 = icmp ult i64 %148, 24
  br i1 %175, label %193, label %176

176:                                              ; preds = %171, %412
  %177 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %414, %412 ], [ %173, %171 ]
  %178 = phi i64 [ %413, %412 ], [ %174, %171 ]
  %179 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %177, i64 0, i32 0
  %180 = load i8*, i8** %179, align 8
  %181 = icmp eq i8* %180, null
  br i1 %181, label %188, label %182

182:                                              ; preds = %176
  %183 = ptrtoint i8* %180 to i64
  %184 = inttoptr i64 %178 to %"class.base::internal::UncheckedObserverAdapter"*
  %185 = inttoptr i64 %178 to i64*
  store i64 %183, i64* %185, align 8
  %186 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %184, i64 1
  %187 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %186 to i64
  br label %188

188:                                              ; preds = %182, %176
  %189 = phi i64 [ %178, %176 ], [ %187, %182 ]
  %190 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %177, i64 1, i32 0
  %191 = load i8*, i8** %190, align 8
  %192 = icmp eq i8* %191, null
  br i1 %192, label %390, label %384

193:                                              ; preds = %412, %171
  %194 = phi i64 [ %172, %171 ], [ %413, %412 ]
  %195 = inttoptr i64 %194 to %"class.base::internal::UncheckedObserverAdapter"*
  %196 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %127, align 8
  br label %197

197:                                              ; preds = %193, %142
  %198 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %128, %142 ], [ %196, %193 ]
  %199 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %139, %142 ], [ %195, %193 ]
  %200 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %199, %198
  br i1 %200, label %202, label %201

201:                                              ; preds = %197
  store %"class.base::internal::UncheckedObserverAdapter"* %199, %"class.base::internal::UncheckedObserverAdapter"** %127, align 8
  br label %202

202:                                              ; preds = %135, %201, %197, %138, %115
  %203 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %65, align 8
  %204 = icmp eq %"class.base::ObserverList"* %203, null
  br i1 %204, label %206, label %205

205:                                              ; preds = %202
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %65, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %68) #10
  br label %206

206:                                              ; preds = %90, %113, %202, %205
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %64) #10
  %207 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %11, align 8
  %208 = icmp eq %"class.base::ObserverList"* %207, null
  br i1 %208, label %299, label %209

209:                                              ; preds = %206
  %210 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %207, i64 0, i32 1
  %211 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %207, i64 0, i32 1, i32 0, i32 0, i32 1
  %212 = bitcast %"class.base::internal::LinkNodeBase"** %211 to %"class.base::LinkNode"**
  %213 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %212, align 8
  %214 = bitcast %"class.base::LinkedList"* %210 to %"class.base::LinkNode"**
  %215 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %214, align 8
  %216 = icmp eq %"class.base::LinkNode"* %213, %215
  br i1 %216, label %217, label %295

217:                                              ; preds = %209
  %218 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %207, i64 0, i32 0, i32 0, i32 0
  %219 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %218, align 8
  %220 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %207, i64 0, i32 0, i32 0, i32 1
  %221 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %220, align 8
  %222 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %219, %221
  br i1 %222, label %231, label %223

223:                                              ; preds = %217, %228
  %224 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %229, %228 ], [ %219, %217 ]
  %225 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %224, i64 0, i32 0
  %226 = load i8*, i8** %225, align 8
  %227 = icmp eq i8* %226, null
  br i1 %227, label %231, label %228

228:                                              ; preds = %223
  %229 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %224, i64 1
  %230 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %229, %221
  br i1 %230, label %295, label %223

231:                                              ; preds = %223, %217
  %232 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %219, %217 ], [ %224, %223 ]
  %233 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %232 to i64
  %234 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %232, %221
  br i1 %234, label %295, label %235

235:                                              ; preds = %231
  %236 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %232, i64 1
  %237 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %236, %221
  br i1 %237, label %290, label %238

238:                                              ; preds = %235
  %239 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %221, i64 -2, i32 0
  %240 = ptrtoint i8** %239 to i64
  %241 = sub i64 %240, %233
  %242 = lshr i64 %241, 3
  %243 = add nuw nsw i64 %242, 1
  %244 = and i64 %243, 3
  %245 = icmp eq i64 %244, 0
  br i1 %245, label %264, label %246

246:                                              ; preds = %238, %259
  %247 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %261, %259 ], [ %236, %238 ]
  %248 = phi i64 [ %260, %259 ], [ %233, %238 ]
  %249 = phi i64 [ %262, %259 ], [ %244, %238 ]
  %250 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %247, i64 0, i32 0
  %251 = load i8*, i8** %250, align 8
  %252 = icmp eq i8* %251, null
  br i1 %252, label %259, label %253

253:                                              ; preds = %246
  %254 = ptrtoint i8* %251 to i64
  %255 = inttoptr i64 %248 to %"class.base::internal::UncheckedObserverAdapter"*
  %256 = inttoptr i64 %248 to i64*
  store i64 %254, i64* %256, align 8
  %257 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %255, i64 1
  %258 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %257 to i64
  br label %259

259:                                              ; preds = %253, %246
  %260 = phi i64 [ %248, %246 ], [ %258, %253 ]
  %261 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %247, i64 1
  %262 = add i64 %249, -1
  %263 = icmp eq i64 %262, 0
  br i1 %263, label %264, label %246, !llvm.loop !21

264:                                              ; preds = %259, %238
  %265 = phi i64 [ undef, %238 ], [ %260, %259 ]
  %266 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %236, %238 ], [ %261, %259 ]
  %267 = phi i64 [ %233, %238 ], [ %260, %259 ]
  %268 = icmp ult i64 %241, 24
  br i1 %268, label %286, label %269

269:                                              ; preds = %264, %380
  %270 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %382, %380 ], [ %266, %264 ]
  %271 = phi i64 [ %381, %380 ], [ %267, %264 ]
  %272 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %270, i64 0, i32 0
  %273 = load i8*, i8** %272, align 8
  %274 = icmp eq i8* %273, null
  br i1 %274, label %281, label %275

275:                                              ; preds = %269
  %276 = ptrtoint i8* %273 to i64
  %277 = inttoptr i64 %271 to %"class.base::internal::UncheckedObserverAdapter"*
  %278 = inttoptr i64 %271 to i64*
  store i64 %276, i64* %278, align 8
  %279 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %277, i64 1
  %280 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %279 to i64
  br label %281

281:                                              ; preds = %275, %269
  %282 = phi i64 [ %271, %269 ], [ %280, %275 ]
  %283 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %270, i64 1, i32 0
  %284 = load i8*, i8** %283, align 8
  %285 = icmp eq i8* %284, null
  br i1 %285, label %358, label %352

286:                                              ; preds = %380, %264
  %287 = phi i64 [ %265, %264 ], [ %381, %380 ]
  %288 = inttoptr i64 %287 to %"class.base::internal::UncheckedObserverAdapter"*
  %289 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %220, align 8
  br label %290

290:                                              ; preds = %286, %235
  %291 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %221, %235 ], [ %289, %286 ]
  %292 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %232, %235 ], [ %288, %286 ]
  %293 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %292, %291
  br i1 %293, label %295, label %294

294:                                              ; preds = %290
  store %"class.base::internal::UncheckedObserverAdapter"* %292, %"class.base::internal::UncheckedObserverAdapter"** %220, align 8
  br label %295

295:                                              ; preds = %228, %294, %290, %231, %209
  %296 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %11, align 8
  %297 = icmp eq %"class.base::ObserverList"* %296, null
  br i1 %297, label %299, label %298

298:                                              ; preds = %295
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %11, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %20) #10
  br label %299

299:                                              ; preds = %206, %295, %298
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %10) #10
  %300 = icmp eq %"class.headless::log::EntryAddedParams"* %8, null
  br i1 %300, label %309, label %301

301:                                              ; preds = %299
  %302 = getelementptr inbounds %"class.headless::log::EntryAddedParams", %"class.headless::log::EntryAddedParams"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %303 = load %"class.headless::log::LogEntry"*, %"class.headless::log::LogEntry"** %302, align 8
  store %"class.headless::log::LogEntry"* null, %"class.headless::log::LogEntry"** %302, align 8
  %304 = icmp eq %"class.headless::log::LogEntry"* %303, null
  br i1 %304, label %307, label %305

305:                                              ; preds = %301
  call void @_ZN8headless3log8LogEntryD2Ev(%"class.headless::log::LogEntry"* nonnull %303) #10
  %306 = bitcast %"class.headless::log::LogEntry"* %303 to i8*
  call void @_ZdlPv(i8* %306) #9
  br label %307

307:                                              ; preds = %305, %301
  %308 = bitcast %"class.headless::log::EntryAddedParams"* %8 to i8*
  call void @_ZdlPv(i8* %308) #9
  br label %309

309:                                              ; preds = %299, %307
  call void @_ZN8headless13ErrorReporterD1Ev(%"class.headless::ErrorReporter"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %6) #10
  ret void

310:                                              ; preds = %106
  %311 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %73, i64 0, i32 0, i32 0, i32 0
  %312 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %311, align 8
  %313 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %312, i64 %109
  %314 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %313 to %"class.headless::log::ExperimentalObserver"**
  %315 = load %"class.headless::log::ExperimentalObserver"*, %"class.headless::log::ExperimentalObserver"** %314, align 8
  %316 = bitcast %"class.headless::log::ExperimentalObserver"* %315 to void (%"class.headless::log::ExperimentalObserver"*, %"class.headless::log::EntryAddedParams"*)***
  %317 = load void (%"class.headless::log::ExperimentalObserver"*, %"class.headless::log::EntryAddedParams"*)**, void (%"class.headless::log::ExperimentalObserver"*, %"class.headless::log::EntryAddedParams"*)*** %316, align 8
  %318 = getelementptr inbounds void (%"class.headless::log::ExperimentalObserver"*, %"class.headless::log::EntryAddedParams"*)*, void (%"class.headless::log::ExperimentalObserver"*, %"class.headless::log::EntryAddedParams"*)** %317, i64 2
  %319 = load void (%"class.headless::log::ExperimentalObserver"*, %"class.headless::log::EntryAddedParams"*)*, void (%"class.headless::log::ExperimentalObserver"*, %"class.headless::log::EntryAddedParams"*)** %318, align 8
  call void %319(%"class.headless::log::ExperimentalObserver"* %315, %"class.headless::log::EntryAddedParams"* dereferenceable(8) %8) #10
  %320 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %11, align 8
  %321 = icmp eq %"class.base::ObserverList"* %320, null
  br i1 %321, label %322, label %323

322:                                              ; preds = %347, %343, %310, %323, %337
  br label %72

323:                                              ; preds = %310
  %324 = load i64, i64* %12, align 8
  %325 = add i64 %324, 1
  store i64 %325, i64* %12, align 8
  %326 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %320, i64 0, i32 0, i32 0, i32 1
  %327 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %326 to i64*
  %328 = load i64, i64* %327, align 8
  %329 = bitcast %"class.base::ObserverList"* %320 to i64*
  %330 = load i64, i64* %329, align 8
  %331 = sub i64 %328, %330
  %332 = ashr exact i64 %331, 3
  %333 = load i64, i64* %13, align 8
  %334 = icmp ult i64 %332, %333
  %335 = select i1 %334, i64 %332, i64 %333
  %336 = icmp ult i64 %325, %335
  br i1 %336, label %337, label %322

337:                                              ; preds = %323
  %338 = inttoptr i64 %330 to %"class.base::internal::UncheckedObserverAdapter"*
  %339 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %320, i64 0, i32 0, i32 0, i32 0
  %340 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %338, i64 %325, i32 0
  %341 = load i8*, i8** %340, align 8
  %342 = icmp eq i8* %341, null
  br i1 %342, label %343, label %322

343:                                              ; preds = %337, %347
  %344 = phi i64 [ %345, %347 ], [ %325, %337 ]
  %345 = add nuw i64 %344, 1
  store i64 %345, i64* %12, align 8
  %346 = icmp ult i64 %345, %335
  br i1 %346, label %347, label %322

347:                                              ; preds = %343
  %348 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %339, align 8
  %349 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %348, i64 %345, i32 0
  %350 = load i8*, i8** %349, align 8
  %351 = icmp eq i8* %350, null
  br i1 %351, label %343, label %322

352:                                              ; preds = %281
  %353 = ptrtoint i8* %284 to i64
  %354 = inttoptr i64 %282 to %"class.base::internal::UncheckedObserverAdapter"*
  %355 = inttoptr i64 %282 to i64*
  store i64 %353, i64* %355, align 8
  %356 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %354, i64 1
  %357 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %356 to i64
  br label %358

358:                                              ; preds = %352, %281
  %359 = phi i64 [ %282, %281 ], [ %357, %352 ]
  %360 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %270, i64 2, i32 0
  %361 = load i8*, i8** %360, align 8
  %362 = icmp eq i8* %361, null
  br i1 %362, label %369, label %363

363:                                              ; preds = %358
  %364 = ptrtoint i8* %361 to i64
  %365 = inttoptr i64 %359 to %"class.base::internal::UncheckedObserverAdapter"*
  %366 = inttoptr i64 %359 to i64*
  store i64 %364, i64* %366, align 8
  %367 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %365, i64 1
  %368 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %367 to i64
  br label %369

369:                                              ; preds = %363, %358
  %370 = phi i64 [ %359, %358 ], [ %368, %363 ]
  %371 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %270, i64 3, i32 0
  %372 = load i8*, i8** %371, align 8
  %373 = icmp eq i8* %372, null
  br i1 %373, label %380, label %374

374:                                              ; preds = %369
  %375 = ptrtoint i8* %372 to i64
  %376 = inttoptr i64 %370 to %"class.base::internal::UncheckedObserverAdapter"*
  %377 = inttoptr i64 %370 to i64*
  store i64 %375, i64* %377, align 8
  %378 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %376, i64 1
  %379 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %378 to i64
  br label %380

380:                                              ; preds = %374, %369
  %381 = phi i64 [ %370, %369 ], [ %379, %374 ]
  %382 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %270, i64 4
  %383 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %382, %221
  br i1 %383, label %286, label %269

384:                                              ; preds = %188
  %385 = ptrtoint i8* %191 to i64
  %386 = inttoptr i64 %189 to %"class.base::internal::UncheckedObserverAdapter"*
  %387 = inttoptr i64 %189 to i64*
  store i64 %385, i64* %387, align 8
  %388 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %386, i64 1
  %389 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %388 to i64
  br label %390

390:                                              ; preds = %384, %188
  %391 = phi i64 [ %189, %188 ], [ %389, %384 ]
  %392 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %177, i64 2, i32 0
  %393 = load i8*, i8** %392, align 8
  %394 = icmp eq i8* %393, null
  br i1 %394, label %401, label %395

395:                                              ; preds = %390
  %396 = ptrtoint i8* %393 to i64
  %397 = inttoptr i64 %391 to %"class.base::internal::UncheckedObserverAdapter"*
  %398 = inttoptr i64 %391 to i64*
  store i64 %396, i64* %398, align 8
  %399 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %397, i64 1
  %400 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %399 to i64
  br label %401

401:                                              ; preds = %395, %390
  %402 = phi i64 [ %391, %390 ], [ %400, %395 ]
  %403 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %177, i64 3, i32 0
  %404 = load i8*, i8** %403, align 8
  %405 = icmp eq i8* %404, null
  br i1 %405, label %412, label %406

406:                                              ; preds = %401
  %407 = ptrtoint i8* %404 to i64
  %408 = inttoptr i64 %402 to %"class.base::internal::UncheckedObserverAdapter"*
  %409 = inttoptr i64 %402 to i64*
  store i64 %407, i64* %409, align 8
  %410 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %408, i64 1
  %411 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %410 to i64
  br label %412

412:                                              ; preds = %406, %401
  %413 = phi i64 [ %402, %401 ], [ %411, %406 ]
  %414 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %177, i64 4
  %415 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %414, %128
  br i1 %415, label %193, label %176
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless3log6Domain5ClearENSt3__110unique_ptrINS0_11ClearParamsENS2_14default_deleteIS4_EEEEN4base12OnceCallbackIFvNS3_INS0_11ClearResultENS5_ISA_EEEEEEE(%"class.headless::log::Domain"* nocapture readonly, %"class.headless::log::ClearParams"*, %"class.base::OnceCallback"* nocapture) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.base::OnceCallback.44", align 8
  %5 = getelementptr inbounds %"class.headless::log::Domain", %"class.headless::log::Domain"* %0, i64 0, i32 0
  %6 = load %"class.headless::internal::MessageDispatcher"*, %"class.headless::internal::MessageDispatcher"** %5, align 8
  %7 = tail call %"class.base::Value"* @_ZNK8headless3log11ClearParams9SerializeEv(%"class.headless::log::ClearParams"* %1) #10
  %8 = tail call i8* @_Znwm(i64 48) #9, !noalias !22
  %9 = bitcast i8* %8 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %9, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.base::Value"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless3log11ClearResultENS4_14default_deleteIS8_EEEEEEERKNS_5ValueEEJSD_EEEFvSG_EE7RunOnceEPNS0_13BindStateBaseESG_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless3log11ClearResultENS3_14default_deleteIS7_EEEEEEERKNS_5ValueEEJSC_EE7DestroyEPKNS0_13BindStateBaseE) #10, !noalias !22
  %10 = getelementptr inbounds i8, i8* %8, i64 32
  %11 = bitcast i8* %10 to i64*
  store i64 ptrtoint (void (%"class.base::OnceCallback"*, %"class.base::Value"*)* @_ZN8headless3log6Domain19HandleClearResponseEN4base12OnceCallbackIFvNSt3__110unique_ptrINS0_11ClearResultENS4_14default_deleteIS6_EEEEEEERKNS2_5ValueE to i64), i64* %11, align 8, !noalias !22
  %12 = getelementptr inbounds i8, i8* %8, i64 40
  %13 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0, i32 0, i32 0
  %14 = bitcast %"class.base::OnceCallback"* %2 to i64*
  %15 = load i64, i64* %14, align 8, !noalias !22
  %16 = bitcast i8* %12 to i64*
  store i64 %15, i64* %16, align 8, !noalias !22
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %13, align 8, !noalias !22
  %17 = bitcast %"class.base::OnceCallback.44"* %4 to i8**
  store i8* %8, i8** %17, align 8, !alias.scope !22
  %18 = bitcast %"class.headless::internal::MessageDispatcher"* %6 to void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.44"*)***
  %19 = load void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.44"*)**, void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.44"*)*** %18, align 8
  %20 = load void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.44"*)*, void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.44"*)** %19, align 8
  call void %20(%"class.headless::internal::MessageDispatcher"* %6, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i64 0, i64 0), %"class.base::Value"* %7, %"class.base::OnceCallback.44"* nonnull %4) #10
  %21 = getelementptr inbounds %"class.base::OnceCallback.44", %"class.base::OnceCallback.44"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %21) #10
  %22 = icmp eq %"class.headless::log::ClearParams"* %1, null
  br i1 %22, label %25, label %23

23:                                               ; preds = %3
  %24 = getelementptr inbounds %"class.headless::log::ClearParams", %"class.headless::log::ClearParams"* %1, i64 0, i32 0
  call void @_ZdlPv(i8* %24) #9
  br label %25

25:                                               ; preds = %3, %23
  ret void
}

declare %"class.base::Value"* @_ZNK8headless3log11ClearParams9SerializeEv(%"class.headless::log::ClearParams"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless3log6Domain19HandleClearResponseEN4base12OnceCallbackIFvNSt3__110unique_ptrINS0_11ClearResultENS4_14default_deleteIS6_EEEEEEERKNS2_5ValueE(%"class.base::OnceCallback"* nocapture, %"class.base::Value"* dereferenceable(32)) #1 align 2 {
  %3 = alloca %"class.std::__1::unique_ptr.88", align 8
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = alloca %"class.std::__1::unique_ptr.88", align 8
  %6 = alloca %"class.base::OnceCallback", align 8
  %7 = alloca %"class.headless::ErrorReporter", align 8
  %8 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %8, align 8
  %10 = icmp eq %"class.base::internal::BindStateBase"* %9, null
  %11 = ptrtoint %"class.base::internal::BindStateBase"* %9 to i64
  br i1 %10, label %51, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = trunc i64 %14 to i8
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %17, label %31

17:                                               ; preds = %12
  %18 = bitcast %"class.std::__1::unique_ptr.88"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = getelementptr inbounds %"class.std::__1::unique_ptr.88", %"class.std::__1::unique_ptr.88"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.headless::log::ClearResult"* null, %"class.headless::log::ClearResult"** %19, align 8
  %20 = bitcast %"class.base::OnceCallback"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #10
  %21 = bitcast %"class.base::OnceCallback"* %4 to i64*
  store i64 %11, i64* %21, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %8, align 8
  %22 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  %23 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %9, i64 0, i32 1
  %24 = bitcast void ()** %23 to void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.88"*)**
  %25 = load void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.88"*)*, void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.88"*)** %24, align 8
  call void %25(%"class.base::internal::BindStateBase"* nonnull %9, %"class.std::__1::unique_ptr.88"* nonnull dereferenceable(8) %3) #10
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %22) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #10
  %26 = load %"class.headless::log::ClearResult"*, %"class.headless::log::ClearResult"** %19, align 8
  store %"class.headless::log::ClearResult"* null, %"class.headless::log::ClearResult"** %19, align 8
  %27 = icmp eq %"class.headless::log::ClearResult"* %26, null
  br i1 %27, label %30, label %28

28:                                               ; preds = %17
  %29 = getelementptr inbounds %"class.headless::log::ClearResult", %"class.headless::log::ClearResult"* %26, i64 0, i32 0
  call void @_ZdlPv(i8* %29) #9
  br label %30

30:                                               ; preds = %17, %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  br label %51

31:                                               ; preds = %12
  %32 = bitcast %"class.headless::ErrorReporter"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %32) #10
  %33 = bitcast %"class.headless::ErrorReporter"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %33, i8 -86, i64 48, i1 false)
  call void @_ZN8headless13ErrorReporterC1Ev(%"class.headless::ErrorReporter"* nonnull %7) #10
  %34 = call %"class.headless::log::ClearResult"* @_ZN8headless3log11ClearResult5ParseERKN4base5ValueEPNS_13ErrorReporterE(%"class.base::Value"* dereferenceable(32) %1, %"class.headless::ErrorReporter"* nonnull %7) #10
  %35 = bitcast %"class.std::__1::unique_ptr.88"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35)
  %36 = getelementptr inbounds %"class.std::__1::unique_ptr.88", %"class.std::__1::unique_ptr.88"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.headless::log::ClearResult"* %34, %"class.headless::log::ClearResult"** %36, align 8
  %37 = bitcast %"class.base::OnceCallback"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #10
  %38 = bitcast %"class.base::OnceCallback"* %0 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"class.base::OnceCallback"* %6 to i64*
  store i64 %39, i64* %40, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %8, align 8
  %41 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 0, i32 0
  %42 = inttoptr i64 %39 to %"class.base::internal::BindStateBase"*
  %43 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %42, i64 0, i32 1
  %44 = bitcast void ()** %43 to void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.88"*)**
  %45 = load void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.88"*)*, void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.88"*)** %44, align 8
  call void %45(%"class.base::internal::BindStateBase"* %42, %"class.std::__1::unique_ptr.88"* nonnull dereferenceable(8) %5) #10
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %41) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #10
  %46 = load %"class.headless::log::ClearResult"*, %"class.headless::log::ClearResult"** %36, align 8
  store %"class.headless::log::ClearResult"* null, %"class.headless::log::ClearResult"** %36, align 8
  %47 = icmp eq %"class.headless::log::ClearResult"* %46, null
  br i1 %47, label %50, label %48

48:                                               ; preds = %31
  %49 = getelementptr inbounds %"class.headless::log::ClearResult", %"class.headless::log::ClearResult"* %46, i64 0, i32 0
  call void @_ZdlPv(i8* %49) #9
  br label %50

50:                                               ; preds = %48, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35)
  call void @_ZN8headless13ErrorReporterD1Ev(%"class.headless::ErrorReporter"* nonnull %7) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %32) #10
  br label %51

51:                                               ; preds = %2, %50, %30
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless3log6Domain5ClearEN4base12OnceCallbackIFvvEEE(%"class.headless::log::Domain"* nocapture readonly, %"class.base::OnceCallback.45"* nocapture) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.base::OnceCallback.45", align 8
  %4 = tail call i8* @_Znwm(i64 1) #9
  %5 = bitcast i8* %4 to %"class.headless::log::ClearParams"*
  %6 = getelementptr inbounds %"class.headless::log::Domain", %"class.headless::log::Domain"* %0, i64 0, i32 0
  %7 = load %"class.headless::internal::MessageDispatcher"*, %"class.headless::internal::MessageDispatcher"** %6, align 8
  %8 = tail call %"class.base::Value"* @_ZNK8headless3log11ClearParams9SerializeEv(%"class.headless::log::ClearParams"* nonnull %5) #10
  %9 = getelementptr inbounds %"class.base::OnceCallback.45", %"class.base::OnceCallback.45"* %1, i64 0, i32 0, i32 0, i32 0
  %10 = bitcast %"class.base::OnceCallback.45"* %1 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.base::OnceCallback.45"* %3 to i64*
  store i64 %11, i64* %12, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %9, align 8
  %13 = bitcast %"class.headless::internal::MessageDispatcher"* %7 to void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.45"*)***
  %14 = load void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.45"*)**, void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.45"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.45"*)*, void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.45"*)** %14, i64 1
  %16 = load void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.45"*)*, void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.45"*)** %15, align 8
  call void %16(%"class.headless::internal::MessageDispatcher"* %7, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i64 0, i64 0), %"class.base::Value"* %8, %"class.base::OnceCallback.45"* nonnull %3) #10
  %17 = getelementptr inbounds %"class.base::OnceCallback.45", %"class.base::OnceCallback.45"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %17) #10
  call void @_ZdlPv(i8* nonnull %4) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless3log6Domain5ClearENSt3__110unique_ptrINS0_11ClearParamsENS2_14default_deleteIS4_EEEEN4base12OnceCallbackIFvvEEE(%"class.headless::log::Domain"* nocapture readonly, %"class.headless::log::ClearParams"*, %"class.base::OnceCallback.45"* nocapture) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.base::OnceCallback.45", align 8
  %5 = getelementptr inbounds %"class.headless::log::Domain", %"class.headless::log::Domain"* %0, i64 0, i32 0
  %6 = load %"class.headless::internal::MessageDispatcher"*, %"class.headless::internal::MessageDispatcher"** %5, align 8
  %7 = tail call %"class.base::Value"* @_ZNK8headless3log11ClearParams9SerializeEv(%"class.headless::log::ClearParams"* %1) #10
  %8 = getelementptr inbounds %"class.base::OnceCallback.45", %"class.base::OnceCallback.45"* %2, i64 0, i32 0, i32 0, i32 0
  %9 = bitcast %"class.base::OnceCallback.45"* %2 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.base::OnceCallback.45"* %4 to i64*
  store i64 %10, i64* %11, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %8, align 8
  %12 = bitcast %"class.headless::internal::MessageDispatcher"* %6 to void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.45"*)***
  %13 = load void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.45"*)**, void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.45"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.45"*)*, void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.45"*)** %13, i64 1
  %15 = load void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.45"*)*, void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.45"*)** %14, align 8
  call void %15(%"class.headless::internal::MessageDispatcher"* %6, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i64 0, i64 0), %"class.base::Value"* %7, %"class.base::OnceCallback.45"* nonnull %4) #10
  %16 = getelementptr inbounds %"class.base::OnceCallback.45", %"class.base::OnceCallback.45"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %16) #10
  %17 = icmp eq %"class.headless::log::ClearParams"* %1, null
  br i1 %17, label %20, label %18

18:                                               ; preds = %3
  %19 = getelementptr inbounds %"class.headless::log::ClearParams", %"class.headless::log::ClearParams"* %1, i64 0, i32 0
  call void @_ZdlPv(i8* %19) #9
  br label %20

20:                                               ; preds = %3, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless3log6Domain7DisableENSt3__110unique_ptrINS0_13DisableParamsENS2_14default_deleteIS4_EEEEN4base12OnceCallbackIFvNS3_INS0_13DisableResultENS5_ISA_EEEEEEE(%"class.headless::log::Domain"* nocapture readonly, %"class.headless::log::DisableParams"*, %"class.base::OnceCallback.52"* nocapture) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.base::OnceCallback.44", align 8
  %5 = getelementptr inbounds %"class.headless::log::Domain", %"class.headless::log::Domain"* %0, i64 0, i32 0
  %6 = load %"class.headless::internal::MessageDispatcher"*, %"class.headless::internal::MessageDispatcher"** %5, align 8
  %7 = tail call %"class.base::Value"* @_ZNK8headless3log13DisableParams9SerializeEv(%"class.headless::log::DisableParams"* %1) #10
  %8 = tail call i8* @_Znwm(i64 48) #9, !noalias !27
  %9 = bitcast i8* %8 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %9, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.base::Value"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless3log13DisableResultENS4_14default_deleteIS8_EEEEEEERKNS_5ValueEEJSD_EEEFvSG_EE7RunOnceEPNS0_13BindStateBaseESG_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless3log13DisableResultENS3_14default_deleteIS7_EEEEEEERKNS_5ValueEEJSC_EE7DestroyEPKNS0_13BindStateBaseE) #10, !noalias !27
  %10 = getelementptr inbounds i8, i8* %8, i64 32
  %11 = bitcast i8* %10 to i64*
  store i64 ptrtoint (void (%"class.base::OnceCallback.52"*, %"class.base::Value"*)* @_ZN8headless3log6Domain21HandleDisableResponseEN4base12OnceCallbackIFvNSt3__110unique_ptrINS0_13DisableResultENS4_14default_deleteIS6_EEEEEEERKNS2_5ValueE to i64), i64* %11, align 8, !noalias !27
  %12 = getelementptr inbounds i8, i8* %8, i64 40
  %13 = getelementptr inbounds %"class.base::OnceCallback.52", %"class.base::OnceCallback.52"* %2, i64 0, i32 0, i32 0, i32 0
  %14 = bitcast %"class.base::OnceCallback.52"* %2 to i64*
  %15 = load i64, i64* %14, align 8, !noalias !27
  %16 = bitcast i8* %12 to i64*
  store i64 %15, i64* %16, align 8, !noalias !27
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %13, align 8, !noalias !27
  %17 = bitcast %"class.base::OnceCallback.44"* %4 to i8**
  store i8* %8, i8** %17, align 8, !alias.scope !27
  %18 = bitcast %"class.headless::internal::MessageDispatcher"* %6 to void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.44"*)***
  %19 = load void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.44"*)**, void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.44"*)*** %18, align 8
  %20 = load void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.44"*)*, void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.44"*)** %19, align 8
  call void %20(%"class.headless::internal::MessageDispatcher"* %6, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), %"class.base::Value"* %7, %"class.base::OnceCallback.44"* nonnull %4) #10
  %21 = getelementptr inbounds %"class.base::OnceCallback.44", %"class.base::OnceCallback.44"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %21) #10
  %22 = icmp eq %"class.headless::log::DisableParams"* %1, null
  br i1 %22, label %25, label %23

23:                                               ; preds = %3
  %24 = getelementptr inbounds %"class.headless::log::DisableParams", %"class.headless::log::DisableParams"* %1, i64 0, i32 0
  call void @_ZdlPv(i8* %24) #9
  br label %25

25:                                               ; preds = %3, %23
  ret void
}

declare %"class.base::Value"* @_ZNK8headless3log13DisableParams9SerializeEv(%"class.headless::log::DisableParams"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless3log6Domain21HandleDisableResponseEN4base12OnceCallbackIFvNSt3__110unique_ptrINS0_13DisableResultENS4_14default_deleteIS6_EEEEEEERKNS2_5ValueE(%"class.base::OnceCallback.52"* nocapture, %"class.base::Value"* dereferenceable(32)) #1 align 2 {
  %3 = alloca %"class.std::__1::unique_ptr.108", align 8
  %4 = alloca %"class.base::OnceCallback.52", align 8
  %5 = alloca %"class.std::__1::unique_ptr.108", align 8
  %6 = alloca %"class.base::OnceCallback.52", align 8
  %7 = alloca %"class.headless::ErrorReporter", align 8
  %8 = getelementptr inbounds %"class.base::OnceCallback.52", %"class.base::OnceCallback.52"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %8, align 8
  %10 = icmp eq %"class.base::internal::BindStateBase"* %9, null
  %11 = ptrtoint %"class.base::internal::BindStateBase"* %9 to i64
  br i1 %10, label %51, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = trunc i64 %14 to i8
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %17, label %31

17:                                               ; preds = %12
  %18 = bitcast %"class.std::__1::unique_ptr.108"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = getelementptr inbounds %"class.std::__1::unique_ptr.108", %"class.std::__1::unique_ptr.108"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.headless::log::DisableResult"* null, %"class.headless::log::DisableResult"** %19, align 8
  %20 = bitcast %"class.base::OnceCallback.52"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #10
  %21 = bitcast %"class.base::OnceCallback.52"* %4 to i64*
  store i64 %11, i64* %21, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %8, align 8
  %22 = getelementptr inbounds %"class.base::OnceCallback.52", %"class.base::OnceCallback.52"* %4, i64 0, i32 0
  %23 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %9, i64 0, i32 1
  %24 = bitcast void ()** %23 to void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.108"*)**
  %25 = load void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.108"*)*, void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.108"*)** %24, align 8
  call void %25(%"class.base::internal::BindStateBase"* nonnull %9, %"class.std::__1::unique_ptr.108"* nonnull dereferenceable(8) %3) #10
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %22) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #10
  %26 = load %"class.headless::log::DisableResult"*, %"class.headless::log::DisableResult"** %19, align 8
  store %"class.headless::log::DisableResult"* null, %"class.headless::log::DisableResult"** %19, align 8
  %27 = icmp eq %"class.headless::log::DisableResult"* %26, null
  br i1 %27, label %30, label %28

28:                                               ; preds = %17
  %29 = getelementptr inbounds %"class.headless::log::DisableResult", %"class.headless::log::DisableResult"* %26, i64 0, i32 0
  call void @_ZdlPv(i8* %29) #9
  br label %30

30:                                               ; preds = %17, %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  br label %51

31:                                               ; preds = %12
  %32 = bitcast %"class.headless::ErrorReporter"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %32) #10
  %33 = bitcast %"class.headless::ErrorReporter"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %33, i8 -86, i64 48, i1 false)
  call void @_ZN8headless13ErrorReporterC1Ev(%"class.headless::ErrorReporter"* nonnull %7) #10
  %34 = call %"class.headless::log::DisableResult"* @_ZN8headless3log13DisableResult5ParseERKN4base5ValueEPNS_13ErrorReporterE(%"class.base::Value"* dereferenceable(32) %1, %"class.headless::ErrorReporter"* nonnull %7) #10
  %35 = bitcast %"class.std::__1::unique_ptr.108"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35)
  %36 = getelementptr inbounds %"class.std::__1::unique_ptr.108", %"class.std::__1::unique_ptr.108"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.headless::log::DisableResult"* %34, %"class.headless::log::DisableResult"** %36, align 8
  %37 = bitcast %"class.base::OnceCallback.52"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #10
  %38 = bitcast %"class.base::OnceCallback.52"* %0 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"class.base::OnceCallback.52"* %6 to i64*
  store i64 %39, i64* %40, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %8, align 8
  %41 = getelementptr inbounds %"class.base::OnceCallback.52", %"class.base::OnceCallback.52"* %6, i64 0, i32 0
  %42 = inttoptr i64 %39 to %"class.base::internal::BindStateBase"*
  %43 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %42, i64 0, i32 1
  %44 = bitcast void ()** %43 to void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.108"*)**
  %45 = load void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.108"*)*, void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.108"*)** %44, align 8
  call void %45(%"class.base::internal::BindStateBase"* %42, %"class.std::__1::unique_ptr.108"* nonnull dereferenceable(8) %5) #10
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %41) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #10
  %46 = load %"class.headless::log::DisableResult"*, %"class.headless::log::DisableResult"** %36, align 8
  store %"class.headless::log::DisableResult"* null, %"class.headless::log::DisableResult"** %36, align 8
  %47 = icmp eq %"class.headless::log::DisableResult"* %46, null
  br i1 %47, label %50, label %48

48:                                               ; preds = %31
  %49 = getelementptr inbounds %"class.headless::log::DisableResult", %"class.headless::log::DisableResult"* %46, i64 0, i32 0
  call void @_ZdlPv(i8* %49) #9
  br label %50

50:                                               ; preds = %48, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35)
  call void @_ZN8headless13ErrorReporterD1Ev(%"class.headless::ErrorReporter"* nonnull %7) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %32) #10
  br label %51

51:                                               ; preds = %2, %50, %30
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless3log6Domain7DisableEN4base12OnceCallbackIFvvEEE(%"class.headless::log::Domain"* nocapture readonly, %"class.base::OnceCallback.45"* nocapture) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.base::OnceCallback.45", align 8
  %4 = tail call i8* @_Znwm(i64 1) #9
  %5 = bitcast i8* %4 to %"class.headless::log::DisableParams"*
  %6 = getelementptr inbounds %"class.headless::log::Domain", %"class.headless::log::Domain"* %0, i64 0, i32 0
  %7 = load %"class.headless::internal::MessageDispatcher"*, %"class.headless::internal::MessageDispatcher"** %6, align 8
  %8 = tail call %"class.base::Value"* @_ZNK8headless3log13DisableParams9SerializeEv(%"class.headless::log::DisableParams"* nonnull %5) #10
  %9 = getelementptr inbounds %"class.base::OnceCallback.45", %"class.base::OnceCallback.45"* %1, i64 0, i32 0, i32 0, i32 0
  %10 = bitcast %"class.base::OnceCallback.45"* %1 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.base::OnceCallback.45"* %3 to i64*
  store i64 %11, i64* %12, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %9, align 8
  %13 = bitcast %"class.headless::internal::MessageDispatcher"* %7 to void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.45"*)***
  %14 = load void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.45"*)**, void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.45"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.45"*)*, void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.45"*)** %14, i64 1
  %16 = load void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.45"*)*, void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.45"*)** %15, align 8
  call void %16(%"class.headless::internal::MessageDispatcher"* %7, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), %"class.base::Value"* %8, %"class.base::OnceCallback.45"* nonnull %3) #10
  %17 = getelementptr inbounds %"class.base::OnceCallback.45", %"class.base::OnceCallback.45"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %17) #10
  call void @_ZdlPv(i8* nonnull %4) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless3log6Domain7DisableENSt3__110unique_ptrINS0_13DisableParamsENS2_14default_deleteIS4_EEEEN4base12OnceCallbackIFvvEEE(%"class.headless::log::Domain"* nocapture readonly, %"class.headless::log::DisableParams"*, %"class.base::OnceCallback.45"* nocapture) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.base::OnceCallback.45", align 8
  %5 = getelementptr inbounds %"class.headless::log::Domain", %"class.headless::log::Domain"* %0, i64 0, i32 0
  %6 = load %"class.headless::internal::MessageDispatcher"*, %"class.headless::internal::MessageDispatcher"** %5, align 8
  %7 = tail call %"class.base::Value"* @_ZNK8headless3log13DisableParams9SerializeEv(%"class.headless::log::DisableParams"* %1) #10
  %8 = getelementptr inbounds %"class.base::OnceCallback.45", %"class.base::OnceCallback.45"* %2, i64 0, i32 0, i32 0, i32 0
  %9 = bitcast %"class.base::OnceCallback.45"* %2 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.base::OnceCallback.45"* %4 to i64*
  store i64 %10, i64* %11, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %8, align 8
  %12 = bitcast %"class.headless::internal::MessageDispatcher"* %6 to void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.45"*)***
  %13 = load void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.45"*)**, void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.45"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.45"*)*, void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.45"*)** %13, i64 1
  %15 = load void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.45"*)*, void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.45"*)** %14, align 8
  call void %15(%"class.headless::internal::MessageDispatcher"* %6, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), %"class.base::Value"* %7, %"class.base::OnceCallback.45"* nonnull %4) #10
  %16 = getelementptr inbounds %"class.base::OnceCallback.45", %"class.base::OnceCallback.45"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %16) #10
  %17 = icmp eq %"class.headless::log::DisableParams"* %1, null
  br i1 %17, label %20, label %18

18:                                               ; preds = %3
  %19 = getelementptr inbounds %"class.headless::log::DisableParams", %"class.headless::log::DisableParams"* %1, i64 0, i32 0
  call void @_ZdlPv(i8* %19) #9
  br label %20

20:                                               ; preds = %3, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless3log6Domain6EnableENSt3__110unique_ptrINS0_12EnableParamsENS2_14default_deleteIS4_EEEEN4base12OnceCallbackIFvNS3_INS0_12EnableResultENS5_ISA_EEEEEEE(%"class.headless::log::Domain"* nocapture readonly, %"class.headless::log::EnableParams"*, %"class.base::OnceCallback.59"* nocapture) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.base::OnceCallback.44", align 8
  %5 = getelementptr inbounds %"class.headless::log::Domain", %"class.headless::log::Domain"* %0, i64 0, i32 0
  %6 = load %"class.headless::internal::MessageDispatcher"*, %"class.headless::internal::MessageDispatcher"** %5, align 8
  %7 = tail call %"class.base::Value"* @_ZNK8headless3log12EnableParams9SerializeEv(%"class.headless::log::EnableParams"* %1) #10
  %8 = tail call i8* @_Znwm(i64 48) #9, !noalias !32
  %9 = bitcast i8* %8 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %9, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.base::Value"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless3log12EnableResultENS4_14default_deleteIS8_EEEEEEERKNS_5ValueEEJSD_EEEFvSG_EE7RunOnceEPNS0_13BindStateBaseESG_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless3log12EnableResultENS3_14default_deleteIS7_EEEEEEERKNS_5ValueEEJSC_EE7DestroyEPKNS0_13BindStateBaseE) #10, !noalias !32
  %10 = getelementptr inbounds i8, i8* %8, i64 32
  %11 = bitcast i8* %10 to i64*
  store i64 ptrtoint (void (%"class.base::OnceCallback.59"*, %"class.base::Value"*)* @_ZN8headless3log6Domain20HandleEnableResponseEN4base12OnceCallbackIFvNSt3__110unique_ptrINS0_12EnableResultENS4_14default_deleteIS6_EEEEEEERKNS2_5ValueE to i64), i64* %11, align 8, !noalias !32
  %12 = getelementptr inbounds i8, i8* %8, i64 40
  %13 = getelementptr inbounds %"class.base::OnceCallback.59", %"class.base::OnceCallback.59"* %2, i64 0, i32 0, i32 0, i32 0
  %14 = bitcast %"class.base::OnceCallback.59"* %2 to i64*
  %15 = load i64, i64* %14, align 8, !noalias !32
  %16 = bitcast i8* %12 to i64*
  store i64 %15, i64* %16, align 8, !noalias !32
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %13, align 8, !noalias !32
  %17 = bitcast %"class.base::OnceCallback.44"* %4 to i8**
  store i8* %8, i8** %17, align 8, !alias.scope !32
  %18 = bitcast %"class.headless::internal::MessageDispatcher"* %6 to void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.44"*)***
  %19 = load void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.44"*)**, void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.44"*)*** %18, align 8
  %20 = load void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.44"*)*, void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.44"*)** %19, align 8
  call void %20(%"class.headless::internal::MessageDispatcher"* %6, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0), %"class.base::Value"* %7, %"class.base::OnceCallback.44"* nonnull %4) #10
  %21 = getelementptr inbounds %"class.base::OnceCallback.44", %"class.base::OnceCallback.44"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %21) #10
  %22 = icmp eq %"class.headless::log::EnableParams"* %1, null
  br i1 %22, label %25, label %23

23:                                               ; preds = %3
  %24 = getelementptr inbounds %"class.headless::log::EnableParams", %"class.headless::log::EnableParams"* %1, i64 0, i32 0
  call void @_ZdlPv(i8* %24) #9
  br label %25

25:                                               ; preds = %3, %23
  ret void
}

declare %"class.base::Value"* @_ZNK8headless3log12EnableParams9SerializeEv(%"class.headless::log::EnableParams"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless3log6Domain20HandleEnableResponseEN4base12OnceCallbackIFvNSt3__110unique_ptrINS0_12EnableResultENS4_14default_deleteIS6_EEEEEEERKNS2_5ValueE(%"class.base::OnceCallback.59"* nocapture, %"class.base::Value"* dereferenceable(32)) #1 align 2 {
  %3 = alloca %"class.std::__1::unique_ptr.114", align 8
  %4 = alloca %"class.base::OnceCallback.59", align 8
  %5 = alloca %"class.std::__1::unique_ptr.114", align 8
  %6 = alloca %"class.base::OnceCallback.59", align 8
  %7 = alloca %"class.headless::ErrorReporter", align 8
  %8 = getelementptr inbounds %"class.base::OnceCallback.59", %"class.base::OnceCallback.59"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %8, align 8
  %10 = icmp eq %"class.base::internal::BindStateBase"* %9, null
  %11 = ptrtoint %"class.base::internal::BindStateBase"* %9 to i64
  br i1 %10, label %51, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = trunc i64 %14 to i8
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %17, label %31

17:                                               ; preds = %12
  %18 = bitcast %"class.std::__1::unique_ptr.114"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = getelementptr inbounds %"class.std::__1::unique_ptr.114", %"class.std::__1::unique_ptr.114"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.headless::log::EnableResult"* null, %"class.headless::log::EnableResult"** %19, align 8
  %20 = bitcast %"class.base::OnceCallback.59"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #10
  %21 = bitcast %"class.base::OnceCallback.59"* %4 to i64*
  store i64 %11, i64* %21, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %8, align 8
  %22 = getelementptr inbounds %"class.base::OnceCallback.59", %"class.base::OnceCallback.59"* %4, i64 0, i32 0
  %23 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %9, i64 0, i32 1
  %24 = bitcast void ()** %23 to void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.114"*)**
  %25 = load void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.114"*)*, void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.114"*)** %24, align 8
  call void %25(%"class.base::internal::BindStateBase"* nonnull %9, %"class.std::__1::unique_ptr.114"* nonnull dereferenceable(8) %3) #10
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %22) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #10
  %26 = load %"class.headless::log::EnableResult"*, %"class.headless::log::EnableResult"** %19, align 8
  store %"class.headless::log::EnableResult"* null, %"class.headless::log::EnableResult"** %19, align 8
  %27 = icmp eq %"class.headless::log::EnableResult"* %26, null
  br i1 %27, label %30, label %28

28:                                               ; preds = %17
  %29 = getelementptr inbounds %"class.headless::log::EnableResult", %"class.headless::log::EnableResult"* %26, i64 0, i32 0
  call void @_ZdlPv(i8* %29) #9
  br label %30

30:                                               ; preds = %17, %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  br label %51

31:                                               ; preds = %12
  %32 = bitcast %"class.headless::ErrorReporter"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %32) #10
  %33 = bitcast %"class.headless::ErrorReporter"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %33, i8 -86, i64 48, i1 false)
  call void @_ZN8headless13ErrorReporterC1Ev(%"class.headless::ErrorReporter"* nonnull %7) #10
  %34 = call %"class.headless::log::EnableResult"* @_ZN8headless3log12EnableResult5ParseERKN4base5ValueEPNS_13ErrorReporterE(%"class.base::Value"* dereferenceable(32) %1, %"class.headless::ErrorReporter"* nonnull %7) #10
  %35 = bitcast %"class.std::__1::unique_ptr.114"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35)
  %36 = getelementptr inbounds %"class.std::__1::unique_ptr.114", %"class.std::__1::unique_ptr.114"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.headless::log::EnableResult"* %34, %"class.headless::log::EnableResult"** %36, align 8
  %37 = bitcast %"class.base::OnceCallback.59"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #10
  %38 = bitcast %"class.base::OnceCallback.59"* %0 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"class.base::OnceCallback.59"* %6 to i64*
  store i64 %39, i64* %40, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %8, align 8
  %41 = getelementptr inbounds %"class.base::OnceCallback.59", %"class.base::OnceCallback.59"* %6, i64 0, i32 0
  %42 = inttoptr i64 %39 to %"class.base::internal::BindStateBase"*
  %43 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %42, i64 0, i32 1
  %44 = bitcast void ()** %43 to void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.114"*)**
  %45 = load void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.114"*)*, void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.114"*)** %44, align 8
  call void %45(%"class.base::internal::BindStateBase"* %42, %"class.std::__1::unique_ptr.114"* nonnull dereferenceable(8) %5) #10
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %41) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #10
  %46 = load %"class.headless::log::EnableResult"*, %"class.headless::log::EnableResult"** %36, align 8
  store %"class.headless::log::EnableResult"* null, %"class.headless::log::EnableResult"** %36, align 8
  %47 = icmp eq %"class.headless::log::EnableResult"* %46, null
  br i1 %47, label %50, label %48

48:                                               ; preds = %31
  %49 = getelementptr inbounds %"class.headless::log::EnableResult", %"class.headless::log::EnableResult"* %46, i64 0, i32 0
  call void @_ZdlPv(i8* %49) #9
  br label %50

50:                                               ; preds = %48, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35)
  call void @_ZN8headless13ErrorReporterD1Ev(%"class.headless::ErrorReporter"* nonnull %7) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %32) #10
  br label %51

51:                                               ; preds = %2, %50, %30
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless3log6Domain6EnableEN4base12OnceCallbackIFvvEEE(%"class.headless::log::Domain"* nocapture readonly, %"class.base::OnceCallback.45"* nocapture) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.base::OnceCallback.45", align 8
  %4 = tail call i8* @_Znwm(i64 1) #9
  %5 = bitcast i8* %4 to %"class.headless::log::EnableParams"*
  %6 = getelementptr inbounds %"class.headless::log::Domain", %"class.headless::log::Domain"* %0, i64 0, i32 0
  %7 = load %"class.headless::internal::MessageDispatcher"*, %"class.headless::internal::MessageDispatcher"** %6, align 8
  %8 = tail call %"class.base::Value"* @_ZNK8headless3log12EnableParams9SerializeEv(%"class.headless::log::EnableParams"* nonnull %5) #10
  %9 = getelementptr inbounds %"class.base::OnceCallback.45", %"class.base::OnceCallback.45"* %1, i64 0, i32 0, i32 0, i32 0
  %10 = bitcast %"class.base::OnceCallback.45"* %1 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.base::OnceCallback.45"* %3 to i64*
  store i64 %11, i64* %12, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %9, align 8
  %13 = bitcast %"class.headless::internal::MessageDispatcher"* %7 to void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.45"*)***
  %14 = load void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.45"*)**, void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.45"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.45"*)*, void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.45"*)** %14, i64 1
  %16 = load void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.45"*)*, void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.45"*)** %15, align 8
  call void %16(%"class.headless::internal::MessageDispatcher"* %7, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0), %"class.base::Value"* %8, %"class.base::OnceCallback.45"* nonnull %3) #10
  %17 = getelementptr inbounds %"class.base::OnceCallback.45", %"class.base::OnceCallback.45"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %17) #10
  call void @_ZdlPv(i8* nonnull %4) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless3log6Domain6EnableENSt3__110unique_ptrINS0_12EnableParamsENS2_14default_deleteIS4_EEEEN4base12OnceCallbackIFvvEEE(%"class.headless::log::Domain"* nocapture readonly, %"class.headless::log::EnableParams"*, %"class.base::OnceCallback.45"* nocapture) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.base::OnceCallback.45", align 8
  %5 = getelementptr inbounds %"class.headless::log::Domain", %"class.headless::log::Domain"* %0, i64 0, i32 0
  %6 = load %"class.headless::internal::MessageDispatcher"*, %"class.headless::internal::MessageDispatcher"** %5, align 8
  %7 = tail call %"class.base::Value"* @_ZNK8headless3log12EnableParams9SerializeEv(%"class.headless::log::EnableParams"* %1) #10
  %8 = getelementptr inbounds %"class.base::OnceCallback.45", %"class.base::OnceCallback.45"* %2, i64 0, i32 0, i32 0, i32 0
  %9 = bitcast %"class.base::OnceCallback.45"* %2 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.base::OnceCallback.45"* %4 to i64*
  store i64 %10, i64* %11, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %8, align 8
  %12 = bitcast %"class.headless::internal::MessageDispatcher"* %6 to void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.45"*)***
  %13 = load void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.45"*)**, void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.45"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.45"*)*, void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.45"*)** %13, i64 1
  %15 = load void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.45"*)*, void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.45"*)** %14, align 8
  call void %15(%"class.headless::internal::MessageDispatcher"* %6, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0), %"class.base::Value"* %7, %"class.base::OnceCallback.45"* nonnull %4) #10
  %16 = getelementptr inbounds %"class.base::OnceCallback.45", %"class.base::OnceCallback.45"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %16) #10
  %17 = icmp eq %"class.headless::log::EnableParams"* %1, null
  br i1 %17, label %20, label %18

18:                                               ; preds = %3
  %19 = getelementptr inbounds %"class.headless::log::EnableParams", %"class.headless::log::EnableParams"* %1, i64 0, i32 0
  call void @_ZdlPv(i8* %19) #9
  br label %20

20:                                               ; preds = %3, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless3log6Domain21StartViolationsReportENSt3__110unique_ptrINS0_27StartViolationsReportParamsENS2_14default_deleteIS4_EEEEN4base12OnceCallbackIFvNS3_INS0_27StartViolationsReportResultENS5_ISA_EEEEEEE(%"class.headless::log::Domain"* nocapture readonly, %"class.headless::log::StartViolationsReportParams"*, %"class.base::OnceCallback.79"* nocapture) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.base::OnceCallback.44", align 8
  %5 = getelementptr inbounds %"class.headless::log::Domain", %"class.headless::log::Domain"* %0, i64 0, i32 0
  %6 = load %"class.headless::internal::MessageDispatcher"*, %"class.headless::internal::MessageDispatcher"** %5, align 8
  %7 = tail call %"class.base::Value"* @_ZNK8headless3log27StartViolationsReportParams9SerializeEv(%"class.headless::log::StartViolationsReportParams"* %1) #10
  %8 = tail call i8* @_Znwm(i64 48) #9, !noalias !37
  %9 = bitcast i8* %8 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %9, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.base::Value"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless3log27StartViolationsReportResultENS4_14default_deleteIS8_EEEEEEERKNS_5ValueEEJSD_EEEFvSG_EE7RunOnceEPNS0_13BindStateBaseESG_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless3log27StartViolationsReportResultENS3_14default_deleteIS7_EEEEEEERKNS_5ValueEEJSC_EE7DestroyEPKNS0_13BindStateBaseE) #10, !noalias !37
  %10 = getelementptr inbounds i8, i8* %8, i64 32
  %11 = bitcast i8* %10 to i64*
  store i64 ptrtoint (void (%"class.base::OnceCallback.79"*, %"class.base::Value"*)* @_ZN8headless3log6Domain35HandleStartViolationsReportResponseEN4base12OnceCallbackIFvNSt3__110unique_ptrINS0_27StartViolationsReportResultENS4_14default_deleteIS6_EEEEEEERKNS2_5ValueE to i64), i64* %11, align 8, !noalias !37
  %12 = getelementptr inbounds i8, i8* %8, i64 40
  %13 = getelementptr inbounds %"class.base::OnceCallback.79", %"class.base::OnceCallback.79"* %2, i64 0, i32 0, i32 0, i32 0
  %14 = bitcast %"class.base::OnceCallback.79"* %2 to i64*
  %15 = load i64, i64* %14, align 8, !noalias !37
  %16 = bitcast i8* %12 to i64*
  store i64 %15, i64* %16, align 8, !noalias !37
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %13, align 8, !noalias !37
  %17 = bitcast %"class.base::OnceCallback.44"* %4 to i8**
  store i8* %8, i8** %17, align 8, !alias.scope !37
  %18 = bitcast %"class.headless::internal::MessageDispatcher"* %6 to void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.44"*)***
  %19 = load void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.44"*)**, void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.44"*)*** %18, align 8
  %20 = load void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.44"*)*, void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.44"*)** %19, align 8
  call void %20(%"class.headless::internal::MessageDispatcher"* %6, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.4, i64 0, i64 0), %"class.base::Value"* %7, %"class.base::OnceCallback.44"* nonnull %4) #10
  %21 = getelementptr inbounds %"class.base::OnceCallback.44", %"class.base::OnceCallback.44"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %21) #10
  %22 = icmp eq %"class.headless::log::StartViolationsReportParams"* %1, null
  br i1 %22, label %49, label %23

23:                                               ; preds = %3
  %24 = getelementptr inbounds %"class.headless::log::StartViolationsReportParams", %"class.headless::log::StartViolationsReportParams"* %1, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.std::__1::unique_ptr.65"*, %"class.std::__1::unique_ptr.65"** %24, align 8
  %26 = icmp eq %"class.std::__1::unique_ptr.65"* %25, null
  br i1 %26, label %47, label %27

27:                                               ; preds = %23
  %28 = bitcast %"class.std::__1::unique_ptr.65"* %25 to i8*
  %29 = getelementptr inbounds %"class.headless::log::StartViolationsReportParams", %"class.headless::log::StartViolationsReportParams"* %1, i64 0, i32 0, i32 0, i32 1
  %30 = load %"class.std::__1::unique_ptr.65"*, %"class.std::__1::unique_ptr.65"** %29, align 8
  %31 = icmp eq %"class.std::__1::unique_ptr.65"* %30, %25
  br i1 %31, label %45, label %32

32:                                               ; preds = %27, %40
  %33 = phi %"class.std::__1::unique_ptr.65"* [ %34, %40 ], [ %30, %27 ]
  %34 = getelementptr inbounds %"class.std::__1::unique_ptr.65", %"class.std::__1::unique_ptr.65"* %33, i64 -1
  %35 = getelementptr inbounds %"class.std::__1::unique_ptr.65", %"class.std::__1::unique_ptr.65"* %34, i64 0, i32 0, i32 0, i32 0
  %36 = load %"class.headless::log::ViolationSetting"*, %"class.headless::log::ViolationSetting"** %35, align 8
  store %"class.headless::log::ViolationSetting"* null, %"class.headless::log::ViolationSetting"** %35, align 8
  %37 = icmp eq %"class.headless::log::ViolationSetting"* %36, null
  br i1 %37, label %40, label %38

38:                                               ; preds = %32
  %39 = bitcast %"class.headless::log::ViolationSetting"* %36 to i8*
  call void @_ZdlPv(i8* %39) #9
  br label %40

40:                                               ; preds = %38, %32
  %41 = icmp eq %"class.std::__1::unique_ptr.65"* %34, %25
  br i1 %41, label %42, label %32

42:                                               ; preds = %40
  %43 = bitcast %"class.headless::log::StartViolationsReportParams"* %1 to i8**
  %44 = load i8*, i8** %43, align 8
  br label %45

45:                                               ; preds = %42, %27
  %46 = phi i8* [ %44, %42 ], [ %28, %27 ]
  store %"class.std::__1::unique_ptr.65"* %25, %"class.std::__1::unique_ptr.65"** %29, align 8
  call void @_ZdlPv(i8* %46) #9
  br label %47

47:                                               ; preds = %45, %23
  %48 = bitcast %"class.headless::log::StartViolationsReportParams"* %1 to i8*
  call void @_ZdlPv(i8* %48) #9
  br label %49

49:                                               ; preds = %3, %47
  ret void
}

declare %"class.base::Value"* @_ZNK8headless3log27StartViolationsReportParams9SerializeEv(%"class.headless::log::StartViolationsReportParams"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless3log6Domain35HandleStartViolationsReportResponseEN4base12OnceCallbackIFvNSt3__110unique_ptrINS0_27StartViolationsReportResultENS4_14default_deleteIS6_EEEEEEERKNS2_5ValueE(%"class.base::OnceCallback.79"* nocapture, %"class.base::Value"* dereferenceable(32)) #1 align 2 {
  %3 = alloca %"class.std::__1::unique_ptr.120", align 8
  %4 = alloca %"class.base::OnceCallback.79", align 8
  %5 = alloca %"class.std::__1::unique_ptr.120", align 8
  %6 = alloca %"class.base::OnceCallback.79", align 8
  %7 = alloca %"class.headless::ErrorReporter", align 8
  %8 = getelementptr inbounds %"class.base::OnceCallback.79", %"class.base::OnceCallback.79"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %8, align 8
  %10 = icmp eq %"class.base::internal::BindStateBase"* %9, null
  %11 = ptrtoint %"class.base::internal::BindStateBase"* %9 to i64
  br i1 %10, label %51, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = trunc i64 %14 to i8
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %17, label %31

17:                                               ; preds = %12
  %18 = bitcast %"class.std::__1::unique_ptr.120"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = getelementptr inbounds %"class.std::__1::unique_ptr.120", %"class.std::__1::unique_ptr.120"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.headless::log::StartViolationsReportResult"* null, %"class.headless::log::StartViolationsReportResult"** %19, align 8
  %20 = bitcast %"class.base::OnceCallback.79"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #10
  %21 = bitcast %"class.base::OnceCallback.79"* %4 to i64*
  store i64 %11, i64* %21, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %8, align 8
  %22 = getelementptr inbounds %"class.base::OnceCallback.79", %"class.base::OnceCallback.79"* %4, i64 0, i32 0
  %23 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %9, i64 0, i32 1
  %24 = bitcast void ()** %23 to void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.120"*)**
  %25 = load void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.120"*)*, void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.120"*)** %24, align 8
  call void %25(%"class.base::internal::BindStateBase"* nonnull %9, %"class.std::__1::unique_ptr.120"* nonnull dereferenceable(8) %3) #10
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %22) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #10
  %26 = load %"class.headless::log::StartViolationsReportResult"*, %"class.headless::log::StartViolationsReportResult"** %19, align 8
  store %"class.headless::log::StartViolationsReportResult"* null, %"class.headless::log::StartViolationsReportResult"** %19, align 8
  %27 = icmp eq %"class.headless::log::StartViolationsReportResult"* %26, null
  br i1 %27, label %30, label %28

28:                                               ; preds = %17
  %29 = getelementptr inbounds %"class.headless::log::StartViolationsReportResult", %"class.headless::log::StartViolationsReportResult"* %26, i64 0, i32 0
  call void @_ZdlPv(i8* %29) #9
  br label %30

30:                                               ; preds = %17, %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  br label %51

31:                                               ; preds = %12
  %32 = bitcast %"class.headless::ErrorReporter"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %32) #10
  %33 = bitcast %"class.headless::ErrorReporter"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %33, i8 -86, i64 48, i1 false)
  call void @_ZN8headless13ErrorReporterC1Ev(%"class.headless::ErrorReporter"* nonnull %7) #10
  %34 = call %"class.headless::log::StartViolationsReportResult"* @_ZN8headless3log27StartViolationsReportResult5ParseERKN4base5ValueEPNS_13ErrorReporterE(%"class.base::Value"* dereferenceable(32) %1, %"class.headless::ErrorReporter"* nonnull %7) #10
  %35 = bitcast %"class.std::__1::unique_ptr.120"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35)
  %36 = getelementptr inbounds %"class.std::__1::unique_ptr.120", %"class.std::__1::unique_ptr.120"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.headless::log::StartViolationsReportResult"* %34, %"class.headless::log::StartViolationsReportResult"** %36, align 8
  %37 = bitcast %"class.base::OnceCallback.79"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #10
  %38 = bitcast %"class.base::OnceCallback.79"* %0 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"class.base::OnceCallback.79"* %6 to i64*
  store i64 %39, i64* %40, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %8, align 8
  %41 = getelementptr inbounds %"class.base::OnceCallback.79", %"class.base::OnceCallback.79"* %6, i64 0, i32 0
  %42 = inttoptr i64 %39 to %"class.base::internal::BindStateBase"*
  %43 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %42, i64 0, i32 1
  %44 = bitcast void ()** %43 to void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.120"*)**
  %45 = load void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.120"*)*, void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.120"*)** %44, align 8
  call void %45(%"class.base::internal::BindStateBase"* %42, %"class.std::__1::unique_ptr.120"* nonnull dereferenceable(8) %5) #10
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %41) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #10
  %46 = load %"class.headless::log::StartViolationsReportResult"*, %"class.headless::log::StartViolationsReportResult"** %36, align 8
  store %"class.headless::log::StartViolationsReportResult"* null, %"class.headless::log::StartViolationsReportResult"** %36, align 8
  %47 = icmp eq %"class.headless::log::StartViolationsReportResult"* %46, null
  br i1 %47, label %50, label %48

48:                                               ; preds = %31
  %49 = getelementptr inbounds %"class.headless::log::StartViolationsReportResult", %"class.headless::log::StartViolationsReportResult"* %46, i64 0, i32 0
  call void @_ZdlPv(i8* %49) #9
  br label %50

50:                                               ; preds = %48, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35)
  call void @_ZN8headless13ErrorReporterD1Ev(%"class.headless::ErrorReporter"* nonnull %7) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %32) #10
  br label %51

51:                                               ; preds = %2, %50, %30
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless3log6Domain21StartViolationsReportENSt3__16vectorINS2_10unique_ptrINS0_16ViolationSettingENS2_14default_deleteIS5_EEEENS2_9allocatorIS8_EEEEN4base12OnceCallbackIFvvEEE(%"class.headless::log::Domain"* nocapture readonly, %"class.std::__1::vector.63"* nocapture, %"class.base::OnceCallback.45"* nocapture) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.base::OnceCallback.45", align 8
  %5 = tail call i8* @_Znwm(i64 24) #9
  %6 = bitcast i8* %5 to %"class.headless::log::StartViolationsReportParams"*
  %7 = bitcast %"class.std::__1::vector.63"* %1 to <2 x i64>*
  %8 = load <2 x i64>, <2 x i64>* %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::vector.63", %"class.std::__1::vector.63"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %10 = bitcast %"class.std::__1::unique_ptr.65"** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.std::__1::vector.63"* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 24, i1 false) #10
  %13 = bitcast i8* %5 to %"class.std::__1::unique_ptr.65"**
  %14 = getelementptr inbounds %"class.headless::log::Domain", %"class.headless::log::Domain"* %0, i64 0, i32 0
  %15 = load %"class.headless::internal::MessageDispatcher"*, %"class.headless::internal::MessageDispatcher"** %14, align 8
  %16 = bitcast %"class.headless::internal::MessageDispatcher"* %15 to void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.45"*)***
  %17 = getelementptr inbounds i8, i8* %5, i64 8
  %18 = bitcast i8* %17 to %"class.std::__1::unique_ptr.65"**
  %19 = bitcast i8* %5 to <2 x i64>*
  store <2 x i64> %8, <2 x i64>* %19, align 8
  %20 = getelementptr inbounds i8, i8* %5, i64 16
  %21 = bitcast i8* %20 to i64*
  store i64 %11, i64* %21, align 8
  %22 = tail call %"class.base::Value"* @_ZNK8headless3log27StartViolationsReportParams9SerializeEv(%"class.headless::log::StartViolationsReportParams"* nonnull %6) #10
  %23 = getelementptr inbounds %"class.base::OnceCallback.45", %"class.base::OnceCallback.45"* %2, i64 0, i32 0, i32 0, i32 0
  %24 = bitcast %"class.base::OnceCallback.45"* %2 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = bitcast %"class.base::OnceCallback.45"* %4 to i64*
  store i64 %25, i64* %26, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %23, align 8
  %27 = load void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.45"*)**, void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.45"*)*** %16, align 8
  %28 = getelementptr inbounds void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.45"*)*, void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.45"*)** %27, i64 1
  %29 = load void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.45"*)*, void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.45"*)** %28, align 8
  call void %29(%"class.headless::internal::MessageDispatcher"* %15, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.4, i64 0, i64 0), %"class.base::Value"* %22, %"class.base::OnceCallback.45"* nonnull %4) #10
  %30 = getelementptr inbounds %"class.base::OnceCallback.45", %"class.base::OnceCallback.45"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %30) #10
  %31 = load %"class.std::__1::unique_ptr.65"*, %"class.std::__1::unique_ptr.65"** %13, align 8
  %32 = icmp eq %"class.std::__1::unique_ptr.65"* %31, null
  br i1 %32, label %52, label %33

33:                                               ; preds = %3
  %34 = bitcast %"class.std::__1::unique_ptr.65"* %31 to i8*
  %35 = load %"class.std::__1::unique_ptr.65"*, %"class.std::__1::unique_ptr.65"** %18, align 8
  %36 = icmp eq %"class.std::__1::unique_ptr.65"* %35, %31
  br i1 %36, label %50, label %37

37:                                               ; preds = %33, %45
  %38 = phi %"class.std::__1::unique_ptr.65"* [ %39, %45 ], [ %35, %33 ]
  %39 = getelementptr inbounds %"class.std::__1::unique_ptr.65", %"class.std::__1::unique_ptr.65"* %38, i64 -1
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.65", %"class.std::__1::unique_ptr.65"* %39, i64 0, i32 0, i32 0, i32 0
  %41 = load %"class.headless::log::ViolationSetting"*, %"class.headless::log::ViolationSetting"** %40, align 8
  store %"class.headless::log::ViolationSetting"* null, %"class.headless::log::ViolationSetting"** %40, align 8
  %42 = icmp eq %"class.headless::log::ViolationSetting"* %41, null
  br i1 %42, label %45, label %43

43:                                               ; preds = %37
  %44 = bitcast %"class.headless::log::ViolationSetting"* %41 to i8*
  call void @_ZdlPv(i8* %44) #9
  br label %45

45:                                               ; preds = %43, %37
  %46 = icmp eq %"class.std::__1::unique_ptr.65"* %39, %31
  br i1 %46, label %47, label %37

47:                                               ; preds = %45
  %48 = bitcast i8* %5 to i8**
  %49 = load i8*, i8** %48, align 8
  br label %50

50:                                               ; preds = %47, %33
  %51 = phi i8* [ %49, %47 ], [ %34, %33 ]
  store %"class.std::__1::unique_ptr.65"* %31, %"class.std::__1::unique_ptr.65"** %18, align 8
  call void @_ZdlPv(i8* %51) #9
  br label %52

52:                                               ; preds = %3, %50
  call void @_ZdlPv(i8* nonnull %5) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless3log6Domain21StartViolationsReportENSt3__110unique_ptrINS0_27StartViolationsReportParamsENS2_14default_deleteIS4_EEEEN4base12OnceCallbackIFvvEEE(%"class.headless::log::Domain"* nocapture readonly, %"class.headless::log::StartViolationsReportParams"*, %"class.base::OnceCallback.45"* nocapture) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.base::OnceCallback.45", align 8
  %5 = getelementptr inbounds %"class.headless::log::Domain", %"class.headless::log::Domain"* %0, i64 0, i32 0
  %6 = load %"class.headless::internal::MessageDispatcher"*, %"class.headless::internal::MessageDispatcher"** %5, align 8
  %7 = tail call %"class.base::Value"* @_ZNK8headless3log27StartViolationsReportParams9SerializeEv(%"class.headless::log::StartViolationsReportParams"* %1) #10
  %8 = getelementptr inbounds %"class.base::OnceCallback.45", %"class.base::OnceCallback.45"* %2, i64 0, i32 0, i32 0, i32 0
  %9 = bitcast %"class.base::OnceCallback.45"* %2 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.base::OnceCallback.45"* %4 to i64*
  store i64 %10, i64* %11, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %8, align 8
  %12 = bitcast %"class.headless::internal::MessageDispatcher"* %6 to void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.45"*)***
  %13 = load void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.45"*)**, void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.45"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.45"*)*, void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.45"*)** %13, i64 1
  %15 = load void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.45"*)*, void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.45"*)** %14, align 8
  call void %15(%"class.headless::internal::MessageDispatcher"* %6, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.4, i64 0, i64 0), %"class.base::Value"* %7, %"class.base::OnceCallback.45"* nonnull %4) #10
  %16 = getelementptr inbounds %"class.base::OnceCallback.45", %"class.base::OnceCallback.45"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %16) #10
  %17 = icmp eq %"class.headless::log::StartViolationsReportParams"* %1, null
  br i1 %17, label %44, label %18

18:                                               ; preds = %3
  %19 = getelementptr inbounds %"class.headless::log::StartViolationsReportParams", %"class.headless::log::StartViolationsReportParams"* %1, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.std::__1::unique_ptr.65"*, %"class.std::__1::unique_ptr.65"** %19, align 8
  %21 = icmp eq %"class.std::__1::unique_ptr.65"* %20, null
  br i1 %21, label %42, label %22

22:                                               ; preds = %18
  %23 = bitcast %"class.std::__1::unique_ptr.65"* %20 to i8*
  %24 = getelementptr inbounds %"class.headless::log::StartViolationsReportParams", %"class.headless::log::StartViolationsReportParams"* %1, i64 0, i32 0, i32 0, i32 1
  %25 = load %"class.std::__1::unique_ptr.65"*, %"class.std::__1::unique_ptr.65"** %24, align 8
  %26 = icmp eq %"class.std::__1::unique_ptr.65"* %25, %20
  br i1 %26, label %40, label %27

27:                                               ; preds = %22, %35
  %28 = phi %"class.std::__1::unique_ptr.65"* [ %29, %35 ], [ %25, %22 ]
  %29 = getelementptr inbounds %"class.std::__1::unique_ptr.65", %"class.std::__1::unique_ptr.65"* %28, i64 -1
  %30 = getelementptr inbounds %"class.std::__1::unique_ptr.65", %"class.std::__1::unique_ptr.65"* %29, i64 0, i32 0, i32 0, i32 0
  %31 = load %"class.headless::log::ViolationSetting"*, %"class.headless::log::ViolationSetting"** %30, align 8
  store %"class.headless::log::ViolationSetting"* null, %"class.headless::log::ViolationSetting"** %30, align 8
  %32 = icmp eq %"class.headless::log::ViolationSetting"* %31, null
  br i1 %32, label %35, label %33

33:                                               ; preds = %27
  %34 = bitcast %"class.headless::log::ViolationSetting"* %31 to i8*
  call void @_ZdlPv(i8* %34) #9
  br label %35

35:                                               ; preds = %33, %27
  %36 = icmp eq %"class.std::__1::unique_ptr.65"* %29, %20
  br i1 %36, label %37, label %27

37:                                               ; preds = %35
  %38 = bitcast %"class.headless::log::StartViolationsReportParams"* %1 to i8**
  %39 = load i8*, i8** %38, align 8
  br label %40

40:                                               ; preds = %37, %22
  %41 = phi i8* [ %39, %37 ], [ %23, %22 ]
  store %"class.std::__1::unique_ptr.65"* %20, %"class.std::__1::unique_ptr.65"** %24, align 8
  call void @_ZdlPv(i8* %41) #9
  br label %42

42:                                               ; preds = %40, %18
  %43 = bitcast %"class.headless::log::StartViolationsReportParams"* %1 to i8*
  call void @_ZdlPv(i8* %43) #9
  br label %44

44:                                               ; preds = %3, %42
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless3log6Domain20StopViolationsReportENSt3__110unique_ptrINS0_26StopViolationsReportParamsENS2_14default_deleteIS4_EEEEN4base12OnceCallbackIFvNS3_INS0_26StopViolationsReportResultENS5_ISA_EEEEEEE(%"class.headless::log::Domain"* nocapture readonly, %"class.headless::log::StopViolationsReportParams"*, %"class.base::OnceCallback.87"* nocapture) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.base::OnceCallback.44", align 8
  %5 = getelementptr inbounds %"class.headless::log::Domain", %"class.headless::log::Domain"* %0, i64 0, i32 0
  %6 = load %"class.headless::internal::MessageDispatcher"*, %"class.headless::internal::MessageDispatcher"** %5, align 8
  %7 = tail call %"class.base::Value"* @_ZNK8headless3log26StopViolationsReportParams9SerializeEv(%"class.headless::log::StopViolationsReportParams"* %1) #10
  %8 = tail call i8* @_Znwm(i64 48) #9, !noalias !42
  %9 = bitcast i8* %8 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %9, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.base::Value"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless3log26StopViolationsReportResultENS4_14default_deleteIS8_EEEEEEERKNS_5ValueEEJSD_EEEFvSG_EE7RunOnceEPNS0_13BindStateBaseESG_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless3log26StopViolationsReportResultENS3_14default_deleteIS7_EEEEEEERKNS_5ValueEEJSC_EE7DestroyEPKNS0_13BindStateBaseE) #10, !noalias !42
  %10 = getelementptr inbounds i8, i8* %8, i64 32
  %11 = bitcast i8* %10 to i64*
  store i64 ptrtoint (void (%"class.base::OnceCallback.87"*, %"class.base::Value"*)* @_ZN8headless3log6Domain34HandleStopViolationsReportResponseEN4base12OnceCallbackIFvNSt3__110unique_ptrINS0_26StopViolationsReportResultENS4_14default_deleteIS6_EEEEEEERKNS2_5ValueE to i64), i64* %11, align 8, !noalias !42
  %12 = getelementptr inbounds i8, i8* %8, i64 40
  %13 = getelementptr inbounds %"class.base::OnceCallback.87", %"class.base::OnceCallback.87"* %2, i64 0, i32 0, i32 0, i32 0
  %14 = bitcast %"class.base::OnceCallback.87"* %2 to i64*
  %15 = load i64, i64* %14, align 8, !noalias !42
  %16 = bitcast i8* %12 to i64*
  store i64 %15, i64* %16, align 8, !noalias !42
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %13, align 8, !noalias !42
  %17 = bitcast %"class.base::OnceCallback.44"* %4 to i8**
  store i8* %8, i8** %17, align 8, !alias.scope !42
  %18 = bitcast %"class.headless::internal::MessageDispatcher"* %6 to void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.44"*)***
  %19 = load void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.44"*)**, void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.44"*)*** %18, align 8
  %20 = load void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.44"*)*, void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.44"*)** %19, align 8
  call void %20(%"class.headless::internal::MessageDispatcher"* %6, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.5, i64 0, i64 0), %"class.base::Value"* %7, %"class.base::OnceCallback.44"* nonnull %4) #10
  %21 = getelementptr inbounds %"class.base::OnceCallback.44", %"class.base::OnceCallback.44"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %21) #10
  %22 = icmp eq %"class.headless::log::StopViolationsReportParams"* %1, null
  br i1 %22, label %25, label %23

23:                                               ; preds = %3
  %24 = getelementptr inbounds %"class.headless::log::StopViolationsReportParams", %"class.headless::log::StopViolationsReportParams"* %1, i64 0, i32 0
  call void @_ZdlPv(i8* %24) #9
  br label %25

25:                                               ; preds = %3, %23
  ret void
}

declare %"class.base::Value"* @_ZNK8headless3log26StopViolationsReportParams9SerializeEv(%"class.headless::log::StopViolationsReportParams"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless3log6Domain34HandleStopViolationsReportResponseEN4base12OnceCallbackIFvNSt3__110unique_ptrINS0_26StopViolationsReportResultENS4_14default_deleteIS6_EEEEEEERKNS2_5ValueE(%"class.base::OnceCallback.87"* nocapture, %"class.base::Value"* dereferenceable(32)) #1 align 2 {
  %3 = alloca %"class.std::__1::unique_ptr.126", align 8
  %4 = alloca %"class.base::OnceCallback.87", align 8
  %5 = alloca %"class.std::__1::unique_ptr.126", align 8
  %6 = alloca %"class.base::OnceCallback.87", align 8
  %7 = alloca %"class.headless::ErrorReporter", align 8
  %8 = getelementptr inbounds %"class.base::OnceCallback.87", %"class.base::OnceCallback.87"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %8, align 8
  %10 = icmp eq %"class.base::internal::BindStateBase"* %9, null
  %11 = ptrtoint %"class.base::internal::BindStateBase"* %9 to i64
  br i1 %10, label %51, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = trunc i64 %14 to i8
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %17, label %31

17:                                               ; preds = %12
  %18 = bitcast %"class.std::__1::unique_ptr.126"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = getelementptr inbounds %"class.std::__1::unique_ptr.126", %"class.std::__1::unique_ptr.126"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.headless::log::StopViolationsReportResult"* null, %"class.headless::log::StopViolationsReportResult"** %19, align 8
  %20 = bitcast %"class.base::OnceCallback.87"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #10
  %21 = bitcast %"class.base::OnceCallback.87"* %4 to i64*
  store i64 %11, i64* %21, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %8, align 8
  %22 = getelementptr inbounds %"class.base::OnceCallback.87", %"class.base::OnceCallback.87"* %4, i64 0, i32 0
  %23 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %9, i64 0, i32 1
  %24 = bitcast void ()** %23 to void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.126"*)**
  %25 = load void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.126"*)*, void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.126"*)** %24, align 8
  call void %25(%"class.base::internal::BindStateBase"* nonnull %9, %"class.std::__1::unique_ptr.126"* nonnull dereferenceable(8) %3) #10
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %22) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #10
  %26 = load %"class.headless::log::StopViolationsReportResult"*, %"class.headless::log::StopViolationsReportResult"** %19, align 8
  store %"class.headless::log::StopViolationsReportResult"* null, %"class.headless::log::StopViolationsReportResult"** %19, align 8
  %27 = icmp eq %"class.headless::log::StopViolationsReportResult"* %26, null
  br i1 %27, label %30, label %28

28:                                               ; preds = %17
  %29 = getelementptr inbounds %"class.headless::log::StopViolationsReportResult", %"class.headless::log::StopViolationsReportResult"* %26, i64 0, i32 0
  call void @_ZdlPv(i8* %29) #9
  br label %30

30:                                               ; preds = %17, %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  br label %51

31:                                               ; preds = %12
  %32 = bitcast %"class.headless::ErrorReporter"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %32) #10
  %33 = bitcast %"class.headless::ErrorReporter"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %33, i8 -86, i64 48, i1 false)
  call void @_ZN8headless13ErrorReporterC1Ev(%"class.headless::ErrorReporter"* nonnull %7) #10
  %34 = call %"class.headless::log::StopViolationsReportResult"* @_ZN8headless3log26StopViolationsReportResult5ParseERKN4base5ValueEPNS_13ErrorReporterE(%"class.base::Value"* dereferenceable(32) %1, %"class.headless::ErrorReporter"* nonnull %7) #10
  %35 = bitcast %"class.std::__1::unique_ptr.126"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35)
  %36 = getelementptr inbounds %"class.std::__1::unique_ptr.126", %"class.std::__1::unique_ptr.126"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.headless::log::StopViolationsReportResult"* %34, %"class.headless::log::StopViolationsReportResult"** %36, align 8
  %37 = bitcast %"class.base::OnceCallback.87"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #10
  %38 = bitcast %"class.base::OnceCallback.87"* %0 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"class.base::OnceCallback.87"* %6 to i64*
  store i64 %39, i64* %40, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %8, align 8
  %41 = getelementptr inbounds %"class.base::OnceCallback.87", %"class.base::OnceCallback.87"* %6, i64 0, i32 0
  %42 = inttoptr i64 %39 to %"class.base::internal::BindStateBase"*
  %43 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %42, i64 0, i32 1
  %44 = bitcast void ()** %43 to void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.126"*)**
  %45 = load void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.126"*)*, void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.126"*)** %44, align 8
  call void %45(%"class.base::internal::BindStateBase"* %42, %"class.std::__1::unique_ptr.126"* nonnull dereferenceable(8) %5) #10
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %41) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #10
  %46 = load %"class.headless::log::StopViolationsReportResult"*, %"class.headless::log::StopViolationsReportResult"** %36, align 8
  store %"class.headless::log::StopViolationsReportResult"* null, %"class.headless::log::StopViolationsReportResult"** %36, align 8
  %47 = icmp eq %"class.headless::log::StopViolationsReportResult"* %46, null
  br i1 %47, label %50, label %48

48:                                               ; preds = %31
  %49 = getelementptr inbounds %"class.headless::log::StopViolationsReportResult", %"class.headless::log::StopViolationsReportResult"* %46, i64 0, i32 0
  call void @_ZdlPv(i8* %49) #9
  br label %50

50:                                               ; preds = %48, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35)
  call void @_ZN8headless13ErrorReporterD1Ev(%"class.headless::ErrorReporter"* nonnull %7) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %32) #10
  br label %51

51:                                               ; preds = %2, %50, %30
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless3log6Domain20StopViolationsReportEN4base12OnceCallbackIFvvEEE(%"class.headless::log::Domain"* nocapture readonly, %"class.base::OnceCallback.45"* nocapture) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.base::OnceCallback.45", align 8
  %4 = tail call i8* @_Znwm(i64 1) #9
  %5 = bitcast i8* %4 to %"class.headless::log::StopViolationsReportParams"*
  %6 = getelementptr inbounds %"class.headless::log::Domain", %"class.headless::log::Domain"* %0, i64 0, i32 0
  %7 = load %"class.headless::internal::MessageDispatcher"*, %"class.headless::internal::MessageDispatcher"** %6, align 8
  %8 = tail call %"class.base::Value"* @_ZNK8headless3log26StopViolationsReportParams9SerializeEv(%"class.headless::log::StopViolationsReportParams"* nonnull %5) #10
  %9 = getelementptr inbounds %"class.base::OnceCallback.45", %"class.base::OnceCallback.45"* %1, i64 0, i32 0, i32 0, i32 0
  %10 = bitcast %"class.base::OnceCallback.45"* %1 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.base::OnceCallback.45"* %3 to i64*
  store i64 %11, i64* %12, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %9, align 8
  %13 = bitcast %"class.headless::internal::MessageDispatcher"* %7 to void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.45"*)***
  %14 = load void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.45"*)**, void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.45"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.45"*)*, void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.45"*)** %14, i64 1
  %16 = load void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.45"*)*, void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.45"*)** %15, align 8
  call void %16(%"class.headless::internal::MessageDispatcher"* %7, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.5, i64 0, i64 0), %"class.base::Value"* %8, %"class.base::OnceCallback.45"* nonnull %3) #10
  %17 = getelementptr inbounds %"class.base::OnceCallback.45", %"class.base::OnceCallback.45"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %17) #10
  call void @_ZdlPv(i8* nonnull %4) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless3log6Domain20StopViolationsReportENSt3__110unique_ptrINS0_26StopViolationsReportParamsENS2_14default_deleteIS4_EEEEN4base12OnceCallbackIFvvEEE(%"class.headless::log::Domain"* nocapture readonly, %"class.headless::log::StopViolationsReportParams"*, %"class.base::OnceCallback.45"* nocapture) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.base::OnceCallback.45", align 8
  %5 = getelementptr inbounds %"class.headless::log::Domain", %"class.headless::log::Domain"* %0, i64 0, i32 0
  %6 = load %"class.headless::internal::MessageDispatcher"*, %"class.headless::internal::MessageDispatcher"** %5, align 8
  %7 = tail call %"class.base::Value"* @_ZNK8headless3log26StopViolationsReportParams9SerializeEv(%"class.headless::log::StopViolationsReportParams"* %1) #10
  %8 = getelementptr inbounds %"class.base::OnceCallback.45", %"class.base::OnceCallback.45"* %2, i64 0, i32 0, i32 0, i32 0
  %9 = bitcast %"class.base::OnceCallback.45"* %2 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.base::OnceCallback.45"* %4 to i64*
  store i64 %10, i64* %11, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %8, align 8
  %12 = bitcast %"class.headless::internal::MessageDispatcher"* %6 to void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.45"*)***
  %13 = load void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.45"*)**, void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.45"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.45"*)*, void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.45"*)** %13, i64 1
  %15 = load void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.45"*)*, void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.45"*)** %14, align 8
  call void %15(%"class.headless::internal::MessageDispatcher"* %6, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.5, i64 0, i64 0), %"class.base::Value"* %7, %"class.base::OnceCallback.45"* nonnull %4) #10
  %16 = getelementptr inbounds %"class.base::OnceCallback.45", %"class.base::OnceCallback.45"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %16) #10
  %17 = icmp eq %"class.headless::log::StopViolationsReportParams"* %1, null
  br i1 %17, label %20, label %18

18:                                               ; preds = %3
  %19 = getelementptr inbounds %"class.headless::log::StopViolationsReportParams", %"class.headless::log::StopViolationsReportParams"* %1, i64 0, i32 0
  call void @_ZdlPv(i8* %19) #9
  br label %20

20:                                               ; preds = %3, %18
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN8headless13ErrorReporterC1Ev(%"class.headless::ErrorReporter"*) unnamed_addr #4

declare %"class.headless::log::ClearResult"* @_ZN8headless3log11ClearResult5ParseERKN4base5ValueEPNS_13ErrorReporterE(%"class.base::Value"* dereferenceable(32), %"class.headless::ErrorReporter"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN8headless13ErrorReporterD1Ev(%"class.headless::ErrorReporter"*) unnamed_addr #3

declare %"class.headless::log::DisableResult"* @_ZN8headless3log13DisableResult5ParseERKN4base5ValueEPNS_13ErrorReporterE(%"class.base::Value"* dereferenceable(32), %"class.headless::ErrorReporter"*) local_unnamed_addr #4

declare %"class.headless::log::EnableResult"* @_ZN8headless3log12EnableResult5ParseERKN4base5ValueEPNS_13ErrorReporterE(%"class.base::Value"* dereferenceable(32), %"class.headless::ErrorReporter"*) local_unnamed_addr #4

declare %"class.headless::log::StartViolationsReportResult"* @_ZN8headless3log27StartViolationsReportResult5ParseERKN4base5ValueEPNS_13ErrorReporterE(%"class.base::Value"* dereferenceable(32), %"class.headless::ErrorReporter"*) local_unnamed_addr #4

declare %"class.headless::log::StopViolationsReportResult"* @_ZN8headless3log26StopViolationsReportResult5ParseERKN4base5ValueEPNS_13ErrorReporterE(%"class.base::Value"* dereferenceable(32), %"class.headless::ErrorReporter"*) local_unnamed_addr #4

declare %"class.headless::log::EntryAddedParams"* @_ZN8headless3log16EntryAddedParams5ParseERKN4base5ValueEPNS_13ErrorReporterE(%"class.base::Value"* dereferenceable(32), %"class.headless::ErrorReporter"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless3log6DomainC2EPNS_8internal17MessageDispatcherE(%"class.headless::log::Domain"*, %"class.headless::internal::MessageDispatcher"*) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.headless::log::Domain", %"class.headless::log::Domain"* %0, i64 0, i32 0
  store %"class.headless::internal::MessageDispatcher"* %1, %"class.headless::internal::MessageDispatcher"** %3, align 8
  %4 = getelementptr inbounds %"class.headless::log::Domain", %"class.headless::log::Domain"* %0, i64 0, i32 1
  %5 = bitcast %"class.base::ObserverList"* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 24, i1 false) #10
  %6 = getelementptr inbounds %"class.headless::log::Domain", %"class.headless::log::Domain"* %0, i64 0, i32 1, i32 1, i32 0, i32 0
  tail call void @_ZN4base8internal12LinkNodeBaseC2EPS1_S2_(%"class.base::internal::LinkNodeBase"* %6, %"class.base::internal::LinkNodeBase"* %6, %"class.base::internal::LinkNodeBase"* %6) #10
  %7 = getelementptr inbounds %"class.headless::log::Domain", %"class.headless::log::Domain"* %0, i64 0, i32 1, i32 2
  store i64 0, i64* %7, align 8
  %8 = getelementptr inbounds %"class.headless::log::Domain", %"class.headless::log::Domain"* %0, i64 0, i32 1, i32 3
  store i32 0, i32* %8, align 8
  %9 = getelementptr inbounds %"class.headless::log::Domain", %"class.headless::log::Domain"* %0, i64 0, i32 2
  store i8 0, i8* %9, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless3log6DomainD2Ev(%"class.headless::log::Domain"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.headless::log::Domain", %"class.headless::log::Domain"* %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 1
  %3 = bitcast %"class.base::internal::LinkNodeBase"** %2 to %"class.base::LinkNode"**
  %4 = getelementptr inbounds %"class.headless::log::Domain", %"class.headless::log::Domain"* %0, i64 0, i32 1, i32 1, i32 0
  %5 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %3, align 8
  %6 = icmp eq %"class.base::LinkNode"* %5, %4
  br i1 %6, label %19, label %7

7:                                                ; preds = %1, %16
  %8 = phi %"class.base::LinkNode"* [ %17, %16 ], [ %5, %1 ]
  %9 = getelementptr inbounds %"class.base::LinkNode", %"class.base::LinkNode"* %8, i64 1
  %10 = bitcast %"class.base::LinkNode"* %9 to %"class.base::ObserverList"**
  %11 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %10, align 8
  %12 = icmp eq %"class.base::ObserverList"* %11, null
  br i1 %12, label %16, label %13

13:                                               ; preds = %7
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %10, align 8
  %14 = getelementptr inbounds %"class.base::LinkNode", %"class.base::LinkNode"* %8, i64 0, i32 0
  tail call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* %14) #10
  %15 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %3, align 8
  br label %16

16:                                               ; preds = %13, %7
  %17 = phi %"class.base::LinkNode"* [ %8, %7 ], [ %15, %13 ]
  %18 = icmp eq %"class.base::LinkNode"* %17, %4
  br i1 %18, label %19, label %7

19:                                               ; preds = %16, %1
  %20 = getelementptr inbounds %"class.headless::log::Domain", %"class.headless::log::Domain"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %21 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %20, align 8
  %22 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %21, null
  br i1 %22, label %28, label %23

23:                                               ; preds = %19
  %24 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %21 to i64
  %25 = getelementptr inbounds %"class.headless::log::Domain", %"class.headless::log::Domain"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %26 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %25 to i64*
  store i64 %24, i64* %26, align 8
  %27 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %21 to i8*
  tail call void @_ZdlPv(i8* %27) #9
  br label %28

28:                                               ; preds = %19, %23
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless3log18ExperimentalDomainC2EPNS_8internal17MessageDispatcherE(%"class.headless::log::ExperimentalDomain"*, %"class.headless::internal::MessageDispatcher"*) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.headless::log::ExperimentalDomain", %"class.headless::log::ExperimentalDomain"* %0, i64 0, i32 0, i32 0
  store %"class.headless::internal::MessageDispatcher"* %1, %"class.headless::internal::MessageDispatcher"** %3, align 8
  %4 = getelementptr inbounds %"class.headless::log::ExperimentalDomain", %"class.headless::log::ExperimentalDomain"* %0, i64 0, i32 0, i32 1
  %5 = bitcast %"class.base::ObserverList"* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 24, i1 false) #10
  %6 = getelementptr inbounds %"class.headless::log::ExperimentalDomain", %"class.headless::log::ExperimentalDomain"* %0, i64 0, i32 0, i32 1, i32 1, i32 0, i32 0
  tail call void @_ZN4base8internal12LinkNodeBaseC2EPS1_S2_(%"class.base::internal::LinkNodeBase"* %6, %"class.base::internal::LinkNodeBase"* %6, %"class.base::internal::LinkNodeBase"* %6) #10
  %7 = getelementptr inbounds %"class.headless::log::ExperimentalDomain", %"class.headless::log::ExperimentalDomain"* %0, i64 0, i32 0, i32 1, i32 2
  store i64 0, i64* %7, align 8
  %8 = getelementptr inbounds %"class.headless::log::ExperimentalDomain", %"class.headless::log::ExperimentalDomain"* %0, i64 0, i32 0, i32 1, i32 3
  store i32 0, i32* %8, align 8
  %9 = getelementptr inbounds %"class.headless::log::ExperimentalDomain", %"class.headless::log::ExperimentalDomain"* %0, i64 0, i32 0, i32 2
  store i8 0, i8* %9, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless3log18ExperimentalDomain11AddObserverEPNS0_20ExperimentalObserverE(%"class.headless::log::ExperimentalDomain"*, %"class.headless::log::ExperimentalObserver"*) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.base::RepeatingCallback", align 8
  %4 = bitcast %"class.base::RepeatingCallback"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4)
  %5 = getelementptr inbounds %"class.headless::log::ExperimentalDomain", %"class.headless::log::ExperimentalDomain"* %0, i64 0, i32 0, i32 2
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %24

8:                                                ; preds = %2
  store i8 1, i8* %5, align 8
  %9 = getelementptr inbounds %"class.headless::log::ExperimentalDomain", %"class.headless::log::ExperimentalDomain"* %0, i64 0, i32 0, i32 0
  %10 = load %"class.headless::internal::MessageDispatcher"*, %"class.headless::internal::MessageDispatcher"** %9, align 8
  %11 = ptrtoint %"class.headless::log::ExperimentalDomain"* %0 to i64
  %12 = tail call i8* @_Znwm(i64 56) #9, !noalias !47
  %13 = bitcast i8* %12 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %13, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.base::Value"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN8headless3log6DomainEFvRKNS_5ValueEEJNS0_17UnretainedWrapperIS5_EEEEEFvS8_EE3RunEPNS0_13BindStateBaseES8_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN8headless3log6DomainEFvRKNS_5ValueEEJNS0_17UnretainedWrapperIS4_EEEE7DestroyEPKNS0_13BindStateBaseE) #10, !noalias !47
  %14 = getelementptr inbounds i8, i8* %12, i64 32
  %15 = bitcast i8* %14 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.headless::log::Domain"*, %"class.base::Value"*)* @_ZN8headless3log6Domain23DispatchEntryAddedEventERKN4base5ValueE to i64), i64 0>, <2 x i64>* %15, align 8, !noalias !47
  %16 = getelementptr inbounds i8, i8* %12, i64 48
  %17 = bitcast i8* %16 to i64*
  store i64 %11, i64* %17, align 8, !noalias !47
  %18 = bitcast %"class.base::RepeatingCallback"* %3 to i8**
  store i8* %12, i8** %18, align 8, !alias.scope !47
  %19 = bitcast %"class.headless::internal::MessageDispatcher"* %10 to void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::RepeatingCallback"*)***
  %20 = load void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::RepeatingCallback"*)**, void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::RepeatingCallback"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::RepeatingCallback"*)*, void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::RepeatingCallback"*)** %20, i64 2
  %22 = load void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::RepeatingCallback"*)*, void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::RepeatingCallback"*)** %21, align 8
  call void %22(%"class.headless::internal::MessageDispatcher"* %10, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), %"class.base::RepeatingCallback"* nonnull %3) #10
  %23 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %3, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %23) #10
  br label %24

24:                                               ; preds = %2, %8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4)
  %25 = getelementptr inbounds %"class.headless::log::ExperimentalDomain", %"class.headless::log::ExperimentalDomain"* %0, i64 0, i32 0, i32 1
  %26 = icmp eq %"class.headless::log::ExperimentalObserver"* %1, null
  br i1 %26, label %27, label %30

27:                                               ; preds = %24
  %28 = getelementptr inbounds %"class.headless::log::ExperimentalDomain", %"class.headless::log::ExperimentalDomain"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %29 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %28, align 8
  br label %48

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %25, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %31, align 8
  %33 = getelementptr inbounds %"class.headless::log::ExperimentalDomain", %"class.headless::log::ExperimentalDomain"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %34 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %33, align 8
  %35 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %32, %34
  %36 = bitcast %"class.headless::log::ExperimentalObserver"* %1 to i8*
  br i1 %35, label %45, label %37

37:                                               ; preds = %30, %42
  %38 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %43, %42 ], [ %32, %30 ]
  %39 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %38, i64 0, i32 0
  %40 = load i8*, i8** %39, align 8
  %41 = icmp eq i8* %40, %36
  br i1 %41, label %45, label %42

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %38, i64 1
  %44 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %43, %34
  br i1 %44, label %48, label %37

45:                                               ; preds = %37, %30
  %46 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %32, %30 ], [ %38, %37 ]
  %47 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %46, %34
  br i1 %47, label %48, label %121

48:                                               ; preds = %42, %27, %45
  %49 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %29, %27 ], [ %34, %45 ], [ %34, %42 ]
  %50 = getelementptr inbounds %"class.headless::log::ExperimentalDomain", %"class.headless::log::ExperimentalDomain"* %0, i64 0, i32 0, i32 1, i32 2
  %51 = load i64, i64* %50, align 8
  %52 = add i64 %51, 1
  store i64 %52, i64* %50, align 8
  %53 = ptrtoint %"class.headless::log::ExperimentalObserver"* %1 to i64
  %54 = getelementptr inbounds %"class.headless::log::ExperimentalDomain", %"class.headless::log::ExperimentalDomain"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %55 = getelementptr inbounds %"class.headless::log::ExperimentalDomain", %"class.headless::log::ExperimentalDomain"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %56 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %55, align 8
  %57 = icmp ult %"class.base::internal::UncheckedObserverAdapter"* %49, %56
  %58 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %56 to i64
  br i1 %57, label %59, label %64

59:                                               ; preds = %48
  %60 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %49 to i64*
  store i64 %53, i64* %60, align 8
  %61 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %49, i64 1
  %62 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %61 to i64
  %63 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %54 to i64*
  store i64 %62, i64* %63, align 8
  br label %121

64:                                               ; preds = %48
  %65 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %49 to i64
  %66 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %54 to i64*
  %67 = bitcast %"class.base::ObserverList"* %25 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = sub i64 %65, %68
  %70 = ashr exact i64 %69, 3
  %71 = add nsw i64 %70, 1
  %72 = icmp ugt i64 %71, 2305843009213693951
  br i1 %72, label %73, label %75

73:                                               ; preds = %64
  %74 = bitcast %"class.base::ObserverList"* %25 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %74) #11
  unreachable

75:                                               ; preds = %64
  %76 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %55 to i64*
  %77 = sub i64 %58, %68
  %78 = ashr exact i64 %77, 3
  %79 = icmp ult i64 %78, 1152921504606846975
  br i1 %79, label %80, label %88

80:                                               ; preds = %75
  %81 = ashr exact i64 %77, 2
  %82 = icmp ult i64 %81, %71
  %83 = select i1 %82, i64 %71, i64 %81
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %93, label %85

85:                                               ; preds = %80
  %86 = icmp ugt i64 %83, 2305843009213693951
  br i1 %86, label %87, label %88

87:                                               ; preds = %85
  call void @abort() #11
  unreachable

88:                                               ; preds = %85, %75
  %89 = phi i64 [ %83, %85 ], [ 2305843009213693951, %75 ]
  %90 = shl i64 %89, 3
  %91 = call i8* @_Znwm(i64 %90) #9
  %92 = bitcast i8* %91 to %"class.base::internal::UncheckedObserverAdapter"*
  br label %93

93:                                               ; preds = %88, %80
  %94 = phi i64 [ %89, %88 ], [ 0, %80 ]
  %95 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %92, %88 ], [ null, %80 ]
  %96 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %95, i64 %70
  %97 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %95, i64 %94
  %98 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %97 to i64
  %99 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %96 to i64*
  store i64 %53, i64* %99, align 8
  %100 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %96, i64 1
  %101 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %100 to i64
  %102 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %25, i64 0, i32 0, i32 0, i32 0
  %103 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %102, align 8
  %104 = load i64, i64* %66, align 8
  %105 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %103 to i64
  %106 = sub i64 %104, %105
  %107 = ashr exact i64 %106, 3
  %108 = sub nsw i64 0, %107
  %109 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %96, i64 %108
  %110 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %109 to i64
  %111 = icmp sgt i64 %106, 0
  br i1 %111, label %112, label %116

112:                                              ; preds = %93
  %113 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %109 to i8*
  %114 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %103 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %113, i8* align 8 %114, i64 %106, i1 false) #10
  %115 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %102, align 8
  br label %116

116:                                              ; preds = %112, %93
  %117 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %103, %93 ], [ %115, %112 ]
  store i64 %110, i64* %67, align 8
  store i64 %101, i64* %66, align 8
  store i64 %98, i64* %76, align 8
  %118 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %117, null
  br i1 %118, label %121, label %119

119:                                              ; preds = %116
  %120 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %117 to i8*
  call void @_ZdlPv(i8* %120) #9
  br label %121

121:                                              ; preds = %119, %116, %59, %45
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless3log18ExperimentalDomain14RemoveObserverEPNS0_20ExperimentalObserverE(%"class.headless::log::ExperimentalDomain"*, %"class.headless::log::ExperimentalObserver"* readnone) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.headless::log::ExperimentalDomain", %"class.headless::log::ExperimentalDomain"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %3, align 8
  %5 = getelementptr inbounds %"class.headless::log::ExperimentalDomain", %"class.headless::log::ExperimentalDomain"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %6 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %5, align 8
  %7 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %4, %6
  %8 = bitcast %"class.headless::log::ExperimentalObserver"* %1 to i8*
  %9 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %6 to i64
  br i1 %7, label %18, label %10

10:                                               ; preds = %2, %15
  %11 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %16, %15 ], [ %4, %2 ]
  %12 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %11, i64 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = icmp eq i8* %13, %8
  br i1 %14, label %18, label %15

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %11, i64 1
  %17 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %16, %6
  br i1 %17, label %47, label %10

18:                                               ; preds = %10, %2
  %19 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %4, %2 ], [ %11, %10 ]
  %20 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %19, %6
  br i1 %20, label %47, label %21

21:                                               ; preds = %18
  %22 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %19, i64 0, i32 0
  %23 = load i8*, i8** %22, align 8
  %24 = icmp eq i8* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.headless::log::ExperimentalDomain", %"class.headless::log::ExperimentalDomain"* %0, i64 0, i32 0, i32 1, i32 2
  %27 = load i64, i64* %26, align 8
  %28 = add i64 %27, -1
  store i64 %28, i64* %26, align 8
  br label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.headless::log::ExperimentalDomain", %"class.headless::log::ExperimentalDomain"* %0, i64 0, i32 0, i32 1, i32 1, i32 0, i32 0, i32 1
  %31 = bitcast %"class.base::internal::LinkNodeBase"** %30 to %"class.base::LinkNode"**
  %32 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %31, align 8
  %33 = getelementptr inbounds %"class.headless::log::ExperimentalDomain", %"class.headless::log::ExperimentalDomain"* %0, i64 0, i32 0, i32 1, i32 1, i32 0
  %34 = icmp eq %"class.base::LinkNode"* %32, %33
  br i1 %34, label %35, label %46

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %19, i64 1
  %37 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %36 to i64
  %38 = sub i64 %9, %37
  %39 = ashr exact i64 %38, 3
  %40 = icmp eq i64 %38, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %35
  %42 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %19 to i8*
  %43 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %36 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 %38, i1 false) #10
  br label %44

44:                                               ; preds = %41, %35
  %45 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %19, i64 %39
  store %"class.base::internal::UncheckedObserverAdapter"* %45, %"class.base::internal::UncheckedObserverAdapter"** %5, align 8
  br label %47

46:                                               ; preds = %29
  store i8* null, i8** %22, align 8
  br label %47

47:                                               ; preds = %15, %18, %44, %46
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8headless3log8LogEntryD2Ev(%"class.headless::log::LogEntry"*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.headless::log::LogEntry", %"class.headless::log::LogEntry"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %31, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.headless::log::LogEntry", %"class.headless::log::LogEntry"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 1, i32 0
  %7 = getelementptr inbounds %"class.std::__1::vector.164", %"class.std::__1::vector.164"* %6, i64 0, i32 0, i32 0
  %8 = load %"class.std::__1::unique_ptr.166"*, %"class.std::__1::unique_ptr.166"** %7, align 8
  %9 = icmp eq %"class.std::__1::unique_ptr.166"* %8, null
  br i1 %9, label %30, label %10

10:                                               ; preds = %5
  %11 = bitcast %"class.std::__1::unique_ptr.166"* %8 to i8*
  %12 = getelementptr inbounds %"class.headless::log::LogEntry", %"class.headless::log::LogEntry"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %13 = load %"class.std::__1::unique_ptr.166"*, %"class.std::__1::unique_ptr.166"** %12, align 8
  %14 = icmp eq %"class.std::__1::unique_ptr.166"* %13, %8
  br i1 %14, label %28, label %15

15:                                               ; preds = %10, %23
  %16 = phi %"class.std::__1::unique_ptr.166"* [ %17, %23 ], [ %13, %10 ]
  %17 = getelementptr inbounds %"class.std::__1::unique_ptr.166", %"class.std::__1::unique_ptr.166"* %16, i64 -1
  %18 = getelementptr inbounds %"class.std::__1::unique_ptr.166", %"class.std::__1::unique_ptr.166"* %17, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.headless::runtime::RemoteObject"*, %"class.headless::runtime::RemoteObject"** %18, align 8
  store %"class.headless::runtime::RemoteObject"* null, %"class.headless::runtime::RemoteObject"** %18, align 8
  %20 = icmp eq %"class.headless::runtime::RemoteObject"* %19, null
  br i1 %20, label %23, label %21

21:                                               ; preds = %15
  tail call void @_ZN8headless7runtime12RemoteObjectD2Ev(%"class.headless::runtime::RemoteObject"* nonnull %19) #10
  %22 = bitcast %"class.headless::runtime::RemoteObject"* %19 to i8*
  tail call void @_ZdlPv(i8* %22) #9
  br label %23

23:                                               ; preds = %21, %15
  %24 = icmp eq %"class.std::__1::unique_ptr.166"* %17, %8
  br i1 %24, label %25, label %15

25:                                               ; preds = %23
  %26 = bitcast %"class.std::__1::vector.164"* %6 to i8**
  %27 = load i8*, i8** %26, align 8
  br label %28

28:                                               ; preds = %25, %10
  %29 = phi i8* [ %27, %25 ], [ %11, %10 ]
  store %"class.std::__1::unique_ptr.166"* %8, %"class.std::__1::unique_ptr.166"** %12, align 8
  tail call void @_ZdlPv(i8* %29) #9
  br label %30

30:                                               ; preds = %28, %5
  store i8 0, i8* %2, align 8
  br label %31

31:                                               ; preds = %1, %30
  %32 = getelementptr inbounds %"class.headless::log::LogEntry", %"class.headless::log::LogEntry"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  %33 = load i8, i8* %32, align 8, !range !2
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %45, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.headless::log::LogEntry", %"class.headless::log::LogEntry"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0
  %37 = bitcast %"class.std::__1::basic_string"* %36 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  %39 = load i8, i8* %38, align 1
  %40 = icmp slt i8 %39, 0
  br i1 %40, label %41, label %44

41:                                               ; preds = %35
  %42 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load i8*, i8** %42, align 8
  tail call void @_ZdlPv(i8* %43) #9
  br label %44

44:                                               ; preds = %41, %35
  store i8 0, i8* %32, align 8
  br label %45

45:                                               ; preds = %31, %44
  %46 = getelementptr inbounds %"class.headless::log::LogEntry", %"class.headless::log::LogEntry"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %47 = load i8, i8* %46, align 8, !range !2
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %59, label %49

49:                                               ; preds = %45
  %50 = getelementptr inbounds %"class.headless::log::LogEntry", %"class.headless::log::LogEntry"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1, i32 0
  %51 = bitcast %"class.std::__1::basic_string"* %50 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %52 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %51, i64 0, i32 1, i32 0
  %53 = load i8, i8* %52, align 1
  %54 = icmp slt i8 %53, 0
  br i1 %54, label %55, label %58

55:                                               ; preds = %49
  %56 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %50, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8
  tail call void @_ZdlPv(i8* %57) #9
  br label %58

58:                                               ; preds = %55, %49
  store i8 0, i8* %46, align 8
  br label %59

59:                                               ; preds = %45, %58
  %60 = getelementptr inbounds %"class.headless::log::LogEntry", %"class.headless::log::LogEntry"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %61 = load i8, i8* %60, align 8, !range !2
  %62 = icmp eq i8 %61, 0
  br i1 %62, label %70, label %63

63:                                               ; preds = %59
  %64 = getelementptr inbounds %"class.headless::log::LogEntry", %"class.headless::log::LogEntry"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %65 = load %"class.headless::runtime::StackTrace"*, %"class.headless::runtime::StackTrace"** %64, align 8
  store %"class.headless::runtime::StackTrace"* null, %"class.headless::runtime::StackTrace"** %64, align 8
  %66 = icmp eq %"class.headless::runtime::StackTrace"* %65, null
  br i1 %66, label %69, label %67

67:                                               ; preds = %63
  tail call void @_ZN8headless7runtime10StackTraceD2Ev(%"class.headless::runtime::StackTrace"* nonnull %65) #10
  %68 = getelementptr inbounds %"class.headless::runtime::StackTrace", %"class.headless::runtime::StackTrace"* %65, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZdlPv(i8* %68) #9
  br label %69

69:                                               ; preds = %67, %63
  store i8 0, i8* %60, align 8
  br label %70

70:                                               ; preds = %59, %69
  %71 = getelementptr inbounds %"class.headless::log::LogEntry", %"class.headless::log::LogEntry"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %72 = load i8, i8* %71, align 8, !range !2
  %73 = icmp eq i8 %72, 0
  br i1 %73, label %84, label %74

74:                                               ; preds = %70
  %75 = getelementptr inbounds %"class.headless::log::LogEntry", %"class.headless::log::LogEntry"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0
  %76 = bitcast %"class.std::__1::basic_string"* %75 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %77 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %76, i64 0, i32 1, i32 0
  %78 = load i8, i8* %77, align 1
  %79 = icmp slt i8 %78, 0
  br i1 %79, label %80, label %83

80:                                               ; preds = %74
  %81 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %75, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %82 = load i8*, i8** %81, align 8
  tail call void @_ZdlPv(i8* %82) #9
  br label %83

83:                                               ; preds = %80, %74
  store i8 0, i8* %71, align 8
  br label %84

84:                                               ; preds = %70, %83
  %85 = getelementptr inbounds %"class.headless::log::LogEntry", %"class.headless::log::LogEntry"* %0, i64 0, i32 2
  %86 = bitcast %"class.std::__1::basic_string"* %85 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %87 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %86, i64 0, i32 1, i32 0
  %88 = load i8, i8* %87, align 1
  %89 = icmp slt i8 %88, 0
  br i1 %89, label %90, label %93

90:                                               ; preds = %84
  %91 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %85, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %92 = load i8*, i8** %91, align 8
  tail call void @_ZdlPv(i8* %92) #9
  br label %93

93:                                               ; preds = %84, %90
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8headless7runtime12RemoteObjectD2Ev(%"class.headless::runtime::RemoteObject"*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.headless::runtime::RemoteObject", %"class.headless::runtime::RemoteObject"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %34, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.headless::runtime::RemoteObject", %"class.headless::runtime::RemoteObject"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %7 = load %"class.headless::runtime::CustomPreview"*, %"class.headless::runtime::CustomPreview"** %6, align 8
  store %"class.headless::runtime::CustomPreview"* null, %"class.headless::runtime::CustomPreview"** %6, align 8
  %8 = icmp eq %"class.headless::runtime::CustomPreview"* %7, null
  br i1 %8, label %33, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.headless::runtime::CustomPreview", %"class.headless::runtime::CustomPreview"* %7, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %11 = load i8, i8* %10, align 8, !range !2
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %23, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.headless::runtime::CustomPreview", %"class.headless::runtime::CustomPreview"* %7, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %15 = bitcast %"class.std::__1::basic_string"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %15, i64 0, i32 1, i32 0
  %17 = load i8, i8* %16, align 1
  %18 = icmp slt i8 %17, 0
  br i1 %18, label %19, label %22

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  tail call void @_ZdlPv(i8* %21) #9
  br label %22

22:                                               ; preds = %19, %13
  store i8 0, i8* %10, align 8
  br label %23

23:                                               ; preds = %22, %9
  %24 = bitcast %"class.headless::runtime::CustomPreview"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  %26 = load i8, i8* %25, align 1
  %27 = icmp slt i8 %26, 0
  br i1 %27, label %28, label %31

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.headless::runtime::CustomPreview", %"class.headless::runtime::CustomPreview"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load i8*, i8** %29, align 8
  tail call void @_ZdlPv(i8* %30) #9
  br label %31

31:                                               ; preds = %28, %23
  %32 = bitcast %"class.headless::runtime::CustomPreview"* %7 to i8*
  tail call void @_ZdlPv(i8* %32) #9
  br label %33

33:                                               ; preds = %31, %5
  store i8 0, i8* %2, align 8
  br label %34

34:                                               ; preds = %1, %33
  %35 = getelementptr inbounds %"class.headless::runtime::RemoteObject", %"class.headless::runtime::RemoteObject"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %36 = load i8, i8* %35, align 8, !range !2
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %46, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"class.headless::runtime::RemoteObject", %"class.headless::runtime::RemoteObject"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %40 = getelementptr inbounds %"class.std::__1::__compressed_pair.185", %"class.std::__1::__compressed_pair.185"* %39, i64 0, i32 0, i32 0
  %41 = load %"class.headless::runtime::ObjectPreview"*, %"class.headless::runtime::ObjectPreview"** %40, align 8
  store %"class.headless::runtime::ObjectPreview"* null, %"class.headless::runtime::ObjectPreview"** %40, align 8
  %42 = icmp eq %"class.headless::runtime::ObjectPreview"* %41, null
  br i1 %42, label %45, label %43

43:                                               ; preds = %38
  %44 = bitcast %"class.std::__1::__compressed_pair.185"* %39 to %"struct.std::__1::default_delete.224"*
  tail call void @_ZNKSt3__114default_deleteIN8headless7runtime13ObjectPreviewEEclEPS3_(%"struct.std::__1::default_delete.224"* %44, %"class.headless::runtime::ObjectPreview"* nonnull %41) #10
  br label %45

45:                                               ; preds = %43, %38
  store i8 0, i8* %35, align 8
  br label %46

46:                                               ; preds = %34, %45
  %47 = getelementptr inbounds %"class.headless::runtime::RemoteObject", %"class.headless::runtime::RemoteObject"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %48 = load i8, i8* %47, align 8, !range !2
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %60, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.headless::runtime::RemoteObject", %"class.headless::runtime::RemoteObject"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 1, i32 0
  %52 = bitcast %"class.std::__1::basic_string"* %51 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %53 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %52, i64 0, i32 1, i32 0
  %54 = load i8, i8* %53, align 1
  %55 = icmp slt i8 %54, 0
  br i1 %55, label %56, label %59

56:                                               ; preds = %50
  %57 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %51, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load i8*, i8** %57, align 8
  tail call void @_ZdlPv(i8* %58) #9
  br label %59

59:                                               ; preds = %56, %50
  store i8 0, i8* %47, align 8
  br label %60

60:                                               ; preds = %46, %59
  %61 = getelementptr inbounds %"class.headless::runtime::RemoteObject", %"class.headless::runtime::RemoteObject"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %62 = load i8, i8* %61, align 8, !range !2
  %63 = icmp eq i8 %62, 0
  br i1 %63, label %74, label %64

64:                                               ; preds = %60
  %65 = getelementptr inbounds %"class.headless::runtime::RemoteObject", %"class.headless::runtime::RemoteObject"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0
  %66 = bitcast %"class.std::__1::basic_string"* %65 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %67 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %66, i64 0, i32 1, i32 0
  %68 = load i8, i8* %67, align 1
  %69 = icmp slt i8 %68, 0
  br i1 %69, label %70, label %73

70:                                               ; preds = %64
  %71 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %65, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = load i8*, i8** %71, align 8
  tail call void @_ZdlPv(i8* %72) #9
  br label %73

73:                                               ; preds = %70, %64
  store i8 0, i8* %61, align 8
  br label %74

74:                                               ; preds = %60, %73
  %75 = getelementptr inbounds %"class.headless::runtime::RemoteObject", %"class.headless::runtime::RemoteObject"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %76 = load i8, i8* %75, align 8, !range !2
  %77 = icmp eq i8 %76, 0
  br i1 %77, label %88, label %78

78:                                               ; preds = %74
  %79 = getelementptr inbounds %"class.headless::runtime::RemoteObject", %"class.headless::runtime::RemoteObject"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0
  %80 = bitcast %"class.std::__1::basic_string"* %79 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %81 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %80, i64 0, i32 1, i32 0
  %82 = load i8, i8* %81, align 1
  %83 = icmp slt i8 %82, 0
  br i1 %83, label %84, label %87

84:                                               ; preds = %78
  %85 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %79, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %86 = load i8*, i8** %85, align 8
  tail call void @_ZdlPv(i8* %86) #9
  br label %87

87:                                               ; preds = %84, %78
  store i8 0, i8* %75, align 8
  br label %88

88:                                               ; preds = %74, %87
  %89 = getelementptr inbounds %"class.headless::runtime::RemoteObject", %"class.headless::runtime::RemoteObject"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %90 = load i8, i8* %89, align 8, !range !2
  %91 = icmp eq i8 %90, 0
  br i1 %91, label %99, label %92

92:                                               ; preds = %88
  %93 = getelementptr inbounds %"class.headless::runtime::RemoteObject", %"class.headless::runtime::RemoteObject"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %94 = load %"class.base::Value"*, %"class.base::Value"** %93, align 8
  store %"class.base::Value"* null, %"class.base::Value"** %93, align 8
  %95 = icmp eq %"class.base::Value"* %94, null
  br i1 %95, label %98, label %96

96:                                               ; preds = %92
  tail call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %94) #10
  %97 = bitcast %"class.base::Value"* %94 to i8*
  tail call void @_ZdlPv(i8* %97) #9
  br label %98

98:                                               ; preds = %96, %92
  store i8 0, i8* %89, align 8
  br label %99

99:                                               ; preds = %88, %98
  %100 = getelementptr inbounds %"class.headless::runtime::RemoteObject", %"class.headless::runtime::RemoteObject"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %101 = load i8, i8* %100, align 8, !range !2
  %102 = icmp eq i8 %101, 0
  br i1 %102, label %113, label %103

103:                                              ; preds = %99
  %104 = getelementptr inbounds %"class.headless::runtime::RemoteObject", %"class.headless::runtime::RemoteObject"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %105 = bitcast %"class.std::__1::basic_string"* %104 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %106 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %105, i64 0, i32 1, i32 0
  %107 = load i8, i8* %106, align 1
  %108 = icmp slt i8 %107, 0
  br i1 %108, label %109, label %112

109:                                              ; preds = %103
  %110 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %104, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %111 = load i8*, i8** %110, align 8
  tail call void @_ZdlPv(i8* %111) #9
  br label %112

112:                                              ; preds = %109, %103
  store i8 0, i8* %100, align 8
  br label %113

113:                                              ; preds = %99, %112
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNKSt3__114default_deleteIN8headless7runtime13ObjectPreviewEEclEPS3_(%"struct.std::__1::default_delete.224"*, %"class.headless::runtime::ObjectPreview"*) local_unnamed_addr #1 comdat align 2 {
  %3 = icmp eq %"class.headless::runtime::ObjectPreview"* %1, null
  br i1 %3, label %79, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.headless::runtime::ObjectPreview", %"class.headless::runtime::ObjectPreview"* %1, i64 0, i32 5, i32 0, i32 0, i32 0
  tail call void @_ZN4absl17optional_internal23optional_data_dtor_baseINSt3__16vectorINS2_10unique_ptrIN8headless7runtime12EntryPreviewENS2_14default_deleteIS7_EEEENS2_9allocatorISA_EEEELb0EED2Ev(%"class.absl::optional_internal::optional_data_dtor_base.208"* %5) #10
  %6 = getelementptr inbounds %"class.headless::runtime::ObjectPreview", %"class.headless::runtime::ObjectPreview"* %1, i64 0, i32 4, i32 0
  %7 = getelementptr inbounds %"class.std::__1::__vector_base.193", %"class.std::__1::__vector_base.193"* %6, i64 0, i32 0
  %8 = load %"class.std::__1::unique_ptr.194"*, %"class.std::__1::unique_ptr.194"** %7, align 8
  %9 = icmp eq %"class.std::__1::unique_ptr.194"* %8, null
  br i1 %9, label %64, label %10

10:                                               ; preds = %4
  %11 = bitcast %"class.std::__1::unique_ptr.194"* %8 to i8*
  %12 = getelementptr inbounds %"class.headless::runtime::ObjectPreview", %"class.headless::runtime::ObjectPreview"* %1, i64 0, i32 4, i32 0, i32 1
  %13 = load %"class.std::__1::unique_ptr.194"*, %"class.std::__1::unique_ptr.194"** %12, align 8
  %14 = icmp eq %"class.std::__1::unique_ptr.194"* %13, %8
  br i1 %14, label %62, label %15

15:                                               ; preds = %10, %57
  %16 = phi %"class.std::__1::unique_ptr.194"* [ %17, %57 ], [ %13, %10 ]
  %17 = getelementptr inbounds %"class.std::__1::unique_ptr.194", %"class.std::__1::unique_ptr.194"* %16, i64 -1
  %18 = getelementptr inbounds %"class.std::__1::unique_ptr.194", %"class.std::__1::unique_ptr.194"* %17, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.headless::runtime::PropertyPreview"*, %"class.headless::runtime::PropertyPreview"** %18, align 8
  store %"class.headless::runtime::PropertyPreview"* null, %"class.headless::runtime::PropertyPreview"** %18, align 8
  %20 = icmp eq %"class.headless::runtime::PropertyPreview"* %19, null
  br i1 %20, label %57, label %21

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.headless::runtime::PropertyPreview", %"class.headless::runtime::PropertyPreview"* %19, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %23 = load i8, i8* %22, align 8, !range !2
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %33, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.headless::runtime::PropertyPreview", %"class.headless::runtime::PropertyPreview"* %19, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %27 = getelementptr inbounds %"class.std::__1::__compressed_pair.185", %"class.std::__1::__compressed_pair.185"* %26, i64 0, i32 0, i32 0
  %28 = load %"class.headless::runtime::ObjectPreview"*, %"class.headless::runtime::ObjectPreview"** %27, align 8
  store %"class.headless::runtime::ObjectPreview"* null, %"class.headless::runtime::ObjectPreview"** %27, align 8
  %29 = icmp eq %"class.headless::runtime::ObjectPreview"* %28, null
  br i1 %29, label %32, label %30

30:                                               ; preds = %25
  %31 = bitcast %"class.std::__1::__compressed_pair.185"* %26 to %"struct.std::__1::default_delete.224"*
  tail call void @_ZNKSt3__114default_deleteIN8headless7runtime13ObjectPreviewEEclEPS3_(%"struct.std::__1::default_delete.224"* %31, %"class.headless::runtime::ObjectPreview"* nonnull %28) #10
  br label %32

32:                                               ; preds = %30, %25
  store i8 0, i8* %22, align 8
  br label %33

33:                                               ; preds = %21, %32
  %34 = getelementptr inbounds %"class.headless::runtime::PropertyPreview", %"class.headless::runtime::PropertyPreview"* %19, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %35 = load i8, i8* %34, align 8, !range !2
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %47, label %37

37:                                               ; preds = %33
  %38 = getelementptr inbounds %"class.headless::runtime::PropertyPreview", %"class.headless::runtime::PropertyPreview"* %19, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %39 = bitcast %"class.std::__1::basic_string"* %38 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %39, i64 0, i32 1, i32 0
  %41 = load i8, i8* %40, align 1
  %42 = icmp slt i8 %41, 0
  br i1 %42, label %43, label %46

43:                                               ; preds = %37
  %44 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load i8*, i8** %44, align 8
  tail call void @_ZdlPv(i8* %45) #9
  br label %46

46:                                               ; preds = %43, %37
  store i8 0, i8* %34, align 8
  br label %47

47:                                               ; preds = %46, %33
  %48 = bitcast %"class.headless::runtime::PropertyPreview"* %19 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %49 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %50 = load i8, i8* %49, align 1
  %51 = icmp slt i8 %50, 0
  br i1 %51, label %52, label %55

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.headless::runtime::PropertyPreview", %"class.headless::runtime::PropertyPreview"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  tail call void @_ZdlPv(i8* %54) #9
  br label %55

55:                                               ; preds = %47, %52
  %56 = bitcast %"class.headless::runtime::PropertyPreview"* %19 to i8*
  tail call void @_ZdlPv(i8* %56) #9
  br label %57

57:                                               ; preds = %15, %55
  %58 = icmp eq %"class.std::__1::unique_ptr.194"* %17, %8
  br i1 %58, label %59, label %15

59:                                               ; preds = %57
  %60 = bitcast %"class.std::__1::__vector_base.193"* %6 to i8**
  %61 = load i8*, i8** %60, align 8
  br label %62

62:                                               ; preds = %10, %59
  %63 = phi i8* [ %61, %59 ], [ %11, %10 ]
  store %"class.std::__1::unique_ptr.194"* %8, %"class.std::__1::unique_ptr.194"** %12, align 8
  tail call void @_ZdlPv(i8* %63) #9
  br label %64

64:                                               ; preds = %62, %4
  %65 = getelementptr inbounds %"class.headless::runtime::ObjectPreview", %"class.headless::runtime::ObjectPreview"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %66 = load i8, i8* %65, align 8, !range !2
  %67 = icmp eq i8 %66, 0
  br i1 %67, label %77, label %68

68:                                               ; preds = %64
  %69 = getelementptr inbounds %"class.headless::runtime::ObjectPreview", %"class.headless::runtime::ObjectPreview"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %70 = bitcast %"class.std::__1::basic_string"* %69 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %71 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %70, i64 0, i32 1, i32 0
  %72 = load i8, i8* %71, align 1
  %73 = icmp slt i8 %72, 0
  br i1 %73, label %74, label %77

74:                                               ; preds = %68
  %75 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %69, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load i8*, i8** %75, align 8
  tail call void @_ZdlPv(i8* %76) #9
  br label %77

77:                                               ; preds = %68, %74, %64
  %78 = bitcast %"class.headless::runtime::ObjectPreview"* %1 to i8*
  tail call void @_ZdlPv(i8* %78) #9
  br label %79

79:                                               ; preds = %77, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl17optional_internal23optional_data_dtor_baseINSt3__16vectorINS2_10unique_ptrIN8headless7runtime12EntryPreviewENS2_14default_deleteIS7_EEEENS2_9allocatorISA_EEEELb0EED2Ev(%"class.absl::optional_internal::optional_data_dtor_base.208"*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.absl::optional_internal::optional_data_dtor_base.208", %"class.absl::optional_internal::optional_data_dtor_base.208"* %0, i64 0, i32 0
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %48, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.absl::optional_internal::optional_data_dtor_base.208", %"class.absl::optional_internal::optional_data_dtor_base.208"* %0, i64 0, i32 1, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::__vector_base.211", %"class.std::__1::__vector_base.211"* %6, i64 0, i32 0
  %8 = load %"class.std::__1::unique_ptr.212"*, %"class.std::__1::unique_ptr.212"** %7, align 8
  %9 = icmp eq %"class.std::__1::unique_ptr.212"* %8, null
  br i1 %9, label %47, label %10

10:                                               ; preds = %5
  %11 = bitcast %"class.std::__1::unique_ptr.212"* %8 to i8*
  %12 = getelementptr inbounds %"class.absl::optional_internal::optional_data_dtor_base.208", %"class.absl::optional_internal::optional_data_dtor_base.208"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %13 = load %"class.std::__1::unique_ptr.212"*, %"class.std::__1::unique_ptr.212"** %12, align 8
  %14 = icmp eq %"class.std::__1::unique_ptr.212"* %13, %8
  br i1 %14, label %45, label %15

15:                                               ; preds = %10, %40
  %16 = phi %"class.std::__1::unique_ptr.212"* [ %17, %40 ], [ %13, %10 ]
  %17 = getelementptr inbounds %"class.std::__1::unique_ptr.212", %"class.std::__1::unique_ptr.212"* %16, i64 -1
  %18 = getelementptr inbounds %"class.std::__1::unique_ptr.212", %"class.std::__1::unique_ptr.212"* %17, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.headless::runtime::EntryPreview"*, %"class.headless::runtime::EntryPreview"** %18, align 8
  store %"class.headless::runtime::EntryPreview"* null, %"class.headless::runtime::EntryPreview"** %18, align 8
  %20 = icmp eq %"class.headless::runtime::EntryPreview"* %19, null
  br i1 %20, label %40, label %21

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.headless::runtime::EntryPreview", %"class.headless::runtime::EntryPreview"* %19, i64 0, i32 1, i32 0
  %23 = getelementptr inbounds %"class.std::__1::__compressed_pair.185", %"class.std::__1::__compressed_pair.185"* %22, i64 0, i32 0, i32 0
  %24 = load %"class.headless::runtime::ObjectPreview"*, %"class.headless::runtime::ObjectPreview"** %23, align 8
  store %"class.headless::runtime::ObjectPreview"* null, %"class.headless::runtime::ObjectPreview"** %23, align 8
  %25 = icmp eq %"class.headless::runtime::ObjectPreview"* %24, null
  br i1 %25, label %28, label %26

26:                                               ; preds = %21
  %27 = bitcast %"class.std::__1::__compressed_pair.185"* %22 to %"struct.std::__1::default_delete.224"*
  tail call void @_ZNKSt3__114default_deleteIN8headless7runtime13ObjectPreviewEEclEPS3_(%"struct.std::__1::default_delete.224"* %27, %"class.headless::runtime::ObjectPreview"* nonnull %24) #10
  br label %28

28:                                               ; preds = %21, %26
  %29 = getelementptr inbounds %"class.headless::runtime::EntryPreview", %"class.headless::runtime::EntryPreview"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load i8, i8* %29, align 8, !range !2
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %39, label %32

32:                                               ; preds = %28
  %33 = getelementptr inbounds %"class.headless::runtime::EntryPreview", %"class.headless::runtime::EntryPreview"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %34 = getelementptr inbounds %"class.std::__1::__compressed_pair.185", %"class.std::__1::__compressed_pair.185"* %33, i64 0, i32 0, i32 0
  %35 = load %"class.headless::runtime::ObjectPreview"*, %"class.headless::runtime::ObjectPreview"** %34, align 8
  store %"class.headless::runtime::ObjectPreview"* null, %"class.headless::runtime::ObjectPreview"** %34, align 8
  %36 = icmp eq %"class.headless::runtime::ObjectPreview"* %35, null
  br i1 %36, label %39, label %37

37:                                               ; preds = %32
  %38 = bitcast %"class.std::__1::__compressed_pair.185"* %33 to %"struct.std::__1::default_delete.224"*
  tail call void @_ZNKSt3__114default_deleteIN8headless7runtime13ObjectPreviewEEclEPS3_(%"struct.std::__1::default_delete.224"* %38, %"class.headless::runtime::ObjectPreview"* nonnull %35) #10
  br label %39

39:                                               ; preds = %32, %37, %28
  tail call void @_ZdlPv(i8* %29) #9
  br label %40

40:                                               ; preds = %39, %15
  %41 = icmp eq %"class.std::__1::unique_ptr.212"* %17, %8
  br i1 %41, label %42, label %15

42:                                               ; preds = %40
  %43 = bitcast %"class.std::__1::__vector_base.211"* %6 to i8**
  %44 = load i8*, i8** %43, align 8
  br label %45

45:                                               ; preds = %10, %42
  %46 = phi i8* [ %44, %42 ], [ %11, %10 ]
  store %"class.std::__1::unique_ptr.212"* %8, %"class.std::__1::unique_ptr.212"** %12, align 8
  tail call void @_ZdlPv(i8* %46) #9
  br label %47

47:                                               ; preds = %45, %5
  store i8 0, i8* %2, align 8
  br label %48

48:                                               ; preds = %1, %47
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base5ValueD1Ev(%"class.base::Value"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8headless7runtime10StackTraceD2Ev(%"class.headless::runtime::StackTrace"*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.headless::runtime::StackTrace", %"class.headless::runtime::StackTrace"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %34, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.headless::runtime::StackTrace", %"class.headless::runtime::StackTrace"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %7 = load %"class.headless::runtime::StackTraceId"*, %"class.headless::runtime::StackTraceId"** %6, align 8
  store %"class.headless::runtime::StackTraceId"* null, %"class.headless::runtime::StackTraceId"** %6, align 8
  %8 = icmp eq %"class.headless::runtime::StackTraceId"* %7, null
  br i1 %8, label %33, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.headless::runtime::StackTraceId", %"class.headless::runtime::StackTraceId"* %7, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %11 = load i8, i8* %10, align 8, !range !2
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %23, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.headless::runtime::StackTraceId", %"class.headless::runtime::StackTraceId"* %7, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %15 = bitcast %"class.std::__1::basic_string"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %15, i64 0, i32 1, i32 0
  %17 = load i8, i8* %16, align 1
  %18 = icmp slt i8 %17, 0
  br i1 %18, label %19, label %22

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  tail call void @_ZdlPv(i8* %21) #9
  br label %22

22:                                               ; preds = %19, %13
  store i8 0, i8* %10, align 8
  br label %23

23:                                               ; preds = %22, %9
  %24 = bitcast %"class.headless::runtime::StackTraceId"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  %26 = load i8, i8* %25, align 1
  %27 = icmp slt i8 %26, 0
  br i1 %27, label %28, label %31

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.headless::runtime::StackTraceId", %"class.headless::runtime::StackTraceId"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load i8*, i8** %29, align 8
  tail call void @_ZdlPv(i8* %30) #9
  br label %31

31:                                               ; preds = %28, %23
  %32 = bitcast %"class.headless::runtime::StackTraceId"* %7 to i8*
  tail call void @_ZdlPv(i8* %32) #9
  br label %33

33:                                               ; preds = %31, %5
  store i8 0, i8* %2, align 8
  br label %34

34:                                               ; preds = %1, %33
  %35 = getelementptr inbounds %"class.headless::runtime::StackTrace", %"class.headless::runtime::StackTrace"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %36 = load i8, i8* %35, align 8, !range !2
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %45, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"class.headless::runtime::StackTrace", %"class.headless::runtime::StackTrace"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %40 = load %"class.headless::runtime::StackTrace"*, %"class.headless::runtime::StackTrace"** %39, align 8
  store %"class.headless::runtime::StackTrace"* null, %"class.headless::runtime::StackTrace"** %39, align 8
  %41 = icmp eq %"class.headless::runtime::StackTrace"* %40, null
  br i1 %41, label %44, label %42

42:                                               ; preds = %38
  tail call void @_ZN8headless7runtime10StackTraceD2Ev(%"class.headless::runtime::StackTrace"* nonnull %40) #10
  %43 = getelementptr inbounds %"class.headless::runtime::StackTrace", %"class.headless::runtime::StackTrace"* %40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZdlPv(i8* %43) #9
  br label %44

44:                                               ; preds = %42, %38
  store i8 0, i8* %35, align 8
  br label %45

45:                                               ; preds = %34, %44
  %46 = getelementptr inbounds %"class.headless::runtime::StackTrace", %"class.headless::runtime::StackTrace"* %0, i64 0, i32 1
  %47 = getelementptr inbounds %"class.std::__1::vector.256", %"class.std::__1::vector.256"* %46, i64 0, i32 0, i32 0
  %48 = load %"class.std::__1::unique_ptr.258"*, %"class.std::__1::unique_ptr.258"** %47, align 8
  %49 = icmp eq %"class.std::__1::unique_ptr.258"* %48, null
  br i1 %49, label %96, label %50

50:                                               ; preds = %45
  %51 = bitcast %"class.std::__1::unique_ptr.258"* %48 to i8*
  %52 = getelementptr inbounds %"class.headless::runtime::StackTrace", %"class.headless::runtime::StackTrace"* %0, i64 0, i32 1, i32 0, i32 1
  %53 = load %"class.std::__1::unique_ptr.258"*, %"class.std::__1::unique_ptr.258"** %52, align 8
  %54 = icmp eq %"class.std::__1::unique_ptr.258"* %53, %48
  br i1 %54, label %94, label %55

55:                                               ; preds = %50, %89
  %56 = phi %"class.std::__1::unique_ptr.258"* [ %57, %89 ], [ %53, %50 ]
  %57 = getelementptr inbounds %"class.std::__1::unique_ptr.258", %"class.std::__1::unique_ptr.258"* %56, i64 -1
  %58 = getelementptr inbounds %"class.std::__1::unique_ptr.258", %"class.std::__1::unique_ptr.258"* %57, i64 0, i32 0, i32 0, i32 0
  %59 = load %"class.headless::runtime::CallFrame"*, %"class.headless::runtime::CallFrame"** %58, align 8
  store %"class.headless::runtime::CallFrame"* null, %"class.headless::runtime::CallFrame"** %58, align 8
  %60 = icmp eq %"class.headless::runtime::CallFrame"* %59, null
  br i1 %60, label %89, label %61

61:                                               ; preds = %55
  %62 = getelementptr inbounds %"class.headless::runtime::CallFrame", %"class.headless::runtime::CallFrame"* %59, i64 0, i32 2
  %63 = bitcast %"class.std::__1::basic_string"* %62 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %64 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %63, i64 0, i32 1, i32 0
  %65 = load i8, i8* %64, align 1
  %66 = icmp slt i8 %65, 0
  br i1 %66, label %67, label %70

67:                                               ; preds = %61
  %68 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %62, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load i8*, i8** %68, align 8
  tail call void @_ZdlPv(i8* %69) #9
  br label %70

70:                                               ; preds = %67, %61
  %71 = getelementptr inbounds %"class.headless::runtime::CallFrame", %"class.headless::runtime::CallFrame"* %59, i64 0, i32 1
  %72 = bitcast %"class.std::__1::basic_string"* %71 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %73 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %72, i64 0, i32 1, i32 0
  %74 = load i8, i8* %73, align 1
  %75 = icmp slt i8 %74, 0
  br i1 %75, label %76, label %79

76:                                               ; preds = %70
  %77 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %71, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = load i8*, i8** %77, align 8
  tail call void @_ZdlPv(i8* %78) #9
  br label %79

79:                                               ; preds = %76, %70
  %80 = bitcast %"class.headless::runtime::CallFrame"* %59 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %81 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %80, i64 0, i32 1, i32 0
  %82 = load i8, i8* %81, align 1
  %83 = icmp slt i8 %82, 0
  br i1 %83, label %84, label %87

84:                                               ; preds = %79
  %85 = getelementptr inbounds %"class.headless::runtime::CallFrame", %"class.headless::runtime::CallFrame"* %59, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %86 = load i8*, i8** %85, align 8
  tail call void @_ZdlPv(i8* %86) #9
  br label %87

87:                                               ; preds = %84, %79
  %88 = bitcast %"class.headless::runtime::CallFrame"* %59 to i8*
  tail call void @_ZdlPv(i8* %88) #9
  br label %89

89:                                               ; preds = %87, %55
  %90 = icmp eq %"class.std::__1::unique_ptr.258"* %57, %48
  br i1 %90, label %91, label %55

91:                                               ; preds = %89
  %92 = bitcast %"class.std::__1::vector.256"* %46 to i8**
  %93 = load i8*, i8** %92, align 8
  br label %94

94:                                               ; preds = %50, %91
  %95 = phi i8* [ %93, %91 ], [ %51, %50 ]
  store %"class.std::__1::unique_ptr.258"* %48, %"class.std::__1::unique_ptr.258"** %52, align 8
  tail call void @_ZdlPv(i8* %95) #9
  br label %96

96:                                               ; preds = %45, %94
  %97 = getelementptr inbounds %"class.headless::runtime::StackTrace", %"class.headless::runtime::StackTrace"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %98 = load i8, i8* %97, align 8, !range !2
  %99 = icmp eq i8 %98, 0
  br i1 %99, label %110, label %100

100:                                              ; preds = %96
  %101 = getelementptr inbounds %"class.headless::runtime::StackTrace", %"class.headless::runtime::StackTrace"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %102 = bitcast %"class.std::__1::basic_string"* %101 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %103 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %102, i64 0, i32 1, i32 0
  %104 = load i8, i8* %103, align 1
  %105 = icmp slt i8 %104, 0
  br i1 %105, label %106, label %109

106:                                              ; preds = %100
  %107 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %101, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %108 = load i8*, i8** %107, align 8
  tail call void @_ZdlPv(i8* %108) #9
  br label %109

109:                                              ; preds = %106, %100
  store i8 0, i8* %97, align 8
  br label %110

110:                                              ; preds = %96, %109
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN8headless3log6DomainEFvRKNS_5ValueEEJNS0_17UnretainedWrapperIS5_EEEEEFvS8_EE3RunEPNS0_13BindStateBaseES8_(%"class.base::internal::BindStateBase"*, %"class.base::Value"* dereferenceable(32)) #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %10 = bitcast void ()** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds i8, i8* %6, i64 %11
  %13 = bitcast i8* %12 to %"class.headless::log::Domain"*
  %14 = and i64 %8, 1
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %23, label %16

16:                                               ; preds = %2
  %17 = bitcast i8* %12 to i8**
  %18 = load i8*, i8** %17, align 8
  %19 = add i64 %8, -1
  %20 = getelementptr i8, i8* %18, i64 %19
  %21 = bitcast i8* %20 to void (%"class.headless::log::Domain"*, %"class.base::Value"*)**
  %22 = load void (%"class.headless::log::Domain"*, %"class.base::Value"*)*, void (%"class.headless::log::Domain"*, %"class.base::Value"*)** %21, align 8
  br label %25

23:                                               ; preds = %2
  %24 = inttoptr i64 %8 to void (%"class.headless::log::Domain"*, %"class.base::Value"*)*
  br label %25

25:                                               ; preds = %16, %23
  %26 = phi void (%"class.headless::log::Domain"*, %"class.base::Value"*)* [ %22, %16 ], [ %24, %23 ]
  tail call void %26(%"class.headless::log::Domain"* %13, %"class.base::Value"* dereferenceable(32) %1) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN8headless3log6DomainEFvRKNS_5ValueEEJNS0_17UnretainedWrapperIS4_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #1 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #9
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless3log11ClearResultENS4_14default_deleteIS8_EEEEEEERKNS_5ValueEEJSD_EEEFvSG_EE7RunOnceEPNS0_13BindStateBaseESG_(%"class.base::internal::BindStateBase"*, %"class.base::Value"* dereferenceable(32)) #1 comdat align 2 {
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %5 = bitcast %"class.base::internal::BindStateBase"* %4 to void (%"class.base::OnceCallback"*, %"class.base::Value"*)**
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %7 = bitcast %"class.base::OnceCallback"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #10
  %8 = load void (%"class.base::OnceCallback"*, %"class.base::Value"*)*, void (%"class.base::OnceCallback"*, %"class.base::Value"*)** %5, align 8
  %9 = bitcast void ()** %6 to %"class.base::internal::BindStateBase"**
  %10 = bitcast void ()** %6 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.base::OnceCallback"* %3 to i64*
  store i64 %11, i64* %12, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %9, align 8
  call void %8(%"class.base::OnceCallback"* nonnull %3, %"class.base::Value"* dereferenceable(32) %1) #10
  %13 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %13) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless3log11ClearResultENS3_14default_deleteIS7_EEEEEEERKNS_5ValueEEJSC_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #1 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to %"class.base::internal::CallbackBase"*
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %5) #10
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #9
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless3log13DisableResultENS4_14default_deleteIS8_EEEEEEERKNS_5ValueEEJSD_EEEFvSG_EE7RunOnceEPNS0_13BindStateBaseESG_(%"class.base::internal::BindStateBase"*, %"class.base::Value"* dereferenceable(32)) #1 comdat align 2 {
  %3 = alloca %"class.base::OnceCallback.52", align 8
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %5 = bitcast %"class.base::internal::BindStateBase"* %4 to void (%"class.base::OnceCallback.52"*, %"class.base::Value"*)**
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %7 = bitcast %"class.base::OnceCallback.52"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #10
  %8 = load void (%"class.base::OnceCallback.52"*, %"class.base::Value"*)*, void (%"class.base::OnceCallback.52"*, %"class.base::Value"*)** %5, align 8
  %9 = bitcast void ()** %6 to %"class.base::internal::BindStateBase"**
  %10 = bitcast void ()** %6 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.base::OnceCallback.52"* %3 to i64*
  store i64 %11, i64* %12, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %9, align 8
  call void %8(%"class.base::OnceCallback.52"* nonnull %3, %"class.base::Value"* dereferenceable(32) %1) #10
  %13 = getelementptr inbounds %"class.base::OnceCallback.52", %"class.base::OnceCallback.52"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %13) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless3log13DisableResultENS3_14default_deleteIS7_EEEEEEERKNS_5ValueEEJSC_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #1 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to %"class.base::internal::CallbackBase"*
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %5) #10
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #9
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless3log12EnableResultENS4_14default_deleteIS8_EEEEEEERKNS_5ValueEEJSD_EEEFvSG_EE7RunOnceEPNS0_13BindStateBaseESG_(%"class.base::internal::BindStateBase"*, %"class.base::Value"* dereferenceable(32)) #1 comdat align 2 {
  %3 = alloca %"class.base::OnceCallback.59", align 8
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %5 = bitcast %"class.base::internal::BindStateBase"* %4 to void (%"class.base::OnceCallback.59"*, %"class.base::Value"*)**
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %7 = bitcast %"class.base::OnceCallback.59"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #10
  %8 = load void (%"class.base::OnceCallback.59"*, %"class.base::Value"*)*, void (%"class.base::OnceCallback.59"*, %"class.base::Value"*)** %5, align 8
  %9 = bitcast void ()** %6 to %"class.base::internal::BindStateBase"**
  %10 = bitcast void ()** %6 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.base::OnceCallback.59"* %3 to i64*
  store i64 %11, i64* %12, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %9, align 8
  call void %8(%"class.base::OnceCallback.59"* nonnull %3, %"class.base::Value"* dereferenceable(32) %1) #10
  %13 = getelementptr inbounds %"class.base::OnceCallback.59", %"class.base::OnceCallback.59"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %13) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless3log12EnableResultENS3_14default_deleteIS7_EEEEEEERKNS_5ValueEEJSC_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #1 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to %"class.base::internal::CallbackBase"*
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %5) #10
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #9
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless3log27StartViolationsReportResultENS4_14default_deleteIS8_EEEEEEERKNS_5ValueEEJSD_EEEFvSG_EE7RunOnceEPNS0_13BindStateBaseESG_(%"class.base::internal::BindStateBase"*, %"class.base::Value"* dereferenceable(32)) #1 comdat align 2 {
  %3 = alloca %"class.base::OnceCallback.79", align 8
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %5 = bitcast %"class.base::internal::BindStateBase"* %4 to void (%"class.base::OnceCallback.79"*, %"class.base::Value"*)**
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %7 = bitcast %"class.base::OnceCallback.79"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #10
  %8 = load void (%"class.base::OnceCallback.79"*, %"class.base::Value"*)*, void (%"class.base::OnceCallback.79"*, %"class.base::Value"*)** %5, align 8
  %9 = bitcast void ()** %6 to %"class.base::internal::BindStateBase"**
  %10 = bitcast void ()** %6 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.base::OnceCallback.79"* %3 to i64*
  store i64 %11, i64* %12, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %9, align 8
  call void %8(%"class.base::OnceCallback.79"* nonnull %3, %"class.base::Value"* dereferenceable(32) %1) #10
  %13 = getelementptr inbounds %"class.base::OnceCallback.79", %"class.base::OnceCallback.79"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %13) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless3log27StartViolationsReportResultENS3_14default_deleteIS7_EEEEEEERKNS_5ValueEEJSC_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #1 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to %"class.base::internal::CallbackBase"*
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %5) #10
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #9
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless3log26StopViolationsReportResultENS4_14default_deleteIS8_EEEEEEERKNS_5ValueEEJSD_EEEFvSG_EE7RunOnceEPNS0_13BindStateBaseESG_(%"class.base::internal::BindStateBase"*, %"class.base::Value"* dereferenceable(32)) #1 comdat align 2 {
  %3 = alloca %"class.base::OnceCallback.87", align 8
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %5 = bitcast %"class.base::internal::BindStateBase"* %4 to void (%"class.base::OnceCallback.87"*, %"class.base::Value"*)**
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %7 = bitcast %"class.base::OnceCallback.87"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #10
  %8 = load void (%"class.base::OnceCallback.87"*, %"class.base::Value"*)*, void (%"class.base::OnceCallback.87"*, %"class.base::Value"*)** %5, align 8
  %9 = bitcast void ()** %6 to %"class.base::internal::BindStateBase"**
  %10 = bitcast void ()** %6 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.base::OnceCallback.87"* %3 to i64*
  store i64 %11, i64* %12, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %9, align 8
  call void %8(%"class.base::OnceCallback.87"* nonnull %3, %"class.base::Value"* dereferenceable(32) %1) #10
  %13 = getelementptr inbounds %"class.base::OnceCallback.87", %"class.base::OnceCallback.87"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %13) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless3log26StopViolationsReportResultENS3_14default_deleteIS7_EEEEEEERKNS_5ValueEEJSC_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #1 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to %"class.base::internal::CallbackBase"*
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %5) #10
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #9
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"*) unnamed_addr #4

declare void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"*) local_unnamed_addr #4

declare void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"*) local_unnamed_addr #4

declare void @_ZN4base8internal12LinkNodeBaseC2EPS1_S2_(%"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"*) unnamed_addr #4

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { builtin nounwind }
attributes #10 = { nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4, !6}
!4 = distinct !{!4, !5, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEMN8headless3log6DomainEFvRKNS_5ValueEEJNS0_17UnretainedWrapperIS5_EEEEEDcOT0_DpOT1_: argument 0"}
!5 = distinct !{!5, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEMN8headless3log6DomainEFvRKNS_5ValueEEJNS0_17UnretainedWrapperIS5_EEEEEDcOT0_DpOT1_"}
!6 = distinct !{!6, !7, !"_ZN4base13BindRepeatingIMN8headless3log6DomainEFvRKNS_5ValueEEJNS_8internal17UnretainedWrapperIS3_EEEEENS_17RepeatingCallbackINS9_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSE_DpOSF_: argument 0"}
!7 = distinct !{!7, !"_ZN4base13BindRepeatingIMN8headless3log6DomainEFvRKNS_5ValueEEJNS_8internal17UnretainedWrapperIS3_EEEEENS_17RepeatingCallbackINS9_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSE_DpOSF_"}
!8 = !{!9, !11}
!9 = distinct !{!9, !10, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEMN8headless3log6DomainEFvRKNS_5ValueEEJNS0_17UnretainedWrapperIS5_EEEEEDcOT0_DpOT1_: argument 0"}
!10 = distinct !{!10, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEMN8headless3log6DomainEFvRKNS_5ValueEEJNS0_17UnretainedWrapperIS5_EEEEEDcOT0_DpOT1_"}
!11 = distinct !{!11, !12, !"_ZN4base13BindRepeatingIMN8headless3log6DomainEFvRKNS_5ValueEEJNS_8internal17UnretainedWrapperIS3_EEEEENS_17RepeatingCallbackINS9_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSE_DpOSF_: argument 0"}
!12 = distinct !{!12, !"_ZN4base13BindRepeatingIMN8headless3log6DomainEFvRKNS_5ValueEEJNS_8internal17UnretainedWrapperIS3_EEEEENS_17RepeatingCallbackINS9_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSE_DpOSF_"}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZNK4base12ObserverListIN8headless3log20ExperimentalObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv: argument 0"}
!15 = distinct !{!15, !"_ZNK4base12ObserverListIN8headless3log20ExperimentalObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv"}
!16 = !{!17}
!17 = distinct !{!17, !18, !"_ZNK4base12ObserverListIN8headless3log20ExperimentalObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv: argument 0"}
!18 = distinct !{!18, !"_ZNK4base12ObserverListIN8headless3log20ExperimentalObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv"}
!19 = distinct !{!19, !20}
!20 = !{!"llvm.loop.unroll.disable"}
!21 = distinct !{!21, !20}
!22 = !{!23, !25}
!23 = distinct !{!23, !24, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvNS2_IFvNSt3__110unique_ptrIN8headless3log11ClearResultENS3_14default_deleteIS7_EEEEEEERKNS_5ValueEEJSC_EEEDcOT0_DpOT1_: argument 0"}
!24 = distinct !{!24, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvNS2_IFvNSt3__110unique_ptrIN8headless3log11ClearResultENS3_14default_deleteIS7_EEEEEEERKNS_5ValueEEJSC_EEEDcOT0_DpOT1_"}
!25 = distinct !{!25, !26, !"_ZN4base8BindOnceIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless3log11ClearResultENS2_14default_deleteIS6_EEEEEEERKNS_5ValueEEJSB_EEENS1_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSJ_DpOSK_: argument 0"}
!26 = distinct !{!26, !"_ZN4base8BindOnceIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless3log11ClearResultENS2_14default_deleteIS6_EEEEEEERKNS_5ValueEEJSB_EEENS1_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSJ_DpOSK_"}
!27 = !{!28, !30}
!28 = distinct !{!28, !29, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvNS2_IFvNSt3__110unique_ptrIN8headless3log13DisableResultENS3_14default_deleteIS7_EEEEEEERKNS_5ValueEEJSC_EEEDcOT0_DpOT1_: argument 0"}
!29 = distinct !{!29, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvNS2_IFvNSt3__110unique_ptrIN8headless3log13DisableResultENS3_14default_deleteIS7_EEEEEEERKNS_5ValueEEJSC_EEEDcOT0_DpOT1_"}
!30 = distinct !{!30, !31, !"_ZN4base8BindOnceIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless3log13DisableResultENS2_14default_deleteIS6_EEEEEEERKNS_5ValueEEJSB_EEENS1_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSJ_DpOSK_: argument 0"}
!31 = distinct !{!31, !"_ZN4base8BindOnceIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless3log13DisableResultENS2_14default_deleteIS6_EEEEEEERKNS_5ValueEEJSB_EEENS1_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSJ_DpOSK_"}
!32 = !{!33, !35}
!33 = distinct !{!33, !34, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvNS2_IFvNSt3__110unique_ptrIN8headless3log12EnableResultENS3_14default_deleteIS7_EEEEEEERKNS_5ValueEEJSC_EEEDcOT0_DpOT1_: argument 0"}
!34 = distinct !{!34, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvNS2_IFvNSt3__110unique_ptrIN8headless3log12EnableResultENS3_14default_deleteIS7_EEEEEEERKNS_5ValueEEJSC_EEEDcOT0_DpOT1_"}
!35 = distinct !{!35, !36, !"_ZN4base8BindOnceIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless3log12EnableResultENS2_14default_deleteIS6_EEEEEEERKNS_5ValueEEJSB_EEENS1_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSJ_DpOSK_: argument 0"}
!36 = distinct !{!36, !"_ZN4base8BindOnceIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless3log12EnableResultENS2_14default_deleteIS6_EEEEEEERKNS_5ValueEEJSB_EEENS1_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSJ_DpOSK_"}
!37 = !{!38, !40}
!38 = distinct !{!38, !39, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvNS2_IFvNSt3__110unique_ptrIN8headless3log27StartViolationsReportResultENS3_14default_deleteIS7_EEEEEEERKNS_5ValueEEJSC_EEEDcOT0_DpOT1_: argument 0"}
!39 = distinct !{!39, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvNS2_IFvNSt3__110unique_ptrIN8headless3log27StartViolationsReportResultENS3_14default_deleteIS7_EEEEEEERKNS_5ValueEEJSC_EEEDcOT0_DpOT1_"}
!40 = distinct !{!40, !41, !"_ZN4base8BindOnceIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless3log27StartViolationsReportResultENS2_14default_deleteIS6_EEEEEEERKNS_5ValueEEJSB_EEENS1_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSJ_DpOSK_: argument 0"}
!41 = distinct !{!41, !"_ZN4base8BindOnceIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless3log27StartViolationsReportResultENS2_14default_deleteIS6_EEEEEEERKNS_5ValueEEJSB_EEENS1_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSJ_DpOSK_"}
!42 = !{!43, !45}
!43 = distinct !{!43, !44, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvNS2_IFvNSt3__110unique_ptrIN8headless3log26StopViolationsReportResultENS3_14default_deleteIS7_EEEEEEERKNS_5ValueEEJSC_EEEDcOT0_DpOT1_: argument 0"}
!44 = distinct !{!44, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvNS2_IFvNSt3__110unique_ptrIN8headless3log26StopViolationsReportResultENS3_14default_deleteIS7_EEEEEEERKNS_5ValueEEJSC_EEEDcOT0_DpOT1_"}
!45 = distinct !{!45, !46, !"_ZN4base8BindOnceIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless3log26StopViolationsReportResultENS2_14default_deleteIS6_EEEEEEERKNS_5ValueEEJSB_EEENS1_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSJ_DpOSK_: argument 0"}
!46 = distinct !{!46, !"_ZN4base8BindOnceIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless3log26StopViolationsReportResultENS2_14default_deleteIS6_EEEEEEERKNS_5ValueEEJSB_EEENS1_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSJ_DpOSK_"}
!47 = !{!48, !50}
!48 = distinct !{!48, !49, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEMN8headless3log6DomainEFvRKNS_5ValueEEJNS0_17UnretainedWrapperIS5_EEEEEDcOT0_DpOT1_: argument 0"}
!49 = distinct !{!49, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEMN8headless3log6DomainEFvRKNS_5ValueEEJNS0_17UnretainedWrapperIS5_EEEEEDcOT0_DpOT1_"}
!50 = distinct !{!50, !51, !"_ZN4base13BindRepeatingIMN8headless3log6DomainEFvRKNS_5ValueEEJNS_8internal17UnretainedWrapperIS3_EEEEENS_17RepeatingCallbackINS9_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSE_DpOSF_: argument 0"}
!51 = distinct !{!51, !"_ZN4base13BindRepeatingIMN8headless3log6DomainEFvRKNS_5ValueEEJNS_8internal17UnretainedWrapperIS3_EEEEENS_17RepeatingCallbackINS9_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSE_DpOSF_"}
