; ModuleID = '../../media/base/media_types.cc'
source_filename = "../../media/base/media_types.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.media::AudioDecoderConfig" = type <{ i32, i32, i32, i32, i32, i32, %"class.std::__1::vector", i32, i32, i32, i32, %"class.base::TimeDelta", i32, i8, [3 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i8*, i8*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%"class.base::TimeDelta" = type { i64 }
%"struct.media::VideoType" = type { i32, i32, i32, %"class.media::VideoColorSpace", i32 }
%"class.media::VideoColorSpace" = type { i8, i8, i8, i8 }
%"class.media::VideoDecoderConfig" = type <{ i32, i32, i32, i32, %"struct.media::VideoTransformation", %"class.gfx::Size", %"class.gfx::Rect", %"class.gfx::Size", %"class.std::__1::vector", i32, %"class.media::VideoColorSpace", %"class.absl::optional", i8, [3 x i8] }>
%"struct.media::VideoTransformation" = type <{ i32, i8, [3 x i8] }>
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"struct.gfx::HDRMetadata" }
%"struct.gfx::HDRMetadata" = type { %"struct.gfx::MasteringMetadata", i32, i32 }
%"struct.gfx::MasteringMetadata" = type { %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::PointF", float, float }
%"class.gfx::PointF" = type { float, float }
%"struct.media::AudioType" = type { i32, i32, i8 }

@switch.table._ZN5media9VideoType17FromDecoderConfigERKNS_18VideoDecoderConfigE = private unnamed_addr constant [10 x i32] [i32 10, i32 0, i32 0, i32 0, i32 0, i32 0, i32 10, i32 10, i32 1, i32 20], align 4

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden { i64, i8 } @_ZN5media9AudioType17FromDecoderConfigERKNS_18AudioDecoderConfigE(%"class.media::AudioDecoderConfig"* nocapture readonly dereferenceable(80)) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.media::AudioDecoderConfig", %"class.media::AudioDecoderConfig"* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 8
  %4 = zext i32 %3 to i64
  %5 = insertvalue { i64, i8 } undef, i64 %4, 0
  %6 = insertvalue { i64, i8 } %5, i8 0, 1
  ret { i64, i8 } %6
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5media9VideoType17FromDecoderConfigERKNS_18VideoDecoderConfigE(%"struct.media::VideoType"* noalias nocapture sret, %"class.media::VideoDecoderConfig"* nocapture readonly dereferenceable(144)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.media::VideoDecoderConfig", %"class.media::VideoDecoderConfig"* %1, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = add i32 %4, -1
  %6 = icmp ult i32 %5, 10
  br i1 %6, label %7, label %11

7:                                                ; preds = %2
  %8 = sext i32 %5 to i64
  %9 = getelementptr inbounds [10 x i32], [10 x i32]* @switch.table._ZN5media9VideoType17FromDecoderConfigERKNS_18VideoDecoderConfigE, i64 0, i64 %8
  %10 = load i32, i32* %9, align 4
  br label %11

11:                                               ; preds = %7, %2
  %12 = phi i32 [ 0, %2 ], [ %10, %7 ]
  %13 = getelementptr inbounds %"struct.media::VideoType", %"struct.media::VideoType"* %0, i64 0, i32 0
  store i32 %4, i32* %13, align 4
  %14 = getelementptr inbounds %"struct.media::VideoType", %"struct.media::VideoType"* %0, i64 0, i32 1
  %15 = getelementptr inbounds %"class.media::VideoDecoderConfig", %"class.media::VideoDecoderConfig"* %1, i64 0, i32 1
  %16 = load i32, i32* %15, align 4
  store i32 %16, i32* %14, align 4
  %17 = getelementptr inbounds %"struct.media::VideoType", %"struct.media::VideoType"* %0, i64 0, i32 2
  store i32 %12, i32* %17, align 4
  %18 = getelementptr inbounds %"class.media::VideoDecoderConfig", %"class.media::VideoDecoderConfig"* %1, i64 0, i32 10
  %19 = getelementptr inbounds %"struct.media::VideoType", %"struct.media::VideoType"* %0, i64 0, i32 3, i32 0
  %20 = bitcast %"class.media::VideoColorSpace"* %18 to i32*
  %21 = bitcast i8* %19 to i32*
  %22 = load i32, i32* %20, align 1
  store i32 %22, i32* %21, align 4
  %23 = getelementptr inbounds %"struct.media::VideoType", %"struct.media::VideoType"* %0, i64 0, i32 4
  store i32 0, i32* %23, align 4
  ret void
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN5mediaeqERKNS_9AudioTypeES2_(%"struct.media::AudioType"* dereferenceable(12), %"struct.media::AudioType"* dereferenceable(12)) local_unnamed_addr #2 {
  %3 = getelementptr inbounds %"struct.media::AudioType", %"struct.media::AudioType"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"struct.media::AudioType", %"struct.media::AudioType"* %0, i64 0, i32 2
  %5 = getelementptr inbounds %"struct.media::AudioType", %"struct.media::AudioType"* %1, i64 0, i32 0
  %6 = getelementptr inbounds %"struct.media::AudioType", %"struct.media::AudioType"* %1, i64 0, i32 2
  %7 = load i32, i32* %3, align 4
  %8 = load i32, i32* %5, align 4
  %9 = icmp eq i32 %7, %8
  br i1 %9, label %10, label %20

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.media::AudioType", %"struct.media::AudioType"* %1, i64 0, i32 1
  %12 = getelementptr inbounds %"struct.media::AudioType", %"struct.media::AudioType"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = load i32, i32* %11, align 4
  %15 = icmp eq i32 %13, %14
  br i1 %15, label %16, label %20

16:                                               ; preds = %10
  %17 = load i8, i8* %4, align 1, !range !2
  %18 = load i8, i8* %6, align 1, !range !2
  %19 = icmp eq i8 %17, %18
  br label %20

20:                                               ; preds = %2, %10, %16
  %21 = phi i1 [ false, %10 ], [ %19, %16 ], [ false, %2 ]
  ret i1 %21
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN5medianeERKNS_9AudioTypeES2_(%"struct.media::AudioType"* nocapture readonly dereferenceable(12), %"struct.media::AudioType"* nocapture readonly dereferenceable(12)) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %"struct.media::AudioType", %"struct.media::AudioType"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"struct.media::AudioType", %"struct.media::AudioType"* %0, i64 0, i32 2
  %5 = getelementptr inbounds %"struct.media::AudioType", %"struct.media::AudioType"* %1, i64 0, i32 0
  %6 = getelementptr inbounds %"struct.media::AudioType", %"struct.media::AudioType"* %1, i64 0, i32 2
  %7 = load i32, i32* %3, align 4
  %8 = load i32, i32* %5, align 4
  %9 = icmp eq i32 %7, %8
  br i1 %9, label %10, label %20

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.media::AudioType", %"struct.media::AudioType"* %1, i64 0, i32 1
  %12 = getelementptr inbounds %"struct.media::AudioType", %"struct.media::AudioType"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = load i32, i32* %11, align 4
  %15 = icmp eq i32 %13, %14
  br i1 %15, label %16, label %20

16:                                               ; preds = %10
  %17 = load i8, i8* %4, align 1, !range !2
  %18 = load i8, i8* %6, align 1, !range !2
  %19 = icmp ne i8 %17, %18
  br label %20

20:                                               ; preds = %2, %10, %16
  %21 = phi i1 [ true, %10 ], [ %19, %16 ], [ true, %2 ]
  ret i1 %21
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5mediaeqERKNS_9VideoTypeES2_(%"struct.media::VideoType"* dereferenceable(20), %"struct.media::VideoType"* dereferenceable(20)) local_unnamed_addr #3 {
  %3 = getelementptr inbounds %"struct.media::VideoType", %"struct.media::VideoType"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"struct.media::VideoType", %"struct.media::VideoType"* %0, i64 0, i32 2
  %5 = getelementptr inbounds %"struct.media::VideoType", %"struct.media::VideoType"* %0, i64 0, i32 3
  %6 = getelementptr inbounds %"struct.media::VideoType", %"struct.media::VideoType"* %1, i64 0, i32 0
  %7 = getelementptr inbounds %"struct.media::VideoType", %"struct.media::VideoType"* %1, i64 0, i32 2
  %8 = getelementptr inbounds %"struct.media::VideoType", %"struct.media::VideoType"* %1, i64 0, i32 3
  %9 = load i32, i32* %3, align 4
  %10 = load i32, i32* %6, align 4
  %11 = icmp eq i32 %9, %10
  br i1 %11, label %12, label %24

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"struct.media::VideoType", %"struct.media::VideoType"* %1, i64 0, i32 1
  %14 = getelementptr inbounds %"struct.media::VideoType", %"struct.media::VideoType"* %0, i64 0, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = load i32, i32* %13, align 4
  %17 = icmp eq i32 %15, %16
  br i1 %17, label %18, label %24

18:                                               ; preds = %12
  %19 = load i32, i32* %4, align 4
  %20 = load i32, i32* %7, align 4
  %21 = icmp eq i32 %19, %20
  br i1 %21, label %22, label %24

22:                                               ; preds = %18
  %23 = tail call zeroext i1 @_ZNK5media15VideoColorSpaceeqERKS0_(%"class.media::VideoColorSpace"* %5, %"class.media::VideoColorSpace"* dereferenceable(4) %8) #5
  br label %24

24:                                               ; preds = %2, %12, %18, %22
  %25 = phi i1 [ false, %18 ], [ %23, %22 ], [ false, %12 ], [ false, %2 ]
  ret i1 %25
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5medianeERKNS_9VideoTypeES2_(%"struct.media::VideoType"* dereferenceable(20), %"struct.media::VideoType"* dereferenceable(20)) local_unnamed_addr #3 {
  %3 = getelementptr inbounds %"struct.media::VideoType", %"struct.media::VideoType"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"struct.media::VideoType", %"struct.media::VideoType"* %0, i64 0, i32 2
  %5 = getelementptr inbounds %"struct.media::VideoType", %"struct.media::VideoType"* %0, i64 0, i32 3
  %6 = getelementptr inbounds %"struct.media::VideoType", %"struct.media::VideoType"* %1, i64 0, i32 0
  %7 = getelementptr inbounds %"struct.media::VideoType", %"struct.media::VideoType"* %1, i64 0, i32 2
  %8 = getelementptr inbounds %"struct.media::VideoType", %"struct.media::VideoType"* %1, i64 0, i32 3
  %9 = load i32, i32* %3, align 4
  %10 = load i32, i32* %6, align 4
  %11 = icmp eq i32 %9, %10
  br i1 %11, label %12, label %25

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"struct.media::VideoType", %"struct.media::VideoType"* %1, i64 0, i32 1
  %14 = getelementptr inbounds %"struct.media::VideoType", %"struct.media::VideoType"* %0, i64 0, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = load i32, i32* %13, align 4
  %17 = icmp eq i32 %15, %16
  br i1 %17, label %18, label %25

18:                                               ; preds = %12
  %19 = load i32, i32* %4, align 4
  %20 = load i32, i32* %7, align 4
  %21 = icmp eq i32 %19, %20
  br i1 %21, label %22, label %25

22:                                               ; preds = %18
  %23 = tail call zeroext i1 @_ZNK5media15VideoColorSpaceeqERKS0_(%"class.media::VideoColorSpace"* %5, %"class.media::VideoColorSpace"* dereferenceable(4) %8) #5
  %24 = xor i1 %23, true
  br label %25

25:                                               ; preds = %2, %12, %18, %22
  %26 = phi i1 [ true, %18 ], [ %24, %22 ], [ true, %12 ], [ true, %2 ]
  ret i1 %26
}

declare zeroext i1 @_ZNK5media15VideoColorSpaceeqERKS0_(%"class.media::VideoColorSpace"*, %"class.media::VideoColorSpace"* dereferenceable(4)) local_unnamed_addr #4

attributes #0 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
