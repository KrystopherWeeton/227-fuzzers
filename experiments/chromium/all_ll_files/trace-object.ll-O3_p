; ModuleID = '../../v8/src/libplatform/tracing/trace-object.cc'
source_filename = "../../v8/src/libplatform/tracing/trace-object.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.v8::platform::tracing::TraceObject" = type { i32, i32, i8, i8*, i8*, i8*, i64, i64, i32, [2 x i8*], [2 x i8], [2 x %"union.v8::platform::tracing::TraceObject::ArgValue"], [2 x %"class.std::__1::unique_ptr"], i8*, i32, i64, i64, i64, i64 }
%"union.v8::platform::tracing::TraceObject::ArgValue" = type { i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.v8::ConvertableToTraceFormat"* }
%"class.v8::ConvertableToTraceFormat" = type { i32 (...)** }

@_ZN2v88platform7tracing11TraceObjectD1Ev = hidden unnamed_addr alias void (%"class.v8::platform::tracing::TraceObject"*), void (%"class.v8::platform::tracing::TraceObject"*)* @_ZN2v88platform7tracing11TraceObjectD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88platform7tracing11TraceObject10InitializeEcPKhPKcS6_mmiPS6_S4_PKmPNSt3__110unique_ptrINS_24ConvertableToTraceFormatENSA_14default_deleteISC_EEEEjll(%"class.v8::platform::tracing::TraceObject"*, i8 signext, i8*, i8*, i8*, i64, i64, i32, i8** nocapture readonly, i8* nocapture readonly, i64* nocapture readonly, %"class.std::__1::unique_ptr"* nocapture, i32, i64, i64) local_unnamed_addr #0 align 2 {
  %16 = alloca [2 x i8], align 1
  %17 = tail call i32 @_ZN2v84base2OS19GetCurrentProcessIdEv() #8
  %18 = getelementptr inbounds %"class.v8::platform::tracing::TraceObject", %"class.v8::platform::tracing::TraceObject"* %0, i64 0, i32 0
  store i32 %17, i32* %18, align 8
  %19 = tail call i32 @_ZN2v84base2OS18GetCurrentThreadIdEv() #8
  %20 = getelementptr inbounds %"class.v8::platform::tracing::TraceObject", %"class.v8::platform::tracing::TraceObject"* %0, i64 0, i32 1
  store i32 %19, i32* %20, align 4
  %21 = getelementptr inbounds %"class.v8::platform::tracing::TraceObject", %"class.v8::platform::tracing::TraceObject"* %0, i64 0, i32 2
  store i8 %1, i8* %21, align 8
  %22 = getelementptr inbounds %"class.v8::platform::tracing::TraceObject", %"class.v8::platform::tracing::TraceObject"* %0, i64 0, i32 5
  store i8* %2, i8** %22, align 8
  %23 = getelementptr inbounds %"class.v8::platform::tracing::TraceObject", %"class.v8::platform::tracing::TraceObject"* %0, i64 0, i32 3
  store i8* %3, i8** %23, align 8
  %24 = getelementptr inbounds %"class.v8::platform::tracing::TraceObject", %"class.v8::platform::tracing::TraceObject"* %0, i64 0, i32 4
  store i8* %4, i8** %24, align 8
  %25 = getelementptr inbounds %"class.v8::platform::tracing::TraceObject", %"class.v8::platform::tracing::TraceObject"* %0, i64 0, i32 6
  store i64 %5, i64* %25, align 8
  %26 = getelementptr inbounds %"class.v8::platform::tracing::TraceObject", %"class.v8::platform::tracing::TraceObject"* %0, i64 0, i32 7
  store i64 %6, i64* %26, align 8
  %27 = getelementptr inbounds %"class.v8::platform::tracing::TraceObject", %"class.v8::platform::tracing::TraceObject"* %0, i64 0, i32 14
  store i32 %12, i32* %27, align 8
  %28 = getelementptr inbounds %"class.v8::platform::tracing::TraceObject", %"class.v8::platform::tracing::TraceObject"* %0, i64 0, i32 15
  store i64 %13, i64* %28, align 8
  %29 = getelementptr inbounds %"class.v8::platform::tracing::TraceObject", %"class.v8::platform::tracing::TraceObject"* %0, i64 0, i32 16
  store i64 %14, i64* %29, align 8
  %30 = getelementptr inbounds %"class.v8::platform::tracing::TraceObject", %"class.v8::platform::tracing::TraceObject"* %0, i64 0, i32 17
  %31 = icmp slt i32 %7, 2
  %32 = select i1 %31, i32 %7, i32 2
  %33 = getelementptr inbounds %"class.v8::platform::tracing::TraceObject", %"class.v8::platform::tracing::TraceObject"* %0, i64 0, i32 8
  %34 = bitcast i64* %30 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 16, i1 false)
  store i32 %32, i32* %33, align 8
  %35 = icmp sgt i32 %7, 0
  br i1 %35, label %40, label %36

36:                                               ; preds = %70, %15
  %37 = phi i32 [ %32, %15 ], [ %72, %70 ]
  %38 = and i32 %12, 1
  %39 = icmp ne i32 %38, 0
  br i1 %39, label %75, label %113

40:                                               ; preds = %15, %70
  %41 = phi i64 [ %71, %70 ], [ 0, %15 ]
  %42 = getelementptr inbounds i8*, i8** %8, i64 %41
  %43 = bitcast i8** %42 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = getelementptr inbounds %"class.v8::platform::tracing::TraceObject", %"class.v8::platform::tracing::TraceObject"* %0, i64 0, i32 9, i64 %41
  %46 = bitcast i8** %45 to i64*
  store i64 %44, i64* %46, align 8
  %47 = getelementptr inbounds i64, i64* %10, i64 %41
  %48 = load i64, i64* %47, align 8
  %49 = getelementptr inbounds %"class.v8::platform::tracing::TraceObject", %"class.v8::platform::tracing::TraceObject"* %0, i64 0, i32 11, i64 %41, i32 0
  store i64 %48, i64* %49, align 8
  %50 = getelementptr inbounds i8, i8* %9, i64 %41
  %51 = load i8, i8* %50, align 1
  %52 = getelementptr inbounds %"class.v8::platform::tracing::TraceObject", %"class.v8::platform::tracing::TraceObject"* %0, i64 0, i32 10, i64 %41
  store i8 %51, i8* %52, align 1
  %53 = load i8, i8* %50, align 1
  %54 = icmp eq i8 %53, 8
  br i1 %54, label %55, label %70

55:                                               ; preds = %40
  %56 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %11, i64 %41
  %57 = getelementptr inbounds %"class.v8::platform::tracing::TraceObject", %"class.v8::platform::tracing::TraceObject"* %0, i64 0, i32 12, i64 %41
  %58 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %56, i64 0, i32 0, i32 0, i32 0
  %59 = bitcast %"class.std::__1::unique_ptr"* %56 to i64*
  %60 = load i64, i64* %59, align 8
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %58, align 8
  %61 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %57, i64 0, i32 0, i32 0, i32 0
  %62 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %61, align 8
  %63 = bitcast %"class.std::__1::unique_ptr"* %57 to i64*
  store i64 %60, i64* %63, align 8
  %64 = icmp eq %"class.v8::ConvertableToTraceFormat"* %62, null
  br i1 %64, label %70, label %65

65:                                               ; preds = %55
  %66 = bitcast %"class.v8::ConvertableToTraceFormat"* %62 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %67 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %66, align 8
  %68 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %67, i64 1
  %69 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %68, align 8
  tail call void %69(%"class.v8::ConvertableToTraceFormat"* nonnull %62) #8
  br label %70

70:                                               ; preds = %65, %55, %40
  %71 = add nuw nsw i64 %41, 1
  %72 = load i32, i32* %33, align 8
  %73 = sext i32 %72 to i64
  %74 = icmp slt i64 %71, %73
  br i1 %74, label %40, label %36

75:                                               ; preds = %36
  %76 = icmp eq i8* %3, null
  br i1 %76, label %80, label %77

77:                                               ; preds = %75
  %78 = tail call i64 @strlen(i8* nonnull %3) #9
  %79 = add i64 %78, 1
  br label %80

80:                                               ; preds = %75, %77
  %81 = phi i64 [ %79, %77 ], [ 0, %75 ]
  %82 = icmp eq i8* %4, null
  br i1 %82, label %86, label %83

83:                                               ; preds = %80
  %84 = tail call i64 @strlen(i8* nonnull %4) #9
  %85 = add i64 %84, 1
  br label %86

86:                                               ; preds = %80, %83
  %87 = phi i64 [ %85, %83 ], [ 0, %80 ]
  %88 = add i64 %87, %81
  %89 = icmp sgt i32 %37, 0
  br i1 %89, label %92, label %90

90:                                               ; preds = %86
  %91 = getelementptr inbounds [2 x i8], [2 x i8]* %16, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %91) #8
  br label %119

92:                                               ; preds = %86
  %93 = zext i32 %37 to i64
  br label %94

94:                                               ; preds = %110, %92
  %95 = phi i64 [ 0, %92 ], [ %111, %110 ]
  %96 = phi i64 [ %88, %92 ], [ %105, %110 ]
  %97 = getelementptr inbounds %"class.v8::platform::tracing::TraceObject", %"class.v8::platform::tracing::TraceObject"* %0, i64 0, i32 9, i64 %95
  %98 = load i8*, i8** %97, align 8
  %99 = icmp eq i8* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %94
  %101 = tail call i64 @strlen(i8* nonnull %98) #9
  %102 = add i64 %101, 1
  br label %103

103:                                              ; preds = %94, %100
  %104 = phi i64 [ %102, %100 ], [ 0, %94 ]
  %105 = add i64 %104, %96
  %106 = getelementptr inbounds %"class.v8::platform::tracing::TraceObject", %"class.v8::platform::tracing::TraceObject"* %0, i64 0, i32 10, i64 %95
  %107 = load i8, i8* %106, align 1
  %108 = icmp eq i8 %107, 6
  br i1 %108, label %109, label %110

109:                                              ; preds = %103
  store i8 7, i8* %106, align 1
  br label %110

110:                                              ; preds = %103, %109
  %111 = add nuw nsw i64 %95, 1
  %112 = icmp eq i64 %111, %93
  br i1 %112, label %113, label %94

113:                                              ; preds = %110, %36
  %114 = phi i64 [ 0, %36 ], [ %105, %110 ]
  %115 = getelementptr inbounds [2 x i8], [2 x i8]* %16, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %115) #8
  %116 = icmp sgt i32 %37, 0
  br i1 %116, label %117, label %119

117:                                              ; preds = %113
  %118 = zext i32 %37 to i64
  br label %123

119:                                              ; preds = %142, %90, %113
  %120 = phi i8* [ %115, %113 ], [ %91, %90 ], [ %115, %142 ]
  %121 = phi i64 [ %114, %113 ], [ %88, %90 ], [ %143, %142 ]
  %122 = icmp eq i64 %121, 0
  br i1 %122, label %231, label %146

123:                                              ; preds = %142, %117
  %124 = phi i64 [ 0, %117 ], [ %144, %142 ]
  %125 = phi i64 [ %114, %117 ], [ %143, %142 ]
  %126 = getelementptr inbounds %"class.v8::platform::tracing::TraceObject", %"class.v8::platform::tracing::TraceObject"* %0, i64 0, i32 10, i64 %124
  %127 = load i8, i8* %126, align 1
  %128 = icmp eq i8 %127, 7
  %129 = getelementptr inbounds [2 x i8], [2 x i8]* %16, i64 0, i64 %124
  %130 = zext i1 %128 to i8
  store i8 %130, i8* %129, align 1
  br i1 %128, label %131, label %142

131:                                              ; preds = %123
  %132 = getelementptr inbounds %"class.v8::platform::tracing::TraceObject", %"class.v8::platform::tracing::TraceObject"* %0, i64 0, i32 11, i64 %124
  %133 = bitcast %"union.v8::platform::tracing::TraceObject::ArgValue"* %132 to i8**
  %134 = load i8*, i8** %133, align 8
  %135 = icmp eq i8* %134, null
  br i1 %135, label %139, label %136

136:                                              ; preds = %131
  %137 = tail call i64 @strlen(i8* nonnull %134) #9
  %138 = add i64 %137, 1
  br label %139

139:                                              ; preds = %131, %136
  %140 = phi i64 [ %138, %136 ], [ 0, %131 ]
  %141 = add i64 %140, %125
  br label %142

142:                                              ; preds = %123, %139
  %143 = phi i64 [ %141, %139 ], [ %125, %123 ]
  %144 = add nuw nsw i64 %124, 1
  %145 = icmp eq i64 %144, %118
  br i1 %145, label %119, label %123

146:                                              ; preds = %119
  %147 = getelementptr inbounds %"class.v8::platform::tracing::TraceObject", %"class.v8::platform::tracing::TraceObject"* %0, i64 0, i32 13
  %148 = load i8*, i8** %147, align 8
  %149 = icmp eq i8* %148, null
  br i1 %149, label %151, label %150

150:                                              ; preds = %146
  tail call void @_ZdaPv(i8* nonnull %148) #10
  br label %151

151:                                              ; preds = %150, %146
  %152 = tail call i8* @_Znam(i64 %121) #10
  store i8* %152, i8** %147, align 8
  %153 = ptrtoint i8* %152 to i64
  br i1 %39, label %156, label %154

154:                                              ; preds = %151
  %155 = load i32, i32* %33, align 8
  br label %201

156:                                              ; preds = %151
  %157 = load i8*, i8** %23, align 8
  %158 = icmp eq i8* %157, null
  br i1 %158, label %165, label %159

159:                                              ; preds = %156
  %160 = tail call i64 @strlen(i8* nonnull %157) #9
  %161 = add i64 %160, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %152, i8* nonnull align 1 %157, i64 %161, i1 false) #8
  %162 = bitcast i8** %23 to i64*
  store i64 %153, i64* %162, align 8
  %163 = getelementptr inbounds i8, i8* %152, i64 %161
  %164 = ptrtoint i8* %163 to i64
  br label %165

165:                                              ; preds = %156, %159
  %166 = phi i64 [ %153, %156 ], [ %164, %159 ]
  %167 = load i8*, i8** %24, align 8
  %168 = icmp eq i8* %167, null
  br i1 %168, label %176, label %169

169:                                              ; preds = %165
  %170 = tail call i64 @strlen(i8* nonnull %167) #9
  %171 = add i64 %170, 1
  %172 = inttoptr i64 %166 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %172, i8* nonnull align 1 %167, i64 %171, i1 false) #8
  %173 = bitcast i8** %24 to i64*
  store i64 %166, i64* %173, align 8
  %174 = getelementptr inbounds i8, i8* %172, i64 %171
  %175 = ptrtoint i8* %174 to i64
  br label %176

176:                                              ; preds = %165, %169
  %177 = phi i64 [ %166, %165 ], [ %175, %169 ]
  %178 = load i32, i32* %33, align 8
  %179 = icmp sgt i32 %178, 0
  br i1 %179, label %180, label %231

180:                                              ; preds = %176, %195
  %181 = phi i32 [ %196, %195 ], [ %178, %176 ]
  %182 = phi i64 [ %198, %195 ], [ 0, %176 ]
  %183 = phi i64 [ %197, %195 ], [ %177, %176 ]
  %184 = getelementptr inbounds %"class.v8::platform::tracing::TraceObject", %"class.v8::platform::tracing::TraceObject"* %0, i64 0, i32 9, i64 %182
  %185 = load i8*, i8** %184, align 8
  %186 = icmp eq i8* %185, null
  br i1 %186, label %195, label %187

187:                                              ; preds = %180
  %188 = tail call i64 @strlen(i8* nonnull %185) #9
  %189 = add i64 %188, 1
  %190 = inttoptr i64 %183 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %190, i8* nonnull align 1 %185, i64 %189, i1 false) #8
  %191 = bitcast i8** %184 to i64*
  store i64 %183, i64* %191, align 8
  %192 = getelementptr inbounds i8, i8* %190, i64 %189
  %193 = ptrtoint i8* %192 to i64
  %194 = load i32, i32* %33, align 8
  br label %195

195:                                              ; preds = %180, %187
  %196 = phi i32 [ %181, %180 ], [ %194, %187 ]
  %197 = phi i64 [ %183, %180 ], [ %193, %187 ]
  %198 = add nuw nsw i64 %182, 1
  %199 = sext i32 %196 to i64
  %200 = icmp slt i64 %198, %199
  br i1 %200, label %180, label %201

201:                                              ; preds = %195, %154
  %202 = phi i32 [ %155, %154 ], [ %196, %195 ]
  %203 = phi i64 [ %153, %154 ], [ %197, %195 ]
  %204 = icmp sgt i32 %202, 0
  br i1 %204, label %205, label %231

205:                                              ; preds = %201, %225
  %206 = phi i32 [ %226, %225 ], [ %202, %201 ]
  %207 = phi i64 [ %228, %225 ], [ 0, %201 ]
  %208 = phi i64 [ %227, %225 ], [ %203, %201 ]
  %209 = getelementptr inbounds [2 x i8], [2 x i8]* %16, i64 0, i64 %207
  %210 = load i8, i8* %209, align 1, !range !2
  %211 = icmp eq i8 %210, 0
  br i1 %211, label %225, label %212

212:                                              ; preds = %205
  %213 = getelementptr inbounds %"class.v8::platform::tracing::TraceObject", %"class.v8::platform::tracing::TraceObject"* %0, i64 0, i32 11, i64 %207
  %214 = bitcast %"union.v8::platform::tracing::TraceObject::ArgValue"* %213 to i8**
  %215 = load i8*, i8** %214, align 8
  %216 = icmp eq i8* %215, null
  br i1 %216, label %225, label %217

217:                                              ; preds = %212
  %218 = tail call i64 @strlen(i8* nonnull %215) #9
  %219 = add i64 %218, 1
  %220 = inttoptr i64 %208 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %220, i8* nonnull align 1 %215, i64 %219, i1 false) #8
  %221 = getelementptr inbounds %"union.v8::platform::tracing::TraceObject::ArgValue", %"union.v8::platform::tracing::TraceObject::ArgValue"* %213, i64 0, i32 0
  store i64 %208, i64* %221, align 8
  %222 = getelementptr inbounds i8, i8* %220, i64 %219
  %223 = ptrtoint i8* %222 to i64
  %224 = load i32, i32* %33, align 8
  br label %225

225:                                              ; preds = %217, %212, %205
  %226 = phi i32 [ %206, %205 ], [ %206, %212 ], [ %224, %217 ]
  %227 = phi i64 [ %208, %205 ], [ %208, %212 ], [ %223, %217 ]
  %228 = add nuw nsw i64 %207, 1
  %229 = sext i32 %226 to i64
  %230 = icmp slt i64 %228, %229
  br i1 %230, label %205, label %231

231:                                              ; preds = %225, %176, %201, %119
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %120) #8
  ret void
}

declare i32 @_ZN2v84base2OS19GetCurrentProcessIdEv() local_unnamed_addr #1

declare i32 @_ZN2v84base2OS18GetCurrentThreadIdEv() local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88platform7tracing11TraceObjectD2Ev(%"class.v8::platform::tracing::TraceObject"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::platform::tracing::TraceObject", %"class.v8::platform::tracing::TraceObject"* %0, i64 0, i32 13
  %3 = load i8*, i8** %2, align 8
  %4 = icmp eq i8* %3, null
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @_ZdaPv(i8* nonnull %3) #10
  br label %6

6:                                                ; preds = %5, %1
  %7 = getelementptr inbounds %"class.v8::platform::tracing::TraceObject", %"class.v8::platform::tracing::TraceObject"* %0, i64 0, i32 12, i64 1, i32 0, i32 0, i32 0
  %8 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %7, align 8
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %7, align 8
  %9 = icmp eq %"class.v8::ConvertableToTraceFormat"* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6
  %11 = bitcast %"class.v8::ConvertableToTraceFormat"* %8 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %12 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %12, i64 1
  %14 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %13, align 8
  tail call void %14(%"class.v8::ConvertableToTraceFormat"* nonnull %8) #8
  br label %15

15:                                               ; preds = %6, %10
  %16 = getelementptr inbounds %"class.v8::platform::tracing::TraceObject", %"class.v8::platform::tracing::TraceObject"* %0, i64 0, i32 12, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %16, align 8
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %16, align 8
  %18 = icmp eq %"class.v8::ConvertableToTraceFormat"* %17, null
  br i1 %18, label %24, label %19

19:                                               ; preds = %15
  %20 = bitcast %"class.v8::ConvertableToTraceFormat"* %17 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %21 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %21, i64 1
  %23 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %22, align 8
  tail call void %23(%"class.v8::ConvertableToTraceFormat"* nonnull %17) #8
  br label %24

24:                                               ; preds = %19, %15
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v88platform7tracing11TraceObject14UpdateDurationEll(%"class.v8::platform::tracing::TraceObject"* nocapture, i64, i64) local_unnamed_addr #5 align 2 {
  %4 = getelementptr inbounds %"class.v8::platform::tracing::TraceObject", %"class.v8::platform::tracing::TraceObject"* %0, i64 0, i32 15
  %5 = getelementptr inbounds %"class.v8::platform::tracing::TraceObject", %"class.v8::platform::tracing::TraceObject"* %0, i64 0, i32 17
  %6 = bitcast i64* %4 to <2 x i64>*
  %7 = load <2 x i64>, <2 x i64>* %6, align 8
  %8 = insertelement <2 x i64> undef, i64 %1, i32 0
  %9 = insertelement <2 x i64> %8, i64 %2, i32 1
  %10 = sub nsw <2 x i64> %9, %7
  %11 = bitcast i64* %5 to <2 x i64>*
  store <2 x i64> %10, <2 x i64>* %11, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2v88platform7tracing11TraceObject20InitializeForTestingEcPKhPKcS6_mmiPS6_S4_PKmPNSt3__110unique_ptrINS_24ConvertableToTraceFormatENSA_14default_deleteISC_EEEEjiillmm(%"class.v8::platform::tracing::TraceObject"* nocapture, i8 signext, i8*, i8*, i8*, i64, i64, i32, i8** nocapture readnone, i8* nocapture readnone, i64* nocapture readnone, %"class.std::__1::unique_ptr"* nocapture readnone, i32, i32, i32, i64, i64, i64, i64) local_unnamed_addr #6 align 2 {
  %20 = getelementptr inbounds %"class.v8::platform::tracing::TraceObject", %"class.v8::platform::tracing::TraceObject"* %0, i64 0, i32 0
  store i32 %13, i32* %20, align 8
  %21 = getelementptr inbounds %"class.v8::platform::tracing::TraceObject", %"class.v8::platform::tracing::TraceObject"* %0, i64 0, i32 1
  store i32 %14, i32* %21, align 4
  %22 = getelementptr inbounds %"class.v8::platform::tracing::TraceObject", %"class.v8::platform::tracing::TraceObject"* %0, i64 0, i32 2
  store i8 %1, i8* %22, align 8
  %23 = getelementptr inbounds %"class.v8::platform::tracing::TraceObject", %"class.v8::platform::tracing::TraceObject"* %0, i64 0, i32 5
  store i8* %2, i8** %23, align 8
  %24 = getelementptr inbounds %"class.v8::platform::tracing::TraceObject", %"class.v8::platform::tracing::TraceObject"* %0, i64 0, i32 3
  store i8* %3, i8** %24, align 8
  %25 = getelementptr inbounds %"class.v8::platform::tracing::TraceObject", %"class.v8::platform::tracing::TraceObject"* %0, i64 0, i32 4
  store i8* %4, i8** %25, align 8
  %26 = getelementptr inbounds %"class.v8::platform::tracing::TraceObject", %"class.v8::platform::tracing::TraceObject"* %0, i64 0, i32 6
  store i64 %5, i64* %26, align 8
  %27 = getelementptr inbounds %"class.v8::platform::tracing::TraceObject", %"class.v8::platform::tracing::TraceObject"* %0, i64 0, i32 7
  store i64 %6, i64* %27, align 8
  %28 = getelementptr inbounds %"class.v8::platform::tracing::TraceObject", %"class.v8::platform::tracing::TraceObject"* %0, i64 0, i32 8
  store i32 %7, i32* %28, align 8
  %29 = getelementptr inbounds %"class.v8::platform::tracing::TraceObject", %"class.v8::platform::tracing::TraceObject"* %0, i64 0, i32 14
  store i32 %12, i32* %29, align 8
  %30 = getelementptr inbounds %"class.v8::platform::tracing::TraceObject", %"class.v8::platform::tracing::TraceObject"* %0, i64 0, i32 15
  store i64 %15, i64* %30, align 8
  %31 = getelementptr inbounds %"class.v8::platform::tracing::TraceObject", %"class.v8::platform::tracing::TraceObject"* %0, i64 0, i32 16
  store i64 %16, i64* %31, align 8
  %32 = getelementptr inbounds %"class.v8::platform::tracing::TraceObject", %"class.v8::platform::tracing::TraceObject"* %0, i64 0, i32 17
  store i64 %17, i64* %32, align 8
  %33 = getelementptr inbounds %"class.v8::platform::tracing::TraceObject", %"class.v8::platform::tracing::TraceObject"* %0, i64 0, i32 18
  store i64 %18, i64* %33, align 8
  ret void
}

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { nounwind readonly }
attributes #10 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
