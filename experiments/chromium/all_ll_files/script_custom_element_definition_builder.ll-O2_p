; ModuleID = '../../third_party/blink/renderer/bindings/core/v8/script_custom_element_definition_builder.cc'
source_filename = "../../third_party/blink/renderer/bindings/core/v8/script_custom_element_definition_builder.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr", i32, [4 x i8], %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.138", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.148", %"class.std::__1::unique_ptr.154", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.166", %"class.std::__1::unique_ptr.172", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.179", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.11", %"class.std::__1::unique_ptr.15", %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.33", %"class.std::__1::unique_ptr.39", %"class.std::__1::unique_ptr.50", %"class.std::__1::unique_ptr.57", %"class.std::__1::unique_ptr.57", %"class.std::__1::unique_ptr.64", %"class.std::__1::unique_ptr.71", %"class.std::__1::unique_ptr.78", %"class.std::__1::unique_ptr.78", %"class.std::__1::unique_ptr.85", %"class.std::__1::unique_ptr.92", %"class.std::__1::unique_ptr.99", %"class.std::__1::unique_ptr.122", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.11" = type { %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.15" = type { %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.21" = type { %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.27" = type { %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.33" = type { %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.39" = type { %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.42" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.42" = type { %"struct.std::__1::__atomic_base.43" }
%"struct.std::__1::__atomic_base.43" = type { %"struct.std::__1::__atomic_base.44" }
%"struct.std::__1::__atomic_base.44" = type { %"struct.std::__1::__cxx_atomic_impl.45" }
%"struct.std::__1::__cxx_atomic_impl.45" = type { %"struct.std::__1::__cxx_atomic_base_impl.46" }
%"struct.std::__1::__cxx_atomic_base_impl.46" = type { i64 }
%"class.std::__1::unique_ptr.50" = type { %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %"class.blink::Worklist.53"* }
%"class.blink::Worklist.53" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.42" }
%"class.std::__1::unique_ptr.57" = type { %"class.std::__1::__compressed_pair.58" }
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"struct.std::__1::__compressed_pair_elem.59" = type { %"class.blink::Worklist.60"* }
%"class.blink::Worklist.60" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.42" }
%"class.std::__1::unique_ptr.64" = type { %"class.std::__1::__compressed_pair.65" }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.66" }
%"struct.std::__1::__compressed_pair_elem.66" = type { %"class.blink::Worklist.67"* }
%"class.blink::Worklist.67" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.42" }
%"class.std::__1::unique_ptr.71" = type { %"class.std::__1::__compressed_pair.72" }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.73" = type { %"class.blink::Worklist.74"* }
%"class.blink::Worklist.74" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.42" }
%"class.std::__1::unique_ptr.78" = type { %"class.std::__1::__compressed_pair.79" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"class.blink::Worklist.81"* }
%"class.blink::Worklist.81" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.42" }
%"class.std::__1::unique_ptr.85" = type { %"class.std::__1::__compressed_pair.86" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"struct.std::__1::__compressed_pair_elem.87" = type { %"class.blink::Worklist.88"* }
%"class.blink::Worklist.88" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.42" }
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.blink::Worklist.95"* }
%"class.blink::Worklist.95" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.42" }
%"class.std::__1::unique_ptr.99" = type { %"class.std::__1::__compressed_pair.100" }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.101" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.102", %"class.std::__1::__compressed_pair.109", %"class.std::__1::__compressed_pair.114", %"class.std::__1::__compressed_pair.116", [4 x i8] }>
%"class.std::__1::unique_ptr.102" = type { %"class.std::__1::__compressed_pair.103" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104", %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.104" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.106" }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { i64 }
%"class.std::__1::__compressed_pair.109" = type { %"struct.std::__1::__compressed_pair_elem.110" }
%"struct.std::__1::__compressed_pair_elem.110" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.117" = type { float }
%"class.std::__1::unique_ptr.122" = type { %"class.std::__1::__compressed_pair.123" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.125", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.125" = type { %"class.std::__1::__compressed_pair.126" }
%"class.std::__1::__compressed_pair.126" = type { %"struct.std::__1::__compressed_pair_elem.127" }
%"struct.std::__1::__compressed_pair_elem.127" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.146" }
%"class.WTF::VectorBuffer.146" = type { %"class.WTF::VectorBufferBase.147" }
%"class.WTF::VectorBufferBase.147" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.148" = type { %"class.std::__1::__compressed_pair.149" }
%"class.std::__1::__compressed_pair.149" = type { %"struct.std::__1::__compressed_pair_elem.150" }
%"struct.std::__1::__compressed_pair_elem.150" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.154" = type { %"class.std::__1::__compressed_pair.155" }
%"class.std::__1::__compressed_pair.155" = type { %"struct.std::__1::__compressed_pair_elem.156" }
%"struct.std::__1::__compressed_pair_elem.156" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.160" }
%"class.std::__1::unique_ptr.160" = type { %"class.std::__1::__compressed_pair.161" }
%"class.std::__1::__compressed_pair.161" = type { %"struct.std::__1::__compressed_pair_elem.162" }
%"struct.std::__1::__compressed_pair_elem.162" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.53"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.60"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.67"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.74"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.81"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.198" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.166" = type { %"class.std::__1::__compressed_pair.167" }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.168" }
%"struct.std::__1::__compressed_pair_elem.168" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.172" = type { %"class.std::__1::__compressed_pair.173" }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.174" }
%"struct.std::__1::__compressed_pair_elem.174" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.178 }
%class.scoped_refptr.178 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.179" = type { %"struct.std::__1::__atomic_base.180" }
%"struct.std::__1::__atomic_base.180" = type { %"struct.std::__1::__cxx_atomic_impl.181" }
%"struct.std::__1::__cxx_atomic_impl.181" = type { %"struct.std::__1::__cxx_atomic_base_impl.182" }
%"struct.std::__1::__cxx_atomic_base_impl.182" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::ScriptCustomElementDefinitionBuilder" = type { %"class.blink::CustomElementDefinitionBuilder", %"class.blink::ExceptionState"*, %"class.blink::ScriptCustomElementDefinitionData", %"class.v8::Local", %"class.v8::Local", %"class.v8::Local", %"class.v8::Local", %"class.v8::Local", %"class.v8::Local", %"class.v8::Local", %"class.v8::Local" }
%"class.blink::CustomElementDefinitionBuilder" = type { i32 (...)** }
%"class.blink::ScriptCustomElementDefinitionData" = type <{ %"class.blink::ScriptState"*, %"class.blink::CustomElementRegistry"*, %"class.blink::V8CustomElementConstructor"*, %"class.blink::V8VoidFunction"*, %"class.blink::V8VoidFunction"*, %"class.blink::V8CustomElementAdoptedCallback"*, %"class.blink::V8CustomElementAttributeChangedCallback"*, %"class.blink::V8CustomElementFormAssociatedCallback"*, %"class.blink::V8VoidFunction"*, %"class.blink::V8CustomElementFormDisabledCallback"*, %"class.blink::V8CustomElementFormStateRestoreCallback"*, %"class.WTF::HashSet", %"class.WTF::Vector.193", i8, [7 x i8] }>
%"class.blink::V8CustomElementAdoptedCallback" = type { %"class.blink::CallbackFunctionBase" }
%"class.blink::CallbackFunctionBase" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference.8", %"class.blink::Member.188", %"class.blink::Member.188" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference.8" = type { %"class.v8::TracedReference.9" }
%"class.v8::TracedReference.9" = type { %"class.v8::BasicTracedReference.10" }
%"class.v8::BasicTracedReference.10" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.188" = type { %"class.blink::MemberBase.189" }
%"class.blink::MemberBase.189" = type { %"class.blink::ScriptState"* }
%"class.blink::V8CustomElementAttributeChangedCallback" = type { %"class.blink::CallbackFunctionBase" }
%"class.blink::V8CustomElementFormAssociatedCallback" = type { %"class.blink::CallbackFunctionBase" }
%"class.blink::V8VoidFunction" = type { %"class.blink::CallbackFunctionBase" }
%"class.blink::V8CustomElementFormDisabledCallback" = type { %"class.blink::CallbackFunctionBase" }
%"class.blink::V8CustomElementFormStateRestoreCallback" = type { %"class.blink::CallbackFunctionBase" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.190" }
%"class.WTF::HashTable.190" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::Vector.193" = type { %"class.WTF::VectorBuffer.194" }
%"class.WTF::VectorBuffer.194" = type { %"class.WTF::VectorBufferBase.195" }
%"class.WTF::VectorBufferBase.195" = type { %"class.WTF::String"*, i32, i32 }
%"class.v8::Local" = type { %"class.v8::Value"* }
%"class.v8::Value" = type { i8 }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.1, %"class.blink::Member", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%"class.v8::Context" = type { i8 }
%class.scoped_refptr.1 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.blink::WeakMember", %"class.blink::TraceWrapperV8Reference.8" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference.8" }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::Member" = type { %"class.blink::MemberBase.183" }
%"class.blink::MemberBase.183" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.184" }
%"class.blink::Persistent.184" = type { %"class.blink::PersistentBase.185" }
%"class.blink::PersistentBase.185" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.blink::CustomElementRegistry" = type opaque
%"class.blink::V8CustomElementConstructor" = type { %"class.blink::CallbackFunctionBase" }
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::Object" = type { i8 }
%"class.v8::internal::Isolate" = type opaque
%"class.blink::ScriptCustomElementDefinition" = type { %"class.blink::CustomElementDefinition", %"class.blink::Member.188", %"class.blink::Member.249", %"class.blink::Member.251", %"class.blink::Member.251", %"class.blink::Member.253", %"class.blink::Member.255", %"class.blink::Member.257", %"class.blink::Member.251", %"class.blink::Member.259", %"class.blink::Member.261" }
%"class.blink::CustomElementDefinition" = type { %"class.blink::NameClient", %"class.blink::CustomElementDescriptor", %"class.blink::HeapVector", %"class.WTF::HashSet", i8, i8, i8, i8, i8, %"class.blink::HeapVector.241" }
%"class.blink::CustomElementDescriptor" = type { %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.207" }
%"class.WTF::Vector.207" = type { %"class.WTF::VectorBuffer.208" }
%"class.WTF::VectorBuffer.208" = type { %"class.WTF::VectorBufferBase.209", [8 x i8] }
%"class.WTF::VectorBufferBase.209" = type { %"class.blink::Member.210"*, i32, i32 }
%"class.blink::Member.210" = type { %"class.blink::MemberBase.211" }
%"class.blink::MemberBase.211" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.223" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.212", %"class.blink::Member.212" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.212", %"class.blink::Member.214", %"class.blink::Member.212", %"class.blink::Member.212", %"class.blink::Member.216" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.214" = type { %"class.blink::MemberBase.215" }
%"class.blink::MemberBase.215" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.263", %"class.blink::Member.265", %"class.blink::Member.214", %"class.blink::Member.267", %"class.blink::Member.267", %"class.blink::Member.288", %"class.blink::Member.290", %"class.blink::Member.292", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.297", %"class.blink::HeapVector.241" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.263" = type { %"class.blink::MemberBase.264" }
%"class.blink::MemberBase.264" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.265" = type { %"class.blink::MemberBase.266" }
%"class.blink::MemberBase.266" = type { %"class.blink::Document"* }
%"class.blink::Document" = type opaque
%"class.blink::Member.267" = type { %"class.blink::MemberBase.268" }
%"class.blink::MemberBase.268" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.271" }
%"class.blink::HeapHashMap.271" = type { %"class.WTF::HashMap.274" }
%"class.WTF::HashMap.274" = type { %"class.WTF::HashTable.275" }
%"class.WTF::HashTable.275" = type <{ %"struct.WTF::KeyValuePair.277"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.277" = type { %"class.WTF::AtomicString", %"class.blink::Member.278" }
%"class.blink::Member.278" = type { %"class.blink::MemberBase.279" }
%"class.blink::MemberBase.279" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.210", i32, %"class.blink::HeapVector.282" }
%"class.blink::HeapVector.282" = type { %"class.WTF::Vector.285" }
%"class.WTF::Vector.285" = type { %"class.WTF::VectorBuffer.286" }
%"class.WTF::VectorBuffer.286" = type { %"class.WTF::VectorBufferBase.209" }
%"class.blink::Member.288" = type { %"class.blink::MemberBase.289" }
%"class.blink::MemberBase.289" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.290" = type { %"class.blink::MemberBase.291" }
%"class.blink::MemberBase.291" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.292" = type { %"class.blink::MemberBase.293" }
%"class.blink::MemberBase.293" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.294" }
%"class.blink::Member.294" = type { %"class.blink::MemberBase.295" }
%"class.blink::MemberBase.295" = type { %"class.blink::HeapHashMap.296"* }
%"class.blink::HeapHashMap.296" = type opaque
%"class.blink::Member.297" = type { %"class.blink::MemberBase.298" }
%"class.blink::MemberBase.298" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::Member.216" = type { %"class.blink::MemberBase.217" }
%"class.blink::MemberBase.217" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.212" = type { %"class.blink::MemberBase.213" }
%"class.blink::MemberBase.213" = type { %"class.blink::Node"* }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.220 }
%class.scoped_refptr.220 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.221", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.221" = type { %"class.base::RefCounted.222" }
%"class.base::RefCounted.222" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.223" = type { %"class.blink::MemberBase.224" }
%"class.blink::MemberBase.224" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.227", %"class.blink::Member.229", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.227" = type { %"class.WTF::SingleThreadedBitField.228" }
%"class.WTF::SingleThreadedBitField.228" = type { i32 }
%"class.blink::Member.229" = type { %"class.blink::MemberBase.230" }
%"class.blink::MemberBase.230" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.231 }
%class.scoped_refptr.231 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.232", %"class.WTF::AtomicString", %"class.WTF::Vector.234" }
%"class.WTF::RefCounted.232" = type { %"class.base::RefCounted.233" }
%"class.base::RefCounted.233" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.234" = type { %"class.WTF::VectorBuffer.235" }
%"class.WTF::VectorBuffer.235" = type { %"class.WTF::VectorBufferBase.236", [32 x i8] }
%"class.WTF::VectorBufferBase.236" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.blink::HeapVector.241" = type { %"class.WTF::Vector.244" }
%"class.WTF::Vector.244" = type { %"class.WTF::VectorBuffer.245" }
%"class.WTF::VectorBuffer.245" = type { %"class.WTF::VectorBufferBase.246" }
%"class.WTF::VectorBufferBase.246" = type { %"class.blink::Member.247"*, i32, i32 }
%"class.blink::Member.247" = type { %"class.blink::MemberBase.303" }
%"class.blink::MemberBase.303" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.304", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.306, %"class.WTF::Vector.307", %"class.WTF::Vector.307", %"class.blink::Member.212", %"class.blink::Member.312", %"class.blink::HeapHashSet", %"class.blink::Member.265", %"class.WTF::HashSet", %"class.WTF::TextPosition", %"class.blink::Member.322", %"class.blink::HeapVector.324", %"class.blink::Member.331" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.304" = type { %"class.blink::MemberBase.305" }
%"class.blink::MemberBase.305" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.306 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type opaque
%"class.WTF::Vector.307" = type { %"class.WTF::VectorBuffer.308" }
%"class.WTF::VectorBuffer.308" = type { %"class.WTF::VectorBufferBase.309" }
%"class.WTF::VectorBufferBase.309" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type opaque
%"class.blink::Member.312" = type { %"class.blink::MemberBase.313" }
%"class.blink::MemberBase.313" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.314" }
%"class.blink::Member.314" = type { %"class.blink::MemberBase.315" }
%"class.blink::MemberBase.315" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet.318" }
%"class.WTF::HashSet.318" = type { %"class.WTF::HashTable.319" }
%"class.WTF::HashTable.319" = type <{ %"class.blink::WeakMember.321"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.321" = type { %"class.blink::MemberBase.215" }
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.322" = type { %"class.blink::MemberBase.323" }
%"class.blink::MemberBase.323" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type opaque
%"class.blink::HeapVector.324" = type { %"class.WTF::Vector.327" }
%"class.WTF::Vector.327" = type { %"class.WTF::VectorBuffer.328" }
%"class.WTF::VectorBuffer.328" = type { %"class.WTF::VectorBufferBase.329" }
%"class.WTF::VectorBufferBase.329" = type { %"class.blink::Member.312"*, i32, i32 }
%"class.blink::Member.331" = type { %"class.blink::MemberBase.332" }
%"class.blink::MemberBase.332" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type opaque
%"class.blink::Member.249" = type { %"class.blink::MemberBase.250" }
%"class.blink::MemberBase.250" = type { %"class.blink::V8CustomElementConstructor"* }
%"class.blink::Member.253" = type { %"class.blink::MemberBase.254" }
%"class.blink::MemberBase.254" = type { %"class.blink::V8CustomElementAdoptedCallback"* }
%"class.blink::Member.255" = type { %"class.blink::MemberBase.256" }
%"class.blink::MemberBase.256" = type { %"class.blink::V8CustomElementAttributeChangedCallback"* }
%"class.blink::Member.257" = type { %"class.blink::MemberBase.258" }
%"class.blink::MemberBase.258" = type { %"class.blink::V8CustomElementFormAssociatedCallback"* }
%"class.blink::Member.251" = type { %"class.blink::MemberBase.252" }
%"class.blink::MemberBase.252" = type { %"class.blink::V8VoidFunction"* }
%"class.blink::Member.259" = type { %"class.blink::MemberBase.260" }
%"class.blink::MemberBase.260" = type { %"class.blink::V8CustomElementFormDisabledCallback"* }
%"class.blink::Member.261" = type { %"class.blink::MemberBase.262" }
%"class.blink::MemberBase.262" = type { %"class.blink::V8CustomElementFormStateRestoreCallback"* }
%"class.blink::CallbackMethodRetriever" = type { %"class.blink::CallbackFunctionBase"*, %"class.v8::Isolate"*, %"class.v8::Local.300", %"class.v8::Local.299" }
%"class.v8::Local.300" = type { %"class.v8::Context"* }
%"class.v8::Local.299" = type { %"class.v8::Object"* }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"class.v8::String" = type { i8 }
%"class.v8::Boolean" = type { i8 }
%"class.blink::ScriptIterator" = type { %"class.v8::Isolate"*, %"class.v8::Local.299", %"class.v8::Local", %"class.v8::Local.302", %"class.v8::Local.302", i8, %"class.v8::MaybeLocal" }
%"class.v8::Local.302" = type { %"class.v8::String"* }
%"class.v8::MaybeLocal" = type { %"class.v8::Value"* }
%"class.v8::Array" = type { i8 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.353" }
%"class.std::__1::__compressed_pair.353" = type { %"struct.std::__1::__compressed_pair_elem.354" }
%"struct.std::__1::__compressed_pair_elem.354" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.blink::ExecutionContext" = type opaque
%"class.blink::V8StringResource" = type { %"class.v8::Local", i32, %"class.WTF::String", %"class.WTF::StringView::StackBackingStore" }
%"class.WTF::StringView::StackBackingStore" = type { [64 x i16], %"class.std::__1::unique_ptr.365" }
%"class.std::__1::unique_ptr.365" = type { %"class.std::__1::__compressed_pair.366" }
%"class.std::__1::__compressed_pair.366" = type { %"struct.std::__1::__compressed_pair_elem.367" }
%"struct.std::__1::__compressed_pair_elem.367" = type { i8* }
%"class.v8::Int32" = type { i8 }

$_ZN5blink17NativeValueTraitsINS_11IDLSequenceINS_13IDLStringBaseILNS_20V8StringResourceModeE0EEEEEvE11NativeValueEPN2v87IsolateENS7_5LocalINS7_5ValueEEERNS_14ExceptionStateE = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_20CallbackFunctionBaseEEEPhm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_20CallbackFunctionBaseEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_20CallbackFunctionBaseEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_20CallbackFunctionBaseEE7GetNameEPKv = comdat any

$_ZN5blink8bindings28CreateIDLSequenceFromV8ArrayINS_13IDLStringBaseILNS_20V8StringResourceModeE0EEEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENSB_5LocalINSB_5ArrayEEERNS_14ExceptionStateE = comdat any

$_ZN5blink8bindings29CreateIDLSequenceFromIteratorINS_13IDLStringBaseILNS_20V8StringResourceModeE0EEEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENS_14ScriptIteratorERNS_14ExceptionStateE = comdat any

$_ZN5blink17NativeValueTraitsINS_13IDLStringBaseILNS_20V8StringResourceModeE0EEEvE11NativeValueEPN2v87IsolateENS5_5LocalINS5_5ValueEEERNS_14ExceptionStateE = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm = comdat any

$_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE11PrepareFastEv = comdat any

$_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS1_EEvOT_ = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE8RehashToEPS1_jS8_ = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_S1_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6ExpandEPS1_ = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_23CustomElementDefinitionEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_23CustomElementDefinitionEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_23CustomElementDefinitionEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_23CustomElementDefinitionEE7GetNameEPKv = comdat any

$_ZZN5blink11GCInfoTraitINS_20CallbackFunctionBaseEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_20CallbackFunctionBaseEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_23CustomElementDefinitionEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_23CustomElementDefinitionEE5IndexEvE13gc_info_index = comdat any

@_ZTVN5blink36ScriptCustomElementDefinitionBuilderE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (i1 (%"class.blink::ScriptCustomElementDefinitionBuilder"*)* @_ZN5blink36ScriptCustomElementDefinitionBuilder26CheckConstructorIntrinsicsEv to i8*), i8* bitcast (i1 (%"class.blink::ScriptCustomElementDefinitionBuilder"*)* @_ZN5blink36ScriptCustomElementDefinitionBuilder29CheckConstructorNotRegisteredEv to i8*), i8* bitcast (i1 (%"class.blink::ScriptCustomElementDefinitionBuilder"*)* @_ZN5blink36ScriptCustomElementDefinitionBuilder26RememberOriginalPropertiesEv to i8*), i8* bitcast (%"class.blink::CustomElementDefinition"* (%"class.blink::ScriptCustomElementDefinitionBuilder"*, %"class.blink::CustomElementDescriptor"*, i32)* @_ZN5blink36ScriptCustomElementDefinitionBuilder5BuildERKNS_23CustomElementDescriptorEj to i8*)] }, align 8
@.str = private unnamed_addr constant [42 x i8] c"constructor argument is not a constructor\00", align 1
@.str.1 = private unnamed_addr constant [58 x i8] c"this constructor has already been used with this registry\00", align 1
@.str.2 = private unnamed_addr constant [18 x i8] c"connectedCallback\00", align 1
@.str.3 = private unnamed_addr constant [21 x i8] c"disconnectedCallback\00", align 1
@.str.4 = private unnamed_addr constant [16 x i8] c"adoptedCallback\00", align 1
@.str.5 = private unnamed_addr constant [25 x i8] c"attributeChangedCallback\00", align 1
@.str.6 = private unnamed_addr constant [19 x i8] c"observedAttributes\00", align 1
@.str.7 = private unnamed_addr constant [17 x i8] c"disabledFeatures\00", align 1
@.str.8 = private unnamed_addr constant [15 x i8] c"formAssociated\00", align 1
@.str.9 = private unnamed_addr constant [23 x i8] c"formAssociatedCallback\00", align 1
@.str.10 = private unnamed_addr constant [18 x i8] c"formResetCallback\00", align 1
@.str.11 = private unnamed_addr constant [21 x i8] c"formDisabledCallback\00", align 1
@.str.12 = private unnamed_addr constant [25 x i8] c"formStateRestoreCallback\00", align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20CallbackFunctionBaseEEEPKcv = private unnamed_addr constant [75 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::CallbackFunctionBase]\00", align 1
@.str.13 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.14 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_20CallbackFunctionBaseEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_20CallbackFunctionBaseEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_20CallbackFunctionBaseEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_20CallbackFunctionBaseEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_20CallbackFunctionBaseEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@_ZTVN5blink14V8VoidFunctionE = external unnamed_addr constant { [6 x i8*] }, align 8
@_ZTVN5blink30V8CustomElementAdoptedCallbackE = external unnamed_addr constant { [6 x i8*] }, align 8
@_ZTVN5blink39V8CustomElementAttributeChangedCallbackE = external unnamed_addr constant { [6 x i8*] }, align 8
@_ZTVN5blink37V8CustomElementFormAssociatedCallbackE = external unnamed_addr constant { [6 x i8*] }, align 8
@_ZTVN5blink35V8CustomElementFormDisabledCallbackE = external unnamed_addr constant { [6 x i8*] }, align 8
@_ZTVN5blink39V8CustomElementFormStateRestoreCallbackE = external unnamed_addr constant { [6 x i8*] }, align 8
@.str.15 = private unnamed_addr constant [54 x i8] c"The provided value cannot be converted to a sequence.\00", align 1
@.str.16 = private unnamed_addr constant [53 x i8] c"The object must have a callable @@iterator property.\00", align 1
@.str.17 = private unnamed_addr constant [38 x i8] c"Array length exceeds supported limit.\00", align 1
@.str.18 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.19 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv = private unnamed_addr constant [59 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::String]\00", align 1
@.str.22 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@.str.23 = private unnamed_addr constant [39 x i8] c"!static_cast<int>( new_capacity >> 31)\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12AtomicStringEEEPKcv = private unnamed_addr constant [65 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::AtomicString]\00", align 1
@.str.24 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink23CustomElementDefinitionEEEPKcv = private unnamed_addr constant [78 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::CustomElementDefinition]\00", align 1
@_ZZN5blink11GCInfoTraitINS_23CustomElementDefinitionEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_23CustomElementDefinitionEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_23CustomElementDefinitionEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_23CustomElementDefinitionEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_23CustomElementDefinitionEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4

@_ZN5blink36ScriptCustomElementDefinitionBuilderC1EPNS_11ScriptStateEPNS_21CustomElementRegistryEPNS_26V8CustomElementConstructorERNS_14ExceptionStateE = hidden unnamed_addr alias void (%"class.blink::ScriptCustomElementDefinitionBuilder"*, %"class.blink::ScriptState"*, %"class.blink::CustomElementRegistry"*, %"class.blink::V8CustomElementConstructor"*, %"class.blink::ExceptionState"*), void (%"class.blink::ScriptCustomElementDefinitionBuilder"*, %"class.blink::ScriptState"*, %"class.blink::CustomElementRegistry"*, %"class.blink::V8CustomElementConstructor"*, %"class.blink::ExceptionState"*)* @_ZN5blink36ScriptCustomElementDefinitionBuilderC2EPNS_11ScriptStateEPNS_21CustomElementRegistryEPNS_26V8CustomElementConstructorERNS_14ExceptionStateE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink36ScriptCustomElementDefinitionBuilderC2EPNS_11ScriptStateEPNS_21CustomElementRegistryEPNS_26V8CustomElementConstructorERNS_14ExceptionStateE(%"class.blink::ScriptCustomElementDefinitionBuilder"* nocapture, %"class.blink::ScriptState"*, %"class.blink::CustomElementRegistry"*, %"class.blink::V8CustomElementConstructor"*, %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.blink::ScriptCustomElementDefinitionBuilder", %"class.blink::ScriptCustomElementDefinitionBuilder"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink36ScriptCustomElementDefinitionBuilderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.blink::ScriptCustomElementDefinitionBuilder", %"class.blink::ScriptCustomElementDefinitionBuilder"* %0, i64 0, i32 1
  store %"class.blink::ExceptionState"* %4, %"class.blink::ExceptionState"** %7, align 8
  %8 = getelementptr inbounds %"class.blink::ScriptCustomElementDefinitionBuilder", %"class.blink::ScriptCustomElementDefinitionBuilder"* %0, i64 0, i32 2, i32 12
  %9 = getelementptr inbounds %"class.blink::ScriptCustomElementDefinitionBuilder", %"class.blink::ScriptCustomElementDefinitionBuilder"* %0, i64 0, i32 2, i32 3
  %10 = bitcast %"class.blink::V8VoidFunction"** %9 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 84, i1 false) #9
  %11 = bitcast %"class.WTF::Vector.193"* %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 17, i1 false) #9
  %12 = getelementptr inbounds %"class.blink::ScriptCustomElementDefinitionBuilder", %"class.blink::ScriptCustomElementDefinitionBuilder"* %0, i64 0, i32 3, i32 0
  %13 = getelementptr inbounds %"class.blink::ScriptCustomElementDefinitionBuilder", %"class.blink::ScriptCustomElementDefinitionBuilder"* %0, i64 0, i32 2, i32 0
  %14 = bitcast %"class.v8::Value"** %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 64, i1 false)
  store %"class.blink::ScriptState"* %1, %"class.blink::ScriptState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ScriptCustomElementDefinitionBuilder", %"class.blink::ScriptCustomElementDefinitionBuilder"* %0, i64 0, i32 2, i32 1
  store %"class.blink::CustomElementRegistry"* %2, %"class.blink::CustomElementRegistry"** %15, align 8
  %16 = getelementptr inbounds %"class.blink::ScriptCustomElementDefinitionBuilder", %"class.blink::ScriptCustomElementDefinitionBuilder"* %0, i64 0, i32 2, i32 2
  store %"class.blink::V8CustomElementConstructor"* %3, %"class.blink::V8CustomElementConstructor"** %16, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink36ScriptCustomElementDefinitionBuilder26CheckConstructorIntrinsicsEv(%"class.blink::ScriptCustomElementDefinitionBuilder"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ScriptCustomElementDefinitionBuilder", %"class.blink::ScriptCustomElementDefinitionBuilder"* %0, i64 0, i32 2, i32 2
  %3 = load %"class.blink::V8CustomElementConstructor"*, %"class.blink::V8CustomElementConstructor"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::V8CustomElementConstructor", %"class.blink::V8CustomElementConstructor"* %3, i64 0, i32 0, i32 1
  %5 = bitcast %"class.blink::TraceWrapperV8Reference.8"* %4 to %"class.v8::Object"**
  %6 = load %"class.v8::Object"*, %"class.v8::Object"** %5, align 8
  %7 = icmp eq %"class.v8::Object"* %6, null
  br i1 %7, label %17, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::V8CustomElementConstructor", %"class.blink::V8CustomElementConstructor"* %3, i64 0, i32 0, i32 3, i32 0, i32 0
  %10 = bitcast %"class.blink::ScriptState"** %9 to %"class.v8::internal::Isolate"***
  %11 = load %"class.v8::internal::Isolate"**, %"class.v8::internal::Isolate"*** %10, align 8
  %12 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %11, align 8
  %13 = bitcast %"class.v8::Object"* %6 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %12, i64 %14) #9
  %16 = bitcast i64* %15 to %"class.v8::Object"*
  br label %17

17:                                               ; preds = %1, %8
  %18 = phi %"class.v8::Object"* [ %16, %8 ], [ null, %1 ]
  %19 = tail call zeroext i1 @_ZNK2v86Object13IsConstructorEv(%"class.v8::Object"* %18) #9
  br i1 %19, label %23, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %"class.blink::ScriptCustomElementDefinitionBuilder", %"class.blink::ScriptCustomElementDefinitionBuilder"* %0, i64 0, i32 1
  %22 = load %"class.blink::ExceptionState"*, %"class.blink::ExceptionState"** %21, align 8
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %22, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str, i64 0, i64 0)) #9
  br label %23

23:                                               ; preds = %17, %20
  %24 = phi i1 [ false, %20 ], [ true, %17 ]
  ret i1 %24
}

declare void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink36ScriptCustomElementDefinitionBuilder29CheckConstructorNotRegisteredEv(%"class.blink::ScriptCustomElementDefinitionBuilder"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ScriptCustomElementDefinitionBuilder", %"class.blink::ScriptCustomElementDefinitionBuilder"* %0, i64 0, i32 2, i32 0
  %3 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ScriptCustomElementDefinitionBuilder", %"class.blink::ScriptCustomElementDefinitionBuilder"* %0, i64 0, i32 2, i32 1
  %5 = load %"class.blink::CustomElementRegistry"*, %"class.blink::CustomElementRegistry"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ScriptCustomElementDefinitionBuilder", %"class.blink::ScriptCustomElementDefinitionBuilder"* %0, i64 0, i32 2, i32 2
  %7 = load %"class.blink::V8CustomElementConstructor"*, %"class.blink::V8CustomElementConstructor"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::V8CustomElementConstructor", %"class.blink::V8CustomElementConstructor"* %7, i64 0, i32 0, i32 1
  %9 = bitcast %"class.blink::TraceWrapperV8Reference.8"* %8 to %"class.v8::Object"**
  %10 = load %"class.v8::Object"*, %"class.v8::Object"** %9, align 8
  %11 = icmp eq %"class.v8::Object"* %10, null
  br i1 %11, label %21, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.blink::V8CustomElementConstructor", %"class.blink::V8CustomElementConstructor"* %7, i64 0, i32 0, i32 3, i32 0, i32 0
  %14 = bitcast %"class.blink::ScriptState"** %13 to %"class.v8::internal::Isolate"***
  %15 = load %"class.v8::internal::Isolate"**, %"class.v8::internal::Isolate"*** %14, align 8
  %16 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %15, align 8
  %17 = bitcast %"class.v8::Object"* %10 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %16, i64 %18) #9
  %20 = bitcast i64* %19 to %"class.v8::Value"*
  br label %21

21:                                               ; preds = %1, %12
  %22 = phi %"class.v8::Value"* [ %20, %12 ], [ null, %1 ]
  %23 = tail call %"class.blink::ScriptCustomElementDefinition"* @_ZN5blink29ScriptCustomElementDefinition14ForConstructorEPNS_11ScriptStateEPNS_21CustomElementRegistryEN2v85LocalINS5_5ValueEEE(%"class.blink::ScriptState"* %3, %"class.blink::CustomElementRegistry"* %5, %"class.v8::Value"* %22) #9
  %24 = icmp eq %"class.blink::ScriptCustomElementDefinition"* %23, null
  br i1 %24, label %28, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.blink::ScriptCustomElementDefinitionBuilder", %"class.blink::ScriptCustomElementDefinitionBuilder"* %0, i64 0, i32 1
  %27 = load %"class.blink::ExceptionState"*, %"class.blink::ExceptionState"** %26, align 8
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %27, i32 9, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1, i64 0, i64 0)) #9
  br label %28

28:                                               ; preds = %21, %25
  %29 = phi i1 [ false, %25 ], [ true, %21 ]
  ret i1 %29
}

declare %"class.blink::ScriptCustomElementDefinition"* @_ZN5blink29ScriptCustomElementDefinition14ForConstructorEPNS_11ScriptStateEPNS_21CustomElementRegistryEN2v85LocalINS5_5ValueEEE(%"class.blink::ScriptState"*, %"class.blink::CustomElementRegistry"*, %"class.v8::Value"*) local_unnamed_addr #1

declare void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"*, i32, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink36ScriptCustomElementDefinitionBuilder26RememberOriginalPropertiesEv(%"class.blink::ScriptCustomElementDefinitionBuilder"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::CallbackMethodRetriever", align 8
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.v8::TryCatch", align 8
  %8 = alloca %"class.WTF::Vector.193", align 8
  %9 = alloca %"class.WTF::AtomicString", align 8
  %10 = alloca %"class.v8::TryCatch", align 8
  %11 = alloca %"class.WTF::Vector.193", align 8
  %12 = alloca %"class.v8::TryCatch", align 8
  %13 = alloca %"class.WTF::StringView", align 8
  %14 = alloca %"class.WTF::StringView", align 8
  %15 = alloca %"class.WTF::StringView", align 8
  %16 = alloca %"class.WTF::StringView", align 8
  %17 = bitcast %"class.blink::CallbackMethodRetriever"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %17) #9
  %18 = getelementptr inbounds %"class.blink::CallbackMethodRetriever", %"class.blink::CallbackMethodRetriever"* %2, i64 0, i32 3, i32 0
  %19 = getelementptr inbounds %"class.blink::ScriptCustomElementDefinitionBuilder", %"class.blink::ScriptCustomElementDefinitionBuilder"* %0, i64 0, i32 2, i32 2
  %20 = bitcast %"class.blink::CallbackMethodRetriever"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 32, i1 false)
  %21 = load %"class.blink::V8CustomElementConstructor"*, %"class.blink::V8CustomElementConstructor"** %19, align 8
  %22 = getelementptr inbounds %"class.blink::V8CustomElementConstructor", %"class.blink::V8CustomElementConstructor"* %21, i64 0, i32 0
  call void @_ZN5blink23CallbackMethodRetrieverC1EPNS_20CallbackFunctionBaseE(%"class.blink::CallbackMethodRetriever"* nonnull %2, %"class.blink::CallbackFunctionBase"* %22) #9
  %23 = getelementptr inbounds %"class.blink::ScriptCustomElementDefinitionBuilder", %"class.blink::ScriptCustomElementDefinitionBuilder"* %0, i64 0, i32 1
  %24 = load %"class.blink::ExceptionState"*, %"class.blink::ExceptionState"** %23, align 8
  %25 = call %"class.v8::Object"* @_ZN5blink23CallbackMethodRetriever18GetPrototypeObjectERNS_14ExceptionStateE(%"class.blink::CallbackMethodRetriever"* nonnull %2, %"class.blink::ExceptionState"* dereferenceable(72) %24) #9
  %26 = load %"class.blink::ExceptionState"*, %"class.blink::ExceptionState"** %23, align 8
  %27 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %26, i64 0, i32 4
  %28 = load i32, i32* %27, align 8
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %637

30:                                               ; preds = %1
  %31 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #9
  %32 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %33 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %32, i64* %33, align 8
  %34 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8** %34, align 8
  %35 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 17, i32* %35, align 8
  %36 = load %"class.v8::Object"*, %"class.v8::Object"** %18, align 8
  %37 = call %"class.v8::Value"* @_ZN5blink23CallbackMethodRetriever22GetFunctionOrUndefinedEN2v85LocalINS1_6ObjectEEERKN3WTF10StringViewERNS_14ExceptionStateE(%"class.blink::CallbackMethodRetriever"* nonnull %2, %"class.v8::Object"* %36, %"class.WTF::StringView"* nonnull dereferenceable(24) %3, %"class.blink::ExceptionState"* dereferenceable(72) %26) #9
  %38 = getelementptr inbounds %"class.blink::ScriptCustomElementDefinitionBuilder", %"class.blink::ScriptCustomElementDefinitionBuilder"* %0, i64 0, i32 3, i32 0
  store %"class.v8::Value"* %37, %"class.v8::Value"** %38, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #9
  %39 = load %"class.blink::ExceptionState"*, %"class.blink::ExceptionState"** %23, align 8
  %40 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %39, i64 0, i32 4
  %41 = load i32, i32* %40, align 8
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %637

43:                                               ; preds = %30
  %44 = call zeroext i1 @_ZNK2v85Value10IsFunctionEv(%"class.v8::Value"* %37) #9
  br i1 %44, label %45, label %58

45:                                               ; preds = %43
  %46 = getelementptr inbounds %"class.blink::ScriptCustomElementDefinitionBuilder", %"class.blink::ScriptCustomElementDefinitionBuilder"* %0, i64 0, i32 3
  %47 = bitcast %"class.v8::Local"* %46 to %"class.v8::Object"**
  %48 = load %"class.v8::Object"*, %"class.v8::Object"** %47, align 8
  %49 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_20CallbackFunctionBaseEEEPhm(i64 32) #9
  %50 = bitcast i8* %49 to %"class.blink::CallbackFunctionBase"*
  call void @_ZN5blink20CallbackFunctionBaseC2EN2v85LocalINS1_6ObjectEEE(%"class.blink::CallbackFunctionBase"* %50, %"class.v8::Object"* %48) #9
  %51 = bitcast i8* %49 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink14V8VoidFunctionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %51, align 8
  %52 = getelementptr inbounds i8, i8* %49, i64 -4
  %53 = bitcast i8* %52 to i16*
  %54 = load atomic i16, i16* %53 monotonic, align 2
  %55 = or i16 %54, 1
  store atomic i16 %55, i16* %53 release, align 2
  %56 = getelementptr inbounds %"class.blink::ScriptCustomElementDefinitionBuilder", %"class.blink::ScriptCustomElementDefinitionBuilder"* %0, i64 0, i32 2, i32 3
  %57 = bitcast %"class.blink::V8VoidFunction"** %56 to i8**
  store i8* %49, i8** %57, align 8
  br label %58

58:                                               ; preds = %45, %43
  %59 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %59) #9
  %60 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %61 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %60, i64* %61, align 8
  %62 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.3, i64 0, i64 0), i8** %62, align 8
  %63 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 20, i32* %63, align 8
  %64 = load %"class.blink::ExceptionState"*, %"class.blink::ExceptionState"** %23, align 8
  %65 = load %"class.v8::Object"*, %"class.v8::Object"** %18, align 8
  %66 = call %"class.v8::Value"* @_ZN5blink23CallbackMethodRetriever22GetFunctionOrUndefinedEN2v85LocalINS1_6ObjectEEERKN3WTF10StringViewERNS_14ExceptionStateE(%"class.blink::CallbackMethodRetriever"* nonnull %2, %"class.v8::Object"* %65, %"class.WTF::StringView"* nonnull dereferenceable(24) %4, %"class.blink::ExceptionState"* dereferenceable(72) %64) #9
  %67 = getelementptr inbounds %"class.blink::ScriptCustomElementDefinitionBuilder", %"class.blink::ScriptCustomElementDefinitionBuilder"* %0, i64 0, i32 4, i32 0
  store %"class.v8::Value"* %66, %"class.v8::Value"** %67, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %59) #9
  %68 = load %"class.blink::ExceptionState"*, %"class.blink::ExceptionState"** %23, align 8
  %69 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %68, i64 0, i32 4
  %70 = load i32, i32* %69, align 8
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %637

72:                                               ; preds = %58
  %73 = call zeroext i1 @_ZNK2v85Value10IsFunctionEv(%"class.v8::Value"* %66) #9
  br i1 %73, label %74, label %87

74:                                               ; preds = %72
  %75 = getelementptr inbounds %"class.blink::ScriptCustomElementDefinitionBuilder", %"class.blink::ScriptCustomElementDefinitionBuilder"* %0, i64 0, i32 4
  %76 = bitcast %"class.v8::Local"* %75 to %"class.v8::Object"**
  %77 = load %"class.v8::Object"*, %"class.v8::Object"** %76, align 8
  %78 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_20CallbackFunctionBaseEEEPhm(i64 32) #9
  %79 = bitcast i8* %78 to %"class.blink::CallbackFunctionBase"*
  call void @_ZN5blink20CallbackFunctionBaseC2EN2v85LocalINS1_6ObjectEEE(%"class.blink::CallbackFunctionBase"* %79, %"class.v8::Object"* %77) #9
  %80 = bitcast i8* %78 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink14V8VoidFunctionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %80, align 8
  %81 = getelementptr inbounds i8, i8* %78, i64 -4
  %82 = bitcast i8* %81 to i16*
  %83 = load atomic i16, i16* %82 monotonic, align 2
  %84 = or i16 %83, 1
  store atomic i16 %84, i16* %82 release, align 2
  %85 = getelementptr inbounds %"class.blink::ScriptCustomElementDefinitionBuilder", %"class.blink::ScriptCustomElementDefinitionBuilder"* %0, i64 0, i32 2, i32 4
  %86 = bitcast %"class.blink::V8VoidFunction"** %85 to i8**
  store i8* %78, i8** %86, align 8
  br label %87

87:                                               ; preds = %74, %72
  %88 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %88) #9
  %89 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %90 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.4, i64 0, i64 0), i8** %91, align 8
  %92 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 15, i32* %92, align 8
  %93 = load %"class.blink::ExceptionState"*, %"class.blink::ExceptionState"** %23, align 8
  %94 = load %"class.v8::Object"*, %"class.v8::Object"** %18, align 8
  %95 = call %"class.v8::Value"* @_ZN5blink23CallbackMethodRetriever22GetFunctionOrUndefinedEN2v85LocalINS1_6ObjectEEERKN3WTF10StringViewERNS_14ExceptionStateE(%"class.blink::CallbackMethodRetriever"* nonnull %2, %"class.v8::Object"* %94, %"class.WTF::StringView"* nonnull dereferenceable(24) %5, %"class.blink::ExceptionState"* dereferenceable(72) %93) #9
  %96 = getelementptr inbounds %"class.blink::ScriptCustomElementDefinitionBuilder", %"class.blink::ScriptCustomElementDefinitionBuilder"* %0, i64 0, i32 5, i32 0
  store %"class.v8::Value"* %95, %"class.v8::Value"** %96, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %88) #9
  %97 = load %"class.blink::ExceptionState"*, %"class.blink::ExceptionState"** %23, align 8
  %98 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %97, i64 0, i32 4
  %99 = load i32, i32* %98, align 8
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %637

101:                                              ; preds = %87
  %102 = call zeroext i1 @_ZNK2v85Value10IsFunctionEv(%"class.v8::Value"* %95) #9
  br i1 %102, label %103, label %116

103:                                              ; preds = %101
  %104 = getelementptr inbounds %"class.blink::ScriptCustomElementDefinitionBuilder", %"class.blink::ScriptCustomElementDefinitionBuilder"* %0, i64 0, i32 5
  %105 = bitcast %"class.v8::Local"* %104 to %"class.v8::Object"**
  %106 = load %"class.v8::Object"*, %"class.v8::Object"** %105, align 8
  %107 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_20CallbackFunctionBaseEEEPhm(i64 32) #9
  %108 = bitcast i8* %107 to %"class.blink::CallbackFunctionBase"*
  call void @_ZN5blink20CallbackFunctionBaseC2EN2v85LocalINS1_6ObjectEEE(%"class.blink::CallbackFunctionBase"* %108, %"class.v8::Object"* %106) #9
  %109 = bitcast i8* %107 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink30V8CustomElementAdoptedCallbackE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %109, align 8
  %110 = getelementptr inbounds i8, i8* %107, i64 -4
  %111 = bitcast i8* %110 to i16*
  %112 = load atomic i16, i16* %111 monotonic, align 2
  %113 = or i16 %112, 1
  store atomic i16 %113, i16* %111 release, align 2
  %114 = getelementptr inbounds %"class.blink::ScriptCustomElementDefinitionBuilder", %"class.blink::ScriptCustomElementDefinitionBuilder"* %0, i64 0, i32 2, i32 5
  %115 = bitcast %"class.blink::V8CustomElementAdoptedCallback"** %114 to i8**
  store i8* %107, i8** %115, align 8
  br label %116

116:                                              ; preds = %103, %101
  %117 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %117) #9
  %118 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %119 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.5, i64 0, i64 0), i8** %120, align 8
  %121 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 24, i32* %121, align 8
  %122 = load %"class.blink::ExceptionState"*, %"class.blink::ExceptionState"** %23, align 8
  %123 = load %"class.v8::Object"*, %"class.v8::Object"** %18, align 8
  %124 = call %"class.v8::Value"* @_ZN5blink23CallbackMethodRetriever22GetFunctionOrUndefinedEN2v85LocalINS1_6ObjectEEERKN3WTF10StringViewERNS_14ExceptionStateE(%"class.blink::CallbackMethodRetriever"* nonnull %2, %"class.v8::Object"* %123, %"class.WTF::StringView"* nonnull dereferenceable(24) %6, %"class.blink::ExceptionState"* dereferenceable(72) %122) #9
  %125 = getelementptr inbounds %"class.blink::ScriptCustomElementDefinitionBuilder", %"class.blink::ScriptCustomElementDefinitionBuilder"* %0, i64 0, i32 6, i32 0
  store %"class.v8::Value"* %124, %"class.v8::Value"** %125, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %117) #9
  %126 = load %"class.blink::ExceptionState"*, %"class.blink::ExceptionState"** %23, align 8
  %127 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %126, i64 0, i32 4
  %128 = load i32, i32* %127, align 8
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %130, label %637

130:                                              ; preds = %116
  %131 = call zeroext i1 @_ZNK2v85Value10IsFunctionEv(%"class.v8::Value"* %124) #9
  br i1 %131, label %135, label %132

132:                                              ; preds = %130
  %133 = getelementptr inbounds %"class.blink::ScriptCustomElementDefinitionBuilder", %"class.blink::ScriptCustomElementDefinitionBuilder"* %0, i64 0, i32 2, i32 6
  %134 = load %"class.blink::V8CustomElementAttributeChangedCallback"*, %"class.blink::V8CustomElementAttributeChangedCallback"** %133, align 8
  br label %149

135:                                              ; preds = %130
  %136 = getelementptr inbounds %"class.blink::ScriptCustomElementDefinitionBuilder", %"class.blink::ScriptCustomElementDefinitionBuilder"* %0, i64 0, i32 6
  %137 = bitcast %"class.v8::Local"* %136 to %"class.v8::Object"**
  %138 = load %"class.v8::Object"*, %"class.v8::Object"** %137, align 8
  %139 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_20CallbackFunctionBaseEEEPhm(i64 32) #9
  %140 = bitcast i8* %139 to %"class.blink::CallbackFunctionBase"*
  call void @_ZN5blink20CallbackFunctionBaseC2EN2v85LocalINS1_6ObjectEEE(%"class.blink::CallbackFunctionBase"* %140, %"class.v8::Object"* %138) #9
  %141 = bitcast i8* %139 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink39V8CustomElementAttributeChangedCallbackE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %141, align 8
  %142 = getelementptr inbounds i8, i8* %139, i64 -4
  %143 = bitcast i8* %142 to i16*
  %144 = load atomic i16, i16* %143 monotonic, align 2
  %145 = or i16 %144, 1
  store atomic i16 %145, i16* %143 release, align 2
  %146 = getelementptr inbounds %"class.blink::ScriptCustomElementDefinitionBuilder", %"class.blink::ScriptCustomElementDefinitionBuilder"* %0, i64 0, i32 2, i32 6
  %147 = bitcast %"class.blink::V8CustomElementAttributeChangedCallback"** %146 to i8**
  store i8* %139, i8** %147, align 8
  %148 = bitcast i8* %139 to %"class.blink::V8CustomElementAttributeChangedCallback"*
  br label %149

149:                                              ; preds = %132, %135
  %150 = phi %"class.blink::V8CustomElementAttributeChangedCallback"* [ %134, %132 ], [ %148, %135 ]
  %151 = icmp eq %"class.blink::V8CustomElementAttributeChangedCallback"* %150, null
  br i1 %151, label %327, label %152

152:                                              ; preds = %149
  %153 = getelementptr inbounds %"class.blink::ScriptCustomElementDefinitionBuilder", %"class.blink::ScriptCustomElementDefinitionBuilder"* %0, i64 0, i32 2, i32 0
  %154 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %153, align 8
  %155 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %154, i64 0, i32 0
  %156 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %155, align 8
  %157 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %156) #9
  %158 = bitcast %"class.v8::TryCatch"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %158) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %158, i8 -86, i64 48, i1 false)
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %7, %"class.v8::Isolate"* %156) #9
  %159 = load %"class.blink::V8CustomElementConstructor"*, %"class.blink::V8CustomElementConstructor"** %19, align 8
  %160 = getelementptr inbounds %"class.blink::V8CustomElementConstructor", %"class.blink::V8CustomElementConstructor"* %159, i64 0, i32 0, i32 1
  %161 = bitcast %"class.blink::TraceWrapperV8Reference.8"* %160 to %"class.v8::Object"**
  %162 = load %"class.v8::Object"*, %"class.v8::Object"** %161, align 8
  %163 = icmp eq %"class.v8::Object"* %162, null
  br i1 %163, label %173, label %164

164:                                              ; preds = %152
  %165 = getelementptr inbounds %"class.blink::V8CustomElementConstructor", %"class.blink::V8CustomElementConstructor"* %159, i64 0, i32 0, i32 3, i32 0, i32 0
  %166 = bitcast %"class.blink::ScriptState"** %165 to %"class.v8::internal::Isolate"***
  %167 = load %"class.v8::internal::Isolate"**, %"class.v8::internal::Isolate"*** %166, align 8
  %168 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %167, align 8
  %169 = bitcast %"class.v8::Object"* %162 to i64*
  %170 = load i64, i64* %169, align 8
  %171 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %168, i64 %170) #9
  %172 = bitcast i64* %171 to %"class.v8::Object"*
  br label %173

173:                                              ; preds = %152, %164
  %174 = phi %"class.v8::Object"* [ %172, %164 ], [ null, %152 ]
  %175 = call %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"* %156, i8* nonnull getelementptr inbounds ([19 x i8], [19 x i8]* @.str.6, i64 0, i64 0), i32 1, i32 18) #9
  %176 = icmp eq %"class.v8::String"* %175, null
  br i1 %176, label %177, label %178, !prof !2

177:                                              ; preds = %173
  call void @_ZN2v82V812ToLocalEmptyEv() #9
  br label %178

178:                                              ; preds = %173, %177
  %179 = bitcast %"class.v8::String"* %175 to %"class.v8::Value"*
  %180 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* %174, %"class.v8::Context"* %157, %"class.v8::Value"* %179) #9
  %181 = icmp eq %"class.v8::Value"* %180, null
  br i1 %181, label %182, label %189

182:                                              ; preds = %178
  %183 = load %"class.blink::ExceptionState"*, %"class.blink::ExceptionState"** %23, align 8
  %184 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %7) #9
  %185 = bitcast %"class.blink::ExceptionState"* %183 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %186 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %185, align 8
  %187 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %186, i64 5
  %188 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %187, align 8
  call void %188(%"class.blink::ExceptionState"* %183, %"class.v8::Value"* %184) #9
  br label %324

189:                                              ; preds = %178
  %190 = bitcast %"class.v8::Value"* %180 to i64*
  %191 = load i64, i64* %190, align 8
  %192 = and i64 %191, 3
  %193 = icmp eq i64 %192, 1
  br i1 %193, label %194, label %211

194:                                              ; preds = %189
  %195 = add i64 %191, -1
  %196 = inttoptr i64 %195 to i32*
  %197 = load i32, i32* %196, align 4
  %198 = and i64 %191, -4294967296
  %199 = zext i32 %197 to i64
  %200 = or i64 %198, %199
  %201 = add i64 %200, 7
  %202 = inttoptr i64 %201 to i16*
  %203 = load i16, i16* %202, align 2
  %204 = icmp eq i16 %203, 67
  br i1 %204, label %205, label %211

205:                                              ; preds = %194
  %206 = add i64 %191, 23
  %207 = inttoptr i64 %206 to i32*
  %208 = load i32, i32* %207, align 4
  %209 = and i32 %208, -2
  %210 = icmp eq i32 %209, 10
  br i1 %210, label %323, label %211

211:                                              ; preds = %194, %189, %205
  %212 = bitcast %"class.WTF::Vector.193"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %212) #9
  %213 = load %"class.blink::ExceptionState"*, %"class.blink::ExceptionState"** %23, align 8
  call void @_ZN5blink17NativeValueTraitsINS_11IDLSequenceINS_13IDLStringBaseILNS_20V8StringResourceModeE0EEEEEvE11NativeValueEPN2v87IsolateENS7_5LocalINS7_5ValueEEERNS_14ExceptionStateE(%"class.WTF::Vector.193"* nonnull sret %8, %"class.v8::Isolate"* %156, %"class.v8::Value"* nonnull %180, %"class.blink::ExceptionState"* dereferenceable(72) %213)
  %214 = load %"class.blink::ExceptionState"*, %"class.blink::ExceptionState"** %23, align 8
  %215 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %214, i64 0, i32 4
  %216 = load i32, i32* %215, align 8
  %217 = icmp eq i32 %216, 0
  br i1 %217, label %218, label %282

218:                                              ; preds = %211
  %219 = getelementptr inbounds %"class.WTF::Vector.193", %"class.WTF::Vector.193"* %8, i64 0, i32 0, i32 0, i32 2
  %220 = load i32, i32* %219, align 4
  %221 = getelementptr inbounds %"class.blink::ScriptCustomElementDefinitionBuilder", %"class.blink::ScriptCustomElementDefinitionBuilder"* %0, i64 0, i32 2, i32 11, i32 0
  call void @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable.190"* %221, i32 %220) #9
  %222 = getelementptr inbounds %"class.WTF::Vector.193", %"class.WTF::Vector.193"* %8, i64 0, i32 0, i32 0, i32 0
  %223 = load %"class.WTF::String"*, %"class.WTF::String"** %222, align 8
  %224 = load i32, i32* %219, align 4
  %225 = zext i32 %224 to i64
  %226 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %223, i64 %225
  %227 = icmp eq i32 %224, 0
  br i1 %227, label %282, label %228

228:                                              ; preds = %218
  %229 = bitcast %"class.WTF::AtomicString"* %9 to i8*
  %230 = bitcast %"class.WTF::AtomicString"* %9 to i64*
  %231 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %9, i64 0, i32 0, i32 0, i32 0
  br label %232

232:                                              ; preds = %228, %279
  %233 = phi %"class.WTF::String"* [ %223, %228 ], [ %280, %279 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %229) #9
  %234 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %233, i64 0, i32 0, i32 0
  %235 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %234, align 8
  %236 = icmp eq %"class.WTF::StringImpl"* %235, null
  br i1 %236, label %260, label %237

237:                                              ; preds = %232
  %238 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %235, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %239 = load atomic i32, i32* %238 acquire, align 4
  %240 = and i32 %239, 4
  %241 = icmp eq i32 %240, 0
  br i1 %241, label %258, label %242

242:                                              ; preds = %237
  %243 = load atomic i32, i32* %238 monotonic, align 4
  %244 = and i32 %243, 2
  %245 = icmp eq i32 %244, 0
  br i1 %245, label %246, label %260

246:                                              ; preds = %242
  %247 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %235, i64 0, i32 0
  %248 = load i32, i32* %247, align 4
  %249 = zext i32 %248 to i33
  %250 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %249, i33 1) #9
  %251 = extractvalue { i33, i1 } %250, 1
  %252 = extractvalue { i33, i1 } %250, 0
  %253 = icmp slt i33 %252, 0
  %254 = or i1 %251, %253
  br i1 %254, label %255, label %256, !prof !2

255:                                              ; preds = %246
  call void @llvm.trap() #9
  unreachable

256:                                              ; preds = %246
  %257 = trunc i33 %252 to i32
  store i32 %257, i32* %247, align 4
  br label %260

258:                                              ; preds = %237
  %259 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %235) #9
  br label %260

260:                                              ; preds = %232, %242, %256, %258
  %261 = phi %"class.WTF::StringImpl"* [ %259, %258 ], [ %235, %242 ], [ %235, %256 ], [ null, %232 ]
  %262 = ptrtoint %"class.WTF::StringImpl"* %261 to i64
  store i64 %262, i64* %230, align 8
  %263 = call { %"class.WTF::AtomicString"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_S1_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable.190"* %221, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %9, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %9) #9
  %264 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %231, align 8
  %265 = icmp eq %"class.WTF::StringImpl"* %264, null
  br i1 %265, label %279, label %266

266:                                              ; preds = %260
  %267 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %264, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %268 = load atomic i32, i32* %267 monotonic, align 4
  %269 = and i32 %268, 2
  %270 = icmp eq i32 %269, 0
  %271 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %264, i64 0, i32 0
  %272 = load i32, i32* %271, align 4
  br i1 %270, label %273, label %275

273:                                              ; preds = %266
  %274 = add i32 %272, -1
  store i32 %274, i32* %271, align 4
  br label %275

275:                                              ; preds = %273, %266
  %276 = phi i32 [ %274, %273 ], [ %272, %266 ]
  %277 = icmp eq i32 %276, 0
  br i1 %277, label %278, label %279

278:                                              ; preds = %275
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %264) #9
  br label %279

279:                                              ; preds = %260, %275, %278
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %229) #9
  %280 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %233, i64 1
  %281 = icmp eq %"class.WTF::String"* %280, %226
  br i1 %281, label %282, label %232

282:                                              ; preds = %279, %218, %211
  %283 = phi i32 [ 1, %211 ], [ 0, %218 ], [ 0, %279 ]
  %284 = getelementptr inbounds %"class.WTF::Vector.193", %"class.WTF::Vector.193"* %8, i64 0, i32 0, i32 0, i32 0
  %285 = load %"class.WTF::String"*, %"class.WTF::String"** %284, align 8
  %286 = icmp eq %"class.WTF::String"* %285, null
  br i1 %286, label %321, label %287, !prof !3

287:                                              ; preds = %282
  %288 = bitcast %"class.WTF::String"* %285 to i8*
  %289 = getelementptr inbounds %"class.WTF::Vector.193", %"class.WTF::Vector.193"* %8, i64 0, i32 0, i32 0, i32 2
  %290 = load i32, i32* %289, align 4
  %291 = icmp eq i32 %290, 0
  br i1 %291, label %319, label %292, !prof !2

292:                                              ; preds = %287
  %293 = zext i32 %290 to i64
  %294 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %285, i64 %293
  br label %295

295:                                              ; preds = %313, %292
  %296 = phi %"class.WTF::String"* [ %314, %313 ], [ %285, %292 ]
  %297 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %296, i64 0, i32 0, i32 0
  %298 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %297, align 8
  %299 = icmp eq %"class.WTF::StringImpl"* %298, null
  br i1 %299, label %313, label %300

300:                                              ; preds = %295
  %301 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %298, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %302 = load atomic i32, i32* %301 monotonic, align 4
  %303 = and i32 %302, 2
  %304 = icmp eq i32 %303, 0
  %305 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %298, i64 0, i32 0
  %306 = load i32, i32* %305, align 4
  br i1 %304, label %307, label %309

307:                                              ; preds = %300
  %308 = add i32 %306, -1
  store i32 %308, i32* %305, align 4
  br label %309

309:                                              ; preds = %307, %300
  %310 = phi i32 [ %308, %307 ], [ %306, %300 ]
  %311 = icmp eq i32 %310, 0
  br i1 %311, label %312, label %313

312:                                              ; preds = %309
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %298) #9
  br label %313

313:                                              ; preds = %312, %309, %295
  %314 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %296, i64 1
  %315 = icmp eq %"class.WTF::String"* %314, %294
  br i1 %315, label %316, label %295

316:                                              ; preds = %313
  store i32 0, i32* %289, align 4
  %317 = bitcast %"class.WTF::Vector.193"* %8 to i8**
  %318 = load i8*, i8** %317, align 8
  br label %319

319:                                              ; preds = %316, %287
  %320 = phi i8* [ %318, %316 ], [ %288, %287 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %320) #9
  store %"class.WTF::String"* null, %"class.WTF::String"** %284, align 8
  br label %321

321:                                              ; preds = %282, %319
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %212) #9
  %322 = icmp eq i32 %283, 0
  br i1 %322, label %323, label %324

323:                                              ; preds = %321, %205
  br label %324

324:                                              ; preds = %321, %323, %182
  %325 = phi i32 [ 1, %182 ], [ 0, %323 ], [ %283, %321 ]
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %7) #9
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %158) #9
  %326 = icmp eq i32 %325, 0
  br i1 %326, label %327, label %637

327:                                              ; preds = %149, %324
  %328 = getelementptr inbounds %"class.blink::ScriptCustomElementDefinitionBuilder", %"class.blink::ScriptCustomElementDefinitionBuilder"* %0, i64 0, i32 2, i32 0
  %329 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %328, align 8
  %330 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %329, i64 0, i32 0
  %331 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %330, align 8
  %332 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %331) #9
  %333 = bitcast %"class.v8::TryCatch"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %333) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %333, i8 -86, i64 48, i1 false)
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %10, %"class.v8::Isolate"* %331) #9
  %334 = load %"class.blink::V8CustomElementConstructor"*, %"class.blink::V8CustomElementConstructor"** %19, align 8
  %335 = getelementptr inbounds %"class.blink::V8CustomElementConstructor", %"class.blink::V8CustomElementConstructor"* %334, i64 0, i32 0, i32 1
  %336 = bitcast %"class.blink::TraceWrapperV8Reference.8"* %335 to %"class.v8::Object"**
  %337 = load %"class.v8::Object"*, %"class.v8::Object"** %336, align 8
  %338 = icmp eq %"class.v8::Object"* %337, null
  br i1 %338, label %348, label %339

339:                                              ; preds = %327
  %340 = getelementptr inbounds %"class.blink::V8CustomElementConstructor", %"class.blink::V8CustomElementConstructor"* %334, i64 0, i32 0, i32 3, i32 0, i32 0
  %341 = bitcast %"class.blink::ScriptState"** %340 to %"class.v8::internal::Isolate"***
  %342 = load %"class.v8::internal::Isolate"**, %"class.v8::internal::Isolate"*** %341, align 8
  %343 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %342, align 8
  %344 = bitcast %"class.v8::Object"* %337 to i64*
  %345 = load i64, i64* %344, align 8
  %346 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %343, i64 %345) #9
  %347 = bitcast i64* %346 to %"class.v8::Object"*
  br label %348

348:                                              ; preds = %327, %339
  %349 = phi %"class.v8::Object"* [ %347, %339 ], [ null, %327 ]
  %350 = call %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"* %331, i8* nonnull getelementptr inbounds ([17 x i8], [17 x i8]* @.str.7, i64 0, i64 0), i32 1, i32 16) #9
  %351 = icmp eq %"class.v8::String"* %350, null
  br i1 %351, label %352, label %353, !prof !2

352:                                              ; preds = %348
  call void @_ZN2v82V812ToLocalEmptyEv() #9
  br label %353

353:                                              ; preds = %348, %352
  %354 = bitcast %"class.v8::String"* %350 to %"class.v8::Value"*
  %355 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* %349, %"class.v8::Context"* %332, %"class.v8::Value"* %354) #9
  %356 = icmp eq %"class.v8::Value"* %355, null
  br i1 %356, label %357, label %364

357:                                              ; preds = %353
  %358 = load %"class.blink::ExceptionState"*, %"class.blink::ExceptionState"** %23, align 8
  %359 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %10) #9
  %360 = bitcast %"class.blink::ExceptionState"* %358 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %361 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %360, align 8
  %362 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %361, i64 5
  %363 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %362, align 8
  call void %363(%"class.blink::ExceptionState"* %358, %"class.v8::Value"* %359) #9
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %10) #9
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %333) #9
  br label %637

364:                                              ; preds = %353
  %365 = bitcast %"class.v8::Value"* %355 to i64*
  %366 = load i64, i64* %365, align 8
  %367 = and i64 %366, 3
  %368 = icmp eq i64 %367, 1
  br i1 %368, label %369, label %386

369:                                              ; preds = %364
  %370 = add i64 %366, -1
  %371 = inttoptr i64 %370 to i32*
  %372 = load i32, i32* %371, align 4
  %373 = and i64 %366, -4294967296
  %374 = zext i32 %372 to i64
  %375 = or i64 %373, %374
  %376 = add i64 %375, 7
  %377 = inttoptr i64 %376 to i16*
  %378 = load i16, i16* %377, align 2
  %379 = icmp eq i16 %378, 67
  br i1 %379, label %380, label %386

380:                                              ; preds = %369
  %381 = add i64 %366, 23
  %382 = inttoptr i64 %381 to i32*
  %383 = load i32, i32* %382, align 4
  %384 = and i32 %383, -2
  %385 = icmp eq i32 %384, 10
  br i1 %385, label %443, label %386

386:                                              ; preds = %369, %364, %380
  %387 = bitcast %"class.WTF::Vector.193"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %387) #9
  %388 = load %"class.blink::ExceptionState"*, %"class.blink::ExceptionState"** %23, align 8
  call void @_ZN5blink17NativeValueTraitsINS_11IDLSequenceINS_13IDLStringBaseILNS_20V8StringResourceModeE0EEEEEvE11NativeValueEPN2v87IsolateENS7_5LocalINS7_5ValueEEERNS_14ExceptionStateE(%"class.WTF::Vector.193"* nonnull sret %11, %"class.v8::Isolate"* %331, %"class.v8::Value"* nonnull %355, %"class.blink::ExceptionState"* dereferenceable(72) %388)
  %389 = getelementptr inbounds %"class.blink::ScriptCustomElementDefinitionBuilder", %"class.blink::ScriptCustomElementDefinitionBuilder"* %0, i64 0, i32 2, i32 12
  %390 = bitcast %"class.WTF::Vector.193"* %11 to i64*
  %391 = load i64, i64* %390, align 8
  %392 = bitcast %"class.WTF::Vector.193"* %389 to i64*
  %393 = load i64, i64* %392, align 8
  store atomic i64 %393, i64* %390 monotonic, align 8
  store atomic i64 %391, i64* %392 monotonic, align 8
  %394 = getelementptr inbounds %"class.blink::ScriptCustomElementDefinitionBuilder", %"class.blink::ScriptCustomElementDefinitionBuilder"* %0, i64 0, i32 2, i32 12, i32 0, i32 0, i32 1
  %395 = getelementptr inbounds %"class.WTF::Vector.193", %"class.WTF::Vector.193"* %11, i64 0, i32 0, i32 0, i32 1
  %396 = load i32, i32* %394, align 4
  %397 = load i32, i32* %395, align 8
  store i32 %397, i32* %394, align 4
  store i32 %396, i32* %395, align 8
  %398 = getelementptr inbounds %"class.blink::ScriptCustomElementDefinitionBuilder", %"class.blink::ScriptCustomElementDefinitionBuilder"* %0, i64 0, i32 2, i32 12, i32 0, i32 0, i32 2
  %399 = getelementptr inbounds %"class.WTF::Vector.193", %"class.WTF::Vector.193"* %11, i64 0, i32 0, i32 0, i32 2
  %400 = load i32, i32* %398, align 4
  %401 = load i32, i32* %399, align 4
  store i32 %401, i32* %398, align 4
  store i32 %400, i32* %399, align 4
  %402 = getelementptr inbounds %"class.WTF::Vector.193", %"class.WTF::Vector.193"* %11, i64 0, i32 0, i32 0, i32 0
  %403 = inttoptr i64 %393 to %"class.WTF::String"*
  %404 = icmp eq i64 %393, 0
  br i1 %404, label %437, label %405, !prof !3

405:                                              ; preds = %386
  %406 = inttoptr i64 %393 to i8*
  %407 = icmp eq i32 %400, 0
  br i1 %407, label %435, label %408, !prof !2

408:                                              ; preds = %405
  %409 = zext i32 %400 to i64
  %410 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %403, i64 %409
  br label %411

411:                                              ; preds = %429, %408
  %412 = phi %"class.WTF::String"* [ %430, %429 ], [ %403, %408 ]
  %413 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %412, i64 0, i32 0, i32 0
  %414 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %413, align 8
  %415 = icmp eq %"class.WTF::StringImpl"* %414, null
  br i1 %415, label %429, label %416

416:                                              ; preds = %411
  %417 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %414, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %418 = load atomic i32, i32* %417 monotonic, align 4
  %419 = and i32 %418, 2
  %420 = icmp eq i32 %419, 0
  %421 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %414, i64 0, i32 0
  %422 = load i32, i32* %421, align 4
  br i1 %420, label %423, label %425

423:                                              ; preds = %416
  %424 = add i32 %422, -1
  store i32 %424, i32* %421, align 4
  br label %425

425:                                              ; preds = %423, %416
  %426 = phi i32 [ %424, %423 ], [ %422, %416 ]
  %427 = icmp eq i32 %426, 0
  br i1 %427, label %428, label %429

428:                                              ; preds = %425
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %414) #9
  br label %429

429:                                              ; preds = %428, %425, %411
  %430 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %412, i64 1
  %431 = icmp eq %"class.WTF::String"* %430, %410
  br i1 %431, label %432, label %411

432:                                              ; preds = %429
  store i32 0, i32* %399, align 4
  %433 = bitcast %"class.WTF::Vector.193"* %11 to i8**
  %434 = load i8*, i8** %433, align 8
  br label %435

435:                                              ; preds = %432, %405
  %436 = phi i8* [ %434, %432 ], [ %406, %405 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %436) #9
  store %"class.WTF::String"* null, %"class.WTF::String"** %402, align 8
  br label %437

437:                                              ; preds = %386, %435
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %387) #9
  %438 = load %"class.blink::ExceptionState"*, %"class.blink::ExceptionState"** %23, align 8
  %439 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %438, i64 0, i32 4
  %440 = load i32, i32* %439, align 8
  %441 = icmp eq i32 %440, 0
  br i1 %441, label %443, label %442

442:                                              ; preds = %437
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %10) #9
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %333) #9
  br label %637

443:                                              ; preds = %437, %380
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %10) #9
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %333) #9
  %444 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %328, align 8
  %445 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %444, i64 0, i32 0
  %446 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %445, align 8
  %447 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %446) #9
  %448 = bitcast %"class.v8::TryCatch"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %448) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %448, i8 -86, i64 48, i1 false)
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %12, %"class.v8::Isolate"* %446) #9
  %449 = load %"class.blink::V8CustomElementConstructor"*, %"class.blink::V8CustomElementConstructor"** %19, align 8
  %450 = getelementptr inbounds %"class.blink::V8CustomElementConstructor", %"class.blink::V8CustomElementConstructor"* %449, i64 0, i32 0, i32 1
  %451 = bitcast %"class.blink::TraceWrapperV8Reference.8"* %450 to %"class.v8::Object"**
  %452 = load %"class.v8::Object"*, %"class.v8::Object"** %451, align 8
  %453 = icmp eq %"class.v8::Object"* %452, null
  br i1 %453, label %463, label %454

454:                                              ; preds = %443
  %455 = getelementptr inbounds %"class.blink::V8CustomElementConstructor", %"class.blink::V8CustomElementConstructor"* %449, i64 0, i32 0, i32 3, i32 0, i32 0
  %456 = bitcast %"class.blink::ScriptState"** %455 to %"class.v8::internal::Isolate"***
  %457 = load %"class.v8::internal::Isolate"**, %"class.v8::internal::Isolate"*** %456, align 8
  %458 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %457, align 8
  %459 = bitcast %"class.v8::Object"* %452 to i64*
  %460 = load i64, i64* %459, align 8
  %461 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %458, i64 %460) #9
  %462 = bitcast i64* %461 to %"class.v8::Object"*
  br label %463

463:                                              ; preds = %443, %454
  %464 = phi %"class.v8::Object"* [ %462, %454 ], [ null, %443 ]
  %465 = call %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"* %446, i8* nonnull getelementptr inbounds ([15 x i8], [15 x i8]* @.str.8, i64 0, i64 0), i32 1, i32 14) #9
  %466 = icmp eq %"class.v8::String"* %465, null
  br i1 %466, label %467, label %468, !prof !2

467:                                              ; preds = %463
  call void @_ZN2v82V812ToLocalEmptyEv() #9
  br label %468

468:                                              ; preds = %463, %467
  %469 = bitcast %"class.v8::String"* %465 to %"class.v8::Value"*
  %470 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* %464, %"class.v8::Context"* %447, %"class.v8::Value"* %469) #9
  %471 = icmp eq %"class.v8::Value"* %470, null
  br i1 %471, label %472, label %479

472:                                              ; preds = %468
  %473 = load %"class.blink::ExceptionState"*, %"class.blink::ExceptionState"** %23, align 8
  %474 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %12) #9
  %475 = bitcast %"class.blink::ExceptionState"* %473 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %476 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %475, align 8
  %477 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %476, i64 5
  %478 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %477, align 8
  call void %478(%"class.blink::ExceptionState"* %473, %"class.v8::Value"* %474) #9
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %12) #9
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %448) #9
  br label %637

479:                                              ; preds = %468
  %480 = bitcast %"class.v8::Value"* %470 to i64*
  %481 = load i64, i64* %480, align 8
  %482 = and i64 %481, 3
  %483 = icmp eq i64 %482, 1
  br i1 %483, label %484, label %501

484:                                              ; preds = %479
  %485 = add i64 %481, -1
  %486 = inttoptr i64 %485 to i32*
  %487 = load i32, i32* %486, align 4
  %488 = and i64 %481, -4294967296
  %489 = zext i32 %487 to i64
  %490 = or i64 %488, %489
  %491 = add i64 %490, 7
  %492 = inttoptr i64 %491 to i16*
  %493 = load i16, i16* %492, align 2
  %494 = icmp eq i16 %493, 67
  br i1 %494, label %495, label %501

495:                                              ; preds = %484
  %496 = add i64 %481, 23
  %497 = inttoptr i64 %496 to i32*
  %498 = load i32, i32* %497, align 4
  %499 = and i32 %498, -2
  %500 = icmp eq i32 %499, 10
  br i1 %500, label %517, label %501

501:                                              ; preds = %484, %479, %495
  %502 = call zeroext i1 @_ZNK2v85Value9IsBooleanEv(%"class.v8::Value"* nonnull %470) #9
  br i1 %502, label %503, label %506, !prof !3

503:                                              ; preds = %501
  %504 = bitcast %"class.v8::Value"* %470 to %"class.v8::Boolean"*
  %505 = call zeroext i1 @_ZNK2v87Boolean5ValueEv(%"class.v8::Boolean"* nonnull %504) #9
  br label %508

506:                                              ; preds = %501
  %507 = call zeroext i1 @_ZNK2v85Value12BooleanValueEPNS_7IsolateE(%"class.v8::Value"* nonnull %470, %"class.v8::Isolate"* %446) #9
  br label %508

508:                                              ; preds = %503, %506
  %509 = phi i1 [ %505, %503 ], [ %507, %506 ]
  %510 = getelementptr inbounds %"class.blink::ScriptCustomElementDefinitionBuilder", %"class.blink::ScriptCustomElementDefinitionBuilder"* %0, i64 0, i32 2, i32 13
  %511 = zext i1 %509 to i8
  store i8 %511, i8* %510, align 8
  %512 = load %"class.blink::ExceptionState"*, %"class.blink::ExceptionState"** %23, align 8
  %513 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %512, i64 0, i32 4
  %514 = load i32, i32* %513, align 8
  %515 = icmp eq i32 %514, 0
  br i1 %515, label %517, label %516

516:                                              ; preds = %508
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %12) #9
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %448) #9
  br label %637

517:                                              ; preds = %508, %495
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %12) #9
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %448) #9
  %518 = getelementptr inbounds %"class.blink::ScriptCustomElementDefinitionBuilder", %"class.blink::ScriptCustomElementDefinitionBuilder"* %0, i64 0, i32 2, i32 13
  %519 = load i8, i8* %518, align 8, !range !4
  %520 = icmp eq i8 %519, 0
  br i1 %520, label %637, label %521

521:                                              ; preds = %517
  %522 = bitcast %"class.WTF::StringView"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %522) #9
  %523 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %524 = bitcast %"class.WTF::StringView"* %13 to i64*
  store i64 %523, i64* %524, align 8
  %525 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 1
  store i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9, i64 0, i64 0), i8** %525, align 8
  %526 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 2
  store i32 22, i32* %526, align 8
  %527 = load %"class.blink::ExceptionState"*, %"class.blink::ExceptionState"** %23, align 8
  %528 = load %"class.v8::Object"*, %"class.v8::Object"** %18, align 8
  %529 = call %"class.v8::Value"* @_ZN5blink23CallbackMethodRetriever22GetFunctionOrUndefinedEN2v85LocalINS1_6ObjectEEERKN3WTF10StringViewERNS_14ExceptionStateE(%"class.blink::CallbackMethodRetriever"* nonnull %2, %"class.v8::Object"* %528, %"class.WTF::StringView"* nonnull dereferenceable(24) %13, %"class.blink::ExceptionState"* dereferenceable(72) %527) #9
  %530 = getelementptr inbounds %"class.blink::ScriptCustomElementDefinitionBuilder", %"class.blink::ScriptCustomElementDefinitionBuilder"* %0, i64 0, i32 7, i32 0
  store %"class.v8::Value"* %529, %"class.v8::Value"** %530, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %522) #9
  %531 = load %"class.blink::ExceptionState"*, %"class.blink::ExceptionState"** %23, align 8
  %532 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %531, i64 0, i32 4
  %533 = load i32, i32* %532, align 8
  %534 = icmp eq i32 %533, 0
  br i1 %534, label %535, label %637

535:                                              ; preds = %521
  %536 = call zeroext i1 @_ZNK2v85Value10IsFunctionEv(%"class.v8::Value"* %529) #9
  br i1 %536, label %537, label %550

537:                                              ; preds = %535
  %538 = getelementptr inbounds %"class.blink::ScriptCustomElementDefinitionBuilder", %"class.blink::ScriptCustomElementDefinitionBuilder"* %0, i64 0, i32 7
  %539 = bitcast %"class.v8::Local"* %538 to %"class.v8::Object"**
  %540 = load %"class.v8::Object"*, %"class.v8::Object"** %539, align 8
  %541 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_20CallbackFunctionBaseEEEPhm(i64 32) #9
  %542 = bitcast i8* %541 to %"class.blink::CallbackFunctionBase"*
  call void @_ZN5blink20CallbackFunctionBaseC2EN2v85LocalINS1_6ObjectEEE(%"class.blink::CallbackFunctionBase"* %542, %"class.v8::Object"* %540) #9
  %543 = bitcast i8* %541 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink37V8CustomElementFormAssociatedCallbackE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %543, align 8
  %544 = getelementptr inbounds i8, i8* %541, i64 -4
  %545 = bitcast i8* %544 to i16*
  %546 = load atomic i16, i16* %545 monotonic, align 2
  %547 = or i16 %546, 1
  store atomic i16 %547, i16* %545 release, align 2
  %548 = getelementptr inbounds %"class.blink::ScriptCustomElementDefinitionBuilder", %"class.blink::ScriptCustomElementDefinitionBuilder"* %0, i64 0, i32 2, i32 7
  %549 = bitcast %"class.blink::V8CustomElementFormAssociatedCallback"** %548 to i8**
  store i8* %541, i8** %549, align 8
  br label %550

550:                                              ; preds = %537, %535
  %551 = bitcast %"class.WTF::StringView"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %551) #9
  %552 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %553 = bitcast %"class.WTF::StringView"* %14 to i64*
  store i64 %552, i64* %553, align 8
  %554 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 1
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.10, i64 0, i64 0), i8** %554, align 8
  %555 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 2
  store i32 17, i32* %555, align 8
  %556 = load %"class.blink::ExceptionState"*, %"class.blink::ExceptionState"** %23, align 8
  %557 = load %"class.v8::Object"*, %"class.v8::Object"** %18, align 8
  %558 = call %"class.v8::Value"* @_ZN5blink23CallbackMethodRetriever22GetFunctionOrUndefinedEN2v85LocalINS1_6ObjectEEERKN3WTF10StringViewERNS_14ExceptionStateE(%"class.blink::CallbackMethodRetriever"* nonnull %2, %"class.v8::Object"* %557, %"class.WTF::StringView"* nonnull dereferenceable(24) %14, %"class.blink::ExceptionState"* dereferenceable(72) %556) #9
  %559 = getelementptr inbounds %"class.blink::ScriptCustomElementDefinitionBuilder", %"class.blink::ScriptCustomElementDefinitionBuilder"* %0, i64 0, i32 8, i32 0
  store %"class.v8::Value"* %558, %"class.v8::Value"** %559, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %551) #9
  %560 = load %"class.blink::ExceptionState"*, %"class.blink::ExceptionState"** %23, align 8
  %561 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %560, i64 0, i32 4
  %562 = load i32, i32* %561, align 8
  %563 = icmp eq i32 %562, 0
  br i1 %563, label %564, label %637

564:                                              ; preds = %550
  %565 = call zeroext i1 @_ZNK2v85Value10IsFunctionEv(%"class.v8::Value"* %558) #9
  br i1 %565, label %566, label %579

566:                                              ; preds = %564
  %567 = getelementptr inbounds %"class.blink::ScriptCustomElementDefinitionBuilder", %"class.blink::ScriptCustomElementDefinitionBuilder"* %0, i64 0, i32 8
  %568 = bitcast %"class.v8::Local"* %567 to %"class.v8::Object"**
  %569 = load %"class.v8::Object"*, %"class.v8::Object"** %568, align 8
  %570 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_20CallbackFunctionBaseEEEPhm(i64 32) #9
  %571 = bitcast i8* %570 to %"class.blink::CallbackFunctionBase"*
  call void @_ZN5blink20CallbackFunctionBaseC2EN2v85LocalINS1_6ObjectEEE(%"class.blink::CallbackFunctionBase"* %571, %"class.v8::Object"* %569) #9
  %572 = bitcast i8* %570 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink14V8VoidFunctionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %572, align 8
  %573 = getelementptr inbounds i8, i8* %570, i64 -4
  %574 = bitcast i8* %573 to i16*
  %575 = load atomic i16, i16* %574 monotonic, align 2
  %576 = or i16 %575, 1
  store atomic i16 %576, i16* %574 release, align 2
  %577 = getelementptr inbounds %"class.blink::ScriptCustomElementDefinitionBuilder", %"class.blink::ScriptCustomElementDefinitionBuilder"* %0, i64 0, i32 2, i32 8
  %578 = bitcast %"class.blink::V8VoidFunction"** %577 to i8**
  store i8* %570, i8** %578, align 8
  br label %579

579:                                              ; preds = %566, %564
  %580 = bitcast %"class.WTF::StringView"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %580) #9
  %581 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %582 = bitcast %"class.WTF::StringView"* %15 to i64*
  store i64 %581, i64* %582, align 8
  %583 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 1
  store i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.11, i64 0, i64 0), i8** %583, align 8
  %584 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 2
  store i32 20, i32* %584, align 8
  %585 = load %"class.blink::ExceptionState"*, %"class.blink::ExceptionState"** %23, align 8
  %586 = load %"class.v8::Object"*, %"class.v8::Object"** %18, align 8
  %587 = call %"class.v8::Value"* @_ZN5blink23CallbackMethodRetriever22GetFunctionOrUndefinedEN2v85LocalINS1_6ObjectEEERKN3WTF10StringViewERNS_14ExceptionStateE(%"class.blink::CallbackMethodRetriever"* nonnull %2, %"class.v8::Object"* %586, %"class.WTF::StringView"* nonnull dereferenceable(24) %15, %"class.blink::ExceptionState"* dereferenceable(72) %585) #9
  %588 = getelementptr inbounds %"class.blink::ScriptCustomElementDefinitionBuilder", %"class.blink::ScriptCustomElementDefinitionBuilder"* %0, i64 0, i32 9, i32 0
  store %"class.v8::Value"* %587, %"class.v8::Value"** %588, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %580) #9
  %589 = load %"class.blink::ExceptionState"*, %"class.blink::ExceptionState"** %23, align 8
  %590 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %589, i64 0, i32 4
  %591 = load i32, i32* %590, align 8
  %592 = icmp eq i32 %591, 0
  br i1 %592, label %593, label %637

593:                                              ; preds = %579
  %594 = call zeroext i1 @_ZNK2v85Value10IsFunctionEv(%"class.v8::Value"* %587) #9
  br i1 %594, label %595, label %608

595:                                              ; preds = %593
  %596 = getelementptr inbounds %"class.blink::ScriptCustomElementDefinitionBuilder", %"class.blink::ScriptCustomElementDefinitionBuilder"* %0, i64 0, i32 9
  %597 = bitcast %"class.v8::Local"* %596 to %"class.v8::Object"**
  %598 = load %"class.v8::Object"*, %"class.v8::Object"** %597, align 8
  %599 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_20CallbackFunctionBaseEEEPhm(i64 32) #9
  %600 = bitcast i8* %599 to %"class.blink::CallbackFunctionBase"*
  call void @_ZN5blink20CallbackFunctionBaseC2EN2v85LocalINS1_6ObjectEEE(%"class.blink::CallbackFunctionBase"* %600, %"class.v8::Object"* %598) #9
  %601 = bitcast i8* %599 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink35V8CustomElementFormDisabledCallbackE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %601, align 8
  %602 = getelementptr inbounds i8, i8* %599, i64 -4
  %603 = bitcast i8* %602 to i16*
  %604 = load atomic i16, i16* %603 monotonic, align 2
  %605 = or i16 %604, 1
  store atomic i16 %605, i16* %603 release, align 2
  %606 = getelementptr inbounds %"class.blink::ScriptCustomElementDefinitionBuilder", %"class.blink::ScriptCustomElementDefinitionBuilder"* %0, i64 0, i32 2, i32 9
  %607 = bitcast %"class.blink::V8CustomElementFormDisabledCallback"** %606 to i8**
  store i8* %599, i8** %607, align 8
  br label %608

608:                                              ; preds = %595, %593
  %609 = bitcast %"class.WTF::StringView"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %609) #9
  %610 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %611 = bitcast %"class.WTF::StringView"* %16 to i64*
  store i64 %610, i64* %611, align 8
  %612 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %16, i64 0, i32 1
  store i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.12, i64 0, i64 0), i8** %612, align 8
  %613 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %16, i64 0, i32 2
  store i32 24, i32* %613, align 8
  %614 = load %"class.blink::ExceptionState"*, %"class.blink::ExceptionState"** %23, align 8
  %615 = load %"class.v8::Object"*, %"class.v8::Object"** %18, align 8
  %616 = call %"class.v8::Value"* @_ZN5blink23CallbackMethodRetriever22GetFunctionOrUndefinedEN2v85LocalINS1_6ObjectEEERKN3WTF10StringViewERNS_14ExceptionStateE(%"class.blink::CallbackMethodRetriever"* nonnull %2, %"class.v8::Object"* %615, %"class.WTF::StringView"* nonnull dereferenceable(24) %16, %"class.blink::ExceptionState"* dereferenceable(72) %614) #9
  %617 = getelementptr inbounds %"class.blink::ScriptCustomElementDefinitionBuilder", %"class.blink::ScriptCustomElementDefinitionBuilder"* %0, i64 0, i32 10, i32 0
  store %"class.v8::Value"* %616, %"class.v8::Value"** %617, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %609) #9
  %618 = load %"class.blink::ExceptionState"*, %"class.blink::ExceptionState"** %23, align 8
  %619 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %618, i64 0, i32 4
  %620 = load i32, i32* %619, align 8
  %621 = icmp eq i32 %620, 0
  br i1 %621, label %622, label %637

622:                                              ; preds = %608
  %623 = call zeroext i1 @_ZNK2v85Value10IsFunctionEv(%"class.v8::Value"* %616) #9
  br i1 %623, label %624, label %637

624:                                              ; preds = %622
  %625 = getelementptr inbounds %"class.blink::ScriptCustomElementDefinitionBuilder", %"class.blink::ScriptCustomElementDefinitionBuilder"* %0, i64 0, i32 10
  %626 = bitcast %"class.v8::Local"* %625 to %"class.v8::Object"**
  %627 = load %"class.v8::Object"*, %"class.v8::Object"** %626, align 8
  %628 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_20CallbackFunctionBaseEEEPhm(i64 32) #9
  %629 = bitcast i8* %628 to %"class.blink::CallbackFunctionBase"*
  call void @_ZN5blink20CallbackFunctionBaseC2EN2v85LocalINS1_6ObjectEEE(%"class.blink::CallbackFunctionBase"* %629, %"class.v8::Object"* %627) #9
  %630 = bitcast i8* %628 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink39V8CustomElementFormStateRestoreCallbackE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %630, align 8
  %631 = getelementptr inbounds i8, i8* %628, i64 -4
  %632 = bitcast i8* %631 to i16*
  %633 = load atomic i16, i16* %632 monotonic, align 2
  %634 = or i16 %633, 1
  store atomic i16 %634, i16* %632 release, align 2
  %635 = getelementptr inbounds %"class.blink::ScriptCustomElementDefinitionBuilder", %"class.blink::ScriptCustomElementDefinitionBuilder"* %0, i64 0, i32 2, i32 10
  %636 = bitcast %"class.blink::V8CustomElementFormStateRestoreCallback"** %635 to i8**
  store i8* %628, i8** %636, align 8
  br label %637

637:                                              ; preds = %608, %579, %550, %521, %116, %87, %58, %30, %1, %624, %622, %517, %516, %472, %442, %357, %324
  %638 = phi i1 [ false, %516 ], [ false, %442 ], [ false, %324 ], [ false, %1 ], [ false, %30 ], [ false, %58 ], [ false, %87 ], [ false, %116 ], [ false, %357 ], [ false, %472 ], [ false, %521 ], [ false, %550 ], [ false, %579 ], [ false, %608 ], [ true, %517 ], [ true, %622 ], [ true, %624 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %17) #9
  ret i1 %638
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN5blink23CallbackMethodRetrieverC1EPNS_20CallbackFunctionBaseE(%"class.blink::CallbackMethodRetriever"*, %"class.blink::CallbackFunctionBase"*) unnamed_addr #1

declare %"class.v8::Object"* @_ZN5blink23CallbackMethodRetriever18GetPrototypeObjectERNS_14ExceptionStateE(%"class.blink::CallbackMethodRetriever"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare zeroext i1 @_ZNK2v85Value10IsFunctionEv(%"class.v8::Value"*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.v8::Isolate"* @_ZN5blink36ScriptCustomElementDefinitionBuilder7IsolateEv(%"class.blink::ScriptCustomElementDefinitionBuilder"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::ScriptCustomElementDefinitionBuilder", %"class.blink::ScriptCustomElementDefinitionBuilder"* %0, i64 0, i32 2, i32 0
  %3 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %3, i64 0, i32 0
  %5 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %4, align 8
  ret %"class.v8::Isolate"* %5
}

declare %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"*, %"class.v8::Isolate"*) unnamed_addr #1

declare %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"*, %"class.v8::Context"*, %"class.v8::Value"*) local_unnamed_addr #1

declare %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17NativeValueTraitsINS_11IDLSequenceINS_13IDLStringBaseILNS_20V8StringResourceModeE0EEEEEvE11NativeValueEPN2v87IsolateENS7_5LocalINS7_5ValueEEERNS_14ExceptionStateE(%"class.WTF::Vector.193"* noalias sret, %"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.blink::ScriptIterator", align 8
  %6 = tail call zeroext i1 @_ZNK2v85Value7IsArrayEv(%"class.v8::Value"* %2) #9
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = bitcast %"class.v8::Value"* %2 to %"class.v8::Array"*
  tail call void @_ZN5blink8bindings28CreateIDLSequenceFromV8ArrayINS_13IDLStringBaseILNS_20V8StringResourceModeE0EEEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENSB_5LocalINSB_5ArrayEEERNS_14ExceptionStateE(%"class.WTF::Vector.193"* sret %0, %"class.v8::Isolate"* %1, %"class.v8::Array"* %8, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br label %29

9:                                                ; preds = %4
  %10 = tail call zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"* %2) #9
  br i1 %10, label %13, label %11

11:                                               ; preds = %9
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.15, i64 0, i64 0)) #9
  %12 = bitcast %"class.WTF::Vector.193"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 16, i1 false) #9
  br label %29

13:                                               ; preds = %9
  %14 = bitcast %"class.blink::ScriptIterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %14) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 56, i1 false)
  %15 = bitcast %"class.v8::Value"* %2 to %"class.v8::Object"*
  call void @_ZN5blink14ScriptIterator12FromIterableEPN2v87IsolateENS1_5LocalINS1_6ObjectEEERNS_14ExceptionStateE(%"class.blink::ScriptIterator"* nonnull sret %5, %"class.v8::Isolate"* %1, %"class.v8::Object"* %15, %"class.blink::ExceptionState"* dereferenceable(72) %3) #9
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %17 = load i32, i32* %16, align 8
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %21, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.WTF::Vector.193"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false) #9
  br label %28

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::ScriptIterator", %"class.blink::ScriptIterator"* %5, i64 0, i32 1, i32 0
  %23 = load %"class.v8::Object"*, %"class.v8::Object"** %22, align 8
  %24 = icmp eq %"class.v8::Object"* %23, null
  br i1 %24, label %25, label %27

25:                                               ; preds = %21
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.16, i64 0, i64 0)) #9
  %26 = bitcast %"class.WTF::Vector.193"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false) #9
  br label %28

27:                                               ; preds = %21
  call void @_ZN5blink8bindings29CreateIDLSequenceFromIteratorINS_13IDLStringBaseILNS_20V8StringResourceModeE0EEEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENS_14ScriptIteratorERNS_14ExceptionStateE(%"class.WTF::Vector.193"* sret %0, %"class.v8::Isolate"* %1, %"class.blink::ScriptIterator"* nonnull byval(%"class.blink::ScriptIterator") align 8 %5, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br label %28

28:                                               ; preds = %27, %25, %19
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %14) #9
  br label %29

29:                                               ; preds = %28, %11, %7
  ret void
}

; Function Attrs: nounwind
declare void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CustomElementDefinition"* @_ZN5blink36ScriptCustomElementDefinitionBuilder5BuildERKNS_23CustomElementDescriptorEj(%"class.blink::ScriptCustomElementDefinitionBuilder"*, %"class.blink::CustomElementDescriptor"* dereferenceable(16), i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::ScriptCustomElementDefinitionBuilder", %"class.blink::ScriptCustomElementDefinitionBuilder"* %0, i64 0, i32 2
  %5 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_23CustomElementDefinitionEEEPhm(i64 176) #9
  %6 = bitcast i8* %5 to %"class.blink::ScriptCustomElementDefinition"*
  tail call void @_ZN5blink29ScriptCustomElementDefinitionC1ERKNS_33ScriptCustomElementDefinitionDataERKNS_23CustomElementDescriptorEj(%"class.blink::ScriptCustomElementDefinition"* %6, %"class.blink::ScriptCustomElementDefinitionData"* dereferenceable(136) %4, %"class.blink::CustomElementDescriptor"* dereferenceable(16) %1, i32 %2) #9
  %7 = getelementptr inbounds i8, i8* %5, i64 -4
  %8 = bitcast i8* %7 to i16*
  %9 = load atomic i16, i16* %8 monotonic, align 2
  %10 = or i16 %9, 1
  store atomic i16 %10, i16* %8 release, align 2
  %11 = bitcast i8* %5 to %"class.blink::CustomElementDefinition"*
  ret %"class.blink::CustomElementDefinition"* %11
}

declare zeroext i1 @_ZNK2v86Object13IsConstructorEv(%"class.v8::Object"*) local_unnamed_addr #1

declare i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #1

declare %"class.v8::Value"* @_ZN5blink23CallbackMethodRetriever22GetFunctionOrUndefinedEN2v85LocalINS1_6ObjectEEERKN3WTF10StringViewERNS_14ExceptionStateE(%"class.blink::CallbackMethodRetriever"*, %"class.v8::Object"*, %"class.WTF::StringView"* dereferenceable(24), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_20CallbackFunctionBaseEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #9
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #9
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_20CallbackFunctionBaseEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_20CallbackFunctionBaseEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_20CallbackFunctionBaseEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #9
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([75 x i8], [75 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20CallbackFunctionBaseEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #6 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #9
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #9
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #9
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #9
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.13, i64 0, i64 0), i8* %21, i8* %22) #9
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #9
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.14, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #9
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #9
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #9
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !2

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #9
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #1

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20CallbackFunctionBaseEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CallbackFunctionBase"*
  %4 = bitcast i8* %1 to void (%"class.blink::CallbackFunctionBase"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::CallbackFunctionBase"*, %"class.blink::Visitor"*)**, void (%"class.blink::CallbackFunctionBase"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::CallbackFunctionBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::CallbackFunctionBase"*, %"class.blink::Visitor"*)** %5, i64 3
  %7 = load void (%"class.blink::CallbackFunctionBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::CallbackFunctionBase"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::CallbackFunctionBase"* %3, %"class.blink::Visitor"* %0) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_20CallbackFunctionBaseEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::CallbackFunctionBase"*
  %3 = bitcast i8* %0 to void (%"class.blink::CallbackFunctionBase"*)***
  %4 = load void (%"class.blink::CallbackFunctionBase"*)**, void (%"class.blink::CallbackFunctionBase"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::CallbackFunctionBase"*)*, void (%"class.blink::CallbackFunctionBase"*)** %4, i64 1
  %6 = load void (%"class.blink::CallbackFunctionBase"*)*, void (%"class.blink::CallbackFunctionBase"*)** %5, align 8
  tail call void %6(%"class.blink::CallbackFunctionBase"* %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_20CallbackFunctionBaseEE7GetNameEPKv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #9
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #1

declare void @_ZN5blink20CallbackFunctionBaseC2EN2v85LocalINS1_6ObjectEEE(%"class.blink::CallbackFunctionBase"*, %"class.v8::Object"*) unnamed_addr #1

declare %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"*, i8*, i32, i32) local_unnamed_addr #1

declare void @_ZN2v82V812ToLocalEmptyEv() local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #7

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

declare zeroext i1 @_ZNK2v85Value9IsBooleanEv(%"class.v8::Value"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK2v87Boolean5ValueEv(%"class.v8::Boolean"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK2v85Value12BooleanValueEPNS_7IsolateE(%"class.v8::Value"*, %"class.v8::Isolate"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK2v85Value7IsArrayEv(%"class.v8::Value"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8bindings28CreateIDLSequenceFromV8ArrayINS_13IDLStringBaseILNS_20V8StringResourceModeE0EEEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENSB_5LocalINSB_5ArrayEEERNS_14ExceptionStateE(%"class.WTF::Vector.193"* noalias sret, %"class.v8::Isolate"*, %"class.v8::Array"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat {
  %5 = alloca %"class.WTF::Vector.193", align 8
  %6 = alloca %"class.v8::TryCatch", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = tail call i32 @_ZNK2v85Array6LengthEv(%"class.v8::Array"* %2) #9
  %9 = zext i32 %8 to i64
  %10 = icmp ugt i32 %8, 268173312
  br i1 %10, label %11, label %13

11:                                               ; preds = %4
  tail call void @_ZN5blink14ExceptionState15ThrowRangeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.17, i64 0, i64 0)) #9
  %12 = bitcast %"class.WTF::Vector.193"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 16, i1 false) #9
  br label %145

13:                                               ; preds = %4
  %14 = bitcast %"class.WTF::Vector.193"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #9
  %15 = getelementptr inbounds %"class.WTF::Vector.193", %"class.WTF::Vector.193"* %5, i64 0, i32 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.WTF::Vector.193", %"class.WTF::Vector.193"* %5, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::Vector.193", %"class.WTF::Vector.193"* %5, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 0, i64 16, i1 false) #9
  %18 = icmp eq i32 %8, 0
  br i1 %18, label %26, label %19

19:                                               ; preds = %13
  %20 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %9) #9
  %21 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %20, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #9
  %22 = ptrtoint i8* %21 to i64
  %23 = bitcast %"class.WTF::Vector.193"* %5 to i64*
  store atomic i64 %22, i64* %23 monotonic, align 8
  %24 = lshr i64 %20, 3
  %25 = trunc i64 %24 to i32
  store i32 %25, i32* %16, align 8
  br label %26

26:                                               ; preds = %13, %19
  %27 = phi i32 [ 0, %13 ], [ %25, %19 ]
  %28 = phi i64 [ 0, %13 ], [ %22, %19 ]
  %29 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1) #9
  %30 = bitcast %"class.v8::TryCatch"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %30) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 -86, i64 48, i1 false)
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %6, %"class.v8::Isolate"* %1) #9
  %31 = call i32 @_ZNK2v85Array6LengthEv(%"class.v8::Array"* %2) #9
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %36

33:                                               ; preds = %26
  %34 = bitcast %"class.WTF::Vector.193"* %5 to i64*
  %35 = bitcast %"class.WTF::Vector.193"* %0 to i8*
  br label %99

36:                                               ; preds = %26
  %37 = bitcast %"class.v8::Array"* %2 to %"class.v8::Object"*
  %38 = bitcast %"class.WTF::String"* %7 to i8*
  %39 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  %40 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %41 = bitcast %"class.WTF::Vector.193"* %0 to i8*
  br label %42

42:                                               ; preds = %36, %90
  %43 = phi i32 [ 0, %36 ], [ %91, %90 ]
  %44 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEEj(%"class.v8::Object"* %37, %"class.v8::Context"* %29, i32 %43) #9
  %45 = icmp eq %"class.v8::Value"* %44, null
  br i1 %45, label %46, label %52

46:                                               ; preds = %42
  %47 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %6) #9
  %48 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %49 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %48, align 8
  %50 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %49, i64 5
  %51 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %50, align 8
  call void %51(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %47) #9
  call void @llvm.memset.p0i8.i64(i8* align 8 %41, i8 0, i64 16, i1 false) #9
  br label %108

52:                                               ; preds = %42
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #9
  %53 = call %"class.WTF::StringImpl"* @_ZN5blink17NativeValueTraitsINS_13IDLStringBaseILNS_20V8StringResourceModeE0EEEvE11NativeValueEPN2v87IsolateENS5_5LocalINS5_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %1, %"class.v8::Value"* nonnull %44, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  store %"class.WTF::StringImpl"* %53, %"class.WTF::StringImpl"** %39, align 8
  %54 = load i32, i32* %40, align 8
  %55 = icmp eq i32 %54, 0
  %56 = ptrtoint %"class.WTF::StringImpl"* %53 to i64
  br i1 %55, label %58, label %57

57:                                               ; preds = %52
  call void @llvm.memset.p0i8.i64(i8* align 8 %41, i8 0, i64 16, i1 false) #9
  br label %71

58:                                               ; preds = %52
  %59 = load i32, i32* %17, align 4
  %60 = load i32, i32* %16, align 8
  %61 = icmp eq i32 %59, %60
  br i1 %61, label %69, label %62, !prof !2

62:                                               ; preds = %58
  %63 = load %"class.WTF::String"*, %"class.WTF::String"** %15, align 8
  %64 = zext i32 %59 to i64
  %65 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %63, i64 %64
  %66 = bitcast %"class.WTF::String"* %65 to i64*
  store i64 %56, i64* %66, align 8
  %67 = load i32, i32* %17, align 4
  %68 = add i32 %67, 1
  store i32 %68, i32* %17, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #9
  br label %90

69:                                               ; preds = %58
  call void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS1_EEvOT_(%"class.WTF::Vector.193"* nonnull %5, %"class.WTF::String"* nonnull dereferenceable(8) %7) #9
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  br label %71

71:                                               ; preds = %69, %57
  %72 = phi %"class.WTF::StringImpl"* [ %70, %69 ], [ %53, %57 ]
  %73 = phi i32 [ 0, %69 ], [ 1, %57 ]
  %74 = icmp eq %"class.WTF::StringImpl"* %72, null
  br i1 %74, label %88, label %75

75:                                               ; preds = %71
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = load atomic i32, i32* %76 monotonic, align 4
  %78 = and i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 0
  %81 = load i32, i32* %80, align 4
  br i1 %79, label %82, label %84

82:                                               ; preds = %75
  %83 = add i32 %81, -1
  store i32 %83, i32* %80, align 4
  br label %84

84:                                               ; preds = %82, %75
  %85 = phi i32 [ %83, %82 ], [ %81, %75 ]
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %88

87:                                               ; preds = %84
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %72) #9
  br label %88

88:                                               ; preds = %87, %84, %71
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #9
  %89 = icmp eq i32 %73, 0
  br i1 %89, label %90, label %108

90:                                               ; preds = %62, %88
  %91 = add nuw i32 %43, 1
  %92 = call i32 @_ZNK2v85Array6LengthEv(%"class.v8::Array"* %2) #9
  %93 = icmp ult i32 %91, %92
  br i1 %93, label %42, label %94

94:                                               ; preds = %90
  %95 = bitcast %"class.WTF::Vector.193"* %5 to i64*
  %96 = load i64, i64* %95, align 8
  %97 = load i32, i32* %16, align 8
  %98 = load i32, i32* %17, align 4
  br label %99

99:                                               ; preds = %33, %94
  %100 = phi i8* [ %35, %33 ], [ %41, %94 ]
  %101 = phi i64* [ %34, %33 ], [ %95, %94 ]
  %102 = phi i32 [ 0, %33 ], [ %98, %94 ]
  %103 = phi i32 [ %27, %33 ], [ %97, %94 ]
  %104 = phi i64 [ %28, %33 ], [ %96, %94 ]
  %105 = getelementptr inbounds %"class.WTF::Vector.193", %"class.WTF::Vector.193"* %0, i64 0, i32 0, i32 0, i32 1
  %106 = getelementptr inbounds %"class.WTF::Vector.193", %"class.WTF::Vector.193"* %0, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* align 8 %100, i8 0, i64 16, i1 false) #9
  %107 = bitcast %"class.WTF::Vector.193"* %0 to i64*
  store atomic i64 0, i64* %101 monotonic, align 8
  store atomic i64 %104, i64* %107 monotonic, align 8
  store i32 %103, i32* %105, align 8
  store i32 0, i32* %16, align 8
  store i32 %102, i32* %106, align 4
  store i32 0, i32* %17, align 4
  br label %108

108:                                              ; preds = %88, %46, %99
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %30) #9
  %109 = load %"class.WTF::String"*, %"class.WTF::String"** %15, align 8
  %110 = icmp eq %"class.WTF::String"* %109, null
  br i1 %110, label %144, label %111, !prof !3

111:                                              ; preds = %108
  %112 = bitcast %"class.WTF::String"* %109 to i8*
  %113 = load i32, i32* %17, align 4
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %142, label %115, !prof !2

115:                                              ; preds = %111
  %116 = zext i32 %113 to i64
  %117 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %109, i64 %116
  br label %118

118:                                              ; preds = %136, %115
  %119 = phi %"class.WTF::String"* [ %137, %136 ], [ %109, %115 ]
  %120 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %119, i64 0, i32 0, i32 0
  %121 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %120, align 8
  %122 = icmp eq %"class.WTF::StringImpl"* %121, null
  br i1 %122, label %136, label %123

123:                                              ; preds = %118
  %124 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %121, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %125 = load atomic i32, i32* %124 monotonic, align 4
  %126 = and i32 %125, 2
  %127 = icmp eq i32 %126, 0
  %128 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %121, i64 0, i32 0
  %129 = load i32, i32* %128, align 4
  br i1 %127, label %130, label %132

130:                                              ; preds = %123
  %131 = add i32 %129, -1
  store i32 %131, i32* %128, align 4
  br label %132

132:                                              ; preds = %130, %123
  %133 = phi i32 [ %131, %130 ], [ %129, %123 ]
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %135, label %136

135:                                              ; preds = %132
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %121) #9
  br label %136

136:                                              ; preds = %135, %132, %118
  %137 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %119, i64 1
  %138 = icmp eq %"class.WTF::String"* %137, %117
  br i1 %138, label %139, label %118

139:                                              ; preds = %136
  store i32 0, i32* %17, align 4
  %140 = bitcast %"class.WTF::Vector.193"* %5 to i8**
  %141 = load i8*, i8** %140, align 8
  br label %142

142:                                              ; preds = %139, %111
  %143 = phi i8* [ %141, %139 ], [ %112, %111 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %143) #9
  store %"class.WTF::String"* null, %"class.WTF::String"** %15, align 8
  br label %144

144:                                              ; preds = %108, %142
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #9
  br label %145

145:                                              ; preds = %144, %11
  ret void
}

declare zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"*) local_unnamed_addr #1

declare void @_ZN5blink14ScriptIterator12FromIterableEPN2v87IsolateENS1_5LocalINS1_6ObjectEEERNS_14ExceptionStateE(%"class.blink::ScriptIterator"* sret, %"class.v8::Isolate"*, %"class.v8::Object"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8bindings29CreateIDLSequenceFromIteratorINS_13IDLStringBaseILNS_20V8StringResourceModeE0EEEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENS_14ScriptIteratorERNS_14ExceptionStateE(%"class.WTF::Vector.193"* noalias sret, %"class.v8::Isolate"*, %"class.blink::ScriptIterator"* byval(%"class.blink::ScriptIterator") align 8, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat {
  %5 = alloca %"class.WTF::Vector.193", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1) #9
  %8 = tail call %"class.blink::ExecutionContext"* @_ZN5blink18ToExecutionContextEN2v85LocalINS0_7ContextEEE(%"class.v8::Context"* %7) #9
  %9 = bitcast %"class.WTF::Vector.193"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #9
  %10 = getelementptr inbounds %"class.WTF::Vector.193", %"class.WTF::Vector.193"* %5, i64 0, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.WTF::Vector.193", %"class.WTF::Vector.193"* %5, i64 0, i32 0, i32 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::Vector.193", %"class.WTF::Vector.193"* %5, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 16, i1 false) #9
  %13 = call zeroext i1 @_ZN5blink14ScriptIterator4NextEPNS_16ExecutionContextERNS_14ExceptionStateEN2v85LocalINS5_5ValueEEE(%"class.blink::ScriptIterator"* nonnull %2, %"class.blink::ExecutionContext"* %8, %"class.blink::ExceptionState"* dereferenceable(72) %3, %"class.v8::Value"* null) #9
  br i1 %13, label %14, label %74

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.blink::ScriptIterator", %"class.blink::ScriptIterator"* %2, i64 0, i32 6, i32 0
  %16 = bitcast %"class.WTF::String"* %6 to i8*
  %17 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  br label %19

19:                                               ; preds = %14, %72
  %20 = load %"class.v8::Value"*, %"class.v8::Value"** %15, align 8
  %21 = icmp eq %"class.v8::Value"* %20, null
  br i1 %21, label %22, label %23, !prof !2

22:                                               ; preds = %19
  call void @_ZN2v82V812ToLocalEmptyEv() #9
  br label %23

23:                                               ; preds = %19, %22
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #9
  %24 = call %"class.WTF::StringImpl"* @_ZN5blink17NativeValueTraitsINS_13IDLStringBaseILNS_20V8StringResourceModeE0EEEvE11NativeValueEPN2v87IsolateENS5_5LocalINS5_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %1, %"class.v8::Value"* %20, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  store %"class.WTF::StringImpl"* %24, %"class.WTF::StringImpl"** %17, align 8
  %25 = load i32, i32* %18, align 8
  %26 = icmp eq i32 %25, 0
  %27 = ptrtoint %"class.WTF::StringImpl"* %24 to i64
  br i1 %26, label %45, label %28

28:                                               ; preds = %23
  %29 = bitcast %"class.WTF::Vector.193"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 16, i1 false) #9
  %30 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %30, label %44, label %31

31:                                               ; preds = %28
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  br i1 %35, label %38, label %40

38:                                               ; preds = %31
  %39 = add i32 %37, -1
  store i32 %39, i32* %36, align 4
  br label %40

40:                                               ; preds = %38, %31
  %41 = phi i32 [ %39, %38 ], [ %37, %31 ]
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %44

43:                                               ; preds = %40
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #9
  br label %44

44:                                               ; preds = %28, %40, %43
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #9
  br label %89

45:                                               ; preds = %23
  %46 = load i32, i32* %12, align 4
  %47 = load i32, i32* %11, align 8
  %48 = icmp eq i32 %46, %47
  br i1 %48, label %56, label %49, !prof !2

49:                                               ; preds = %45
  %50 = load %"class.WTF::String"*, %"class.WTF::String"** %10, align 8
  %51 = zext i32 %46 to i64
  %52 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %50, i64 %51
  %53 = bitcast %"class.WTF::String"* %52 to i64*
  store i64 %27, i64* %53, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %17, align 8
  %54 = load i32, i32* %12, align 4
  %55 = add i32 %54, 1
  store i32 %55, i32* %12, align 4
  br label %72

56:                                               ; preds = %45
  call void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS1_EEvOT_(%"class.WTF::Vector.193"* nonnull %5, %"class.WTF::String"* nonnull dereferenceable(8) %6) #9
  %57 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %58 = icmp eq %"class.WTF::StringImpl"* %57, null
  br i1 %58, label %72, label %59

59:                                               ; preds = %56
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load atomic i32, i32* %60 monotonic, align 4
  %62 = and i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 0
  %65 = load i32, i32* %64, align 4
  br i1 %63, label %66, label %68

66:                                               ; preds = %59
  %67 = add i32 %65, -1
  store i32 %67, i32* %64, align 4
  br label %68

68:                                               ; preds = %66, %59
  %69 = phi i32 [ %67, %66 ], [ %65, %59 ]
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %72

71:                                               ; preds = %68
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %57) #9
  br label %72

72:                                               ; preds = %49, %56, %68, %71
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #9
  %73 = call zeroext i1 @_ZN5blink14ScriptIterator4NextEPNS_16ExecutionContextERNS_14ExceptionStateEN2v85LocalINS5_5ValueEEE(%"class.blink::ScriptIterator"* nonnull %2, %"class.blink::ExecutionContext"* %8, %"class.blink::ExceptionState"* dereferenceable(72) %3, %"class.v8::Value"* null) #9
  br i1 %73, label %19, label %74

74:                                               ; preds = %72, %4
  %75 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %76 = load i32, i32* %75, align 8
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %80, label %78

78:                                               ; preds = %74
  %79 = bitcast %"class.WTF::Vector.193"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %79, i8 0, i64 16, i1 false) #9
  br label %89

80:                                               ; preds = %74
  %81 = getelementptr inbounds %"class.WTF::Vector.193", %"class.WTF::Vector.193"* %0, i64 0, i32 0, i32 0, i32 1
  %82 = getelementptr inbounds %"class.WTF::Vector.193", %"class.WTF::Vector.193"* %0, i64 0, i32 0, i32 0, i32 2
  %83 = bitcast %"class.WTF::Vector.193"* %5 to i64*
  %84 = bitcast %"class.WTF::Vector.193"* %0 to i64*
  store i64 0, i64* %84, align 8
  %85 = load i64, i64* %83, align 8
  %86 = bitcast %"class.WTF::Vector.193"* %0 to i64*
  store atomic i64 0, i64* %83 monotonic, align 8
  store atomic i64 %85, i64* %86 monotonic, align 8
  %87 = load i32, i32* %11, align 8
  store i32 %87, i32* %81, align 8
  store i32 0, i32* %11, align 8
  %88 = load i32, i32* %12, align 4
  store i32 %88, i32* %82, align 4
  store i32 0, i32* %12, align 4
  br label %89

89:                                               ; preds = %44, %80, %78
  %90 = load %"class.WTF::String"*, %"class.WTF::String"** %10, align 8
  %91 = icmp eq %"class.WTF::String"* %90, null
  br i1 %91, label %125, label %92, !prof !3

92:                                               ; preds = %89
  %93 = bitcast %"class.WTF::String"* %90 to i8*
  %94 = load i32, i32* %12, align 4
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %123, label %96, !prof !2

96:                                               ; preds = %92
  %97 = zext i32 %94 to i64
  %98 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %90, i64 %97
  br label %99

99:                                               ; preds = %117, %96
  %100 = phi %"class.WTF::String"* [ %118, %117 ], [ %90, %96 ]
  %101 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %100, i64 0, i32 0, i32 0
  %102 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %101, align 8
  %103 = icmp eq %"class.WTF::StringImpl"* %102, null
  br i1 %103, label %117, label %104

104:                                              ; preds = %99
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %102, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %106 = load atomic i32, i32* %105 monotonic, align 4
  %107 = and i32 %106, 2
  %108 = icmp eq i32 %107, 0
  %109 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %102, i64 0, i32 0
  %110 = load i32, i32* %109, align 4
  br i1 %108, label %111, label %113

111:                                              ; preds = %104
  %112 = add i32 %110, -1
  store i32 %112, i32* %109, align 4
  br label %113

113:                                              ; preds = %111, %104
  %114 = phi i32 [ %112, %111 ], [ %110, %104 ]
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %116, label %117

116:                                              ; preds = %113
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %102) #9
  br label %117

117:                                              ; preds = %116, %113, %99
  %118 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %100, i64 1
  %119 = icmp eq %"class.WTF::String"* %118, %98
  br i1 %119, label %120, label %99

120:                                              ; preds = %117
  store i32 0, i32* %12, align 4
  %121 = bitcast %"class.WTF::Vector.193"* %5 to i8**
  %122 = load i8*, i8** %121, align 8
  br label %123

123:                                              ; preds = %120, %92
  %124 = phi i8* [ %122, %120 ], [ %93, %92 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %124) #9
  store %"class.WTF::String"* null, %"class.WTF::String"** %10, align 8
  br label %125

125:                                              ; preds = %89, %123
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #9
  ret void
}

declare i32 @_ZNK2v85Array6LengthEv(%"class.v8::Array"*) local_unnamed_addr #1

declare void @_ZN5blink14ExceptionState15ThrowRangeErrorEPKc(%"class.blink::ExceptionState"*, i8*) local_unnamed_addr #1

declare %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEEj(%"class.v8::Object"*, %"class.v8::Context"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZN5blink17NativeValueTraitsINS_13IDLStringBaseILNS_20V8StringResourceModeE0EEEvE11NativeValueEPN2v87IsolateENS5_5LocalINS5_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.v8::TryCatch", align 8
  %5 = alloca %"class.blink::V8StringResource", align 8
  %6 = bitcast %"class.blink::V8StringResource"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %6) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 152, i1 false)
  %7 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %5, i64 0, i32 0, i32 0
  store %"class.v8::Value"* %1, %"class.v8::Value"** %7, align 8
  %8 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %5, i64 0, i32 1
  store i32 0, i32* %8, align 8
  %9 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %5, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %9, align 8
  %10 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %5, i64 0, i32 3, i32 1
  %11 = bitcast %"class.std::__1::unique_ptr.365"* %10 to i64*
  store i64 0, i64* %11, align 8
  %12 = call zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE11PrepareFastEv(%"class.blink::V8StringResource"* nonnull %5) #9
  br i1 %12, label %28, label %13

13:                                               ; preds = %3
  %14 = bitcast %"class.v8::TryCatch"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %14) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 48, i1 false) #9
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %4, %"class.v8::Isolate"* %0) #9
  %15 = load %"class.v8::Value"*, %"class.v8::Value"** %7, align 8
  %16 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %0) #9
  %17 = call %"class.v8::String"* @_ZNK2v85Value8ToStringENS_5LocalINS_7ContextEEE(%"class.v8::Value"* %15, %"class.v8::Context"* %16) #9
  %18 = ptrtoint %"class.v8::String"* %17 to i64
  %19 = bitcast %"class.blink::V8StringResource"* %5 to i64*
  store i64 %18, i64* %19, align 8
  %20 = icmp eq %"class.v8::String"* %17, null
  br i1 %20, label %22, label %21

21:                                               ; preds = %13
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %14) #9
  br label %28

22:                                               ; preds = %13
  %23 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %4) #9
  %24 = bitcast %"class.blink::ExceptionState"* %2 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %25 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %25, i64 5
  %27 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %26, align 8
  call void %27(%"class.blink::ExceptionState"* %2, %"class.v8::Value"* %23) #9
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %14) #9
  br label %55

28:                                               ; preds = %3, %21
  %29 = load %"class.v8::Value"*, %"class.v8::Value"** %7, align 8
  %30 = icmp eq %"class.v8::Value"* %29, null
  br i1 %30, label %35, label %31, !prof !2

31:                                               ; preds = %28
  %32 = bitcast %"class.v8::Value"* %29 to %"class.v8::String"*
  %33 = load i32, i32* %8, align 8
  %34 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %32, i32 %33) #9
  br label %55

35:                                               ; preds = %28
  %36 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %37 = icmp eq %"class.WTF::StringImpl"* %36, null
  br i1 %37, label %55, label %38

38:                                               ; preds = %35
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = and i32 %40, 2
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %55

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = zext i32 %45 to i33
  %47 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %46, i33 1) #9
  %48 = extractvalue { i33, i1 } %47, 1
  %49 = extractvalue { i33, i1 } %47, 0
  %50 = icmp slt i33 %49, 0
  %51 = or i1 %48, %50
  br i1 %51, label %52, label %53, !prof !2

52:                                               ; preds = %43
  call void @llvm.trap() #9
  unreachable

53:                                               ; preds = %43
  %54 = trunc i33 %49 to i32
  store i32 %54, i32* %44, align 4
  br label %55

55:                                               ; preds = %53, %38, %35, %31, %22
  %56 = phi %"class.WTF::StringImpl"* [ null, %22 ], [ %34, %31 ], [ null, %35 ], [ %36, %38 ], [ %36, %53 ]
  %57 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %5, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %58 = load i8*, i8** %57, align 8
  store i8* null, i8** %57, align 8
  %59 = icmp eq i8* %58, null
  br i1 %59, label %61, label %60

60:                                               ; preds = %55
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %58) #9
  br label %61

61:                                               ; preds = %60, %55
  %62 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %63 = icmp eq %"class.WTF::StringImpl"* %62, null
  br i1 %63, label %77, label %64

64:                                               ; preds = %61
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = load atomic i32, i32* %65 monotonic, align 4
  %67 = and i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 0
  %70 = load i32, i32* %69, align 4
  br i1 %68, label %71, label %73

71:                                               ; preds = %64
  %72 = add i32 %70, -1
  store i32 %72, i32* %69, align 4
  br label %73

73:                                               ; preds = %71, %64
  %74 = phi i32 [ %72, %71 ], [ %70, %64 ]
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %77

76:                                               ; preds = %73
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %62) #9
  br label %77

77:                                               ; preds = %61, %73, %76
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %6) #9
  ret %"class.WTF::StringImpl"* %56
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.18, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.19, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #9
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #1

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE11PrepareFastEv(%"class.blink::V8StringResource"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %0, i64 0, i32 0, i32 0
  %3 = load %"class.v8::Value"*, %"class.v8::Value"** %2, align 8
  %4 = icmp eq %"class.v8::Value"* %3, null
  br i1 %4, label %82, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.v8::Value"* %3 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = and i64 %7, 3
  %9 = icmp eq i64 %8, 1
  br i1 %9, label %10, label %21, !prof !5

10:                                               ; preds = %5
  %11 = add i64 %7, -1
  %12 = inttoptr i64 %11 to i32*
  %13 = load i32, i32* %12, align 4
  %14 = and i64 %7, -4294967296
  %15 = zext i32 %13 to i64
  %16 = or i64 %14, %15
  %17 = add i64 %16, 7
  %18 = inttoptr i64 %17 to i16*
  %19 = load i16, i16* %18, align 2
  %20 = icmp ult i16 %19, 64
  br i1 %20, label %82, label %21, !prof !3

21:                                               ; preds = %5, %10
  %22 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* nonnull %3) #9
  br i1 %22, label %23, label %80, !prof !3

23:                                               ; preds = %21
  %24 = bitcast %"class.blink::V8StringResource"* %0 to %"class.v8::Int32"**
  %25 = load %"class.v8::Int32"*, %"class.v8::Int32"** %24, align 8
  %26 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %25) #9
  %27 = tail call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringEi(i32 %26) #9
  %28 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %0, i64 0, i32 2
  %29 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %29, label %47, label %30

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %47

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = zext i32 %37 to i33
  %39 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %38, i33 1) #9
  %40 = extractvalue { i33, i1 } %39, 1
  %41 = extractvalue { i33, i1 } %39, 0
  %42 = icmp slt i33 %41, 0
  %43 = or i1 %40, %42
  br i1 %43, label %44, label %45, !prof !2

44:                                               ; preds = %35
  tail call void @llvm.trap() #9
  unreachable

45:                                               ; preds = %35
  %46 = trunc i33 %41 to i32
  store i32 %46, i32* %36, align 4
  br label %47

47:                                               ; preds = %45, %30, %23
  %48 = ptrtoint %"class.WTF::StringImpl"* %27 to i64
  %49 = bitcast %"class.WTF::String"* %28 to i64*
  %50 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %28, i64 0, i32 0, i32 0
  %51 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %50, align 8
  store i64 %48, i64* %49, align 8
  %52 = icmp eq %"class.WTF::StringImpl"* %51, null
  br i1 %52, label %66, label %53

53:                                               ; preds = %47
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = load atomic i32, i32* %54 monotonic, align 4
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 0
  %59 = load i32, i32* %58, align 4
  br i1 %57, label %60, label %62

60:                                               ; preds = %53
  %61 = add i32 %59, -1
  store i32 %61, i32* %58, align 4
  br label %62

62:                                               ; preds = %60, %53
  %63 = phi i32 [ %61, %60 ], [ %59, %53 ]
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %66

65:                                               ; preds = %62
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %51) #9
  br label %66

66:                                               ; preds = %47, %62, %65
  store %"class.v8::Value"* null, %"class.v8::Value"** %2, align 8
  br i1 %29, label %82, label %67

67:                                               ; preds = %66
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load atomic i32, i32* %68 monotonic, align 4
  %70 = and i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %73 = load i32, i32* %72, align 4
  br i1 %71, label %74, label %76

74:                                               ; preds = %67
  %75 = add i32 %73, -1
  store i32 %75, i32* %72, align 4
  br label %76

76:                                               ; preds = %74, %67
  %77 = phi i32 [ %75, %74 ], [ %73, %67 ]
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %82

79:                                               ; preds = %76
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #9
  br label %82

80:                                               ; preds = %21
  %81 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %0, i64 0, i32 1
  store i32 1, i32* %81, align 8
  br label %82

82:                                               ; preds = %79, %76, %66, %10, %1, %80
  %83 = phi i1 [ false, %80 ], [ true, %1 ], [ true, %10 ], [ true, %66 ], [ true, %76 ], [ true, %79 ]
  ret i1 %83
}

declare zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringEi(i32) local_unnamed_addr #1

declare i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"*) local_unnamed_addr #1

declare %"class.v8::String"* @_ZNK2v85Value8ToStringENS_5LocalINS_7ContextEEE(%"class.v8::Value"*, %"class.v8::Context"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"*, i32) local_unnamed_addr #1

declare void @_ZN3WTF10Partitions10BufferFreeEPv(i8*) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS1_EEvOT_(%"class.WTF::Vector.193"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.193", %"class.WTF::Vector.193"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.193", %"class.WTF::Vector.193"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  %8 = icmp ugt %"class.WTF::String"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 %10
  %12 = icmp ugt %"class.WTF::String"* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.193", %"class.WTF::Vector.193"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !3

24:                                               ; preds = %13
  %25 = icmp eq %"class.WTF::String"* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %26) #9
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #9
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.193"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"class.WTF::String"*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 3
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"class.WTF::String"* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"class.WTF::String"* %38 to i8*
  br i1 %41, label %43, label %49, !prof !3

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %42, i64 %46, i1 false) #9
  %47 = bitcast %"class.WTF::Vector.193"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #9
  %51 = bitcast %"class.WTF::Vector.193"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"class.WTF::String"*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"class.WTF::String"* %1 to i64
  %56 = ptrtoint %"class.WTF::String"* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 3
  %59 = getelementptr inbounds %"class.WTF::Vector.193", %"class.WTF::Vector.193"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !3

69:                                               ; preds = %54
  %70 = icmp eq %"class.WTF::String"* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %71) #9
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #9
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.193"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"class.WTF::String"* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"class.WTF::String"* %78 to i8*
  br i1 %81, label %83, label %89, !prof !3

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* nonnull align 8 %82, i64 %86, i1 false) #9
  %87 = bitcast %"class.WTF::Vector.193"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #9
  %91 = bitcast %"class.WTF::Vector.193"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 3
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"class.WTF::String"*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"class.WTF::String"* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"class.WTF::String"* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"class.WTF::String"* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %100, i64 %103
  %105 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %101, i64 0, i32 0, i32 0
  %106 = bitcast %"class.WTF::String"* %101 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = bitcast %"class.WTF::String"* %104 to i64*
  store i64 %107, i64* %108, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %105, align 8
  %109 = load i32, i32* %3, align 4
  %110 = add i32 %109, 1
  store i32 %110, i32* %3, align 4
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare %"class.blink::ExecutionContext"* @_ZN5blink18ToExecutionContextEN2v85LocalINS0_7ContextEEE(%"class.v8::Context"*) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink14ScriptIterator4NextEPNS_16ExecutionContextERNS_14ExceptionStateEN2v85LocalINS5_5ValueEEE(%"class.blink::ScriptIterator"*, %"class.blink::ExecutionContext"*, %"class.blink::ExceptionState"* dereferenceable(72), %"class.v8::Value"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable.190"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = icmp eq i32 %1, 0
  br i1 %4, label %16, label %5

5:                                                ; preds = %2, %5
  %6 = phi i32 [ %9, %5 ], [ %1, %2 ]
  %7 = phi i32 [ %8, %5 ], [ %1, %2 ]
  %8 = or i32 %7, %6
  %9 = lshr i32 %6, 1
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %5

11:                                               ; preds = %5
  %12 = shl i32 %8, 1
  %13 = add i32 %12, 2
  %14 = icmp ugt i32 %13, 8
  %15 = select i1 %14, i32 %13, i32 8
  br label %16

16:                                               ; preds = %11, %2
  %17 = phi i32 [ 8, %2 ], [ %15, %11 ]
  %18 = getelementptr inbounds %"class.WTF::HashTable.190", %"class.WTF::HashTable.190"* %0, i64 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = icmp ugt i32 %17, %19
  br i1 %20, label %21, label %32

21:                                               ; preds = %16
  %22 = icmp slt i32 %17, 0
  br i1 %22, label %23, label %26

23:                                               ; preds = %21
  %24 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.22, i64 0, i64 0), i32 1094, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.23, i64 0, i64 0)) #9
  %25 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #9
  br label %26

26:                                               ; preds = %21, %23
  %27 = zext i32 %17 to i64
  %28 = shl nuw nsw i64 %27, 3
  %29 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12AtomicStringEEEPKcv, i64 0, i64 0)) #9
  call void @llvm.memset.p0i8.i64(i8* align 1 %29, i8 0, i64 %28, i1 false) #9
  %30 = bitcast i8* %29 to %"class.WTF::AtomicString"*
  %31 = call %"class.WTF::AtomicString"* @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE8RehashToEPS1_jS8_(%"class.WTF::HashTable.190"* %0, %"class.WTF::AtomicString"* %30, i32 %17, %"class.WTF::AtomicString"* null) #9
  br label %32

32:                                               ; preds = %26, %16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::AtomicString"* @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE8RehashToEPS1_jS8_(%"class.WTF::HashTable.190"*, %"class.WTF::AtomicString"*, i32, %"class.WTF::AtomicString"*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"class.WTF::AtomicString"* %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable.190", %"class.WTF::HashTable.190"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.WTF::HashTable.190", %"class.WTF::HashTable.190"* %0, i64 0, i32 0
  br i1 %8, label %10, label %13

10:                                               ; preds = %4
  %11 = bitcast %"class.WTF::HashTable.190"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  br label %20

13:                                               ; preds = %4
  %14 = add i32 %2, -1
  %15 = zext i32 %14 to i64
  %16 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %9, align 8
  %17 = ptrtoint %"class.WTF::AtomicString"* %16 to i64
  br label %61

18:                                               ; preds = %157
  %19 = bitcast %"class.WTF::HashTable.190"* %0 to i64*
  br label %20

20:                                               ; preds = %10, %18
  %21 = phi i64* [ %11, %10 ], [ %19, %18 ]
  %22 = phi i64 [ %12, %10 ], [ %158, %18 ]
  %23 = phi %"class.WTF::AtomicString"* [ null, %10 ], [ %161, %18 ]
  %24 = phi i32 [ 0, %10 ], [ %159, %18 ]
  store atomic i64 %5, i64* %21 monotonic, align 8
  store i32 %2, i32* %6, align 8
  %25 = inttoptr i64 %22 to %"class.WTF::AtomicString"*
  %26 = icmp eq i64 %22, 0
  br i1 %26, label %57, label %27

27:                                               ; preds = %20
  %28 = icmp eq i32 %24, 0
  br i1 %28, label %55, label %29

29:                                               ; preds = %27
  %30 = zext i32 %24 to i64
  br label %31

31:                                               ; preds = %52, %29
  %32 = phi i64 [ 0, %29 ], [ %53, %52 ]
  %33 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %25, i64 %32
  %34 = bitcast %"class.WTF::AtomicString"* %33 to i8**
  %35 = load i8*, i8** %34, align 8
  %36 = bitcast i8* %35 to %"class.WTF::StringImpl"*
  %37 = ptrtoint i8* %35 to i64
  switch i64 %37, label %38 [
    i64 -1, label %52
    i64 0, label %52
  ]

38:                                               ; preds = %31
  %39 = getelementptr inbounds i8, i8* %35, i64 8
  %40 = bitcast i8* %39 to i32*
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = and i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = bitcast i8* %35 to i32*
  %45 = load i32, i32* %44, align 4
  br i1 %43, label %46, label %48

46:                                               ; preds = %38
  %47 = add i32 %45, -1
  store i32 %47, i32* %44, align 4
  br label %48

48:                                               ; preds = %46, %38
  %49 = phi i32 [ %47, %46 ], [ %45, %38 ]
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %52

51:                                               ; preds = %48
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %36) #9
  br label %52

52:                                               ; preds = %51, %48, %31, %31
  %53 = add nuw nsw i64 %32, 1
  %54 = icmp eq i64 %53, %30
  br i1 %54, label %55, label %31

55:                                               ; preds = %52, %27
  %56 = inttoptr i64 %22 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %56) #9
  br label %57

57:                                               ; preds = %20, %55
  %58 = getelementptr inbounds %"class.WTF::HashTable.190", %"class.WTF::HashTable.190"* %0, i64 0, i32 3
  %59 = load i32, i32* %58, align 8
  %60 = and i32 %59, -2147483648
  store i32 %60, i32* %58, align 8
  ret %"class.WTF::AtomicString"* %23

61:                                               ; preds = %13, %157
  %62 = phi i64 [ %17, %13 ], [ %158, %157 ]
  %63 = phi i32 [ %7, %13 ], [ %159, %157 ]
  %64 = phi %"class.WTF::AtomicString"* [ %16, %13 ], [ %160, %157 ]
  %65 = phi %"class.WTF::AtomicString"* [ null, %13 ], [ %161, %157 ]
  %66 = phi i32 [ 0, %13 ], [ %162, %157 ]
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %64, i64 %67
  %69 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %68, i64 0, i32 0, i32 0, i32 0
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %71 = ptrtoint %"class.WTF::StringImpl"* %70 to i64
  switch i64 %71, label %72 [
    i64 -1, label %157
    i64 0, label %157
  ]

72:                                               ; preds = %61
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %70, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load atomic i32, i32* %73 monotonic, align 4
  %75 = lshr i32 %74, 8
  %76 = and i32 %75, %14
  %77 = zext i32 %76 to i64
  %78 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 %77
  %79 = ptrtoint %"class.WTF::AtomicString"* %78 to i64
  %80 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %78, i64 0, i32 0, i32 0, i32 0
  %81 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %80, align 8
  %82 = icmp eq %"class.WTF::StringImpl"* %81, null
  br i1 %82, label %99, label %83

83:                                               ; preds = %72
  %84 = xor i32 %75, -1
  %85 = lshr i32 %74, 31
  %86 = add nsw i32 %85, %84
  %87 = shl i32 %86, 12
  %88 = xor i32 %87, %86
  %89 = lshr i32 %88, 7
  %90 = xor i32 %89, %88
  %91 = shl i32 %90, 2
  %92 = xor i32 %91, %90
  %93 = lshr i32 %92, 20
  %94 = xor i32 %93, %92
  %95 = or i32 %94, 1
  %96 = zext i32 %95 to i64
  br label %105

97:                                               ; preds = %117
  %98 = ptrtoint %"class.WTF::AtomicString"* %123 to i64
  br label %99

99:                                               ; preds = %97, %72
  %100 = phi i64 [ %79, %72 ], [ %98, %97 ]
  %101 = phi %"class.WTF::AtomicString"* [ null, %72 ], [ %118, %97 ]
  %102 = icmp eq %"class.WTF::AtomicString"* %101, null
  %103 = ptrtoint %"class.WTF::AtomicString"* %101 to i64
  %104 = select i1 %102, i64 %100, i64 %103
  br label %128

105:                                              ; preds = %117, %83
  %106 = phi %"class.WTF::AtomicString"* [ null, %83 ], [ %118, %117 ]
  %107 = phi %"class.WTF::StringImpl"* [ %81, %83 ], [ %126, %117 ]
  %108 = phi i64 [ %79, %83 ], [ %124, %117 ]
  %109 = phi %"class.WTF::AtomicString"* [ %78, %83 ], [ %123, %117 ]
  %110 = phi i64 [ %77, %83 ], [ %122, %117 ]
  %111 = phi i64 [ 0, %83 ], [ %120, %117 ]
  %112 = bitcast %"class.WTF::AtomicString"* %109 to i8**
  %113 = load i8*, i8** %112, align 8
  %114 = icmp eq i8* %113, inttoptr (i64 -1 to i8*)
  br i1 %114, label %117, label %115

115:                                              ; preds = %105
  %116 = icmp eq %"class.WTF::StringImpl"* %107, %70
  br i1 %116, label %128, label %117

117:                                              ; preds = %115, %105
  %118 = phi %"class.WTF::AtomicString"* [ %106, %115 ], [ %109, %105 ]
  %119 = icmp eq i64 %111, 0
  %120 = select i1 %119, i64 %96, i64 %111
  %121 = add i64 %120, %110
  %122 = and i64 %121, %15
  %123 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 %122
  %124 = ptrtoint %"class.WTF::AtomicString"* %123 to i64
  %125 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %123, i64 0, i32 0, i32 0, i32 0
  %126 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %125, align 8
  %127 = icmp eq %"class.WTF::StringImpl"* %126, null
  br i1 %127, label %97, label %105

128:                                              ; preds = %115, %99
  %129 = phi i64 [ %104, %99 ], [ %108, %115 ]
  %130 = inttoptr i64 %129 to %"class.WTF::AtomicString"*
  %131 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %130, i64 0, i32 0, i32 0, i32 0
  %132 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %131, align 8
  %133 = icmp eq %"class.WTF::StringImpl"* %132, null
  br i1 %133, label %147, label %134

134:                                              ; preds = %128
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %132, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %136 = load atomic i32, i32* %135 monotonic, align 4
  %137 = and i32 %136, 2
  %138 = icmp eq i32 %137, 0
  %139 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %132, i64 0, i32 0
  %140 = load i32, i32* %139, align 4
  br i1 %138, label %141, label %143

141:                                              ; preds = %134
  %142 = add i32 %140, -1
  store i32 %142, i32* %139, align 4
  br label %143

143:                                              ; preds = %141, %134
  %144 = phi i32 [ %142, %141 ], [ %140, %134 ]
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %146, label %147

146:                                              ; preds = %143
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %132) #9
  br label %147

147:                                              ; preds = %128, %143, %146
  %148 = bitcast %"class.WTF::AtomicString"* %68 to i64*
  %149 = load i64, i64* %148, align 8
  %150 = inttoptr i64 %129 to i64*
  store i64 %149, i64* %150, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %69, align 8
  %151 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %9, align 8
  %152 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %151, i64 %67
  %153 = icmp eq %"class.WTF::AtomicString"* %152, %3
  %154 = select i1 %153, %"class.WTF::AtomicString"* %130, %"class.WTF::AtomicString"* %65
  %155 = load i32, i32* %6, align 8
  %156 = ptrtoint %"class.WTF::AtomicString"* %151 to i64
  br label %157

157:                                              ; preds = %61, %61, %147
  %158 = phi i64 [ %62, %61 ], [ %156, %147 ], [ %62, %61 ]
  %159 = phi i32 [ %63, %61 ], [ %155, %147 ], [ %63, %61 ]
  %160 = phi %"class.WTF::AtomicString"* [ %64, %61 ], [ %151, %147 ], [ %64, %61 ]
  %161 = phi %"class.WTF::AtomicString"* [ %65, %61 ], [ %154, %147 ], [ %65, %61 ]
  %162 = add i32 %66, 1
  %163 = icmp eq i32 %162, %159
  br i1 %163, label %18, label %61
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.WTF::AtomicString"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_S1_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable.190"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.190", %"class.WTF::HashTable.190"* %0, i64 0, i32 0
  %5 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %4, align 8
  %6 = icmp eq %"class.WTF::AtomicString"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"class.WTF::AtomicString"* @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6ExpandEPS1_(%"class.WTF::HashTable.190"* %0, %"class.WTF::AtomicString"* null)
  %9 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"class.WTF::AtomicString"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.190", %"class.WTF::HashTable.190"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = lshr i32 %19, 8
  %21 = and i32 %20, %14
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %11, i64 %22
  %24 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %23, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %64, label %27

27:                                               ; preds = %10
  %28 = xor i32 %20, -1
  %29 = lshr i32 %19, 31
  %30 = add nsw i32 %29, %28
  %31 = shl i32 %30, 12
  %32 = xor i32 %31, %30
  %33 = lshr i32 %32, 7
  %34 = xor i32 %33, %32
  %35 = shl i32 %34, 2
  %36 = xor i32 %35, %34
  %37 = lshr i32 %36, 20
  %38 = xor i32 %37, %36
  %39 = or i32 %38, 1
  %40 = zext i32 %39 to i64
  br label %41

41:                                               ; preds = %27, %52
  %42 = phi %"class.WTF::StringImpl"* [ %25, %27 ], [ %60, %52 ]
  %43 = phi %"class.WTF::AtomicString"* [ %23, %27 ], [ %58, %52 ]
  %44 = phi %"class.WTF::AtomicString"* [ null, %27 ], [ %53, %52 ]
  %45 = phi i64 [ %22, %27 ], [ %57, %52 ]
  %46 = phi i64 [ 0, %27 ], [ %55, %52 ]
  %47 = bitcast %"class.WTF::AtomicString"* %43 to i8**
  %48 = load i8*, i8** %47, align 8
  %49 = icmp eq i8* %48, inttoptr (i64 -1 to i8*)
  br i1 %49, label %52, label %50

50:                                               ; preds = %41
  %51 = icmp eq %"class.WTF::StringImpl"* %42, %17
  br i1 %51, label %109, label %52

52:                                               ; preds = %41, %50
  %53 = phi %"class.WTF::AtomicString"* [ %44, %50 ], [ %43, %41 ]
  %54 = icmp eq i64 %46, 0
  %55 = select i1 %54, i64 %40, i64 %46
  %56 = add i64 %55, %45
  %57 = and i64 %56, %15
  %58 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %11, i64 %57
  %59 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %58, i64 0, i32 0, i32 0, i32 0
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %59, align 8
  %61 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %61, label %62, label %41

62:                                               ; preds = %52
  %63 = icmp eq %"class.WTF::AtomicString"* %53, null
  br i1 %63, label %64, label %67

64:                                               ; preds = %10, %62
  %65 = phi %"class.WTF::AtomicString"* [ %58, %62 ], [ %23, %10 ]
  %66 = bitcast %"class.WTF::AtomicString"* %65 to i64*
  br label %75

67:                                               ; preds = %62
  %68 = bitcast %"class.WTF::AtomicString"* %53 to i64*
  store i64 0, i64* %68, align 8
  %69 = getelementptr inbounds %"class.WTF::HashTable.190", %"class.WTF::HashTable.190"* %0, i64 0, i32 3
  %70 = load i32, i32* %69, align 8
  %71 = add i32 %70, 2147483647
  %72 = and i32 %71, 2147483647
  %73 = and i32 %70, -2147483648
  %74 = or i32 %72, %73
  store i32 %74, i32* %69, align 8
  br label %75

75:                                               ; preds = %64, %67
  %76 = phi i64* [ %66, %64 ], [ %68, %67 ]
  %77 = phi %"class.WTF::AtomicString"* [ %65, %64 ], [ %53, %67 ]
  %78 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0, i32 0, i32 0
  %79 = bitcast %"class.WTF::AtomicString"* %2 to i64*
  %80 = load i64, i64* %79, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %78, align 8
  %81 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %77, i64 0, i32 0, i32 0, i32 0
  %82 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %81, align 8
  store i64 %80, i64* %76, align 8
  %83 = icmp eq %"class.WTF::StringImpl"* %82, null
  br i1 %83, label %97, label %84

84:                                               ; preds = %75
  %85 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %82, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %86 = load atomic i32, i32* %85 monotonic, align 4
  %87 = and i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %82, i64 0, i32 0
  %90 = load i32, i32* %89, align 4
  br i1 %88, label %91, label %93

91:                                               ; preds = %84
  %92 = add i32 %90, -1
  store i32 %92, i32* %89, align 4
  br label %93

93:                                               ; preds = %91, %84
  %94 = phi i32 [ %92, %91 ], [ %90, %84 ]
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %96, label %97

96:                                               ; preds = %93
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %82) #9
  br label %97

97:                                               ; preds = %75, %93, %96
  %98 = getelementptr inbounds %"class.WTF::HashTable.190", %"class.WTF::HashTable.190"* %0, i64 0, i32 2
  %99 = load i32, i32* %98, align 4
  %100 = add i32 %99, 1
  store i32 %100, i32* %98, align 4
  %101 = getelementptr inbounds %"class.WTF::HashTable.190", %"class.WTF::HashTable.190"* %0, i64 0, i32 3
  %102 = load i32, i32* %101, align 8
  %103 = add i32 %102, %100
  %104 = shl i32 %103, 1
  %105 = load i32, i32* %12, align 8
  %106 = icmp ult i32 %104, %105
  br i1 %106, label %109, label %107

107:                                              ; preds = %97
  %108 = tail call %"class.WTF::AtomicString"* @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6ExpandEPS1_(%"class.WTF::HashTable.190"* %0, %"class.WTF::AtomicString"* %77)
  br label %109

109:                                              ; preds = %50, %97, %107
  %110 = phi i8 [ 1, %97 ], [ 1, %107 ], [ 0, %50 ]
  %111 = phi %"class.WTF::AtomicString"* [ %77, %97 ], [ %108, %107 ], [ %43, %50 ]
  %112 = insertvalue { %"class.WTF::AtomicString"*, i8 } undef, %"class.WTF::AtomicString"* %111, 0
  %113 = insertvalue { %"class.WTF::AtomicString"*, i8 } %112, i8 %110, 1
  ret { %"class.WTF::AtomicString"*, i8 } %113
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::AtomicString"* @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6ExpandEPS1_(%"class.WTF::HashTable.190"*, %"class.WTF::AtomicString"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.190", %"class.WTF::HashTable.190"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.190", %"class.WTF::HashTable.190"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #9
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #9
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.24, i64 0, i64 0), i8* %22, i8* %23) #9
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.22, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #9
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #9
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #9
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 3
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12AtomicStringEEEPKcv, i64 0, i64 0)) #9
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #9
  %36 = bitcast i8* %35 to %"class.WTF::AtomicString"*
  %37 = call %"class.WTF::AtomicString"* @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE8RehashToEPS1_jS8_(%"class.WTF::HashTable.190"* %0, %"class.WTF::AtomicString"* %36, i32 %32, %"class.WTF::AtomicString"* %1) #9
  ret %"class.WTF::AtomicString"* %37
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

declare void @_ZN5blink29ScriptCustomElementDefinitionC1ERKNS_33ScriptCustomElementDefinitionDataERKNS_23CustomElementDescriptorEj(%"class.blink::ScriptCustomElementDefinition"*, %"class.blink::ScriptCustomElementDefinitionData"* dereferenceable(136), %"class.blink::CustomElementDescriptor"* dereferenceable(16), i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_23CustomElementDefinitionEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #9
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #9
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_23CustomElementDefinitionEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_23CustomElementDefinitionEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_23CustomElementDefinitionEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #9
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink23CustomElementDefinitionEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_23CustomElementDefinitionEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CustomElementDefinition"*
  %4 = bitcast i8* %1 to void (%"class.blink::CustomElementDefinition"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::CustomElementDefinition"*, %"class.blink::Visitor"*)**, void (%"class.blink::CustomElementDefinition"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::CustomElementDefinition"*, %"class.blink::Visitor"*)*, void (%"class.blink::CustomElementDefinition"*, %"class.blink::Visitor"*)** %5, i64 3
  %7 = load void (%"class.blink::CustomElementDefinition"*, %"class.blink::Visitor"*)*, void (%"class.blink::CustomElementDefinition"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::CustomElementDefinition"* %3, %"class.blink::Visitor"* %0) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_23CustomElementDefinitionEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::CustomElementDefinition"*
  %3 = bitcast i8* %0 to void (%"class.blink::CustomElementDefinition"*)***
  %4 = load void (%"class.blink::CustomElementDefinition"*)**, void (%"class.blink::CustomElementDefinition"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::CustomElementDefinition"*)*, void (%"class.blink::CustomElementDefinition"*)** %4, i64 1
  %6 = load void (%"class.blink::CustomElementDefinition"*)*, void (%"class.blink::CustomElementDefinition"*)** %5, align 8
  tail call void %6(%"class.blink::CustomElementDefinition"* %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_23CustomElementDefinitionEE7GetNameEPKv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #9
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{i8 0, i8 2}
!5 = !{!"branch_weights", i32 2146410443, i32 1073205}
