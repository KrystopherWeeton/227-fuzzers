; ModuleID = '../../components/autofill/core/common/password_form_fill_data.cc'
source_filename = "../../components/autofill/core/common/password_form_fill_data.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.autofill::FormRendererId" = type { %"class.util::IdType" }
%"class.util::IdType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"struct.url::Component" = type { i32, i32 }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %class.GURL* }
%class.GURL = type { %"class.std::__1::basic_string.1", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr" }
%"class.autofill::internal::TokenType" = type { %"class.base::StrongAlias.13" }
%"class.base::StrongAlias.13" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.autofill::FieldRendererId" = type { %"class.util::IdType.14" }
%"class.util::IdType.14" = type { %"class.base::StrongAlias.15" }
%"class.base::StrongAlias.15" = type { i32 }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1", i16, [6 x i8] }>
%union.anon.16 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::basic_string.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.4 }
%union.anon.4 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector.22" = type { %"class.std::__1::__vector_base.23" }
%"class.std::__1::__vector_base.23" = type { %"struct.autofill::PasswordAndMetadata"*, %"struct.autofill::PasswordAndMetadata"*, %"class.std::__1::__compressed_pair.24" }
%"struct.autofill::PasswordAndMetadata" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string.1", i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"struct.autofill::PasswordAndMetadata"* }
%"struct.autofill::PasswordFormFillData" = type <{ %"class.autofill::FormRendererId", [4 x i8], %"class.std::__1::basic_string", %class.GURL, %class.GURL, %"struct.autofill::FormFieldData", %"struct.autofill::FormFieldData", i8, [7 x i8], %"class.std::__1::basic_string.1", i8, [7 x i8], %"class.std::__1::vector.22", i8, [7 x i8] }>
%"struct.autofill::FormFieldData" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.autofill::internal::TokenType", %"class.autofill::FieldRendererId", %"class.autofill::FormRendererId", %"class.url::Origin", i32, %"class.std::__1::basic_string.1", i64, i8, i32, i8, i8, i32, i32, i32, i8, i8, %"class.std::__1::basic_string", %"class.std::__1::vector", %"class.std::__1::vector", i32, %"class.gfx::RectF", %"class.std::__1::vector", %"class.std::__1::vector" }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.16 }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon }
%struct.anon = type { %"struct.std::__1::__padding", i8 }
%"struct.std::__1::__padding" = type { [1 x i8] }
%"class.std::__1::__basic_string_common" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon.5 }
%struct.anon.5 = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_ = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs = comdat any

$_ZNSt3__16vectorIN8autofill19PasswordAndMetadataENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_ = comdat any

$_ZNSt3__16vectorIN8autofill19PasswordAndMetadataENS_9allocatorIS2_EEE13__move_assignERS5_NS_17integral_constantIbLb1EEE = comdat any

@__const._ZN8autofill24MaybeClearPasswordValuesERKNS_20PasswordFormFillDataE.result = private unnamed_addr constant <{ %"class.autofill::FormRendererId", [4 x i8], %"class.std::__1::basic_string", { %"class.std::__1::basic_string.1", i8, [7 x i8], { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.std::__1::unique_ptr" }, { %"class.std::__1::basic_string.1", i8, [7 x i8], { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.std::__1::unique_ptr" }, { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.autofill::internal::TokenType", %"class.autofill::FieldRendererId", %"class.autofill::FormRendererId", { %"class.url::SchemeHostPort", { { { { i8, [7 x i8], %union.anon.16 } } } } }, i32, [4 x i8], %"class.std::__1::basic_string.1", i64, i8, [3 x i8], i32, i8, i8, [2 x i8], i32, i32, i32, i8, i8, [6 x i8], %"class.std::__1::basic_string", %"class.std::__1::vector", %"class.std::__1::vector", i32, %"class.gfx::RectF", [4 x i8], %"class.std::__1::vector", %"class.std::__1::vector" }, { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.autofill::internal::TokenType", %"class.autofill::FieldRendererId", %"class.autofill::FormRendererId", { %"class.url::SchemeHostPort", { { { { i8, [7 x i8], %union.anon.16 } } } } }, i32, [4 x i8], %"class.std::__1::basic_string.1", i64, i8, [3 x i8], i32, i8, i8, [2 x i8], i32, i32, i32, i8, i8, [6 x i8], %"class.std::__1::basic_string", %"class.std::__1::vector", %"class.std::__1::vector", i32, %"class.gfx::RectF", [4 x i8], %"class.std::__1::vector", %"class.std::__1::vector" }, i8, [7 x i8], %"class.std::__1::basic_string.1", i8, [7 x i8], %"class.std::__1::vector.22", i8, [7 x i8] }> <{ %"class.autofill::FormRendererId" { %"class.util::IdType" { %"class.base::StrongAlias" { i32 -1431655766 } } }, [4 x i8] c"\AA\AA\AA\AA", %"class.std::__1::basic_string" { %"class.std::__1::__compressed_pair" { %"struct.std::__1::__compressed_pair_elem" { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" { %union.anon { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" { i16* inttoptr (i64 -6148914691236517206 to i16*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } }, { %"class.std::__1::basic_string.1", i8, [7 x i8], { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.std::__1::unique_ptr" } { %"class.std::__1::basic_string.1" { %"class.std::__1::__compressed_pair.2" { %"struct.std::__1::__compressed_pair_elem.3" { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" { %union.anon.4 { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" { i8* inttoptr (i64 -6148914691236517206 to i8*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } }, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* } { %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %"struct.url::Parsed"* inttoptr (i64 -6148914691236517206 to %"struct.url::Parsed"*) }, %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair.10" { %"struct.std::__1::__compressed_pair_elem.11" { %class.GURL* inttoptr (i64 -6148914691236517206 to %class.GURL*) } } } }, { %"class.std::__1::basic_string.1", i8, [7 x i8], { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.std::__1::unique_ptr" } { %"class.std::__1::basic_string.1" { %"class.std::__1::__compressed_pair.2" { %"struct.std::__1::__compressed_pair_elem.3" { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" { %union.anon.4 { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" { i8* inttoptr (i64 -6148914691236517206 to i8*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } }, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* } { %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %"struct.url::Parsed"* inttoptr (i64 -6148914691236517206 to %"struct.url::Parsed"*) }, %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair.10" { %"struct.std::__1::__compressed_pair_elem.11" { %class.GURL* inttoptr (i64 -6148914691236517206 to %class.GURL*) } } } }, { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.autofill::internal::TokenType", %"class.autofill::FieldRendererId", %"class.autofill::FormRendererId", { %"class.url::SchemeHostPort", { { { { i8, [7 x i8], %union.anon.16 } } } } }, i32, [4 x i8], %"class.std::__1::basic_string.1", i64, i8, [3 x i8], i32, i8, i8, [2 x i8], i32, i32, i32, i8, i8, [6 x i8], %"class.std::__1::basic_string", %"class.std::__1::vector", %"class.std::__1::vector", i32, %"class.gfx::RectF", [4 x i8], %"class.std::__1::vector", %"class.std::__1::vector" } { %"class.std::__1::basic_string" { %"class.std::__1::__compressed_pair" { %"struct.std::__1::__compressed_pair_elem" { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" { %union.anon { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" { i16* inttoptr (i64 -6148914691236517206 to i16*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } }, %"class.std::__1::basic_string" { %"class.std::__1::__compressed_pair" { %"struct.std::__1::__compressed_pair_elem" { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" { %union.anon { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" { i16* inttoptr (i64 -6148914691236517206 to i16*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } }, %"class.std::__1::basic_string" { %"class.std::__1::__compressed_pair" { %"struct.std::__1::__compressed_pair_elem" { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" { %union.anon { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" { i16* inttoptr (i64 -6148914691236517206 to i16*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } }, %"class.std::__1::basic_string" { %"class.std::__1::__compressed_pair" { %"struct.std::__1::__compressed_pair_elem" { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" { %union.anon { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" { i16* inttoptr (i64 -6148914691236517206 to i16*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } }, %"class.std::__1::basic_string" { %"class.std::__1::__compressed_pair" { %"struct.std::__1::__compressed_pair_elem" { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" { %union.anon { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" { i16* inttoptr (i64 -6148914691236517206 to i16*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } }, %"class.std::__1::basic_string.1" { %"class.std::__1::__compressed_pair.2" { %"struct.std::__1::__compressed_pair_elem.3" { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" { %union.anon.4 { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" { i8* inttoptr (i64 -6148914691236517206 to i8*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } }, %"class.std::__1::basic_string.1" { %"class.std::__1::__compressed_pair.2" { %"struct.std::__1::__compressed_pair_elem.3" { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" { %union.anon.4 { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" { i8* inttoptr (i64 -6148914691236517206 to i8*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } }, %"class.std::__1::basic_string" { %"class.std::__1::__compressed_pair" { %"struct.std::__1::__compressed_pair_elem" { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" { %union.anon { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" { i16* inttoptr (i64 -6148914691236517206 to i16*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } }, %"class.std::__1::basic_string" { %"class.std::__1::__compressed_pair" { %"struct.std::__1::__compressed_pair_elem" { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" { %union.anon { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" { i16* inttoptr (i64 -6148914691236517206 to i16*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } }, %"class.std::__1::basic_string" { %"class.std::__1::__compressed_pair" { %"struct.std::__1::__compressed_pair_elem" { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" { %union.anon { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" { i16* inttoptr (i64 -6148914691236517206 to i16*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } }, %"class.std::__1::basic_string" { %"class.std::__1::__compressed_pair" { %"struct.std::__1::__compressed_pair_elem" { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" { %union.anon { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" { i16* inttoptr (i64 -6148914691236517206 to i16*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } }, %"class.autofill::internal::TokenType" { %"class.base::StrongAlias.13" { %"class.base::UnguessableToken" { %"class.base::Token" { i64 -6148914691236517206, i64 -6148914691236517206 } } } }, %"class.autofill::FieldRendererId" { %"class.util::IdType.14" { %"class.base::StrongAlias.15" { i32 -1431655766 } } }, %"class.autofill::FormRendererId" { %"class.util::IdType" { %"class.base::StrongAlias" { i32 -1431655766 } } }, { %"class.url::SchemeHostPort", { { { { i8, [7 x i8], %union.anon.16 } } } } } { %"class.url::SchemeHostPort" <{ %"class.std::__1::basic_string.1" { %"class.std::__1::__compressed_pair.2" { %"struct.std::__1::__compressed_pair_elem.3" { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" { %union.anon.4 { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" { i8* inttoptr (i64 -6148914691236517206 to i8*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } }, %"class.std::__1::basic_string.1" { %"class.std::__1::__compressed_pair.2" { %"struct.std::__1::__compressed_pair_elem.3" { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" { %union.anon.4 { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" { i8* inttoptr (i64 -6148914691236517206 to i8*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } }, i16 -21846, [6 x i8] c"\AA\AA\AA\AA\AA\AA" }>, { { { { i8, [7 x i8], %union.anon.16 } } } } { { { { i8, [7 x i8], %union.anon.16 } } } { { { i8, [7 x i8], %union.anon.16 } } { { i8, [7 x i8], %union.anon.16 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.16 { %"class.url::Origin::Nonce" { %"class.base::UnguessableToken" { %"class.base::Token" { i64 -6148914691236517206, i64 -6148914691236517206 } } } } } } } } }, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %"class.std::__1::basic_string.1" { %"class.std::__1::__compressed_pair.2" { %"struct.std::__1::__compressed_pair_elem.3" { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" { %union.anon.4 { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" { i8* inttoptr (i64 -6148914691236517206 to i8*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } }, i64 -6148914691236517206, i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766, i8 -86, i8 -86, [2 x i8] c"\AA\AA", i32 -1431655766, i32 -1431655766, i32 -1431655766, i8 -86, i8 -86, [6 x i8] c"\AA\AA\AA\AA\AA\AA", %"class.std::__1::basic_string" { %"class.std::__1::__compressed_pair" { %"struct.std::__1::__compressed_pair_elem" { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" { %union.anon { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" { i16* inttoptr (i64 -6148914691236517206 to i16*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } }, %"class.std::__1::vector" { %"class.std::__1::__vector_base" { %"class.std::__1::basic_string"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::basic_string"*), %"class.std::__1::basic_string"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::basic_string"*), %"class.std::__1::__compressed_pair.17" { %"struct.std::__1::__compressed_pair_elem.18" { %"class.std::__1::basic_string"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::basic_string"*) } } } }, %"class.std::__1::vector" { %"class.std::__1::__vector_base" { %"class.std::__1::basic_string"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::basic_string"*), %"class.std::__1::basic_string"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::basic_string"*), %"class.std::__1::__compressed_pair.17" { %"struct.std::__1::__compressed_pair_elem.18" { %"class.std::__1::basic_string"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::basic_string"*) } } } }, i32 -1431655766, %"class.gfx::RectF" { %"class.gfx::PointF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"class.gfx::SizeF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 } }, [4 x i8] c"\AA\AA\AA\AA", %"class.std::__1::vector" { %"class.std::__1::__vector_base" { %"class.std::__1::basic_string"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::basic_string"*), %"class.std::__1::basic_string"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::basic_string"*), %"class.std::__1::__compressed_pair.17" { %"struct.std::__1::__compressed_pair_elem.18" { %"class.std::__1::basic_string"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::basic_string"*) } } } }, %"class.std::__1::vector" { %"class.std::__1::__vector_base" { %"class.std::__1::basic_string"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::basic_string"*), %"class.std::__1::basic_string"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::basic_string"*), %"class.std::__1::__compressed_pair.17" { %"struct.std::__1::__compressed_pair_elem.18" { %"class.std::__1::basic_string"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::basic_string"*) } } } } }, { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.autofill::internal::TokenType", %"class.autofill::FieldRendererId", %"class.autofill::FormRendererId", { %"class.url::SchemeHostPort", { { { { i8, [7 x i8], %union.anon.16 } } } } }, i32, [4 x i8], %"class.std::__1::basic_string.1", i64, i8, [3 x i8], i32, i8, i8, [2 x i8], i32, i32, i32, i8, i8, [6 x i8], %"class.std::__1::basic_string", %"class.std::__1::vector", %"class.std::__1::vector", i32, %"class.gfx::RectF", [4 x i8], %"class.std::__1::vector", %"class.std::__1::vector" } { %"class.std::__1::basic_string" { %"class.std::__1::__compressed_pair" { %"struct.std::__1::__compressed_pair_elem" { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" { %union.anon { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" { i16* inttoptr (i64 -6148914691236517206 to i16*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } }, %"class.std::__1::basic_string" { %"class.std::__1::__compressed_pair" { %"struct.std::__1::__compressed_pair_elem" { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" { %union.anon { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" { i16* inttoptr (i64 -6148914691236517206 to i16*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } }, %"class.std::__1::basic_string" { %"class.std::__1::__compressed_pair" { %"struct.std::__1::__compressed_pair_elem" { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" { %union.anon { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" { i16* inttoptr (i64 -6148914691236517206 to i16*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } }, %"class.std::__1::basic_string" { %"class.std::__1::__compressed_pair" { %"struct.std::__1::__compressed_pair_elem" { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" { %union.anon { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" { i16* inttoptr (i64 -6148914691236517206 to i16*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } }, %"class.std::__1::basic_string" { %"class.std::__1::__compressed_pair" { %"struct.std::__1::__compressed_pair_elem" { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" { %union.anon { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" { i16* inttoptr (i64 -6148914691236517206 to i16*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } }, %"class.std::__1::basic_string.1" { %"class.std::__1::__compressed_pair.2" { %"struct.std::__1::__compressed_pair_elem.3" { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" { %union.anon.4 { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" { i8* inttoptr (i64 -6148914691236517206 to i8*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } }, %"class.std::__1::basic_string.1" { %"class.std::__1::__compressed_pair.2" { %"struct.std::__1::__compressed_pair_elem.3" { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" { %union.anon.4 { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" { i8* inttoptr (i64 -6148914691236517206 to i8*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } }, %"class.std::__1::basic_string" { %"class.std::__1::__compressed_pair" { %"struct.std::__1::__compressed_pair_elem" { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" { %union.anon { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" { i16* inttoptr (i64 -6148914691236517206 to i16*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } }, %"class.std::__1::basic_string" { %"class.std::__1::__compressed_pair" { %"struct.std::__1::__compressed_pair_elem" { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" { %union.anon { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" { i16* inttoptr (i64 -6148914691236517206 to i16*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } }, %"class.std::__1::basic_string" { %"class.std::__1::__compressed_pair" { %"struct.std::__1::__compressed_pair_elem" { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" { %union.anon { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" { i16* inttoptr (i64 -6148914691236517206 to i16*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } }, %"class.std::__1::basic_string" { %"class.std::__1::__compressed_pair" { %"struct.std::__1::__compressed_pair_elem" { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" { %union.anon { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" { i16* inttoptr (i64 -6148914691236517206 to i16*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } }, %"class.autofill::internal::TokenType" { %"class.base::StrongAlias.13" { %"class.base::UnguessableToken" { %"class.base::Token" { i64 -6148914691236517206, i64 -6148914691236517206 } } } }, %"class.autofill::FieldRendererId" { %"class.util::IdType.14" { %"class.base::StrongAlias.15" { i32 -1431655766 } } }, %"class.autofill::FormRendererId" { %"class.util::IdType" { %"class.base::StrongAlias" { i32 -1431655766 } } }, { %"class.url::SchemeHostPort", { { { { i8, [7 x i8], %union.anon.16 } } } } } { %"class.url::SchemeHostPort" <{ %"class.std::__1::basic_string.1" { %"class.std::__1::__compressed_pair.2" { %"struct.std::__1::__compressed_pair_elem.3" { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" { %union.anon.4 { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" { i8* inttoptr (i64 -6148914691236517206 to i8*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } }, %"class.std::__1::basic_string.1" { %"class.std::__1::__compressed_pair.2" { %"struct.std::__1::__compressed_pair_elem.3" { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" { %union.anon.4 { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" { i8* inttoptr (i64 -6148914691236517206 to i8*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } }, i16 -21846, [6 x i8] c"\AA\AA\AA\AA\AA\AA" }>, { { { { i8, [7 x i8], %union.anon.16 } } } } { { { { i8, [7 x i8], %union.anon.16 } } } { { { i8, [7 x i8], %union.anon.16 } } { { i8, [7 x i8], %union.anon.16 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.16 { %"class.url::Origin::Nonce" { %"class.base::UnguessableToken" { %"class.base::Token" { i64 -6148914691236517206, i64 -6148914691236517206 } } } } } } } } }, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %"class.std::__1::basic_string.1" { %"class.std::__1::__compressed_pair.2" { %"struct.std::__1::__compressed_pair_elem.3" { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" { %union.anon.4 { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" { i8* inttoptr (i64 -6148914691236517206 to i8*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } }, i64 -6148914691236517206, i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766, i8 -86, i8 -86, [2 x i8] c"\AA\AA", i32 -1431655766, i32 -1431655766, i32 -1431655766, i8 -86, i8 -86, [6 x i8] c"\AA\AA\AA\AA\AA\AA", %"class.std::__1::basic_string" { %"class.std::__1::__compressed_pair" { %"struct.std::__1::__compressed_pair_elem" { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" { %union.anon { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" { i16* inttoptr (i64 -6148914691236517206 to i16*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } }, %"class.std::__1::vector" { %"class.std::__1::__vector_base" { %"class.std::__1::basic_string"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::basic_string"*), %"class.std::__1::basic_string"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::basic_string"*), %"class.std::__1::__compressed_pair.17" { %"struct.std::__1::__compressed_pair_elem.18" { %"class.std::__1::basic_string"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::basic_string"*) } } } }, %"class.std::__1::vector" { %"class.std::__1::__vector_base" { %"class.std::__1::basic_string"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::basic_string"*), %"class.std::__1::basic_string"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::basic_string"*), %"class.std::__1::__compressed_pair.17" { %"struct.std::__1::__compressed_pair_elem.18" { %"class.std::__1::basic_string"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::basic_string"*) } } } }, i32 -1431655766, %"class.gfx::RectF" { %"class.gfx::PointF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"class.gfx::SizeF" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 } }, [4 x i8] c"\AA\AA\AA\AA", %"class.std::__1::vector" { %"class.std::__1::__vector_base" { %"class.std::__1::basic_string"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::basic_string"*), %"class.std::__1::basic_string"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::basic_string"*), %"class.std::__1::__compressed_pair.17" { %"struct.std::__1::__compressed_pair_elem.18" { %"class.std::__1::basic_string"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::basic_string"*) } } } }, %"class.std::__1::vector" { %"class.std::__1::__vector_base" { %"class.std::__1::basic_string"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::basic_string"*), %"class.std::__1::basic_string"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::basic_string"*), %"class.std::__1::__compressed_pair.17" { %"struct.std::__1::__compressed_pair_elem.18" { %"class.std::__1::basic_string"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::basic_string"*) } } } } }, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %"class.std::__1::basic_string.1" { %"class.std::__1::__compressed_pair.2" { %"struct.std::__1::__compressed_pair_elem.3" { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" { %union.anon.4 { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" { i8* inttoptr (i64 -6148914691236517206 to i8*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } }, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %"class.std::__1::vector.22" { %"class.std::__1::__vector_base.23" { %"struct.autofill::PasswordAndMetadata"* inttoptr (i64 -6148914691236517206 to %"struct.autofill::PasswordAndMetadata"*), %"struct.autofill::PasswordAndMetadata"* inttoptr (i64 -6148914691236517206 to %"struct.autofill::PasswordAndMetadata"*), %"class.std::__1::__compressed_pair.24" { %"struct.std::__1::__compressed_pair_elem.25" { %"struct.autofill::PasswordAndMetadata"* inttoptr (i64 -6148914691236517206 to %"struct.autofill::PasswordAndMetadata"*) } } } }, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA" }>, align 8

@_ZN8autofill19PasswordAndMetadataC1Ev = hidden unnamed_addr alias void (%"struct.autofill::PasswordAndMetadata"*), void (%"struct.autofill::PasswordAndMetadata"*)* @_ZN8autofill19PasswordAndMetadataC2Ev
@_ZN8autofill19PasswordAndMetadataC1ERKS0_ = hidden unnamed_addr alias void (%"struct.autofill::PasswordAndMetadata"*, %"struct.autofill::PasswordAndMetadata"*), void (%"struct.autofill::PasswordAndMetadata"*, %"struct.autofill::PasswordAndMetadata"*)* @_ZN8autofill19PasswordAndMetadataC2ERKS0_
@_ZN8autofill19PasswordAndMetadataC1EOS0_ = hidden unnamed_addr alias void (%"struct.autofill::PasswordAndMetadata"*, %"struct.autofill::PasswordAndMetadata"*), void (%"struct.autofill::PasswordAndMetadata"*, %"struct.autofill::PasswordAndMetadata"*)* @_ZN8autofill19PasswordAndMetadataC2EOS0_
@_ZN8autofill19PasswordAndMetadataD1Ev = hidden unnamed_addr alias void (%"struct.autofill::PasswordAndMetadata"*), void (%"struct.autofill::PasswordAndMetadata"*)* @_ZN8autofill19PasswordAndMetadataD2Ev
@_ZN8autofill20PasswordFormFillDataC1Ev = hidden unnamed_addr alias void (%"struct.autofill::PasswordFormFillData"*), void (%"struct.autofill::PasswordFormFillData"*)* @_ZN8autofill20PasswordFormFillDataC2Ev
@_ZN8autofill20PasswordFormFillDataC1ERKS0_ = hidden unnamed_addr alias void (%"struct.autofill::PasswordFormFillData"*, %"struct.autofill::PasswordFormFillData"*), void (%"struct.autofill::PasswordFormFillData"*, %"struct.autofill::PasswordFormFillData"*)* @_ZN8autofill20PasswordFormFillDataC2ERKS0_
@_ZN8autofill20PasswordFormFillDataC1EOS0_ = hidden unnamed_addr alias void (%"struct.autofill::PasswordFormFillData"*, %"struct.autofill::PasswordFormFillData"*), void (%"struct.autofill::PasswordFormFillData"*, %"struct.autofill::PasswordFormFillData"*)* @_ZN8autofill20PasswordFormFillDataC2EOS0_
@_ZN8autofill20PasswordFormFillDataD1Ev = hidden unnamed_addr alias void (%"struct.autofill::PasswordFormFillData"*), void (%"struct.autofill::PasswordFormFillData"*)* @_ZN8autofill20PasswordFormFillDataD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8autofill19PasswordAndMetadataC2Ev(%"struct.autofill::PasswordAndMetadata"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"struct.autofill::PasswordAndMetadata"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 73, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8autofill19PasswordAndMetadataC2ERKS0_(%"struct.autofill::PasswordAndMetadata"*, %"struct.autofill::PasswordAndMetadata"* nocapture readonly dereferenceable(80)) unnamed_addr #0 align 2 {
  %3 = bitcast %"struct.autofill::PasswordAndMetadata"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %3, i64 0, i32 1, i32 1
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = bitcast %"struct.autofill::PasswordAndMetadata"* %0 to i8*
  %9 = bitcast %"struct.autofill::PasswordAndMetadata"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 24, i1 false) #8
  br label %185

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.autofill::PasswordAndMetadata", %"struct.autofill::PasswordAndMetadata"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load i16*, i16** %11, align 8
  %13 = getelementptr inbounds %"struct.autofill::PasswordAndMetadata", %"struct.autofill::PasswordAndMetadata"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = icmp ult i64 %14, 11
  br i1 %15, label %16, label %21

16:                                               ; preds = %10
  %17 = bitcast %"struct.autofill::PasswordAndMetadata"* %0 to i16*
  %18 = trunc i64 %14 to i8
  %19 = bitcast %"struct.autofill::PasswordAndMetadata"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %19, i64 0, i32 1, i32 1
  store i8 %18, i8* %20, align 1
  br label %38

21:                                               ; preds = %10
  %22 = icmp ugt i64 %14, 9223372036854775791
  br i1 %22, label %23, label %25

23:                                               ; preds = %21
  %24 = bitcast %"struct.autofill::PasswordAndMetadata"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %24) #9
  unreachable

25:                                               ; preds = %21
  %26 = add nuw nsw i64 %14, 8
  %27 = and i64 %26, -8
  %28 = icmp slt i64 %27, 0
  br i1 %28, label %29, label %30

29:                                               ; preds = %25
  tail call void @abort() #9
  unreachable

30:                                               ; preds = %25
  %31 = shl i64 %27, 1
  %32 = tail call i8* @_Znwm(i64 %31) #10
  %33 = bitcast i8* %32 to i16*
  %34 = bitcast %"struct.autofill::PasswordAndMetadata"* %0 to i8**
  store i8* %32, i8** %34, align 8
  %35 = or i64 %27, -9223372036854775808
  %36 = getelementptr inbounds %"struct.autofill::PasswordAndMetadata", %"struct.autofill::PasswordAndMetadata"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %35, i64* %36, align 8
  %37 = getelementptr inbounds %"struct.autofill::PasswordAndMetadata", %"struct.autofill::PasswordAndMetadata"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %14, i64* %37, align 8
  br label %38

38:                                               ; preds = %30, %16
  %39 = phi i16* [ %17, %16 ], [ %33, %30 ]
  %40 = add nuw nsw i64 %14, 1
  %41 = add i64 %14, 1
  %42 = icmp ult i64 %41, 16
  br i1 %42, label %132, label %43

43:                                               ; preds = %38
  %44 = add i64 %14, 1
  %45 = getelementptr i16, i16* %39, i64 %44
  %46 = getelementptr i16, i16* %12, i64 %44
  %47 = icmp ult i16* %39, %46
  %48 = icmp ult i16* %12, %45
  %49 = and i1 %47, %48
  br i1 %49, label %132, label %50

50:                                               ; preds = %43
  %51 = and i64 %41, -16
  %52 = sub i64 %40, %51
  %53 = getelementptr i16, i16* %12, i64 %51
  %54 = getelementptr i16, i16* %39, i64 %51
  %55 = add i64 %51, -16
  %56 = lshr exact i64 %55, 4
  %57 = add nuw nsw i64 %56, 1
  %58 = and i64 %57, 3
  %59 = icmp ult i64 %55, 48
  br i1 %59, label %111, label %60

60:                                               ; preds = %50
  %61 = sub nsw i64 %57, %58
  br label %62

62:                                               ; preds = %62, %60
  %63 = phi i64 [ 0, %60 ], [ %108, %62 ]
  %64 = phi i64 [ %61, %60 ], [ %109, %62 ]
  %65 = getelementptr i16, i16* %12, i64 %63
  %66 = getelementptr i16, i16* %39, i64 %63
  %67 = bitcast i16* %65 to <8 x i16>*
  %68 = load <8 x i16>, <8 x i16>* %67, align 2, !alias.scope !2
  %69 = getelementptr i16, i16* %65, i64 8
  %70 = bitcast i16* %69 to <8 x i16>*
  %71 = load <8 x i16>, <8 x i16>* %70, align 2, !alias.scope !2
  %72 = bitcast i16* %66 to <8 x i16>*
  store <8 x i16> %68, <8 x i16>* %72, align 2, !alias.scope !5, !noalias !2
  %73 = getelementptr i16, i16* %66, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  store <8 x i16> %71, <8 x i16>* %74, align 2, !alias.scope !5, !noalias !2
  %75 = or i64 %63, 16
  %76 = getelementptr i16, i16* %12, i64 %75
  %77 = getelementptr i16, i16* %39, i64 %75
  %78 = bitcast i16* %76 to <8 x i16>*
  %79 = load <8 x i16>, <8 x i16>* %78, align 2, !alias.scope !2
  %80 = getelementptr i16, i16* %76, i64 8
  %81 = bitcast i16* %80 to <8 x i16>*
  %82 = load <8 x i16>, <8 x i16>* %81, align 2, !alias.scope !2
  %83 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %79, <8 x i16>* %83, align 2, !alias.scope !5, !noalias !2
  %84 = getelementptr i16, i16* %77, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  store <8 x i16> %82, <8 x i16>* %85, align 2, !alias.scope !5, !noalias !2
  %86 = or i64 %63, 32
  %87 = getelementptr i16, i16* %12, i64 %86
  %88 = getelementptr i16, i16* %39, i64 %86
  %89 = bitcast i16* %87 to <8 x i16>*
  %90 = load <8 x i16>, <8 x i16>* %89, align 2, !alias.scope !2
  %91 = getelementptr i16, i16* %87, i64 8
  %92 = bitcast i16* %91 to <8 x i16>*
  %93 = load <8 x i16>, <8 x i16>* %92, align 2, !alias.scope !2
  %94 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %90, <8 x i16>* %94, align 2, !alias.scope !5, !noalias !2
  %95 = getelementptr i16, i16* %88, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  store <8 x i16> %93, <8 x i16>* %96, align 2, !alias.scope !5, !noalias !2
  %97 = or i64 %63, 48
  %98 = getelementptr i16, i16* %12, i64 %97
  %99 = getelementptr i16, i16* %39, i64 %97
  %100 = bitcast i16* %98 to <8 x i16>*
  %101 = load <8 x i16>, <8 x i16>* %100, align 2, !alias.scope !2
  %102 = getelementptr i16, i16* %98, i64 8
  %103 = bitcast i16* %102 to <8 x i16>*
  %104 = load <8 x i16>, <8 x i16>* %103, align 2, !alias.scope !2
  %105 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %101, <8 x i16>* %105, align 2, !alias.scope !5, !noalias !2
  %106 = getelementptr i16, i16* %99, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  store <8 x i16> %104, <8 x i16>* %107, align 2, !alias.scope !5, !noalias !2
  %108 = add i64 %63, 64
  %109 = add i64 %64, -4
  %110 = icmp eq i64 %109, 0
  br i1 %110, label %111, label %62, !llvm.loop !7

111:                                              ; preds = %62, %50
  %112 = phi i64 [ 0, %50 ], [ %108, %62 ]
  %113 = icmp eq i64 %58, 0
  br i1 %113, label %130, label %114

114:                                              ; preds = %111, %114
  %115 = phi i64 [ %127, %114 ], [ %112, %111 ]
  %116 = phi i64 [ %128, %114 ], [ %58, %111 ]
  %117 = getelementptr i16, i16* %12, i64 %115
  %118 = getelementptr i16, i16* %39, i64 %115
  %119 = bitcast i16* %117 to <8 x i16>*
  %120 = load <8 x i16>, <8 x i16>* %119, align 2, !alias.scope !2
  %121 = getelementptr i16, i16* %117, i64 8
  %122 = bitcast i16* %121 to <8 x i16>*
  %123 = load <8 x i16>, <8 x i16>* %122, align 2, !alias.scope !2
  %124 = bitcast i16* %118 to <8 x i16>*
  store <8 x i16> %120, <8 x i16>* %124, align 2, !alias.scope !5, !noalias !2
  %125 = getelementptr i16, i16* %118, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  store <8 x i16> %123, <8 x i16>* %126, align 2, !alias.scope !5, !noalias !2
  %127 = add i64 %115, 16
  %128 = add i64 %116, -1
  %129 = icmp eq i64 %128, 0
  br i1 %129, label %130, label %114, !llvm.loop !9

130:                                              ; preds = %114, %111
  %131 = icmp eq i64 %41, %51
  br i1 %131, label %185, label %132

132:                                              ; preds = %130, %43, %38
  %133 = phi i64 [ %40, %43 ], [ %40, %38 ], [ %52, %130 ]
  %134 = phi i16* [ %12, %43 ], [ %12, %38 ], [ %53, %130 ]
  %135 = phi i16* [ %39, %43 ], [ %39, %38 ], [ %54, %130 ]
  %136 = add i64 %133, -1
  %137 = and i64 %133, 7
  %138 = icmp eq i64 %137, 0
  br i1 %138, label %150, label %139

139:                                              ; preds = %132, %139
  %140 = phi i64 [ %145, %139 ], [ %133, %132 ]
  %141 = phi i16* [ %147, %139 ], [ %134, %132 ]
  %142 = phi i16* [ %146, %139 ], [ %135, %132 ]
  %143 = phi i64 [ %148, %139 ], [ %137, %132 ]
  %144 = load i16, i16* %141, align 2
  store i16 %144, i16* %142, align 2
  %145 = add i64 %140, -1
  %146 = getelementptr inbounds i16, i16* %142, i64 1
  %147 = getelementptr inbounds i16, i16* %141, i64 1
  %148 = add i64 %143, -1
  %149 = icmp eq i64 %148, 0
  br i1 %149, label %150, label %139, !llvm.loop !11

150:                                              ; preds = %139, %132
  %151 = phi i64 [ %133, %132 ], [ %145, %139 ]
  %152 = phi i16* [ %134, %132 ], [ %147, %139 ]
  %153 = phi i16* [ %135, %132 ], [ %146, %139 ]
  %154 = icmp ult i64 %136, 7
  br i1 %154, label %185, label %155

155:                                              ; preds = %150, %155
  %156 = phi i64 [ %181, %155 ], [ %151, %150 ]
  %157 = phi i16* [ %183, %155 ], [ %152, %150 ]
  %158 = phi i16* [ %182, %155 ], [ %153, %150 ]
  %159 = load i16, i16* %157, align 2
  store i16 %159, i16* %158, align 2
  %160 = getelementptr inbounds i16, i16* %158, i64 1
  %161 = getelementptr inbounds i16, i16* %157, i64 1
  %162 = load i16, i16* %161, align 2
  store i16 %162, i16* %160, align 2
  %163 = getelementptr inbounds i16, i16* %158, i64 2
  %164 = getelementptr inbounds i16, i16* %157, i64 2
  %165 = load i16, i16* %164, align 2
  store i16 %165, i16* %163, align 2
  %166 = getelementptr inbounds i16, i16* %158, i64 3
  %167 = getelementptr inbounds i16, i16* %157, i64 3
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = getelementptr inbounds i16, i16* %158, i64 4
  %170 = getelementptr inbounds i16, i16* %157, i64 4
  %171 = load i16, i16* %170, align 2
  store i16 %171, i16* %169, align 2
  %172 = getelementptr inbounds i16, i16* %158, i64 5
  %173 = getelementptr inbounds i16, i16* %157, i64 5
  %174 = load i16, i16* %173, align 2
  store i16 %174, i16* %172, align 2
  %175 = getelementptr inbounds i16, i16* %158, i64 6
  %176 = getelementptr inbounds i16, i16* %157, i64 6
  %177 = load i16, i16* %176, align 2
  store i16 %177, i16* %175, align 2
  %178 = getelementptr inbounds i16, i16* %158, i64 7
  %179 = getelementptr inbounds i16, i16* %157, i64 7
  %180 = load i16, i16* %179, align 2
  store i16 %180, i16* %178, align 2
  %181 = add i64 %156, -8
  %182 = getelementptr inbounds i16, i16* %158, i64 8
  %183 = getelementptr inbounds i16, i16* %157, i64 8
  %184 = icmp eq i64 %181, 0
  br i1 %184, label %185, label %155, !llvm.loop !12

185:                                              ; preds = %150, %155, %130, %7
  %186 = getelementptr inbounds %"struct.autofill::PasswordAndMetadata", %"struct.autofill::PasswordAndMetadata"* %0, i64 0, i32 1
  %187 = getelementptr inbounds %"struct.autofill::PasswordAndMetadata", %"struct.autofill::PasswordAndMetadata"* %1, i64 0, i32 1
  %188 = bitcast %"class.std::__1::basic_string"* %187 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %189 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %188, i64 0, i32 1, i32 1
  %190 = load i8, i8* %189, align 1
  %191 = icmp slt i8 %190, 0
  br i1 %191, label %195, label %192

192:                                              ; preds = %185
  %193 = bitcast %"class.std::__1::basic_string"* %186 to i8*
  %194 = bitcast %"class.std::__1::basic_string"* %187 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %193, i8* align 8 %194, i64 24, i1 false) #8
  br label %370

195:                                              ; preds = %185
  %196 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %187, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %197 = load i16*, i16** %196, align 8
  %198 = getelementptr inbounds %"struct.autofill::PasswordAndMetadata", %"struct.autofill::PasswordAndMetadata"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %199 = load i64, i64* %198, align 8
  %200 = icmp ult i64 %199, 11
  br i1 %200, label %201, label %206

201:                                              ; preds = %195
  %202 = bitcast %"class.std::__1::basic_string"* %186 to i16*
  %203 = trunc i64 %199 to i8
  %204 = bitcast %"class.std::__1::basic_string"* %186 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %205 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %204, i64 0, i32 1, i32 1
  store i8 %203, i8* %205, align 1
  br label %223

206:                                              ; preds = %195
  %207 = icmp ugt i64 %199, 9223372036854775791
  br i1 %207, label %208, label %210

208:                                              ; preds = %206
  %209 = bitcast %"class.std::__1::basic_string"* %186 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %209) #9
  unreachable

210:                                              ; preds = %206
  %211 = add nuw nsw i64 %199, 8
  %212 = and i64 %211, -8
  %213 = icmp slt i64 %212, 0
  br i1 %213, label %214, label %215

214:                                              ; preds = %210
  tail call void @abort() #9
  unreachable

215:                                              ; preds = %210
  %216 = shl i64 %212, 1
  %217 = tail call i8* @_Znwm(i64 %216) #10
  %218 = bitcast i8* %217 to i16*
  %219 = bitcast %"class.std::__1::basic_string"* %186 to i8**
  store i8* %217, i8** %219, align 8
  %220 = or i64 %212, -9223372036854775808
  %221 = getelementptr inbounds %"struct.autofill::PasswordAndMetadata", %"struct.autofill::PasswordAndMetadata"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %220, i64* %221, align 8
  %222 = getelementptr inbounds %"struct.autofill::PasswordAndMetadata", %"struct.autofill::PasswordAndMetadata"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %199, i64* %222, align 8
  br label %223

223:                                              ; preds = %215, %201
  %224 = phi i16* [ %202, %201 ], [ %218, %215 ]
  %225 = add nuw nsw i64 %199, 1
  %226 = add i64 %199, 1
  %227 = icmp ult i64 %226, 16
  br i1 %227, label %317, label %228

228:                                              ; preds = %223
  %229 = add i64 %199, 1
  %230 = getelementptr i16, i16* %224, i64 %229
  %231 = getelementptr i16, i16* %197, i64 %229
  %232 = icmp ult i16* %224, %231
  %233 = icmp ult i16* %197, %230
  %234 = and i1 %232, %233
  br i1 %234, label %317, label %235

235:                                              ; preds = %228
  %236 = and i64 %226, -16
  %237 = sub i64 %225, %236
  %238 = getelementptr i16, i16* %197, i64 %236
  %239 = getelementptr i16, i16* %224, i64 %236
  %240 = add i64 %236, -16
  %241 = lshr exact i64 %240, 4
  %242 = add nuw nsw i64 %241, 1
  %243 = and i64 %242, 3
  %244 = icmp ult i64 %240, 48
  br i1 %244, label %296, label %245

245:                                              ; preds = %235
  %246 = sub nsw i64 %242, %243
  br label %247

247:                                              ; preds = %247, %245
  %248 = phi i64 [ 0, %245 ], [ %293, %247 ]
  %249 = phi i64 [ %246, %245 ], [ %294, %247 ]
  %250 = getelementptr i16, i16* %197, i64 %248
  %251 = getelementptr i16, i16* %224, i64 %248
  %252 = bitcast i16* %250 to <8 x i16>*
  %253 = load <8 x i16>, <8 x i16>* %252, align 2, !alias.scope !13
  %254 = getelementptr i16, i16* %250, i64 8
  %255 = bitcast i16* %254 to <8 x i16>*
  %256 = load <8 x i16>, <8 x i16>* %255, align 2, !alias.scope !13
  %257 = bitcast i16* %251 to <8 x i16>*
  store <8 x i16> %253, <8 x i16>* %257, align 2, !alias.scope !16, !noalias !13
  %258 = getelementptr i16, i16* %251, i64 8
  %259 = bitcast i16* %258 to <8 x i16>*
  store <8 x i16> %256, <8 x i16>* %259, align 2, !alias.scope !16, !noalias !13
  %260 = or i64 %248, 16
  %261 = getelementptr i16, i16* %197, i64 %260
  %262 = getelementptr i16, i16* %224, i64 %260
  %263 = bitcast i16* %261 to <8 x i16>*
  %264 = load <8 x i16>, <8 x i16>* %263, align 2, !alias.scope !13
  %265 = getelementptr i16, i16* %261, i64 8
  %266 = bitcast i16* %265 to <8 x i16>*
  %267 = load <8 x i16>, <8 x i16>* %266, align 2, !alias.scope !13
  %268 = bitcast i16* %262 to <8 x i16>*
  store <8 x i16> %264, <8 x i16>* %268, align 2, !alias.scope !16, !noalias !13
  %269 = getelementptr i16, i16* %262, i64 8
  %270 = bitcast i16* %269 to <8 x i16>*
  store <8 x i16> %267, <8 x i16>* %270, align 2, !alias.scope !16, !noalias !13
  %271 = or i64 %248, 32
  %272 = getelementptr i16, i16* %197, i64 %271
  %273 = getelementptr i16, i16* %224, i64 %271
  %274 = bitcast i16* %272 to <8 x i16>*
  %275 = load <8 x i16>, <8 x i16>* %274, align 2, !alias.scope !13
  %276 = getelementptr i16, i16* %272, i64 8
  %277 = bitcast i16* %276 to <8 x i16>*
  %278 = load <8 x i16>, <8 x i16>* %277, align 2, !alias.scope !13
  %279 = bitcast i16* %273 to <8 x i16>*
  store <8 x i16> %275, <8 x i16>* %279, align 2, !alias.scope !16, !noalias !13
  %280 = getelementptr i16, i16* %273, i64 8
  %281 = bitcast i16* %280 to <8 x i16>*
  store <8 x i16> %278, <8 x i16>* %281, align 2, !alias.scope !16, !noalias !13
  %282 = or i64 %248, 48
  %283 = getelementptr i16, i16* %197, i64 %282
  %284 = getelementptr i16, i16* %224, i64 %282
  %285 = bitcast i16* %283 to <8 x i16>*
  %286 = load <8 x i16>, <8 x i16>* %285, align 2, !alias.scope !13
  %287 = getelementptr i16, i16* %283, i64 8
  %288 = bitcast i16* %287 to <8 x i16>*
  %289 = load <8 x i16>, <8 x i16>* %288, align 2, !alias.scope !13
  %290 = bitcast i16* %284 to <8 x i16>*
  store <8 x i16> %286, <8 x i16>* %290, align 2, !alias.scope !16, !noalias !13
  %291 = getelementptr i16, i16* %284, i64 8
  %292 = bitcast i16* %291 to <8 x i16>*
  store <8 x i16> %289, <8 x i16>* %292, align 2, !alias.scope !16, !noalias !13
  %293 = add i64 %248, 64
  %294 = add i64 %249, -4
  %295 = icmp eq i64 %294, 0
  br i1 %295, label %296, label %247, !llvm.loop !18

296:                                              ; preds = %247, %235
  %297 = phi i64 [ 0, %235 ], [ %293, %247 ]
  %298 = icmp eq i64 %243, 0
  br i1 %298, label %315, label %299

299:                                              ; preds = %296, %299
  %300 = phi i64 [ %312, %299 ], [ %297, %296 ]
  %301 = phi i64 [ %313, %299 ], [ %243, %296 ]
  %302 = getelementptr i16, i16* %197, i64 %300
  %303 = getelementptr i16, i16* %224, i64 %300
  %304 = bitcast i16* %302 to <8 x i16>*
  %305 = load <8 x i16>, <8 x i16>* %304, align 2, !alias.scope !13
  %306 = getelementptr i16, i16* %302, i64 8
  %307 = bitcast i16* %306 to <8 x i16>*
  %308 = load <8 x i16>, <8 x i16>* %307, align 2, !alias.scope !13
  %309 = bitcast i16* %303 to <8 x i16>*
  store <8 x i16> %305, <8 x i16>* %309, align 2, !alias.scope !16, !noalias !13
  %310 = getelementptr i16, i16* %303, i64 8
  %311 = bitcast i16* %310 to <8 x i16>*
  store <8 x i16> %308, <8 x i16>* %311, align 2, !alias.scope !16, !noalias !13
  %312 = add i64 %300, 16
  %313 = add i64 %301, -1
  %314 = icmp eq i64 %313, 0
  br i1 %314, label %315, label %299, !llvm.loop !19

315:                                              ; preds = %299, %296
  %316 = icmp eq i64 %226, %236
  br i1 %316, label %370, label %317

317:                                              ; preds = %315, %228, %223
  %318 = phi i64 [ %225, %228 ], [ %225, %223 ], [ %237, %315 ]
  %319 = phi i16* [ %197, %228 ], [ %197, %223 ], [ %238, %315 ]
  %320 = phi i16* [ %224, %228 ], [ %224, %223 ], [ %239, %315 ]
  %321 = add i64 %318, -1
  %322 = and i64 %318, 7
  %323 = icmp eq i64 %322, 0
  br i1 %323, label %335, label %324

324:                                              ; preds = %317, %324
  %325 = phi i64 [ %330, %324 ], [ %318, %317 ]
  %326 = phi i16* [ %332, %324 ], [ %319, %317 ]
  %327 = phi i16* [ %331, %324 ], [ %320, %317 ]
  %328 = phi i64 [ %333, %324 ], [ %322, %317 ]
  %329 = load i16, i16* %326, align 2
  store i16 %329, i16* %327, align 2
  %330 = add i64 %325, -1
  %331 = getelementptr inbounds i16, i16* %327, i64 1
  %332 = getelementptr inbounds i16, i16* %326, i64 1
  %333 = add i64 %328, -1
  %334 = icmp eq i64 %333, 0
  br i1 %334, label %335, label %324, !llvm.loop !20

335:                                              ; preds = %324, %317
  %336 = phi i64 [ %318, %317 ], [ %330, %324 ]
  %337 = phi i16* [ %319, %317 ], [ %332, %324 ]
  %338 = phi i16* [ %320, %317 ], [ %331, %324 ]
  %339 = icmp ult i64 %321, 7
  br i1 %339, label %370, label %340

340:                                              ; preds = %335, %340
  %341 = phi i64 [ %366, %340 ], [ %336, %335 ]
  %342 = phi i16* [ %368, %340 ], [ %337, %335 ]
  %343 = phi i16* [ %367, %340 ], [ %338, %335 ]
  %344 = load i16, i16* %342, align 2
  store i16 %344, i16* %343, align 2
  %345 = getelementptr inbounds i16, i16* %343, i64 1
  %346 = getelementptr inbounds i16, i16* %342, i64 1
  %347 = load i16, i16* %346, align 2
  store i16 %347, i16* %345, align 2
  %348 = getelementptr inbounds i16, i16* %343, i64 2
  %349 = getelementptr inbounds i16, i16* %342, i64 2
  %350 = load i16, i16* %349, align 2
  store i16 %350, i16* %348, align 2
  %351 = getelementptr inbounds i16, i16* %343, i64 3
  %352 = getelementptr inbounds i16, i16* %342, i64 3
  %353 = load i16, i16* %352, align 2
  store i16 %353, i16* %351, align 2
  %354 = getelementptr inbounds i16, i16* %343, i64 4
  %355 = getelementptr inbounds i16, i16* %342, i64 4
  %356 = load i16, i16* %355, align 2
  store i16 %356, i16* %354, align 2
  %357 = getelementptr inbounds i16, i16* %343, i64 5
  %358 = getelementptr inbounds i16, i16* %342, i64 5
  %359 = load i16, i16* %358, align 2
  store i16 %359, i16* %357, align 2
  %360 = getelementptr inbounds i16, i16* %343, i64 6
  %361 = getelementptr inbounds i16, i16* %342, i64 6
  %362 = load i16, i16* %361, align 2
  store i16 %362, i16* %360, align 2
  %363 = getelementptr inbounds i16, i16* %343, i64 7
  %364 = getelementptr inbounds i16, i16* %342, i64 7
  %365 = load i16, i16* %364, align 2
  store i16 %365, i16* %363, align 2
  %366 = add i64 %341, -8
  %367 = getelementptr inbounds i16, i16* %343, i64 8
  %368 = getelementptr inbounds i16, i16* %342, i64 8
  %369 = icmp eq i64 %366, 0
  br i1 %369, label %370, label %340, !llvm.loop !21

370:                                              ; preds = %335, %340, %315, %192
  %371 = getelementptr inbounds %"struct.autofill::PasswordAndMetadata", %"struct.autofill::PasswordAndMetadata"* %0, i64 0, i32 2
  %372 = getelementptr inbounds %"struct.autofill::PasswordAndMetadata", %"struct.autofill::PasswordAndMetadata"* %1, i64 0, i32 2
  %373 = bitcast %"class.std::__1::basic_string.1"* %372 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %374 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %373, i64 0, i32 1, i32 0
  %375 = load i8, i8* %374, align 1
  %376 = icmp slt i8 %375, 0
  br i1 %376, label %380, label %377

377:                                              ; preds = %370
  %378 = bitcast %"class.std::__1::basic_string.1"* %371 to i8*
  %379 = bitcast %"class.std::__1::basic_string.1"* %372 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %378, i8* align 8 %379, i64 24, i1 false) #8
  br label %385

380:                                              ; preds = %370
  %381 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %372, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %382 = load i8*, i8** %381, align 8
  %383 = getelementptr inbounds %"struct.autofill::PasswordAndMetadata", %"struct.autofill::PasswordAndMetadata"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %384 = load i64, i64* %383, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string.1"* %371, i8* %382, i64 %384) #8
  br label %385

385:                                              ; preds = %377, %380
  %386 = getelementptr inbounds %"struct.autofill::PasswordAndMetadata", %"struct.autofill::PasswordAndMetadata"* %0, i64 0, i32 3
  %387 = getelementptr inbounds %"struct.autofill::PasswordAndMetadata", %"struct.autofill::PasswordAndMetadata"* %1, i64 0, i32 3
  %388 = load i8, i8* %387, align 8, !range !22
  store i8 %388, i8* %386, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8autofill19PasswordAndMetadataC2EOS0_(%"struct.autofill::PasswordAndMetadata"* nocapture, %"struct.autofill::PasswordAndMetadata"* nocapture dereferenceable(80)) unnamed_addr #0 align 2 {
  %3 = bitcast %"struct.autofill::PasswordAndMetadata"* %0 to i8*
  %4 = bitcast %"struct.autofill::PasswordAndMetadata"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 24, i1 false) #8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 24, i1 false) #8
  %5 = getelementptr inbounds %"struct.autofill::PasswordAndMetadata", %"struct.autofill::PasswordAndMetadata"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"struct.autofill::PasswordAndMetadata", %"struct.autofill::PasswordAndMetadata"* %1, i64 0, i32 1
  %7 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  %8 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 24, i1 false) #8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 24, i1 false) #8
  %9 = getelementptr inbounds %"struct.autofill::PasswordAndMetadata", %"struct.autofill::PasswordAndMetadata"* %0, i64 0, i32 2
  %10 = getelementptr inbounds %"struct.autofill::PasswordAndMetadata", %"struct.autofill::PasswordAndMetadata"* %1, i64 0, i32 2
  %11 = bitcast %"class.std::__1::basic_string.1"* %9 to i8*
  %12 = bitcast %"class.std::__1::basic_string.1"* %10 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 24, i1 false) #8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 24, i1 false) #8
  %13 = getelementptr inbounds %"struct.autofill::PasswordAndMetadata", %"struct.autofill::PasswordAndMetadata"* %0, i64 0, i32 3
  %14 = getelementptr inbounds %"struct.autofill::PasswordAndMetadata", %"struct.autofill::PasswordAndMetadata"* %1, i64 0, i32 3
  %15 = load i8, i8* %14, align 8, !range !22
  store i8 %15, i8* %13, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(80) %"struct.autofill::PasswordAndMetadata"* @_ZN8autofill19PasswordAndMetadataaSERKS0_(%"struct.autofill::PasswordAndMetadata"* returned, %"struct.autofill::PasswordAndMetadata"* dereferenceable(80)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.autofill::PasswordAndMetadata", %"struct.autofill::PasswordAndMetadata"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"struct.autofill::PasswordAndMetadata", %"struct.autofill::PasswordAndMetadata"* %1, i64 0, i32 0
  %5 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string"* %3, %"class.std::__1::basic_string"* dereferenceable(24) %4)
  %6 = getelementptr inbounds %"struct.autofill::PasswordAndMetadata", %"struct.autofill::PasswordAndMetadata"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"struct.autofill::PasswordAndMetadata", %"struct.autofill::PasswordAndMetadata"* %1, i64 0, i32 1
  %8 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string"* %6, %"class.std::__1::basic_string"* dereferenceable(24) %7)
  %9 = getelementptr inbounds %"struct.autofill::PasswordAndMetadata", %"struct.autofill::PasswordAndMetadata"* %0, i64 0, i32 2
  %10 = getelementptr inbounds %"struct.autofill::PasswordAndMetadata", %"struct.autofill::PasswordAndMetadata"* %1, i64 0, i32 2
  %11 = icmp eq %"struct.autofill::PasswordAndMetadata"* %0, %1
  br i1 %11, label %41, label %12

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::basic_string.1"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  %17 = bitcast %"class.std::__1::basic_string.1"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  %19 = load i8, i8* %18, align 1
  %20 = icmp slt i8 %19, 0
  br i1 %16, label %31, label %21

21:                                               ; preds = %12
  br i1 %20, label %25, label %22

22:                                               ; preds = %21
  %23 = bitcast %"class.std::__1::basic_string.1"* %9 to i8*
  %24 = bitcast %"class.std::__1::basic_string.1"* %10 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 %24, i64 24, i1 false) #8
  br label %41

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds %"struct.autofill::PasswordAndMetadata", %"struct.autofill::PasswordAndMetadata"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = tail call dereferenceable(24) %"class.std::__1::basic_string.1"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string.1"* %9, i8* %27, i64 %29) #8
  br label %41

31:                                               ; preds = %12
  %32 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load i8*, i8** %32, align 8
  %34 = getelementptr inbounds %"struct.autofill::PasswordAndMetadata", %"struct.autofill::PasswordAndMetadata"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %35 = load i64, i64* %34, align 8
  %36 = bitcast %"class.std::__1::basic_string.1"* %10 to i8*
  %37 = zext i8 %19 to i64
  %38 = select i1 %20, i8* %33, i8* %36
  %39 = select i1 %20, i64 %35, i64 %37
  %40 = tail call dereferenceable(24) %"class.std::__1::basic_string.1"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string.1"* %9, i8* %38, i64 %39) #8
  br label %41

41:                                               ; preds = %2, %22, %25, %31
  %42 = getelementptr inbounds %"struct.autofill::PasswordAndMetadata", %"struct.autofill::PasswordAndMetadata"* %1, i64 0, i32 3
  %43 = load i8, i8* %42, align 8, !range !22
  %44 = getelementptr inbounds %"struct.autofill::PasswordAndMetadata", %"struct.autofill::PasswordAndMetadata"* %0, i64 0, i32 3
  store i8 %43, i8* %44, align 8
  ret %"struct.autofill::PasswordAndMetadata"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %4 = icmp eq %"class.std::__1::basic_string"* %0, %1
  br i1 %4, label %510, label %5

5:                                                ; preds = %2
  %6 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %6, i64 0, i32 1, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %10, i64 0, i32 1, i32 1
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %9, label %341, label %14

14:                                               ; preds = %5
  br i1 %13, label %17, label %15

15:                                               ; preds = %14
  %16 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %16, i64 24, i1 false)
  br label %510

17:                                               ; preds = %14
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i16*, i16** %18, align 8
  %20 = bitcast i16* %19 to i8*
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = icmp ult i64 %22, 11
  br i1 %23, label %24, label %175

24:                                               ; preds = %17
  %25 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %26 = trunc i64 %22 to i8
  store i8 %26, i8* %7, align 1
  %27 = icmp eq i64 %22, 0
  br i1 %27, label %173, label %28

28:                                               ; preds = %24
  %29 = icmp ult i64 %22, 16
  br i1 %29, label %120, label %30

30:                                               ; preds = %28
  %31 = shl i64 %22, 1
  %32 = getelementptr i8, i8* %3, i64 %31
  %33 = getelementptr i16, i16* %19, i64 %22
  %34 = bitcast i16* %33 to %"class.std::__1::basic_string"*
  %35 = icmp ugt %"class.std::__1::basic_string"* %34, %0
  %36 = icmp ugt i8* %32, %20
  %37 = and i1 %35, %36
  br i1 %37, label %120, label %38

38:                                               ; preds = %30
  %39 = and i64 %22, -16
  %40 = sub i64 %22, %39
  %41 = getelementptr i16, i16* %19, i64 %39
  %42 = getelementptr i16, i16* %25, i64 %39
  %43 = add i64 %39, -16
  %44 = lshr exact i64 %43, 4
  %45 = add nuw nsw i64 %44, 1
  %46 = and i64 %45, 3
  %47 = icmp ult i64 %43, 48
  br i1 %47, label %99, label %48

48:                                               ; preds = %38
  %49 = sub nsw i64 %45, %46
  br label %50

50:                                               ; preds = %50, %48
  %51 = phi i64 [ 0, %48 ], [ %96, %50 ]
  %52 = phi i64 [ %49, %48 ], [ %97, %50 ]
  %53 = getelementptr i16, i16* %19, i64 %51
  %54 = getelementptr i16, i16* %25, i64 %51
  %55 = bitcast i16* %53 to <8 x i16>*
  %56 = load <8 x i16>, <8 x i16>* %55, align 2, !alias.scope !23
  %57 = getelementptr i16, i16* %53, i64 8
  %58 = bitcast i16* %57 to <8 x i16>*
  %59 = load <8 x i16>, <8 x i16>* %58, align 2, !alias.scope !23
  %60 = bitcast i16* %54 to <8 x i16>*
  store <8 x i16> %56, <8 x i16>* %60, align 2, !alias.scope !26, !noalias !23
  %61 = getelementptr i16, i16* %54, i64 8
  %62 = bitcast i16* %61 to <8 x i16>*
  store <8 x i16> %59, <8 x i16>* %62, align 2, !alias.scope !26, !noalias !23
  %63 = or i64 %51, 16
  %64 = getelementptr i16, i16* %19, i64 %63
  %65 = getelementptr i16, i16* %25, i64 %63
  %66 = bitcast i16* %64 to <8 x i16>*
  %67 = load <8 x i16>, <8 x i16>* %66, align 2, !alias.scope !23
  %68 = getelementptr i16, i16* %64, i64 8
  %69 = bitcast i16* %68 to <8 x i16>*
  %70 = load <8 x i16>, <8 x i16>* %69, align 2, !alias.scope !23
  %71 = bitcast i16* %65 to <8 x i16>*
  store <8 x i16> %67, <8 x i16>* %71, align 2, !alias.scope !26, !noalias !23
  %72 = getelementptr i16, i16* %65, i64 8
  %73 = bitcast i16* %72 to <8 x i16>*
  store <8 x i16> %70, <8 x i16>* %73, align 2, !alias.scope !26, !noalias !23
  %74 = or i64 %51, 32
  %75 = getelementptr i16, i16* %19, i64 %74
  %76 = getelementptr i16, i16* %25, i64 %74
  %77 = bitcast i16* %75 to <8 x i16>*
  %78 = load <8 x i16>, <8 x i16>* %77, align 2, !alias.scope !23
  %79 = getelementptr i16, i16* %75, i64 8
  %80 = bitcast i16* %79 to <8 x i16>*
  %81 = load <8 x i16>, <8 x i16>* %80, align 2, !alias.scope !23
  %82 = bitcast i16* %76 to <8 x i16>*
  store <8 x i16> %78, <8 x i16>* %82, align 2, !alias.scope !26, !noalias !23
  %83 = getelementptr i16, i16* %76, i64 8
  %84 = bitcast i16* %83 to <8 x i16>*
  store <8 x i16> %81, <8 x i16>* %84, align 2, !alias.scope !26, !noalias !23
  %85 = or i64 %51, 48
  %86 = getelementptr i16, i16* %19, i64 %85
  %87 = getelementptr i16, i16* %25, i64 %85
  %88 = bitcast i16* %86 to <8 x i16>*
  %89 = load <8 x i16>, <8 x i16>* %88, align 2, !alias.scope !23
  %90 = getelementptr i16, i16* %86, i64 8
  %91 = bitcast i16* %90 to <8 x i16>*
  %92 = load <8 x i16>, <8 x i16>* %91, align 2, !alias.scope !23
  %93 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %89, <8 x i16>* %93, align 2, !alias.scope !26, !noalias !23
  %94 = getelementptr i16, i16* %87, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  store <8 x i16> %92, <8 x i16>* %95, align 2, !alias.scope !26, !noalias !23
  %96 = add i64 %51, 64
  %97 = add i64 %52, -4
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %99, label %50, !llvm.loop !28

99:                                               ; preds = %50, %38
  %100 = phi i64 [ 0, %38 ], [ %96, %50 ]
  %101 = icmp eq i64 %46, 0
  br i1 %101, label %118, label %102

102:                                              ; preds = %99, %102
  %103 = phi i64 [ %115, %102 ], [ %100, %99 ]
  %104 = phi i64 [ %116, %102 ], [ %46, %99 ]
  %105 = getelementptr i16, i16* %19, i64 %103
  %106 = getelementptr i16, i16* %25, i64 %103
  %107 = bitcast i16* %105 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !23
  %109 = getelementptr i16, i16* %105, i64 8
  %110 = bitcast i16* %109 to <8 x i16>*
  %111 = load <8 x i16>, <8 x i16>* %110, align 2, !alias.scope !23
  %112 = bitcast i16* %106 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %112, align 2, !alias.scope !26, !noalias !23
  %113 = getelementptr i16, i16* %106, i64 8
  %114 = bitcast i16* %113 to <8 x i16>*
  store <8 x i16> %111, <8 x i16>* %114, align 2, !alias.scope !26, !noalias !23
  %115 = add i64 %103, 16
  %116 = add i64 %104, -1
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %118, label %102, !llvm.loop !29

118:                                              ; preds = %102, %99
  %119 = icmp eq i64 %22, %39
  br i1 %119, label %173, label %120

120:                                              ; preds = %118, %30, %28
  %121 = phi i64 [ %22, %30 ], [ %22, %28 ], [ %40, %118 ]
  %122 = phi i16* [ %19, %30 ], [ %19, %28 ], [ %41, %118 ]
  %123 = phi i16* [ %25, %30 ], [ %25, %28 ], [ %42, %118 ]
  %124 = add i64 %121, -1
  %125 = and i64 %121, 7
  %126 = icmp eq i64 %125, 0
  br i1 %126, label %138, label %127

127:                                              ; preds = %120, %127
  %128 = phi i64 [ %133, %127 ], [ %121, %120 ]
  %129 = phi i16* [ %135, %127 ], [ %122, %120 ]
  %130 = phi i16* [ %134, %127 ], [ %123, %120 ]
  %131 = phi i64 [ %136, %127 ], [ %125, %120 ]
  %132 = load i16, i16* %129, align 2
  store i16 %132, i16* %130, align 2
  %133 = add i64 %128, -1
  %134 = getelementptr inbounds i16, i16* %130, i64 1
  %135 = getelementptr inbounds i16, i16* %129, i64 1
  %136 = add i64 %131, -1
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %138, label %127, !llvm.loop !30

138:                                              ; preds = %127, %120
  %139 = phi i64 [ %121, %120 ], [ %133, %127 ]
  %140 = phi i16* [ %122, %120 ], [ %135, %127 ]
  %141 = phi i16* [ %123, %120 ], [ %134, %127 ]
  %142 = icmp ult i64 %124, 7
  br i1 %142, label %173, label %143

143:                                              ; preds = %138, %143
  %144 = phi i64 [ %169, %143 ], [ %139, %138 ]
  %145 = phi i16* [ %171, %143 ], [ %140, %138 ]
  %146 = phi i16* [ %170, %143 ], [ %141, %138 ]
  %147 = load i16, i16* %145, align 2
  store i16 %147, i16* %146, align 2
  %148 = getelementptr inbounds i16, i16* %146, i64 1
  %149 = getelementptr inbounds i16, i16* %145, i64 1
  %150 = load i16, i16* %149, align 2
  store i16 %150, i16* %148, align 2
  %151 = getelementptr inbounds i16, i16* %146, i64 2
  %152 = getelementptr inbounds i16, i16* %145, i64 2
  %153 = load i16, i16* %152, align 2
  store i16 %153, i16* %151, align 2
  %154 = getelementptr inbounds i16, i16* %146, i64 3
  %155 = getelementptr inbounds i16, i16* %145, i64 3
  %156 = load i16, i16* %155, align 2
  store i16 %156, i16* %154, align 2
  %157 = getelementptr inbounds i16, i16* %146, i64 4
  %158 = getelementptr inbounds i16, i16* %145, i64 4
  %159 = load i16, i16* %158, align 2
  store i16 %159, i16* %157, align 2
  %160 = getelementptr inbounds i16, i16* %146, i64 5
  %161 = getelementptr inbounds i16, i16* %145, i64 5
  %162 = load i16, i16* %161, align 2
  store i16 %162, i16* %160, align 2
  %163 = getelementptr inbounds i16, i16* %146, i64 6
  %164 = getelementptr inbounds i16, i16* %145, i64 6
  %165 = load i16, i16* %164, align 2
  store i16 %165, i16* %163, align 2
  %166 = getelementptr inbounds i16, i16* %146, i64 7
  %167 = getelementptr inbounds i16, i16* %145, i64 7
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = add i64 %144, -8
  %170 = getelementptr inbounds i16, i16* %146, i64 8
  %171 = getelementptr inbounds i16, i16* %145, i64 8
  %172 = icmp eq i64 %169, 0
  br i1 %172, label %173, label %143, !llvm.loop !31

173:                                              ; preds = %138, %143, %118, %24
  %174 = getelementptr inbounds i16, i16* %25, i64 %22
  store i16 0, i16* %174, align 2
  br label %510

175:                                              ; preds = %17
  %176 = add i64 %22, -10
  %177 = icmp ugt i64 %176, 9223372036854775780
  br i1 %177, label %178, label %180

178:                                              ; preds = %175
  %179 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %179) #9
  unreachable

180:                                              ; preds = %175
  %181 = icmp ugt i64 %22, 20
  %182 = select i1 %181, i64 %22, i64 20
  %183 = add nuw nsw i64 %182, 8
  %184 = and i64 %183, -8
  %185 = icmp slt i64 %184, 0
  br i1 %185, label %186, label %187

186:                                              ; preds = %180
  tail call void @abort() #9
  unreachable

187:                                              ; preds = %180
  %188 = shl i64 %184, 1
  %189 = tail call i8* @_Znwm(i64 %188) #10
  %190 = bitcast i8* %189 to i16*
  %191 = icmp ult i64 %22, 16
  br i1 %191, label %282, label %192

192:                                              ; preds = %187
  %193 = shl i64 %22, 1
  %194 = getelementptr i8, i8* %189, i64 %193
  %195 = getelementptr i16, i16* %19, i64 %22
  %196 = bitcast i16* %195 to i8*
  %197 = icmp ult i8* %189, %196
  %198 = icmp ugt i8* %194, %20
  %199 = and i1 %197, %198
  br i1 %199, label %282, label %200

200:                                              ; preds = %192
  %201 = and i64 %22, -16
  %202 = sub i64 %22, %201
  %203 = getelementptr i16, i16* %19, i64 %201
  %204 = getelementptr i16, i16* %190, i64 %201
  %205 = add i64 %201, -16
  %206 = lshr exact i64 %205, 4
  %207 = add nuw nsw i64 %206, 1
  %208 = and i64 %207, 3
  %209 = icmp ult i64 %205, 48
  br i1 %209, label %261, label %210

210:                                              ; preds = %200
  %211 = sub nsw i64 %207, %208
  br label %212

212:                                              ; preds = %212, %210
  %213 = phi i64 [ 0, %210 ], [ %258, %212 ]
  %214 = phi i64 [ %211, %210 ], [ %259, %212 ]
  %215 = getelementptr i16, i16* %19, i64 %213
  %216 = getelementptr i16, i16* %190, i64 %213
  %217 = bitcast i16* %215 to <8 x i16>*
  %218 = load <8 x i16>, <8 x i16>* %217, align 2, !alias.scope !32
  %219 = getelementptr i16, i16* %215, i64 8
  %220 = bitcast i16* %219 to <8 x i16>*
  %221 = load <8 x i16>, <8 x i16>* %220, align 2, !alias.scope !32
  %222 = bitcast i16* %216 to <8 x i16>*
  store <8 x i16> %218, <8 x i16>* %222, align 2, !alias.scope !35, !noalias !32
  %223 = getelementptr i16, i16* %216, i64 8
  %224 = bitcast i16* %223 to <8 x i16>*
  store <8 x i16> %221, <8 x i16>* %224, align 2, !alias.scope !35, !noalias !32
  %225 = or i64 %213, 16
  %226 = getelementptr i16, i16* %19, i64 %225
  %227 = getelementptr i16, i16* %190, i64 %225
  %228 = bitcast i16* %226 to <8 x i16>*
  %229 = load <8 x i16>, <8 x i16>* %228, align 2, !alias.scope !32
  %230 = getelementptr i16, i16* %226, i64 8
  %231 = bitcast i16* %230 to <8 x i16>*
  %232 = load <8 x i16>, <8 x i16>* %231, align 2, !alias.scope !32
  %233 = bitcast i16* %227 to <8 x i16>*
  store <8 x i16> %229, <8 x i16>* %233, align 2, !alias.scope !35, !noalias !32
  %234 = getelementptr i16, i16* %227, i64 8
  %235 = bitcast i16* %234 to <8 x i16>*
  store <8 x i16> %232, <8 x i16>* %235, align 2, !alias.scope !35, !noalias !32
  %236 = or i64 %213, 32
  %237 = getelementptr i16, i16* %19, i64 %236
  %238 = getelementptr i16, i16* %190, i64 %236
  %239 = bitcast i16* %237 to <8 x i16>*
  %240 = load <8 x i16>, <8 x i16>* %239, align 2, !alias.scope !32
  %241 = getelementptr i16, i16* %237, i64 8
  %242 = bitcast i16* %241 to <8 x i16>*
  %243 = load <8 x i16>, <8 x i16>* %242, align 2, !alias.scope !32
  %244 = bitcast i16* %238 to <8 x i16>*
  store <8 x i16> %240, <8 x i16>* %244, align 2, !alias.scope !35, !noalias !32
  %245 = getelementptr i16, i16* %238, i64 8
  %246 = bitcast i16* %245 to <8 x i16>*
  store <8 x i16> %243, <8 x i16>* %246, align 2, !alias.scope !35, !noalias !32
  %247 = or i64 %213, 48
  %248 = getelementptr i16, i16* %19, i64 %247
  %249 = getelementptr i16, i16* %190, i64 %247
  %250 = bitcast i16* %248 to <8 x i16>*
  %251 = load <8 x i16>, <8 x i16>* %250, align 2, !alias.scope !32
  %252 = getelementptr i16, i16* %248, i64 8
  %253 = bitcast i16* %252 to <8 x i16>*
  %254 = load <8 x i16>, <8 x i16>* %253, align 2, !alias.scope !32
  %255 = bitcast i16* %249 to <8 x i16>*
  store <8 x i16> %251, <8 x i16>* %255, align 2, !alias.scope !35, !noalias !32
  %256 = getelementptr i16, i16* %249, i64 8
  %257 = bitcast i16* %256 to <8 x i16>*
  store <8 x i16> %254, <8 x i16>* %257, align 2, !alias.scope !35, !noalias !32
  %258 = add i64 %213, 64
  %259 = add i64 %214, -4
  %260 = icmp eq i64 %259, 0
  br i1 %260, label %261, label %212, !llvm.loop !37

261:                                              ; preds = %212, %200
  %262 = phi i64 [ 0, %200 ], [ %258, %212 ]
  %263 = icmp eq i64 %208, 0
  br i1 %263, label %280, label %264

264:                                              ; preds = %261, %264
  %265 = phi i64 [ %277, %264 ], [ %262, %261 ]
  %266 = phi i64 [ %278, %264 ], [ %208, %261 ]
  %267 = getelementptr i16, i16* %19, i64 %265
  %268 = getelementptr i16, i16* %190, i64 %265
  %269 = bitcast i16* %267 to <8 x i16>*
  %270 = load <8 x i16>, <8 x i16>* %269, align 2, !alias.scope !32
  %271 = getelementptr i16, i16* %267, i64 8
  %272 = bitcast i16* %271 to <8 x i16>*
  %273 = load <8 x i16>, <8 x i16>* %272, align 2, !alias.scope !32
  %274 = bitcast i16* %268 to <8 x i16>*
  store <8 x i16> %270, <8 x i16>* %274, align 2, !alias.scope !35, !noalias !32
  %275 = getelementptr i16, i16* %268, i64 8
  %276 = bitcast i16* %275 to <8 x i16>*
  store <8 x i16> %273, <8 x i16>* %276, align 2, !alias.scope !35, !noalias !32
  %277 = add i64 %265, 16
  %278 = add i64 %266, -1
  %279 = icmp eq i64 %278, 0
  br i1 %279, label %280, label %264, !llvm.loop !38

280:                                              ; preds = %264, %261
  %281 = icmp eq i64 %22, %201
  br i1 %281, label %335, label %282

282:                                              ; preds = %280, %192, %187
  %283 = phi i64 [ %22, %192 ], [ %22, %187 ], [ %202, %280 ]
  %284 = phi i16* [ %19, %192 ], [ %19, %187 ], [ %203, %280 ]
  %285 = phi i16* [ %190, %192 ], [ %190, %187 ], [ %204, %280 ]
  %286 = add i64 %283, -1
  %287 = and i64 %283, 7
  %288 = icmp eq i64 %287, 0
  br i1 %288, label %300, label %289

289:                                              ; preds = %282, %289
  %290 = phi i64 [ %295, %289 ], [ %283, %282 ]
  %291 = phi i16* [ %297, %289 ], [ %284, %282 ]
  %292 = phi i16* [ %296, %289 ], [ %285, %282 ]
  %293 = phi i64 [ %298, %289 ], [ %287, %282 ]
  %294 = load i16, i16* %291, align 2
  store i16 %294, i16* %292, align 2
  %295 = add i64 %290, -1
  %296 = getelementptr inbounds i16, i16* %292, i64 1
  %297 = getelementptr inbounds i16, i16* %291, i64 1
  %298 = add i64 %293, -1
  %299 = icmp eq i64 %298, 0
  br i1 %299, label %300, label %289, !llvm.loop !39

300:                                              ; preds = %289, %282
  %301 = phi i64 [ %283, %282 ], [ %295, %289 ]
  %302 = phi i16* [ %284, %282 ], [ %297, %289 ]
  %303 = phi i16* [ %285, %282 ], [ %296, %289 ]
  %304 = icmp ult i64 %286, 7
  br i1 %304, label %335, label %305

305:                                              ; preds = %300, %305
  %306 = phi i64 [ %331, %305 ], [ %301, %300 ]
  %307 = phi i16* [ %333, %305 ], [ %302, %300 ]
  %308 = phi i16* [ %332, %305 ], [ %303, %300 ]
  %309 = load i16, i16* %307, align 2
  store i16 %309, i16* %308, align 2
  %310 = getelementptr inbounds i16, i16* %308, i64 1
  %311 = getelementptr inbounds i16, i16* %307, i64 1
  %312 = load i16, i16* %311, align 2
  store i16 %312, i16* %310, align 2
  %313 = getelementptr inbounds i16, i16* %308, i64 2
  %314 = getelementptr inbounds i16, i16* %307, i64 2
  %315 = load i16, i16* %314, align 2
  store i16 %315, i16* %313, align 2
  %316 = getelementptr inbounds i16, i16* %308, i64 3
  %317 = getelementptr inbounds i16, i16* %307, i64 3
  %318 = load i16, i16* %317, align 2
  store i16 %318, i16* %316, align 2
  %319 = getelementptr inbounds i16, i16* %308, i64 4
  %320 = getelementptr inbounds i16, i16* %307, i64 4
  %321 = load i16, i16* %320, align 2
  store i16 %321, i16* %319, align 2
  %322 = getelementptr inbounds i16, i16* %308, i64 5
  %323 = getelementptr inbounds i16, i16* %307, i64 5
  %324 = load i16, i16* %323, align 2
  store i16 %324, i16* %322, align 2
  %325 = getelementptr inbounds i16, i16* %308, i64 6
  %326 = getelementptr inbounds i16, i16* %307, i64 6
  %327 = load i16, i16* %326, align 2
  store i16 %327, i16* %325, align 2
  %328 = getelementptr inbounds i16, i16* %308, i64 7
  %329 = getelementptr inbounds i16, i16* %307, i64 7
  %330 = load i16, i16* %329, align 2
  store i16 %330, i16* %328, align 2
  %331 = add i64 %306, -8
  %332 = getelementptr inbounds i16, i16* %308, i64 8
  %333 = getelementptr inbounds i16, i16* %307, i64 8
  %334 = icmp eq i64 %331, 0
  br i1 %334, label %335, label %305, !llvm.loop !40

335:                                              ; preds = %300, %305, %280
  %336 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %189, i8** %336, align 8
  %337 = or i64 %184, -9223372036854775808
  %338 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %337, i64* %338, align 8
  %339 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %22, i64* %339, align 8
  %340 = getelementptr inbounds i16, i16* %190, i64 %22
  store i16 0, i16* %340, align 2
  br label %510

341:                                              ; preds = %5
  %342 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %343 = load i16*, i16** %342, align 8
  %344 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %345 = load i64, i64* %344, align 8
  %346 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %347 = zext i8 %12 to i64
  %348 = select i1 %13, i16* %343, i16* %346
  %349 = select i1 %13, i64 %345, i64 %347
  %350 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %351 = load i64, i64* %350, align 8
  %352 = and i64 %351, 9223372036854775807
  %353 = icmp ugt i64 %352, %349
  br i1 %353, label %354, label %504

354:                                              ; preds = %341
  %355 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %356 = load i16*, i16** %355, align 8
  %357 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %349, i64* %357, align 8
  %358 = icmp eq i64 %349, 0
  br i1 %358, label %502, label %359

359:                                              ; preds = %354
  %360 = icmp ult i64 %349, 16
  br i1 %360, label %449, label %361

361:                                              ; preds = %359
  %362 = getelementptr i16, i16* %356, i64 %349
  %363 = getelementptr i16, i16* %348, i64 %349
  %364 = icmp ult i16* %356, %363
  %365 = icmp ult i16* %348, %362
  %366 = and i1 %364, %365
  br i1 %366, label %449, label %367

367:                                              ; preds = %361
  %368 = and i64 %349, -16
  %369 = sub i64 %349, %368
  %370 = getelementptr i16, i16* %348, i64 %368
  %371 = getelementptr i16, i16* %356, i64 %368
  %372 = add i64 %368, -16
  %373 = lshr exact i64 %372, 4
  %374 = add nuw nsw i64 %373, 1
  %375 = and i64 %374, 3
  %376 = icmp ult i64 %372, 48
  br i1 %376, label %428, label %377

377:                                              ; preds = %367
  %378 = sub nsw i64 %374, %375
  br label %379

379:                                              ; preds = %379, %377
  %380 = phi i64 [ 0, %377 ], [ %425, %379 ]
  %381 = phi i64 [ %378, %377 ], [ %426, %379 ]
  %382 = getelementptr i16, i16* %348, i64 %380
  %383 = getelementptr i16, i16* %356, i64 %380
  %384 = bitcast i16* %382 to <8 x i16>*
  %385 = load <8 x i16>, <8 x i16>* %384, align 2, !alias.scope !41
  %386 = getelementptr i16, i16* %382, i64 8
  %387 = bitcast i16* %386 to <8 x i16>*
  %388 = load <8 x i16>, <8 x i16>* %387, align 2, !alias.scope !41
  %389 = bitcast i16* %383 to <8 x i16>*
  store <8 x i16> %385, <8 x i16>* %389, align 2, !alias.scope !44, !noalias !41
  %390 = getelementptr i16, i16* %383, i64 8
  %391 = bitcast i16* %390 to <8 x i16>*
  store <8 x i16> %388, <8 x i16>* %391, align 2, !alias.scope !44, !noalias !41
  %392 = or i64 %380, 16
  %393 = getelementptr i16, i16* %348, i64 %392
  %394 = getelementptr i16, i16* %356, i64 %392
  %395 = bitcast i16* %393 to <8 x i16>*
  %396 = load <8 x i16>, <8 x i16>* %395, align 2, !alias.scope !41
  %397 = getelementptr i16, i16* %393, i64 8
  %398 = bitcast i16* %397 to <8 x i16>*
  %399 = load <8 x i16>, <8 x i16>* %398, align 2, !alias.scope !41
  %400 = bitcast i16* %394 to <8 x i16>*
  store <8 x i16> %396, <8 x i16>* %400, align 2, !alias.scope !44, !noalias !41
  %401 = getelementptr i16, i16* %394, i64 8
  %402 = bitcast i16* %401 to <8 x i16>*
  store <8 x i16> %399, <8 x i16>* %402, align 2, !alias.scope !44, !noalias !41
  %403 = or i64 %380, 32
  %404 = getelementptr i16, i16* %348, i64 %403
  %405 = getelementptr i16, i16* %356, i64 %403
  %406 = bitcast i16* %404 to <8 x i16>*
  %407 = load <8 x i16>, <8 x i16>* %406, align 2, !alias.scope !41
  %408 = getelementptr i16, i16* %404, i64 8
  %409 = bitcast i16* %408 to <8 x i16>*
  %410 = load <8 x i16>, <8 x i16>* %409, align 2, !alias.scope !41
  %411 = bitcast i16* %405 to <8 x i16>*
  store <8 x i16> %407, <8 x i16>* %411, align 2, !alias.scope !44, !noalias !41
  %412 = getelementptr i16, i16* %405, i64 8
  %413 = bitcast i16* %412 to <8 x i16>*
  store <8 x i16> %410, <8 x i16>* %413, align 2, !alias.scope !44, !noalias !41
  %414 = or i64 %380, 48
  %415 = getelementptr i16, i16* %348, i64 %414
  %416 = getelementptr i16, i16* %356, i64 %414
  %417 = bitcast i16* %415 to <8 x i16>*
  %418 = load <8 x i16>, <8 x i16>* %417, align 2, !alias.scope !41
  %419 = getelementptr i16, i16* %415, i64 8
  %420 = bitcast i16* %419 to <8 x i16>*
  %421 = load <8 x i16>, <8 x i16>* %420, align 2, !alias.scope !41
  %422 = bitcast i16* %416 to <8 x i16>*
  store <8 x i16> %418, <8 x i16>* %422, align 2, !alias.scope !44, !noalias !41
  %423 = getelementptr i16, i16* %416, i64 8
  %424 = bitcast i16* %423 to <8 x i16>*
  store <8 x i16> %421, <8 x i16>* %424, align 2, !alias.scope !44, !noalias !41
  %425 = add i64 %380, 64
  %426 = add i64 %381, -4
  %427 = icmp eq i64 %426, 0
  br i1 %427, label %428, label %379, !llvm.loop !46

428:                                              ; preds = %379, %367
  %429 = phi i64 [ 0, %367 ], [ %425, %379 ]
  %430 = icmp eq i64 %375, 0
  br i1 %430, label %447, label %431

431:                                              ; preds = %428, %431
  %432 = phi i64 [ %444, %431 ], [ %429, %428 ]
  %433 = phi i64 [ %445, %431 ], [ %375, %428 ]
  %434 = getelementptr i16, i16* %348, i64 %432
  %435 = getelementptr i16, i16* %356, i64 %432
  %436 = bitcast i16* %434 to <8 x i16>*
  %437 = load <8 x i16>, <8 x i16>* %436, align 2, !alias.scope !41
  %438 = getelementptr i16, i16* %434, i64 8
  %439 = bitcast i16* %438 to <8 x i16>*
  %440 = load <8 x i16>, <8 x i16>* %439, align 2, !alias.scope !41
  %441 = bitcast i16* %435 to <8 x i16>*
  store <8 x i16> %437, <8 x i16>* %441, align 2, !alias.scope !44, !noalias !41
  %442 = getelementptr i16, i16* %435, i64 8
  %443 = bitcast i16* %442 to <8 x i16>*
  store <8 x i16> %440, <8 x i16>* %443, align 2, !alias.scope !44, !noalias !41
  %444 = add i64 %432, 16
  %445 = add i64 %433, -1
  %446 = icmp eq i64 %445, 0
  br i1 %446, label %447, label %431, !llvm.loop !47

447:                                              ; preds = %431, %428
  %448 = icmp eq i64 %349, %368
  br i1 %448, label %502, label %449

449:                                              ; preds = %447, %361, %359
  %450 = phi i64 [ %349, %361 ], [ %349, %359 ], [ %369, %447 ]
  %451 = phi i16* [ %348, %361 ], [ %348, %359 ], [ %370, %447 ]
  %452 = phi i16* [ %356, %361 ], [ %356, %359 ], [ %371, %447 ]
  %453 = add i64 %450, -1
  %454 = and i64 %450, 7
  %455 = icmp eq i64 %454, 0
  br i1 %455, label %467, label %456

456:                                              ; preds = %449, %456
  %457 = phi i64 [ %462, %456 ], [ %450, %449 ]
  %458 = phi i16* [ %464, %456 ], [ %451, %449 ]
  %459 = phi i16* [ %463, %456 ], [ %452, %449 ]
  %460 = phi i64 [ %465, %456 ], [ %454, %449 ]
  %461 = load i16, i16* %458, align 2
  store i16 %461, i16* %459, align 2
  %462 = add i64 %457, -1
  %463 = getelementptr inbounds i16, i16* %459, i64 1
  %464 = getelementptr inbounds i16, i16* %458, i64 1
  %465 = add i64 %460, -1
  %466 = icmp eq i64 %465, 0
  br i1 %466, label %467, label %456, !llvm.loop !48

467:                                              ; preds = %456, %449
  %468 = phi i64 [ %450, %449 ], [ %462, %456 ]
  %469 = phi i16* [ %451, %449 ], [ %464, %456 ]
  %470 = phi i16* [ %452, %449 ], [ %463, %456 ]
  %471 = icmp ult i64 %453, 7
  br i1 %471, label %502, label %472

472:                                              ; preds = %467, %472
  %473 = phi i64 [ %498, %472 ], [ %468, %467 ]
  %474 = phi i16* [ %500, %472 ], [ %469, %467 ]
  %475 = phi i16* [ %499, %472 ], [ %470, %467 ]
  %476 = load i16, i16* %474, align 2
  store i16 %476, i16* %475, align 2
  %477 = getelementptr inbounds i16, i16* %475, i64 1
  %478 = getelementptr inbounds i16, i16* %474, i64 1
  %479 = load i16, i16* %478, align 2
  store i16 %479, i16* %477, align 2
  %480 = getelementptr inbounds i16, i16* %475, i64 2
  %481 = getelementptr inbounds i16, i16* %474, i64 2
  %482 = load i16, i16* %481, align 2
  store i16 %482, i16* %480, align 2
  %483 = getelementptr inbounds i16, i16* %475, i64 3
  %484 = getelementptr inbounds i16, i16* %474, i64 3
  %485 = load i16, i16* %484, align 2
  store i16 %485, i16* %483, align 2
  %486 = getelementptr inbounds i16, i16* %475, i64 4
  %487 = getelementptr inbounds i16, i16* %474, i64 4
  %488 = load i16, i16* %487, align 2
  store i16 %488, i16* %486, align 2
  %489 = getelementptr inbounds i16, i16* %475, i64 5
  %490 = getelementptr inbounds i16, i16* %474, i64 5
  %491 = load i16, i16* %490, align 2
  store i16 %491, i16* %489, align 2
  %492 = getelementptr inbounds i16, i16* %475, i64 6
  %493 = getelementptr inbounds i16, i16* %474, i64 6
  %494 = load i16, i16* %493, align 2
  store i16 %494, i16* %492, align 2
  %495 = getelementptr inbounds i16, i16* %475, i64 7
  %496 = getelementptr inbounds i16, i16* %474, i64 7
  %497 = load i16, i16* %496, align 2
  store i16 %497, i16* %495, align 2
  %498 = add i64 %473, -8
  %499 = getelementptr inbounds i16, i16* %475, i64 8
  %500 = getelementptr inbounds i16, i16* %474, i64 8
  %501 = icmp eq i64 %498, 0
  br i1 %501, label %502, label %472, !llvm.loop !49

502:                                              ; preds = %467, %472, %447, %354
  %503 = getelementptr inbounds i16, i16* %356, i64 %349
  store i16 0, i16* %503, align 2
  br label %510

504:                                              ; preds = %341
  %505 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %506 = load i64, i64* %505, align 8
  %507 = add nsw i64 %352, -1
  %508 = add i64 %349, 1
  %509 = sub i64 %508, %352
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"* %0, i64 %507, i64 %509, i64 %506, i64 0, i64 %506, i64 %349, i16* %348) #8
  br label %510

510:                                              ; preds = %504, %502, %335, %173, %15, %2
  ret %"class.std::__1::basic_string"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(80) %"struct.autofill::PasswordAndMetadata"* @_ZN8autofill19PasswordAndMetadataaSEOS0_(%"struct.autofill::PasswordAndMetadata"* returned, %"struct.autofill::PasswordAndMetadata"* nocapture dereferenceable(80)) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"struct.autofill::PasswordAndMetadata"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %3, i64 0, i32 1, i32 1
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %2
  %8 = bitcast %"struct.autofill::PasswordAndMetadata"* %0 to i8**
  %9 = load i8*, i8** %8, align 8
  tail call void @_ZdlPv(i8* %9) #10
  br label %10

10:                                               ; preds = %2, %7
  %11 = bitcast %"struct.autofill::PasswordAndMetadata"* %0 to i8*
  %12 = bitcast %"struct.autofill::PasswordAndMetadata"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 24, i1 false) #8
  %13 = bitcast %"struct.autofill::PasswordAndMetadata"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %13, i64 0, i32 1, i32 1
  store i8 0, i8* %14, align 1
  %15 = bitcast %"struct.autofill::PasswordAndMetadata"* %1 to i16*
  store i16 0, i16* %15, align 2
  %16 = getelementptr inbounds %"struct.autofill::PasswordAndMetadata", %"struct.autofill::PasswordAndMetadata"* %0, i64 0, i32 1
  %17 = getelementptr inbounds %"struct.autofill::PasswordAndMetadata", %"struct.autofill::PasswordAndMetadata"* %1, i64 0, i32 1
  %18 = bitcast %"class.std::__1::basic_string"* %16 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %19 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %18, i64 0, i32 1, i32 1
  %20 = load i8, i8* %19, align 1
  %21 = icmp slt i8 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %10
  %23 = bitcast %"class.std::__1::basic_string"* %16 to i8**
  %24 = load i8*, i8** %23, align 8
  tail call void @_ZdlPv(i8* %24) #10
  br label %25

25:                                               ; preds = %10, %22
  %26 = bitcast %"class.std::__1::basic_string"* %16 to i8*
  %27 = bitcast %"class.std::__1::basic_string"* %17 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %26, i8* align 8 %27, i64 24, i1 false) #8
  %28 = bitcast %"class.std::__1::basic_string"* %17 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %29 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %28, i64 0, i32 1, i32 1
  store i8 0, i8* %29, align 1
  %30 = bitcast %"class.std::__1::basic_string"* %17 to i16*
  store i16 0, i16* %30, align 2
  %31 = getelementptr inbounds %"struct.autofill::PasswordAndMetadata", %"struct.autofill::PasswordAndMetadata"* %0, i64 0, i32 2
  %32 = getelementptr inbounds %"struct.autofill::PasswordAndMetadata", %"struct.autofill::PasswordAndMetadata"* %1, i64 0, i32 2
  %33 = bitcast %"class.std::__1::basic_string.1"* %31 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %33, i64 0, i32 1, i32 0
  %35 = load i8, i8* %34, align 1
  %36 = icmp slt i8 %35, 0
  br i1 %36, label %37, label %40

37:                                               ; preds = %25
  %38 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load i8*, i8** %38, align 8
  tail call void @_ZdlPv(i8* %39) #10
  br label %40

40:                                               ; preds = %25, %37
  %41 = bitcast %"class.std::__1::basic_string.1"* %31 to i8*
  %42 = bitcast %"class.std::__1::basic_string.1"* %32 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %41, i8* align 8 %42, i64 24, i1 false) #8
  %43 = bitcast %"class.std::__1::basic_string.1"* %32 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %44 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %43, i64 0, i32 1, i32 0
  store i8 0, i8* %44, align 1
  store i8 0, i8* %42, align 1
  %45 = getelementptr inbounds %"struct.autofill::PasswordAndMetadata", %"struct.autofill::PasswordAndMetadata"* %1, i64 0, i32 3
  %46 = load i8, i8* %45, align 8, !range !22
  %47 = getelementptr inbounds %"struct.autofill::PasswordAndMetadata", %"struct.autofill::PasswordAndMetadata"* %0, i64 0, i32 3
  store i8 %46, i8* %47, align 8
  ret %"struct.autofill::PasswordAndMetadata"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8autofill19PasswordAndMetadataD2Ev(%"struct.autofill::PasswordAndMetadata"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.autofill::PasswordAndMetadata", %"struct.autofill::PasswordAndMetadata"* %0, i64 0, i32 2
  %3 = bitcast %"class.std::__1::basic_string.1"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  tail call void @_ZdlPv(i8* %9) #10
  br label %10

10:                                               ; preds = %1, %7
  %11 = getelementptr inbounds %"struct.autofill::PasswordAndMetadata", %"struct.autofill::PasswordAndMetadata"* %0, i64 0, i32 1
  %12 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %12, i64 0, i32 1, i32 1
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %10
  %17 = bitcast %"class.std::__1::basic_string"* %11 to i8**
  %18 = load i8*, i8** %17, align 8
  tail call void @_ZdlPv(i8* %18) #10
  br label %19

19:                                               ; preds = %10, %16
  %20 = bitcast %"struct.autofill::PasswordAndMetadata"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %20, i64 0, i32 1, i32 1
  %22 = load i8, i8* %21, align 1
  %23 = icmp slt i8 %22, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %19
  %25 = bitcast %"struct.autofill::PasswordAndMetadata"* %0 to i8**
  %26 = load i8*, i8** %25, align 8
  tail call void @_ZdlPv(i8* %26) #10
  br label %27

27:                                               ; preds = %19, %24
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8autofill20PasswordFormFillDataC2Ev(%"struct.autofill::PasswordFormFillData"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 0, i32* %2, align 4
  %3 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %0, i64 0, i32 2
  %4 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 24, i1 false) #8
  %5 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %0, i64 0, i32 3
  tail call void @_ZN4GURLC1Ev(%class.GURL* %5) #8
  %6 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %0, i64 0, i32 4
  tail call void @_ZN4GURLC1Ev(%class.GURL* %6) #8
  %7 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %0, i64 0, i32 5
  tail call void @_ZN8autofill13FormFieldDataC1Ev(%"struct.autofill::FormFieldData"* %7) #8
  %8 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %0, i64 0, i32 6
  tail call void @_ZN8autofill13FormFieldDataC1Ev(%"struct.autofill::FormFieldData"* %8) #8
  %9 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %0, i64 0, i32 7
  store i8 0, i8* %9, align 8
  %10 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %0, i64 0, i32 9
  %11 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %0, i64 0, i32 12
  %12 = bitcast %"class.std::__1::basic_string.1"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 25, i1 false)
  %13 = bitcast %"class.std::__1::vector.22"* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 25, i1 false)
  ret void
}

declare void @_ZN4GURLC1Ev(%class.GURL*) unnamed_addr #1

declare void @_ZN8autofill13FormFieldDataC1Ev(%"struct.autofill::FormFieldData"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8autofill20PasswordFormFillDataC2ERKS0_(%"struct.autofill::PasswordFormFillData"*, %"struct.autofill::PasswordFormFillData"* dereferenceable(1512)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load i32, i32* %3, align 8
  store i32 %5, i32* %4, align 8
  %6 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %0, i64 0, i32 2
  %7 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %1, i64 0, i32 2
  %8 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %8, i64 0, i32 1, i32 1
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  br i1 %11, label %15, label %12

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  %14 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %14, i64 24, i1 false) #8
  br label %190

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i16*, i16** %16, align 8
  %18 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = icmp ult i64 %19, 11
  br i1 %20, label %21, label %26

21:                                               ; preds = %15
  %22 = bitcast %"class.std::__1::basic_string"* %6 to i16*
  %23 = trunc i64 %19 to i8
  %24 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %24, i64 0, i32 1, i32 1
  store i8 %23, i8* %25, align 1
  br label %43

26:                                               ; preds = %15
  %27 = icmp ugt i64 %19, 9223372036854775791
  br i1 %27, label %28, label %30

28:                                               ; preds = %26
  %29 = bitcast %"class.std::__1::basic_string"* %6 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %29) #9
  unreachable

30:                                               ; preds = %26
  %31 = add nuw nsw i64 %19, 8
  %32 = and i64 %31, -8
  %33 = icmp slt i64 %32, 0
  br i1 %33, label %34, label %35

34:                                               ; preds = %30
  tail call void @abort() #9
  unreachable

35:                                               ; preds = %30
  %36 = shl i64 %32, 1
  %37 = tail call i8* @_Znwm(i64 %36) #10
  %38 = bitcast i8* %37 to i16*
  %39 = bitcast %"class.std::__1::basic_string"* %6 to i8**
  store i8* %37, i8** %39, align 8
  %40 = or i64 %32, -9223372036854775808
  %41 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %40, i64* %41, align 8
  %42 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %19, i64* %42, align 8
  br label %43

43:                                               ; preds = %35, %21
  %44 = phi i16* [ %22, %21 ], [ %38, %35 ]
  %45 = add nuw nsw i64 %19, 1
  %46 = add i64 %19, 1
  %47 = icmp ult i64 %46, 16
  br i1 %47, label %137, label %48

48:                                               ; preds = %43
  %49 = add i64 %19, 1
  %50 = getelementptr i16, i16* %44, i64 %49
  %51 = getelementptr i16, i16* %17, i64 %49
  %52 = icmp ult i16* %44, %51
  %53 = icmp ult i16* %17, %50
  %54 = and i1 %52, %53
  br i1 %54, label %137, label %55

55:                                               ; preds = %48
  %56 = and i64 %46, -16
  %57 = sub i64 %45, %56
  %58 = getelementptr i16, i16* %17, i64 %56
  %59 = getelementptr i16, i16* %44, i64 %56
  %60 = add i64 %56, -16
  %61 = lshr exact i64 %60, 4
  %62 = add nuw nsw i64 %61, 1
  %63 = and i64 %62, 3
  %64 = icmp ult i64 %60, 48
  br i1 %64, label %116, label %65

65:                                               ; preds = %55
  %66 = sub nsw i64 %62, %63
  br label %67

67:                                               ; preds = %67, %65
  %68 = phi i64 [ 0, %65 ], [ %113, %67 ]
  %69 = phi i64 [ %66, %65 ], [ %114, %67 ]
  %70 = getelementptr i16, i16* %17, i64 %68
  %71 = getelementptr i16, i16* %44, i64 %68
  %72 = bitcast i16* %70 to <8 x i16>*
  %73 = load <8 x i16>, <8 x i16>* %72, align 2, !alias.scope !50
  %74 = getelementptr i16, i16* %70, i64 8
  %75 = bitcast i16* %74 to <8 x i16>*
  %76 = load <8 x i16>, <8 x i16>* %75, align 2, !alias.scope !50
  %77 = bitcast i16* %71 to <8 x i16>*
  store <8 x i16> %73, <8 x i16>* %77, align 2, !alias.scope !53, !noalias !50
  %78 = getelementptr i16, i16* %71, i64 8
  %79 = bitcast i16* %78 to <8 x i16>*
  store <8 x i16> %76, <8 x i16>* %79, align 2, !alias.scope !53, !noalias !50
  %80 = or i64 %68, 16
  %81 = getelementptr i16, i16* %17, i64 %80
  %82 = getelementptr i16, i16* %44, i64 %80
  %83 = bitcast i16* %81 to <8 x i16>*
  %84 = load <8 x i16>, <8 x i16>* %83, align 2, !alias.scope !50
  %85 = getelementptr i16, i16* %81, i64 8
  %86 = bitcast i16* %85 to <8 x i16>*
  %87 = load <8 x i16>, <8 x i16>* %86, align 2, !alias.scope !50
  %88 = bitcast i16* %82 to <8 x i16>*
  store <8 x i16> %84, <8 x i16>* %88, align 2, !alias.scope !53, !noalias !50
  %89 = getelementptr i16, i16* %82, i64 8
  %90 = bitcast i16* %89 to <8 x i16>*
  store <8 x i16> %87, <8 x i16>* %90, align 2, !alias.scope !53, !noalias !50
  %91 = or i64 %68, 32
  %92 = getelementptr i16, i16* %17, i64 %91
  %93 = getelementptr i16, i16* %44, i64 %91
  %94 = bitcast i16* %92 to <8 x i16>*
  %95 = load <8 x i16>, <8 x i16>* %94, align 2, !alias.scope !50
  %96 = getelementptr i16, i16* %92, i64 8
  %97 = bitcast i16* %96 to <8 x i16>*
  %98 = load <8 x i16>, <8 x i16>* %97, align 2, !alias.scope !50
  %99 = bitcast i16* %93 to <8 x i16>*
  store <8 x i16> %95, <8 x i16>* %99, align 2, !alias.scope !53, !noalias !50
  %100 = getelementptr i16, i16* %93, i64 8
  %101 = bitcast i16* %100 to <8 x i16>*
  store <8 x i16> %98, <8 x i16>* %101, align 2, !alias.scope !53, !noalias !50
  %102 = or i64 %68, 48
  %103 = getelementptr i16, i16* %17, i64 %102
  %104 = getelementptr i16, i16* %44, i64 %102
  %105 = bitcast i16* %103 to <8 x i16>*
  %106 = load <8 x i16>, <8 x i16>* %105, align 2, !alias.scope !50
  %107 = getelementptr i16, i16* %103, i64 8
  %108 = bitcast i16* %107 to <8 x i16>*
  %109 = load <8 x i16>, <8 x i16>* %108, align 2, !alias.scope !50
  %110 = bitcast i16* %104 to <8 x i16>*
  store <8 x i16> %106, <8 x i16>* %110, align 2, !alias.scope !53, !noalias !50
  %111 = getelementptr i16, i16* %104, i64 8
  %112 = bitcast i16* %111 to <8 x i16>*
  store <8 x i16> %109, <8 x i16>* %112, align 2, !alias.scope !53, !noalias !50
  %113 = add i64 %68, 64
  %114 = add i64 %69, -4
  %115 = icmp eq i64 %114, 0
  br i1 %115, label %116, label %67, !llvm.loop !55

116:                                              ; preds = %67, %55
  %117 = phi i64 [ 0, %55 ], [ %113, %67 ]
  %118 = icmp eq i64 %63, 0
  br i1 %118, label %135, label %119

119:                                              ; preds = %116, %119
  %120 = phi i64 [ %132, %119 ], [ %117, %116 ]
  %121 = phi i64 [ %133, %119 ], [ %63, %116 ]
  %122 = getelementptr i16, i16* %17, i64 %120
  %123 = getelementptr i16, i16* %44, i64 %120
  %124 = bitcast i16* %122 to <8 x i16>*
  %125 = load <8 x i16>, <8 x i16>* %124, align 2, !alias.scope !50
  %126 = getelementptr i16, i16* %122, i64 8
  %127 = bitcast i16* %126 to <8 x i16>*
  %128 = load <8 x i16>, <8 x i16>* %127, align 2, !alias.scope !50
  %129 = bitcast i16* %123 to <8 x i16>*
  store <8 x i16> %125, <8 x i16>* %129, align 2, !alias.scope !53, !noalias !50
  %130 = getelementptr i16, i16* %123, i64 8
  %131 = bitcast i16* %130 to <8 x i16>*
  store <8 x i16> %128, <8 x i16>* %131, align 2, !alias.scope !53, !noalias !50
  %132 = add i64 %120, 16
  %133 = add i64 %121, -1
  %134 = icmp eq i64 %133, 0
  br i1 %134, label %135, label %119, !llvm.loop !56

135:                                              ; preds = %119, %116
  %136 = icmp eq i64 %46, %56
  br i1 %136, label %190, label %137

137:                                              ; preds = %135, %48, %43
  %138 = phi i64 [ %45, %48 ], [ %45, %43 ], [ %57, %135 ]
  %139 = phi i16* [ %17, %48 ], [ %17, %43 ], [ %58, %135 ]
  %140 = phi i16* [ %44, %48 ], [ %44, %43 ], [ %59, %135 ]
  %141 = add i64 %138, -1
  %142 = and i64 %138, 7
  %143 = icmp eq i64 %142, 0
  br i1 %143, label %155, label %144

144:                                              ; preds = %137, %144
  %145 = phi i64 [ %150, %144 ], [ %138, %137 ]
  %146 = phi i16* [ %152, %144 ], [ %139, %137 ]
  %147 = phi i16* [ %151, %144 ], [ %140, %137 ]
  %148 = phi i64 [ %153, %144 ], [ %142, %137 ]
  %149 = load i16, i16* %146, align 2
  store i16 %149, i16* %147, align 2
  %150 = add i64 %145, -1
  %151 = getelementptr inbounds i16, i16* %147, i64 1
  %152 = getelementptr inbounds i16, i16* %146, i64 1
  %153 = add i64 %148, -1
  %154 = icmp eq i64 %153, 0
  br i1 %154, label %155, label %144, !llvm.loop !57

155:                                              ; preds = %144, %137
  %156 = phi i64 [ %138, %137 ], [ %150, %144 ]
  %157 = phi i16* [ %139, %137 ], [ %152, %144 ]
  %158 = phi i16* [ %140, %137 ], [ %151, %144 ]
  %159 = icmp ult i64 %141, 7
  br i1 %159, label %190, label %160

160:                                              ; preds = %155, %160
  %161 = phi i64 [ %186, %160 ], [ %156, %155 ]
  %162 = phi i16* [ %188, %160 ], [ %157, %155 ]
  %163 = phi i16* [ %187, %160 ], [ %158, %155 ]
  %164 = load i16, i16* %162, align 2
  store i16 %164, i16* %163, align 2
  %165 = getelementptr inbounds i16, i16* %163, i64 1
  %166 = getelementptr inbounds i16, i16* %162, i64 1
  %167 = load i16, i16* %166, align 2
  store i16 %167, i16* %165, align 2
  %168 = getelementptr inbounds i16, i16* %163, i64 2
  %169 = getelementptr inbounds i16, i16* %162, i64 2
  %170 = load i16, i16* %169, align 2
  store i16 %170, i16* %168, align 2
  %171 = getelementptr inbounds i16, i16* %163, i64 3
  %172 = getelementptr inbounds i16, i16* %162, i64 3
  %173 = load i16, i16* %172, align 2
  store i16 %173, i16* %171, align 2
  %174 = getelementptr inbounds i16, i16* %163, i64 4
  %175 = getelementptr inbounds i16, i16* %162, i64 4
  %176 = load i16, i16* %175, align 2
  store i16 %176, i16* %174, align 2
  %177 = getelementptr inbounds i16, i16* %163, i64 5
  %178 = getelementptr inbounds i16, i16* %162, i64 5
  %179 = load i16, i16* %178, align 2
  store i16 %179, i16* %177, align 2
  %180 = getelementptr inbounds i16, i16* %163, i64 6
  %181 = getelementptr inbounds i16, i16* %162, i64 6
  %182 = load i16, i16* %181, align 2
  store i16 %182, i16* %180, align 2
  %183 = getelementptr inbounds i16, i16* %163, i64 7
  %184 = getelementptr inbounds i16, i16* %162, i64 7
  %185 = load i16, i16* %184, align 2
  store i16 %185, i16* %183, align 2
  %186 = add i64 %161, -8
  %187 = getelementptr inbounds i16, i16* %163, i64 8
  %188 = getelementptr inbounds i16, i16* %162, i64 8
  %189 = icmp eq i64 %186, 0
  br i1 %189, label %190, label %160, !llvm.loop !58

190:                                              ; preds = %155, %160, %135, %12
  %191 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %0, i64 0, i32 3
  %192 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %1, i64 0, i32 3
  tail call void @_ZN4GURLC1ERKS_(%class.GURL* %191, %class.GURL* dereferenceable(120) %192) #8
  %193 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %0, i64 0, i32 4
  %194 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %1, i64 0, i32 4
  tail call void @_ZN4GURLC1ERKS_(%class.GURL* %193, %class.GURL* dereferenceable(120) %194) #8
  %195 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %0, i64 0, i32 5
  %196 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %1, i64 0, i32 5
  tail call void @_ZN8autofill13FormFieldDataC1ERKS0_(%"struct.autofill::FormFieldData"* %195, %"struct.autofill::FormFieldData"* dereferenceable(584) %196) #8
  %197 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %0, i64 0, i32 6
  %198 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %1, i64 0, i32 6
  tail call void @_ZN8autofill13FormFieldDataC1ERKS0_(%"struct.autofill::FormFieldData"* %197, %"struct.autofill::FormFieldData"* dereferenceable(584) %198) #8
  %199 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %0, i64 0, i32 7
  %200 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %1, i64 0, i32 7
  %201 = load i8, i8* %200, align 8, !range !22
  store i8 %201, i8* %199, align 8
  %202 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %0, i64 0, i32 9
  %203 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %1, i64 0, i32 9
  %204 = bitcast %"class.std::__1::basic_string.1"* %203 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %205 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %204, i64 0, i32 1, i32 0
  %206 = load i8, i8* %205, align 1
  %207 = icmp slt i8 %206, 0
  br i1 %207, label %211, label %208

208:                                              ; preds = %190
  %209 = bitcast %"class.std::__1::basic_string.1"* %202 to i8*
  %210 = bitcast %"class.std::__1::basic_string.1"* %203 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %209, i8* align 8 %210, i64 24, i1 false) #8
  br label %216

211:                                              ; preds = %190
  %212 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %203, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %213 = load i8*, i8** %212, align 8
  %214 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %1, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %215 = load i64, i64* %214, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string.1"* %202, i8* %213, i64 %215) #8
  br label %216

216:                                              ; preds = %208, %211
  %217 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %0, i64 0, i32 10
  %218 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %1, i64 0, i32 10
  %219 = load i8, i8* %218, align 8, !range !22
  store i8 %219, i8* %217, align 8
  %220 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %0, i64 0, i32 12
  %221 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %1, i64 0, i32 12
  %222 = bitcast %"class.std::__1::vector.22"* %220 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %222, i8 0, i64 24, i1 false) #8
  %223 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %1, i64 0, i32 12, i32 0, i32 1
  %224 = bitcast %"struct.autofill::PasswordAndMetadata"** %223 to i64*
  %225 = load i64, i64* %224, align 8
  %226 = bitcast %"class.std::__1::vector.22"* %221 to i64*
  %227 = load i64, i64* %226, align 8
  %228 = sub i64 %225, %227
  %229 = sdiv exact i64 %228, 80
  %230 = icmp eq i64 %228, 0
  br i1 %230, label %259, label %231

231:                                              ; preds = %216
  %232 = icmp ugt i64 %229, 230584300921369395
  br i1 %232, label %233, label %235

233:                                              ; preds = %231
  %234 = bitcast %"class.std::__1::vector.22"* %220 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %234) #9
  unreachable

235:                                              ; preds = %231
  %236 = tail call i8* @_Znwm(i64 %228) #10
  %237 = bitcast i8* %236 to %"struct.autofill::PasswordAndMetadata"*
  %238 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %0, i64 0, i32 12, i32 0, i32 1
  %239 = bitcast %"struct.autofill::PasswordAndMetadata"** %238 to i8**
  store i8* %236, i8** %239, align 8
  %240 = bitcast %"class.std::__1::vector.22"* %220 to i8**
  store i8* %236, i8** %240, align 8
  %241 = getelementptr inbounds %"struct.autofill::PasswordAndMetadata", %"struct.autofill::PasswordAndMetadata"* %237, i64 %229
  %242 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %0, i64 0, i32 12, i32 0, i32 2, i32 0, i32 0
  store %"struct.autofill::PasswordAndMetadata"* %241, %"struct.autofill::PasswordAndMetadata"** %242, align 8
  %243 = getelementptr inbounds %"class.std::__1::vector.22", %"class.std::__1::vector.22"* %221, i64 0, i32 0, i32 0
  %244 = load %"struct.autofill::PasswordAndMetadata"*, %"struct.autofill::PasswordAndMetadata"** %243, align 8
  %245 = load %"struct.autofill::PasswordAndMetadata"*, %"struct.autofill::PasswordAndMetadata"** %223, align 8
  %246 = bitcast %"struct.autofill::PasswordAndMetadata"** %238 to i64*
  %247 = ptrtoint i8* %236 to i64
  %248 = icmp eq %"struct.autofill::PasswordAndMetadata"* %244, %245
  br i1 %248, label %257, label %249

249:                                              ; preds = %235, %249
  %250 = phi %"struct.autofill::PasswordAndMetadata"* [ %253, %249 ], [ %237, %235 ]
  %251 = phi %"struct.autofill::PasswordAndMetadata"* [ %252, %249 ], [ %244, %235 ]
  tail call void @_ZN8autofill19PasswordAndMetadataC2ERKS0_(%"struct.autofill::PasswordAndMetadata"* %250, %"struct.autofill::PasswordAndMetadata"* dereferenceable(80) %251) #8
  %252 = getelementptr inbounds %"struct.autofill::PasswordAndMetadata", %"struct.autofill::PasswordAndMetadata"* %251, i64 1
  %253 = getelementptr inbounds %"struct.autofill::PasswordAndMetadata", %"struct.autofill::PasswordAndMetadata"* %250, i64 1
  %254 = icmp eq %"struct.autofill::PasswordAndMetadata"* %252, %245
  br i1 %254, label %255, label %249

255:                                              ; preds = %249
  %256 = ptrtoint %"struct.autofill::PasswordAndMetadata"* %253 to i64
  br label %257

257:                                              ; preds = %255, %235
  %258 = phi i64 [ %247, %235 ], [ %256, %255 ]
  store i64 %258, i64* %246, align 8
  br label %259

259:                                              ; preds = %216, %257
  %260 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %0, i64 0, i32 13
  %261 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %1, i64 0, i32 13
  %262 = load i8, i8* %261, align 8, !range !22
  store i8 %262, i8* %260, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare void @_ZN4GURLC1ERKS_(%class.GURL*, %class.GURL* dereferenceable(120)) unnamed_addr #1

declare void @_ZN8autofill13FormFieldDataC1ERKS0_(%"struct.autofill::FormFieldData"*, %"struct.autofill::FormFieldData"* dereferenceable(584)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(1512) %"struct.autofill::PasswordFormFillData"* @_ZN8autofill20PasswordFormFillDataaSERKS0_(%"struct.autofill::PasswordFormFillData"* returned, %"struct.autofill::PasswordFormFillData"* dereferenceable(1512)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load i32, i32* %3, align 8
  store i32 %5, i32* %4, align 8
  %6 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %0, i64 0, i32 2
  %7 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %1, i64 0, i32 2
  %8 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string"* %6, %"class.std::__1::basic_string"* dereferenceable(24) %7)
  %9 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %0, i64 0, i32 3
  %10 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %1, i64 0, i32 3
  %11 = tail call dereferenceable(120) %class.GURL* @_ZN4GURLaSERKS_(%class.GURL* %9, %class.GURL* dereferenceable(120) %10) #8
  %12 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %0, i64 0, i32 4
  %13 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %1, i64 0, i32 4
  %14 = tail call dereferenceable(120) %class.GURL* @_ZN4GURLaSERKS_(%class.GURL* %12, %class.GURL* dereferenceable(120) %13) #8
  %15 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %0, i64 0, i32 5
  %16 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %1, i64 0, i32 5
  %17 = tail call dereferenceable(584) %"struct.autofill::FormFieldData"* @_ZN8autofill13FormFieldDataaSERKS0_(%"struct.autofill::FormFieldData"* %15, %"struct.autofill::FormFieldData"* dereferenceable(584) %16) #8
  %18 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %0, i64 0, i32 6
  %19 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %1, i64 0, i32 6
  %20 = tail call dereferenceable(584) %"struct.autofill::FormFieldData"* @_ZN8autofill13FormFieldDataaSERKS0_(%"struct.autofill::FormFieldData"* %18, %"struct.autofill::FormFieldData"* dereferenceable(584) %19) #8
  %21 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %1, i64 0, i32 7
  %22 = load i8, i8* %21, align 8, !range !22
  %23 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %0, i64 0, i32 7
  store i8 %22, i8* %23, align 8
  %24 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %0, i64 0, i32 9
  %25 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %1, i64 0, i32 9
  %26 = icmp eq %"struct.autofill::PasswordFormFillData"* %0, %1
  br i1 %26, label %56, label %27

27:                                               ; preds = %2
  %28 = bitcast %"class.std::__1::basic_string.1"* %24 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %29 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %28, i64 0, i32 1, i32 0
  %30 = load i8, i8* %29, align 1
  %31 = icmp slt i8 %30, 0
  %32 = bitcast %"class.std::__1::basic_string.1"* %25 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %32, i64 0, i32 1, i32 0
  %34 = load i8, i8* %33, align 1
  %35 = icmp slt i8 %34, 0
  br i1 %31, label %46, label %36

36:                                               ; preds = %27
  br i1 %35, label %40, label %37

37:                                               ; preds = %36
  %38 = bitcast %"class.std::__1::basic_string.1"* %24 to i8*
  %39 = bitcast %"class.std::__1::basic_string.1"* %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %38, i8* align 8 %39, i64 24, i1 false) #8
  br label %60

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load i8*, i8** %41, align 8
  %43 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %1, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %44 = load i64, i64* %43, align 8
  %45 = tail call dereferenceable(24) %"class.std::__1::basic_string.1"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string.1"* %24, i8* %42, i64 %44) #8
  br label %60

46:                                               ; preds = %27
  %47 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = load i8*, i8** %47, align 8
  %49 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %1, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %50 = load i64, i64* %49, align 8
  %51 = bitcast %"class.std::__1::basic_string.1"* %25 to i8*
  %52 = zext i8 %34 to i64
  %53 = select i1 %35, i8* %48, i8* %51
  %54 = select i1 %35, i64 %50, i64 %52
  %55 = tail call dereferenceable(24) %"class.std::__1::basic_string.1"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string.1"* %24, i8* %53, i64 %54) #8
  br label %60

56:                                               ; preds = %2
  %57 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %1, i64 0, i32 10
  %58 = load i8, i8* %57, align 8, !range !22
  %59 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %0, i64 0, i32 10
  store i8 %58, i8* %59, align 8
  br label %69

60:                                               ; preds = %37, %40, %46
  %61 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %1, i64 0, i32 10
  %62 = load i8, i8* %61, align 8, !range !22
  %63 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %0, i64 0, i32 10
  store i8 %62, i8* %63, align 8
  %64 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %0, i64 0, i32 12
  %65 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %1, i64 0, i32 12, i32 0, i32 0
  %66 = load %"struct.autofill::PasswordAndMetadata"*, %"struct.autofill::PasswordAndMetadata"** %65, align 8
  %67 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %1, i64 0, i32 12, i32 0, i32 1
  %68 = load %"struct.autofill::PasswordAndMetadata"*, %"struct.autofill::PasswordAndMetadata"** %67, align 8
  tail call void @_ZNSt3__16vectorIN8autofill19PasswordAndMetadataENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector.22"* %64, %"struct.autofill::PasswordAndMetadata"* %66, %"struct.autofill::PasswordAndMetadata"* %68) #8
  br label %69

69:                                               ; preds = %56, %60
  %70 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %1, i64 0, i32 13
  %71 = load i8, i8* %70, align 8, !range !22
  %72 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %0, i64 0, i32 13
  store i8 %71, i8* %72, align 8
  ret %"struct.autofill::PasswordFormFillData"* %0
}

declare dereferenceable(120) %class.GURL* @_ZN4GURLaSERKS_(%class.GURL*, %class.GURL* dereferenceable(120)) local_unnamed_addr #1

declare dereferenceable(584) %"struct.autofill::FormFieldData"* @_ZN8autofill13FormFieldDataaSERKS0_(%"struct.autofill::FormFieldData"*, %"struct.autofill::FormFieldData"* dereferenceable(584)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8autofill20PasswordFormFillDataC2EOS0_(%"struct.autofill::PasswordFormFillData"*, %"struct.autofill::PasswordFormFillData"* dereferenceable(1512)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load i32, i32* %3, align 8
  store i32 %5, i32* %4, align 8
  %6 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %0, i64 0, i32 2
  %7 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %1, i64 0, i32 2
  %8 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  %9 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 24, i1 false) #8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 24, i1 false) #8
  %10 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %0, i64 0, i32 3
  %11 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %1, i64 0, i32 3
  tail call void @_ZN4GURLC1EOS_(%class.GURL* %10, %class.GURL* dereferenceable(120) %11) #8
  %12 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %0, i64 0, i32 4
  %13 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %1, i64 0, i32 4
  tail call void @_ZN4GURLC1EOS_(%class.GURL* %12, %class.GURL* dereferenceable(120) %13) #8
  %14 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %0, i64 0, i32 5
  %15 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %1, i64 0, i32 5
  tail call void @_ZN8autofill13FormFieldDataC1EOS0_(%"struct.autofill::FormFieldData"* %14, %"struct.autofill::FormFieldData"* dereferenceable(584) %15) #8
  %16 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %0, i64 0, i32 6
  %17 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %1, i64 0, i32 6
  tail call void @_ZN8autofill13FormFieldDataC1EOS0_(%"struct.autofill::FormFieldData"* %16, %"struct.autofill::FormFieldData"* dereferenceable(584) %17) #8
  %18 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %0, i64 0, i32 7
  %19 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %1, i64 0, i32 7
  %20 = load i8, i8* %19, align 8, !range !22
  store i8 %20, i8* %18, align 8
  %21 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %0, i64 0, i32 9
  %22 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %1, i64 0, i32 9
  %23 = bitcast %"class.std::__1::basic_string.1"* %21 to i8*
  %24 = bitcast %"class.std::__1::basic_string.1"* %22 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 %24, i64 24, i1 false) #8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 24, i1 false) #8
  %25 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %0, i64 0, i32 10
  %26 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %1, i64 0, i32 10
  %27 = load i8, i8* %26, align 8, !range !22
  store i8 %27, i8* %25, align 8
  %28 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %0, i64 0, i32 12
  %29 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %1, i64 0, i32 12
  %30 = bitcast %"class.std::__1::vector.22"* %28 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 24, i1 false) #8
  %31 = bitcast %"class.std::__1::vector.22"* %29 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast %"class.std::__1::vector.22"* %28 to i64*
  store i64 %32, i64* %33, align 8
  %34 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %1, i64 0, i32 12, i32 0, i32 1
  %35 = bitcast %"struct.autofill::PasswordAndMetadata"** %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %0, i64 0, i32 12, i32 0, i32 1
  %38 = bitcast %"struct.autofill::PasswordAndMetadata"** %37 to i64*
  store i64 %36, i64* %38, align 8
  %39 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %1, i64 0, i32 12, i32 0, i32 2, i32 0, i32 0
  %40 = bitcast %"struct.autofill::PasswordAndMetadata"** %39 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %0, i64 0, i32 12, i32 0, i32 2, i32 0, i32 0
  %43 = bitcast %"struct.autofill::PasswordAndMetadata"** %42 to i64*
  store i64 %41, i64* %43, align 8
  %44 = bitcast %"class.std::__1::vector.22"* %29 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %44, i8 0, i64 24, i1 false) #8
  %45 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %0, i64 0, i32 13
  %46 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %1, i64 0, i32 13
  %47 = load i8, i8* %46, align 8, !range !22
  store i8 %47, i8* %45, align 8
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4GURLC1EOS_(%class.GURL*, %class.GURL* dereferenceable(120)) unnamed_addr #3

declare void @_ZN8autofill13FormFieldDataC1EOS0_(%"struct.autofill::FormFieldData"*, %"struct.autofill::FormFieldData"* dereferenceable(584)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(1512) %"struct.autofill::PasswordFormFillData"* @_ZN8autofill20PasswordFormFillDataaSEOS0_(%"struct.autofill::PasswordFormFillData"* returned, %"struct.autofill::PasswordFormFillData"* dereferenceable(1512)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load i32, i32* %3, align 8
  store i32 %5, i32* %4, align 8
  %6 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %0, i64 0, i32 2
  %7 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %1, i64 0, i32 2
  %8 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %8, i64 0, i32 1, i32 1
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  br i1 %11, label %12, label %15

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::basic_string"* %6 to i8**
  %14 = load i8*, i8** %13, align 8
  tail call void @_ZdlPv(i8* %14) #10
  br label %15

15:                                               ; preds = %2, %12
  %16 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  %17 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %17, i64 24, i1 false) #8
  %18 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %19 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %18, i64 0, i32 1, i32 1
  store i8 0, i8* %19, align 1
  %20 = bitcast %"class.std::__1::basic_string"* %7 to i16*
  store i16 0, i16* %20, align 2
  %21 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %0, i64 0, i32 3
  %22 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %1, i64 0, i32 3
  %23 = tail call dereferenceable(120) %class.GURL* @_ZN4GURLaSEOS_(%class.GURL* %21, %class.GURL* dereferenceable(120) %22) #8
  %24 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %0, i64 0, i32 4
  %25 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %1, i64 0, i32 4
  %26 = tail call dereferenceable(120) %class.GURL* @_ZN4GURLaSEOS_(%class.GURL* %24, %class.GURL* dereferenceable(120) %25) #8
  %27 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %0, i64 0, i32 5
  %28 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %1, i64 0, i32 5
  %29 = tail call dereferenceable(584) %"struct.autofill::FormFieldData"* @_ZN8autofill13FormFieldDataaSEOS0_(%"struct.autofill::FormFieldData"* %27, %"struct.autofill::FormFieldData"* dereferenceable(584) %28) #8
  %30 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %0, i64 0, i32 6
  %31 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %1, i64 0, i32 6
  %32 = tail call dereferenceable(584) %"struct.autofill::FormFieldData"* @_ZN8autofill13FormFieldDataaSEOS0_(%"struct.autofill::FormFieldData"* %30, %"struct.autofill::FormFieldData"* dereferenceable(584) %31) #8
  %33 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %1, i64 0, i32 7
  %34 = load i8, i8* %33, align 8, !range !22
  %35 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %0, i64 0, i32 7
  store i8 %34, i8* %35, align 8
  %36 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %0, i64 0, i32 9
  %37 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %1, i64 0, i32 9
  %38 = bitcast %"class.std::__1::basic_string.1"* %36 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %39 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %38, i64 0, i32 1, i32 0
  %40 = load i8, i8* %39, align 1
  %41 = icmp slt i8 %40, 0
  br i1 %41, label %42, label %45

42:                                               ; preds = %15
  %43 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load i8*, i8** %43, align 8
  tail call void @_ZdlPv(i8* %44) #10
  br label %45

45:                                               ; preds = %15, %42
  %46 = bitcast %"class.std::__1::basic_string.1"* %36 to i8*
  %47 = bitcast %"class.std::__1::basic_string.1"* %37 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %46, i8* align 8 %47, i64 24, i1 false) #8
  %48 = bitcast %"class.std::__1::basic_string.1"* %37 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %49 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  store i8 0, i8* %49, align 1
  store i8 0, i8* %47, align 1
  %50 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %1, i64 0, i32 10
  %51 = load i8, i8* %50, align 8, !range !22
  %52 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %0, i64 0, i32 10
  store i8 %51, i8* %52, align 8
  %53 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %0, i64 0, i32 12
  %54 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %1, i64 0, i32 12
  tail call void @_ZNSt3__16vectorIN8autofill19PasswordAndMetadataENS_9allocatorIS2_EEE13__move_assignERS5_NS_17integral_constantIbLb1EEE(%"class.std::__1::vector.22"* %53, %"class.std::__1::vector.22"* dereferenceable(24) %54) #8
  %55 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %1, i64 0, i32 13
  %56 = load i8, i8* %55, align 8, !range !22
  %57 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %0, i64 0, i32 13
  store i8 %56, i8* %57, align 8
  ret %"struct.autofill::PasswordFormFillData"* %0
}

; Function Attrs: nounwind
declare dereferenceable(120) %class.GURL* @_ZN4GURLaSEOS_(%class.GURL*, %class.GURL* dereferenceable(120)) local_unnamed_addr #3

declare dereferenceable(584) %"struct.autofill::FormFieldData"* @_ZN8autofill13FormFieldDataaSEOS0_(%"struct.autofill::FormFieldData"*, %"struct.autofill::FormFieldData"* dereferenceable(584)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8autofill20PasswordFormFillDataD2Ev(%"struct.autofill::PasswordFormFillData"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %0, i64 0, i32 12
  %3 = getelementptr inbounds %"class.std::__1::vector.22", %"class.std::__1::vector.22"* %2, i64 0, i32 0, i32 0
  %4 = load %"struct.autofill::PasswordAndMetadata"*, %"struct.autofill::PasswordAndMetadata"** %3, align 8
  %5 = icmp eq %"struct.autofill::PasswordAndMetadata"* %4, null
  br i1 %5, label %46, label %6

6:                                                ; preds = %1
  %7 = bitcast %"struct.autofill::PasswordAndMetadata"* %4 to i8*
  %8 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %0, i64 0, i32 12, i32 0, i32 1
  %9 = load %"struct.autofill::PasswordAndMetadata"*, %"struct.autofill::PasswordAndMetadata"** %8, align 8
  %10 = icmp eq %"struct.autofill::PasswordAndMetadata"* %9, %4
  br i1 %10, label %44, label %11

11:                                               ; preds = %6, %39
  %12 = phi %"struct.autofill::PasswordAndMetadata"* [ %13, %39 ], [ %9, %6 ]
  %13 = getelementptr inbounds %"struct.autofill::PasswordAndMetadata", %"struct.autofill::PasswordAndMetadata"* %12, i64 -1
  %14 = getelementptr inbounds %"struct.autofill::PasswordAndMetadata", %"struct.autofill::PasswordAndMetadata"* %12, i64 -1, i32 2
  %15 = bitcast %"class.std::__1::basic_string.1"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %15, i64 0, i32 1, i32 0
  %17 = load i8, i8* %16, align 1
  %18 = icmp slt i8 %17, 0
  br i1 %18, label %19, label %22

19:                                               ; preds = %11
  %20 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  tail call void @_ZdlPv(i8* %21) #10
  br label %22

22:                                               ; preds = %19, %11
  %23 = getelementptr inbounds %"struct.autofill::PasswordAndMetadata", %"struct.autofill::PasswordAndMetadata"* %12, i64 -1, i32 1
  %24 = bitcast %"class.std::__1::basic_string"* %23 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %24, i64 0, i32 1, i32 1
  %26 = load i8, i8* %25, align 1
  %27 = icmp slt i8 %26, 0
  br i1 %27, label %28, label %31

28:                                               ; preds = %22
  %29 = bitcast %"class.std::__1::basic_string"* %23 to i8**
  %30 = load i8*, i8** %29, align 8
  tail call void @_ZdlPv(i8* %30) #10
  br label %31

31:                                               ; preds = %28, %22
  %32 = bitcast %"struct.autofill::PasswordAndMetadata"* %13 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %32, i64 0, i32 1, i32 1
  %34 = load i8, i8* %33, align 1
  %35 = icmp slt i8 %34, 0
  br i1 %35, label %36, label %39

36:                                               ; preds = %31
  %37 = bitcast %"struct.autofill::PasswordAndMetadata"* %13 to i8**
  %38 = load i8*, i8** %37, align 8
  tail call void @_ZdlPv(i8* %38) #10
  br label %39

39:                                               ; preds = %36, %31
  %40 = icmp eq %"struct.autofill::PasswordAndMetadata"* %13, %4
  br i1 %40, label %41, label %11

41:                                               ; preds = %39
  %42 = bitcast %"class.std::__1::vector.22"* %2 to i8**
  %43 = load i8*, i8** %42, align 8
  br label %44

44:                                               ; preds = %41, %6
  %45 = phi i8* [ %43, %41 ], [ %7, %6 ]
  store %"struct.autofill::PasswordAndMetadata"* %4, %"struct.autofill::PasswordAndMetadata"** %8, align 8
  tail call void @_ZdlPv(i8* %45) #10
  br label %46

46:                                               ; preds = %1, %44
  %47 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %0, i64 0, i32 9
  %48 = bitcast %"class.std::__1::basic_string.1"* %47 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %49 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %50 = load i8, i8* %49, align 1
  %51 = icmp slt i8 %50, 0
  br i1 %51, label %52, label %55

52:                                               ; preds = %46
  %53 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %47, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  tail call void @_ZdlPv(i8* %54) #10
  br label %55

55:                                               ; preds = %46, %52
  %56 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %0, i64 0, i32 6
  tail call void @_ZN8autofill13FormFieldDataD1Ev(%"struct.autofill::FormFieldData"* %56) #8
  %57 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %0, i64 0, i32 5
  tail call void @_ZN8autofill13FormFieldDataD1Ev(%"struct.autofill::FormFieldData"* %57) #8
  %58 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %0, i64 0, i32 4
  tail call void @_ZN4GURLD1Ev(%class.GURL* %58) #8
  %59 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %0, i64 0, i32 3
  tail call void @_ZN4GURLD1Ev(%class.GURL* %59) #8
  %60 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %0, i64 0, i32 2
  %61 = bitcast %"class.std::__1::basic_string"* %60 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %62 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %61, i64 0, i32 1, i32 1
  %63 = load i8, i8* %62, align 1
  %64 = icmp slt i8 %63, 0
  br i1 %64, label %65, label %68

65:                                               ; preds = %55
  %66 = bitcast %"class.std::__1::basic_string"* %60 to i8**
  %67 = load i8*, i8** %66, align 8
  tail call void @_ZdlPv(i8* %67) #10
  br label %68

68:                                               ; preds = %55, %65
  ret void
}

; Function Attrs: nounwind
declare void @_ZN8autofill13FormFieldDataD1Ev(%"struct.autofill::FormFieldData"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4GURLD1Ev(%class.GURL*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8autofill24MaybeClearPasswordValuesERKNS_20PasswordFormFillDataE(%"struct.autofill::PasswordFormFillData"* noalias sret, %"struct.autofill::PasswordFormFillData"* dereferenceable(1512)) local_unnamed_addr #0 {
  %3 = alloca %"struct.autofill::PasswordFormFillData", align 8
  %4 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %1, i64 0, i32 6, i32 12, i32 0, i32 0, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  %7 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %1, i64 0, i32 13
  %8 = load i8, i8* %7, align 8, !range !22
  %9 = icmp ne i8 %8, 0
  %10 = or i1 %6, %9
  br i1 %10, label %12, label %11

11:                                               ; preds = %2
  tail call void @_ZN8autofill20PasswordFormFillDataC2ERKS0_(%"struct.autofill::PasswordFormFillData"* %0, %"struct.autofill::PasswordFormFillData"* dereferenceable(1512) %1)
  br label %87

12:                                               ; preds = %2
  %13 = bitcast %"struct.autofill::PasswordFormFillData"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1512, i8* nonnull %13) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %13, i8* align 8 bitcast (<{ %"class.autofill::FormRendererId", [4 x i8], %"class.std::__1::basic_string", { %"class.std::__1::basic_string.1", i8, [7 x i8], { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.std::__1::unique_ptr" }, { %"class.std::__1::basic_string.1", i8, [7 x i8], { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.std::__1::unique_ptr" }, { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.autofill::internal::TokenType", %"class.autofill::FieldRendererId", %"class.autofill::FormRendererId", { %"class.url::SchemeHostPort", { { { { i8, [7 x i8], %union.anon.16 } } } } }, i32, [4 x i8], %"class.std::__1::basic_string.1", i64, i8, [3 x i8], i32, i8, i8, [2 x i8], i32, i32, i32, i8, i8, [6 x i8], %"class.std::__1::basic_string", %"class.std::__1::vector", %"class.std::__1::vector", i32, %"class.gfx::RectF", [4 x i8], %"class.std::__1::vector", %"class.std::__1::vector" }, { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.autofill::internal::TokenType", %"class.autofill::FieldRendererId", %"class.autofill::FormRendererId", { %"class.url::SchemeHostPort", { { { { i8, [7 x i8], %union.anon.16 } } } } }, i32, [4 x i8], %"class.std::__1::basic_string.1", i64, i8, [3 x i8], i32, i8, i8, [2 x i8], i32, i32, i32, i8, i8, [6 x i8], %"class.std::__1::basic_string", %"class.std::__1::vector", %"class.std::__1::vector", i32, %"class.gfx::RectF", [4 x i8], %"class.std::__1::vector", %"class.std::__1::vector" }, i8, [7 x i8], %"class.std::__1::basic_string.1", i8, [7 x i8], %"class.std::__1::vector.22", i8, [7 x i8] }>* @__const._ZN8autofill24MaybeClearPasswordValuesERKNS_20PasswordFormFillDataE.result to i8*), i64 1512, i1 false)
  call void @_ZN8autofill20PasswordFormFillDataC2ERKS0_(%"struct.autofill::PasswordFormFillData"* nonnull %3, %"struct.autofill::PasswordFormFillData"* dereferenceable(1512) %1)
  %14 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %3, i64 0, i32 6, i32 4
  %15 = bitcast %"class.std::__1::basic_string"* %14 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %15, i64 0, i32 1, i32 1
  %17 = load i8, i8* %16, align 1
  %18 = icmp slt i8 %17, 0
  br i1 %18, label %19, label %23

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i16*, i16** %20, align 8
  store i16 0, i16* %21, align 2
  %22 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %3, i64 0, i32 6, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 0, i64* %22, align 8
  br label %25

23:                                               ; preds = %12
  %24 = bitcast %"class.std::__1::basic_string"* %14 to i16*
  store i16 0, i16* %24, align 8
  store i8 0, i8* %16, align 1
  br label %25

25:                                               ; preds = %19, %23
  %26 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %3, i64 0, i32 12
  %27 = getelementptr inbounds %"class.std::__1::vector.22", %"class.std::__1::vector.22"* %26, i64 0, i32 0, i32 0
  %28 = load %"struct.autofill::PasswordAndMetadata"*, %"struct.autofill::PasswordAndMetadata"** %27, align 8
  %29 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %3, i64 0, i32 12, i32 0, i32 1
  %30 = load %"struct.autofill::PasswordAndMetadata"*, %"struct.autofill::PasswordAndMetadata"** %29, align 8
  %31 = icmp eq %"struct.autofill::PasswordAndMetadata"* %28, %30
  br i1 %31, label %32, label %71

32:                                               ; preds = %84, %25
  %33 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %34 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %35 = load i32, i32* %33, align 8
  store i32 %35, i32* %34, align 8
  %36 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %0, i64 0, i32 2
  %37 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %3, i64 0, i32 2
  %38 = bitcast %"class.std::__1::basic_string"* %36 to i8*
  %39 = bitcast %"class.std::__1::basic_string"* %37 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %38, i8* align 8 %39, i64 24, i1 false) #8
  call void @llvm.memset.p0i8.i64(i8* align 8 %39, i8 0, i64 24, i1 false) #8
  %40 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %0, i64 0, i32 3
  %41 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %3, i64 0, i32 3
  call void @_ZN4GURLC1EOS_(%class.GURL* %40, %class.GURL* dereferenceable(120) %41) #8
  %42 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %0, i64 0, i32 4
  %43 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %3, i64 0, i32 4
  call void @_ZN4GURLC1EOS_(%class.GURL* %42, %class.GURL* dereferenceable(120) %43) #8
  %44 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %0, i64 0, i32 5
  %45 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %3, i64 0, i32 5
  call void @_ZN8autofill13FormFieldDataC1EOS0_(%"struct.autofill::FormFieldData"* %44, %"struct.autofill::FormFieldData"* dereferenceable(584) %45) #8
  %46 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %0, i64 0, i32 6
  %47 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %3, i64 0, i32 6
  call void @_ZN8autofill13FormFieldDataC1EOS0_(%"struct.autofill::FormFieldData"* %46, %"struct.autofill::FormFieldData"* dereferenceable(584) %47) #8
  %48 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %0, i64 0, i32 7
  %49 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %3, i64 0, i32 7
  %50 = load i8, i8* %49, align 8, !range !22
  store i8 %50, i8* %48, align 8
  %51 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %0, i64 0, i32 9
  %52 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %3, i64 0, i32 9
  %53 = bitcast %"class.std::__1::basic_string.1"* %51 to i8*
  %54 = bitcast %"class.std::__1::basic_string.1"* %52 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %53, i8* align 8 %54, i64 24, i1 false) #8
  call void @llvm.memset.p0i8.i64(i8* align 8 %54, i8 0, i64 24, i1 false) #8
  %55 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %0, i64 0, i32 10
  %56 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %3, i64 0, i32 10
  %57 = load i8, i8* %56, align 8, !range !22
  store i8 %57, i8* %55, align 8
  %58 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %0, i64 0, i32 12
  %59 = bitcast %"class.std::__1::vector.22"* %26 to <2 x i64>*
  %60 = load <2 x i64>, <2 x i64>* %59, align 8
  %61 = bitcast %"class.std::__1::vector.22"* %58 to <2 x i64>*
  store <2 x i64> %60, <2 x i64>* %61, align 8
  %62 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %3, i64 0, i32 12, i32 0, i32 2, i32 0, i32 0
  %63 = bitcast %"struct.autofill::PasswordAndMetadata"** %62 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %0, i64 0, i32 12, i32 0, i32 2, i32 0, i32 0
  %66 = bitcast %"struct.autofill::PasswordAndMetadata"** %65 to i64*
  store i64 %64, i64* %66, align 8
  %67 = bitcast %"class.std::__1::vector.22"* %26 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %67, i8 0, i64 24, i1 false) #8
  %68 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %0, i64 0, i32 13
  %69 = getelementptr inbounds %"struct.autofill::PasswordFormFillData", %"struct.autofill::PasswordFormFillData"* %3, i64 0, i32 13
  %70 = load i8, i8* %69, align 8, !range !22
  store i8 %70, i8* %68, align 8
  call void @_ZN8autofill20PasswordFormFillDataD2Ev(%"struct.autofill::PasswordFormFillData"* nonnull %3) #8
  call void @llvm.lifetime.end.p0i8(i64 1512, i8* nonnull %13) #8
  br label %87

71:                                               ; preds = %25, %84
  %72 = phi %"struct.autofill::PasswordAndMetadata"* [ %85, %84 ], [ %28, %25 ]
  %73 = getelementptr inbounds %"struct.autofill::PasswordAndMetadata", %"struct.autofill::PasswordAndMetadata"* %72, i64 0, i32 1
  %74 = bitcast %"class.std::__1::basic_string"* %73 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %75 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %74, i64 0, i32 1, i32 1
  %76 = load i8, i8* %75, align 1
  %77 = icmp slt i8 %76, 0
  br i1 %77, label %78, label %82

78:                                               ; preds = %71
  %79 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %73, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = load i16*, i16** %79, align 8
  store i16 0, i16* %80, align 2
  %81 = getelementptr inbounds %"struct.autofill::PasswordAndMetadata", %"struct.autofill::PasswordAndMetadata"* %72, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 0, i64* %81, align 8
  br label %84

82:                                               ; preds = %71
  %83 = bitcast %"class.std::__1::basic_string"* %73 to i16*
  store i16 0, i16* %83, align 2
  store i8 0, i8* %75, align 1
  br label %84

84:                                               ; preds = %78, %82
  %85 = getelementptr inbounds %"struct.autofill::PasswordAndMetadata", %"struct.autofill::PasswordAndMetadata"* %72, i64 1
  %86 = icmp eq %"struct.autofill::PasswordAndMetadata"* %85, %30
  br i1 %86, label %32, label %71

87:                                               ; preds = %32, %11
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string.1"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #5

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"*, i64, i64, i64, i64, i64, i64, i16*) local_unnamed_addr #0 comdat align 2 {
  %9 = sub i64 9223372036854775790, %1
  %10 = icmp ult i64 %9, %2
  br i1 %10, label %11, label %13

11:                                               ; preds = %8
  %12 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %12) #9
  unreachable

13:                                               ; preds = %8
  %14 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %14, i64 0, i32 1, i32 1
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i16*, i16** %19, align 8
  br label %23

21:                                               ; preds = %13
  %22 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  br label %23

23:                                               ; preds = %18, %21
  %24 = phi i16* [ %20, %18 ], [ %22, %21 ]
  %25 = bitcast i16* %24 to i8*
  %26 = icmp ult i64 %1, 4611686018427387879
  br i1 %26, label %27, label %38

27:                                               ; preds = %23
  %28 = add i64 %2, %1
  %29 = shl i64 %1, 1
  %30 = icmp ult i64 %28, %29
  %31 = select i1 %30, i64 %29, i64 %28
  %32 = icmp ult i64 %31, 11
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = add i64 %31, 8
  %35 = and i64 %34, -8
  %36 = icmp slt i64 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %33
  tail call void @abort() #9
  unreachable

38:                                               ; preds = %23, %27, %33
  %39 = phi i64 [ %35, %33 ], [ 9223372036854775791, %23 ], [ 11, %27 ]
  %40 = shl i64 %39, 1
  %41 = tail call i8* @_Znwm(i64 %40) #10
  %42 = bitcast i8* %41 to i16*
  %43 = icmp eq i64 %4, 0
  br i1 %43, label %189, label %44

44:                                               ; preds = %38
  %45 = icmp ult i64 %4, 16
  br i1 %45, label %136, label %46

46:                                               ; preds = %44
  %47 = shl i64 %4, 1
  %48 = getelementptr i8, i8* %41, i64 %47
  %49 = getelementptr i16, i16* %24, i64 %4
  %50 = bitcast i16* %49 to i8*
  %51 = icmp ult i8* %41, %50
  %52 = icmp ugt i8* %48, %25
  %53 = and i1 %51, %52
  br i1 %53, label %136, label %54

54:                                               ; preds = %46
  %55 = and i64 %4, -16
  %56 = sub i64 %4, %55
  %57 = getelementptr i16, i16* %24, i64 %55
  %58 = getelementptr i16, i16* %42, i64 %55
  %59 = add i64 %55, -16
  %60 = lshr exact i64 %59, 4
  %61 = add nuw nsw i64 %60, 1
  %62 = and i64 %61, 3
  %63 = icmp ult i64 %59, 48
  br i1 %63, label %115, label %64

64:                                               ; preds = %54
  %65 = sub nsw i64 %61, %62
  br label %66

66:                                               ; preds = %66, %64
  %67 = phi i64 [ 0, %64 ], [ %112, %66 ]
  %68 = phi i64 [ %65, %64 ], [ %113, %66 ]
  %69 = getelementptr i16, i16* %24, i64 %67
  %70 = getelementptr i16, i16* %42, i64 %67
  %71 = bitcast i16* %69 to <8 x i16>*
  %72 = load <8 x i16>, <8 x i16>* %71, align 2, !alias.scope !59
  %73 = getelementptr i16, i16* %69, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  %75 = load <8 x i16>, <8 x i16>* %74, align 2, !alias.scope !59
  %76 = bitcast i16* %70 to <8 x i16>*
  store <8 x i16> %72, <8 x i16>* %76, align 2, !alias.scope !62, !noalias !59
  %77 = getelementptr i16, i16* %70, i64 8
  %78 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %75, <8 x i16>* %78, align 2, !alias.scope !62, !noalias !59
  %79 = or i64 %67, 16
  %80 = getelementptr i16, i16* %24, i64 %79
  %81 = getelementptr i16, i16* %42, i64 %79
  %82 = bitcast i16* %80 to <8 x i16>*
  %83 = load <8 x i16>, <8 x i16>* %82, align 2, !alias.scope !59
  %84 = getelementptr i16, i16* %80, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  %86 = load <8 x i16>, <8 x i16>* %85, align 2, !alias.scope !59
  %87 = bitcast i16* %81 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %87, align 2, !alias.scope !62, !noalias !59
  %88 = getelementptr i16, i16* %81, i64 8
  %89 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %86, <8 x i16>* %89, align 2, !alias.scope !62, !noalias !59
  %90 = or i64 %67, 32
  %91 = getelementptr i16, i16* %24, i64 %90
  %92 = getelementptr i16, i16* %42, i64 %90
  %93 = bitcast i16* %91 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !59
  %95 = getelementptr i16, i16* %91, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  %97 = load <8 x i16>, <8 x i16>* %96, align 2, !alias.scope !59
  %98 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %98, align 2, !alias.scope !62, !noalias !59
  %99 = getelementptr i16, i16* %92, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %97, <8 x i16>* %100, align 2, !alias.scope !62, !noalias !59
  %101 = or i64 %67, 48
  %102 = getelementptr i16, i16* %24, i64 %101
  %103 = getelementptr i16, i16* %42, i64 %101
  %104 = bitcast i16* %102 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !59
  %106 = getelementptr i16, i16* %102, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !59
  %109 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %109, align 2, !alias.scope !62, !noalias !59
  %110 = getelementptr i16, i16* %103, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %111, align 2, !alias.scope !62, !noalias !59
  %112 = add i64 %67, 64
  %113 = add i64 %68, -4
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %115, label %66, !llvm.loop !64

115:                                              ; preds = %66, %54
  %116 = phi i64 [ 0, %54 ], [ %112, %66 ]
  %117 = icmp eq i64 %62, 0
  br i1 %117, label %134, label %118

118:                                              ; preds = %115, %118
  %119 = phi i64 [ %131, %118 ], [ %116, %115 ]
  %120 = phi i64 [ %132, %118 ], [ %62, %115 ]
  %121 = getelementptr i16, i16* %24, i64 %119
  %122 = getelementptr i16, i16* %42, i64 %119
  %123 = bitcast i16* %121 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !59
  %125 = getelementptr i16, i16* %121, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  %127 = load <8 x i16>, <8 x i16>* %126, align 2, !alias.scope !59
  %128 = bitcast i16* %122 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %128, align 2, !alias.scope !62, !noalias !59
  %129 = getelementptr i16, i16* %122, i64 8
  %130 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %130, align 2, !alias.scope !62, !noalias !59
  %131 = add i64 %119, 16
  %132 = add i64 %120, -1
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %134, label %118, !llvm.loop !65

134:                                              ; preds = %118, %115
  %135 = icmp eq i64 %55, %4
  br i1 %135, label %189, label %136

136:                                              ; preds = %134, %46, %44
  %137 = phi i64 [ %4, %46 ], [ %4, %44 ], [ %56, %134 ]
  %138 = phi i16* [ %24, %46 ], [ %24, %44 ], [ %57, %134 ]
  %139 = phi i16* [ %42, %46 ], [ %42, %44 ], [ %58, %134 ]
  %140 = add i64 %137, -1
  %141 = and i64 %137, 7
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %154, label %143

143:                                              ; preds = %136, %143
  %144 = phi i64 [ %149, %143 ], [ %137, %136 ]
  %145 = phi i16* [ %151, %143 ], [ %138, %136 ]
  %146 = phi i16* [ %150, %143 ], [ %139, %136 ]
  %147 = phi i64 [ %152, %143 ], [ %141, %136 ]
  %148 = load i16, i16* %145, align 2
  store i16 %148, i16* %146, align 2
  %149 = add i64 %144, -1
  %150 = getelementptr inbounds i16, i16* %146, i64 1
  %151 = getelementptr inbounds i16, i16* %145, i64 1
  %152 = add i64 %147, -1
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %143, !llvm.loop !66

154:                                              ; preds = %143, %136
  %155 = phi i64 [ %137, %136 ], [ %149, %143 ]
  %156 = phi i16* [ %138, %136 ], [ %151, %143 ]
  %157 = phi i16* [ %139, %136 ], [ %150, %143 ]
  %158 = icmp ult i64 %140, 7
  br i1 %158, label %189, label %159

159:                                              ; preds = %154, %159
  %160 = phi i64 [ %185, %159 ], [ %155, %154 ]
  %161 = phi i16* [ %187, %159 ], [ %156, %154 ]
  %162 = phi i16* [ %186, %159 ], [ %157, %154 ]
  %163 = load i16, i16* %161, align 2
  store i16 %163, i16* %162, align 2
  %164 = getelementptr inbounds i16, i16* %162, i64 1
  %165 = getelementptr inbounds i16, i16* %161, i64 1
  %166 = load i16, i16* %165, align 2
  store i16 %166, i16* %164, align 2
  %167 = getelementptr inbounds i16, i16* %162, i64 2
  %168 = getelementptr inbounds i16, i16* %161, i64 2
  %169 = load i16, i16* %168, align 2
  store i16 %169, i16* %167, align 2
  %170 = getelementptr inbounds i16, i16* %162, i64 3
  %171 = getelementptr inbounds i16, i16* %161, i64 3
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %162, i64 4
  %174 = getelementptr inbounds i16, i16* %161, i64 4
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %162, i64 5
  %177 = getelementptr inbounds i16, i16* %161, i64 5
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %162, i64 6
  %180 = getelementptr inbounds i16, i16* %161, i64 6
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %162, i64 7
  %183 = getelementptr inbounds i16, i16* %161, i64 7
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = add i64 %160, -8
  %186 = getelementptr inbounds i16, i16* %162, i64 8
  %187 = getelementptr inbounds i16, i16* %161, i64 8
  %188 = icmp eq i64 %185, 0
  br i1 %188, label %189, label %159, !llvm.loop !67

189:                                              ; preds = %154, %159, %134, %38
  %190 = icmp eq i64 %6, 0
  br i1 %190, label %289, label %191

191:                                              ; preds = %189
  %192 = getelementptr inbounds i16, i16* %42, i64 %4
  %193 = icmp ult i64 %6, 16
  br i1 %193, label %276, label %194

194:                                              ; preds = %191
  %195 = and i64 %6, -16
  %196 = sub i64 %6, %195
  %197 = getelementptr i16, i16* %7, i64 %195
  %198 = getelementptr i16, i16* %192, i64 %195
  %199 = add i64 %195, -16
  %200 = lshr exact i64 %199, 4
  %201 = add nuw nsw i64 %200, 1
  %202 = and i64 %201, 3
  %203 = icmp ult i64 %199, 48
  br i1 %203, label %255, label %204

204:                                              ; preds = %194
  %205 = sub nsw i64 %201, %202
  br label %206

206:                                              ; preds = %206, %204
  %207 = phi i64 [ 0, %204 ], [ %252, %206 ]
  %208 = phi i64 [ %205, %204 ], [ %253, %206 ]
  %209 = getelementptr i16, i16* %7, i64 %207
  %210 = getelementptr i16, i16* %192, i64 %207
  %211 = bitcast i16* %209 to <8 x i16>*
  %212 = load <8 x i16>, <8 x i16>* %211, align 2
  %213 = getelementptr i16, i16* %209, i64 8
  %214 = bitcast i16* %213 to <8 x i16>*
  %215 = load <8 x i16>, <8 x i16>* %214, align 2
  %216 = bitcast i16* %210 to <8 x i16>*
  store <8 x i16> %212, <8 x i16>* %216, align 2
  %217 = getelementptr i16, i16* %210, i64 8
  %218 = bitcast i16* %217 to <8 x i16>*
  store <8 x i16> %215, <8 x i16>* %218, align 2
  %219 = or i64 %207, 16
  %220 = getelementptr i16, i16* %7, i64 %219
  %221 = getelementptr i16, i16* %192, i64 %219
  %222 = bitcast i16* %220 to <8 x i16>*
  %223 = load <8 x i16>, <8 x i16>* %222, align 2
  %224 = getelementptr i16, i16* %220, i64 8
  %225 = bitcast i16* %224 to <8 x i16>*
  %226 = load <8 x i16>, <8 x i16>* %225, align 2
  %227 = bitcast i16* %221 to <8 x i16>*
  store <8 x i16> %223, <8 x i16>* %227, align 2
  %228 = getelementptr i16, i16* %221, i64 8
  %229 = bitcast i16* %228 to <8 x i16>*
  store <8 x i16> %226, <8 x i16>* %229, align 2
  %230 = or i64 %207, 32
  %231 = getelementptr i16, i16* %7, i64 %230
  %232 = getelementptr i16, i16* %192, i64 %230
  %233 = bitcast i16* %231 to <8 x i16>*
  %234 = load <8 x i16>, <8 x i16>* %233, align 2
  %235 = getelementptr i16, i16* %231, i64 8
  %236 = bitcast i16* %235 to <8 x i16>*
  %237 = load <8 x i16>, <8 x i16>* %236, align 2
  %238 = bitcast i16* %232 to <8 x i16>*
  store <8 x i16> %234, <8 x i16>* %238, align 2
  %239 = getelementptr i16, i16* %232, i64 8
  %240 = bitcast i16* %239 to <8 x i16>*
  store <8 x i16> %237, <8 x i16>* %240, align 2
  %241 = or i64 %207, 48
  %242 = getelementptr i16, i16* %7, i64 %241
  %243 = getelementptr i16, i16* %192, i64 %241
  %244 = bitcast i16* %242 to <8 x i16>*
  %245 = load <8 x i16>, <8 x i16>* %244, align 2
  %246 = getelementptr i16, i16* %242, i64 8
  %247 = bitcast i16* %246 to <8 x i16>*
  %248 = load <8 x i16>, <8 x i16>* %247, align 2
  %249 = bitcast i16* %243 to <8 x i16>*
  store <8 x i16> %245, <8 x i16>* %249, align 2
  %250 = getelementptr i16, i16* %243, i64 8
  %251 = bitcast i16* %250 to <8 x i16>*
  store <8 x i16> %248, <8 x i16>* %251, align 2
  %252 = add i64 %207, 64
  %253 = add i64 %208, -4
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %255, label %206, !llvm.loop !68

255:                                              ; preds = %206, %194
  %256 = phi i64 [ 0, %194 ], [ %252, %206 ]
  %257 = icmp eq i64 %202, 0
  br i1 %257, label %274, label %258

258:                                              ; preds = %255, %258
  %259 = phi i64 [ %271, %258 ], [ %256, %255 ]
  %260 = phi i64 [ %272, %258 ], [ %202, %255 ]
  %261 = getelementptr i16, i16* %7, i64 %259
  %262 = getelementptr i16, i16* %192, i64 %259
  %263 = bitcast i16* %261 to <8 x i16>*
  %264 = load <8 x i16>, <8 x i16>* %263, align 2
  %265 = getelementptr i16, i16* %261, i64 8
  %266 = bitcast i16* %265 to <8 x i16>*
  %267 = load <8 x i16>, <8 x i16>* %266, align 2
  %268 = bitcast i16* %262 to <8 x i16>*
  store <8 x i16> %264, <8 x i16>* %268, align 2
  %269 = getelementptr i16, i16* %262, i64 8
  %270 = bitcast i16* %269 to <8 x i16>*
  store <8 x i16> %267, <8 x i16>* %270, align 2
  %271 = add i64 %259, 16
  %272 = add i64 %260, -1
  %273 = icmp eq i64 %272, 0
  br i1 %273, label %274, label %258, !llvm.loop !69

274:                                              ; preds = %258, %255
  %275 = icmp eq i64 %195, %6
  br i1 %275, label %289, label %276

276:                                              ; preds = %274, %191
  %277 = phi i64 [ %6, %191 ], [ %196, %274 ]
  %278 = phi i16* [ %7, %191 ], [ %197, %274 ]
  %279 = phi i16* [ %192, %191 ], [ %198, %274 ]
  br label %280

280:                                              ; preds = %276, %280
  %281 = phi i64 [ %285, %280 ], [ %277, %276 ]
  %282 = phi i16* [ %287, %280 ], [ %278, %276 ]
  %283 = phi i16* [ %286, %280 ], [ %279, %276 ]
  %284 = load i16, i16* %282, align 2
  store i16 %284, i16* %283, align 2
  %285 = add i64 %281, -1
  %286 = getelementptr inbounds i16, i16* %283, i64 1
  %287 = getelementptr inbounds i16, i16* %282, i64 1
  %288 = icmp eq i64 %285, 0
  br i1 %288, label %289, label %280, !llvm.loop !70

289:                                              ; preds = %280, %274, %189
  %290 = sub i64 %3, %5
  %291 = sub i64 %290, %4
  %292 = icmp eq i64 %291, 0
  br i1 %292, label %448, label %293

293:                                              ; preds = %289
  %294 = getelementptr inbounds i16, i16* %42, i64 %4
  %295 = getelementptr inbounds i16, i16* %294, i64 %6
  %296 = getelementptr inbounds i16, i16* %24, i64 %4
  %297 = getelementptr inbounds i16, i16* %296, i64 %5
  %298 = icmp ult i64 %291, 16
  br i1 %298, label %395, label %299

299:                                              ; preds = %293
  %300 = bitcast i16* %297 to i8*
  %301 = add i64 %6, %4
  %302 = shl i64 %301, 1
  %303 = getelementptr i8, i8* %41, i64 %302
  %304 = add i64 %6, %3
  %305 = sub i64 %304, %5
  %306 = shl i64 %305, 1
  %307 = getelementptr i8, i8* %41, i64 %306
  %308 = getelementptr i16, i16* %24, i64 %3
  %309 = bitcast i16* %308 to i8*
  %310 = icmp ult i8* %303, %309
  %311 = icmp ugt i8* %307, %300
  %312 = and i1 %310, %311
  br i1 %312, label %395, label %313

313:                                              ; preds = %299
  %314 = and i64 %291, -16
  %315 = sub i64 %291, %314
  %316 = getelementptr i16, i16* %297, i64 %314
  %317 = getelementptr i16, i16* %295, i64 %314
  %318 = add i64 %314, -16
  %319 = lshr exact i64 %318, 4
  %320 = add nuw nsw i64 %319, 1
  %321 = and i64 %320, 3
  %322 = icmp ult i64 %318, 48
  br i1 %322, label %374, label %323

323:                                              ; preds = %313
  %324 = sub nsw i64 %320, %321
  br label %325

325:                                              ; preds = %325, %323
  %326 = phi i64 [ 0, %323 ], [ %371, %325 ]
  %327 = phi i64 [ %324, %323 ], [ %372, %325 ]
  %328 = getelementptr i16, i16* %297, i64 %326
  %329 = getelementptr i16, i16* %295, i64 %326
  %330 = bitcast i16* %328 to <8 x i16>*
  %331 = load <8 x i16>, <8 x i16>* %330, align 2, !alias.scope !72
  %332 = getelementptr i16, i16* %328, i64 8
  %333 = bitcast i16* %332 to <8 x i16>*
  %334 = load <8 x i16>, <8 x i16>* %333, align 2, !alias.scope !72
  %335 = bitcast i16* %329 to <8 x i16>*
  store <8 x i16> %331, <8 x i16>* %335, align 2, !alias.scope !75, !noalias !72
  %336 = getelementptr i16, i16* %329, i64 8
  %337 = bitcast i16* %336 to <8 x i16>*
  store <8 x i16> %334, <8 x i16>* %337, align 2, !alias.scope !75, !noalias !72
  %338 = or i64 %326, 16
  %339 = getelementptr i16, i16* %297, i64 %338
  %340 = getelementptr i16, i16* %295, i64 %338
  %341 = bitcast i16* %339 to <8 x i16>*
  %342 = load <8 x i16>, <8 x i16>* %341, align 2, !alias.scope !72
  %343 = getelementptr i16, i16* %339, i64 8
  %344 = bitcast i16* %343 to <8 x i16>*
  %345 = load <8 x i16>, <8 x i16>* %344, align 2, !alias.scope !72
  %346 = bitcast i16* %340 to <8 x i16>*
  store <8 x i16> %342, <8 x i16>* %346, align 2, !alias.scope !75, !noalias !72
  %347 = getelementptr i16, i16* %340, i64 8
  %348 = bitcast i16* %347 to <8 x i16>*
  store <8 x i16> %345, <8 x i16>* %348, align 2, !alias.scope !75, !noalias !72
  %349 = or i64 %326, 32
  %350 = getelementptr i16, i16* %297, i64 %349
  %351 = getelementptr i16, i16* %295, i64 %349
  %352 = bitcast i16* %350 to <8 x i16>*
  %353 = load <8 x i16>, <8 x i16>* %352, align 2, !alias.scope !72
  %354 = getelementptr i16, i16* %350, i64 8
  %355 = bitcast i16* %354 to <8 x i16>*
  %356 = load <8 x i16>, <8 x i16>* %355, align 2, !alias.scope !72
  %357 = bitcast i16* %351 to <8 x i16>*
  store <8 x i16> %353, <8 x i16>* %357, align 2, !alias.scope !75, !noalias !72
  %358 = getelementptr i16, i16* %351, i64 8
  %359 = bitcast i16* %358 to <8 x i16>*
  store <8 x i16> %356, <8 x i16>* %359, align 2, !alias.scope !75, !noalias !72
  %360 = or i64 %326, 48
  %361 = getelementptr i16, i16* %297, i64 %360
  %362 = getelementptr i16, i16* %295, i64 %360
  %363 = bitcast i16* %361 to <8 x i16>*
  %364 = load <8 x i16>, <8 x i16>* %363, align 2, !alias.scope !72
  %365 = getelementptr i16, i16* %361, i64 8
  %366 = bitcast i16* %365 to <8 x i16>*
  %367 = load <8 x i16>, <8 x i16>* %366, align 2, !alias.scope !72
  %368 = bitcast i16* %362 to <8 x i16>*
  store <8 x i16> %364, <8 x i16>* %368, align 2, !alias.scope !75, !noalias !72
  %369 = getelementptr i16, i16* %362, i64 8
  %370 = bitcast i16* %369 to <8 x i16>*
  store <8 x i16> %367, <8 x i16>* %370, align 2, !alias.scope !75, !noalias !72
  %371 = add i64 %326, 64
  %372 = add i64 %327, -4
  %373 = icmp eq i64 %372, 0
  br i1 %373, label %374, label %325, !llvm.loop !77

374:                                              ; preds = %325, %313
  %375 = phi i64 [ 0, %313 ], [ %371, %325 ]
  %376 = icmp eq i64 %321, 0
  br i1 %376, label %393, label %377

377:                                              ; preds = %374, %377
  %378 = phi i64 [ %390, %377 ], [ %375, %374 ]
  %379 = phi i64 [ %391, %377 ], [ %321, %374 ]
  %380 = getelementptr i16, i16* %297, i64 %378
  %381 = getelementptr i16, i16* %295, i64 %378
  %382 = bitcast i16* %380 to <8 x i16>*
  %383 = load <8 x i16>, <8 x i16>* %382, align 2, !alias.scope !72
  %384 = getelementptr i16, i16* %380, i64 8
  %385 = bitcast i16* %384 to <8 x i16>*
  %386 = load <8 x i16>, <8 x i16>* %385, align 2, !alias.scope !72
  %387 = bitcast i16* %381 to <8 x i16>*
  store <8 x i16> %383, <8 x i16>* %387, align 2, !alias.scope !75, !noalias !72
  %388 = getelementptr i16, i16* %381, i64 8
  %389 = bitcast i16* %388 to <8 x i16>*
  store <8 x i16> %386, <8 x i16>* %389, align 2, !alias.scope !75, !noalias !72
  %390 = add i64 %378, 16
  %391 = add i64 %379, -1
  %392 = icmp eq i64 %391, 0
  br i1 %392, label %393, label %377, !llvm.loop !78

393:                                              ; preds = %377, %374
  %394 = icmp eq i64 %291, %314
  br i1 %394, label %448, label %395

395:                                              ; preds = %393, %299, %293
  %396 = phi i64 [ %291, %299 ], [ %291, %293 ], [ %315, %393 ]
  %397 = phi i16* [ %297, %299 ], [ %297, %293 ], [ %316, %393 ]
  %398 = phi i16* [ %295, %299 ], [ %295, %293 ], [ %317, %393 ]
  %399 = add i64 %396, -1
  %400 = and i64 %396, 7
  %401 = icmp eq i64 %400, 0
  br i1 %401, label %413, label %402

402:                                              ; preds = %395, %402
  %403 = phi i64 [ %408, %402 ], [ %396, %395 ]
  %404 = phi i16* [ %410, %402 ], [ %397, %395 ]
  %405 = phi i16* [ %409, %402 ], [ %398, %395 ]
  %406 = phi i64 [ %411, %402 ], [ %400, %395 ]
  %407 = load i16, i16* %404, align 2
  store i16 %407, i16* %405, align 2
  %408 = add i64 %403, -1
  %409 = getelementptr inbounds i16, i16* %405, i64 1
  %410 = getelementptr inbounds i16, i16* %404, i64 1
  %411 = add i64 %406, -1
  %412 = icmp eq i64 %411, 0
  br i1 %412, label %413, label %402, !llvm.loop !79

413:                                              ; preds = %402, %395
  %414 = phi i64 [ %396, %395 ], [ %408, %402 ]
  %415 = phi i16* [ %397, %395 ], [ %410, %402 ]
  %416 = phi i16* [ %398, %395 ], [ %409, %402 ]
  %417 = icmp ult i64 %399, 7
  br i1 %417, label %448, label %418

418:                                              ; preds = %413, %418
  %419 = phi i64 [ %444, %418 ], [ %414, %413 ]
  %420 = phi i16* [ %446, %418 ], [ %415, %413 ]
  %421 = phi i16* [ %445, %418 ], [ %416, %413 ]
  %422 = load i16, i16* %420, align 2
  store i16 %422, i16* %421, align 2
  %423 = getelementptr inbounds i16, i16* %421, i64 1
  %424 = getelementptr inbounds i16, i16* %420, i64 1
  %425 = load i16, i16* %424, align 2
  store i16 %425, i16* %423, align 2
  %426 = getelementptr inbounds i16, i16* %421, i64 2
  %427 = getelementptr inbounds i16, i16* %420, i64 2
  %428 = load i16, i16* %427, align 2
  store i16 %428, i16* %426, align 2
  %429 = getelementptr inbounds i16, i16* %421, i64 3
  %430 = getelementptr inbounds i16, i16* %420, i64 3
  %431 = load i16, i16* %430, align 2
  store i16 %431, i16* %429, align 2
  %432 = getelementptr inbounds i16, i16* %421, i64 4
  %433 = getelementptr inbounds i16, i16* %420, i64 4
  %434 = load i16, i16* %433, align 2
  store i16 %434, i16* %432, align 2
  %435 = getelementptr inbounds i16, i16* %421, i64 5
  %436 = getelementptr inbounds i16, i16* %420, i64 5
  %437 = load i16, i16* %436, align 2
  store i16 %437, i16* %435, align 2
  %438 = getelementptr inbounds i16, i16* %421, i64 6
  %439 = getelementptr inbounds i16, i16* %420, i64 6
  %440 = load i16, i16* %439, align 2
  store i16 %440, i16* %438, align 2
  %441 = getelementptr inbounds i16, i16* %421, i64 7
  %442 = getelementptr inbounds i16, i16* %420, i64 7
  %443 = load i16, i16* %442, align 2
  store i16 %443, i16* %441, align 2
  %444 = add i64 %419, -8
  %445 = getelementptr inbounds i16, i16* %421, i64 8
  %446 = getelementptr inbounds i16, i16* %420, i64 8
  %447 = icmp eq i64 %444, 0
  br i1 %447, label %448, label %418, !llvm.loop !80

448:                                              ; preds = %413, %418, %393, %289
  %449 = icmp eq i64 %1, 10
  br i1 %449, label %451, label %450

450:                                              ; preds = %448
  tail call void @_ZdlPv(i8* %25) #10
  br label %451

451:                                              ; preds = %448, %450
  %452 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %41, i8** %452, align 8
  %453 = or i64 %39, -9223372036854775808
  %454 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %453, i64* %454, align 8
  %455 = add i64 %290, %6
  %456 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %455, i64* %456, align 8
  %457 = getelementptr inbounds i16, i16* %42, i64 %455
  store i16 0, i16* %457, align 2
  ret void
}

declare dereferenceable(24) %"class.std::__1::basic_string.1"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string.1"*, i8*, i64) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string.1"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string.1"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN8autofill19PasswordAndMetadataENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector.22"*, %"struct.autofill::PasswordAndMetadata"*, %"struct.autofill::PasswordAndMetadata"*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"struct.autofill::PasswordAndMetadata"* %2 to i64
  %5 = ptrtoint %"struct.autofill::PasswordAndMetadata"* %1 to i64
  %6 = sub i64 %4, %5
  %7 = sdiv exact i64 %6, 80
  %8 = getelementptr inbounds %"class.std::__1::vector.22", %"class.std::__1::vector.22"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %"struct.autofill::PasswordAndMetadata"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.22"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = sdiv exact i64 %13, 80
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to %"struct.autofill::PasswordAndMetadata"*
  br i1 %15, label %126, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.22", %"class.std::__1::vector.22"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %"struct.autofill::PasswordAndMetadata"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = sdiv exact i64 %21, 80
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds %"struct.autofill::PasswordAndMetadata", %"struct.autofill::PasswordAndMetadata"* %1, i64 %22
  %25 = select i1 %23, %"struct.autofill::PasswordAndMetadata"* %24, %"struct.autofill::PasswordAndMetadata"* %2
  %26 = icmp eq %"struct.autofill::PasswordAndMetadata"* %25, %1
  br i1 %26, label %75, label %27

27:                                               ; preds = %17, %68
  %28 = phi %"struct.autofill::PasswordAndMetadata"* [ %73, %68 ], [ %16, %17 ]
  %29 = phi %"struct.autofill::PasswordAndMetadata"* [ %72, %68 ], [ %1, %17 ]
  %30 = getelementptr inbounds %"struct.autofill::PasswordAndMetadata", %"struct.autofill::PasswordAndMetadata"* %28, i64 0, i32 0
  %31 = getelementptr inbounds %"struct.autofill::PasswordAndMetadata", %"struct.autofill::PasswordAndMetadata"* %29, i64 0, i32 0
  %32 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string"* %30, %"class.std::__1::basic_string"* dereferenceable(24) %31) #8
  %33 = getelementptr inbounds %"struct.autofill::PasswordAndMetadata", %"struct.autofill::PasswordAndMetadata"* %28, i64 0, i32 1
  %34 = getelementptr inbounds %"struct.autofill::PasswordAndMetadata", %"struct.autofill::PasswordAndMetadata"* %29, i64 0, i32 1
  %35 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string"* %33, %"class.std::__1::basic_string"* dereferenceable(24) %34) #8
  %36 = getelementptr inbounds %"struct.autofill::PasswordAndMetadata", %"struct.autofill::PasswordAndMetadata"* %28, i64 0, i32 2
  %37 = getelementptr inbounds %"struct.autofill::PasswordAndMetadata", %"struct.autofill::PasswordAndMetadata"* %29, i64 0, i32 2
  %38 = icmp eq %"struct.autofill::PasswordAndMetadata"* %28, %29
  br i1 %38, label %68, label %39

39:                                               ; preds = %27
  %40 = bitcast %"class.std::__1::basic_string.1"* %36 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %41 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %40, i64 0, i32 1, i32 0
  %42 = load i8, i8* %41, align 1
  %43 = icmp slt i8 %42, 0
  %44 = bitcast %"class.std::__1::basic_string.1"* %37 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %45 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %44, i64 0, i32 1, i32 0
  %46 = load i8, i8* %45, align 1
  %47 = icmp slt i8 %46, 0
  br i1 %43, label %58, label %48

48:                                               ; preds = %39
  br i1 %47, label %52, label %49

49:                                               ; preds = %48
  %50 = bitcast %"class.std::__1::basic_string.1"* %36 to i8*
  %51 = bitcast %"class.std::__1::basic_string.1"* %37 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %50, i8* align 8 %51, i64 24, i1 false) #8
  br label %68

52:                                               ; preds = %48
  %53 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  %55 = getelementptr inbounds %"struct.autofill::PasswordAndMetadata", %"struct.autofill::PasswordAndMetadata"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %56 = load i64, i64* %55, align 8
  %57 = tail call dereferenceable(24) %"class.std::__1::basic_string.1"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string.1"* %36, i8* %54, i64 %56) #8
  br label %68

58:                                               ; preds = %39
  %59 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load i8*, i8** %59, align 8
  %61 = getelementptr inbounds %"struct.autofill::PasswordAndMetadata", %"struct.autofill::PasswordAndMetadata"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %62 = load i64, i64* %61, align 8
  %63 = bitcast %"class.std::__1::basic_string.1"* %37 to i8*
  %64 = zext i8 %46 to i64
  %65 = select i1 %47, i8* %60, i8* %63
  %66 = select i1 %47, i64 %62, i64 %64
  %67 = tail call dereferenceable(24) %"class.std::__1::basic_string.1"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string.1"* %36, i8* %65, i64 %66) #8
  br label %68

68:                                               ; preds = %58, %52, %49, %27
  %69 = getelementptr inbounds %"struct.autofill::PasswordAndMetadata", %"struct.autofill::PasswordAndMetadata"* %29, i64 0, i32 3
  %70 = load i8, i8* %69, align 8, !range !22
  %71 = getelementptr inbounds %"struct.autofill::PasswordAndMetadata", %"struct.autofill::PasswordAndMetadata"* %28, i64 0, i32 3
  store i8 %70, i8* %71, align 8
  %72 = getelementptr inbounds %"struct.autofill::PasswordAndMetadata", %"struct.autofill::PasswordAndMetadata"* %29, i64 1
  %73 = getelementptr inbounds %"struct.autofill::PasswordAndMetadata", %"struct.autofill::PasswordAndMetadata"* %28, i64 1
  %74 = icmp eq %"struct.autofill::PasswordAndMetadata"* %72, %25
  br i1 %74, label %75, label %27

75:                                               ; preds = %68, %17
  %76 = phi %"struct.autofill::PasswordAndMetadata"* [ %16, %17 ], [ %73, %68 ]
  br i1 %23, label %77, label %92

77:                                               ; preds = %75
  %78 = load i64, i64* %19, align 8
  %79 = icmp eq %"struct.autofill::PasswordAndMetadata"* %25, %2
  br i1 %79, label %90, label %80

80:                                               ; preds = %77
  %81 = inttoptr i64 %78 to %"struct.autofill::PasswordAndMetadata"*
  br label %82

82:                                               ; preds = %82, %80
  %83 = phi %"struct.autofill::PasswordAndMetadata"* [ %86, %82 ], [ %81, %80 ]
  %84 = phi %"struct.autofill::PasswordAndMetadata"* [ %85, %82 ], [ %24, %80 ]
  tail call void @_ZN8autofill19PasswordAndMetadataC2ERKS0_(%"struct.autofill::PasswordAndMetadata"* %83, %"struct.autofill::PasswordAndMetadata"* dereferenceable(80) %84) #8
  %85 = getelementptr inbounds %"struct.autofill::PasswordAndMetadata", %"struct.autofill::PasswordAndMetadata"* %84, i64 1
  %86 = getelementptr inbounds %"struct.autofill::PasswordAndMetadata", %"struct.autofill::PasswordAndMetadata"* %83, i64 1
  %87 = icmp eq %"struct.autofill::PasswordAndMetadata"* %85, %2
  br i1 %87, label %88, label %82

88:                                               ; preds = %82
  %89 = ptrtoint %"struct.autofill::PasswordAndMetadata"* %86 to i64
  br label %90

90:                                               ; preds = %77, %88
  %91 = phi i64 [ %78, %77 ], [ %89, %88 ]
  store i64 %91, i64* %19, align 8
  br label %203

92:                                               ; preds = %75
  %93 = load %"struct.autofill::PasswordAndMetadata"*, %"struct.autofill::PasswordAndMetadata"** %18, align 8
  %94 = icmp eq %"struct.autofill::PasswordAndMetadata"* %93, %76
  br i1 %94, label %125, label %95

95:                                               ; preds = %92, %123
  %96 = phi %"struct.autofill::PasswordAndMetadata"* [ %97, %123 ], [ %93, %92 ]
  %97 = getelementptr inbounds %"struct.autofill::PasswordAndMetadata", %"struct.autofill::PasswordAndMetadata"* %96, i64 -1
  %98 = getelementptr inbounds %"struct.autofill::PasswordAndMetadata", %"struct.autofill::PasswordAndMetadata"* %96, i64 -1, i32 2
  %99 = bitcast %"class.std::__1::basic_string.1"* %98 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %100 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %99, i64 0, i32 1, i32 0
  %101 = load i8, i8* %100, align 1
  %102 = icmp slt i8 %101, 0
  br i1 %102, label %103, label %106

103:                                              ; preds = %95
  %104 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %98, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %105 = load i8*, i8** %104, align 8
  tail call void @_ZdlPv(i8* %105) #10
  br label %106

106:                                              ; preds = %103, %95
  %107 = getelementptr inbounds %"struct.autofill::PasswordAndMetadata", %"struct.autofill::PasswordAndMetadata"* %96, i64 -1, i32 1
  %108 = bitcast %"class.std::__1::basic_string"* %107 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %109 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %108, i64 0, i32 1, i32 1
  %110 = load i8, i8* %109, align 1
  %111 = icmp slt i8 %110, 0
  br i1 %111, label %112, label %115

112:                                              ; preds = %106
  %113 = bitcast %"class.std::__1::basic_string"* %107 to i8**
  %114 = load i8*, i8** %113, align 8
  tail call void @_ZdlPv(i8* %114) #10
  br label %115

115:                                              ; preds = %112, %106
  %116 = bitcast %"struct.autofill::PasswordAndMetadata"* %97 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %117 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %116, i64 0, i32 1, i32 1
  %118 = load i8, i8* %117, align 1
  %119 = icmp slt i8 %118, 0
  br i1 %119, label %120, label %123

120:                                              ; preds = %115
  %121 = bitcast %"struct.autofill::PasswordAndMetadata"* %97 to i8**
  %122 = load i8*, i8** %121, align 8
  tail call void @_ZdlPv(i8* %122) #10
  br label %123

123:                                              ; preds = %120, %115
  %124 = icmp eq %"struct.autofill::PasswordAndMetadata"* %97, %76
  br i1 %124, label %125, label %95

125:                                              ; preds = %123, %92
  store %"struct.autofill::PasswordAndMetadata"* %76, %"struct.autofill::PasswordAndMetadata"** %18, align 8
  br label %203

126:                                              ; preds = %3
  %127 = icmp eq i64 %12, 0
  br i1 %127, label %169, label %128

128:                                              ; preds = %126
  %129 = inttoptr i64 %12 to i8*
  %130 = getelementptr inbounds %"class.std::__1::vector.22", %"class.std::__1::vector.22"* %0, i64 0, i32 0, i32 1
  %131 = load %"struct.autofill::PasswordAndMetadata"*, %"struct.autofill::PasswordAndMetadata"** %130, align 8
  %132 = icmp eq %"struct.autofill::PasswordAndMetadata"* %131, %16
  br i1 %132, label %166, label %133

133:                                              ; preds = %128, %161
  %134 = phi %"struct.autofill::PasswordAndMetadata"* [ %135, %161 ], [ %131, %128 ]
  %135 = getelementptr inbounds %"struct.autofill::PasswordAndMetadata", %"struct.autofill::PasswordAndMetadata"* %134, i64 -1
  %136 = getelementptr inbounds %"struct.autofill::PasswordAndMetadata", %"struct.autofill::PasswordAndMetadata"* %134, i64 -1, i32 2
  %137 = bitcast %"class.std::__1::basic_string.1"* %136 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %138 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %137, i64 0, i32 1, i32 0
  %139 = load i8, i8* %138, align 1
  %140 = icmp slt i8 %139, 0
  br i1 %140, label %141, label %144

141:                                              ; preds = %133
  %142 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %136, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %143 = load i8*, i8** %142, align 8
  tail call void @_ZdlPv(i8* %143) #10
  br label %144

144:                                              ; preds = %141, %133
  %145 = getelementptr inbounds %"struct.autofill::PasswordAndMetadata", %"struct.autofill::PasswordAndMetadata"* %134, i64 -1, i32 1
  %146 = bitcast %"class.std::__1::basic_string"* %145 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %147 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %146, i64 0, i32 1, i32 1
  %148 = load i8, i8* %147, align 1
  %149 = icmp slt i8 %148, 0
  br i1 %149, label %150, label %153

150:                                              ; preds = %144
  %151 = bitcast %"class.std::__1::basic_string"* %145 to i8**
  %152 = load i8*, i8** %151, align 8
  tail call void @_ZdlPv(i8* %152) #10
  br label %153

153:                                              ; preds = %150, %144
  %154 = bitcast %"struct.autofill::PasswordAndMetadata"* %135 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %155 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %154, i64 0, i32 1, i32 1
  %156 = load i8, i8* %155, align 1
  %157 = icmp slt i8 %156, 0
  br i1 %157, label %158, label %161

158:                                              ; preds = %153
  %159 = bitcast %"struct.autofill::PasswordAndMetadata"* %135 to i8**
  %160 = load i8*, i8** %159, align 8
  tail call void @_ZdlPv(i8* %160) #10
  br label %161

161:                                              ; preds = %158, %153
  %162 = icmp eq %"struct.autofill::PasswordAndMetadata"* %135, %16
  br i1 %162, label %163, label %133

163:                                              ; preds = %161
  %164 = bitcast %"class.std::__1::vector.22"* %0 to i8**
  %165 = load i8*, i8** %164, align 8
  br label %166

166:                                              ; preds = %163, %128
  %167 = phi i8* [ %165, %163 ], [ %129, %128 ]
  store %"struct.autofill::PasswordAndMetadata"* %16, %"struct.autofill::PasswordAndMetadata"** %130, align 8
  tail call void @_ZdlPv(i8* %167) #10
  %168 = bitcast %"class.std::__1::vector.22"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %168, i8 0, i64 24, i1 false) #8
  br label %169

169:                                              ; preds = %126, %166
  %170 = phi i64 [ %10, %126 ], [ 0, %166 ]
  %171 = icmp ugt i64 %7, 230584300921369395
  br i1 %171, label %172, label %174

172:                                              ; preds = %169
  %173 = bitcast %"class.std::__1::vector.22"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %173) #9
  unreachable

174:                                              ; preds = %169
  %175 = sdiv exact i64 %170, 80
  %176 = icmp ult i64 %175, 115292150460684697
  br i1 %176, label %177, label %181

177:                                              ; preds = %174
  %178 = shl nsw i64 %175, 1
  %179 = icmp ult i64 %178, %7
  %180 = select i1 %179, i64 %7, i64 %178
  br label %181

181:                                              ; preds = %177, %174
  %182 = phi i64 [ %180, %177 ], [ 230584300921369395, %174 ]
  %183 = mul i64 %182, 80
  %184 = tail call i8* @_Znwm(i64 %183) #10
  %185 = bitcast i8* %184 to %"struct.autofill::PasswordAndMetadata"*
  %186 = getelementptr inbounds %"class.std::__1::vector.22", %"class.std::__1::vector.22"* %0, i64 0, i32 0, i32 1
  %187 = bitcast %"struct.autofill::PasswordAndMetadata"** %186 to i8**
  store i8* %184, i8** %187, align 8
  %188 = bitcast %"class.std::__1::vector.22"* %0 to i8**
  store i8* %184, i8** %188, align 8
  %189 = getelementptr inbounds %"struct.autofill::PasswordAndMetadata", %"struct.autofill::PasswordAndMetadata"* %185, i64 %182
  store %"struct.autofill::PasswordAndMetadata"* %189, %"struct.autofill::PasswordAndMetadata"** %8, align 8
  %190 = bitcast %"struct.autofill::PasswordAndMetadata"** %186 to i64*
  %191 = ptrtoint i8* %184 to i64
  %192 = icmp eq %"struct.autofill::PasswordAndMetadata"* %1, %2
  br i1 %192, label %201, label %193

193:                                              ; preds = %181, %193
  %194 = phi %"struct.autofill::PasswordAndMetadata"* [ %197, %193 ], [ %185, %181 ]
  %195 = phi %"struct.autofill::PasswordAndMetadata"* [ %196, %193 ], [ %1, %181 ]
  tail call void @_ZN8autofill19PasswordAndMetadataC2ERKS0_(%"struct.autofill::PasswordAndMetadata"* %194, %"struct.autofill::PasswordAndMetadata"* dereferenceable(80) %195) #8
  %196 = getelementptr inbounds %"struct.autofill::PasswordAndMetadata", %"struct.autofill::PasswordAndMetadata"* %195, i64 1
  %197 = getelementptr inbounds %"struct.autofill::PasswordAndMetadata", %"struct.autofill::PasswordAndMetadata"* %194, i64 1
  %198 = icmp eq %"struct.autofill::PasswordAndMetadata"* %196, %2
  br i1 %198, label %199, label %193

199:                                              ; preds = %193
  %200 = ptrtoint %"struct.autofill::PasswordAndMetadata"* %197 to i64
  br label %201

201:                                              ; preds = %181, %199
  %202 = phi i64 [ %191, %181 ], [ %200, %199 ]
  store i64 %202, i64* %190, align 8
  br label %203

203:                                              ; preds = %90, %125, %201
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN8autofill19PasswordAndMetadataENS_9allocatorIS2_EEE13__move_assignERS5_NS_17integral_constantIbLb1EEE(%"class.std::__1::vector.22"*, %"class.std::__1::vector.22"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.22", %"class.std::__1::vector.22"* %0, i64 0, i32 0, i32 0
  %4 = load %"struct.autofill::PasswordAndMetadata"*, %"struct.autofill::PasswordAndMetadata"** %3, align 8
  %5 = icmp eq %"struct.autofill::PasswordAndMetadata"* %4, null
  br i1 %5, label %47, label %6

6:                                                ; preds = %2
  %7 = bitcast %"struct.autofill::PasswordAndMetadata"* %4 to i8*
  %8 = getelementptr inbounds %"class.std::__1::vector.22", %"class.std::__1::vector.22"* %0, i64 0, i32 0, i32 1
  %9 = load %"struct.autofill::PasswordAndMetadata"*, %"struct.autofill::PasswordAndMetadata"** %8, align 8
  %10 = icmp eq %"struct.autofill::PasswordAndMetadata"* %9, %4
  br i1 %10, label %44, label %11

11:                                               ; preds = %6, %39
  %12 = phi %"struct.autofill::PasswordAndMetadata"* [ %13, %39 ], [ %9, %6 ]
  %13 = getelementptr inbounds %"struct.autofill::PasswordAndMetadata", %"struct.autofill::PasswordAndMetadata"* %12, i64 -1
  %14 = getelementptr inbounds %"struct.autofill::PasswordAndMetadata", %"struct.autofill::PasswordAndMetadata"* %12, i64 -1, i32 2
  %15 = bitcast %"class.std::__1::basic_string.1"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %15, i64 0, i32 1, i32 0
  %17 = load i8, i8* %16, align 1
  %18 = icmp slt i8 %17, 0
  br i1 %18, label %19, label %22

19:                                               ; preds = %11
  %20 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  tail call void @_ZdlPv(i8* %21) #10
  br label %22

22:                                               ; preds = %19, %11
  %23 = getelementptr inbounds %"struct.autofill::PasswordAndMetadata", %"struct.autofill::PasswordAndMetadata"* %12, i64 -1, i32 1
  %24 = bitcast %"class.std::__1::basic_string"* %23 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %24, i64 0, i32 1, i32 1
  %26 = load i8, i8* %25, align 1
  %27 = icmp slt i8 %26, 0
  br i1 %27, label %28, label %31

28:                                               ; preds = %22
  %29 = bitcast %"class.std::__1::basic_string"* %23 to i8**
  %30 = load i8*, i8** %29, align 8
  tail call void @_ZdlPv(i8* %30) #10
  br label %31

31:                                               ; preds = %28, %22
  %32 = bitcast %"struct.autofill::PasswordAndMetadata"* %13 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %32, i64 0, i32 1, i32 1
  %34 = load i8, i8* %33, align 1
  %35 = icmp slt i8 %34, 0
  br i1 %35, label %36, label %39

36:                                               ; preds = %31
  %37 = bitcast %"struct.autofill::PasswordAndMetadata"* %13 to i8**
  %38 = load i8*, i8** %37, align 8
  tail call void @_ZdlPv(i8* %38) #10
  br label %39

39:                                               ; preds = %36, %31
  %40 = icmp eq %"struct.autofill::PasswordAndMetadata"* %13, %4
  br i1 %40, label %41, label %11

41:                                               ; preds = %39
  %42 = bitcast %"class.std::__1::vector.22"* %0 to i8**
  %43 = load i8*, i8** %42, align 8
  br label %44

44:                                               ; preds = %41, %6
  %45 = phi i8* [ %43, %41 ], [ %7, %6 ]
  store %"struct.autofill::PasswordAndMetadata"* %4, %"struct.autofill::PasswordAndMetadata"** %8, align 8
  tail call void @_ZdlPv(i8* %45) #10
  %46 = bitcast %"class.std::__1::vector.22"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %46, i8 0, i64 24, i1 false) #8
  br label %47

47:                                               ; preds = %2, %44
  %48 = bitcast %"class.std::__1::vector.22"* %1 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = bitcast %"class.std::__1::vector.22"* %0 to i64*
  store i64 %49, i64* %50, align 8
  %51 = getelementptr inbounds %"class.std::__1::vector.22", %"class.std::__1::vector.22"* %1, i64 0, i32 0, i32 1
  %52 = bitcast %"struct.autofill::PasswordAndMetadata"** %51 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = getelementptr inbounds %"class.std::__1::vector.22", %"class.std::__1::vector.22"* %0, i64 0, i32 0, i32 1
  %55 = bitcast %"struct.autofill::PasswordAndMetadata"** %54 to i64*
  store i64 %53, i64* %55, align 8
  %56 = getelementptr inbounds %"class.std::__1::vector.22", %"class.std::__1::vector.22"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %57 = bitcast %"struct.autofill::PasswordAndMetadata"** %56 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = getelementptr inbounds %"class.std::__1::vector.22", %"class.std::__1::vector.22"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %60 = bitcast %"struct.autofill::PasswordAndMetadata"** %59 to i64*
  store i64 %58, i64* %60, align 8
  %61 = bitcast %"class.std::__1::vector.22"* %1 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %61, i8 0, i64 24, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { noreturn nounwind }
attributes #10 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4}
!4 = distinct !{!4, !"LVerDomain"}
!5 = !{!6}
!6 = distinct !{!6, !4}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.isvectorized", i32 1}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.unroll.disable"}
!11 = distinct !{!11, !10}
!12 = distinct !{!12, !8}
!13 = !{!14}
!14 = distinct !{!14, !15}
!15 = distinct !{!15, !"LVerDomain"}
!16 = !{!17}
!17 = distinct !{!17, !15}
!18 = distinct !{!18, !8}
!19 = distinct !{!19, !10}
!20 = distinct !{!20, !10}
!21 = distinct !{!21, !8}
!22 = !{i8 0, i8 2}
!23 = !{!24}
!24 = distinct !{!24, !25}
!25 = distinct !{!25, !"LVerDomain"}
!26 = !{!27}
!27 = distinct !{!27, !25}
!28 = distinct !{!28, !8}
!29 = distinct !{!29, !10}
!30 = distinct !{!30, !10}
!31 = distinct !{!31, !8}
!32 = !{!33}
!33 = distinct !{!33, !34}
!34 = distinct !{!34, !"LVerDomain"}
!35 = !{!36}
!36 = distinct !{!36, !34}
!37 = distinct !{!37, !8}
!38 = distinct !{!38, !10}
!39 = distinct !{!39, !10}
!40 = distinct !{!40, !8}
!41 = !{!42}
!42 = distinct !{!42, !43}
!43 = distinct !{!43, !"LVerDomain"}
!44 = !{!45}
!45 = distinct !{!45, !43}
!46 = distinct !{!46, !8}
!47 = distinct !{!47, !10}
!48 = distinct !{!48, !10}
!49 = distinct !{!49, !8}
!50 = !{!51}
!51 = distinct !{!51, !52}
!52 = distinct !{!52, !"LVerDomain"}
!53 = !{!54}
!54 = distinct !{!54, !52}
!55 = distinct !{!55, !8}
!56 = distinct !{!56, !10}
!57 = distinct !{!57, !10}
!58 = distinct !{!58, !8}
!59 = !{!60}
!60 = distinct !{!60, !61}
!61 = distinct !{!61, !"LVerDomain"}
!62 = !{!63}
!63 = distinct !{!63, !61}
!64 = distinct !{!64, !8}
!65 = distinct !{!65, !10}
!66 = distinct !{!66, !10}
!67 = distinct !{!67, !8}
!68 = distinct !{!68, !8}
!69 = distinct !{!69, !10}
!70 = distinct !{!70, !71, !8}
!71 = !{!"llvm.loop.unroll.runtime.disable"}
!72 = !{!73}
!73 = distinct !{!73, !74}
!74 = distinct !{!74, !"LVerDomain"}
!75 = !{!76}
!76 = distinct !{!76, !74}
!77 = distinct !{!77, !8}
!78 = distinct !{!78, !10}
!79 = distinct !{!79, !10}
!80 = distinct !{!80, !8}
