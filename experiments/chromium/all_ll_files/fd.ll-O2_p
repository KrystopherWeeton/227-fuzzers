; ModuleID = '../../third_party/boringssl/src/crypto/bio/fd.c'
source_filename = "../../third_party/boringssl/src/crypto/bio/fd.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.bio_method_st = type { i32, i8*, i32 (%struct.bio_st*, i8*, i32)*, i32 (%struct.bio_st*, i8*, i32)*, i32 (%struct.bio_st*, i8*)*, i32 (%struct.bio_st*, i8*, i32)*, i64 (%struct.bio_st*, i32, i64, i8*)*, i32 (%struct.bio_st*)*, i32 (%struct.bio_st*)*, i64 (%struct.bio_st*, i32, i64 (%struct.bio_st*, i32, i8*, i32, i64, i64)*)* }
%struct.bio_st = type { %struct.bio_method_st*, i32, i32, i32, i32, i32, i32, i8*, %struct.bio_st*, i64, i64 }

@methods_fdp = internal constant %struct.bio_method_st { i32 1284, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str, i32 0, i32 0), i32 (%struct.bio_st*, i8*, i32)* @fd_write, i32 (%struct.bio_st*, i8*, i32)* @fd_read, i32 (%struct.bio_st*, i8*)* null, i32 (%struct.bio_st*, i8*, i32)* @fd_gets, i64 (%struct.bio_st*, i32, i64, i8*)* @fd_ctrl, i32 (%struct.bio_st*)* @fd_new, i32 (%struct.bio_st*)* @fd_free, i64 (%struct.bio_st*, i32, i64 (%struct.bio_st*, i32, i8*, i32, i64, i64)*)* null }, align 8
@.str = private unnamed_addr constant [16 x i8] c"file descriptor\00", align 1

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @bio_fd_should_retry(i32) local_unnamed_addr #0 {
  %2 = icmp eq i32 %0, -1
  br i1 %2, label %3, label %7

3:                                                ; preds = %1
  %4 = tail call i32* @__errno_location() #8
  %5 = load i32, i32* %4, align 4
  switch i32 %5, label %6 [
    i32 115, label %7
    i32 114, label %7
    i32 107, label %7
    i32 71, label %7
    i32 11, label %7
    i32 4, label %7
  ]

6:                                                ; preds = %3
  br label %7

7:                                                ; preds = %6, %3, %3, %3, %3, %3, %3, %1
  %8 = phi i32 [ 0, %1 ], [ 0, %6 ], [ 1, %3 ], [ 1, %3 ], [ 1, %3 ], [ 1, %3 ], [ 1, %3 ], [ 1, %3 ]
  ret i32 %8
}

; Function Attrs: nounwind readnone
declare i32* @__errno_location() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %struct.bio_st* @BIO_new_fd(i32, i32) local_unnamed_addr #2 {
  %3 = tail call %struct.bio_st* @BIO_new(%struct.bio_method_st* nonnull @methods_fdp) #9
  %4 = icmp eq %struct.bio_st* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %2
  %6 = sext i32 %1 to i64
  %7 = tail call i64 @BIO_int_ctrl(%struct.bio_st* nonnull %3, i32 104, i64 %6, i32 %0) #9
  br label %8

8:                                                ; preds = %2, %5
  ret %struct.bio_st* %3
}

declare %struct.bio_st* @BIO_new(%struct.bio_method_st*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden nonnull %struct.bio_method_st* @BIO_s_fd() local_unnamed_addr #4 {
  ret %struct.bio_method_st* @methods_fdp
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @BIO_set_fd(%struct.bio_st*, i32, i32) local_unnamed_addr #2 {
  %4 = sext i32 %2 to i64
  %5 = tail call i64 @BIO_int_ctrl(%struct.bio_st* %0, i32 104, i64 %4, i32 %1) #9
  %6 = trunc i64 %5 to i32
  ret i32 %6
}

declare i64 @BIO_int_ctrl(%struct.bio_st*, i32, i64, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @BIO_get_fd(%struct.bio_st*, i32*) local_unnamed_addr #2 {
  %3 = bitcast i32* %1 to i8*
  %4 = tail call i64 @BIO_ctrl(%struct.bio_st* %0, i32 105, i64 0, i8* %3) #9
  %5 = trunc i64 %4 to i32
  ret i32 %5
}

declare i64 @BIO_ctrl(%struct.bio_st*, i32, i64, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal i32 @fd_write(%struct.bio_st*, i8* nocapture readonly, i32) #2 {
  %4 = getelementptr inbounds %struct.bio_st, %struct.bio_st* %0, i64 0, i32 5
  %5 = load i32, i32* %4, align 8
  %6 = sext i32 %2 to i64
  %7 = tail call i64 @write(i32 %5, i8* %1, i64 %6) #9
  %8 = trunc i64 %7 to i32
  tail call void @BIO_clear_retry_flags(%struct.bio_st* %0) #9
  %9 = icmp eq i32 %8, -1
  br i1 %9, label %10, label %14

10:                                               ; preds = %3
  %11 = tail call i32* @__errno_location() #8
  %12 = load i32, i32* %11, align 4
  switch i32 %12, label %14 [
    i32 115, label %13
    i32 114, label %13
    i32 107, label %13
    i32 71, label %13
    i32 11, label %13
    i32 4, label %13
  ]

13:                                               ; preds = %10, %10, %10, %10, %10, %10
  tail call void @BIO_set_retry_write(%struct.bio_st* %0) #9
  br label %14

14:                                               ; preds = %10, %13, %3
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @fd_read(%struct.bio_st*, i8* nocapture, i32) #2 {
  %4 = getelementptr inbounds %struct.bio_st, %struct.bio_st* %0, i64 0, i32 5
  %5 = load i32, i32* %4, align 8
  %6 = sext i32 %2 to i64
  %7 = tail call i64 @read(i32 %5, i8* %1, i64 %6) #9
  %8 = trunc i64 %7 to i32
  tail call void @BIO_clear_retry_flags(%struct.bio_st* %0) #9
  %9 = icmp eq i32 %8, -1
  br i1 %9, label %10, label %14

10:                                               ; preds = %3
  %11 = tail call i32* @__errno_location() #8
  %12 = load i32, i32* %11, align 4
  switch i32 %12, label %14 [
    i32 115, label %13
    i32 114, label %13
    i32 107, label %13
    i32 71, label %13
    i32 11, label %13
    i32 4, label %13
  ]

13:                                               ; preds = %10, %10, %10, %10, %10, %10
  tail call void @BIO_set_retry_read(%struct.bio_st* %0) #9
  br label %14

14:                                               ; preds = %10, %13, %3
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @fd_gets(%struct.bio_st*, i8*, i32) #2 {
  %4 = sext i32 %2 to i64
  %5 = getelementptr inbounds i8, i8* %1, i64 %4
  %6 = getelementptr inbounds i8, i8* %5, i64 -1
  %7 = icmp slt i32 %2, 1
  br i1 %7, label %36, label %8

8:                                                ; preds = %3
  %9 = icmp ugt i8* %6, %1
  br i1 %9, label %10, label %30

10:                                               ; preds = %8
  %11 = getelementptr inbounds %struct.bio_st, %struct.bio_st* %0, i64 0, i32 5
  br label %12

12:                                               ; preds = %27, %10
  %13 = phi i8* [ %1, %10 ], [ %28, %27 ]
  %14 = load i32, i32* %11, align 8
  %15 = tail call i64 @read(i32 %14, i8* %13, i64 1) #9
  %16 = trunc i64 %15 to i32
  tail call void @BIO_clear_retry_flags(%struct.bio_st* %0) #9
  %17 = icmp eq i32 %16, -1
  br i1 %17, label %18, label %22

18:                                               ; preds = %12
  %19 = tail call i32* @__errno_location() #8
  %20 = load i32, i32* %19, align 4
  switch i32 %20, label %30 [
    i32 115, label %21
    i32 114, label %21
    i32 107, label %21
    i32 71, label %21
    i32 11, label %21
    i32 4, label %21
  ]

21:                                               ; preds = %18, %18, %18, %18, %18, %18
  tail call void @BIO_set_retry_read(%struct.bio_st* %0) #9
  br label %30

22:                                               ; preds = %12
  %23 = icmp sgt i32 %16, 0
  br i1 %23, label %24, label %30

24:                                               ; preds = %22
  %25 = load i8, i8* %13, align 1
  %26 = icmp eq i8 %25, 10
  br i1 %26, label %30, label %27

27:                                               ; preds = %24
  %28 = getelementptr inbounds i8, i8* %13, i64 1
  %29 = icmp eq i8* %28, %6
  br i1 %29, label %30, label %12

30:                                               ; preds = %22, %24, %27, %8, %21, %18
  %31 = phi i8* [ %13, %21 ], [ %13, %18 ], [ %1, %8 ], [ %13, %22 ], [ %6, %27 ], [ %13, %24 ]
  store i8 0, i8* %31, align 1
  %32 = ptrtoint i8* %31 to i64
  %33 = ptrtoint i8* %1 to i64
  %34 = sub i64 %32, %33
  %35 = trunc i64 %34 to i32
  br label %36

36:                                               ; preds = %3, %30
  %37 = phi i32 [ %35, %30 ], [ 0, %3 ]
  ret i32 %37
}

; Function Attrs: nounwind ssp uwtable
define internal i64 @fd_ctrl(%struct.bio_st*, i32, i64, i8*) #2 {
  switch i32 %1, label %67 [
    i32 1, label %5
    i32 128, label %6
    i32 133, label %15
    i32 3, label %15
    i32 104, label %23
    i32 105, label %45
    i32 8, label %59
    i32 9, label %63
    i32 11, label %66
  ]

5:                                                ; preds = %4
  br label %6

6:                                                ; preds = %4, %5
  %7 = phi i64 [ %2, %4 ], [ 0, %5 ]
  %8 = getelementptr inbounds %struct.bio_st, %struct.bio_st* %0, i64 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %67, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %struct.bio_st, %struct.bio_st* %0, i64 0, i32 5
  %13 = load i32, i32* %12, align 8
  %14 = tail call i64 @lseek64(i32 %13, i64 %7, i32 0) #9
  br label %67

15:                                               ; preds = %4, %4
  %16 = getelementptr inbounds %struct.bio_st, %struct.bio_st* %0, i64 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %67, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %struct.bio_st, %struct.bio_st* %0, i64 0, i32 5
  %21 = load i32, i32* %20, align 8
  %22 = tail call i64 @lseek64(i32 %21, i64 0, i32 1) #9
  br label %67

23:                                               ; preds = %4
  %24 = icmp eq %struct.bio_st* %0, null
  br i1 %24, label %38, label %25

25:                                               ; preds = %23
  %26 = getelementptr inbounds %struct.bio_st, %struct.bio_st* %0, i64 0, i32 2
  %27 = load i32, i32* %26, align 4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %38, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %struct.bio_st, %struct.bio_st* %0, i64 0, i32 1
  %31 = load i32, i32* %30, align 8
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %37, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %struct.bio_st, %struct.bio_st* %0, i64 0, i32 5
  %35 = load i32, i32* %34, align 8
  %36 = tail call i32 @close(i32 %35) #9
  br label %37

37:                                               ; preds = %33, %29
  store i32 0, i32* %30, align 8
  br label %38

38:                                               ; preds = %23, %25, %37
  %39 = bitcast i8* %3 to i32*
  %40 = load i32, i32* %39, align 4
  %41 = getelementptr inbounds %struct.bio_st, %struct.bio_st* %0, i64 0, i32 5
  store i32 %40, i32* %41, align 8
  %42 = trunc i64 %2 to i32
  %43 = getelementptr inbounds %struct.bio_st, %struct.bio_st* %0, i64 0, i32 2
  store i32 %42, i32* %43, align 4
  %44 = getelementptr inbounds %struct.bio_st, %struct.bio_st* %0, i64 0, i32 1
  store i32 1, i32* %44, align 8
  br label %67

45:                                               ; preds = %4
  %46 = getelementptr inbounds %struct.bio_st, %struct.bio_st* %0, i64 0, i32 1
  %47 = load i32, i32* %46, align 8
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %67, label %49

49:                                               ; preds = %45
  %50 = icmp eq i8* %3, null
  br i1 %50, label %55, label %51

51:                                               ; preds = %49
  %52 = bitcast i8* %3 to i32*
  %53 = getelementptr inbounds %struct.bio_st, %struct.bio_st* %0, i64 0, i32 5
  %54 = load i32, i32* %53, align 8
  store i32 %54, i32* %52, align 4
  br label %55

55:                                               ; preds = %49, %51
  %56 = getelementptr inbounds %struct.bio_st, %struct.bio_st* %0, i64 0, i32 5
  %57 = load i32, i32* %56, align 8
  %58 = sext i32 %57 to i64
  br label %67

59:                                               ; preds = %4
  %60 = getelementptr inbounds %struct.bio_st, %struct.bio_st* %0, i64 0, i32 2
  %61 = load i32, i32* %60, align 4
  %62 = sext i32 %61 to i64
  br label %67

63:                                               ; preds = %4
  %64 = trunc i64 %2 to i32
  %65 = getelementptr inbounds %struct.bio_st, %struct.bio_st* %0, i64 0, i32 2
  store i32 %64, i32* %65, align 4
  br label %67

66:                                               ; preds = %4
  br label %67

67:                                               ; preds = %38, %59, %63, %66, %11, %19, %15, %6, %45, %4, %55
  %68 = phi i64 [ %58, %55 ], [ 1, %66 ], [ 1, %63 ], [ %62, %59 ], [ 1, %38 ], [ %22, %19 ], [ 0, %15 ], [ %14, %11 ], [ 0, %6 ], [ -1, %45 ], [ 0, %4 ]
  ret i64 %68
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define internal i32 @fd_new(%struct.bio_st* nocapture) #5 {
  %2 = getelementptr inbounds %struct.bio_st, %struct.bio_st* %0, i64 0, i32 5
  store i32 -1, i32* %2, align 8
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @fd_free(%struct.bio_st*) #2 {
  %2 = icmp eq %struct.bio_st* %0, null
  br i1 %2, label %16, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.bio_st, %struct.bio_st* %0, i64 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %16, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.bio_st, %struct.bio_st* %0, i64 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %15, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.bio_st, %struct.bio_st* %0, i64 0, i32 5
  %13 = load i32, i32* %12, align 8
  %14 = tail call i32 @close(i32 %13) #9
  br label %15

15:                                               ; preds = %7, %11
  store i32 0, i32* %8, align 8
  br label %16

16:                                               ; preds = %15, %3, %1
  %17 = phi i32 [ 0, %1 ], [ 1, %3 ], [ 1, %15 ]
  ret i32 %17
}

; Function Attrs: nofree
declare i64 @write(i32, i8* nocapture readonly, i64) local_unnamed_addr #6

declare void @BIO_clear_retry_flags(%struct.bio_st*) local_unnamed_addr #3

declare void @BIO_set_retry_write(%struct.bio_st*) local_unnamed_addr #3

; Function Attrs: nofree
declare i64 @read(i32, i8* nocapture, i64) local_unnamed_addr #6

declare void @BIO_set_retry_read(%struct.bio_st*) local_unnamed_addr #3

; Function Attrs: nounwind
declare i64 @lseek64(i32, i64, i32) local_unnamed_addr #7

declare i32 @close(i32) local_unnamed_addr #3

attributes #0 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone }
attributes #9 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
