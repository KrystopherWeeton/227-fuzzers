; ModuleID = '../../pdf/ui/document_properties.cc'
source_filename = "../../pdf/ui/document_properties.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon.0 }
%union.anon.0 = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.gfx::Size" }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::basic_string.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.5 }
%union.anon.5 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon.6 }
%struct.anon.6 = type { i8 }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon }
%struct.anon = type { %"struct.std::__1::__padding", i8 }
%"struct.std::__1::__padding" = type { [1 x i8] }

@.str = private unnamed_addr constant [4 x i8] c"1.0\00", align 1
@.str.1 = private unnamed_addr constant [4 x i8] c"1.1\00", align 1
@.str.2 = private unnamed_addr constant [4 x i8] c"1.2\00", align 1
@.str.3 = private unnamed_addr constant [4 x i8] c"1.3\00", align 1
@.str.4 = private unnamed_addr constant [4 x i8] c"1.4\00", align 1
@.str.5 = private unnamed_addr constant [4 x i8] c"1.5\00", align 1
@.str.6 = private unnamed_addr constant [4 x i8] c"1.6\00", align 1
@.str.7 = private unnamed_addr constant [4 x i8] c"1.7\00", align 1
@.str.8 = private unnamed_addr constant [4 x i8] c"2.0\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10chrome_pdf14FormatPageSizeERKN4absl8optionalIN3gfx4SizeEEE(%"class.std::__1::basic_string"* noalias sret, %"class.absl::optional"* nocapture readonly dereferenceable(12)) local_unnamed_addr #0 {
  %3 = alloca i32, align 4
  %4 = alloca %"class.std::__1::basic_string.2", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load i8, i8* %11, align 4, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %15

14:                                               ; preds = %2
  tail call void @_ZN9l10n_util14GetStringUTF16Ei(%"class.std::__1::basic_string"* sret %0, i32 20118) #5
  br label %143

15:                                               ; preds = %2
  %16 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %16) #5
  store i32 0, i32* %3, align 4
  %17 = bitcast %"class.std::__1::basic_string.2"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #5
  call void @_ZN4base4i18n19GetConfiguredLocaleEv(%"class.std::__1::basic_string.2"* nonnull sret %4) #5
  %18 = bitcast %"class.std::__1::basic_string.2"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %19 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %18, i64 0, i32 1, i32 0
  %20 = load i8, i8* %19, align 1
  %21 = icmp slt i8 %20, 0
  %22 = getelementptr inbounds %"class.std::__1::basic_string.2", %"class.std::__1::basic_string.2"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8
  %24 = select i1 %21, i8* %23, i8* %17
  %25 = call i32 @ulocdata_getMeasurementSystem_69(i8* %24, i32* nonnull %3) #5
  %26 = load i8, i8* %19, align 1
  %27 = icmp slt i8 %26, 0
  br i1 %27, label %28, label %30

28:                                               ; preds = %15
  %29 = load i8*, i8** %22, align 8
  call void @_ZdlPv(i8* %29) #6
  br label %30

30:                                               ; preds = %15, %28
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #5
  %31 = load i32, i32* %3, align 4
  %32 = icmp slt i32 %31, 1
  %33 = icmp eq i32 %25, 1
  %34 = and i1 %33, %32
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %16) #5
  br i1 %34, label %35, label %89

35:                                               ; preds = %30
  %36 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %36) #5
  %37 = load i8, i8* %11, align 4, !range !2
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %39, label %40

39:                                               ; preds = %35
  call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #7
  unreachable

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %42 = load i32, i32* %41, align 4
  %43 = sitofp i32 %42 to float
  %44 = fmul float %43, 0x3F8C71C720000000
  %45 = fpext float %44 to double
  call void @_ZN4base12FormatDoubleEdi(%"class.std::__1::basic_string"* nonnull sret %5, double %45, i32 2) #5
  %46 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %46) #5
  %47 = load i8, i8* %11, align 4, !range !2
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %49, label %50

49:                                               ; preds = %40
  call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #7
  unreachable

50:                                               ; preds = %40
  %51 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %52 = load i32, i32* %51, align 4
  %53 = sitofp i32 %52 to float
  %54 = fmul float %53, 0x3F8C71C720000000
  %55 = fpext float %54 to double
  call void @_ZN4base12FormatDoubleEdi(%"class.std::__1::basic_string"* nonnull sret %6, double %55, i32 2) #5
  %56 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %56) #5
  %57 = load i8, i8* %11, align 4, !range !2
  %58 = icmp eq i8 %57, 0
  br i1 %58, label %59, label %60

59:                                               ; preds = %50
  call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #7
  unreachable

60:                                               ; preds = %50
  %61 = load i32, i32* %51, align 4, !noalias !3
  %62 = load i32, i32* %41, align 4, !noalias !3
  %63 = icmp slt i32 %61, %62
  %64 = select i1 %63, i32 20117, i32 20116
  call void @_ZN9l10n_util14GetStringUTF16Ei(%"class.std::__1::basic_string"* nonnull sret %7, i32 %64) #5
  call void @_ZN9l10n_util15GetStringFUTF16EiRKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEES8_S8_(%"class.std::__1::basic_string"* sret %0, i32 20114, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %6, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %7) #5
  %65 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %66 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %65, i64 0, i32 1, i32 1
  %67 = load i8, i8* %66, align 1
  %68 = icmp slt i8 %67, 0
  br i1 %68, label %69, label %72

69:                                               ; preds = %60
  %70 = bitcast %"class.std::__1::basic_string"* %7 to i8**
  %71 = load i8*, i8** %70, align 8
  call void @_ZdlPv(i8* %71) #6
  br label %72

72:                                               ; preds = %60, %69
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %56) #5
  %73 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %74 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %73, i64 0, i32 1, i32 1
  %75 = load i8, i8* %74, align 1
  %76 = icmp slt i8 %75, 0
  br i1 %76, label %77, label %80

77:                                               ; preds = %72
  %78 = bitcast %"class.std::__1::basic_string"* %6 to i8**
  %79 = load i8*, i8** %78, align 8
  call void @_ZdlPv(i8* %79) #6
  br label %80

80:                                               ; preds = %72, %77
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %46) #5
  %81 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %82 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %81, i64 0, i32 1, i32 1
  %83 = load i8, i8* %82, align 1
  %84 = icmp slt i8 %83, 0
  br i1 %84, label %85, label %88

85:                                               ; preds = %80
  %86 = bitcast %"class.std::__1::basic_string"* %5 to i8**
  %87 = load i8*, i8** %86, align 8
  call void @_ZdlPv(i8* %87) #6
  br label %88

88:                                               ; preds = %80, %85
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %36) #5
  br label %143

89:                                               ; preds = %30
  %90 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %90) #5
  %91 = load i8, i8* %11, align 4, !range !2
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %93, label %94

93:                                               ; preds = %89
  call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #7
  unreachable

94:                                               ; preds = %89
  %95 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %96 = load i32, i32* %95, align 4
  %97 = sitofp i32 %96 to float
  %98 = fmul float %97, 0x3FD693E940000000
  %99 = fpext float %98 to double
  call void @_ZN4base12FormatDoubleEdi(%"class.std::__1::basic_string"* nonnull sret %8, double %99, i32 0) #5
  %100 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %100) #5
  %101 = load i8, i8* %11, align 4, !range !2
  %102 = icmp eq i8 %101, 0
  br i1 %102, label %103, label %104

103:                                              ; preds = %94
  call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #7
  unreachable

104:                                              ; preds = %94
  %105 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %106 = load i32, i32* %105, align 4
  %107 = sitofp i32 %106 to float
  %108 = fmul float %107, 0x3FD693E940000000
  %109 = fpext float %108 to double
  call void @_ZN4base12FormatDoubleEdi(%"class.std::__1::basic_string"* nonnull sret %9, double %109, i32 0) #5
  %110 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %110) #5
  %111 = load i8, i8* %11, align 4, !range !2
  %112 = icmp eq i8 %111, 0
  br i1 %112, label %113, label %114

113:                                              ; preds = %104
  call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #7
  unreachable

114:                                              ; preds = %104
  %115 = load i32, i32* %105, align 4, !noalias !6
  %116 = load i32, i32* %95, align 4, !noalias !6
  %117 = icmp slt i32 %115, %116
  %118 = select i1 %117, i32 20117, i32 20116
  call void @_ZN9l10n_util14GetStringUTF16Ei(%"class.std::__1::basic_string"* nonnull sret %10, i32 %118) #5
  call void @_ZN9l10n_util15GetStringFUTF16EiRKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEES8_S8_(%"class.std::__1::basic_string"* sret %0, i32 20115, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %8, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %9, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %10) #5
  %119 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %120 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %119, i64 0, i32 1, i32 1
  %121 = load i8, i8* %120, align 1
  %122 = icmp slt i8 %121, 0
  br i1 %122, label %123, label %126

123:                                              ; preds = %114
  %124 = bitcast %"class.std::__1::basic_string"* %10 to i8**
  %125 = load i8*, i8** %124, align 8
  call void @_ZdlPv(i8* %125) #6
  br label %126

126:                                              ; preds = %114, %123
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %110) #5
  %127 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %128 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %127, i64 0, i32 1, i32 1
  %129 = load i8, i8* %128, align 1
  %130 = icmp slt i8 %129, 0
  br i1 %130, label %131, label %134

131:                                              ; preds = %126
  %132 = bitcast %"class.std::__1::basic_string"* %9 to i8**
  %133 = load i8*, i8** %132, align 8
  call void @_ZdlPv(i8* %133) #6
  br label %134

134:                                              ; preds = %126, %131
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %100) #5
  %135 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %136 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %135, i64 0, i32 1, i32 1
  %137 = load i8, i8* %136, align 1
  %138 = icmp slt i8 %137, 0
  br i1 %138, label %139, label %142

139:                                              ; preds = %134
  %140 = bitcast %"class.std::__1::basic_string"* %8 to i8**
  %141 = load i8*, i8** %140, align 8
  call void @_ZdlPv(i8* %141) #6
  br label %142

142:                                              ; preds = %134, %139
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %90) #5
  br label %143

143:                                              ; preds = %142, %88, %14
  ret void
}

declare void @_ZN9l10n_util14GetStringUTF16Ei(%"class.std::__1::basic_string"* sret, i32) local_unnamed_addr #1

declare void @_ZN9l10n_util15GetStringFUTF16EiRKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEES8_S8_(%"class.std::__1::basic_string"* sret, i32, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10chrome_pdf16FormatPdfVersionENS_10PdfVersionE(%"class.std::__1::basic_string.2"* noalias sret, i32) local_unnamed_addr #0 {
  switch i32 %1, label %50 [
    i32 1, label %3
    i32 2, label %8
    i32 3, label %13
    i32 4, label %18
    i32 5, label %23
    i32 6, label %28
    i32 7, label %33
    i32 8, label %38
    i32 10, label %43
    i32 0, label %48
    i32 9, label %48
  ]

3:                                                ; preds = %2
  %4 = bitcast %"class.std::__1::basic_string.2"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  store i8 3, i8* %5, align 1
  %6 = bitcast %"class.std::__1::basic_string.2"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), i64 3, i1 false) #5
  %7 = getelementptr inbounds i8, i8* %6, i64 3
  store i8 0, i8* %7, align 1
  br label %51

8:                                                ; preds = %2
  %9 = bitcast %"class.std::__1::basic_string.2"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %9, i64 0, i32 1, i32 0
  store i8 3, i8* %10, align 1
  %11 = bitcast %"class.std::__1::basic_string.2"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0), i64 3, i1 false) #5
  %12 = getelementptr inbounds i8, i8* %11, i64 3
  store i8 0, i8* %12, align 1
  br label %51

13:                                               ; preds = %2
  %14 = bitcast %"class.std::__1::basic_string.2"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  store i8 3, i8* %15, align 1
  %16 = bitcast %"class.std::__1::basic_string.2"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0), i64 3, i1 false) #5
  %17 = getelementptr inbounds i8, i8* %16, i64 3
  store i8 0, i8* %17, align 1
  br label %51

18:                                               ; preds = %2
  %19 = bitcast %"class.std::__1::basic_string.2"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %19, i64 0, i32 1, i32 0
  store i8 3, i8* %20, align 1
  %21 = bitcast %"class.std::__1::basic_string.2"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i64 0, i64 0), i64 3, i1 false) #5
  %22 = getelementptr inbounds i8, i8* %21, i64 3
  store i8 0, i8* %22, align 1
  br label %51

23:                                               ; preds = %2
  %24 = bitcast %"class.std::__1::basic_string.2"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  store i8 3, i8* %25, align 1
  %26 = bitcast %"class.std::__1::basic_string.2"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %26, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @.str.4, i64 0, i64 0), i64 3, i1 false) #5
  %27 = getelementptr inbounds i8, i8* %26, i64 3
  store i8 0, i8* %27, align 1
  br label %51

28:                                               ; preds = %2
  %29 = bitcast %"class.std::__1::basic_string.2"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %29, i64 0, i32 1, i32 0
  store i8 3, i8* %30, align 1
  %31 = bitcast %"class.std::__1::basic_string.2"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %31, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @.str.5, i64 0, i64 0), i64 3, i1 false) #5
  %32 = getelementptr inbounds i8, i8* %31, i64 3
  store i8 0, i8* %32, align 1
  br label %51

33:                                               ; preds = %2
  %34 = bitcast %"class.std::__1::basic_string.2"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %35 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %34, i64 0, i32 1, i32 0
  store i8 3, i8* %35, align 1
  %36 = bitcast %"class.std::__1::basic_string.2"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %36, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @.str.6, i64 0, i64 0), i64 3, i1 false) #5
  %37 = getelementptr inbounds i8, i8* %36, i64 3
  store i8 0, i8* %37, align 1
  br label %51

38:                                               ; preds = %2
  %39 = bitcast %"class.std::__1::basic_string.2"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %39, i64 0, i32 1, i32 0
  store i8 3, i8* %40, align 1
  %41 = bitcast %"class.std::__1::basic_string.2"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %41, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @.str.7, i64 0, i64 0), i64 3, i1 false) #5
  %42 = getelementptr inbounds i8, i8* %41, i64 3
  store i8 0, i8* %42, align 1
  br label %51

43:                                               ; preds = %2
  %44 = bitcast %"class.std::__1::basic_string.2"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %45 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %44, i64 0, i32 1, i32 0
  store i8 3, i8* %45, align 1
  %46 = bitcast %"class.std::__1::basic_string.2"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %46, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i64 0, i64 0), i64 3, i1 false) #5
  %47 = getelementptr inbounds i8, i8* %46, i64 3
  store i8 0, i8* %47, align 1
  br label %51

48:                                               ; preds = %2, %2
  %49 = bitcast %"class.std::__1::basic_string.2"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %49, i8 0, i64 24, i1 false) #5
  br label %51

50:                                               ; preds = %2
  unreachable

51:                                               ; preds = %48, %43, %38, %33, %28, %23, %18, %13, %8, %3
  ret void
}

declare i32 @ulocdata_getMeasurementSystem_69(i8*, i32*) local_unnamed_addr #1

declare void @_ZN4base4i18n19GetConfiguredLocaleEv(%"class.std::__1::basic_string.2"* sret) local_unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

declare void @_ZN4base12FormatDoubleEdi(%"class.std::__1::basic_string"* sret, double, i32) local_unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { builtin nounwind }
attributes #7 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN10chrome_pdf12_GLOBAL__N_114GetOrientationERKN3gfx4SizeE: argument 0"}
!5 = distinct !{!5, !"_ZN10chrome_pdf12_GLOBAL__N_114GetOrientationERKN3gfx4SizeE"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZN10chrome_pdf12_GLOBAL__N_114GetOrientationERKN3gfx4SizeE: argument 0"}
!8 = distinct !{!8, !"_ZN10chrome_pdf12_GLOBAL__N_114GetOrientationERKN3gfx4SizeE"}
