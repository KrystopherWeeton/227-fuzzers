; ModuleID = '../../third_party/swiftshader/src/Vulkan/libVulkan.cpp'
source_filename = "../../third_party/swiftshader/src/Vulkan/libVulkan.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.ExtensionProperties = type <{ %struct.VkExtensionProperties, i8, [3 x i8] }>
%struct.VkExtensionProperties = type { [256 x i8], i32 }
%class.LibX11 = type { i8 }
%"struct.vk::SamplerState" = type <{ i32, i32, i32, i32, i32, i32, float, i32, float, i32, i32, float, float, i32, i32, i32, i32, i8, i8, [2 x i8] }>
%struct.Scheduler = type { %"class.marl::mutex", %"class.std::__1::weak_ptr" }
%"class.marl::mutex" = type { %"class.std::__1::mutex" }
%"class.std::__1::mutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::weak_ptr" = type { %"class.marl::Scheduler"*, %"class.std::__1::__shared_weak_count"* }
%"class.marl::Scheduler" = type { %"struct.marl::Scheduler::Config", %"struct.std::__1::array.191", %"struct.std::__1::atomic.42", %"struct.std::__1::atomic.42", %"struct.std::__1::array.192", %"struct.marl::Scheduler::SingleThreadedWorkers" }
%"struct.marl::Scheduler::Config" = type { %"struct.marl::Scheduler::Config::WorkerThread", %"class.marl::Allocator"*, i64 }
%"struct.marl::Scheduler::Config::WorkerThread" = type { i32, %"class.std::__1::function", %"class.std::__1::shared_ptr.190" }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"union.std::__1::__function::__policy_storage"*, i32)* }
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"class.std::__1::shared_ptr.190" = type { %"class.marl::Thread::Affinity::Policy"*, %"class.std::__1::__shared_weak_count"* }
%"class.marl::Thread::Affinity::Policy" = type { i32 (...)** }
%"class.marl::Allocator" = type { i32 (...)** }
%"struct.std::__1::array.191" = type { [8 x %"struct.std::__1::atomic"] }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.40" }
%"struct.std::__1::__atomic_base.40" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.std::__1::atomic.42" = type { %"struct.std::__1::__atomic_base.43" }
%"struct.std::__1::__atomic_base.43" = type { %"struct.std::__1::__atomic_base.44" }
%"struct.std::__1::__atomic_base.44" = type { %"struct.std::__1::__cxx_atomic_impl.45" }
%"struct.std::__1::__cxx_atomic_impl.45" = type { %"struct.std::__1::__cxx_atomic_base_impl.46" }
%"struct.std::__1::__cxx_atomic_base_impl.46" = type { i32 }
%"struct.std::__1::array.192" = type { [256 x %"class.marl::Scheduler::Worker"*] }
%"class.marl::Scheduler::Worker" = type <{ i32, i32, %"class.marl::Scheduler"*, %"class.std::__1::unique_ptr.193", %"class.marl::Scheduler::Fiber"*, %"class.marl::Thread", %"struct.marl::Scheduler::Worker::Work", %"class.std::__1::unordered_set.256", %"class.marl::containers::vector.276", %"class.marl::Scheduler::Worker::FastRnd", i8, [7 x i8] }>
%"class.std::__1::unique_ptr.193" = type { %"class.std::__1::__compressed_pair.194" }
%"class.std::__1::__compressed_pair.194" = type { %"struct.std::__1::__compressed_pair_elem.195", %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.195" = type { %"class.marl::Scheduler::Fiber"* }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"struct.marl::Allocator::Deleter" }
%"struct.marl::Allocator::Deleter" = type { %"class.marl::Allocator"*, i64 }
%"class.marl::Scheduler::Fiber" = type <{ i32, [4 x i8], %"class.std::__1::unique_ptr.196", %"class.marl::Scheduler::Worker"*, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.196" = type { %"class.std::__1::__compressed_pair.197" }
%"class.std::__1::__compressed_pair.197" = type { %"struct.std::__1::__compressed_pair_elem.198", %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.198" = type { %"class.marl::OSFiber"* }
%"class.marl::OSFiber" = type opaque
%"class.marl::Thread" = type { %"class.marl::Thread::Impl"* }
%"class.marl::Thread::Impl" = type opaque
%"struct.marl::Scheduler::Worker::Work" = type { %"struct.std::__1::atomic.200", i64, %"class.std::__1::deque.205", %"class.std::__1::deque.219", %"struct.marl::Scheduler::WaitingFibers", i8, %"class.std::__1::condition_variable", %"class.marl::mutex" }
%"struct.std::__1::atomic.200" = type { %"struct.std::__1::__atomic_base.201" }
%"struct.std::__1::__atomic_base.201" = type { %"struct.std::__1::__atomic_base.202" }
%"struct.std::__1::__atomic_base.202" = type { %"struct.std::__1::__cxx_atomic_impl.203" }
%"struct.std::__1::__cxx_atomic_impl.203" = type { %"struct.std::__1::__cxx_atomic_base_impl.204" }
%"struct.std::__1::__cxx_atomic_base_impl.204" = type { i64 }
%"class.std::__1::deque.205" = type { %"class.std::__1::__deque_base.206" }
%"class.std::__1::__deque_base.206" = type { %"struct.std::__1::__split_buffer.207", i64, %"class.std::__1::__compressed_pair.216" }
%"struct.std::__1::__split_buffer.207" = type { %"class.marl::Task"**, %"class.marl::Task"**, %"class.marl::Task"**, %"class.std::__1::__compressed_pair.213" }
%"class.marl::Task" = type <{ %"class.std::__1::function.208", i32, [4 x i8] }>
%"class.std::__1::function.208" = type { %"class.std::__1::__function::__policy_func.211" }
%"class.std::__1::__function::__policy_func.211" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.212", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.212" = type { void (%"union.std::__1::__function::__policy_storage"*)* }
%"class.std::__1::__compressed_pair.213" = type { %"struct.std::__1::__compressed_pair_elem.214", %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.214" = type { %"class.marl::Task"** }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"struct.marl::StlAllocator" }
%"struct.marl::StlAllocator" = type { %"class.marl::Allocator"* }
%"class.std::__1::__compressed_pair.216" = type { %"struct.std::__1::__compressed_pair_elem.113", %"struct.std::__1::__compressed_pair_elem.217" }
%"struct.std::__1::__compressed_pair_elem.113" = type { i64 }
%"struct.std::__1::__compressed_pair_elem.217" = type { %"struct.marl::StlAllocator.218" }
%"struct.marl::StlAllocator.218" = type { %"class.marl::Allocator"* }
%"class.std::__1::deque.219" = type { %"class.std::__1::__deque_base.220" }
%"class.std::__1::__deque_base.220" = type { %"struct.std::__1::__split_buffer.221", i64, %"class.std::__1::__compressed_pair.226" }
%"struct.std::__1::__split_buffer.221" = type { %"class.marl::Scheduler::Fiber"***, %"class.marl::Scheduler::Fiber"***, %"class.marl::Scheduler::Fiber"***, %"class.std::__1::__compressed_pair.222" }
%"class.std::__1::__compressed_pair.222" = type { %"struct.std::__1::__compressed_pair_elem.223", %"struct.std::__1::__compressed_pair_elem.224" }
%"struct.std::__1::__compressed_pair_elem.223" = type { %"class.marl::Scheduler::Fiber"*** }
%"struct.std::__1::__compressed_pair_elem.224" = type { %"struct.marl::StlAllocator.225" }
%"struct.marl::StlAllocator.225" = type { %"class.marl::Allocator"* }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.113", %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"struct.marl::StlAllocator.228" }
%"struct.marl::StlAllocator.228" = type { %"class.marl::Allocator"* }
%"struct.marl::Scheduler::WaitingFibers" = type { %"class.std::__1::set", %"class.std::__1::unordered_map" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.229", %"class.std::__1::__compressed_pair.233" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.229" = type { %"struct.std::__1::__compressed_pair_elem.230", %"struct.std::__1::__compressed_pair_elem.231" }
%"struct.std::__1::__compressed_pair_elem.230" = type { %"class.std::__1::__tree_end_node" }
%"struct.std::__1::__compressed_pair_elem.231" = type { %"struct.marl::StlAllocator.232" }
%"struct.marl::StlAllocator.232" = type { %"class.marl::Allocator"* }
%"class.std::__1::__compressed_pair.233" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table.235" }
%"class.std::__1::__hash_table.235" = type <{ %"class.std::__1::unique_ptr.236", %"class.std::__1::__compressed_pair.245", %"class.std::__1::__compressed_pair.249", %"class.std::__1::__compressed_pair.252", [4 x i8] }>
%"class.std::__1::unique_ptr.236" = type { %"class.std::__1::__compressed_pair.237" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.238", %"struct.std::__1::__compressed_pair_elem.240" }
%"struct.std::__1::__compressed_pair_elem.238" = type { %"struct.std::__1::__hash_node_base.239"** }
%"struct.std::__1::__hash_node_base.239" = type { %"struct.std::__1::__hash_node_base.239"* }
%"struct.std::__1::__compressed_pair_elem.240" = type { %"class.std::__1::__bucket_list_deallocator.241" }
%"class.std::__1::__bucket_list_deallocator.241" = type { %"class.std::__1::__compressed_pair.242" }
%"class.std::__1::__compressed_pair.242" = type { %"struct.std::__1::__compressed_pair_elem.113", %"struct.std::__1::__compressed_pair_elem.243" }
%"struct.std::__1::__compressed_pair_elem.243" = type { %"struct.marl::StlAllocator.244" }
%"struct.marl::StlAllocator.244" = type { %"class.marl::Allocator"* }
%"class.std::__1::__compressed_pair.245" = type { %"struct.std::__1::__compressed_pair_elem.246", %"struct.std::__1::__compressed_pair_elem.247" }
%"struct.std::__1::__compressed_pair_elem.246" = type { %"struct.std::__1::__hash_node_base.239" }
%"struct.std::__1::__compressed_pair_elem.247" = type { %"struct.marl::StlAllocator.248" }
%"struct.marl::StlAllocator.248" = type { %"class.marl::Allocator"* }
%"class.std::__1::__compressed_pair.249" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"class.std::__1::__compressed_pair.252" = type { %"struct.std::__1::__compressed_pair_elem.156" }
%"struct.std::__1::__compressed_pair_elem.156" = type { float }
%"class.std::__1::condition_variable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon, %union.anon.47, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon = type { i64 }
%union.anon.47 = type { i64 }
%"class.std::__1::unordered_set.256" = type { %"class.std::__1::__hash_table.257" }
%"class.std::__1::__hash_table.257" = type <{ %"class.std::__1::unique_ptr.258", %"class.std::__1::__compressed_pair.267", %"class.std::__1::__compressed_pair.271", %"class.std::__1::__compressed_pair.273", [4 x i8] }>
%"class.std::__1::unique_ptr.258" = type { %"class.std::__1::__compressed_pair.259" }
%"class.std::__1::__compressed_pair.259" = type { %"struct.std::__1::__compressed_pair_elem.260", %"struct.std::__1::__compressed_pair_elem.262" }
%"struct.std::__1::__compressed_pair_elem.260" = type { %"struct.std::__1::__hash_node_base.261"** }
%"struct.std::__1::__hash_node_base.261" = type { %"struct.std::__1::__hash_node_base.261"* }
%"struct.std::__1::__compressed_pair_elem.262" = type { %"class.std::__1::__bucket_list_deallocator.263" }
%"class.std::__1::__bucket_list_deallocator.263" = type { %"class.std::__1::__compressed_pair.264" }
%"class.std::__1::__compressed_pair.264" = type { %"struct.std::__1::__compressed_pair_elem.113", %"struct.std::__1::__compressed_pair_elem.265" }
%"struct.std::__1::__compressed_pair_elem.265" = type { %"struct.marl::StlAllocator.266" }
%"struct.marl::StlAllocator.266" = type { %"class.marl::Allocator"* }
%"class.std::__1::__compressed_pair.267" = type { %"struct.std::__1::__compressed_pair_elem.268", %"struct.std::__1::__compressed_pair_elem.269" }
%"struct.std::__1::__compressed_pair_elem.268" = type { %"struct.std::__1::__hash_node_base.261" }
%"struct.std::__1::__compressed_pair_elem.269" = type { %"struct.marl::StlAllocator.270" }
%"struct.marl::StlAllocator.270" = type { %"class.marl::Allocator"* }
%"class.std::__1::__compressed_pair.271" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"class.std::__1::__compressed_pair.273" = type { %"struct.std::__1::__compressed_pair_elem.156" }
%"class.marl::containers::vector.276" = type { %"class.marl::Allocator"*, i64, i64, [16 x %"struct.marl::aligned_storage<24, 8>::type"], %"struct.marl::aligned_storage<24, 8>::type"*, %"struct.marl::Allocation" }
%"struct.marl::aligned_storage<24, 8>::type" = type { [24 x i8] }
%"struct.marl::Allocation" = type { i8*, %"struct.marl::Allocation::Request" }
%"struct.marl::Allocation::Request" = type <{ i64, i64, i8, i8, [6 x i8] }>
%"class.marl::Scheduler::Worker::FastRnd" = type { i64 }
%"struct.marl::Scheduler::SingleThreadedWorkers" = type { %"class.marl::mutex", %"class.std::__1::condition_variable", %"class.std::__1::unordered_map.277" }
%"class.std::__1::unordered_map.277" = type { %"class.std::__1::__hash_table.278" }
%"class.std::__1::__hash_table.278" = type <{ %"class.std::__1::unique_ptr.279", %"class.std::__1::__compressed_pair.288", %"class.std::__1::__compressed_pair.292", %"class.std::__1::__compressed_pair.297", [4 x i8] }>
%"class.std::__1::unique_ptr.279" = type { %"class.std::__1::__compressed_pair.280" }
%"class.std::__1::__compressed_pair.280" = type { %"struct.std::__1::__compressed_pair_elem.281", %"struct.std::__1::__compressed_pair_elem.283" }
%"struct.std::__1::__compressed_pair_elem.281" = type { %"struct.std::__1::__hash_node_base.282"** }
%"struct.std::__1::__hash_node_base.282" = type { %"struct.std::__1::__hash_node_base.282"* }
%"struct.std::__1::__compressed_pair_elem.283" = type { %"class.std::__1::__bucket_list_deallocator.284" }
%"class.std::__1::__bucket_list_deallocator.284" = type { %"class.std::__1::__compressed_pair.285" }
%"class.std::__1::__compressed_pair.285" = type { %"struct.std::__1::__compressed_pair_elem.113", %"struct.std::__1::__compressed_pair_elem.286" }
%"struct.std::__1::__compressed_pair_elem.286" = type { %"struct.marl::StlAllocator.287" }
%"struct.marl::StlAllocator.287" = type { %"class.marl::Allocator"* }
%"class.std::__1::__compressed_pair.288" = type { %"struct.std::__1::__compressed_pair_elem.289", %"struct.std::__1::__compressed_pair_elem.290" }
%"struct.std::__1::__compressed_pair_elem.289" = type { %"struct.std::__1::__hash_node_base.282" }
%"struct.std::__1::__compressed_pair_elem.290" = type { %"struct.marl::StlAllocator.291" }
%"struct.marl::StlAllocator.291" = type { %"class.marl::Allocator"* }
%"class.std::__1::__compressed_pair.292" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"class.std::__1::__compressed_pair.297" = type { %"struct.std::__1::__compressed_pair_elem.156" }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%class.VkNonDispatchableHandle = type { i64 }
%class.VkNonDispatchableHandle.0 = type { i64 }
%class.VkNonDispatchableHandle.1 = type { i64 }
%class.VkNonDispatchableHandle.2 = type { i64 }
%class.VkNonDispatchableHandle.3 = type { i64 }
%class.VkNonDispatchableHandle.4 = type { i64 }
%class.VkNonDispatchableHandle.5 = type { i64 }
%class.VkNonDispatchableHandle.6 = type { i64 }
%class.VkNonDispatchableHandle.7 = type { i64 }
%class.VkNonDispatchableHandle.8 = type { i64 }
%class.VkNonDispatchableHandle.9 = type { i64 }
%class.VkNonDispatchableHandle.10 = type { i64 }
%class.VkNonDispatchableHandle.11 = type { i64 }
%class.VkNonDispatchableHandle.12 = type { i64 }
%class.VkNonDispatchableHandle.13 = type { i64 }
%class.VkNonDispatchableHandle.14 = type { i64 }
%class.VkNonDispatchableHandle.15 = type { i64 }
%class.VkNonDispatchableHandle.16 = type { i64 }
%class.VkNonDispatchableHandle.17 = type { i64 }
%class.VkNonDispatchableHandle.18 = type { i64 }
%class.VkNonDispatchableHandle.19 = type { i64 }
%class.VkNonDispatchableHandle.20 = type { i64 }
%class.VkNonDispatchableHandle.21 = type { i64 }
%class.VkNonDispatchableHandle.22 = type { i64 }
%class.VkNonDispatchableHandle.23 = type { i64 }
%class.VkNonDispatchableHandle.24 = type { i64 }
%class.VkNonDispatchableHandle.25 = type { i64 }
%class.VkNonDispatchableHandle.26 = type { i64 }
%class.VkNonDispatchableHandle.27 = type { i64 }
%class.VkNonDispatchableHandle.28 = type { i64 }
%class.VkNonDispatchableHandle.29 = type { i64 }
%class.VkNonDispatchableHandle.30 = type { i64 }
%class.VkNonDispatchableHandle.31 = type { i64 }
%class.VkNonDispatchableHandle.32 = type { i64 }
%class.VkNonDispatchableHandle.33 = type { i64 }
%class.VkNonDispatchableHandle.34 = type { i64 }
%class.VkNonDispatchableHandle.35 = type { i64 }
%struct.VkInstance_T = type opaque
%"class.vk::DispatchableObject" = type { %union.VK_LOADER_DATA, %"class.vk::Instance" }
%union.VK_LOADER_DATA = type { i64 }
%"class.vk::Instance" = type { %struct.VkPhysicalDevice_T*, %"class.vk::DebugUtilsMessenger"* }
%struct.VkPhysicalDevice_T = type opaque
%"class.vk::DebugUtilsMessenger" = type { i32, i32, i32 (i32, i32, %struct.VkDebugUtilsMessengerCallbackDataEXT*, i8*)*, i8* }
%struct.VkDebugUtilsMessengerCallbackDataEXT = type { i32, i8*, i32, i8*, i32, i8*, i32, %struct.VkDebugUtilsLabelEXT*, i32, %struct.VkDebugUtilsLabelEXT*, i32, %struct.VkDebugUtilsObjectNameInfoEXT* }
%struct.VkDebugUtilsLabelEXT = type { i32, i8*, i8*, [4 x float] }
%struct.VkDebugUtilsObjectNameInfoEXT = type { i32, i8*, i32, i64, i8* }
%struct.VkInstanceCreateInfo = type { i32, i8*, i32, %struct.VkApplicationInfo*, i32, i8**, i32, i8** }
%struct.VkApplicationInfo = type { i32, i8*, i8*, i32, i8*, i32, i32 }
%struct.VkAllocationCallbacks = type { i8*, i8* (i8*, i64, i64, i32)*, i8* (i8*, i8*, i64, i64, i32)*, void (i8*, i8*)*, void (i8*, i64, i32, i32)*, void (i8*, i64, i32, i32)* }
%"class.rr::Config::Edit" = type { i32, i8, %"class.std::__1::vector.861" }
%"class.std::__1::vector.861" = type { %"class.std::__1::__vector_base.862" }
%"class.std::__1::__vector_base.862" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.863" }
%"struct.std::__1::pair" = type { i32, i32 }
%"class.std::__1::__compressed_pair.863" = type { %"struct.std::__1::__compressed_pair_elem.864" }
%"struct.std::__1::__compressed_pair_elem.864" = type { %"struct.std::__1::pair"* }
%struct.VkDebugUtilsMessengerCreateInfoEXT = type { i32, i8*, i32, i32, i32, i32 (i32, i32, %struct.VkDebugUtilsMessengerCallbackDataEXT*, i8*)*, i8* }
%"class.vk::PhysicalDevice" = type { i8 }
%struct.VkPhysicalDeviceFeatures = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.vk::DispatchableObject.871" = type <{ %union.VK_LOADER_DATA, %"class.vk::PhysicalDevice", [7 x i8] }>
%struct.VkFormatProperties = type { i32, i32, i32 }
%struct.VkImageFormatProperties = type { %struct.VkExtent3D, i32, i32, i32, i64 }
%struct.VkExtent3D = type { i32, i32, i32 }
%struct.VkPhysicalDeviceImageFormatInfo2 = type { i32, i8*, i32, i32, i32, i32, i32 }
%struct.VkImageFormatProperties2 = type { i32, i8*, %struct.VkImageFormatProperties }
%"class.vk::Format" = type { i32 }
%struct.VkBaseInStructure = type { i32, %struct.VkBaseInStructure* }
%struct.VkBaseOutStructure = type { i32, %struct.VkBaseOutStructure* }
%struct.VkExternalImageFormatProperties = type { i32, i8*, %struct.VkExternalMemoryProperties }
%struct.VkExternalMemoryProperties = type { i32, i32, i32 }
%struct.VkSamplerYcbcrConversionImageFormatProperties = type { i32, i8*, i32 }
%struct.VkPhysicalDeviceProperties = type { i32, i32, i32, i32, i32, [256 x i8], [16 x i8], %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceSparseProperties }
%struct.VkPhysicalDeviceLimits = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [3 x i32], i32, [3 x i32], i32, i32, i32, i32, i32, float, float, i32, [2 x i32], [2 x float], i32, i64, i64, i64, i64, i32, i32, i32, i32, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, [2 x float], [2 x float], float, float, i32, i32, i64, i64, i64 }
%struct.VkPhysicalDeviceSparseProperties = type { i32, i32, i32, i32, i32 }
%struct.VkQueueFamilyProperties = type { i32, i32, i32, %struct.VkExtent3D }
%struct.VkPhysicalDeviceMemoryProperties = type { i32, [32 x %struct.VkMemoryType], i32, [16 x %struct.VkMemoryHeap] }
%struct.VkMemoryType = type { i32, i32 }
%struct.VkMemoryHeap = type { i64, i32 }
%struct.VkDevice_T = type opaque
%"class.vk::DispatchableObject.872" = type { %union.VK_LOADER_DATA, %"class.vk::Device" }
%"class.vk::Device" = type { %"class.vk::PhysicalDevice"*, %"class.vk::Queue"*, i32, %"class.std::__1::unique_ptr.131", i32, [256 x i8]*, %struct.VkPhysicalDeviceFeatures, %"class.std::__1::shared_ptr.189", %"class.std::__1::unique_ptr.303", %"class.std::__1::unique_ptr.364", %"class.marl::mutex", %"class.std::__1::unordered_set.379" }
%"class.vk::Queue" = type { %union.VK_LOADER_DATA, %"class.vk::Device"*, %"class.std::__1::unique_ptr", %"class.sw::Chan", %"class.sw::Chan.117", %"class.std::__1::thread" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.sw::Renderer"* }
%"class.sw::Renderer" = type { i32 (...)**, %"class.marl::BoundedPool", %"class.marl::BoundedPool.36", %"struct.std::__1::atomic", %"class.vk::Query"*, %"class.marl::Ticket::Queue", [16 x %"class.marl::Ticket::Queue"], %"class.sw::VertexProcessor", [8 x i8], %"class.sw::PixelProcessor", %"class.sw::SetupProcessor", %"struct.sw::VertexProcessor::State", %"struct.sw::SetupProcessor::State", [4 x i8], %"struct.sw::PixelProcessor::State", %"class.rr::RoutineT", %"class.rr::RoutineT.103", %"class.rr::RoutineT.104", %"class.vk::Device"* }
%"class.marl::BoundedPool" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.marl::BoundedPool<sw::DrawCall, 16, marl::PoolPolicy::Preserve>::Storage"*, %"class.std::__1::__shared_weak_count"* }
%"class.marl::BoundedPool<sw::DrawCall, 16, marl::PoolPolicy::Preserve>::Storage" = type opaque
%"class.marl::BoundedPool.36" = type { %"class.std::__1::shared_ptr.39" }
%"class.std::__1::shared_ptr.39" = type { %"class.marl::BoundedPool<sw::DrawCall::BatchData, 16, marl::PoolPolicy::Preserve>::Storage"*, %"class.std::__1::__shared_weak_count"* }
%"class.marl::BoundedPool<sw::DrawCall::BatchData, 16, marl::PoolPolicy::Preserve>::Storage" = type opaque
%"class.vk::Query" = type { %"class.marl::WaitGroup", %"class.marl::Event", %"struct.std::__1::atomic.50", %"struct.std::__1::atomic.54", %"struct.std::__1::atomic.58" }
%"class.marl::WaitGroup" = type { %"class.std::__1::shared_ptr.41" }
%"class.std::__1::shared_ptr.41" = type { %"struct.marl::WaitGroup::Data"*, %"class.std::__1::__shared_weak_count"* }
%"struct.marl::WaitGroup::Data" = type { %"struct.std::__1::atomic.42", %"class.marl::ConditionVariable", %"class.marl::mutex" }
%"class.marl::ConditionVariable" = type { %"class.marl::mutex", %"class.marl::containers::list", %"class.std::__1::condition_variable", %"struct.std::__1::atomic", %"struct.std::__1::atomic" }
%"class.marl::containers::list" = type { %"class.marl::Allocator"*, i64, i64, %"struct.marl::containers::list<marl::Scheduler::Fiber *>::AllocationChain"*, %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"*, %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"* }
%"struct.marl::containers::list<marl::Scheduler::Fiber *>::AllocationChain" = type { %"struct.marl::Allocation", %"struct.marl::containers::list<marl::Scheduler::Fiber *>::AllocationChain"* }
%"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry" = type { %"class.marl::Scheduler::Fiber"*, %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"*, %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"* }
%"class.marl::Event" = type { %"class.std::__1::shared_ptr.49" }
%"class.std::__1::shared_ptr.49" = type { %"struct.marl::Event::Shared"*, %"class.std::__1::__shared_weak_count"* }
%"struct.marl::Event::Shared" = type <{ %"class.marl::mutex", %"class.marl::ConditionVariable", %"class.marl::containers::vector", i8, i8, [6 x i8] }>
%"class.marl::containers::vector" = type { %"class.marl::Allocator"*, i64, i64, [1 x %"struct.marl::aligned_storage<16, 8>::type"], %"struct.marl::aligned_storage<16, 8>::type"*, %"struct.marl::Allocation" }
%"struct.marl::aligned_storage<16, 8>::type" = type { [16 x i8] }
%"struct.std::__1::atomic.50" = type { %"struct.std::__1::__atomic_base.51" }
%"struct.std::__1::__atomic_base.51" = type { %"struct.std::__1::__cxx_atomic_impl.52" }
%"struct.std::__1::__cxx_atomic_impl.52" = type { %"struct.std::__1::__cxx_atomic_base_impl.53" }
%"struct.std::__1::__cxx_atomic_base_impl.53" = type { i32 }
%"struct.std::__1::atomic.54" = type { %"struct.std::__1::__atomic_base.55" }
%"struct.std::__1::__atomic_base.55" = type { %"struct.std::__1::__cxx_atomic_impl.56" }
%"struct.std::__1::__cxx_atomic_impl.56" = type { %"struct.std::__1::__cxx_atomic_base_impl.57" }
%"struct.std::__1::__cxx_atomic_base_impl.57" = type { i32 }
%"struct.std::__1::atomic.58" = type { %"struct.std::__1::__atomic_base.59" }
%"struct.std::__1::__atomic_base.59" = type { %"struct.std::__1::__atomic_base.60" }
%"struct.std::__1::__atomic_base.60" = type { %"struct.std::__1::__cxx_atomic_impl.61" }
%"struct.std::__1::__cxx_atomic_impl.61" = type { %"struct.std::__1::__cxx_atomic_base_impl.62" }
%"struct.std::__1::__cxx_atomic_base_impl.62" = type { i64 }
%"class.marl::Ticket::Queue" = type { %"class.std::__1::shared_ptr.63", %"class.marl::UnboundedPool" }
%"class.std::__1::shared_ptr.63" = type { %"struct.marl::Ticket::Shared"*, %"class.std::__1::__shared_weak_count"* }
%"struct.marl::Ticket::Shared" = type { %"class.marl::mutex", %"struct.marl::Ticket::Record" }
%"struct.marl::Ticket::Record" = type <{ %"class.marl::ConditionVariable", %"class.std::__1::shared_ptr.63", %"struct.marl::Ticket::Record"*, %"struct.marl::Ticket::Record"*, %"class.std::__1::function.208", i8, %"struct.std::__1::atomic.405", [6 x i8] }>
%"struct.std::__1::atomic.405" = type { %"struct.std::__1::__atomic_base.406" }
%"struct.std::__1::__atomic_base.406" = type { %"struct.std::__1::__cxx_atomic_impl.407" }
%"struct.std::__1::__cxx_atomic_impl.407" = type { %"struct.std::__1::__cxx_atomic_base_impl.408" }
%"struct.std::__1::__cxx_atomic_base_impl.408" = type { i8 }
%"class.marl::UnboundedPool" = type { %"class.marl::Allocator"*, %"class.std::__1::shared_ptr.66" }
%"class.std::__1::shared_ptr.66" = type { %"class.marl::UnboundedPool<marl::Ticket::Record, marl::PoolPolicy::Reconstruct>::Storage"*, %"class.std::__1::__shared_weak_count"* }
%"class.marl::UnboundedPool<marl::Ticket::Record, marl::PoolPolicy::Reconstruct>::Storage" = type { %"class.marl::Pool<marl::Ticket::Record>::Storage", %"class.marl::Allocator"*, %"class.marl::mutex", %"class.marl::containers::vector.860", %"struct.marl::Pool<marl::Ticket::Record>::Item"* }
%"class.marl::Pool<marl::Ticket::Record>::Storage" = type { i32 (...)** }
%"class.marl::containers::vector.860" = type { %"class.marl::Allocator"*, i64, i64, [4 x %"struct.marl::aligned_storage<8, 8>::type"], %"struct.marl::aligned_storage<8, 8>::type"*, %"struct.marl::Allocation" }
%"struct.marl::aligned_storage<8, 8>::type" = type { [8 x i8] }
%"struct.marl::Pool<marl::Ticket::Record>::Item" = type { %"struct.marl::aligned_storage<216, 8>::type", %"struct.std::__1::atomic", %"struct.marl::Pool<marl::Ticket::Record>::Item"* }
%"struct.marl::aligned_storage<216, 8>::type" = type { [216 x i8] }
%"class.sw::VertexProcessor" = type { %"class.std::__1::unique_ptr.67" }
%"class.std::__1::unique_ptr.67" = type { %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"class.sw::LRUCache"* }
%"class.sw::LRUCache" = type opaque
%"class.sw::PixelProcessor" = type { %"struct.sw::PixelProcessor::Factor", %"class.std::__1::unique_ptr.76", [8 x i8] }
%"struct.sw::PixelProcessor::Factor" = type { %"struct.sw::vec", [4 x %"struct.sw::vec"], [8 x i8], [4 x %"struct.sw::vec.73"], [4 x %"struct.sw::vec"], [4 x %"struct.sw::vec.73"] }
%"struct.sw::vec" = type { %union.anon.71 }
%union.anon.71 = type { [4 x i16] }
%"struct.sw::vec.73" = type { %union.anon.74 }
%union.anon.74 = type { [4 x float] }
%"class.std::__1::unique_ptr.76" = type { %"class.std::__1::__compressed_pair.77" }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"struct.std::__1::__compressed_pair_elem.78" = type { %"class.sw::LRUCache.79"* }
%"class.sw::LRUCache.79" = type opaque
%"class.sw::SetupProcessor" = type { %"class.std::__1::unique_ptr.83" }
%"class.std::__1::unique_ptr.83" = type { %"class.std::__1::__compressed_pair.84" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { %"class.sw::LRUCache.86"* }
%"class.sw::LRUCache.86" = type opaque
%"struct.sw::VertexProcessor::State" = type { %"struct.sw::VertexProcessor::States.base", i32, [4 x i8] }
%"struct.sw::VertexProcessor::States.base" = type <{ i64, i32, [32 x %"struct.sw::VertexProcessor::States::Input"], i8 }>
%"struct.sw::VertexProcessor::States::Input" = type { i32, i8 }
%"struct.sw::SetupProcessor::State" = type { %"struct.sw::SetupProcessor::States.base", i32 }
%"struct.sw::SetupProcessor::States.base" = type <{ i16, [2 x i8], i32, i32, i16, [128 x %"struct.sw::SpirvShader::InterfaceComponent"] }>
%"struct.sw::SpirvShader::InterfaceComponent" = type { i8, %union.anon.92 }
%union.anon.92 = type { %struct.anon.93 }
%struct.anon.93 = type { i8 }
%"struct.sw::PixelProcessor::State" = type <{ %"struct.sw::PixelProcessor::States", i32, [4 x i8] }>
%"struct.sw::PixelProcessor::States" = type { i64, i32, i32, i32, i32, i8, i8, %"struct.sw::PixelProcessor::States::StencilOpState", %"struct.sw::PixelProcessor::States::StencilOpState", i8, i8, i8, i8, [8 x %"struct.vk::BlendState"], i32, [8 x %"class.vk::Format"], i32, i32, i8, i8, i8, i8, float, float, float, i32, %"class.vk::Format", i8, i8, float, float }
%"struct.sw::PixelProcessor::States::StencilOpState" = type { i32, i32, i32, i32, i32, i32 }
%"struct.vk::BlendState" = type { i8, i32, i32, i32, i32, i32, i32 }
%"class.rr::RoutineT" = type { %"class.std::__1::shared_ptr.98", void (%"struct.sw::Vertex"*, i32*, %"struct.sw::VertexTask"*, %"struct.sw::DrawData"*)* }
%"class.std::__1::shared_ptr.98" = type { %"class.rr::Routine"*, %"class.std::__1::__shared_weak_count"* }
%"class.rr::Routine" = type { i32 (...)** }
%"struct.sw::Vertex" = type { %union.anon.99, float, i32, i32, [8 x float], [8 x float], [4 x i8], %struct.anon.101, [128 x float] }
%union.anon.99 = type { %struct.anon.100 }
%struct.anon.100 = type { float, float, float, float }
%struct.anon.101 = type { i32, i32, float, float }
%"struct.sw::VertexTask" = type { i32, i32, [8 x i8], %"struct.sw::VertexCache" }
%"struct.sw::VertexCache" = type { [64 x %"struct.sw::Vertex"], [64 x i32], i32, [12 x i8] }
%"struct.sw::DrawData" = type { %"struct.sw::Constants"*, %"struct.std::__1::array", %"struct.std::__1::array.102", [32 x i8*], [32 x i32], [32 x i32], i8*, i32, i32, float, i32, [2 x %"struct.sw::PixelProcessor::Stencil"], %"struct.sw::PixelProcessor::Factor", [16 x i32], %"struct.sw::vec.73", %"struct.sw::vec.73", %"struct.sw::vec.73", %"struct.sw::vec.73", %"struct.sw::vec.73", %"struct.sw::vec.73", float, float, float, float, float, float, float, i8, [8 x i32*], [8 x i32], [8 x i32], float*, i32, i32, i8*, i32, i32, i32, i32, i32, i32, %"struct.sw::vec.73", %"struct.sw::vec.73", %"struct.sw::vec.73", %"struct.sw::vec.73", %"struct.vk::Pipeline::PushConstantStorage" }
%"struct.sw::Constants" = type opaque
%"struct.std::__1::array" = type { [4 x i8*] }
%"struct.std::__1::array.102" = type { [12 x i32] }
%"struct.sw::PixelProcessor::Stencil" = type { i64, i64, i64, i64, i64, i64 }
%"struct.vk::Pipeline::PushConstantStorage" = type { [128 x i8] }
%"class.rr::RoutineT.103" = type { %"class.std::__1::shared_ptr.98", i32 (%"struct.sw::Primitive"*, %"struct.sw::Triangle"*, %"struct.sw::Polygon"*, %"struct.sw::DrawData"*)* }
%"struct.sw::Primitive" = type { i32, i32, [8 x i8], %"struct.sw::vec.73", %"struct.sw::vec.73", float, float, float, [4 x i8], %"struct.sw::PlaneEquation", %"struct.sw::vec.73", %"struct.sw::PlaneEquation", [128 x %"struct.sw::PlaneEquation"], [8 x %"struct.sw::PlaneEquation"], [8 x %"struct.sw::PlaneEquation"], i64, i64, [2 x %"struct.sw::Primitive::Span"], [8192 x %"struct.sw::Primitive::Span"], [2 x %"struct.sw::Primitive::Span"] }
%"struct.sw::PlaneEquation" = type { %"struct.sw::vec.73", %"struct.sw::vec.73", %"struct.sw::vec.73" }
%"struct.sw::Primitive::Span" = type { i16, i16 }
%"struct.sw::Triangle" = type { %"struct.sw::Vertex", %"struct.sw::Vertex", %"struct.sw::Vertex" }
%"struct.sw::Polygon" = type opaque
%"class.rr::RoutineT.104" = type { %"class.std::__1::shared_ptr.98", void (%"struct.sw::Primitive"*, i32, i32, i32, %"struct.sw::DrawData"*)* }
%"class.sw::Chan" = type { %"class.marl::mutex", %"class.std::__1::queue", %"class.std::__1::condition_variable" }
%"class.std::__1::queue" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.112" }
%"struct.std::__1::__split_buffer" = type { %"struct.vk::Queue::Task"**, %"struct.vk::Queue::Task"**, %"struct.vk::Queue::Task"**, %"class.std::__1::__compressed_pair.109" }
%"struct.vk::Queue::Task" = type <{ i32, [4 x i8], %struct.VkSubmitInfo*, %"class.std::__1::shared_ptr.108", i32, [4 x i8] }>
%struct.VkSubmitInfo = type { i32, i8*, i32, %class.VkNonDispatchableHandle.1*, i32*, i32, %struct.VkCommandBuffer_T**, i32, %class.VkNonDispatchableHandle.1* }
%struct.VkCommandBuffer_T = type opaque
%"class.std::__1::shared_ptr.108" = type { %"class.sw::CountedEvent"*, %"class.std::__1::__shared_weak_count"* }
%"class.sw::CountedEvent" = type { %"class.marl::WaitGroup", %"class.marl::Event" }
%"class.std::__1::__compressed_pair.109" = type { %"struct.std::__1::__compressed_pair_elem.110" }
%"struct.std::__1::__compressed_pair_elem.110" = type { %"struct.vk::Queue::Task"** }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"class.sw::Chan.117" = type { %"class.marl::mutex", %"class.std::__1::queue.118", %"class.std::__1::condition_variable" }
%"class.std::__1::queue.118" = type { %"class.std::__1::deque.119" }
%"class.std::__1::deque.119" = type { %"class.std::__1::__deque_base.120" }
%"class.std::__1::__deque_base.120" = type { %"struct.std::__1::__split_buffer.121", i64, %"class.std::__1::__compressed_pair.127" }
%"struct.std::__1::__split_buffer.121" = type { %struct.VkSubmitInfo***, %struct.VkSubmitInfo***, %struct.VkSubmitInfo***, %"class.std::__1::__compressed_pair.122" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"struct.std::__1::__compressed_pair_elem.123" = type { %struct.VkSubmitInfo*** }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"class.std::__1::thread" = type { i64 }
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.sw::Blitter"* }
%"class.sw::Blitter" = type { i32 (...)**, %"class.marl::mutex", %"class.sw::LRUCache.134", %"class.marl::mutex", %"class.sw::LRUCache.157" }
%"class.sw::LRUCache.134" = type { %"class.std::__1::vector", %"class.std::__1::unordered_set", %"struct.sw::LRUCache<sw::Blitter::State, rr::RoutineT<void (const sw::Blitter::BlitData *)>, std::__1::hash<sw::Blitter::State> >::Entry"*, %"struct.sw::LRUCache<sw::Blitter::State, rr::RoutineT<void (const sw::Blitter::BlitData *)>, std::__1::hash<sw::Blitter::State> >::Entry"*, %"struct.sw::LRUCache<sw::Blitter::State, rr::RoutineT<void (const sw::Blitter::BlitData *)>, std::__1::hash<sw::Blitter::State> >::Entry"* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.sw::LRUCache<sw::Blitter::State, rr::RoutineT<void (const sw::Blitter::BlitData *)>, std::__1::hash<sw::Blitter::State> >::Entry"*, %"struct.sw::LRUCache<sw::Blitter::State, rr::RoutineT<void (const sw::Blitter::BlitData *)>, std::__1::hash<sw::Blitter::State> >::Entry"*, %"class.std::__1::__compressed_pair.135" }
%"class.std::__1::__compressed_pair.135" = type { %"struct.std::__1::__compressed_pair_elem.136" }
%"struct.std::__1::__compressed_pair_elem.136" = type { %"struct.sw::LRUCache<sw::Blitter::State, rr::RoutineT<void (const sw::Blitter::BlitData *)>, std::__1::hash<sw::Blitter::State> >::Entry"* }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.140", %"class.std::__1::__compressed_pair.148", %"class.std::__1::__compressed_pair.153", %"class.std::__1::__compressed_pair.155", [4 x i8] }>
%"class.std::__1::unique_ptr.140" = type { %"class.std::__1::__compressed_pair.141" }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.142", %"struct.std::__1::__compressed_pair_elem.143" }
%"struct.std::__1::__compressed_pair_elem.142" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.143" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.144" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"class.std::__1::__compressed_pair.148" = type { %"struct.std::__1::__compressed_pair_elem.149" }
%"struct.std::__1::__compressed_pair_elem.149" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"class.std::__1::__compressed_pair.155" = type { %"struct.std::__1::__compressed_pair_elem.156" }
%"struct.sw::LRUCache<sw::Blitter::State, rr::RoutineT<void (const sw::Blitter::BlitData *)>, std::__1::hash<sw::Blitter::State> >::Entry" = type opaque
%"class.sw::LRUCache.157" = type { %"class.std::__1::vector.158", %"class.std::__1::unordered_set.165", %"struct.sw::LRUCache<sw::Blitter::State, rr::RoutineT<void (const sw::Blitter::CubeBorderData *)>, std::__1::hash<sw::Blitter::State> >::Entry"*, %"struct.sw::LRUCache<sw::Blitter::State, rr::RoutineT<void (const sw::Blitter::CubeBorderData *)>, std::__1::hash<sw::Blitter::State> >::Entry"*, %"struct.sw::LRUCache<sw::Blitter::State, rr::RoutineT<void (const sw::Blitter::CubeBorderData *)>, std::__1::hash<sw::Blitter::State> >::Entry"* }
%"class.std::__1::vector.158" = type { %"class.std::__1::__vector_base.159" }
%"class.std::__1::__vector_base.159" = type { %"struct.sw::LRUCache<sw::Blitter::State, rr::RoutineT<void (const sw::Blitter::CubeBorderData *)>, std::__1::hash<sw::Blitter::State> >::Entry"*, %"struct.sw::LRUCache<sw::Blitter::State, rr::RoutineT<void (const sw::Blitter::CubeBorderData *)>, std::__1::hash<sw::Blitter::State> >::Entry"*, %"class.std::__1::__compressed_pair.160" }
%"class.std::__1::__compressed_pair.160" = type { %"struct.std::__1::__compressed_pair_elem.161" }
%"struct.std::__1::__compressed_pair_elem.161" = type { %"struct.sw::LRUCache<sw::Blitter::State, rr::RoutineT<void (const sw::Blitter::CubeBorderData *)>, std::__1::hash<sw::Blitter::State> >::Entry"* }
%"class.std::__1::unordered_set.165" = type { %"class.std::__1::__hash_table.166" }
%"class.std::__1::__hash_table.166" = type <{ %"class.std::__1::unique_ptr.167", %"class.std::__1::__compressed_pair.177", %"class.std::__1::__compressed_pair.182", %"class.std::__1::__compressed_pair.184", [4 x i8] }>
%"class.std::__1::unique_ptr.167" = type { %"class.std::__1::__compressed_pair.168" }
%"class.std::__1::__compressed_pair.168" = type { %"struct.std::__1::__compressed_pair_elem.169", %"struct.std::__1::__compressed_pair_elem.171" }
%"struct.std::__1::__compressed_pair_elem.169" = type { %"struct.std::__1::__hash_node_base.170"** }
%"struct.std::__1::__hash_node_base.170" = type { %"struct.std::__1::__hash_node_base.170"* }
%"struct.std::__1::__compressed_pair_elem.171" = type { %"class.std::__1::__bucket_list_deallocator.172" }
%"class.std::__1::__bucket_list_deallocator.172" = type { %"class.std::__1::__compressed_pair.173" }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"class.std::__1::__compressed_pair.177" = type { %"struct.std::__1::__compressed_pair_elem.178" }
%"struct.std::__1::__compressed_pair_elem.178" = type { %"struct.std::__1::__hash_node_base.170" }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.156" }
%"struct.sw::LRUCache<sw::Blitter::State, rr::RoutineT<void (const sw::Blitter::CubeBorderData *)>, std::__1::hash<sw::Blitter::State> >::Entry" = type opaque
%"class.std::__1::shared_ptr.189" = type { %"class.marl::Scheduler"*, %"class.std::__1::__shared_weak_count"* }
%"class.std::__1::unique_ptr.303" = type { %"class.std::__1::__compressed_pair.304" }
%"class.std::__1::__compressed_pair.304" = type { %"struct.std::__1::__compressed_pair_elem.305" }
%"struct.std::__1::__compressed_pair_elem.305" = type { %"class.vk::Device::SamplingRoutineCache"* }
%"class.vk::Device::SamplingRoutineCache" = type { i8, [7 x i8], %"class.std::__1::unordered_map.306", %"class.marl::mutex", %"class.sw::LRUCache.332" }
%"class.std::__1::unordered_map.306" = type { %"class.std::__1::__hash_table.307" }
%"class.std::__1::__hash_table.307" = type <{ %"class.std::__1::unique_ptr.308", %"class.std::__1::__compressed_pair.318", %"class.std::__1::__compressed_pair.323", %"class.std::__1::__compressed_pair.326", [4 x i8] }>
%"class.std::__1::unique_ptr.308" = type { %"class.std::__1::__compressed_pair.309" }
%"class.std::__1::__compressed_pair.309" = type { %"struct.std::__1::__compressed_pair_elem.310", %"struct.std::__1::__compressed_pair_elem.312" }
%"struct.std::__1::__compressed_pair_elem.310" = type { %"struct.std::__1::__hash_node_base.311"** }
%"struct.std::__1::__hash_node_base.311" = type { %"struct.std::__1::__hash_node_base.311"* }
%"struct.std::__1::__compressed_pair_elem.312" = type { %"class.std::__1::__bucket_list_deallocator.313" }
%"class.std::__1::__bucket_list_deallocator.313" = type { %"class.std::__1::__compressed_pair.314" }
%"class.std::__1::__compressed_pair.314" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"class.std::__1::__compressed_pair.318" = type { %"struct.std::__1::__compressed_pair_elem.319" }
%"struct.std::__1::__compressed_pair_elem.319" = type { %"struct.std::__1::__hash_node_base.311" }
%"class.std::__1::__compressed_pair.323" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"class.std::__1::__compressed_pair.326" = type { %"struct.std::__1::__compressed_pair_elem.156" }
%"class.sw::LRUCache.332" = type { %"class.std::__1::vector.333", %"class.std::__1::unordered_set.340", %"struct.sw::LRUCache<vk::Device::SamplingRoutineCache::Key, std::__1::shared_ptr<rr::Routine>, vk::Device::SamplingRoutineCache::Key::Hash>::Entry"*, %"struct.sw::LRUCache<vk::Device::SamplingRoutineCache::Key, std::__1::shared_ptr<rr::Routine>, vk::Device::SamplingRoutineCache::Key::Hash>::Entry"*, %"struct.sw::LRUCache<vk::Device::SamplingRoutineCache::Key, std::__1::shared_ptr<rr::Routine>, vk::Device::SamplingRoutineCache::Key::Hash>::Entry"* }
%"class.std::__1::vector.333" = type { %"class.std::__1::__vector_base.334" }
%"class.std::__1::__vector_base.334" = type { %"struct.sw::LRUCache<vk::Device::SamplingRoutineCache::Key, std::__1::shared_ptr<rr::Routine>, vk::Device::SamplingRoutineCache::Key::Hash>::Entry"*, %"struct.sw::LRUCache<vk::Device::SamplingRoutineCache::Key, std::__1::shared_ptr<rr::Routine>, vk::Device::SamplingRoutineCache::Key::Hash>::Entry"*, %"class.std::__1::__compressed_pair.335" }
%"class.std::__1::__compressed_pair.335" = type { %"struct.std::__1::__compressed_pair_elem.336" }
%"struct.std::__1::__compressed_pair_elem.336" = type { %"struct.sw::LRUCache<vk::Device::SamplingRoutineCache::Key, std::__1::shared_ptr<rr::Routine>, vk::Device::SamplingRoutineCache::Key::Hash>::Entry"* }
%"class.std::__1::unordered_set.340" = type { %"class.std::__1::__hash_table.341" }
%"class.std::__1::__hash_table.341" = type <{ %"class.std::__1::unique_ptr.342", %"class.std::__1::__compressed_pair.352", %"class.std::__1::__compressed_pair.357", %"class.std::__1::__compressed_pair.359", [4 x i8] }>
%"class.std::__1::unique_ptr.342" = type { %"class.std::__1::__compressed_pair.343" }
%"class.std::__1::__compressed_pair.343" = type { %"struct.std::__1::__compressed_pair_elem.344", %"struct.std::__1::__compressed_pair_elem.346" }
%"struct.std::__1::__compressed_pair_elem.344" = type { %"struct.std::__1::__hash_node_base.345"** }
%"struct.std::__1::__hash_node_base.345" = type { %"struct.std::__1::__hash_node_base.345"* }
%"struct.std::__1::__compressed_pair_elem.346" = type { %"class.std::__1::__bucket_list_deallocator.347" }
%"class.std::__1::__bucket_list_deallocator.347" = type { %"class.std::__1::__compressed_pair.348" }
%"class.std::__1::__compressed_pair.348" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"class.std::__1::__compressed_pair.352" = type { %"struct.std::__1::__compressed_pair_elem.353" }
%"struct.std::__1::__compressed_pair_elem.353" = type { %"struct.std::__1::__hash_node_base.345" }
%"class.std::__1::__compressed_pair.357" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"class.std::__1::__compressed_pair.359" = type { %"struct.std::__1::__compressed_pair_elem.156" }
%"struct.sw::LRUCache<vk::Device::SamplingRoutineCache::Key, std::__1::shared_ptr<rr::Routine>, vk::Device::SamplingRoutineCache::Key::Hash>::Entry" = type { %"struct.sw::LRUCache<vk::Device::SamplingRoutineCache::Key, std::__1::shared_ptr<rr::Routine>, vk::Device::SamplingRoutineCache::Key::Hash>::Keyed", %"class.std::__1::shared_ptr.98", %"struct.sw::LRUCache<vk::Device::SamplingRoutineCache::Key, std::__1::shared_ptr<rr::Routine>, vk::Device::SamplingRoutineCache::Key::Hash>::Entry"*, %"struct.sw::LRUCache<vk::Device::SamplingRoutineCache::Key, std::__1::shared_ptr<rr::Routine>, vk::Device::SamplingRoutineCache::Key::Hash>::Entry"* }
%"struct.sw::LRUCache<vk::Device::SamplingRoutineCache::Key, std::__1::shared_ptr<rr::Routine>, vk::Device::SamplingRoutineCache::Key::Hash>::Keyed" = type { %"struct.vk::Device::SamplingRoutineCache::Key" }
%"struct.vk::Device::SamplingRoutineCache::Key" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.364" = type { %"class.std::__1::__compressed_pair.365" }
%"class.std::__1::__compressed_pair.365" = type { %"struct.std::__1::__compressed_pair_elem.366" }
%"struct.std::__1::__compressed_pair_elem.366" = type { %"class.vk::Device::SamplerIndexer"* }
%"class.vk::Device::SamplerIndexer" = type <{ %"class.marl::mutex", %"class.std::__1::map", i32, [4 x i8] }>
%"class.std::__1::map" = type { %"class.std::__1::__tree.367" }
%"class.std::__1::__tree.367" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.368", %"class.std::__1::__compressed_pair.372" }
%"class.std::__1::__compressed_pair.368" = type { %"struct.std::__1::__compressed_pair_elem.230" }
%"class.std::__1::__compressed_pair.372" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"class.std::__1::unordered_set.379" = type { %"class.std::__1::__hash_table.380" }
%"class.std::__1::__hash_table.380" = type <{ %"class.std::__1::unique_ptr.381", %"class.std::__1::__compressed_pair.391", %"class.std::__1::__compressed_pair.396", %"class.std::__1::__compressed_pair.400", [4 x i8] }>
%"class.std::__1::unique_ptr.381" = type { %"class.std::__1::__compressed_pair.382" }
%"class.std::__1::__compressed_pair.382" = type { %"struct.std::__1::__compressed_pair_elem.383", %"struct.std::__1::__compressed_pair_elem.385" }
%"struct.std::__1::__compressed_pair_elem.383" = type { %"struct.std::__1::__hash_node_base.384"** }
%"struct.std::__1::__hash_node_base.384" = type { %"struct.std::__1::__hash_node_base.384"* }
%"struct.std::__1::__compressed_pair_elem.385" = type { %"class.std::__1::__bucket_list_deallocator.386" }
%"class.std::__1::__bucket_list_deallocator.386" = type { %"class.std::__1::__compressed_pair.387" }
%"class.std::__1::__compressed_pair.387" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"class.std::__1::__compressed_pair.391" = type { %"struct.std::__1::__compressed_pair_elem.392" }
%"struct.std::__1::__compressed_pair_elem.392" = type { %"struct.std::__1::__hash_node_base.384" }
%"class.std::__1::__compressed_pair.396" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"class.std::__1::__compressed_pair.400" = type { %"struct.std::__1::__compressed_pair_elem.156" }
%struct.VkDeviceCreateInfo = type { i32, i8*, i32, i32, %struct.VkDeviceQueueCreateInfo*, i32, i8**, i32, i8**, %struct.VkPhysicalDeviceFeatures* }
%struct.VkDeviceQueueCreateInfo = type { i32, i8*, i32, i32, i32, float* }
%struct.VkPhysicalDevice16BitStorageFeatures = type { i32, i8*, i32, i32, i32, i32 }
%struct.VkPhysicalDeviceVariablePointersFeatures = type { i32, i8*, i32, i32 }
%struct.VkPhysicalDeviceMultiviewFeatures = type { i32, i8*, i32, i32, i32 }
%struct.VkPhysicalDeviceLineRasterizationFeaturesEXT = type { i32, i8*, i32, i32, i32, i32, i32, i32 }
%struct.VkLayerProperties = type { [256 x i8], i32, i32, [256 x i8] }
%struct.VkQueue_T = type opaque
%"class.vk::Fence" = type { %"class.std::__1::shared_ptr.108" }
%struct.VkMemoryAllocateInfo = type { i32, i8*, i64, i32 }
%"class.vk::DeviceMemory" = type { i8*, i64, i32, %"class.vk::DeviceMemory::ExternalBase"*, %"class.vk::Device"* }
%"class.vk::DeviceMemory::ExternalBase" = type opaque
%struct.VkMemoryGetFdInfoKHR = type { i32, i8*, %class.VkNonDispatchableHandle.3, i32 }
%struct.VkMemoryFdPropertiesKHR = type { i32, i8*, i32 }
%struct.VkMemoryHostPointerPropertiesEXT = type { i32, i8*, i32 }
%struct.VkMappedMemoryRange = type { i32, i8*, %class.VkNonDispatchableHandle.3, i64, i64 }
%"class.vk::Buffer" = type <{ i8*, i32, [4 x i8], i64, i32, i32, i32, [4 x i8], i32*, i32, [4 x i8] }>
%"class.vk::Image" = type { %"class.vk::DeviceMemory"*, %"class.vk::Device"*, i64, i32, i32, %"class.vk::Format", %struct.VkExtent3D, i32, i32, i32, i32, i32, %"class.vk::Image"*, i32, %"class.marl::mutex", %"class.std::__1::unordered_set.417" }
%"class.std::__1::unordered_set.417" = type { %"class.std::__1::__hash_table.418" }
%"class.std::__1::__hash_table.418" = type <{ %"class.std::__1::unique_ptr.419", %"class.std::__1::__compressed_pair.429", %"class.std::__1::__compressed_pair.434", %"class.std::__1::__compressed_pair.436", [4 x i8] }>
%"class.std::__1::unique_ptr.419" = type { %"class.std::__1::__compressed_pair.420" }
%"class.std::__1::__compressed_pair.420" = type { %"struct.std::__1::__compressed_pair_elem.421", %"struct.std::__1::__compressed_pair_elem.423" }
%"struct.std::__1::__compressed_pair_elem.421" = type { %"struct.std::__1::__hash_node_base.422"** }
%"struct.std::__1::__hash_node_base.422" = type { %"struct.std::__1::__hash_node_base.422"* }
%"struct.std::__1::__compressed_pair_elem.423" = type { %"class.std::__1::__bucket_list_deallocator.424" }
%"class.std::__1::__bucket_list_deallocator.424" = type { %"class.std::__1::__compressed_pair.425" }
%"class.std::__1::__compressed_pair.425" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"class.std::__1::__compressed_pair.429" = type { %"struct.std::__1::__compressed_pair_elem.430" }
%"struct.std::__1::__compressed_pair_elem.430" = type { %"struct.std::__1::__hash_node_base.422" }
%"class.std::__1::__compressed_pair.434" = type <{ %"struct.std::__1::__compressed_pair_elem.113", %"struct.std::__1::__compressed_pair_elem.435", [4 x i8] }>
%"struct.std::__1::__compressed_pair_elem.435" = type { %"class.vk::Image::Subresource" }
%"class.vk::Image::Subresource" = type { %struct.VkImageSubresource }
%struct.VkImageSubresource = type { i32, i32, i32 }
%"class.std::__1::__compressed_pair.436" = type { %"struct.std::__1::__compressed_pair_elem.156" }
%struct.VkMemoryRequirements = type { i64, i64, i32 }
%struct.VkSparseImageMemoryRequirements = type { %struct.VkSparseImageFormatProperties, i32, i64, i64, i64 }
%struct.VkSparseImageFormatProperties = type { i32, %struct.VkExtent3D, i32 }
%struct.VkBindSparseInfo = type { i32, i8*, i32, %class.VkNonDispatchableHandle.1*, i32, %struct.VkSparseBufferMemoryBindInfo*, i32, %struct.VkSparseImageOpaqueMemoryBindInfo*, i32, %struct.VkSparseImageMemoryBindInfo*, i32, %class.VkNonDispatchableHandle.1* }
%struct.VkSparseBufferMemoryBindInfo = type { %class.VkNonDispatchableHandle, i32, %struct.VkSparseMemoryBind* }
%struct.VkSparseMemoryBind = type { i64, i64, %class.VkNonDispatchableHandle.3, i64, i32 }
%struct.VkSparseImageOpaqueMemoryBindInfo = type { %class.VkNonDispatchableHandle.0, i32, %struct.VkSparseMemoryBind* }
%struct.VkSparseImageMemoryBindInfo = type { %class.VkNonDispatchableHandle.0, i32, %struct.VkSparseImageMemoryBind* }
%struct.VkSparseImageMemoryBind = type { %struct.VkImageSubresource, %struct.VkOffset3D, %struct.VkExtent3D, %class.VkNonDispatchableHandle.3, i64, i32 }
%struct.VkOffset3D = type { i32, i32, i32 }
%struct.VkFenceCreateInfo = type { i32, i8*, i32 }
%struct.VkSemaphoreCreateInfo = type { i32, i8*, i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.441" }
%"class.std::__1::__compressed_pair.441" = type { %"struct.std::__1::__compressed_pair_elem.442" }
%"struct.std::__1::__compressed_pair_elem.442" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.443 }
%union.anon.443 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon.444 }
%struct.anon.444 = type { i8 }
%"class.vk::BinarySemaphore" = type { %"class.vk::Semaphore", %struct.VkAllocationCallbacks*, i32, %"class.marl::Event", %"class.vk::BinarySemaphore::External"*, %"class.vk::BinarySemaphore::External"* }
%"class.vk::Semaphore" = type { i32 (...)**, i32, %"class.marl::mutex" }
%"class.vk::BinarySemaphore::External" = type opaque
%"class.vk::TimelineSemaphore" = type { %"class.vk::Semaphore", %"class.std::__1::shared_ptr.452" }
%"class.std::__1::shared_ptr.452" = type { %"struct.vk::TimelineSemaphore::Shared"*, %"class.std::__1::__shared_weak_count"* }
%"struct.vk::TimelineSemaphore::Shared" = type <{ %"class.marl::mutex", %"class.marl::ConditionVariable", i64, %"class.marl::containers::vector.453", %"class.std::__1::map.454", i32, [4 x i8] }>
%"class.marl::containers::vector.453" = type { %"class.marl::Allocator"*, i64, i64, [1 x %"struct.marl::aligned_storage<16, 8>::type"], %"struct.marl::aligned_storage<16, 8>::type"*, %"struct.marl::Allocation" }
%"class.std::__1::map.454" = type { %"class.std::__1::__tree.455" }
%"class.std::__1::__tree.455" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.456", %"class.std::__1::__compressed_pair.460" }
%"class.std::__1::__compressed_pair.456" = type { %"struct.std::__1::__compressed_pair_elem.230" }
%"class.std::__1::__compressed_pair.460" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%struct.VkSemaphoreGetFdInfoKHR = type { i32, i8*, %class.VkNonDispatchableHandle.1, i32 }
%struct.VkImportSemaphoreFdInfoKHR = type { i32, i8*, %class.VkNonDispatchableHandle.1, i32, i32, i32 }
%struct.VkSemaphoreSignalInfo = type { i32, i8*, %class.VkNonDispatchableHandle.1, i64 }
%struct.VkSemaphoreWaitInfo = type { i32, i8*, i32, i32, %class.VkNonDispatchableHandle.1*, i64* }
%struct.VkEventCreateInfo = type { i32, i8*, i32 }
%"class.vk::Event" = type { %"class.marl::mutex", i32, %"class.std::__1::condition_variable" }
%struct.VkQueryPoolCreateInfo = type { i32, i8*, i32, i32, i32, i32 }
%"class.vk::QueryPool" = type { %"class.vk::Query"*, i32, i32 }
%struct.VkBufferCreateInfo = type { i32, i8*, i32, i64, i32, i32, i32, i32* }
%struct.VkBufferDeviceAddressInfo = type { i32, i8*, %class.VkNonDispatchableHandle }
%struct.VkDeviceMemoryOpaqueCaptureAddressInfo = type { i32, i8*, %class.VkNonDispatchableHandle.3 }
%struct.VkBufferViewCreateInfo = type { i32, i8*, i32, %class.VkNonDispatchableHandle, i32, i64, i64 }
%"class.vk::BufferView" = type { %"union.vk::Identifier", %"class.vk::Buffer"*, i32, i64, i64 }
%"union.vk::Identifier" = type { %struct.anon.473 }
%struct.anon.473 = type { i24 }
%struct.VkImageCreateInfo = type { i32, i8*, i32, i32, i32, %struct.VkExtent3D, i32, i32, i32, i32, i32, i32, i32, i32*, i32 }
%struct.VkSubresourceLayout = type { i64, i64, i64, i64, i64 }
%struct.VkImageViewCreateInfo = type { i32, i8*, i32, %class.VkNonDispatchableHandle.0, i32, i32, %struct.VkComponentMapping, %struct.VkImageSubresourceRange }
%struct.VkComponentMapping = type { i32, i32, i32, i32 }
%struct.VkImageSubresourceRange = type { i32, i32, i32, i32, i32 }
%"class.vk::SamplerYcbcrConversion" = type { i32, i32, i32, %struct.VkComponentMapping, i32, i32, i32, i32 }
%"class.vk::ImageView" = type <{ %"class.vk::Image"*, i32, %"class.vk::Format", %struct.VkComponentMapping, %struct.VkImageSubresourceRange, [4 x i8], %"class.vk::SamplerYcbcrConversion"*, %"union.vk::Identifier", [4 x i8] }>
%struct.VkShaderModuleCreateInfo = type { i32, i8*, i32, i64, i32* }
%"class.vk::ShaderModule" = type <{ i32, [4 x i8], i32*, i32, [4 x i8] }>
%struct.VkPipelineCacheCreateInfo = type { i32, i8*, i32, i64, i8* }
%"class.vk::PipelineCache" = type { i32 (...)**, i64, i8*, %"class.marl::mutex", %"class.std::__1::map.476", %"class.marl::mutex", %"class.std::__1::map.487" }
%"class.std::__1::map.476" = type { %"class.std::__1::__tree.477" }
%"class.std::__1::__tree.477" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.478", %"class.std::__1::__compressed_pair.482" }
%"class.std::__1::__compressed_pair.478" = type { %"struct.std::__1::__compressed_pair_elem.230" }
%"class.std::__1::__compressed_pair.482" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"class.std::__1::map.487" = type { %"class.std::__1::__tree.488" }
%"class.std::__1::__tree.488" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.489", %"class.std::__1::__compressed_pair.493" }
%"class.std::__1::__compressed_pair.489" = type { %"struct.std::__1::__compressed_pair_elem.230" }
%"class.std::__1::__compressed_pair.493" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%struct.VkGraphicsPipelineCreateInfo = type { i32, i8*, i32, i32, %struct.VkPipelineShaderStageCreateInfo*, %struct.VkPipelineVertexInputStateCreateInfo*, %struct.VkPipelineInputAssemblyStateCreateInfo*, %struct.VkPipelineTessellationStateCreateInfo*, %struct.VkPipelineViewportStateCreateInfo*, %struct.VkPipelineRasterizationStateCreateInfo*, %struct.VkPipelineMultisampleStateCreateInfo*, %struct.VkPipelineDepthStencilStateCreateInfo*, %struct.VkPipelineColorBlendStateCreateInfo*, %struct.VkPipelineDynamicStateCreateInfo*, %class.VkNonDispatchableHandle.10, %class.VkNonDispatchableHandle.12, i32, %class.VkNonDispatchableHandle.11, i32 }
%struct.VkPipelineShaderStageCreateInfo = type { i32, i8*, i32, i32, %class.VkNonDispatchableHandle.8, i8*, %struct.VkSpecializationInfo* }
%struct.VkSpecializationInfo = type { i32, %struct.VkSpecializationMapEntry*, i64, i8* }
%struct.VkSpecializationMapEntry = type { i32, i32, i64 }
%struct.VkPipelineVertexInputStateCreateInfo = type { i32, i8*, i32, i32, %struct.VkVertexInputBindingDescription*, i32, %struct.VkVertexInputAttributeDescription* }
%struct.VkVertexInputBindingDescription = type { i32, i32, i32 }
%struct.VkVertexInputAttributeDescription = type { i32, i32, i32, i32 }
%struct.VkPipelineInputAssemblyStateCreateInfo = type { i32, i8*, i32, i32, i32 }
%struct.VkPipelineTessellationStateCreateInfo = type { i32, i8*, i32, i32 }
%struct.VkPipelineViewportStateCreateInfo = type { i32, i8*, i32, i32, %struct.VkViewport*, i32, %struct.VkRect2D* }
%struct.VkViewport = type { float, float, float, float, float, float }
%struct.VkRect2D = type { %struct.VkOffset2D, %struct.VkExtent2D }
%struct.VkOffset2D = type { i32, i32 }
%struct.VkExtent2D = type { i32, i32 }
%struct.VkPipelineRasterizationStateCreateInfo = type { i32, i8*, i32, i32, i32, i32, i32, i32, i32, float, float, float, float }
%struct.VkPipelineMultisampleStateCreateInfo = type { i32, i8*, i32, i32, i32, float, i32*, i32, i32 }
%struct.VkPipelineDepthStencilStateCreateInfo = type { i32, i8*, i32, i32, i32, i32, i32, i32, %struct.VkStencilOpState, %struct.VkStencilOpState, float, float }
%struct.VkStencilOpState = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.VkPipelineColorBlendStateCreateInfo = type { i32, i8*, i32, i32, i32, i32, %struct.VkPipelineColorBlendAttachmentState*, [4 x float] }
%struct.VkPipelineColorBlendAttachmentState = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.VkPipelineDynamicStateCreateInfo = type { i32, i8*, i32, i32, i32* }
%"class.vk::GraphicsPipeline" = type { %"class.vk::Pipeline.base", %"class.std::__1::shared_ptr.501", %"class.std::__1::shared_ptr.501", %"struct.vk::GraphicsState", %"struct.vk::IndexBuffer", %"struct.vk::Attachments", %"struct.vk::Inputs", [8 x i8] }
%"class.vk::Pipeline.base" = type <{ i32 (...)**, %"class.vk::PipelineLayout"*, %"class.vk::Device"*, i8 }>
%"class.vk::PipelineLayout" = type <{ i32, [4 x i8], [4 x %"struct.vk::PipelineLayout::DescriptorSet"], i32, i32, %struct.VkPushConstantRange*, %"struct.std::__1::atomic.42", [4 x i8] }>
%"struct.vk::PipelineLayout::DescriptorSet" = type { %"struct.vk::PipelineLayout::Binding"*, i32 }
%"struct.vk::PipelineLayout::Binding" = type { i32, i32, i32, i32 }
%struct.VkPushConstantRange = type { i32, i32, i32 }
%"class.std::__1::shared_ptr.501" = type { %"class.sw::SpirvShader"*, %"class.std::__1::__shared_weak_count"* }
%"class.sw::SpirvShader" = type { %"class.std::__1::vector.502", %"class.std::__1::unordered_map.509", %"class.std::__1::unordered_map.536", %"class.std::__1::unordered_map.563", %"class.std::__1::vector.590", %"class.std::__1::vector.597", %"class.std::__1::vector.597", %"class.std::__1::unordered_map.604", %"class.std::__1::unordered_map.604", %"struct.sw::SpirvShader::WorkgroupMemory", i32, %"struct.sw::SpirvShader::Modes", %"struct.sw::SpirvShader::Capabilities", %"class.std::__1::unordered_map.656", %"class.std::__1::unordered_map.680", %"class.std::__1::unordered_map.704", %"class.std::__1::unordered_map.731", %"class.std::__1::unordered_map.758", %"class.std::__1::unordered_set.785", %"class.sw::SpirvID", i8, i8, i32, %"struct.sw::SpirvShader::Impl" }
%"class.std::__1::vector.502" = type { %"class.std::__1::__vector_base.503" }
%"class.std::__1::__vector_base.503" = type { i32*, i32*, %"class.std::__1::__compressed_pair.504" }
%"class.std::__1::__compressed_pair.504" = type { %"struct.std::__1::__compressed_pair_elem.505" }
%"struct.std::__1::__compressed_pair_elem.505" = type { i32* }
%"class.std::__1::unordered_map.509" = type { %"class.std::__1::__hash_table.510" }
%"class.std::__1::__hash_table.510" = type <{ %"class.std::__1::unique_ptr.511", %"class.std::__1::__compressed_pair.521", %"class.std::__1::__compressed_pair.526", %"class.std::__1::__compressed_pair.530", [4 x i8] }>
%"class.std::__1::unique_ptr.511" = type { %"class.std::__1::__compressed_pair.512" }
%"class.std::__1::__compressed_pair.512" = type { %"struct.std::__1::__compressed_pair_elem.513", %"struct.std::__1::__compressed_pair_elem.515" }
%"struct.std::__1::__compressed_pair_elem.513" = type { %"struct.std::__1::__hash_node_base.514"** }
%"struct.std::__1::__hash_node_base.514" = type { %"struct.std::__1::__hash_node_base.514"* }
%"struct.std::__1::__compressed_pair_elem.515" = type { %"class.std::__1::__bucket_list_deallocator.516" }
%"class.std::__1::__bucket_list_deallocator.516" = type { %"class.std::__1::__compressed_pair.517" }
%"class.std::__1::__compressed_pair.517" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"class.std::__1::__compressed_pair.521" = type { %"struct.std::__1::__compressed_pair_elem.522" }
%"struct.std::__1::__compressed_pair_elem.522" = type { %"struct.std::__1::__hash_node_base.514" }
%"class.std::__1::__compressed_pair.526" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"class.std::__1::__compressed_pair.530" = type { %"struct.std::__1::__compressed_pair_elem.156" }
%"class.std::__1::unordered_map.536" = type { %"class.std::__1::__hash_table.537" }
%"class.std::__1::__hash_table.537" = type <{ %"class.std::__1::unique_ptr.538", %"class.std::__1::__compressed_pair.548", %"class.std::__1::__compressed_pair.553", %"class.std::__1::__compressed_pair.557", [4 x i8] }>
%"class.std::__1::unique_ptr.538" = type { %"class.std::__1::__compressed_pair.539" }
%"class.std::__1::__compressed_pair.539" = type { %"struct.std::__1::__compressed_pair_elem.540", %"struct.std::__1::__compressed_pair_elem.542" }
%"struct.std::__1::__compressed_pair_elem.540" = type { %"struct.std::__1::__hash_node_base.541"** }
%"struct.std::__1::__hash_node_base.541" = type { %"struct.std::__1::__hash_node_base.541"* }
%"struct.std::__1::__compressed_pair_elem.542" = type { %"class.std::__1::__bucket_list_deallocator.543" }
%"class.std::__1::__bucket_list_deallocator.543" = type { %"class.std::__1::__compressed_pair.544" }
%"class.std::__1::__compressed_pair.544" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"class.std::__1::__compressed_pair.548" = type { %"struct.std::__1::__compressed_pair_elem.549" }
%"struct.std::__1::__compressed_pair_elem.549" = type { %"struct.std::__1::__hash_node_base.541" }
%"class.std::__1::__compressed_pair.553" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"class.std::__1::__compressed_pair.557" = type { %"struct.std::__1::__compressed_pair_elem.156" }
%"class.std::__1::unordered_map.563" = type { %"class.std::__1::__hash_table.564" }
%"class.std::__1::__hash_table.564" = type <{ %"class.std::__1::unique_ptr.565", %"class.std::__1::__compressed_pair.575", %"class.std::__1::__compressed_pair.580", %"class.std::__1::__compressed_pair.584", [4 x i8] }>
%"class.std::__1::unique_ptr.565" = type { %"class.std::__1::__compressed_pair.566" }
%"class.std::__1::__compressed_pair.566" = type { %"struct.std::__1::__compressed_pair_elem.567", %"struct.std::__1::__compressed_pair_elem.569" }
%"struct.std::__1::__compressed_pair_elem.567" = type { %"struct.std::__1::__hash_node_base.568"** }
%"struct.std::__1::__hash_node_base.568" = type { %"struct.std::__1::__hash_node_base.568"* }
%"struct.std::__1::__compressed_pair_elem.569" = type { %"class.std::__1::__bucket_list_deallocator.570" }
%"class.std::__1::__bucket_list_deallocator.570" = type { %"class.std::__1::__compressed_pair.571" }
%"class.std::__1::__compressed_pair.571" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"class.std::__1::__compressed_pair.575" = type { %"struct.std::__1::__compressed_pair_elem.576" }
%"struct.std::__1::__compressed_pair_elem.576" = type { %"struct.std::__1::__hash_node_base.568" }
%"class.std::__1::__compressed_pair.580" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"class.std::__1::__compressed_pair.584" = type { %"struct.std::__1::__compressed_pair_elem.156" }
%"class.std::__1::vector.590" = type { %"class.std::__1::__vector_base.591" }
%"class.std::__1::__vector_base.591" = type { i32*, i32*, %"class.std::__1::__compressed_pair.592" }
%"class.std::__1::__compressed_pair.592" = type { %"struct.std::__1::__compressed_pair_elem.593" }
%"struct.std::__1::__compressed_pair_elem.593" = type { i32* }
%"class.std::__1::vector.597" = type { %"class.std::__1::__vector_base.598" }
%"class.std::__1::__vector_base.598" = type { %"struct.sw::SpirvShader::InterfaceComponent"*, %"struct.sw::SpirvShader::InterfaceComponent"*, %"class.std::__1::__compressed_pair.599" }
%"class.std::__1::__compressed_pair.599" = type { %"struct.std::__1::__compressed_pair_elem.600" }
%"struct.std::__1::__compressed_pair_elem.600" = type { %"struct.sw::SpirvShader::InterfaceComponent"* }
%"class.std::__1::unordered_map.604" = type { %"class.std::__1::__hash_table.605" }
%"class.std::__1::__hash_table.605" = type <{ %"class.std::__1::unique_ptr.606", %"class.std::__1::__compressed_pair.616", %"class.std::__1::__compressed_pair.621", %"class.std::__1::__compressed_pair.626", [4 x i8] }>
%"class.std::__1::unique_ptr.606" = type { %"class.std::__1::__compressed_pair.607" }
%"class.std::__1::__compressed_pair.607" = type { %"struct.std::__1::__compressed_pair_elem.608", %"struct.std::__1::__compressed_pair_elem.610" }
%"struct.std::__1::__compressed_pair_elem.608" = type { %"struct.std::__1::__hash_node_base.609"** }
%"struct.std::__1::__hash_node_base.609" = type { %"struct.std::__1::__hash_node_base.609"* }
%"struct.std::__1::__compressed_pair_elem.610" = type { %"class.std::__1::__bucket_list_deallocator.611" }
%"class.std::__1::__bucket_list_deallocator.611" = type { %"class.std::__1::__compressed_pair.612" }
%"class.std::__1::__compressed_pair.612" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"class.std::__1::__compressed_pair.616" = type { %"struct.std::__1::__compressed_pair_elem.617" }
%"struct.std::__1::__compressed_pair_elem.617" = type { %"struct.std::__1::__hash_node_base.609" }
%"class.std::__1::__compressed_pair.621" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"class.std::__1::__compressed_pair.626" = type { %"struct.std::__1::__compressed_pair_elem.156" }
%"struct.sw::SpirvShader::WorkgroupMemory" = type { i32, [4 x i8], %"class.std::__1::unordered_map.632" }
%"class.std::__1::unordered_map.632" = type { %"class.std::__1::__hash_table.633" }
%"class.std::__1::__hash_table.633" = type <{ %"class.std::__1::unique_ptr.634", %"class.std::__1::__compressed_pair.644", %"class.std::__1::__compressed_pair.649", %"class.std::__1::__compressed_pair.652", [4 x i8] }>
%"class.std::__1::unique_ptr.634" = type { %"class.std::__1::__compressed_pair.635" }
%"class.std::__1::__compressed_pair.635" = type { %"struct.std::__1::__compressed_pair_elem.636", %"struct.std::__1::__compressed_pair_elem.638" }
%"struct.std::__1::__compressed_pair_elem.636" = type { %"struct.std::__1::__hash_node_base.637"** }
%"struct.std::__1::__hash_node_base.637" = type { %"struct.std::__1::__hash_node_base.637"* }
%"struct.std::__1::__compressed_pair_elem.638" = type { %"class.std::__1::__bucket_list_deallocator.639" }
%"class.std::__1::__bucket_list_deallocator.639" = type { %"class.std::__1::__compressed_pair.640" }
%"class.std::__1::__compressed_pair.640" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"class.std::__1::__compressed_pair.644" = type { %"struct.std::__1::__compressed_pair_elem.645" }
%"struct.std::__1::__compressed_pair_elem.645" = type { %"struct.std::__1::__hash_node_base.637" }
%"class.std::__1::__compressed_pair.649" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"class.std::__1::__compressed_pair.652" = type { %"struct.std::__1::__compressed_pair_elem.156" }
%"struct.sw::SpirvShader::Modes" = type { i16, i32, i32, i32 }
%"struct.sw::SpirvShader::Capabilities" = type { i32 }
%"class.std::__1::unordered_map.656" = type { %"class.std::__1::__hash_table.657" }
%"class.std::__1::__hash_table.657" = type <{ %"class.std::__1::unique_ptr.658", %"class.std::__1::__compressed_pair.668", %"class.std::__1::__compressed_pair.673", %"class.std::__1::__compressed_pair.676", [4 x i8] }>
%"class.std::__1::unique_ptr.658" = type { %"class.std::__1::__compressed_pair.659" }
%"class.std::__1::__compressed_pair.659" = type { %"struct.std::__1::__compressed_pair_elem.660", %"struct.std::__1::__compressed_pair_elem.662" }
%"struct.std::__1::__compressed_pair_elem.660" = type { %"struct.std::__1::__hash_node_base.661"** }
%"struct.std::__1::__hash_node_base.661" = type { %"struct.std::__1::__hash_node_base.661"* }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"class.std::__1::__bucket_list_deallocator.663" }
%"class.std::__1::__bucket_list_deallocator.663" = type { %"class.std::__1::__compressed_pair.664" }
%"class.std::__1::__compressed_pair.664" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"class.std::__1::__compressed_pair.668" = type { %"struct.std::__1::__compressed_pair_elem.669" }
%"struct.std::__1::__compressed_pair_elem.669" = type { %"struct.std::__1::__hash_node_base.661" }
%"class.std::__1::__compressed_pair.673" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"class.std::__1::__compressed_pair.676" = type { %"struct.std::__1::__compressed_pair_elem.156" }
%"class.std::__1::unordered_map.680" = type { %"class.std::__1::__hash_table.681" }
%"class.std::__1::__hash_table.681" = type <{ %"class.std::__1::unique_ptr.682", %"class.std::__1::__compressed_pair.692", %"class.std::__1::__compressed_pair.697", %"class.std::__1::__compressed_pair.700", [4 x i8] }>
%"class.std::__1::unique_ptr.682" = type { %"class.std::__1::__compressed_pair.683" }
%"class.std::__1::__compressed_pair.683" = type { %"struct.std::__1::__compressed_pair_elem.684", %"struct.std::__1::__compressed_pair_elem.686" }
%"struct.std::__1::__compressed_pair_elem.684" = type { %"struct.std::__1::__hash_node_base.685"** }
%"struct.std::__1::__hash_node_base.685" = type { %"struct.std::__1::__hash_node_base.685"* }
%"struct.std::__1::__compressed_pair_elem.686" = type { %"class.std::__1::__bucket_list_deallocator.687" }
%"class.std::__1::__bucket_list_deallocator.687" = type { %"class.std::__1::__compressed_pair.688" }
%"class.std::__1::__compressed_pair.688" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"class.std::__1::__compressed_pair.692" = type { %"struct.std::__1::__compressed_pair_elem.693" }
%"struct.std::__1::__compressed_pair_elem.693" = type { %"struct.std::__1::__hash_node_base.685" }
%"class.std::__1::__compressed_pair.697" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"class.std::__1::__compressed_pair.700" = type { %"struct.std::__1::__compressed_pair_elem.156" }
%"class.std::__1::unordered_map.704" = type { %"class.std::__1::__hash_table.705" }
%"class.std::__1::__hash_table.705" = type <{ %"class.std::__1::unique_ptr.706", %"class.std::__1::__compressed_pair.716", %"class.std::__1::__compressed_pair.721", %"class.std::__1::__compressed_pair.725", [4 x i8] }>
%"class.std::__1::unique_ptr.706" = type { %"class.std::__1::__compressed_pair.707" }
%"class.std::__1::__compressed_pair.707" = type { %"struct.std::__1::__compressed_pair_elem.708", %"struct.std::__1::__compressed_pair_elem.710" }
%"struct.std::__1::__compressed_pair_elem.708" = type { %"struct.std::__1::__hash_node_base.709"** }
%"struct.std::__1::__hash_node_base.709" = type { %"struct.std::__1::__hash_node_base.709"* }
%"struct.std::__1::__compressed_pair_elem.710" = type { %"class.std::__1::__bucket_list_deallocator.711" }
%"class.std::__1::__bucket_list_deallocator.711" = type { %"class.std::__1::__compressed_pair.712" }
%"class.std::__1::__compressed_pair.712" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"class.std::__1::__compressed_pair.716" = type { %"struct.std::__1::__compressed_pair_elem.717" }
%"struct.std::__1::__compressed_pair_elem.717" = type { %"struct.std::__1::__hash_node_base.709" }
%"class.std::__1::__compressed_pair.721" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"class.std::__1::__compressed_pair.725" = type { %"struct.std::__1::__compressed_pair_elem.156" }
%"class.std::__1::unordered_map.731" = type { %"class.std::__1::__hash_table.732" }
%"class.std::__1::__hash_table.732" = type <{ %"class.std::__1::unique_ptr.733", %"class.std::__1::__compressed_pair.743", %"class.std::__1::__compressed_pair.748", %"class.std::__1::__compressed_pair.752", [4 x i8] }>
%"class.std::__1::unique_ptr.733" = type { %"class.std::__1::__compressed_pair.734" }
%"class.std::__1::__compressed_pair.734" = type { %"struct.std::__1::__compressed_pair_elem.735", %"struct.std::__1::__compressed_pair_elem.737" }
%"struct.std::__1::__compressed_pair_elem.735" = type { %"struct.std::__1::__hash_node_base.736"** }
%"struct.std::__1::__hash_node_base.736" = type { %"struct.std::__1::__hash_node_base.736"* }
%"struct.std::__1::__compressed_pair_elem.737" = type { %"class.std::__1::__bucket_list_deallocator.738" }
%"class.std::__1::__bucket_list_deallocator.738" = type { %"class.std::__1::__compressed_pair.739" }
%"class.std::__1::__compressed_pair.739" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"class.std::__1::__compressed_pair.743" = type { %"struct.std::__1::__compressed_pair_elem.744" }
%"struct.std::__1::__compressed_pair_elem.744" = type { %"struct.std::__1::__hash_node_base.736" }
%"class.std::__1::__compressed_pair.748" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"class.std::__1::__compressed_pair.752" = type { %"struct.std::__1::__compressed_pair_elem.156" }
%"class.std::__1::unordered_map.758" = type { %"class.std::__1::__hash_table.759" }
%"class.std::__1::__hash_table.759" = type <{ %"class.std::__1::unique_ptr.760", %"class.std::__1::__compressed_pair.770", %"class.std::__1::__compressed_pair.775", %"class.std::__1::__compressed_pair.779", [4 x i8] }>
%"class.std::__1::unique_ptr.760" = type { %"class.std::__1::__compressed_pair.761" }
%"class.std::__1::__compressed_pair.761" = type { %"struct.std::__1::__compressed_pair_elem.762", %"struct.std::__1::__compressed_pair_elem.764" }
%"struct.std::__1::__compressed_pair_elem.762" = type { %"struct.std::__1::__hash_node_base.763"** }
%"struct.std::__1::__hash_node_base.763" = type { %"struct.std::__1::__hash_node_base.763"* }
%"struct.std::__1::__compressed_pair_elem.764" = type { %"class.std::__1::__bucket_list_deallocator.765" }
%"class.std::__1::__bucket_list_deallocator.765" = type { %"class.std::__1::__compressed_pair.766" }
%"class.std::__1::__compressed_pair.766" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"class.std::__1::__compressed_pair.770" = type { %"struct.std::__1::__compressed_pair_elem.771" }
%"struct.std::__1::__compressed_pair_elem.771" = type { %"struct.std::__1::__hash_node_base.763" }
%"class.std::__1::__compressed_pair.775" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"class.std::__1::__compressed_pair.779" = type { %"struct.std::__1::__compressed_pair_elem.156" }
%"class.std::__1::unordered_set.785" = type { %"class.std::__1::__hash_table.786" }
%"class.std::__1::__hash_table.786" = type <{ %"class.std::__1::unique_ptr.787", %"class.std::__1::__compressed_pair.797", %"class.std::__1::__compressed_pair.802", %"class.std::__1::__compressed_pair.804", [4 x i8] }>
%"class.std::__1::unique_ptr.787" = type { %"class.std::__1::__compressed_pair.788" }
%"class.std::__1::__compressed_pair.788" = type { %"struct.std::__1::__compressed_pair_elem.789", %"struct.std::__1::__compressed_pair_elem.791" }
%"struct.std::__1::__compressed_pair_elem.789" = type { %"struct.std::__1::__hash_node_base.790"** }
%"struct.std::__1::__hash_node_base.790" = type { %"struct.std::__1::__hash_node_base.790"* }
%"struct.std::__1::__compressed_pair_elem.791" = type { %"class.std::__1::__bucket_list_deallocator.792" }
%"class.std::__1::__bucket_list_deallocator.792" = type { %"class.std::__1::__compressed_pair.793" }
%"class.std::__1::__compressed_pair.793" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"class.std::__1::__compressed_pair.797" = type { %"struct.std::__1::__compressed_pair_elem.798" }
%"struct.std::__1::__compressed_pair_elem.798" = type { %"struct.std::__1::__hash_node_base.790" }
%"class.std::__1::__compressed_pair.802" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"class.std::__1::__compressed_pair.804" = type { %"struct.std::__1::__compressed_pair_elem.156" }
%"class.sw::SpirvID" = type { i32 }
%"struct.sw::SpirvShader::Impl" = type { %"struct.sw::SpirvShader::Impl::Debugger"* }
%"struct.sw::SpirvShader::Impl::Debugger" = type opaque
%"struct.vk::GraphicsState" = type { %"class.vk::PipelineLayout"*, i8, i32, i32, i32, i8, %struct.VkStencilOpState, %struct.VkStencilOpState, i32, i32, i32, i32, float, float, float, float, float, i8, i8, i8, i8, i32, i8, i8, i8, float, [8 x i32], i32, i32, i8, i8, float, i8, %struct.VkRect2D, %struct.VkViewport, [12 x i8], %"struct.sw::vec.73", [8 x %"struct.vk::BlendState"] }
%"struct.vk::IndexBuffer" = type <{ %"struct.vk::VertexInputBinding", i32, [4 x i8] }>
%"struct.vk::VertexInputBinding" = type { %"class.vk::Buffer"*, i64 }
%"struct.vk::Attachments" = type { [8 x %"class.vk::ImageView"*], %"class.vk::ImageView"*, %"class.vk::ImageView"* }
%"struct.vk::Inputs" = type { [16 x %"struct.vk::VertexInputBinding"], %"struct.std::__1::array.809", %"struct.std::__1::array", %"struct.std::__1::array.102", [32 x %"struct.sw::Stream"] }
%"struct.std::__1::array.809" = type { [4 x %"class.vk::DescriptorSet"*] }
%"class.vk::DescriptorSet" = type <{ %"struct.vk::DescriptorSetHeader", [1 x i8], [15 x i8] }>
%"struct.vk::DescriptorSetHeader" = type { %"class.vk::DescriptorSetLayout"*, %"class.marl::mutex" }
%"class.vk::DescriptorSetLayout" = type { i32, i32, %"struct.vk::DescriptorSetLayout::Binding"* }
%"struct.vk::DescriptorSetLayout::Binding" = type { i32, i32, %"class.vk::Sampler"**, i32 }
%"class.vk::Sampler" = type { %"struct.vk::SamplerState.base", i32 }
%"struct.vk::SamplerState.base" = type <{ i32, i32, i32, i32, i32, i32, float, i32, float, i32, i32, float, float, i32, i32, i32, i32, i8, i8 }>
%"struct.sw::Stream" = type { i8*, i32, i32, i32, i32, i32, i32 }
%struct.VkComputePipelineCreateInfo = type { i32, i8*, i32, %struct.VkPipelineShaderStageCreateInfo, %class.VkNonDispatchableHandle.10, %class.VkNonDispatchableHandle.11, i32 }
%"class.vk::ComputePipeline" = type { %"class.vk::Pipeline.base", %"class.std::__1::shared_ptr.501", %"class.std::__1::shared_ptr.819" }
%"class.std::__1::shared_ptr.819" = type { %"class.sw::ComputeProgram"*, %"class.std::__1::__shared_weak_count"* }
%"class.sw::ComputeProgram" = type opaque
%"class.vk::Pipeline" = type <{ i32 (...)**, %"class.vk::PipelineLayout"*, %"class.vk::Device"*, i8, [7 x i8] }>
%struct.VkPipelineLayoutCreateInfo = type { i32, i8*, i32, i32, %class.VkNonDispatchableHandle.13*, i32, %struct.VkPushConstantRange* }
%struct.VkSamplerCreateInfo = type { i32, i8*, i32, i32, i32, i32, i32, i32, i32, float, i32, float, i32, i32, float, float, i32, i32 }
%struct.VkDescriptorSetLayoutCreateInfo = type { i32, i8*, i32, i32, %struct.VkDescriptorSetLayoutBinding* }
%struct.VkDescriptorSetLayoutBinding = type { i32, i32, i32, i32, %class.VkNonDispatchableHandle.14* }
%struct.VkDescriptorPoolCreateInfo = type { i32, i8*, i32, i32, i32, %struct.VkDescriptorPoolSize* }
%struct.VkDescriptorPoolSize = type { i32, i32 }
%"class.vk::DescriptorPool" = type { %"class.std::__1::set.822", i8*, i64 }
%"class.std::__1::set.822" = type { %"class.std::__1::__tree.823" }
%"class.std::__1::__tree.823" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.824", %"class.std::__1::__compressed_pair.828" }
%"class.std::__1::__compressed_pair.824" = type { %"struct.std::__1::__compressed_pair_elem.230" }
%"class.std::__1::__compressed_pair.828" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.vk::DescriptorPool::Node" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.vk::DescriptorPool::Node" = type { i8*, i64 }
%struct.VkDescriptorSetAllocateInfo = type { i32, i8*, %class.VkNonDispatchableHandle.16, i32, %class.VkNonDispatchableHandle.13* }
%struct.VkWriteDescriptorSet = type { i32, i8*, %class.VkNonDispatchableHandle.15, i32, i32, i32, i32, %struct.VkDescriptorImageInfo*, %struct.VkDescriptorBufferInfo*, %class.VkNonDispatchableHandle.6* }
%struct.VkDescriptorImageInfo = type { %class.VkNonDispatchableHandle.14, %class.VkNonDispatchableHandle.7, i32 }
%struct.VkDescriptorBufferInfo = type { %class.VkNonDispatchableHandle, i64, i64 }
%struct.VkCopyDescriptorSet = type { i32, i8*, %class.VkNonDispatchableHandle.15, i32, i32, %class.VkNonDispatchableHandle.15, i32, i32, i32 }
%struct.VkFramebufferCreateInfo = type { i32, i8*, i32, %class.VkNonDispatchableHandle.12, i32, %class.VkNonDispatchableHandle.7*, i32, i32, i32 }
%"class.vk::Framebuffer" = type <{ i32, [4 x i8], %"class.vk::ImageView"**, %struct.VkExtent3D, [4 x i8] }>
%struct.VkRenderPassCreateInfo = type { i32, i8*, i32, i32, %struct.VkAttachmentDescription*, i32, %struct.VkSubpassDescription*, i32, %struct.VkSubpassDependency* }
%struct.VkAttachmentDescription = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.VkSubpassDescription = type { i32, i32, i32, %struct.VkAttachmentReference*, i32, %struct.VkAttachmentReference*, %struct.VkAttachmentReference*, %struct.VkAttachmentReference*, i32, i32* }
%struct.VkAttachmentReference = type { i32, i32 }
%struct.VkSubpassDependency = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.VkInputAttachmentAspectReference = type { i32, i32, i32 }
%"class.vk::RenderPass" = type { i32, %struct.VkAttachmentDescription*, i32, %struct.VkSubpassDescription*, %struct.VkSubpassDescriptionDepthStencilResolve*, i32, %struct.VkSubpassDependency*, i32*, i32*, i32* }
%struct.VkSubpassDescriptionDepthStencilResolve = type { i32, i8*, i32, i32, %struct.VkAttachmentReference2* }
%struct.VkAttachmentReference2 = type { i32, i8*, i32, i32, i32 }
%struct.VkRenderPassCreateInfo2 = type { i32, i8*, i32, i32, %struct.VkAttachmentDescription2*, i32, %struct.VkSubpassDescription2*, i32, %struct.VkSubpassDependency2*, i32, i32* }
%struct.VkAttachmentDescription2 = type { i32, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.VkSubpassDescription2 = type { i32, i8*, i32, i32, i32, i32, %struct.VkAttachmentReference2*, i32, %struct.VkAttachmentReference2*, %struct.VkAttachmentReference2*, %struct.VkAttachmentReference2*, i32, i32* }
%struct.VkSubpassDependency2 = type { i32, i8*, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.VkCommandPoolCreateInfo = type { i32, i8*, i32, i32 }
%"class.vk::CommandPool" = type { %"class.std::__1::set.836" }
%"class.std::__1::set.836" = type { %"class.std::__1::__tree.837" }
%"class.std::__1::__tree.837" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.838", %"class.std::__1::__compressed_pair.842" }
%"class.std::__1::__compressed_pair.838" = type { %"struct.std::__1::__compressed_pair_elem.230" }
%"class.std::__1::__compressed_pair.842" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"class.std::__1::__tree_node.920" = type { %"class.std::__1::__tree_node_base.base", %struct.VkCommandBuffer_T* }
%struct.VkCommandBufferAllocateInfo = type { i32, i8*, %class.VkNonDispatchableHandle.18, i32, i32 }
%struct.VkCommandBufferBeginInfo = type { i32, i8*, i32, %struct.VkCommandBufferInheritanceInfo* }
%struct.VkCommandBufferInheritanceInfo = type { i32, i8*, %class.VkNonDispatchableHandle.12, i32, %class.VkNonDispatchableHandle.17, i32, i32, i32 }
%"class.vk::DispatchableObject.884" = type { %union.VK_LOADER_DATA, %"class.vk::CommandBuffer" }
%"class.vk::CommandBuffer" = type { %"class.vk::Device"*, i32, i32, %"class.std::__1::vector.846" }
%"class.std::__1::vector.846" = type { %"class.std::__1::__vector_base.847" }
%"class.std::__1::__vector_base.847" = type { %"class.std::__1::unique_ptr.848"*, %"class.std::__1::unique_ptr.848"*, %"class.std::__1::__compressed_pair.849" }
%"class.std::__1::unique_ptr.848" = type opaque
%"class.std::__1::__compressed_pair.849" = type { %"struct.std::__1::__compressed_pair_elem.850" }
%"struct.std::__1::__compressed_pair_elem.850" = type { %"class.std::__1::unique_ptr.848"* }
%struct.VkBufferCopy = type { i64, i64, i64 }
%struct.VkImageCopy = type { %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkExtent3D }
%struct.VkImageSubresourceLayers = type { i32, i32, i32, i32 }
%struct.VkImageBlit = type { %struct.VkImageSubresourceLayers, [2 x %struct.VkOffset3D], %struct.VkImageSubresourceLayers, [2 x %struct.VkOffset3D] }
%struct.VkBufferImageCopy = type { i64, i32, i32, %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkExtent3D }
%union.VkClearColorValue = type { [4 x float] }
%struct.VkClearDepthStencilValue = type { float, i32 }
%struct.VkClearAttachment = type { i32, i32, %union.VkClearValue }
%union.VkClearValue = type { %union.VkClearColorValue }
%struct.VkClearRect = type { %struct.VkRect2D, i32, i32 }
%struct.VkImageResolve = type { %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkExtent3D }
%struct.VkMemoryBarrier = type { i32, i8*, i32, i32 }
%struct.VkBufferMemoryBarrier = type { i32, i8*, i32, i32, i32, i32, %class.VkNonDispatchableHandle, i64, i64 }
%struct.VkImageMemoryBarrier = type { i32, i8*, i32, i32, i32, i32, i32, i32, %class.VkNonDispatchableHandle.0, %struct.VkImageSubresourceRange }
%struct.VkRenderPassBeginInfo = type { i32, i8*, %class.VkNonDispatchableHandle.12, %class.VkNonDispatchableHandle.17, %struct.VkRect2D, i32, %union.VkClearValue* }
%struct.VkSubpassBeginInfo = type { i32, i8*, i32 }
%struct.VkRenderPassAttachmentBeginInfo = type { i32, i8*, i32, %class.VkNonDispatchableHandle.7* }
%struct.VkSubpassEndInfo = type { i32, i8* }
%struct.VkBindBufferMemoryInfo = type { i32, i8*, %class.VkNonDispatchableHandle, %class.VkNonDispatchableHandle.3, i64 }
%struct.VkBindImageMemoryInfo = type { i32, i8*, %class.VkNonDispatchableHandle.0, %class.VkNonDispatchableHandle.3, i64 }
%"class.vk::SwapchainKHR" = type <{ %"class.vk::SurfaceKHR"*, %"class.vk::PresentImage"*, i32, i8, [3 x i8] }>
%"class.vk::SurfaceKHR" = type { i32 (...)**, %"class.vk::SwapchainKHR"* }
%"class.vk::PresentImage" = type <{ %"class.vk::Image"*, %"class.vk::DeviceMemory"*, i32, [4 x i8] }>
%struct.VkPhysicalDeviceGroupProperties = type { i32, i8*, i32, [32 x %struct.VkPhysicalDevice_T*], i32 }
%struct.VkImageMemoryRequirementsInfo2 = type { i32, i8*, %class.VkNonDispatchableHandle.0 }
%struct.VkMemoryRequirements2 = type { i32, i8*, %struct.VkMemoryRequirements }
%struct.VkMemoryDedicatedRequirements = type { i32, i8*, i32, i32 }
%struct.VkBufferMemoryRequirementsInfo2 = type { i32, i8*, %class.VkNonDispatchableHandle }
%struct.VkImageSparseMemoryRequirementsInfo2 = type { i32, i8*, %class.VkNonDispatchableHandle.0 }
%struct.VkSparseImageMemoryRequirements2 = type { i32, i8*, %struct.VkSparseImageMemoryRequirements }
%struct.VkPhysicalDeviceFeatures2 = type { i32, i8*, %struct.VkPhysicalDeviceFeatures }
%struct.VkPhysicalDeviceProperties2 = type { i32, i8*, %struct.VkPhysicalDeviceProperties }
%struct.VkPhysicalDeviceIDProperties = type { i32, i8*, [16 x i8], [16 x i8], [8 x i8], i32, i32 }
%struct.VkPhysicalDeviceMaintenance3Properties = type { i32, i8*, i32, i64 }
%struct.VkPhysicalDeviceMultiviewProperties = type { i32, i8*, i32, i32 }
%struct.VkPhysicalDevicePointClippingProperties = type { i32, i8*, i32 }
%struct.VkPhysicalDeviceProtectedMemoryProperties = type { i32, i8*, i32 }
%struct.VkPhysicalDeviceSubgroupProperties = type { i32, i8*, i32, i32, i32, i32 }
%struct.VkPhysicalDeviceExternalMemoryHostPropertiesEXT = type { i32, i8*, i64 }
%struct.VkPhysicalDeviceDriverProperties = type { i32, i8*, i32, [256 x i8], [256 x i8], %struct.VkConformanceVersion }
%struct.VkConformanceVersion = type { i8, i8, i8, i8 }
%struct.VkPhysicalDeviceLineRasterizationPropertiesEXT = type { i32, i8*, i32 }
%struct.VkPhysicalDeviceProvokingVertexPropertiesEXT = type { i32, i8*, i32, i32 }
%struct.VkPhysicalDeviceFloatControlsProperties = type { i32, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.VkPhysicalDeviceVulkan11Properties = type { i32, i8*, [16 x i8], [16 x i8], [8 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64 }
%struct.VkPhysicalDeviceSamplerFilterMinmaxProperties = type { i32, i8*, i32, i32 }
%struct.VkPhysicalDeviceTimelineSemaphoreProperties = type { i32, i8*, i64 }
%struct.VkPhysicalDeviceVulkan12Properties = type { i32, i8*, i32, [256 x i8], [256 x i8], %struct.VkConformanceVersion, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32 }
%struct.VkPhysicalDeviceDescriptorIndexingProperties = type { i32, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.VkPhysicalDeviceDepthStencilResolveProperties = type { i32, i8*, i32, i32, i32, i32 }
%struct.VkFormatProperties2 = type { i32, i8*, %struct.VkFormatProperties }
%struct.VkQueueFamilyProperties2 = type { i32, i8*, %struct.VkQueueFamilyProperties }
%struct.VkPhysicalDeviceMemoryProperties2 = type { i32, i8*, %struct.VkPhysicalDeviceMemoryProperties }
%struct.VkPhysicalDeviceSparseImageFormatInfo2 = type { i32, i8*, i32, i32, i32, i32, i32 }
%struct.VkSparseImageFormatProperties2 = type { i32, i8*, %struct.VkSparseImageFormatProperties }
%struct.VkDeviceQueueInfo2 = type { i32, i8*, i32, i32, i32 }
%struct.VkSamplerYcbcrConversionCreateInfo = type { i32, i8*, i32, i32, i32, %struct.VkComponentMapping, i32, i32, i32, i32 }
%struct.VkDescriptorUpdateTemplateCreateInfo = type { i32, i8*, i32, i32, %struct.VkDescriptorUpdateTemplateEntry*, i32, %class.VkNonDispatchableHandle.13, i32, %class.VkNonDispatchableHandle.10, i32 }
%struct.VkDescriptorUpdateTemplateEntry = type { i32, i32, i32, i32, i64, i64 }
%"class.vk::DescriptorUpdateTemplate" = type { i32, %struct.VkDescriptorUpdateTemplateEntry*, %"class.vk::DescriptorSetLayout"* }
%struct.VkPhysicalDeviceExternalBufferInfo = type { i32, i8*, i32, i32, i32 }
%struct.VkExternalBufferProperties = type { i32, i8*, %struct.VkExternalMemoryProperties }
%struct.VkPhysicalDeviceExternalFenceInfo = type { i32, i8*, i32 }
%struct.VkExternalFenceProperties = type { i32, i8*, i32, i32, i32 }
%struct.VkPhysicalDeviceExternalSemaphoreInfo = type { i32, i8*, i32 }
%struct.VkExternalSemaphoreProperties = type { i32, i8*, i32, i32, i32 }
%struct.VkDescriptorSetLayoutSupport = type { i32, i8*, i32 }
%struct.VkDebugUtilsObjectTagInfoEXT = type { i32, i8*, i32, i64, i64, i64, i8* }
%struct.VkXcbSurfaceCreateInfoKHR = type { i32, i8*, i32, %struct.xcb_connection_t*, i32 }
%struct.xcb_connection_t = type opaque
%"class.vk::XcbSurfaceKHR" = type { %"class.vk::SurfaceKHR", %struct.xcb_connection_t*, i32, [4 x i8], %"class.std::__1::unordered_map.922" }
%"class.std::__1::unordered_map.922" = type { %"class.std::__1::__hash_table.923" }
%"class.std::__1::__hash_table.923" = type <{ %"class.std::__1::unique_ptr.924", %"class.std::__1::__compressed_pair.934", %"class.std::__1::__compressed_pair.939", %"class.std::__1::__compressed_pair.944", [4 x i8] }>
%"class.std::__1::unique_ptr.924" = type { %"class.std::__1::__compressed_pair.925" }
%"class.std::__1::__compressed_pair.925" = type { %"struct.std::__1::__compressed_pair_elem.926", %"struct.std::__1::__compressed_pair_elem.928" }
%"struct.std::__1::__compressed_pair_elem.926" = type { %"struct.std::__1::__hash_node_base.927"** }
%"struct.std::__1::__hash_node_base.927" = type { %"struct.std::__1::__hash_node_base.927"* }
%"struct.std::__1::__compressed_pair_elem.928" = type { %"class.std::__1::__bucket_list_deallocator.929" }
%"class.std::__1::__bucket_list_deallocator.929" = type { %"class.std::__1::__compressed_pair.930" }
%"class.std::__1::__compressed_pair.930" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"class.std::__1::__compressed_pair.934" = type { %"struct.std::__1::__compressed_pair_elem.935" }
%"struct.std::__1::__compressed_pair_elem.935" = type { %"struct.std::__1::__hash_node_base.927" }
%"class.std::__1::__compressed_pair.939" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"class.std::__1::__compressed_pair.944" = type { %"struct.std::__1::__compressed_pair_elem.156" }
%struct.VkXlibSurfaceCreateInfoKHR = type { i32, i8*, i32, %struct._XDisplay*, i64 }
%struct._XDisplay = type opaque
%"class.vk::XlibSurfaceKHR" = type { %"class.vk::SurfaceKHR", %struct._XDisplay*, i64, %struct._XGC*, %struct.Visual*, %"class.std::__1::unordered_map.951" }
%struct._XGC = type opaque
%struct.Visual = type { %struct._XExtData*, i64, i32, i64, i64, i64, i32, i32 }
%struct._XExtData = type { i32, %struct._XExtData*, i32 (%struct._XExtData*)*, i8* }
%"class.std::__1::unordered_map.951" = type { %"class.std::__1::__hash_table.952" }
%"class.std::__1::__hash_table.952" = type <{ %"class.std::__1::unique_ptr.953", %"class.std::__1::__compressed_pair.963", %"class.std::__1::__compressed_pair.968", %"class.std::__1::__compressed_pair.971", [4 x i8] }>
%"class.std::__1::unique_ptr.953" = type { %"class.std::__1::__compressed_pair.954" }
%"class.std::__1::__compressed_pair.954" = type { %"struct.std::__1::__compressed_pair_elem.955", %"struct.std::__1::__compressed_pair_elem.957" }
%"struct.std::__1::__compressed_pair_elem.955" = type { %"struct.std::__1::__hash_node_base.956"** }
%"struct.std::__1::__hash_node_base.956" = type { %"struct.std::__1::__hash_node_base.956"* }
%"struct.std::__1::__compressed_pair_elem.957" = type { %"class.std::__1::__bucket_list_deallocator.958" }
%"class.std::__1::__bucket_list_deallocator.958" = type { %"class.std::__1::__compressed_pair.959" }
%"class.std::__1::__compressed_pair.959" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"class.std::__1::__compressed_pair.963" = type { %"struct.std::__1::__compressed_pair_elem.964" }
%"struct.std::__1::__compressed_pair_elem.964" = type { %"struct.std::__1::__hash_node_base.956" }
%"class.std::__1::__compressed_pair.968" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"class.std::__1::__compressed_pair.971" = type { %"struct.std::__1::__compressed_pair_elem.156" }
%struct.VkHeadlessSurfaceCreateInfoEXT = type { i32, i8*, i32 }
%"class.vk::HeadlessSurfaceKHR" = type { %"class.vk::SurfaceKHR" }
%struct.VkSurfaceCapabilitiesKHR = type { i32, i32, %struct.VkExtent2D, %struct.VkExtent2D, %struct.VkExtent2D, i32, i32, i32, i32, i32 }
%struct.VkSurfaceFormatKHR = type { i32, i32 }
%struct.VkSwapchainCreateInfoKHR = type { i32, i8*, i32, %class.VkNonDispatchableHandle.21, i32, i32, i32, %struct.VkExtent2D, i32, i32, i32, i32, i32*, i32, i32, i32, i32, %class.VkNonDispatchableHandle.22 }
%struct.VkPresentInfoKHR = type { i32, i8*, i32, %class.VkNonDispatchableHandle.1*, i32, %class.VkNonDispatchableHandle.22*, i32*, i32* }
%struct.VkAcquireNextImageInfoKHR = type { i32, i8*, %class.VkNonDispatchableHandle.22, i64, %class.VkNonDispatchableHandle.1, %class.VkNonDispatchableHandle.2, i32 }
%struct.VkDeviceGroupPresentCapabilitiesKHR = type { i32, i8*, [32 x i32], i32 }
%struct.LibX11exports = type { %struct._XDisplay* (i8*)*, i32 (%struct._XDisplay*, i64, %struct.XWindowAttributes*)*, %struct.Screen* (%struct._XDisplay*)*, i32 (%struct.Screen*)*, i32 (%struct.Screen*)*, i32 (%struct.Screen*)*, %struct._XGC* (%struct._XDisplay*, i32)*, i32 (%struct._XDisplay*, i32)*, i32 (%struct._XDisplay*, i32, i32, i32, %struct.XVisualInfo*)*, %struct.Visual* (%struct._XDisplay*, i32)*, i32 (%struct._XDisplay*, %struct.XErrorEvent*)* (i32 (%struct._XDisplay*, %struct.XErrorEvent*)*)*, i32 (%struct._XDisplay*, i32)*, %struct._XImage* (%struct._XDisplay*, %struct.Visual*, i32, i32, i32, i8*, i32, i32, i32, i32)*, i32 (%struct._XDisplay*)*, i32 (%struct._XDisplay*, i64, %struct._XGC*, %struct._XImage*, i32, i32, i32, i32, i32, i32)*, i32 (%struct._XDisplay*, i64, %struct._XGC*, i32, i32, i8*, i32)*, i32 (%struct._XDisplay*)*, %struct._XImage* (%struct._XDisplay*, %struct.Visual*, i32, i32, i8*, %struct.XShmSegmentInfo*, i32, i32)*, i32 (%struct._XDisplay*, %struct.XShmSegmentInfo*)*, i32 (%struct._XDisplay*, %struct.XShmSegmentInfo*)*, i32 (%struct._XDisplay*, i64, %struct._XGC*, %struct._XImage*, i32, i32, i32, i32, i32, i32, i1)* }
%struct.XWindowAttributes = type { i32, i32, i32, i32, i32, i32, %struct.Visual*, i64, i32, i32, i32, i32, i64, i64, i32, i64, i32, i32, i64, i64, i64, i32, %struct.Screen* }
%struct.Screen = type { %struct._XExtData*, %struct._XDisplay*, i64, i32, i32, i32, i32, i32, %struct.Depth*, i32, %struct.Visual*, %struct._XGC*, i64, i64, i64, i32, i32, i32, i32, i64 }
%struct.Depth = type { i32, i32, %struct.Visual* }
%struct.XVisualInfo = type { %struct.Visual*, i64, i32, i32, i32, i64, i64, i64, i32, i32 }
%struct.XErrorEvent = type { i32, %struct._XDisplay*, i64, i64, i8, i8, i8 }
%struct._XImage = type { i32, i32, i32, i32, i8*, i32, i32, i32, i32, i32, i32, i32, i64, i64, i64, i8*, %"struct._XImage::funcs" }
%"struct._XImage::funcs" = type { {}*, i32 (%struct._XImage*)*, i64 (%struct._XImage*, i32, i32)*, i32 (%struct._XImage*, i32, i32, i64)*, %struct._XImage* (%struct._XImage*, i32, i32, i32, i32)*, i32 (%struct._XImage*, i64)* }
%struct.XShmSegmentInfo = type { i64, i32, i8*, i32 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.std::__1::__shared_ptr_emplace" = type { %"class.std::__1::__shared_weak_count", %"struct.std::__1::__shared_ptr_emplace<marl::Scheduler, std::__1::allocator<marl::Scheduler> >::_Storage" }
%"struct.std::__1::__shared_ptr_emplace<marl::Scheduler, std::__1::allocator<marl::Scheduler> >::_Storage" = type { [2304 x i8] }
%"struct.std::__1::__shared_ptr_emplace.893" = type { %"class.std::__1::__shared_weak_count", %"struct.std::__1::__shared_ptr_emplace<sw::CountedEvent, std::__1::allocator<sw::CountedEvent> >::_Storage" }
%"struct.std::__1::__shared_ptr_emplace<sw::CountedEvent, std::__1::allocator<sw::CountedEvent> >::_Storage" = type { [32 x i8] }
%"struct.std::__1::__shared_ptr_emplace.902" = type { %"class.std::__1::__shared_weak_count", %"struct.std::__1::__shared_ptr_emplace<marl::WaitGroup::Data, std::__1::allocator<marl::WaitGroup::Data> >::_Storage" }
%"struct.std::__1::__shared_ptr_emplace<marl::WaitGroup::Data, std::__1::allocator<marl::WaitGroup::Data> >::_Storage" = type { [192 x i8] }
%"class.std::__1::__shared_ptr_pointer" = type { %"class.std::__1::__shared_weak_count", %"class.std::__1::__compressed_pair.906" }
%"class.std::__1::__compressed_pair.906" = type { %"struct.std::__1::__compressed_pair_elem.907" }
%"struct.std::__1::__compressed_pair_elem.907" = type { %"class.std::__1::__compressed_pair.908" }
%"class.std::__1::__compressed_pair.908" = type { %"struct.std::__1::__compressed_pair_elem.909", %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.909" = type { %"struct.marl::Event::Shared"* }

$_ZNK23VkNonDispatchableHandleIP10VkBuffer_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP10VkBuffer_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP9VkImage_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP9VkImage_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP13VkSemaphore_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP13VkSemaphore_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP9VkFence_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP9VkFence_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP16VkDeviceMemory_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP16VkDeviceMemory_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP9VkEvent_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP9VkEvent_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP13VkQueryPool_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP13VkQueryPool_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP14VkBufferView_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP14VkBufferView_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP13VkImageView_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP13VkImageView_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP16VkShaderModule_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP16VkShaderModule_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP17VkPipelineCache_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP17VkPipelineCache_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP18VkPipelineLayout_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP18VkPipelineLayout_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP12VkPipeline_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP12VkPipeline_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP14VkRenderPass_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP14VkRenderPass_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP23VkDescriptorSetLayout_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP23VkDescriptorSetLayout_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP11VkSampler_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP11VkSampler_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP17VkDescriptorSet_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP17VkDescriptorSet_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP18VkDescriptorPool_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP18VkDescriptorPool_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP15VkFramebuffer_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP15VkFramebuffer_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP15VkCommandPool_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP15VkCommandPool_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP26VkSamplerYcbcrConversion_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP26VkSamplerYcbcrConversion_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP28VkDescriptorUpdateTemplate_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP28VkDescriptorUpdateTemplate_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP14VkSurfaceKHR_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP14VkSurfaceKHR_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP16VkSwapchainKHR_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP16VkSwapchainKHR_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP14VkDisplayKHR_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP14VkDisplayKHR_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP18VkDisplayModeKHR_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP18VkDisplayModeKHR_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP24VkDeferredOperationKHR_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP24VkDeferredOperationKHR_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP26VkDebugReportCallbackEXT_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP26VkDebugReportCallbackEXT_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP15VkCuModuleNVX_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP15VkCuModuleNVX_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP17VkCuFunctionNVX_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP17VkCuFunctionNVX_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP26VkDebugUtilsMessengerEXT_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP26VkDebugUtilsMessengerEXT_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP22VkValidationCacheEXT_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP22VkValidationCacheEXT_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP27VkAccelerationStructureNV_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP27VkAccelerationStructureNV_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP33VkPerformanceConfigurationINTEL_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP33VkPerformanceConfigurationINTEL_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP28VkIndirectCommandsLayoutNV_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP28VkIndirectCommandsLayoutNV_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP22VkPrivateDataSlotEXT_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP22VkPrivateDataSlotEXT_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP28VkAccelerationStructureKHR_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP28VkAccelerationStructureKHR_TEaSEm = comdat any

$_ZN2vk10ObjectBaseINS_19DebugUtilsMessengerE23VkNonDispatchableHandleIP26VkDebugUtilsMessengerEXT_TEE6CreateI34VkDebugUtilsMessengerCreateInfoEXTJEEE8VkResultPK21VkAllocationCallbacksPKT_PS5_DpT0_ = comdat any

$_ZN2vk18DispatchableObjectINS_14PhysicalDeviceEP18VkPhysicalDevice_TE6CreateI20VkInstanceCreateInfoJEEE8VkResultPK21VkAllocationCallbacksPKT_PS3_DpT0_ = comdat any

$_ZN2vk18DispatchableObjectINS_8InstanceEP12VkInstance_TE6CreateI20VkInstanceCreateInfoJP18VkPhysicalDevice_TPNS_19DebugUtilsMessengerEEEE8VkResultPK21VkAllocationCallbacksPKT_PS3_DpT0_ = comdat any

$_ZN2vk18DispatchableObjectINS_6DeviceEP10VkDevice_TE6CreateI18VkDeviceCreateInfoJPNS_14PhysicalDeviceEPK24VkPhysicalDeviceFeaturesNSt3__110shared_ptrIN4marl9SchedulerEEEEEE8VkResultPK21VkAllocationCallbacksPKT_PS3_DpT0_ = comdat any

$_ZNSt3__110shared_ptrIN4marl9SchedulerEED2Ev = comdat any

$_ZN2vk10ObjectBaseINS_12DeviceMemoryE23VkNonDispatchableHandleIP16VkDeviceMemory_TEE6CreateI20VkMemoryAllocateInfoJPNS_6DeviceEEEE8VkResultPK21VkAllocationCallbacksPKT_PS5_DpT0_ = comdat any

$_ZN2vk10ObjectBaseINS_5FenceE23VkNonDispatchableHandleIP9VkFence_TEE6CreateI17VkFenceCreateInfoJEEE8VkResultPK21VkAllocationCallbacksPKT_PS5_DpT0_ = comdat any

$_ZN2vk10ObjectBaseINS_15BinarySemaphoreE23VkNonDispatchableHandleIP13VkSemaphore_TEE6CreateI21VkSemaphoreCreateInfoJPK21VkAllocationCallbacksEEE8VkResultSB_PKT_PS5_DpT0_ = comdat any

$_ZN2vk10ObjectBaseINS_17TimelineSemaphoreE23VkNonDispatchableHandleIP13VkSemaphore_TEE6CreateI21VkSemaphoreCreateInfoJPK21VkAllocationCallbacksEEE8VkResultSB_PKT_PS5_DpT0_ = comdat any

$_ZN2vk10ObjectBaseINS_5EventE23VkNonDispatchableHandleIP9VkEvent_TEE6CreateI17VkEventCreateInfoJEEE8VkResultPK21VkAllocationCallbacksPKT_PS5_DpT0_ = comdat any

$_ZN2vk5Event6signalEv = comdat any

$_ZN2vk10ObjectBaseINS_9QueryPoolE23VkNonDispatchableHandleIP13VkQueryPool_TEE6CreateI21VkQueryPoolCreateInfoJEEE8VkResultPK21VkAllocationCallbacksPKT_PS5_DpT0_ = comdat any

$_ZN2vk10ObjectBaseINS_6BufferE23VkNonDispatchableHandleIP10VkBuffer_TEE6CreateI18VkBufferCreateInfoJEEE8VkResultPK21VkAllocationCallbacksPKT_PS5_DpT0_ = comdat any

$_ZN2vk10ObjectBaseINS_10BufferViewE23VkNonDispatchableHandleIP14VkBufferView_TEE6CreateI22VkBufferViewCreateInfoJEEE8VkResultPK21VkAllocationCallbacksPKT_PS5_DpT0_ = comdat any

$_ZN2vk10ObjectBaseINS_5ImageE23VkNonDispatchableHandleIP9VkImage_TEE6CreateI17VkImageCreateInfoJPNS_6DeviceEEEE8VkResultPK21VkAllocationCallbacksPKT_PS5_DpT0_ = comdat any

$_ZN2vk10ObjectBaseINS_9ImageViewE23VkNonDispatchableHandleIP13VkImageView_TEE6CreateI21VkImageViewCreateInfoJPKNS_22SamplerYcbcrConversionEEEE8VkResultPK21VkAllocationCallbacksPKT_PS5_DpT0_ = comdat any

$_ZN2vk10ObjectBaseINS_12ShaderModuleE23VkNonDispatchableHandleIP16VkShaderModule_TEE6CreateI24VkShaderModuleCreateInfoJEEE8VkResultPK21VkAllocationCallbacksPKT_PS5_DpT0_ = comdat any

$_ZN2vk10ObjectBaseINS_13PipelineCacheE23VkNonDispatchableHandleIP17VkPipelineCache_TEE6CreateI25VkPipelineCacheCreateInfoJEEE8VkResultPK21VkAllocationCallbacksPKT_PS5_DpT0_ = comdat any

$_ZN2vk10ObjectBaseINS_16GraphicsPipelineE23VkNonDispatchableHandleIP12VkPipeline_TEE6CreateI28VkGraphicsPipelineCreateInfoJPNS_6DeviceEEEE8VkResultPK21VkAllocationCallbacksPKT_PS5_DpT0_ = comdat any

$_ZN2vk10ObjectBaseINS_15ComputePipelineE23VkNonDispatchableHandleIP12VkPipeline_TEE6CreateI27VkComputePipelineCreateInfoJPNS_6DeviceEEEE8VkResultPK21VkAllocationCallbacksPKT_PS5_DpT0_ = comdat any

$_ZN2vk10ObjectBaseINS_14PipelineLayoutE23VkNonDispatchableHandleIP18VkPipelineLayout_TEE6CreateI26VkPipelineLayoutCreateInfoJEEE8VkResultPK21VkAllocationCallbacksPKT_PS5_DpT0_ = comdat any

$_ZN2vk10ObjectBaseINS_7SamplerE23VkNonDispatchableHandleIP11VkSampler_TEE6CreateI19VkSamplerCreateInfoJNS_12SamplerStateEjEEE8VkResultPK21VkAllocationCallbacksPKT_PS5_DpT0_ = comdat any

$_ZN2vk10ObjectBaseINS_19DescriptorSetLayoutE23VkNonDispatchableHandleIP23VkDescriptorSetLayout_TEE6CreateI31VkDescriptorSetLayoutCreateInfoJEEE8VkResultPK21VkAllocationCallbacksPKT_PS5_DpT0_ = comdat any

$_ZN2vk10ObjectBaseINS_14DescriptorPoolE23VkNonDispatchableHandleIP18VkDescriptorPool_TEE6CreateI26VkDescriptorPoolCreateInfoJEEE8VkResultPK21VkAllocationCallbacksPKT_PS5_DpT0_ = comdat any

$_ZN2vk10ObjectBaseINS_11FramebufferE23VkNonDispatchableHandleIP15VkFramebuffer_TEE6CreateI23VkFramebufferCreateInfoJEEE8VkResultPK21VkAllocationCallbacksPKT_PS5_DpT0_ = comdat any

$_ZN2vk10ObjectBaseINS_10RenderPassE23VkNonDispatchableHandleIP14VkRenderPass_TEE6CreateI22VkRenderPassCreateInfoJEEE8VkResultPK21VkAllocationCallbacksPKT_PS5_DpT0_ = comdat any

$_ZN2vk10ObjectBaseINS_10RenderPassE23VkNonDispatchableHandleIP14VkRenderPass_TEE6CreateI23VkRenderPassCreateInfo2JEEE8VkResultPK21VkAllocationCallbacksPKT_PS5_DpT0_ = comdat any

$_ZN2vk10ObjectBaseINS_11CommandPoolE23VkNonDispatchableHandleIP15VkCommandPool_TEE6CreateI23VkCommandPoolCreateInfoJEEE8VkResultPK21VkAllocationCallbacksPKT_PS5_DpT0_ = comdat any

$_ZN2vk10ObjectBaseINS_22SamplerYcbcrConversionE23VkNonDispatchableHandleIP26VkSamplerYcbcrConversion_TEE6CreateI34VkSamplerYcbcrConversionCreateInfoJEEE8VkResultPK21VkAllocationCallbacksPKT_PS5_DpT0_ = comdat any

$_ZN2vk10ObjectBaseINS_24DescriptorUpdateTemplateE23VkNonDispatchableHandleIP28VkDescriptorUpdateTemplate_TEE6CreateI36VkDescriptorUpdateTemplateCreateInfoJEEE8VkResultPK21VkAllocationCallbacksPKT_PS5_DpT0_ = comdat any

$_ZN2vk10ObjectBaseINS_13XcbSurfaceKHRE23VkNonDispatchableHandleIP14VkSurfaceKHR_TEE6CreateI25VkXcbSurfaceCreateInfoKHRJEEE8VkResultPK21VkAllocationCallbacksPKT_PS5_DpT0_ = comdat any

$_ZN2vk10ObjectBaseINS_14XlibSurfaceKHRE23VkNonDispatchableHandleIP14VkSurfaceKHR_TEE6CreateI26VkXlibSurfaceCreateInfoKHRJEEE8VkResultPK21VkAllocationCallbacksPKT_PS5_DpT0_ = comdat any

$_ZN2vk10ObjectBaseINS_18HeadlessSurfaceKHRE23VkNonDispatchableHandleIP14VkSurfaceKHR_TEE6CreateI30VkHeadlessSurfaceCreateInfoEXTJEEE8VkResultPK21VkAllocationCallbacksPKT_PS5_DpT0_ = comdat any

$_ZN2vk10ObjectBaseINS_12SwapchainKHRE23VkNonDispatchableHandleIP16VkSwapchainKHR_TEE6CreateI24VkSwapchainCreateInfoKHRJEEE8VkResultPK21VkAllocationCallbacksPKT_PS5_DpT0_ = comdat any

$_ZNSt3__16vectorINS_4pairIN2rr6Config4Edit8ListEditENS2_12Optimization4PassEEENS_9allocatorIS8_EEEC2ERKSB_ = comdat any

$_ZNSt3__16vectorINS_4pairIN2rr6Config4Edit8ListEditENS2_12Optimization4PassEEENS_9allocatorIS8_EEE11__vallocateEm = comdat any

$_ZNSt3__120__shared_ptr_emplaceIN4marl9SchedulerENS_9allocatorIS2_EEED2Ev = comdat any

$_ZNSt3__120__shared_ptr_emplaceIN4marl9SchedulerENS_9allocatorIS2_EEED0Ev = comdat any

$_ZNSt3__120__shared_ptr_emplaceIN4marl9SchedulerENS_9allocatorIS2_EEE16__on_zero_sharedEv = comdat any

$_ZNSt3__120__shared_ptr_emplaceIN4marl9SchedulerENS_9allocatorIS2_EEE21__on_zero_shared_weakEv = comdat any

$_ZNSt3__112__hash_tableIPN2vk9ImageViewENS_4hashIS3_EENS_8equal_toIS3_EENS_9allocatorIS3_EEED2Ev = comdat any

$_ZNSt3__110unique_ptrIN2vk6Device14SamplerIndexerENS_14default_deleteIS3_EEE5resetEPS3_ = comdat any

$_ZNSt3__110unique_ptrIN2vk6Device20SamplingRoutineCacheENS_14default_deleteIS3_EEE5resetEPS3_ = comdat any

$_ZNSt3__112__hash_tableIPKN2sw8LRUCacheIN2vk6Device20SamplingRoutineCache3KeyENS_10shared_ptrIN2rr7RoutineEEENS6_4HashEE5KeyedENSC_15KeyedComparatorESG_NS_9allocatorISF_EEED2Ev = comdat any

$_ZNSt3__113__vector_baseIN2sw8LRUCacheIN2vk6Device20SamplingRoutineCache3KeyENS_10shared_ptrIN2rr7RoutineEEENS6_4HashEE5EntryENS_9allocatorISD_EEED2Ev = comdat any

$_ZNSt3__110shared_ptrIN2rr7RoutineEED2Ev = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2vk6Device20SamplingRoutineCache3KeyENS_10shared_ptrIN2rr7RoutineEEEEENS_22__unordered_map_hasherIS5_SA_NS5_4HashENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SA_SE_SC_Lb1EEENS_9allocatorISA_EEED2Ev = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2vk6Device20SamplingRoutineCache3KeyENS_10shared_ptrIN2rr7RoutineEEEEENS_22__unordered_map_hasherIS5_SA_NS5_4HashENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SA_SE_SC_Lb1EEENS_9allocatorISA_EEE17__deallocate_nodeEPNS_16__hash_node_baseIPNS_11__hash_nodeISA_PvEEEE = comdat any

$_ZN2sw12CountedEventC2Eb = comdat any

$_ZNSt3__120__shared_ptr_emplaceIN2sw12CountedEventENS_9allocatorIS2_EEED2Ev = comdat any

$_ZNSt3__120__shared_ptr_emplaceIN2sw12CountedEventENS_9allocatorIS2_EEED0Ev = comdat any

$_ZNSt3__120__shared_ptr_emplaceIN2sw12CountedEventENS_9allocatorIS2_EEE16__on_zero_sharedEv = comdat any

$_ZNSt3__120__shared_ptr_emplaceIN2sw12CountedEventENS_9allocatorIS2_EEE21__on_zero_shared_weakEv = comdat any

$_ZNSt3__120__shared_ptr_emplaceIN4marl9WaitGroup4DataENS_9allocatorIS3_EEED2Ev = comdat any

$_ZNSt3__120__shared_ptr_emplaceIN4marl9WaitGroup4DataENS_9allocatorIS3_EEED0Ev = comdat any

$_ZNSt3__120__shared_ptr_emplaceIN4marl9WaitGroup4DataENS_9allocatorIS3_EEE16__on_zero_sharedEv = comdat any

$_ZNSt3__120__shared_ptr_emplaceIN4marl9WaitGroup4DataENS_9allocatorIS3_EEE21__on_zero_shared_weakEv = comdat any

$_ZNSt3__110shared_ptrIN4marl9WaitGroup4DataEED2Ev = comdat any

$_ZNSt3__120__shared_ptr_pointerIPN4marl5Event6SharedENS1_9Allocator7DeleterENS_9allocatorIS3_EEED0Ev = comdat any

$_ZNSt3__120__shared_ptr_pointerIPN4marl5Event6SharedENS1_9Allocator7DeleterENS_9allocatorIS3_EEE16__on_zero_sharedEv = comdat any

$_ZNSt3__120__shared_ptr_pointerIPN4marl5Event6SharedENS1_9Allocator7DeleterENS_9allocatorIS3_EEE21__on_zero_shared_weakEv = comdat any

$_ZNSt3__110shared_ptrIN4marl5Event6SharedEED2Ev = comdat any

$_ZNSt3__110shared_ptrIN2sw12CountedEventEED2Ev = comdat any

$_ZNSt3__112__hash_tableIN2vk5Image11SubresourceES3_NS_8equal_toIS3_EENS_9allocatorIS3_EEED2Ev = comdat any

$_ZNSt3__16__treeIN2vk14DescriptorPool4NodeENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE = comdat any

$_ZNSt3__16__treeIP17VkCommandBuffer_TNS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE = comdat any

$_ZN2vk22SamplerYcbcrConversionC2EPK34VkSamplerYcbcrConversionCreateInfoPv = comdat any

$_ZTVNSt3__120__shared_ptr_emplaceIN4marl9SchedulerENS_9allocatorIS2_EEEE = comdat any

$_ZTVNSt3__120__shared_ptr_emplaceIN2sw12CountedEventENS_9allocatorIS2_EEEE = comdat any

$_ZTVNSt3__120__shared_ptr_emplaceIN4marl9WaitGroup4DataENS_9allocatorIS3_EEEE = comdat any

$_ZTVNSt3__120__shared_ptr_pointerIPN4marl5Event6SharedENS1_9Allocator7DeleterENS_9allocatorIS3_EEEE = comdat any

@.str = private unnamed_addr constant [65 x i8] c"%s:%d TRACE: (VkInstance instance = %p, const char* pName = %p)\0A\00", align 1
@.str.1 = private unnamed_addr constant [55 x i8] c"../../third_party/swiftshader/src/Vulkan/libVulkan.cpp\00", align 1
@_ZL27instanceExtensionProperties = internal global [10 x %struct.ExtensionProperties] zeroinitializer, align 16
@.str.2 = private unnamed_addr constant [256 x i8] c"VK_KHR_device_group_creationalign 1
@.str.3 = private unnamed_addr constant [256 x i8] c"VK_KHR_external_fence_capabilitiesalign 1
@.str.4 = private unnamed_addr constant [256 x i8] c"VK_KHR_external_memory_capabilities\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", align 1
@.str.5 = private unnamed_addr constant [256 x i8] c"VK_KHR_external_semaphore_capabilitiesalign 1
@.str.6 = private unnamed_addr constant [256 x i8] c"VK_KHR_get_physical_device_propertiesalign 1
@.str.7 = private unnamed_addr constant [256 x i8] c"VK_EXT_debug_utilsalign 1
@.str.8 = private unnamed_addr constant [256 x i8] c"VK_EXT_headless_surfacealign 1
@.str.9 = private unnamed_addr constant [256 x i8] c"VK_KHR_surfacealign 1
@.str.10 = private unnamed_addr constant [256 x i8] c"VK_KHR_xcb_surfacealign 1
@.str.11 = private unnamed_addr constant [256 x i8] c"VK_KHR_xlib_surfacealign 1
@libX11 = external global %class.LibX11, align 1
@.str.12 = private unnamed_addr constant [135 x i8] c"%s:%d TRACE: (const VkInstanceCreateInfo* pCreateInfo = %p, const VkAllocationCallbacks* pAllocator = %p, VkInstance* pInstance = %p)\0A\00", align 1
@.str.13 = private unnamed_addr constant [51 x i8] c"%s:%d WARNING: UNSUPPORTED: pCreateInfo->flags %d\0A\00", align 1
@.str.14 = private unnamed_addr constant [80 x i8] c"%s:%d WARNING: UNIMPLEMENTED: b/148240133: pCreateInfo->enabledLayerCount != 0\0A\00", align 1
@.str.15 = private unnamed_addr constant [87 x i8] c"%s:%d TRACE: (VkInstance instance = %p, const VkAllocationCallbacks* pAllocator = %p)\0A\00", align 1
@.str.16 = private unnamed_addr constant [119 x i8] c"%s:%d TRACE: (VkInstance instance = %p, uint32_t* pPhysicalDeviceCount = %p, VkPhysicalDevice* pPhysicalDevices = %p)\0A\00", align 1
@.str.17 = private unnamed_addr constant [95 x i8] c"%s:%d TRACE: (VkPhysicalDevice physicalDevice = %p, VkPhysicalDeviceFeatures* pFeatures = %p)\0A\00", align 1
@.str.18 = private unnamed_addr constant [152 x i8] c"%s:%d TRACE: GetPhysicalDeviceFormatProperties(VkPhysicalDevice physicalDevice = %p, VkFormat format = %d, VkFormatProperties* pFormatProperties = %p)\0A\00", align 1
@.str.19 = private unnamed_addr constant [240 x i8] c"%s:%d TRACE: (VkPhysicalDevice physicalDevice = %p, VkFormat format = %d, VkImageType type = %d, VkImageTiling tiling = %d, VkImageUsageFlags usage = %d, VkImageCreateFlags flags = %d, VkImageFormatProperties* pImageFormatProperties = %p)\0A\00", align 1
@.str.20 = private unnamed_addr constant [99 x i8] c"%s:%d TRACE: (VkPhysicalDevice physicalDevice = %p, VkPhysicalDeviceProperties* pProperties = %p)\0A\00", align 1
@.str.21 = private unnamed_addr constant [150 x i8] c"%s:%d TRACE: (VkPhysicalDevice physicalDevice = %p, uint32_t* pQueueFamilyPropertyCount = %p, VkQueueFamilyProperties* pQueueFamilyProperties = %p))\0A\00", align 1
@.str.22 = private unnamed_addr constant [111 x i8] c"%s:%d TRACE: (VkPhysicalDevice physicalDevice = %p, VkPhysicalDeviceMemoryProperties* pMemoryProperties = %p)\0A\00", align 1
@.str.23 = private unnamed_addr constant [61 x i8] c"%s:%d TRACE: (VkDevice device = %p, const char* pName = %p)\0A\00", align 1
@.str.24 = private unnamed_addr constant [167 x i8] c"%s:%d TRACE: (VkPhysicalDevice physicalDevice = %p, const VkDeviceCreateInfo* pCreateInfo = %p, const VkAllocationCallbacks* pAllocator = %p, VkDevice* pDevice = %p)\0A\00", align 1
@.str.25 = private unnamed_addr constant [65 x i8] c"%s:%d WARNING: UNSUPPORTED: pCreateInfo->enabledLayerCount != 0\0A\00", align 1
@.str.26 = private unnamed_addr constant [74 x i8] c"%s:%d WARNING: UNSUPPORTED: pCreateInfo->pQueueCreateInfos[%d]->flags %d\0A\00", align 1
@.str.27 = private unnamed_addr constant [83 x i8] c"%s:%d TRACE: (VkDevice device = %p, const VkAllocationCallbacks* pAllocator = %p)\0A\00", align 1
@.str.28 = private unnamed_addr constant [116 x i8] c"%s:%d TRACE: (const char* pLayerName = %p, uint32_t* pPropertyCount = %p, VkExtensionProperties* pProperties = %p)\0A\00", align 1
@.str.29 = private unnamed_addr constant [149 x i8] c"%s:%d TRACE: (VkPhysicalDevice physicalDevice = %p, const char* pLayerName, uint32_t* pPropertyCount = %p, VkExtensionProperties* pProperties = %p)\0A\00", align 1
@.str.30 = private unnamed_addr constant [83 x i8] c"%s:%d TRACE: (uint32_t* pPropertyCount = %p, VkLayerProperties* pProperties = %p)\0A\00", align 1
@.str.31 = private unnamed_addr constant [121 x i8] c"%s:%d TRACE: (VkPhysicalDevice physicalDevice = %p, uint32_t* pPropertyCount = %p, VkLayerProperties* pProperties = %p)\0A\00", align 1
@.str.32 = private unnamed_addr constant [117 x i8] c"%s:%d TRACE: (VkDevice device = %p, uint32_t queueFamilyIndex = %d, uint32_t queueIndex = %d, VkQueue* pQueue = %p)\0A\00", align 1
@.str.33 = private unnamed_addr constant [117 x i8] c"%s:%d TRACE: (VkQueue queue = %p, uint32_t submitCount = %d, const VkSubmitInfo* pSubmits = %p, VkFence fence = %p)\0A\00", align 1
@.str.34 = private unnamed_addr constant [35 x i8] c"%s:%d TRACE: (VkQueue queue = %p)\0A\00", align 1
@.str.35 = private unnamed_addr constant [37 x i8] c"%s:%d TRACE: (VkDevice device = %p)\0A\00", align 1
@.str.36 = private unnamed_addr constant [161 x i8] c"%s:%d TRACE: (VkDevice device = %p, const VkMemoryAllocateInfo* pAllocateInfo = %p, const VkAllocationCallbacks* pAllocator = %p, VkDeviceMemory* pMemory = %p)\0A\00", align 1
@.str.37 = private unnamed_addr constant [55 x i8] c"%s:%d WARNING: UNSUPPORTED: importInfo->handleType %u\0A\00", align 1
@.str.38 = private unnamed_addr constant [56 x i8] c"%s:%d WARNING: UNSUPPORTED: exportInfo->handleTypes %u\0A\00", align 1
@.str.39 = private unnamed_addr constant [111 x i8] c"%s:%d TRACE: (VkDevice device = %p, VkDeviceMemory memory = %p, const VkAllocationCallbacks* pAllocator = %p)\0A\00", align 1
@.str.40 = private unnamed_addr constant [95 x i8] c"%s:%d TRACE: (VkDevice device = %p, const VkMemoryGetFdInfoKHR* getFdInfo = %p, int* pFd = %p\0A\00", align 1
@.str.41 = private unnamed_addr constant [55 x i8] c"%s:%d WARNING: UNSUPPORTED: pGetFdInfo->handleType %u\0A\00", align 1
@.str.42 = private unnamed_addr constant [153 x i8] c"%s:%d TRACE: (VkDevice device = %p, VkExternalMemoryHandleTypeFlagBits handleType = %x, int fd = %d, VkMemoryFdPropertiesKHR* pMemoryFdProperties = %p)\0A\00", align 1
@.str.43 = private unnamed_addr constant [43 x i8] c"%s:%d WARNING: UNSUPPORTED: handleType %u\0A\00", align 1
@.str.44 = private unnamed_addr constant [189 x i8] c"%s:%d TRACE: (VkDevice device = %p, VkExternalMemoryHandleTypeFlagBits handleType = %x, const void *pHostPointer = %p, VkMemoryHostPointerPropertiesEXT *pMemoryHostPointerProperties = %p)\0A\00", align 1
@.str.45 = private unnamed_addr constant [164 x i8] c"%s:%d TRACE: (VkDevice device = %p, VkDeviceMemory memory = %p, VkDeviceSize offset = %d, VkDeviceSize size = %d, VkMemoryMapFlags flags = %d, void** ppData = %p)\0A\00", align 1
@.str.46 = private unnamed_addr constant [38 x i8] c"%s:%d WARNING: UNSUPPORTED: flags %d\0A\00", align 1
@.str.47 = private unnamed_addr constant [65 x i8] c"%s:%d TRACE: (VkDevice device = %p, VkDeviceMemory memory = %p)\0A\00", align 1
@.str.48 = private unnamed_addr constant [116 x i8] c"%s:%d TRACE: (VkDevice device = %p, uint32_t memoryRangeCount = %d, const VkMappedMemoryRange* pMemoryRanges = %p)\0A\00", align 1
@.str.49 = private unnamed_addr constant [109 x i8] c"%s:%d TRACE: (VkDevice device = %p, VkDeviceMemory memory = %p, VkDeviceSize* pCommittedMemoryInBytes = %p)\0A\00", align 1
@.str.50 = private unnamed_addr constant [119 x i8] c"%s:%d TRACE: (VkDevice device = %p, VkBuffer buffer = %p, VkDeviceMemory memory = %p, VkDeviceSize memoryOffset = %d)\0A\00", align 1
@.str.51 = private unnamed_addr constant [77 x i8] c"%s:%d WARNING: UNSUPPORTED: vkBindBufferMemory with invalid external memory\0A\00", align 1
@.str.52 = private unnamed_addr constant [117 x i8] c"%s:%d TRACE: (VkDevice device = %p, VkImage image = %p, VkDeviceMemory memory = %p, VkDeviceSize memoryOffset = %d)\0A\00", align 1
@.str.53 = private unnamed_addr constant [76 x i8] c"%s:%d WARNING: UNSUPPORTED: vkBindImageMemory with invalid external memory\0A\00", align 1
@.str.54 = private unnamed_addr constant [107 x i8] c"%s:%d TRACE: (VkDevice device = %p, VkBuffer buffer = %p, VkMemoryRequirements* pMemoryRequirements = %p)\0A\00", align 1
@.str.55 = private unnamed_addr constant [105 x i8] c"%s:%d TRACE: (VkDevice device = %p, VkImage image = %p, VkMemoryRequirements* pMemoryRequirements = %p)\0A\00", align 1
@.str.56 = private unnamed_addr constant [168 x i8] c"%s:%d TRACE: (VkDevice device = %p, VkImage image = %p, uint32_t* pSparseMemoryRequirementCount = %p, VkSparseImageMemoryRequirements* pSparseMemoryRequirements = %p)\0A\00", align 1
@.str.57 = private unnamed_addr constant [271 x i8] c"%s:%d TRACE: (VkPhysicalDevice physicalDevice = %p, VkFormat format = %d, VkImageType type = %d, VkSampleCountFlagBits samples = %d, VkImageUsageFlags usage = %d, VkImageTiling tiling = %d, uint32_t* pPropertyCount = %p, VkSparseImageFormatProperties* pProperties = %p)\0A\00", align 1
@.str.58 = private unnamed_addr constant [17 x i8] c"%s:%d TRACE: ()\0A\00", align 1
@.str.59 = private unnamed_addr constant [47 x i8] c"%s:%d WARNING: UNSUPPORTED: vkQueueBindSparse\0A\00", align 1
@.str.60 = private unnamed_addr constant [148 x i8] c"%s:%d TRACE: (VkDevice device = %p, const VkFenceCreateInfo* pCreateInfo = %p, const VkAllocationCallbacks* pAllocator = %p, VkFence* pFence = %p)\0A\00", align 1
@.str.61 = private unnamed_addr constant [103 x i8] c"%s:%d TRACE: (VkDevice device = %p, VkFence fence = %p, const VkAllocationCallbacks* pAllocator = %p)\0A\00", align 1
@.str.62 = private unnamed_addr constant [92 x i8] c"%s:%d TRACE: (VkDevice device = %p, uint32_t fenceCount = %d, const VkFence* pFences = %p)\0A\00", align 1
@.str.63 = private unnamed_addr constant [57 x i8] c"%s:%d TRACE: (VkDevice device = %p, VkFence fence = %p)\0A\00", align 1
@.str.64 = private unnamed_addr constant [139 x i8] c"%s:%d TRACE: (VkDevice device = %p, uint32_t fenceCount = %d, const VkFence* pFences = %p, VkBool32 waitAll = %d, uint64_t timeout = %lu)\0A\00", align 1
@.str.65 = private unnamed_addr constant [160 x i8] c"%s:%d TRACE: (VkDevice device = %p, const VkSemaphoreCreateInfo* pCreateInfo = %p, const VkAllocationCallbacks* pAllocator = %p, VkSemaphore* pSemaphore = %p)\0A\00", align 1
@.str.66 = private unnamed_addr constant [37 x i8] c"%s:%d WARNING: nextInfo->sType = %s\0A\00", align 1
@.str.67 = private unnamed_addr constant [111 x i8] c"%s:%d TRACE: (VkDevice device = %p, VkSemaphore semaphore = %p, const VkAllocationCallbacks* pAllocator = %p)\0A\00", align 1
@.str.68 = private unnamed_addr constant [100 x i8] c"%s:%d TRACE: (VkDevice device = %p, const VkSemaphoreGetFdInfoKHR* pGetFdInfo = %p, int* pFd = %p)\0A\00", align 1
@.str.69 = private unnamed_addr constant [55 x i8] c"%s:%d WARNING: UNSUPPORTED: pGetFdInfo->handleType %d\0A\00", align 1
@.str.70 = private unnamed_addr constant [97 x i8] c"%s:%d TRACE: (VkDevice device = %p, const VkImportSemaphoreFdInfoKHR* pImportSemaphoreInfo = %p\0A\00", align 1
@.str.71 = private unnamed_addr constant [65 x i8] c"%s:%d WARNING: UNSUPPORTED: pImportSemaphoreInfo->handleType %d\0A\00", align 1
@.str.72 = private unnamed_addr constant [88 x i8] c"%s:%d TRACE: (VkDevice device = %p, VkSemaphore semaphore = %p, uint64_t* pValue = %p)\0A\00", align 1
@.str.73 = private unnamed_addr constant [84 x i8] c"%s:%d TRACE: (VkDevice device = %p, const VkSemaphoreSignalInfo *pSignalInfo = %p)\0A\00", align 1
@.str.74 = private unnamed_addr constant [104 x i8] c"%s:%d TRACE: (VkDevice device = %p, const VkSemaphoreWaitInfo *pWaitInfo = %p, uint64_t timeout = %lu)\0A\00", align 1
@.str.75 = private unnamed_addr constant [148 x i8] c"%s:%d TRACE: (VkDevice device = %p, const VkEventCreateInfo* pCreateInfo = %p, const VkAllocationCallbacks* pAllocator = %p, VkEvent* pEvent = %p)\0A\00", align 1
@.str.76 = private unnamed_addr constant [103 x i8] c"%s:%d TRACE: (VkDevice device = %p, VkEvent event = %p, const VkAllocationCallbacks* pAllocator = %p)\0A\00", align 1
@.str.77 = private unnamed_addr constant [57 x i8] c"%s:%d TRACE: (VkDevice device = %p, VkEvent event = %p)\0A\00", align 1
@.str.78 = private unnamed_addr constant [160 x i8] c"%s:%d TRACE: (VkDevice device = %p, const VkQueryPoolCreateInfo* pCreateInfo = %p, const VkAllocationCallbacks* pAllocator = %p, VkQueryPool* pQueryPool = %p)\0A\00", align 1
@.str.79 = private unnamed_addr constant [111 x i8] c"%s:%d TRACE: (VkDevice device = %p, VkQueryPool queryPool = %p, const VkAllocationCallbacks* pAllocator = %p)\0A\00", align 1
@.str.80 = private unnamed_addr constant [214 x i8] c"%s:%d TRACE: (VkDevice device = %p, VkQueryPool queryPool = %p, uint32_t firstQuery = %d, uint32_t queryCount = %d, size_t dataSize = %d, void* pData = %p, VkDeviceSize stride = %d, VkQueryResultFlags flags = %d)\0A\00", align 1
@.str.81 = private unnamed_addr constant [151 x i8] c"%s:%d TRACE: (VkDevice device = %p, const VkBufferCreateInfo* pCreateInfo = %p, const VkAllocationCallbacks* pAllocator = %p, VkBuffer* pBuffer = %p)\0A\00", align 1
@.str.82 = private unnamed_addr constant [105 x i8] c"%s:%d TRACE: (VkDevice device = %p, VkBuffer buffer = %p, const VkAllocationCallbacks* pAllocator = %p)\0A\00", align 1
@.str.83 = private unnamed_addr constant [82 x i8] c"%s:%d TRACE: (VkDevice device = %p, const VkBufferDeviceAddressInfo* pInfo = %p)\0A\00", align 1
@.str.84 = private unnamed_addr constant [58 x i8] c"%s:%d WARNING: UNSUPPORTED: VK_KHR_buffer_device_address\0A\00", align 1
@.str.85 = private unnamed_addr constant [95 x i8] c"%s:%d TRACE: (VkDevice device = %p, const VkDeviceMemoryOpaqueCaptureAddressInfo* pInfo = %p)\0A\00", align 1
@.str.86 = private unnamed_addr constant [157 x i8] c"%s:%d TRACE: (VkDevice device = %p, const VkBufferViewCreateInfo* pCreateInfo = %p, const VkAllocationCallbacks* pAllocator = %p, VkBufferView* pView = %p)\0A\00", align 1
@.str.87 = private unnamed_addr constant [113 x i8] c"%s:%d TRACE: (VkDevice device = %p, VkBufferView bufferView = %p, const VkAllocationCallbacks* pAllocator = %p)\0A\00", align 1
@.str.88 = private unnamed_addr constant [148 x i8] c"%s:%d TRACE: (VkDevice device = %p, const VkImageCreateInfo* pCreateInfo = %p, const VkAllocationCallbacks* pAllocator = %p, VkImage* pImage = %p)\0A\00", align 1
@.str.89 = private unnamed_addr constant [103 x i8] c"%s:%d TRACE: (VkDevice device = %p, VkImage image = %p, const VkAllocationCallbacks* pAllocator = %p)\0A\00", align 1
@.str.90 = private unnamed_addr constant [137 x i8] c"%s:%d TRACE: (VkDevice device = %p, VkImage image = %p, const VkImageSubresource* pSubresource = %p, VkSubresourceLayout* pLayout = %p)\0A\00", align 1
@.str.91 = private unnamed_addr constant [155 x i8] c"%s:%d TRACE: (VkDevice device = %p, const VkImageViewCreateInfo* pCreateInfo = %p, const VkAllocationCallbacks* pAllocator = %p, VkImageView* pView = %p)\0A\00", align 1
@.str.92 = private unnamed_addr constant [111 x i8] c"%s:%d TRACE: (VkDevice device = %p, VkImageView imageView = %p, const VkAllocationCallbacks* pAllocator = %p)\0A\00", align 1
@.str.93 = private unnamed_addr constant [169 x i8] c"%s:%d TRACE: (VkDevice device = %p, const VkShaderModuleCreateInfo* pCreateInfo = %p, const VkAllocationCallbacks* pAllocator = %p, VkShaderModule* pShaderModule = %p)\0A\00", align 1
@.str.94 = private unnamed_addr constant [117 x i8] c"%s:%d TRACE: (VkDevice device = %p, VkShaderModule shaderModule = %p, const VkAllocationCallbacks* pAllocator = %p)\0A\00", align 1
@.str.95 = private unnamed_addr constant [172 x i8] c"%s:%d TRACE: (VkDevice device = %p, const VkPipelineCacheCreateInfo* pCreateInfo = %p, const VkAllocationCallbacks* pAllocator = %p, VkPipelineCache* pPipelineCache = %p)\0A\00", align 1
@.str.96 = private unnamed_addr constant [119 x i8] c"%s:%d TRACE: (VkDevice device = %p, VkPipelineCache pipelineCache = %p, const VkAllocationCallbacks* pAllocator = %p)\0A\00", align 1
@.str.97 = private unnamed_addr constant [115 x i8] c"%s:%d TRACE: (VkDevice device = %p, VkPipelineCache pipelineCache = %p, size_t* pDataSize = %p, void* pData = %p)\0A\00", align 1
@.str.98 = private unnamed_addr constant [137 x i8] c"%s:%d TRACE: (VkDevice device = %p, VkPipelineCache dstCache = %p, uint32_t srcCacheCount = %d, const VkPipelineCache* pSrcCaches = %p)\0A\00", align 1
@.str.99 = private unnamed_addr constant [234 x i8] c"%s:%d TRACE: (VkDevice device = %p, VkPipelineCache pipelineCache = %p, uint32_t createInfoCount = %d, const VkGraphicsPipelineCreateInfo* pCreateInfos = %p, const VkAllocationCallbacks* pAllocator = %p, VkPipeline* pPipelines = %p)\0A\00", align 1
@.str.100 = private unnamed_addr constant [233 x i8] c"%s:%d TRACE: (VkDevice device = %p, VkPipelineCache pipelineCache = %p, uint32_t createInfoCount = %d, const VkComputePipelineCreateInfo* pCreateInfos = %p, const VkAllocationCallbacks* pAllocator = %p, VkPipeline* pPipelines = %p)\0A\00", align 1
@.str.101 = private unnamed_addr constant [109 x i8] c"%s:%d TRACE: (VkDevice device = %p, VkPipeline pipeline = %p, const VkAllocationCallbacks* pAllocator = %p)\0A\00", align 1
@.str.102 = private unnamed_addr constant [175 x i8] c"%s:%d TRACE: (VkDevice device = %p, const VkPipelineLayoutCreateInfo* pCreateInfo = %p, const VkAllocationCallbacks* pAllocator = %p, VkPipelineLayout* pPipelineLayout = %p)\0A\00", align 1
@.str.103 = private unnamed_addr constant [121 x i8] c"%s:%d TRACE: (VkDevice device = %p, VkPipelineLayout pipelineLayout = %p, const VkAllocationCallbacks* pAllocator = %p)\0A\00", align 1
@.str.104 = private unnamed_addr constant [154 x i8] c"%s:%d TRACE: (VkDevice device = %p, const VkSamplerCreateInfo* pCreateInfo = %p, const VkAllocationCallbacks* pAllocator = %p, VkSampler* pSampler = %p)\0A\00", align 1
@__const.vkCreateSampler.samplerState = private unnamed_addr constant %"struct.vk::SamplerState" <{ i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, float 0xFFFFFFFFE0000000, i32 -1431655766, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i8 -86, i8 -86, [2 x i8] c"\AA\AA" }>, align 4
@.str.105 = private unnamed_addr constant [107 x i8] c"%s:%d TRACE: (VkDevice device = %p, VkSampler sampler = %p, const VkAllocationCallbacks* pAllocator = %p)\0A\00", align 1
@.str.106 = private unnamed_addr constant [180 x i8] c"%s:%d TRACE: (VkDevice device = %p, const VkDescriptorSetLayoutCreateInfo* pCreateInfo = %p, const VkAllocationCallbacks* pAllocator = %p, VkDescriptorSetLayout* pSetLayout = %p)\0A\00", align 1
@.str.107 = private unnamed_addr constant [131 x i8] c"%s:%d TRACE: (VkDevice device = %p, VkDescriptorSetLayout descriptorSetLayout = %p, const VkAllocationCallbacks* pAllocator = %p)\0A\00", align 1
@.str.108 = private unnamed_addr constant [175 x i8] c"%s:%d TRACE: (VkDevice device = %p, const VkDescriptorPoolCreateInfo* pCreateInfo = %p, const VkAllocationCallbacks* pAllocator = %p, VkDescriptorPool* pDescriptorPool = %p)\0A\00", align 1
@.str.109 = private unnamed_addr constant [121 x i8] c"%s:%d TRACE: (VkDevice device = %p, VkDescriptorPool descriptorPool = %p, const VkAllocationCallbacks* pAllocator = %p)\0A\00", align 1
@.str.110 = private unnamed_addr constant [116 x i8] c"%s:%d TRACE: (VkDevice device = %p, VkDescriptorPool descriptorPool = %p, VkDescriptorPoolResetFlags flags = 0x%x)\0A\00", align 1
@.str.111 = private unnamed_addr constant [131 x i8] c"%s:%d TRACE: (VkDevice device = %p, const VkDescriptorSetAllocateInfo* pAllocateInfo = %p, VkDescriptorSet* pDescriptorSets = %p)\0A\00", align 1
@.str.112 = private unnamed_addr constant [154 x i8] c"%s:%d TRACE: (VkDevice device = %p, VkDescriptorPool descriptorPool = %p, uint32_t descriptorSetCount = %d, const VkDescriptorSet* pDescriptorSets = %p)\0A\00", align 1
@.str.113 = private unnamed_addr constant [211 x i8] c"%s:%d TRACE: (VkDevice device = %p, uint32_t descriptorWriteCount = %d, const VkWriteDescriptorSet* pDescriptorWrites = %p, uint32_t descriptorCopyCount = %d, const VkCopyDescriptorSet* pDescriptorCopies = %p)\0A\00", align 1
@.str.114 = private unnamed_addr constant [166 x i8] c"%s:%d TRACE: (VkDevice device = %p, const VkFramebufferCreateInfo* pCreateInfo = %p, const VkAllocationCallbacks* pAllocator = %p, VkFramebuffer* pFramebuffer = %p)\0A\00", align 1
@.str.115 = private unnamed_addr constant [115 x i8] c"%s:%d TRACE: (VkDevice device = %p, VkFramebuffer framebuffer = %p, const VkAllocationCallbacks* pAllocator = %p)\0A\00", align 1
@.str.116 = private unnamed_addr constant [163 x i8] c"%s:%d TRACE: (VkDevice device = %p, const VkRenderPassCreateInfo* pCreateInfo = %p, const VkAllocationCallbacks* pAllocator = %p, VkRenderPass* pRenderPass = %p)\0A\00", align 1
@.str.117 = private unnamed_addr constant [113 x i8] c"%s:%d TRACE: (VkDevice device = %p, VkRenderPass renderPass = %p, const VkAllocationCallbacks* pAllocator = %p)\0A\00", align 1
@.str.118 = private unnamed_addr constant [98 x i8] c"%s:%d TRACE: (VkDevice device = %p, VkRenderPass renderPass = %p, VkExtent2D* pGranularity = %p)\0A\00", align 1
@.str.119 = private unnamed_addr constant [166 x i8] c"%s:%d TRACE: (VkDevice device = %p, const VkCommandPoolCreateInfo* pCreateInfo = %p, const VkAllocationCallbacks* pAllocator = %p, VkCommandPool* pCommandPool = %p)\0A\00", align 1
@.str.120 = private unnamed_addr constant [115 x i8] c"%s:%d TRACE: (VkDevice device = %p, VkCommandPool commandPool = %p, const VkAllocationCallbacks* pAllocator = %p)\0A\00", align 1
@.str.121 = private unnamed_addr constant [105 x i8] c"%s:%d TRACE: (VkDevice device = %p, VkCommandPool commandPool = %p, VkCommandPoolResetFlags flags = %d)\0A\00", align 1
@.str.122 = private unnamed_addr constant [131 x i8] c"%s:%d TRACE: (VkDevice device = %p, const VkCommandBufferAllocateInfo* pAllocateInfo = %p, VkCommandBuffer* pCommandBuffers = %p)\0A\00", align 1
@.str.123 = private unnamed_addr constant [148 x i8] c"%s:%d TRACE: (VkDevice device = %p, VkCommandPool commandPool = %p, uint32_t commandBufferCount = %d, const VkCommandBuffer* pCommandBuffers = %p)\0A\00", align 1
@.str.124 = private unnamed_addr constant [100 x i8] c"%s:%d TRACE: (VkCommandBuffer commandBuffer = %p, const VkCommandBufferBeginInfo* pBeginInfo = %p)\0A\00", align 1
@.str.125 = private unnamed_addr constant [51 x i8] c"%s:%d TRACE: (VkCommandBuffer commandBuffer = %p)\0A\00", align 1
@.str.126 = private unnamed_addr constant [89 x i8] c"%s:%d TRACE: (VkCommandBuffer commandBuffer = %p, VkCommandBufferResetFlags flags = %d)\0A\00", align 1
@.str.127 = private unnamed_addr constant [121 x i8] c"%s:%d TRACE: (VkCommandBuffer commandBuffer = %p, VkPipelineBindPoint pipelineBindPoint = %d, VkPipeline pipeline = %p)\0A\00", align 1
@.str.128 = private unnamed_addr constant [144 x i8] c"%s:%d TRACE: (VkCommandBuffer commandBuffer = %p, uint32_t firstViewport = %d, uint32_t viewportCount = %d, const VkViewport* pViewports = %p)\0A\00", align 1
@.str.129 = private unnamed_addr constant [139 x i8] c"%s:%d TRACE: (VkCommandBuffer commandBuffer = %p, uint32_t firstScissor = %d, uint32_t scissorCount = %d, const VkRect2D* pScissors = %p)\0A\00", align 1
@.str.130 = private unnamed_addr constant [73 x i8] c"%s:%d TRACE: (VkCommandBuffer commandBuffer = %p, float lineWidth = %f)\0A\00", align 1
@.str.131 = private unnamed_addr constant [147 x i8] c"%s:%d TRACE: (VkCommandBuffer commandBuffer = %p, float depthBiasConstantFactor = %f, float depthBiasClamp = %f, float depthBiasSlopeFactor = %f)\0A\00", align 1
@.str.132 = private unnamed_addr constant [101 x i8] c"%s:%d TRACE: (VkCommandBuffer commandBuffer = %p, const float blendConstants[4] = {%f, %f, %f, %f})\0A\00", align 1
@.str.133 = private unnamed_addr constant [105 x i8] c"%s:%d TRACE: (VkCommandBuffer commandBuffer = %p, float minDepthBounds = %f, float maxDepthBounds = %f)\0A\00", align 1
@.str.134 = private unnamed_addr constant [112 x i8] c"%s:%d TRACE: (VkCommandBuffer commandBuffer = %p, VkStencilFaceFlags faceMask = %d, uint32_t compareMask = %d)\0A\00", align 1
@.str.135 = private unnamed_addr constant [110 x i8] c"%s:%d TRACE: (VkCommandBuffer commandBuffer = %p, VkStencilFaceFlags faceMask = %d, uint32_t writeMask = %d)\0A\00", align 1
@.str.136 = private unnamed_addr constant [110 x i8] c"%s:%d TRACE: (VkCommandBuffer commandBuffer = %p, VkStencilFaceFlags faceMask = %d, uint32_t reference = %d)\0A\00", align 1
@.str.137 = private unnamed_addr constant [300 x i8] c"%s:%d TRACE: (VkCommandBuffer commandBuffer = %p, VkPipelineBindPoint pipelineBindPoint = %d, VkPipelineLayout layout = %p, uint32_t firstSet = %d, uint32_t descriptorSetCount = %d, const VkDescriptorSet* pDescriptorSets = %p, uint32_t dynamicOffsetCount = %d, const uint32_t* pDynamicOffsets = %p)\0A\00", align 1
@.str.138 = private unnamed_addr constant [127 x i8] c"%s:%d TRACE: (VkCommandBuffer commandBuffer = %p, VkBuffer buffer = %p, VkDeviceSize offset = %d, VkIndexType indexType = %d)\0A\00", align 1
@.str.139 = private unnamed_addr constant [173 x i8] c"%s:%d TRACE: (VkCommandBuffer commandBuffer = %p, uint32_t firstBinding = %d, uint32_t bindingCount = %d, const VkBuffer* pBuffers = %p, const VkDeviceSize* pOffsets = %p)\0A\00", align 1
@.str.140 = private unnamed_addr constant [163 x i8] c"%s:%d TRACE: (VkCommandBuffer commandBuffer = %p, uint32_t vertexCount = %d, uint32_t instanceCount = %d, uint32_t firstVertex = %d, uint32_t firstInstance = %d)\0A\00", align 1
@.str.141 = private unnamed_addr constant [188 x i8] c"%s:%d TRACE: (VkCommandBuffer commandBuffer = %p, uint32_t indexCount = %d, uint32_t instanceCount = %d, uint32_t firstIndex = %d, int32_t vertexOffset = %d, uint32_t firstInstance = %d)\0A\00", align 1
@.str.142 = private unnamed_addr constant [146 x i8] c"%s:%d TRACE: (VkCommandBuffer commandBuffer = %p, VkBuffer buffer = %p, VkDeviceSize offset = %d, uint32_t drawCount = %d, uint32_t stride = %d)\0A\00", align 1
@.str.143 = private unnamed_addr constant [212 x i8] c"%s:%d TRACE: (VkCommandBuffer commandBuffer = %p, VkBuffer buffer = %p, VkDeviceSize offset = %d, VkBuffer countBuffer = %p, VkDeviceSize countBufferOffset = %d, uint32_t maxDrawCount = %d, uint32_t stride = %d\0A\00", align 1
@.str.144 = private unnamed_addr constant [56 x i8] c"%s:%d WARNING: UNSUPPORTED: VK_KHR_draw_indirect_count\0A\00", align 1
@.str.145 = private unnamed_addr constant [132 x i8] c"%s:%d TRACE: (VkCommandBuffer commandBuffer = %p, uint32_t groupCountX = %d, uint32_t groupCountY = %d, uint32_t groupCountZ = %d)\0A\00", align 1
@.str.146 = private unnamed_addr constant [99 x i8] c"%s:%d TRACE: (VkCommandBuffer commandBuffer = %p, VkBuffer buffer = %p, VkDeviceSize offset = %d)\0A\00", align 1
@.str.147 = private unnamed_addr constant [163 x i8] c"%s:%d TRACE: (VkCommandBuffer commandBuffer = %p, VkBuffer srcBuffer = %p, VkBuffer dstBuffer = %p, uint32_t regionCount = %d, const VkBufferCopy* pRegions = %p)\0A\00", align 1
@.str.148 = private unnamed_addr constant [228 x i8] c"%s:%d TRACE: (VkCommandBuffer commandBuffer = %p, VkImage srcImage = %p, VkImageLayout srcImageLayout = %d, VkImage dstImage = %p, VkImageLayout dstImageLayout = %d, uint32_t regionCount = %d, const VkImageCopy* pRegions = %p)\0A\00", align 1
@.str.149 = private unnamed_addr constant [250 x i8] c"%s:%d TRACE: (VkCommandBuffer commandBuffer = %p, VkImage srcImage = %p, VkImageLayout srcImageLayout = %d, VkImage dstImage = %p, VkImageLayout dstImageLayout = %d, uint32_t regionCount = %d, const VkImageBlit* pRegions = %p, VkFilter filter = %d)\0A\00", align 1
@.str.150 = private unnamed_addr constant [201 x i8] c"%s:%d TRACE: (VkCommandBuffer commandBuffer = %p, VkBuffer srcBuffer = %p, VkImage dstImage = %p, VkImageLayout dstImageLayout = %d, uint32_t regionCount = %d, const VkBufferImageCopy* pRegions = %p)\0A\00", align 1
@.str.151 = private unnamed_addr constant [201 x i8] c"%s:%d TRACE: (VkCommandBuffer commandBuffer = %p, VkImage srcImage = %p, VkImageLayout srcImageLayout = %d, VkBuffer dstBuffer = %p, uint32_t regionCount = %d, const VkBufferImageCopy* pRegions = %p)\0A\00", align 1
@.str.152 = private unnamed_addr constant [157 x i8] c"%s:%d TRACE: (VkCommandBuffer commandBuffer = %p, VkBuffer dstBuffer = %p, VkDeviceSize dstOffset = %d, VkDeviceSize dataSize = %d, const void* pData = %p)\0A\00", align 1
@.str.153 = private unnamed_addr constant [149 x i8] c"%s:%d TRACE: (VkCommandBuffer commandBuffer = %p, VkBuffer dstBuffer = %p, VkDeviceSize dstOffset = %d, VkDeviceSize size = %d, uint32_t data = %d)\0A\00", align 1
@.str.154 = private unnamed_addr constant [212 x i8] c"%s:%d TRACE: (VkCommandBuffer commandBuffer = %p, VkImage image = %p, VkImageLayout imageLayout = %d, const VkClearColorValue* pColor = %p, uint32_t rangeCount = %d, const VkImageSubresourceRange* pRanges = %p)\0A\00", align 1
@.str.155 = private unnamed_addr constant [226 x i8] c"%s:%d TRACE: (VkCommandBuffer commandBuffer = %p, VkImage image = %p, VkImageLayout imageLayout = %d, const VkClearDepthStencilValue* pDepthStencil = %p, uint32_t rangeCount = %d, const VkImageSubresourceRange* pRanges = %p)\0A\00", align 1
@.str.156 = private unnamed_addr constant [183 x i8] c"%s:%d TRACE: (VkCommandBuffer commandBuffer = %p, uint32_t attachmentCount = %d, const VkClearAttachment* pAttachments = %p, uint32_t rectCount = %d, const VkClearRect* pRects = %p)\0A\00", align 1
@.str.157 = private unnamed_addr constant [231 x i8] c"%s:%d TRACE: (VkCommandBuffer commandBuffer = %p, VkImage srcImage = %p, VkImageLayout srcImageLayout = %d, VkImage dstImage = %p, VkImageLayout dstImageLayout = %d, uint32_t regionCount = %d, const VkImageResolve* pRegions = %p)\0A\00", align 1
@.str.158 = private unnamed_addr constant [108 x i8] c"%s:%d TRACE: (VkCommandBuffer commandBuffer = %p, VkEvent event = %p, VkPipelineStageFlags stageMask = %d)\0A\00", align 1
@.str.159 = private unnamed_addr constant [460 x i8] c"%s:%d TRACE: (VkCommandBuffer commandBuffer = %p, uint32_t eventCount = %d, const VkEvent* pEvents = %p, VkPipelineStageFlags srcStageMask = 0x%x, VkPipelineStageFlags dstStageMask = 0x%x, uint32_t memoryBarrierCount = %d, const VkMemoryBarrier* pMemoryBarriers = %p, uint32_t bufferMemoryBarrierCount = %d, const VkBufferMemoryBarrier* pBufferMemoryBarriers = %p, uint32_t imageMemoryBarrierCount = %d, const VkImageMemoryBarrier* pImageMemoryBarriers = %p)\0A\00", align 1
@.str.160 = private unnamed_addr constant [444 x i8] c"%s:%d TRACE: (VkCommandBuffer commandBuffer = %p, VkPipelineStageFlags srcStageMask = 0x%x, VkPipelineStageFlags dstStageMask = 0x%x, VkDependencyFlags dependencyFlags = %d, uint32_t memoryBarrierCount = %d, onst VkMemoryBarrier* pMemoryBarriers = %p, uint32_t bufferMemoryBarrierCount = %d, const VkBufferMemoryBarrier* pBufferMemoryBarriers = %p, uint32_t imageMemoryBarrierCount = %d, const VkImageMemoryBarrier* pImageMemoryBarriers = %p)\0A\00", align 1
@.str.161 = private unnamed_addr constant [132 x i8] c"%s:%d TRACE: (VkCommandBuffer commandBuffer = %p, VkQueryPool queryPool = %p, uint32_t query = %d, VkQueryControlFlags flags = %d)\0A\00", align 1
@.str.162 = private unnamed_addr constant [100 x i8] c"%s:%d TRACE: (VkCommandBuffer commandBuffer = %p, VkQueryPool queryPool = %p, uint32_t query = %d)\0A\00", align 1
@.str.163 = private unnamed_addr constant [131 x i8] c"%s:%d TRACE: (VkCommandBuffer commandBuffer = %p, VkQueryPool queryPool = %p, uint32_t firstQuery = %d, uint32_t queryCount = %d)\0A\00", align 1
@.str.164 = private unnamed_addr constant [144 x i8] c"%s:%d TRACE: (VkCommandBuffer commandBuffer = %p, VkPipelineStageFlagBits pipelineStage = %d, VkQueryPool queryPool = %p, uint32_t query = %d)\0A\00", align 1
@.str.165 = private unnamed_addr constant [242 x i8] c"%s:%d TRACE: (VkCommandBuffer commandBuffer = %p, VkQueryPool queryPool = %p, uint32_t firstQuery = %d, uint32_t queryCount = %d, VkBuffer dstBuffer = %p, VkDeviceSize dstOffset = %d, VkDeviceSize stride = %d, VkQueryResultFlags flags = %d)\0A\00", align 1
@.str.166 = private unnamed_addr constant [185 x i8] c"%s:%d TRACE: (VkCommandBuffer commandBuffer = %p, VkPipelineLayout layout = %p, VkShaderStageFlags stageFlags = %d, uint32_t offset = %d, uint32_t size = %d, const void* pValues = %p)\0A\00", align 1
@.str.167 = private unnamed_addr constant [156 x i8] c"%s:%d TRACE: (VkCommandBuffer commandBuffer = %p, const VkRenderPassBeginInfo* pRenderPassBegin = %p, const VkSubpassBeginInfoKHR* pSubpassBeginInfo = %p)\0A\00", align 1
@.str.168 = private unnamed_addr constant [84 x i8] c"%s:%d TRACE: (VkCommandBuffer commandBuffer = %p, VkSubpassContents contents = %d)\0A\00", align 1
@.str.169 = private unnamed_addr constant [153 x i8] c"%s:%d TRACE: (VkCommandBuffer commandBuffer = %p, const VkSubpassBeginInfoKHR* pSubpassBeginInfo = %p, const VkSubpassEndInfoKHR* pSubpassEndInfo = %p)\0A\00", align 1
@.str.170 = private unnamed_addr constant [100 x i8] c"%s:%d TRACE: (VkCommandBuffer commandBuffer = %p, const VkSubpassEndInfoKHR* pSubpassEndInfo = %p)\0A\00", align 1
@.str.171 = private unnamed_addr constant [130 x i8] c"%s:%d TRACE: (VkCommandBuffer commandBuffer = %p, uint32_t commandBufferCount = %d, const VkCommandBuffer* pCommandBuffers = %p)\0A\00", align 1
@.str.172 = private unnamed_addr constant [43 x i8] c"%s:%d TRACE: (uint32_t* pApiVersion = %p)\0A\00", align 1
@.str.173 = private unnamed_addr constant [113 x i8] c"%s:%d TRACE: (VkDevice device = %p, uint32_t bindInfoCount = %d, const VkBindBufferMemoryInfo* pBindInfos = %p)\0A\00", align 1
@.str.174 = private unnamed_addr constant [78 x i8] c"%s:%d WARNING: UNSUPPORTED: vkBindBufferMemory2 with invalid external memory\0A\00", align 1
@.str.175 = private unnamed_addr constant [112 x i8] c"%s:%d TRACE: (VkDevice device = %p, uint32_t bindInfoCount = %d, const VkBindImageMemoryInfo* pBindInfos = %p)\0A\00", align 1
@.str.176 = private unnamed_addr constant [77 x i8] c"%s:%d WARNING: UNSUPPORTED: vkBindImageMemory2 with invalid external memory\0A\00", align 1
@.str.177 = private unnamed_addr constant [179 x i8] c"%s:%d TRACE: (VkDevice device = %p, uint32_t heapIndex = %d, uint32_t localDeviceIndex = %d, uint32_t remoteDeviceIndex = %d, VkPeerMemoryFeatureFlags* pPeerMemoryFeatures = %p)\0A\00", align 1
@.str.178 = private unnamed_addr constant [51 x i8] c"%s:%d WARNING: UNSUPPORTED: remoteDeviceIndex: %d\0A\00", align 1
@.str.179 = private unnamed_addr constant [76 x i8] c"%s:%d TRACE: (VkCommandBuffer commandBuffer = %p, uint32_t deviceMask = %d\0A\00", align 1
@.str.180 = private unnamed_addr constant [156 x i8] c"%s:%d TRACE: (VkCommandBuffer commandBuffer = %p, baseGroupX = %u, baseGroupY = %u, baseGroupZ = %u, groupCountX = %u, groupCountY = %u, groupCountZ = %u)\0A\00", align 1
@.str.181 = private unnamed_addr constant [117 x i8] c"%s:%d TRACE: (VkDevice device = %p, VkQueryPool queryPool = %p, uint32_t firstQuery = %d, uint32_t queryCount = %d)\0A\00", align 1
@.str.182 = private unnamed_addr constant [153 x i8] c"%s:%d TRACE: (VkInstance instance = %p, uint32_t* pPhysicalDeviceGroupCount = %p, VkPhysicalDeviceGroupProperties* pPhysicalDeviceGroupProperties = %p)\0A\00", align 1
@.str.183 = private unnamed_addr constant [136 x i8] c"%s:%d TRACE: (VkDevice device = %p, const VkImageMemoryRequirementsInfo2* pInfo = %p, VkMemoryRequirements2* pMemoryRequirements = %p)\0A\00", align 1
@.str.184 = private unnamed_addr constant [137 x i8] c"%s:%d TRACE: (VkDevice device = %p, const VkBufferMemoryRequirementsInfo2* pInfo = %p, VkMemoryRequirements2* pMemoryRequirements = %p)\0A\00", align 1
@.str.185 = private unnamed_addr constant [205 x i8] c"%s:%d TRACE: (VkDevice device = %p, const VkImageSparseMemoryRequirementsInfo2* pInfo = %p, uint32_t* pSparseMemoryRequirementCount = %p, VkSparseImageMemoryRequirements2* pSparseMemoryRequirements = %p)\0A\00", align 1
@.str.186 = private unnamed_addr constant [96 x i8] c"%s:%d TRACE: (VkPhysicalDevice physicalDevice = %p, VkPhysicalDeviceFeatures2* pFeatures = %p)\0A\00", align 1
@.str.187 = private unnamed_addr constant [100 x i8] c"%s:%d TRACE: (VkPhysicalDevice physicalDevice = %p, VkPhysicalDeviceProperties2* pProperties = %p)\0A\00", align 1
@.str.188 = private unnamed_addr constant [120 x i8] c"%s:%d TRACE: (VkPhysicalDevice physicalDevice = %p, VkFormat format = %d, VkFormatProperties2* pFormatProperties = %p)\0A\00", align 1
@.str.189 = private unnamed_addr constant [171 x i8] c"%s:%d TRACE: (VkPhysicalDevice physicalDevice = %p, const VkPhysicalDeviceImageFormatInfo2* pImageFormatInfo = %p, VkImageFormatProperties2* pImageFormatProperties = %p)\0A\00", align 1
@.str.190 = private unnamed_addr constant [46 x i8] c"%s:%d WARNING: UNSUPPORTED: VkImageTiling %d\0A\00", align 1
@.str.191 = private unnamed_addr constant [150 x i8] c"%s:%d TRACE: (VkPhysicalDevice physicalDevice = %p, uint32_t* pQueueFamilyPropertyCount = %p, VkQueueFamilyProperties2* pQueueFamilyProperties = %p)\0A\00", align 1
@.str.192 = private unnamed_addr constant [112 x i8] c"%s:%d TRACE: (VkPhysicalDevice physicalDevice = %p, VkPhysicalDeviceMemoryProperties2* pMemoryProperties = %p)\0A\00", align 1
@.str.193 = private unnamed_addr constant [198 x i8] c"%s:%d TRACE: (VkPhysicalDevice physicalDevice = %p, const VkPhysicalDeviceSparseImageFormatInfo2* pFormatInfo = %p, uint32_t* pPropertyCount = %p, VkSparseImageFormatProperties2* pProperties = %p)\0A\00", align 1
@.str.194 = private unnamed_addr constant [104 x i8] c"%s:%d TRACE: (VkDevice device = %p, VkCommandPool commandPool = %p, VkCommandPoolTrimFlags flags = %d)\0A\00", align 1
@.str.195 = private unnamed_addr constant [102 x i8] c"%s:%d TRACE: (VkDevice device = %p, const VkDeviceQueueInfo2* pQueueInfo = %p, VkQueue* pQueue = %p)\0A\00", align 1
@.str.196 = private unnamed_addr constant [79 x i8] c"%s:%d WARNING: UNSUPPORTED: VkPhysicalDeviceVulkan11Features::protectedMemory\0A\00", align 1
@.str.197 = private unnamed_addr constant [192 x i8] c"%s:%d TRACE: (VkDevice device = %p, const VkSamplerYcbcrConversionCreateInfo* pCreateInfo = %p, const VkAllocationCallbacks* pAllocator = %p, VkSamplerYcbcrConversion* pYcbcrConversion = %p)\0A\00", align 1
@.str.198 = private unnamed_addr constant [130 x i8] c"%s:%d TRACE: (VkDevice device = %p, VkSamplerYcbcrConversion ycbcrConversion = %p, const VkAllocationCallbacks* pAllocator = %p)\0A\00", align 1
@.str.199 = private unnamed_addr constant [205 x i8] c"%s:%d TRACE: (VkDevice device = %p, const VkDescriptorUpdateTemplateCreateInfo* pCreateInfo = %p, const VkAllocationCallbacks* pAllocator = %p, VkDescriptorUpdateTemplate* pDescriptorUpdateTemplate = %p)\0A\00", align 1
@.str.200 = private unnamed_addr constant [58 x i8] c"%s:%d WARNING: UNSUPPORTED: pCreateInfo->templateType %d\0A\00", align 1
@.str.201 = private unnamed_addr constant [141 x i8] c"%s:%d TRACE: (VkDevice device = %p, VkDescriptorUpdateTemplate descriptorUpdateTemplate = %p, const VkAllocationCallbacks* pAllocator = %p)\0A\00", align 1
@.str.202 = private unnamed_addr constant [155 x i8] c"%s:%d TRACE: (VkDevice device = %p, VkDescriptorSet descriptorSet = %p, VkDescriptorUpdateTemplate descriptorUpdateTemplate = %p, const void* pData = %p)\0A\00", align 1
@.str.203 = private unnamed_addr constant [181 x i8] c"%s:%d TRACE: (VkPhysicalDevice physicalDevice = %p, const VkPhysicalDeviceExternalBufferInfo* pExternalBufferInfo = %p, VkExternalBufferProperties* pExternalBufferProperties = %p)\0A\00", align 1
@.str.204 = private unnamed_addr constant [177 x i8] c"%s:%d TRACE: (VkPhysicalDevice physicalDevice = %p, const VkPhysicalDeviceExternalFenceInfo* pExternalFenceInfo = %p, VkExternalFenceProperties* pExternalFenceProperties = %p)\0A\00", align 1
@.str.205 = private unnamed_addr constant [193 x i8] c"%s:%d TRACE: (VkPhysicalDevice physicalDevice = %p, const VkPhysicalDeviceExternalSemaphoreInfo* pExternalSemaphoreInfo = %p, VkExternalSemaphoreProperties* pExternalSemaphoreProperties = %p)\0A\00", align 1
@.str.206 = private unnamed_addr constant [139 x i8] c"%s:%d TRACE: (VkDevice device = %p, const VkDescriptorSetLayoutCreateInfo* pCreateInfo = %p, VkDescriptorSetLayoutSupport* pSupport = %p)\0A\00", align 1
@.str.207 = private unnamed_addr constant [118 x i8] c"%s:%d TRACE: (VkCommandBuffer commandBuffer = %p, uint32_t lineStippleFactor = %u, uint16_t lineStipplePattern = %u)\0A\00", align 1
@.str.208 = private unnamed_addr constant [90 x i8] c"%s:%d WARNING: UNSUPPORTED: VkPhysicalDeviceLineRasterizationFeaturesEXT::stippled*Lines\0A\00", align 1
@.str.209 = private unnamed_addr constant [96 x i8] c"%s:%d TRACE: (VkCommandBuffer commandBuffer = %p, const VkDebugUtilsLabelEXT* pLabelInfo = %p)\0A\00", align 1
@.str.210 = private unnamed_addr constant [190 x i8] c"%s:%d TRACE: (VkInstance instance = %p, const VkDebugUtilsMessengerCreateInfoEXT* pCreateInfo = %p, const VkAllocationCallbacks* pAllocator = %p, VkDebugUtilsMessengerEXT* pMessenger = %p)\0A\00", align 1
@.str.211 = private unnamed_addr constant [128 x i8] c"%s:%d TRACE: (VkInstance instance = %p, VkDebugUtilsMessengerEXT messenger = %p, const VkAllocationCallbacks* pAllocator = %p)\0A\00", align 1
@.str.212 = private unnamed_addr constant [80 x i8] c"%s:%d TRACE: (VkQueue queue = %p, const VkDebugUtilsLabelEXT* pLabelInfo = %p)\0A\00", align 1
@.str.213 = private unnamed_addr constant [90 x i8] c"%s:%d TRACE: (VkDevice device = %p, const VkDebugUtilsObjectNameInfoEXT* pNameInfo = %p)\0A\00", align 1
@.str.214 = private unnamed_addr constant [88 x i8] c"%s:%d TRACE: (VkDevice device = %p, const VkDebugUtilsObjectTagInfoEXT* pTagInfo = %p)\0A\00", align 1
@.str.215 = private unnamed_addr constant [217 x i8] c"%s:%d TRACE: (VkInstance instance = %p, VkDebugUtilsMessageSeverityFlagBitsEXT messageSeverity = %d, VkDebugUtilsMessageTypeFlagsEXT messageTypes = %d, const VkDebugUtilsMessengerCallbackDataEXT* pCallbackData = %p)\0A\00", align 1
@.str.216 = private unnamed_addr constant [152 x i8] c"%s:%d TRACE: (VkInstance instance = %p, VkXcbSurfaceCreateInfoKHR* pCreateInfo = %p, VkAllocationCallbacks* pAllocator = %p, VkSurface* pSurface = %p)\0A\00", align 1
@.str.217 = private unnamed_addr constant [151 x i8] c"%s:%d TRACE: (VkPhysicalDevice physicalDevice = %p, uint32_t queueFamilyIndex = %d, xcb_connection_t* connection = %p, xcb_visualid_t visual_id = %d)\0A\00", align 1
@.str.218 = private unnamed_addr constant [153 x i8] c"%s:%d TRACE: (VkInstance instance = %p, VkXlibSurfaceCreateInfoKHR* pCreateInfo = %p, VkAllocationCallbacks* pAllocator = %p, VkSurface* pSurface = %p)\0A\00", align 1
@.str.219 = private unnamed_addr constant [129 x i8] c"%s:%d TRACE: (VkPhysicalDevice physicalDevice = %p, uint32_t queueFamilyIndex = %d, Display* dpy = %p, VisualID visualID = %lu)\0A\00", align 1
@.str.220 = private unnamed_addr constant [157 x i8] c"%s:%d TRACE: (VkInstance instance = %p, VkHeadlessSurfaceCreateInfoEXT* pCreateInfo = %p, VkAllocationCallbacks* pAllocator = %p, VkSurface* pSurface = %p)\0A\00", align 1
@.str.221 = private unnamed_addr constant [114 x i8] c"%s:%d TRACE: (VkInstance instance = %p, VkSurfaceKHR surface = %p, const VkAllocationCallbacks* pAllocator = %p)\0A\00", align 1
@.str.222 = private unnamed_addr constant [136 x i8] c"%s:%d TRACE: (VkPhysicalDevice physicalDevice = %p, uint32_t queueFamilyIndex = %d, VkSurface surface = %p, VKBool32* pSupported = %p)\0A\00", align 1
@.str.223 = private unnamed_addr constant [133 x i8] c"%s:%d TRACE: (VkPhysicalDevice physicalDevice = %p, VkSurfaceKHR surface = %p, VkSurfaceCapabilitiesKHR* pSurfaceCapabilities = %p)\0A\00", align 1
@.str.224 = private unnamed_addr constant [158 x i8] c"%s:%d TRACE: (VkPhysicalDevice physicalDevice = %p, VkSurfaceKHR surface = %p. uint32_t* pSurfaceFormatCount = %p, VkSurfaceFormatKHR* pSurfaceFormats = %p)\0A\00", align 1
@.str.225 = private unnamed_addr constant [151 x i8] c"%s:%d TRACE: (VkPhysicalDevice physicalDevice = %p, VkSurfaceKHR surface = %p uint32_t* pPresentModeCount = %p, VkPresentModeKHR* pPresentModes = %p)\0A\00", align 1
@.str.226 = private unnamed_addr constant [166 x i8] c"%s:%d TRACE: (VkDevice device = %p, const VkSwapchainCreateInfoKHR* pCreateInfo = %p, const VkAllocationCallbacks* pAllocator = %p, VkSwapchainKHR* pSwapchain = %p)\0A\00", align 1
@.str.227 = private unnamed_addr constant [114 x i8] c"%s:%d TRACE: (VkDevice device = %p, VkSwapchainKHR swapchain = %p, const VkAllocationCallbacks* pAllocator = %p)\0A\00", align 1
@.str.228 = private unnamed_addr constant [137 x i8] c"%s:%d TRACE: (VkDevice device = %p, VkSwapchainKHR swapchain = %p, uint32_t* pSwapchainImageCount = %p, VkImage* pSwapchainImages = %p)\0A\00", align 1
@.str.229 = private unnamed_addr constant [168 x i8] c"%s:%d TRACE: (VkDevice device = %p, VkSwapchainKHR swapchain = %p, uint64_t timeout = %lu, VkSemaphore semaphore = %p, VkFence fence = %p, uint32_t* pImageIndex = %p)\0A\00", align 1
@.str.230 = private unnamed_addr constant [78 x i8] c"%s:%d TRACE: (VkQueue queue = %p, const VkPresentInfoKHR* pPresentInfo = %p)\0A\00", align 1
@.str.231 = private unnamed_addr constant [116 x i8] c"%s:%d TRACE: (VkDevice device = %p, const VkAcquireNextImageInfoKHR *pAcquireInfo = %p, uint32_t *pImageIndex = %p\0A\00", align 1
@.str.232 = private unnamed_addr constant [112 x i8] c"%s:%d TRACE: (VkDevice device = %p, VkDeviceGroupPresentCapabilitiesKHR* pDeviceGroupPresentCapabilities = %p)\0A\00", align 1
@.str.233 = private unnamed_addr constant [111 x i8] c"%s:%d TRACE: (VkDevice device = %p, VkSurfaceKHR surface = %p, VkDeviceGroupPresentModeFlagsKHR *pModes = %p)\0A\00", align 1
@.str.234 = private unnamed_addr constant [130 x i8] c"%s:%d TRACE: (VkPhysicalDevice physicalDevice = %p, VkSurfaceKHR surface = %p, uint32_t* pRectCount = %p, VkRect2D* pRects = %p)\0A\00", align 1
@_ZGVZN12_GLOBAL__N_117initializeLibraryEvE6doOnce = internal global i64 0, align 8
@_ZL25deviceExtensionProperties = internal constant <{ { <{ [24 x i8], [232 x i8] }>, i32, i8 }, { <{ [19 x i8], [237 x i8] }>, i32, i8 }, { <{ [25 x i8], [231 x i8] }>, i32, i8 }, { <{ [27 x i8], [229 x i8] }>, i32, i8 }, { <{ [33 x i8], [223 x i8] }>, i32, i8 }, { <{ [19 x i8], [237 x i8] }>, i32, i8 }, { <{ [21 x i8], [235 x i8] }>, i32, i8 }, { <{ [22 x i8], [234 x i8] }>, i32, i8 }, { <{ [25 x i8], [231 x i8] }>, i32, i8 }, { <{ [31 x i8], [225 x i8] }>, i32, i8 }, { <{ [19 x i8], [237 x i8] }>, i32, i8 }, { <{ [19 x i8], [237 x i8] }>, i32, i8 }, { <{ [19 x i8], [237 x i8] }>, i32, i8 }, { <{ [16 x i8], [240 x i8] }>, i32, i8 }, { <{ [27 x i8], [229 x i8] }>, i32, i8 }, { <{ [31 x i8], [225 x i8] }>, i32, i8 }, { <{ [37 x i8], [219 x i8] }>, i32, i8 }, { <{ [24 x i8], [232 x i8] }>, i32, i8 }, { <{ [35 x i8], [221 x i8] }>, i32, i8 }, { <{ [27 x i8], [229 x i8] }>, i32, i8 }, { <{ [25 x i8], [231 x i8] }>, i32, i8 }, { <{ [28 x i8], [228 x i8] }>, i32, i8 }, { <{ [23 x i8], [233 x i8] }>, i32, i8 }, { <{ [16 x i8], [240 x i8] }>, i32, i8 }, { <{ [28 x i8], [228 x i8] }>, i32, i8 }, { <{ [25 x i8], [231 x i8] }>, i32, i8 }, { <{ [27 x i8], [229 x i8] }>, i32, i8 }, { <{ [23 x i8], [233 x i8] }>, i32, i8 }, { <{ [37 x i8], [219 x i8] }>, i32, i8 }, { <{ [31 x i8], [225 x i8] }>, i32, i8 }, { <{ [23 x i8], [233 x i8] }>, i32, i8 }, { <{ [26 x i8], [230 x i8] }>, i32, i8 }, { <{ [29 x i8], [227 x i8] }>, i32, i8 }, { <{ [28 x i8], [228 x i8] }>, i32, i8 }, { <{ [24 x i8], [232 x i8] }>, i32, i8 }, { <{ [28 x i8], [228 x i8] }>, i32, i8 }, { <{ [28 x i8], [228 x i8] }>, i32, i8 }, { <{ [37 x i8], [219 x i8] }>, i32, i8 }, { <{ [16 x i8], [240 x i8] }>, i32, i8 }, { <{ [37 x i8], [219 x i8] }>, i32, i8 }, { <{ [25 x i8], [231 x i8] }>, i32, i8 } }> <{ { <{ [24 x i8], [232 x i8] }>, i32, i8 } { <{ [24 x i8], [232 x i8] }> <{ [24 x i8] c"VK_KHR_driver_properties", [232 x i8] zeroinitializer }>, i32 1, i8 1 }, { <{ [19 x i8], [237 x i8] }>, i32, i8 } { <{ [19 x i8], [237 x i8] }> <{ [19 x i8] c"VK_KHR_bind_memory2", [237 x i8] zeroinitializer }>, i32 1, i8 1 }, { <{ [25 x i8], [231 x i8] }>, i32, i8 } { <{ [25 x i8], [231 x i8] }> <{ [25 x i8] c"VK_KHR_create_renderpass2", [231 x i8] zeroinitializer }>, i32 1, i8 1 }, { <{ [27 x i8], [229 x i8] }>, i32, i8 } { <{ [27 x i8], [229 x i8] }> <{ [27 x i8] c"VK_KHR_dedicated_allocation", [229 x i8] zeroinitializer }>, i32 3, i8 1 }, { <{ [33 x i8], [223 x i8] }>, i32, i8 } { <{ [33 x i8], [223 x i8] }> <{ [33 x i8] c"VK_KHR_descriptor_update_template", [223 x i8] zeroinitializer }>, i32 1, i8 1 }, { <{ [19 x i8], [237 x i8] }>, i32, i8 } { <{ [19 x i8], [237 x i8] }> <{ [19 x i8] c"VK_KHR_device_group", [237 x i8] zeroinitializer }>, i32 4, i8 1 }, { <{ [21 x i8], [235 x i8] }>, i32, i8 } { <{ [21 x i8], [235 x i8] }> <{ [21 x i8] c"VK_KHR_external_fence", [235 x i8] zeroinitializer }>, i32 1, i8 1 }, { <{ [22 x i8], [234 x i8] }>, i32, i8 } { <{ [22 x i8], [234 x i8] }> <{ [22 x i8] c"VK_KHR_external_memory", [234 x i8] zeroinitializer }>, i32 1, i8 1 }, { <{ [25 x i8], [231 x i8] }>, i32, i8 } { <{ [25 x i8], [231 x i8] }> <{ [25 x i8] c"VK_KHR_external_semaphore", [231 x i8] zeroinitializer }>, i32 1, i8 1 }, { <{ [31 x i8], [225 x i8] }>, i32, i8 } { <{ [31 x i8], [225 x i8] }> <{ [31 x i8] c"VK_KHR_get_memory_requirements2", [225 x i8] zeroinitializer }>, i32 1, i8 1 }, { <{ [19 x i8], [237 x i8] }>, i32, i8 } { <{ [19 x i8], [237 x i8] }> <{ [19 x i8] c"VK_KHR_maintenance1", [237 x i8] zeroinitializer }>, i32 2, i8 1 }, { <{ [19 x i8], [237 x i8] }>, i32, i8 } { <{ [19 x i8], [237 x i8] }> <{ [19 x i8] c"VK_KHR_maintenance2", [237 x i8] zeroinitializer }>, i32 1, i8 1 }, { <{ [19 x i8], [237 x i8] }>, i32, i8 } { <{ [19 x i8], [237 x i8] }> <{ [19 x i8] c"VK_KHR_maintenance3", [237 x i8] zeroinitializer }>, i32 1, i8 1 }, { <{ [16 x i8], [240 x i8] }>, i32, i8 } { <{ [16 x i8], [240 x i8] }> <{ [16 x i8] c"VK_KHR_multiview", [240 x i8] zeroinitializer }>, i32 1, i8 1 }, { <{ [27 x i8], [229 x i8] }>, i32, i8 } { <{ [27 x i8], [229 x i8] }> <{ [27 x i8] c"VK_KHR_relaxed_block_layout", [229 x i8] zeroinitializer }>, i32 1, i8 1 }, { <{ [31 x i8], [225 x i8] }>, i32, i8 } { <{ [31 x i8], [225 x i8] }> <{ [31 x i8] c"VK_KHR_sampler_ycbcr_conversion", [225 x i8] zeroinitializer }>, i32 14, i8 1 }, { <{ [37 x i8], [219 x i8] }>, i32, i8 } { <{ [37 x i8], [219 x i8] }> <{ [37 x i8] c"VK_KHR_separate_depth_stencil_layouts", [219 x i8] zeroinitializer }>, i32 1, i8 1 }, { <{ [24 x i8], [232 x i8] }>, i32, i8 } { <{ [24 x i8], [232 x i8] }> <{ [24 x i8] c"VK_EXT_depth_clip_enable", [232 x i8] zeroinitializer }>, i32 1, i8 1 }, { <{ [35 x i8], [221 x i8] }>, i32, i8 } { <{ [35 x i8], [221 x i8] }> <{ [35 x i8] c"VK_KHR_storage_buffer_storage_class", [221 x i8] zeroinitializer }>, i32 1, i8 1 }, { <{ [27 x i8], [229 x i8] }>, i32, i8 } { <{ [27 x i8], [229 x i8] }> <{ [27 x i8] c"VK_EXT_queue_family_foreign", [229 x i8] zeroinitializer }>, i32 1, i8 1 }, { <{ [25 x i8], [231 x i8] }>, i32, i8 } { <{ [25 x i8], [231 x i8] }> <{ [25 x i8] c"VK_EXT_line_rasterization", [231 x i8] zeroinitializer }>, i32 1, i8 1 }, { <{ [28 x i8], [228 x i8] }>, i32, i8 } { <{ [28 x i8], [228 x i8] }> <{ [28 x i8] c"VK_EXT_shader_stencil_export", [228 x i8] zeroinitializer }>, i32 1, i8 1 }, { <{ [23 x i8], [233 x i8] }>, i32, i8 } { <{ [23 x i8], [233 x i8] }> <{ [23 x i8] c"VK_EXT_image_robustness", [233 x i8] zeroinitializer }>, i32 1, i8 1 }, { <{ [16 x i8], [240 x i8] }>, i32, i8 } { <{ [16 x i8], [240 x i8] }> <{ [16 x i8] c"VK_KHR_swapchain", [240 x i8] zeroinitializer }>, i32 70, i8 1 }, { <{ [28 x i8], [228 x i8] }>, i32, i8 } { <{ [28 x i8], [228 x i8] }> <{ [28 x i8] c"VK_KHR_external_semaphore_fd", [228 x i8] zeroinitializer }>, i32 1, i8 1 }, { <{ [25 x i8], [231 x i8] }>, i32, i8 } { <{ [25 x i8], [231 x i8] }> <{ [25 x i8] c"VK_KHR_external_memory_fd", [231 x i8] zeroinitializer }>, i32 1, i8 1 }, { <{ [27 x i8], [229 x i8] }>, i32, i8 } { <{ [27 x i8], [229 x i8] }> <{ [27 x i8] c"VK_EXT_external_memory_host", [229 x i8] zeroinitializer }>, i32 1, i8 1 }, { <{ [23 x i8], [233 x i8] }>, i32, i8 } { <{ [23 x i8], [233 x i8] }> <{ [23 x i8] c"VK_EXT_provoking_vertex", [233 x i8] zeroinitializer }>, i32 1, i8 1 }, { <{ [37 x i8], [219 x i8] }>, i32, i8 } { <{ [37 x i8], [219 x i8] }> <{ [37 x i8] c"VK_GOOGLE_sampler_filtering_precision", [219 x i8] zeroinitializer }>, i32 1, i8 1 }, { <{ [31 x i8], [225 x i8] }>, i32, i8 } { <{ [31 x i8], [225 x i8] }> <{ [31 x i8] c"VK_EXT_depth_range_unrestricted", [225 x i8] zeroinitializer }>, i32 1, i8 1 }, { <{ [23 x i8], [233 x i8] }>, i32, i8 } { <{ [23 x i8], [233 x i8] }> <{ [23 x i8] c"VK_EXT_host_query_reset", [233 x i8] zeroinitializer }>, i32 1, i8 1 }, { <{ [26 x i8], [230 x i8] }>, i32, i8 } { <{ [26 x i8], [230 x i8] }> <{ [26 x i8] c"VK_EXT_scalar_block_layout", [230 x i8] zeroinitializer }>, i32 1, i8 1 }, { <{ [29 x i8], [227 x i8] }>, i32, i8 } { <{ [29 x i8], [227 x i8] }> <{ [29 x i8] c"VK_EXT_separate_stencil_usage", [227 x i8] zeroinitializer }>, i32 1, i8 1 }, { <{ [28 x i8], [228 x i8] }>, i32, i8 } { <{ [28 x i8], [228 x i8] }> <{ [28 x i8] c"VK_KHR_depth_stencil_resolve", [228 x i8] zeroinitializer }>, i32 1, i8 1 }, { <{ [24 x i8], [232 x i8] }>, i32, i8 } { <{ [24 x i8], [232 x i8] }> <{ [24 x i8] c"VK_KHR_image_format_list", [232 x i8] zeroinitializer }>, i32 1, i8 1 }, { <{ [28 x i8], [228 x i8] }>, i32, i8 } { <{ [28 x i8], [228 x i8] }> <{ [28 x i8] c"VK_KHR_imageless_framebuffer", [228 x i8] zeroinitializer }>, i32 1, i8 1 }, { <{ [28 x i8], [228 x i8] }>, i32, i8 } { <{ [28 x i8], [228 x i8] }> <{ [28 x i8] c"VK_KHR_shader_float_controls", [228 x i8] zeroinitializer }>, i32 4, i8 1 }, { <{ [37 x i8], [219 x i8] }>, i32, i8 } { <{ [37 x i8], [219 x i8] }> <{ [37 x i8] c"VK_KHR_shader_subgroup_extended_types", [219 x i8] zeroinitializer }>, i32 1, i8 1 }, { <{ [16 x i8], [240 x i8] }>, i32, i8 } { <{ [16 x i8], [240 x i8] }> <{ [16 x i8] c"VK_KHR_spirv_1_4", [240 x i8] zeroinitializer }>, i32 1, i8 1 }, { <{ [37 x i8], [219 x i8] }>, i32, i8 } { <{ [37 x i8], [219 x i8] }> <{ [37 x i8] c"VK_KHR_uniform_buffer_standard_layout", [219 x i8] zeroinitializer }>, i32 1, i8 1 }, { <{ [25 x i8], [231 x i8] }>, i32, i8 } { <{ [25 x i8], [231 x i8] }> <{ [25 x i8] c"VK_KHR_timeline_semaphore", [231 x i8] zeroinitializer }>, i32 2, i8 1 } }>, align 16
@_ZZN12_GLOBAL__N_120getOrCreateSchedulerEvE9scheduler = internal global %struct.Scheduler zeroinitializer, align 8
@_ZGVZN12_GLOBAL__N_120getOrCreateSchedulerEvE9scheduler = internal global i64 0, align 8
@__dso_handle = external hidden global i8
@_ZN4marl9Allocator7DefaultE = external local_unnamed_addr global %"class.marl::Allocator"*, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN12_GLOBAL__N_120getOrCreateSchedulerEvE3$_0FviEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@_ZTVNSt3__120__shared_ptr_emplaceIN4marl9SchedulerENS_9allocatorIS2_EEEE = linkonce_odr hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"struct.std::__1::__shared_ptr_emplace"*)* @_ZNSt3__120__shared_ptr_emplaceIN4marl9SchedulerENS_9allocatorIS2_EEED2Ev to i8*), i8* bitcast (void (%"struct.std::__1::__shared_ptr_emplace"*)* @_ZNSt3__120__shared_ptr_emplaceIN4marl9SchedulerENS_9allocatorIS2_EEED0Ev to i8*), i8* bitcast (void (%"struct.std::__1::__shared_ptr_emplace"*)* @_ZNSt3__120__shared_ptr_emplaceIN4marl9SchedulerENS_9allocatorIS2_EEE16__on_zero_sharedEv to i8*), i8* bitcast (i8* (%"class.std::__1::__shared_weak_count"*, %"class.std::type_info"*)* @_ZNKSt3__119__shared_weak_count13__get_deleterERKSt9type_info to i8*), i8* bitcast (void (%"struct.std::__1::__shared_ptr_emplace"*)* @_ZNSt3__120__shared_ptr_emplaceIN4marl9SchedulerENS_9allocatorIS2_EEE21__on_zero_shared_weakEv to i8*)] }, comdat, align 8
@_ZTVNSt3__120__shared_ptr_emplaceIN2sw12CountedEventENS_9allocatorIS2_EEEE = linkonce_odr hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"struct.std::__1::__shared_ptr_emplace.893"*)* @_ZNSt3__120__shared_ptr_emplaceIN2sw12CountedEventENS_9allocatorIS2_EEED2Ev to i8*), i8* bitcast (void (%"struct.std::__1::__shared_ptr_emplace.893"*)* @_ZNSt3__120__shared_ptr_emplaceIN2sw12CountedEventENS_9allocatorIS2_EEED0Ev to i8*), i8* bitcast (void (%"struct.std::__1::__shared_ptr_emplace.893"*)* @_ZNSt3__120__shared_ptr_emplaceIN2sw12CountedEventENS_9allocatorIS2_EEE16__on_zero_sharedEv to i8*), i8* bitcast (i8* (%"class.std::__1::__shared_weak_count"*, %"class.std::type_info"*)* @_ZNKSt3__119__shared_weak_count13__get_deleterERKSt9type_info to i8*), i8* bitcast (void (%"struct.std::__1::__shared_ptr_emplace.893"*)* @_ZNSt3__120__shared_ptr_emplaceIN2sw12CountedEventENS_9allocatorIS2_EEE21__on_zero_shared_weakEv to i8*)] }, comdat, align 8
@_ZTVNSt3__120__shared_ptr_emplaceIN4marl9WaitGroup4DataENS_9allocatorIS3_EEEE = linkonce_odr hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"struct.std::__1::__shared_ptr_emplace.902"*)* @_ZNSt3__120__shared_ptr_emplaceIN4marl9WaitGroup4DataENS_9allocatorIS3_EEED2Ev to i8*), i8* bitcast (void (%"struct.std::__1::__shared_ptr_emplace.902"*)* @_ZNSt3__120__shared_ptr_emplaceIN4marl9WaitGroup4DataENS_9allocatorIS3_EEED0Ev to i8*), i8* bitcast (void (%"struct.std::__1::__shared_ptr_emplace.902"*)* @_ZNSt3__120__shared_ptr_emplaceIN4marl9WaitGroup4DataENS_9allocatorIS3_EEE16__on_zero_sharedEv to i8*), i8* bitcast (i8* (%"class.std::__1::__shared_weak_count"*, %"class.std::type_info"*)* @_ZNKSt3__119__shared_weak_count13__get_deleterERKSt9type_info to i8*), i8* bitcast (void (%"struct.std::__1::__shared_ptr_emplace.902"*)* @_ZNSt3__120__shared_ptr_emplaceIN4marl9WaitGroup4DataENS_9allocatorIS3_EEE21__on_zero_shared_weakEv to i8*)] }, comdat, align 8
@_ZTVNSt3__120__shared_ptr_pointerIPN4marl5Event6SharedENS1_9Allocator7DeleterENS_9allocatorIS3_EEEE = linkonce_odr hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.std::__1::__shared_weak_count"*)* @_ZNSt3__119__shared_weak_countD2Ev to i8*), i8* bitcast (void (%"class.std::__1::__shared_ptr_pointer"*)* @_ZNSt3__120__shared_ptr_pointerIPN4marl5Event6SharedENS1_9Allocator7DeleterENS_9allocatorIS3_EEED0Ev to i8*), i8* bitcast (void (%"class.std::__1::__shared_ptr_pointer"*)* @_ZNSt3__120__shared_ptr_pointerIPN4marl5Event6SharedENS1_9Allocator7DeleterENS_9allocatorIS3_EEE16__on_zero_sharedEv to i8*), i8* bitcast (i8* (%"class.std::__1::__shared_weak_count"*, %"class.std::type_info"*)* @_ZNKSt3__119__shared_weak_count13__get_deleterERKSt9type_info to i8*), i8* bitcast (void (%"class.std::__1::__shared_ptr_pointer"*)* @_ZNSt3__120__shared_ptr_pointerIPN4marl5Event6SharedENS1_9Allocator7DeleterENS_9allocatorIS3_EEE21__on_zero_shared_weakEv to i8*)] }, comdat, align 8
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_libVulkan.cpp, i8* null }]

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP10VkBuffer_TEcvPvEv(%class.VkNonDispatchableHandle*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP10VkBuffer_TEaSEm(%class.VkNonDispatchableHandle*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle, %class.VkNonDispatchableHandle* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP9VkImage_TEcvPvEv(%class.VkNonDispatchableHandle.0*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.0* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP9VkImage_TEaSEm(%class.VkNonDispatchableHandle.0*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.0, %class.VkNonDispatchableHandle.0* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP13VkSemaphore_TEcvPvEv(%class.VkNonDispatchableHandle.1*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.1* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP13VkSemaphore_TEaSEm(%class.VkNonDispatchableHandle.1*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.1, %class.VkNonDispatchableHandle.1* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP9VkFence_TEcvPvEv(%class.VkNonDispatchableHandle.2*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.2* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP9VkFence_TEaSEm(%class.VkNonDispatchableHandle.2*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.2, %class.VkNonDispatchableHandle.2* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP16VkDeviceMemory_TEcvPvEv(%class.VkNonDispatchableHandle.3*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.3* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP16VkDeviceMemory_TEaSEm(%class.VkNonDispatchableHandle.3*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.3, %class.VkNonDispatchableHandle.3* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP9VkEvent_TEcvPvEv(%class.VkNonDispatchableHandle.4*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.4* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP9VkEvent_TEaSEm(%class.VkNonDispatchableHandle.4*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.4, %class.VkNonDispatchableHandle.4* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP13VkQueryPool_TEcvPvEv(%class.VkNonDispatchableHandle.5*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.5* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP13VkQueryPool_TEaSEm(%class.VkNonDispatchableHandle.5*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.5, %class.VkNonDispatchableHandle.5* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP14VkBufferView_TEcvPvEv(%class.VkNonDispatchableHandle.6*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.6* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP14VkBufferView_TEaSEm(%class.VkNonDispatchableHandle.6*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.6, %class.VkNonDispatchableHandle.6* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP13VkImageView_TEcvPvEv(%class.VkNonDispatchableHandle.7*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.7* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP13VkImageView_TEaSEm(%class.VkNonDispatchableHandle.7*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.7, %class.VkNonDispatchableHandle.7* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP16VkShaderModule_TEcvPvEv(%class.VkNonDispatchableHandle.8*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.8* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP16VkShaderModule_TEaSEm(%class.VkNonDispatchableHandle.8*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.8, %class.VkNonDispatchableHandle.8* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP17VkPipelineCache_TEcvPvEv(%class.VkNonDispatchableHandle.9*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.9* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP17VkPipelineCache_TEaSEm(%class.VkNonDispatchableHandle.9*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.9, %class.VkNonDispatchableHandle.9* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP18VkPipelineLayout_TEcvPvEv(%class.VkNonDispatchableHandle.10*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.10* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP18VkPipelineLayout_TEaSEm(%class.VkNonDispatchableHandle.10*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.10, %class.VkNonDispatchableHandle.10* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP12VkPipeline_TEcvPvEv(%class.VkNonDispatchableHandle.11*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.11* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP12VkPipeline_TEaSEm(%class.VkNonDispatchableHandle.11*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.11, %class.VkNonDispatchableHandle.11* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP14VkRenderPass_TEcvPvEv(%class.VkNonDispatchableHandle.12*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.12* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP14VkRenderPass_TEaSEm(%class.VkNonDispatchableHandle.12*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.12, %class.VkNonDispatchableHandle.12* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP23VkDescriptorSetLayout_TEcvPvEv(%class.VkNonDispatchableHandle.13*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.13* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP23VkDescriptorSetLayout_TEaSEm(%class.VkNonDispatchableHandle.13*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.13, %class.VkNonDispatchableHandle.13* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP11VkSampler_TEcvPvEv(%class.VkNonDispatchableHandle.14*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.14* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP11VkSampler_TEaSEm(%class.VkNonDispatchableHandle.14*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.14, %class.VkNonDispatchableHandle.14* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP17VkDescriptorSet_TEcvPvEv(%class.VkNonDispatchableHandle.15*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.15* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP17VkDescriptorSet_TEaSEm(%class.VkNonDispatchableHandle.15*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.15, %class.VkNonDispatchableHandle.15* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP18VkDescriptorPool_TEcvPvEv(%class.VkNonDispatchableHandle.16*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.16* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP18VkDescriptorPool_TEaSEm(%class.VkNonDispatchableHandle.16*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.16, %class.VkNonDispatchableHandle.16* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP15VkFramebuffer_TEcvPvEv(%class.VkNonDispatchableHandle.17*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.17* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP15VkFramebuffer_TEaSEm(%class.VkNonDispatchableHandle.17*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.17, %class.VkNonDispatchableHandle.17* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP15VkCommandPool_TEcvPvEv(%class.VkNonDispatchableHandle.18*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.18* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP15VkCommandPool_TEaSEm(%class.VkNonDispatchableHandle.18*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.18, %class.VkNonDispatchableHandle.18* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP26VkSamplerYcbcrConversion_TEcvPvEv(%class.VkNonDispatchableHandle.19*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.19* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP26VkSamplerYcbcrConversion_TEaSEm(%class.VkNonDispatchableHandle.19*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.19, %class.VkNonDispatchableHandle.19* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP28VkDescriptorUpdateTemplate_TEcvPvEv(%class.VkNonDispatchableHandle.20*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.20* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP28VkDescriptorUpdateTemplate_TEaSEm(%class.VkNonDispatchableHandle.20*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.20, %class.VkNonDispatchableHandle.20* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP14VkSurfaceKHR_TEcvPvEv(%class.VkNonDispatchableHandle.21*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.21* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP14VkSurfaceKHR_TEaSEm(%class.VkNonDispatchableHandle.21*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.21, %class.VkNonDispatchableHandle.21* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP16VkSwapchainKHR_TEcvPvEv(%class.VkNonDispatchableHandle.22*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.22* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP16VkSwapchainKHR_TEaSEm(%class.VkNonDispatchableHandle.22*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.22, %class.VkNonDispatchableHandle.22* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP14VkDisplayKHR_TEcvPvEv(%class.VkNonDispatchableHandle.23*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.23* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP14VkDisplayKHR_TEaSEm(%class.VkNonDispatchableHandle.23*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.23, %class.VkNonDispatchableHandle.23* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP18VkDisplayModeKHR_TEcvPvEv(%class.VkNonDispatchableHandle.24*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.24* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP18VkDisplayModeKHR_TEaSEm(%class.VkNonDispatchableHandle.24*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.24, %class.VkNonDispatchableHandle.24* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP24VkDeferredOperationKHR_TEcvPvEv(%class.VkNonDispatchableHandle.25*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.25* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP24VkDeferredOperationKHR_TEaSEm(%class.VkNonDispatchableHandle.25*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.25, %class.VkNonDispatchableHandle.25* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP26VkDebugReportCallbackEXT_TEcvPvEv(%class.VkNonDispatchableHandle.26*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.26* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP26VkDebugReportCallbackEXT_TEaSEm(%class.VkNonDispatchableHandle.26*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.26, %class.VkNonDispatchableHandle.26* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP15VkCuModuleNVX_TEcvPvEv(%class.VkNonDispatchableHandle.27*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.27* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP15VkCuModuleNVX_TEaSEm(%class.VkNonDispatchableHandle.27*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.27, %class.VkNonDispatchableHandle.27* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP17VkCuFunctionNVX_TEcvPvEv(%class.VkNonDispatchableHandle.28*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.28* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP17VkCuFunctionNVX_TEaSEm(%class.VkNonDispatchableHandle.28*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.28, %class.VkNonDispatchableHandle.28* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP26VkDebugUtilsMessengerEXT_TEcvPvEv(%class.VkNonDispatchableHandle.29*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.29* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP26VkDebugUtilsMessengerEXT_TEaSEm(%class.VkNonDispatchableHandle.29*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.29, %class.VkNonDispatchableHandle.29* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP22VkValidationCacheEXT_TEcvPvEv(%class.VkNonDispatchableHandle.30*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.30* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP22VkValidationCacheEXT_TEaSEm(%class.VkNonDispatchableHandle.30*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.30, %class.VkNonDispatchableHandle.30* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP27VkAccelerationStructureNV_TEcvPvEv(%class.VkNonDispatchableHandle.31*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.31* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP27VkAccelerationStructureNV_TEaSEm(%class.VkNonDispatchableHandle.31*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.31, %class.VkNonDispatchableHandle.31* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP33VkPerformanceConfigurationINTEL_TEcvPvEv(%class.VkNonDispatchableHandle.32*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.32* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP33VkPerformanceConfigurationINTEL_TEaSEm(%class.VkNonDispatchableHandle.32*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.32, %class.VkNonDispatchableHandle.32* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP28VkIndirectCommandsLayoutNV_TEcvPvEv(%class.VkNonDispatchableHandle.33*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.33* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP28VkIndirectCommandsLayoutNV_TEaSEm(%class.VkNonDispatchableHandle.33*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.33, %class.VkNonDispatchableHandle.33* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP22VkPrivateDataSlotEXT_TEcvPvEv(%class.VkNonDispatchableHandle.34*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.34* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP22VkPrivateDataSlotEXT_TEaSEm(%class.VkNonDispatchableHandle.34*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.34, %class.VkNonDispatchableHandle.34* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP28VkAccelerationStructureKHR_TEcvPvEv(%class.VkNonDispatchableHandle.35*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.35* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP28VkAccelerationStructureKHR_TEaSEm(%class.VkNonDispatchableHandle.35*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.35, %class.VkNonDispatchableHandle.35* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define void ()* @vk_icdGetInstanceProcAddr(%struct.VkInstance_T*, i8*) local_unnamed_addr #0 {
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 276, %struct.VkInstance_T* %0, i8* %1) #12
  %3 = icmp eq %struct.VkInstance_T* %0, null
  %4 = bitcast %struct.VkInstance_T* %0 to %"class.vk::DispatchableObject"*
  %5 = getelementptr inbounds %"class.vk::DispatchableObject", %"class.vk::DispatchableObject"* %4, i64 0, i32 1
  %6 = select i1 %3, %"class.vk::Instance"* null, %"class.vk::Instance"* %5
  %7 = tail call void ()* @_ZN2vk19GetInstanceProcAddrEPNS_8InstanceEPKc(%"class.vk::Instance"* %6, i8* %1) #12
  ret void ()* %7
}

; Function Attrs: optsize
declare void @_ZN2sw5traceEPKcz(i8*, ...) local_unnamed_addr #1

; Function Attrs: optsize
declare void ()* @_ZN2vk19GetInstanceProcAddrEPNS_8InstanceEPKc(%"class.vk::Instance"*, i8*) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable writeonly
define i32 @vk_icdNegotiateLoaderICDInterfaceVersion(i32* nocapture) local_unnamed_addr #2 {
  store i32 3, i32* %0, align 4
  ret i32 0
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: optsize
declare zeroext i1 @_ZN2vk13XcbSurfaceKHR9hasLibXCBEv() local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare {}* @llvm.invariant.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @vkCreateInstance(%struct.VkInstanceCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkInstance_T**) local_unnamed_addr #0 {
  %4 = alloca %"class.rr::Config::Edit", align 8
  %5 = alloca %"class.rr::Config::Edit", align 8
  %6 = alloca %class.VkNonDispatchableHandle.29, align 8
  %7 = alloca %struct.VkPhysicalDevice_T*, align 8
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([135 x i8], [135 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 505, %struct.VkInstanceCreateInfo* %0, %struct.VkAllocationCallbacks* %1, %struct.VkInstance_T** %2) #12
  %8 = load atomic i8, i8* bitcast (i64* @_ZGVZN12_GLOBAL__N_117initializeLibraryEvE6doOnce to i8*) acquire, align 8
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %57, !prof !2

10:                                               ; preds = %3
  %11 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN12_GLOBAL__N_117initializeLibraryEvE6doOnce) #13
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %57, label %13

13:                                               ; preds = %10
  %14 = bitcast %"class.rr::Config::Edit"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %14) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 32, i1 false) #13
  %15 = bitcast %"class.rr::Config::Edit"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %15) #13
  %16 = getelementptr inbounds %"class.rr::Config::Edit", %"class.rr::Config::Edit"* %5, i64 0, i32 2
  %17 = bitcast %"class.rr::Config::Edit"* %5 to i64*
  store i64 4294967298, i64* %17, align 8
  %18 = getelementptr inbounds %"class.rr::Config::Edit", %"class.rr::Config::Edit"* %5, i64 0, i32 2, i32 0, i32 1
  %19 = getelementptr inbounds %"class.rr::Config::Edit", %"class.rr::Config::Edit"* %5, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %20 = bitcast %"struct.std::__1::pair"** %18 to i64*
  %21 = bitcast %"class.std::__1::vector.861"* %16 to i64*
  %22 = bitcast %"struct.std::__1::pair"** %19 to i64*
  %23 = tail call i8* @_Znwm(i64 16) #14
  %24 = bitcast i8* %23 to <2 x i64>*
  store <2 x i64> <i64 2, i64 38654705664>, <2 x i64>* %24, align 4
  %25 = tail call i8* @_Znwm(i64 32) #14
  %26 = getelementptr inbounds i8, i8* %25, i64 16
  %27 = bitcast i8* %26 to i64*
  store i64 34359738368, i64* %27, align 4
  %28 = getelementptr inbounds i8, i8* %25, i64 24
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %25, i8* nonnull align 4 %23, i64 16, i1 false) #13
  tail call void @_ZdlPv(i8* nonnull %23) #14
  %29 = bitcast i8* %28 to i64*
  store i64 8589934592, i64* %29, align 4
  %30 = tail call i8* @_Znwm(i64 64) #14
  %31 = getelementptr inbounds i8, i8* %30, i64 32
  %32 = getelementptr inbounds i8, i8* %30, i64 64
  %33 = ptrtoint i8* %32 to i64
  %34 = bitcast i8* %31 to i64*
  store i64 42949672960, i64* %34, align 4
  %35 = getelementptr inbounds i8, i8* %30, i64 40
  %36 = ptrtoint i8* %30 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %30, i8* nonnull align 4 %25, i64 32, i1 false) #13
  store i64 %36, i64* %21, align 8
  store i64 %33, i64* %22, align 8
  tail call void @_ZdlPv(i8* nonnull %25) #14
  %37 = bitcast i8* %35 to <2 x i64>*
  store <2 x i64> <i64 8589934592, i64 4294967296>, <2 x i64>* %37, align 4
  %38 = getelementptr inbounds i8, i8* %30, i64 56
  %39 = ptrtoint i8* %38 to i64
  store i64 %39, i64* %20, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %14, i8* nonnull align 8 %15, i64 5, i1 false) #13
  %40 = getelementptr inbounds %"class.rr::Config::Edit", %"class.rr::Config::Edit"* %4, i64 0, i32 2
  call void @_ZNSt3__16vectorINS_4pairIN2rr6Config4Edit8ListEditENS2_12Optimization4PassEEENS_9allocatorIS8_EEEC2ERKSB_(%"class.std::__1::vector.861"* %40, %"class.std::__1::vector.861"* dereferenceable(24) %16) #12
  %41 = getelementptr inbounds %"class.rr::Config::Edit", %"class.rr::Config::Edit"* %5, i64 0, i32 2, i32 0, i32 0
  %42 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %41, align 8
  %43 = icmp eq %"struct.std::__1::pair"* %42, null
  br i1 %43, label %47, label %44

44:                                               ; preds = %13
  %45 = ptrtoint %"struct.std::__1::pair"* %42 to i64
  store i64 %45, i64* %20, align 8
  %46 = bitcast %"struct.std::__1::pair"* %42 to i8*
  call void @_ZdlPv(i8* %46) #14
  br label %47

47:                                               ; preds = %44, %13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %15) #13
  call void @_ZN2rr7Nucleus19adjustDefaultConfigERKNS_6Config4EditE(%"class.rr::Config::Edit"* nonnull dereferenceable(32) %4) #12
  %48 = getelementptr inbounds %"class.rr::Config::Edit", %"class.rr::Config::Edit"* %4, i64 0, i32 2, i32 0, i32 0
  %49 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %48, align 8
  %50 = icmp eq %"struct.std::__1::pair"* %49, null
  br i1 %50, label %56, label %51

51:                                               ; preds = %47
  %52 = ptrtoint %"struct.std::__1::pair"* %49 to i64
  %53 = getelementptr inbounds %"class.rr::Config::Edit", %"class.rr::Config::Edit"* %4, i64 0, i32 2, i32 0, i32 1
  %54 = bitcast %"struct.std::__1::pair"** %53 to i64*
  store i64 %52, i64* %54, align 8
  %55 = bitcast %"struct.std::__1::pair"* %49 to i8*
  call void @_ZdlPv(i8* %55) #14
  br label %56

56:                                               ; preds = %51, %47
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %14) #13
  call void @_ZN2sw5CPUID15setEnableSSE4_1Eb(i1 zeroext true) #12
  call void @_ZN2sw5CPUID14setEnableSSSE3Eb(i1 zeroext true) #12
  call void @_ZN2sw5CPUID13setEnableSSE3Eb(i1 zeroext true) #12
  call void @_ZN2sw5CPUID13setEnableSSE2Eb(i1 zeroext true) #12
  call void @_ZN2sw5CPUID12setEnableSSEEb(i1 zeroext true) #12
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN12_GLOBAL__N_117initializeLibraryEvE6doOnce) #13
  br label %57

57:                                               ; preds = %3, %10, %56
  %58 = getelementptr inbounds %struct.VkInstanceCreateInfo, %struct.VkInstanceCreateInfo* %0, i64 0, i32 2
  %59 = load i32, i32* %58, align 8
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %62, label %61

61:                                               ; preds = %57
  call void (i8*, ...) @_ZN2sw4warnEPKcz(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 512, i32 %59) #12
  br label %62

62:                                               ; preds = %57, %61
  %63 = getelementptr inbounds %struct.VkInstanceCreateInfo, %struct.VkInstanceCreateInfo* %0, i64 0, i32 4
  %64 = load i32, i32* %63, align 8
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %67, label %66

66:                                               ; preds = %62
  call void (i8*, ...) @_ZN2sw4warnEPKcz(i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 517) #12
  br label %67

67:                                               ; preds = %62, %66
  %68 = getelementptr inbounds %struct.VkInstanceCreateInfo, %struct.VkInstanceCreateInfo* %0, i64 0, i32 6
  %69 = load i32, i32* %68, align 8
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %95, label %71

71:                                               ; preds = %67
  %72 = getelementptr inbounds %struct.VkInstanceCreateInfo, %struct.VkInstanceCreateInfo* %0, i64 0, i32 7
  %73 = load i8**, i8*** %72, align 8
  %74 = zext i32 %69 to i64
  br label %77

75:                                               ; preds = %89
  %76 = icmp ult i64 %94, %74
  br i1 %76, label %77, label %95

77:                                               ; preds = %71, %75
  %78 = phi i64 [ 0, %71 ], [ %94, %75 ]
  %79 = getelementptr inbounds i8*, i8** %73, i64 %78
  %80 = load i8*, i8** %79, align 8
  br label %83

81:                                               ; preds = %83
  %82 = icmp eq i64 %88, 10
  br i1 %82, label %140, label %83

83:                                               ; preds = %81, %77
  %84 = phi i64 [ 0, %77 ], [ %88, %81 ]
  %85 = getelementptr inbounds [10 x %struct.ExtensionProperties], [10 x %struct.ExtensionProperties]* @_ZL27instanceExtensionProperties, i64 0, i64 %84, i32 0, i32 0, i64 0
  %86 = call i32 @strcmp(i8* %80, i8* %85) #15
  %87 = icmp eq i32 %86, 0
  %88 = add nuw nsw i64 %84, 1
  br i1 %87, label %89, label %81

89:                                               ; preds = %83
  %90 = and i64 %84, 4294967295
  %91 = getelementptr inbounds [10 x %struct.ExtensionProperties], [10 x %struct.ExtensionProperties]* @_ZL27instanceExtensionProperties, i64 0, i64 %90, i32 1
  %92 = load i8, i8* %91, align 4, !range !3
  %93 = icmp eq i8 %92, 0
  %94 = add nuw nsw i64 %78, 1
  br i1 %93, label %140, label %75

95:                                               ; preds = %75, %67
  %96 = bitcast %class.VkNonDispatchableHandle.29* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %96) #13
  %97 = getelementptr inbounds %class.VkNonDispatchableHandle.29, %class.VkNonDispatchableHandle.29* %6, i64 0, i32 0
  store i64 0, i64* %97, align 8
  %98 = getelementptr inbounds %struct.VkInstanceCreateInfo, %struct.VkInstanceCreateInfo* %0, i64 0, i32 1
  %99 = load i8*, i8** %98, align 8
  %100 = icmp eq i8* %99, null
  br i1 %100, label %109, label %101

101:                                              ; preds = %95
  %102 = bitcast i8* %99 to i32*
  %103 = load i32, i32* %102, align 8
  %104 = icmp eq i32 %103, 1000128004
  br i1 %104, label %105, label %109

105:                                              ; preds = %101
  %106 = bitcast i8* %99 to %struct.VkDebugUtilsMessengerCreateInfoEXT*
  %107 = call i32 @_ZN2vk10ObjectBaseINS_19DebugUtilsMessengerE23VkNonDispatchableHandleIP26VkDebugUtilsMessengerEXT_TEE6CreateI34VkDebugUtilsMessengerCreateInfoEXTJEEE8VkResultPK21VkAllocationCallbacksPKT_PS5_DpT0_(%struct.VkAllocationCallbacks* %1, %struct.VkDebugUtilsMessengerCreateInfoEXT* nonnull %106, %class.VkNonDispatchableHandle.29* nonnull %6) #16
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %109, label %138

109:                                              ; preds = %101, %105, %95
  store %struct.VkInstance_T* null, %struct.VkInstance_T** %2, align 8
  %110 = bitcast %struct.VkPhysicalDevice_T** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %110) #13
  store %struct.VkPhysicalDevice_T* null, %struct.VkPhysicalDevice_T** %7, align 8
  %111 = call i32 @_ZN2vk18DispatchableObjectINS_14PhysicalDeviceEP18VkPhysicalDevice_TE6CreateI20VkInstanceCreateInfoJEEE8VkResultPK21VkAllocationCallbacksPKT_PS3_DpT0_(%struct.VkAllocationCallbacks* %1, %struct.VkInstanceCreateInfo* %0, %struct.VkPhysicalDevice_T** nonnull %7) #16
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %119, label %113

113:                                              ; preds = %109
  %114 = load i64, i64* %97, align 8
  %115 = icmp eq i64 %114, 0
  br i1 %115, label %136, label %116

116:                                              ; preds = %113
  %117 = inttoptr i64 %114 to %"class.vk::DebugUtilsMessenger"*
  call void @_ZN2vk19DebugUtilsMessenger7destroyEPK21VkAllocationCallbacks(%"class.vk::DebugUtilsMessenger"* nonnull %117, %struct.VkAllocationCallbacks* %1) #12
  %118 = inttoptr i64 %114 to i8*
  call void @_ZN2vk10deallocateEPvPK21VkAllocationCallbacks(i8* %118, %struct.VkAllocationCallbacks* %1) #12
  br label %136

119:                                              ; preds = %109
  %120 = load %struct.VkPhysicalDevice_T*, %struct.VkPhysicalDevice_T** %7, align 8
  %121 = bitcast %class.VkNonDispatchableHandle.29* %6 to %"class.vk::DebugUtilsMessenger"**
  %122 = load %"class.vk::DebugUtilsMessenger"*, %"class.vk::DebugUtilsMessenger"** %121, align 8
  %123 = call i32 @_ZN2vk18DispatchableObjectINS_8InstanceEP12VkInstance_TE6CreateI20VkInstanceCreateInfoJP18VkPhysicalDevice_TPNS_19DebugUtilsMessengerEEEE8VkResultPK21VkAllocationCallbacksPKT_PS3_DpT0_(%struct.VkAllocationCallbacks* %1, %struct.VkInstanceCreateInfo* %0, %struct.VkInstance_T** %2, %struct.VkPhysicalDevice_T* %120, %"class.vk::DebugUtilsMessenger"* %122) #16
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %136, label %125

125:                                              ; preds = %119
  %126 = load i64, i64* %97, align 8
  %127 = icmp eq i64 %126, 0
  br i1 %127, label %131, label %128

128:                                              ; preds = %125
  %129 = inttoptr i64 %126 to %"class.vk::DebugUtilsMessenger"*
  call void @_ZN2vk19DebugUtilsMessenger7destroyEPK21VkAllocationCallbacks(%"class.vk::DebugUtilsMessenger"* nonnull %129, %struct.VkAllocationCallbacks* %1) #12
  %130 = inttoptr i64 %126 to i8*
  call void @_ZN2vk10deallocateEPvPK21VkAllocationCallbacks(i8* %130, %struct.VkAllocationCallbacks* %1) #12
  br label %131

131:                                              ; preds = %125, %128
  %132 = load %struct.VkPhysicalDevice_T*, %struct.VkPhysicalDevice_T** %7, align 8
  %133 = icmp eq %struct.VkPhysicalDevice_T* %132, null
  br i1 %133, label %136, label %134

134:                                              ; preds = %131
  %135 = bitcast %struct.VkPhysicalDevice_T* %132 to i8*
  call void @_ZN2vk10deallocateEPvPK21VkAllocationCallbacks(i8* nonnull %135, %struct.VkAllocationCallbacks* %1) #12
  br label %136

136:                                              ; preds = %134, %131, %116, %113, %119
  %137 = phi i32 [ 0, %119 ], [ %111, %113 ], [ %111, %116 ], [ %123, %131 ], [ %123, %134 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %110) #13
  br label %138

138:                                              ; preds = %105, %136
  %139 = phi i32 [ %137, %136 ], [ %107, %105 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %96) #13
  br label %140

140:                                              ; preds = %89, %81, %138
  %141 = phi i32 [ %139, %138 ], [ -7, %81 ], [ -7, %89 ]
  ret i32 %141
}

; Function Attrs: optsize
declare void @_ZN2sw4warnEPKcz(i8*, ...) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden i32 @_ZN2vk10ObjectBaseINS_19DebugUtilsMessengerE23VkNonDispatchableHandleIP26VkDebugUtilsMessengerEXT_TEE6CreateI34VkDebugUtilsMessengerCreateInfoEXTJEEE8VkResultPK21VkAllocationCallbacksPKT_PS5_DpT0_(%struct.VkAllocationCallbacks*, %struct.VkDebugUtilsMessengerCreateInfoEXT*, %class.VkNonDispatchableHandle.29*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.VkNonDispatchableHandle.29, %class.VkNonDispatchableHandle.29* %2, i64 0, i32 0
  store i64 0, i64* %4, align 8
  %5 = tail call i64 @_ZN2vk19DebugUtilsMessenger29ComputeRequiredAllocationSizeEPK34VkDebugUtilsMessengerCreateInfoEXT(%struct.VkDebugUtilsMessengerCreateInfoEXT* %1) #12
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %3
  %8 = tail call i8* @_ZN2vk8allocateEmmPK21VkAllocationCallbacks23VkSystemAllocationScope(i64 %5, i64 16, %struct.VkAllocationCallbacks* %0, i32 1) #12
  %9 = icmp eq i8* %8, null
  br i1 %9, label %18, label %10

10:                                               ; preds = %7, %3
  %11 = phi i8* [ %8, %7 ], [ null, %3 ]
  %12 = tail call i8* @_ZN2vk8allocateEmmPK21VkAllocationCallbacks23VkSystemAllocationScope(i64 24, i64 8, %struct.VkAllocationCallbacks* %0, i32 1) #12
  %13 = icmp eq i8* %12, null
  br i1 %13, label %14, label %15

14:                                               ; preds = %10
  tail call void @_ZN2vk10deallocateEPvPK21VkAllocationCallbacks(i8* %11, %struct.VkAllocationCallbacks* %0) #12
  br label %18

15:                                               ; preds = %10
  %16 = bitcast i8* %12 to %"class.vk::DebugUtilsMessenger"*
  tail call void @_ZN2vk19DebugUtilsMessengerC1EPK34VkDebugUtilsMessengerCreateInfoEXTPv(%"class.vk::DebugUtilsMessenger"* nonnull %16, %struct.VkDebugUtilsMessengerCreateInfoEXT* %1, i8* %11) #12
  %17 = ptrtoint i8* %12 to i64
  store i64 %17, i64* %4, align 8
  br label %18

18:                                               ; preds = %7, %14, %15
  %19 = phi i32 [ -1, %7 ], [ 0, %15 ], [ -1, %14 ]
  ret i32 %19
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden i32 @_ZN2vk18DispatchableObjectINS_14PhysicalDeviceEP18VkPhysicalDevice_TE6CreateI20VkInstanceCreateInfoJEEE8VkResultPK21VkAllocationCallbacksPKT_PS3_DpT0_(%struct.VkAllocationCallbacks*, %struct.VkInstanceCreateInfo*, %struct.VkPhysicalDevice_T**) local_unnamed_addr #0 comdat align 2 {
  store %struct.VkPhysicalDevice_T* null, %struct.VkPhysicalDevice_T** %2, align 8
  %4 = tail call i8* @_ZN2vk8allocateEmmPK21VkAllocationCallbacks23VkSystemAllocationScope(i64 16, i64 8, %struct.VkAllocationCallbacks* %0, i32 4) #12
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %7

6:                                                ; preds = %3
  tail call void @_ZN2vk10deallocateEPvPK21VkAllocationCallbacks(i8* null, %struct.VkAllocationCallbacks* %0) #12
  br label %13

7:                                                ; preds = %3
  %8 = bitcast i8* %4 to i64*
  store i64 30261470, i64* %8, align 8
  %9 = getelementptr inbounds i8, i8* %4, i64 8
  %10 = bitcast i8* %9 to %"class.vk::PhysicalDevice"*
  %11 = bitcast %struct.VkInstanceCreateInfo* %1 to i8*
  tail call void @_ZN2vk14PhysicalDeviceC1EPKvPv(%"class.vk::PhysicalDevice"* %10, i8* %11, i8* null) #12
  %12 = bitcast %struct.VkPhysicalDevice_T** %2 to i8**
  store i8* %4, i8** %12, align 8
  br label %13

13:                                               ; preds = %6, %7
  %14 = phi i32 [ 0, %7 ], [ -1, %6 ]
  ret i32 %14
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden i32 @_ZN2vk18DispatchableObjectINS_8InstanceEP12VkInstance_TE6CreateI20VkInstanceCreateInfoJP18VkPhysicalDevice_TPNS_19DebugUtilsMessengerEEEE8VkResultPK21VkAllocationCallbacksPKT_PS3_DpT0_(%struct.VkAllocationCallbacks*, %struct.VkInstanceCreateInfo*, %struct.VkInstance_T**, %struct.VkPhysicalDevice_T*, %"class.vk::DebugUtilsMessenger"*) local_unnamed_addr #0 comdat align 2 {
  store %struct.VkInstance_T* null, %struct.VkInstance_T** %2, align 8
  %6 = tail call i8* @_ZN2vk8allocateEmmPK21VkAllocationCallbacks23VkSystemAllocationScope(i64 24, i64 8, %struct.VkAllocationCallbacks* %0, i32 4) #12
  %7 = icmp eq i8* %6, null
  br i1 %7, label %8, label %9

8:                                                ; preds = %5
  tail call void @_ZN2vk10deallocateEPvPK21VkAllocationCallbacks(i8* null, %struct.VkAllocationCallbacks* %0) #12
  br label %14

9:                                                ; preds = %5
  %10 = bitcast i8* %6 to i64*
  store i64 30261470, i64* %10, align 8
  %11 = getelementptr inbounds i8, i8* %6, i64 8
  %12 = bitcast i8* %11 to %"class.vk::Instance"*
  tail call void @_ZN2vk8InstanceC1EPK20VkInstanceCreateInfoPvP18VkPhysicalDevice_TPNS_19DebugUtilsMessengerE(%"class.vk::Instance"* %12, %struct.VkInstanceCreateInfo* %1, i8* null, %struct.VkPhysicalDevice_T* %3, %"class.vk::DebugUtilsMessenger"* %4) #12
  %13 = bitcast %struct.VkInstance_T** %2 to i8**
  store i8* %6, i8** %13, align 8
  br label %14

14:                                               ; preds = %8, %9
  %15 = phi i32 [ 0, %9 ], [ -1, %8 ]
  ret i32 %15
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @vkDestroyInstance(%struct.VkInstance_T*, %struct.VkAllocationCallbacks*) local_unnamed_addr #0 {
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([87 x i8], [87 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 580, %struct.VkInstance_T* %0, %struct.VkAllocationCallbacks* %1) #12
  %3 = icmp eq %struct.VkInstance_T* %0, null
  br i1 %3, label %8, label %4

4:                                                ; preds = %2
  %5 = bitcast %struct.VkInstance_T* %0 to %"class.vk::DispatchableObject"*
  %6 = getelementptr inbounds %"class.vk::DispatchableObject", %"class.vk::DispatchableObject"* %5, i64 0, i32 1
  tail call void @_ZN2vk8Instance7destroyEPK21VkAllocationCallbacks(%"class.vk::Instance"* nonnull %6, %struct.VkAllocationCallbacks* %1) #12
  %7 = bitcast %struct.VkInstance_T* %0 to i8*
  tail call void @_ZN2vk10deallocateEPvPK21VkAllocationCallbacks(i8* nonnull %7, %struct.VkAllocationCallbacks* %1) #12
  br label %8

8:                                                ; preds = %2, %4
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @vkEnumeratePhysicalDevices(%struct.VkInstance_T*, i32*, %struct.VkPhysicalDevice_T**) local_unnamed_addr #0 {
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([119 x i8], [119 x i8]* @.str.16, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 588, %struct.VkInstance_T* %0, i32* %1, %struct.VkPhysicalDevice_T** %2) #12
  %4 = icmp eq %struct.VkInstance_T* %0, null
  %5 = bitcast %struct.VkInstance_T* %0 to %"class.vk::DispatchableObject"*
  %6 = getelementptr inbounds %"class.vk::DispatchableObject", %"class.vk::DispatchableObject"* %5, i64 0, i32 1
  %7 = select i1 %4, %"class.vk::Instance"* null, %"class.vk::Instance"* %6
  %8 = tail call i32 @_ZNK2vk8Instance18getPhysicalDevicesEPjPP18VkPhysicalDevice_T(%"class.vk::Instance"* %7, i32* %1, %struct.VkPhysicalDevice_T** %2) #12
  ret i32 %8
}

; Function Attrs: optsize
declare i32 @_ZNK2vk8Instance18getPhysicalDevicesEPjPP18VkPhysicalDevice_T(%"class.vk::Instance"*, i32*, %struct.VkPhysicalDevice_T**) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @vkGetPhysicalDeviceFeatures(%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceFeatures*) local_unnamed_addr #0 {
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([95 x i8], [95 x i8]* @.str.17, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 596, %struct.VkPhysicalDevice_T* %0, %struct.VkPhysicalDeviceFeatures* %1) #12
  %3 = icmp eq %struct.VkPhysicalDevice_T* %0, null
  %4 = bitcast %struct.VkPhysicalDevice_T* %0 to %"class.vk::DispatchableObject.871"*
  %5 = getelementptr inbounds %"class.vk::DispatchableObject.871", %"class.vk::DispatchableObject.871"* %4, i64 0, i32 1
  %6 = select i1 %3, %"class.vk::PhysicalDevice"* null, %"class.vk::PhysicalDevice"* %5
  %7 = tail call dereferenceable(220) %struct.VkPhysicalDeviceFeatures* @_ZNK2vk14PhysicalDevice11getFeaturesEv(%"class.vk::PhysicalDevice"* %6) #12
  %8 = bitcast %struct.VkPhysicalDeviceFeatures* %1 to i8*
  %9 = bitcast %struct.VkPhysicalDeviceFeatures* %7 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %8, i8* align 4 %9, i64 220, i1 false)
  ret void
}

; Function Attrs: optsize
declare dereferenceable(220) %struct.VkPhysicalDeviceFeatures* @_ZNK2vk14PhysicalDevice11getFeaturesEv(%"class.vk::PhysicalDevice"*) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @vkGetPhysicalDeviceFormatProperties(%struct.VkPhysicalDevice_T*, i32, %struct.VkFormatProperties*) local_unnamed_addr #0 {
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([152 x i8], [152 x i8]* @.str.18, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 604, %struct.VkPhysicalDevice_T* %0, i32 %1, %struct.VkFormatProperties* %2) #12
  tail call void @_ZN2vk14PhysicalDevice19GetFormatPropertiesENS_6FormatEP18VkFormatProperties(i32 %1, %struct.VkFormatProperties* %2) #12
  ret void
}

; Function Attrs: optsize
declare void @_ZN2vk14PhysicalDevice19GetFormatPropertiesENS_6FormatEP18VkFormatProperties(i32, %struct.VkFormatProperties*) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @vkGetPhysicalDeviceImageFormatProperties(%struct.VkPhysicalDevice_T*, i32, i32, i32, i32, i32, %struct.VkImageFormatProperties*) local_unnamed_addr #0 {
  %8 = alloca %struct.VkPhysicalDeviceImageFormatInfo2, align 8
  %9 = alloca %struct.VkImageFormatProperties2, align 8
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([240 x i8], [240 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 612, %struct.VkPhysicalDevice_T* %0, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5, %struct.VkImageFormatProperties* %6) #12
  %10 = bitcast %struct.VkPhysicalDeviceImageFormatInfo2* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %10) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 0, i64 40, i1 false)
  %11 = getelementptr inbounds %struct.VkPhysicalDeviceImageFormatInfo2, %struct.VkPhysicalDeviceImageFormatInfo2* %8, i64 0, i32 0
  store i32 1000059004, i32* %11, align 8
  %12 = getelementptr inbounds %struct.VkPhysicalDeviceImageFormatInfo2, %struct.VkPhysicalDeviceImageFormatInfo2* %8, i64 0, i32 1
  store i8* null, i8** %12, align 8
  %13 = getelementptr inbounds %struct.VkPhysicalDeviceImageFormatInfo2, %struct.VkPhysicalDeviceImageFormatInfo2* %8, i64 0, i32 2
  store i32 %1, i32* %13, align 8
  %14 = getelementptr inbounds %struct.VkPhysicalDeviceImageFormatInfo2, %struct.VkPhysicalDeviceImageFormatInfo2* %8, i64 0, i32 3
  store i32 %2, i32* %14, align 4
  %15 = getelementptr inbounds %struct.VkPhysicalDeviceImageFormatInfo2, %struct.VkPhysicalDeviceImageFormatInfo2* %8, i64 0, i32 4
  store i32 %3, i32* %15, align 8
  %16 = getelementptr inbounds %struct.VkPhysicalDeviceImageFormatInfo2, %struct.VkPhysicalDeviceImageFormatInfo2* %8, i64 0, i32 5
  store i32 %4, i32* %16, align 4
  %17 = getelementptr inbounds %struct.VkPhysicalDeviceImageFormatInfo2, %struct.VkPhysicalDeviceImageFormatInfo2* %8, i64 0, i32 6
  store i32 %5, i32* %17, align 8
  %18 = bitcast %struct.VkImageFormatProperties2* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %18) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 0, i64 48, i1 false)
  %19 = getelementptr inbounds %struct.VkImageFormatProperties2, %struct.VkImageFormatProperties2* %9, i64 0, i32 0
  store i32 1000059003, i32* %19, align 8
  %20 = getelementptr inbounds %struct.VkImageFormatProperties2, %struct.VkImageFormatProperties2* %9, i64 0, i32 1
  store i8* null, i8** %20, align 8
  %21 = call i32 @vkGetPhysicalDeviceImageFormatProperties2(%struct.VkPhysicalDevice_T* %0, %struct.VkPhysicalDeviceImageFormatInfo2* nonnull %8, %struct.VkImageFormatProperties2* nonnull %9) #16
  %22 = getelementptr inbounds %struct.VkImageFormatProperties2, %struct.VkImageFormatProperties2* %9, i64 0, i32 2
  %23 = bitcast %struct.VkImageFormatProperties* %6 to i8*
  %24 = bitcast %struct.VkImageFormatProperties* %22 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 %24, i64 32, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %18) #13
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %10) #13
  ret i32 %21
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @vkGetPhysicalDeviceImageFormatProperties2(%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceImageFormatInfo2*, %struct.VkImageFormatProperties2*) local_unnamed_addr #0 {
  %4 = alloca %struct.VkFormatProperties, align 4
  %5 = alloca %"class.vk::Format", align 4
  %6 = alloca %"class.vk::Format", align 4
  %7 = alloca %"class.vk::Format", align 4
  %8 = alloca %"class.vk::Format", align 4
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([171 x i8], [171 x i8]* @.str.189, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 3266, %struct.VkPhysicalDevice_T* %0, %struct.VkPhysicalDeviceImageFormatInfo2* %1, %struct.VkImageFormatProperties2* %2) #12
  %9 = getelementptr inbounds %struct.VkImageFormatProperties2, %struct.VkImageFormatProperties2* %2, i64 0, i32 2
  %10 = bitcast %struct.VkImageFormatProperties* %9 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 32, i1 false)
  %11 = getelementptr inbounds %struct.VkPhysicalDeviceImageFormatInfo2, %struct.VkPhysicalDeviceImageFormatInfo2* %1, i64 0, i32 1
  %12 = bitcast i8** %11 to %struct.VkBaseInStructure**
  %13 = load %struct.VkBaseInStructure*, %struct.VkBaseInStructure** %12, align 8
  %14 = icmp eq %struct.VkBaseInStructure* %13, null
  br i1 %14, label %32, label %15

15:                                               ; preds = %3, %26
  %16 = phi %struct.VkBaseInStructure* [ %30, %26 ], [ %13, %3 ]
  %17 = phi i32* [ %28, %26 ], [ null, %3 ]
  %18 = phi i32 [ %27, %26 ], [ 0, %3 ]
  %19 = getelementptr inbounds %struct.VkBaseInStructure, %struct.VkBaseInStructure* %16, i64 0, i32 0
  %20 = load i32, i32* %19, align 8
  switch i32 %20, label %26 [
    i32 1000071000, label %24
    i32 1000246000, label %21
  ]

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.VkBaseInStructure, %struct.VkBaseInStructure* %16, i64 1, i32 0
  %23 = load i32, i32* %22, align 8
  br label %26

24:                                               ; preds = %15
  %25 = getelementptr inbounds %struct.VkBaseInStructure, %struct.VkBaseInStructure* %16, i64 1, i32 0
  br label %26

26:                                               ; preds = %15, %24, %21
  %27 = phi i32 [ %18, %15 ], [ %23, %21 ], [ %18, %24 ]
  %28 = phi i32* [ %17, %15 ], [ %17, %21 ], [ %25, %24 ]
  %29 = getelementptr inbounds %struct.VkBaseInStructure, %struct.VkBaseInStructure* %16, i64 0, i32 1
  %30 = load %struct.VkBaseInStructure*, %struct.VkBaseInStructure** %29, align 8
  %31 = icmp eq %struct.VkBaseInStructure* %30, null
  br i1 %31, label %32, label %15

32:                                               ; preds = %26, %3
  %33 = phi i32 [ 0, %3 ], [ %27, %26 ]
  %34 = phi i32* [ null, %3 ], [ %28, %26 ]
  %35 = getelementptr inbounds %struct.VkImageFormatProperties2, %struct.VkImageFormatProperties2* %2, i64 0, i32 1
  %36 = bitcast i8** %35 to %struct.VkBaseOutStructure**
  %37 = load %struct.VkBaseOutStructure*, %struct.VkBaseOutStructure** %36, align 8
  %38 = icmp eq %struct.VkBaseOutStructure* %37, null
  br i1 %38, label %56, label %39

39:                                               ; preds = %32
  %40 = icmp eq %struct.VkPhysicalDevice_T* %0, null
  %41 = bitcast %struct.VkPhysicalDevice_T* %0 to %"class.vk::DispatchableObject.871"*
  %42 = getelementptr inbounds %"class.vk::DispatchableObject.871", %"class.vk::DispatchableObject.871"* %41, i64 0, i32 1
  %43 = select i1 %40, %"class.vk::PhysicalDevice"* null, %"class.vk::PhysicalDevice"* %42
  br label %44

44:                                               ; preds = %39, %52
  %45 = phi %struct.VkBaseOutStructure* [ %37, %39 ], [ %54, %52 ]
  %46 = getelementptr inbounds %struct.VkBaseOutStructure, %struct.VkBaseOutStructure* %45, i64 0, i32 0
  %47 = load i32, i32* %46, align 8
  switch i32 %47, label %52 [
    i32 1000071001, label %48
    i32 1000156005, label %50
  ]

48:                                               ; preds = %44
  %49 = bitcast %struct.VkBaseOutStructure* %45 to %struct.VkExternalImageFormatProperties*
  tail call void @_ZNK2vk14PhysicalDevice13getPropertiesEPK34VkExternalMemoryHandleTypeFlagBitsP31VkExternalImageFormatProperties(%"class.vk::PhysicalDevice"* %43, i32* %34, %struct.VkExternalImageFormatProperties* nonnull %49) #12
  br label %52

50:                                               ; preds = %44
  %51 = bitcast %struct.VkBaseOutStructure* %45 to %struct.VkSamplerYcbcrConversionImageFormatProperties*
  tail call void @_ZNK2vk14PhysicalDevice13getPropertiesEP45VkSamplerYcbcrConversionImageFormatProperties(%"class.vk::PhysicalDevice"* %43, %struct.VkSamplerYcbcrConversionImageFormatProperties* nonnull %51) #12
  br label %52

52:                                               ; preds = %44, %50, %48
  %53 = getelementptr inbounds %struct.VkBaseOutStructure, %struct.VkBaseOutStructure* %45, i64 0, i32 1
  %54 = load %struct.VkBaseOutStructure*, %struct.VkBaseOutStructure** %53, align 8
  %55 = icmp eq %struct.VkBaseOutStructure* %54, null
  br i1 %55, label %56, label %44

56:                                               ; preds = %52, %32
  %57 = getelementptr inbounds %struct.VkPhysicalDeviceImageFormatInfo2, %struct.VkPhysicalDeviceImageFormatInfo2* %1, i64 0, i32 2
  %58 = load i32, i32* %57, align 8
  %59 = getelementptr inbounds %struct.VkPhysicalDeviceImageFormatInfo2, %struct.VkPhysicalDeviceImageFormatInfo2* %1, i64 0, i32 3
  %60 = load i32, i32* %59, align 4
  %61 = getelementptr inbounds %struct.VkPhysicalDeviceImageFormatInfo2, %struct.VkPhysicalDeviceImageFormatInfo2* %1, i64 0, i32 4
  %62 = load i32, i32* %61, align 8
  %63 = getelementptr inbounds %struct.VkPhysicalDeviceImageFormatInfo2, %struct.VkPhysicalDeviceImageFormatInfo2* %1, i64 0, i32 5
  %64 = load i32, i32* %63, align 4
  %65 = getelementptr inbounds %struct.VkPhysicalDeviceImageFormatInfo2, %struct.VkPhysicalDeviceImageFormatInfo2* %1, i64 0, i32 6
  %66 = load i32, i32* %65, align 8
  %67 = bitcast %struct.VkFormatProperties* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %67) #13
  %68 = getelementptr inbounds %struct.VkFormatProperties, %struct.VkFormatProperties* %4, i64 0, i32 0
  store i32 -1431655766, i32* %68, align 4
  %69 = getelementptr inbounds %struct.VkFormatProperties, %struct.VkFormatProperties* %4, i64 0, i32 1
  store i32 -1431655766, i32* %69, align 4
  %70 = getelementptr inbounds %struct.VkFormatProperties, %struct.VkFormatProperties* %4, i64 0, i32 2
  store i32 -1431655766, i32* %70, align 4
  call void @_ZN2vk14PhysicalDevice19GetFormatPropertiesENS_6FormatEP18VkFormatProperties(i32 %58, %struct.VkFormatProperties* nonnull %4) #12
  switch i32 %62, label %72 [
    i32 1, label %73
    i32 0, label %71
  ]

71:                                               ; preds = %56
  br label %73

72:                                               ; preds = %56
  call void (i8*, ...) @_ZN2sw4warnEPKcz(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.190, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 3378, i32 %62) #12
  br label %129

73:                                               ; preds = %56, %71
  %74 = phi i32* [ %69, %71 ], [ %68, %56 ]
  %75 = load i32, i32* %74, align 4
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %129, label %77

77:                                               ; preds = %73
  %78 = call fastcc zeroext i1 @_ZL16checkFormatUsagejj(i32 %64, i32 %75) #16
  br i1 %78, label %79, label %129

79:                                               ; preds = %77
  %80 = icmp eq i32 %33, 0
  br i1 %80, label %83, label %81

81:                                               ; preds = %79
  %82 = call fastcc zeroext i1 @_ZL16checkFormatUsagejj(i32 %33, i32 %75) #16
  br i1 %82, label %83, label %129

83:                                               ; preds = %79, %81
  %84 = and i32 %64, 4
  %85 = icmp eq i32 %84, 0
  %86 = icmp eq i32 %62, 1
  br i1 %85, label %106, label %87

87:                                               ; preds = %83
  br i1 %86, label %88, label %103

88:                                               ; preds = %87
  %89 = load i32, i32* %69, align 4
  %90 = and i32 %89, 1
  %91 = icmp eq i32 %90, 0
  %92 = bitcast %"class.vk::Format"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %92) #13
  br i1 %91, label %102, label %93

93:                                               ; preds = %88
  %94 = getelementptr inbounds %"class.vk::Format", %"class.vk::Format"* %5, i64 0, i32 0
  store i32 %58, i32* %94, align 4
  %95 = call zeroext i1 @_ZNK2vk6Format12isCompressedEv(%"class.vk::Format"* nonnull %5) #12
  br i1 %95, label %101, label %96

96:                                               ; preds = %93
  %97 = and i32 %66, 16
  %98 = icmp eq i32 %97, 0
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %92) #13
  %99 = icmp eq i32 %60, 1
  %100 = and i1 %99, %98
  br i1 %100, label %109, label %129

101:                                              ; preds = %93
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %92) #13
  br label %129

102:                                              ; preds = %88
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %92) #13
  br label %129

103:                                              ; preds = %87
  %104 = and i32 %75, 1
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %129, label %118

106:                                              ; preds = %83
  br i1 %86, label %107, label %118

107:                                              ; preds = %106
  %108 = icmp eq i32 %60, 1
  br i1 %108, label %109, label %129

109:                                              ; preds = %96, %107
  %110 = bitcast %"class.vk::Format"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %110) #13
  %111 = getelementptr inbounds %"class.vk::Format", %"class.vk::Format"* %6, i64 0, i32 0
  store i32 %58, i32* %111, align 4
  %112 = call zeroext i1 @_ZNK2vk6Format7isDepthEv(%"class.vk::Format"* nonnull %6) #12
  %113 = bitcast %"class.vk::Format"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %113) #13
  br i1 %112, label %117, label %114

114:                                              ; preds = %109
  %115 = getelementptr inbounds %"class.vk::Format", %"class.vk::Format"* %7, i64 0, i32 0
  store i32 %58, i32* %115, align 4
  %116 = call zeroext i1 @_ZNK2vk6Format9isStencilEv(%"class.vk::Format"* nonnull %7) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %113) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %110) #13
  br i1 %116, label %129, label %118

117:                                              ; preds = %109
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %113) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %110) #13
  br label %129

118:                                              ; preds = %103, %114, %106
  %119 = bitcast %"class.vk::Format"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %119) #13
  %120 = getelementptr inbounds %"class.vk::Format", %"class.vk::Format"* %8, i64 0, i32 0
  store i32 %58, i32* %120, align 4
  %121 = call zeroext i1 @_ZNK2vk6Format13isYcbcrFormatEv(%"class.vk::Format"* nonnull %8) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %119) #13
  %122 = icmp ne i32 %60, 1
  %123 = and i1 %122, %121
  br i1 %123, label %129, label %124

124:                                              ; preds = %118
  %125 = icmp eq %struct.VkPhysicalDevice_T* %0, null
  %126 = bitcast %struct.VkPhysicalDevice_T* %0 to %"class.vk::DispatchableObject.871"*
  %127 = getelementptr inbounds %"class.vk::DispatchableObject.871", %"class.vk::DispatchableObject.871"* %126, i64 0, i32 1
  %128 = select i1 %125, %"class.vk::PhysicalDevice"* null, %"class.vk::PhysicalDevice"* %127
  call void @_ZNK2vk14PhysicalDevice24getImageFormatPropertiesENS_6FormatE11VkImageType13VkImageTilingjjP23VkImageFormatProperties(%"class.vk::PhysicalDevice"* %128, i32 %58, i32 %60, i32 %62, i32 %64, i32 %66, %struct.VkImageFormatProperties* %9) #12
  br label %129

129:                                              ; preds = %72, %124, %96, %102, %101, %103, %107, %117, %114, %118, %81, %77, %73
  %130 = phi i32 [ -11, %73 ], [ -11, %77 ], [ -11, %81 ], [ 0, %124 ], [ -11, %96 ], [ -11, %102 ], [ -11, %101 ], [ -11, %103 ], [ -11, %107 ], [ -11, %117 ], [ -11, %114 ], [ -11, %118 ], [ -11, %72 ]
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %67) #13
  ret i32 %130
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @vkGetPhysicalDeviceProperties(%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties*) local_unnamed_addr #0 {
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([99 x i8], [99 x i8]* @.str.20, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 637, %struct.VkPhysicalDevice_T* %0, %struct.VkPhysicalDeviceProperties* %1) #12
  %3 = icmp eq %struct.VkPhysicalDevice_T* %0, null
  %4 = bitcast %struct.VkPhysicalDevice_T* %0 to %"class.vk::DispatchableObject.871"*
  %5 = getelementptr inbounds %"class.vk::DispatchableObject.871", %"class.vk::DispatchableObject.871"* %4, i64 0, i32 1
  %6 = select i1 %3, %"class.vk::PhysicalDevice"* null, %"class.vk::PhysicalDevice"* %5
  %7 = tail call dereferenceable(824) %struct.VkPhysicalDeviceProperties* @_ZNK2vk14PhysicalDevice13getPropertiesEv(%"class.vk::PhysicalDevice"* %6) #12
  %8 = bitcast %struct.VkPhysicalDeviceProperties* %1 to i8*
  %9 = bitcast %struct.VkPhysicalDeviceProperties* %7 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 824, i1 false)
  ret void
}

; Function Attrs: optsize
declare dereferenceable(824) %struct.VkPhysicalDeviceProperties* @_ZNK2vk14PhysicalDevice13getPropertiesEv(%"class.vk::PhysicalDevice"*) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @vkGetPhysicalDeviceQueueFamilyProperties(%struct.VkPhysicalDevice_T*, i32*, %struct.VkQueueFamilyProperties*) local_unnamed_addr #0 {
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([150 x i8], [150 x i8]* @.str.21, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 644, %struct.VkPhysicalDevice_T* %0, i32* %1, %struct.VkQueueFamilyProperties* %2) #12
  %4 = icmp eq %struct.VkQueueFamilyProperties* %2, null
  %5 = icmp eq %struct.VkPhysicalDevice_T* %0, null
  %6 = bitcast %struct.VkPhysicalDevice_T* %0 to %"class.vk::DispatchableObject.871"*
  %7 = getelementptr inbounds %"class.vk::DispatchableObject.871", %"class.vk::DispatchableObject.871"* %6, i64 0, i32 1
  %8 = select i1 %5, %"class.vk::PhysicalDevice"* null, %"class.vk::PhysicalDevice"* %7
  br i1 %4, label %9, label %11

9:                                                ; preds = %3
  %10 = tail call i32 @_ZNK2vk14PhysicalDevice27getQueueFamilyPropertyCountEv(%"class.vk::PhysicalDevice"* %8) #12
  store i32 %10, i32* %1, align 4
  br label %13

11:                                               ; preds = %3
  %12 = load i32, i32* %1, align 4
  tail call void @_ZNK2vk14PhysicalDevice24getQueueFamilyPropertiesEjP23VkQueueFamilyProperties(%"class.vk::PhysicalDevice"* %8, i32 %12, %struct.VkQueueFamilyProperties* nonnull %2) #12
  br label %13

13:                                               ; preds = %11, %9
  ret void
}

; Function Attrs: optsize
declare i32 @_ZNK2vk14PhysicalDevice27getQueueFamilyPropertyCountEv(%"class.vk::PhysicalDevice"*) local_unnamed_addr #1

; Function Attrs: optsize
declare void @_ZNK2vk14PhysicalDevice24getQueueFamilyPropertiesEjP23VkQueueFamilyProperties(%"class.vk::PhysicalDevice"*, i32, %struct.VkQueueFamilyProperties*) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @vkGetPhysicalDeviceMemoryProperties(%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceMemoryProperties*) local_unnamed_addr #0 {
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([111 x i8], [111 x i8]* @.str.22, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 658, %struct.VkPhysicalDevice_T* %0, %struct.VkPhysicalDeviceMemoryProperties* %1) #12
  %3 = tail call dereferenceable(520) %struct.VkPhysicalDeviceMemoryProperties* @_ZN2vk14PhysicalDevice19GetMemoryPropertiesEv() #12
  %4 = bitcast %struct.VkPhysicalDeviceMemoryProperties* %1 to i8*
  %5 = bitcast %struct.VkPhysicalDeviceMemoryProperties* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 520, i1 false)
  ret void
}

; Function Attrs: optsize
declare dereferenceable(520) %struct.VkPhysicalDeviceMemoryProperties* @_ZN2vk14PhysicalDevice19GetMemoryPropertiesEv() local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define void ()* @vkGetInstanceProcAddr(%struct.VkInstance_T*, i8*) local_unnamed_addr #0 {
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 665, %struct.VkInstance_T* %0, i8* %1) #12
  %3 = icmp eq %struct.VkInstance_T* %0, null
  %4 = bitcast %struct.VkInstance_T* %0 to %"class.vk::DispatchableObject"*
  %5 = getelementptr inbounds %"class.vk::DispatchableObject", %"class.vk::DispatchableObject"* %4, i64 0, i32 1
  %6 = select i1 %3, %"class.vk::Instance"* null, %"class.vk::Instance"* %5
  %7 = tail call void ()* @_ZN2vk19GetInstanceProcAddrEPNS_8InstanceEPKc(%"class.vk::Instance"* %6, i8* %1) #12
  ret void ()* %7
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void ()* @vkGetDeviceProcAddr(%struct.VkDevice_T*, i8*) local_unnamed_addr #0 {
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.23, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 672, %struct.VkDevice_T* %0, i8* %1) #12
  %3 = icmp eq %struct.VkDevice_T* %0, null
  %4 = bitcast %struct.VkDevice_T* %0 to %"class.vk::DispatchableObject.872"*
  %5 = getelementptr inbounds %"class.vk::DispatchableObject.872", %"class.vk::DispatchableObject.872"* %4, i64 0, i32 1
  %6 = select i1 %3, %"class.vk::Device"* null, %"class.vk::Device"* %5
  %7 = tail call void ()* @_ZN2vk17GetDeviceProcAddrEPNS_6DeviceEPKc(%"class.vk::Device"* %6, i8* %1) #12
  ret void ()* %7
}

; Function Attrs: optsize
declare void ()* @_ZN2vk17GetDeviceProcAddrEPNS_6DeviceEPKc(%"class.vk::Device"*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @vkCreateDevice(%struct.VkPhysicalDevice_T*, %struct.VkDeviceCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDevice_T**) local_unnamed_addr #0 {
  %5 = alloca %"struct.marl::Scheduler::Config", align 8
  %6 = alloca %"class.std::__1::shared_ptr.189", align 8
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([167 x i8], [167 x i8]* @.str.24, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 680, %struct.VkPhysicalDevice_T* %0, %struct.VkDeviceCreateInfo* %1, %struct.VkAllocationCallbacks* %2, %struct.VkDevice_T** %3) #12
  %7 = getelementptr inbounds %struct.VkDeviceCreateInfo, %struct.VkDeviceCreateInfo* %1, i64 0, i32 2
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %11, label %10

10:                                               ; preds = %4
  tail call void (i8*, ...) @_ZN2sw4warnEPKcz(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 685, i32 %8) #12
  br label %11

11:                                               ; preds = %4, %10
  %12 = getelementptr inbounds %struct.VkDeviceCreateInfo, %struct.VkDeviceCreateInfo* %1, i64 0, i32 5
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %16, label %15

15:                                               ; preds = %11
  tail call void (i8*, ...) @_ZN2sw4warnEPKcz(i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.25, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 691) #12
  br label %16

16:                                               ; preds = %11, %15
  %17 = getelementptr inbounds %struct.VkDeviceCreateInfo, %struct.VkDeviceCreateInfo* %1, i64 0, i32 7
  %18 = load i32, i32* %17, align 8
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %44, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %struct.VkDeviceCreateInfo, %struct.VkDeviceCreateInfo* %1, i64 0, i32 8
  %22 = load i8**, i8*** %21, align 8
  %23 = zext i32 %18 to i64
  br label %26

24:                                               ; preds = %38
  %25 = icmp ult i64 %43, %23
  br i1 %25, label %26, label %44

26:                                               ; preds = %20, %24
  %27 = phi i64 [ 0, %20 ], [ %43, %24 ]
  %28 = getelementptr inbounds i8*, i8** %22, i64 %27
  %29 = load i8*, i8** %28, align 8
  br label %32

30:                                               ; preds = %32
  %31 = icmp eq i64 %37, 41
  br i1 %31, label %275, label %32

32:                                               ; preds = %30, %26
  %33 = phi i64 [ 0, %26 ], [ %37, %30 ]
  %34 = getelementptr inbounds %struct.ExtensionProperties, %struct.ExtensionProperties* bitcast (<{ { <{ [24 x i8], [232 x i8] }>, i32, i8 }, { <{ [19 x i8], [237 x i8] }>, i32, i8 }, { <{ [25 x i8], [231 x i8] }>, i32, i8 }, { <{ [27 x i8], [229 x i8] }>, i32, i8 }, { <{ [33 x i8], [223 x i8] }>, i32, i8 }, { <{ [19 x i8], [237 x i8] }>, i32, i8 }, { <{ [21 x i8], [235 x i8] }>, i32, i8 }, { <{ [22 x i8], [234 x i8] }>, i32, i8 }, { <{ [25 x i8], [231 x i8] }>, i32, i8 }, { <{ [31 x i8], [225 x i8] }>, i32, i8 }, { <{ [19 x i8], [237 x i8] }>, i32, i8 }, { <{ [19 x i8], [237 x i8] }>, i32, i8 }, { <{ [19 x i8], [237 x i8] }>, i32, i8 }, { <{ [16 x i8], [240 x i8] }>, i32, i8 }, { <{ [27 x i8], [229 x i8] }>, i32, i8 }, { <{ [31 x i8], [225 x i8] }>, i32, i8 }, { <{ [37 x i8], [219 x i8] }>, i32, i8 }, { <{ [24 x i8], [232 x i8] }>, i32, i8 }, { <{ [35 x i8], [221 x i8] }>, i32, i8 }, { <{ [27 x i8], [229 x i8] }>, i32, i8 }, { <{ [25 x i8], [231 x i8] }>, i32, i8 }, { <{ [28 x i8], [228 x i8] }>, i32, i8 }, { <{ [23 x i8], [233 x i8] }>, i32, i8 }, { <{ [16 x i8], [240 x i8] }>, i32, i8 }, { <{ [28 x i8], [228 x i8] }>, i32, i8 }, { <{ [25 x i8], [231 x i8] }>, i32, i8 }, { <{ [27 x i8], [229 x i8] }>, i32, i8 }, { <{ [23 x i8], [233 x i8] }>, i32, i8 }, { <{ [37 x i8], [219 x i8] }>, i32, i8 }, { <{ [31 x i8], [225 x i8] }>, i32, i8 }, { <{ [23 x i8], [233 x i8] }>, i32, i8 }, { <{ [26 x i8], [230 x i8] }>, i32, i8 }, { <{ [29 x i8], [227 x i8] }>, i32, i8 }, { <{ [28 x i8], [228 x i8] }>, i32, i8 }, { <{ [24 x i8], [232 x i8] }>, i32, i8 }, { <{ [28 x i8], [228 x i8] }>, i32, i8 }, { <{ [28 x i8], [228 x i8] }>, i32, i8 }, { <{ [37 x i8], [219 x i8] }>, i32, i8 }, { <{ [16 x i8], [240 x i8] }>, i32, i8 }, { <{ [37 x i8], [219 x i8] }>, i32, i8 }, { <{ [25 x i8], [231 x i8] }>, i32, i8 } }>* @_ZL25deviceExtensionProperties to %struct.ExtensionProperties*), i64 %33, i32 0, i32 0, i64 0
  %35 = tail call i32 @strcmp(i8* %29, i8* %34) #15
  %36 = icmp eq i32 %35, 0
  %37 = add nuw nsw i64 %33, 1
  br i1 %36, label %38, label %30

38:                                               ; preds = %32
  %39 = and i64 %33, 4294967295
  %40 = getelementptr inbounds %struct.ExtensionProperties, %struct.ExtensionProperties* bitcast (<{ { <{ [24 x i8], [232 x i8] }>, i32, i8 }, { <{ [19 x i8], [237 x i8] }>, i32, i8 }, { <{ [25 x i8], [231 x i8] }>, i32, i8 }, { <{ [27 x i8], [229 x i8] }>, i32, i8 }, { <{ [33 x i8], [223 x i8] }>, i32, i8 }, { <{ [19 x i8], [237 x i8] }>, i32, i8 }, { <{ [21 x i8], [235 x i8] }>, i32, i8 }, { <{ [22 x i8], [234 x i8] }>, i32, i8 }, { <{ [25 x i8], [231 x i8] }>, i32, i8 }, { <{ [31 x i8], [225 x i8] }>, i32, i8 }, { <{ [19 x i8], [237 x i8] }>, i32, i8 }, { <{ [19 x i8], [237 x i8] }>, i32, i8 }, { <{ [19 x i8], [237 x i8] }>, i32, i8 }, { <{ [16 x i8], [240 x i8] }>, i32, i8 }, { <{ [27 x i8], [229 x i8] }>, i32, i8 }, { <{ [31 x i8], [225 x i8] }>, i32, i8 }, { <{ [37 x i8], [219 x i8] }>, i32, i8 }, { <{ [24 x i8], [232 x i8] }>, i32, i8 }, { <{ [35 x i8], [221 x i8] }>, i32, i8 }, { <{ [27 x i8], [229 x i8] }>, i32, i8 }, { <{ [25 x i8], [231 x i8] }>, i32, i8 }, { <{ [28 x i8], [228 x i8] }>, i32, i8 }, { <{ [23 x i8], [233 x i8] }>, i32, i8 }, { <{ [16 x i8], [240 x i8] }>, i32, i8 }, { <{ [28 x i8], [228 x i8] }>, i32, i8 }, { <{ [25 x i8], [231 x i8] }>, i32, i8 }, { <{ [27 x i8], [229 x i8] }>, i32, i8 }, { <{ [23 x i8], [233 x i8] }>, i32, i8 }, { <{ [37 x i8], [219 x i8] }>, i32, i8 }, { <{ [31 x i8], [225 x i8] }>, i32, i8 }, { <{ [23 x i8], [233 x i8] }>, i32, i8 }, { <{ [26 x i8], [230 x i8] }>, i32, i8 }, { <{ [29 x i8], [227 x i8] }>, i32, i8 }, { <{ [28 x i8], [228 x i8] }>, i32, i8 }, { <{ [24 x i8], [232 x i8] }>, i32, i8 }, { <{ [28 x i8], [228 x i8] }>, i32, i8 }, { <{ [28 x i8], [228 x i8] }>, i32, i8 }, { <{ [37 x i8], [219 x i8] }>, i32, i8 }, { <{ [16 x i8], [240 x i8] }>, i32, i8 }, { <{ [37 x i8], [219 x i8] }>, i32, i8 }, { <{ [25 x i8], [231 x i8] }>, i32, i8 } }>* @_ZL25deviceExtensionProperties to %struct.ExtensionProperties*), i64 %39, i32 1
  %41 = load i8, i8* %40, align 4, !range !3
  %42 = icmp eq i8 %41, 0
  %43 = add nuw nsw i64 %27, 1
  br i1 %42, label %275, label %24

44:                                               ; preds = %24, %16
  %45 = getelementptr inbounds %struct.VkDeviceCreateInfo, %struct.VkDeviceCreateInfo* %1, i64 0, i32 1
  %46 = bitcast i8** %45 to %struct.VkBaseInStructure**
  %47 = getelementptr inbounds %struct.VkDeviceCreateInfo, %struct.VkDeviceCreateInfo* %1, i64 0, i32 9
  %48 = load %struct.VkPhysicalDeviceFeatures*, %struct.VkPhysicalDeviceFeatures** %47, align 8
  %49 = load %struct.VkBaseInStructure*, %struct.VkBaseInStructure** %46, align 8
  %50 = icmp eq %struct.VkBaseInStructure* %49, null
  br i1 %50, label %133, label %51

51:                                               ; preds = %44, %128
  %52 = phi %struct.VkBaseInStructure* [ %131, %128 ], [ %49, %44 ]
  %53 = phi %struct.VkPhysicalDeviceFeatures* [ %129, %128 ], [ %48, %44 ]
  %54 = getelementptr inbounds %struct.VkBaseInStructure, %struct.VkBaseInStructure* %52, i64 0, i32 0
  %55 = load i32, i32* %54, align 8
  switch i32 %55, label %128 [
    i32 1000259000, label %110
    i32 1000059000, label %56
    i32 1000063000, label %106
    i32 1000083000, label %59
    i32 1000120000, label %77
    i32 1000070001, label %86
    i32 1000053001, label %96
  ]

56:                                               ; preds = %51
  %57 = getelementptr inbounds %struct.VkBaseInStructure, %struct.VkBaseInStructure* %52, i64 1
  %58 = bitcast %struct.VkBaseInStructure* %57 to %struct.VkPhysicalDeviceFeatures*
  br label %128

59:                                               ; preds = %51
  %60 = bitcast %struct.VkBaseInStructure* %52 to %struct.VkPhysicalDevice16BitStorageFeatures*
  %61 = getelementptr inbounds %struct.VkBaseInStructure, %struct.VkBaseInStructure* %52, i64 1, i32 0
  %62 = load i32, i32* %61, align 8
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %275

64:                                               ; preds = %59
  %65 = getelementptr inbounds %struct.VkPhysicalDevice16BitStorageFeatures, %struct.VkPhysicalDevice16BitStorageFeatures* %60, i64 0, i32 3
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %275

68:                                               ; preds = %64
  %69 = getelementptr inbounds %struct.VkBaseInStructure, %struct.VkBaseInStructure* %52, i64 1, i32 1
  %70 = bitcast %struct.VkBaseInStructure** %69 to i32*
  %71 = load i32, i32* %70, align 8
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %275

73:                                               ; preds = %68
  %74 = getelementptr inbounds %struct.VkPhysicalDevice16BitStorageFeatures, %struct.VkPhysicalDevice16BitStorageFeatures* %60, i64 0, i32 5
  %75 = load i32, i32* %74, align 4
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %128, label %275

77:                                               ; preds = %51
  %78 = getelementptr inbounds %struct.VkBaseInStructure, %struct.VkBaseInStructure* %52, i64 1, i32 0
  %79 = load i32, i32* %78, align 8
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %275

81:                                               ; preds = %77
  %82 = bitcast %struct.VkBaseInStructure* %52 to %struct.VkPhysicalDeviceVariablePointersFeatures*
  %83 = getelementptr inbounds %struct.VkPhysicalDeviceVariablePointersFeatures, %struct.VkPhysicalDeviceVariablePointersFeatures* %82, i64 0, i32 3
  %84 = load i32, i32* %83, align 4
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %128, label %275

86:                                               ; preds = %51
  %87 = getelementptr inbounds %struct.VkBaseInStructure, %struct.VkBaseInStructure* %52, i64 1, i32 0
  %88 = load i32, i32* %87, align 8
  %89 = icmp eq i32 %88, 1
  br i1 %89, label %90, label %275

90:                                               ; preds = %86
  %91 = getelementptr inbounds %struct.VkBaseInStructure, %struct.VkBaseInStructure* %52, i64 1, i32 1
  %92 = bitcast %struct.VkBaseInStructure** %91 to %struct.VkPhysicalDevice_T***
  %93 = load %struct.VkPhysicalDevice_T**, %struct.VkPhysicalDevice_T*** %92, align 8
  %94 = load %struct.VkPhysicalDevice_T*, %struct.VkPhysicalDevice_T** %93, align 8
  %95 = icmp eq %struct.VkPhysicalDevice_T* %94, %0
  br i1 %95, label %128, label %275

96:                                               ; preds = %51
  %97 = bitcast %struct.VkBaseInStructure* %52 to %struct.VkPhysicalDeviceMultiviewFeatures*
  %98 = getelementptr inbounds %struct.VkPhysicalDeviceMultiviewFeatures, %struct.VkPhysicalDeviceMultiviewFeatures* %97, i64 0, i32 3
  %99 = load i32, i32* %98, align 4
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %275

101:                                              ; preds = %96
  %102 = getelementptr inbounds %struct.VkBaseInStructure, %struct.VkBaseInStructure* %52, i64 1, i32 1
  %103 = bitcast %struct.VkBaseInStructure** %102 to i32*
  %104 = load i32, i32* %103, align 8
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %128, label %275

106:                                              ; preds = %51
  %107 = getelementptr inbounds %struct.VkBaseInStructure, %struct.VkBaseInStructure* %52, i64 1, i32 0
  %108 = load i32, i32* %107, align 8
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %128, label %275

110:                                              ; preds = %51
  %111 = bitcast %struct.VkBaseInStructure* %52 to %struct.VkPhysicalDeviceLineRasterizationFeaturesEXT*
  %112 = getelementptr inbounds %struct.VkBaseInStructure, %struct.VkBaseInStructure* %52, i64 1, i32 1
  %113 = bitcast %struct.VkBaseInStructure** %112 to i32*
  %114 = load i32, i32* %113, align 8
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %116, label %275

116:                                              ; preds = %110
  %117 = getelementptr inbounds %struct.VkBaseInStructure, %struct.VkBaseInStructure* %52, i64 2, i32 0
  %118 = load i32, i32* %117, align 8
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %120, label %275

120:                                              ; preds = %116
  %121 = getelementptr inbounds %struct.VkPhysicalDeviceLineRasterizationFeaturesEXT, %struct.VkPhysicalDeviceLineRasterizationFeaturesEXT* %111, i64 0, i32 5
  %122 = load i32, i32* %121, align 4
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %124, label %275

124:                                              ; preds = %120
  %125 = getelementptr inbounds %struct.VkPhysicalDeviceLineRasterizationFeaturesEXT, %struct.VkPhysicalDeviceLineRasterizationFeaturesEXT* %111, i64 0, i32 7
  %126 = load i32, i32* %125, align 4
  %127 = icmp eq i32 %126, 0
  br i1 %127, label %128, label %275

128:                                              ; preds = %51, %124, %106, %101, %90, %81, %73, %56
  %129 = phi %struct.VkPhysicalDeviceFeatures* [ %53, %124 ], [ %53, %106 ], [ %53, %101 ], [ %53, %90 ], [ %53, %81 ], [ %53, %73 ], [ %58, %56 ], [ %53, %51 ]
  %130 = getelementptr inbounds %struct.VkBaseInStructure, %struct.VkBaseInStructure* %52, i64 0, i32 1
  %131 = load %struct.VkBaseInStructure*, %struct.VkBaseInStructure** %130, align 8
  %132 = icmp eq %struct.VkBaseInStructure* %131, null
  br i1 %132, label %133, label %51

133:                                              ; preds = %128, %44
  %134 = phi %struct.VkPhysicalDeviceFeatures* [ %48, %44 ], [ %129, %128 ]
  %135 = icmp eq %struct.VkPhysicalDeviceFeatures* %134, null
  br i1 %135, label %136, label %138

136:                                              ; preds = %133
  %137 = bitcast %struct.VkPhysicalDevice_T* %0 to %"class.vk::DispatchableObject.871"*
  br label %144

138:                                              ; preds = %133
  %139 = icmp eq %struct.VkPhysicalDevice_T* %0, null
  %140 = bitcast %struct.VkPhysicalDevice_T* %0 to %"class.vk::DispatchableObject.871"*
  %141 = getelementptr inbounds %"class.vk::DispatchableObject.871", %"class.vk::DispatchableObject.871"* %140, i64 0, i32 1
  %142 = select i1 %139, %"class.vk::PhysicalDevice"* null, %"class.vk::PhysicalDevice"* %141
  %143 = tail call zeroext i1 @_ZNK2vk14PhysicalDevice11hasFeaturesERK24VkPhysicalDeviceFeatures(%"class.vk::PhysicalDevice"* %142, %struct.VkPhysicalDeviceFeatures* nonnull dereferenceable(220) %134) #12
  br i1 %143, label %144, label %275

144:                                              ; preds = %136, %138
  %145 = phi %"class.vk::DispatchableObject.871"* [ %137, %136 ], [ %140, %138 ]
  %146 = icmp eq %struct.VkPhysicalDevice_T* %0, null
  %147 = getelementptr inbounds %"class.vk::DispatchableObject.871", %"class.vk::DispatchableObject.871"* %145, i64 0, i32 1
  %148 = select i1 %146, %"class.vk::PhysicalDevice"* null, %"class.vk::PhysicalDevice"* %147
  %149 = tail call i32 @_ZNK2vk14PhysicalDevice27getQueueFamilyPropertyCountEv(%"class.vk::PhysicalDevice"* %148) #12
  %150 = getelementptr inbounds %struct.VkDeviceCreateInfo, %struct.VkDeviceCreateInfo* %1, i64 0, i32 3
  %151 = load i32, i32* %150, align 4
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %155, label %153

153:                                              ; preds = %144
  %154 = getelementptr inbounds %struct.VkDeviceCreateInfo, %struct.VkDeviceCreateInfo* %1, i64 0, i32 4
  br label %254

155:                                              ; preds = %270, %144
  %156 = load atomic i8, i8* bitcast (i64* @_ZGVZN12_GLOBAL__N_120getOrCreateSchedulerEvE9scheduler to i8*) acquire, align 8
  %157 = icmp eq i8 %156, 0
  br i1 %157, label %158, label %163, !prof !2

158:                                              ; preds = %155
  %159 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN12_GLOBAL__N_120getOrCreateSchedulerEvE9scheduler) #13
  %160 = icmp eq i32 %159, 0
  br i1 %160, label %163, label %161

161:                                              ; preds = %158
  %162 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%struct.Scheduler*)* @_ZZN12_GLOBAL__N_120getOrCreateSchedulerEvEN9SchedulerD2Ev to void (i8*)*), i8* bitcast (%struct.Scheduler* @_ZZN12_GLOBAL__N_120getOrCreateSchedulerEvE9scheduler to i8*), i8* nonnull @__dso_handle) #13
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN12_GLOBAL__N_120getOrCreateSchedulerEvE9scheduler) #13
  br label %163

163:                                              ; preds = %161, %158, %155
  tail call void @_ZNSt3__15mutex4lockEv(%"class.std::__1::mutex"* getelementptr inbounds (%struct.Scheduler, %struct.Scheduler* @_ZZN12_GLOBAL__N_120getOrCreateSchedulerEvE9scheduler, i64 0, i32 0, i32 0)) #12
  %164 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** getelementptr inbounds (%struct.Scheduler, %struct.Scheduler* @_ZZN12_GLOBAL__N_120getOrCreateSchedulerEvE9scheduler, i64 0, i32 1, i32 1), align 8
  %165 = icmp eq %"class.std::__1::__shared_weak_count"* %164, null
  br i1 %165, label %173, label %166

166:                                              ; preds = %163
  %167 = tail call %"class.std::__1::__shared_weak_count"* @_ZNSt3__119__shared_weak_count4lockEv(%"class.std::__1::__shared_weak_count"* nonnull %164) #12
  %168 = icmp eq %"class.std::__1::__shared_weak_count"* %167, null
  br i1 %168, label %173, label %169

169:                                              ; preds = %166
  %170 = load %"class.marl::Scheduler"*, %"class.marl::Scheduler"** getelementptr inbounds (%struct.Scheduler, %struct.Scheduler* @_ZZN12_GLOBAL__N_120getOrCreateSchedulerEvE9scheduler, i64 0, i32 1, i32 0), align 8
  %171 = ptrtoint %"class.marl::Scheduler"* %170 to i64
  %172 = icmp eq %"class.marl::Scheduler"* %170, null
  br i1 %172, label %173, label %238

173:                                              ; preds = %169, %166, %163
  %174 = phi %"class.std::__1::__shared_weak_count"* [ %167, %169 ], [ null, %166 ], [ null, %163 ]
  %175 = bitcast %"struct.marl::Scheduler::Config"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %175) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %175, i8 -86, i64 24, i1 false) #13
  %176 = getelementptr inbounds %"struct.marl::Scheduler::Config", %"struct.marl::Scheduler::Config"* %5, i64 0, i32 0, i32 0
  %177 = getelementptr inbounds %"struct.marl::Scheduler::Config", %"struct.marl::Scheduler::Config"* %5, i64 0, i32 0, i32 1, i32 0, i32 2
  %178 = getelementptr inbounds %"struct.marl::Scheduler::Config", %"struct.marl::Scheduler::Config"* %5, i64 0, i32 0, i32 2
  %179 = bitcast %"class.std::__1::shared_ptr.190"* %178 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %179, i8 0, i64 16, i1 false) #13
  %180 = getelementptr inbounds %"struct.marl::Scheduler::Config", %"struct.marl::Scheduler::Config"* %5, i64 0, i32 1
  %181 = load i64, i64* bitcast (%"class.marl::Allocator"** @_ZN4marl9Allocator7DefaultE to i64*), align 8
  %182 = bitcast %"class.marl::Allocator"** %180 to i64*
  store i64 %181, i64* %182, align 8
  %183 = getelementptr inbounds %"struct.marl::Scheduler::Config", %"struct.marl::Scheduler::Config"* %5, i64 0, i32 2
  store i64 1048576, i64* %183, align 8
  %184 = tail call i32 @_ZN4marl6Thread14numLogicalCPUsEv() #12
  %185 = icmp ult i32 %184, 16
  %186 = select i1 %185, i32 %184, i32 16
  store i32 %186, i32* %176, align 8
  %187 = getelementptr inbounds %"struct.marl::Scheduler::Config", %"struct.marl::Scheduler::Config"* %5, i64 0, i32 0, i32 1, i32 0, i32 1
  %188 = bitcast %"struct.std::__1::__function::__policy_invoker"* %187 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"union.std::__1::__function::__policy_storage"*, i32)* @"_ZNSt3__110__function16__policy_invokerIFviEE11__call_implINS0_20__default_alloc_funcIZN12_GLOBAL__N_120getOrCreateSchedulerEvE3$_0S2_EEEEvPKNS0_16__policy_storageEi" to i64), i64 ptrtoint (%"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN12_GLOBAL__N_120getOrCreateSchedulerEvE3$_0FviEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" to i64)>, <2 x i64>* %188, align 8
  %189 = tail call i8* @_Znwm(i64 2328) #14
  %190 = bitcast i8* %189 to %"class.std::__1::__shared_weak_count"*
  %191 = bitcast i8* %189 to i32 (...)***
  %192 = getelementptr inbounds i8, i8* %189, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %192, i8 0, i64 16, i1 false) #13
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVNSt3__120__shared_ptr_emplaceIN4marl9SchedulerENS_9allocatorIS2_EEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %191, align 8
  %193 = getelementptr inbounds i8, i8* %189, i64 24
  %194 = bitcast i8* %193 to %"class.marl::Scheduler"*
  call void @_ZN4marl9SchedulerC1ERKNS0_6ConfigE(%"class.marl::Scheduler"* %194, %"struct.marl::Scheduler::Config"* nonnull dereferenceable(72) %5) #12
  %195 = ptrtoint i8* %193 to i64
  %196 = ptrtoint i8* %189 to i64
  %197 = icmp eq %"class.std::__1::__shared_weak_count"* %174, null
  br i1 %197, label %208, label %198

198:                                              ; preds = %173
  %199 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %174, i64 0, i32 0, i32 1
  %200 = atomicrmw add i64* %199, i64 -1 acq_rel
  %201 = icmp eq i64 %200, 0
  br i1 %201, label %202, label %208

202:                                              ; preds = %198
  %203 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %174, i64 0, i32 0
  %204 = bitcast %"class.std::__1::__shared_weak_count"* %174 to void (%"class.std::__1::__shared_count"*)***
  %205 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %204, align 8
  %206 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %205, i64 2
  %207 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %206, align 8
  call void %207(%"class.std::__1::__shared_count"* %203) #12
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %174) #12
  br label %208

208:                                              ; preds = %202, %198, %173
  %209 = getelementptr inbounds i8, i8* %189, i64 16
  %210 = bitcast i8* %209 to i64*
  %211 = atomicrmw add i64* %210, i64 1 monotonic
  store i64 %195, i64* bitcast (%"class.std::__1::weak_ptr"* getelementptr inbounds (%struct.Scheduler, %struct.Scheduler* @_ZZN12_GLOBAL__N_120getOrCreateSchedulerEvE9scheduler, i64 0, i32 1) to i64*), align 8
  %212 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** getelementptr inbounds (%struct.Scheduler, %struct.Scheduler* @_ZZN12_GLOBAL__N_120getOrCreateSchedulerEvE9scheduler, i64 0, i32 1, i32 1), align 8
  store i64 %196, i64* bitcast (%"class.std::__1::__shared_weak_count"** getelementptr inbounds (%struct.Scheduler, %struct.Scheduler* @_ZZN12_GLOBAL__N_120getOrCreateSchedulerEvE9scheduler, i64 0, i32 1, i32 1) to i64*), align 8
  %213 = icmp eq %"class.std::__1::__shared_weak_count"* %212, null
  br i1 %213, label %215, label %214

214:                                              ; preds = %208
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %212) #12
  br label %215

215:                                              ; preds = %214, %208
  %216 = getelementptr inbounds %"struct.marl::Scheduler::Config", %"struct.marl::Scheduler::Config"* %5, i64 0, i32 0, i32 2, i32 1
  %217 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %216, align 8
  %218 = icmp eq %"class.std::__1::__shared_weak_count"* %217, null
  br i1 %218, label %229, label %219

219:                                              ; preds = %215
  %220 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %217, i64 0, i32 0, i32 1
  %221 = atomicrmw add i64* %220, i64 -1 acq_rel
  %222 = icmp eq i64 %221, 0
  br i1 %222, label %223, label %229

223:                                              ; preds = %219
  %224 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %217, i64 0, i32 0
  %225 = bitcast %"class.std::__1::__shared_weak_count"* %217 to void (%"class.std::__1::__shared_count"*)***
  %226 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %225, align 8
  %227 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %226, i64 2
  %228 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %227, align 8
  call void %228(%"class.std::__1::__shared_count"* %224) #12
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %217) #12
  br label %229

229:                                              ; preds = %223, %219, %215
  %230 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %177, align 8
  %231 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %230, i64 0, i32 1
  %232 = load void (i8*)*, void (i8*)** %231, align 8
  %233 = icmp eq void (i8*)* %232, null
  br i1 %233, label %237, label %234

234:                                              ; preds = %229
  %235 = getelementptr inbounds %"struct.marl::Scheduler::Config", %"struct.marl::Scheduler::Config"* %5, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %236 = load i8*, i8** %235, align 8
  call void %232(i8* %236) #12
  br label %237

237:                                              ; preds = %234, %229
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %175) #13
  br label %238

238:                                              ; preds = %237, %169
  %239 = phi i64 [ %171, %169 ], [ %195, %237 ]
  %240 = phi %"class.std::__1::__shared_weak_count"* [ %167, %169 ], [ %190, %237 ]
  call void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"* getelementptr inbounds (%struct.Scheduler, %struct.Scheduler* @_ZZN12_GLOBAL__N_120getOrCreateSchedulerEvE9scheduler, i64 0, i32 0, i32 0)) #12
  %241 = bitcast %"class.std::__1::shared_ptr.189"* %6 to i64*
  store i64 %239, i64* %241, align 8
  %242 = getelementptr inbounds %"class.std::__1::shared_ptr.189", %"class.std::__1::shared_ptr.189"* %6, i64 0, i32 1
  store %"class.std::__1::__shared_weak_count"* %240, %"class.std::__1::__shared_weak_count"** %242, align 8
  %243 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %240, i64 0, i32 0, i32 1
  %244 = atomicrmw add i64* %243, i64 1 monotonic
  %245 = call i32 @_ZN2vk18DispatchableObjectINS_6DeviceEP10VkDevice_TE6CreateI18VkDeviceCreateInfoJPNS_14PhysicalDeviceEPK24VkPhysicalDeviceFeaturesNSt3__110shared_ptrIN4marl9SchedulerEEEEEE8VkResultPK21VkAllocationCallbacksPKT_PS3_DpT0_(%struct.VkAllocationCallbacks* %2, %struct.VkDeviceCreateInfo* %1, %struct.VkDevice_T** %3, %"class.vk::PhysicalDevice"* %148, %struct.VkPhysicalDeviceFeatures* %134, %"class.std::__1::shared_ptr.189"* nonnull byval(%"class.std::__1::shared_ptr.189") align 8 %6) #16
  %246 = atomicrmw add i64* %243, i64 -1 acq_rel
  %247 = icmp eq i64 %246, 0
  br i1 %247, label %248, label %275

248:                                              ; preds = %238
  %249 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %240, i64 0, i32 0
  %250 = bitcast %"class.std::__1::__shared_weak_count"* %240 to void (%"class.std::__1::__shared_count"*)***
  %251 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %250, align 8
  %252 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %251, i64 2
  %253 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %252, align 8
  call void %253(%"class.std::__1::__shared_count"* %249) #12
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %240) #12
  br label %275

254:                                              ; preds = %153, %270
  %255 = phi i64 [ 0, %153 ], [ %271, %270 ]
  %256 = load %struct.VkDeviceQueueCreateInfo*, %struct.VkDeviceQueueCreateInfo** %154, align 8
  %257 = getelementptr inbounds %struct.VkDeviceQueueCreateInfo, %struct.VkDeviceQueueCreateInfo* %256, i64 %255, i32 2
  %258 = load i32, i32* %257, align 8
  %259 = icmp eq i32 %258, 0
  br i1 %259, label %262, label %260

260:                                              ; preds = %254
  %261 = trunc i64 %255 to i32
  tail call void (i8*, ...) @_ZN2sw4warnEPKcz(i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.26, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 906, i32 %261, i32 %258) #12
  br label %262

262:                                              ; preds = %254, %260
  %263 = getelementptr inbounds %struct.VkDeviceQueueCreateInfo, %struct.VkDeviceQueueCreateInfo* %256, i64 %255, i32 1
  %264 = bitcast i8** %263 to %struct.VkBaseInStructure**
  br label %265

265:                                              ; preds = %265, %262
  %266 = phi %struct.VkBaseInStructure** [ %264, %262 ], [ %269, %265 ]
  %267 = load %struct.VkBaseInStructure*, %struct.VkBaseInStructure** %266, align 8
  %268 = icmp eq %struct.VkBaseInStructure* %267, null
  %269 = getelementptr inbounds %struct.VkBaseInStructure, %struct.VkBaseInStructure* %267, i64 0, i32 1
  br i1 %268, label %270, label %265

270:                                              ; preds = %265
  %271 = add nuw nsw i64 %255, 1
  %272 = load i32, i32* %150, align 4
  %273 = zext i32 %272 to i64
  %274 = icmp ult i64 %271, %273
  br i1 %274, label %254, label %155

275:                                              ; preds = %38, %30, %110, %116, %120, %96, %86, %77, %59, %64, %68, %124, %106, %101, %90, %81, %73, %248, %238, %138
  %276 = phi i32 [ -8, %138 ], [ %245, %238 ], [ %245, %248 ], [ -8, %73 ], [ -8, %81 ], [ -8, %90 ], [ -8, %101 ], [ -8, %106 ], [ -8, %124 ], [ -8, %68 ], [ -8, %64 ], [ -8, %59 ], [ -8, %77 ], [ -8, %86 ], [ -8, %96 ], [ -8, %120 ], [ -8, %116 ], [ -8, %110 ], [ -7, %30 ], [ -7, %38 ]
  ret i32 %276
}

; Function Attrs: optsize
declare zeroext i1 @_ZNK2vk14PhysicalDevice11hasFeaturesERK24VkPhysicalDeviceFeatures(%"class.vk::PhysicalDevice"*, %struct.VkPhysicalDeviceFeatures* dereferenceable(220)) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden i32 @_ZN2vk18DispatchableObjectINS_6DeviceEP10VkDevice_TE6CreateI18VkDeviceCreateInfoJPNS_14PhysicalDeviceEPK24VkPhysicalDeviceFeaturesNSt3__110shared_ptrIN4marl9SchedulerEEEEEE8VkResultPK21VkAllocationCallbacksPKT_PS3_DpT0_(%struct.VkAllocationCallbacks*, %struct.VkDeviceCreateInfo*, %struct.VkDevice_T**, %"class.vk::PhysicalDevice"*, %struct.VkPhysicalDeviceFeatures*, %"class.std::__1::shared_ptr.189"* byval(%"class.std::__1::shared_ptr.189") align 8) local_unnamed_addr #0 comdat align 2 {
  %7 = alloca %"class.std::__1::shared_ptr.189", align 8
  %8 = bitcast %"class.std::__1::shared_ptr.189"* %5 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.std::__1::shared_ptr.189", %"class.std::__1::shared_ptr.189"* %5, i64 0, i32 1
  %11 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %10, align 8
  %12 = icmp eq %"class.std::__1::__shared_weak_count"* %11, null
  br i1 %12, label %16, label %13

13:                                               ; preds = %6
  %14 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %11, i64 0, i32 0, i32 1
  %15 = atomicrmw add i64* %14, i64 1 monotonic
  br label %16

16:                                               ; preds = %6, %13
  store %struct.VkDevice_T* null, %struct.VkDevice_T** %2, align 8
  %17 = tail call i64 @_ZN2vk6Device29ComputeRequiredAllocationSizeEPK18VkDeviceCreateInfo(%struct.VkDeviceCreateInfo* %1) #12
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %22, label %19

19:                                               ; preds = %16
  %20 = tail call i8* @_ZN2vk8allocateEmmPK21VkAllocationCallbacks23VkSystemAllocationScope(i64 %17, i64 16, %struct.VkAllocationCallbacks* %0, i32 3) #12
  %21 = icmp eq i8* %20, null
  br i1 %21, label %52, label %22

22:                                               ; preds = %19, %16
  %23 = phi i8* [ %20, %19 ], [ null, %16 ]
  %24 = tail call i8* @_ZN2vk8allocateEmmPK21VkAllocationCallbacks23VkSystemAllocationScope(i64 392, i64 8, %struct.VkAllocationCallbacks* %0, i32 3) #12
  %25 = icmp eq i8* %24, null
  br i1 %25, label %26, label %27

26:                                               ; preds = %22
  tail call void @_ZN2vk10deallocateEPvPK21VkAllocationCallbacks(i8* %23, %struct.VkAllocationCallbacks* %0) #12
  br label %52

27:                                               ; preds = %22
  br i1 %12, label %31, label %28

28:                                               ; preds = %27
  %29 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %11, i64 0, i32 0, i32 1
  %30 = atomicrmw add i64* %29, i64 1 monotonic
  br label %31

31:                                               ; preds = %28, %27
  %32 = bitcast %"class.std::__1::shared_ptr.189"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %32) #13
  %33 = bitcast %"class.std::__1::shared_ptr.189"* %7 to i64*
  store i64 %9, i64* %33, align 8
  %34 = getelementptr inbounds %"class.std::__1::shared_ptr.189", %"class.std::__1::shared_ptr.189"* %7, i64 0, i32 1
  store %"class.std::__1::__shared_weak_count"* %11, %"class.std::__1::__shared_weak_count"** %34, align 8
  %35 = bitcast i8* %24 to i64*
  store i64 30261470, i64* %35, align 8
  %36 = getelementptr inbounds i8, i8* %24, i64 8
  %37 = bitcast i8* %36 to %"class.vk::Device"*
  call void @_ZN2vk6DeviceC1EPK18VkDeviceCreateInfoPvPNS_14PhysicalDeviceEPK24VkPhysicalDeviceFeaturesRKNSt3__110shared_ptrIN4marl9SchedulerEEE(%"class.vk::Device"* %37, %struct.VkDeviceCreateInfo* %1, i8* %23, %"class.vk::PhysicalDevice"* %3, %struct.VkPhysicalDeviceFeatures* %4, %"class.std::__1::shared_ptr.189"* nonnull dereferenceable(16) %7) #12
  %38 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %34, align 8
  %39 = icmp eq %"class.std::__1::__shared_weak_count"* %38, null
  br i1 %39, label %50, label %40

40:                                               ; preds = %31
  %41 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %38, i64 0, i32 0, i32 1
  %42 = atomicrmw add i64* %41, i64 -1 acq_rel
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %44, label %50

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %38, i64 0, i32 0
  %46 = bitcast %"class.std::__1::__shared_weak_count"* %38 to void (%"class.std::__1::__shared_count"*)***
  %47 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %46, align 8
  %48 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %47, i64 2
  %49 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %48, align 8
  call void %49(%"class.std::__1::__shared_count"* %45) #12
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %38) #12
  br label %50

50:                                               ; preds = %44, %40, %31
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %32) #13
  %51 = bitcast %struct.VkDevice_T** %2 to i8**
  store i8* %24, i8** %51, align 8
  br label %52

52:                                               ; preds = %19, %26, %50
  %53 = phi i32 [ -1, %19 ], [ 0, %50 ], [ -1, %26 ]
  br i1 %12, label %64, label %54

54:                                               ; preds = %52
  %55 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %11, i64 0, i32 0, i32 1
  %56 = atomicrmw add i64* %55, i64 -1 acq_rel
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %58, label %64

58:                                               ; preds = %54
  %59 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %11, i64 0, i32 0
  %60 = bitcast %"class.std::__1::__shared_weak_count"* %11 to void (%"class.std::__1::__shared_count"*)***
  %61 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %60, align 8
  %62 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %61, i64 2
  %63 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %62, align 8
  call void %63(%"class.std::__1::__shared_count"* %59) #12
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %11) #12
  br label %64

64:                                               ; preds = %52, %54, %58
  call void @_ZNSt3__110shared_ptrIN4marl9SchedulerEED2Ev(%"class.std::__1::shared_ptr.189"* nonnull %5) #12
  ret i32 %53
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__110shared_ptrIN4marl9SchedulerEED2Ev(%"class.std::__1::shared_ptr.189"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.std::__1::shared_ptr.189", %"class.std::__1::shared_ptr.189"* %0, i64 0, i32 1
  %3 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %2, align 8
  %4 = icmp eq %"class.std::__1::__shared_weak_count"* %3, null
  br i1 %4, label %15, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %3, i64 0, i32 0, i32 1
  %7 = atomicrmw add i64* %6, i64 -1 acq_rel
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %9, label %15

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %3, i64 0, i32 0
  %11 = bitcast %"class.std::__1::__shared_weak_count"* %3 to void (%"class.std::__1::__shared_count"*)***
  %12 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %12, i64 2
  %14 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %13, align 8
  tail call void %14(%"class.std::__1::__shared_count"* %10) #12
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %3) #12
  br label %15

15:                                               ; preds = %9, %5, %1
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @vkDestroyDevice(%struct.VkDevice_T*, %struct.VkAllocationCallbacks*) local_unnamed_addr #0 {
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([83 x i8], [83 x i8]* @.str.27, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 926, %struct.VkDevice_T* %0, %struct.VkAllocationCallbacks* %1) #12
  %3 = icmp eq %struct.VkDevice_T* %0, null
  %4 = bitcast %struct.VkDevice_T* %0 to %"class.vk::DispatchableObject.872"*
  br i1 %3, label %21, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.vk::DispatchableObject.872", %"class.vk::DispatchableObject.872"* %4, i64 0, i32 1
  tail call void @_ZN2vk6Device7destroyEPK21VkAllocationCallbacks(%"class.vk::Device"* nonnull %6, %struct.VkAllocationCallbacks* %1) #12
  %7 = getelementptr inbounds %"class.vk::DispatchableObject.872", %"class.vk::DispatchableObject.872"* %4, i64 0, i32 1, i32 11, i32 0
  tail call void @_ZNSt3__112__hash_tableIPN2vk9ImageViewENS_4hashIS3_EENS_8equal_toIS3_EENS_9allocatorIS3_EEED2Ev(%"class.std::__1::__hash_table.380"* %7) #12
  %8 = getelementptr inbounds %"class.vk::DispatchableObject.872", %"class.vk::DispatchableObject.872"* %4, i64 0, i32 1, i32 9
  tail call void @_ZNSt3__110unique_ptrIN2vk6Device14SamplerIndexerENS_14default_deleteIS3_EEE5resetEPS3_(%"class.std::__1::unique_ptr.364"* %8, %"class.vk::Device::SamplerIndexer"* null) #12
  %9 = getelementptr inbounds %"class.vk::DispatchableObject.872", %"class.vk::DispatchableObject.872"* %4, i64 0, i32 1, i32 8
  tail call void @_ZNSt3__110unique_ptrIN2vk6Device20SamplingRoutineCacheENS_14default_deleteIS3_EEE5resetEPS3_(%"class.std::__1::unique_ptr.303"* %9, %"class.vk::Device::SamplingRoutineCache"* null) #12
  %10 = getelementptr inbounds %"class.vk::DispatchableObject.872", %"class.vk::DispatchableObject.872"* %4, i64 0, i32 1, i32 7
  tail call void @_ZNSt3__110shared_ptrIN4marl9SchedulerEED2Ev(%"class.std::__1::shared_ptr.189"* %10) #12
  %11 = getelementptr inbounds %"class.vk::DispatchableObject.872", %"class.vk::DispatchableObject.872"* %4, i64 0, i32 1, i32 3, i32 0, i32 0, i32 0
  %12 = load %"class.sw::Blitter"*, %"class.sw::Blitter"** %11, align 8
  store %"class.sw::Blitter"* null, %"class.sw::Blitter"** %11, align 8
  %13 = icmp eq %"class.sw::Blitter"* %12, null
  br i1 %13, label %19, label %14

14:                                               ; preds = %5
  %15 = bitcast %"class.sw::Blitter"* %12 to void (%"class.sw::Blitter"*)***
  %16 = load void (%"class.sw::Blitter"*)**, void (%"class.sw::Blitter"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.sw::Blitter"*)*, void (%"class.sw::Blitter"*)** %16, i64 1
  %18 = load void (%"class.sw::Blitter"*)*, void (%"class.sw::Blitter"*)** %17, align 8
  tail call void %18(%"class.sw::Blitter"* nonnull %12) #12
  br label %19

19:                                               ; preds = %14, %5
  %20 = bitcast %struct.VkDevice_T* %0 to i8*
  tail call void @_ZN2vk10deallocateEPvPK21VkAllocationCallbacks(i8* nonnull %20, %struct.VkAllocationCallbacks* %1) #12
  br label %21

21:                                               ; preds = %2, %19
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @vkEnumerateInstanceExtensionProperties(i8*, i32*, %struct.VkExtensionProperties*) local_unnamed_addr #0 {
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([116 x i8], [116 x i8]* @.str.28, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 934, i8* %0, i32* %1, %struct.VkExtensionProperties* %2) #12
  br label %4

4:                                                ; preds = %4, %3
  %5 = phi i64 [ 0, %3 ], [ %11, %4 ]
  %6 = phi i32 [ 0, %3 ], [ %10, %4 ]
  %7 = getelementptr inbounds [10 x %struct.ExtensionProperties], [10 x %struct.ExtensionProperties]* @_ZL27instanceExtensionProperties, i64 0, i64 %5, i32 1
  %8 = load i8, i8* %7, align 4, !range !3
  %9 = zext i8 %8 to i32
  %10 = add i32 %6, %9
  %11 = add nuw nsw i64 %5, 1
  %12 = icmp eq i64 %11, 10
  br i1 %12, label %13, label %4

13:                                               ; preds = %4
  %14 = icmp eq %struct.VkExtensionProperties* %2, null
  br i1 %14, label %15, label %16

15:                                               ; preds = %13
  store i32 %10, i32* %1, align 4
  br label %51

16:                                               ; preds = %13
  %17 = load i32, i32* %1, align 4
  %18 = icmp ult i32 %10, %17
  %19 = select i1 %18, i32 %10, i32 %17
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %48, label %21

21:                                               ; preds = %16
  %22 = zext i32 %19 to i64
  br label %23

23:                                               ; preds = %43, %21
  %24 = phi i64 [ 0, %21 ], [ %45, %43 ]
  %25 = phi i32 [ 0, %21 ], [ %46, %43 ]
  %26 = icmp ult i32 %25, 10
  br i1 %26, label %27, label %43

27:                                               ; preds = %23
  %28 = zext i32 %25 to i64
  br label %29

29:                                               ; preds = %34, %27
  %30 = phi i64 [ %28, %27 ], [ %35, %34 ]
  %31 = getelementptr inbounds [10 x %struct.ExtensionProperties], [10 x %struct.ExtensionProperties]* @_ZL27instanceExtensionProperties, i64 0, i64 %30, i32 1
  %32 = load i8, i8* %31, align 4, !range !3
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %34, label %38

34:                                               ; preds = %29
  %35 = add nuw nsw i64 %30, 1
  %36 = trunc i64 %35 to i32
  %37 = icmp eq i32 %36, 10
  br i1 %37, label %43, label %29

38:                                               ; preds = %29
  %39 = trunc i64 %30 to i32
  %40 = and i64 %30, 4294967295
  %41 = getelementptr inbounds %struct.VkExtensionProperties, %struct.VkExtensionProperties* %2, i64 %24, i32 0, i64 0
  %42 = getelementptr inbounds [10 x %struct.ExtensionProperties], [10 x %struct.ExtensionProperties]* @_ZL27instanceExtensionProperties, i64 0, i64 %40, i32 0, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %41, i8* align 8 %42, i64 260, i1 false) #13
  br label %43

43:                                               ; preds = %34, %38, %23
  %44 = phi i32 [ %39, %38 ], [ %25, %23 ], [ 10, %34 ]
  %45 = add nuw nsw i64 %24, 1
  %46 = add i32 %44, 1
  %47 = icmp eq i64 %45, %22
  br i1 %47, label %48, label %23

48:                                               ; preds = %43, %16
  store i32 %19, i32* %1, align 4
  %49 = icmp ugt i32 %10, %17
  %50 = select i1 %49, i32 5, i32 0
  br label %51

51:                                               ; preds = %48, %15
  %52 = phi i32 [ %50, %48 ], [ 0, %15 ]
  ret i32 %52
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @vkEnumerateDeviceExtensionProperties(%struct.VkPhysicalDevice_T*, i8* nocapture readnone, i32*, %struct.VkExtensionProperties*) local_unnamed_addr #0 {
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([149 x i8], [149 x i8]* @.str.29, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 953, %struct.VkPhysicalDevice_T* %0, i32* %2, %struct.VkExtensionProperties* %3) #12
  %5 = icmp eq %struct.VkExtensionProperties* %3, null
  br i1 %5, label %6, label %7

6:                                                ; preds = %4
  store i32 41, i32* %2, align 4
  br label %41

7:                                                ; preds = %4
  %8 = load i32, i32* %2, align 4
  %9 = icmp ult i32 %8, 41
  %10 = select i1 %9, i32 %8, i32 41
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %39, label %12

12:                                               ; preds = %7
  %13 = zext i32 %10 to i64
  br label %14

14:                                               ; preds = %34, %12
  %15 = phi i64 [ 0, %12 ], [ %36, %34 ]
  %16 = phi i32 [ 0, %12 ], [ %37, %34 ]
  %17 = icmp ult i32 %16, 41
  br i1 %17, label %18, label %34

18:                                               ; preds = %14
  %19 = zext i32 %16 to i64
  br label %20

20:                                               ; preds = %25, %18
  %21 = phi i64 [ %19, %18 ], [ %26, %25 ]
  %22 = getelementptr inbounds %struct.ExtensionProperties, %struct.ExtensionProperties* bitcast (<{ { <{ [24 x i8], [232 x i8] }>, i32, i8 }, { <{ [19 x i8], [237 x i8] }>, i32, i8 }, { <{ [25 x i8], [231 x i8] }>, i32, i8 }, { <{ [27 x i8], [229 x i8] }>, i32, i8 }, { <{ [33 x i8], [223 x i8] }>, i32, i8 }, { <{ [19 x i8], [237 x i8] }>, i32, i8 }, { <{ [21 x i8], [235 x i8] }>, i32, i8 }, { <{ [22 x i8], [234 x i8] }>, i32, i8 }, { <{ [25 x i8], [231 x i8] }>, i32, i8 }, { <{ [31 x i8], [225 x i8] }>, i32, i8 }, { <{ [19 x i8], [237 x i8] }>, i32, i8 }, { <{ [19 x i8], [237 x i8] }>, i32, i8 }, { <{ [19 x i8], [237 x i8] }>, i32, i8 }, { <{ [16 x i8], [240 x i8] }>, i32, i8 }, { <{ [27 x i8], [229 x i8] }>, i32, i8 }, { <{ [31 x i8], [225 x i8] }>, i32, i8 }, { <{ [37 x i8], [219 x i8] }>, i32, i8 }, { <{ [24 x i8], [232 x i8] }>, i32, i8 }, { <{ [35 x i8], [221 x i8] }>, i32, i8 }, { <{ [27 x i8], [229 x i8] }>, i32, i8 }, { <{ [25 x i8], [231 x i8] }>, i32, i8 }, { <{ [28 x i8], [228 x i8] }>, i32, i8 }, { <{ [23 x i8], [233 x i8] }>, i32, i8 }, { <{ [16 x i8], [240 x i8] }>, i32, i8 }, { <{ [28 x i8], [228 x i8] }>, i32, i8 }, { <{ [25 x i8], [231 x i8] }>, i32, i8 }, { <{ [27 x i8], [229 x i8] }>, i32, i8 }, { <{ [23 x i8], [233 x i8] }>, i32, i8 }, { <{ [37 x i8], [219 x i8] }>, i32, i8 }, { <{ [31 x i8], [225 x i8] }>, i32, i8 }, { <{ [23 x i8], [233 x i8] }>, i32, i8 }, { <{ [26 x i8], [230 x i8] }>, i32, i8 }, { <{ [29 x i8], [227 x i8] }>, i32, i8 }, { <{ [28 x i8], [228 x i8] }>, i32, i8 }, { <{ [24 x i8], [232 x i8] }>, i32, i8 }, { <{ [28 x i8], [228 x i8] }>, i32, i8 }, { <{ [28 x i8], [228 x i8] }>, i32, i8 }, { <{ [37 x i8], [219 x i8] }>, i32, i8 }, { <{ [16 x i8], [240 x i8] }>, i32, i8 }, { <{ [37 x i8], [219 x i8] }>, i32, i8 }, { <{ [25 x i8], [231 x i8] }>, i32, i8 } }>* @_ZL25deviceExtensionProperties to %struct.ExtensionProperties*), i64 %21, i32 1
  %23 = load i8, i8* %22, align 4, !range !3
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %25, label %29

25:                                               ; preds = %20
  %26 = add nuw nsw i64 %21, 1
  %27 = trunc i64 %26 to i32
  %28 = icmp eq i32 %27, 41
  br i1 %28, label %34, label %20

29:                                               ; preds = %20
  %30 = trunc i64 %21 to i32
  %31 = and i64 %21, 4294967295
  %32 = getelementptr inbounds %struct.VkExtensionProperties, %struct.VkExtensionProperties* %3, i64 %15, i32 0, i64 0
  %33 = getelementptr inbounds %struct.ExtensionProperties, %struct.ExtensionProperties* bitcast (<{ { <{ [24 x i8], [232 x i8] }>, i32, i8 }, { <{ [19 x i8], [237 x i8] }>, i32, i8 }, { <{ [25 x i8], [231 x i8] }>, i32, i8 }, { <{ [27 x i8], [229 x i8] }>, i32, i8 }, { <{ [33 x i8], [223 x i8] }>, i32, i8 }, { <{ [19 x i8], [237 x i8] }>, i32, i8 }, { <{ [21 x i8], [235 x i8] }>, i32, i8 }, { <{ [22 x i8], [234 x i8] }>, i32, i8 }, { <{ [25 x i8], [231 x i8] }>, i32, i8 }, { <{ [31 x i8], [225 x i8] }>, i32, i8 }, { <{ [19 x i8], [237 x i8] }>, i32, i8 }, { <{ [19 x i8], [237 x i8] }>, i32, i8 }, { <{ [19 x i8], [237 x i8] }>, i32, i8 }, { <{ [16 x i8], [240 x i8] }>, i32, i8 }, { <{ [27 x i8], [229 x i8] }>, i32, i8 }, { <{ [31 x i8], [225 x i8] }>, i32, i8 }, { <{ [37 x i8], [219 x i8] }>, i32, i8 }, { <{ [24 x i8], [232 x i8] }>, i32, i8 }, { <{ [35 x i8], [221 x i8] }>, i32, i8 }, { <{ [27 x i8], [229 x i8] }>, i32, i8 }, { <{ [25 x i8], [231 x i8] }>, i32, i8 }, { <{ [28 x i8], [228 x i8] }>, i32, i8 }, { <{ [23 x i8], [233 x i8] }>, i32, i8 }, { <{ [16 x i8], [240 x i8] }>, i32, i8 }, { <{ [28 x i8], [228 x i8] }>, i32, i8 }, { <{ [25 x i8], [231 x i8] }>, i32, i8 }, { <{ [27 x i8], [229 x i8] }>, i32, i8 }, { <{ [23 x i8], [233 x i8] }>, i32, i8 }, { <{ [37 x i8], [219 x i8] }>, i32, i8 }, { <{ [31 x i8], [225 x i8] }>, i32, i8 }, { <{ [23 x i8], [233 x i8] }>, i32, i8 }, { <{ [26 x i8], [230 x i8] }>, i32, i8 }, { <{ [29 x i8], [227 x i8] }>, i32, i8 }, { <{ [28 x i8], [228 x i8] }>, i32, i8 }, { <{ [24 x i8], [232 x i8] }>, i32, i8 }, { <{ [28 x i8], [228 x i8] }>, i32, i8 }, { <{ [28 x i8], [228 x i8] }>, i32, i8 }, { <{ [37 x i8], [219 x i8] }>, i32, i8 }, { <{ [16 x i8], [240 x i8] }>, i32, i8 }, { <{ [37 x i8], [219 x i8] }>, i32, i8 }, { <{ [25 x i8], [231 x i8] }>, i32, i8 } }>* @_ZL25deviceExtensionProperties to %struct.ExtensionProperties*), i64 %31, i32 0, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %32, i8* align 8 %33, i64 260, i1 false) #13
  br label %34

34:                                               ; preds = %25, %29, %14
  %35 = phi i32 [ %30, %29 ], [ %16, %14 ], [ 41, %25 ]
  %36 = add nuw nsw i64 %15, 1
  %37 = add i32 %35, 1
  %38 = icmp eq i64 %36, %13
  br i1 %38, label %39, label %14

39:                                               ; preds = %34, %7
  store i32 %10, i32* %2, align 4
  %40 = select i1 %9, i32 5, i32 0
  br label %41

41:                                               ; preds = %39, %6
  %42 = phi i32 [ %40, %39 ], [ 0, %6 ]
  ret i32 %42
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @vkEnumerateInstanceLayerProperties(i32*, %struct.VkLayerProperties*) local_unnamed_addr #0 {
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([83 x i8], [83 x i8]* @.str.30, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 972, i32* %0, %struct.VkLayerProperties* %1) #12
  %3 = icmp eq %struct.VkLayerProperties* %1, null
  br i1 %3, label %4, label %5

4:                                                ; preds = %2
  store i32 0, i32* %0, align 4
  br label %5

5:                                                ; preds = %2, %4
  ret i32 0
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @vkEnumerateDeviceLayerProperties(%struct.VkPhysicalDevice_T*, i32*, %struct.VkLayerProperties*) local_unnamed_addr #0 {
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([121 x i8], [121 x i8]* @.str.31, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 985, %struct.VkPhysicalDevice_T* %0, i32* %1, %struct.VkLayerProperties* %2) #12
  %4 = icmp eq %struct.VkLayerProperties* %2, null
  br i1 %4, label %5, label %6

5:                                                ; preds = %3
  store i32 0, i32* %1, align 4
  br label %6

6:                                                ; preds = %3, %5
  ret i32 0
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @vkGetDeviceQueue(%struct.VkDevice_T*, i32, i32, %struct.VkQueue_T**) local_unnamed_addr #0 {
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([117 x i8], [117 x i8]* @.str.32, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 999, %struct.VkDevice_T* %0, i32 %1, i32 %2, %struct.VkQueue_T** %3) #12
  %5 = icmp eq %struct.VkDevice_T* %0, null
  %6 = bitcast %struct.VkDevice_T* %0 to %"class.vk::DispatchableObject.872"*
  %7 = getelementptr inbounds %"class.vk::DispatchableObject.872", %"class.vk::DispatchableObject.872"* %6, i64 0, i32 1
  %8 = select i1 %5, %"class.vk::Device"* null, %"class.vk::Device"* %7
  %9 = tail call %struct.VkQueue_T* @_ZNK2vk6Device8getQueueEjj(%"class.vk::Device"* %8, i32 %1, i32 %2) #12
  store %struct.VkQueue_T* %9, %struct.VkQueue_T** %3, align 8
  ret void
}

; Function Attrs: optsize
declare %struct.VkQueue_T* @_ZNK2vk6Device8getQueueEjj(%"class.vk::Device"*, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @vkQueueSubmit(%struct.VkQueue_T*, i32, %struct.VkSubmitInfo*, i64) local_unnamed_addr #0 {
  %5 = inttoptr i64 %3 to i8*
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([117 x i8], [117 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1007, %struct.VkQueue_T* %0, i32 %1, %struct.VkSubmitInfo* %2, i8* %5) #12
  %6 = bitcast %struct.VkQueue_T* %0 to %"class.vk::Queue"*
  %7 = inttoptr i64 %3 to %"class.vk::Fence"*
  %8 = tail call i32 @_ZN2vk5Queue6submitEjPK12VkSubmitInfoPNS_5FenceE(%"class.vk::Queue"* %6, i32 %1, %struct.VkSubmitInfo* %2, %"class.vk::Fence"* %7) #12
  ret i32 %8
}

; Function Attrs: optsize
declare i32 @_ZN2vk5Queue6submitEjPK12VkSubmitInfoPNS_5FenceE(%"class.vk::Queue"*, i32, %struct.VkSubmitInfo*, %"class.vk::Fence"*) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @vkQueueWaitIdle(%struct.VkQueue_T*) local_unnamed_addr #0 {
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.34, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1014, %struct.VkQueue_T* %0) #12
  %2 = bitcast %struct.VkQueue_T* %0 to %"class.vk::Queue"*
  %3 = tail call i32 @_ZN2vk5Queue8waitIdleEv(%"class.vk::Queue"* %2) #12
  ret i32 %3
}

; Function Attrs: optsize
declare i32 @_ZN2vk5Queue8waitIdleEv(%"class.vk::Queue"*) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @vkDeviceWaitIdle(%struct.VkDevice_T*) local_unnamed_addr #0 {
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.35, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1021, %struct.VkDevice_T* %0) #12
  %2 = icmp eq %struct.VkDevice_T* %0, null
  %3 = bitcast %struct.VkDevice_T* %0 to %"class.vk::DispatchableObject.872"*
  %4 = getelementptr inbounds %"class.vk::DispatchableObject.872", %"class.vk::DispatchableObject.872"* %3, i64 0, i32 1
  %5 = select i1 %2, %"class.vk::Device"* null, %"class.vk::Device"* %4
  %6 = tail call i32 @_ZN2vk6Device8waitIdleEv(%"class.vk::Device"* %5) #12
  ret i32 %6
}

; Function Attrs: optsize
declare i32 @_ZN2vk6Device8waitIdleEv(%"class.vk::Device"*) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @vkAllocateMemory(%struct.VkDevice_T*, %struct.VkMemoryAllocateInfo*, %struct.VkAllocationCallbacks*, %class.VkNonDispatchableHandle.3*) local_unnamed_addr #0 {
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([161 x i8], [161 x i8]* @.str.36, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1029, %struct.VkDevice_T* %0, %struct.VkMemoryAllocateInfo* %1, %struct.VkAllocationCallbacks* %2, %class.VkNonDispatchableHandle.3* %3) #12
  %5 = getelementptr inbounds %struct.VkMemoryAllocateInfo, %struct.VkMemoryAllocateInfo* %1, i64 0, i32 1
  %6 = bitcast i8** %5 to %struct.VkBaseInStructure**
  %7 = load %struct.VkBaseInStructure*, %struct.VkBaseInStructure** %6, align 8
  %8 = icmp eq %struct.VkBaseInStructure* %7, null
  br i1 %8, label %31, label %9

9:                                                ; preds = %4, %27
  %10 = phi %struct.VkBaseInStructure* [ %29, %27 ], [ %7, %4 ]
  %11 = getelementptr inbounds %struct.VkBaseInStructure, %struct.VkBaseInStructure* %10, i64 0, i32 0
  %12 = load i32, i32* %11, align 8
  switch i32 %12, label %27 [
    i32 1000178000, label %23
    i32 1000072002, label %18
    i32 1000074000, label %13
  ]

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct.VkBaseInStructure, %struct.VkBaseInStructure* %10, i64 1, i32 0
  %15 = load i32, i32* %14, align 8
  %16 = icmp eq i32 %15, 1
  br i1 %16, label %27, label %17

17:                                               ; preds = %13
  tail call void (i8*, ...) @_ZN2sw4warnEPKcz(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.37, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1051, i32 %15) #12
  br label %51

18:                                               ; preds = %9
  %19 = getelementptr inbounds %struct.VkBaseInStructure, %struct.VkBaseInStructure* %10, i64 1, i32 0
  %20 = load i32, i32* %19, align 8
  %21 = icmp eq i32 %20, 1
  br i1 %21, label %27, label %22

22:                                               ; preds = %18
  tail call void (i8*, ...) @_ZN2sw4warnEPKcz(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.38, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1075, i32 %20) #12
  br label %51

23:                                               ; preds = %9
  %24 = getelementptr inbounds %struct.VkBaseInStructure, %struct.VkBaseInStructure* %10, i64 1, i32 0
  %25 = load i32, i32* %24, align 8
  switch i32 %25, label %26 [
    i32 128, label %27
    i32 256, label %27
  ]

26:                                               ; preds = %23
  tail call void (i8*, ...) @_ZN2sw4warnEPKcz(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.37, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1090, i32 %25) #12
  br label %51

27:                                               ; preds = %23, %23, %18, %13, %9
  %28 = getelementptr inbounds %struct.VkBaseInStructure, %struct.VkBaseInStructure* %10, i64 0, i32 1
  %29 = load %struct.VkBaseInStructure*, %struct.VkBaseInStructure** %28, align 8
  %30 = icmp eq %struct.VkBaseInStructure* %29, null
  br i1 %30, label %31, label %9

31:                                               ; preds = %27, %4
  %32 = icmp eq %struct.VkDevice_T* %0, null
  %33 = bitcast %struct.VkDevice_T* %0 to %"class.vk::DispatchableObject.872"*
  %34 = getelementptr inbounds %"class.vk::DispatchableObject.872", %"class.vk::DispatchableObject.872"* %33, i64 0, i32 1
  %35 = select i1 %32, %"class.vk::Device"* null, %"class.vk::Device"* %34
  %36 = tail call i32 @_ZN2vk10ObjectBaseINS_12DeviceMemoryE23VkNonDispatchableHandleIP16VkDeviceMemory_TEE6CreateI20VkMemoryAllocateInfoJPNS_6DeviceEEEE8VkResultPK21VkAllocationCallbacksPKT_PS5_DpT0_(%struct.VkAllocationCallbacks* %2, %struct.VkMemoryAllocateInfo* %1, %class.VkNonDispatchableHandle.3* %3, %"class.vk::Device"* %35) #16
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %51

38:                                               ; preds = %31
  %39 = getelementptr inbounds %class.VkNonDispatchableHandle.3, %class.VkNonDispatchableHandle.3* %3, i64 0, i32 0
  %40 = bitcast %class.VkNonDispatchableHandle.3* %3 to %"class.vk::DeviceMemory"**
  %41 = load %"class.vk::DeviceMemory"*, %"class.vk::DeviceMemory"** %40, align 8
  %42 = tail call i32 @_ZN2vk12DeviceMemory8allocateEv(%"class.vk::DeviceMemory"* %41) #12
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %51, label %44

44:                                               ; preds = %38
  %45 = load i64, i64* %39, align 8
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %44
  %48 = inttoptr i64 %45 to %"class.vk::DeviceMemory"*
  tail call void @_ZN2vk12DeviceMemory7destroyEPK21VkAllocationCallbacks(%"class.vk::DeviceMemory"* nonnull %48, %struct.VkAllocationCallbacks* %2) #12
  %49 = inttoptr i64 %45 to i8*
  tail call void @_ZN2vk10deallocateEPvPK21VkAllocationCallbacks(i8* %49, %struct.VkAllocationCallbacks* %2) #12
  br label %50

50:                                               ; preds = %44, %47
  store i64 0, i64* %39, align 8
  br label %51

51:                                               ; preds = %31, %38, %50, %26, %22, %17
  %52 = phi i32 [ -1000072003, %17 ], [ -1000072003, %22 ], [ -1000072003, %26 ], [ %36, %31 ], [ 0, %38 ], [ %42, %50 ]
  ret i32 %52
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden i32 @_ZN2vk10ObjectBaseINS_12DeviceMemoryE23VkNonDispatchableHandleIP16VkDeviceMemory_TEE6CreateI20VkMemoryAllocateInfoJPNS_6DeviceEEEE8VkResultPK21VkAllocationCallbacksPKT_PS5_DpT0_(%struct.VkAllocationCallbacks*, %struct.VkMemoryAllocateInfo*, %class.VkNonDispatchableHandle.3*, %"class.vk::Device"*) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %class.VkNonDispatchableHandle.3, %class.VkNonDispatchableHandle.3* %2, i64 0, i32 0
  store i64 0, i64* %5, align 8
  %6 = tail call i64 @_ZN2vk12DeviceMemory29ComputeRequiredAllocationSizeEPK20VkMemoryAllocateInfo(%struct.VkMemoryAllocateInfo* %1) #12
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %4
  %9 = tail call i8* @_ZN2vk8allocateEmmPK21VkAllocationCallbacks23VkSystemAllocationScope(i64 %6, i64 16, %struct.VkAllocationCallbacks* %0, i32 1) #12
  %10 = icmp eq i8* %9, null
  br i1 %10, label %19, label %11

11:                                               ; preds = %8, %4
  %12 = phi i8* [ %9, %8 ], [ null, %4 ]
  %13 = tail call i8* @_ZN2vk8allocateEmmPK21VkAllocationCallbacks23VkSystemAllocationScope(i64 40, i64 8, %struct.VkAllocationCallbacks* %0, i32 1) #12
  %14 = icmp eq i8* %13, null
  br i1 %14, label %15, label %16

15:                                               ; preds = %11
  tail call void @_ZN2vk10deallocateEPvPK21VkAllocationCallbacks(i8* %12, %struct.VkAllocationCallbacks* %0) #12
  br label %19

16:                                               ; preds = %11
  %17 = bitcast i8* %13 to %"class.vk::DeviceMemory"*
  tail call void @_ZN2vk12DeviceMemoryC1EPK20VkMemoryAllocateInfoPvPNS_6DeviceE(%"class.vk::DeviceMemory"* nonnull %17, %struct.VkMemoryAllocateInfo* %1, i8* %12, %"class.vk::Device"* %3) #12
  %18 = ptrtoint i8* %13 to i64
  store i64 %18, i64* %5, align 8
  br label %19

19:                                               ; preds = %8, %15, %16
  %20 = phi i32 [ -1, %8 ], [ 0, %16 ], [ -1, %15 ]
  ret i32 %20
}

; Function Attrs: optsize
declare i32 @_ZN2vk12DeviceMemory8allocateEv(%"class.vk::DeviceMemory"*) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @vkFreeMemory(%struct.VkDevice_T*, i64, %struct.VkAllocationCallbacks*) local_unnamed_addr #0 {
  %4 = inttoptr i64 %1 to i8*
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([111 x i8], [111 x i8]* @.str.39, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1135, %struct.VkDevice_T* %0, i8* %4, %struct.VkAllocationCallbacks* %2) #12
  %5 = icmp eq i64 %1, 0
  br i1 %5, label %8, label %6

6:                                                ; preds = %3
  %7 = inttoptr i64 %1 to %"class.vk::DeviceMemory"*
  tail call void @_ZN2vk12DeviceMemory7destroyEPK21VkAllocationCallbacks(%"class.vk::DeviceMemory"* nonnull %7, %struct.VkAllocationCallbacks* %2) #12
  tail call void @_ZN2vk10deallocateEPvPK21VkAllocationCallbacks(i8* %4, %struct.VkAllocationCallbacks* %2) #12
  br label %8

8:                                                ; preds = %3, %6
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @vkGetMemoryFdKHR(%struct.VkDevice_T*, %struct.VkMemoryGetFdInfoKHR*, i32*) local_unnamed_addr #0 {
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([95 x i8], [95 x i8]* @.str.40, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1144, %struct.VkDevice_T* %0, %struct.VkMemoryGetFdInfoKHR* %1, i32* %2) #12
  %4 = getelementptr inbounds %struct.VkMemoryGetFdInfoKHR, %struct.VkMemoryGetFdInfoKHR* %1, i64 0, i32 3
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 1
  br i1 %6, label %8, label %7

7:                                                ; preds = %3
  tail call void (i8*, ...) @_ZN2sw4warnEPKcz(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.41, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1148, i32 %5) #12
  br label %13

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.VkMemoryGetFdInfoKHR, %struct.VkMemoryGetFdInfoKHR* %1, i64 0, i32 2, i32 0
  %10 = bitcast i64* %9 to %"class.vk::DeviceMemory"**
  %11 = load %"class.vk::DeviceMemory"*, %"class.vk::DeviceMemory"** %10, align 8
  %12 = tail call i32 @_ZNK2vk12DeviceMemory8exportFdEPi(%"class.vk::DeviceMemory"* %11, i32* %2) #12
  br label %13

13:                                               ; preds = %8, %7
  %14 = phi i32 [ -1000072003, %7 ], [ %12, %8 ]
  ret i32 %14
}

; Function Attrs: optsize
declare i32 @_ZNK2vk12DeviceMemory8exportFdEPi(%"class.vk::DeviceMemory"*, i32*) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @vkGetMemoryFdPropertiesKHR(%struct.VkDevice_T*, i32, i32, %struct.VkMemoryFdPropertiesKHR*) local_unnamed_addr #0 {
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([153 x i8], [153 x i8]* @.str.42, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1157, %struct.VkDevice_T* %0, i32 %1, i32 %2, %struct.VkMemoryFdPropertiesKHR* %3) #12
  %5 = icmp eq i32 %1, 1
  br i1 %5, label %7, label %6

6:                                                ; preds = %4
  tail call void (i8*, ...) @_ZN2sw4warnEPKcz(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.43, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1161, i32 %1) #12
  br label %16

7:                                                ; preds = %4
  %8 = icmp slt i32 %2, 0
  br i1 %8, label %16, label %9

9:                                                ; preds = %7
  %10 = tail call dereferenceable(520) %struct.VkPhysicalDeviceMemoryProperties* @_ZN2vk14PhysicalDevice19GetMemoryPropertiesEv() #12
  %11 = getelementptr inbounds %struct.VkPhysicalDeviceMemoryProperties, %struct.VkPhysicalDeviceMemoryProperties* %10, i64 0, i32 0
  %12 = load i32, i32* %11, align 8
  %13 = shl nsw i32 -1, %12
  %14 = xor i32 %13, -1
  %15 = getelementptr inbounds %struct.VkMemoryFdPropertiesKHR, %struct.VkMemoryFdPropertiesKHR* %3, i64 0, i32 2
  store i32 %14, i32* %15, align 8
  br label %16

16:                                               ; preds = %7, %9, %6
  %17 = phi i32 [ -1000072003, %6 ], [ 0, %9 ], [ -1000072003, %7 ]
  ret i32 %17
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @vkGetMemoryHostPointerPropertiesEXT(%struct.VkDevice_T*, i32, i8*, %struct.VkMemoryHostPointerPropertiesEXT*) local_unnamed_addr #0 {
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([189 x i8], [189 x i8]* @.str.44, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1222, %struct.VkDevice_T* %0, i32 %1, i8* %2, %struct.VkMemoryHostPointerPropertiesEXT* %3) #12
  switch i32 %1, label %5 [
    i32 256, label %6
    i32 128, label %6
  ]

5:                                                ; preds = %4
  tail call void (i8*, ...) @_ZN2sw4warnEPKcz(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.43, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1226, i32 %1) #12
  br label %8

6:                                                ; preds = %4, %4
  %7 = getelementptr inbounds %struct.VkMemoryHostPointerPropertiesEXT, %struct.VkMemoryHostPointerPropertiesEXT* %3, i64 0, i32 2
  store i32 2, i32* %7, align 8
  br label %8

8:                                                ; preds = %6, %5
  %9 = phi i32 [ -1000072003, %5 ], [ 0, %6 ]
  ret i32 %9
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @vkMapMemory(%struct.VkDevice_T*, i64, i64, i64, i32, i8**) local_unnamed_addr #0 {
  %7 = inttoptr i64 %1 to i8*
  %8 = trunc i64 %2 to i32
  %9 = trunc i64 %3 to i32
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([164 x i8], [164 x i8]* @.str.45, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1255, %struct.VkDevice_T* %0, i8* %7, i32 %8, i32 %9, i32 %4, i8** %5) #12
  %10 = icmp eq i32 %4, 0
  br i1 %10, label %12, label %11

11:                                               ; preds = %6
  tail call void (i8*, ...) @_ZN2sw4warnEPKcz(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.46, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1260, i32 %4) #12
  br label %12

12:                                               ; preds = %6, %11
  %13 = inttoptr i64 %1 to %"class.vk::DeviceMemory"*
  %14 = tail call i32 @_ZN2vk12DeviceMemory3mapEmmPPv(%"class.vk::DeviceMemory"* %13, i64 %2, i64 %3, i8** %5) #12
  ret i32 %14
}

; Function Attrs: optsize
declare i32 @_ZN2vk12DeviceMemory3mapEmmPPv(%"class.vk::DeviceMemory"*, i64, i64, i8**) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @vkUnmapMemory(%struct.VkDevice_T*, i64) local_unnamed_addr #0 {
  %3 = inttoptr i64 %1 to i8*
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.47, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1268, %struct.VkDevice_T* %0, i8* %3) #12
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @vkFlushMappedMemoryRanges(%struct.VkDevice_T*, i32, %struct.VkMappedMemoryRange*) local_unnamed_addr #0 {
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([116 x i8], [116 x i8]* @.str.48, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1276, %struct.VkDevice_T* %0, i32 %1, %struct.VkMappedMemoryRange* %2) #12
  ret i32 0
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @vkInvalidateMappedMemoryRanges(%struct.VkDevice_T*, i32, %struct.VkMappedMemoryRange*) local_unnamed_addr #0 {
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([116 x i8], [116 x i8]* @.str.48, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1286, %struct.VkDevice_T* %0, i32 %1, %struct.VkMappedMemoryRange* %2) #12
  ret i32 0
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @vkGetDeviceMemoryCommitment(%struct.VkDevice_T*, i64, i64*) local_unnamed_addr #0 {
  %4 = inttoptr i64 %1 to i8*
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([109 x i8], [109 x i8]* @.str.49, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1296, %struct.VkDevice_T* %0, i8* %4, i64* %2) #12
  %5 = inttoptr i64 %1 to %"class.vk::DeviceMemory"*
  %6 = tail call i64 @_ZNK2vk12DeviceMemory25getCommittedMemoryInBytesEv(%"class.vk::DeviceMemory"* %5) #12
  store i64 %6, i64* %2, align 8
  ret void
}

; Function Attrs: optsize
declare i64 @_ZNK2vk12DeviceMemory25getCommittedMemoryInBytesEv(%"class.vk::DeviceMemory"*) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @vkBindBufferMemory(%struct.VkDevice_T*, i64, i64, i64) local_unnamed_addr #0 {
  %5 = inttoptr i64 %1 to i8*
  %6 = inttoptr i64 %2 to i8*
  %7 = trunc i64 %3 to i32
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([119 x i8], [119 x i8]* @.str.50, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1313, %struct.VkDevice_T* %0, i8* %5, i8* %6, i32 %7) #12
  %8 = inttoptr i64 %1 to %"class.vk::Buffer"*
  %9 = inttoptr i64 %2 to %"class.vk::DeviceMemory"*
  %10 = tail call zeroext i1 @_ZNK2vk6Buffer15canBindToMemoryEPNS_12DeviceMemoryE(%"class.vk::Buffer"* %8, %"class.vk::DeviceMemory"* %9) #12
  br i1 %10, label %12, label %11

11:                                               ; preds = %4
  tail call void (i8*, ...) @_ZN2sw4warnEPKcz(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.51, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1317) #12
  br label %13

12:                                               ; preds = %4
  tail call void @_ZN2vk6Buffer4bindEPNS_12DeviceMemoryEm(%"class.vk::Buffer"* %8, %"class.vk::DeviceMemory"* %9, i64 %3) #12
  br label %13

13:                                               ; preds = %12, %11
  %14 = phi i32 [ 0, %12 ], [ -1000072003, %11 ]
  ret i32 %14
}

; Function Attrs: optsize
declare zeroext i1 @_ZNK2vk6Buffer15canBindToMemoryEPNS_12DeviceMemoryE(%"class.vk::Buffer"*, %"class.vk::DeviceMemory"*) local_unnamed_addr #1

; Function Attrs: optsize
declare void @_ZN2vk6Buffer4bindEPNS_12DeviceMemoryEm(%"class.vk::Buffer"*, %"class.vk::DeviceMemory"*, i64) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @vkBindImageMemory(%struct.VkDevice_T*, i64, i64, i64) local_unnamed_addr #0 {
  %5 = inttoptr i64 %1 to i8*
  %6 = inttoptr i64 %2 to i8*
  %7 = trunc i64 %3 to i32
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([117 x i8], [117 x i8]* @.str.52, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1327, %struct.VkDevice_T* %0, i8* %5, i8* %6, i32 %7) #12
  %8 = inttoptr i64 %1 to %"class.vk::Image"*
  %9 = inttoptr i64 %2 to %"class.vk::DeviceMemory"*
  %10 = tail call zeroext i1 @_ZNK2vk5Image15canBindToMemoryEPNS_12DeviceMemoryE(%"class.vk::Image"* %8, %"class.vk::DeviceMemory"* %9) #12
  br i1 %10, label %12, label %11

11:                                               ; preds = %4
  tail call void (i8*, ...) @_ZN2sw4warnEPKcz(i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.53, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1331) #12
  br label %13

12:                                               ; preds = %4
  tail call void @_ZN2vk5Image4bindEPNS_12DeviceMemoryEm(%"class.vk::Image"* %8, %"class.vk::DeviceMemory"* %9, i64 %3) #12
  br label %13

13:                                               ; preds = %12, %11
  %14 = phi i32 [ 0, %12 ], [ -1000072003, %11 ]
  ret i32 %14
}

; Function Attrs: optsize
declare zeroext i1 @_ZNK2vk5Image15canBindToMemoryEPNS_12DeviceMemoryE(%"class.vk::Image"*, %"class.vk::DeviceMemory"*) local_unnamed_addr #1

; Function Attrs: optsize
declare void @_ZN2vk5Image4bindEPNS_12DeviceMemoryEm(%"class.vk::Image"*, %"class.vk::DeviceMemory"*, i64) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @vkGetBufferMemoryRequirements(%struct.VkDevice_T*, i64, %struct.VkMemoryRequirements*) local_unnamed_addr #0 {
  %4 = alloca %struct.VkMemoryRequirements, align 8
  %5 = inttoptr i64 %1 to i8*
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([107 x i8], [107 x i8]* @.str.54, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1341, %struct.VkDevice_T* %0, i8* %5, %struct.VkMemoryRequirements* %2) #12
  %6 = bitcast %struct.VkMemoryRequirements* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #13
  %7 = inttoptr i64 %1 to %"class.vk::Buffer"*
  call void @_ZNK2vk6Buffer21getMemoryRequirementsEv(%struct.VkMemoryRequirements* nonnull sret %4, %"class.vk::Buffer"* %7) #12
  %8 = bitcast %struct.VkMemoryRequirements* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* nonnull align 8 %6, i64 24, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #13
  ret void
}

; Function Attrs: optsize
declare void @_ZNK2vk6Buffer21getMemoryRequirementsEv(%struct.VkMemoryRequirements* sret, %"class.vk::Buffer"*) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @vkGetImageMemoryRequirements(%struct.VkDevice_T*, i64, %struct.VkMemoryRequirements*) local_unnamed_addr #0 {
  %4 = alloca %struct.VkMemoryRequirements, align 8
  %5 = inttoptr i64 %1 to i8*
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([105 x i8], [105 x i8]* @.str.55, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1349, %struct.VkDevice_T* %0, i8* %5, %struct.VkMemoryRequirements* %2) #12
  %6 = bitcast %struct.VkMemoryRequirements* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #13
  %7 = inttoptr i64 %1 to %"class.vk::Image"*
  call void @_ZNK2vk5Image21getMemoryRequirementsEv(%struct.VkMemoryRequirements* nonnull sret %4, %"class.vk::Image"* %7) #12
  %8 = bitcast %struct.VkMemoryRequirements* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* nonnull align 8 %6, i64 24, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #13
  ret void
}

; Function Attrs: optsize
declare void @_ZNK2vk5Image21getMemoryRequirementsEv(%struct.VkMemoryRequirements* sret, %"class.vk::Image"*) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @vkGetImageSparseMemoryRequirements(%struct.VkDevice_T*, i64, i32*, %struct.VkSparseImageMemoryRequirements*) local_unnamed_addr #0 {
  %5 = inttoptr i64 %1 to i8*
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([168 x i8], [168 x i8]* @.str.56, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1357, %struct.VkDevice_T* %0, i8* %5, i32* %2, %struct.VkSparseImageMemoryRequirements* %3) #12
  store i32 0, i32* %2, align 4
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @vkGetPhysicalDeviceSparseImageFormatProperties(%struct.VkPhysicalDevice_T*, i32, i32, i32, i32, i32, i32*, %struct.VkSparseImageFormatProperties*) local_unnamed_addr #0 {
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([271 x i8], [271 x i8]* @.str.57, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1367, %struct.VkPhysicalDevice_T* %0, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5, i32* %6, %struct.VkSparseImageFormatProperties* %7) #12
  store i32 0, i32* %6, align 4
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @vkQueueBindSparse(%struct.VkQueue_T* nocapture readnone, i32, %struct.VkBindSparseInfo* nocapture readnone, i64) local_unnamed_addr #0 {
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.58, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1375) #12
  tail call void (i8*, ...) @_ZN2sw4warnEPKcz(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.59, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1376) #12
  ret i32 0
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @vkCreateFence(%struct.VkDevice_T*, %struct.VkFenceCreateInfo*, %struct.VkAllocationCallbacks*, %class.VkNonDispatchableHandle.2*) local_unnamed_addr #0 {
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([148 x i8], [148 x i8]* @.str.60, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1383, %struct.VkDevice_T* %0, %struct.VkFenceCreateInfo* %1, %struct.VkAllocationCallbacks* %2, %class.VkNonDispatchableHandle.2* %3) #12
  %5 = getelementptr inbounds %struct.VkFenceCreateInfo, %struct.VkFenceCreateInfo* %1, i64 0, i32 1
  %6 = bitcast i8** %5 to %struct.VkBaseInStructure**
  br label %7

7:                                                ; preds = %7, %4
  %8 = phi %struct.VkBaseInStructure** [ %6, %4 ], [ %11, %7 ]
  %9 = load %struct.VkBaseInStructure*, %struct.VkBaseInStructure** %8, align 8
  %10 = icmp eq %struct.VkBaseInStructure* %9, null
  %11 = getelementptr inbounds %struct.VkBaseInStructure, %struct.VkBaseInStructure* %9, i64 0, i32 1
  br i1 %10, label %12, label %7

12:                                               ; preds = %7
  %13 = tail call i32 @_ZN2vk10ObjectBaseINS_5FenceE23VkNonDispatchableHandleIP9VkFence_TEE6CreateI17VkFenceCreateInfoJEEE8VkResultPK21VkAllocationCallbacksPKT_PS5_DpT0_(%struct.VkAllocationCallbacks* %2, %struct.VkFenceCreateInfo* %1, %class.VkNonDispatchableHandle.2* %3) #16
  ret i32 %13
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden i32 @_ZN2vk10ObjectBaseINS_5FenceE23VkNonDispatchableHandleIP9VkFence_TEE6CreateI17VkFenceCreateInfoJEEE8VkResultPK21VkAllocationCallbacksPKT_PS5_DpT0_(%struct.VkAllocationCallbacks*, %struct.VkFenceCreateInfo*, %class.VkNonDispatchableHandle.2*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.VkNonDispatchableHandle.2, %class.VkNonDispatchableHandle.2* %2, i64 0, i32 0
  store i64 0, i64* %4, align 8
  %5 = tail call i8* @_ZN2vk8allocateEmmPK21VkAllocationCallbacks23VkSystemAllocationScope(i64 16, i64 8, %struct.VkAllocationCallbacks* %0, i32 1) #12
  %6 = icmp eq i8* %5, null
  br i1 %6, label %7, label %8

7:                                                ; preds = %3
  tail call void @_ZN2vk10deallocateEPvPK21VkAllocationCallbacks(i8* null, %struct.VkAllocationCallbacks* %0) #12
  br label %22

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.VkFenceCreateInfo, %struct.VkFenceCreateInfo* %1, i64 0, i32 2
  %10 = load i32, i32* %9, align 8
  %11 = tail call i8* @_Znwm(i64 56) #14
  %12 = bitcast i8* %11 to i32 (...)***
  %13 = getelementptr inbounds i8, i8* %11, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 16, i1 false) #13
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVNSt3__120__shared_ptr_emplaceIN2sw12CountedEventENS_9allocatorIS2_EEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %14 = getelementptr inbounds i8, i8* %11, i64 24
  %15 = bitcast i8* %14 to %"class.sw::CountedEvent"*
  %16 = and i32 %10, 1
  %17 = icmp ne i32 %16, 0
  tail call void @_ZN2sw12CountedEventC2Eb(%"class.sw::CountedEvent"* %15, i1 zeroext %17) #12
  %18 = bitcast i8* %5 to i8**
  store i8* %14, i8** %18, align 8
  %19 = getelementptr inbounds i8, i8* %5, i64 8
  %20 = bitcast i8* %19 to i8**
  store i8* %11, i8** %20, align 8
  %21 = ptrtoint i8* %5 to i64
  store i64 %21, i64* %4, align 8
  br label %22

22:                                               ; preds = %7, %8
  %23 = phi i32 [ 0, %8 ], [ -1, %7 ]
  ret i32 %23
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @vkDestroyFence(%struct.VkDevice_T*, i64, %struct.VkAllocationCallbacks*) local_unnamed_addr #0 {
  %4 = inttoptr i64 %1 to i8*
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([103 x i8], [103 x i8]* @.str.61, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1398, %struct.VkDevice_T* %0, i8* %4, %struct.VkAllocationCallbacks* %2) #12
  %5 = icmp eq i64 %1, 0
  br i1 %5, label %9, label %6

6:                                                ; preds = %3
  %7 = inttoptr i64 %1 to %"class.vk::Fence"*
  %8 = getelementptr inbounds %"class.vk::Fence", %"class.vk::Fence"* %7, i64 0, i32 0
  tail call void @_ZNSt3__110shared_ptrIN2sw12CountedEventEED2Ev(%"class.std::__1::shared_ptr.108"* %8) #12
  tail call void @_ZN2vk10deallocateEPvPK21VkAllocationCallbacks(i8* %4, %struct.VkAllocationCallbacks* %2) #12
  br label %9

9:                                                ; preds = %3, %6
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @vkResetFences(%struct.VkDevice_T*, i32, %class.VkNonDispatchableHandle.2*) local_unnamed_addr #0 {
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([92 x i8], [92 x i8]* @.str.62, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1406, %struct.VkDevice_T* %0, i32 %1, %class.VkNonDispatchableHandle.2* %2) #12
  %4 = icmp eq i32 %1, 0
  br i1 %4, label %7, label %5

5:                                                ; preds = %3
  %6 = zext i32 %1 to i64
  br label %8

7:                                                ; preds = %8, %3
  ret i32 0

8:                                                ; preds = %8, %5
  %9 = phi i64 [ 0, %5 ], [ %20, %8 ]
  %10 = getelementptr inbounds %class.VkNonDispatchableHandle.2, %class.VkNonDispatchableHandle.2* %2, i64 %9, i32 0
  %11 = bitcast i64* %10 to %"class.vk::Fence"**
  %12 = load %"class.vk::Fence"*, %"class.vk::Fence"** %11, align 8
  %13 = getelementptr inbounds %"class.vk::Fence", %"class.vk::Fence"* %12, i64 0, i32 0, i32 0
  %14 = load %"class.sw::CountedEvent"*, %"class.sw::CountedEvent"** %13, align 8
  %15 = getelementptr inbounds %"class.sw::CountedEvent", %"class.sw::CountedEvent"* %14, i64 0, i32 1, i32 0, i32 0
  %16 = load %"struct.marl::Event::Shared"*, %"struct.marl::Event::Shared"** %15, align 8
  %17 = getelementptr inbounds %"struct.marl::Event::Shared", %"struct.marl::Event::Shared"* %16, i64 0, i32 0, i32 0
  tail call void @_ZNSt3__15mutex4lockEv(%"class.std::__1::mutex"* %17) #12
  %18 = load %"struct.marl::Event::Shared"*, %"struct.marl::Event::Shared"** %15, align 8
  %19 = getelementptr inbounds %"struct.marl::Event::Shared", %"struct.marl::Event::Shared"* %18, i64 0, i32 4
  store i8 0, i8* %19, align 1
  tail call void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"* %17) #12
  %20 = add nuw nsw i64 %9, 1
  %21 = icmp eq i64 %20, %6
  br i1 %21, label %7, label %8
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @vkGetFenceStatus(%struct.VkDevice_T*, i64) local_unnamed_addr #0 {
  %3 = inttoptr i64 %1 to i8*
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.63, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1418, %struct.VkDevice_T* %0, i8* %3) #12
  %4 = inttoptr i64 %1 to %"class.vk::Fence"*
  %5 = getelementptr inbounds %"class.vk::Fence", %"class.vk::Fence"* %4, i64 0, i32 0, i32 0
  %6 = load %"class.sw::CountedEvent"*, %"class.sw::CountedEvent"** %5, align 8
  %7 = getelementptr inbounds %"class.sw::CountedEvent", %"class.sw::CountedEvent"* %6, i64 0, i32 1, i32 0, i32 0
  %8 = load %"struct.marl::Event::Shared"*, %"struct.marl::Event::Shared"** %7, align 8
  %9 = getelementptr inbounds %"struct.marl::Event::Shared", %"struct.marl::Event::Shared"* %8, i64 0, i32 0, i32 0
  tail call void @_ZNSt3__15mutex4lockEv(%"class.std::__1::mutex"* %9) #12
  %10 = load %"struct.marl::Event::Shared"*, %"struct.marl::Event::Shared"** %7, align 8
  %11 = getelementptr inbounds %"struct.marl::Event::Shared", %"struct.marl::Event::Shared"* %10, i64 0, i32 4
  %12 = load i8, i8* %11, align 1, !range !3
  tail call void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"* %9) #12
  %13 = xor i8 %12, 1
  %14 = zext i8 %13 to i32
  ret i32 %14
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @vkWaitForFences(%struct.VkDevice_T*, i32, %class.VkNonDispatchableHandle.2*, i32, i64) local_unnamed_addr #0 {
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([139 x i8], [139 x i8]* @.str.64, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1426, %struct.VkDevice_T* %0, i32 %1, %class.VkNonDispatchableHandle.2* %2, i32 %3, i64 %4) #12
  %6 = icmp eq %struct.VkDevice_T* %0, null
  %7 = bitcast %struct.VkDevice_T* %0 to %"class.vk::DispatchableObject.872"*
  %8 = getelementptr inbounds %"class.vk::DispatchableObject.872", %"class.vk::DispatchableObject.872"* %7, i64 0, i32 1
  %9 = select i1 %6, %"class.vk::Device"* null, %"class.vk::Device"* %8
  %10 = tail call i32 @_ZN2vk6Device13waitForFencesEjPK23VkNonDispatchableHandleIP9VkFence_TEjm(%"class.vk::Device"* %9, i32 %1, %class.VkNonDispatchableHandle.2* %2, i32 %3, i64 %4) #12
  ret i32 %10
}

; Function Attrs: optsize
declare i32 @_ZN2vk6Device13waitForFencesEjPK23VkNonDispatchableHandleIP9VkFence_TEjm(%"class.vk::Device"*, i32, %class.VkNonDispatchableHandle.2*, i32, i64) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @vkCreateSemaphore(%struct.VkDevice_T*, %struct.VkSemaphoreCreateInfo*, %struct.VkAllocationCallbacks*, %class.VkNonDispatchableHandle.1*) local_unnamed_addr #0 {
  %5 = alloca %"class.std::__1::basic_string", align 8
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([160 x i8], [160 x i8]* @.str.65, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1434, %struct.VkDevice_T* %0, %struct.VkSemaphoreCreateInfo* %1, %struct.VkAllocationCallbacks* %2, %class.VkNonDispatchableHandle.1* %3) #12
  %6 = getelementptr inbounds %struct.VkSemaphoreCreateInfo, %struct.VkSemaphoreCreateInfo* %1, i64 0, i32 2
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %4
  tail call void (i8*, ...) @_ZN2sw4warnEPKcz(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1439, i32 %7) #12
  br label %10

10:                                               ; preds = %4, %9
  %11 = getelementptr inbounds %struct.VkSemaphoreCreateInfo, %struct.VkSemaphoreCreateInfo* %1, i64 0, i32 1
  %12 = bitcast i8** %11 to %struct.VkBaseInStructure**
  %13 = load %struct.VkBaseInStructure*, %struct.VkBaseInStructure** %12, align 8
  %14 = icmp eq %struct.VkBaseInStructure* %13, null
  br i1 %14, label %45, label %15

15:                                               ; preds = %10
  %16 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  %17 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %22

20:                                               ; preds = %40
  %21 = icmp eq i32 %41, 0
  br i1 %21, label %45, label %47

22:                                               ; preds = %15, %40
  %23 = phi %struct.VkBaseInStructure* [ %13, %15 ], [ %43, %40 ]
  %24 = phi i32 [ 0, %15 ], [ %41, %40 ]
  %25 = getelementptr inbounds %struct.VkBaseInStructure, %struct.VkBaseInStructure* %23, i64 0, i32 0
  %26 = load i32, i32* %25, align 8
  switch i32 %26, label %30 [
    i32 1000077000, label %40
    i32 1000207002, label %27
  ]

27:                                               ; preds = %22
  %28 = getelementptr inbounds %struct.VkBaseInStructure, %struct.VkBaseInStructure* %23, i64 1, i32 0
  %29 = load i32, i32* %28, align 8
  br label %40

30:                                               ; preds = %22
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #13
  call void @_ZN2vk9StringifyE15VkStructureType(%"class.std::__1::basic_string"* nonnull sret %5, i32 %26) #12
  %31 = load i8, i8* %18, align 1
  %32 = icmp slt i8 %31, 0
  %33 = load i8*, i8** %19, align 8
  %34 = select i1 %32, i8* %33, i8* %16
  call void (i8*, ...) @_ZN2sw4warnEPKcz(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.66, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1458, i8* %34) #12
  %35 = load i8, i8* %18, align 1
  %36 = icmp slt i8 %35, 0
  br i1 %36, label %37, label %39

37:                                               ; preds = %30
  %38 = load i8*, i8** %19, align 8
  call void @_ZdlPv(i8* %38) #14
  br label %39

39:                                               ; preds = %30, %37
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #13
  br label %40

40:                                               ; preds = %22, %27, %39
  %41 = phi i32 [ %24, %39 ], [ %29, %27 ], [ %24, %22 ]
  %42 = getelementptr inbounds %struct.VkBaseInStructure, %struct.VkBaseInStructure* %23, i64 0, i32 1
  %43 = load %struct.VkBaseInStructure*, %struct.VkBaseInStructure** %42, align 8
  %44 = icmp eq %struct.VkBaseInStructure* %43, null
  br i1 %44, label %20, label %22

45:                                               ; preds = %10, %20
  %46 = call i32 @_ZN2vk10ObjectBaseINS_15BinarySemaphoreE23VkNonDispatchableHandleIP13VkSemaphore_TEE6CreateI21VkSemaphoreCreateInfoJPK21VkAllocationCallbacksEEE8VkResultSB_PKT_PS5_DpT0_(%struct.VkAllocationCallbacks* %2, %struct.VkSemaphoreCreateInfo* %1, %class.VkNonDispatchableHandle.1* %3, %struct.VkAllocationCallbacks* %2) #16
  br label %49

47:                                               ; preds = %20
  %48 = call i32 @_ZN2vk10ObjectBaseINS_17TimelineSemaphoreE23VkNonDispatchableHandleIP13VkSemaphore_TEE6CreateI21VkSemaphoreCreateInfoJPK21VkAllocationCallbacksEEE8VkResultSB_PKT_PS5_DpT0_(%struct.VkAllocationCallbacks* %2, %struct.VkSemaphoreCreateInfo* %1, %class.VkNonDispatchableHandle.1* %3, %struct.VkAllocationCallbacks* %2) #16
  br label %49

49:                                               ; preds = %47, %45
  %50 = phi i32 [ %46, %45 ], [ %48, %47 ]
  ret i32 %50
}

; Function Attrs: optsize
declare void @_ZN2vk9StringifyE15VkStructureType(%"class.std::__1::basic_string"* sret, i32) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden i32 @_ZN2vk10ObjectBaseINS_15BinarySemaphoreE23VkNonDispatchableHandleIP13VkSemaphore_TEE6CreateI21VkSemaphoreCreateInfoJPK21VkAllocationCallbacksEEE8VkResultSB_PKT_PS5_DpT0_(%struct.VkAllocationCallbacks*, %struct.VkSemaphoreCreateInfo*, %class.VkNonDispatchableHandle.1*, %struct.VkAllocationCallbacks*) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %class.VkNonDispatchableHandle.1, %class.VkNonDispatchableHandle.1* %2, i64 0, i32 0
  store i64 0, i64* %5, align 8
  %6 = tail call i64 @_ZN2vk15BinarySemaphore29ComputeRequiredAllocationSizeEPK21VkSemaphoreCreateInfo(%struct.VkSemaphoreCreateInfo* %1) #12
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %4
  %9 = tail call i8* @_ZN2vk8allocateEmmPK21VkAllocationCallbacks23VkSystemAllocationScope(i64 %6, i64 16, %struct.VkAllocationCallbacks* %0, i32 1) #12
  %10 = icmp eq i8* %9, null
  br i1 %10, label %19, label %11

11:                                               ; preds = %8, %4
  %12 = phi i8* [ %9, %8 ], [ null, %4 ]
  %13 = tail call i8* @_ZN2vk8allocateEmmPK21VkAllocationCallbacks23VkSystemAllocationScope(i64 104, i64 8, %struct.VkAllocationCallbacks* %0, i32 1) #12
  %14 = icmp eq i8* %13, null
  br i1 %14, label %15, label %16

15:                                               ; preds = %11
  tail call void @_ZN2vk10deallocateEPvPK21VkAllocationCallbacks(i8* %12, %struct.VkAllocationCallbacks* %0) #12
  br label %19

16:                                               ; preds = %11
  %17 = bitcast i8* %13 to %"class.vk::BinarySemaphore"*
  tail call void @_ZN2vk15BinarySemaphoreC1EPK21VkSemaphoreCreateInfoPvPK21VkAllocationCallbacks(%"class.vk::BinarySemaphore"* nonnull %17, %struct.VkSemaphoreCreateInfo* %1, i8* %12, %struct.VkAllocationCallbacks* %3) #12
  %18 = ptrtoint i8* %13 to i64
  store i64 %18, i64* %5, align 8
  br label %19

19:                                               ; preds = %8, %15, %16
  %20 = phi i32 [ -1, %8 ], [ 0, %16 ], [ -1, %15 ]
  ret i32 %20
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden i32 @_ZN2vk10ObjectBaseINS_17TimelineSemaphoreE23VkNonDispatchableHandleIP13VkSemaphore_TEE6CreateI21VkSemaphoreCreateInfoJPK21VkAllocationCallbacksEEE8VkResultSB_PKT_PS5_DpT0_(%struct.VkAllocationCallbacks*, %struct.VkSemaphoreCreateInfo*, %class.VkNonDispatchableHandle.1*, %struct.VkAllocationCallbacks*) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %class.VkNonDispatchableHandle.1, %class.VkNonDispatchableHandle.1* %2, i64 0, i32 0
  store i64 0, i64* %5, align 8
  %6 = tail call i64 @_ZN2vk17TimelineSemaphore29ComputeRequiredAllocationSizeEPK21VkSemaphoreCreateInfo(%struct.VkSemaphoreCreateInfo* %1) #12
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %4
  %9 = tail call i8* @_ZN2vk8allocateEmmPK21VkAllocationCallbacks23VkSystemAllocationScope(i64 %6, i64 16, %struct.VkAllocationCallbacks* %0, i32 1) #12
  %10 = icmp eq i8* %9, null
  br i1 %10, label %19, label %11

11:                                               ; preds = %8, %4
  %12 = phi i8* [ %9, %8 ], [ null, %4 ]
  %13 = tail call i8* @_ZN2vk8allocateEmmPK21VkAllocationCallbacks23VkSystemAllocationScope(i64 72, i64 8, %struct.VkAllocationCallbacks* %0, i32 1) #12
  %14 = icmp eq i8* %13, null
  br i1 %14, label %15, label %16

15:                                               ; preds = %11
  tail call void @_ZN2vk10deallocateEPvPK21VkAllocationCallbacks(i8* %12, %struct.VkAllocationCallbacks* %0) #12
  br label %19

16:                                               ; preds = %11
  %17 = bitcast i8* %13 to %"class.vk::TimelineSemaphore"*
  tail call void @_ZN2vk17TimelineSemaphoreC1EPK21VkSemaphoreCreateInfoPvPK21VkAllocationCallbacks(%"class.vk::TimelineSemaphore"* nonnull %17, %struct.VkSemaphoreCreateInfo* %1, i8* %12, %struct.VkAllocationCallbacks* %3) #12
  %18 = ptrtoint i8* %13 to i64
  store i64 %18, i64* %5, align 8
  br label %19

19:                                               ; preds = %8, %15, %16
  %20 = phi i32 [ -1, %8 ], [ 0, %16 ], [ -1, %15 ]
  ret i32 %20
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @vkDestroySemaphore(%struct.VkDevice_T*, i64, %struct.VkAllocationCallbacks*) local_unnamed_addr #0 {
  %4 = inttoptr i64 %1 to i8*
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([111 x i8], [111 x i8]* @.str.67, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1476, %struct.VkDevice_T* %0, i8* %4, %struct.VkAllocationCallbacks* %2) #12
  %5 = inttoptr i64 %1 to %"class.vk::Semaphore"*
  %6 = icmp eq i64 %1, 0
  br i1 %6, label %15, label %7

7:                                                ; preds = %3
  %8 = inttoptr i64 %1 to void (%"class.vk::Semaphore"*, %struct.VkAllocationCallbacks*)***
  %9 = load void (%"class.vk::Semaphore"*, %struct.VkAllocationCallbacks*)**, void (%"class.vk::Semaphore"*, %struct.VkAllocationCallbacks*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.vk::Semaphore"*, %struct.VkAllocationCallbacks*)*, void (%"class.vk::Semaphore"*, %struct.VkAllocationCallbacks*)** %9, i64 2
  %11 = load void (%"class.vk::Semaphore"*, %struct.VkAllocationCallbacks*)*, void (%"class.vk::Semaphore"*, %struct.VkAllocationCallbacks*)** %10, align 8
  tail call void %11(%"class.vk::Semaphore"* nonnull %5, %struct.VkAllocationCallbacks* %2) #12
  %12 = inttoptr i64 %1 to void (%"class.vk::Semaphore"*)***
  %13 = load void (%"class.vk::Semaphore"*)**, void (%"class.vk::Semaphore"*)*** %12, align 8
  %14 = load void (%"class.vk::Semaphore"*)*, void (%"class.vk::Semaphore"*)** %13, align 8
  tail call void %14(%"class.vk::Semaphore"* nonnull %5) #12
  tail call void @_ZN2vk10deallocateEPvPK21VkAllocationCallbacks(i8* %4, %struct.VkAllocationCallbacks* %2) #12
  br label %15

15:                                               ; preds = %3, %7
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @vkGetSemaphoreFdKHR(%struct.VkDevice_T*, %struct.VkSemaphoreGetFdInfoKHR*, i32*) local_unnamed_addr #0 {
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([100 x i8], [100 x i8]* @.str.68, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1485, %struct.VkDevice_T* %0, %struct.VkSemaphoreGetFdInfoKHR* %1, i32* %2) #12
  %4 = getelementptr inbounds %struct.VkSemaphoreGetFdInfoKHR, %struct.VkSemaphoreGetFdInfoKHR* %1, i64 0, i32 3
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 1
  br i1 %6, label %8, label %7

7:                                                ; preds = %3
  tail call void (i8*, ...) @_ZN2sw4warnEPKcz(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.69, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1489, i32 %5) #12
  br label %8

8:                                                ; preds = %3, %7
  %9 = getelementptr inbounds %struct.VkSemaphoreGetFdInfoKHR, %struct.VkSemaphoreGetFdInfoKHR* %1, i64 0, i32 2, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %18, label %12

12:                                               ; preds = %8
  %13 = inttoptr i64 %10 to %"class.vk::Semaphore"*
  %14 = tail call i32 @_ZNK2vk9Semaphore16getSemaphoreTypeEv(%"class.vk::Semaphore"* nonnull %13) #12
  %15 = icmp eq i32 %14, 0
  %16 = inttoptr i64 %10 to %"class.vk::BinarySemaphore"*
  %17 = select i1 %15, %"class.vk::BinarySemaphore"* %16, %"class.vk::BinarySemaphore"* null
  br label %18

18:                                               ; preds = %8, %12
  %19 = phi %"class.vk::BinarySemaphore"* [ %17, %12 ], [ null, %8 ]
  %20 = tail call i32 @_ZN2vk15BinarySemaphore8exportFdEPi(%"class.vk::BinarySemaphore"* %19, i32* %2) #12
  ret i32 %20
}

; Function Attrs: optsize
declare i32 @_ZN2vk15BinarySemaphore8exportFdEPi(%"class.vk::BinarySemaphore"*, i32*) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @vkImportSemaphoreFdKHR(%struct.VkDevice_T*, %struct.VkImportSemaphoreFdInfoKHR*) local_unnamed_addr #0 {
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.70, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1500, %struct.VkDevice_T* %0, %struct.VkImportSemaphoreFdInfoKHR* %1) #12
  %3 = getelementptr inbounds %struct.VkImportSemaphoreFdInfoKHR, %struct.VkImportSemaphoreFdInfoKHR* %1, i64 0, i32 4
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 1
  br i1 %5, label %7, label %6

6:                                                ; preds = %2
  tail call void (i8*, ...) @_ZN2sw4warnEPKcz(i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.71, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1504, i32 %4) #12
  br label %7

7:                                                ; preds = %2, %6
  %8 = getelementptr inbounds %struct.VkImportSemaphoreFdInfoKHR, %struct.VkImportSemaphoreFdInfoKHR* %1, i64 0, i32 3
  %9 = load i32, i32* %8, align 8
  %10 = and i32 %9, 1
  %11 = icmp ne i32 %10, 0
  %12 = getelementptr inbounds %struct.VkImportSemaphoreFdInfoKHR, %struct.VkImportSemaphoreFdInfoKHR* %1, i64 0, i32 2, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %21, label %15

15:                                               ; preds = %7
  %16 = inttoptr i64 %13 to %"class.vk::Semaphore"*
  %17 = tail call i32 @_ZNK2vk9Semaphore16getSemaphoreTypeEv(%"class.vk::Semaphore"* nonnull %16) #12
  %18 = icmp eq i32 %17, 0
  %19 = inttoptr i64 %13 to %"class.vk::BinarySemaphore"*
  %20 = select i1 %18, %"class.vk::BinarySemaphore"* %19, %"class.vk::BinarySemaphore"* null
  br label %21

21:                                               ; preds = %7, %15
  %22 = phi %"class.vk::BinarySemaphore"* [ %20, %15 ], [ null, %7 ]
  %23 = getelementptr inbounds %struct.VkImportSemaphoreFdInfoKHR, %struct.VkImportSemaphoreFdInfoKHR* %1, i64 0, i32 5
  %24 = load i32, i32* %23, align 8
  %25 = tail call i32 @_ZN2vk15BinarySemaphore8importFdEib(%"class.vk::BinarySemaphore"* %22, i32 %24, i1 zeroext %11) #12
  ret i32 %25
}

; Function Attrs: optsize
declare i32 @_ZN2vk15BinarySemaphore8importFdEib(%"class.vk::BinarySemaphore"*, i32, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @vkGetSemaphoreCounterValue(%struct.VkDevice_T*, i64, i64*) local_unnamed_addr #0 {
  %4 = inttoptr i64 %1 to i8*
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([88 x i8], [88 x i8]* @.str.72, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1554, %struct.VkDevice_T* %0, i8* %4, i64* %2) #12
  %5 = icmp eq i64 %1, 0
  br i1 %5, label %12, label %6

6:                                                ; preds = %3
  %7 = inttoptr i64 %1 to %"class.vk::Semaphore"*
  %8 = tail call i32 @_ZNK2vk9Semaphore16getSemaphoreTypeEv(%"class.vk::Semaphore"* nonnull %7) #12
  %9 = icmp eq i32 %8, 1
  %10 = inttoptr i64 %1 to %"class.vk::TimelineSemaphore"*
  %11 = select i1 %9, %"class.vk::TimelineSemaphore"* %10, %"class.vk::TimelineSemaphore"* null
  br label %12

12:                                               ; preds = %3, %6
  %13 = phi %"class.vk::TimelineSemaphore"* [ %11, %6 ], [ null, %3 ]
  %14 = tail call i64 @_ZN2vk17TimelineSemaphore15getCounterValueEv(%"class.vk::TimelineSemaphore"* %13) #12
  store i64 %14, i64* %2, align 8
  ret i32 0
}

; Function Attrs: optsize
declare i64 @_ZN2vk17TimelineSemaphore15getCounterValueEv(%"class.vk::TimelineSemaphore"*) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @vkSignalSemaphore(%struct.VkDevice_T*, %struct.VkSemaphoreSignalInfo*) local_unnamed_addr #0 {
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([84 x i8], [84 x i8]* @.str.73, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1562, %struct.VkDevice_T* %0, %struct.VkSemaphoreSignalInfo* %1) #12
  %3 = getelementptr inbounds %struct.VkSemaphoreSignalInfo, %struct.VkSemaphoreSignalInfo* %1, i64 0, i32 2, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %12, label %6

6:                                                ; preds = %2
  %7 = inttoptr i64 %4 to %"class.vk::Semaphore"*
  %8 = tail call i32 @_ZNK2vk9Semaphore16getSemaphoreTypeEv(%"class.vk::Semaphore"* nonnull %7) #12
  %9 = icmp eq i32 %8, 1
  %10 = inttoptr i64 %4 to %"class.vk::TimelineSemaphore"*
  %11 = select i1 %9, %"class.vk::TimelineSemaphore"* %10, %"class.vk::TimelineSemaphore"* null
  br label %12

12:                                               ; preds = %2, %6
  %13 = phi %"class.vk::TimelineSemaphore"* [ %11, %6 ], [ null, %2 ]
  %14 = getelementptr inbounds %struct.VkSemaphoreSignalInfo, %struct.VkSemaphoreSignalInfo* %1, i64 0, i32 3
  %15 = load i64, i64* %14, align 8
  tail call void @_ZN2vk17TimelineSemaphore6signalEm(%"class.vk::TimelineSemaphore"* %13, i64 %15) #12
  ret i32 0
}

; Function Attrs: optsize
declare void @_ZN2vk17TimelineSemaphore6signalEm(%"class.vk::TimelineSemaphore"*, i64) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @vkWaitSemaphores(%struct.VkDevice_T*, %struct.VkSemaphoreWaitInfo*, i64) local_unnamed_addr #0 {
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([104 x i8], [104 x i8]* @.str.74, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1570, %struct.VkDevice_T* %0, %struct.VkSemaphoreWaitInfo* %1, i64 %2) #12
  %4 = icmp eq %struct.VkDevice_T* %0, null
  %5 = bitcast %struct.VkDevice_T* %0 to %"class.vk::DispatchableObject.872"*
  %6 = getelementptr inbounds %"class.vk::DispatchableObject.872", %"class.vk::DispatchableObject.872"* %5, i64 0, i32 1
  %7 = select i1 %4, %"class.vk::Device"* null, %"class.vk::Device"* %6
  %8 = tail call i32 @_ZN2vk6Device17waitForSemaphoresEPK19VkSemaphoreWaitInfom(%"class.vk::Device"* %7, %struct.VkSemaphoreWaitInfo* %1, i64 %2) #12
  ret i32 %8
}

; Function Attrs: optsize
declare i32 @_ZN2vk6Device17waitForSemaphoresEPK19VkSemaphoreWaitInfom(%"class.vk::Device"*, %struct.VkSemaphoreWaitInfo*, i64) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @vkCreateEvent(%struct.VkDevice_T*, %struct.VkEventCreateInfo*, %struct.VkAllocationCallbacks*, %class.VkNonDispatchableHandle.4*) local_unnamed_addr #0 {
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([148 x i8], [148 x i8]* @.str.75, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1577, %struct.VkDevice_T* %0, %struct.VkEventCreateInfo* %1, %struct.VkAllocationCallbacks* %2, %class.VkNonDispatchableHandle.4* %3) #12
  %5 = getelementptr inbounds %struct.VkEventCreateInfo, %struct.VkEventCreateInfo* %1, i64 0, i32 2
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %9, label %8

8:                                                ; preds = %4
  tail call void (i8*, ...) @_ZN2sw4warnEPKcz(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1582, i32 %6) #12
  br label %9

9:                                                ; preds = %4, %8
  %10 = getelementptr inbounds %struct.VkEventCreateInfo, %struct.VkEventCreateInfo* %1, i64 0, i32 1
  %11 = bitcast i8** %10 to %struct.VkBaseInStructure**
  br label %12

12:                                               ; preds = %12, %9
  %13 = phi %struct.VkBaseInStructure** [ %11, %9 ], [ %16, %12 ]
  %14 = load %struct.VkBaseInStructure*, %struct.VkBaseInStructure** %13, align 8
  %15 = icmp eq %struct.VkBaseInStructure* %14, null
  %16 = getelementptr inbounds %struct.VkBaseInStructure, %struct.VkBaseInStructure* %14, i64 0, i32 1
  br i1 %15, label %17, label %12

17:                                               ; preds = %12
  %18 = tail call i32 @_ZN2vk10ObjectBaseINS_5EventE23VkNonDispatchableHandleIP9VkEvent_TEE6CreateI17VkEventCreateInfoJEEE8VkResultPK21VkAllocationCallbacksPKT_PS5_DpT0_(%struct.VkAllocationCallbacks* %2, %struct.VkEventCreateInfo* %1, %class.VkNonDispatchableHandle.4* %3) #16
  ret i32 %18
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden i32 @_ZN2vk10ObjectBaseINS_5EventE23VkNonDispatchableHandleIP9VkEvent_TEE6CreateI17VkEventCreateInfoJEEE8VkResultPK21VkAllocationCallbacksPKT_PS5_DpT0_(%struct.VkAllocationCallbacks*, %struct.VkEventCreateInfo*, %class.VkNonDispatchableHandle.4*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.VkNonDispatchableHandle.4, %class.VkNonDispatchableHandle.4* %2, i64 0, i32 0
  store i64 0, i64* %4, align 8
  %5 = tail call i8* @_ZN2vk8allocateEmmPK21VkAllocationCallbacks23VkSystemAllocationScope(i64 96, i64 8, %struct.VkAllocationCallbacks* %0, i32 1) #12
  %6 = icmp eq i8* %5, null
  br i1 %6, label %7, label %8

7:                                                ; preds = %3
  tail call void @_ZN2vk10deallocateEPvPK21VkAllocationCallbacks(i8* null, %struct.VkAllocationCallbacks* %0) #12
  br label %13

8:                                                ; preds = %3
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 40, i1 false) #13
  %9 = getelementptr inbounds i8, i8* %5, i64 40
  %10 = bitcast i8* %9 to i32*
  store i32 4, i32* %10, align 8
  %11 = getelementptr inbounds i8, i8* %5, i64 48
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 48, i1 false) #13
  %12 = ptrtoint i8* %5 to i64
  store i64 %12, i64* %4, align 8
  br label %13

13:                                               ; preds = %7, %8
  %14 = phi i32 [ 0, %8 ], [ -1, %7 ]
  ret i32 %14
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @vkDestroyEvent(%struct.VkDevice_T*, i64, %struct.VkAllocationCallbacks*) local_unnamed_addr #0 {
  %4 = inttoptr i64 %1 to i8*
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([103 x i8], [103 x i8]* @.str.76, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1599, %struct.VkDevice_T* %0, i8* %4, %struct.VkAllocationCallbacks* %2) #12
  %5 = icmp eq i64 %1, 0
  br i1 %5, label %9, label %6

6:                                                ; preds = %3
  %7 = inttoptr i64 %1 to %"class.vk::Event"*
  %8 = getelementptr inbounds %"class.vk::Event", %"class.vk::Event"* %7, i64 0, i32 2
  tail call void @_ZNSt3__118condition_variableD1Ev(%"class.std::__1::condition_variable"* %8) #12
  tail call void @_ZN2vk10deallocateEPvPK21VkAllocationCallbacks(i8* %4, %struct.VkAllocationCallbacks* %2) #12
  br label %9

9:                                                ; preds = %3, %6
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @vkGetEventStatus(%struct.VkDevice_T*, i64) local_unnamed_addr #0 {
  %3 = inttoptr i64 %1 to i8*
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.77, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1606, %struct.VkDevice_T* %0, i8* %3) #12
  %4 = inttoptr i64 %1 to %"class.vk::Event"*
  %5 = getelementptr inbounds %"class.vk::Event", %"class.vk::Event"* %4, i64 0, i32 0, i32 0
  tail call void @_ZNSt3__15mutex4lockEv(%"class.std::__1::mutex"* %5) #12
  %6 = getelementptr inbounds %"class.vk::Event", %"class.vk::Event"* %4, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  tail call void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"* %5) #12
  ret i32 %7
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @vkSetEvent(%struct.VkDevice_T*, i64) local_unnamed_addr #0 {
  %3 = inttoptr i64 %1 to i8*
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.77, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1613, %struct.VkDevice_T* %0, i8* %3) #12
  %4 = inttoptr i64 %1 to %"class.vk::Event"*
  tail call void @_ZN2vk5Event6signalEv(%"class.vk::Event"* %4) #16
  ret i32 0
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN2vk5Event6signalEv(%"class.vk::Event"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.vk::Event", %"class.vk::Event"* %0, i64 0, i32 0, i32 0
  tail call void @_ZNSt3__15mutex4lockEv(%"class.std::__1::mutex"* %2) #12
  %3 = getelementptr inbounds %"class.vk::Event", %"class.vk::Event"* %0, i64 0, i32 1
  store i32 3, i32* %3, align 8
  tail call void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"* %2) #12
  %4 = getelementptr inbounds %"class.vk::Event", %"class.vk::Event"* %0, i64 0, i32 2
  tail call void @_ZNSt3__118condition_variable10notify_allEv(%"class.std::__1::condition_variable"* %4) #12
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @vkResetEvent(%struct.VkDevice_T*, i64) local_unnamed_addr #0 {
  %3 = inttoptr i64 %1 to i8*
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.77, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1622, %struct.VkDevice_T* %0, i8* %3) #12
  %4 = inttoptr i64 %1 to %"class.vk::Event"*
  %5 = getelementptr inbounds %"class.vk::Event", %"class.vk::Event"* %4, i64 0, i32 0, i32 0
  tail call void @_ZNSt3__15mutex4lockEv(%"class.std::__1::mutex"* %5) #12
  %6 = getelementptr inbounds %"class.vk::Event", %"class.vk::Event"* %4, i64 0, i32 1
  store i32 4, i32* %6, align 8
  tail call void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"* %5) #12
  ret i32 0
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @vkCreateQueryPool(%struct.VkDevice_T*, %struct.VkQueryPoolCreateInfo*, %struct.VkAllocationCallbacks*, %class.VkNonDispatchableHandle.5*) local_unnamed_addr #0 {
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([160 x i8], [160 x i8]* @.str.78, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1632, %struct.VkDevice_T* %0, %struct.VkQueryPoolCreateInfo* %1, %struct.VkAllocationCallbacks* %2, %class.VkNonDispatchableHandle.5* %3) #12
  %5 = getelementptr inbounds %struct.VkQueryPoolCreateInfo, %struct.VkQueryPoolCreateInfo* %1, i64 0, i32 2
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %9, label %8

8:                                                ; preds = %4
  tail call void (i8*, ...) @_ZN2sw4warnEPKcz(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1637, i32 %6) #12
  br label %9

9:                                                ; preds = %4, %8
  %10 = getelementptr inbounds %struct.VkQueryPoolCreateInfo, %struct.VkQueryPoolCreateInfo* %1, i64 0, i32 1
  %11 = bitcast i8** %10 to %struct.VkBaseInStructure**
  br label %12

12:                                               ; preds = %12, %9
  %13 = phi %struct.VkBaseInStructure** [ %11, %9 ], [ %16, %12 ]
  %14 = load %struct.VkBaseInStructure*, %struct.VkBaseInStructure** %13, align 8
  %15 = icmp eq %struct.VkBaseInStructure* %14, null
  %16 = getelementptr inbounds %struct.VkBaseInStructure, %struct.VkBaseInStructure* %14, i64 0, i32 1
  br i1 %15, label %17, label %12

17:                                               ; preds = %12
  %18 = tail call i32 @_ZN2vk10ObjectBaseINS_9QueryPoolE23VkNonDispatchableHandleIP13VkQueryPool_TEE6CreateI21VkQueryPoolCreateInfoJEEE8VkResultPK21VkAllocationCallbacksPKT_PS5_DpT0_(%struct.VkAllocationCallbacks* %2, %struct.VkQueryPoolCreateInfo* %1, %class.VkNonDispatchableHandle.5* %3) #16
  ret i32 %18
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden i32 @_ZN2vk10ObjectBaseINS_9QueryPoolE23VkNonDispatchableHandleIP13VkQueryPool_TEE6CreateI21VkQueryPoolCreateInfoJEEE8VkResultPK21VkAllocationCallbacksPKT_PS5_DpT0_(%struct.VkAllocationCallbacks*, %struct.VkQueryPoolCreateInfo*, %class.VkNonDispatchableHandle.5*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.VkNonDispatchableHandle.5, %class.VkNonDispatchableHandle.5* %2, i64 0, i32 0
  store i64 0, i64* %4, align 8
  %5 = tail call i64 @_ZN2vk9QueryPool29ComputeRequiredAllocationSizeEPK21VkQueryPoolCreateInfo(%struct.VkQueryPoolCreateInfo* %1) #12
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %3
  %8 = tail call i8* @_ZN2vk8allocateEmmPK21VkAllocationCallbacks23VkSystemAllocationScope(i64 %5, i64 16, %struct.VkAllocationCallbacks* %0, i32 1) #12
  %9 = icmp eq i8* %8, null
  br i1 %9, label %18, label %10

10:                                               ; preds = %7, %3
  %11 = phi i8* [ %8, %7 ], [ null, %3 ]
  %12 = tail call i8* @_ZN2vk8allocateEmmPK21VkAllocationCallbacks23VkSystemAllocationScope(i64 16, i64 8, %struct.VkAllocationCallbacks* %0, i32 1) #12
  %13 = icmp eq i8* %12, null
  br i1 %13, label %14, label %15

14:                                               ; preds = %10
  tail call void @_ZN2vk10deallocateEPvPK21VkAllocationCallbacks(i8* %11, %struct.VkAllocationCallbacks* %0) #12
  br label %18

15:                                               ; preds = %10
  %16 = bitcast i8* %12 to %"class.vk::QueryPool"*
  tail call void @_ZN2vk9QueryPoolC1EPK21VkQueryPoolCreateInfoPv(%"class.vk::QueryPool"* nonnull %16, %struct.VkQueryPoolCreateInfo* %1, i8* %11) #12
  %17 = ptrtoint i8* %12 to i64
  store i64 %17, i64* %4, align 8
  br label %18

18:                                               ; preds = %7, %14, %15
  %19 = phi i32 [ -1, %7 ], [ 0, %15 ], [ -1, %14 ]
  ret i32 %19
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @vkDestroyQueryPool(%struct.VkDevice_T*, i64, %struct.VkAllocationCallbacks*) local_unnamed_addr #0 {
  %4 = inttoptr i64 %1 to i8*
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([111 x i8], [111 x i8]* @.str.79, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1653, %struct.VkDevice_T* %0, i8* %4, %struct.VkAllocationCallbacks* %2) #12
  %5 = icmp eq i64 %1, 0
  br i1 %5, label %8, label %6

6:                                                ; preds = %3
  %7 = inttoptr i64 %1 to %"class.vk::QueryPool"*
  tail call void @_ZN2vk9QueryPool7destroyEPK21VkAllocationCallbacks(%"class.vk::QueryPool"* nonnull %7, %struct.VkAllocationCallbacks* %2) #12
  tail call void @_ZN2vk10deallocateEPvPK21VkAllocationCallbacks(i8* %4, %struct.VkAllocationCallbacks* %2) #12
  br label %8

8:                                                ; preds = %3, %6
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @vkGetQueryPoolResults(%struct.VkDevice_T*, i64, i32, i32, i64, i8*, i64, i32) local_unnamed_addr #0 {
  %9 = inttoptr i64 %1 to i8*
  %10 = trunc i64 %4 to i32
  %11 = trunc i64 %6 to i32
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([214 x i8], [214 x i8]* @.str.80, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1661, %struct.VkDevice_T* %0, i8* %9, i32 %2, i32 %3, i32 %10, i8* %5, i32 %11, i32 %7) #12
  %12 = inttoptr i64 %1 to %"class.vk::QueryPool"*
  %13 = tail call i32 @_ZNK2vk9QueryPool10getResultsEjjmPvmj(%"class.vk::QueryPool"* %12, i32 %2, i32 %3, i64 %4, i8* %5, i64 %6, i32 %7) #12
  ret i32 %13
}

; Function Attrs: optsize
declare i32 @_ZNK2vk9QueryPool10getResultsEjjmPvmj(%"class.vk::QueryPool"*, i32, i32, i64, i8*, i64, i32) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @vkCreateBuffer(%struct.VkDevice_T*, %struct.VkBufferCreateInfo*, %struct.VkAllocationCallbacks*, %class.VkNonDispatchableHandle*) local_unnamed_addr #0 {
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([151 x i8], [151 x i8]* @.str.81, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1669, %struct.VkDevice_T* %0, %struct.VkBufferCreateInfo* %1, %struct.VkAllocationCallbacks* %2, %class.VkNonDispatchableHandle* %3) #12
  %5 = getelementptr inbounds %struct.VkBufferCreateInfo, %struct.VkBufferCreateInfo* %1, i64 0, i32 1
  %6 = bitcast i8** %5 to %struct.VkBaseInStructure**
  br label %7

7:                                                ; preds = %7, %4
  %8 = phi %struct.VkBaseInStructure** [ %6, %4 ], [ %11, %7 ]
  %9 = load %struct.VkBaseInStructure*, %struct.VkBaseInStructure** %8, align 8
  %10 = icmp eq %struct.VkBaseInStructure* %9, null
  %11 = getelementptr inbounds %struct.VkBaseInStructure, %struct.VkBaseInStructure* %9, i64 0, i32 1
  br i1 %10, label %12, label %7

12:                                               ; preds = %7
  %13 = tail call i32 @_ZN2vk10ObjectBaseINS_6BufferE23VkNonDispatchableHandleIP10VkBuffer_TEE6CreateI18VkBufferCreateInfoJEEE8VkResultPK21VkAllocationCallbacksPKT_PS5_DpT0_(%struct.VkAllocationCallbacks* %2, %struct.VkBufferCreateInfo* %1, %class.VkNonDispatchableHandle* %3) #16
  ret i32 %13
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden i32 @_ZN2vk10ObjectBaseINS_6BufferE23VkNonDispatchableHandleIP10VkBuffer_TEE6CreateI18VkBufferCreateInfoJEEE8VkResultPK21VkAllocationCallbacksPKT_PS5_DpT0_(%struct.VkAllocationCallbacks*, %struct.VkBufferCreateInfo*, %class.VkNonDispatchableHandle*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.VkNonDispatchableHandle, %class.VkNonDispatchableHandle* %2, i64 0, i32 0
  store i64 0, i64* %4, align 8
  %5 = tail call i64 @_ZN2vk6Buffer29ComputeRequiredAllocationSizeEPK18VkBufferCreateInfo(%struct.VkBufferCreateInfo* %1) #12
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %3
  %8 = tail call i8* @_ZN2vk8allocateEmmPK21VkAllocationCallbacks23VkSystemAllocationScope(i64 %5, i64 16, %struct.VkAllocationCallbacks* %0, i32 1) #12
  %9 = icmp eq i8* %8, null
  br i1 %9, label %18, label %10

10:                                               ; preds = %7, %3
  %11 = phi i8* [ %8, %7 ], [ null, %3 ]
  %12 = tail call i8* @_ZN2vk8allocateEmmPK21VkAllocationCallbacks23VkSystemAllocationScope(i64 56, i64 8, %struct.VkAllocationCallbacks* %0, i32 1) #12
  %13 = icmp eq i8* %12, null
  br i1 %13, label %14, label %15

14:                                               ; preds = %10
  tail call void @_ZN2vk10deallocateEPvPK21VkAllocationCallbacks(i8* %11, %struct.VkAllocationCallbacks* %0) #12
  br label %18

15:                                               ; preds = %10
  %16 = bitcast i8* %12 to %"class.vk::Buffer"*
  tail call void @_ZN2vk6BufferC1EPK18VkBufferCreateInfoPv(%"class.vk::Buffer"* nonnull %16, %struct.VkBufferCreateInfo* %1, i8* %11) #12
  %17 = ptrtoint i8* %12 to i64
  store i64 %17, i64* %4, align 8
  br label %18

18:                                               ; preds = %7, %14, %15
  %19 = phi i32 [ -1, %7 ], [ 0, %15 ], [ -1, %14 ]
  ret i32 %19
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @vkDestroyBuffer(%struct.VkDevice_T*, i64, %struct.VkAllocationCallbacks*) local_unnamed_addr #0 {
  %4 = inttoptr i64 %1 to i8*
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([105 x i8], [105 x i8]* @.str.82, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1692, %struct.VkDevice_T* %0, i8* %4, %struct.VkAllocationCallbacks* %2) #12
  %5 = icmp eq i64 %1, 0
  br i1 %5, label %8, label %6

6:                                                ; preds = %3
  %7 = inttoptr i64 %1 to %"class.vk::Buffer"*
  tail call void @_ZN2vk6Buffer7destroyEPK21VkAllocationCallbacks(%"class.vk::Buffer"* nonnull %7, %struct.VkAllocationCallbacks* %2) #12
  tail call void @_ZN2vk10deallocateEPvPK21VkAllocationCallbacks(i8* %4, %struct.VkAllocationCallbacks* %2) #12
  br label %8

8:                                                ; preds = %3, %6
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden i64 @vkGetBufferDeviceAddress(%struct.VkDevice_T*, %struct.VkBufferDeviceAddressInfo*) local_unnamed_addr #0 {
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.83, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1700, %struct.VkDevice_T* %0, %struct.VkBufferDeviceAddressInfo* %1) #12
  tail call void (i8*, ...) @_ZN2sw4warnEPKcz(i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.84, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1701) #12
  ret i64 0
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden i64 @vkGetBufferOpaqueCaptureAddress(%struct.VkDevice_T*, %struct.VkBufferDeviceAddressInfo*) local_unnamed_addr #0 {
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.83, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1708, %struct.VkDevice_T* %0, %struct.VkBufferDeviceAddressInfo* %1) #12
  tail call void (i8*, ...) @_ZN2sw4warnEPKcz(i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.84, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1709) #12
  ret i64 0
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden i64 @vkGetDeviceMemoryOpaqueCaptureAddress(%struct.VkDevice_T*, %struct.VkDeviceMemoryOpaqueCaptureAddressInfo*) local_unnamed_addr #0 {
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([95 x i8], [95 x i8]* @.str.85, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1716, %struct.VkDevice_T* %0, %struct.VkDeviceMemoryOpaqueCaptureAddressInfo* %1) #12
  tail call void (i8*, ...) @_ZN2sw4warnEPKcz(i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.84, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1717) #12
  ret i64 0
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @vkCreateBufferView(%struct.VkDevice_T*, %struct.VkBufferViewCreateInfo*, %struct.VkAllocationCallbacks*, %class.VkNonDispatchableHandle.6*) local_unnamed_addr #0 {
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([157 x i8], [157 x i8]* @.str.86, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1724, %struct.VkDevice_T* %0, %struct.VkBufferViewCreateInfo* %1, %struct.VkAllocationCallbacks* %2, %class.VkNonDispatchableHandle.6* %3) #12
  %5 = getelementptr inbounds %struct.VkBufferViewCreateInfo, %struct.VkBufferViewCreateInfo* %1, i64 0, i32 2
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %9, label %8

8:                                                ; preds = %4
  tail call void (i8*, ...) @_ZN2sw4warnEPKcz(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1729, i32 %6) #12
  br label %9

9:                                                ; preds = %4, %8
  %10 = getelementptr inbounds %struct.VkBufferViewCreateInfo, %struct.VkBufferViewCreateInfo* %1, i64 0, i32 1
  %11 = bitcast i8** %10 to %struct.VkBaseInStructure**
  br label %12

12:                                               ; preds = %12, %9
  %13 = phi %struct.VkBaseInStructure** [ %11, %9 ], [ %16, %12 ]
  %14 = load %struct.VkBaseInStructure*, %struct.VkBaseInStructure** %13, align 8
  %15 = icmp eq %struct.VkBaseInStructure* %14, null
  %16 = getelementptr inbounds %struct.VkBaseInStructure, %struct.VkBaseInStructure* %14, i64 0, i32 1
  br i1 %15, label %17, label %12

17:                                               ; preds = %12
  %18 = tail call i32 @_ZN2vk10ObjectBaseINS_10BufferViewE23VkNonDispatchableHandleIP14VkBufferView_TEE6CreateI22VkBufferViewCreateInfoJEEE8VkResultPK21VkAllocationCallbacksPKT_PS5_DpT0_(%struct.VkAllocationCallbacks* %2, %struct.VkBufferViewCreateInfo* %1, %class.VkNonDispatchableHandle.6* %3) #16
  ret i32 %18
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden i32 @_ZN2vk10ObjectBaseINS_10BufferViewE23VkNonDispatchableHandleIP14VkBufferView_TEE6CreateI22VkBufferViewCreateInfoJEEE8VkResultPK21VkAllocationCallbacksPKT_PS5_DpT0_(%struct.VkAllocationCallbacks*, %struct.VkBufferViewCreateInfo*, %class.VkNonDispatchableHandle.6*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.VkNonDispatchableHandle.6, %class.VkNonDispatchableHandle.6* %2, i64 0, i32 0
  store i64 0, i64* %4, align 8
  %5 = tail call i8* @_ZN2vk8allocateEmmPK21VkAllocationCallbacks23VkSystemAllocationScope(i64 40, i64 8, %struct.VkAllocationCallbacks* %0, i32 1) #12
  %6 = icmp eq i8* %5, null
  br i1 %6, label %7, label %8

7:                                                ; preds = %3
  tail call void @_ZN2vk10deallocateEPvPK21VkAllocationCallbacks(i8* null, %struct.VkAllocationCallbacks* %0) #12
  br label %11

8:                                                ; preds = %3
  %9 = bitcast i8* %5 to %"class.vk::BufferView"*
  tail call void @_ZN2vk10BufferViewC1EPK22VkBufferViewCreateInfoPv(%"class.vk::BufferView"* nonnull %9, %struct.VkBufferViewCreateInfo* %1, i8* null) #12
  %10 = ptrtoint i8* %5 to i64
  store i64 %10, i64* %4, align 8
  br label %11

11:                                               ; preds = %7, %8
  %12 = phi i32 [ 0, %8 ], [ -1, %7 ]
  ret i32 %12
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @vkDestroyBufferView(%struct.VkDevice_T*, i64, %struct.VkAllocationCallbacks*) local_unnamed_addr #0 {
  %4 = inttoptr i64 %1 to i8*
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([113 x i8], [113 x i8]* @.str.87, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1745, %struct.VkDevice_T* %0, i8* %4, %struct.VkAllocationCallbacks* %2) #12
  %5 = icmp eq i64 %1, 0
  br i1 %5, label %7, label %6

6:                                                ; preds = %3
  tail call void @_ZN2vk10deallocateEPvPK21VkAllocationCallbacks(i8* %4, %struct.VkAllocationCallbacks* %2) #12
  br label %7

7:                                                ; preds = %3, %6
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @vkCreateImage(%struct.VkDevice_T*, %struct.VkImageCreateInfo*, %struct.VkAllocationCallbacks*, %class.VkNonDispatchableHandle.0*) local_unnamed_addr #0 {
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([148 x i8], [148 x i8]* @.str.88, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1753, %struct.VkDevice_T* %0, %struct.VkImageCreateInfo* %1, %struct.VkAllocationCallbacks* %2, %class.VkNonDispatchableHandle.0* %3) #12
  %5 = getelementptr inbounds %struct.VkImageCreateInfo, %struct.VkImageCreateInfo* %1, i64 0, i32 1
  %6 = bitcast i8** %5 to %struct.VkBaseInStructure**
  br label %7

7:                                                ; preds = %7, %4
  %8 = phi %struct.VkBaseInStructure** [ %6, %4 ], [ %11, %7 ]
  %9 = load %struct.VkBaseInStructure*, %struct.VkBaseInStructure** %8, align 8
  %10 = icmp eq %struct.VkBaseInStructure* %9, null
  %11 = getelementptr inbounds %struct.VkBaseInStructure, %struct.VkBaseInStructure* %9, i64 0, i32 1
  br i1 %10, label %12, label %7

12:                                               ; preds = %7
  %13 = icmp eq %struct.VkDevice_T* %0, null
  %14 = bitcast %struct.VkDevice_T* %0 to %"class.vk::DispatchableObject.872"*
  %15 = getelementptr inbounds %"class.vk::DispatchableObject.872", %"class.vk::DispatchableObject.872"* %14, i64 0, i32 1
  %16 = select i1 %13, %"class.vk::Device"* null, %"class.vk::Device"* %15
  %17 = tail call i32 @_ZN2vk10ObjectBaseINS_5ImageE23VkNonDispatchableHandleIP9VkImage_TEE6CreateI17VkImageCreateInfoJPNS_6DeviceEEEE8VkResultPK21VkAllocationCallbacksPKT_PS5_DpT0_(%struct.VkAllocationCallbacks* %2, %struct.VkImageCreateInfo* %1, %class.VkNonDispatchableHandle.0* %3, %"class.vk::Device"* %16) #16
  ret i32 %17
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden i32 @_ZN2vk10ObjectBaseINS_5ImageE23VkNonDispatchableHandleIP9VkImage_TEE6CreateI17VkImageCreateInfoJPNS_6DeviceEEEE8VkResultPK21VkAllocationCallbacksPKT_PS5_DpT0_(%struct.VkAllocationCallbacks*, %struct.VkImageCreateInfo*, %class.VkNonDispatchableHandle.0*, %"class.vk::Device"*) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %class.VkNonDispatchableHandle.0, %class.VkNonDispatchableHandle.0* %2, i64 0, i32 0
  store i64 0, i64* %5, align 8
  %6 = tail call i64 @_ZN2vk5Image29ComputeRequiredAllocationSizeEPK17VkImageCreateInfo(%struct.VkImageCreateInfo* %1) #12
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %4
  %9 = tail call i8* @_ZN2vk8allocateEmmPK21VkAllocationCallbacks23VkSystemAllocationScope(i64 %6, i64 16, %struct.VkAllocationCallbacks* %0, i32 1) #12
  %10 = icmp eq i8* %9, null
  br i1 %10, label %19, label %11

11:                                               ; preds = %8, %4
  %12 = phi i8* [ %9, %8 ], [ null, %4 ]
  %13 = tail call i8* @_ZN2vk8allocateEmmPK21VkAllocationCallbacks23VkSystemAllocationScope(i64 184, i64 8, %struct.VkAllocationCallbacks* %0, i32 1) #12
  %14 = icmp eq i8* %13, null
  br i1 %14, label %15, label %16

15:                                               ; preds = %11
  tail call void @_ZN2vk10deallocateEPvPK21VkAllocationCallbacks(i8* %12, %struct.VkAllocationCallbacks* %0) #12
  br label %19

16:                                               ; preds = %11
  %17 = bitcast i8* %13 to %"class.vk::Image"*
  tail call void @_ZN2vk5ImageC1EPK17VkImageCreateInfoPvPNS_6DeviceE(%"class.vk::Image"* nonnull %17, %struct.VkImageCreateInfo* %1, i8* %12, %"class.vk::Device"* %3) #12
  %18 = ptrtoint i8* %13 to i64
  store i64 %18, i64* %5, align 8
  br label %19

19:                                               ; preds = %8, %15, %16
  %20 = phi i32 [ -1, %8 ], [ 0, %16 ], [ -1, %15 ]
  ret i32 %20
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @vkDestroyImage(%struct.VkDevice_T*, i64, %struct.VkAllocationCallbacks*) local_unnamed_addr #0 {
  %4 = inttoptr i64 %1 to i8*
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([103 x i8], [103 x i8]* @.str.89, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1850, %struct.VkDevice_T* %0, i8* %4, %struct.VkAllocationCallbacks* %2) #12
  %5 = inttoptr i64 %1 to %"class.vk::Image"*
  %6 = icmp eq i64 %1, 0
  br i1 %6, label %9, label %7

7:                                                ; preds = %3
  tail call void @_ZN2vk5Image7destroyEPK21VkAllocationCallbacks(%"class.vk::Image"* nonnull %5, %struct.VkAllocationCallbacks* %2) #12
  %8 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %5, i64 0, i32 15, i32 0
  tail call void @_ZNSt3__112__hash_tableIN2vk5Image11SubresourceES3_NS_8equal_toIS3_EENS_9allocatorIS3_EEED2Ev(%"class.std::__1::__hash_table.418"* %8) #12
  tail call void @_ZN2vk10deallocateEPvPK21VkAllocationCallbacks(i8* %4, %struct.VkAllocationCallbacks* %2) #12
  br label %9

9:                                                ; preds = %3, %7
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @vkGetImageSubresourceLayout(%struct.VkDevice_T*, i64, %struct.VkImageSubresource*, %struct.VkSubresourceLayout*) local_unnamed_addr #0 {
  %5 = inttoptr i64 %1 to i8*
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([137 x i8], [137 x i8]* @.str.90, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1866, %struct.VkDevice_T* %0, i8* %5, %struct.VkImageSubresource* %2, %struct.VkSubresourceLayout* %3) #12
  %6 = inttoptr i64 %1 to %"class.vk::Image"*
  tail call void @_ZNK2vk5Image20getSubresourceLayoutEPK18VkImageSubresourceP19VkSubresourceLayout(%"class.vk::Image"* %6, %struct.VkImageSubresource* %2, %struct.VkSubresourceLayout* %3) #12
  ret void
}

; Function Attrs: optsize
declare void @_ZNK2vk5Image20getSubresourceLayoutEPK18VkImageSubresourceP19VkSubresourceLayout(%"class.vk::Image"*, %struct.VkImageSubresource*, %struct.VkSubresourceLayout*) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @vkCreateImageView(%struct.VkDevice_T*, %struct.VkImageViewCreateInfo*, %struct.VkAllocationCallbacks*, %class.VkNonDispatchableHandle.7*) local_unnamed_addr #0 {
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([155 x i8], [155 x i8]* @.str.91, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1874, %struct.VkDevice_T* %0, %struct.VkImageViewCreateInfo* %1, %struct.VkAllocationCallbacks* %2, %class.VkNonDispatchableHandle.7* %3) #12
  %5 = getelementptr inbounds %struct.VkImageViewCreateInfo, %struct.VkImageViewCreateInfo* %1, i64 0, i32 2
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %9, label %8

8:                                                ; preds = %4
  tail call void (i8*, ...) @_ZN2sw4warnEPKcz(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1878, i32 %6) #12
  br label %9

9:                                                ; preds = %4, %8
  %10 = getelementptr inbounds %struct.VkImageViewCreateInfo, %struct.VkImageViewCreateInfo* %1, i64 0, i32 1
  %11 = bitcast i8** %10 to %struct.VkBaseInStructure**
  %12 = load %struct.VkBaseInStructure*, %struct.VkBaseInStructure** %11, align 8
  %13 = icmp eq %struct.VkBaseInStructure* %12, null
  br i1 %13, label %29, label %14

14:                                               ; preds = %9, %24
  %15 = phi %struct.VkBaseInStructure* [ %27, %24 ], [ %12, %9 ]
  %16 = phi %"class.vk::SamplerYcbcrConversion"* [ %25, %24 ], [ null, %9 ]
  %17 = getelementptr inbounds %struct.VkBaseInStructure, %struct.VkBaseInStructure* %15, i64 0, i32 0
  %18 = load i32, i32* %17, align 8
  %19 = icmp eq i32 %18, 1000156001
  br i1 %19, label %20, label %24

20:                                               ; preds = %14
  %21 = getelementptr inbounds %struct.VkBaseInStructure, %struct.VkBaseInStructure* %15, i64 1
  %22 = bitcast %struct.VkBaseInStructure* %21 to %"class.vk::SamplerYcbcrConversion"**
  %23 = load %"class.vk::SamplerYcbcrConversion"*, %"class.vk::SamplerYcbcrConversion"** %22, align 8
  br label %24

24:                                               ; preds = %14, %20
  %25 = phi %"class.vk::SamplerYcbcrConversion"* [ %23, %20 ], [ %16, %14 ]
  %26 = getelementptr inbounds %struct.VkBaseInStructure, %struct.VkBaseInStructure* %15, i64 0, i32 1
  %27 = load %struct.VkBaseInStructure*, %struct.VkBaseInStructure** %26, align 8
  %28 = icmp eq %struct.VkBaseInStructure* %27, null
  br i1 %28, label %29, label %14

29:                                               ; preds = %24, %9
  %30 = phi %"class.vk::SamplerYcbcrConversion"* [ null, %9 ], [ %25, %24 ]
  %31 = tail call i32 @_ZN2vk10ObjectBaseINS_9ImageViewE23VkNonDispatchableHandleIP13VkImageView_TEE6CreateI21VkImageViewCreateInfoJPKNS_22SamplerYcbcrConversionEEEE8VkResultPK21VkAllocationCallbacksPKT_PS5_DpT0_(%struct.VkAllocationCallbacks* %2, %struct.VkImageViewCreateInfo* %1, %class.VkNonDispatchableHandle.7* %3, %"class.vk::SamplerYcbcrConversion"* %30) #16
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %40

33:                                               ; preds = %29
  %34 = icmp eq %struct.VkDevice_T* %0, null
  %35 = bitcast %struct.VkDevice_T* %0 to %"class.vk::DispatchableObject.872"*
  %36 = getelementptr inbounds %"class.vk::DispatchableObject.872", %"class.vk::DispatchableObject.872"* %35, i64 0, i32 1
  %37 = select i1 %34, %"class.vk::Device"* null, %"class.vk::Device"* %36
  %38 = bitcast %class.VkNonDispatchableHandle.7* %3 to %"class.vk::ImageView"**
  %39 = load %"class.vk::ImageView"*, %"class.vk::ImageView"** %38, align 8
  tail call void @_ZN2vk6Device17registerImageViewEPNS_9ImageViewE(%"class.vk::Device"* %37, %"class.vk::ImageView"* %39) #12
  br label %40

40:                                               ; preds = %33, %29
  ret i32 %31
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden i32 @_ZN2vk10ObjectBaseINS_9ImageViewE23VkNonDispatchableHandleIP13VkImageView_TEE6CreateI21VkImageViewCreateInfoJPKNS_22SamplerYcbcrConversionEEEE8VkResultPK21VkAllocationCallbacksPKT_PS5_DpT0_(%struct.VkAllocationCallbacks*, %struct.VkImageViewCreateInfo*, %class.VkNonDispatchableHandle.7*, %"class.vk::SamplerYcbcrConversion"*) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %class.VkNonDispatchableHandle.7, %class.VkNonDispatchableHandle.7* %2, i64 0, i32 0
  store i64 0, i64* %5, align 8
  %6 = tail call i64 @_ZN2vk9ImageView29ComputeRequiredAllocationSizeEPK21VkImageViewCreateInfo(%struct.VkImageViewCreateInfo* %1) #12
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %4
  %9 = tail call i8* @_ZN2vk8allocateEmmPK21VkAllocationCallbacks23VkSystemAllocationScope(i64 %6, i64 16, %struct.VkAllocationCallbacks* %0, i32 1) #12
  %10 = icmp eq i8* %9, null
  br i1 %10, label %19, label %11

11:                                               ; preds = %8, %4
  %12 = phi i8* [ %9, %8 ], [ null, %4 ]
  %13 = tail call i8* @_ZN2vk8allocateEmmPK21VkAllocationCallbacks23VkSystemAllocationScope(i64 72, i64 8, %struct.VkAllocationCallbacks* %0, i32 1) #12
  %14 = icmp eq i8* %13, null
  br i1 %14, label %15, label %16

15:                                               ; preds = %11
  tail call void @_ZN2vk10deallocateEPvPK21VkAllocationCallbacks(i8* %12, %struct.VkAllocationCallbacks* %0) #12
  br label %19

16:                                               ; preds = %11
  %17 = bitcast i8* %13 to %"class.vk::ImageView"*
  tail call void @_ZN2vk9ImageViewC1EPK21VkImageViewCreateInfoPvPKNS_22SamplerYcbcrConversionE(%"class.vk::ImageView"* nonnull %17, %struct.VkImageViewCreateInfo* %1, i8* %12, %"class.vk::SamplerYcbcrConversion"* %3) #12
  %18 = ptrtoint i8* %13 to i64
  store i64 %18, i64* %5, align 8
  br label %19

19:                                               ; preds = %8, %15, %16
  %20 = phi i32 [ -1, %8 ], [ 0, %16 ], [ -1, %15 ]
  ret i32 %20
}

; Function Attrs: optsize
declare void @_ZN2vk6Device17registerImageViewEPNS_9ImageViewE(%"class.vk::Device"*, %"class.vk::ImageView"*) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @vkDestroyImageView(%struct.VkDevice_T*, i64, %struct.VkAllocationCallbacks*) local_unnamed_addr #0 {
  %4 = inttoptr i64 %1 to i8*
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([111 x i8], [111 x i8]* @.str.92, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1928, %struct.VkDevice_T* %0, i8* %4, %struct.VkAllocationCallbacks* %2) #12
  %5 = icmp eq %struct.VkDevice_T* %0, null
  %6 = bitcast %struct.VkDevice_T* %0 to %"class.vk::DispatchableObject.872"*
  %7 = getelementptr inbounds %"class.vk::DispatchableObject.872", %"class.vk::DispatchableObject.872"* %6, i64 0, i32 1
  %8 = select i1 %5, %"class.vk::Device"* null, %"class.vk::Device"* %7
  %9 = inttoptr i64 %1 to %"class.vk::ImageView"*
  tail call void @_ZN2vk6Device19unregisterImageViewEPNS_9ImageViewE(%"class.vk::Device"* %8, %"class.vk::ImageView"* %9) #12
  %10 = icmp eq i64 %1, 0
  br i1 %10, label %12, label %11

11:                                               ; preds = %3
  tail call void @_ZN2vk9ImageView7destroyEPK21VkAllocationCallbacks(%"class.vk::ImageView"* nonnull %9, %struct.VkAllocationCallbacks* %2) #12
  tail call void @_ZN2vk10deallocateEPvPK21VkAllocationCallbacks(i8* %4, %struct.VkAllocationCallbacks* %2) #12
  br label %12

12:                                               ; preds = %3, %11
  ret void
}

; Function Attrs: optsize
declare void @_ZN2vk6Device19unregisterImageViewEPNS_9ImageViewE(%"class.vk::Device"*, %"class.vk::ImageView"*) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @vkCreateShaderModule(%struct.VkDevice_T*, %struct.VkShaderModuleCreateInfo*, %struct.VkAllocationCallbacks*, %class.VkNonDispatchableHandle.8*) local_unnamed_addr #0 {
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([169 x i8], [169 x i8]* @.str.93, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1937, %struct.VkDevice_T* %0, %struct.VkShaderModuleCreateInfo* %1, %struct.VkAllocationCallbacks* %2, %class.VkNonDispatchableHandle.8* %3) #12
  %5 = getelementptr inbounds %struct.VkShaderModuleCreateInfo, %struct.VkShaderModuleCreateInfo* %1, i64 0, i32 2
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %9, label %8

8:                                                ; preds = %4
  tail call void (i8*, ...) @_ZN2sw4warnEPKcz(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1942, i32 %6) #12
  br label %9

9:                                                ; preds = %4, %8
  %10 = getelementptr inbounds %struct.VkShaderModuleCreateInfo, %struct.VkShaderModuleCreateInfo* %1, i64 0, i32 1
  %11 = bitcast i8** %10 to %struct.VkBaseInStructure**
  br label %12

12:                                               ; preds = %12, %9
  %13 = phi %struct.VkBaseInStructure** [ %11, %9 ], [ %16, %12 ]
  %14 = load %struct.VkBaseInStructure*, %struct.VkBaseInStructure** %13, align 8
  %15 = icmp eq %struct.VkBaseInStructure* %14, null
  %16 = getelementptr inbounds %struct.VkBaseInStructure, %struct.VkBaseInStructure* %14, i64 0, i32 1
  br i1 %15, label %17, label %12

17:                                               ; preds = %12
  %18 = tail call i32 @_ZN2vk10ObjectBaseINS_12ShaderModuleE23VkNonDispatchableHandleIP16VkShaderModule_TEE6CreateI24VkShaderModuleCreateInfoJEEE8VkResultPK21VkAllocationCallbacksPKT_PS5_DpT0_(%struct.VkAllocationCallbacks* %2, %struct.VkShaderModuleCreateInfo* %1, %class.VkNonDispatchableHandle.8* %3) #16
  ret i32 %18
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden i32 @_ZN2vk10ObjectBaseINS_12ShaderModuleE23VkNonDispatchableHandleIP16VkShaderModule_TEE6CreateI24VkShaderModuleCreateInfoJEEE8VkResultPK21VkAllocationCallbacksPKT_PS5_DpT0_(%struct.VkAllocationCallbacks*, %struct.VkShaderModuleCreateInfo*, %class.VkNonDispatchableHandle.8*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.VkNonDispatchableHandle.8, %class.VkNonDispatchableHandle.8* %2, i64 0, i32 0
  store i64 0, i64* %4, align 8
  %5 = tail call i64 @_ZN2vk12ShaderModule29ComputeRequiredAllocationSizeEPK24VkShaderModuleCreateInfo(%struct.VkShaderModuleCreateInfo* %1) #12
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %3
  %8 = tail call i8* @_ZN2vk8allocateEmmPK21VkAllocationCallbacks23VkSystemAllocationScope(i64 %5, i64 16, %struct.VkAllocationCallbacks* %0, i32 1) #12
  %9 = icmp eq i8* %8, null
  br i1 %9, label %18, label %10

10:                                               ; preds = %7, %3
  %11 = phi i8* [ %8, %7 ], [ null, %3 ]
  %12 = tail call i8* @_ZN2vk8allocateEmmPK21VkAllocationCallbacks23VkSystemAllocationScope(i64 24, i64 8, %struct.VkAllocationCallbacks* %0, i32 1) #12
  %13 = icmp eq i8* %12, null
  br i1 %13, label %14, label %15

14:                                               ; preds = %10
  tail call void @_ZN2vk10deallocateEPvPK21VkAllocationCallbacks(i8* %11, %struct.VkAllocationCallbacks* %0) #12
  br label %18

15:                                               ; preds = %10
  %16 = bitcast i8* %12 to %"class.vk::ShaderModule"*
  tail call void @_ZN2vk12ShaderModuleC1EPK24VkShaderModuleCreateInfoPv(%"class.vk::ShaderModule"* nonnull %16, %struct.VkShaderModuleCreateInfo* %1, i8* %11) #12
  %17 = ptrtoint i8* %12 to i64
  store i64 %17, i64* %4, align 8
  br label %18

18:                                               ; preds = %7, %14, %15
  %19 = phi i32 [ -1, %7 ], [ 0, %15 ], [ -1, %14 ]
  ret i32 %19
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @vkDestroyShaderModule(%struct.VkDevice_T*, i64, %struct.VkAllocationCallbacks*) local_unnamed_addr #0 {
  %4 = inttoptr i64 %1 to i8*
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([117 x i8], [117 x i8]* @.str.94, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1958, %struct.VkDevice_T* %0, i8* %4, %struct.VkAllocationCallbacks* %2) #12
  %5 = icmp eq i64 %1, 0
  br i1 %5, label %8, label %6

6:                                                ; preds = %3
  %7 = inttoptr i64 %1 to %"class.vk::ShaderModule"*
  tail call void @_ZN2vk12ShaderModule7destroyEPK21VkAllocationCallbacks(%"class.vk::ShaderModule"* nonnull %7, %struct.VkAllocationCallbacks* %2) #12
  tail call void @_ZN2vk10deallocateEPvPK21VkAllocationCallbacks(i8* %4, %struct.VkAllocationCallbacks* %2) #12
  br label %8

8:                                                ; preds = %3, %6
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @vkCreatePipelineCache(%struct.VkDevice_T*, %struct.VkPipelineCacheCreateInfo*, %struct.VkAllocationCallbacks*, %class.VkNonDispatchableHandle.9*) local_unnamed_addr #0 {
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([172 x i8], [172 x i8]* @.str.95, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1966, %struct.VkDevice_T* %0, %struct.VkPipelineCacheCreateInfo* %1, %struct.VkAllocationCallbacks* %2, %class.VkNonDispatchableHandle.9* %3) #12
  %5 = getelementptr inbounds %struct.VkPipelineCacheCreateInfo, %struct.VkPipelineCacheCreateInfo* %1, i64 0, i32 2
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %9, label %8

8:                                                ; preds = %4
  tail call void (i8*, ...) @_ZN2sw4warnEPKcz(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1971, i32 %6) #12
  br label %9

9:                                                ; preds = %4, %8
  %10 = getelementptr inbounds %struct.VkPipelineCacheCreateInfo, %struct.VkPipelineCacheCreateInfo* %1, i64 0, i32 1
  %11 = bitcast i8** %10 to %struct.VkBaseInStructure**
  br label %12

12:                                               ; preds = %12, %9
  %13 = phi %struct.VkBaseInStructure** [ %11, %9 ], [ %16, %12 ]
  %14 = load %struct.VkBaseInStructure*, %struct.VkBaseInStructure** %13, align 8
  %15 = icmp eq %struct.VkBaseInStructure* %14, null
  %16 = getelementptr inbounds %struct.VkBaseInStructure, %struct.VkBaseInStructure* %14, i64 0, i32 1
  br i1 %15, label %17, label %12

17:                                               ; preds = %12
  %18 = tail call i32 @_ZN2vk10ObjectBaseINS_13PipelineCacheE23VkNonDispatchableHandleIP17VkPipelineCache_TEE6CreateI25VkPipelineCacheCreateInfoJEEE8VkResultPK21VkAllocationCallbacksPKT_PS5_DpT0_(%struct.VkAllocationCallbacks* %2, %struct.VkPipelineCacheCreateInfo* %1, %class.VkNonDispatchableHandle.9* %3) #16
  ret i32 %18
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden i32 @_ZN2vk10ObjectBaseINS_13PipelineCacheE23VkNonDispatchableHandleIP17VkPipelineCache_TEE6CreateI25VkPipelineCacheCreateInfoJEEE8VkResultPK21VkAllocationCallbacksPKT_PS5_DpT0_(%struct.VkAllocationCallbacks*, %struct.VkPipelineCacheCreateInfo*, %class.VkNonDispatchableHandle.9*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.VkNonDispatchableHandle.9, %class.VkNonDispatchableHandle.9* %2, i64 0, i32 0
  store i64 0, i64* %4, align 8
  %5 = tail call i64 @_ZN2vk13PipelineCache29ComputeRequiredAllocationSizeEPK25VkPipelineCacheCreateInfo(%struct.VkPipelineCacheCreateInfo* %1) #12
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %3
  %8 = tail call i8* @_ZN2vk8allocateEmmPK21VkAllocationCallbacks23VkSystemAllocationScope(i64 %5, i64 16, %struct.VkAllocationCallbacks* %0, i32 1) #12
  %9 = icmp eq i8* %8, null
  br i1 %9, label %18, label %10

10:                                               ; preds = %7, %3
  %11 = phi i8* [ %8, %7 ], [ null, %3 ]
  %12 = tail call i8* @_ZN2vk8allocateEmmPK21VkAllocationCallbacks23VkSystemAllocationScope(i64 152, i64 8, %struct.VkAllocationCallbacks* %0, i32 1) #12
  %13 = icmp eq i8* %12, null
  br i1 %13, label %14, label %15

14:                                               ; preds = %10
  tail call void @_ZN2vk10deallocateEPvPK21VkAllocationCallbacks(i8* %11, %struct.VkAllocationCallbacks* %0) #12
  br label %18

15:                                               ; preds = %10
  %16 = bitcast i8* %12 to %"class.vk::PipelineCache"*
  tail call void @_ZN2vk13PipelineCacheC1EPK25VkPipelineCacheCreateInfoPv(%"class.vk::PipelineCache"* nonnull %16, %struct.VkPipelineCacheCreateInfo* %1, i8* %11) #12
  %17 = ptrtoint i8* %12 to i64
  store i64 %17, i64* %4, align 8
  br label %18

18:                                               ; preds = %7, %14, %15
  %19 = phi i32 [ -1, %7 ], [ 0, %15 ], [ -1, %14 ]
  ret i32 %19
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @vkDestroyPipelineCache(%struct.VkDevice_T*, i64, %struct.VkAllocationCallbacks*) local_unnamed_addr #0 {
  %4 = inttoptr i64 %1 to i8*
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([119 x i8], [119 x i8]* @.str.96, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1987, %struct.VkDevice_T* %0, i8* %4, %struct.VkAllocationCallbacks* %2) #12
  %5 = inttoptr i64 %1 to %"class.vk::PipelineCache"*
  %6 = icmp eq i64 %1, 0
  br i1 %6, label %11, label %7

7:                                                ; preds = %3
  tail call void @_ZN2vk13PipelineCache7destroyEPK21VkAllocationCallbacks(%"class.vk::PipelineCache"* nonnull %5, %struct.VkAllocationCallbacks* %2) #12
  %8 = inttoptr i64 %1 to void (%"class.vk::PipelineCache"*)***
  %9 = load void (%"class.vk::PipelineCache"*)**, void (%"class.vk::PipelineCache"*)*** %8, align 8
  %10 = load void (%"class.vk::PipelineCache"*)*, void (%"class.vk::PipelineCache"*)** %9, align 8
  tail call void %10(%"class.vk::PipelineCache"* nonnull %5) #12
  tail call void @_ZN2vk10deallocateEPvPK21VkAllocationCallbacks(i8* %4, %struct.VkAllocationCallbacks* %2) #12
  br label %11

11:                                               ; preds = %3, %7
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @vkGetPipelineCacheData(%struct.VkDevice_T*, i64, i64*, i8*) local_unnamed_addr #0 {
  %5 = inttoptr i64 %1 to i8*
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([115 x i8], [115 x i8]* @.str.97, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1995, %struct.VkDevice_T* %0, i8* %5, i64* %2, i8* %3) #12
  %6 = inttoptr i64 %1 to %"class.vk::PipelineCache"*
  %7 = tail call i32 @_ZN2vk13PipelineCache7getDataEPmPv(%"class.vk::PipelineCache"* %6, i64* %2, i8* %3) #12
  ret i32 %7
}

; Function Attrs: optsize
declare i32 @_ZN2vk13PipelineCache7getDataEPmPv(%"class.vk::PipelineCache"*, i64*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @vkMergePipelineCaches(%struct.VkDevice_T*, i64, i32, %class.VkNonDispatchableHandle.9*) local_unnamed_addr #0 {
  %5 = inttoptr i64 %1 to i8*
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([137 x i8], [137 x i8]* @.str.98, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 2003, %struct.VkDevice_T* %0, i8* %5, i32 %2, %class.VkNonDispatchableHandle.9* %3) #12
  %6 = inttoptr i64 %1 to %"class.vk::PipelineCache"*
  %7 = tail call i32 @_ZN2vk13PipelineCache5mergeEjPK23VkNonDispatchableHandleIP17VkPipelineCache_TE(%"class.vk::PipelineCache"* %6, i32 %2, %class.VkNonDispatchableHandle.9* %3) #12
  ret i32 %7
}

; Function Attrs: optsize
declare i32 @_ZN2vk13PipelineCache5mergeEjPK23VkNonDispatchableHandleIP17VkPipelineCache_TE(%"class.vk::PipelineCache"*, i32, %class.VkNonDispatchableHandle.9*) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @vkCreateGraphicsPipelines(%struct.VkDevice_T*, i64, i32, %struct.VkGraphicsPipelineCreateInfo*, %struct.VkAllocationCallbacks*, %class.VkNonDispatchableHandle.11*) local_unnamed_addr #0 {
  %7 = inttoptr i64 %1 to i8*
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([234 x i8], [234 x i8]* @.str.99, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 2011, %struct.VkDevice_T* %0, i8* %7, i32 %2, %struct.VkGraphicsPipelineCreateInfo* %3, %struct.VkAllocationCallbacks* %4, %class.VkNonDispatchableHandle.11* %5) #12
  %8 = icmp eq i32 %2, 0
  br i1 %8, label %16, label %9

9:                                                ; preds = %6
  %10 = icmp eq %struct.VkDevice_T* %0, null
  %11 = bitcast %struct.VkDevice_T* %0 to %"class.vk::DispatchableObject.872"*
  %12 = getelementptr inbounds %"class.vk::DispatchableObject.872", %"class.vk::DispatchableObject.872"* %11, i64 0, i32 1
  %13 = select i1 %10, %"class.vk::Device"* null, %"class.vk::Device"* %12
  %14 = inttoptr i64 %1 to %"class.vk::PipelineCache"*
  %15 = zext i32 %2 to i64
  br label %18

16:                                               ; preds = %30, %6
  %17 = phi i32 [ 0, %6 ], [ %31, %30 ]
  ret i32 %17

18:                                               ; preds = %30, %9
  %19 = phi i64 [ 0, %9 ], [ %32, %30 ]
  %20 = phi i32 [ 0, %9 ], [ %31, %30 ]
  %21 = getelementptr inbounds %struct.VkGraphicsPipelineCreateInfo, %struct.VkGraphicsPipelineCreateInfo* %3, i64 %19
  %22 = getelementptr inbounds %class.VkNonDispatchableHandle.11, %class.VkNonDispatchableHandle.11* %5, i64 %19
  %23 = tail call i32 @_ZN2vk10ObjectBaseINS_16GraphicsPipelineE23VkNonDispatchableHandleIP12VkPipeline_TEE6CreateI28VkGraphicsPipelineCreateInfoJPNS_6DeviceEEEE8VkResultPK21VkAllocationCallbacksPKT_PS5_DpT0_(%struct.VkAllocationCallbacks* %4, %struct.VkGraphicsPipelineCreateInfo* %21, %class.VkNonDispatchableHandle.11* %22, %"class.vk::Device"* %13) #16
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %18
  %26 = bitcast %class.VkNonDispatchableHandle.11* %22 to %"class.vk::GraphicsPipeline"**
  %27 = load %"class.vk::GraphicsPipeline"*, %"class.vk::GraphicsPipeline"** %26, align 8
  tail call void @_ZN2vk16GraphicsPipeline14compileShadersEPK21VkAllocationCallbacksPK28VkGraphicsPipelineCreateInfoPNS_13PipelineCacheE(%"class.vk::GraphicsPipeline"* %27, %struct.VkAllocationCallbacks* %4, %struct.VkGraphicsPipelineCreateInfo* %21, %"class.vk::PipelineCache"* %14) #12
  br label %30

28:                                               ; preds = %18
  %29 = getelementptr inbounds %class.VkNonDispatchableHandle.11, %class.VkNonDispatchableHandle.11* %22, i64 0, i32 0
  store i64 0, i64* %29, align 8
  br label %30

30:                                               ; preds = %28, %25
  %31 = phi i32 [ %20, %25 ], [ %23, %28 ]
  %32 = add nuw nsw i64 %19, 1
  %33 = icmp eq i64 %32, %15
  br i1 %33, label %16, label %18
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden i32 @_ZN2vk10ObjectBaseINS_16GraphicsPipelineE23VkNonDispatchableHandleIP12VkPipeline_TEE6CreateI28VkGraphicsPipelineCreateInfoJPNS_6DeviceEEEE8VkResultPK21VkAllocationCallbacksPKT_PS5_DpT0_(%struct.VkAllocationCallbacks*, %struct.VkGraphicsPipelineCreateInfo*, %class.VkNonDispatchableHandle.11*, %"class.vk::Device"*) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %class.VkNonDispatchableHandle.11, %class.VkNonDispatchableHandle.11* %2, i64 0, i32 0
  store i64 0, i64* %5, align 8
  %6 = tail call i64 @_ZN2vk16GraphicsPipeline29ComputeRequiredAllocationSizeEPK28VkGraphicsPipelineCreateInfo(%struct.VkGraphicsPipelineCreateInfo* %1) #12
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %4
  %9 = tail call i8* @_ZN2vk8allocateEmmPK21VkAllocationCallbacks23VkSystemAllocationScope(i64 %6, i64 16, %struct.VkAllocationCallbacks* %0, i32 1) #12
  %10 = icmp eq i8* %9, null
  br i1 %10, label %19, label %11

11:                                               ; preds = %8, %4
  %12 = phi i8* [ %9, %8 ], [ null, %4 ]
  %13 = tail call i8* @_ZN2vk8allocateEmmPK21VkAllocationCallbacks23VkSystemAllocationScope(i64 2048, i64 16, %struct.VkAllocationCallbacks* %0, i32 1) #12
  %14 = icmp eq i8* %13, null
  br i1 %14, label %15, label %16

15:                                               ; preds = %11
  tail call void @_ZN2vk10deallocateEPvPK21VkAllocationCallbacks(i8* %12, %struct.VkAllocationCallbacks* %0) #12
  br label %19

16:                                               ; preds = %11
  %17 = bitcast i8* %13 to %"class.vk::GraphicsPipeline"*
  tail call void @_ZN2vk16GraphicsPipelineC1EPK28VkGraphicsPipelineCreateInfoPvPNS_6DeviceE(%"class.vk::GraphicsPipeline"* nonnull %17, %struct.VkGraphicsPipelineCreateInfo* %1, i8* %12, %"class.vk::Device"* %3) #12
  %18 = ptrtoint i8* %13 to i64
  store i64 %18, i64* %5, align 8
  br label %19

19:                                               ; preds = %8, %15, %16
  %20 = phi i32 [ -1, %8 ], [ 0, %16 ], [ -1, %15 ]
  ret i32 %20
}

; Function Attrs: optsize
declare void @_ZN2vk16GraphicsPipeline14compileShadersEPK21VkAllocationCallbacksPK28VkGraphicsPipelineCreateInfoPNS_13PipelineCacheE(%"class.vk::GraphicsPipeline"*, %struct.VkAllocationCallbacks*, %struct.VkGraphicsPipelineCreateInfo*, %"class.vk::PipelineCache"*) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @vkCreateComputePipelines(%struct.VkDevice_T*, i64, i32, %struct.VkComputePipelineCreateInfo*, %struct.VkAllocationCallbacks*, %class.VkNonDispatchableHandle.11*) local_unnamed_addr #0 {
  %7 = inttoptr i64 %1 to i8*
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([233 x i8], [233 x i8]* @.str.100, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 2043, %struct.VkDevice_T* %0, i8* %7, i32 %2, %struct.VkComputePipelineCreateInfo* %3, %struct.VkAllocationCallbacks* %4, %class.VkNonDispatchableHandle.11* %5) #12
  %8 = icmp eq i32 %2, 0
  br i1 %8, label %16, label %9

9:                                                ; preds = %6
  %10 = icmp eq %struct.VkDevice_T* %0, null
  %11 = bitcast %struct.VkDevice_T* %0 to %"class.vk::DispatchableObject.872"*
  %12 = getelementptr inbounds %"class.vk::DispatchableObject.872", %"class.vk::DispatchableObject.872"* %11, i64 0, i32 1
  %13 = select i1 %10, %"class.vk::Device"* null, %"class.vk::Device"* %12
  %14 = inttoptr i64 %1 to %"class.vk::PipelineCache"*
  %15 = zext i32 %2 to i64
  br label %18

16:                                               ; preds = %30, %6
  %17 = phi i32 [ 0, %6 ], [ %31, %30 ]
  ret i32 %17

18:                                               ; preds = %30, %9
  %19 = phi i64 [ 0, %9 ], [ %32, %30 ]
  %20 = phi i32 [ 0, %9 ], [ %31, %30 ]
  %21 = getelementptr inbounds %struct.VkComputePipelineCreateInfo, %struct.VkComputePipelineCreateInfo* %3, i64 %19
  %22 = getelementptr inbounds %class.VkNonDispatchableHandle.11, %class.VkNonDispatchableHandle.11* %5, i64 %19
  %23 = tail call i32 @_ZN2vk10ObjectBaseINS_15ComputePipelineE23VkNonDispatchableHandleIP12VkPipeline_TEE6CreateI27VkComputePipelineCreateInfoJPNS_6DeviceEEEE8VkResultPK21VkAllocationCallbacksPKT_PS5_DpT0_(%struct.VkAllocationCallbacks* %4, %struct.VkComputePipelineCreateInfo* %21, %class.VkNonDispatchableHandle.11* %22, %"class.vk::Device"* %13) #16
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %18
  %26 = bitcast %class.VkNonDispatchableHandle.11* %22 to %"class.vk::ComputePipeline"**
  %27 = load %"class.vk::ComputePipeline"*, %"class.vk::ComputePipeline"** %26, align 8
  tail call void @_ZN2vk15ComputePipeline14compileShadersEPK21VkAllocationCallbacksPK27VkComputePipelineCreateInfoPNS_13PipelineCacheE(%"class.vk::ComputePipeline"* %27, %struct.VkAllocationCallbacks* %4, %struct.VkComputePipelineCreateInfo* %21, %"class.vk::PipelineCache"* %14) #12
  br label %30

28:                                               ; preds = %18
  %29 = getelementptr inbounds %class.VkNonDispatchableHandle.11, %class.VkNonDispatchableHandle.11* %22, i64 0, i32 0
  store i64 0, i64* %29, align 8
  br label %30

30:                                               ; preds = %28, %25
  %31 = phi i32 [ %20, %25 ], [ %23, %28 ]
  %32 = add nuw nsw i64 %19, 1
  %33 = icmp eq i64 %32, %15
  br i1 %33, label %16, label %18
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden i32 @_ZN2vk10ObjectBaseINS_15ComputePipelineE23VkNonDispatchableHandleIP12VkPipeline_TEE6CreateI27VkComputePipelineCreateInfoJPNS_6DeviceEEEE8VkResultPK21VkAllocationCallbacksPKT_PS5_DpT0_(%struct.VkAllocationCallbacks*, %struct.VkComputePipelineCreateInfo*, %class.VkNonDispatchableHandle.11*, %"class.vk::Device"*) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %class.VkNonDispatchableHandle.11, %class.VkNonDispatchableHandle.11* %2, i64 0, i32 0
  store i64 0, i64* %5, align 8
  %6 = tail call i64 @_ZN2vk15ComputePipeline29ComputeRequiredAllocationSizeEPK27VkComputePipelineCreateInfo(%struct.VkComputePipelineCreateInfo* %1) #12
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %4
  %9 = tail call i8* @_ZN2vk8allocateEmmPK21VkAllocationCallbacks23VkSystemAllocationScope(i64 %6, i64 16, %struct.VkAllocationCallbacks* %0, i32 1) #12
  %10 = icmp eq i8* %9, null
  br i1 %10, label %19, label %11

11:                                               ; preds = %8, %4
  %12 = phi i8* [ %9, %8 ], [ null, %4 ]
  %13 = tail call i8* @_ZN2vk8allocateEmmPK21VkAllocationCallbacks23VkSystemAllocationScope(i64 64, i64 8, %struct.VkAllocationCallbacks* %0, i32 1) #12
  %14 = icmp eq i8* %13, null
  br i1 %14, label %15, label %16

15:                                               ; preds = %11
  tail call void @_ZN2vk10deallocateEPvPK21VkAllocationCallbacks(i8* %12, %struct.VkAllocationCallbacks* %0) #12
  br label %19

16:                                               ; preds = %11
  %17 = bitcast i8* %13 to %"class.vk::ComputePipeline"*
  tail call void @_ZN2vk15ComputePipelineC1EPK27VkComputePipelineCreateInfoPvPNS_6DeviceE(%"class.vk::ComputePipeline"* nonnull %17, %struct.VkComputePipelineCreateInfo* %1, i8* %12, %"class.vk::Device"* %3) #12
  %18 = ptrtoint i8* %13 to i64
  store i64 %18, i64* %5, align 8
  br label %19

19:                                               ; preds = %8, %15, %16
  %20 = phi i32 [ -1, %8 ], [ 0, %16 ], [ -1, %15 ]
  ret i32 %20
}

; Function Attrs: optsize
declare void @_ZN2vk15ComputePipeline14compileShadersEPK21VkAllocationCallbacksPK27VkComputePipelineCreateInfoPNS_13PipelineCacheE(%"class.vk::ComputePipeline"*, %struct.VkAllocationCallbacks*, %struct.VkComputePipelineCreateInfo*, %"class.vk::PipelineCache"*) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @vkDestroyPipeline(%struct.VkDevice_T*, i64, %struct.VkAllocationCallbacks*) local_unnamed_addr #0 {
  %4 = inttoptr i64 %1 to i8*
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([109 x i8], [109 x i8]* @.str.101, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 2075, %struct.VkDevice_T* %0, i8* %4, %struct.VkAllocationCallbacks* %2) #12
  %5 = inttoptr i64 %1 to %"class.vk::Pipeline"*
  %6 = icmp eq i64 %1, 0
  br i1 %6, label %11, label %7

7:                                                ; preds = %3
  tail call void @_ZN2vk8Pipeline7destroyEPK21VkAllocationCallbacks(%"class.vk::Pipeline"* nonnull %5, %struct.VkAllocationCallbacks* %2) #12
  %8 = inttoptr i64 %1 to void (%"class.vk::Pipeline"*)***
  %9 = load void (%"class.vk::Pipeline"*)**, void (%"class.vk::Pipeline"*)*** %8, align 8
  %10 = load void (%"class.vk::Pipeline"*)*, void (%"class.vk::Pipeline"*)** %9, align 8
  tail call void %10(%"class.vk::Pipeline"* nonnull %5) #12
  tail call void @_ZN2vk10deallocateEPvPK21VkAllocationCallbacks(i8* %4, %struct.VkAllocationCallbacks* %2) #12
  br label %11

11:                                               ; preds = %3, %7
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @vkCreatePipelineLayout(%struct.VkDevice_T*, %struct.VkPipelineLayoutCreateInfo*, %struct.VkAllocationCallbacks*, %class.VkNonDispatchableHandle.10*) local_unnamed_addr #0 {
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([175 x i8], [175 x i8]* @.str.102, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 2083, %struct.VkDevice_T* %0, %struct.VkPipelineLayoutCreateInfo* %1, %struct.VkAllocationCallbacks* %2, %class.VkNonDispatchableHandle.10* %3) #12
  %5 = getelementptr inbounds %struct.VkPipelineLayoutCreateInfo, %struct.VkPipelineLayoutCreateInfo* %1, i64 0, i32 2
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %9, label %8

8:                                                ; preds = %4
  tail call void (i8*, ...) @_ZN2sw4warnEPKcz(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 2088, i32 %6) #12
  br label %9

9:                                                ; preds = %4, %8
  %10 = getelementptr inbounds %struct.VkPipelineLayoutCreateInfo, %struct.VkPipelineLayoutCreateInfo* %1, i64 0, i32 1
  %11 = bitcast i8** %10 to %struct.VkBaseInStructure**
  br label %12

12:                                               ; preds = %12, %9
  %13 = phi %struct.VkBaseInStructure** [ %11, %9 ], [ %16, %12 ]
  %14 = load %struct.VkBaseInStructure*, %struct.VkBaseInStructure** %13, align 8
  %15 = icmp eq %struct.VkBaseInStructure* %14, null
  %16 = getelementptr inbounds %struct.VkBaseInStructure, %struct.VkBaseInStructure* %14, i64 0, i32 1
  br i1 %15, label %17, label %12

17:                                               ; preds = %12
  %18 = tail call i32 @_ZN2vk10ObjectBaseINS_14PipelineLayoutE23VkNonDispatchableHandleIP18VkPipelineLayout_TEE6CreateI26VkPipelineLayoutCreateInfoJEEE8VkResultPK21VkAllocationCallbacksPKT_PS5_DpT0_(%struct.VkAllocationCallbacks* %2, %struct.VkPipelineLayoutCreateInfo* %1, %class.VkNonDispatchableHandle.10* %3) #16
  ret i32 %18
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden i32 @_ZN2vk10ObjectBaseINS_14PipelineLayoutE23VkNonDispatchableHandleIP18VkPipelineLayout_TEE6CreateI26VkPipelineLayoutCreateInfoJEEE8VkResultPK21VkAllocationCallbacksPKT_PS5_DpT0_(%struct.VkAllocationCallbacks*, %struct.VkPipelineLayoutCreateInfo*, %class.VkNonDispatchableHandle.10*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.VkNonDispatchableHandle.10, %class.VkNonDispatchableHandle.10* %2, i64 0, i32 0
  store i64 0, i64* %4, align 8
  %5 = tail call i64 @_ZN2vk14PipelineLayout29ComputeRequiredAllocationSizeEPK26VkPipelineLayoutCreateInfo(%struct.VkPipelineLayoutCreateInfo* %1) #12
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %3
  %8 = tail call i8* @_ZN2vk8allocateEmmPK21VkAllocationCallbacks23VkSystemAllocationScope(i64 %5, i64 16, %struct.VkAllocationCallbacks* %0, i32 1) #12
  %9 = icmp eq i8* %8, null
  br i1 %9, label %18, label %10

10:                                               ; preds = %7, %3
  %11 = phi i8* [ %8, %7 ], [ null, %3 ]
  %12 = tail call i8* @_ZN2vk8allocateEmmPK21VkAllocationCallbacks23VkSystemAllocationScope(i64 96, i64 8, %struct.VkAllocationCallbacks* %0, i32 1) #12
  %13 = icmp eq i8* %12, null
  br i1 %13, label %14, label %15

14:                                               ; preds = %10
  tail call void @_ZN2vk10deallocateEPvPK21VkAllocationCallbacks(i8* %11, %struct.VkAllocationCallbacks* %0) #12
  br label %18

15:                                               ; preds = %10
  %16 = bitcast i8* %12 to %"class.vk::PipelineLayout"*
  tail call void @_ZN2vk14PipelineLayoutC1EPK26VkPipelineLayoutCreateInfoPv(%"class.vk::PipelineLayout"* nonnull %16, %struct.VkPipelineLayoutCreateInfo* %1, i8* %11) #12
  %17 = ptrtoint i8* %12 to i64
  store i64 %17, i64* %4, align 8
  br label %18

18:                                               ; preds = %7, %14, %15
  %19 = phi i32 [ -1, %7 ], [ 0, %15 ], [ -1, %14 ]
  ret i32 %19
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @vkDestroyPipelineLayout(%struct.VkDevice_T*, i64, %struct.VkAllocationCallbacks*) local_unnamed_addr #0 {
  %4 = inttoptr i64 %1 to i8*
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([121 x i8], [121 x i8]* @.str.103, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 2104, %struct.VkDevice_T* %0, i8* %4, %struct.VkAllocationCallbacks* %2) #12
  %5 = icmp eq i64 %1, 0
  br i1 %5, label %10, label %6

6:                                                ; preds = %3
  %7 = inttoptr i64 %1 to %"class.vk::PipelineLayout"*
  %8 = tail call zeroext i1 @_ZN2vk14PipelineLayout7releaseEPK21VkAllocationCallbacks(%"class.vk::PipelineLayout"* nonnull %7, %struct.VkAllocationCallbacks* %2) #12
  br i1 %8, label %9, label %10

9:                                                ; preds = %6
  tail call void @_ZN2vk10deallocateEPvPK21VkAllocationCallbacks(i8* %4, %struct.VkAllocationCallbacks* %2) #12
  br label %10

10:                                               ; preds = %3, %6, %9
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @vkCreateSampler(%struct.VkDevice_T*, %struct.VkSamplerCreateInfo*, %struct.VkAllocationCallbacks*, %class.VkNonDispatchableHandle.14*) local_unnamed_addr #0 {
  %5 = alloca %"struct.vk::SamplerState", align 4
  %6 = alloca %"struct.vk::SamplerState", align 4
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([154 x i8], [154 x i8]* @.str.104, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 2112, %struct.VkDevice_T* %0, %struct.VkSamplerCreateInfo* %1, %struct.VkAllocationCallbacks* %2, %class.VkNonDispatchableHandle.14* %3) #12
  %7 = getelementptr inbounds %struct.VkSamplerCreateInfo, %struct.VkSamplerCreateInfo* %1, i64 0, i32 2
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %11, label %10

10:                                               ; preds = %4
  tail call void (i8*, ...) @_ZN2sw4warnEPKcz(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 2116, i32 %8) #12
  br label %11

11:                                               ; preds = %4, %10
  %12 = getelementptr inbounds %struct.VkSamplerCreateInfo, %struct.VkSamplerCreateInfo* %1, i64 0, i32 1
  %13 = bitcast i8** %12 to %struct.VkBaseInStructure**
  %14 = load %struct.VkBaseInStructure*, %struct.VkBaseInStructure** %13, align 8
  %15 = icmp eq %struct.VkBaseInStructure* %14, null
  br i1 %15, label %35, label %16

16:                                               ; preds = %11, %29
  %17 = phi %struct.VkBaseInStructure* [ %33, %29 ], [ %14, %11 ]
  %18 = phi %"class.vk::SamplerYcbcrConversion"* [ %31, %29 ], [ null, %11 ]
  %19 = phi i32 [ %30, %29 ], [ 0, %11 ]
  %20 = getelementptr inbounds %struct.VkBaseInStructure, %struct.VkBaseInStructure* %17, i64 0, i32 0
  %21 = load i32, i32* %20, align 8
  switch i32 %21, label %29 [
    i32 1000156001, label %22
    i32 1000264000, label %26
  ]

22:                                               ; preds = %16
  %23 = getelementptr inbounds %struct.VkBaseInStructure, %struct.VkBaseInStructure* %17, i64 1
  %24 = bitcast %struct.VkBaseInStructure* %23 to %"class.vk::SamplerYcbcrConversion"**
  %25 = load %"class.vk::SamplerYcbcrConversion"*, %"class.vk::SamplerYcbcrConversion"** %24, align 8
  br label %29

26:                                               ; preds = %16
  %27 = getelementptr inbounds %struct.VkBaseInStructure, %struct.VkBaseInStructure* %17, i64 1, i32 0
  %28 = load i32, i32* %27, align 8
  br label %29

29:                                               ; preds = %16, %26, %22
  %30 = phi i32 [ %19, %16 ], [ %28, %26 ], [ %19, %22 ]
  %31 = phi %"class.vk::SamplerYcbcrConversion"* [ %18, %16 ], [ %18, %26 ], [ %25, %22 ]
  %32 = getelementptr inbounds %struct.VkBaseInStructure, %struct.VkBaseInStructure* %17, i64 0, i32 1
  %33 = load %struct.VkBaseInStructure*, %struct.VkBaseInStructure** %32, align 8
  %34 = icmp eq %struct.VkBaseInStructure* %33, null
  br i1 %34, label %35, label %16

35:                                               ; preds = %29, %11
  %36 = phi i32 [ 0, %11 ], [ %30, %29 ]
  %37 = phi %"class.vk::SamplerYcbcrConversion"* [ null, %11 ], [ %31, %29 ]
  %38 = bitcast %"struct.vk::SamplerState"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %38) #13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %38, i8* align 4 bitcast (%"struct.vk::SamplerState"* @__const.vkCreateSampler.samplerState to i8*), i64 72, i1 false)
  call void @_ZN2vk12SamplerStateC1EPK19VkSamplerCreateInfoPKNS_22SamplerYcbcrConversionE37VkSamplerFilteringPrecisionModeGOOGLE(%"struct.vk::SamplerState"* nonnull %5, %struct.VkSamplerCreateInfo* %1, %"class.vk::SamplerYcbcrConversion"* %37, i32 %36) #12
  %39 = icmp eq %struct.VkDevice_T* %0, null
  %40 = bitcast %struct.VkDevice_T* %0 to %"class.vk::DispatchableObject.872"*
  %41 = getelementptr inbounds %"class.vk::DispatchableObject.872", %"class.vk::DispatchableObject.872"* %40, i64 0, i32 1
  %42 = select i1 %39, %"class.vk::Device"* null, %"class.vk::Device"* %41
  %43 = call i32 @_ZN2vk6Device12indexSamplerERKNS_12SamplerStateE(%"class.vk::Device"* %42, %"struct.vk::SamplerState"* nonnull dereferenceable(72) %5) #12
  %44 = bitcast %"struct.vk::SamplerState"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %44, i8* nonnull align 4 %38, i64 72, i1 false) #13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %44, i8* nonnull align 4 %38, i64 70, i1 false) #13
  %45 = call i32 @_ZN2vk10ObjectBaseINS_7SamplerE23VkNonDispatchableHandleIP11VkSampler_TEE6CreateI19VkSamplerCreateInfoJNS_12SamplerStateEjEEE8VkResultPK21VkAllocationCallbacksPKT_PS5_DpT0_(%struct.VkAllocationCallbacks* %2, %struct.VkSamplerCreateInfo* %1, %class.VkNonDispatchableHandle.14* %3, %"struct.vk::SamplerState"* nonnull %6, i32 %43) #16
  %46 = bitcast %class.VkNonDispatchableHandle.14* %3 to i8**
  %47 = load i8*, i8** %46, align 8
  %48 = icmp eq i8* %47, null
  br i1 %48, label %49, label %50

49:                                               ; preds = %35
  call void @_ZN2vk6Device13removeSamplerERKNS_12SamplerStateE(%"class.vk::Device"* %42, %"struct.vk::SamplerState"* nonnull dereferenceable(72) %5) #12
  br label %50

50:                                               ; preds = %49, %35
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %38) #13
  ret i32 %45
}

; Function Attrs: optsize
declare void @_ZN2vk12SamplerStateC1EPK19VkSamplerCreateInfoPKNS_22SamplerYcbcrConversionE37VkSamplerFilteringPrecisionModeGOOGLE(%"struct.vk::SamplerState"*, %struct.VkSamplerCreateInfo*, %"class.vk::SamplerYcbcrConversion"*, i32) unnamed_addr #1

; Function Attrs: optsize
declare i32 @_ZN2vk6Device12indexSamplerERKNS_12SamplerStateE(%"class.vk::Device"*, %"struct.vk::SamplerState"* dereferenceable(72)) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden i32 @_ZN2vk10ObjectBaseINS_7SamplerE23VkNonDispatchableHandleIP11VkSampler_TEE6CreateI19VkSamplerCreateInfoJNS_12SamplerStateEjEEE8VkResultPK21VkAllocationCallbacksPKT_PS5_DpT0_(%struct.VkAllocationCallbacks*, %struct.VkSamplerCreateInfo*, %class.VkNonDispatchableHandle.14*, %"struct.vk::SamplerState"*, i32) local_unnamed_addr #0 comdat align 2 {
  %6 = alloca %"struct.vk::SamplerState", align 4
  %7 = bitcast %"struct.vk::SamplerState"* %6 to i8*
  %8 = bitcast %"struct.vk::SamplerState"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %7, i8* align 1 %8, i64 72, i1 false) #13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %7, i8* align 4 %8, i64 70, i1 false) #13
  %9 = getelementptr inbounds %class.VkNonDispatchableHandle.14, %class.VkNonDispatchableHandle.14* %2, i64 0, i32 0
  store i64 0, i64* %9, align 8
  %10 = tail call i8* @_ZN2vk8allocateEmmPK21VkAllocationCallbacks23VkSystemAllocationScope(i64 76, i64 4, %struct.VkAllocationCallbacks* %0, i32 1) #12
  %11 = icmp eq i8* %10, null
  br i1 %11, label %12, label %13

12:                                               ; preds = %5
  tail call void @_ZN2vk10deallocateEPvPK21VkAllocationCallbacks(i8* null, %struct.VkAllocationCallbacks* %0) #12
  br label %16

13:                                               ; preds = %5
  %14 = bitcast i8* %10 to %"class.vk::Sampler"*
  call void @_ZN2vk7SamplerC1EPK19VkSamplerCreateInfoPvRKNS_12SamplerStateEj(%"class.vk::Sampler"* nonnull %14, %struct.VkSamplerCreateInfo* %1, i8* null, %"struct.vk::SamplerState"* nonnull dereferenceable(72) %6, i32 %4) #12
  %15 = ptrtoint i8* %10 to i64
  store i64 %15, i64* %9, align 8
  br label %16

16:                                               ; preds = %12, %13
  %17 = phi i32 [ 0, %13 ], [ -1, %12 ]
  ret i32 %17
}

; Function Attrs: optsize
declare void @_ZN2vk6Device13removeSamplerERKNS_12SamplerStateE(%"class.vk::Device"*, %"struct.vk::SamplerState"* dereferenceable(72)) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @vkDestroySampler(%struct.VkDevice_T*, i64, %struct.VkAllocationCallbacks*) local_unnamed_addr #0 {
  %4 = inttoptr i64 %1 to i8*
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([107 x i8], [107 x i8]* @.str.105, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 2167, %struct.VkDevice_T* %0, i8* %4, %struct.VkAllocationCallbacks* %2) #12
  %5 = icmp eq i64 %1, 0
  br i1 %5, label %12, label %6

6:                                                ; preds = %3
  %7 = icmp eq %struct.VkDevice_T* %0, null
  %8 = bitcast %struct.VkDevice_T* %0 to %"class.vk::DispatchableObject.872"*
  %9 = getelementptr inbounds %"class.vk::DispatchableObject.872", %"class.vk::DispatchableObject.872"* %8, i64 0, i32 1
  %10 = select i1 %7, %"class.vk::Device"* null, %"class.vk::Device"* %9
  %11 = inttoptr i64 %1 to %"struct.vk::SamplerState"*
  tail call void @_ZN2vk6Device13removeSamplerERKNS_12SamplerStateE(%"class.vk::Device"* %10, %"struct.vk::SamplerState"* dereferenceable(72) %11) #12
  tail call void @_ZN2vk10deallocateEPvPK21VkAllocationCallbacks(i8* nonnull %4, %struct.VkAllocationCallbacks* %2) #12
  br label %12

12:                                               ; preds = %6, %3
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @vkCreateDescriptorSetLayout(%struct.VkDevice_T*, %struct.VkDescriptorSetLayoutCreateInfo*, %struct.VkAllocationCallbacks*, %class.VkNonDispatchableHandle.13*) local_unnamed_addr #0 {
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([180 x i8], [180 x i8]* @.str.106, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 2180, %struct.VkDevice_T* %0, %struct.VkDescriptorSetLayoutCreateInfo* %1, %struct.VkAllocationCallbacks* %2, %class.VkNonDispatchableHandle.13* %3) #12
  %5 = getelementptr inbounds %struct.VkDescriptorSetLayoutCreateInfo, %struct.VkDescriptorSetLayoutCreateInfo* %1, i64 0, i32 1
  %6 = bitcast i8** %5 to %struct.VkBaseInStructure**
  br label %7

7:                                                ; preds = %7, %4
  %8 = phi %struct.VkBaseInStructure** [ %6, %4 ], [ %11, %7 ]
  %9 = load %struct.VkBaseInStructure*, %struct.VkBaseInStructure** %8, align 8
  %10 = icmp eq %struct.VkBaseInStructure* %9, null
  %11 = getelementptr inbounds %struct.VkBaseInStructure, %struct.VkBaseInStructure* %9, i64 0, i32 1
  br i1 %10, label %12, label %7

12:                                               ; preds = %7
  %13 = tail call i32 @_ZN2vk10ObjectBaseINS_19DescriptorSetLayoutE23VkNonDispatchableHandleIP23VkDescriptorSetLayout_TEE6CreateI31VkDescriptorSetLayoutCreateInfoJEEE8VkResultPK21VkAllocationCallbacksPKT_PS5_DpT0_(%struct.VkAllocationCallbacks* %2, %struct.VkDescriptorSetLayoutCreateInfo* %1, %class.VkNonDispatchableHandle.13* %3) #16
  ret i32 %13
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden i32 @_ZN2vk10ObjectBaseINS_19DescriptorSetLayoutE23VkNonDispatchableHandleIP23VkDescriptorSetLayout_TEE6CreateI31VkDescriptorSetLayoutCreateInfoJEEE8VkResultPK21VkAllocationCallbacksPKT_PS5_DpT0_(%struct.VkAllocationCallbacks*, %struct.VkDescriptorSetLayoutCreateInfo*, %class.VkNonDispatchableHandle.13*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.VkNonDispatchableHandle.13, %class.VkNonDispatchableHandle.13* %2, i64 0, i32 0
  store i64 0, i64* %4, align 8
  %5 = tail call i64 @_ZN2vk19DescriptorSetLayout29ComputeRequiredAllocationSizeEPK31VkDescriptorSetLayoutCreateInfo(%struct.VkDescriptorSetLayoutCreateInfo* %1) #12
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %3
  %8 = tail call i8* @_ZN2vk8allocateEmmPK21VkAllocationCallbacks23VkSystemAllocationScope(i64 %5, i64 16, %struct.VkAllocationCallbacks* %0, i32 1) #12
  %9 = icmp eq i8* %8, null
  br i1 %9, label %18, label %10

10:                                               ; preds = %7, %3
  %11 = phi i8* [ %8, %7 ], [ null, %3 ]
  %12 = tail call i8* @_ZN2vk8allocateEmmPK21VkAllocationCallbacks23VkSystemAllocationScope(i64 16, i64 8, %struct.VkAllocationCallbacks* %0, i32 1) #12
  %13 = icmp eq i8* %12, null
  br i1 %13, label %14, label %15

14:                                               ; preds = %10
  tail call void @_ZN2vk10deallocateEPvPK21VkAllocationCallbacks(i8* %11, %struct.VkAllocationCallbacks* %0) #12
  br label %18

15:                                               ; preds = %10
  %16 = bitcast i8* %12 to %"class.vk::DescriptorSetLayout"*
  tail call void @_ZN2vk19DescriptorSetLayoutC1EPK31VkDescriptorSetLayoutCreateInfoPv(%"class.vk::DescriptorSetLayout"* nonnull %16, %struct.VkDescriptorSetLayoutCreateInfo* %1, i8* %11) #12
  %17 = ptrtoint i8* %12 to i64
  store i64 %17, i64* %4, align 8
  br label %18

18:                                               ; preds = %7, %14, %15
  %19 = phi i32 [ -1, %7 ], [ 0, %15 ], [ -1, %14 ]
  ret i32 %19
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @vkDestroyDescriptorSetLayout(%struct.VkDevice_T*, i64, %struct.VkAllocationCallbacks*) local_unnamed_addr #0 {
  %4 = inttoptr i64 %1 to i8*
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([131 x i8], [131 x i8]* @.str.107, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 2205, %struct.VkDevice_T* %0, i8* %4, %struct.VkAllocationCallbacks* %2) #12
  %5 = icmp eq i64 %1, 0
  br i1 %5, label %8, label %6

6:                                                ; preds = %3
  %7 = inttoptr i64 %1 to %"class.vk::DescriptorSetLayout"*
  tail call void @_ZN2vk19DescriptorSetLayout7destroyEPK21VkAllocationCallbacks(%"class.vk::DescriptorSetLayout"* nonnull %7, %struct.VkAllocationCallbacks* %2) #12
  tail call void @_ZN2vk10deallocateEPvPK21VkAllocationCallbacks(i8* %4, %struct.VkAllocationCallbacks* %2) #12
  br label %8

8:                                                ; preds = %3, %6
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @vkCreateDescriptorPool(%struct.VkDevice_T*, %struct.VkDescriptorPoolCreateInfo*, %struct.VkAllocationCallbacks*, %class.VkNonDispatchableHandle.16*) local_unnamed_addr #0 {
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([175 x i8], [175 x i8]* @.str.108, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 2213, %struct.VkDevice_T* %0, %struct.VkDescriptorPoolCreateInfo* %1, %struct.VkAllocationCallbacks* %2, %class.VkNonDispatchableHandle.16* %3) #12
  %5 = getelementptr inbounds %struct.VkDescriptorPoolCreateInfo, %struct.VkDescriptorPoolCreateInfo* %1, i64 0, i32 1
  %6 = bitcast i8** %5 to %struct.VkBaseInStructure**
  br label %7

7:                                                ; preds = %7, %4
  %8 = phi %struct.VkBaseInStructure** [ %6, %4 ], [ %11, %7 ]
  %9 = load %struct.VkBaseInStructure*, %struct.VkBaseInStructure** %8, align 8
  %10 = icmp eq %struct.VkBaseInStructure* %9, null
  %11 = getelementptr inbounds %struct.VkBaseInStructure, %struct.VkBaseInStructure* %9, i64 0, i32 1
  br i1 %10, label %12, label %7

12:                                               ; preds = %7
  %13 = tail call i32 @_ZN2vk10ObjectBaseINS_14DescriptorPoolE23VkNonDispatchableHandleIP18VkDescriptorPool_TEE6CreateI26VkDescriptorPoolCreateInfoJEEE8VkResultPK21VkAllocationCallbacksPKT_PS5_DpT0_(%struct.VkAllocationCallbacks* %2, %struct.VkDescriptorPoolCreateInfo* %1, %class.VkNonDispatchableHandle.16* %3) #16
  ret i32 %13
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden i32 @_ZN2vk10ObjectBaseINS_14DescriptorPoolE23VkNonDispatchableHandleIP18VkDescriptorPool_TEE6CreateI26VkDescriptorPoolCreateInfoJEEE8VkResultPK21VkAllocationCallbacksPKT_PS5_DpT0_(%struct.VkAllocationCallbacks*, %struct.VkDescriptorPoolCreateInfo*, %class.VkNonDispatchableHandle.16*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.VkNonDispatchableHandle.16, %class.VkNonDispatchableHandle.16* %2, i64 0, i32 0
  store i64 0, i64* %4, align 8
  %5 = tail call i64 @_ZN2vk14DescriptorPool29ComputeRequiredAllocationSizeEPK26VkDescriptorPoolCreateInfo(%struct.VkDescriptorPoolCreateInfo* %1) #12
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %3
  %8 = tail call i8* @_ZN2vk8allocateEmmPK21VkAllocationCallbacks23VkSystemAllocationScope(i64 %5, i64 16, %struct.VkAllocationCallbacks* %0, i32 1) #12
  %9 = icmp eq i8* %8, null
  br i1 %9, label %18, label %10

10:                                               ; preds = %7, %3
  %11 = phi i8* [ %8, %7 ], [ null, %3 ]
  %12 = tail call i8* @_ZN2vk8allocateEmmPK21VkAllocationCallbacks23VkSystemAllocationScope(i64 40, i64 8, %struct.VkAllocationCallbacks* %0, i32 1) #12
  %13 = icmp eq i8* %12, null
  br i1 %13, label %14, label %15

14:                                               ; preds = %10
  tail call void @_ZN2vk10deallocateEPvPK21VkAllocationCallbacks(i8* %11, %struct.VkAllocationCallbacks* %0) #12
  br label %18

15:                                               ; preds = %10
  %16 = bitcast i8* %12 to %"class.vk::DescriptorPool"*
  tail call void @_ZN2vk14DescriptorPoolC1EPK26VkDescriptorPoolCreateInfoPv(%"class.vk::DescriptorPool"* nonnull %16, %struct.VkDescriptorPoolCreateInfo* %1, i8* %11) #12
  %17 = ptrtoint i8* %12 to i64
  store i64 %17, i64* %4, align 8
  br label %18

18:                                               ; preds = %7, %14, %15
  %19 = phi i32 [ -1, %7 ], [ 0, %15 ], [ -1, %14 ]
  ret i32 %19
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @vkDestroyDescriptorPool(%struct.VkDevice_T*, i64, %struct.VkAllocationCallbacks*) local_unnamed_addr #0 {
  %4 = inttoptr i64 %1 to i8*
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([121 x i8], [121 x i8]* @.str.109, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 2228, %struct.VkDevice_T* %0, i8* %4, %struct.VkAllocationCallbacks* %2) #12
  %5 = inttoptr i64 %1 to %"class.vk::DescriptorPool"*
  %6 = icmp eq i64 %1, 0
  br i1 %6, label %12, label %7

7:                                                ; preds = %3
  tail call void @_ZN2vk14DescriptorPool7destroyEPK21VkAllocationCallbacks(%"class.vk::DescriptorPool"* nonnull %5, %struct.VkAllocationCallbacks* %2) #12
  %8 = getelementptr inbounds %"class.vk::DescriptorPool", %"class.vk::DescriptorPool"* %5, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.vk::DescriptorPool", %"class.vk::DescriptorPool"* %5, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %10 = bitcast %"class.std::__1::__tree_end_node"* %9 to %"class.std::__1::__tree_node"**
  %11 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %10, align 8
  tail call void @_ZNSt3__16__treeIN2vk14DescriptorPool4NodeENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree.823"* %8, %"class.std::__1::__tree_node"* %11) #12
  tail call void @_ZN2vk10deallocateEPvPK21VkAllocationCallbacks(i8* %4, %struct.VkAllocationCallbacks* %2) #12
  br label %12

12:                                               ; preds = %3, %7
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @vkResetDescriptorPool(%struct.VkDevice_T*, i64, i32) local_unnamed_addr #0 {
  %4 = inttoptr i64 %1 to i8*
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([116 x i8], [116 x i8]* @.str.110, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 2236, %struct.VkDevice_T* %0, i8* %4, i32 %2) #12
  %5 = icmp eq i32 %2, 0
  br i1 %5, label %7, label %6

6:                                                ; preds = %3
  tail call void (i8*, ...) @_ZN2sw4warnEPKcz(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.46, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 2241, i32 %2) #12
  br label %7

7:                                                ; preds = %3, %6
  %8 = inttoptr i64 %1 to %"class.vk::DescriptorPool"*
  %9 = tail call i32 @_ZN2vk14DescriptorPool5resetEv(%"class.vk::DescriptorPool"* %8) #12
  ret i32 %9
}

; Function Attrs: optsize
declare i32 @_ZN2vk14DescriptorPool5resetEv(%"class.vk::DescriptorPool"*) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @vkAllocateDescriptorSets(%struct.VkDevice_T*, %struct.VkDescriptorSetAllocateInfo*, %class.VkNonDispatchableHandle.15*) local_unnamed_addr #0 {
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([131 x i8], [131 x i8]* @.str.111, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 2250, %struct.VkDevice_T* %0, %struct.VkDescriptorSetAllocateInfo* %1, %class.VkNonDispatchableHandle.15* %2) #12
  %4 = getelementptr inbounds %struct.VkDescriptorSetAllocateInfo, %struct.VkDescriptorSetAllocateInfo* %1, i64 0, i32 1
  %5 = bitcast i8** %4 to %struct.VkBaseInStructure**
  br label %6

6:                                                ; preds = %6, %3
  %7 = phi %struct.VkBaseInStructure** [ %5, %3 ], [ %10, %6 ]
  %8 = load %struct.VkBaseInStructure*, %struct.VkBaseInStructure** %7, align 8
  %9 = icmp eq %struct.VkBaseInStructure* %8, null
  %10 = getelementptr inbounds %struct.VkBaseInStructure, %struct.VkBaseInStructure* %8, i64 0, i32 1
  br i1 %9, label %11, label %6

11:                                               ; preds = %6
  %12 = getelementptr inbounds %struct.VkDescriptorSetAllocateInfo, %struct.VkDescriptorSetAllocateInfo* %1, i64 0, i32 2, i32 0
  %13 = bitcast i64* %12 to %"class.vk::DescriptorPool"**
  %14 = load %"class.vk::DescriptorPool"*, %"class.vk::DescriptorPool"** %13, align 8
  %15 = getelementptr inbounds %struct.VkDescriptorSetAllocateInfo, %struct.VkDescriptorSetAllocateInfo* %1, i64 0, i32 3
  %16 = load i32, i32* %15, align 8
  %17 = getelementptr inbounds %struct.VkDescriptorSetAllocateInfo, %struct.VkDescriptorSetAllocateInfo* %1, i64 0, i32 4
  %18 = load %class.VkNonDispatchableHandle.13*, %class.VkNonDispatchableHandle.13** %17, align 8
  %19 = tail call i32 @_ZN2vk14DescriptorPool12allocateSetsEjPK23VkNonDispatchableHandleIP23VkDescriptorSetLayout_TEPS1_IP17VkDescriptorSet_TE(%"class.vk::DescriptorPool"* %14, i32 %16, %class.VkNonDispatchableHandle.13* %18, %class.VkNonDispatchableHandle.15* %2) #12
  ret i32 %19
}

; Function Attrs: optsize
declare i32 @_ZN2vk14DescriptorPool12allocateSetsEjPK23VkNonDispatchableHandleIP23VkDescriptorSetLayout_TEPS1_IP17VkDescriptorSet_TE(%"class.vk::DescriptorPool"*, i32, %class.VkNonDispatchableHandle.13*, %class.VkNonDispatchableHandle.15*) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @vkFreeDescriptorSets(%struct.VkDevice_T*, i64, i32, %class.VkNonDispatchableHandle.15*) local_unnamed_addr #0 {
  %5 = inttoptr i64 %1 to i8*
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([154 x i8], [154 x i8]* @.str.112, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 2265, %struct.VkDevice_T* %0, i8* %5, i32 %2, %class.VkNonDispatchableHandle.15* %3) #12
  %6 = inttoptr i64 %1 to %"class.vk::DescriptorPool"*
  tail call void @_ZN2vk14DescriptorPool8freeSetsEjPK23VkNonDispatchableHandleIP17VkDescriptorSet_TE(%"class.vk::DescriptorPool"* %6, i32 %2, %class.VkNonDispatchableHandle.15* %3) #12
  ret i32 0
}

; Function Attrs: optsize
declare void @_ZN2vk14DescriptorPool8freeSetsEjPK23VkNonDispatchableHandleIP17VkDescriptorSet_TE(%"class.vk::DescriptorPool"*, i32, %class.VkNonDispatchableHandle.15*) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @vkUpdateDescriptorSets(%struct.VkDevice_T*, i32, %struct.VkWriteDescriptorSet*, i32, %struct.VkCopyDescriptorSet*) local_unnamed_addr #0 {
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([211 x i8], [211 x i8]* @.str.113, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 2275, %struct.VkDevice_T* %0, i32 %1, %struct.VkWriteDescriptorSet* %2, i32 %3, %struct.VkCopyDescriptorSet* %4) #12
  %6 = icmp eq %struct.VkDevice_T* %0, null
  %7 = bitcast %struct.VkDevice_T* %0 to %"class.vk::DispatchableObject.872"*
  %8 = getelementptr inbounds %"class.vk::DispatchableObject.872", %"class.vk::DispatchableObject.872"* %7, i64 0, i32 1
  %9 = select i1 %6, %"class.vk::Device"* null, %"class.vk::Device"* %8
  tail call void @_ZN2vk6Device20updateDescriptorSetsEjPK20VkWriteDescriptorSetjPK19VkCopyDescriptorSet(%"class.vk::Device"* %9, i32 %1, %struct.VkWriteDescriptorSet* %2, i32 %3, %struct.VkCopyDescriptorSet* %4) #12
  ret void
}

; Function Attrs: optsize
declare void @_ZN2vk6Device20updateDescriptorSetsEjPK20VkWriteDescriptorSetjPK19VkCopyDescriptorSet(%"class.vk::Device"*, i32, %struct.VkWriteDescriptorSet*, i32, %struct.VkCopyDescriptorSet*) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @vkCreateFramebuffer(%struct.VkDevice_T*, %struct.VkFramebufferCreateInfo*, %struct.VkAllocationCallbacks*, %class.VkNonDispatchableHandle.17*) local_unnamed_addr #0 {
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([166 x i8], [166 x i8]* @.str.114, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 2283, %struct.VkDevice_T* %0, %struct.VkFramebufferCreateInfo* %1, %struct.VkAllocationCallbacks* %2, %class.VkNonDispatchableHandle.17* %3) #12
  %5 = tail call i32 @_ZN2vk10ObjectBaseINS_11FramebufferE23VkNonDispatchableHandleIP15VkFramebuffer_TEE6CreateI23VkFramebufferCreateInfoJEEE8VkResultPK21VkAllocationCallbacksPKT_PS5_DpT0_(%struct.VkAllocationCallbacks* %2, %struct.VkFramebufferCreateInfo* %1, %class.VkNonDispatchableHandle.17* %3) #16
  ret i32 %5
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden i32 @_ZN2vk10ObjectBaseINS_11FramebufferE23VkNonDispatchableHandleIP15VkFramebuffer_TEE6CreateI23VkFramebufferCreateInfoJEEE8VkResultPK21VkAllocationCallbacksPKT_PS5_DpT0_(%struct.VkAllocationCallbacks*, %struct.VkFramebufferCreateInfo*, %class.VkNonDispatchableHandle.17*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.VkNonDispatchableHandle.17, %class.VkNonDispatchableHandle.17* %2, i64 0, i32 0
  store i64 0, i64* %4, align 8
  %5 = tail call i64 @_ZN2vk11Framebuffer29ComputeRequiredAllocationSizeEPK23VkFramebufferCreateInfo(%struct.VkFramebufferCreateInfo* %1) #12
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %3
  %8 = tail call i8* @_ZN2vk8allocateEmmPK21VkAllocationCallbacks23VkSystemAllocationScope(i64 %5, i64 16, %struct.VkAllocationCallbacks* %0, i32 1) #12
  %9 = icmp eq i8* %8, null
  br i1 %9, label %18, label %10

10:                                               ; preds = %7, %3
  %11 = phi i8* [ %8, %7 ], [ null, %3 ]
  %12 = tail call i8* @_ZN2vk8allocateEmmPK21VkAllocationCallbacks23VkSystemAllocationScope(i64 32, i64 8, %struct.VkAllocationCallbacks* %0, i32 1) #12
  %13 = icmp eq i8* %12, null
  br i1 %13, label %14, label %15

14:                                               ; preds = %10
  tail call void @_ZN2vk10deallocateEPvPK21VkAllocationCallbacks(i8* %11, %struct.VkAllocationCallbacks* %0) #12
  br label %18

15:                                               ; preds = %10
  %16 = bitcast i8* %12 to %"class.vk::Framebuffer"*
  tail call void @_ZN2vk11FramebufferC1EPK23VkFramebufferCreateInfoPv(%"class.vk::Framebuffer"* nonnull %16, %struct.VkFramebufferCreateInfo* %1, i8* %11) #12
  %17 = ptrtoint i8* %12 to i64
  store i64 %17, i64* %4, align 8
  br label %18

18:                                               ; preds = %7, %14, %15
  %19 = phi i32 [ -1, %7 ], [ 0, %15 ], [ -1, %14 ]
  ret i32 %19
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @vkDestroyFramebuffer(%struct.VkDevice_T*, i64, %struct.VkAllocationCallbacks*) local_unnamed_addr #0 {
  %4 = inttoptr i64 %1 to i8*
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([115 x i8], [115 x i8]* @.str.115, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 2291, %struct.VkDevice_T* %0, i8* %4, %struct.VkAllocationCallbacks* %2) #12
  %5 = icmp eq i64 %1, 0
  br i1 %5, label %8, label %6

6:                                                ; preds = %3
  %7 = inttoptr i64 %1 to %"class.vk::Framebuffer"*
  tail call void @_ZN2vk11Framebuffer7destroyEPK21VkAllocationCallbacks(%"class.vk::Framebuffer"* nonnull %7, %struct.VkAllocationCallbacks* %2) #12
  tail call void @_ZN2vk10deallocateEPvPK21VkAllocationCallbacks(i8* %4, %struct.VkAllocationCallbacks* %2) #12
  br label %8

8:                                                ; preds = %3, %6
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @vkCreateRenderPass(%struct.VkDevice_T*, %struct.VkRenderPassCreateInfo*, %struct.VkAllocationCallbacks*, %class.VkNonDispatchableHandle.12*) local_unnamed_addr #0 {
  %5 = alloca %"class.vk::Format", align 4
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([163 x i8], [163 x i8]* @.str.116, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 2299, %struct.VkDevice_T* %0, %struct.VkRenderPassCreateInfo* %1, %struct.VkAllocationCallbacks* %2, %class.VkNonDispatchableHandle.12* %3) #12
  %6 = getelementptr inbounds %struct.VkRenderPassCreateInfo, %struct.VkRenderPassCreateInfo* %1, i64 0, i32 2
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %4
  tail call void (i8*, ...) @_ZN2sw4warnEPKcz(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 2304, i32 %7) #12
  br label %10

10:                                               ; preds = %4, %9
  %11 = getelementptr inbounds %struct.VkRenderPassCreateInfo, %struct.VkRenderPassCreateInfo* %1, i64 0, i32 1
  %12 = bitcast i8** %11 to %struct.VkBaseInStructure**
  %13 = load %struct.VkBaseInStructure*, %struct.VkBaseInStructure** %12, align 8
  %14 = icmp eq %struct.VkBaseInStructure* %13, null
  br i1 %14, label %66, label %15

15:                                               ; preds = %10
  %16 = getelementptr inbounds %struct.VkRenderPassCreateInfo, %struct.VkRenderPassCreateInfo* %1, i64 0, i32 6
  %17 = bitcast %"class.vk::Format"* %5 to i8*
  %18 = getelementptr inbounds %"class.vk::Format", %"class.vk::Format"* %5, i64 0, i32 0
  %19 = getelementptr inbounds %struct.VkRenderPassCreateInfo, %struct.VkRenderPassCreateInfo* %1, i64 0, i32 4
  br label %20

20:                                               ; preds = %62, %15
  %21 = phi %struct.VkBaseInStructure* [ %13, %15 ], [ %64, %62 ]
  %22 = getelementptr inbounds %struct.VkBaseInStructure, %struct.VkBaseInStructure* %21, i64 0, i32 0
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 1000117001
  br i1 %24, label %25, label %62

25:                                               ; preds = %20
  %26 = getelementptr inbounds %struct.VkBaseInStructure, %struct.VkBaseInStructure* %21, i64 1, i32 0
  %27 = load i32, i32* %26, align 8
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %62, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %struct.VkBaseInStructure, %struct.VkBaseInStructure* %21, i64 1, i32 1
  %31 = bitcast %struct.VkBaseInStructure** %30 to %struct.VkInputAttachmentAspectReference**
  br label %32

32:                                               ; preds = %57, %29
  %33 = phi i32 [ %27, %29 ], [ %58, %57 ]
  %34 = phi i64 [ 0, %29 ], [ %59, %57 ]
  %35 = load %struct.VkInputAttachmentAspectReference*, %struct.VkInputAttachmentAspectReference** %31, align 8
  %36 = load %struct.VkSubpassDescription*, %struct.VkSubpassDescription** %16, align 8
  %37 = getelementptr inbounds %struct.VkInputAttachmentAspectReference, %struct.VkInputAttachmentAspectReference* %35, i64 %34, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds %struct.VkSubpassDescription, %struct.VkSubpassDescription* %36, i64 %39, i32 3
  %41 = load %struct.VkAttachmentReference*, %struct.VkAttachmentReference** %40, align 8
  %42 = getelementptr inbounds %struct.VkInputAttachmentAspectReference, %struct.VkInputAttachmentAspectReference* %35, i64 %34, i32 1
  %43 = load i32, i32* %42, align 4
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds %struct.VkAttachmentReference, %struct.VkAttachmentReference* %41, i64 %44, i32 0
  %46 = load i32, i32* %45, align 4
  %47 = icmp eq i32 %46, -1
  br i1 %47, label %57, label %48

48:                                               ; preds = %32
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %17) #13
  store i32 -1431655766, i32* %18, align 4
  %49 = load %struct.VkAttachmentDescription*, %struct.VkAttachmentDescription** %19, align 8
  %50 = load i32, i32* %45, align 4
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds %struct.VkAttachmentDescription, %struct.VkAttachmentDescription* %49, i64 %51, i32 1
  %53 = load i32, i32* %52, align 4
  store i32 %53, i32* %18, align 4
  %54 = call zeroext i1 @_ZNK2vk6Format7isDepthEv(%"class.vk::Format"* nonnull %5) #12
  %55 = call zeroext i1 @_ZNK2vk6Format9isStencilEv(%"class.vk::Format"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %17) #13
  %56 = load i32, i32* %26, align 8
  br label %57

57:                                               ; preds = %48, %32
  %58 = phi i32 [ %33, %32 ], [ %56, %48 ]
  %59 = add nuw nsw i64 %34, 1
  %60 = zext i32 %58 to i64
  %61 = icmp ult i64 %59, %60
  br i1 %61, label %32, label %62

62:                                               ; preds = %57, %25, %20
  %63 = getelementptr inbounds %struct.VkBaseInStructure, %struct.VkBaseInStructure* %21, i64 0, i32 1
  %64 = load %struct.VkBaseInStructure*, %struct.VkBaseInStructure** %63, align 8
  %65 = icmp eq %struct.VkBaseInStructure* %64, null
  br i1 %65, label %66, label %20

66:                                               ; preds = %62, %10
  %67 = call i32 @_ZN2vk10ObjectBaseINS_10RenderPassE23VkNonDispatchableHandleIP14VkRenderPass_TEE6CreateI22VkRenderPassCreateInfoJEEE8VkResultPK21VkAllocationCallbacksPKT_PS5_DpT0_(%struct.VkAllocationCallbacks* %2, %struct.VkRenderPassCreateInfo* %1, %class.VkNonDispatchableHandle.12* %3) #16
  ret i32 %67
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden i32 @_ZN2vk10ObjectBaseINS_10RenderPassE23VkNonDispatchableHandleIP14VkRenderPass_TEE6CreateI22VkRenderPassCreateInfoJEEE8VkResultPK21VkAllocationCallbacksPKT_PS5_DpT0_(%struct.VkAllocationCallbacks*, %struct.VkRenderPassCreateInfo*, %class.VkNonDispatchableHandle.12*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.VkNonDispatchableHandle.12, %class.VkNonDispatchableHandle.12* %2, i64 0, i32 0
  store i64 0, i64* %4, align 8
  %5 = tail call i64 @_ZN2vk10RenderPass29ComputeRequiredAllocationSizeEPK22VkRenderPassCreateInfo(%struct.VkRenderPassCreateInfo* %1) #12
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %3
  %8 = tail call i8* @_ZN2vk8allocateEmmPK21VkAllocationCallbacks23VkSystemAllocationScope(i64 %5, i64 16, %struct.VkAllocationCallbacks* %0, i32 1) #12
  %9 = icmp eq i8* %8, null
  br i1 %9, label %18, label %10

10:                                               ; preds = %7, %3
  %11 = phi i8* [ %8, %7 ], [ null, %3 ]
  %12 = tail call i8* @_ZN2vk8allocateEmmPK21VkAllocationCallbacks23VkSystemAllocationScope(i64 80, i64 8, %struct.VkAllocationCallbacks* %0, i32 1) #12
  %13 = icmp eq i8* %12, null
  br i1 %13, label %14, label %15

14:                                               ; preds = %10
  tail call void @_ZN2vk10deallocateEPvPK21VkAllocationCallbacks(i8* %11, %struct.VkAllocationCallbacks* %0) #12
  br label %18

15:                                               ; preds = %10
  %16 = bitcast i8* %12 to %"class.vk::RenderPass"*
  tail call void @_ZN2vk10RenderPassC1EPK22VkRenderPassCreateInfoPv(%"class.vk::RenderPass"* nonnull %16, %struct.VkRenderPassCreateInfo* %1, i8* %11) #12
  %17 = ptrtoint i8* %12 to i64
  store i64 %17, i64* %4, align 8
  br label %18

18:                                               ; preds = %7, %14, %15
  %19 = phi i32 [ -1, %7 ], [ 0, %15 ], [ -1, %14 ]
  ret i32 %19
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @vkCreateRenderPass2(%struct.VkDevice_T*, %struct.VkRenderPassCreateInfo2*, %struct.VkAllocationCallbacks*, %class.VkNonDispatchableHandle.12*) local_unnamed_addr #0 {
  %5 = alloca %"class.vk::Format", align 4
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([163 x i8], [163 x i8]* @.str.116, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 2315, %struct.VkDevice_T* %0, %struct.VkRenderPassCreateInfo2* %1, %struct.VkAllocationCallbacks* %2, %class.VkNonDispatchableHandle.12* %3) #12
  %6 = getelementptr inbounds %struct.VkRenderPassCreateInfo2, %struct.VkRenderPassCreateInfo2* %1, i64 0, i32 2
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %4
  tail call void (i8*, ...) @_ZN2sw4warnEPKcz(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 2320, i32 %7) #12
  br label %10

10:                                               ; preds = %4, %9
  %11 = getelementptr inbounds %struct.VkRenderPassCreateInfo2, %struct.VkRenderPassCreateInfo2* %1, i64 0, i32 1
  %12 = bitcast i8** %11 to %struct.VkBaseInStructure**
  %13 = load %struct.VkBaseInStructure*, %struct.VkBaseInStructure** %12, align 8
  %14 = icmp eq %struct.VkBaseInStructure* %13, null
  br i1 %14, label %66, label %15

15:                                               ; preds = %10
  %16 = getelementptr inbounds %struct.VkRenderPassCreateInfo2, %struct.VkRenderPassCreateInfo2* %1, i64 0, i32 6
  %17 = bitcast %"class.vk::Format"* %5 to i8*
  %18 = getelementptr inbounds %"class.vk::Format", %"class.vk::Format"* %5, i64 0, i32 0
  %19 = getelementptr inbounds %struct.VkRenderPassCreateInfo2, %struct.VkRenderPassCreateInfo2* %1, i64 0, i32 4
  br label %20

20:                                               ; preds = %62, %15
  %21 = phi %struct.VkBaseInStructure* [ %13, %15 ], [ %64, %62 ]
  %22 = getelementptr inbounds %struct.VkBaseInStructure, %struct.VkBaseInStructure* %21, i64 0, i32 0
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 1000117001
  br i1 %24, label %25, label %62

25:                                               ; preds = %20
  %26 = getelementptr inbounds %struct.VkBaseInStructure, %struct.VkBaseInStructure* %21, i64 1, i32 0
  %27 = load i32, i32* %26, align 8
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %62, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %struct.VkBaseInStructure, %struct.VkBaseInStructure* %21, i64 1, i32 1
  %31 = bitcast %struct.VkBaseInStructure** %30 to %struct.VkInputAttachmentAspectReference**
  br label %32

32:                                               ; preds = %57, %29
  %33 = phi i32 [ %27, %29 ], [ %58, %57 ]
  %34 = phi i64 [ 0, %29 ], [ %59, %57 ]
  %35 = load %struct.VkInputAttachmentAspectReference*, %struct.VkInputAttachmentAspectReference** %31, align 8
  %36 = load %struct.VkSubpassDescription2*, %struct.VkSubpassDescription2** %16, align 8
  %37 = getelementptr inbounds %struct.VkInputAttachmentAspectReference, %struct.VkInputAttachmentAspectReference* %35, i64 %34, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds %struct.VkSubpassDescription2, %struct.VkSubpassDescription2* %36, i64 %39, i32 6
  %41 = load %struct.VkAttachmentReference2*, %struct.VkAttachmentReference2** %40, align 8
  %42 = getelementptr inbounds %struct.VkInputAttachmentAspectReference, %struct.VkInputAttachmentAspectReference* %35, i64 %34, i32 1
  %43 = load i32, i32* %42, align 4
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds %struct.VkAttachmentReference2, %struct.VkAttachmentReference2* %41, i64 %44, i32 2
  %46 = load i32, i32* %45, align 8
  %47 = icmp eq i32 %46, -1
  br i1 %47, label %57, label %48

48:                                               ; preds = %32
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %17) #13
  store i32 -1431655766, i32* %18, align 4
  %49 = load %struct.VkAttachmentDescription2*, %struct.VkAttachmentDescription2** %19, align 8
  %50 = load i32, i32* %45, align 8
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds %struct.VkAttachmentDescription2, %struct.VkAttachmentDescription2* %49, i64 %51, i32 3
  %53 = load i32, i32* %52, align 4
  store i32 %53, i32* %18, align 4
  %54 = call zeroext i1 @_ZNK2vk6Format7isDepthEv(%"class.vk::Format"* nonnull %5) #12
  %55 = call zeroext i1 @_ZNK2vk6Format9isStencilEv(%"class.vk::Format"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %17) #13
  %56 = load i32, i32* %26, align 8
  br label %57

57:                                               ; preds = %48, %32
  %58 = phi i32 [ %33, %32 ], [ %56, %48 ]
  %59 = add nuw nsw i64 %34, 1
  %60 = zext i32 %58 to i64
  %61 = icmp ult i64 %59, %60
  br i1 %61, label %32, label %62

62:                                               ; preds = %57, %25, %20
  %63 = getelementptr inbounds %struct.VkBaseInStructure, %struct.VkBaseInStructure* %21, i64 0, i32 1
  %64 = load %struct.VkBaseInStructure*, %struct.VkBaseInStructure** %63, align 8
  %65 = icmp eq %struct.VkBaseInStructure* %64, null
  br i1 %65, label %66, label %20

66:                                               ; preds = %62, %10
  %67 = call i32 @_ZN2vk10ObjectBaseINS_10RenderPassE23VkNonDispatchableHandleIP14VkRenderPass_TEE6CreateI23VkRenderPassCreateInfo2JEEE8VkResultPK21VkAllocationCallbacksPKT_PS5_DpT0_(%struct.VkAllocationCallbacks* %2, %struct.VkRenderPassCreateInfo2* %1, %class.VkNonDispatchableHandle.12* %3) #16
  ret i32 %67
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden i32 @_ZN2vk10ObjectBaseINS_10RenderPassE23VkNonDispatchableHandleIP14VkRenderPass_TEE6CreateI23VkRenderPassCreateInfo2JEEE8VkResultPK21VkAllocationCallbacksPKT_PS5_DpT0_(%struct.VkAllocationCallbacks*, %struct.VkRenderPassCreateInfo2*, %class.VkNonDispatchableHandle.12*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.VkNonDispatchableHandle.12, %class.VkNonDispatchableHandle.12* %2, i64 0, i32 0
  store i64 0, i64* %4, align 8
  %5 = tail call i64 @_ZN2vk10RenderPass29ComputeRequiredAllocationSizeEPK23VkRenderPassCreateInfo2(%struct.VkRenderPassCreateInfo2* %1) #12
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %3
  %8 = tail call i8* @_ZN2vk8allocateEmmPK21VkAllocationCallbacks23VkSystemAllocationScope(i64 %5, i64 16, %struct.VkAllocationCallbacks* %0, i32 1) #12
  %9 = icmp eq i8* %8, null
  br i1 %9, label %18, label %10

10:                                               ; preds = %7, %3
  %11 = phi i8* [ %8, %7 ], [ null, %3 ]
  %12 = tail call i8* @_ZN2vk8allocateEmmPK21VkAllocationCallbacks23VkSystemAllocationScope(i64 80, i64 8, %struct.VkAllocationCallbacks* %0, i32 1) #12
  %13 = icmp eq i8* %12, null
  br i1 %13, label %14, label %15

14:                                               ; preds = %10
  tail call void @_ZN2vk10deallocateEPvPK21VkAllocationCallbacks(i8* %11, %struct.VkAllocationCallbacks* %0) #12
  br label %18

15:                                               ; preds = %10
  %16 = bitcast i8* %12 to %"class.vk::RenderPass"*
  tail call void @_ZN2vk10RenderPassC1EPK23VkRenderPassCreateInfo2Pv(%"class.vk::RenderPass"* nonnull %16, %struct.VkRenderPassCreateInfo2* %1, i8* %11) #12
  %17 = ptrtoint i8* %12 to i64
  store i64 %17, i64* %4, align 8
  br label %18

18:                                               ; preds = %7, %14, %15
  %19 = phi i32 [ -1, %7 ], [ 0, %15 ], [ -1, %14 ]
  ret i32 %19
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @vkDestroyRenderPass(%struct.VkDevice_T*, i64, %struct.VkAllocationCallbacks*) local_unnamed_addr #0 {
  %4 = inttoptr i64 %1 to i8*
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([113 x i8], [113 x i8]* @.str.117, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 2331, %struct.VkDevice_T* %0, i8* %4, %struct.VkAllocationCallbacks* %2) #12
  %5 = icmp eq i64 %1, 0
  br i1 %5, label %8, label %6

6:                                                ; preds = %3
  %7 = inttoptr i64 %1 to %"class.vk::RenderPass"*
  tail call void @_ZN2vk10RenderPass7destroyEPK21VkAllocationCallbacks(%"class.vk::RenderPass"* nonnull %7, %struct.VkAllocationCallbacks* %2) #12
  tail call void @_ZN2vk10deallocateEPvPK21VkAllocationCallbacks(i8* %4, %struct.VkAllocationCallbacks* %2) #12
  br label %8

8:                                                ; preds = %3, %6
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @vkGetRenderAreaGranularity(%struct.VkDevice_T*, i64, %struct.VkExtent2D*) local_unnamed_addr #0 {
  %4 = inttoptr i64 %1 to i8*
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([98 x i8], [98 x i8]* @.str.118, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 2339, %struct.VkDevice_T* %0, i8* %4, %struct.VkExtent2D* %2) #12
  %5 = inttoptr i64 %1 to %"class.vk::RenderPass"*
  tail call void @_ZNK2vk10RenderPass24getRenderAreaGranularityEP10VkExtent2D(%"class.vk::RenderPass"* %5, %struct.VkExtent2D* %2) #12
  ret void
}

; Function Attrs: optsize
declare void @_ZNK2vk10RenderPass24getRenderAreaGranularityEP10VkExtent2D(%"class.vk::RenderPass"*, %struct.VkExtent2D*) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @vkCreateCommandPool(%struct.VkDevice_T*, %struct.VkCommandPoolCreateInfo*, %struct.VkAllocationCallbacks*, %class.VkNonDispatchableHandle.18*) local_unnamed_addr #0 {
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([166 x i8], [166 x i8]* @.str.119, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 2347, %struct.VkDevice_T* %0, %struct.VkCommandPoolCreateInfo* %1, %struct.VkAllocationCallbacks* %2, %class.VkNonDispatchableHandle.18* %3) #12
  %5 = getelementptr inbounds %struct.VkCommandPoolCreateInfo, %struct.VkCommandPoolCreateInfo* %1, i64 0, i32 1
  %6 = bitcast i8** %5 to %struct.VkBaseInStructure**
  br label %7

7:                                                ; preds = %7, %4
  %8 = phi %struct.VkBaseInStructure** [ %6, %4 ], [ %11, %7 ]
  %9 = load %struct.VkBaseInStructure*, %struct.VkBaseInStructure** %8, align 8
  %10 = icmp eq %struct.VkBaseInStructure* %9, null
  %11 = getelementptr inbounds %struct.VkBaseInStructure, %struct.VkBaseInStructure* %9, i64 0, i32 1
  br i1 %10, label %12, label %7

12:                                               ; preds = %7
  %13 = tail call i32 @_ZN2vk10ObjectBaseINS_11CommandPoolE23VkNonDispatchableHandleIP15VkCommandPool_TEE6CreateI23VkCommandPoolCreateInfoJEEE8VkResultPK21VkAllocationCallbacksPKT_PS5_DpT0_(%struct.VkAllocationCallbacks* %2, %struct.VkCommandPoolCreateInfo* %1, %class.VkNonDispatchableHandle.18* %3) #16
  ret i32 %13
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden i32 @_ZN2vk10ObjectBaseINS_11CommandPoolE23VkNonDispatchableHandleIP15VkCommandPool_TEE6CreateI23VkCommandPoolCreateInfoJEEE8VkResultPK21VkAllocationCallbacksPKT_PS5_DpT0_(%struct.VkAllocationCallbacks*, %struct.VkCommandPoolCreateInfo*, %class.VkNonDispatchableHandle.18*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.VkNonDispatchableHandle.18, %class.VkNonDispatchableHandle.18* %2, i64 0, i32 0
  store i64 0, i64* %4, align 8
  %5 = tail call i64 @_ZN2vk11CommandPool29ComputeRequiredAllocationSizeEPK23VkCommandPoolCreateInfo(%struct.VkCommandPoolCreateInfo* %1) #12
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %3
  %8 = tail call i8* @_ZN2vk8allocateEmmPK21VkAllocationCallbacks23VkSystemAllocationScope(i64 %5, i64 16, %struct.VkAllocationCallbacks* %0, i32 1) #12
  %9 = icmp eq i8* %8, null
  br i1 %9, label %18, label %10

10:                                               ; preds = %7, %3
  %11 = phi i8* [ %8, %7 ], [ null, %3 ]
  %12 = tail call i8* @_ZN2vk8allocateEmmPK21VkAllocationCallbacks23VkSystemAllocationScope(i64 24, i64 8, %struct.VkAllocationCallbacks* %0, i32 1) #12
  %13 = icmp eq i8* %12, null
  br i1 %13, label %14, label %15

14:                                               ; preds = %10
  tail call void @_ZN2vk10deallocateEPvPK21VkAllocationCallbacks(i8* %11, %struct.VkAllocationCallbacks* %0) #12
  br label %18

15:                                               ; preds = %10
  %16 = bitcast i8* %12 to %"class.vk::CommandPool"*
  tail call void @_ZN2vk11CommandPoolC1EPK23VkCommandPoolCreateInfoPv(%"class.vk::CommandPool"* nonnull %16, %struct.VkCommandPoolCreateInfo* %1, i8* %11) #12
  %17 = ptrtoint i8* %12 to i64
  store i64 %17, i64* %4, align 8
  br label %18

18:                                               ; preds = %7, %14, %15
  %19 = phi i32 [ -1, %7 ], [ 0, %15 ], [ -1, %14 ]
  ret i32 %19
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @vkDestroyCommandPool(%struct.VkDevice_T*, i64, %struct.VkAllocationCallbacks*) local_unnamed_addr #0 {
  %4 = inttoptr i64 %1 to i8*
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([115 x i8], [115 x i8]* @.str.120, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 2362, %struct.VkDevice_T* %0, i8* %4, %struct.VkAllocationCallbacks* %2) #12
  %5 = inttoptr i64 %1 to %"class.vk::CommandPool"*
  %6 = icmp eq i64 %1, 0
  br i1 %6, label %12, label %7

7:                                                ; preds = %3
  tail call void @_ZN2vk11CommandPool7destroyEPK21VkAllocationCallbacks(%"class.vk::CommandPool"* nonnull %5, %struct.VkAllocationCallbacks* %2) #12
  %8 = getelementptr inbounds %"class.vk::CommandPool", %"class.vk::CommandPool"* %5, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.vk::CommandPool", %"class.vk::CommandPool"* %5, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %10 = bitcast %"class.std::__1::__tree_end_node"* %9 to %"class.std::__1::__tree_node.920"**
  %11 = load %"class.std::__1::__tree_node.920"*, %"class.std::__1::__tree_node.920"** %10, align 8
  tail call void @_ZNSt3__16__treeIP17VkCommandBuffer_TNS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree.837"* %8, %"class.std::__1::__tree_node.920"* %11) #12
  tail call void @_ZN2vk10deallocateEPvPK21VkAllocationCallbacks(i8* %4, %struct.VkAllocationCallbacks* %2) #12
  br label %12

12:                                               ; preds = %3, %7
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @vkResetCommandPool(%struct.VkDevice_T*, i64, i32) local_unnamed_addr #0 {
  %4 = inttoptr i64 %1 to i8*
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([105 x i8], [105 x i8]* @.str.121, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 2370, %struct.VkDevice_T* %0, i8* %4, i32 %2) #12
  %5 = inttoptr i64 %1 to %"class.vk::CommandPool"*
  %6 = tail call i32 @_ZN2vk11CommandPool5resetEj(%"class.vk::CommandPool"* %5, i32 %2) #12
  ret i32 %6
}

; Function Attrs: optsize
declare i32 @_ZN2vk11CommandPool5resetEj(%"class.vk::CommandPool"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @vkAllocateCommandBuffers(%struct.VkDevice_T*, %struct.VkCommandBufferAllocateInfo*, %struct.VkCommandBuffer_T**) local_unnamed_addr #0 {
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([131 x i8], [131 x i8]* @.str.122, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 2378, %struct.VkDevice_T* %0, %struct.VkCommandBufferAllocateInfo* %1, %struct.VkCommandBuffer_T** %2) #12
  %4 = getelementptr inbounds %struct.VkCommandBufferAllocateInfo, %struct.VkCommandBufferAllocateInfo* %1, i64 0, i32 1
  %5 = bitcast i8** %4 to %struct.VkBaseInStructure**
  br label %6

6:                                                ; preds = %6, %3
  %7 = phi %struct.VkBaseInStructure** [ %5, %3 ], [ %10, %6 ]
  %8 = load %struct.VkBaseInStructure*, %struct.VkBaseInStructure** %7, align 8
  %9 = icmp eq %struct.VkBaseInStructure* %8, null
  %10 = getelementptr inbounds %struct.VkBaseInStructure, %struct.VkBaseInStructure* %8, i64 0, i32 1
  br i1 %9, label %11, label %6

11:                                               ; preds = %6
  %12 = getelementptr inbounds %struct.VkCommandBufferAllocateInfo, %struct.VkCommandBufferAllocateInfo* %1, i64 0, i32 2, i32 0
  %13 = bitcast i64* %12 to %"class.vk::CommandPool"**
  %14 = load %"class.vk::CommandPool"*, %"class.vk::CommandPool"** %13, align 8
  %15 = icmp eq %struct.VkDevice_T* %0, null
  %16 = bitcast %struct.VkDevice_T* %0 to %"class.vk::DispatchableObject.872"*
  %17 = getelementptr inbounds %"class.vk::DispatchableObject.872", %"class.vk::DispatchableObject.872"* %16, i64 0, i32 1
  %18 = select i1 %15, %"class.vk::Device"* null, %"class.vk::Device"* %17
  %19 = getelementptr inbounds %struct.VkCommandBufferAllocateInfo, %struct.VkCommandBufferAllocateInfo* %1, i64 0, i32 3
  %20 = load i32, i32* %19, align 8
  %21 = getelementptr inbounds %struct.VkCommandBufferAllocateInfo, %struct.VkCommandBufferAllocateInfo* %1, i64 0, i32 4
  %22 = load i32, i32* %21, align 4
  %23 = tail call i32 @_ZN2vk11CommandPool22allocateCommandBuffersEPNS_6DeviceE20VkCommandBufferLeveljPP17VkCommandBuffer_T(%"class.vk::CommandPool"* %14, %"class.vk::Device"* %18, i32 %20, i32 %22, %struct.VkCommandBuffer_T** %2) #12
  ret i32 %23
}

; Function Attrs: optsize
declare i32 @_ZN2vk11CommandPool22allocateCommandBuffersEPNS_6DeviceE20VkCommandBufferLeveljPP17VkCommandBuffer_T(%"class.vk::CommandPool"*, %"class.vk::Device"*, i32, i32, %struct.VkCommandBuffer_T**) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @vkFreeCommandBuffers(%struct.VkDevice_T*, i64, i32, %struct.VkCommandBuffer_T**) local_unnamed_addr #0 {
  %5 = inttoptr i64 %1 to i8*
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([148 x i8], [148 x i8]* @.str.123, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 2393, %struct.VkDevice_T* %0, i8* %5, i32 %2, %struct.VkCommandBuffer_T** %3) #12
  %6 = inttoptr i64 %1 to %"class.vk::CommandPool"*
  tail call void @_ZN2vk11CommandPool18freeCommandBuffersEjPKP17VkCommandBuffer_T(%"class.vk::CommandPool"* %6, i32 %2, %struct.VkCommandBuffer_T** %3) #12
  ret void
}

; Function Attrs: optsize
declare void @_ZN2vk11CommandPool18freeCommandBuffersEjPKP17VkCommandBuffer_T(%"class.vk::CommandPool"*, i32, %struct.VkCommandBuffer_T**) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @vkBeginCommandBuffer(%struct.VkCommandBuffer_T*, %struct.VkCommandBufferBeginInfo*) local_unnamed_addr #0 {
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([100 x i8], [100 x i8]* @.str.124, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 2401, %struct.VkCommandBuffer_T* %0, %struct.VkCommandBufferBeginInfo* %1) #12
  %3 = getelementptr inbounds %struct.VkCommandBufferBeginInfo, %struct.VkCommandBufferBeginInfo* %1, i64 0, i32 1
  %4 = bitcast i8** %3 to %struct.VkBaseInStructure**
  br label %5

5:                                                ; preds = %5, %2
  %6 = phi %struct.VkBaseInStructure** [ %4, %2 ], [ %9, %5 ]
  %7 = load %struct.VkBaseInStructure*, %struct.VkBaseInStructure** %6, align 8
  %8 = icmp eq %struct.VkBaseInStructure* %7, null
  %9 = getelementptr inbounds %struct.VkBaseInStructure, %struct.VkBaseInStructure* %7, i64 0, i32 1
  br i1 %8, label %10, label %5

10:                                               ; preds = %5
  %11 = icmp eq %struct.VkCommandBuffer_T* %0, null
  %12 = bitcast %struct.VkCommandBuffer_T* %0 to %"class.vk::DispatchableObject.884"*
  %13 = getelementptr inbounds %"class.vk::DispatchableObject.884", %"class.vk::DispatchableObject.884"* %12, i64 0, i32 1
  %14 = select i1 %11, %"class.vk::CommandBuffer"* null, %"class.vk::CommandBuffer"* %13
  %15 = getelementptr inbounds %struct.VkCommandBufferBeginInfo, %struct.VkCommandBufferBeginInfo* %1, i64 0, i32 2
  %16 = load i32, i32* %15, align 8
  %17 = getelementptr inbounds %struct.VkCommandBufferBeginInfo, %struct.VkCommandBufferBeginInfo* %1, i64 0, i32 3
  %18 = load %struct.VkCommandBufferInheritanceInfo*, %struct.VkCommandBufferInheritanceInfo** %17, align 8
  %19 = tail call i32 @_ZN2vk13CommandBuffer5beginEjPK30VkCommandBufferInheritanceInfo(%"class.vk::CommandBuffer"* %14, i32 %16, %struct.VkCommandBufferInheritanceInfo* %18) #12
  ret i32 %19
}

; Function Attrs: optsize
declare i32 @_ZN2vk13CommandBuffer5beginEjPK30VkCommandBufferInheritanceInfo(%"class.vk::CommandBuffer"*, i32, %struct.VkCommandBufferInheritanceInfo*) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @vkEndCommandBuffer(%struct.VkCommandBuffer_T*) local_unnamed_addr #0 {
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.125, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 2415, %struct.VkCommandBuffer_T* %0) #12
  %2 = icmp eq %struct.VkCommandBuffer_T* %0, null
  %3 = bitcast %struct.VkCommandBuffer_T* %0 to %"class.vk::DispatchableObject.884"*
  %4 = getelementptr inbounds %"class.vk::DispatchableObject.884", %"class.vk::DispatchableObject.884"* %3, i64 0, i32 1
  %5 = select i1 %2, %"class.vk::CommandBuffer"* null, %"class.vk::CommandBuffer"* %4
  %6 = tail call i32 @_ZN2vk13CommandBuffer3endEv(%"class.vk::CommandBuffer"* %5) #12
  ret i32 %6
}

; Function Attrs: optsize
declare i32 @_ZN2vk13CommandBuffer3endEv(%"class.vk::CommandBuffer"*) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @vkResetCommandBuffer(%struct.VkCommandBuffer_T*, i32) local_unnamed_addr #0 {
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([89 x i8], [89 x i8]* @.str.126, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 2422, %struct.VkCommandBuffer_T* %0, i32 %1) #12
  %3 = icmp eq %struct.VkCommandBuffer_T* %0, null
  %4 = bitcast %struct.VkCommandBuffer_T* %0 to %"class.vk::DispatchableObject.884"*
  %5 = getelementptr inbounds %"class.vk::DispatchableObject.884", %"class.vk::DispatchableObject.884"* %4, i64 0, i32 1
  %6 = select i1 %3, %"class.vk::CommandBuffer"* null, %"class.vk::CommandBuffer"* %5
  %7 = tail call i32 @_ZN2vk13CommandBuffer5resetEj(%"class.vk::CommandBuffer"* %6, i32 %1) #12
  ret i32 %7
}

; Function Attrs: optsize
declare i32 @_ZN2vk13CommandBuffer5resetEj(%"class.vk::CommandBuffer"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @vkCmdBindPipeline(%struct.VkCommandBuffer_T*, i32, i64) local_unnamed_addr #0 {
  %4 = inttoptr i64 %2 to i8*
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([121 x i8], [121 x i8]* @.str.127, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 2430, %struct.VkCommandBuffer_T* %0, i32 %1, i8* %4) #12
  %5 = icmp eq %struct.VkCommandBuffer_T* %0, null
  %6 = bitcast %struct.VkCommandBuffer_T* %0 to %"class.vk::DispatchableObject.884"*
  %7 = getelementptr inbounds %"class.vk::DispatchableObject.884", %"class.vk::DispatchableObject.884"* %6, i64 0, i32 1
  %8 = select i1 %5, %"class.vk::CommandBuffer"* null, %"class.vk::CommandBuffer"* %7
  %9 = inttoptr i64 %2 to %"class.vk::Pipeline"*
  tail call void @_ZN2vk13CommandBuffer12bindPipelineE19VkPipelineBindPointPNS_8PipelineE(%"class.vk::CommandBuffer"* %8, i32 %1, %"class.vk::Pipeline"* %9) #12
  ret void
}

; Function Attrs: optsize
declare void @_ZN2vk13CommandBuffer12bindPipelineE19VkPipelineBindPointPNS_8PipelineE(%"class.vk::CommandBuffer"*, i32, %"class.vk::Pipeline"*) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @vkCmdSetViewport(%struct.VkCommandBuffer_T*, i32, i32, %struct.VkViewport*) local_unnamed_addr #0 {
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([144 x i8], [144 x i8]* @.str.128, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 2438, %struct.VkCommandBuffer_T* %0, i32 %1, i32 %2, %struct.VkViewport* %3) #12
  %5 = icmp eq %struct.VkCommandBuffer_T* %0, null
  %6 = bitcast %struct.VkCommandBuffer_T* %0 to %"class.vk::DispatchableObject.884"*
  %7 = getelementptr inbounds %"class.vk::DispatchableObject.884", %"class.vk::DispatchableObject.884"* %6, i64 0, i32 1
  %8 = select i1 %5, %"class.vk::CommandBuffer"* null, %"class.vk::CommandBuffer"* %7
  tail call void @_ZN2vk13CommandBuffer11setViewportEjjPK10VkViewport(%"class.vk::CommandBuffer"* %8, i32 %1, i32 %2, %struct.VkViewport* %3) #12
  ret void
}

; Function Attrs: optsize
declare void @_ZN2vk13CommandBuffer11setViewportEjjPK10VkViewport(%"class.vk::CommandBuffer"*, i32, i32, %struct.VkViewport*) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @vkCmdSetScissor(%struct.VkCommandBuffer_T*, i32, i32, %struct.VkRect2D*) local_unnamed_addr #0 {
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([139 x i8], [139 x i8]* @.str.129, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 2446, %struct.VkCommandBuffer_T* %0, i32 %1, i32 %2, %struct.VkRect2D* %3) #12
  %5 = icmp eq %struct.VkCommandBuffer_T* %0, null
  %6 = bitcast %struct.VkCommandBuffer_T* %0 to %"class.vk::DispatchableObject.884"*
  %7 = getelementptr inbounds %"class.vk::DispatchableObject.884", %"class.vk::DispatchableObject.884"* %6, i64 0, i32 1
  %8 = select i1 %5, %"class.vk::CommandBuffer"* null, %"class.vk::CommandBuffer"* %7
  tail call void @_ZN2vk13CommandBuffer10setScissorEjjPK8VkRect2D(%"class.vk::CommandBuffer"* %8, i32 %1, i32 %2, %struct.VkRect2D* %3) #12
  ret void
}

; Function Attrs: optsize
declare void @_ZN2vk13CommandBuffer10setScissorEjjPK8VkRect2D(%"class.vk::CommandBuffer"*, i32, i32, %struct.VkRect2D*) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @vkCmdSetLineWidth(%struct.VkCommandBuffer_T*, float) local_unnamed_addr #0 {
  %3 = fpext float %1 to double
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.130, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 2453, %struct.VkCommandBuffer_T* %0, double %3) #12
  %4 = icmp eq %struct.VkCommandBuffer_T* %0, null
  %5 = bitcast %struct.VkCommandBuffer_T* %0 to %"class.vk::DispatchableObject.884"*
  %6 = getelementptr inbounds %"class.vk::DispatchableObject.884", %"class.vk::DispatchableObject.884"* %5, i64 0, i32 1
  %7 = select i1 %4, %"class.vk::CommandBuffer"* null, %"class.vk::CommandBuffer"* %6
  tail call void @_ZN2vk13CommandBuffer12setLineWidthEf(%"class.vk::CommandBuffer"* %7, float %1) #12
  ret void
}

; Function Attrs: optsize
declare void @_ZN2vk13CommandBuffer12setLineWidthEf(%"class.vk::CommandBuffer"*, float) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @vkCmdSetDepthBias(%struct.VkCommandBuffer_T*, float, float, float) local_unnamed_addr #0 {
  %5 = fpext float %1 to double
  %6 = fpext float %2 to double
  %7 = fpext float %3 to double
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([147 x i8], [147 x i8]* @.str.131, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 2461, %struct.VkCommandBuffer_T* %0, double %5, double %6, double %7) #12
  %8 = icmp eq %struct.VkCommandBuffer_T* %0, null
  %9 = bitcast %struct.VkCommandBuffer_T* %0 to %"class.vk::DispatchableObject.884"*
  %10 = getelementptr inbounds %"class.vk::DispatchableObject.884", %"class.vk::DispatchableObject.884"* %9, i64 0, i32 1
  %11 = select i1 %8, %"class.vk::CommandBuffer"* null, %"class.vk::CommandBuffer"* %10
  tail call void @_ZN2vk13CommandBuffer12setDepthBiasEfff(%"class.vk::CommandBuffer"* %11, float %1, float %2, float %3) #12
  ret void
}

; Function Attrs: optsize
declare void @_ZN2vk13CommandBuffer12setDepthBiasEfff(%"class.vk::CommandBuffer"*, float, float, float) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @vkCmdSetBlendConstants(%struct.VkCommandBuffer_T*, float*) local_unnamed_addr #0 {
  %3 = load float, float* %1, align 4
  %4 = fpext float %3 to double
  %5 = getelementptr inbounds float, float* %1, i64 1
  %6 = load float, float* %5, align 4
  %7 = fpext float %6 to double
  %8 = getelementptr inbounds float, float* %1, i64 2
  %9 = load float, float* %8, align 4
  %10 = fpext float %9 to double
  %11 = getelementptr inbounds float, float* %1, i64 3
  %12 = load float, float* %11, align 4
  %13 = fpext float %12 to double
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([101 x i8], [101 x i8]* @.str.132, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 2469, %struct.VkCommandBuffer_T* %0, double %4, double %7, double %10, double %13) #12
  %14 = icmp eq %struct.VkCommandBuffer_T* %0, null
  %15 = bitcast %struct.VkCommandBuffer_T* %0 to %"class.vk::DispatchableObject.884"*
  %16 = getelementptr inbounds %"class.vk::DispatchableObject.884", %"class.vk::DispatchableObject.884"* %15, i64 0, i32 1
  %17 = select i1 %14, %"class.vk::CommandBuffer"* null, %"class.vk::CommandBuffer"* %16
  tail call void @_ZN2vk13CommandBuffer17setBlendConstantsEPKf(%"class.vk::CommandBuffer"* %17, float* %1) #12
  ret void
}

; Function Attrs: optsize
declare void @_ZN2vk13CommandBuffer17setBlendConstantsEPKf(%"class.vk::CommandBuffer"*, float*) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @vkCmdSetDepthBounds(%struct.VkCommandBuffer_T*, float, float) local_unnamed_addr #0 {
  %4 = fpext float %1 to double
  %5 = fpext float %2 to double
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([105 x i8], [105 x i8]* @.str.133, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 2477, %struct.VkCommandBuffer_T* %0, double %4, double %5) #12
  %6 = icmp eq %struct.VkCommandBuffer_T* %0, null
  %7 = bitcast %struct.VkCommandBuffer_T* %0 to %"class.vk::DispatchableObject.884"*
  %8 = getelementptr inbounds %"class.vk::DispatchableObject.884", %"class.vk::DispatchableObject.884"* %7, i64 0, i32 1
  %9 = select i1 %6, %"class.vk::CommandBuffer"* null, %"class.vk::CommandBuffer"* %8
  tail call void @_ZN2vk13CommandBuffer14setDepthBoundsEff(%"class.vk::CommandBuffer"* %9, float %1, float %2) #12
  ret void
}

; Function Attrs: optsize
declare void @_ZN2vk13CommandBuffer14setDepthBoundsEff(%"class.vk::CommandBuffer"*, float, float) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @vkCmdSetStencilCompareMask(%struct.VkCommandBuffer_T*, i32, i32) local_unnamed_addr #0 {
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([112 x i8], [112 x i8]* @.str.134, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 2485, %struct.VkCommandBuffer_T* %0, i32 %1, i32 %2) #12
  %4 = icmp eq %struct.VkCommandBuffer_T* %0, null
  %5 = bitcast %struct.VkCommandBuffer_T* %0 to %"class.vk::DispatchableObject.884"*
  %6 = getelementptr inbounds %"class.vk::DispatchableObject.884", %"class.vk::DispatchableObject.884"* %5, i64 0, i32 1
  %7 = select i1 %4, %"class.vk::CommandBuffer"* null, %"class.vk::CommandBuffer"* %6
  tail call void @_ZN2vk13CommandBuffer21setStencilCompareMaskEjj(%"class.vk::CommandBuffer"* %7, i32 %1, i32 %2) #12
  ret void
}

; Function Attrs: optsize
declare void @_ZN2vk13CommandBuffer21setStencilCompareMaskEjj(%"class.vk::CommandBuffer"*, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @vkCmdSetStencilWriteMask(%struct.VkCommandBuffer_T*, i32, i32) local_unnamed_addr #0 {
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([110 x i8], [110 x i8]* @.str.135, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 2493, %struct.VkCommandBuffer_T* %0, i32 %1, i32 %2) #12
  %4 = icmp eq %struct.VkCommandBuffer_T* %0, null
  %5 = bitcast %struct.VkCommandBuffer_T* %0 to %"class.vk::DispatchableObject.884"*
  %6 = getelementptr inbounds %"class.vk::DispatchableObject.884", %"class.vk::DispatchableObject.884"* %5, i64 0, i32 1
  %7 = select i1 %4, %"class.vk::CommandBuffer"* null, %"class.vk::CommandBuffer"* %6
  tail call void @_ZN2vk13CommandBuffer19setStencilWriteMaskEjj(%"class.vk::CommandBuffer"* %7, i32 %1, i32 %2) #12
  ret void
}

; Function Attrs: optsize
declare void @_ZN2vk13CommandBuffer19setStencilWriteMaskEjj(%"class.vk::CommandBuffer"*, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @vkCmdSetStencilReference(%struct.VkCommandBuffer_T*, i32, i32) local_unnamed_addr #0 {
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([110 x i8], [110 x i8]* @.str.136, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 2501, %struct.VkCommandBuffer_T* %0, i32 %1, i32 %2) #12
  %4 = icmp eq %struct.VkCommandBuffer_T* %0, null
  %5 = bitcast %struct.VkCommandBuffer_T* %0 to %"class.vk::DispatchableObject.884"*
  %6 = getelementptr inbounds %"class.vk::DispatchableObject.884", %"class.vk::DispatchableObject.884"* %5, i64 0, i32 1
  %7 = select i1 %4, %"class.vk::CommandBuffer"* null, %"class.vk::CommandBuffer"* %6
  tail call void @_ZN2vk13CommandBuffer19setStencilReferenceEjj(%"class.vk::CommandBuffer"* %7, i32 %1, i32 %2) #12
  ret void
}

; Function Attrs: optsize
declare void @_ZN2vk13CommandBuffer19setStencilReferenceEjj(%"class.vk::CommandBuffer"*, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @vkCmdBindDescriptorSets(%struct.VkCommandBuffer_T*, i32, i64, i32, i32, %class.VkNonDispatchableHandle.15*, i32, i32*) local_unnamed_addr #0 {
  %9 = inttoptr i64 %2 to i8*
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([300 x i8], [300 x i8]* @.str.137, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 2509, %struct.VkCommandBuffer_T* %0, i32 %1, i8* %9, i32 %3, i32 %4, %class.VkNonDispatchableHandle.15* %5, i32 %6, i32* %7) #12
  %10 = icmp eq %struct.VkCommandBuffer_T* %0, null
  %11 = bitcast %struct.VkCommandBuffer_T* %0 to %"class.vk::DispatchableObject.884"*
  %12 = getelementptr inbounds %"class.vk::DispatchableObject.884", %"class.vk::DispatchableObject.884"* %11, i64 0, i32 1
  %13 = select i1 %10, %"class.vk::CommandBuffer"* null, %"class.vk::CommandBuffer"* %12
  %14 = inttoptr i64 %2 to %"class.vk::PipelineLayout"*
  tail call void @_ZN2vk13CommandBuffer18bindDescriptorSetsE19VkPipelineBindPointPKNS_14PipelineLayoutEjjPK23VkNonDispatchableHandleIP17VkDescriptorSet_TEjPKj(%"class.vk::CommandBuffer"* %13, i32 %1, %"class.vk::PipelineLayout"* %14, i32 %3, i32 %4, %class.VkNonDispatchableHandle.15* %5, i32 %6, i32* %7) #12
  ret void
}

; Function Attrs: optsize
declare void @_ZN2vk13CommandBuffer18bindDescriptorSetsE19VkPipelineBindPointPKNS_14PipelineLayoutEjjPK23VkNonDispatchableHandleIP17VkDescriptorSet_TEjPKj(%"class.vk::CommandBuffer"*, i32, %"class.vk::PipelineLayout"*, i32, i32, %class.VkNonDispatchableHandle.15*, i32, i32*) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @vkCmdBindIndexBuffer(%struct.VkCommandBuffer_T*, i64, i64, i32) local_unnamed_addr #0 {
  %5 = inttoptr i64 %1 to i8*
  %6 = trunc i64 %2 to i32
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([127 x i8], [127 x i8]* @.str.138, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 2517, %struct.VkCommandBuffer_T* %0, i8* %5, i32 %6, i32 %3) #12
  %7 = icmp eq %struct.VkCommandBuffer_T* %0, null
  %8 = bitcast %struct.VkCommandBuffer_T* %0 to %"class.vk::DispatchableObject.884"*
  %9 = getelementptr inbounds %"class.vk::DispatchableObject.884", %"class.vk::DispatchableObject.884"* %8, i64 0, i32 1
  %10 = select i1 %7, %"class.vk::CommandBuffer"* null, %"class.vk::CommandBuffer"* %9
  %11 = inttoptr i64 %1 to %"class.vk::Buffer"*
  tail call void @_ZN2vk13CommandBuffer15bindIndexBufferEPNS_6BufferEm11VkIndexType(%"class.vk::CommandBuffer"* %10, %"class.vk::Buffer"* %11, i64 %2, i32 %3) #12
  ret void
}

; Function Attrs: optsize
declare void @_ZN2vk13CommandBuffer15bindIndexBufferEPNS_6BufferEm11VkIndexType(%"class.vk::CommandBuffer"*, %"class.vk::Buffer"*, i64, i32) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @vkCmdBindVertexBuffers(%struct.VkCommandBuffer_T*, i32, i32, %class.VkNonDispatchableHandle*, i64*) local_unnamed_addr #0 {
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([173 x i8], [173 x i8]* @.str.139, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 2525, %struct.VkCommandBuffer_T* %0, i32 %1, i32 %2, %class.VkNonDispatchableHandle* %3, i64* %4) #12
  %6 = icmp eq %struct.VkCommandBuffer_T* %0, null
  %7 = bitcast %struct.VkCommandBuffer_T* %0 to %"class.vk::DispatchableObject.884"*
  %8 = getelementptr inbounds %"class.vk::DispatchableObject.884", %"class.vk::DispatchableObject.884"* %7, i64 0, i32 1
  %9 = select i1 %6, %"class.vk::CommandBuffer"* null, %"class.vk::CommandBuffer"* %8
  tail call void @_ZN2vk13CommandBuffer17bindVertexBuffersEjjPK23VkNonDispatchableHandleIP10VkBuffer_TEPKm(%"class.vk::CommandBuffer"* %9, i32 %1, i32 %2, %class.VkNonDispatchableHandle* %3, i64* %4) #12
  ret void
}

; Function Attrs: optsize
declare void @_ZN2vk13CommandBuffer17bindVertexBuffersEjjPK23VkNonDispatchableHandleIP10VkBuffer_TEPKm(%"class.vk::CommandBuffer"*, i32, i32, %class.VkNonDispatchableHandle*, i64*) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @vkCmdDraw(%struct.VkCommandBuffer_T*, i32, i32, i32, i32) local_unnamed_addr #0 {
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([163 x i8], [163 x i8]* @.str.140, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 2533, %struct.VkCommandBuffer_T* %0, i32 %1, i32 %2, i32 %3, i32 %4) #12
  %6 = icmp eq %struct.VkCommandBuffer_T* %0, null
  %7 = bitcast %struct.VkCommandBuffer_T* %0 to %"class.vk::DispatchableObject.884"*
  %8 = getelementptr inbounds %"class.vk::DispatchableObject.884", %"class.vk::DispatchableObject.884"* %7, i64 0, i32 1
  %9 = select i1 %6, %"class.vk::CommandBuffer"* null, %"class.vk::CommandBuffer"* %8
  tail call void @_ZN2vk13CommandBuffer4drawEjjjj(%"class.vk::CommandBuffer"* %9, i32 %1, i32 %2, i32 %3, i32 %4) #12
  ret void
}

; Function Attrs: optsize
declare void @_ZN2vk13CommandBuffer4drawEjjjj(%"class.vk::CommandBuffer"*, i32, i32, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @vkCmdDrawIndexed(%struct.VkCommandBuffer_T*, i32, i32, i32, i32, i32) local_unnamed_addr #0 {
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([188 x i8], [188 x i8]* @.str.141, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 2541, %struct.VkCommandBuffer_T* %0, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5) #12
  %7 = icmp eq %struct.VkCommandBuffer_T* %0, null
  %8 = bitcast %struct.VkCommandBuffer_T* %0 to %"class.vk::DispatchableObject.884"*
  %9 = getelementptr inbounds %"class.vk::DispatchableObject.884", %"class.vk::DispatchableObject.884"* %8, i64 0, i32 1
  %10 = select i1 %7, %"class.vk::CommandBuffer"* null, %"class.vk::CommandBuffer"* %9
  tail call void @_ZN2vk13CommandBuffer11drawIndexedEjjjij(%"class.vk::CommandBuffer"* %10, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5) #12
  ret void
}

; Function Attrs: optsize
declare void @_ZN2vk13CommandBuffer11drawIndexedEjjjij(%"class.vk::CommandBuffer"*, i32, i32, i32, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @vkCmdDrawIndirect(%struct.VkCommandBuffer_T*, i64, i64, i32, i32) local_unnamed_addr #0 {
  %6 = inttoptr i64 %1 to i8*
  %7 = trunc i64 %2 to i32
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([146 x i8], [146 x i8]* @.str.142, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 2549, %struct.VkCommandBuffer_T* %0, i8* %6, i32 %7, i32 %3, i32 %4) #12
  %8 = icmp eq %struct.VkCommandBuffer_T* %0, null
  %9 = bitcast %struct.VkCommandBuffer_T* %0 to %"class.vk::DispatchableObject.884"*
  %10 = getelementptr inbounds %"class.vk::DispatchableObject.884", %"class.vk::DispatchableObject.884"* %9, i64 0, i32 1
  %11 = select i1 %8, %"class.vk::CommandBuffer"* null, %"class.vk::CommandBuffer"* %10
  %12 = inttoptr i64 %1 to %"class.vk::Buffer"*
  tail call void @_ZN2vk13CommandBuffer12drawIndirectEPNS_6BufferEmjj(%"class.vk::CommandBuffer"* %11, %"class.vk::Buffer"* %12, i64 %2, i32 %3, i32 %4) #12
  ret void
}

; Function Attrs: optsize
declare void @_ZN2vk13CommandBuffer12drawIndirectEPNS_6BufferEmjj(%"class.vk::CommandBuffer"*, %"class.vk::Buffer"*, i64, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @vkCmdDrawIndexedIndirect(%struct.VkCommandBuffer_T*, i64, i64, i32, i32) local_unnamed_addr #0 {
  %6 = inttoptr i64 %1 to i8*
  %7 = trunc i64 %2 to i32
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([146 x i8], [146 x i8]* @.str.142, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 2557, %struct.VkCommandBuffer_T* %0, i8* %6, i32 %7, i32 %3, i32 %4) #12
  %8 = icmp eq %struct.VkCommandBuffer_T* %0, null
  %9 = bitcast %struct.VkCommandBuffer_T* %0 to %"class.vk::DispatchableObject.884"*
  %10 = getelementptr inbounds %"class.vk::DispatchableObject.884", %"class.vk::DispatchableObject.884"* %9, i64 0, i32 1
  %11 = select i1 %8, %"class.vk::CommandBuffer"* null, %"class.vk::CommandBuffer"* %10
  %12 = inttoptr i64 %1 to %"class.vk::Buffer"*
  tail call void @_ZN2vk13CommandBuffer19drawIndexedIndirectEPNS_6BufferEmjj(%"class.vk::CommandBuffer"* %11, %"class.vk::Buffer"* %12, i64 %2, i32 %3, i32 %4) #12
  ret void
}

; Function Attrs: optsize
declare void @_ZN2vk13CommandBuffer19drawIndexedIndirectEPNS_6BufferEmjj(%"class.vk::CommandBuffer"*, %"class.vk::Buffer"*, i64, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @vkCmdDrawIndirectCount(%struct.VkCommandBuffer_T*, i64, i64, i64, i64, i32, i32) local_unnamed_addr #0 {
  %8 = inttoptr i64 %1 to i8*
  %9 = trunc i64 %2 to i32
  %10 = inttoptr i64 %3 to i8*
  %11 = trunc i64 %4 to i32
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([212 x i8], [212 x i8]* @.str.143, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 2565, %struct.VkCommandBuffer_T* %0, i8* %8, i32 %9, i8* %10, i32 %11, i32 %5, i32 %6) #12
  tail call void (i8*, ...) @_ZN2sw4warnEPKcz(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.144, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 2566) #12
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @vkCmdDrawIndexedIndirectCount(%struct.VkCommandBuffer_T*, i64, i64, i64, i64, i32, i32) local_unnamed_addr #0 {
  %8 = inttoptr i64 %1 to i8*
  %9 = trunc i64 %2 to i32
  %10 = inttoptr i64 %3 to i8*
  %11 = trunc i64 %4 to i32
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([212 x i8], [212 x i8]* @.str.143, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 2572, %struct.VkCommandBuffer_T* %0, i8* %8, i32 %9, i8* %10, i32 %11, i32 %5, i32 %6) #12
  tail call void (i8*, ...) @_ZN2sw4warnEPKcz(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.144, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 2573) #12
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @vkCmdDispatch(%struct.VkCommandBuffer_T*, i32, i32, i32) local_unnamed_addr #0 {
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([132 x i8], [132 x i8]* @.str.145, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 2579, %struct.VkCommandBuffer_T* %0, i32 %1, i32 %2, i32 %3) #12
  %5 = icmp eq %struct.VkCommandBuffer_T* %0, null
  %6 = bitcast %struct.VkCommandBuffer_T* %0 to %"class.vk::DispatchableObject.884"*
  %7 = getelementptr inbounds %"class.vk::DispatchableObject.884", %"class.vk::DispatchableObject.884"* %6, i64 0, i32 1
  %8 = select i1 %5, %"class.vk::CommandBuffer"* null, %"class.vk::CommandBuffer"* %7
  tail call void @_ZN2vk13CommandBuffer8dispatchEjjj(%"class.vk::CommandBuffer"* %8, i32 %1, i32 %2, i32 %3) #12
  ret void
}

; Function Attrs: optsize
declare void @_ZN2vk13CommandBuffer8dispatchEjjj(%"class.vk::CommandBuffer"*, i32, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @vkCmdDispatchIndirect(%struct.VkCommandBuffer_T*, i64, i64) local_unnamed_addr #0 {
  %4 = inttoptr i64 %1 to i8*
  %5 = trunc i64 %2 to i32
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([99 x i8], [99 x i8]* @.str.146, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 2587, %struct.VkCommandBuffer_T* %0, i8* %4, i32 %5) #12
  %6 = icmp eq %struct.VkCommandBuffer_T* %0, null
  %7 = bitcast %struct.VkCommandBuffer_T* %0 to %"class.vk::DispatchableObject.884"*
  %8 = getelementptr inbounds %"class.vk::DispatchableObject.884", %"class.vk::DispatchableObject.884"* %7, i64 0, i32 1
  %9 = select i1 %6, %"class.vk::CommandBuffer"* null, %"class.vk::CommandBuffer"* %8
  %10 = inttoptr i64 %1 to %"class.vk::Buffer"*
  tail call void @_ZN2vk13CommandBuffer16dispatchIndirectEPNS_6BufferEm(%"class.vk::CommandBuffer"* %9, %"class.vk::Buffer"* %10, i64 %2) #12
  ret void
}

; Function Attrs: optsize
declare void @_ZN2vk13CommandBuffer16dispatchIndirectEPNS_6BufferEm(%"class.vk::CommandBuffer"*, %"class.vk::Buffer"*, i64) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @vkCmdCopyBuffer(%struct.VkCommandBuffer_T*, i64, i64, i32, %struct.VkBufferCopy*) local_unnamed_addr #0 {
  %6 = inttoptr i64 %1 to i8*
  %7 = inttoptr i64 %2 to i8*
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([163 x i8], [163 x i8]* @.str.147, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 2595, %struct.VkCommandBuffer_T* %0, i8* %6, i8* %7, i32 %3, %struct.VkBufferCopy* %4) #12
  %8 = icmp eq %struct.VkCommandBuffer_T* %0, null
  %9 = bitcast %struct.VkCommandBuffer_T* %0 to %"class.vk::DispatchableObject.884"*
  %10 = getelementptr inbounds %"class.vk::DispatchableObject.884", %"class.vk::DispatchableObject.884"* %9, i64 0, i32 1
  %11 = select i1 %8, %"class.vk::CommandBuffer"* null, %"class.vk::CommandBuffer"* %10
  %12 = inttoptr i64 %1 to %"class.vk::Buffer"*
  %13 = inttoptr i64 %2 to %"class.vk::Buffer"*
  tail call void @_ZN2vk13CommandBuffer10copyBufferEPKNS_6BufferEPS1_jPK12VkBufferCopy(%"class.vk::CommandBuffer"* %11, %"class.vk::Buffer"* %12, %"class.vk::Buffer"* %13, i32 %3, %struct.VkBufferCopy* %4) #12
  ret void
}

; Function Attrs: optsize
declare void @_ZN2vk13CommandBuffer10copyBufferEPKNS_6BufferEPS1_jPK12VkBufferCopy(%"class.vk::CommandBuffer"*, %"class.vk::Buffer"*, %"class.vk::Buffer"*, i32, %struct.VkBufferCopy*) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @vkCmdCopyImage(%struct.VkCommandBuffer_T*, i64, i32, i64, i32, i32, %struct.VkImageCopy*) local_unnamed_addr #0 {
  %8 = inttoptr i64 %1 to i8*
  %9 = inttoptr i64 %3 to i8*
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([228 x i8], [228 x i8]* @.str.148, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 2603, %struct.VkCommandBuffer_T* %0, i8* %8, i32 %2, i8* %9, i32 %4, i32 %5, %struct.VkImageCopy* %6) #12
  %10 = icmp eq %struct.VkCommandBuffer_T* %0, null
  %11 = bitcast %struct.VkCommandBuffer_T* %0 to %"class.vk::DispatchableObject.884"*
  %12 = getelementptr inbounds %"class.vk::DispatchableObject.884", %"class.vk::DispatchableObject.884"* %11, i64 0, i32 1
  %13 = select i1 %10, %"class.vk::CommandBuffer"* null, %"class.vk::CommandBuffer"* %12
  %14 = inttoptr i64 %1 to %"class.vk::Image"*
  %15 = inttoptr i64 %3 to %"class.vk::Image"*
  tail call void @_ZN2vk13CommandBuffer9copyImageEPKNS_5ImageE13VkImageLayoutPS1_S4_jPK11VkImageCopy(%"class.vk::CommandBuffer"* %13, %"class.vk::Image"* %14, i32 %2, %"class.vk::Image"* %15, i32 %4, i32 %5, %struct.VkImageCopy* %6) #12
  ret void
}

; Function Attrs: optsize
declare void @_ZN2vk13CommandBuffer9copyImageEPKNS_5ImageE13VkImageLayoutPS1_S4_jPK11VkImageCopy(%"class.vk::CommandBuffer"*, %"class.vk::Image"*, i32, %"class.vk::Image"*, i32, i32, %struct.VkImageCopy*) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @vkCmdBlitImage(%struct.VkCommandBuffer_T*, i64, i32, i64, i32, i32, %struct.VkImageBlit*, i32) local_unnamed_addr #0 {
  %9 = inttoptr i64 %1 to i8*
  %10 = inttoptr i64 %3 to i8*
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([250 x i8], [250 x i8]* @.str.149, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 2611, %struct.VkCommandBuffer_T* %0, i8* %9, i32 %2, i8* %10, i32 %4, i32 %5, %struct.VkImageBlit* %6, i32 %7) #12
  %11 = icmp eq %struct.VkCommandBuffer_T* %0, null
  %12 = bitcast %struct.VkCommandBuffer_T* %0 to %"class.vk::DispatchableObject.884"*
  %13 = getelementptr inbounds %"class.vk::DispatchableObject.884", %"class.vk::DispatchableObject.884"* %12, i64 0, i32 1
  %14 = select i1 %11, %"class.vk::CommandBuffer"* null, %"class.vk::CommandBuffer"* %13
  %15 = inttoptr i64 %1 to %"class.vk::Image"*
  %16 = inttoptr i64 %3 to %"class.vk::Image"*
  tail call void @_ZN2vk13CommandBuffer9blitImageEPKNS_5ImageE13VkImageLayoutPS1_S4_jPK11VkImageBlit8VkFilter(%"class.vk::CommandBuffer"* %14, %"class.vk::Image"* %15, i32 %2, %"class.vk::Image"* %16, i32 %4, i32 %5, %struct.VkImageBlit* %6, i32 %7) #12
  ret void
}

; Function Attrs: optsize
declare void @_ZN2vk13CommandBuffer9blitImageEPKNS_5ImageE13VkImageLayoutPS1_S4_jPK11VkImageBlit8VkFilter(%"class.vk::CommandBuffer"*, %"class.vk::Image"*, i32, %"class.vk::Image"*, i32, i32, %struct.VkImageBlit*, i32) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @vkCmdCopyBufferToImage(%struct.VkCommandBuffer_T*, i64, i64, i32, i32, %struct.VkBufferImageCopy*) local_unnamed_addr #0 {
  %7 = inttoptr i64 %1 to i8*
  %8 = inttoptr i64 %2 to i8*
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([201 x i8], [201 x i8]* @.str.150, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 2619, %struct.VkCommandBuffer_T* %0, i8* %7, i8* %8, i32 %3, i32 %4, %struct.VkBufferImageCopy* %5) #12
  %9 = icmp eq %struct.VkCommandBuffer_T* %0, null
  %10 = bitcast %struct.VkCommandBuffer_T* %0 to %"class.vk::DispatchableObject.884"*
  %11 = getelementptr inbounds %"class.vk::DispatchableObject.884", %"class.vk::DispatchableObject.884"* %10, i64 0, i32 1
  %12 = select i1 %9, %"class.vk::CommandBuffer"* null, %"class.vk::CommandBuffer"* %11
  %13 = inttoptr i64 %1 to %"class.vk::Buffer"*
  %14 = inttoptr i64 %2 to %"class.vk::Image"*
  tail call void @_ZN2vk13CommandBuffer17copyBufferToImageEPNS_6BufferEPNS_5ImageE13VkImageLayoutjPK17VkBufferImageCopy(%"class.vk::CommandBuffer"* %12, %"class.vk::Buffer"* %13, %"class.vk::Image"* %14, i32 %3, i32 %4, %struct.VkBufferImageCopy* %5) #12
  ret void
}

; Function Attrs: optsize
declare void @_ZN2vk13CommandBuffer17copyBufferToImageEPNS_6BufferEPNS_5ImageE13VkImageLayoutjPK17VkBufferImageCopy(%"class.vk::CommandBuffer"*, %"class.vk::Buffer"*, %"class.vk::Image"*, i32, i32, %struct.VkBufferImageCopy*) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @vkCmdCopyImageToBuffer(%struct.VkCommandBuffer_T*, i64, i32, i64, i32, %struct.VkBufferImageCopy*) local_unnamed_addr #0 {
  %7 = inttoptr i64 %1 to i8*
  %8 = inttoptr i64 %3 to i8*
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([201 x i8], [201 x i8]* @.str.151, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 2627, %struct.VkCommandBuffer_T* %0, i8* %7, i32 %2, i8* %8, i32 %4, %struct.VkBufferImageCopy* %5) #12
  %9 = icmp eq %struct.VkCommandBuffer_T* %0, null
  %10 = bitcast %struct.VkCommandBuffer_T* %0 to %"class.vk::DispatchableObject.884"*
  %11 = getelementptr inbounds %"class.vk::DispatchableObject.884", %"class.vk::DispatchableObject.884"* %10, i64 0, i32 1
  %12 = select i1 %9, %"class.vk::CommandBuffer"* null, %"class.vk::CommandBuffer"* %11
  %13 = inttoptr i64 %1 to %"class.vk::Image"*
  %14 = inttoptr i64 %3 to %"class.vk::Buffer"*
  tail call void @_ZN2vk13CommandBuffer17copyImageToBufferEPNS_5ImageE13VkImageLayoutPNS_6BufferEjPK17VkBufferImageCopy(%"class.vk::CommandBuffer"* %12, %"class.vk::Image"* %13, i32 %2, %"class.vk::Buffer"* %14, i32 %4, %struct.VkBufferImageCopy* %5) #12
  ret void
}

; Function Attrs: optsize
declare void @_ZN2vk13CommandBuffer17copyImageToBufferEPNS_5ImageE13VkImageLayoutPNS_6BufferEjPK17VkBufferImageCopy(%"class.vk::CommandBuffer"*, %"class.vk::Image"*, i32, %"class.vk::Buffer"*, i32, %struct.VkBufferImageCopy*) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @vkCmdUpdateBuffer(%struct.VkCommandBuffer_T*, i64, i64, i64, i8*) local_unnamed_addr #0 {
  %6 = inttoptr i64 %1 to i8*
  %7 = trunc i64 %2 to i32
  %8 = trunc i64 %3 to i32
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([157 x i8], [157 x i8]* @.str.152, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 2635, %struct.VkCommandBuffer_T* %0, i8* %6, i32 %7, i32 %8, i8* %4) #12
  %9 = icmp eq %struct.VkCommandBuffer_T* %0, null
  %10 = bitcast %struct.VkCommandBuffer_T* %0 to %"class.vk::DispatchableObject.884"*
  %11 = getelementptr inbounds %"class.vk::DispatchableObject.884", %"class.vk::DispatchableObject.884"* %10, i64 0, i32 1
  %12 = select i1 %9, %"class.vk::CommandBuffer"* null, %"class.vk::CommandBuffer"* %11
  %13 = inttoptr i64 %1 to %"class.vk::Buffer"*
  tail call void @_ZN2vk13CommandBuffer12updateBufferEPNS_6BufferEmmPKv(%"class.vk::CommandBuffer"* %12, %"class.vk::Buffer"* %13, i64 %2, i64 %3, i8* %4) #12
  ret void
}

; Function Attrs: optsize
declare void @_ZN2vk13CommandBuffer12updateBufferEPNS_6BufferEmmPKv(%"class.vk::CommandBuffer"*, %"class.vk::Buffer"*, i64, i64, i8*) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @vkCmdFillBuffer(%struct.VkCommandBuffer_T*, i64, i64, i64, i32) local_unnamed_addr #0 {
  %6 = inttoptr i64 %1 to i8*
  %7 = trunc i64 %2 to i32
  %8 = trunc i64 %3 to i32
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([149 x i8], [149 x i8]* @.str.153, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 2643, %struct.VkCommandBuffer_T* %0, i8* %6, i32 %7, i32 %8, i32 %4) #12
  %9 = icmp eq %struct.VkCommandBuffer_T* %0, null
  %10 = bitcast %struct.VkCommandBuffer_T* %0 to %"class.vk::DispatchableObject.884"*
  %11 = getelementptr inbounds %"class.vk::DispatchableObject.884", %"class.vk::DispatchableObject.884"* %10, i64 0, i32 1
  %12 = select i1 %9, %"class.vk::CommandBuffer"* null, %"class.vk::CommandBuffer"* %11
  %13 = inttoptr i64 %1 to %"class.vk::Buffer"*
  tail call void @_ZN2vk13CommandBuffer10fillBufferEPNS_6BufferEmmj(%"class.vk::CommandBuffer"* %12, %"class.vk::Buffer"* %13, i64 %2, i64 %3, i32 %4) #12
  ret void
}

; Function Attrs: optsize
declare void @_ZN2vk13CommandBuffer10fillBufferEPNS_6BufferEmmj(%"class.vk::CommandBuffer"*, %"class.vk::Buffer"*, i64, i64, i32) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @vkCmdClearColorImage(%struct.VkCommandBuffer_T*, i64, i32, %union.VkClearColorValue*, i32, %struct.VkImageSubresourceRange*) local_unnamed_addr #0 {
  %7 = inttoptr i64 %1 to i8*
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([212 x i8], [212 x i8]* @.str.154, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 2651, %struct.VkCommandBuffer_T* %0, i8* %7, i32 %2, %union.VkClearColorValue* %3, i32 %4, %struct.VkImageSubresourceRange* %5) #12
  %8 = icmp eq %struct.VkCommandBuffer_T* %0, null
  %9 = bitcast %struct.VkCommandBuffer_T* %0 to %"class.vk::DispatchableObject.884"*
  %10 = getelementptr inbounds %"class.vk::DispatchableObject.884", %"class.vk::DispatchableObject.884"* %9, i64 0, i32 1
  %11 = select i1 %8, %"class.vk::CommandBuffer"* null, %"class.vk::CommandBuffer"* %10
  %12 = inttoptr i64 %1 to %"class.vk::Image"*
  tail call void @_ZN2vk13CommandBuffer15clearColorImageEPNS_5ImageE13VkImageLayoutPK17VkClearColorValuejPK23VkImageSubresourceRange(%"class.vk::CommandBuffer"* %11, %"class.vk::Image"* %12, i32 %2, %union.VkClearColorValue* %3, i32 %4, %struct.VkImageSubresourceRange* %5) #12
  ret void
}

; Function Attrs: optsize
declare void @_ZN2vk13CommandBuffer15clearColorImageEPNS_5ImageE13VkImageLayoutPK17VkClearColorValuejPK23VkImageSubresourceRange(%"class.vk::CommandBuffer"*, %"class.vk::Image"*, i32, %union.VkClearColorValue*, i32, %struct.VkImageSubresourceRange*) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @vkCmdClearDepthStencilImage(%struct.VkCommandBuffer_T*, i64, i32, %struct.VkClearDepthStencilValue*, i32, %struct.VkImageSubresourceRange*) local_unnamed_addr #0 {
  %7 = inttoptr i64 %1 to i8*
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([226 x i8], [226 x i8]* @.str.155, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 2659, %struct.VkCommandBuffer_T* %0, i8* %7, i32 %2, %struct.VkClearDepthStencilValue* %3, i32 %4, %struct.VkImageSubresourceRange* %5) #12
  %8 = icmp eq %struct.VkCommandBuffer_T* %0, null
  %9 = bitcast %struct.VkCommandBuffer_T* %0 to %"class.vk::DispatchableObject.884"*
  %10 = getelementptr inbounds %"class.vk::DispatchableObject.884", %"class.vk::DispatchableObject.884"* %9, i64 0, i32 1
  %11 = select i1 %8, %"class.vk::CommandBuffer"* null, %"class.vk::CommandBuffer"* %10
  %12 = inttoptr i64 %1 to %"class.vk::Image"*
  tail call void @_ZN2vk13CommandBuffer22clearDepthStencilImageEPNS_5ImageE13VkImageLayoutPK24VkClearDepthStencilValuejPK23VkImageSubresourceRange(%"class.vk::CommandBuffer"* %11, %"class.vk::Image"* %12, i32 %2, %struct.VkClearDepthStencilValue* %3, i32 %4, %struct.VkImageSubresourceRange* %5) #12
  ret void
}

; Function Attrs: optsize
declare void @_ZN2vk13CommandBuffer22clearDepthStencilImageEPNS_5ImageE13VkImageLayoutPK24VkClearDepthStencilValuejPK23VkImageSubresourceRange(%"class.vk::CommandBuffer"*, %"class.vk::Image"*, i32, %struct.VkClearDepthStencilValue*, i32, %struct.VkImageSubresourceRange*) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @vkCmdClearAttachments(%struct.VkCommandBuffer_T*, i32, %struct.VkClearAttachment*, i32, %struct.VkClearRect*) local_unnamed_addr #0 {
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([183 x i8], [183 x i8]* @.str.156, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 2667, %struct.VkCommandBuffer_T* %0, i32 %1, %struct.VkClearAttachment* %2, i32 %3, %struct.VkClearRect* %4) #12
  %6 = icmp eq %struct.VkCommandBuffer_T* %0, null
  %7 = bitcast %struct.VkCommandBuffer_T* %0 to %"class.vk::DispatchableObject.884"*
  %8 = getelementptr inbounds %"class.vk::DispatchableObject.884", %"class.vk::DispatchableObject.884"* %7, i64 0, i32 1
  %9 = select i1 %6, %"class.vk::CommandBuffer"* null, %"class.vk::CommandBuffer"* %8
  tail call void @_ZN2vk13CommandBuffer16clearAttachmentsEjPK17VkClearAttachmentjPK11VkClearRect(%"class.vk::CommandBuffer"* %9, i32 %1, %struct.VkClearAttachment* %2, i32 %3, %struct.VkClearRect* %4) #12
  ret void
}

; Function Attrs: optsize
declare void @_ZN2vk13CommandBuffer16clearAttachmentsEjPK17VkClearAttachmentjPK11VkClearRect(%"class.vk::CommandBuffer"*, i32, %struct.VkClearAttachment*, i32, %struct.VkClearRect*) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @vkCmdResolveImage(%struct.VkCommandBuffer_T*, i64, i32, i64, i32, i32, %struct.VkImageResolve*) local_unnamed_addr #0 {
  %8 = inttoptr i64 %1 to i8*
  %9 = inttoptr i64 %3 to i8*
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([231 x i8], [231 x i8]* @.str.157, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 2675, %struct.VkCommandBuffer_T* %0, i8* %8, i32 %2, i8* %9, i32 %4, i32 %5, %struct.VkImageResolve* %6) #12
  %10 = icmp eq %struct.VkCommandBuffer_T* %0, null
  %11 = bitcast %struct.VkCommandBuffer_T* %0 to %"class.vk::DispatchableObject.884"*
  %12 = getelementptr inbounds %"class.vk::DispatchableObject.884", %"class.vk::DispatchableObject.884"* %11, i64 0, i32 1
  %13 = select i1 %10, %"class.vk::CommandBuffer"* null, %"class.vk::CommandBuffer"* %12
  %14 = inttoptr i64 %1 to %"class.vk::Image"*
  %15 = inttoptr i64 %3 to %"class.vk::Image"*
  tail call void @_ZN2vk13CommandBuffer12resolveImageEPKNS_5ImageE13VkImageLayoutPS1_S4_jPK14VkImageResolve(%"class.vk::CommandBuffer"* %13, %"class.vk::Image"* %14, i32 %2, %"class.vk::Image"* %15, i32 %4, i32 %5, %struct.VkImageResolve* %6) #12
  ret void
}

; Function Attrs: optsize
declare void @_ZN2vk13CommandBuffer12resolveImageEPKNS_5ImageE13VkImageLayoutPS1_S4_jPK14VkImageResolve(%"class.vk::CommandBuffer"*, %"class.vk::Image"*, i32, %"class.vk::Image"*, i32, i32, %struct.VkImageResolve*) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @vkCmdSetEvent(%struct.VkCommandBuffer_T*, i64, i32) local_unnamed_addr #0 {
  %4 = inttoptr i64 %1 to i8*
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([108 x i8], [108 x i8]* @.str.158, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 2683, %struct.VkCommandBuffer_T* %0, i8* %4, i32 %2) #12
  %5 = icmp eq %struct.VkCommandBuffer_T* %0, null
  %6 = bitcast %struct.VkCommandBuffer_T* %0 to %"class.vk::DispatchableObject.884"*
  %7 = getelementptr inbounds %"class.vk::DispatchableObject.884", %"class.vk::DispatchableObject.884"* %6, i64 0, i32 1
  %8 = select i1 %5, %"class.vk::CommandBuffer"* null, %"class.vk::CommandBuffer"* %7
  %9 = inttoptr i64 %1 to %"class.vk::Event"*
  tail call void @_ZN2vk13CommandBuffer8setEventEPNS_5EventEj(%"class.vk::CommandBuffer"* %8, %"class.vk::Event"* %9, i32 %2) #12
  ret void
}

; Function Attrs: optsize
declare void @_ZN2vk13CommandBuffer8setEventEPNS_5EventEj(%"class.vk::CommandBuffer"*, %"class.vk::Event"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @vkCmdResetEvent(%struct.VkCommandBuffer_T*, i64, i32) local_unnamed_addr #0 {
  %4 = inttoptr i64 %1 to i8*
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([108 x i8], [108 x i8]* @.str.158, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 2691, %struct.VkCommandBuffer_T* %0, i8* %4, i32 %2) #12
  %5 = icmp eq %struct.VkCommandBuffer_T* %0, null
  %6 = bitcast %struct.VkCommandBuffer_T* %0 to %"class.vk::DispatchableObject.884"*
  %7 = getelementptr inbounds %"class.vk::DispatchableObject.884", %"class.vk::DispatchableObject.884"* %6, i64 0, i32 1
  %8 = select i1 %5, %"class.vk::CommandBuffer"* null, %"class.vk::CommandBuffer"* %7
  %9 = inttoptr i64 %1 to %"class.vk::Event"*
  tail call void @_ZN2vk13CommandBuffer10resetEventEPNS_5EventEj(%"class.vk::CommandBuffer"* %8, %"class.vk::Event"* %9, i32 %2) #12
  ret void
}

; Function Attrs: optsize
declare void @_ZN2vk13CommandBuffer10resetEventEPNS_5EventEj(%"class.vk::CommandBuffer"*, %"class.vk::Event"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @vkCmdWaitEvents(%struct.VkCommandBuffer_T*, i32, %class.VkNonDispatchableHandle.4*, i32, i32, i32, %struct.VkMemoryBarrier*, i32, %struct.VkBufferMemoryBarrier*, i32, %struct.VkImageMemoryBarrier*) local_unnamed_addr #0 {
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([460 x i8], [460 x i8]* @.str.159, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 2699, %struct.VkCommandBuffer_T* %0, i32 %1, %class.VkNonDispatchableHandle.4* %2, i32 %3, i32 %4, i32 %5, %struct.VkMemoryBarrier* %6, i32 %7, %struct.VkBufferMemoryBarrier* %8, i32 %9, %struct.VkImageMemoryBarrier* %10) #12
  %12 = icmp eq %struct.VkCommandBuffer_T* %0, null
  %13 = bitcast %struct.VkCommandBuffer_T* %0 to %"class.vk::DispatchableObject.884"*
  %14 = getelementptr inbounds %"class.vk::DispatchableObject.884", %"class.vk::DispatchableObject.884"* %13, i64 0, i32 1
  %15 = select i1 %12, %"class.vk::CommandBuffer"* null, %"class.vk::CommandBuffer"* %14
  tail call void @_ZN2vk13CommandBuffer10waitEventsEjPK23VkNonDispatchableHandleIP9VkEvent_TEjjjPK15VkMemoryBarrierjPK21VkBufferMemoryBarrierjPK20VkImageMemoryBarrier(%"class.vk::CommandBuffer"* %15, i32 %1, %class.VkNonDispatchableHandle.4* %2, i32 %3, i32 %4, i32 %5, %struct.VkMemoryBarrier* %6, i32 %7, %struct.VkBufferMemoryBarrier* %8, i32 %9, %struct.VkImageMemoryBarrier* %10) #12
  ret void
}

; Function Attrs: optsize
declare void @_ZN2vk13CommandBuffer10waitEventsEjPK23VkNonDispatchableHandleIP9VkEvent_TEjjjPK15VkMemoryBarrierjPK21VkBufferMemoryBarrierjPK20VkImageMemoryBarrier(%"class.vk::CommandBuffer"*, i32, %class.VkNonDispatchableHandle.4*, i32, i32, i32, %struct.VkMemoryBarrier*, i32, %struct.VkBufferMemoryBarrier*, i32, %struct.VkImageMemoryBarrier*) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @vkCmdPipelineBarrier(%struct.VkCommandBuffer_T*, i32, i32, i32, i32, %struct.VkMemoryBarrier*, i32, %struct.VkBufferMemoryBarrier*, i32, %struct.VkImageMemoryBarrier*) local_unnamed_addr #0 {
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([444 x i8], [444 x i8]* @.str.160, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 2709, %struct.VkCommandBuffer_T* %0, i32 %1, i32 %2, i32 %3, i32 %4, %struct.VkMemoryBarrier* %5, i32 %6, %struct.VkBufferMemoryBarrier* %7, i32 %8, %struct.VkImageMemoryBarrier* %9) #12
  %11 = icmp eq %struct.VkCommandBuffer_T* %0, null
  %12 = bitcast %struct.VkCommandBuffer_T* %0 to %"class.vk::DispatchableObject.884"*
  %13 = getelementptr inbounds %"class.vk::DispatchableObject.884", %"class.vk::DispatchableObject.884"* %12, i64 0, i32 1
  %14 = select i1 %11, %"class.vk::CommandBuffer"* null, %"class.vk::CommandBuffer"* %13
  tail call void @_ZN2vk13CommandBuffer15pipelineBarrierEjjjjPK15VkMemoryBarrierjPK21VkBufferMemoryBarrierjPK20VkImageMemoryBarrier(%"class.vk::CommandBuffer"* %14, i32 %1, i32 %2, i32 %3, i32 %4, %struct.VkMemoryBarrier* %5, i32 %6, %struct.VkBufferMemoryBarrier* %7, i32 %8, %struct.VkImageMemoryBarrier* %9) #12
  ret void
}

; Function Attrs: optsize
declare void @_ZN2vk13CommandBuffer15pipelineBarrierEjjjjPK15VkMemoryBarrierjPK21VkBufferMemoryBarrierjPK20VkImageMemoryBarrier(%"class.vk::CommandBuffer"*, i32, i32, i32, i32, %struct.VkMemoryBarrier*, i32, %struct.VkBufferMemoryBarrier*, i32, %struct.VkImageMemoryBarrier*) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @vkCmdBeginQuery(%struct.VkCommandBuffer_T*, i64, i32, i32) local_unnamed_addr #0 {
  %5 = inttoptr i64 %1 to i8*
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([132 x i8], [132 x i8]* @.str.161, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 2717, %struct.VkCommandBuffer_T* %0, i8* %5, i32 %2, i32 %3) #12
  %6 = icmp eq %struct.VkCommandBuffer_T* %0, null
  %7 = bitcast %struct.VkCommandBuffer_T* %0 to %"class.vk::DispatchableObject.884"*
  %8 = getelementptr inbounds %"class.vk::DispatchableObject.884", %"class.vk::DispatchableObject.884"* %7, i64 0, i32 1
  %9 = select i1 %6, %"class.vk::CommandBuffer"* null, %"class.vk::CommandBuffer"* %8
  %10 = inttoptr i64 %1 to %"class.vk::QueryPool"*
  tail call void @_ZN2vk13CommandBuffer10beginQueryEPNS_9QueryPoolEjj(%"class.vk::CommandBuffer"* %9, %"class.vk::QueryPool"* %10, i32 %2, i32 %3) #12
  ret void
}

; Function Attrs: optsize
declare void @_ZN2vk13CommandBuffer10beginQueryEPNS_9QueryPoolEjj(%"class.vk::CommandBuffer"*, %"class.vk::QueryPool"*, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @vkCmdEndQuery(%struct.VkCommandBuffer_T*, i64, i32) local_unnamed_addr #0 {
  %4 = inttoptr i64 %1 to i8*
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([100 x i8], [100 x i8]* @.str.162, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 2725, %struct.VkCommandBuffer_T* %0, i8* %4, i32 %2) #12
  %5 = icmp eq %struct.VkCommandBuffer_T* %0, null
  %6 = bitcast %struct.VkCommandBuffer_T* %0 to %"class.vk::DispatchableObject.884"*
  %7 = getelementptr inbounds %"class.vk::DispatchableObject.884", %"class.vk::DispatchableObject.884"* %6, i64 0, i32 1
  %8 = select i1 %5, %"class.vk::CommandBuffer"* null, %"class.vk::CommandBuffer"* %7
  %9 = inttoptr i64 %1 to %"class.vk::QueryPool"*
  tail call void @_ZN2vk13CommandBuffer8endQueryEPNS_9QueryPoolEj(%"class.vk::CommandBuffer"* %8, %"class.vk::QueryPool"* %9, i32 %2) #12
  ret void
}

; Function Attrs: optsize
declare void @_ZN2vk13CommandBuffer8endQueryEPNS_9QueryPoolEj(%"class.vk::CommandBuffer"*, %"class.vk::QueryPool"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @vkCmdResetQueryPool(%struct.VkCommandBuffer_T*, i64, i32, i32) local_unnamed_addr #0 {
  %5 = inttoptr i64 %1 to i8*
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([131 x i8], [131 x i8]* @.str.163, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 2733, %struct.VkCommandBuffer_T* %0, i8* %5, i32 %2, i32 %3) #12
  %6 = icmp eq %struct.VkCommandBuffer_T* %0, null
  %7 = bitcast %struct.VkCommandBuffer_T* %0 to %"class.vk::DispatchableObject.884"*
  %8 = getelementptr inbounds %"class.vk::DispatchableObject.884", %"class.vk::DispatchableObject.884"* %7, i64 0, i32 1
  %9 = select i1 %6, %"class.vk::CommandBuffer"* null, %"class.vk::CommandBuffer"* %8
  %10 = inttoptr i64 %1 to %"class.vk::QueryPool"*
  tail call void @_ZN2vk13CommandBuffer14resetQueryPoolEPNS_9QueryPoolEjj(%"class.vk::CommandBuffer"* %9, %"class.vk::QueryPool"* %10, i32 %2, i32 %3) #12
  ret void
}

; Function Attrs: optsize
declare void @_ZN2vk13CommandBuffer14resetQueryPoolEPNS_9QueryPoolEjj(%"class.vk::CommandBuffer"*, %"class.vk::QueryPool"*, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @vkCmdWriteTimestamp(%struct.VkCommandBuffer_T*, i32, i64, i32) local_unnamed_addr #0 {
  %5 = inttoptr i64 %2 to i8*
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([144 x i8], [144 x i8]* @.str.164, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 2741, %struct.VkCommandBuffer_T* %0, i32 %1, i8* %5, i32 %3) #12
  %6 = icmp eq %struct.VkCommandBuffer_T* %0, null
  %7 = bitcast %struct.VkCommandBuffer_T* %0 to %"class.vk::DispatchableObject.884"*
  %8 = getelementptr inbounds %"class.vk::DispatchableObject.884", %"class.vk::DispatchableObject.884"* %7, i64 0, i32 1
  %9 = select i1 %6, %"class.vk::CommandBuffer"* null, %"class.vk::CommandBuffer"* %8
  %10 = inttoptr i64 %2 to %"class.vk::QueryPool"*
  tail call void @_ZN2vk13CommandBuffer14writeTimestampE23VkPipelineStageFlagBitsPNS_9QueryPoolEj(%"class.vk::CommandBuffer"* %9, i32 %1, %"class.vk::QueryPool"* %10, i32 %3) #12
  ret void
}

; Function Attrs: optsize
declare void @_ZN2vk13CommandBuffer14writeTimestampE23VkPipelineStageFlagBitsPNS_9QueryPoolEj(%"class.vk::CommandBuffer"*, i32, %"class.vk::QueryPool"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @vkCmdCopyQueryPoolResults(%struct.VkCommandBuffer_T*, i64, i32, i32, i64, i64, i64, i32) local_unnamed_addr #0 {
  %9 = inttoptr i64 %1 to i8*
  %10 = inttoptr i64 %4 to i8*
  %11 = trunc i64 %5 to i32
  %12 = trunc i64 %6 to i32
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([242 x i8], [242 x i8]* @.str.165, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 2749, %struct.VkCommandBuffer_T* %0, i8* %9, i32 %2, i32 %3, i8* %10, i32 %11, i32 %12, i32 %7) #12
  %13 = icmp eq %struct.VkCommandBuffer_T* %0, null
  %14 = bitcast %struct.VkCommandBuffer_T* %0 to %"class.vk::DispatchableObject.884"*
  %15 = getelementptr inbounds %"class.vk::DispatchableObject.884", %"class.vk::DispatchableObject.884"* %14, i64 0, i32 1
  %16 = select i1 %13, %"class.vk::CommandBuffer"* null, %"class.vk::CommandBuffer"* %15
  %17 = inttoptr i64 %1 to %"class.vk::QueryPool"*
  %18 = inttoptr i64 %4 to %"class.vk::Buffer"*
  tail call void @_ZN2vk13CommandBuffer20copyQueryPoolResultsEPKNS_9QueryPoolEjjPNS_6BufferEmmj(%"class.vk::CommandBuffer"* %16, %"class.vk::QueryPool"* %17, i32 %2, i32 %3, %"class.vk::Buffer"* %18, i64 %5, i64 %6, i32 %7) #12
  ret void
}

; Function Attrs: optsize
declare void @_ZN2vk13CommandBuffer20copyQueryPoolResultsEPKNS_9QueryPoolEjjPNS_6BufferEmmj(%"class.vk::CommandBuffer"*, %"class.vk::QueryPool"*, i32, i32, %"class.vk::Buffer"*, i64, i64, i32) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @vkCmdPushConstants(%struct.VkCommandBuffer_T*, i64, i32, i32, i32, i8*) local_unnamed_addr #0 {
  %7 = inttoptr i64 %1 to i8*
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([185 x i8], [185 x i8]* @.str.166, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 2757, %struct.VkCommandBuffer_T* %0, i8* %7, i32 %2, i32 %3, i32 %4, i8* %5) #12
  %8 = icmp eq %struct.VkCommandBuffer_T* %0, null
  %9 = bitcast %struct.VkCommandBuffer_T* %0 to %"class.vk::DispatchableObject.884"*
  %10 = getelementptr inbounds %"class.vk::DispatchableObject.884", %"class.vk::DispatchableObject.884"* %9, i64 0, i32 1
  %11 = select i1 %8, %"class.vk::CommandBuffer"* null, %"class.vk::CommandBuffer"* %10
  %12 = inttoptr i64 %1 to %"class.vk::PipelineLayout"*
  tail call void @_ZN2vk13CommandBuffer13pushConstantsEPNS_14PipelineLayoutEjjjPKv(%"class.vk::CommandBuffer"* %11, %"class.vk::PipelineLayout"* %12, i32 %2, i32 %3, i32 %4, i8* %5) #12
  ret void
}

; Function Attrs: optsize
declare void @_ZN2vk13CommandBuffer13pushConstantsEPNS_14PipelineLayoutEjjjPKv(%"class.vk::CommandBuffer"*, %"class.vk::PipelineLayout"*, i32, i32, i32, i8*) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @vkCmdBeginRenderPass(%struct.VkCommandBuffer_T*, %struct.VkRenderPassBeginInfo*, i32) local_unnamed_addr #0 {
  %4 = alloca %struct.VkSubpassBeginInfo, align 8
  %5 = bitcast %struct.VkSubpassBeginInfo* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -86, i64 24, i1 false)
  %6 = getelementptr inbounds %struct.VkSubpassBeginInfo, %struct.VkSubpassBeginInfo* %4, i64 0, i32 0
  store i32 1000109005, i32* %6, align 8
  %7 = getelementptr inbounds %struct.VkSubpassBeginInfo, %struct.VkSubpassBeginInfo* %4, i64 0, i32 1
  store i8* null, i8** %7, align 8
  %8 = getelementptr inbounds %struct.VkSubpassBeginInfo, %struct.VkSubpassBeginInfo* %4, i64 0, i32 2
  store i32 %2, i32* %8, align 8
  call void @vkCmdBeginRenderPass2(%struct.VkCommandBuffer_T* %0, %struct.VkRenderPassBeginInfo* %1, %struct.VkSubpassBeginInfo* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #13
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @vkCmdBeginRenderPass2(%struct.VkCommandBuffer_T*, %struct.VkRenderPassBeginInfo*, %struct.VkSubpassBeginInfo*) local_unnamed_addr #0 {
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([156 x i8], [156 x i8]* @.str.167, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 2771, %struct.VkCommandBuffer_T* %0, %struct.VkRenderPassBeginInfo* %1, %struct.VkSubpassBeginInfo* %2) #12
  %4 = getelementptr inbounds %struct.VkRenderPassBeginInfo, %struct.VkRenderPassBeginInfo* %1, i64 0, i32 1
  %5 = bitcast i8** %4 to %struct.VkBaseInStructure**
  %6 = load %struct.VkBaseInStructure*, %struct.VkBaseInStructure** %5, align 8
  %7 = icmp eq %struct.VkBaseInStructure* %6, null
  br i1 %7, label %19, label %8

8:                                                ; preds = %3, %8
  %9 = phi %struct.VkBaseInStructure* [ %17, %8 ], [ %6, %3 ]
  %10 = phi %struct.VkRenderPassAttachmentBeginInfo* [ %15, %8 ], [ null, %3 ]
  %11 = getelementptr inbounds %struct.VkBaseInStructure, %struct.VkBaseInStructure* %9, i64 0, i32 0
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %12, 1000108003
  %14 = bitcast %struct.VkBaseInStructure* %9 to %struct.VkRenderPassAttachmentBeginInfo*
  %15 = select i1 %13, %struct.VkRenderPassAttachmentBeginInfo* %14, %struct.VkRenderPassAttachmentBeginInfo* %10
  %16 = getelementptr inbounds %struct.VkBaseInStructure, %struct.VkBaseInStructure* %9, i64 0, i32 1
  %17 = load %struct.VkBaseInStructure*, %struct.VkBaseInStructure** %16, align 8
  %18 = icmp eq %struct.VkBaseInStructure* %17, null
  br i1 %18, label %19, label %8

19:                                               ; preds = %8, %3
  %20 = phi %struct.VkRenderPassAttachmentBeginInfo* [ null, %3 ], [ %15, %8 ]
  %21 = icmp eq %struct.VkCommandBuffer_T* %0, null
  %22 = bitcast %struct.VkCommandBuffer_T* %0 to %"class.vk::DispatchableObject.884"*
  %23 = getelementptr inbounds %"class.vk::DispatchableObject.884", %"class.vk::DispatchableObject.884"* %22, i64 0, i32 1
  %24 = select i1 %21, %"class.vk::CommandBuffer"* null, %"class.vk::CommandBuffer"* %23
  %25 = getelementptr inbounds %struct.VkRenderPassBeginInfo, %struct.VkRenderPassBeginInfo* %1, i64 0, i32 2, i32 0
  %26 = bitcast i64* %25 to %"class.vk::RenderPass"**
  %27 = load %"class.vk::RenderPass"*, %"class.vk::RenderPass"** %26, align 8
  %28 = getelementptr inbounds %struct.VkRenderPassBeginInfo, %struct.VkRenderPassBeginInfo* %1, i64 0, i32 3, i32 0
  %29 = bitcast i64* %28 to %"class.vk::Framebuffer"**
  %30 = load %"class.vk::Framebuffer"*, %"class.vk::Framebuffer"** %29, align 8
  %31 = getelementptr inbounds %struct.VkRenderPassBeginInfo, %struct.VkRenderPassBeginInfo* %1, i64 0, i32 4
  %32 = bitcast %struct.VkRect2D* %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = getelementptr inbounds %struct.VkRenderPassBeginInfo, %struct.VkRenderPassBeginInfo* %1, i64 0, i32 4, i32 1
  %35 = bitcast %struct.VkExtent2D* %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = getelementptr inbounds %struct.VkRenderPassBeginInfo, %struct.VkRenderPassBeginInfo* %1, i64 0, i32 5
  %38 = load i32, i32* %37, align 8
  %39 = getelementptr inbounds %struct.VkRenderPassBeginInfo, %struct.VkRenderPassBeginInfo* %1, i64 0, i32 6
  %40 = load %union.VkClearValue*, %union.VkClearValue** %39, align 8
  %41 = getelementptr inbounds %struct.VkSubpassBeginInfo, %struct.VkSubpassBeginInfo* %2, i64 0, i32 2
  %42 = load i32, i32* %41, align 8
  tail call void @_ZN2vk13CommandBuffer15beginRenderPassEPNS_10RenderPassEPNS_11FramebufferE8VkRect2DjPK12VkClearValue17VkSubpassContentsPK31VkRenderPassAttachmentBeginInfo(%"class.vk::CommandBuffer"* %24, %"class.vk::RenderPass"* %27, %"class.vk::Framebuffer"* %30, i64 %33, i64 %36, i32 %38, %union.VkClearValue* %40, i32 %42, %struct.VkRenderPassAttachmentBeginInfo* %20) #12
  ret void
}

; Function Attrs: optsize
declare void @_ZN2vk13CommandBuffer15beginRenderPassEPNS_10RenderPassEPNS_11FramebufferE8VkRect2DjPK12VkClearValue17VkSubpassContentsPK31VkRenderPassAttachmentBeginInfo(%"class.vk::CommandBuffer"*, %"class.vk::RenderPass"*, %"class.vk::Framebuffer"*, i64, i64, i32, %union.VkClearValue*, i32, %struct.VkRenderPassAttachmentBeginInfo*) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @vkCmdNextSubpass(%struct.VkCommandBuffer_T*, i32) local_unnamed_addr #0 {
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([84 x i8], [84 x i8]* @.str.168, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 2801, %struct.VkCommandBuffer_T* %0, i32 %1) #12
  %3 = icmp eq %struct.VkCommandBuffer_T* %0, null
  %4 = bitcast %struct.VkCommandBuffer_T* %0 to %"class.vk::DispatchableObject.884"*
  %5 = getelementptr inbounds %"class.vk::DispatchableObject.884", %"class.vk::DispatchableObject.884"* %4, i64 0, i32 1
  %6 = select i1 %3, %"class.vk::CommandBuffer"* null, %"class.vk::CommandBuffer"* %5
  tail call void @_ZN2vk13CommandBuffer11nextSubpassE17VkSubpassContents(%"class.vk::CommandBuffer"* %6, i32 %1) #12
  ret void
}

; Function Attrs: optsize
declare void @_ZN2vk13CommandBuffer11nextSubpassE17VkSubpassContents(%"class.vk::CommandBuffer"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @vkCmdNextSubpass2(%struct.VkCommandBuffer_T*, %struct.VkSubpassBeginInfo*, %struct.VkSubpassEndInfo*) local_unnamed_addr #0 {
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([153 x i8], [153 x i8]* @.str.169, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 2809, %struct.VkCommandBuffer_T* %0, %struct.VkSubpassBeginInfo* %1, %struct.VkSubpassEndInfo* %2) #12
  %4 = icmp eq %struct.VkCommandBuffer_T* %0, null
  %5 = bitcast %struct.VkCommandBuffer_T* %0 to %"class.vk::DispatchableObject.884"*
  %6 = getelementptr inbounds %"class.vk::DispatchableObject.884", %"class.vk::DispatchableObject.884"* %5, i64 0, i32 1
  %7 = select i1 %4, %"class.vk::CommandBuffer"* null, %"class.vk::CommandBuffer"* %6
  %8 = getelementptr inbounds %struct.VkSubpassBeginInfo, %struct.VkSubpassBeginInfo* %1, i64 0, i32 2
  %9 = load i32, i32* %8, align 8
  tail call void @_ZN2vk13CommandBuffer11nextSubpassE17VkSubpassContents(%"class.vk::CommandBuffer"* %7, i32 %9) #12
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @vkCmdEndRenderPass(%struct.VkCommandBuffer_T*) local_unnamed_addr #0 {
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.125, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 2816, %struct.VkCommandBuffer_T* %0) #12
  %2 = icmp eq %struct.VkCommandBuffer_T* %0, null
  %3 = bitcast %struct.VkCommandBuffer_T* %0 to %"class.vk::DispatchableObject.884"*
  %4 = getelementptr inbounds %"class.vk::DispatchableObject.884", %"class.vk::DispatchableObject.884"* %3, i64 0, i32 1
  %5 = select i1 %2, %"class.vk::CommandBuffer"* null, %"class.vk::CommandBuffer"* %4
  tail call void @_ZN2vk13CommandBuffer13endRenderPassEv(%"class.vk::CommandBuffer"* %5) #12
  ret void
}

; Function Attrs: optsize
declare void @_ZN2vk13CommandBuffer13endRenderPassEv(%"class.vk::CommandBuffer"*) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @vkCmdEndRenderPass2(%struct.VkCommandBuffer_T*, %struct.VkSubpassEndInfo*) local_unnamed_addr #0 {
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([100 x i8], [100 x i8]* @.str.170, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 2823, %struct.VkCommandBuffer_T* %0, %struct.VkSubpassEndInfo* %1) #12
  %3 = icmp eq %struct.VkCommandBuffer_T* %0, null
  %4 = bitcast %struct.VkCommandBuffer_T* %0 to %"class.vk::DispatchableObject.884"*
  %5 = getelementptr inbounds %"class.vk::DispatchableObject.884", %"class.vk::DispatchableObject.884"* %4, i64 0, i32 1
  %6 = select i1 %3, %"class.vk::CommandBuffer"* null, %"class.vk::CommandBuffer"* %5
  tail call void @_ZN2vk13CommandBuffer13endRenderPassEv(%"class.vk::CommandBuffer"* %6) #12
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @vkCmdExecuteCommands(%struct.VkCommandBuffer_T*, i32, %struct.VkCommandBuffer_T**) local_unnamed_addr #0 {
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([130 x i8], [130 x i8]* @.str.171, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 2831, %struct.VkCommandBuffer_T* %0, i32 %1, %struct.VkCommandBuffer_T** %2) #12
  %4 = icmp eq %struct.VkCommandBuffer_T* %0, null
  %5 = bitcast %struct.VkCommandBuffer_T* %0 to %"class.vk::DispatchableObject.884"*
  %6 = getelementptr inbounds %"class.vk::DispatchableObject.884", %"class.vk::DispatchableObject.884"* %5, i64 0, i32 1
  %7 = select i1 %4, %"class.vk::CommandBuffer"* null, %"class.vk::CommandBuffer"* %6
  tail call void @_ZN2vk13CommandBuffer15executeCommandsEjPKP17VkCommandBuffer_T(%"class.vk::CommandBuffer"* %7, i32 %1, %struct.VkCommandBuffer_T** %2) #12
  ret void
}

; Function Attrs: optsize
declare void @_ZN2vk13CommandBuffer15executeCommandsEjPKP17VkCommandBuffer_T(%"class.vk::CommandBuffer"*, i32, %struct.VkCommandBuffer_T**) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @vkEnumerateInstanceVersion(i32*) local_unnamed_addr #0 {
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.172, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 2838, i32* %0) #12
  store i32 4202496, i32* %0, align 4
  ret i32 0
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @vkBindBufferMemory2(%struct.VkDevice_T*, i32, %struct.VkBindBufferMemoryInfo*) local_unnamed_addr #0 {
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([113 x i8], [113 x i8]* @.str.173, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 2846, %struct.VkDevice_T* %0, i32 %1, %struct.VkBindBufferMemoryInfo* %2) #12
  %4 = icmp eq i32 %1, 0
  br i1 %4, label %43, label %5

5:                                                ; preds = %3
  %6 = zext i32 %1 to i64
  br label %12

7:                                                ; preds = %21
  %8 = icmp eq i64 %29, %6
  br i1 %8, label %9, label %12

9:                                                ; preds = %7
  br i1 %4, label %43, label %10

10:                                               ; preds = %9
  %11 = zext i32 %1 to i64
  br label %31

12:                                               ; preds = %7, %5
  %13 = phi i64 [ 0, %5 ], [ %29, %7 ]
  %14 = getelementptr inbounds %struct.VkBindBufferMemoryInfo, %struct.VkBindBufferMemoryInfo* %2, i64 %13, i32 1
  %15 = bitcast i8** %14 to %struct.VkBaseInStructure**
  br label %16

16:                                               ; preds = %16, %12
  %17 = phi %struct.VkBaseInStructure** [ %15, %12 ], [ %20, %16 ]
  %18 = load %struct.VkBaseInStructure*, %struct.VkBaseInStructure** %17, align 8
  %19 = icmp eq %struct.VkBaseInStructure* %18, null
  %20 = getelementptr inbounds %struct.VkBaseInStructure, %struct.VkBaseInStructure* %18, i64 0, i32 1
  br i1 %19, label %21, label %16

21:                                               ; preds = %16
  %22 = getelementptr inbounds %struct.VkBindBufferMemoryInfo, %struct.VkBindBufferMemoryInfo* %2, i64 %13, i32 2, i32 0
  %23 = bitcast i64* %22 to %"class.vk::Buffer"**
  %24 = load %"class.vk::Buffer"*, %"class.vk::Buffer"** %23, align 8
  %25 = getelementptr inbounds %struct.VkBindBufferMemoryInfo, %struct.VkBindBufferMemoryInfo* %2, i64 %13, i32 3, i32 0
  %26 = bitcast i64* %25 to %"class.vk::DeviceMemory"**
  %27 = load %"class.vk::DeviceMemory"*, %"class.vk::DeviceMemory"** %26, align 8
  %28 = tail call zeroext i1 @_ZNK2vk6Buffer15canBindToMemoryEPNS_12DeviceMemoryE(%"class.vk::Buffer"* %24, %"class.vk::DeviceMemory"* %27) #12
  %29 = add nuw nsw i64 %13, 1
  br i1 %28, label %7, label %30

30:                                               ; preds = %21
  tail call void (i8*, ...) @_ZN2sw4warnEPKcz(i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.174, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 2859) #12
  br label %43

31:                                               ; preds = %31, %10
  %32 = phi i64 [ 0, %10 ], [ %41, %31 ]
  %33 = getelementptr inbounds %struct.VkBindBufferMemoryInfo, %struct.VkBindBufferMemoryInfo* %2, i64 %32, i32 2, i32 0
  %34 = bitcast i64* %33 to %"class.vk::Buffer"**
  %35 = load %"class.vk::Buffer"*, %"class.vk::Buffer"** %34, align 8
  %36 = getelementptr inbounds %struct.VkBindBufferMemoryInfo, %struct.VkBindBufferMemoryInfo* %2, i64 %32, i32 3, i32 0
  %37 = bitcast i64* %36 to %"class.vk::DeviceMemory"**
  %38 = load %"class.vk::DeviceMemory"*, %"class.vk::DeviceMemory"** %37, align 8
  %39 = getelementptr inbounds %struct.VkBindBufferMemoryInfo, %struct.VkBindBufferMemoryInfo* %2, i64 %32, i32 4
  %40 = load i64, i64* %39, align 8
  tail call void @_ZN2vk6Buffer4bindEPNS_12DeviceMemoryEm(%"class.vk::Buffer"* %35, %"class.vk::DeviceMemory"* %38, i64 %40) #12
  %41 = add nuw nsw i64 %32, 1
  %42 = icmp eq i64 %41, %11
  br i1 %42, label %43, label %31

43:                                               ; preds = %31, %3, %9, %30
  %44 = phi i32 [ -1000072003, %30 ], [ 0, %9 ], [ 0, %3 ], [ 0, %31 ]
  ret i32 %44
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @vkBindImageMemory2(%struct.VkDevice_T*, i32, %struct.VkBindImageMemoryInfo*) local_unnamed_addr #0 {
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([112 x i8], [112 x i8]* @.str.175, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 2875, %struct.VkDevice_T* %0, i32 %1, %struct.VkBindImageMemoryInfo* %2) #12
  %4 = icmp eq i32 %1, 0
  br i1 %4, label %67, label %5

5:                                                ; preds = %3
  %6 = zext i32 %1 to i64
  br label %12

7:                                                ; preds = %12
  %8 = icmp eq i64 %21, %6
  br i1 %8, label %9, label %12

9:                                                ; preds = %7
  br i1 %4, label %67, label %10

10:                                               ; preds = %9
  %11 = zext i32 %1 to i64
  br label %23

12:                                               ; preds = %7, %5
  %13 = phi i64 [ 0, %5 ], [ %21, %7 ]
  %14 = getelementptr inbounds %struct.VkBindImageMemoryInfo, %struct.VkBindImageMemoryInfo* %2, i64 %13, i32 2, i32 0
  %15 = bitcast i64* %14 to %"class.vk::Image"**
  %16 = load %"class.vk::Image"*, %"class.vk::Image"** %15, align 8
  %17 = getelementptr inbounds %struct.VkBindImageMemoryInfo, %struct.VkBindImageMemoryInfo* %2, i64 %13, i32 3, i32 0
  %18 = bitcast i64* %17 to %"class.vk::DeviceMemory"**
  %19 = load %"class.vk::DeviceMemory"*, %"class.vk::DeviceMemory"** %18, align 8
  %20 = tail call zeroext i1 @_ZNK2vk5Image15canBindToMemoryEPNS_12DeviceMemoryE(%"class.vk::Image"* %16, %"class.vk::DeviceMemory"* %19) #12
  %21 = add nuw nsw i64 %13, 1
  br i1 %20, label %7, label %22

22:                                               ; preds = %12
  tail call void (i8*, ...) @_ZN2sw4warnEPKcz(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.176, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 2881) #12
  br label %67

23:                                               ; preds = %59, %10
  %24 = phi i64 [ 0, %10 ], [ %65, %59 ]
  %25 = getelementptr inbounds %struct.VkBindImageMemoryInfo, %struct.VkBindImageMemoryInfo* %2, i64 %24, i32 3, i32 0
  %26 = bitcast i64* %25 to %"class.vk::DeviceMemory"**
  %27 = load %"class.vk::DeviceMemory"*, %"class.vk::DeviceMemory"** %26, align 8
  %28 = getelementptr inbounds %struct.VkBindImageMemoryInfo, %struct.VkBindImageMemoryInfo* %2, i64 %24, i32 4
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %struct.VkBindImageMemoryInfo, %struct.VkBindImageMemoryInfo* %2, i64 %24, i32 1
  %31 = bitcast i8** %30 to %struct.VkBaseInStructure**
  %32 = load %struct.VkBaseInStructure*, %struct.VkBaseInStructure** %31, align 8
  %33 = icmp eq %struct.VkBaseInStructure* %32, null
  br i1 %33, label %59, label %34

34:                                               ; preds = %23, %53
  %35 = phi %struct.VkBaseInStructure* [ %57, %53 ], [ %32, %23 ]
  %36 = phi i64 [ %55, %53 ], [ %29, %23 ]
  %37 = phi %"class.vk::DeviceMemory"* [ %54, %53 ], [ %27, %23 ]
  %38 = getelementptr inbounds %struct.VkBaseInStructure, %struct.VkBaseInStructure* %35, i64 0, i32 0
  %39 = load i32, i32* %38, align 8
  %40 = icmp eq i32 %39, 1000060009
  br i1 %40, label %41, label %53

41:                                               ; preds = %34
  %42 = getelementptr inbounds %struct.VkBaseInStructure, %struct.VkBaseInStructure* %35, i64 1
  %43 = bitcast %struct.VkBaseInStructure* %42 to %"class.vk::SwapchainKHR"**
  %44 = load %"class.vk::SwapchainKHR"*, %"class.vk::SwapchainKHR"** %43, align 8
  %45 = getelementptr inbounds %struct.VkBaseInStructure, %struct.VkBaseInStructure* %35, i64 1, i32 1
  %46 = bitcast %struct.VkBaseInStructure** %45 to i32*
  %47 = load i32, i32* %46, align 8
  %48 = getelementptr inbounds %"class.vk::SwapchainKHR", %"class.vk::SwapchainKHR"* %44, i64 0, i32 1
  %49 = load %"class.vk::PresentImage"*, %"class.vk::PresentImage"** %48, align 8
  %50 = zext i32 %47 to i64
  %51 = getelementptr inbounds %"class.vk::PresentImage", %"class.vk::PresentImage"* %49, i64 %50, i32 1
  %52 = load %"class.vk::DeviceMemory"*, %"class.vk::DeviceMemory"** %51, align 8
  br label %53

53:                                               ; preds = %34, %41
  %54 = phi %"class.vk::DeviceMemory"* [ %52, %41 ], [ %37, %34 ]
  %55 = phi i64 [ 0, %41 ], [ %36, %34 ]
  %56 = getelementptr inbounds %struct.VkBaseInStructure, %struct.VkBaseInStructure* %35, i64 0, i32 1
  %57 = load %struct.VkBaseInStructure*, %struct.VkBaseInStructure** %56, align 8
  %58 = icmp eq %struct.VkBaseInStructure* %57, null
  br i1 %58, label %59, label %34

59:                                               ; preds = %53, %23
  %60 = phi %"class.vk::DeviceMemory"* [ %27, %23 ], [ %54, %53 ]
  %61 = phi i64 [ %29, %23 ], [ %55, %53 ]
  %62 = getelementptr inbounds %struct.VkBindImageMemoryInfo, %struct.VkBindImageMemoryInfo* %2, i64 %24, i32 2, i32 0
  %63 = bitcast i64* %62 to %"class.vk::Image"**
  %64 = load %"class.vk::Image"*, %"class.vk::Image"** %63, align 8
  tail call void @_ZN2vk5Image4bindEPNS_12DeviceMemoryEm(%"class.vk::Image"* %64, %"class.vk::DeviceMemory"* %60, i64 %61) #12
  %65 = add nuw nsw i64 %24, 1
  %66 = icmp eq i64 %65, %11
  br i1 %66, label %67, label %23

67:                                               ; preds = %59, %3, %9, %22
  %68 = phi i32 [ -2, %22 ], [ 0, %9 ], [ 0, %3 ], [ 0, %59 ]
  ret i32 %68
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @vkGetDeviceGroupPeerMemoryFeatures(%struct.VkDevice_T*, i32, i32, i32, i32*) local_unnamed_addr #0 {
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([179 x i8], [179 x i8]* @.str.177, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 2926, %struct.VkDevice_T* %0, i32 %1, i32 %2, i32 %3, i32* %4) #12
  tail call void (i8*, ...) @_ZN2sw4warnEPKcz(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.178, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 2929, i32 %3) #12
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @vkCmdSetDeviceMask(%struct.VkCommandBuffer_T*, i32) local_unnamed_addr #0 {
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.179, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 2934, %struct.VkCommandBuffer_T* %0, i32 %1) #12
  %3 = icmp eq %struct.VkCommandBuffer_T* %0, null
  %4 = bitcast %struct.VkCommandBuffer_T* %0 to %"class.vk::DispatchableObject.884"*
  %5 = getelementptr inbounds %"class.vk::DispatchableObject.884", %"class.vk::DispatchableObject.884"* %4, i64 0, i32 1
  %6 = select i1 %3, %"class.vk::CommandBuffer"* null, %"class.vk::CommandBuffer"* %5
  tail call void @_ZN2vk13CommandBuffer13setDeviceMaskEj(%"class.vk::CommandBuffer"* %6, i32 %1) #12
  ret void
}

; Function Attrs: optsize
declare void @_ZN2vk13CommandBuffer13setDeviceMaskEj(%"class.vk::CommandBuffer"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @vkCmdDispatchBase(%struct.VkCommandBuffer_T*, i32, i32, i32, i32, i32, i32) local_unnamed_addr #0 {
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([156 x i8], [156 x i8]* @.str.180, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 2942, %struct.VkCommandBuffer_T* %0, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5, i32 %6) #12
  %8 = icmp eq %struct.VkCommandBuffer_T* %0, null
  %9 = bitcast %struct.VkCommandBuffer_T* %0 to %"class.vk::DispatchableObject.884"*
  %10 = getelementptr inbounds %"class.vk::DispatchableObject.884", %"class.vk::DispatchableObject.884"* %9, i64 0, i32 1
  %11 = select i1 %8, %"class.vk::CommandBuffer"* null, %"class.vk::CommandBuffer"* %10
  tail call void @_ZN2vk13CommandBuffer12dispatchBaseEjjjjjj(%"class.vk::CommandBuffer"* %11, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5, i32 %6) #12
  ret void
}

; Function Attrs: optsize
declare void @_ZN2vk13CommandBuffer12dispatchBaseEjjjjjj(%"class.vk::CommandBuffer"*, i32, i32, i32, i32, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @vkResetQueryPool(%struct.VkDevice_T*, i64, i32, i32) local_unnamed_addr #0 {
  %5 = inttoptr i64 %1 to i8*
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([117 x i8], [117 x i8]* @.str.181, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 2950, %struct.VkDevice_T* %0, i8* %5, i32 %2, i32 %3) #12
  %6 = inttoptr i64 %1 to %"class.vk::QueryPool"*
  tail call void @_ZN2vk9QueryPool5resetEjj(%"class.vk::QueryPool"* %6, i32 %2, i32 %3) #12
  ret void
}

; Function Attrs: optsize
declare void @_ZN2vk9QueryPool5resetEjj(%"class.vk::QueryPool"*, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @vkEnumeratePhysicalDeviceGroups(%struct.VkInstance_T*, i32*, %struct.VkPhysicalDeviceGroupProperties*) local_unnamed_addr #0 {
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([153 x i8], [153 x i8]* @.str.182, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 2957, %struct.VkInstance_T* %0, i32* %1, %struct.VkPhysicalDeviceGroupProperties* %2) #12
  %4 = icmp eq %struct.VkInstance_T* %0, null
  %5 = bitcast %struct.VkInstance_T* %0 to %"class.vk::DispatchableObject"*
  %6 = getelementptr inbounds %"class.vk::DispatchableObject", %"class.vk::DispatchableObject"* %5, i64 0, i32 1
  %7 = select i1 %4, %"class.vk::Instance"* null, %"class.vk::Instance"* %6
  %8 = tail call i32 @_ZNK2vk8Instance23getPhysicalDeviceGroupsEPjP31VkPhysicalDeviceGroupProperties(%"class.vk::Instance"* %7, i32* %1, %struct.VkPhysicalDeviceGroupProperties* %2) #12
  ret i32 %8
}

; Function Attrs: optsize
declare i32 @_ZNK2vk8Instance23getPhysicalDeviceGroupsEPjP31VkPhysicalDeviceGroupProperties(%"class.vk::Instance"*, i32*, %struct.VkPhysicalDeviceGroupProperties*) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @vkGetImageMemoryRequirements2(%struct.VkDevice_T*, %struct.VkImageMemoryRequirementsInfo2*, %struct.VkMemoryRequirements2*) local_unnamed_addr #0 {
  %4 = alloca %struct.VkMemoryRequirements, align 8
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([136 x i8], [136 x i8]* @.str.183, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 2965, %struct.VkDevice_T* %0, %struct.VkImageMemoryRequirementsInfo2* %1, %struct.VkMemoryRequirements2* %2) #12
  %5 = getelementptr inbounds %struct.VkImageMemoryRequirementsInfo2, %struct.VkImageMemoryRequirementsInfo2* %1, i64 0, i32 1
  %6 = bitcast i8** %5 to %struct.VkBaseInStructure**
  br label %7

7:                                                ; preds = %7, %3
  %8 = phi %struct.VkBaseInStructure** [ %6, %3 ], [ %11, %7 ]
  %9 = load %struct.VkBaseInStructure*, %struct.VkBaseInStructure** %8, align 8
  %10 = icmp eq %struct.VkBaseInStructure* %9, null
  %11 = getelementptr inbounds %struct.VkBaseInStructure, %struct.VkBaseInStructure* %9, i64 0, i32 1
  br i1 %10, label %12, label %7

12:                                               ; preds = %7
  %13 = getelementptr inbounds %struct.VkMemoryRequirements2, %struct.VkMemoryRequirements2* %2, i64 0, i32 1
  %14 = bitcast i8** %13 to %struct.VkBaseOutStructure**
  %15 = load %struct.VkBaseOutStructure*, %struct.VkBaseOutStructure** %14, align 8
  %16 = icmp eq %struct.VkBaseOutStructure* %15, null
  br i1 %16, label %33, label %17

17:                                               ; preds = %12
  %18 = icmp eq %struct.VkDevice_T* %0, null
  %19 = bitcast %struct.VkDevice_T* %0 to %"class.vk::DispatchableObject.872"*
  %20 = getelementptr inbounds %"class.vk::DispatchableObject.872", %"class.vk::DispatchableObject.872"* %19, i64 0, i32 1
  %21 = select i1 %18, %"class.vk::Device"* null, %"class.vk::Device"* %20
  br label %22

22:                                               ; preds = %17, %29
  %23 = phi %struct.VkBaseOutStructure* [ %15, %17 ], [ %31, %29 ]
  %24 = getelementptr inbounds %struct.VkBaseOutStructure, %struct.VkBaseOutStructure* %23, i64 0, i32 0
  %25 = load i32, i32* %24, align 8
  %26 = icmp eq i32 %25, 1000127000
  br i1 %26, label %27, label %29

27:                                               ; preds = %22
  %28 = bitcast %struct.VkBaseOutStructure* %23 to %struct.VkMemoryDedicatedRequirements*
  tail call void @_ZNK2vk6Device15getRequirementsEP29VkMemoryDedicatedRequirements(%"class.vk::Device"* %21, %struct.VkMemoryDedicatedRequirements* nonnull %28) #12
  br label %29

29:                                               ; preds = %22, %27
  %30 = getelementptr inbounds %struct.VkBaseOutStructure, %struct.VkBaseOutStructure* %23, i64 0, i32 1
  %31 = load %struct.VkBaseOutStructure*, %struct.VkBaseOutStructure** %30, align 8
  %32 = icmp eq %struct.VkBaseOutStructure* %31, null
  br i1 %32, label %33, label %22

33:                                               ; preds = %29, %12
  %34 = getelementptr inbounds %struct.VkImageMemoryRequirementsInfo2, %struct.VkImageMemoryRequirementsInfo2* %1, i64 0, i32 2, i32 0
  %35 = load i64, i64* %34, align 8
  %36 = getelementptr inbounds %struct.VkMemoryRequirements2, %struct.VkMemoryRequirements2* %2, i64 0, i32 2
  %37 = inttoptr i64 %35 to i8*
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([105 x i8], [105 x i8]* @.str.55, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1349, %struct.VkDevice_T* %0, i8* %37, %struct.VkMemoryRequirements* %36) #12
  %38 = bitcast %struct.VkMemoryRequirements* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %38) #13
  %39 = inttoptr i64 %35 to %"class.vk::Image"*
  call void @_ZNK2vk5Image21getMemoryRequirementsEv(%struct.VkMemoryRequirements* nonnull sret %4, %"class.vk::Image"* %39) #12
  %40 = bitcast %struct.VkMemoryRequirements* %36 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* nonnull align 8 %38, i64 24, i1 false) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %38) #13
  ret void
}

; Function Attrs: optsize
declare void @_ZNK2vk6Device15getRequirementsEP29VkMemoryDedicatedRequirements(%"class.vk::Device"*, %struct.VkMemoryDedicatedRequirements*) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @vkGetBufferMemoryRequirements2(%struct.VkDevice_T*, %struct.VkBufferMemoryRequirementsInfo2*, %struct.VkMemoryRequirements2*) local_unnamed_addr #0 {
  %4 = alloca %struct.VkMemoryRequirements, align 8
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([137 x i8], [137 x i8]* @.str.184, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 3006, %struct.VkDevice_T* %0, %struct.VkBufferMemoryRequirementsInfo2* %1, %struct.VkMemoryRequirements2* %2) #12
  %5 = getelementptr inbounds %struct.VkBufferMemoryRequirementsInfo2, %struct.VkBufferMemoryRequirementsInfo2* %1, i64 0, i32 1
  %6 = bitcast i8** %5 to %struct.VkBaseInStructure**
  br label %7

7:                                                ; preds = %7, %3
  %8 = phi %struct.VkBaseInStructure** [ %6, %3 ], [ %11, %7 ]
  %9 = load %struct.VkBaseInStructure*, %struct.VkBaseInStructure** %8, align 8
  %10 = icmp eq %struct.VkBaseInStructure* %9, null
  %11 = getelementptr inbounds %struct.VkBaseInStructure, %struct.VkBaseInStructure* %9, i64 0, i32 1
  br i1 %10, label %12, label %7

12:                                               ; preds = %7
  %13 = getelementptr inbounds %struct.VkMemoryRequirements2, %struct.VkMemoryRequirements2* %2, i64 0, i32 1
  %14 = bitcast i8** %13 to %struct.VkBaseOutStructure**
  %15 = load %struct.VkBaseOutStructure*, %struct.VkBaseOutStructure** %14, align 8
  %16 = icmp eq %struct.VkBaseOutStructure* %15, null
  br i1 %16, label %33, label %17

17:                                               ; preds = %12
  %18 = icmp eq %struct.VkDevice_T* %0, null
  %19 = bitcast %struct.VkDevice_T* %0 to %"class.vk::DispatchableObject.872"*
  %20 = getelementptr inbounds %"class.vk::DispatchableObject.872", %"class.vk::DispatchableObject.872"* %19, i64 0, i32 1
  %21 = select i1 %18, %"class.vk::Device"* null, %"class.vk::Device"* %20
  br label %22

22:                                               ; preds = %17, %29
  %23 = phi %struct.VkBaseOutStructure* [ %15, %17 ], [ %31, %29 ]
  %24 = getelementptr inbounds %struct.VkBaseOutStructure, %struct.VkBaseOutStructure* %23, i64 0, i32 0
  %25 = load i32, i32* %24, align 8
  %26 = icmp eq i32 %25, 1000127000
  br i1 %26, label %27, label %29

27:                                               ; preds = %22
  %28 = bitcast %struct.VkBaseOutStructure* %23 to %struct.VkMemoryDedicatedRequirements*
  tail call void @_ZNK2vk6Device15getRequirementsEP29VkMemoryDedicatedRequirements(%"class.vk::Device"* %21, %struct.VkMemoryDedicatedRequirements* nonnull %28) #12
  br label %29

29:                                               ; preds = %22, %27
  %30 = getelementptr inbounds %struct.VkBaseOutStructure, %struct.VkBaseOutStructure* %23, i64 0, i32 1
  %31 = load %struct.VkBaseOutStructure*, %struct.VkBaseOutStructure** %30, align 8
  %32 = icmp eq %struct.VkBaseOutStructure* %31, null
  br i1 %32, label %33, label %22

33:                                               ; preds = %29, %12
  %34 = getelementptr inbounds %struct.VkBufferMemoryRequirementsInfo2, %struct.VkBufferMemoryRequirementsInfo2* %1, i64 0, i32 2, i32 0
  %35 = load i64, i64* %34, align 8
  %36 = getelementptr inbounds %struct.VkMemoryRequirements2, %struct.VkMemoryRequirements2* %2, i64 0, i32 2
  %37 = inttoptr i64 %35 to i8*
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([107 x i8], [107 x i8]* @.str.54, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1341, %struct.VkDevice_T* %0, i8* %37, %struct.VkMemoryRequirements* %36) #12
  %38 = bitcast %struct.VkMemoryRequirements* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %38) #13
  %39 = inttoptr i64 %35 to %"class.vk::Buffer"*
  call void @_ZNK2vk6Buffer21getMemoryRequirementsEv(%struct.VkMemoryRequirements* nonnull sret %4, %"class.vk::Buffer"* %39) #12
  %40 = bitcast %struct.VkMemoryRequirements* %36 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* nonnull align 8 %38, i64 24, i1 false) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %38) #13
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @vkGetImageSparseMemoryRequirements2(%struct.VkDevice_T*, %struct.VkImageSparseMemoryRequirementsInfo2*, i32*, %struct.VkSparseImageMemoryRequirements2*) local_unnamed_addr #0 {
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([205 x i8], [205 x i8]* @.str.185, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 3040, %struct.VkDevice_T* %0, %struct.VkImageSparseMemoryRequirementsInfo2* %1, i32* %2, %struct.VkSparseImageMemoryRequirements2* %3) #12
  %5 = getelementptr inbounds %struct.VkImageSparseMemoryRequirementsInfo2, %struct.VkImageSparseMemoryRequirementsInfo2* %1, i64 0, i32 1
  %6 = bitcast i8** %5 to %struct.VkBaseInStructure**
  br label %7

7:                                                ; preds = %7, %4
  %8 = phi %struct.VkBaseInStructure** [ %6, %4 ], [ %11, %7 ]
  %9 = load %struct.VkBaseInStructure*, %struct.VkBaseInStructure** %8, align 8
  %10 = icmp eq %struct.VkBaseInStructure* %9, null
  %11 = getelementptr inbounds %struct.VkBaseInStructure, %struct.VkBaseInStructure* %9, i64 0, i32 1
  br i1 %10, label %12, label %7

12:                                               ; preds = %7
  %13 = getelementptr inbounds %struct.VkSparseImageMemoryRequirements2, %struct.VkSparseImageMemoryRequirements2* %3, i64 0, i32 1
  %14 = bitcast i8** %13 to %struct.VkBaseInStructure**
  br label %15

15:                                               ; preds = %15, %12
  %16 = phi %struct.VkBaseInStructure** [ %14, %12 ], [ %19, %15 ]
  %17 = load %struct.VkBaseInStructure*, %struct.VkBaseInStructure** %16, align 8
  %18 = icmp eq %struct.VkBaseInStructure* %17, null
  %19 = getelementptr inbounds %struct.VkBaseInStructure, %struct.VkBaseInStructure* %17, i64 0, i32 1
  br i1 %18, label %20, label %15

20:                                               ; preds = %15
  store i32 0, i32* %2, align 4
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @vkGetPhysicalDeviceFeatures2(%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceFeatures2*) local_unnamed_addr #0 {
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([96 x i8], [96 x i8]* @.str.186, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 3063, %struct.VkPhysicalDevice_T* %0, %struct.VkPhysicalDeviceFeatures2* %1) #12
  %3 = icmp eq %struct.VkPhysicalDevice_T* %0, null
  %4 = bitcast %struct.VkPhysicalDevice_T* %0 to %"class.vk::DispatchableObject.871"*
  %5 = getelementptr inbounds %"class.vk::DispatchableObject.871", %"class.vk::DispatchableObject.871"* %4, i64 0, i32 1
  %6 = select i1 %3, %"class.vk::PhysicalDevice"* null, %"class.vk::PhysicalDevice"* %5
  tail call void @_ZNK2vk14PhysicalDevice12getFeatures2EP25VkPhysicalDeviceFeatures2(%"class.vk::PhysicalDevice"* %6, %struct.VkPhysicalDeviceFeatures2* %1) #12
  ret void
}

; Function Attrs: optsize
declare void @_ZNK2vk14PhysicalDevice12getFeatures2EP25VkPhysicalDeviceFeatures2(%"class.vk::PhysicalDevice"*, %struct.VkPhysicalDeviceFeatures2*) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @vkGetPhysicalDeviceProperties2(%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties2*) local_unnamed_addr #0 {
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([100 x i8], [100 x i8]* @.str.187, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 3070, %struct.VkPhysicalDevice_T* %0, %struct.VkPhysicalDeviceProperties2* %1) #12
  %3 = getelementptr inbounds %struct.VkPhysicalDeviceProperties2, %struct.VkPhysicalDeviceProperties2* %1, i64 0, i32 1
  %4 = bitcast i8** %3 to %struct.VkBaseOutStructure**
  %5 = load %struct.VkBaseOutStructure*, %struct.VkBaseOutStructure** %4, align 8
  %6 = icmp eq %struct.VkBaseOutStructure* %5, null
  br i1 %6, label %7, label %9

7:                                                ; preds = %2
  %8 = bitcast %struct.VkPhysicalDevice_T* %0 to %"class.vk::DispatchableObject.871"*
  br label %56

9:                                                ; preds = %2
  %10 = icmp eq %struct.VkPhysicalDevice_T* %0, null
  %11 = bitcast %struct.VkPhysicalDevice_T* %0 to %"class.vk::DispatchableObject.871"*
  %12 = getelementptr inbounds %"class.vk::DispatchableObject.871", %"class.vk::DispatchableObject.871"* %11, i64 0, i32 1
  %13 = select i1 %10, %"class.vk::PhysicalDevice"* null, %"class.vk::PhysicalDevice"* %12
  br label %14

14:                                               ; preds = %9, %52
  %15 = phi %struct.VkBaseOutStructure* [ %5, %9 ], [ %54, %52 ]
  %16 = getelementptr inbounds %struct.VkBaseOutStructure, %struct.VkBaseOutStructure* %15, i64 0, i32 0
  %17 = load i32, i32* %16, align 8
  switch i32 %17, label %52 [
    i32 1000071004, label %18
    i32 1000168000, label %20
    i32 1000053002, label %22
    i32 1000117000, label %24
    i32 1000145002, label %26
    i32 1000094000, label %28
    i32 1000199000, label %50
    i32 1000178002, label %30
    i32 1000196000, label %32
    i32 1000259002, label %34
    i32 1000254002, label %36
    i32 1000197000, label %38
    i32 50, label %40
    i32 1000130000, label %42
    i32 1000207001, label %44
    i32 52, label %46
    i32 1000161002, label %48
  ]

18:                                               ; preds = %14
  %19 = bitcast %struct.VkBaseOutStructure* %15 to %struct.VkPhysicalDeviceIDProperties*
  tail call void @_ZNK2vk14PhysicalDevice13getPropertiesEP28VkPhysicalDeviceIDProperties(%"class.vk::PhysicalDevice"* %13, %struct.VkPhysicalDeviceIDProperties* nonnull %19) #12
  br label %52

20:                                               ; preds = %14
  %21 = bitcast %struct.VkBaseOutStructure* %15 to %struct.VkPhysicalDeviceMaintenance3Properties*
  tail call void @_ZNK2vk14PhysicalDevice13getPropertiesEP38VkPhysicalDeviceMaintenance3Properties(%"class.vk::PhysicalDevice"* %13, %struct.VkPhysicalDeviceMaintenance3Properties* nonnull %21) #12
  br label %52

22:                                               ; preds = %14
  %23 = bitcast %struct.VkBaseOutStructure* %15 to %struct.VkPhysicalDeviceMultiviewProperties*
  tail call void @_ZNK2vk14PhysicalDevice13getPropertiesEP35VkPhysicalDeviceMultiviewProperties(%"class.vk::PhysicalDevice"* %13, %struct.VkPhysicalDeviceMultiviewProperties* nonnull %23) #12
  br label %52

24:                                               ; preds = %14
  %25 = bitcast %struct.VkBaseOutStructure* %15 to %struct.VkPhysicalDevicePointClippingProperties*
  tail call void @_ZNK2vk14PhysicalDevice13getPropertiesEP39VkPhysicalDevicePointClippingProperties(%"class.vk::PhysicalDevice"* %13, %struct.VkPhysicalDevicePointClippingProperties* nonnull %25) #12
  br label %52

26:                                               ; preds = %14
  %27 = bitcast %struct.VkBaseOutStructure* %15 to %struct.VkPhysicalDeviceProtectedMemoryProperties*
  tail call void @_ZNK2vk14PhysicalDevice13getPropertiesEP41VkPhysicalDeviceProtectedMemoryProperties(%"class.vk::PhysicalDevice"* %13, %struct.VkPhysicalDeviceProtectedMemoryProperties* nonnull %27) #12
  br label %52

28:                                               ; preds = %14
  %29 = bitcast %struct.VkBaseOutStructure* %15 to %struct.VkPhysicalDeviceSubgroupProperties*
  tail call void @_ZNK2vk14PhysicalDevice13getPropertiesEP34VkPhysicalDeviceSubgroupProperties(%"class.vk::PhysicalDevice"* %13, %struct.VkPhysicalDeviceSubgroupProperties* nonnull %29) #12
  br label %52

30:                                               ; preds = %14
  %31 = bitcast %struct.VkBaseOutStructure* %15 to %struct.VkPhysicalDeviceExternalMemoryHostPropertiesEXT*
  tail call void @_ZNK2vk14PhysicalDevice13getPropertiesEP47VkPhysicalDeviceExternalMemoryHostPropertiesEXT(%"class.vk::PhysicalDevice"* %13, %struct.VkPhysicalDeviceExternalMemoryHostPropertiesEXT* nonnull %31) #12
  br label %52

32:                                               ; preds = %14
  %33 = bitcast %struct.VkBaseOutStructure* %15 to %struct.VkPhysicalDeviceDriverProperties*
  tail call void @_ZNK2vk14PhysicalDevice13getPropertiesEP32VkPhysicalDeviceDriverProperties(%"class.vk::PhysicalDevice"* %13, %struct.VkPhysicalDeviceDriverProperties* nonnull %33) #12
  br label %52

34:                                               ; preds = %14
  %35 = bitcast %struct.VkBaseOutStructure* %15 to %struct.VkPhysicalDeviceLineRasterizationPropertiesEXT*
  tail call void @_ZNK2vk14PhysicalDevice13getPropertiesEP46VkPhysicalDeviceLineRasterizationPropertiesEXT(%"class.vk::PhysicalDevice"* %13, %struct.VkPhysicalDeviceLineRasterizationPropertiesEXT* nonnull %35) #12
  br label %52

36:                                               ; preds = %14
  %37 = bitcast %struct.VkBaseOutStructure* %15 to %struct.VkPhysicalDeviceProvokingVertexPropertiesEXT*
  tail call void @_ZNK2vk14PhysicalDevice13getPropertiesEP44VkPhysicalDeviceProvokingVertexPropertiesEXT(%"class.vk::PhysicalDevice"* %13, %struct.VkPhysicalDeviceProvokingVertexPropertiesEXT* nonnull %37) #12
  br label %52

38:                                               ; preds = %14
  %39 = bitcast %struct.VkBaseOutStructure* %15 to %struct.VkPhysicalDeviceFloatControlsProperties*
  tail call void @_ZNK2vk14PhysicalDevice13getPropertiesEP39VkPhysicalDeviceFloatControlsProperties(%"class.vk::PhysicalDevice"* %13, %struct.VkPhysicalDeviceFloatControlsProperties* nonnull %39) #12
  br label %52

40:                                               ; preds = %14
  %41 = bitcast %struct.VkBaseOutStructure* %15 to %struct.VkPhysicalDeviceVulkan11Properties*
  tail call void @_ZNK2vk14PhysicalDevice13getPropertiesEP34VkPhysicalDeviceVulkan11Properties(%"class.vk::PhysicalDevice"* %13, %struct.VkPhysicalDeviceVulkan11Properties* nonnull %41) #12
  br label %52

42:                                               ; preds = %14
  %43 = bitcast %struct.VkBaseOutStructure* %15 to %struct.VkPhysicalDeviceSamplerFilterMinmaxProperties*
  tail call void @_ZNK2vk14PhysicalDevice13getPropertiesEP45VkPhysicalDeviceSamplerFilterMinmaxProperties(%"class.vk::PhysicalDevice"* %13, %struct.VkPhysicalDeviceSamplerFilterMinmaxProperties* nonnull %43) #12
  br label %52

44:                                               ; preds = %14
  %45 = bitcast %struct.VkBaseOutStructure* %15 to %struct.VkPhysicalDeviceTimelineSemaphoreProperties*
  tail call void @_ZNK2vk14PhysicalDevice13getPropertiesEP43VkPhysicalDeviceTimelineSemaphoreProperties(%"class.vk::PhysicalDevice"* %13, %struct.VkPhysicalDeviceTimelineSemaphoreProperties* nonnull %45) #12
  br label %52

46:                                               ; preds = %14
  %47 = bitcast %struct.VkBaseOutStructure* %15 to %struct.VkPhysicalDeviceVulkan12Properties*
  tail call void @_ZNK2vk14PhysicalDevice13getPropertiesEP34VkPhysicalDeviceVulkan12Properties(%"class.vk::PhysicalDevice"* %13, %struct.VkPhysicalDeviceVulkan12Properties* nonnull %47) #12
  br label %52

48:                                               ; preds = %14
  %49 = bitcast %struct.VkBaseOutStructure* %15 to %struct.VkPhysicalDeviceDescriptorIndexingProperties*
  tail call void @_ZNK2vk14PhysicalDevice13getPropertiesEP44VkPhysicalDeviceDescriptorIndexingProperties(%"class.vk::PhysicalDevice"* %13, %struct.VkPhysicalDeviceDescriptorIndexingProperties* nonnull %49) #12
  br label %52

50:                                               ; preds = %14
  %51 = bitcast %struct.VkBaseOutStructure* %15 to %struct.VkPhysicalDeviceDepthStencilResolveProperties*
  tail call void @_ZNK2vk14PhysicalDevice13getPropertiesEP45VkPhysicalDeviceDepthStencilResolveProperties(%"class.vk::PhysicalDevice"* %13, %struct.VkPhysicalDeviceDepthStencilResolveProperties* nonnull %51) #12
  br label %52

52:                                               ; preds = %14, %50, %48, %46, %44, %42, %40, %38, %36, %34, %32, %30, %28, %26, %24, %22, %20, %18
  %53 = getelementptr inbounds %struct.VkBaseOutStructure, %struct.VkBaseOutStructure* %15, i64 0, i32 1
  %54 = load %struct.VkBaseOutStructure*, %struct.VkBaseOutStructure** %53, align 8
  %55 = icmp eq %struct.VkBaseOutStructure* %54, null
  br i1 %55, label %56, label %14

56:                                               ; preds = %52, %7
  %57 = phi %"class.vk::DispatchableObject.871"* [ %8, %7 ], [ %11, %52 ]
  %58 = getelementptr inbounds %struct.VkPhysicalDeviceProperties2, %struct.VkPhysicalDeviceProperties2* %1, i64 0, i32 2
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([99 x i8], [99 x i8]* @.str.20, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 637, %struct.VkPhysicalDevice_T* %0, %struct.VkPhysicalDeviceProperties* %58) #12
  %59 = icmp eq %struct.VkPhysicalDevice_T* %0, null
  %60 = getelementptr inbounds %"class.vk::DispatchableObject.871", %"class.vk::DispatchableObject.871"* %57, i64 0, i32 1
  %61 = select i1 %59, %"class.vk::PhysicalDevice"* null, %"class.vk::PhysicalDevice"* %60
  %62 = tail call dereferenceable(824) %struct.VkPhysicalDeviceProperties* @_ZNK2vk14PhysicalDevice13getPropertiesEv(%"class.vk::PhysicalDevice"* %61) #12
  %63 = bitcast %struct.VkPhysicalDeviceProperties* %58 to i8*
  %64 = bitcast %struct.VkPhysicalDeviceProperties* %62 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %63, i8* align 8 %64, i64 824, i1 false) #13
  ret void
}

; Function Attrs: optsize
declare void @_ZNK2vk14PhysicalDevice13getPropertiesEP28VkPhysicalDeviceIDProperties(%"class.vk::PhysicalDevice"*, %struct.VkPhysicalDeviceIDProperties*) local_unnamed_addr #1

; Function Attrs: optsize
declare void @_ZNK2vk14PhysicalDevice13getPropertiesEP38VkPhysicalDeviceMaintenance3Properties(%"class.vk::PhysicalDevice"*, %struct.VkPhysicalDeviceMaintenance3Properties*) local_unnamed_addr #1

; Function Attrs: optsize
declare void @_ZNK2vk14PhysicalDevice13getPropertiesEP35VkPhysicalDeviceMultiviewProperties(%"class.vk::PhysicalDevice"*, %struct.VkPhysicalDeviceMultiviewProperties*) local_unnamed_addr #1

; Function Attrs: optsize
declare void @_ZNK2vk14PhysicalDevice13getPropertiesEP39VkPhysicalDevicePointClippingProperties(%"class.vk::PhysicalDevice"*, %struct.VkPhysicalDevicePointClippingProperties*) local_unnamed_addr #1

; Function Attrs: optsize
declare void @_ZNK2vk14PhysicalDevice13getPropertiesEP41VkPhysicalDeviceProtectedMemoryProperties(%"class.vk::PhysicalDevice"*, %struct.VkPhysicalDeviceProtectedMemoryProperties*) local_unnamed_addr #1

; Function Attrs: optsize
declare void @_ZNK2vk14PhysicalDevice13getPropertiesEP34VkPhysicalDeviceSubgroupProperties(%"class.vk::PhysicalDevice"*, %struct.VkPhysicalDeviceSubgroupProperties*) local_unnamed_addr #1

; Function Attrs: optsize
declare void @_ZNK2vk14PhysicalDevice13getPropertiesEP47VkPhysicalDeviceExternalMemoryHostPropertiesEXT(%"class.vk::PhysicalDevice"*, %struct.VkPhysicalDeviceExternalMemoryHostPropertiesEXT*) local_unnamed_addr #1

; Function Attrs: optsize
declare void @_ZNK2vk14PhysicalDevice13getPropertiesEP32VkPhysicalDeviceDriverProperties(%"class.vk::PhysicalDevice"*, %struct.VkPhysicalDeviceDriverProperties*) local_unnamed_addr #1

; Function Attrs: optsize
declare void @_ZNK2vk14PhysicalDevice13getPropertiesEP46VkPhysicalDeviceLineRasterizationPropertiesEXT(%"class.vk::PhysicalDevice"*, %struct.VkPhysicalDeviceLineRasterizationPropertiesEXT*) local_unnamed_addr #1

; Function Attrs: optsize
declare void @_ZNK2vk14PhysicalDevice13getPropertiesEP44VkPhysicalDeviceProvokingVertexPropertiesEXT(%"class.vk::PhysicalDevice"*, %struct.VkPhysicalDeviceProvokingVertexPropertiesEXT*) local_unnamed_addr #1

; Function Attrs: optsize
declare void @_ZNK2vk14PhysicalDevice13getPropertiesEP39VkPhysicalDeviceFloatControlsProperties(%"class.vk::PhysicalDevice"*, %struct.VkPhysicalDeviceFloatControlsProperties*) local_unnamed_addr #1

; Function Attrs: optsize
declare void @_ZNK2vk14PhysicalDevice13getPropertiesEP34VkPhysicalDeviceVulkan11Properties(%"class.vk::PhysicalDevice"*, %struct.VkPhysicalDeviceVulkan11Properties*) local_unnamed_addr #1

; Function Attrs: optsize
declare void @_ZNK2vk14PhysicalDevice13getPropertiesEP45VkPhysicalDeviceSamplerFilterMinmaxProperties(%"class.vk::PhysicalDevice"*, %struct.VkPhysicalDeviceSamplerFilterMinmaxProperties*) local_unnamed_addr #1

; Function Attrs: optsize
declare void @_ZNK2vk14PhysicalDevice13getPropertiesEP43VkPhysicalDeviceTimelineSemaphoreProperties(%"class.vk::PhysicalDevice"*, %struct.VkPhysicalDeviceTimelineSemaphoreProperties*) local_unnamed_addr #1

; Function Attrs: optsize
declare void @_ZNK2vk14PhysicalDevice13getPropertiesEP34VkPhysicalDeviceVulkan12Properties(%"class.vk::PhysicalDevice"*, %struct.VkPhysicalDeviceVulkan12Properties*) local_unnamed_addr #1

; Function Attrs: optsize
declare void @_ZNK2vk14PhysicalDevice13getPropertiesEP44VkPhysicalDeviceDescriptorIndexingProperties(%"class.vk::PhysicalDevice"*, %struct.VkPhysicalDeviceDescriptorIndexingProperties*) local_unnamed_addr #1

; Function Attrs: optsize
declare void @_ZNK2vk14PhysicalDevice13getPropertiesEP45VkPhysicalDeviceDepthStencilResolveProperties(%"class.vk::PhysicalDevice"*, %struct.VkPhysicalDeviceDepthStencilResolveProperties*) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @vkGetPhysicalDeviceFormatProperties2(%struct.VkPhysicalDevice_T*, i32, %struct.VkFormatProperties2*) local_unnamed_addr #0 {
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([120 x i8], [120 x i8]* @.str.188, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 3210, %struct.VkPhysicalDevice_T* %0, i32 %1, %struct.VkFormatProperties2* %2) #12
  %4 = getelementptr inbounds %struct.VkFormatProperties2, %struct.VkFormatProperties2* %2, i64 0, i32 1
  %5 = bitcast i8** %4 to %struct.VkBaseInStructure**
  br label %6

6:                                                ; preds = %6, %3
  %7 = phi %struct.VkBaseInStructure** [ %5, %3 ], [ %10, %6 ]
  %8 = load %struct.VkBaseInStructure*, %struct.VkBaseInStructure** %7, align 8
  %9 = icmp eq %struct.VkBaseInStructure* %8, null
  %10 = getelementptr inbounds %struct.VkBaseInStructure, %struct.VkBaseInStructure* %8, i64 0, i32 1
  br i1 %9, label %11, label %6

11:                                               ; preds = %6
  %12 = getelementptr inbounds %struct.VkFormatProperties2, %struct.VkFormatProperties2* %2, i64 0, i32 2
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([152 x i8], [152 x i8]* @.str.18, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 604, %struct.VkPhysicalDevice_T* %0, i32 %1, %struct.VkFormatProperties* %12) #12
  tail call void @_ZN2vk14PhysicalDevice19GetFormatPropertiesENS_6FormatEP18VkFormatProperties(i32 %1, %struct.VkFormatProperties* %12) #12
  ret void
}

; Function Attrs: optsize
declare void @_ZNK2vk14PhysicalDevice13getPropertiesEPK34VkExternalMemoryHandleTypeFlagBitsP31VkExternalImageFormatProperties(%"class.vk::PhysicalDevice"*, i32*, %struct.VkExternalImageFormatProperties*) local_unnamed_addr #1

; Function Attrs: optsize
declare void @_ZNK2vk14PhysicalDevice13getPropertiesEP45VkSamplerYcbcrConversionImageFormatProperties(%"class.vk::PhysicalDevice"*, %struct.VkSamplerYcbcrConversionImageFormatProperties*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define internal fastcc zeroext i1 @_ZL16checkFormatUsagejj(i32, i32) unnamed_addr #4 {
  %3 = and i32 %0, 4
  %4 = icmp ne i32 %3, 0
  %5 = and i32 %1, 1
  %6 = icmp eq i32 %5, 0
  %7 = and i1 %4, %6
  br i1 %7, label %44, label %8

8:                                                ; preds = %2
  %9 = and i32 %0, 8
  %10 = icmp ne i32 %9, 0
  %11 = and i32 %1, 2
  %12 = icmp eq i32 %11, 0
  %13 = and i1 %10, %12
  br i1 %13, label %44, label %14

14:                                               ; preds = %8
  %15 = and i32 %0, 16
  %16 = icmp eq i32 %15, 0
  %17 = trunc i32 %1 to i8
  %18 = icmp slt i8 %17, 0
  %19 = or i1 %16, %18
  br i1 %19, label %20, label %44

20:                                               ; preds = %14
  %21 = and i32 %0, 32
  %22 = icmp ne i32 %21, 0
  %23 = and i32 %1, 512
  %24 = icmp eq i32 %23, 0
  %25 = and i1 %22, %24
  br i1 %25, label %44, label %26

26:                                               ; preds = %20
  %27 = trunc i32 %0 to i8
  %28 = icmp slt i8 %27, 0
  %29 = and i32 %1, 640
  %30 = icmp eq i32 %29, 0
  %31 = and i1 %28, %30
  br i1 %31, label %44, label %32

32:                                               ; preds = %26
  %33 = and i32 %0, 1
  %34 = icmp ne i32 %33, 0
  %35 = and i32 %1, 16384
  %36 = icmp eq i32 %35, 0
  %37 = and i1 %34, %36
  br i1 %37, label %44, label %38

38:                                               ; preds = %32
  %39 = and i32 %0, 2
  %40 = icmp eq i32 %39, 0
  %41 = trunc i32 %1 to i16
  %42 = icmp slt i16 %41, 0
  %43 = or i1 %40, %42
  ret i1 %43

44:                                               ; preds = %32, %26, %20, %14, %8, %2
  ret i1 false
}

; Function Attrs: optsize
declare zeroext i1 @_ZNK2vk6Format12isCompressedEv(%"class.vk::Format"*) local_unnamed_addr #1

; Function Attrs: optsize
declare zeroext i1 @_ZNK2vk6Format7isDepthEv(%"class.vk::Format"*) local_unnamed_addr #1

; Function Attrs: optsize
declare zeroext i1 @_ZNK2vk6Format9isStencilEv(%"class.vk::Format"*) local_unnamed_addr #1

; Function Attrs: optsize
declare zeroext i1 @_ZNK2vk6Format13isYcbcrFormatEv(%"class.vk::Format"*) local_unnamed_addr #1

; Function Attrs: optsize
declare void @_ZNK2vk14PhysicalDevice24getImageFormatPropertiesENS_6FormatE11VkImageType13VkImageTilingjjP23VkImageFormatProperties(%"class.vk::PhysicalDevice"*, i32, i32, i32, i32, i32, %struct.VkImageFormatProperties*) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @vkGetPhysicalDeviceQueueFamilyProperties2(%struct.VkPhysicalDevice_T*, i32*, %struct.VkQueueFamilyProperties2*) local_unnamed_addr #0 {
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([150 x i8], [150 x i8]* @.str.191, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 3470, %struct.VkPhysicalDevice_T* %0, i32* %1, %struct.VkQueueFamilyProperties2* %2) #12
  %4 = icmp eq %struct.VkQueueFamilyProperties2* %2, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.VkQueueFamilyProperties2, %struct.VkQueueFamilyProperties2* %2, i64 0, i32 1
  %7 = bitcast i8** %6 to %struct.VkBaseInStructure**
  br label %8

8:                                                ; preds = %8, %5
  %9 = phi %struct.VkBaseInStructure** [ %7, %5 ], [ %12, %8 ]
  %10 = load %struct.VkBaseInStructure*, %struct.VkBaseInStructure** %9, align 8
  %11 = icmp eq %struct.VkBaseInStructure* %10, null
  %12 = getelementptr inbounds %struct.VkBaseInStructure, %struct.VkBaseInStructure* %10, i64 0, i32 1
  br i1 %11, label %19, label %8

13:                                               ; preds = %3
  %14 = icmp eq %struct.VkPhysicalDevice_T* %0, null
  %15 = bitcast %struct.VkPhysicalDevice_T* %0 to %"class.vk::DispatchableObject.871"*
  %16 = getelementptr inbounds %"class.vk::DispatchableObject.871", %"class.vk::DispatchableObject.871"* %15, i64 0, i32 1
  %17 = select i1 %14, %"class.vk::PhysicalDevice"* null, %"class.vk::PhysicalDevice"* %16
  %18 = tail call i32 @_ZNK2vk14PhysicalDevice27getQueueFamilyPropertyCountEv(%"class.vk::PhysicalDevice"* %17) #12
  store i32 %18, i32* %1, align 4
  br label %25

19:                                               ; preds = %8
  %20 = icmp eq %struct.VkPhysicalDevice_T* %0, null
  %21 = bitcast %struct.VkPhysicalDevice_T* %0 to %"class.vk::DispatchableObject.871"*
  %22 = getelementptr inbounds %"class.vk::DispatchableObject.871", %"class.vk::DispatchableObject.871"* %21, i64 0, i32 1
  %23 = select i1 %20, %"class.vk::PhysicalDevice"* null, %"class.vk::PhysicalDevice"* %22
  %24 = load i32, i32* %1, align 4
  tail call void @_ZNK2vk14PhysicalDevice24getQueueFamilyPropertiesEjP24VkQueueFamilyProperties2(%"class.vk::PhysicalDevice"* %23, i32 %24, %struct.VkQueueFamilyProperties2* nonnull %2) #12
  br label %25

25:                                               ; preds = %19, %13
  ret void
}

; Function Attrs: optsize
declare void @_ZNK2vk14PhysicalDevice24getQueueFamilyPropertiesEjP24VkQueueFamilyProperties2(%"class.vk::PhysicalDevice"*, i32, %struct.VkQueueFamilyProperties2*) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @vkGetPhysicalDeviceMemoryProperties2(%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceMemoryProperties2*) local_unnamed_addr #0 {
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([112 x i8], [112 x i8]* @.str.192, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 3494, %struct.VkPhysicalDevice_T* %0, %struct.VkPhysicalDeviceMemoryProperties2* %1) #12
  %3 = getelementptr inbounds %struct.VkPhysicalDeviceMemoryProperties2, %struct.VkPhysicalDeviceMemoryProperties2* %1, i64 0, i32 1
  %4 = bitcast i8** %3 to %struct.VkBaseInStructure**
  br label %5

5:                                                ; preds = %5, %2
  %6 = phi %struct.VkBaseInStructure** [ %4, %2 ], [ %9, %5 ]
  %7 = load %struct.VkBaseInStructure*, %struct.VkBaseInStructure** %6, align 8
  %8 = icmp eq %struct.VkBaseInStructure* %7, null
  %9 = getelementptr inbounds %struct.VkBaseInStructure, %struct.VkBaseInStructure* %7, i64 0, i32 1
  br i1 %8, label %10, label %5

10:                                               ; preds = %5
  %11 = getelementptr inbounds %struct.VkPhysicalDeviceMemoryProperties2, %struct.VkPhysicalDeviceMemoryProperties2* %1, i64 0, i32 2
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([111 x i8], [111 x i8]* @.str.22, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 658, %struct.VkPhysicalDevice_T* %0, %struct.VkPhysicalDeviceMemoryProperties* %11) #12
  %12 = tail call dereferenceable(520) %struct.VkPhysicalDeviceMemoryProperties* @_ZN2vk14PhysicalDevice19GetMemoryPropertiesEv() #12
  %13 = bitcast %struct.VkPhysicalDeviceMemoryProperties* %11 to i8*
  %14 = bitcast %struct.VkPhysicalDeviceMemoryProperties* %12 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %14, i64 520, i1 false) #13
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @vkGetPhysicalDeviceSparseImageFormatProperties2(%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceSparseImageFormatInfo2*, i32*, %struct.VkSparseImageFormatProperties2*) local_unnamed_addr #0 {
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([198 x i8], [198 x i8]* @.str.193, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 3509, %struct.VkPhysicalDevice_T* %0, %struct.VkPhysicalDeviceSparseImageFormatInfo2* %1, i32* %2, %struct.VkSparseImageFormatProperties2* %3) #12
  %5 = icmp eq %struct.VkSparseImageFormatProperties2* %3, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.VkSparseImageFormatProperties2, %struct.VkSparseImageFormatProperties2* %3, i64 0, i32 1
  %8 = bitcast i8** %7 to %struct.VkBaseInStructure**
  br label %9

9:                                                ; preds = %9, %6
  %10 = phi %struct.VkBaseInStructure** [ %8, %6 ], [ %13, %9 ]
  %11 = load %struct.VkBaseInStructure*, %struct.VkBaseInStructure** %10, align 8
  %12 = icmp eq %struct.VkBaseInStructure* %11, null
  %13 = getelementptr inbounds %struct.VkBaseInStructure, %struct.VkBaseInStructure* %11, i64 0, i32 1
  br i1 %12, label %14, label %9

14:                                               ; preds = %9, %4
  store i32 0, i32* %2, align 4
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @vkTrimCommandPool(%struct.VkDevice_T*, i64, i32) local_unnamed_addr #0 {
  %4 = inttoptr i64 %1 to i8*
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([104 x i8], [104 x i8]* @.str.194, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 3528, %struct.VkDevice_T* %0, i8* %4, i32 %2) #12
  %5 = icmp eq i32 %2, 0
  br i1 %5, label %7, label %6

6:                                                ; preds = %3
  tail call void (i8*, ...) @_ZN2sw4warnEPKcz(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.46, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 3533, i32 %2) #12
  br label %7

7:                                                ; preds = %3, %6
  %8 = inttoptr i64 %1 to %"class.vk::CommandPool"*
  tail call void @_ZN2vk11CommandPool4trimEj(%"class.vk::CommandPool"* %8, i32 %2) #12
  ret void
}

; Function Attrs: optsize
declare void @_ZN2vk11CommandPool4trimEj(%"class.vk::CommandPool"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @vkGetDeviceQueue2(%struct.VkDevice_T*, %struct.VkDeviceQueueInfo2*, %struct.VkQueue_T**) local_unnamed_addr #0 {
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([102 x i8], [102 x i8]* @.str.195, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 3542, %struct.VkDevice_T* %0, %struct.VkDeviceQueueInfo2* %1, %struct.VkQueue_T** %2) #12
  %4 = getelementptr inbounds %struct.VkDeviceQueueInfo2, %struct.VkDeviceQueueInfo2* %1, i64 0, i32 1
  %5 = bitcast i8** %4 to %struct.VkBaseInStructure**
  br label %6

6:                                                ; preds = %6, %3
  %7 = phi %struct.VkBaseInStructure** [ %5, %3 ], [ %10, %6 ]
  %8 = load %struct.VkBaseInStructure*, %struct.VkBaseInStructure** %7, align 8
  %9 = icmp eq %struct.VkBaseInStructure* %8, null
  %10 = getelementptr inbounds %struct.VkBaseInStructure, %struct.VkBaseInStructure* %8, i64 0, i32 1
  br i1 %9, label %11, label %6

11:                                               ; preds = %6
  %12 = getelementptr inbounds %struct.VkDeviceQueueInfo2, %struct.VkDeviceQueueInfo2* %1, i64 0, i32 2
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %16, label %15

15:                                               ; preds = %11
  tail call void (i8*, ...) @_ZN2sw4warnEPKcz(i8* getelementptr inbounds ([79 x i8], [79 x i8]* @.str.196, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 3558) #12
  br label %16

16:                                               ; preds = %11, %15
  %17 = getelementptr inbounds %struct.VkDeviceQueueInfo2, %struct.VkDeviceQueueInfo2* %1, i64 0, i32 3
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %struct.VkDeviceQueueInfo2, %struct.VkDeviceQueueInfo2* %1, i64 0, i32 4
  %20 = load i32, i32* %19, align 8
  tail call void @vkGetDeviceQueue(%struct.VkDevice_T* %0, i32 %18, i32 %20, %struct.VkQueue_T** %2) #16
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @vkCreateSamplerYcbcrConversion(%struct.VkDevice_T*, %struct.VkSamplerYcbcrConversionCreateInfo*, %struct.VkAllocationCallbacks*, %class.VkNonDispatchableHandle.19*) local_unnamed_addr #0 {
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([192 x i8], [192 x i8]* @.str.197, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 3567, %struct.VkDevice_T* %0, %struct.VkSamplerYcbcrConversionCreateInfo* %1, %struct.VkAllocationCallbacks* %2, %class.VkNonDispatchableHandle.19* %3) #12
  %5 = getelementptr inbounds %struct.VkSamplerYcbcrConversionCreateInfo, %struct.VkSamplerYcbcrConversionCreateInfo* %1, i64 0, i32 1
  %6 = bitcast i8** %5 to %struct.VkBaseInStructure**
  br label %7

7:                                                ; preds = %7, %4
  %8 = phi %struct.VkBaseInStructure** [ %6, %4 ], [ %11, %7 ]
  %9 = load %struct.VkBaseInStructure*, %struct.VkBaseInStructure** %8, align 8
  %10 = icmp eq %struct.VkBaseInStructure* %9, null
  %11 = getelementptr inbounds %struct.VkBaseInStructure, %struct.VkBaseInStructure* %9, i64 0, i32 1
  br i1 %10, label %12, label %7

12:                                               ; preds = %7
  %13 = tail call i32 @_ZN2vk10ObjectBaseINS_22SamplerYcbcrConversionE23VkNonDispatchableHandleIP26VkSamplerYcbcrConversion_TEE6CreateI34VkSamplerYcbcrConversionCreateInfoJEEE8VkResultPK21VkAllocationCallbacksPKT_PS5_DpT0_(%struct.VkAllocationCallbacks* %2, %struct.VkSamplerYcbcrConversionCreateInfo* %1, %class.VkNonDispatchableHandle.19* %3) #16
  ret i32 %13
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden i32 @_ZN2vk10ObjectBaseINS_22SamplerYcbcrConversionE23VkNonDispatchableHandleIP26VkSamplerYcbcrConversion_TEE6CreateI34VkSamplerYcbcrConversionCreateInfoJEEE8VkResultPK21VkAllocationCallbacksPKT_PS5_DpT0_(%struct.VkAllocationCallbacks*, %struct.VkSamplerYcbcrConversionCreateInfo*, %class.VkNonDispatchableHandle.19*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.VkNonDispatchableHandle.19, %class.VkNonDispatchableHandle.19* %2, i64 0, i32 0
  store i64 0, i64* %4, align 8
  %5 = tail call i8* @_ZN2vk8allocateEmmPK21VkAllocationCallbacks23VkSystemAllocationScope(i64 44, i64 4, %struct.VkAllocationCallbacks* %0, i32 1) #12
  %6 = icmp eq i8* %5, null
  br i1 %6, label %7, label %8

7:                                                ; preds = %3
  tail call void @_ZN2vk10deallocateEPvPK21VkAllocationCallbacks(i8* null, %struct.VkAllocationCallbacks* %0) #12
  br label %11

8:                                                ; preds = %3
  %9 = bitcast i8* %5 to %"class.vk::SamplerYcbcrConversion"*
  tail call void @_ZN2vk22SamplerYcbcrConversionC2EPK34VkSamplerYcbcrConversionCreateInfoPv(%"class.vk::SamplerYcbcrConversion"* nonnull %9, %struct.VkSamplerYcbcrConversionCreateInfo* %1, i8* null) #12
  %10 = ptrtoint i8* %5 to i64
  store i64 %10, i64* %4, align 8
  br label %11

11:                                               ; preds = %7, %8
  %12 = phi i32 [ 0, %8 ], [ -1, %7 ]
  ret i32 %12
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @vkDestroySamplerYcbcrConversion(%struct.VkDevice_T*, i64, %struct.VkAllocationCallbacks*) local_unnamed_addr #0 {
  %4 = inttoptr i64 %1 to i8*
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([130 x i8], [130 x i8]* @.str.198, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 3582, %struct.VkDevice_T* %0, i8* %4, %struct.VkAllocationCallbacks* %2) #12
  %5 = icmp eq i64 %1, 0
  br i1 %5, label %7, label %6

6:                                                ; preds = %3
  tail call void @_ZN2vk10deallocateEPvPK21VkAllocationCallbacks(i8* %4, %struct.VkAllocationCallbacks* %2) #12
  br label %7

7:                                                ; preds = %3, %6
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @vkCreateDescriptorUpdateTemplate(%struct.VkDevice_T*, %struct.VkDescriptorUpdateTemplateCreateInfo*, %struct.VkAllocationCallbacks*, %class.VkNonDispatchableHandle.20*) local_unnamed_addr #0 {
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([205 x i8], [205 x i8]* @.str.199, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 3590, %struct.VkDevice_T* %0, %struct.VkDescriptorUpdateTemplateCreateInfo* %1, %struct.VkAllocationCallbacks* %2, %class.VkNonDispatchableHandle.20* %3) #12
  %5 = getelementptr inbounds %struct.VkDescriptorUpdateTemplateCreateInfo, %struct.VkDescriptorUpdateTemplateCreateInfo* %1, i64 0, i32 2
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %9, label %8

8:                                                ; preds = %4
  tail call void (i8*, ...) @_ZN2sw4warnEPKcz(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 3595, i32 %6) #12
  br label %9

9:                                                ; preds = %4, %8
  %10 = getelementptr inbounds %struct.VkDescriptorUpdateTemplateCreateInfo, %struct.VkDescriptorUpdateTemplateCreateInfo* %1, i64 0, i32 5
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %14, label %13

13:                                               ; preds = %9
  tail call void (i8*, ...) @_ZN2sw4warnEPKcz(i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.200, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 3600, i32 %11) #12
  br label %14

14:                                               ; preds = %9, %13
  %15 = getelementptr inbounds %struct.VkDescriptorUpdateTemplateCreateInfo, %struct.VkDescriptorUpdateTemplateCreateInfo* %1, i64 0, i32 1
  %16 = bitcast i8** %15 to %struct.VkBaseInStructure**
  br label %17

17:                                               ; preds = %17, %14
  %18 = phi %struct.VkBaseInStructure** [ %16, %14 ], [ %21, %17 ]
  %19 = load %struct.VkBaseInStructure*, %struct.VkBaseInStructure** %18, align 8
  %20 = icmp eq %struct.VkBaseInStructure* %19, null
  %21 = getelementptr inbounds %struct.VkBaseInStructure, %struct.VkBaseInStructure* %19, i64 0, i32 1
  br i1 %20, label %22, label %17

22:                                               ; preds = %17
  %23 = tail call i32 @_ZN2vk10ObjectBaseINS_24DescriptorUpdateTemplateE23VkNonDispatchableHandleIP28VkDescriptorUpdateTemplate_TEE6CreateI36VkDescriptorUpdateTemplateCreateInfoJEEE8VkResultPK21VkAllocationCallbacksPKT_PS5_DpT0_(%struct.VkAllocationCallbacks* %2, %struct.VkDescriptorUpdateTemplateCreateInfo* %1, %class.VkNonDispatchableHandle.20* %3) #16
  ret i32 %23
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden i32 @_ZN2vk10ObjectBaseINS_24DescriptorUpdateTemplateE23VkNonDispatchableHandleIP28VkDescriptorUpdateTemplate_TEE6CreateI36VkDescriptorUpdateTemplateCreateInfoJEEE8VkResultPK21VkAllocationCallbacksPKT_PS5_DpT0_(%struct.VkAllocationCallbacks*, %struct.VkDescriptorUpdateTemplateCreateInfo*, %class.VkNonDispatchableHandle.20*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.VkNonDispatchableHandle.20, %class.VkNonDispatchableHandle.20* %2, i64 0, i32 0
  store i64 0, i64* %4, align 8
  %5 = tail call i64 @_ZN2vk24DescriptorUpdateTemplate29ComputeRequiredAllocationSizeEPK36VkDescriptorUpdateTemplateCreateInfo(%struct.VkDescriptorUpdateTemplateCreateInfo* %1) #12
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %3
  %8 = tail call i8* @_ZN2vk8allocateEmmPK21VkAllocationCallbacks23VkSystemAllocationScope(i64 %5, i64 16, %struct.VkAllocationCallbacks* %0, i32 1) #12
  %9 = icmp eq i8* %8, null
  br i1 %9, label %18, label %10

10:                                               ; preds = %7, %3
  %11 = phi i8* [ %8, %7 ], [ null, %3 ]
  %12 = tail call i8* @_ZN2vk8allocateEmmPK21VkAllocationCallbacks23VkSystemAllocationScope(i64 24, i64 8, %struct.VkAllocationCallbacks* %0, i32 1) #12
  %13 = icmp eq i8* %12, null
  br i1 %13, label %14, label %15

14:                                               ; preds = %10
  tail call void @_ZN2vk10deallocateEPvPK21VkAllocationCallbacks(i8* %11, %struct.VkAllocationCallbacks* %0) #12
  br label %18

15:                                               ; preds = %10
  %16 = bitcast i8* %12 to %"class.vk::DescriptorUpdateTemplate"*
  tail call void @_ZN2vk24DescriptorUpdateTemplateC1EPK36VkDescriptorUpdateTemplateCreateInfoPv(%"class.vk::DescriptorUpdateTemplate"* nonnull %16, %struct.VkDescriptorUpdateTemplateCreateInfo* %1, i8* %11) #12
  %17 = ptrtoint i8* %12 to i64
  store i64 %17, i64* %4, align 8
  br label %18

18:                                               ; preds = %7, %14, %15
  %19 = phi i32 [ -1, %7 ], [ 0, %15 ], [ -1, %14 ]
  ret i32 %19
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @vkDestroyDescriptorUpdateTemplate(%struct.VkDevice_T*, i64, %struct.VkAllocationCallbacks*) local_unnamed_addr #0 {
  %4 = inttoptr i64 %1 to i8*
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([141 x i8], [141 x i8]* @.str.201, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 3616, %struct.VkDevice_T* %0, i8* %4, %struct.VkAllocationCallbacks* %2) #12
  %5 = icmp eq i64 %1, 0
  br i1 %5, label %7, label %6

6:                                                ; preds = %3
  tail call void @_ZN2vk10deallocateEPvPK21VkAllocationCallbacks(i8* %4, %struct.VkAllocationCallbacks* %2) #12
  br label %7

7:                                                ; preds = %3, %6
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @vkUpdateDescriptorSetWithTemplate(%struct.VkDevice_T*, i64, i64, i8*) local_unnamed_addr #0 {
  %5 = inttoptr i64 %1 to i8*
  %6 = inttoptr i64 %2 to i8*
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([155 x i8], [155 x i8]* @.str.202, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 3624, %struct.VkDevice_T* %0, i8* %5, i8* %6, i8* %3) #12
  %7 = inttoptr i64 %2 to %"class.vk::DescriptorUpdateTemplate"*
  %8 = icmp eq %struct.VkDevice_T* %0, null
  %9 = bitcast %struct.VkDevice_T* %0 to %"class.vk::DispatchableObject.872"*
  %10 = getelementptr inbounds %"class.vk::DispatchableObject.872", %"class.vk::DispatchableObject.872"* %9, i64 0, i32 1
  %11 = select i1 %8, %"class.vk::Device"* null, %"class.vk::Device"* %10
  tail call void @_ZN2vk24DescriptorUpdateTemplate19updateDescriptorSetEPNS_6DeviceE23VkNonDispatchableHandleIP17VkDescriptorSet_TEPKv(%"class.vk::DescriptorUpdateTemplate"* %7, %"class.vk::Device"* %11, i64 %1, i8* %3) #12
  ret void
}

; Function Attrs: optsize
declare void @_ZN2vk24DescriptorUpdateTemplate19updateDescriptorSetEPNS_6DeviceE23VkNonDispatchableHandleIP17VkDescriptorSet_TEPKv(%"class.vk::DescriptorUpdateTemplate"*, %"class.vk::Device"*, i64, i8*) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @vkGetPhysicalDeviceExternalBufferProperties(%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceExternalBufferInfo*, %struct.VkExternalBufferProperties*) local_unnamed_addr #0 {
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([181 x i8], [181 x i8]* @.str.203, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 3632, %struct.VkPhysicalDevice_T* %0, %struct.VkPhysicalDeviceExternalBufferInfo* %1, %struct.VkExternalBufferProperties* %2) #12
  %4 = icmp eq %struct.VkPhysicalDevice_T* %0, null
  %5 = bitcast %struct.VkPhysicalDevice_T* %0 to %"class.vk::DispatchableObject.871"*
  %6 = getelementptr inbounds %"class.vk::DispatchableObject.871", %"class.vk::DispatchableObject.871"* %5, i64 0, i32 1
  %7 = select i1 %4, %"class.vk::PhysicalDevice"* null, %"class.vk::PhysicalDevice"* %6
  tail call void @_ZNK2vk14PhysicalDevice13getPropertiesEPK34VkPhysicalDeviceExternalBufferInfoP26VkExternalBufferProperties(%"class.vk::PhysicalDevice"* %7, %struct.VkPhysicalDeviceExternalBufferInfo* %1, %struct.VkExternalBufferProperties* %2) #12
  ret void
}

; Function Attrs: optsize
declare void @_ZNK2vk14PhysicalDevice13getPropertiesEPK34VkPhysicalDeviceExternalBufferInfoP26VkExternalBufferProperties(%"class.vk::PhysicalDevice"*, %struct.VkPhysicalDeviceExternalBufferInfo*, %struct.VkExternalBufferProperties*) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @vkGetPhysicalDeviceExternalFenceProperties(%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceExternalFenceInfo*, %struct.VkExternalFenceProperties*) local_unnamed_addr #0 {
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([177 x i8], [177 x i8]* @.str.204, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 3640, %struct.VkPhysicalDevice_T* %0, %struct.VkPhysicalDeviceExternalFenceInfo* %1, %struct.VkExternalFenceProperties* %2) #12
  %4 = icmp eq %struct.VkPhysicalDevice_T* %0, null
  %5 = bitcast %struct.VkPhysicalDevice_T* %0 to %"class.vk::DispatchableObject.871"*
  %6 = getelementptr inbounds %"class.vk::DispatchableObject.871", %"class.vk::DispatchableObject.871"* %5, i64 0, i32 1
  %7 = select i1 %4, %"class.vk::PhysicalDevice"* null, %"class.vk::PhysicalDevice"* %6
  tail call void @_ZNK2vk14PhysicalDevice13getPropertiesEPK33VkPhysicalDeviceExternalFenceInfoP25VkExternalFenceProperties(%"class.vk::PhysicalDevice"* %7, %struct.VkPhysicalDeviceExternalFenceInfo* %1, %struct.VkExternalFenceProperties* %2) #12
  ret void
}

; Function Attrs: optsize
declare void @_ZNK2vk14PhysicalDevice13getPropertiesEPK33VkPhysicalDeviceExternalFenceInfoP25VkExternalFenceProperties(%"class.vk::PhysicalDevice"*, %struct.VkPhysicalDeviceExternalFenceInfo*, %struct.VkExternalFenceProperties*) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @vkGetPhysicalDeviceExternalSemaphoreProperties(%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceExternalSemaphoreInfo*, %struct.VkExternalSemaphoreProperties*) local_unnamed_addr #0 {
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([193 x i8], [193 x i8]* @.str.205, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 3648, %struct.VkPhysicalDevice_T* %0, %struct.VkPhysicalDeviceExternalSemaphoreInfo* %1, %struct.VkExternalSemaphoreProperties* %2) #12
  %4 = icmp eq %struct.VkPhysicalDevice_T* %0, null
  %5 = bitcast %struct.VkPhysicalDevice_T* %0 to %"class.vk::DispatchableObject.871"*
  %6 = getelementptr inbounds %"class.vk::DispatchableObject.871", %"class.vk::DispatchableObject.871"* %5, i64 0, i32 1
  %7 = select i1 %4, %"class.vk::PhysicalDevice"* null, %"class.vk::PhysicalDevice"* %6
  tail call void @_ZNK2vk14PhysicalDevice13getPropertiesEPK37VkPhysicalDeviceExternalSemaphoreInfoP29VkExternalSemaphoreProperties(%"class.vk::PhysicalDevice"* %7, %struct.VkPhysicalDeviceExternalSemaphoreInfo* %1, %struct.VkExternalSemaphoreProperties* %2) #12
  ret void
}

; Function Attrs: optsize
declare void @_ZNK2vk14PhysicalDevice13getPropertiesEPK37VkPhysicalDeviceExternalSemaphoreInfoP29VkExternalSemaphoreProperties(%"class.vk::PhysicalDevice"*, %struct.VkPhysicalDeviceExternalSemaphoreInfo*, %struct.VkExternalSemaphoreProperties*) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @vkGetDescriptorSetLayoutSupport(%struct.VkDevice_T*, %struct.VkDescriptorSetLayoutCreateInfo*, %struct.VkDescriptorSetLayoutSupport*) local_unnamed_addr #0 {
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([139 x i8], [139 x i8]* @.str.206, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 3656, %struct.VkDevice_T* %0, %struct.VkDescriptorSetLayoutCreateInfo* %1, %struct.VkDescriptorSetLayoutSupport* %2) #12
  %4 = icmp eq %struct.VkDevice_T* %0, null
  %5 = bitcast %struct.VkDevice_T* %0 to %"class.vk::DispatchableObject.872"*
  %6 = getelementptr inbounds %"class.vk::DispatchableObject.872", %"class.vk::DispatchableObject.872"* %5, i64 0, i32 1
  %7 = select i1 %4, %"class.vk::Device"* null, %"class.vk::Device"* %6
  tail call void @_ZNK2vk6Device29getDescriptorSetLayoutSupportEPK31VkDescriptorSetLayoutCreateInfoP28VkDescriptorSetLayoutSupport(%"class.vk::Device"* %7, %struct.VkDescriptorSetLayoutCreateInfo* %1, %struct.VkDescriptorSetLayoutSupport* %2) #12
  ret void
}

; Function Attrs: optsize
declare void @_ZNK2vk6Device29getDescriptorSetLayoutSupportEPK31VkDescriptorSetLayoutCreateInfoP28VkDescriptorSetLayoutSupport(%"class.vk::Device"*, %struct.VkDescriptorSetLayoutCreateInfo*, %struct.VkDescriptorSetLayoutSupport*) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @vkCmdSetLineStippleEXT(%struct.VkCommandBuffer_T*, i32, i16 zeroext) local_unnamed_addr #0 {
  %4 = zext i16 %2 to i32
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([118 x i8], [118 x i8]* @.str.207, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 3664, %struct.VkCommandBuffer_T* %0, i32 %1, i32 %4) #12
  tail call void (i8*, ...) @_ZN2sw4warnEPKcz(i8* getelementptr inbounds ([90 x i8], [90 x i8]* @.str.208, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 3666) #12
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @vkCmdBeginDebugUtilsLabelEXT(%struct.VkCommandBuffer_T*, %struct.VkDebugUtilsLabelEXT*) local_unnamed_addr #0 {
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([96 x i8], [96 x i8]* @.str.209, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 3672, %struct.VkCommandBuffer_T* %0, %struct.VkDebugUtilsLabelEXT* %1) #12
  %3 = icmp eq %struct.VkCommandBuffer_T* %0, null
  %4 = bitcast %struct.VkCommandBuffer_T* %0 to %"class.vk::DispatchableObject.884"*
  %5 = getelementptr inbounds %"class.vk::DispatchableObject.884", %"class.vk::DispatchableObject.884"* %4, i64 0, i32 1
  %6 = select i1 %3, %"class.vk::CommandBuffer"* null, %"class.vk::CommandBuffer"* %5
  tail call void @_ZN2vk13CommandBuffer20beginDebugUtilsLabelEPK20VkDebugUtilsLabelEXT(%"class.vk::CommandBuffer"* %6, %struct.VkDebugUtilsLabelEXT* %1) #12
  ret void
}

; Function Attrs: optsize
declare void @_ZN2vk13CommandBuffer20beginDebugUtilsLabelEPK20VkDebugUtilsLabelEXT(%"class.vk::CommandBuffer"*, %struct.VkDebugUtilsLabelEXT*) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @vkCmdEndDebugUtilsLabelEXT(%struct.VkCommandBuffer_T*) local_unnamed_addr #0 {
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.125, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 3679, %struct.VkCommandBuffer_T* %0) #12
  %2 = icmp eq %struct.VkCommandBuffer_T* %0, null
  %3 = bitcast %struct.VkCommandBuffer_T* %0 to %"class.vk::DispatchableObject.884"*
  %4 = getelementptr inbounds %"class.vk::DispatchableObject.884", %"class.vk::DispatchableObject.884"* %3, i64 0, i32 1
  %5 = select i1 %2, %"class.vk::CommandBuffer"* null, %"class.vk::CommandBuffer"* %4
  tail call void @_ZN2vk13CommandBuffer18endDebugUtilsLabelEv(%"class.vk::CommandBuffer"* %5) #12
  ret void
}

; Function Attrs: optsize
declare void @_ZN2vk13CommandBuffer18endDebugUtilsLabelEv(%"class.vk::CommandBuffer"*) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @vkCmdInsertDebugUtilsLabelEXT(%struct.VkCommandBuffer_T*, %struct.VkDebugUtilsLabelEXT*) local_unnamed_addr #0 {
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([96 x i8], [96 x i8]* @.str.209, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 3687, %struct.VkCommandBuffer_T* %0, %struct.VkDebugUtilsLabelEXT* %1) #12
  %3 = icmp eq %struct.VkCommandBuffer_T* %0, null
  %4 = bitcast %struct.VkCommandBuffer_T* %0 to %"class.vk::DispatchableObject.884"*
  %5 = getelementptr inbounds %"class.vk::DispatchableObject.884", %"class.vk::DispatchableObject.884"* %4, i64 0, i32 1
  %6 = select i1 %3, %"class.vk::CommandBuffer"* null, %"class.vk::CommandBuffer"* %5
  tail call void @_ZN2vk13CommandBuffer21insertDebugUtilsLabelEPK20VkDebugUtilsLabelEXT(%"class.vk::CommandBuffer"* %6, %struct.VkDebugUtilsLabelEXT* %1) #12
  ret void
}

; Function Attrs: optsize
declare void @_ZN2vk13CommandBuffer21insertDebugUtilsLabelEPK20VkDebugUtilsLabelEXT(%"class.vk::CommandBuffer"*, %struct.VkDebugUtilsLabelEXT*) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @vkCreateDebugUtilsMessengerEXT(%struct.VkInstance_T*, %struct.VkDebugUtilsMessengerCreateInfoEXT*, %struct.VkAllocationCallbacks*, %class.VkNonDispatchableHandle.29*) local_unnamed_addr #0 {
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([190 x i8], [190 x i8]* @.str.210, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 3695, %struct.VkInstance_T* %0, %struct.VkDebugUtilsMessengerCreateInfoEXT* %1, %struct.VkAllocationCallbacks* %2, %class.VkNonDispatchableHandle.29* %3) #12
  %5 = getelementptr inbounds %struct.VkDebugUtilsMessengerCreateInfoEXT, %struct.VkDebugUtilsMessengerCreateInfoEXT* %1, i64 0, i32 2
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %9, label %8

8:                                                ; preds = %4
  tail call void (i8*, ...) @_ZN2sw4warnEPKcz(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 3700, i32 %6) #12
  br label %9

9:                                                ; preds = %4, %8
  %10 = tail call i32 @_ZN2vk10ObjectBaseINS_19DebugUtilsMessengerE23VkNonDispatchableHandleIP26VkDebugUtilsMessengerEXT_TEE6CreateI34VkDebugUtilsMessengerCreateInfoEXTJEEE8VkResultPK21VkAllocationCallbacksPKT_PS5_DpT0_(%struct.VkAllocationCallbacks* %2, %struct.VkDebugUtilsMessengerCreateInfoEXT* %1, %class.VkNonDispatchableHandle.29* %3) #16
  ret i32 %10
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @vkDestroyDebugUtilsMessengerEXT(%struct.VkInstance_T*, i64, %struct.VkAllocationCallbacks*) local_unnamed_addr #0 {
  %4 = inttoptr i64 %1 to i8*
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([128 x i8], [128 x i8]* @.str.211, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 3709, %struct.VkInstance_T* %0, i8* %4, %struct.VkAllocationCallbacks* %2) #12
  %5 = icmp eq i64 %1, 0
  br i1 %5, label %8, label %6

6:                                                ; preds = %3
  %7 = inttoptr i64 %1 to %"class.vk::DebugUtilsMessenger"*
  tail call void @_ZN2vk19DebugUtilsMessenger7destroyEPK21VkAllocationCallbacks(%"class.vk::DebugUtilsMessenger"* nonnull %7, %struct.VkAllocationCallbacks* %2) #12
  tail call void @_ZN2vk10deallocateEPvPK21VkAllocationCallbacks(i8* %4, %struct.VkAllocationCallbacks* %2) #12
  br label %8

8:                                                ; preds = %3, %6
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @vkQueueBeginDebugUtilsLabelEXT(%struct.VkQueue_T*, %struct.VkDebugUtilsLabelEXT*) local_unnamed_addr #0 {
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str.212, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 3717, %struct.VkQueue_T* %0, %struct.VkDebugUtilsLabelEXT* %1) #12
  %3 = bitcast %struct.VkQueue_T* %0 to %"class.vk::Queue"*
  tail call void @_ZN2vk5Queue20beginDebugUtilsLabelEPK20VkDebugUtilsLabelEXT(%"class.vk::Queue"* %3, %struct.VkDebugUtilsLabelEXT* %1) #12
  ret void
}

; Function Attrs: optsize
declare void @_ZN2vk5Queue20beginDebugUtilsLabelEPK20VkDebugUtilsLabelEXT(%"class.vk::Queue"*, %struct.VkDebugUtilsLabelEXT*) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @vkQueueEndDebugUtilsLabelEXT(%struct.VkQueue_T*) local_unnamed_addr #0 {
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.34, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 3724, %struct.VkQueue_T* %0) #12
  %2 = bitcast %struct.VkQueue_T* %0 to %"class.vk::Queue"*
  tail call void @_ZN2vk5Queue18endDebugUtilsLabelEv(%"class.vk::Queue"* %2) #12
  ret void
}

; Function Attrs: optsize
declare void @_ZN2vk5Queue18endDebugUtilsLabelEv(%"class.vk::Queue"*) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @vkQueueInsertDebugUtilsLabelEXT(%struct.VkQueue_T*, %struct.VkDebugUtilsLabelEXT*) local_unnamed_addr #0 {
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str.212, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 3732, %struct.VkQueue_T* %0, %struct.VkDebugUtilsLabelEXT* %1) #12
  %3 = bitcast %struct.VkQueue_T* %0 to %"class.vk::Queue"*
  tail call void @_ZN2vk5Queue21insertDebugUtilsLabelEPK20VkDebugUtilsLabelEXT(%"class.vk::Queue"* %3, %struct.VkDebugUtilsLabelEXT* %1) #12
  ret void
}

; Function Attrs: optsize
declare void @_ZN2vk5Queue21insertDebugUtilsLabelEPK20VkDebugUtilsLabelEXT(%"class.vk::Queue"*, %struct.VkDebugUtilsLabelEXT*) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @vkSetDebugUtilsObjectNameEXT(%struct.VkDevice_T*, %struct.VkDebugUtilsObjectNameInfoEXT*) local_unnamed_addr #0 {
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([90 x i8], [90 x i8]* @.str.213, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 3740, %struct.VkDevice_T* %0, %struct.VkDebugUtilsObjectNameInfoEXT* %1) #12
  %3 = icmp eq %struct.VkDevice_T* %0, null
  %4 = bitcast %struct.VkDevice_T* %0 to %"class.vk::DispatchableObject.872"*
  %5 = getelementptr inbounds %"class.vk::DispatchableObject.872", %"class.vk::DispatchableObject.872"* %4, i64 0, i32 1
  %6 = select i1 %3, %"class.vk::Device"* null, %"class.vk::Device"* %5
  %7 = tail call i32 @_ZN2vk6Device23setDebugUtilsObjectNameEPK29VkDebugUtilsObjectNameInfoEXT(%"class.vk::Device"* %6, %struct.VkDebugUtilsObjectNameInfoEXT* %1) #12
  ret i32 %7
}

; Function Attrs: optsize
declare i32 @_ZN2vk6Device23setDebugUtilsObjectNameEPK29VkDebugUtilsObjectNameInfoEXT(%"class.vk::Device"*, %struct.VkDebugUtilsObjectNameInfoEXT*) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @vkSetDebugUtilsObjectTagEXT(%struct.VkDevice_T*, %struct.VkDebugUtilsObjectTagInfoEXT*) local_unnamed_addr #0 {
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([88 x i8], [88 x i8]* @.str.214, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 3748, %struct.VkDevice_T* %0, %struct.VkDebugUtilsObjectTagInfoEXT* %1) #12
  %3 = icmp eq %struct.VkDevice_T* %0, null
  %4 = bitcast %struct.VkDevice_T* %0 to %"class.vk::DispatchableObject.872"*
  %5 = getelementptr inbounds %"class.vk::DispatchableObject.872", %"class.vk::DispatchableObject.872"* %4, i64 0, i32 1
  %6 = select i1 %3, %"class.vk::Device"* null, %"class.vk::Device"* %5
  %7 = tail call i32 @_ZN2vk6Device22setDebugUtilsObjectTagEPK28VkDebugUtilsObjectTagInfoEXT(%"class.vk::Device"* %6, %struct.VkDebugUtilsObjectTagInfoEXT* %1) #12
  ret i32 %7
}

; Function Attrs: optsize
declare i32 @_ZN2vk6Device22setDebugUtilsObjectTagEPK28VkDebugUtilsObjectTagInfoEXT(%"class.vk::Device"*, %struct.VkDebugUtilsObjectTagInfoEXT*) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @vkSubmitDebugUtilsMessageEXT(%struct.VkInstance_T*, i32, i32, %struct.VkDebugUtilsMessengerCallbackDataEXT*) local_unnamed_addr #0 {
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([217 x i8], [217 x i8]* @.str.215, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 3756, %struct.VkInstance_T* %0, i32 %1, i32 %2, %struct.VkDebugUtilsMessengerCallbackDataEXT* %3) #12
  %5 = icmp eq %struct.VkInstance_T* %0, null
  %6 = bitcast %struct.VkInstance_T* %0 to %"class.vk::DispatchableObject"*
  %7 = getelementptr inbounds %"class.vk::DispatchableObject", %"class.vk::DispatchableObject"* %6, i64 0, i32 1
  %8 = select i1 %5, %"class.vk::Instance"* null, %"class.vk::Instance"* %7
  tail call void @_ZN2vk8Instance23submitDebugUtilsMessageE38VkDebugUtilsMessageSeverityFlagBitsEXTjPK36VkDebugUtilsMessengerCallbackDataEXT(%"class.vk::Instance"* %8, i32 %1, i32 %2, %struct.VkDebugUtilsMessengerCallbackDataEXT* %3) #12
  ret void
}

; Function Attrs: optsize
declare void @_ZN2vk8Instance23submitDebugUtilsMessageE38VkDebugUtilsMessageSeverityFlagBitsEXTjPK36VkDebugUtilsMessengerCallbackDataEXT(%"class.vk::Instance"*, i32, i32, %struct.VkDebugUtilsMessengerCallbackDataEXT*) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @vkCreateXcbSurfaceKHR(%struct.VkInstance_T*, %struct.VkXcbSurfaceCreateInfoKHR*, %struct.VkAllocationCallbacks*, %class.VkNonDispatchableHandle.21*) local_unnamed_addr #0 {
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([152 x i8], [152 x i8]* @.str.216, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 3765, %struct.VkInstance_T* %0, %struct.VkXcbSurfaceCreateInfoKHR* %1, %struct.VkAllocationCallbacks* %2, %class.VkNonDispatchableHandle.21* %3) #12
  %5 = tail call i32 @_ZN2vk10ObjectBaseINS_13XcbSurfaceKHRE23VkNonDispatchableHandleIP14VkSurfaceKHR_TEE6CreateI25VkXcbSurfaceCreateInfoKHRJEEE8VkResultPK21VkAllocationCallbacksPKT_PS5_DpT0_(%struct.VkAllocationCallbacks* %2, %struct.VkXcbSurfaceCreateInfoKHR* %1, %class.VkNonDispatchableHandle.21* %3) #16
  ret i32 %5
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden i32 @_ZN2vk10ObjectBaseINS_13XcbSurfaceKHRE23VkNonDispatchableHandleIP14VkSurfaceKHR_TEE6CreateI25VkXcbSurfaceCreateInfoKHRJEEE8VkResultPK21VkAllocationCallbacksPKT_PS5_DpT0_(%struct.VkAllocationCallbacks*, %struct.VkXcbSurfaceCreateInfoKHR*, %class.VkNonDispatchableHandle.21*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.VkNonDispatchableHandle.21, %class.VkNonDispatchableHandle.21* %2, i64 0, i32 0
  store i64 0, i64* %4, align 8
  %5 = tail call i64 @_ZN2vk13XcbSurfaceKHR29ComputeRequiredAllocationSizeEPK25VkXcbSurfaceCreateInfoKHR(%struct.VkXcbSurfaceCreateInfoKHR* %1) #12
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %3
  %8 = tail call i8* @_ZN2vk8allocateEmmPK21VkAllocationCallbacks23VkSystemAllocationScope(i64 %5, i64 16, %struct.VkAllocationCallbacks* %0, i32 1) #12
  %9 = icmp eq i8* %8, null
  br i1 %9, label %18, label %10

10:                                               ; preds = %7, %3
  %11 = phi i8* [ %8, %7 ], [ null, %3 ]
  %12 = tail call i8* @_ZN2vk8allocateEmmPK21VkAllocationCallbacks23VkSystemAllocationScope(i64 72, i64 8, %struct.VkAllocationCallbacks* %0, i32 1) #12
  %13 = icmp eq i8* %12, null
  br i1 %13, label %14, label %15

14:                                               ; preds = %10
  tail call void @_ZN2vk10deallocateEPvPK21VkAllocationCallbacks(i8* %11, %struct.VkAllocationCallbacks* %0) #12
  br label %18

15:                                               ; preds = %10
  %16 = bitcast i8* %12 to %"class.vk::XcbSurfaceKHR"*
  tail call void @_ZN2vk13XcbSurfaceKHRC1EPK25VkXcbSurfaceCreateInfoKHRPv(%"class.vk::XcbSurfaceKHR"* nonnull %16, %struct.VkXcbSurfaceCreateInfoKHR* %1, i8* %11) #12
  %17 = ptrtoint i8* %12 to i64
  store i64 %17, i64* %4, align 8
  br label %18

18:                                               ; preds = %7, %14, %15
  %19 = phi i32 [ -1, %7 ], [ 0, %15 ], [ -1, %14 ]
  ret i32 %19
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @vkGetPhysicalDeviceXcbPresentationSupportKHR(%struct.VkPhysicalDevice_T*, i32, %struct.xcb_connection_t*, i32) local_unnamed_addr #0 {
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([151 x i8], [151 x i8]* @.str.217, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 3776, %struct.VkPhysicalDevice_T* %0, i32 %1, %struct.xcb_connection_t* %2, i32 %3) #12
  ret i32 1
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @vkCreateXlibSurfaceKHR(%struct.VkInstance_T*, %struct.VkXlibSurfaceCreateInfoKHR*, %struct.VkAllocationCallbacks*, %class.VkNonDispatchableHandle.21*) local_unnamed_addr #0 {
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([153 x i8], [153 x i8]* @.str.218, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 3786, %struct.VkInstance_T* %0, %struct.VkXlibSurfaceCreateInfoKHR* %1, %struct.VkAllocationCallbacks* %2, %class.VkNonDispatchableHandle.21* %3) #12
  %5 = tail call i32 @_ZN2vk10ObjectBaseINS_14XlibSurfaceKHRE23VkNonDispatchableHandleIP14VkSurfaceKHR_TEE6CreateI26VkXlibSurfaceCreateInfoKHRJEEE8VkResultPK21VkAllocationCallbacksPKT_PS5_DpT0_(%struct.VkAllocationCallbacks* %2, %struct.VkXlibSurfaceCreateInfoKHR* %1, %class.VkNonDispatchableHandle.21* %3) #16
  ret i32 %5
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden i32 @_ZN2vk10ObjectBaseINS_14XlibSurfaceKHRE23VkNonDispatchableHandleIP14VkSurfaceKHR_TEE6CreateI26VkXlibSurfaceCreateInfoKHRJEEE8VkResultPK21VkAllocationCallbacksPKT_PS5_DpT0_(%struct.VkAllocationCallbacks*, %struct.VkXlibSurfaceCreateInfoKHR*, %class.VkNonDispatchableHandle.21*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.VkNonDispatchableHandle.21, %class.VkNonDispatchableHandle.21* %2, i64 0, i32 0
  store i64 0, i64* %4, align 8
  %5 = tail call i64 @_ZN2vk14XlibSurfaceKHR29ComputeRequiredAllocationSizeEPK26VkXlibSurfaceCreateInfoKHR(%struct.VkXlibSurfaceCreateInfoKHR* %1) #12
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %3
  %8 = tail call i8* @_ZN2vk8allocateEmmPK21VkAllocationCallbacks23VkSystemAllocationScope(i64 %5, i64 16, %struct.VkAllocationCallbacks* %0, i32 1) #12
  %9 = icmp eq i8* %8, null
  br i1 %9, label %18, label %10

10:                                               ; preds = %7, %3
  %11 = phi i8* [ %8, %7 ], [ null, %3 ]
  %12 = tail call i8* @_ZN2vk8allocateEmmPK21VkAllocationCallbacks23VkSystemAllocationScope(i64 88, i64 8, %struct.VkAllocationCallbacks* %0, i32 1) #12
  %13 = icmp eq i8* %12, null
  br i1 %13, label %14, label %15

14:                                               ; preds = %10
  tail call void @_ZN2vk10deallocateEPvPK21VkAllocationCallbacks(i8* %11, %struct.VkAllocationCallbacks* %0) #12
  br label %18

15:                                               ; preds = %10
  %16 = bitcast i8* %12 to %"class.vk::XlibSurfaceKHR"*
  tail call void @_ZN2vk14XlibSurfaceKHRC1EPK26VkXlibSurfaceCreateInfoKHRPv(%"class.vk::XlibSurfaceKHR"* nonnull %16, %struct.VkXlibSurfaceCreateInfoKHR* %1, i8* %11) #12
  %17 = ptrtoint i8* %12 to i64
  store i64 %17, i64* %4, align 8
  br label %18

18:                                               ; preds = %7, %14, %15
  %19 = phi i32 [ -1, %7 ], [ 0, %15 ], [ -1, %14 ]
  ret i32 %19
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @vkGetPhysicalDeviceXlibPresentationSupportKHR(%struct.VkPhysicalDevice_T*, i32, %struct._XDisplay*, i64) local_unnamed_addr #0 {
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([129 x i8], [129 x i8]* @.str.219, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 3797, %struct.VkPhysicalDevice_T* %0, i32 %1, %struct._XDisplay* %2, i64 %3) #12
  ret i32 1
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @vkCreateHeadlessSurfaceEXT(%struct.VkInstance_T*, %struct.VkHeadlessSurfaceCreateInfoEXT*, %struct.VkAllocationCallbacks*, %class.VkNonDispatchableHandle.21*) local_unnamed_addr #0 {
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([157 x i8], [157 x i8]* @.str.220, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 3937, %struct.VkInstance_T* %0, %struct.VkHeadlessSurfaceCreateInfoEXT* %1, %struct.VkAllocationCallbacks* %2, %class.VkNonDispatchableHandle.21* %3) #12
  %5 = tail call i32 @_ZN2vk10ObjectBaseINS_18HeadlessSurfaceKHRE23VkNonDispatchableHandleIP14VkSurfaceKHR_TEE6CreateI30VkHeadlessSurfaceCreateInfoEXTJEEE8VkResultPK21VkAllocationCallbacksPKT_PS5_DpT0_(%struct.VkAllocationCallbacks* %2, %struct.VkHeadlessSurfaceCreateInfoEXT* %1, %class.VkNonDispatchableHandle.21* %3) #16
  ret i32 %5
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden i32 @_ZN2vk10ObjectBaseINS_18HeadlessSurfaceKHRE23VkNonDispatchableHandleIP14VkSurfaceKHR_TEE6CreateI30VkHeadlessSurfaceCreateInfoEXTJEEE8VkResultPK21VkAllocationCallbacksPKT_PS5_DpT0_(%struct.VkAllocationCallbacks*, %struct.VkHeadlessSurfaceCreateInfoEXT*, %class.VkNonDispatchableHandle.21*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.VkNonDispatchableHandle.21, %class.VkNonDispatchableHandle.21* %2, i64 0, i32 0
  store i64 0, i64* %4, align 8
  %5 = tail call i64 @_ZN2vk18HeadlessSurfaceKHR29ComputeRequiredAllocationSizeEPK30VkHeadlessSurfaceCreateInfoEXT(%struct.VkHeadlessSurfaceCreateInfoEXT* %1) #12
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %3
  %8 = tail call i8* @_ZN2vk8allocateEmmPK21VkAllocationCallbacks23VkSystemAllocationScope(i64 %5, i64 16, %struct.VkAllocationCallbacks* %0, i32 1) #12
  %9 = icmp eq i8* %8, null
  br i1 %9, label %18, label %10

10:                                               ; preds = %7, %3
  %11 = phi i8* [ %8, %7 ], [ null, %3 ]
  %12 = tail call i8* @_ZN2vk8allocateEmmPK21VkAllocationCallbacks23VkSystemAllocationScope(i64 16, i64 8, %struct.VkAllocationCallbacks* %0, i32 1) #12
  %13 = icmp eq i8* %12, null
  br i1 %13, label %14, label %15

14:                                               ; preds = %10
  tail call void @_ZN2vk10deallocateEPvPK21VkAllocationCallbacks(i8* %11, %struct.VkAllocationCallbacks* %0) #12
  br label %18

15:                                               ; preds = %10
  %16 = bitcast i8* %12 to %"class.vk::HeadlessSurfaceKHR"*
  tail call void @_ZN2vk18HeadlessSurfaceKHRC1EPK30VkHeadlessSurfaceCreateInfoEXTPv(%"class.vk::HeadlessSurfaceKHR"* nonnull %16, %struct.VkHeadlessSurfaceCreateInfoEXT* %1, i8* %11) #12
  %17 = ptrtoint i8* %12 to i64
  store i64 %17, i64* %4, align 8
  br label %18

18:                                               ; preds = %7, %14, %15
  %19 = phi i32 [ -1, %7 ], [ 0, %15 ], [ -1, %14 ]
  ret i32 %19
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @vkDestroySurfaceKHR(%struct.VkInstance_T*, i64, %struct.VkAllocationCallbacks*) local_unnamed_addr #0 {
  %4 = inttoptr i64 %1 to i8*
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([114 x i8], [114 x i8]* @.str.221, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 3946, %struct.VkInstance_T* %0, i8* %4, %struct.VkAllocationCallbacks* %2) #12
  %5 = inttoptr i64 %1 to %"class.vk::SurfaceKHR"*
  %6 = icmp eq i64 %1, 0
  br i1 %6, label %15, label %7

7:                                                ; preds = %3
  %8 = inttoptr i64 %1 to void (%"class.vk::SurfaceKHR"*, %struct.VkAllocationCallbacks*)***
  %9 = load void (%"class.vk::SurfaceKHR"*, %struct.VkAllocationCallbacks*)**, void (%"class.vk::SurfaceKHR"*, %struct.VkAllocationCallbacks*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.vk::SurfaceKHR"*, %struct.VkAllocationCallbacks*)*, void (%"class.vk::SurfaceKHR"*, %struct.VkAllocationCallbacks*)** %9, i64 2
  %11 = load void (%"class.vk::SurfaceKHR"*, %struct.VkAllocationCallbacks*)*, void (%"class.vk::SurfaceKHR"*, %struct.VkAllocationCallbacks*)** %10, align 8
  tail call void %11(%"class.vk::SurfaceKHR"* nonnull %5, %struct.VkAllocationCallbacks* %2) #12
  %12 = inttoptr i64 %1 to void (%"class.vk::SurfaceKHR"*)***
  %13 = load void (%"class.vk::SurfaceKHR"*)**, void (%"class.vk::SurfaceKHR"*)*** %12, align 8
  %14 = load void (%"class.vk::SurfaceKHR"*)*, void (%"class.vk::SurfaceKHR"*)** %13, align 8
  tail call void %14(%"class.vk::SurfaceKHR"* nonnull %5) #12
  tail call void @_ZN2vk10deallocateEPvPK21VkAllocationCallbacks(i8* %4, %struct.VkAllocationCallbacks* %2) #12
  br label %15

15:                                               ; preds = %3, %7
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @vkGetPhysicalDeviceSurfaceSupportKHR(%struct.VkPhysicalDevice_T*, i32, i64, i32*) local_unnamed_addr #0 {
  %5 = inttoptr i64 %2 to i8*
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([136 x i8], [136 x i8]* @.str.222, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 3954, %struct.VkPhysicalDevice_T* %0, i32 %1, i8* %5, i32* %3) #12
  store i32 1, i32* %3, align 4
  ret i32 0
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @vkGetPhysicalDeviceSurfaceCapabilitiesKHR(%struct.VkPhysicalDevice_T*, i64, %struct.VkSurfaceCapabilitiesKHR*) local_unnamed_addr #0 {
  %4 = inttoptr i64 %1 to i8*
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([133 x i8], [133 x i8]* @.str.223, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 3963, %struct.VkPhysicalDevice_T* %0, i8* %4, %struct.VkSurfaceCapabilitiesKHR* %2) #12
  %5 = inttoptr i64 %1 to %"class.vk::SurfaceKHR"*
  %6 = inttoptr i64 %1 to i32 (%"class.vk::SurfaceKHR"*, %struct.VkSurfaceCapabilitiesKHR*)***
  %7 = load i32 (%"class.vk::SurfaceKHR"*, %struct.VkSurfaceCapabilitiesKHR*)**, i32 (%"class.vk::SurfaceKHR"*, %struct.VkSurfaceCapabilitiesKHR*)*** %6, align 8
  %8 = getelementptr inbounds i32 (%"class.vk::SurfaceKHR"*, %struct.VkSurfaceCapabilitiesKHR*)*, i32 (%"class.vk::SurfaceKHR"*, %struct.VkSurfaceCapabilitiesKHR*)** %7, i64 3
  %9 = load i32 (%"class.vk::SurfaceKHR"*, %struct.VkSurfaceCapabilitiesKHR*)*, i32 (%"class.vk::SurfaceKHR"*, %struct.VkSurfaceCapabilitiesKHR*)** %8, align 8
  %10 = tail call i32 %9(%"class.vk::SurfaceKHR"* %5, %struct.VkSurfaceCapabilitiesKHR* %2) #12
  ret i32 %10
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @vkGetPhysicalDeviceSurfaceFormatsKHR(%struct.VkPhysicalDevice_T*, i64, i32*, %struct.VkSurfaceFormatKHR*) local_unnamed_addr #0 {
  %5 = inttoptr i64 %1 to i8*
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([158 x i8], [158 x i8]* @.str.224, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 3971, %struct.VkPhysicalDevice_T* %0, i8* %5, i32* %2, %struct.VkSurfaceFormatKHR* %3) #12
  %6 = icmp eq %struct.VkSurfaceFormatKHR* %3, null
  %7 = inttoptr i64 %1 to %"class.vk::SurfaceKHR"*
  br i1 %6, label %8, label %10

8:                                                ; preds = %4
  %9 = tail call i32 @_ZNK2vk10SurfaceKHR22getSurfaceFormatsCountEv(%"class.vk::SurfaceKHR"* %7) #12
  store i32 %9, i32* %2, align 4
  br label %12

10:                                               ; preds = %4
  %11 = tail call i32 @_ZNK2vk10SurfaceKHR17getSurfaceFormatsEPjP18VkSurfaceFormatKHR(%"class.vk::SurfaceKHR"* %7, i32* %2, %struct.VkSurfaceFormatKHR* nonnull %3) #12
  br label %12

12:                                               ; preds = %10, %8
  %13 = phi i32 [ %11, %10 ], [ 0, %8 ]
  ret i32 %13
}

; Function Attrs: optsize
declare i32 @_ZNK2vk10SurfaceKHR22getSurfaceFormatsCountEv(%"class.vk::SurfaceKHR"*) local_unnamed_addr #1

; Function Attrs: optsize
declare i32 @_ZNK2vk10SurfaceKHR17getSurfaceFormatsEPjP18VkSurfaceFormatKHR(%"class.vk::SurfaceKHR"*, i32*, %struct.VkSurfaceFormatKHR*) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @vkGetPhysicalDeviceSurfacePresentModesKHR(%struct.VkPhysicalDevice_T*, i64, i32*, i32*) local_unnamed_addr #0 {
  %5 = inttoptr i64 %1 to i8*
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([151 x i8], [151 x i8]* @.str.225, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 3985, %struct.VkPhysicalDevice_T* %0, i8* %5, i32* %2, i32* %3) #12
  %6 = icmp eq i32* %3, null
  %7 = inttoptr i64 %1 to %"class.vk::SurfaceKHR"*
  br i1 %6, label %8, label %10

8:                                                ; preds = %4
  %9 = tail call i32 @_ZNK2vk10SurfaceKHR19getPresentModeCountEv(%"class.vk::SurfaceKHR"* %7) #12
  store i32 %9, i32* %2, align 4
  br label %12

10:                                               ; preds = %4
  %11 = tail call i32 @_ZNK2vk10SurfaceKHR15getPresentModesEPjP16VkPresentModeKHR(%"class.vk::SurfaceKHR"* %7, i32* %2, i32* nonnull %3) #12
  br label %12

12:                                               ; preds = %10, %8
  %13 = phi i32 [ %11, %10 ], [ 0, %8 ]
  ret i32 %13
}

; Function Attrs: optsize
declare i32 @_ZNK2vk10SurfaceKHR19getPresentModeCountEv(%"class.vk::SurfaceKHR"*) local_unnamed_addr #1

; Function Attrs: optsize
declare i32 @_ZNK2vk10SurfaceKHR15getPresentModesEPjP16VkPresentModeKHR(%"class.vk::SurfaceKHR"*, i32*, i32*) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @vkCreateSwapchainKHR(%struct.VkDevice_T*, %struct.VkSwapchainCreateInfoKHR*, %struct.VkAllocationCallbacks*, %class.VkNonDispatchableHandle.22*) local_unnamed_addr #0 {
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([166 x i8], [166 x i8]* @.str.226, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 3999, %struct.VkDevice_T* %0, %struct.VkSwapchainCreateInfoKHR* %1, %struct.VkAllocationCallbacks* %2, %class.VkNonDispatchableHandle.22* %3) #12
  %5 = getelementptr inbounds %struct.VkSwapchainCreateInfoKHR, %struct.VkSwapchainCreateInfoKHR* %1, i64 0, i32 17
  %6 = bitcast %class.VkNonDispatchableHandle.22* %5 to i8**
  %7 = load i8*, i8** %6, align 8
  %8 = icmp eq i8* %7, null
  br i1 %8, label %11, label %9

9:                                                ; preds = %4
  %10 = bitcast i8* %7 to %"class.vk::SwapchainKHR"*
  tail call void @_ZN2vk12SwapchainKHR6retireEv(%"class.vk::SwapchainKHR"* nonnull %10) #12
  br label %11

11:                                               ; preds = %4, %9
  %12 = getelementptr inbounds %struct.VkSwapchainCreateInfoKHR, %struct.VkSwapchainCreateInfoKHR* %1, i64 0, i32 3, i32 0
  %13 = bitcast i64* %12 to %"class.vk::SurfaceKHR"**
  %14 = load %"class.vk::SurfaceKHR"*, %"class.vk::SurfaceKHR"** %13, align 8
  %15 = tail call zeroext i1 @_ZN2vk10SurfaceKHR22hasAssociatedSwapchainEv(%"class.vk::SurfaceKHR"* %14) #12
  br i1 %15, label %33, label %16

16:                                               ; preds = %11
  %17 = tail call i32 @_ZN2vk10ObjectBaseINS_12SwapchainKHRE23VkNonDispatchableHandleIP16VkSwapchainKHR_TEE6CreateI24VkSwapchainCreateInfoKHRJEEE8VkResultPK21VkAllocationCallbacksPKT_PS5_DpT0_(%struct.VkAllocationCallbacks* %2, %struct.VkSwapchainCreateInfoKHR* %1, %class.VkNonDispatchableHandle.22* %3) #16
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %33

19:                                               ; preds = %16
  %20 = bitcast %class.VkNonDispatchableHandle.22* %3 to %"class.vk::SwapchainKHR"**
  %21 = load %"class.vk::SwapchainKHR"*, %"class.vk::SwapchainKHR"** %20, align 8
  %22 = tail call i32 @_ZN2vk12SwapchainKHR12createImagesEP10VkDevice_TPK24VkSwapchainCreateInfoKHR(%"class.vk::SwapchainKHR"* %21, %struct.VkDevice_T* %0, %struct.VkSwapchainCreateInfoKHR* %1) #12
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %31, label %24

24:                                               ; preds = %19
  %25 = getelementptr inbounds %class.VkNonDispatchableHandle.22, %class.VkNonDispatchableHandle.22* %3, i64 0, i32 0
  %26 = load i64, i64* %25, align 8
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %33, label %28

28:                                               ; preds = %24
  %29 = inttoptr i64 %26 to %"class.vk::SwapchainKHR"*
  tail call void @_ZN2vk12SwapchainKHR7destroyEPK21VkAllocationCallbacks(%"class.vk::SwapchainKHR"* nonnull %29, %struct.VkAllocationCallbacks* %2) #12
  %30 = inttoptr i64 %26 to i8*
  tail call void @_ZN2vk10deallocateEPvPK21VkAllocationCallbacks(i8* %30, %struct.VkAllocationCallbacks* %2) #12
  br label %33

31:                                               ; preds = %19
  %32 = load %"class.vk::SurfaceKHR"*, %"class.vk::SurfaceKHR"** %13, align 8
  tail call void @_ZN2vk10SurfaceKHR18associateSwapchainEPNS_12SwapchainKHRE(%"class.vk::SurfaceKHR"* %32, %"class.vk::SwapchainKHR"* %21) #12
  br label %33

33:                                               ; preds = %28, %24, %16, %31, %11
  %34 = phi i32 [ -1000000001, %11 ], [ %17, %16 ], [ 0, %31 ], [ %22, %24 ], [ %22, %28 ]
  ret i32 %34
}

; Function Attrs: optsize
declare void @_ZN2vk12SwapchainKHR6retireEv(%"class.vk::SwapchainKHR"*) local_unnamed_addr #1

; Function Attrs: optsize
declare zeroext i1 @_ZN2vk10SurfaceKHR22hasAssociatedSwapchainEv(%"class.vk::SurfaceKHR"*) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden i32 @_ZN2vk10ObjectBaseINS_12SwapchainKHRE23VkNonDispatchableHandleIP16VkSwapchainKHR_TEE6CreateI24VkSwapchainCreateInfoKHRJEEE8VkResultPK21VkAllocationCallbacksPKT_PS5_DpT0_(%struct.VkAllocationCallbacks*, %struct.VkSwapchainCreateInfoKHR*, %class.VkNonDispatchableHandle.22*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.VkNonDispatchableHandle.22, %class.VkNonDispatchableHandle.22* %2, i64 0, i32 0
  store i64 0, i64* %4, align 8
  %5 = tail call i64 @_ZN2vk12SwapchainKHR29ComputeRequiredAllocationSizeEPK24VkSwapchainCreateInfoKHR(%struct.VkSwapchainCreateInfoKHR* %1) #12
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %3
  %8 = tail call i8* @_ZN2vk8allocateEmmPK21VkAllocationCallbacks23VkSystemAllocationScope(i64 %5, i64 16, %struct.VkAllocationCallbacks* %0, i32 1) #12
  %9 = icmp eq i8* %8, null
  br i1 %9, label %18, label %10

10:                                               ; preds = %7, %3
  %11 = phi i8* [ %8, %7 ], [ null, %3 ]
  %12 = tail call i8* @_ZN2vk8allocateEmmPK21VkAllocationCallbacks23VkSystemAllocationScope(i64 24, i64 8, %struct.VkAllocationCallbacks* %0, i32 1) #12
  %13 = icmp eq i8* %12, null
  br i1 %13, label %14, label %15

14:                                               ; preds = %10
  tail call void @_ZN2vk10deallocateEPvPK21VkAllocationCallbacks(i8* %11, %struct.VkAllocationCallbacks* %0) #12
  br label %18

15:                                               ; preds = %10
  %16 = bitcast i8* %12 to %"class.vk::SwapchainKHR"*
  tail call void @_ZN2vk12SwapchainKHRC1EPK24VkSwapchainCreateInfoKHRPv(%"class.vk::SwapchainKHR"* nonnull %16, %struct.VkSwapchainCreateInfoKHR* %1, i8* %11) #12
  %17 = ptrtoint i8* %12 to i64
  store i64 %17, i64* %4, align 8
  br label %18

18:                                               ; preds = %7, %14, %15
  %19 = phi i32 [ -1, %7 ], [ 0, %15 ], [ -1, %14 ]
  ret i32 %19
}

; Function Attrs: optsize
declare i32 @_ZN2vk12SwapchainKHR12createImagesEP10VkDevice_TPK24VkSwapchainCreateInfoKHR(%"class.vk::SwapchainKHR"*, %struct.VkDevice_T*, %struct.VkSwapchainCreateInfoKHR*) local_unnamed_addr #1

; Function Attrs: optsize
declare void @_ZN2vk10SurfaceKHR18associateSwapchainEPNS_12SwapchainKHRE(%"class.vk::SurfaceKHR"*, %"class.vk::SwapchainKHR"*) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @vkDestroySwapchainKHR(%struct.VkDevice_T*, i64, %struct.VkAllocationCallbacks*) local_unnamed_addr #0 {
  %4 = inttoptr i64 %1 to i8*
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([114 x i8], [114 x i8]* @.str.227, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 4035, %struct.VkDevice_T* %0, i8* %4, %struct.VkAllocationCallbacks* %2) #12
  %5 = icmp eq i64 %1, 0
  br i1 %5, label %8, label %6

6:                                                ; preds = %3
  %7 = inttoptr i64 %1 to %"class.vk::SwapchainKHR"*
  tail call void @_ZN2vk12SwapchainKHR7destroyEPK21VkAllocationCallbacks(%"class.vk::SwapchainKHR"* nonnull %7, %struct.VkAllocationCallbacks* %2) #12
  tail call void @_ZN2vk10deallocateEPvPK21VkAllocationCallbacks(i8* %4, %struct.VkAllocationCallbacks* %2) #12
  br label %8

8:                                                ; preds = %3, %6
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @vkGetSwapchainImagesKHR(%struct.VkDevice_T*, i64, i32*, %class.VkNonDispatchableHandle.0*) local_unnamed_addr #0 {
  %5 = inttoptr i64 %1 to i8*
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([137 x i8], [137 x i8]* @.str.228, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 4043, %struct.VkDevice_T* %0, i8* %5, i32* %2, %class.VkNonDispatchableHandle.0* %3) #12
  %6 = icmp eq %class.VkNonDispatchableHandle.0* %3, null
  %7 = inttoptr i64 %1 to %"class.vk::SwapchainKHR"*
  br i1 %6, label %8, label %10

8:                                                ; preds = %4
  %9 = tail call i32 @_ZNK2vk12SwapchainKHR13getImageCountEv(%"class.vk::SwapchainKHR"* %7) #12
  store i32 %9, i32* %2, align 4
  br label %12

10:                                               ; preds = %4
  %11 = tail call i32 @_ZNK2vk12SwapchainKHR9getImagesEPjP23VkNonDispatchableHandleIP9VkImage_TE(%"class.vk::SwapchainKHR"* %7, i32* %2, %class.VkNonDispatchableHandle.0* nonnull %3) #12
  br label %12

12:                                               ; preds = %10, %8
  %13 = phi i32 [ %11, %10 ], [ 0, %8 ]
  ret i32 %13
}

; Function Attrs: optsize
declare i32 @_ZNK2vk12SwapchainKHR13getImageCountEv(%"class.vk::SwapchainKHR"*) local_unnamed_addr #1

; Function Attrs: optsize
declare i32 @_ZNK2vk12SwapchainKHR9getImagesEPjP23VkNonDispatchableHandleIP9VkImage_TE(%"class.vk::SwapchainKHR"*, i32*, %class.VkNonDispatchableHandle.0*) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @vkAcquireNextImageKHR(%struct.VkDevice_T*, i64, i64, i64, i64, i32*) local_unnamed_addr #0 {
  %7 = inttoptr i64 %1 to i8*
  %8 = inttoptr i64 %3 to i8*
  %9 = inttoptr i64 %4 to i8*
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([168 x i8], [168 x i8]* @.str.229, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 4057, %struct.VkDevice_T* %0, i8* %7, i64 %2, i8* %8, i8* %9, i32* %5) #12
  %10 = inttoptr i64 %1 to %"class.vk::SwapchainKHR"*
  %11 = icmp eq i64 %3, 0
  br i1 %11, label %18, label %12

12:                                               ; preds = %6
  %13 = inttoptr i64 %3 to %"class.vk::Semaphore"*
  %14 = tail call i32 @_ZNK2vk9Semaphore16getSemaphoreTypeEv(%"class.vk::Semaphore"* nonnull %13) #12
  %15 = icmp eq i32 %14, 0
  %16 = inttoptr i64 %3 to %"class.vk::BinarySemaphore"*
  %17 = select i1 %15, %"class.vk::BinarySemaphore"* %16, %"class.vk::BinarySemaphore"* null
  br label %18

18:                                               ; preds = %6, %12
  %19 = phi %"class.vk::BinarySemaphore"* [ %17, %12 ], [ null, %6 ]
  %20 = inttoptr i64 %4 to %"class.vk::Fence"*
  %21 = tail call i32 @_ZN2vk12SwapchainKHR12getNextImageEmPNS_15BinarySemaphoreEPNS_5FenceEPj(%"class.vk::SwapchainKHR"* %10, i64 %2, %"class.vk::BinarySemaphore"* %19, %"class.vk::Fence"* %20, i32* %5) #12
  ret i32 %21
}

; Function Attrs: optsize
declare i32 @_ZN2vk12SwapchainKHR12getNextImageEmPNS_15BinarySemaphoreEPNS_5FenceEPj(%"class.vk::SwapchainKHR"*, i64, %"class.vk::BinarySemaphore"*, %"class.vk::Fence"*, i32*) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @vkQueuePresentKHR(%struct.VkQueue_T*, %struct.VkPresentInfoKHR*) local_unnamed_addr #0 {
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.230, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 4065, %struct.VkQueue_T* %0, %struct.VkPresentInfoKHR* %1) #12
  %3 = bitcast %struct.VkQueue_T* %0 to %"class.vk::Queue"*
  %4 = tail call i32 @_ZN2vk5Queue7presentEPK16VkPresentInfoKHR(%"class.vk::Queue"* %3, %struct.VkPresentInfoKHR* %1) #12
  ret i32 %4
}

; Function Attrs: optsize
declare i32 @_ZN2vk5Queue7presentEPK16VkPresentInfoKHR(%"class.vk::Queue"*, %struct.VkPresentInfoKHR*) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @vkAcquireNextImage2KHR(%struct.VkDevice_T*, %struct.VkAcquireNextImageInfoKHR*, i32*) local_unnamed_addr #0 {
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([116 x i8], [116 x i8]* @.str.231, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 4073, %struct.VkDevice_T* %0, %struct.VkAcquireNextImageInfoKHR* %1, i32* %2) #12
  %4 = getelementptr inbounds %struct.VkAcquireNextImageInfoKHR, %struct.VkAcquireNextImageInfoKHR* %1, i64 0, i32 2, i32 0
  %5 = bitcast i64* %4 to %"class.vk::SwapchainKHR"**
  %6 = load %"class.vk::SwapchainKHR"*, %"class.vk::SwapchainKHR"** %5, align 8
  %7 = getelementptr inbounds %struct.VkAcquireNextImageInfoKHR, %struct.VkAcquireNextImageInfoKHR* %1, i64 0, i32 3
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.VkAcquireNextImageInfoKHR, %struct.VkAcquireNextImageInfoKHR* %1, i64 0, i32 4, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %18, label %12

12:                                               ; preds = %3
  %13 = inttoptr i64 %10 to %"class.vk::Semaphore"*
  %14 = tail call i32 @_ZNK2vk9Semaphore16getSemaphoreTypeEv(%"class.vk::Semaphore"* nonnull %13) #12
  %15 = icmp eq i32 %14, 0
  %16 = inttoptr i64 %10 to %"class.vk::BinarySemaphore"*
  %17 = select i1 %15, %"class.vk::BinarySemaphore"* %16, %"class.vk::BinarySemaphore"* null
  br label %18

18:                                               ; preds = %3, %12
  %19 = phi %"class.vk::BinarySemaphore"* [ %17, %12 ], [ null, %3 ]
  %20 = getelementptr inbounds %struct.VkAcquireNextImageInfoKHR, %struct.VkAcquireNextImageInfoKHR* %1, i64 0, i32 5, i32 0
  %21 = bitcast i64* %20 to %"class.vk::Fence"**
  %22 = load %"class.vk::Fence"*, %"class.vk::Fence"** %21, align 8
  %23 = tail call i32 @_ZN2vk12SwapchainKHR12getNextImageEmPNS_15BinarySemaphoreEPNS_5FenceEPj(%"class.vk::SwapchainKHR"* %6, i64 %8, %"class.vk::BinarySemaphore"* %19, %"class.vk::Fence"* %22, i32* %2) #12
  ret i32 %23
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @vkGetDeviceGroupPresentCapabilitiesKHR(%struct.VkDevice_T*, %struct.VkDeviceGroupPresentCapabilitiesKHR*) local_unnamed_addr #0 {
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([112 x i8], [112 x i8]* @.str.232, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 4081, %struct.VkDevice_T* %0, %struct.VkDeviceGroupPresentCapabilitiesKHR* %1) #12
  br label %5

3:                                                ; preds = %5
  %4 = getelementptr inbounds %struct.VkDeviceGroupPresentCapabilitiesKHR, %struct.VkDeviceGroupPresentCapabilitiesKHR* %1, i64 0, i32 3
  store i32 1, i32* %4, align 8
  ret i32 0

5:                                                ; preds = %5, %2
  %6 = phi i64 [ 0, %2 ], [ %10, %5 ]
  %7 = icmp eq i64 %6, 0
  %8 = zext i1 %7 to i32
  %9 = getelementptr inbounds %struct.VkDeviceGroupPresentCapabilitiesKHR, %struct.VkDeviceGroupPresentCapabilitiesKHR* %1, i64 0, i32 2, i64 %6
  store i32 %8, i32* %9, align 4
  %10 = add nuw nsw i64 %6, 1
  %11 = icmp eq i64 %10, 32
  br i1 %11, label %3, label %5
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @vkGetDeviceGroupSurfacePresentModesKHR(%struct.VkDevice_T*, i64, i32*) local_unnamed_addr #0 {
  %4 = inttoptr i64 %1 to i8*
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([111 x i8], [111 x i8]* @.str.233, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 4098, %struct.VkDevice_T* %0, i8* %4, i32* %2) #12
  store i32 1, i32* %2, align 4
  ret i32 0
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @vkGetPhysicalDevicePresentRectanglesKHR(%struct.VkPhysicalDevice_T*, i64, i32*, %struct.VkRect2D*) local_unnamed_addr #0 {
  %5 = inttoptr i64 %1 to i8*
  tail call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([130 x i8], [130 x i8]* @.str.234, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 4107, %struct.VkPhysicalDevice_T* %0, i8* %5, i32* %2, %struct.VkRect2D* %3) #12
  %6 = inttoptr i64 %1 to %"class.vk::SurfaceKHR"*
  %7 = tail call i32 @_ZNK2vk10SurfaceKHR20getPresentRectanglesEPjP8VkRect2D(%"class.vk::SurfaceKHR"* %6, i32* %2, %struct.VkRect2D* %3) #12
  ret i32 %7
}

; Function Attrs: optsize
declare i32 @_ZNK2vk10SurfaceKHR20getPresentRectanglesEPjP8VkRect2D(%"class.vk::SurfaceKHR"*, i32*, %struct.VkRect2D*) local_unnamed_addr #1

; Function Attrs: optsize
declare %struct.LibX11exports* @_ZN6LibX1111loadExportsEv(%class.LibX11*) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #5

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #5

; Function Attrs: optsize
declare void @_ZN2rr7Nucleus19adjustDefaultConfigERKNS_6Config4EditE(%"class.rr::Config::Edit"* dereferenceable(32)) local_unnamed_addr #1

; Function Attrs: noreturn optsize
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #6

; Function Attrs: nobuiltin nofree optsize
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: nobuiltin nounwind optsize
declare void @_ZdlPv(i8*) local_unnamed_addr #8

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_4pairIN2rr6Config4Edit8ListEditENS2_12Optimization4PassEEENS_9allocatorIS8_EEEC2ERKSB_(%"class.std::__1::vector.861"*, %"class.std::__1::vector.861"* dereferenceable(24)) unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.std::__1::vector.861"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false) #13
  %4 = getelementptr inbounds %"class.std::__1::vector.861", %"class.std::__1::vector.861"* %1, i64 0, i32 0, i32 1
  %5 = bitcast %"struct.std::__1::pair"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector.861"* %1 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %31, label %11

11:                                               ; preds = %2
  %12 = ashr exact i64 %9, 3
  tail call void @_ZNSt3__16vectorINS_4pairIN2rr6Config4Edit8ListEditENS2_12Optimization4PassEEENS_9allocatorIS8_EEE11__vallocateEm(%"class.std::__1::vector.861"* %0, i64 %12) #16
  %13 = getelementptr inbounds %"class.std::__1::vector.861", %"class.std::__1::vector.861"* %1, i64 0, i32 0, i32 0
  %14 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %13, align 8
  %15 = load i64, i64* %5, align 8
  %16 = getelementptr inbounds %"class.std::__1::vector.861", %"class.std::__1::vector.861"* %0, i64 0, i32 0, i32 1
  %17 = bitcast %"struct.std::__1::pair"** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = ptrtoint %"struct.std::__1::pair"* %14 to i64
  %20 = sub i64 %15, %19
  %21 = icmp sgt i64 %20, 0
  br i1 %21, label %22, label %29

22:                                               ; preds = %11
  %23 = lshr exact i64 %20, 3
  %24 = inttoptr i64 %18 to i8*
  %25 = bitcast %"struct.std::__1::pair"* %14 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %24, i8* align 4 %25, i64 %20, i1 false) #13
  %26 = inttoptr i64 %18 to %"struct.std::__1::pair"*
  %27 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %26, i64 %23
  %28 = ptrtoint %"struct.std::__1::pair"* %27 to i64
  br label %29

29:                                               ; preds = %11, %22
  %30 = phi i64 [ %28, %22 ], [ %18, %11 ]
  store i64 %30, i64* %17, align 8
  br label %31

31:                                               ; preds = %2, %29
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_4pairIN2rr6Config4Edit8ListEditENS2_12Optimization4PassEEENS_9allocatorIS8_EEE11__vallocateEm(%"class.std::__1::vector.861"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ugt i64 %1, 2305843009213693951
  br i1 %3, label %4, label %6

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::vector.861"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %5) #17
  unreachable

6:                                                ; preds = %2
  %7 = shl i64 %1, 3
  %8 = tail call i8* @_Znwm(i64 %7) #14
  %9 = bitcast i8* %8 to %"struct.std::__1::pair"*
  %10 = getelementptr inbounds %"class.std::__1::vector.861", %"class.std::__1::vector.861"* %0, i64 0, i32 0, i32 1
  %11 = bitcast %"struct.std::__1::pair"** %10 to i8**
  store i8* %8, i8** %11, align 8
  %12 = bitcast %"class.std::__1::vector.861"* %0 to i8**
  store i8* %8, i8** %12, align 8
  %13 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %9, i64 %1
  %14 = getelementptr inbounds %"class.std::__1::vector.861", %"class.std::__1::vector.861"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"struct.std::__1::pair"* %13, %"struct.std::__1::pair"** %14, align 8
  ret void
}

; Function Attrs: optsize
declare void @_ZN2sw5CPUID15setEnableSSE4_1Eb(i1 zeroext) local_unnamed_addr #1

; Function Attrs: optsize
declare void @_ZN2sw5CPUID14setEnableSSSE3Eb(i1 zeroext) local_unnamed_addr #1

; Function Attrs: optsize
declare void @_ZN2sw5CPUID13setEnableSSE3Eb(i1 zeroext) local_unnamed_addr #1

; Function Attrs: optsize
declare void @_ZN2sw5CPUID13setEnableSSE2Eb(i1 zeroext) local_unnamed_addr #1

; Function Attrs: optsize
declare void @_ZN2sw5CPUID12setEnableSSEEb(i1 zeroext) local_unnamed_addr #1

; Function Attrs: nofree nounwind optsize readonly
declare i32 @strcmp(i8* nocapture, i8* nocapture) local_unnamed_addr #9

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define internal void @_ZZN12_GLOBAL__N_120getOrCreateSchedulerEvEN9SchedulerD2Ev(%struct.Scheduler* nocapture readonly) unnamed_addr #10 align 2 {
  %2 = getelementptr inbounds %struct.Scheduler, %struct.Scheduler* %0, i64 0, i32 1, i32 1
  %3 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %2, align 8
  %4 = icmp eq %"class.std::__1::__shared_weak_count"* %3, null
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %3) #12
  br label %6

6:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #5

; Function Attrs: optsize
declare i32 @_ZN4marl6Thread14numLogicalCPUsEv() local_unnamed_addr #1

; Function Attrs: nounwind optsize
declare void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"*) local_unnamed_addr #11

; Function Attrs: optsize
declare void @_ZNSt3__15mutex4lockEv(%"class.std::__1::mutex"*) local_unnamed_addr #1

; Function Attrs: nounwind optsize
declare %"class.std::__1::__shared_weak_count"* @_ZNSt3__119__shared_weak_count4lockEv(%"class.std::__1::__shared_weak_count"*) local_unnamed_addr #11

; Function Attrs: nounwind optsize ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFviEE11__call_implINS0_20__default_alloc_funcIZN12_GLOBAL__N_120getOrCreateSchedulerEvE3$_0S2_EEEEvPKNS0_16__policy_storageEi"(%"union.std::__1::__function::__policy_storage"* nocapture readnone, i32) #0 align 2 {
  tail call void @_ZN2sw5CPUID14setFlushToZeroEb(i1 zeroext true) #12
  tail call void @_ZN2sw5CPUID19setDenormalsAreZeroEb(i1 zeroext true) #12
  ret void
}

; Function Attrs: optsize
declare void @_ZN2sw5CPUID14setFlushToZeroEb(i1 zeroext) local_unnamed_addr #1

; Function Attrs: optsize
declare void @_ZN2sw5CPUID19setDenormalsAreZeroEb(i1 zeroext) local_unnamed_addr #1

; Function Attrs: optsize
declare void @_ZN4marl9SchedulerC1ERKNS0_6ConfigE(%"class.marl::Scheduler"*, %"struct.marl::Scheduler::Config"* dereferenceable(72)) unnamed_addr #1

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__120__shared_ptr_emplaceIN4marl9SchedulerENS_9allocatorIS2_EEED2Ev(%"struct.std::__1::__shared_ptr_emplace"*) unnamed_addr #10 comdat align 2 {
  %2 = getelementptr inbounds %"struct.std::__1::__shared_ptr_emplace", %"struct.std::__1::__shared_ptr_emplace"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVNSt3__120__shared_ptr_emplaceIN4marl9SchedulerENS_9allocatorIS2_EEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"struct.std::__1::__shared_ptr_emplace", %"struct.std::__1::__shared_ptr_emplace"* %0, i64 0, i32 0
  tail call void @_ZNSt3__119__shared_weak_countD2Ev(%"class.std::__1::__shared_weak_count"* %3) #12
  ret void
}

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__120__shared_ptr_emplaceIN4marl9SchedulerENS_9allocatorIS2_EEED0Ev(%"struct.std::__1::__shared_ptr_emplace"*) unnamed_addr #10 comdat align 2 {
  %2 = getelementptr inbounds %"struct.std::__1::__shared_ptr_emplace", %"struct.std::__1::__shared_ptr_emplace"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVNSt3__120__shared_ptr_emplaceIN4marl9SchedulerENS_9allocatorIS2_EEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"struct.std::__1::__shared_ptr_emplace", %"struct.std::__1::__shared_ptr_emplace"* %0, i64 0, i32 0
  tail call void @_ZNSt3__119__shared_weak_countD2Ev(%"class.std::__1::__shared_weak_count"* %3) #12
  %4 = bitcast %"struct.std::__1::__shared_ptr_emplace"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #14
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__120__shared_ptr_emplaceIN4marl9SchedulerENS_9allocatorIS2_EEE16__on_zero_sharedEv(%"struct.std::__1::__shared_ptr_emplace"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"struct.std::__1::__shared_ptr_emplace", %"struct.std::__1::__shared_ptr_emplace"* %0, i64 0, i32 1
  %3 = bitcast %"struct.std::__1::__shared_ptr_emplace<marl::Scheduler, std::__1::allocator<marl::Scheduler> >::_Storage"* %2 to %"class.marl::Scheduler"*
  tail call void @_ZN4marl9SchedulerD1Ev(%"class.marl::Scheduler"* %3) #12
  ret void
}

; Function Attrs: nounwind optsize
declare i8* @_ZNKSt3__119__shared_weak_count13__get_deleterERKSt9type_info(%"class.std::__1::__shared_weak_count"*, %"class.std::type_info"* dereferenceable(16)) unnamed_addr #11

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__120__shared_ptr_emplaceIN4marl9SchedulerENS_9allocatorIS2_EEE21__on_zero_shared_weakEv(%"struct.std::__1::__shared_ptr_emplace"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"struct.std::__1::__shared_ptr_emplace"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #14
  ret void
}

; Function Attrs: nounwind optsize
declare void @_ZN4marl9SchedulerD1Ev(%"class.marl::Scheduler"*) unnamed_addr #11

; Function Attrs: nounwind optsize
declare void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"*) local_unnamed_addr #11

; Function Attrs: nounwind optsize
declare void @_ZNSt3__118condition_variable10notify_allEv(%"class.std::__1::condition_variable"*) local_unnamed_addr #11

; Function Attrs: optsize
declare i64 @_ZN2vk19DebugUtilsMessenger29ComputeRequiredAllocationSizeEPK34VkDebugUtilsMessengerCreateInfoEXT(%struct.VkDebugUtilsMessengerCreateInfoEXT*) local_unnamed_addr #1

; Function Attrs: optsize
declare i8* @_ZN2vk8allocateEmmPK21VkAllocationCallbacks23VkSystemAllocationScope(i64, i64, %struct.VkAllocationCallbacks*, i32) local_unnamed_addr #1

; Function Attrs: optsize
declare void @_ZN2vk10deallocateEPvPK21VkAllocationCallbacks(i8*, %struct.VkAllocationCallbacks*) local_unnamed_addr #1

; Function Attrs: optsize
declare void @_ZN2vk19DebugUtilsMessengerC1EPK34VkDebugUtilsMessengerCreateInfoEXTPv(%"class.vk::DebugUtilsMessenger"*, %struct.VkDebugUtilsMessengerCreateInfoEXT*, i8*) unnamed_addr #1

; Function Attrs: optsize
declare void @_ZN2vk14PhysicalDeviceC1EPKvPv(%"class.vk::PhysicalDevice"*, i8*, i8*) unnamed_addr #1

; Function Attrs: optsize
declare void @_ZN2vk19DebugUtilsMessenger7destroyEPK21VkAllocationCallbacks(%"class.vk::DebugUtilsMessenger"*, %struct.VkAllocationCallbacks*) local_unnamed_addr #1

; Function Attrs: optsize
declare void @_ZN2vk8InstanceC1EPK20VkInstanceCreateInfoPvP18VkPhysicalDevice_TPNS_19DebugUtilsMessengerE(%"class.vk::Instance"*, %struct.VkInstanceCreateInfo*, i8*, %struct.VkPhysicalDevice_T*, %"class.vk::DebugUtilsMessenger"*) unnamed_addr #1

; Function Attrs: optsize
declare void @_ZN2vk8Instance7destroyEPK21VkAllocationCallbacks(%"class.vk::Instance"*, %struct.VkAllocationCallbacks*) local_unnamed_addr #1

; Function Attrs: optsize
declare i64 @_ZN2vk6Device29ComputeRequiredAllocationSizeEPK18VkDeviceCreateInfo(%struct.VkDeviceCreateInfo*) local_unnamed_addr #1

; Function Attrs: optsize
declare void @_ZN2vk6DeviceC1EPK18VkDeviceCreateInfoPvPNS_14PhysicalDeviceEPK24VkPhysicalDeviceFeaturesRKNSt3__110shared_ptrIN4marl9SchedulerEEE(%"class.vk::Device"*, %struct.VkDeviceCreateInfo*, i8*, %"class.vk::PhysicalDevice"*, %struct.VkPhysicalDeviceFeatures*, %"class.std::__1::shared_ptr.189"* dereferenceable(16)) unnamed_addr #1

; Function Attrs: optsize
declare void @_ZN2vk6Device7destroyEPK21VkAllocationCallbacks(%"class.vk::Device"*, %struct.VkAllocationCallbacks*) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIPN2vk9ImageViewENS_4hashIS3_EENS_8equal_toIS3_EENS_9allocatorIS3_EEED2Ev(%"class.std::__1::__hash_table.380"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.std::__1::__hash_table.380", %"class.std::__1::__hash_table.380"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"struct.std::__1::__hash_node_base.384"*, %"struct.std::__1::__hash_node_base.384"** %2, align 8
  %4 = icmp eq %"struct.std::__1::__hash_node_base.384"* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1, %5
  %6 = phi %"struct.std::__1::__hash_node_base.384"* [ %8, %5 ], [ %3, %1 ]
  %7 = getelementptr inbounds %"struct.std::__1::__hash_node_base.384", %"struct.std::__1::__hash_node_base.384"* %6, i64 0, i32 0
  %8 = load %"struct.std::__1::__hash_node_base.384"*, %"struct.std::__1::__hash_node_base.384"** %7, align 8
  %9 = bitcast %"struct.std::__1::__hash_node_base.384"* %6 to i8*
  tail call void @_ZdlPv(i8* %9) #14
  %10 = icmp eq %"struct.std::__1::__hash_node_base.384"* %8, null
  br i1 %10, label %11, label %5

11:                                               ; preds = %5, %1
  %12 = getelementptr inbounds %"class.std::__1::__hash_table.380", %"class.std::__1::__hash_table.380"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"struct.std::__1::__hash_node_base.384"**, %"struct.std::__1::__hash_node_base.384"*** %12, align 8
  store %"struct.std::__1::__hash_node_base.384"** null, %"struct.std::__1::__hash_node_base.384"*** %12, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.384"** %13, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %11
  %16 = bitcast %"struct.std::__1::__hash_node_base.384"** %13 to i8*
  tail call void @_ZdlPv(i8* %16) #14
  br label %17

17:                                               ; preds = %11, %15
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__110unique_ptrIN2vk6Device14SamplerIndexerENS_14default_deleteIS3_EEE5resetEPS3_(%"class.std::__1::unique_ptr.364"*, %"class.vk::Device::SamplerIndexer"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::unique_ptr.364", %"class.std::__1::unique_ptr.364"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.vk::Device::SamplerIndexer"*, %"class.vk::Device::SamplerIndexer"** %3, align 8
  store %"class.vk::Device::SamplerIndexer"* %1, %"class.vk::Device::SamplerIndexer"** %3, align 8
  %5 = icmp eq %"class.vk::Device::SamplerIndexer"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %2
  tail call void @_ZN2vk6Device14SamplerIndexerD1Ev(%"class.vk::Device::SamplerIndexer"* nonnull %4) #12
  %7 = bitcast %"class.vk::Device::SamplerIndexer"* %4 to i8*
  tail call void @_ZdlPv(i8* %7) #14
  br label %8

8:                                                ; preds = %2, %6
  ret void
}

; Function Attrs: nounwind optsize
declare void @_ZN2vk6Device14SamplerIndexerD1Ev(%"class.vk::Device::SamplerIndexer"*) unnamed_addr #11

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__110unique_ptrIN2vk6Device20SamplingRoutineCacheENS_14default_deleteIS3_EEE5resetEPS3_(%"class.std::__1::unique_ptr.303"*, %"class.vk::Device::SamplingRoutineCache"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::unique_ptr.303", %"class.std::__1::unique_ptr.303"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.vk::Device::SamplingRoutineCache"*, %"class.vk::Device::SamplingRoutineCache"** %3, align 8
  store %"class.vk::Device::SamplingRoutineCache"* %1, %"class.vk::Device::SamplingRoutineCache"** %3, align 8
  %5 = icmp eq %"class.vk::Device::SamplingRoutineCache"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.vk::Device::SamplingRoutineCache", %"class.vk::Device::SamplingRoutineCache"* %4, i64 0, i32 4, i32 1, i32 0
  tail call void @_ZNSt3__112__hash_tableIPKN2sw8LRUCacheIN2vk6Device20SamplingRoutineCache3KeyENS_10shared_ptrIN2rr7RoutineEEENS6_4HashEE5KeyedENSC_15KeyedComparatorESG_NS_9allocatorISF_EEED2Ev(%"class.std::__1::__hash_table.341"* %7) #12
  %8 = getelementptr inbounds %"class.vk::Device::SamplingRoutineCache", %"class.vk::Device::SamplingRoutineCache"* %4, i64 0, i32 4, i32 0, i32 0
  tail call void @_ZNSt3__113__vector_baseIN2sw8LRUCacheIN2vk6Device20SamplingRoutineCache3KeyENS_10shared_ptrIN2rr7RoutineEEENS6_4HashEE5EntryENS_9allocatorISD_EEED2Ev(%"class.std::__1::__vector_base.334"* %8) #12
  %9 = getelementptr inbounds %"class.vk::Device::SamplingRoutineCache", %"class.vk::Device::SamplingRoutineCache"* %4, i64 0, i32 2, i32 0
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2vk6Device20SamplingRoutineCache3KeyENS_10shared_ptrIN2rr7RoutineEEEEENS_22__unordered_map_hasherIS5_SA_NS5_4HashENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SA_SE_SC_Lb1EEENS_9allocatorISA_EEED2Ev(%"class.std::__1::__hash_table.307"* %9) #12
  %10 = getelementptr inbounds %"class.vk::Device::SamplingRoutineCache", %"class.vk::Device::SamplingRoutineCache"* %4, i64 0, i32 0
  tail call void @_ZdlPv(i8* %10) #14
  br label %11

11:                                               ; preds = %2, %6
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIPKN2sw8LRUCacheIN2vk6Device20SamplingRoutineCache3KeyENS_10shared_ptrIN2rr7RoutineEEENS6_4HashEE5KeyedENSC_15KeyedComparatorESG_NS_9allocatorISF_EEED2Ev(%"class.std::__1::__hash_table.341"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.std::__1::__hash_table.341", %"class.std::__1::__hash_table.341"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"struct.std::__1::__hash_node_base.345"*, %"struct.std::__1::__hash_node_base.345"** %2, align 8
  %4 = icmp eq %"struct.std::__1::__hash_node_base.345"* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1, %5
  %6 = phi %"struct.std::__1::__hash_node_base.345"* [ %8, %5 ], [ %3, %1 ]
  %7 = getelementptr inbounds %"struct.std::__1::__hash_node_base.345", %"struct.std::__1::__hash_node_base.345"* %6, i64 0, i32 0
  %8 = load %"struct.std::__1::__hash_node_base.345"*, %"struct.std::__1::__hash_node_base.345"** %7, align 8
  %9 = bitcast %"struct.std::__1::__hash_node_base.345"* %6 to i8*
  tail call void @_ZdlPv(i8* %9) #14
  %10 = icmp eq %"struct.std::__1::__hash_node_base.345"* %8, null
  br i1 %10, label %11, label %5

11:                                               ; preds = %5, %1
  %12 = getelementptr inbounds %"class.std::__1::__hash_table.341", %"class.std::__1::__hash_table.341"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"struct.std::__1::__hash_node_base.345"**, %"struct.std::__1::__hash_node_base.345"*** %12, align 8
  store %"struct.std::__1::__hash_node_base.345"** null, %"struct.std::__1::__hash_node_base.345"*** %12, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.345"** %13, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %11
  %16 = bitcast %"struct.std::__1::__hash_node_base.345"** %13 to i8*
  tail call void @_ZdlPv(i8* %16) #14
  br label %17

17:                                               ; preds = %11, %15
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__113__vector_baseIN2sw8LRUCacheIN2vk6Device20SamplingRoutineCache3KeyENS_10shared_ptrIN2rr7RoutineEEENS6_4HashEE5EntryENS_9allocatorISD_EEED2Ev(%"class.std::__1::__vector_base.334"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.std::__1::__vector_base.334", %"class.std::__1::__vector_base.334"* %0, i64 0, i32 0
  %3 = load %"struct.sw::LRUCache<vk::Device::SamplingRoutineCache::Key, std::__1::shared_ptr<rr::Routine>, vk::Device::SamplingRoutineCache::Key::Hash>::Entry"*, %"struct.sw::LRUCache<vk::Device::SamplingRoutineCache::Key, std::__1::shared_ptr<rr::Routine>, vk::Device::SamplingRoutineCache::Key::Hash>::Entry"** %2, align 8
  %4 = icmp eq %"struct.sw::LRUCache<vk::Device::SamplingRoutineCache::Key, std::__1::shared_ptr<rr::Routine>, vk::Device::SamplingRoutineCache::Key::Hash>::Entry"* %3, null
  br i1 %4, label %20, label %5

5:                                                ; preds = %1
  %6 = bitcast %"struct.sw::LRUCache<vk::Device::SamplingRoutineCache::Key, std::__1::shared_ptr<rr::Routine>, vk::Device::SamplingRoutineCache::Key::Hash>::Entry"* %3 to i8*
  %7 = getelementptr inbounds %"class.std::__1::__vector_base.334", %"class.std::__1::__vector_base.334"* %0, i64 0, i32 1
  %8 = load %"struct.sw::LRUCache<vk::Device::SamplingRoutineCache::Key, std::__1::shared_ptr<rr::Routine>, vk::Device::SamplingRoutineCache::Key::Hash>::Entry"*, %"struct.sw::LRUCache<vk::Device::SamplingRoutineCache::Key, std::__1::shared_ptr<rr::Routine>, vk::Device::SamplingRoutineCache::Key::Hash>::Entry"** %7, align 8
  %9 = icmp eq %"struct.sw::LRUCache<vk::Device::SamplingRoutineCache::Key, std::__1::shared_ptr<rr::Routine>, vk::Device::SamplingRoutineCache::Key::Hash>::Entry"* %8, %3
  br i1 %9, label %18, label %10

10:                                               ; preds = %5, %10
  %11 = phi %"struct.sw::LRUCache<vk::Device::SamplingRoutineCache::Key, std::__1::shared_ptr<rr::Routine>, vk::Device::SamplingRoutineCache::Key::Hash>::Entry"* [ %12, %10 ], [ %8, %5 ]
  %12 = getelementptr inbounds %"struct.sw::LRUCache<vk::Device::SamplingRoutineCache::Key, std::__1::shared_ptr<rr::Routine>, vk::Device::SamplingRoutineCache::Key::Hash>::Entry", %"struct.sw::LRUCache<vk::Device::SamplingRoutineCache::Key, std::__1::shared_ptr<rr::Routine>, vk::Device::SamplingRoutineCache::Key::Hash>::Entry"* %11, i64 -1
  %13 = getelementptr inbounds %"struct.sw::LRUCache<vk::Device::SamplingRoutineCache::Key, std::__1::shared_ptr<rr::Routine>, vk::Device::SamplingRoutineCache::Key::Hash>::Entry", %"struct.sw::LRUCache<vk::Device::SamplingRoutineCache::Key, std::__1::shared_ptr<rr::Routine>, vk::Device::SamplingRoutineCache::Key::Hash>::Entry"* %11, i64 -1, i32 1
  tail call void @_ZNSt3__110shared_ptrIN2rr7RoutineEED2Ev(%"class.std::__1::shared_ptr.98"* %13) #12
  %14 = icmp eq %"struct.sw::LRUCache<vk::Device::SamplingRoutineCache::Key, std::__1::shared_ptr<rr::Routine>, vk::Device::SamplingRoutineCache::Key::Hash>::Entry"* %12, %3
  br i1 %14, label %15, label %10

15:                                               ; preds = %10
  %16 = bitcast %"class.std::__1::__vector_base.334"* %0 to i8**
  %17 = load i8*, i8** %16, align 8
  br label %18

18:                                               ; preds = %5, %15
  %19 = phi i8* [ %17, %15 ], [ %6, %5 ]
  store %"struct.sw::LRUCache<vk::Device::SamplingRoutineCache::Key, std::__1::shared_ptr<rr::Routine>, vk::Device::SamplingRoutineCache::Key::Hash>::Entry"* %3, %"struct.sw::LRUCache<vk::Device::SamplingRoutineCache::Key, std::__1::shared_ptr<rr::Routine>, vk::Device::SamplingRoutineCache::Key::Hash>::Entry"** %7, align 8
  tail call void @_ZdlPv(i8* %19) #14
  br label %20

20:                                               ; preds = %1, %18
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__110shared_ptrIN2rr7RoutineEED2Ev(%"class.std::__1::shared_ptr.98"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.std::__1::shared_ptr.98", %"class.std::__1::shared_ptr.98"* %0, i64 0, i32 1
  %3 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %2, align 8
  %4 = icmp eq %"class.std::__1::__shared_weak_count"* %3, null
  br i1 %4, label %15, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %3, i64 0, i32 0, i32 1
  %7 = atomicrmw add i64* %6, i64 -1 acq_rel
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %9, label %15

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %3, i64 0, i32 0
  %11 = bitcast %"class.std::__1::__shared_weak_count"* %3 to void (%"class.std::__1::__shared_count"*)***
  %12 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %12, i64 2
  %14 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %13, align 8
  tail call void %14(%"class.std::__1::__shared_count"* %10) #12
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %3) #12
  br label %15

15:                                               ; preds = %9, %5, %1
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2vk6Device20SamplingRoutineCache3KeyENS_10shared_ptrIN2rr7RoutineEEEEENS_22__unordered_map_hasherIS5_SA_NS5_4HashENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SA_SE_SC_Lb1EEENS_9allocatorISA_EEED2Ev(%"class.std::__1::__hash_table.307"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.std::__1::__hash_table.307", %"class.std::__1::__hash_table.307"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"struct.std::__1::__hash_node_base.311"*, %"struct.std::__1::__hash_node_base.311"** %2, align 8
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2vk6Device20SamplingRoutineCache3KeyENS_10shared_ptrIN2rr7RoutineEEEEENS_22__unordered_map_hasherIS5_SA_NS5_4HashENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SA_SE_SC_Lb1EEENS_9allocatorISA_EEE17__deallocate_nodeEPNS_16__hash_node_baseIPNS_11__hash_nodeISA_PvEEEE(%"class.std::__1::__hash_table.307"* %0, %"struct.std::__1::__hash_node_base.311"* %3) #12
  %4 = getelementptr inbounds %"class.std::__1::__hash_table.307", %"class.std::__1::__hash_table.307"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"struct.std::__1::__hash_node_base.311"**, %"struct.std::__1::__hash_node_base.311"*** %4, align 8
  store %"struct.std::__1::__hash_node_base.311"** null, %"struct.std::__1::__hash_node_base.311"*** %4, align 8
  %6 = icmp eq %"struct.std::__1::__hash_node_base.311"** %5, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %1
  %8 = bitcast %"struct.std::__1::__hash_node_base.311"** %5 to i8*
  tail call void @_ZdlPv(i8* %8) #14
  br label %9

9:                                                ; preds = %1, %7
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2vk6Device20SamplingRoutineCache3KeyENS_10shared_ptrIN2rr7RoutineEEEEENS_22__unordered_map_hasherIS5_SA_NS5_4HashENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SA_SE_SC_Lb1EEENS_9allocatorISA_EEE17__deallocate_nodeEPNS_16__hash_node_baseIPNS_11__hash_nodeISA_PvEEEE(%"class.std::__1::__hash_table.307"*, %"struct.std::__1::__hash_node_base.311"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"struct.std::__1::__hash_node_base.311"* %1, null
  br i1 %3, label %12, label %4

4:                                                ; preds = %2, %4
  %5 = phi %"struct.std::__1::__hash_node_base.311"* [ %7, %4 ], [ %1, %2 ]
  %6 = getelementptr inbounds %"struct.std::__1::__hash_node_base.311", %"struct.std::__1::__hash_node_base.311"* %5, i64 0, i32 0
  %7 = load %"struct.std::__1::__hash_node_base.311"*, %"struct.std::__1::__hash_node_base.311"** %6, align 8
  %8 = getelementptr inbounds %"struct.std::__1::__hash_node_base.311", %"struct.std::__1::__hash_node_base.311"* %5, i64 4
  %9 = bitcast %"struct.std::__1::__hash_node_base.311"* %8 to %"class.std::__1::shared_ptr.98"*
  tail call void @_ZNSt3__110shared_ptrIN2rr7RoutineEED2Ev(%"class.std::__1::shared_ptr.98"* %9) #12
  %10 = bitcast %"struct.std::__1::__hash_node_base.311"* %5 to i8*
  tail call void @_ZdlPv(i8* %10) #14
  %11 = icmp eq %"struct.std::__1::__hash_node_base.311"* %7, null
  br i1 %11, label %12, label %4

12:                                               ; preds = %4, %2
  ret void
}

; Function Attrs: optsize
declare i64 @_ZN2vk12DeviceMemory29ComputeRequiredAllocationSizeEPK20VkMemoryAllocateInfo(%struct.VkMemoryAllocateInfo*) local_unnamed_addr #1

; Function Attrs: optsize
declare void @_ZN2vk12DeviceMemoryC1EPK20VkMemoryAllocateInfoPvPNS_6DeviceE(%"class.vk::DeviceMemory"*, %struct.VkMemoryAllocateInfo*, i8*, %"class.vk::Device"*) unnamed_addr #1

; Function Attrs: optsize
declare void @_ZN2vk12DeviceMemory7destroyEPK21VkAllocationCallbacks(%"class.vk::DeviceMemory"*, %struct.VkAllocationCallbacks*) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN2sw12CountedEventC2Eb(%"class.sw::CountedEvent"*, i1 zeroext) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.marl::Allocation::Request", align 16
  %4 = alloca %"struct.marl::Allocation", align 8
  %5 = load i64, i64* bitcast (%"class.marl::Allocator"** @_ZN4marl9Allocator7DefaultE to i64*), align 8
  %6 = tail call i8* @_Znwm(i64 216) #14
  %7 = bitcast i8* %6 to i32 (...)***
  %8 = getelementptr inbounds i8, i8* %6, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 16, i1 false) #13
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVNSt3__120__shared_ptr_emplaceIN4marl9WaitGroup4DataENS_9allocatorIS3_EEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %9 = getelementptr inbounds i8, i8* %6, i64 24
  %10 = bitcast i8* %9 to i32*
  store i32 0, i32* %10, align 4
  %11 = getelementptr inbounds i8, i8* %6, i64 32
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 40, i1 false) #13
  %12 = getelementptr inbounds i8, i8* %6, i64 72
  %13 = bitcast i8* %12 to i64*
  store i64 %5, i64* %13, align 8
  %14 = getelementptr inbounds i8, i8* %6, i64 80
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 136, i1 false) #13
  %15 = bitcast %"class.sw::CountedEvent"* %0 to i8**
  store i8* %9, i8** %15, align 8
  %16 = getelementptr inbounds %"class.sw::CountedEvent", %"class.sw::CountedEvent"* %0, i64 0, i32 0, i32 0, i32 1
  %17 = bitcast %"class.std::__1::__shared_weak_count"** %16 to i8**
  store i8* %6, i8** %17, align 8
  store atomic i32 0, i32* %10 seq_cst, align 4
  %18 = load %"class.marl::Allocator"*, %"class.marl::Allocator"** @_ZN4marl9Allocator7DefaultE, align 8
  %19 = zext i1 %1 to i8
  %20 = ptrtoint %"class.marl::Allocator"* %18 to i64
  %21 = bitcast %"struct.marl::Allocation::Request"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %21, i8 -86, i64 24, i1 false) #13
  %22 = getelementptr inbounds %"struct.marl::Allocation::Request", %"struct.marl::Allocation::Request"* %3, i64 0, i32 2
  %23 = bitcast i8* %22 to i16*
  store i16 512, i16* %23, align 16
  %24 = bitcast %"struct.marl::Allocation::Request"* %3 to <2 x i64>*
  store <2 x i64> <i64 272, i64 8>, <2 x i64>* %24, align 16
  %25 = bitcast %"struct.marl::Allocation"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %25) #13
  %26 = bitcast %"class.marl::Allocator"* %18 to void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)***
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 -86, i64 32, i1 false) #13
  %27 = load void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)**, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*** %26, align 8
  %28 = getelementptr inbounds void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)** %27, i64 2
  %29 = load void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)*, void (%"struct.marl::Allocation"*, %"class.marl::Allocator"*, %"struct.marl::Allocation::Request"*)** %28, align 8
  call void %29(%"struct.marl::Allocation"* nonnull sret %4, %"class.marl::Allocator"* %18, %"struct.marl::Allocation::Request"* nonnull dereferenceable(24) %3) #12
  %30 = bitcast %"struct.marl::Allocation"* %4 to %"struct.marl::Event::Shared"**
  %31 = load %"struct.marl::Event::Shared"*, %"struct.marl::Event::Shared"** %30, align 8
  %32 = getelementptr inbounds %"struct.marl::Event::Shared", %"struct.marl::Event::Shared"* %31, i64 0, i32 1, i32 1, i32 0
  %33 = bitcast %"struct.marl::Event::Shared"* %31 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %33, i8 0, i64 80, i1 false) #13
  %34 = bitcast %"class.marl::Allocator"** %32 to i64*
  store i64 %20, i64* %34, align 8
  %35 = getelementptr inbounds %"struct.marl::Event::Shared", %"struct.marl::Event::Shared"* %31, i64 0, i32 1, i32 1, i32 1
  %36 = bitcast i64* %35 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %36, i8 0, i64 96, i1 false) #13
  %37 = getelementptr inbounds %"struct.marl::Event::Shared", %"struct.marl::Event::Shared"* %31, i64 0, i32 2
  %38 = load i64, i64* bitcast (%"class.marl::Allocator"** @_ZN4marl9Allocator7DefaultE to i64*), align 8
  %39 = bitcast %"class.marl::containers::vector"* %37 to i64*
  store i64 %38, i64* %39, align 8
  %40 = getelementptr inbounds %"struct.marl::Event::Shared", %"struct.marl::Event::Shared"* %31, i64 0, i32 2, i32 1
  %41 = bitcast i64* %40 to <2 x i64>*
  store <2 x i64> <i64 0, i64 1>, <2 x i64>* %41, align 8
  %42 = getelementptr inbounds %"struct.marl::Event::Shared", %"struct.marl::Event::Shared"* %31, i64 0, i32 2, i32 4
  %43 = getelementptr inbounds %"struct.marl::Event::Shared", %"struct.marl::Event::Shared"* %31, i64 0, i32 2, i32 3, i64 0
  store %"struct.marl::aligned_storage<16, 8>::type"* %43, %"struct.marl::aligned_storage<16, 8>::type"** %42, align 8
  %44 = getelementptr inbounds %"struct.marl::Event::Shared", %"struct.marl::Event::Shared"* %31, i64 0, i32 2, i32 5
  %45 = bitcast %"struct.marl::Allocation"* %44 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %45, i8 0, i64 26, i1 false) #13
  %46 = getelementptr inbounds %"struct.marl::Event::Shared", %"struct.marl::Event::Shared"* %31, i64 0, i32 3
  store i8 1, i8* %46, align 8
  %47 = getelementptr inbounds %"struct.marl::Event::Shared", %"struct.marl::Event::Shared"* %31, i64 0, i32 4
  store i8 %19, i8* %47, align 1
  %48 = call i8* @_Znwm(i64 48) #14
  %49 = ptrtoint %"struct.marl::Event::Shared"* %31 to i64
  %50 = bitcast i8* %48 to i32 (...)***
  %51 = getelementptr inbounds i8, i8* %48, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %51, i8 0, i64 16, i1 false) #13
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVNSt3__120__shared_ptr_pointerIPN4marl5Event6SharedENS1_9Allocator7DeleterENS_9allocatorIS3_EEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %50, align 8
  %52 = getelementptr inbounds i8, i8* %48, i64 24
  %53 = bitcast i8* %52 to i64*
  store i64 %49, i64* %53, align 8
  %54 = getelementptr inbounds i8, i8* %48, i64 32
  %55 = bitcast i8* %54 to %"class.marl::Allocator"**
  store %"class.marl::Allocator"* %18, %"class.marl::Allocator"** %55, align 8
  %56 = getelementptr inbounds i8, i8* %48, i64 40
  %57 = bitcast i8* %56 to i64*
  store i64 1, i64* %57, align 8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %25) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #13
  %58 = getelementptr inbounds %"class.sw::CountedEvent", %"class.sw::CountedEvent"* %0, i64 0, i32 1, i32 0, i32 0
  store %"struct.marl::Event::Shared"* %31, %"struct.marl::Event::Shared"** %58, align 8
  %59 = getelementptr inbounds %"class.sw::CountedEvent", %"class.sw::CountedEvent"* %0, i64 0, i32 1, i32 0, i32 1
  %60 = bitcast %"class.std::__1::__shared_weak_count"** %59 to i8**
  store i8* %48, i8** %60, align 8
  ret void
}

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__120__shared_ptr_emplaceIN2sw12CountedEventENS_9allocatorIS2_EEED2Ev(%"struct.std::__1::__shared_ptr_emplace.893"*) unnamed_addr #10 comdat align 2 {
  %2 = getelementptr inbounds %"struct.std::__1::__shared_ptr_emplace.893", %"struct.std::__1::__shared_ptr_emplace.893"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVNSt3__120__shared_ptr_emplaceIN2sw12CountedEventENS_9allocatorIS2_EEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"struct.std::__1::__shared_ptr_emplace.893", %"struct.std::__1::__shared_ptr_emplace.893"* %0, i64 0, i32 0
  tail call void @_ZNSt3__119__shared_weak_countD2Ev(%"class.std::__1::__shared_weak_count"* %3) #12
  ret void
}

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__120__shared_ptr_emplaceIN2sw12CountedEventENS_9allocatorIS2_EEED0Ev(%"struct.std::__1::__shared_ptr_emplace.893"*) unnamed_addr #10 comdat align 2 {
  %2 = getelementptr inbounds %"struct.std::__1::__shared_ptr_emplace.893", %"struct.std::__1::__shared_ptr_emplace.893"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVNSt3__120__shared_ptr_emplaceIN2sw12CountedEventENS_9allocatorIS2_EEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"struct.std::__1::__shared_ptr_emplace.893", %"struct.std::__1::__shared_ptr_emplace.893"* %0, i64 0, i32 0
  tail call void @_ZNSt3__119__shared_weak_countD2Ev(%"class.std::__1::__shared_weak_count"* %3) #12
  %4 = bitcast %"struct.std::__1::__shared_ptr_emplace.893"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #14
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__120__shared_ptr_emplaceIN2sw12CountedEventENS_9allocatorIS2_EEE16__on_zero_sharedEv(%"struct.std::__1::__shared_ptr_emplace.893"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"struct.std::__1::__shared_ptr_emplace.893", %"struct.std::__1::__shared_ptr_emplace.893"* %0, i64 0, i32 1
  %3 = getelementptr inbounds %"struct.std::__1::__shared_ptr_emplace.893", %"struct.std::__1::__shared_ptr_emplace.893"* %0, i64 0, i32 1, i32 0, i64 16
  %4 = bitcast i8* %3 to %"class.std::__1::shared_ptr.49"*
  tail call void @_ZNSt3__110shared_ptrIN4marl5Event6SharedEED2Ev(%"class.std::__1::shared_ptr.49"* %4) #12
  %5 = bitcast %"struct.std::__1::__shared_ptr_emplace<sw::CountedEvent, std::__1::allocator<sw::CountedEvent> >::_Storage"* %2 to %"class.std::__1::shared_ptr.41"*
  tail call void @_ZNSt3__110shared_ptrIN4marl9WaitGroup4DataEED2Ev(%"class.std::__1::shared_ptr.41"* %5) #12
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__120__shared_ptr_emplaceIN2sw12CountedEventENS_9allocatorIS2_EEE21__on_zero_shared_weakEv(%"struct.std::__1::__shared_ptr_emplace.893"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"struct.std::__1::__shared_ptr_emplace.893"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #14
  ret void
}

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__120__shared_ptr_emplaceIN4marl9WaitGroup4DataENS_9allocatorIS3_EEED2Ev(%"struct.std::__1::__shared_ptr_emplace.902"*) unnamed_addr #10 comdat align 2 {
  %2 = getelementptr inbounds %"struct.std::__1::__shared_ptr_emplace.902", %"struct.std::__1::__shared_ptr_emplace.902"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVNSt3__120__shared_ptr_emplaceIN4marl9WaitGroup4DataENS_9allocatorIS3_EEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"struct.std::__1::__shared_ptr_emplace.902", %"struct.std::__1::__shared_ptr_emplace.902"* %0, i64 0, i32 0
  tail call void @_ZNSt3__119__shared_weak_countD2Ev(%"class.std::__1::__shared_weak_count"* %3) #12
  ret void
}

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__120__shared_ptr_emplaceIN4marl9WaitGroup4DataENS_9allocatorIS3_EEED0Ev(%"struct.std::__1::__shared_ptr_emplace.902"*) unnamed_addr #10 comdat align 2 {
  %2 = getelementptr inbounds %"struct.std::__1::__shared_ptr_emplace.902", %"struct.std::__1::__shared_ptr_emplace.902"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVNSt3__120__shared_ptr_emplaceIN4marl9WaitGroup4DataENS_9allocatorIS3_EEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"struct.std::__1::__shared_ptr_emplace.902", %"struct.std::__1::__shared_ptr_emplace.902"* %0, i64 0, i32 0
  tail call void @_ZNSt3__119__shared_weak_countD2Ev(%"class.std::__1::__shared_weak_count"* %3) #12
  %4 = bitcast %"struct.std::__1::__shared_ptr_emplace.902"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #14
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__120__shared_ptr_emplaceIN4marl9WaitGroup4DataENS_9allocatorIS3_EEE16__on_zero_sharedEv(%"struct.std::__1::__shared_ptr_emplace.902"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"struct.std::__1::__shared_ptr_emplace.902", %"struct.std::__1::__shared_ptr_emplace.902"* %0, i64 0, i32 1, i32 0, i64 96
  %3 = bitcast i8* %2 to %"class.std::__1::condition_variable"*
  tail call void @_ZNSt3__118condition_variableD1Ev(%"class.std::__1::condition_variable"* %3) #12
  %4 = getelementptr inbounds %"struct.std::__1::__shared_ptr_emplace.902", %"struct.std::__1::__shared_ptr_emplace.902"* %0, i64 0, i32 1, i32 0, i64 88
  %5 = bitcast i8* %4 to %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"**
  br label %6

6:                                                ; preds = %6, %1
  %7 = phi %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"** [ %5, %1 ], [ %10, %6 ]
  %8 = load %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"*, %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"** %7, align 8
  %9 = icmp eq %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"* %8, null
  %10 = getelementptr inbounds %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry", %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"* %8, i64 0, i32 1
  br i1 %9, label %11, label %6

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"struct.std::__1::__shared_ptr_emplace.902", %"struct.std::__1::__shared_ptr_emplace.902"* %0, i64 0, i32 1, i32 0, i64 72
  %13 = bitcast i8* %12 to %"struct.marl::containers::list<marl::Scheduler::Fiber *>::AllocationChain"**
  %14 = load %"struct.marl::containers::list<marl::Scheduler::Fiber *>::AllocationChain"*, %"struct.marl::containers::list<marl::Scheduler::Fiber *>::AllocationChain"** %13, align 8
  %15 = icmp eq %"struct.marl::containers::list<marl::Scheduler::Fiber *>::AllocationChain"* %14, null
  br i1 %15, label %30, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"struct.std::__1::__shared_ptr_emplace.902", %"struct.std::__1::__shared_ptr_emplace.902"* %0, i64 0, i32 1, i32 0, i64 48
  %18 = bitcast i8* %17 to %"class.marl::Allocator"**
  br label %19

19:                                               ; preds = %19, %16
  %20 = phi %"struct.marl::containers::list<marl::Scheduler::Fiber *>::AllocationChain"* [ %14, %16 ], [ %22, %19 ]
  %21 = getelementptr inbounds %"struct.marl::containers::list<marl::Scheduler::Fiber *>::AllocationChain", %"struct.marl::containers::list<marl::Scheduler::Fiber *>::AllocationChain"* %20, i64 0, i32 1
  %22 = load %"struct.marl::containers::list<marl::Scheduler::Fiber *>::AllocationChain"*, %"struct.marl::containers::list<marl::Scheduler::Fiber *>::AllocationChain"** %21, align 8
  %23 = load %"class.marl::Allocator"*, %"class.marl::Allocator"** %18, align 8
  %24 = getelementptr inbounds %"struct.marl::containers::list<marl::Scheduler::Fiber *>::AllocationChain", %"struct.marl::containers::list<marl::Scheduler::Fiber *>::AllocationChain"* %20, i64 0, i32 0
  %25 = bitcast %"class.marl::Allocator"* %23 to void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)***
  %26 = load void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)**, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)** %26, i64 3
  %28 = load void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)** %27, align 8
  tail call void %28(%"class.marl::Allocator"* %23, %"struct.marl::Allocation"* dereferenceable(32) %24) #12
  %29 = icmp eq %"struct.marl::containers::list<marl::Scheduler::Fiber *>::AllocationChain"* %22, null
  br i1 %29, label %30, label %19

30:                                               ; preds = %19, %11
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__120__shared_ptr_emplaceIN4marl9WaitGroup4DataENS_9allocatorIS3_EEE21__on_zero_shared_weakEv(%"struct.std::__1::__shared_ptr_emplace.902"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"struct.std::__1::__shared_ptr_emplace.902"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #14
  ret void
}

; Function Attrs: nounwind optsize
declare void @_ZNSt3__118condition_variableD1Ev(%"class.std::__1::condition_variable"*) unnamed_addr #11

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__110shared_ptrIN4marl9WaitGroup4DataEED2Ev(%"class.std::__1::shared_ptr.41"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.std::__1::shared_ptr.41", %"class.std::__1::shared_ptr.41"* %0, i64 0, i32 1
  %3 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %2, align 8
  %4 = icmp eq %"class.std::__1::__shared_weak_count"* %3, null
  br i1 %4, label %15, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %3, i64 0, i32 0, i32 1
  %7 = atomicrmw add i64* %6, i64 -1 acq_rel
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %9, label %15

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %3, i64 0, i32 0
  %11 = bitcast %"class.std::__1::__shared_weak_count"* %3 to void (%"class.std::__1::__shared_count"*)***
  %12 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %12, i64 2
  %14 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %13, align 8
  tail call void %14(%"class.std::__1::__shared_count"* %10) #12
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %3) #12
  br label %15

15:                                               ; preds = %9, %5, %1
  ret void
}

; Function Attrs: nounwind optsize
declare void @_ZNSt3__119__shared_weak_countD2Ev(%"class.std::__1::__shared_weak_count"*) unnamed_addr #11

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__120__shared_ptr_pointerIPN4marl5Event6SharedENS1_9Allocator7DeleterENS_9allocatorIS3_EEED0Ev(%"class.std::__1::__shared_ptr_pointer"*) unnamed_addr #10 comdat align 2 {
  %2 = getelementptr inbounds %"class.std::__1::__shared_ptr_pointer", %"class.std::__1::__shared_ptr_pointer"* %0, i64 0, i32 0
  tail call void @_ZNSt3__119__shared_weak_countD2Ev(%"class.std::__1::__shared_weak_count"* %2) #12
  %3 = bitcast %"class.std::__1::__shared_ptr_pointer"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #14
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__120__shared_ptr_pointerIPN4marl5Event6SharedENS1_9Allocator7DeleterENS_9allocatorIS3_EEE16__on_zero_sharedEv(%"class.std::__1::__shared_ptr_pointer"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.marl::Allocation", align 8
  %3 = getelementptr inbounds %"class.std::__1::__shared_ptr_pointer", %"class.std::__1::__shared_ptr_pointer"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %4 = load %"struct.marl::Event::Shared"*, %"struct.marl::Event::Shared"** %3, align 8
  %5 = getelementptr inbounds %"struct.marl::Event::Shared", %"struct.marl::Event::Shared"* %4, i64 0, i32 2, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"struct.marl::Event::Shared", %"struct.marl::Event::Shared"* %4, i64 0, i32 2, i32 4
  %10 = bitcast %"struct.marl::aligned_storage<16, 8>::type"** %9 to %"class.std::__1::shared_ptr.49"**
  br label %16

11:                                               ; preds = %16, %1
  %12 = getelementptr inbounds %"struct.marl::Event::Shared", %"struct.marl::Event::Shared"* %4, i64 0, i32 2, i32 5
  %13 = getelementptr inbounds %"struct.marl::Allocation", %"struct.marl::Allocation"* %12, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %32, label %23

16:                                               ; preds = %16, %8
  %17 = phi i64 [ 0, %8 ], [ %20, %16 ]
  %18 = load %"class.std::__1::shared_ptr.49"*, %"class.std::__1::shared_ptr.49"** %10, align 8
  %19 = getelementptr inbounds %"class.std::__1::shared_ptr.49", %"class.std::__1::shared_ptr.49"* %18, i64 %17
  tail call void @_ZNSt3__110shared_ptrIN4marl5Event6SharedEED2Ev(%"class.std::__1::shared_ptr.49"* %19) #12
  %20 = add nuw i64 %17, 1
  %21 = load i64, i64* %5, align 8
  %22 = icmp ult i64 %20, %21
  br i1 %22, label %16, label %11

23:                                               ; preds = %11
  %24 = getelementptr inbounds %"struct.marl::Event::Shared", %"struct.marl::Event::Shared"* %4, i64 0, i32 2, i32 0
  %25 = load %"class.marl::Allocator"*, %"class.marl::Allocator"** %24, align 8
  %26 = bitcast %"class.marl::Allocator"* %25 to void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)***
  %27 = load void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)**, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*** %26, align 8
  %28 = getelementptr inbounds void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)** %27, i64 3
  %29 = load void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)** %28, align 8
  tail call void %29(%"class.marl::Allocator"* %25, %"struct.marl::Allocation"* dereferenceable(32) %12) #12
  %30 = getelementptr inbounds %"struct.marl::Event::Shared", %"struct.marl::Event::Shared"* %4, i64 0, i32 2, i32 4
  %31 = bitcast %"struct.marl::aligned_storage<16, 8>::type"** %30 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 34, i1 false) #13
  br label %32

32:                                               ; preds = %23, %11
  %33 = getelementptr inbounds %"struct.marl::Event::Shared", %"struct.marl::Event::Shared"* %4, i64 0, i32 1, i32 2
  tail call void @_ZNSt3__118condition_variableD1Ev(%"class.std::__1::condition_variable"* %33) #12
  %34 = getelementptr inbounds %"struct.marl::Event::Shared", %"struct.marl::Event::Shared"* %4, i64 0, i32 1, i32 1, i32 5
  br label %35

35:                                               ; preds = %35, %32
  %36 = phi %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"** [ %34, %32 ], [ %39, %35 ]
  %37 = load %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"*, %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"** %36, align 8
  %38 = icmp eq %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"* %37, null
  %39 = getelementptr inbounds %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry", %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"* %37, i64 0, i32 1
  br i1 %38, label %40, label %35

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"struct.marl::Event::Shared", %"struct.marl::Event::Shared"* %4, i64 0, i32 1, i32 1, i32 3
  %42 = load %"struct.marl::containers::list<marl::Scheduler::Fiber *>::AllocationChain"*, %"struct.marl::containers::list<marl::Scheduler::Fiber *>::AllocationChain"** %41, align 8
  %43 = icmp eq %"struct.marl::containers::list<marl::Scheduler::Fiber *>::AllocationChain"* %42, null
  br i1 %43, label %57, label %44

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"struct.marl::Event::Shared", %"struct.marl::Event::Shared"* %4, i64 0, i32 1, i32 1, i32 0
  br label %46

46:                                               ; preds = %46, %44
  %47 = phi %"struct.marl::containers::list<marl::Scheduler::Fiber *>::AllocationChain"* [ %42, %44 ], [ %49, %46 ]
  %48 = getelementptr inbounds %"struct.marl::containers::list<marl::Scheduler::Fiber *>::AllocationChain", %"struct.marl::containers::list<marl::Scheduler::Fiber *>::AllocationChain"* %47, i64 0, i32 1
  %49 = load %"struct.marl::containers::list<marl::Scheduler::Fiber *>::AllocationChain"*, %"struct.marl::containers::list<marl::Scheduler::Fiber *>::AllocationChain"** %48, align 8
  %50 = load %"class.marl::Allocator"*, %"class.marl::Allocator"** %45, align 8
  %51 = getelementptr inbounds %"struct.marl::containers::list<marl::Scheduler::Fiber *>::AllocationChain", %"struct.marl::containers::list<marl::Scheduler::Fiber *>::AllocationChain"* %47, i64 0, i32 0
  %52 = bitcast %"class.marl::Allocator"* %50 to void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)***
  %53 = load void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)**, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*** %52, align 8
  %54 = getelementptr inbounds void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)** %53, i64 3
  %55 = load void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)** %54, align 8
  tail call void %55(%"class.marl::Allocator"* %50, %"struct.marl::Allocation"* dereferenceable(32) %51) #12
  %56 = icmp eq %"struct.marl::containers::list<marl::Scheduler::Fiber *>::AllocationChain"* %49, null
  br i1 %56, label %57, label %46

57:                                               ; preds = %46, %40
  %58 = bitcast %"struct.marl::Allocation"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %58) #13
  %59 = getelementptr inbounds %"struct.marl::Allocation", %"struct.marl::Allocation"* %2, i64 0, i32 1, i32 0
  %60 = getelementptr inbounds %"struct.marl::Allocation", %"struct.marl::Allocation"* %2, i64 0, i32 1, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %58, i8 -86, i64 32, i1 false) #13
  %61 = getelementptr inbounds %"struct.marl::Allocation", %"struct.marl::Allocation"* %2, i64 0, i32 1, i32 2
  %62 = bitcast i8* %61 to i16*
  store i16 512, i16* %62, align 8
  %63 = bitcast %"struct.marl::Allocation"* %2 to %"struct.marl::Event::Shared"**
  store %"struct.marl::Event::Shared"* %4, %"struct.marl::Event::Shared"** %63, align 8
  %64 = getelementptr inbounds %"class.std::__1::__shared_ptr_pointer", %"class.std::__1::__shared_ptr_pointer"* %0, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 1
  %65 = load i64, i64* %64, align 8
  %66 = mul i64 %65, 272
  store i64 %66, i64* %59, align 8
  store i64 8, i64* %60, align 8
  %67 = getelementptr inbounds %"class.std::__1::__shared_ptr_pointer", %"class.std::__1::__shared_ptr_pointer"* %0, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0
  %68 = load %"class.marl::Allocator"*, %"class.marl::Allocator"** %67, align 8
  %69 = bitcast %"class.marl::Allocator"* %68 to void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)***
  %70 = load void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)**, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*** %69, align 8
  %71 = getelementptr inbounds void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)** %70, i64 3
  %72 = load void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)*, void (%"class.marl::Allocator"*, %"struct.marl::Allocation"*)** %71, align 8
  call void %72(%"class.marl::Allocator"* %68, %"struct.marl::Allocation"* nonnull dereferenceable(32) %2) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %58) #13
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__120__shared_ptr_pointerIPN4marl5Event6SharedENS1_9Allocator7DeleterENS_9allocatorIS3_EEE21__on_zero_shared_weakEv(%"class.std::__1::__shared_ptr_pointer"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.std::__1::__shared_ptr_pointer"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #14
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__110shared_ptrIN4marl5Event6SharedEED2Ev(%"class.std::__1::shared_ptr.49"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.std::__1::shared_ptr.49", %"class.std::__1::shared_ptr.49"* %0, i64 0, i32 1
  %3 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %2, align 8
  %4 = icmp eq %"class.std::__1::__shared_weak_count"* %3, null
  br i1 %4, label %15, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %3, i64 0, i32 0, i32 1
  %7 = atomicrmw add i64* %6, i64 -1 acq_rel
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %9, label %15

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %3, i64 0, i32 0
  %11 = bitcast %"class.std::__1::__shared_weak_count"* %3 to void (%"class.std::__1::__shared_count"*)***
  %12 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %12, i64 2
  %14 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %13, align 8
  tail call void %14(%"class.std::__1::__shared_count"* %10) #12
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %3) #12
  br label %15

15:                                               ; preds = %9, %5, %1
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__110shared_ptrIN2sw12CountedEventEED2Ev(%"class.std::__1::shared_ptr.108"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.std::__1::shared_ptr.108", %"class.std::__1::shared_ptr.108"* %0, i64 0, i32 1
  %3 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %2, align 8
  %4 = icmp eq %"class.std::__1::__shared_weak_count"* %3, null
  br i1 %4, label %15, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %3, i64 0, i32 0, i32 1
  %7 = atomicrmw add i64* %6, i64 -1 acq_rel
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %9, label %15

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %3, i64 0, i32 0
  %11 = bitcast %"class.std::__1::__shared_weak_count"* %3 to void (%"class.std::__1::__shared_count"*)***
  %12 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %12, i64 2
  %14 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %13, align 8
  tail call void %14(%"class.std::__1::__shared_count"* %10) #12
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %3) #12
  br label %15

15:                                               ; preds = %9, %5, %1
  ret void
}

; Function Attrs: optsize
declare i64 @_ZN2vk15BinarySemaphore29ComputeRequiredAllocationSizeEPK21VkSemaphoreCreateInfo(%struct.VkSemaphoreCreateInfo*) local_unnamed_addr #1

; Function Attrs: optsize
declare void @_ZN2vk15BinarySemaphoreC1EPK21VkSemaphoreCreateInfoPvPK21VkAllocationCallbacks(%"class.vk::BinarySemaphore"*, %struct.VkSemaphoreCreateInfo*, i8*, %struct.VkAllocationCallbacks*) unnamed_addr #1

; Function Attrs: optsize
declare i64 @_ZN2vk17TimelineSemaphore29ComputeRequiredAllocationSizeEPK21VkSemaphoreCreateInfo(%struct.VkSemaphoreCreateInfo*) local_unnamed_addr #1

; Function Attrs: optsize
declare void @_ZN2vk17TimelineSemaphoreC1EPK21VkSemaphoreCreateInfoPvPK21VkAllocationCallbacks(%"class.vk::TimelineSemaphore"*, %struct.VkSemaphoreCreateInfo*, i8*, %struct.VkAllocationCallbacks*) unnamed_addr #1

; Function Attrs: optsize
declare i32 @_ZNK2vk9Semaphore16getSemaphoreTypeEv(%"class.vk::Semaphore"*) local_unnamed_addr #1

; Function Attrs: optsize
declare i64 @_ZN2vk9QueryPool29ComputeRequiredAllocationSizeEPK21VkQueryPoolCreateInfo(%struct.VkQueryPoolCreateInfo*) local_unnamed_addr #1

; Function Attrs: optsize
declare void @_ZN2vk9QueryPoolC1EPK21VkQueryPoolCreateInfoPv(%"class.vk::QueryPool"*, %struct.VkQueryPoolCreateInfo*, i8*) unnamed_addr #1

; Function Attrs: optsize
declare void @_ZN2vk9QueryPool7destroyEPK21VkAllocationCallbacks(%"class.vk::QueryPool"*, %struct.VkAllocationCallbacks*) local_unnamed_addr #1

; Function Attrs: optsize
declare i64 @_ZN2vk6Buffer29ComputeRequiredAllocationSizeEPK18VkBufferCreateInfo(%struct.VkBufferCreateInfo*) local_unnamed_addr #1

; Function Attrs: optsize
declare void @_ZN2vk6BufferC1EPK18VkBufferCreateInfoPv(%"class.vk::Buffer"*, %struct.VkBufferCreateInfo*, i8*) unnamed_addr #1

; Function Attrs: optsize
declare void @_ZN2vk6Buffer7destroyEPK21VkAllocationCallbacks(%"class.vk::Buffer"*, %struct.VkAllocationCallbacks*) local_unnamed_addr #1

; Function Attrs: optsize
declare void @_ZN2vk10BufferViewC1EPK22VkBufferViewCreateInfoPv(%"class.vk::BufferView"*, %struct.VkBufferViewCreateInfo*, i8*) unnamed_addr #1

; Function Attrs: optsize
declare i64 @_ZN2vk5Image29ComputeRequiredAllocationSizeEPK17VkImageCreateInfo(%struct.VkImageCreateInfo*) local_unnamed_addr #1

; Function Attrs: optsize
declare void @_ZN2vk5ImageC1EPK17VkImageCreateInfoPvPNS_6DeviceE(%"class.vk::Image"*, %struct.VkImageCreateInfo*, i8*, %"class.vk::Device"*) unnamed_addr #1

; Function Attrs: optsize
declare void @_ZN2vk5Image7destroyEPK21VkAllocationCallbacks(%"class.vk::Image"*, %struct.VkAllocationCallbacks*) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIN2vk5Image11SubresourceES3_NS_8equal_toIS3_EENS_9allocatorIS3_EEED2Ev(%"class.std::__1::__hash_table.418"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.std::__1::__hash_table.418", %"class.std::__1::__hash_table.418"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"struct.std::__1::__hash_node_base.422"*, %"struct.std::__1::__hash_node_base.422"** %2, align 8
  %4 = icmp eq %"struct.std::__1::__hash_node_base.422"* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1, %5
  %6 = phi %"struct.std::__1::__hash_node_base.422"* [ %8, %5 ], [ %3, %1 ]
  %7 = getelementptr inbounds %"struct.std::__1::__hash_node_base.422", %"struct.std::__1::__hash_node_base.422"* %6, i64 0, i32 0
  %8 = load %"struct.std::__1::__hash_node_base.422"*, %"struct.std::__1::__hash_node_base.422"** %7, align 8
  %9 = bitcast %"struct.std::__1::__hash_node_base.422"* %6 to i8*
  tail call void @_ZdlPv(i8* %9) #14
  %10 = icmp eq %"struct.std::__1::__hash_node_base.422"* %8, null
  br i1 %10, label %11, label %5

11:                                               ; preds = %5, %1
  %12 = getelementptr inbounds %"class.std::__1::__hash_table.418", %"class.std::__1::__hash_table.418"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"struct.std::__1::__hash_node_base.422"**, %"struct.std::__1::__hash_node_base.422"*** %12, align 8
  store %"struct.std::__1::__hash_node_base.422"** null, %"struct.std::__1::__hash_node_base.422"*** %12, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.422"** %13, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %11
  %16 = bitcast %"struct.std::__1::__hash_node_base.422"** %13 to i8*
  tail call void @_ZdlPv(i8* %16) #14
  br label %17

17:                                               ; preds = %11, %15
  ret void
}

; Function Attrs: optsize
declare i64 @_ZN2vk9ImageView29ComputeRequiredAllocationSizeEPK21VkImageViewCreateInfo(%struct.VkImageViewCreateInfo*) local_unnamed_addr #1

; Function Attrs: optsize
declare void @_ZN2vk9ImageViewC1EPK21VkImageViewCreateInfoPvPKNS_22SamplerYcbcrConversionE(%"class.vk::ImageView"*, %struct.VkImageViewCreateInfo*, i8*, %"class.vk::SamplerYcbcrConversion"*) unnamed_addr #1

; Function Attrs: optsize
declare void @_ZN2vk9ImageView7destroyEPK21VkAllocationCallbacks(%"class.vk::ImageView"*, %struct.VkAllocationCallbacks*) local_unnamed_addr #1

; Function Attrs: optsize
declare i64 @_ZN2vk12ShaderModule29ComputeRequiredAllocationSizeEPK24VkShaderModuleCreateInfo(%struct.VkShaderModuleCreateInfo*) local_unnamed_addr #1

; Function Attrs: optsize
declare void @_ZN2vk12ShaderModuleC1EPK24VkShaderModuleCreateInfoPv(%"class.vk::ShaderModule"*, %struct.VkShaderModuleCreateInfo*, i8*) unnamed_addr #1

; Function Attrs: optsize
declare void @_ZN2vk12ShaderModule7destroyEPK21VkAllocationCallbacks(%"class.vk::ShaderModule"*, %struct.VkAllocationCallbacks*) local_unnamed_addr #1

; Function Attrs: optsize
declare i64 @_ZN2vk13PipelineCache29ComputeRequiredAllocationSizeEPK25VkPipelineCacheCreateInfo(%struct.VkPipelineCacheCreateInfo*) local_unnamed_addr #1

; Function Attrs: optsize
declare void @_ZN2vk13PipelineCacheC1EPK25VkPipelineCacheCreateInfoPv(%"class.vk::PipelineCache"*, %struct.VkPipelineCacheCreateInfo*, i8*) unnamed_addr #1

; Function Attrs: optsize
declare void @_ZN2vk13PipelineCache7destroyEPK21VkAllocationCallbacks(%"class.vk::PipelineCache"*, %struct.VkAllocationCallbacks*) local_unnamed_addr #1

; Function Attrs: optsize
declare i64 @_ZN2vk16GraphicsPipeline29ComputeRequiredAllocationSizeEPK28VkGraphicsPipelineCreateInfo(%struct.VkGraphicsPipelineCreateInfo*) local_unnamed_addr #1

; Function Attrs: optsize
declare void @_ZN2vk16GraphicsPipelineC1EPK28VkGraphicsPipelineCreateInfoPvPNS_6DeviceE(%"class.vk::GraphicsPipeline"*, %struct.VkGraphicsPipelineCreateInfo*, i8*, %"class.vk::Device"*) unnamed_addr #1

; Function Attrs: optsize
declare i64 @_ZN2vk15ComputePipeline29ComputeRequiredAllocationSizeEPK27VkComputePipelineCreateInfo(%struct.VkComputePipelineCreateInfo*) local_unnamed_addr #1

; Function Attrs: optsize
declare void @_ZN2vk15ComputePipelineC1EPK27VkComputePipelineCreateInfoPvPNS_6DeviceE(%"class.vk::ComputePipeline"*, %struct.VkComputePipelineCreateInfo*, i8*, %"class.vk::Device"*) unnamed_addr #1

; Function Attrs: optsize
declare void @_ZN2vk8Pipeline7destroyEPK21VkAllocationCallbacks(%"class.vk::Pipeline"*, %struct.VkAllocationCallbacks*) local_unnamed_addr #1

; Function Attrs: optsize
declare i64 @_ZN2vk14PipelineLayout29ComputeRequiredAllocationSizeEPK26VkPipelineLayoutCreateInfo(%struct.VkPipelineLayoutCreateInfo*) local_unnamed_addr #1

; Function Attrs: optsize
declare void @_ZN2vk14PipelineLayoutC1EPK26VkPipelineLayoutCreateInfoPv(%"class.vk::PipelineLayout"*, %struct.VkPipelineLayoutCreateInfo*, i8*) unnamed_addr #1

; Function Attrs: optsize
declare zeroext i1 @_ZN2vk14PipelineLayout7releaseEPK21VkAllocationCallbacks(%"class.vk::PipelineLayout"*, %struct.VkAllocationCallbacks*) local_unnamed_addr #1

; Function Attrs: optsize
declare void @_ZN2vk7SamplerC1EPK19VkSamplerCreateInfoPvRKNS_12SamplerStateEj(%"class.vk::Sampler"*, %struct.VkSamplerCreateInfo*, i8*, %"struct.vk::SamplerState"* dereferenceable(72), i32) unnamed_addr #1

; Function Attrs: optsize
declare i64 @_ZN2vk19DescriptorSetLayout29ComputeRequiredAllocationSizeEPK31VkDescriptorSetLayoutCreateInfo(%struct.VkDescriptorSetLayoutCreateInfo*) local_unnamed_addr #1

; Function Attrs: optsize
declare void @_ZN2vk19DescriptorSetLayoutC1EPK31VkDescriptorSetLayoutCreateInfoPv(%"class.vk::DescriptorSetLayout"*, %struct.VkDescriptorSetLayoutCreateInfo*, i8*) unnamed_addr #1

; Function Attrs: optsize
declare void @_ZN2vk19DescriptorSetLayout7destroyEPK21VkAllocationCallbacks(%"class.vk::DescriptorSetLayout"*, %struct.VkAllocationCallbacks*) local_unnamed_addr #1

; Function Attrs: optsize
declare i64 @_ZN2vk14DescriptorPool29ComputeRequiredAllocationSizeEPK26VkDescriptorPoolCreateInfo(%struct.VkDescriptorPoolCreateInfo*) local_unnamed_addr #1

; Function Attrs: optsize
declare void @_ZN2vk14DescriptorPoolC1EPK26VkDescriptorPoolCreateInfoPv(%"class.vk::DescriptorPool"*, %struct.VkDescriptorPoolCreateInfo*, i8*) unnamed_addr #1

; Function Attrs: optsize
declare void @_ZN2vk14DescriptorPool7destroyEPK21VkAllocationCallbacks(%"class.vk::DescriptorPool"*, %struct.VkAllocationCallbacks*) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeIN2vk14DescriptorPool4NodeENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree.823"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeIN2vk14DescriptorPool4NodeENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree.823"* %0, %"class.std::__1::__tree_node"* %6) #12
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeIN2vk14DescriptorPool4NodeENS_4lessIS3_EENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree.823"* %0, %"class.std::__1::__tree_node"* %9) #12
  %10 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #14
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: optsize
declare i64 @_ZN2vk11Framebuffer29ComputeRequiredAllocationSizeEPK23VkFramebufferCreateInfo(%struct.VkFramebufferCreateInfo*) local_unnamed_addr #1

; Function Attrs: optsize
declare void @_ZN2vk11FramebufferC1EPK23VkFramebufferCreateInfoPv(%"class.vk::Framebuffer"*, %struct.VkFramebufferCreateInfo*, i8*) unnamed_addr #1

; Function Attrs: optsize
declare void @_ZN2vk11Framebuffer7destroyEPK21VkAllocationCallbacks(%"class.vk::Framebuffer"*, %struct.VkAllocationCallbacks*) local_unnamed_addr #1

; Function Attrs: optsize
declare i64 @_ZN2vk10RenderPass29ComputeRequiredAllocationSizeEPK22VkRenderPassCreateInfo(%struct.VkRenderPassCreateInfo*) local_unnamed_addr #1

; Function Attrs: optsize
declare void @_ZN2vk10RenderPassC1EPK22VkRenderPassCreateInfoPv(%"class.vk::RenderPass"*, %struct.VkRenderPassCreateInfo*, i8*) unnamed_addr #1

; Function Attrs: optsize
declare i64 @_ZN2vk10RenderPass29ComputeRequiredAllocationSizeEPK23VkRenderPassCreateInfo2(%struct.VkRenderPassCreateInfo2*) local_unnamed_addr #1

; Function Attrs: optsize
declare void @_ZN2vk10RenderPassC1EPK23VkRenderPassCreateInfo2Pv(%"class.vk::RenderPass"*, %struct.VkRenderPassCreateInfo2*, i8*) unnamed_addr #1

; Function Attrs: optsize
declare void @_ZN2vk10RenderPass7destroyEPK21VkAllocationCallbacks(%"class.vk::RenderPass"*, %struct.VkAllocationCallbacks*) local_unnamed_addr #1

; Function Attrs: optsize
declare i64 @_ZN2vk11CommandPool29ComputeRequiredAllocationSizeEPK23VkCommandPoolCreateInfo(%struct.VkCommandPoolCreateInfo*) local_unnamed_addr #1

; Function Attrs: optsize
declare void @_ZN2vk11CommandPoolC1EPK23VkCommandPoolCreateInfoPv(%"class.vk::CommandPool"*, %struct.VkCommandPoolCreateInfo*, i8*) unnamed_addr #1

; Function Attrs: optsize
declare void @_ZN2vk11CommandPool7destroyEPK21VkAllocationCallbacks(%"class.vk::CommandPool"*, %struct.VkAllocationCallbacks*) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeIP17VkCommandBuffer_TNS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree.837"*, %"class.std::__1::__tree_node.920"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.920"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.920"* %1 to %"class.std::__1::__tree_node.920"**
  %6 = load %"class.std::__1::__tree_node.920"*, %"class.std::__1::__tree_node.920"** %5, align 8
  tail call void @_ZNSt3__16__treeIP17VkCommandBuffer_TNS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree.837"* %0, %"class.std::__1::__tree_node.920"* %6) #12
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.920", %"class.std::__1::__tree_node.920"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.920"**
  %9 = load %"class.std::__1::__tree_node.920"*, %"class.std::__1::__tree_node.920"** %8, align 8
  tail call void @_ZNSt3__16__treeIP17VkCommandBuffer_TNS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree.837"* %0, %"class.std::__1::__tree_node.920"* %9) #12
  %10 = bitcast %"class.std::__1::__tree_node.920"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #14
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN2vk22SamplerYcbcrConversionC2EPK34VkSamplerYcbcrConversionCreateInfoPv(%"class.vk::SamplerYcbcrConversion"*, %struct.VkSamplerYcbcrConversionCreateInfo*, i8*) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.vk::SamplerYcbcrConversion", %"class.vk::SamplerYcbcrConversion"* %0, i64 0, i32 0
  %5 = getelementptr inbounds %struct.VkSamplerYcbcrConversionCreateInfo, %struct.VkSamplerYcbcrConversionCreateInfo* %1, i64 0, i32 2
  %6 = load i32, i32* %5, align 8
  store i32 %6, i32* %4, align 4
  %7 = getelementptr inbounds %"class.vk::SamplerYcbcrConversion", %"class.vk::SamplerYcbcrConversion"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %struct.VkSamplerYcbcrConversionCreateInfo, %struct.VkSamplerYcbcrConversionCreateInfo* %1, i64 0, i32 3
  %9 = load i32, i32* %8, align 4
  store i32 %9, i32* %7, align 4
  %10 = getelementptr inbounds %"class.vk::SamplerYcbcrConversion", %"class.vk::SamplerYcbcrConversion"* %0, i64 0, i32 2
  %11 = getelementptr inbounds %struct.VkSamplerYcbcrConversionCreateInfo, %struct.VkSamplerYcbcrConversionCreateInfo* %1, i64 0, i32 4
  %12 = load i32, i32* %11, align 8
  store i32 %12, i32* %10, align 4
  %13 = getelementptr inbounds %"class.vk::SamplerYcbcrConversion", %"class.vk::SamplerYcbcrConversion"* %0, i64 0, i32 3
  %14 = getelementptr inbounds %struct.VkSamplerYcbcrConversionCreateInfo, %struct.VkSamplerYcbcrConversionCreateInfo* %1, i64 0, i32 5
  %15 = bitcast %struct.VkComponentMapping* %14 to i64*
  %16 = load i64, i64* %15, align 4
  %17 = getelementptr inbounds %struct.VkSamplerYcbcrConversionCreateInfo, %struct.VkSamplerYcbcrConversionCreateInfo* %1, i64 0, i32 5, i32 2
  %18 = bitcast i32* %17 to i64*
  %19 = load i64, i64* %18, align 4
  %20 = tail call { i64, i64 } @_ZN2vk22ResolveIdentityMappingE18VkComponentMapping(i64 %16, i64 %19) #12
  %21 = bitcast %struct.VkComponentMapping* %13 to i64*
  %22 = extractvalue { i64, i64 } %20, 0
  store i64 %22, i64* %21, align 4
  %23 = getelementptr inbounds %"class.vk::SamplerYcbcrConversion", %"class.vk::SamplerYcbcrConversion"* %0, i64 0, i32 3, i32 2
  %24 = bitcast i32* %23 to i64*
  %25 = extractvalue { i64, i64 } %20, 1
  store i64 %25, i64* %24, align 4
  %26 = getelementptr inbounds %"class.vk::SamplerYcbcrConversion", %"class.vk::SamplerYcbcrConversion"* %0, i64 0, i32 4
  %27 = getelementptr inbounds %struct.VkSamplerYcbcrConversionCreateInfo, %struct.VkSamplerYcbcrConversionCreateInfo* %1, i64 0, i32 6
  %28 = load i32, i32* %27, align 4
  store i32 %28, i32* %26, align 4
  %29 = getelementptr inbounds %"class.vk::SamplerYcbcrConversion", %"class.vk::SamplerYcbcrConversion"* %0, i64 0, i32 5
  %30 = getelementptr inbounds %struct.VkSamplerYcbcrConversionCreateInfo, %struct.VkSamplerYcbcrConversionCreateInfo* %1, i64 0, i32 7
  %31 = load i32, i32* %30, align 8
  store i32 %31, i32* %29, align 4
  %32 = getelementptr inbounds %"class.vk::SamplerYcbcrConversion", %"class.vk::SamplerYcbcrConversion"* %0, i64 0, i32 6
  %33 = getelementptr inbounds %struct.VkSamplerYcbcrConversionCreateInfo, %struct.VkSamplerYcbcrConversionCreateInfo* %1, i64 0, i32 8
  %34 = load i32, i32* %33, align 4
  store i32 %34, i32* %32, align 4
  %35 = getelementptr inbounds %"class.vk::SamplerYcbcrConversion", %"class.vk::SamplerYcbcrConversion"* %0, i64 0, i32 7
  %36 = getelementptr inbounds %struct.VkSamplerYcbcrConversionCreateInfo, %struct.VkSamplerYcbcrConversionCreateInfo* %1, i64 0, i32 9
  %37 = load i32, i32* %36, align 8
  store i32 %37, i32* %35, align 4
  ret void
}

; Function Attrs: optsize
declare { i64, i64 } @_ZN2vk22ResolveIdentityMappingE18VkComponentMapping(i64, i64) local_unnamed_addr #1

; Function Attrs: optsize
declare i64 @_ZN2vk24DescriptorUpdateTemplate29ComputeRequiredAllocationSizeEPK36VkDescriptorUpdateTemplateCreateInfo(%struct.VkDescriptorUpdateTemplateCreateInfo*) local_unnamed_addr #1

; Function Attrs: optsize
declare void @_ZN2vk24DescriptorUpdateTemplateC1EPK36VkDescriptorUpdateTemplateCreateInfoPv(%"class.vk::DescriptorUpdateTemplate"*, %struct.VkDescriptorUpdateTemplateCreateInfo*, i8*) unnamed_addr #1

; Function Attrs: optsize
declare i64 @_ZN2vk13XcbSurfaceKHR29ComputeRequiredAllocationSizeEPK25VkXcbSurfaceCreateInfoKHR(%struct.VkXcbSurfaceCreateInfoKHR*) local_unnamed_addr #1

; Function Attrs: optsize
declare void @_ZN2vk13XcbSurfaceKHRC1EPK25VkXcbSurfaceCreateInfoKHRPv(%"class.vk::XcbSurfaceKHR"*, %struct.VkXcbSurfaceCreateInfoKHR*, i8*) unnamed_addr #1

; Function Attrs: optsize
declare i64 @_ZN2vk14XlibSurfaceKHR29ComputeRequiredAllocationSizeEPK26VkXlibSurfaceCreateInfoKHR(%struct.VkXlibSurfaceCreateInfoKHR*) local_unnamed_addr #1

; Function Attrs: optsize
declare void @_ZN2vk14XlibSurfaceKHRC1EPK26VkXlibSurfaceCreateInfoKHRPv(%"class.vk::XlibSurfaceKHR"*, %struct.VkXlibSurfaceCreateInfoKHR*, i8*) unnamed_addr #1

; Function Attrs: optsize
declare i64 @_ZN2vk18HeadlessSurfaceKHR29ComputeRequiredAllocationSizeEPK30VkHeadlessSurfaceCreateInfoEXT(%struct.VkHeadlessSurfaceCreateInfoEXT*) local_unnamed_addr #1

; Function Attrs: optsize
declare void @_ZN2vk18HeadlessSurfaceKHRC1EPK30VkHeadlessSurfaceCreateInfoEXTPv(%"class.vk::HeadlessSurfaceKHR"*, %struct.VkHeadlessSurfaceCreateInfoEXT*, i8*) unnamed_addr #1

; Function Attrs: optsize
declare i64 @_ZN2vk12SwapchainKHR29ComputeRequiredAllocationSizeEPK24VkSwapchainCreateInfoKHR(%struct.VkSwapchainCreateInfoKHR*) local_unnamed_addr #1

; Function Attrs: optsize
declare void @_ZN2vk12SwapchainKHRC1EPK24VkSwapchainCreateInfoKHRPv(%"class.vk::SwapchainKHR"*, %struct.VkSwapchainCreateInfoKHR*, i8*) unnamed_addr #1

; Function Attrs: optsize
declare void @_ZN2vk12SwapchainKHR7destroyEPK21VkAllocationCallbacks(%"class.vk::SwapchainKHR"*, %struct.VkAllocationCallbacks*) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define internal void @_GLOBAL__sub_I_libVulkan.cpp() #0 section ".text.startup" {
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 getelementptr inbounds ([10 x %struct.ExtensionProperties], [10 x %struct.ExtensionProperties]* @_ZL27instanceExtensionProperties, i64 0, i64 0, i32 0, i32 0, i64 0), i8* align 1 getelementptr inbounds ([256 x i8], [256 x i8]* @.str.2, i64 0, i64 0), i64 256, i1 false) #13
  store i32 1, i32* getelementptr inbounds ([10 x %struct.ExtensionProperties], [10 x %struct.ExtensionProperties]* @_ZL27instanceExtensionProperties, i64 0, i64 0, i32 0, i32 1), align 16
  store i8 1, i8* getelementptr inbounds ([10 x %struct.ExtensionProperties], [10 x %struct.ExtensionProperties]* @_ZL27instanceExtensionProperties, i64 0, i64 0, i32 1), align 4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 getelementptr inbounds ([10 x %struct.ExtensionProperties], [10 x %struct.ExtensionProperties]* @_ZL27instanceExtensionProperties, i64 0, i64 1, i32 0, i32 0, i64 0), i8* align 1 getelementptr inbounds ([256 x i8], [256 x i8]* @.str.3, i64 0, i64 0), i64 256, i1 false) #13
  store i32 1, i32* getelementptr inbounds ([10 x %struct.ExtensionProperties], [10 x %struct.ExtensionProperties]* @_ZL27instanceExtensionProperties, i64 0, i64 1, i32 0, i32 1), align 8
  store i8 1, i8* getelementptr inbounds ([10 x %struct.ExtensionProperties], [10 x %struct.ExtensionProperties]* @_ZL27instanceExtensionProperties, i64 0, i64 1, i32 1), align 4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 getelementptr inbounds ([10 x %struct.ExtensionProperties], [10 x %struct.ExtensionProperties]* @_ZL27instanceExtensionProperties, i64 0, i64 2, i32 0, i32 0, i64 0), i8* align 1 getelementptr inbounds ([256 x i8], [256 x i8]* @.str.4, i64 0, i64 0), i64 256, i1 false) #13
  store i32 1, i32* getelementptr inbounds ([10 x %struct.ExtensionProperties], [10 x %struct.ExtensionProperties]* @_ZL27instanceExtensionProperties, i64 0, i64 2, i32 0, i32 1), align 16
  store i8 1, i8* getelementptr inbounds ([10 x %struct.ExtensionProperties], [10 x %struct.ExtensionProperties]* @_ZL27instanceExtensionProperties, i64 0, i64 2, i32 1), align 4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 getelementptr inbounds ([10 x %struct.ExtensionProperties], [10 x %struct.ExtensionProperties]* @_ZL27instanceExtensionProperties, i64 0, i64 3, i32 0, i32 0, i64 0), i8* align 1 getelementptr inbounds ([256 x i8], [256 x i8]* @.str.5, i64 0, i64 0), i64 256, i1 false) #13
  store i32 1, i32* getelementptr inbounds ([10 x %struct.ExtensionProperties], [10 x %struct.ExtensionProperties]* @_ZL27instanceExtensionProperties, i64 0, i64 3, i32 0, i32 1), align 8
  store i8 1, i8* getelementptr inbounds ([10 x %struct.ExtensionProperties], [10 x %struct.ExtensionProperties]* @_ZL27instanceExtensionProperties, i64 0, i64 3, i32 1), align 4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 getelementptr inbounds ([10 x %struct.ExtensionProperties], [10 x %struct.ExtensionProperties]* @_ZL27instanceExtensionProperties, i64 0, i64 4, i32 0, i32 0, i64 0), i8* align 1 getelementptr inbounds ([256 x i8], [256 x i8]* @.str.6, i64 0, i64 0), i64 256, i1 false) #13
  store i32 2, i32* getelementptr inbounds ([10 x %struct.ExtensionProperties], [10 x %struct.ExtensionProperties]* @_ZL27instanceExtensionProperties, i64 0, i64 4, i32 0, i32 1), align 16
  store i8 1, i8* getelementptr inbounds ([10 x %struct.ExtensionProperties], [10 x %struct.ExtensionProperties]* @_ZL27instanceExtensionProperties, i64 0, i64 4, i32 1), align 4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 getelementptr inbounds ([10 x %struct.ExtensionProperties], [10 x %struct.ExtensionProperties]* @_ZL27instanceExtensionProperties, i64 0, i64 5, i32 0, i32 0, i64 0), i8* align 1 getelementptr inbounds ([256 x i8], [256 x i8]* @.str.7, i64 0, i64 0), i64 256, i1 false) #13
  store i32 2, i32* getelementptr inbounds ([10 x %struct.ExtensionProperties], [10 x %struct.ExtensionProperties]* @_ZL27instanceExtensionProperties, i64 0, i64 5, i32 0, i32 1), align 8
  store i8 1, i8* getelementptr inbounds ([10 x %struct.ExtensionProperties], [10 x %struct.ExtensionProperties]* @_ZL27instanceExtensionProperties, i64 0, i64 5, i32 1), align 4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 getelementptr inbounds ([10 x %struct.ExtensionProperties], [10 x %struct.ExtensionProperties]* @_ZL27instanceExtensionProperties, i64 0, i64 6, i32 0, i32 0, i64 0), i8* align 1 getelementptr inbounds ([256 x i8], [256 x i8]* @.str.8, i64 0, i64 0), i64 256, i1 false) #13
  store i32 1, i32* getelementptr inbounds ([10 x %struct.ExtensionProperties], [10 x %struct.ExtensionProperties]* @_ZL27instanceExtensionProperties, i64 0, i64 6, i32 0, i32 1), align 16
  store i8 1, i8* getelementptr inbounds ([10 x %struct.ExtensionProperties], [10 x %struct.ExtensionProperties]* @_ZL27instanceExtensionProperties, i64 0, i64 6, i32 1), align 4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 getelementptr inbounds ([10 x %struct.ExtensionProperties], [10 x %struct.ExtensionProperties]* @_ZL27instanceExtensionProperties, i64 0, i64 7, i32 0, i32 0, i64 0), i8* align 1 getelementptr inbounds ([256 x i8], [256 x i8]* @.str.9, i64 0, i64 0), i64 256, i1 false) #13
  store i32 25, i32* getelementptr inbounds ([10 x %struct.ExtensionProperties], [10 x %struct.ExtensionProperties]* @_ZL27instanceExtensionProperties, i64 0, i64 7, i32 0, i32 1), align 8
  store i8 1, i8* getelementptr inbounds ([10 x %struct.ExtensionProperties], [10 x %struct.ExtensionProperties]* @_ZL27instanceExtensionProperties, i64 0, i64 7, i32 1), align 4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 getelementptr inbounds ([10 x %struct.ExtensionProperties], [10 x %struct.ExtensionProperties]* @_ZL27instanceExtensionProperties, i64 0, i64 8, i32 0, i32 0, i64 0), i8* align 1 getelementptr inbounds ([256 x i8], [256 x i8]* @.str.10, i64 0, i64 0), i64 256, i1 false) #13
  store i32 6, i32* getelementptr inbounds ([10 x %struct.ExtensionProperties], [10 x %struct.ExtensionProperties]* @_ZL27instanceExtensionProperties, i64 0, i64 8, i32 0, i32 1), align 16
  %1 = tail call zeroext i1 @_ZN2vk13XcbSurfaceKHR9hasLibXCBEv() #12
  %2 = zext i1 %1 to i8
  store i8 %2, i8* getelementptr inbounds ([10 x %struct.ExtensionProperties], [10 x %struct.ExtensionProperties]* @_ZL27instanceExtensionProperties, i64 0, i64 8, i32 1), align 4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 getelementptr inbounds ([10 x %struct.ExtensionProperties], [10 x %struct.ExtensionProperties]* @_ZL27instanceExtensionProperties, i64 0, i64 9, i32 0, i32 0, i64 0), i8* align 1 getelementptr inbounds ([256 x i8], [256 x i8]* @.str.11, i64 0, i64 0), i64 256, i1 false) #13
  store i32 6, i32* getelementptr inbounds ([10 x %struct.ExtensionProperties], [10 x %struct.ExtensionProperties]* @_ZL27instanceExtensionProperties, i64 0, i64 9, i32 0, i32 1), align 8
  %3 = tail call %struct.LibX11exports* @_ZN6LibX1111loadExportsEv(%class.LibX11* nonnull @libX11) #12
  %4 = icmp ne %struct.LibX11exports* %3, null
  %5 = zext i1 %4 to i8
  store i8 %5, i8* getelementptr inbounds ([10 x %struct.ExtensionProperties], [10 x %struct.ExtensionProperties]* @_ZL27instanceExtensionProperties, i64 0, i64 9, i32 1), align 4
  %6 = tail call {}* @llvm.invariant.start.p0i8(i64 2640, i8* getelementptr inbounds ([10 x %struct.ExtensionProperties], [10 x %struct.ExtensionProperties]* @_ZL27instanceExtensionProperties, i64 0, i64 0, i32 0, i32 0, i64 0)) #13
  ret void
}

attributes #0 = { nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree norecurse nounwind optsize ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { norecurse nounwind optsize readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind }
attributes #6 = { noreturn optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree nounwind optsize readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { inlinehint nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind optsize }
attributes #13 = { nounwind }
attributes #14 = { builtin nounwind optsize }
attributes #15 = { nounwind optsize readonly }
attributes #16 = { optsize }
attributes #17 = { noreturn nounwind optsize }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 1048575}
!3 = !{i8 0, i8 2}
