; ModuleID = '../../third_party/freetype/src/src/sfnt/sfnt.c'
source_filename = "../../third_party/freetype/src/src/sfnt/sfnt.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.SFNT_Interface_ = type { i32 (%struct.TT_FaceRec_*, i64, %struct.FT_StreamRec_*, i64*)*, i32 (%struct.FT_StreamRec_*, %struct.TT_FaceRec_*, i32, i32, %struct.FT_Parameter_*)*, i32 (%struct.FT_StreamRec_*, %struct.TT_FaceRec_*, i32, i32, %struct.FT_Parameter_*)*, void (%struct.TT_FaceRec_*)*, i8* (%struct.FT_ModuleRec_*, i8*)*, i32 (%struct.TT_FaceRec_*, i64, i64, i8*, i64*)*, i32 (%struct.TT_FaceRec_*, %struct.FT_StreamRec_*)*, i32 (%struct.TT_FaceRec_*, %struct.FT_StreamRec_*, i8)*, i32 (%struct.TT_FaceRec_*, %struct.FT_StreamRec_*)*, i32 (%struct.TT_FaceRec_*, %struct.FT_StreamRec_*)*, i32 (%struct.TT_FaceRec_*, %struct.FT_StreamRec_*)*, i32 (%struct.TT_FaceRec_*, %struct.FT_StreamRec_*)*, i32 (%struct.TT_FaceRec_*, %struct.FT_StreamRec_*)*, void (%struct.TT_FaceRec_*)*, i32 (%struct.TT_FaceRec_*, %struct.FT_StreamRec_*)*, i32 (%struct.TT_FaceRec_*, %struct.FT_StreamRec_*)*, i32 (%struct.TT_FaceRec_*, %struct.FT_StreamRec_*)*, i32 (%struct.TT_FaceRec_*, %struct.FT_StreamRec_*)*, i32 (%struct.TT_FaceRec_*, i64, i32, i32, %struct.FT_StreamRec_*, %struct.FT_Bitmap_*, %struct.TT_SBit_MetricsRec_*)*, i32 (%struct.TT_FaceRec_*, i32, i8**)*, void (%struct.TT_FaceRec_*)*, i32 (%struct.TT_FaceRec_*, i32, i32)*, i32 (%struct.TT_FaceRec_*, %struct.FT_StreamRec_*)*, i32 (%struct.TT_FaceRec_*, %struct.FT_StreamRec_*, i8)*, i32 (%struct.TT_FaceRec_*, %struct.FT_StreamRec_*)*, void (%struct.TT_FaceRec_*)*, i32 (%struct.TT_FaceRec_*, %struct.FT_Size_RequestRec_*, i64*)*, i32 (%struct.TT_FaceRec_*, i64, %struct.FT_Size_Metrics_*)*, i32 (%struct.TT_FaceRec_*, %struct.FT_StreamRec_*)*, i32 (%struct.TT_FaceRec_*, %struct.FT_StreamRec_*)*, void (%struct.TT_FaceRec_*)*, void (%struct.TT_FaceRec_*)*, i32 (%struct.TT_FaceRec_*, i32)*, i8 (%struct.TT_FaceRec_*, i32, i32*, i32*, %struct.FT_LayerIterator_*)*, i8 (%struct.TT_FaceRec_*, i32, i32, %struct.FT_Opaque_Paint_*)*, i8 (%struct.TT_FaceRec_*, %struct.FT_LayerIterator_*, %struct.FT_Opaque_Paint_*)*, i8 (%struct.TT_FaceRec_*, %struct.FT_ColorStop_*, %struct.FT_ColorStopIterator_*)*, i8 (%struct.TT_FaceRec_*, i8*, i8, %struct.FT_COLR_Paint_*)*, i32 (%struct.TT_FaceRec_*, i32, %struct.FT_GlyphSlotRec_*, %struct.FT_GlyphSlotRec_*)*, void (%struct.TT_FaceRec_*, i8, i32, i16*, i16*)*, i32 (%struct.TT_FaceRec_*, i16, i8**)*, i8 (%struct.TT_FaceRec_*, i16, i32*, i32*)* }
%struct.TT_FaceRec_ = type { %struct.FT_FaceRec_, %struct.TTC_HeaderRec_, i64, i16, %struct.TT_TableRec_*, %struct.TT_Header_, %struct.TT_HoriHeader_, %struct.TT_MaxProfile_, i8, %struct.TT_VertHeader_, i16, %struct.TT_NameTableRec_, %struct.TT_OS2_, %struct.TT_Postscript_, i8*, i64, {}*, i32 (%struct.TT_LoaderRec_*, i32, i64, i32)*, void (%struct.TT_LoaderRec_*)*, i32 (%struct.TT_LoaderRec_*)*, i32 (%struct.TT_LoaderRec_*)*, i32 (%struct.TT_LoaderRec_*)*, i8*, i8*, i8*, i8*, i8*, %struct.TT_Gasp_, %struct.TT_PCLT_, i64, %struct.TT_SBit_ScaleRec_*, %struct.TT_Post_NamesRec_, %struct.FT_Palette_Data_, i16, %struct.FT_Color_*, i8, %struct.FT_Color_, i64, i8*, i64, i8*, i64, i32*, i32 (i8*)*, %struct.FT_Generic_, i8*, i64, i64, i8, i8, %struct.GX_BlendRec_*, i32, i8*, i32, i64, i64, i64, i8*, i8*, i64, i32, i64, i8*, i8*, i64, i32, i32, i32*, i8*, i64, i32, i32, i32, i64, i64, i64, i64, i8*, i8* }
%struct.FT_FaceRec_ = type { i64, i64, i64, i64, i64, i8*, i8*, i32, %struct.FT_Bitmap_Size_*, i32, %struct.FT_CharMapRec_**, %struct.FT_Generic_, %struct.FT_BBox_, i16, i16, i16, i16, i16, i16, i16, i16, %struct.FT_GlyphSlotRec_*, %struct.FT_SizeRec_*, %struct.FT_CharMapRec_*, %struct.FT_DriverRec_*, %struct.FT_MemoryRec_*, %struct.FT_StreamRec_*, %struct.FT_ListRec_, %struct.FT_Generic_, i8*, %struct.FT_Face_InternalRec_* }
%struct.FT_Bitmap_Size_ = type { i16, i16, i64, i64, i64 }
%struct.FT_BBox_ = type { i64, i64, i64, i64 }
%struct.FT_GlyphSlotRec_ = type { %struct.FT_LibraryRec_*, %struct.FT_FaceRec_*, %struct.FT_GlyphSlotRec_*, i32, %struct.FT_Generic_, %struct.FT_Glyph_Metrics_, i64, i64, %struct.FT_Vector_, i32, %struct.FT_Bitmap_, i32, i32, %struct.FT_Outline_, i32, %struct.FT_SubGlyphRec_*, i8*, i64, i64, i64, i8*, %struct.FT_Slot_InternalRec_* }
%struct.FT_LibraryRec_ = type { %struct.FT_MemoryRec_*, i32, i32, i32, i32, [32 x %struct.FT_ModuleRec_*], %struct.FT_ListRec_, %struct.FT_RendererRec_*, %struct.FT_ModuleRec_*, [4 x i32 (i8*)*], [5 x i8], void (%struct.FT_Bitmap_*, i8*)*, i32 }
%struct.FT_RendererRec_ = type { %struct.FT_ModuleRec_, %struct.FT_Renderer_Class_*, i32, %struct.FT_Glyph_Class_, %struct.FT_RasterRec_*, i32 (%struct.FT_RasterRec_*, %struct.FT_Raster_Params_*)*, i32 (%struct.FT_RendererRec_*, %struct.FT_GlyphSlotRec_*, i32, %struct.FT_Vector_*)* }
%struct.FT_ModuleRec_ = type { %struct.FT_Module_Class_*, %struct.FT_LibraryRec_*, %struct.FT_MemoryRec_* }
%struct.FT_Module_Class_ = type { i64, i64, i8*, i64, i64, i8*, i32 (%struct.FT_ModuleRec_*)*, void (%struct.FT_ModuleRec_*)*, i8* (%struct.FT_ModuleRec_*, i8*)* }
%struct.FT_Renderer_Class_ = type { %struct.FT_Module_Class_, i32, i32 (%struct.FT_RendererRec_*, %struct.FT_GlyphSlotRec_*, i32, %struct.FT_Vector_*)*, i32 (%struct.FT_RendererRec_*, %struct.FT_GlyphSlotRec_*, %struct.FT_Matrix_*, %struct.FT_Vector_*)*, void (%struct.FT_RendererRec_*, %struct.FT_GlyphSlotRec_*, %struct.FT_BBox_*)*, i32 (%struct.FT_RendererRec_*, i64, i8*)*, %struct.FT_Raster_Funcs_* }
%struct.FT_Matrix_ = type { i64, i64, i64, i64 }
%struct.FT_Raster_Funcs_ = type { i32, i32 (i8*, %struct.FT_RasterRec_**)*, void (%struct.FT_RasterRec_*, i8*, i64)*, i32 (%struct.FT_RasterRec_*, i64, i8*)*, i32 (%struct.FT_RasterRec_*, %struct.FT_Raster_Params_*)*, void (%struct.FT_RasterRec_*)* }
%struct.FT_Glyph_Class_ = type { i64, i32, i32 (%struct.FT_GlyphRec_*, %struct.FT_GlyphSlotRec_*)*, void (%struct.FT_GlyphRec_*)*, i32 (%struct.FT_GlyphRec_*, %struct.FT_GlyphRec_*)*, void (%struct.FT_GlyphRec_*, %struct.FT_Matrix_*, %struct.FT_Vector_*)*, void (%struct.FT_GlyphRec_*, %struct.FT_BBox_*)*, i32 (%struct.FT_GlyphRec_*, %struct.FT_GlyphSlotRec_*)* }
%struct.FT_GlyphRec_ = type { %struct.FT_LibraryRec_*, %struct.FT_Glyph_Class_*, i32, %struct.FT_Vector_ }
%struct.FT_RasterRec_ = type opaque
%struct.FT_Raster_Params_ = type { %struct.FT_Bitmap_*, i8*, i32, void (i32, i32, %struct.FT_Span_*, i8*)*, void (i32, i32, %struct.FT_Span_*, i8*)*, i32 (i32, i32, i8*)*, void (i32, i32, i8*)*, i8*, %struct.FT_BBox_ }
%struct.FT_Span_ = type { i16, i16, i8 }
%struct.FT_Glyph_Metrics_ = type { i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.FT_Vector_ = type { i64, i64 }
%struct.FT_Bitmap_ = type { i32, i32, i32, i8*, i16, i8, i8, i8* }
%struct.FT_Outline_ = type { i16, i16, %struct.FT_Vector_*, i8*, i16*, i32 }
%struct.FT_SubGlyphRec_ = type { i32, i16, i32, i32, %struct.FT_Matrix_ }
%struct.FT_Slot_InternalRec_ = type { %struct.FT_GlyphLoaderRec_*, i32, i8, %struct.FT_Matrix_, %struct.FT_Vector_, i8*, i32 }
%struct.FT_GlyphLoaderRec_ = type { %struct.FT_MemoryRec_*, i32, i32, i32, i8, %struct.FT_GlyphLoadRec_, %struct.FT_GlyphLoadRec_, i8* }
%struct.FT_GlyphLoadRec_ = type { %struct.FT_Outline_, %struct.FT_Vector_*, %struct.FT_Vector_*, i32, %struct.FT_SubGlyphRec_* }
%struct.FT_SizeRec_ = type { %struct.FT_FaceRec_*, %struct.FT_Generic_, %struct.FT_Size_Metrics_, %struct.FT_Size_InternalRec_* }
%struct.FT_Size_Metrics_ = type { i16, i16, i64, i64, i64, i64, i64, i64 }
%struct.FT_Size_InternalRec_ = type { i8*, i32, %struct.FT_Size_Metrics_ }
%struct.FT_CharMapRec_ = type { %struct.FT_FaceRec_*, i32, i16, i16 }
%struct.FT_DriverRec_ = type { %struct.FT_ModuleRec_, %struct.FT_Driver_ClassRec_*, %struct.FT_ListRec_, %struct.FT_GlyphLoaderRec_* }
%struct.FT_Driver_ClassRec_ = type { %struct.FT_Module_Class_, i64, i64, i64, i32 (%struct.FT_StreamRec_*, %struct.FT_FaceRec_*, i32, i32, %struct.FT_Parameter_*)*, void (%struct.FT_FaceRec_*)*, i32 (%struct.FT_SizeRec_*)*, void (%struct.FT_SizeRec_*)*, i32 (%struct.FT_GlyphSlotRec_*)*, void (%struct.FT_GlyphSlotRec_*)*, i32 (%struct.FT_GlyphSlotRec_*, %struct.FT_SizeRec_*, i32, i32)*, i32 (%struct.FT_FaceRec_*, i32, i32, %struct.FT_Vector_*)*, i32 (%struct.FT_FaceRec_*, %struct.FT_StreamRec_*)*, i32 (%struct.FT_FaceRec_*, i32, i32, i32, i64*)*, i32 (%struct.FT_SizeRec_*, %struct.FT_Size_RequestRec_*)*, i32 (%struct.FT_SizeRec_*, i64)* }
%struct.FT_Parameter_ = type { i64, i8* }
%struct.FT_Size_RequestRec_ = type { i32, i64, i64, i32, i32 }
%struct.FT_MemoryRec_ = type { i8*, i8* (%struct.FT_MemoryRec_*, i64)*, void (%struct.FT_MemoryRec_*, i8*)*, i8* (%struct.FT_MemoryRec_*, i64, i64, i8*)* }
%struct.FT_ListRec_ = type { %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_* }
%struct.FT_ListNodeRec_ = type { %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_*, i8* }
%struct.FT_Face_InternalRec_ = type { %struct.FT_Matrix_, %struct.FT_Vector_, i32, %struct.FT_ServiceCacheRec_, %struct.FT_Incremental_InterfaceRec_*, i8, i32, [5 x i8], void (%struct.FT_Bitmap_*, i8*)*, i32 }
%struct.FT_ServiceCacheRec_ = type { i8*, i8*, i8*, i8*, i8*, i8* }
%struct.FT_Incremental_InterfaceRec_ = type { %struct.FT_Incremental_FuncsRec_*, %struct.FT_IncrementalRec_* }
%struct.FT_Incremental_FuncsRec_ = type { i32 (%struct.FT_IncrementalRec_*, i32, %struct.FT_Data_*)*, void (%struct.FT_IncrementalRec_*, %struct.FT_Data_*)*, i32 (%struct.FT_IncrementalRec_*, i32, i8, %struct.FT_Incremental_MetricsRec_*)* }
%struct.FT_Data_ = type { i8*, i32 }
%struct.FT_Incremental_MetricsRec_ = type { i64, i64, i64, i64 }
%struct.FT_IncrementalRec_ = type opaque
%struct.TTC_HeaderRec_ = type { i64, i64, i64, i64* }
%struct.TT_TableRec_ = type { i64, i64, i64, i64 }
%struct.TT_Header_ = type { i64, i64, i64, i64, i16, i16, [2 x i64], [2 x i64], i16, i16, i16, i16, i16, i16, i16, i16, i16 }
%struct.TT_HoriHeader_ = type { i64, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, [4 x i16], i16, i16, i8*, i8* }
%struct.TT_MaxProfile_ = type { i64, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 }
%struct.TT_VertHeader_ = type { i64, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, [4 x i16], i16, i16, i8*, i8* }
%struct.TT_NameTableRec_ = type { i16, i32, i32, %struct.TT_NameRec_*, i32, %struct.TT_LangTagRec_*, %struct.FT_StreamRec_* }
%struct.TT_NameRec_ = type { i16, i16, i16, i16, i16, i64, i8* }
%struct.TT_LangTagRec_ = type { i16, i64, i8* }
%struct.TT_OS2_ = type { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, [10 x i8], i64, i64, i64, i64, [4 x i8], i16, i16, i16, i16, i16, i16, i16, i16, i64, i64, i16, i16, i16, i16, i16, i16, i16 }
%struct.TT_Postscript_ = type { i64, i64, i16, i16, i64, i64, i64, i64, i64 }
%struct.TT_LoaderRec_ = type { %struct.TT_FaceRec_*, %struct.TT_SizeRec_*, %struct.FT_GlyphSlotRec_*, %struct.FT_GlyphLoaderRec_*, i64, i32, %struct.FT_StreamRec_*, i32, i16, %struct.FT_BBox_, i32, i32, i32, i8, %struct.FT_Vector_, %struct.FT_Vector_, %struct.TT_GlyphZoneRec_, %struct.TT_GlyphZoneRec_, %struct.TT_ExecContextRec_*, i8*, i64, i8*, i32, i32, %struct.FT_Vector_, %struct.FT_Vector_, i8*, i8*, %struct.FT_ListRec_ }
%struct.TT_SizeRec_ = type opaque
%struct.TT_GlyphZoneRec_ = type { %struct.FT_MemoryRec_*, i16, i16, i16, i16, %struct.FT_Vector_*, %struct.FT_Vector_*, %struct.FT_Vector_*, i8*, i16*, i16 }
%struct.TT_ExecContextRec_ = type opaque
%struct.TT_Gasp_ = type { i16, i16, %struct.TT_GaspRangeRec_* }
%struct.TT_GaspRangeRec_ = type { i16, i16 }
%struct.TT_PCLT_ = type { i64, i64, i16, i16, i16, i16, i16, i16, [16 x i8], [8 x i8], [6 x i8], i8, i8, i8, i8 }
%struct.TT_SBit_ScaleRec_ = type { %struct.TT_SBit_LineMetricsRec_, %struct.TT_SBit_LineMetricsRec_, i8, i8, i8, i8 }
%struct.TT_SBit_LineMetricsRec_ = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [2 x i8] }
%struct.TT_Post_NamesRec_ = type { i8, %union.anon }
%union.anon = type { %struct.TT_Post_20Rec_ }
%struct.TT_Post_20Rec_ = type { i16, i16, i16*, i8** }
%struct.FT_Palette_Data_ = type { i16, i16*, i16*, i16, i16* }
%struct.FT_Color_ = type { i8, i8, i8, i8 }
%struct.FT_Generic_ = type { i8*, void (i8*)* }
%struct.GX_BlendRec_ = type opaque
%struct.FT_StreamRec_ = type { i8*, i64, i64, %union.FT_StreamDesc_, %union.FT_StreamDesc_, i64 (%struct.FT_StreamRec_*, i64, i8*, i64)*, void (%struct.FT_StreamRec_*)*, %struct.FT_MemoryRec_*, i8*, i8* }
%union.FT_StreamDesc_ = type { i64 }
%struct.TT_SBit_MetricsRec_ = type { i16, i16, i16, i16, i16, i16, i16, i16 }
%struct.FT_LayerIterator_ = type { i32, i32, i8* }
%struct.FT_Opaque_Paint_ = type { i8*, i8 }
%struct.FT_ColorStop_ = type { i16, %struct.FT_ColorIndex_ }
%struct.FT_ColorIndex_ = type { i16, i16 }
%struct.FT_ColorStopIterator_ = type { i32, i32, i8* }
%struct.FT_COLR_Paint_ = type { i32, %union.anon.0 }
%union.anon.0 = type { %struct.FT_PaintLinearGradient_ }
%struct.FT_PaintLinearGradient_ = type { %struct.FT_ColorLine_, %struct.FT_Vector_, %struct.FT_Vector_, %struct.FT_Vector_ }
%struct.FT_ColorLine_ = type { i32, %struct.FT_ColorStopIterator_ }
%struct.FT_CMapRec_ = type { %struct.FT_CharMapRec_, %struct.FT_CMap_ClassRec_* }
%struct.FT_CMap_ClassRec_ = type { i64, {}*, void (%struct.FT_CMapRec_*)*, i32 (%struct.FT_CMapRec_*, i32)*, i32 (%struct.FT_CMapRec_*, i32*)*, i32 (%struct.FT_CMapRec_*, %struct.FT_CMapRec_*, i32, i32)*, i32 (%struct.FT_CMapRec_*, i32, i32)*, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*)*, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*, i32)*, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*, i32)* }
%struct.FT_ValidatorRec_ = type { [1 x %struct.__jmp_buf_tag], i8*, i8*, i32, i32 }
%struct.__jmp_buf_tag = type { [8 x i64], i32, %struct.__sigset_t }
%struct.__sigset_t = type { [16 x i64] }
%struct.TT_CMapInfo_ = type { i64, i64 }
%struct.FT_Frame_Field_ = type { i8, i8, i16 }
%struct.TT_CMap_ClassRec_ = type { %struct.FT_CMap_ClassRec_, i32, i32 (i8*, %struct.FT_ValidatorRec_*)*, i32 (%struct.FT_CharMapRec_*, %struct.TT_CMapInfo_*)* }
%struct.TEncoding_ = type { i32, i32, i32 }
%struct.FT_ServiceDescRec_ = type { i8*, i8* }
%struct.FT_Service_SFNT_TableRec_ = type { i32 (%struct.FT_FaceRec_*, i64, i64, i8*, i64*)*, i8* (%struct.FT_FaceRec_*, i32)*, i32 (%struct.FT_FaceRec_*, i32, i64*, i64*, i64*)* }
%struct.FT_Service_PsFontNameRec_ = type { i8* (%struct.FT_FaceRec_*)* }
%struct.FT_Service_GlyphDictRec_ = type { i32 (%struct.FT_FaceRec_*, i32, i8*, i32)*, i32 (%struct.FT_FaceRec_*, i8*)* }
%struct.FT_Service_TTCMapsRec_ = type { i32 (%struct.FT_CharMapRec_*, %struct.TT_CMapInfo_*)* }
%struct.TT_CMapRec_ = type { %struct.FT_CMapRec_, i8*, i32 }
%struct.TT_CMap4Rec_ = type { %struct.TT_CMapRec_, i32, i32, i32, i32, i32, i32, i32, i8* }
%struct.TT_CMap12Rec_ = type { %struct.TT_CMapRec_, i8, i64, i32, i64, i64 }
%struct.TT_CMap13Rec_ = type { %struct.TT_CMapRec_, i8, i64, i32, i64, i64 }
%struct.TT_CMap14Rec_ = type { %struct.TT_CMapRec_, i64, i32, i32*, %struct.FT_MemoryRec_* }
%struct.PS_UnicodesRec_ = type { %struct.FT_CMapRec_, i32, %struct.PS_UniMap_* }
%struct.PS_UniMap_ = type { i32, i32 }
%struct.FT_Service_PsCMapsRec_ = type { i32 (i8*)*, i32 (%struct.FT_MemoryRec_*, %struct.PS_UnicodesRec_*, i32, i8* (i8*, i32)*, void (i8*, i8*)*, i8*)*, i32 (%struct.PS_UnicodesRec_*, i32)*, i32 (%struct.PS_UnicodesRec_*, i32*)*, i8* (i32)*, i8* (i32)*, i16*, i16* }
%struct.TT_SBitDecoderRec_ = type { %struct.TT_FaceRec_*, %struct.FT_StreamRec_*, %struct.FT_Bitmap_*, %struct.TT_SBit_MetricsRec_*, i8, i8, i8, i64, i64, i64, i64, i8*, i8* }
%struct.SFNT_HeaderRec_ = type { i64, i16, i16, i16, i16, i64 }
%struct.Cpal_ = type { i16, i16, i8*, i8*, i8*, i64 }
%struct.Colr_ = type { i16, i16, i16, i8*, i8*, i64, i8*, i64, i8*, i8*, i64 }
%struct.FT_Service_MetricsVariationsRec_ = type { i32 (%struct.FT_FaceRec_*, i32, i32*)*, i32 (%struct.FT_FaceRec_*, i32, i32*)*, i32 (%struct.FT_FaceRec_*, i32, i32*)*, i32 (%struct.FT_FaceRec_*, i32, i32*)*, i32 (%struct.FT_FaceRec_*, i32, i32*)*, i32 (%struct.FT_FaceRec_*, i32, i32*)*, i32 (%struct.FT_FaceRec_*, i32, i32*)*, void (%struct.FT_FaceRec_*)* }
%struct.WOFF2_HeaderRec_ = type { i64, i64, i64, i16, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i16, i64, %struct.WOFF2_TtcFontRec_* }
%struct.WOFF2_TtcFontRec_ = type { i64, i16, i16* }
%struct.WOFF_HeaderRec_ = type { i64, i64, i64, i16, i16, i64, i16, i16, i64, i64, i64, i64, i64 }
%struct.WOFF_TableRec_ = type { i64, i64, i64, i64, i64, i64 }
%struct.WOFF2_TableRec_ = type { i8, i64, i64, i64, i64, i64, i64, i64 }
%struct.WOFF2_SubstreamRec_ = type { i64, i64, i64 }
%struct.WOFF2_PointRec_ = type { i32, i32, i8 }
%struct.TT_ValidatorRec_ = type { %struct.FT_ValidatorRec_, i32 }
%struct.png_struct_def = type opaque
%struct.png_info_def = type opaque
%struct.png_row_info_struct = type { i32, i64, i8, i8, i8, i8 }
%struct.FT_MM_Var_ = type { i32, i32, i32, %struct.FT_Var_Axis_*, %struct.FT_Var_Named_Style_* }
%struct.FT_Var_Axis_ = type { i8*, i64, i64, i64, i64, i32 }
%struct.FT_Var_Named_Style_ = type { i64*, i32, i32 }
%struct.FT_Service_MultiMastersRec_ = type { i32 (%struct.FT_FaceRec_*, %struct.FT_Multi_Master_*)*, i32 (%struct.FT_FaceRec_*, i32, i64*)*, i32 (%struct.FT_FaceRec_*, i32, i64*)*, i32 (%struct.FT_FaceRec_*, i32, i64*)*, i32 (%struct.FT_FaceRec_*, %struct.FT_MM_Var_**)*, i32 (%struct.FT_FaceRec_*, i32, i64*)*, i32 (%struct.FT_FaceRec_*, i32, i64*)*, i32 (%struct.FT_FaceRec_*, i32)*, i32 (%struct.FT_FaceRec_*, i32, i64*)*, i32 (%struct.FT_FaceRec_*, i32*, i64*)*, i32 (%struct.FT_FaceRec_*, i32*, i64**, i64**, %struct.FT_MM_Var_**)*, void (%struct.FT_FaceRec_*)* }
%struct.FT_Multi_Master_ = type { i32, i32, [4 x %struct.FT_MM_Axis_] }
%struct.FT_MM_Axis_ = type { i8*, i64, i64 }

@.str = private unnamed_addr constant [5 x i8] c"sfnt\00", align 1
@sfnt_interface = internal constant %struct.SFNT_Interface_ { i32 (%struct.TT_FaceRec_*, i64, %struct.FT_StreamRec_*, i64*)* @tt_face_goto_table, i32 (%struct.FT_StreamRec_*, %struct.TT_FaceRec_*, i32, i32, %struct.FT_Parameter_*)* @sfnt_init_face, i32 (%struct.FT_StreamRec_*, %struct.TT_FaceRec_*, i32, i32, %struct.FT_Parameter_*)* @sfnt_load_face, void (%struct.TT_FaceRec_*)* @sfnt_done_face, i8* (%struct.FT_ModuleRec_*, i8*)* @sfnt_get_interface, i32 (%struct.TT_FaceRec_*, i64, i64, i8*, i64*)* @tt_face_load_any, i32 (%struct.TT_FaceRec_*, %struct.FT_StreamRec_*)* @tt_face_load_head, i32 (%struct.TT_FaceRec_*, %struct.FT_StreamRec_*, i8)* @tt_face_load_hhea, i32 (%struct.TT_FaceRec_*, %struct.FT_StreamRec_*)* @tt_face_load_cmap, i32 (%struct.TT_FaceRec_*, %struct.FT_StreamRec_*)* @tt_face_load_maxp, i32 (%struct.TT_FaceRec_*, %struct.FT_StreamRec_*)* @tt_face_load_os2, i32 (%struct.TT_FaceRec_*, %struct.FT_StreamRec_*)* @tt_face_load_post, i32 (%struct.TT_FaceRec_*, %struct.FT_StreamRec_*)* @tt_face_load_name, void (%struct.TT_FaceRec_*)* @tt_face_free_name, i32 (%struct.TT_FaceRec_*, %struct.FT_StreamRec_*)* @tt_face_load_kern, i32 (%struct.TT_FaceRec_*, %struct.FT_StreamRec_*)* @tt_face_load_gasp, i32 (%struct.TT_FaceRec_*, %struct.FT_StreamRec_*)* @tt_face_load_pclt, i32 (%struct.TT_FaceRec_*, %struct.FT_StreamRec_*)* @tt_face_load_bhed, i32 (%struct.TT_FaceRec_*, i64, i32, i32, %struct.FT_StreamRec_*, %struct.FT_Bitmap_*, %struct.TT_SBit_MetricsRec_*)* @tt_face_load_sbit_image, i32 (%struct.TT_FaceRec_*, i32, i8**)* @tt_face_get_ps_name, void (%struct.TT_FaceRec_*)* @tt_face_free_ps_names, i32 (%struct.TT_FaceRec_*, i32, i32)* @tt_face_get_kerning, i32 (%struct.TT_FaceRec_*, %struct.FT_StreamRec_*)* @tt_face_load_font_dir, i32 (%struct.TT_FaceRec_*, %struct.FT_StreamRec_*, i8)* @tt_face_load_hmtx, i32 (%struct.TT_FaceRec_*, %struct.FT_StreamRec_*)* @tt_face_load_sbit, void (%struct.TT_FaceRec_*)* @tt_face_free_sbit, i32 (%struct.TT_FaceRec_*, %struct.FT_Size_RequestRec_*, i64*)* @tt_face_set_sbit_strike, i32 (%struct.TT_FaceRec_*, i64, %struct.FT_Size_Metrics_*)* @tt_face_load_strike_metrics, i32 (%struct.TT_FaceRec_*, %struct.FT_StreamRec_*)* @tt_face_load_cpal, i32 (%struct.TT_FaceRec_*, %struct.FT_StreamRec_*)* @tt_face_load_colr, void (%struct.TT_FaceRec_*)* @tt_face_free_cpal, void (%struct.TT_FaceRec_*)* @tt_face_free_colr, i32 (%struct.TT_FaceRec_*, i32)* @tt_face_palette_set, i8 (%struct.TT_FaceRec_*, i32, i32*, i32*, %struct.FT_LayerIterator_*)* @tt_face_get_colr_layer, i8 (%struct.TT_FaceRec_*, i32, i32, %struct.FT_Opaque_Paint_*)* @tt_face_get_colr_glyph_paint, i8 (%struct.TT_FaceRec_*, %struct.FT_LayerIterator_*, %struct.FT_Opaque_Paint_*)* @tt_face_get_paint_layers, i8 (%struct.TT_FaceRec_*, %struct.FT_ColorStop_*, %struct.FT_ColorStopIterator_*)* @tt_face_get_colorline_stops, i8 (%struct.TT_FaceRec_*, i8*, i8, %struct.FT_COLR_Paint_*)* @tt_face_get_paint, i32 (%struct.TT_FaceRec_*, i32, %struct.FT_GlyphSlotRec_*, %struct.FT_GlyphSlotRec_*)* @tt_face_colr_blend_layer, void (%struct.TT_FaceRec_*, i8, i32, i16*, i16*)* @tt_face_get_metrics, i32 (%struct.TT_FaceRec_*, i16, i8**)* @tt_face_get_name, i8 (%struct.TT_FaceRec_*, i16, i32*, i32*)* @sfnt_get_name_id }, align 8
@sfnt_module_class = hidden local_unnamed_addr constant %struct.FT_Module_Class_ { i64 0, i64 24, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0), i64 65536, i64 131072, i8* bitcast (%struct.SFNT_Interface_* @sfnt_interface to i8*), i32 (%struct.FT_ModuleRec_*)* null, void (%struct.FT_ModuleRec_*)* null, i8* (%struct.FT_ModuleRec_*, i8*)* @sfnt_get_interface }, align 8
@tt_cmap0_class_rec = hidden constant { { i64, i32 (%struct.FT_CMapRec_*, i8*)*, void (%struct.FT_CMapRec_*)*, i32 (%struct.FT_CMapRec_*, i32)*, i32 (%struct.FT_CMapRec_*, i32*)*, i32 (%struct.FT_CMapRec_*, %struct.FT_CMapRec_*, i32, i32)*, i32 (%struct.FT_CMapRec_*, i32, i32)*, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*)*, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*, i32)*, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*, i32)* }, i32, i32 (i8*, %struct.FT_ValidatorRec_*)*, i32 (%struct.FT_CharMapRec_*, %struct.TT_CMapInfo_*)* } { { i64, i32 (%struct.FT_CMapRec_*, i8*)*, void (%struct.FT_CMapRec_*)*, i32 (%struct.FT_CMapRec_*, i32)*, i32 (%struct.FT_CMapRec_*, i32*)*, i32 (%struct.FT_CMapRec_*, %struct.FT_CMapRec_*, i32, i32)*, i32 (%struct.FT_CMapRec_*, i32, i32)*, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*)*, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*, i32)*, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*, i32)* } { i64 40, i32 (%struct.FT_CMapRec_*, i8*)* bitcast (i32 (%struct.TT_CMapRec_*, i8*)* @tt_cmap_init to i32 (%struct.FT_CMapRec_*, i8*)*), void (%struct.FT_CMapRec_*)* null, i32 (%struct.FT_CMapRec_*, i32)* bitcast (i32 (%struct.TT_CMapRec_*, i32)* @tt_cmap0_char_index to i32 (%struct.FT_CMapRec_*, i32)*), i32 (%struct.FT_CMapRec_*, i32*)* bitcast (i32 (%struct.TT_CMapRec_*, i32*)* @tt_cmap0_char_next to i32 (%struct.FT_CMapRec_*, i32*)*), i32 (%struct.FT_CMapRec_*, %struct.FT_CMapRec_*, i32, i32)* null, i32 (%struct.FT_CMapRec_*, i32, i32)* null, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*)* null, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*, i32)* null, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*, i32)* null }, i32 0, i32 (i8*, %struct.FT_ValidatorRec_*)* @tt_cmap0_validate, i32 (%struct.FT_CharMapRec_*, %struct.TT_CMapInfo_*)* bitcast (i32 (%struct.TT_CMapRec_*, %struct.TT_CMapInfo_*)* @tt_cmap0_get_info to i32 (%struct.FT_CharMapRec_*, %struct.TT_CMapInfo_*)*) }, align 8
@tt_cmap2_class_rec = hidden constant { { i64, i32 (%struct.FT_CMapRec_*, i8*)*, void (%struct.FT_CMapRec_*)*, i32 (%struct.FT_CMapRec_*, i32)*, i32 (%struct.FT_CMapRec_*, i32*)*, i32 (%struct.FT_CMapRec_*, %struct.FT_CMapRec_*, i32, i32)*, i32 (%struct.FT_CMapRec_*, i32, i32)*, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*)*, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*, i32)*, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*, i32)* }, i32, i32 (i8*, %struct.FT_ValidatorRec_*)*, i32 (%struct.FT_CharMapRec_*, %struct.TT_CMapInfo_*)* } { { i64, i32 (%struct.FT_CMapRec_*, i8*)*, void (%struct.FT_CMapRec_*)*, i32 (%struct.FT_CMapRec_*, i32)*, i32 (%struct.FT_CMapRec_*, i32*)*, i32 (%struct.FT_CMapRec_*, %struct.FT_CMapRec_*, i32, i32)*, i32 (%struct.FT_CMapRec_*, i32, i32)*, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*)*, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*, i32)*, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*, i32)* } { i64 40, i32 (%struct.FT_CMapRec_*, i8*)* bitcast (i32 (%struct.TT_CMapRec_*, i8*)* @tt_cmap_init to i32 (%struct.FT_CMapRec_*, i8*)*), void (%struct.FT_CMapRec_*)* null, i32 (%struct.FT_CMapRec_*, i32)* bitcast (i32 (%struct.TT_CMapRec_*, i32)* @tt_cmap2_char_index to i32 (%struct.FT_CMapRec_*, i32)*), i32 (%struct.FT_CMapRec_*, i32*)* bitcast (i32 (%struct.TT_CMapRec_*, i32*)* @tt_cmap2_char_next to i32 (%struct.FT_CMapRec_*, i32*)*), i32 (%struct.FT_CMapRec_*, %struct.FT_CMapRec_*, i32, i32)* null, i32 (%struct.FT_CMapRec_*, i32, i32)* null, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*)* null, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*, i32)* null, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*, i32)* null }, i32 2, i32 (i8*, %struct.FT_ValidatorRec_*)* @tt_cmap2_validate, i32 (%struct.FT_CharMapRec_*, %struct.TT_CMapInfo_*)* bitcast (i32 (%struct.TT_CMapRec_*, %struct.TT_CMapInfo_*)* @tt_cmap2_get_info to i32 (%struct.FT_CharMapRec_*, %struct.TT_CMapInfo_*)*) }, align 8
@tt_cmap4_class_rec = hidden constant { { i64, i32 (%struct.FT_CMapRec_*, i8*)*, void (%struct.FT_CMapRec_*)*, i32 (%struct.FT_CMapRec_*, i32)*, i32 (%struct.FT_CMapRec_*, i32*)*, i32 (%struct.FT_CMapRec_*, %struct.FT_CMapRec_*, i32, i32)*, i32 (%struct.FT_CMapRec_*, i32, i32)*, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*)*, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*, i32)*, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*, i32)* }, i32, i32 (i8*, %struct.FT_ValidatorRec_*)*, i32 (%struct.FT_CharMapRec_*, %struct.TT_CMapInfo_*)* } { { i64, i32 (%struct.FT_CMapRec_*, i8*)*, void (%struct.FT_CMapRec_*)*, i32 (%struct.FT_CMapRec_*, i32)*, i32 (%struct.FT_CMapRec_*, i32*)*, i32 (%struct.FT_CMapRec_*, %struct.FT_CMapRec_*, i32, i32)*, i32 (%struct.FT_CMapRec_*, i32, i32)*, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*)*, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*, i32)*, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*, i32)* } { i64 80, i32 (%struct.FT_CMapRec_*, i8*)* bitcast (i32 (%struct.TT_CMap4Rec_*, i8*)* @tt_cmap4_init to i32 (%struct.FT_CMapRec_*, i8*)*), void (%struct.FT_CMapRec_*)* null, i32 (%struct.FT_CMapRec_*, i32)* bitcast (i32 (%struct.TT_CMapRec_*, i32)* @tt_cmap4_char_index to i32 (%struct.FT_CMapRec_*, i32)*), i32 (%struct.FT_CMapRec_*, i32*)* bitcast (i32 (%struct.TT_CMapRec_*, i32*)* @tt_cmap4_char_next to i32 (%struct.FT_CMapRec_*, i32*)*), i32 (%struct.FT_CMapRec_*, %struct.FT_CMapRec_*, i32, i32)* null, i32 (%struct.FT_CMapRec_*, i32, i32)* null, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*)* null, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*, i32)* null, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*, i32)* null }, i32 4, i32 (i8*, %struct.FT_ValidatorRec_*)* @tt_cmap4_validate, i32 (%struct.FT_CharMapRec_*, %struct.TT_CMapInfo_*)* bitcast (i32 (%struct.TT_CMapRec_*, %struct.TT_CMapInfo_*)* @tt_cmap4_get_info to i32 (%struct.FT_CharMapRec_*, %struct.TT_CMapInfo_*)*) }, align 8
@tt_cmap6_class_rec = hidden constant { { i64, i32 (%struct.FT_CMapRec_*, i8*)*, void (%struct.FT_CMapRec_*)*, i32 (%struct.FT_CMapRec_*, i32)*, i32 (%struct.FT_CMapRec_*, i32*)*, i32 (%struct.FT_CMapRec_*, %struct.FT_CMapRec_*, i32, i32)*, i32 (%struct.FT_CMapRec_*, i32, i32)*, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*)*, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*, i32)*, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*, i32)* }, i32, i32 (i8*, %struct.FT_ValidatorRec_*)*, i32 (%struct.FT_CharMapRec_*, %struct.TT_CMapInfo_*)* } { { i64, i32 (%struct.FT_CMapRec_*, i8*)*, void (%struct.FT_CMapRec_*)*, i32 (%struct.FT_CMapRec_*, i32)*, i32 (%struct.FT_CMapRec_*, i32*)*, i32 (%struct.FT_CMapRec_*, %struct.FT_CMapRec_*, i32, i32)*, i32 (%struct.FT_CMapRec_*, i32, i32)*, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*)*, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*, i32)*, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*, i32)* } { i64 40, i32 (%struct.FT_CMapRec_*, i8*)* bitcast (i32 (%struct.TT_CMapRec_*, i8*)* @tt_cmap_init to i32 (%struct.FT_CMapRec_*, i8*)*), void (%struct.FT_CMapRec_*)* null, i32 (%struct.FT_CMapRec_*, i32)* bitcast (i32 (%struct.TT_CMapRec_*, i32)* @tt_cmap6_char_index to i32 (%struct.FT_CMapRec_*, i32)*), i32 (%struct.FT_CMapRec_*, i32*)* bitcast (i32 (%struct.TT_CMapRec_*, i32*)* @tt_cmap6_char_next to i32 (%struct.FT_CMapRec_*, i32*)*), i32 (%struct.FT_CMapRec_*, %struct.FT_CMapRec_*, i32, i32)* null, i32 (%struct.FT_CMapRec_*, i32, i32)* null, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*)* null, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*, i32)* null, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*, i32)* null }, i32 6, i32 (i8*, %struct.FT_ValidatorRec_*)* @tt_cmap6_validate, i32 (%struct.FT_CharMapRec_*, %struct.TT_CMapInfo_*)* bitcast (i32 (%struct.TT_CMapRec_*, %struct.TT_CMapInfo_*)* @tt_cmap6_get_info to i32 (%struct.FT_CharMapRec_*, %struct.TT_CMapInfo_*)*) }, align 8
@tt_cmap8_class_rec = hidden constant { { i64, i32 (%struct.FT_CMapRec_*, i8*)*, void (%struct.FT_CMapRec_*)*, i32 (%struct.FT_CMapRec_*, i32)*, i32 (%struct.FT_CMapRec_*, i32*)*, i32 (%struct.FT_CMapRec_*, %struct.FT_CMapRec_*, i32, i32)*, i32 (%struct.FT_CMapRec_*, i32, i32)*, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*)*, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*, i32)*, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*, i32)* }, i32, i32 (i8*, %struct.FT_ValidatorRec_*)*, i32 (%struct.FT_CharMapRec_*, %struct.TT_CMapInfo_*)* } { { i64, i32 (%struct.FT_CMapRec_*, i8*)*, void (%struct.FT_CMapRec_*)*, i32 (%struct.FT_CMapRec_*, i32)*, i32 (%struct.FT_CMapRec_*, i32*)*, i32 (%struct.FT_CMapRec_*, %struct.FT_CMapRec_*, i32, i32)*, i32 (%struct.FT_CMapRec_*, i32, i32)*, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*)*, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*, i32)*, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*, i32)* } { i64 40, i32 (%struct.FT_CMapRec_*, i8*)* bitcast (i32 (%struct.TT_CMapRec_*, i8*)* @tt_cmap_init to i32 (%struct.FT_CMapRec_*, i8*)*), void (%struct.FT_CMapRec_*)* null, i32 (%struct.FT_CMapRec_*, i32)* bitcast (i32 (%struct.TT_CMapRec_*, i32)* @tt_cmap8_char_index to i32 (%struct.FT_CMapRec_*, i32)*), i32 (%struct.FT_CMapRec_*, i32*)* bitcast (i32 (%struct.TT_CMapRec_*, i32*)* @tt_cmap8_char_next to i32 (%struct.FT_CMapRec_*, i32*)*), i32 (%struct.FT_CMapRec_*, %struct.FT_CMapRec_*, i32, i32)* null, i32 (%struct.FT_CMapRec_*, i32, i32)* null, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*)* null, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*, i32)* null, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*, i32)* null }, i32 8, i32 (i8*, %struct.FT_ValidatorRec_*)* @tt_cmap8_validate, i32 (%struct.FT_CharMapRec_*, %struct.TT_CMapInfo_*)* bitcast (i32 (%struct.TT_CMapRec_*, %struct.TT_CMapInfo_*)* @tt_cmap8_get_info to i32 (%struct.FT_CharMapRec_*, %struct.TT_CMapInfo_*)*) }, align 8
@tt_cmap10_class_rec = hidden constant { { i64, i32 (%struct.FT_CMapRec_*, i8*)*, void (%struct.FT_CMapRec_*)*, i32 (%struct.FT_CMapRec_*, i32)*, i32 (%struct.FT_CMapRec_*, i32*)*, i32 (%struct.FT_CMapRec_*, %struct.FT_CMapRec_*, i32, i32)*, i32 (%struct.FT_CMapRec_*, i32, i32)*, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*)*, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*, i32)*, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*, i32)* }, i32, i32 (i8*, %struct.FT_ValidatorRec_*)*, i32 (%struct.FT_CharMapRec_*, %struct.TT_CMapInfo_*)* } { { i64, i32 (%struct.FT_CMapRec_*, i8*)*, void (%struct.FT_CMapRec_*)*, i32 (%struct.FT_CMapRec_*, i32)*, i32 (%struct.FT_CMapRec_*, i32*)*, i32 (%struct.FT_CMapRec_*, %struct.FT_CMapRec_*, i32, i32)*, i32 (%struct.FT_CMapRec_*, i32, i32)*, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*)*, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*, i32)*, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*, i32)* } { i64 40, i32 (%struct.FT_CMapRec_*, i8*)* bitcast (i32 (%struct.TT_CMapRec_*, i8*)* @tt_cmap_init to i32 (%struct.FT_CMapRec_*, i8*)*), void (%struct.FT_CMapRec_*)* null, i32 (%struct.FT_CMapRec_*, i32)* bitcast (i32 (%struct.TT_CMapRec_*, i32)* @tt_cmap10_char_index to i32 (%struct.FT_CMapRec_*, i32)*), i32 (%struct.FT_CMapRec_*, i32*)* bitcast (i32 (%struct.TT_CMapRec_*, i32*)* @tt_cmap10_char_next to i32 (%struct.FT_CMapRec_*, i32*)*), i32 (%struct.FT_CMapRec_*, %struct.FT_CMapRec_*, i32, i32)* null, i32 (%struct.FT_CMapRec_*, i32, i32)* null, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*)* null, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*, i32)* null, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*, i32)* null }, i32 10, i32 (i8*, %struct.FT_ValidatorRec_*)* @tt_cmap10_validate, i32 (%struct.FT_CharMapRec_*, %struct.TT_CMapInfo_*)* bitcast (i32 (%struct.TT_CMapRec_*, %struct.TT_CMapInfo_*)* @tt_cmap10_get_info to i32 (%struct.FT_CharMapRec_*, %struct.TT_CMapInfo_*)*) }, align 8
@tt_cmap12_class_rec = hidden constant { { i64, i32 (%struct.FT_CMapRec_*, i8*)*, void (%struct.FT_CMapRec_*)*, i32 (%struct.FT_CMapRec_*, i32)*, i32 (%struct.FT_CMapRec_*, i32*)*, i32 (%struct.FT_CMapRec_*, %struct.FT_CMapRec_*, i32, i32)*, i32 (%struct.FT_CMapRec_*, i32, i32)*, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*)*, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*, i32)*, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*, i32)* }, i32, i32 (i8*, %struct.FT_ValidatorRec_*)*, i32 (%struct.FT_CharMapRec_*, %struct.TT_CMapInfo_*)* } { { i64, i32 (%struct.FT_CMapRec_*, i8*)*, void (%struct.FT_CMapRec_*)*, i32 (%struct.FT_CMapRec_*, i32)*, i32 (%struct.FT_CMapRec_*, i32*)*, i32 (%struct.FT_CMapRec_*, %struct.FT_CMapRec_*, i32, i32)*, i32 (%struct.FT_CMapRec_*, i32, i32)*, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*)*, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*, i32)*, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*, i32)* } { i64 80, i32 (%struct.FT_CMapRec_*, i8*)* bitcast (i32 (%struct.TT_CMap12Rec_*, i8*)* @tt_cmap12_init to i32 (%struct.FT_CMapRec_*, i8*)*), void (%struct.FT_CMapRec_*)* null, i32 (%struct.FT_CMapRec_*, i32)* bitcast (i32 (%struct.TT_CMapRec_*, i32)* @tt_cmap12_char_index to i32 (%struct.FT_CMapRec_*, i32)*), i32 (%struct.FT_CMapRec_*, i32*)* bitcast (i32 (%struct.TT_CMapRec_*, i32*)* @tt_cmap12_char_next to i32 (%struct.FT_CMapRec_*, i32*)*), i32 (%struct.FT_CMapRec_*, %struct.FT_CMapRec_*, i32, i32)* null, i32 (%struct.FT_CMapRec_*, i32, i32)* null, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*)* null, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*, i32)* null, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*, i32)* null }, i32 12, i32 (i8*, %struct.FT_ValidatorRec_*)* @tt_cmap12_validate, i32 (%struct.FT_CharMapRec_*, %struct.TT_CMapInfo_*)* bitcast (i32 (%struct.TT_CMapRec_*, %struct.TT_CMapInfo_*)* @tt_cmap12_get_info to i32 (%struct.FT_CharMapRec_*, %struct.TT_CMapInfo_*)*) }, align 8
@tt_cmap13_class_rec = hidden constant { { i64, i32 (%struct.FT_CMapRec_*, i8*)*, void (%struct.FT_CMapRec_*)*, i32 (%struct.FT_CMapRec_*, i32)*, i32 (%struct.FT_CMapRec_*, i32*)*, i32 (%struct.FT_CMapRec_*, %struct.FT_CMapRec_*, i32, i32)*, i32 (%struct.FT_CMapRec_*, i32, i32)*, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*)*, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*, i32)*, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*, i32)* }, i32, i32 (i8*, %struct.FT_ValidatorRec_*)*, i32 (%struct.FT_CharMapRec_*, %struct.TT_CMapInfo_*)* } { { i64, i32 (%struct.FT_CMapRec_*, i8*)*, void (%struct.FT_CMapRec_*)*, i32 (%struct.FT_CMapRec_*, i32)*, i32 (%struct.FT_CMapRec_*, i32*)*, i32 (%struct.FT_CMapRec_*, %struct.FT_CMapRec_*, i32, i32)*, i32 (%struct.FT_CMapRec_*, i32, i32)*, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*)*, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*, i32)*, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*, i32)* } { i64 80, i32 (%struct.FT_CMapRec_*, i8*)* bitcast (i32 (%struct.TT_CMap13Rec_*, i8*)* @tt_cmap13_init to i32 (%struct.FT_CMapRec_*, i8*)*), void (%struct.FT_CMapRec_*)* null, i32 (%struct.FT_CMapRec_*, i32)* bitcast (i32 (%struct.TT_CMapRec_*, i32)* @tt_cmap13_char_index to i32 (%struct.FT_CMapRec_*, i32)*), i32 (%struct.FT_CMapRec_*, i32*)* bitcast (i32 (%struct.TT_CMapRec_*, i32*)* @tt_cmap13_char_next to i32 (%struct.FT_CMapRec_*, i32*)*), i32 (%struct.FT_CMapRec_*, %struct.FT_CMapRec_*, i32, i32)* null, i32 (%struct.FT_CMapRec_*, i32, i32)* null, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*)* null, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*, i32)* null, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*, i32)* null }, i32 13, i32 (i8*, %struct.FT_ValidatorRec_*)* @tt_cmap13_validate, i32 (%struct.FT_CharMapRec_*, %struct.TT_CMapInfo_*)* bitcast (i32 (%struct.TT_CMapRec_*, %struct.TT_CMapInfo_*)* @tt_cmap13_get_info to i32 (%struct.FT_CharMapRec_*, %struct.TT_CMapInfo_*)*) }, align 8
@tt_cmap14_class_rec = hidden constant { { i64, i32 (%struct.FT_CMapRec_*, i8*)*, void (%struct.FT_CMapRec_*)*, i32 (%struct.FT_CMapRec_*, i32)*, i32 (%struct.FT_CMapRec_*, i32*)*, i32 (%struct.FT_CMapRec_*, %struct.FT_CMapRec_*, i32, i32)*, i32 (%struct.FT_CMapRec_*, i32, i32)*, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*)*, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*, i32)*, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*, i32)* }, i32, i32 (i8*, %struct.FT_ValidatorRec_*)*, i32 (%struct.FT_CharMapRec_*, %struct.TT_CMapInfo_*)* } { { i64, i32 (%struct.FT_CMapRec_*, i8*)*, void (%struct.FT_CMapRec_*)*, i32 (%struct.FT_CMapRec_*, i32)*, i32 (%struct.FT_CMapRec_*, i32*)*, i32 (%struct.FT_CMapRec_*, %struct.FT_CMapRec_*, i32, i32)*, i32 (%struct.FT_CMapRec_*, i32, i32)*, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*)*, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*, i32)*, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*, i32)* } { i64 72, i32 (%struct.FT_CMapRec_*, i8*)* bitcast (i32 (%struct.TT_CMap14Rec_*, i8*)* @tt_cmap14_init to i32 (%struct.FT_CMapRec_*, i8*)*), void (%struct.FT_CMapRec_*)* bitcast (void (%struct.TT_CMap14Rec_*)* @tt_cmap14_done to void (%struct.FT_CMapRec_*)*), i32 (%struct.FT_CMapRec_*, i32)* bitcast (i32 (%struct.TT_CMapRec_*, i32)* @tt_cmap14_char_index to i32 (%struct.FT_CMapRec_*, i32)*), i32 (%struct.FT_CMapRec_*, i32*)* bitcast (i32 (%struct.TT_CMapRec_*, i32*)* @tt_cmap14_char_next to i32 (%struct.FT_CMapRec_*, i32*)*), i32 (%struct.FT_CMapRec_*, %struct.FT_CMapRec_*, i32, i32)* bitcast (i32 (%struct.TT_CMapRec_*, %struct.TT_CMapRec_*, i32, i32)* @tt_cmap14_char_var_index to i32 (%struct.FT_CMapRec_*, %struct.FT_CMapRec_*, i32, i32)*), i32 (%struct.FT_CMapRec_*, i32, i32)* bitcast (i32 (%struct.TT_CMapRec_*, i32, i32)* @tt_cmap14_char_var_isdefault to i32 (%struct.FT_CMapRec_*, i32, i32)*), i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*)* bitcast (i32* (%struct.TT_CMapRec_*, %struct.FT_MemoryRec_*)* @tt_cmap14_variants to i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*)*), i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*, i32)* bitcast (i32* (%struct.TT_CMapRec_*, %struct.FT_MemoryRec_*, i32)* @tt_cmap14_char_variants to i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*, i32)*), i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*, i32)* bitcast (i32* (%struct.TT_CMapRec_*, %struct.FT_MemoryRec_*, i32)* @tt_cmap14_variant_chars to i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*, i32)*) }, i32 14, i32 (i8*, %struct.FT_ValidatorRec_*)* @tt_cmap14_validate, i32 (%struct.FT_CharMapRec_*, %struct.TT_CMapInfo_*)* bitcast (i32 (%struct.TT_CMapRec_*, %struct.TT_CMapInfo_*)* @tt_cmap14_get_info to i32 (%struct.FT_CharMapRec_*, %struct.TT_CMapInfo_*)*) }, align 8
@tt_cmap_unicode_class_rec = hidden constant { { i64, i32 (%struct.FT_CMapRec_*, i8*)*, void (%struct.FT_CMapRec_*)*, i32 (%struct.FT_CMapRec_*, i32)*, i32 (%struct.FT_CMapRec_*, i32*)*, i32 (%struct.FT_CMapRec_*, %struct.FT_CMapRec_*, i32, i32)*, i32 (%struct.FT_CMapRec_*, i32, i32)*, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*)*, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*, i32)*, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*, i32)* }, i32, i32 (i8*, %struct.FT_ValidatorRec_*)*, i32 (%struct.FT_CharMapRec_*, %struct.TT_CMapInfo_*)* } { { i64, i32 (%struct.FT_CMapRec_*, i8*)*, void (%struct.FT_CMapRec_*)*, i32 (%struct.FT_CMapRec_*, i32)*, i32 (%struct.FT_CMapRec_*, i32*)*, i32 (%struct.FT_CMapRec_*, %struct.FT_CMapRec_*, i32, i32)*, i32 (%struct.FT_CMapRec_*, i32, i32)*, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*)*, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*, i32)*, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*, i32)* } { i64 40, i32 (%struct.FT_CMapRec_*, i8*)* bitcast (i32 (%struct.PS_UnicodesRec_*, i8*)* @tt_cmap_unicode_init to i32 (%struct.FT_CMapRec_*, i8*)*), void (%struct.FT_CMapRec_*)* bitcast (void (%struct.PS_UnicodesRec_*)* @tt_cmap_unicode_done to void (%struct.FT_CMapRec_*)*), i32 (%struct.FT_CMapRec_*, i32)* bitcast (i32 (%struct.PS_UnicodesRec_*, i32)* @tt_cmap_unicode_char_index to i32 (%struct.FT_CMapRec_*, i32)*), i32 (%struct.FT_CMapRec_*, i32*)* bitcast (i32 (%struct.PS_UnicodesRec_*, i32*)* @tt_cmap_unicode_char_next to i32 (%struct.FT_CMapRec_*, i32*)*), i32 (%struct.FT_CMapRec_*, %struct.FT_CMapRec_*, i32, i32)* null, i32 (%struct.FT_CMapRec_*, i32, i32)* null, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*)* null, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*, i32)* null, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*, i32)* null }, i32 -1, i32 (i8*, %struct.FT_ValidatorRec_*)* null, i32 (%struct.FT_CharMapRec_*, %struct.TT_CMapInfo_*)* null }, align 8
@.str.1 = private unnamed_addr constant [17 x i8] c"postscript-cmaps\00", align 1
@.str.2 = private unnamed_addr constant [9 x i8] c"truetype\00", align 1
@.str.3 = private unnamed_addr constant [14 x i8] c"multi-masters\00", align 1
@.str.4 = private unnamed_addr constant [19 x i8] c"metrics-variations\00", align 1
@sfnt_open_font.ttc_header_fields = internal constant [4 x %struct.FT_Frame_Field_] [%struct.FT_Frame_Field_ { i8 4, i8 0, i16 8 }, %struct.FT_Frame_Field_ { i8 17, i8 8, i16 8 }, %struct.FT_Frame_Field_ { i8 17, i8 8, i16 16 }, %struct.FT_Frame_Field_ zeroinitializer], align 16
@woff_open_font.woff_header_fields = internal constant [15 x %struct.FT_Frame_Field_] [%struct.FT_Frame_Field_ { i8 4, i8 0, i16 44 }, %struct.FT_Frame_Field_ { i8 16, i8 8, i16 0 }, %struct.FT_Frame_Field_ { i8 16, i8 8, i16 8 }, %struct.FT_Frame_Field_ { i8 16, i8 8, i16 16 }, %struct.FT_Frame_Field_ { i8 12, i8 2, i16 24 }, %struct.FT_Frame_Field_ { i8 12, i8 2, i16 26 }, %struct.FT_Frame_Field_ { i8 16, i8 8, i16 32 }, %struct.FT_Frame_Field_ { i8 12, i8 2, i16 40 }, %struct.FT_Frame_Field_ { i8 12, i8 2, i16 42 }, %struct.FT_Frame_Field_ { i8 16, i8 8, i16 48 }, %struct.FT_Frame_Field_ { i8 16, i8 8, i16 56 }, %struct.FT_Frame_Field_ { i8 16, i8 8, i16 64 }, %struct.FT_Frame_Field_ { i8 16, i8 8, i16 72 }, %struct.FT_Frame_Field_ { i8 16, i8 8, i16 80 }, %struct.FT_Frame_Field_ zeroinitializer], align 16
@woff2_open_font.woff2_header_fields = internal constant [15 x %struct.FT_Frame_Field_] [%struct.FT_Frame_Field_ { i8 4, i8 0, i16 48 }, %struct.FT_Frame_Field_ { i8 16, i8 8, i16 0 }, %struct.FT_Frame_Field_ { i8 16, i8 8, i16 8 }, %struct.FT_Frame_Field_ { i8 16, i8 8, i16 16 }, %struct.FT_Frame_Field_ { i8 12, i8 2, i16 24 }, %struct.FT_Frame_Field_ { i8 25, i8 2, i16 0 }, %struct.FT_Frame_Field_ { i8 16, i8 8, i16 32 }, %struct.FT_Frame_Field_ { i8 16, i8 8, i16 40 }, %struct.FT_Frame_Field_ { i8 25, i8 4, i16 0 }, %struct.FT_Frame_Field_ { i8 16, i8 8, i16 48 }, %struct.FT_Frame_Field_ { i8 16, i8 8, i16 56 }, %struct.FT_Frame_Field_ { i8 16, i8 8, i16 64 }, %struct.FT_Frame_Field_ { i8 16, i8 8, i16 72 }, %struct.FT_Frame_Field_ { i8 16, i8 8, i16 80 }, %struct.FT_Frame_Field_ zeroinitializer], align 16
@woff2_known_tags.known_tags = internal unnamed_addr constant [63 x i64] [i64 1668112752, i64 1751474532, i64 1751672161, i64 1752003704, i64 1835104368, i64 1851878757, i64 1330851634, i64 1886352244, i64 1668707360, i64 1718642541, i64 1735162214, i64 1819239265, i64 1886545264, i64 1128678944, i64 1448038983, i64 1161970772, i64 1161972803, i64 1734439792, i64 1751412088, i64 1801810542, i64 1280594760, i64 1346587732, i64 1447316824, i64 1986553185, i64 1986884728, i64 1111577413, i64 1195656518, i64 1196445523, i64 1196643650, i64 1161974595, i64 1246975046, i64 1296127048, i64 1128416340, i64 1128418371, i64 1129270354, i64 1129333068, i64 1398163232, i64 1935829368, i64 1633906292, i64 1635148146, i64 1650745716, i64 1651273571, i64 1651731566, i64 1668702578, i64 1717859171, i64 1717920116, i64 1718449272, i64 1719034226, i64 1735811442, i64 1752396921, i64 1786082164, i64 1818452338, i64 1836020340, i64 1836020344, i64 1869636196, i64 1886547824, i64 1953653099, i64 1516335206, i64 1399417958, i64 1198285172, i64 1198288739, i64 1181049204, i64 1399417964], align 16
@tt_cmap_classes = internal constant [10 x %struct.TT_CMap_ClassRec_*] [%struct.TT_CMap_ClassRec_* bitcast ({ { i64, i32 (%struct.FT_CMapRec_*, i8*)*, void (%struct.FT_CMapRec_*)*, i32 (%struct.FT_CMapRec_*, i32)*, i32 (%struct.FT_CMapRec_*, i32*)*, i32 (%struct.FT_CMapRec_*, %struct.FT_CMapRec_*, i32, i32)*, i32 (%struct.FT_CMapRec_*, i32, i32)*, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*)*, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*, i32)*, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*, i32)* }, i32, i32 (i8*, %struct.FT_ValidatorRec_*)*, i32 (%struct.FT_CharMapRec_*, %struct.TT_CMapInfo_*)* }* @tt_cmap0_class_rec to %struct.TT_CMap_ClassRec_*), %struct.TT_CMap_ClassRec_* bitcast ({ { i64, i32 (%struct.FT_CMapRec_*, i8*)*, void (%struct.FT_CMapRec_*)*, i32 (%struct.FT_CMapRec_*, i32)*, i32 (%struct.FT_CMapRec_*, i32*)*, i32 (%struct.FT_CMapRec_*, %struct.FT_CMapRec_*, i32, i32)*, i32 (%struct.FT_CMapRec_*, i32, i32)*, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*)*, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*, i32)*, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*, i32)* }, i32, i32 (i8*, %struct.FT_ValidatorRec_*)*, i32 (%struct.FT_CharMapRec_*, %struct.TT_CMapInfo_*)* }* @tt_cmap2_class_rec to %struct.TT_CMap_ClassRec_*), %struct.TT_CMap_ClassRec_* bitcast ({ { i64, i32 (%struct.FT_CMapRec_*, i8*)*, void (%struct.FT_CMapRec_*)*, i32 (%struct.FT_CMapRec_*, i32)*, i32 (%struct.FT_CMapRec_*, i32*)*, i32 (%struct.FT_CMapRec_*, %struct.FT_CMapRec_*, i32, i32)*, i32 (%struct.FT_CMapRec_*, i32, i32)*, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*)*, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*, i32)*, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*, i32)* }, i32, i32 (i8*, %struct.FT_ValidatorRec_*)*, i32 (%struct.FT_CharMapRec_*, %struct.TT_CMapInfo_*)* }* @tt_cmap4_class_rec to %struct.TT_CMap_ClassRec_*), %struct.TT_CMap_ClassRec_* bitcast ({ { i64, i32 (%struct.FT_CMapRec_*, i8*)*, void (%struct.FT_CMapRec_*)*, i32 (%struct.FT_CMapRec_*, i32)*, i32 (%struct.FT_CMapRec_*, i32*)*, i32 (%struct.FT_CMapRec_*, %struct.FT_CMapRec_*, i32, i32)*, i32 (%struct.FT_CMapRec_*, i32, i32)*, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*)*, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*, i32)*, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*, i32)* }, i32, i32 (i8*, %struct.FT_ValidatorRec_*)*, i32 (%struct.FT_CharMapRec_*, %struct.TT_CMapInfo_*)* }* @tt_cmap6_class_rec to %struct.TT_CMap_ClassRec_*), %struct.TT_CMap_ClassRec_* bitcast ({ { i64, i32 (%struct.FT_CMapRec_*, i8*)*, void (%struct.FT_CMapRec_*)*, i32 (%struct.FT_CMapRec_*, i32)*, i32 (%struct.FT_CMapRec_*, i32*)*, i32 (%struct.FT_CMapRec_*, %struct.FT_CMapRec_*, i32, i32)*, i32 (%struct.FT_CMapRec_*, i32, i32)*, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*)*, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*, i32)*, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*, i32)* }, i32, i32 (i8*, %struct.FT_ValidatorRec_*)*, i32 (%struct.FT_CharMapRec_*, %struct.TT_CMapInfo_*)* }* @tt_cmap8_class_rec to %struct.TT_CMap_ClassRec_*), %struct.TT_CMap_ClassRec_* bitcast ({ { i64, i32 (%struct.FT_CMapRec_*, i8*)*, void (%struct.FT_CMapRec_*)*, i32 (%struct.FT_CMapRec_*, i32)*, i32 (%struct.FT_CMapRec_*, i32*)*, i32 (%struct.FT_CMapRec_*, %struct.FT_CMapRec_*, i32, i32)*, i32 (%struct.FT_CMapRec_*, i32, i32)*, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*)*, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*, i32)*, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*, i32)* }, i32, i32 (i8*, %struct.FT_ValidatorRec_*)*, i32 (%struct.FT_CharMapRec_*, %struct.TT_CMapInfo_*)* }* @tt_cmap10_class_rec to %struct.TT_CMap_ClassRec_*), %struct.TT_CMap_ClassRec_* bitcast ({ { i64, i32 (%struct.FT_CMapRec_*, i8*)*, void (%struct.FT_CMapRec_*)*, i32 (%struct.FT_CMapRec_*, i32)*, i32 (%struct.FT_CMapRec_*, i32*)*, i32 (%struct.FT_CMapRec_*, %struct.FT_CMapRec_*, i32, i32)*, i32 (%struct.FT_CMapRec_*, i32, i32)*, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*)*, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*, i32)*, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*, i32)* }, i32, i32 (i8*, %struct.FT_ValidatorRec_*)*, i32 (%struct.FT_CharMapRec_*, %struct.TT_CMapInfo_*)* }* @tt_cmap12_class_rec to %struct.TT_CMap_ClassRec_*), %struct.TT_CMap_ClassRec_* bitcast ({ { i64, i32 (%struct.FT_CMapRec_*, i8*)*, void (%struct.FT_CMapRec_*)*, i32 (%struct.FT_CMapRec_*, i32)*, i32 (%struct.FT_CMapRec_*, i32*)*, i32 (%struct.FT_CMapRec_*, %struct.FT_CMapRec_*, i32, i32)*, i32 (%struct.FT_CMapRec_*, i32, i32)*, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*)*, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*, i32)*, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*, i32)* }, i32, i32 (i8*, %struct.FT_ValidatorRec_*)*, i32 (%struct.FT_CharMapRec_*, %struct.TT_CMapInfo_*)* }* @tt_cmap13_class_rec to %struct.TT_CMap_ClassRec_*), %struct.TT_CMap_ClassRec_* bitcast ({ { i64, i32 (%struct.FT_CMapRec_*, i8*)*, void (%struct.FT_CMapRec_*)*, i32 (%struct.FT_CMapRec_*, i32)*, i32 (%struct.FT_CMapRec_*, i32*)*, i32 (%struct.FT_CMapRec_*, %struct.FT_CMapRec_*, i32, i32)*, i32 (%struct.FT_CMapRec_*, i32, i32)*, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*)*, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*, i32)*, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*, i32)* }, i32, i32 (i8*, %struct.FT_ValidatorRec_*)*, i32 (%struct.FT_CharMapRec_*, %struct.TT_CMapInfo_*)* }* @tt_cmap14_class_rec to %struct.TT_CMap_ClassRec_*), %struct.TT_CMap_ClassRec_* null], align 16
@sfnt_find_encoding.tt_encodings = internal unnamed_addr constant [11 x %struct.TEncoding_] [%struct.TEncoding_ { i32 2, i32 -1, i32 1970170211 }, %struct.TEncoding_ { i32 0, i32 -1, i32 1970170211 }, %struct.TEncoding_ { i32 1, i32 0, i32 1634889070 }, %struct.TEncoding_ { i32 3, i32 0, i32 1937337698 }, %struct.TEncoding_ { i32 3, i32 10, i32 1970170211 }, %struct.TEncoding_ { i32 3, i32 1, i32 1970170211 }, %struct.TEncoding_ { i32 3, i32 2, i32 1936353651 }, %struct.TEncoding_ { i32 3, i32 3, i32 1734484000 }, %struct.TEncoding_ { i32 3, i32 4, i32 1651074869 }, %struct.TEncoding_ { i32 3, i32 5, i32 2002873971 }, %struct.TEncoding_ { i32 3, i32 6, i32 1785686113 }], align 16
@tt_face_load_generic_header.header_fields = internal constant [21 x %struct.FT_Frame_Field_] [%struct.FT_Frame_Field_ { i8 4, i8 0, i16 54 }, %struct.FT_Frame_Field_ { i8 16, i8 8, i16 0 }, %struct.FT_Frame_Field_ { i8 16, i8 8, i16 8 }, %struct.FT_Frame_Field_ { i8 17, i8 8, i16 16 }, %struct.FT_Frame_Field_ { i8 17, i8 8, i16 24 }, %struct.FT_Frame_Field_ { i8 12, i8 2, i16 32 }, %struct.FT_Frame_Field_ { i8 12, i8 2, i16 34 }, %struct.FT_Frame_Field_ { i8 16, i8 8, i16 40 }, %struct.FT_Frame_Field_ { i8 16, i8 8, i16 48 }, %struct.FT_Frame_Field_ { i8 16, i8 8, i16 56 }, %struct.FT_Frame_Field_ { i8 16, i8 8, i16 64 }, %struct.FT_Frame_Field_ { i8 13, i8 2, i16 72 }, %struct.FT_Frame_Field_ { i8 13, i8 2, i16 74 }, %struct.FT_Frame_Field_ { i8 13, i8 2, i16 76 }, %struct.FT_Frame_Field_ { i8 13, i8 2, i16 78 }, %struct.FT_Frame_Field_ { i8 12, i8 2, i16 80 }, %struct.FT_Frame_Field_ { i8 12, i8 2, i16 82 }, %struct.FT_Frame_Field_ { i8 13, i8 2, i16 84 }, %struct.FT_Frame_Field_ { i8 13, i8 2, i16 86 }, %struct.FT_Frame_Field_ { i8 13, i8 2, i16 88 }, %struct.FT_Frame_Field_ zeroinitializer], align 16
@tt_face_load_hhea.metrics_header_fields = internal constant [19 x %struct.FT_Frame_Field_] [%struct.FT_Frame_Field_ { i8 4, i8 0, i16 36 }, %struct.FT_Frame_Field_ { i8 16, i8 8, i16 0 }, %struct.FT_Frame_Field_ { i8 13, i8 2, i16 8 }, %struct.FT_Frame_Field_ { i8 13, i8 2, i16 10 }, %struct.FT_Frame_Field_ { i8 13, i8 2, i16 12 }, %struct.FT_Frame_Field_ { i8 12, i8 2, i16 14 }, %struct.FT_Frame_Field_ { i8 13, i8 2, i16 16 }, %struct.FT_Frame_Field_ { i8 13, i8 2, i16 18 }, %struct.FT_Frame_Field_ { i8 13, i8 2, i16 20 }, %struct.FT_Frame_Field_ { i8 13, i8 2, i16 22 }, %struct.FT_Frame_Field_ { i8 13, i8 2, i16 24 }, %struct.FT_Frame_Field_ { i8 13, i8 2, i16 26 }, %struct.FT_Frame_Field_ { i8 13, i8 2, i16 28 }, %struct.FT_Frame_Field_ { i8 13, i8 2, i16 30 }, %struct.FT_Frame_Field_ { i8 13, i8 2, i16 32 }, %struct.FT_Frame_Field_ { i8 13, i8 2, i16 34 }, %struct.FT_Frame_Field_ { i8 13, i8 2, i16 36 }, %struct.FT_Frame_Field_ { i8 12, i8 2, i16 38 }, %struct.FT_Frame_Field_ zeroinitializer], align 16
@tt_face_load_maxp.maxp_fields = internal constant [4 x %struct.FT_Frame_Field_] [%struct.FT_Frame_Field_ { i8 4, i8 0, i16 6 }, %struct.FT_Frame_Field_ { i8 17, i8 8, i16 0 }, %struct.FT_Frame_Field_ { i8 12, i8 2, i16 8 }, %struct.FT_Frame_Field_ zeroinitializer], align 16
@tt_face_load_maxp.maxp_fields_extra = internal constant [15 x %struct.FT_Frame_Field_] [%struct.FT_Frame_Field_ { i8 4, i8 0, i16 26 }, %struct.FT_Frame_Field_ { i8 12, i8 2, i16 10 }, %struct.FT_Frame_Field_ { i8 12, i8 2, i16 12 }, %struct.FT_Frame_Field_ { i8 12, i8 2, i16 14 }, %struct.FT_Frame_Field_ { i8 12, i8 2, i16 16 }, %struct.FT_Frame_Field_ { i8 12, i8 2, i16 18 }, %struct.FT_Frame_Field_ { i8 12, i8 2, i16 20 }, %struct.FT_Frame_Field_ { i8 12, i8 2, i16 22 }, %struct.FT_Frame_Field_ { i8 12, i8 2, i16 24 }, %struct.FT_Frame_Field_ { i8 12, i8 2, i16 26 }, %struct.FT_Frame_Field_ { i8 12, i8 2, i16 28 }, %struct.FT_Frame_Field_ { i8 12, i8 2, i16 30 }, %struct.FT_Frame_Field_ { i8 12, i8 2, i16 32 }, %struct.FT_Frame_Field_ { i8 12, i8 2, i16 34 }, %struct.FT_Frame_Field_ zeroinitializer], align 16
@tt_face_load_os2.os2_fields = internal constant [44 x %struct.FT_Frame_Field_] [%struct.FT_Frame_Field_ { i8 4, i8 0, i16 78 }, %struct.FT_Frame_Field_ { i8 12, i8 2, i16 0 }, %struct.FT_Frame_Field_ { i8 13, i8 2, i16 2 }, %struct.FT_Frame_Field_ { i8 12, i8 2, i16 4 }, %struct.FT_Frame_Field_ { i8 12, i8 2, i16 6 }, %struct.FT_Frame_Field_ { i8 13, i8 2, i16 8 }, %struct.FT_Frame_Field_ { i8 13, i8 2, i16 10 }, %struct.FT_Frame_Field_ { i8 13, i8 2, i16 12 }, %struct.FT_Frame_Field_ { i8 13, i8 2, i16 14 }, %struct.FT_Frame_Field_ { i8 13, i8 2, i16 16 }, %struct.FT_Frame_Field_ { i8 13, i8 2, i16 18 }, %struct.FT_Frame_Field_ { i8 13, i8 2, i16 20 }, %struct.FT_Frame_Field_ { i8 13, i8 2, i16 22 }, %struct.FT_Frame_Field_ { i8 13, i8 2, i16 24 }, %struct.FT_Frame_Field_ { i8 13, i8 2, i16 26 }, %struct.FT_Frame_Field_ { i8 13, i8 2, i16 28 }, %struct.FT_Frame_Field_ { i8 13, i8 2, i16 30 }, %struct.FT_Frame_Field_ { i8 8, i8 1, i16 32 }, %struct.FT_Frame_Field_ { i8 8, i8 1, i16 33 }, %struct.FT_Frame_Field_ { i8 8, i8 1, i16 34 }, %struct.FT_Frame_Field_ { i8 8, i8 1, i16 35 }, %struct.FT_Frame_Field_ { i8 8, i8 1, i16 36 }, %struct.FT_Frame_Field_ { i8 8, i8 1, i16 37 }, %struct.FT_Frame_Field_ { i8 8, i8 1, i16 38 }, %struct.FT_Frame_Field_ { i8 8, i8 1, i16 39 }, %struct.FT_Frame_Field_ { i8 8, i8 1, i16 40 }, %struct.FT_Frame_Field_ { i8 8, i8 1, i16 41 }, %struct.FT_Frame_Field_ { i8 16, i8 8, i16 48 }, %struct.FT_Frame_Field_ { i8 16, i8 8, i16 56 }, %struct.FT_Frame_Field_ { i8 16, i8 8, i16 64 }, %struct.FT_Frame_Field_ { i8 16, i8 8, i16 72 }, %struct.FT_Frame_Field_ { i8 8, i8 1, i16 80 }, %struct.FT_Frame_Field_ { i8 8, i8 1, i16 81 }, %struct.FT_Frame_Field_ { i8 8, i8 1, i16 82 }, %struct.FT_Frame_Field_ { i8 8, i8 1, i16 83 }, %struct.FT_Frame_Field_ { i8 12, i8 2, i16 84 }, %struct.FT_Frame_Field_ { i8 12, i8 2, i16 86 }, %struct.FT_Frame_Field_ { i8 12, i8 2, i16 88 }, %struct.FT_Frame_Field_ { i8 13, i8 2, i16 90 }, %struct.FT_Frame_Field_ { i8 13, i8 2, i16 92 }, %struct.FT_Frame_Field_ { i8 13, i8 2, i16 94 }, %struct.FT_Frame_Field_ { i8 12, i8 2, i16 96 }, %struct.FT_Frame_Field_ { i8 12, i8 2, i16 98 }, %struct.FT_Frame_Field_ zeroinitializer], align 16
@tt_face_load_os2.os2_fields_extra1 = internal constant [4 x %struct.FT_Frame_Field_] [%struct.FT_Frame_Field_ { i8 4, i8 0, i16 8 }, %struct.FT_Frame_Field_ { i8 16, i8 8, i16 104 }, %struct.FT_Frame_Field_ { i8 16, i8 8, i16 112 }, %struct.FT_Frame_Field_ zeroinitializer], align 16
@tt_face_load_os2.os2_fields_extra2 = internal constant [7 x %struct.FT_Frame_Field_] [%struct.FT_Frame_Field_ { i8 4, i8 0, i16 10 }, %struct.FT_Frame_Field_ { i8 13, i8 2, i16 120 }, %struct.FT_Frame_Field_ { i8 13, i8 2, i16 122 }, %struct.FT_Frame_Field_ { i8 12, i8 2, i16 124 }, %struct.FT_Frame_Field_ { i8 12, i8 2, i16 126 }, %struct.FT_Frame_Field_ { i8 12, i8 2, i16 128 }, %struct.FT_Frame_Field_ zeroinitializer], align 16
@tt_face_load_os2.os2_fields_extra5 = internal constant [4 x %struct.FT_Frame_Field_] [%struct.FT_Frame_Field_ { i8 4, i8 0, i16 4 }, %struct.FT_Frame_Field_ { i8 12, i8 2, i16 130 }, %struct.FT_Frame_Field_ { i8 12, i8 2, i16 132 }, %struct.FT_Frame_Field_ zeroinitializer], align 16
@tt_face_load_post.post_fields = internal constant [11 x %struct.FT_Frame_Field_] [%struct.FT_Frame_Field_ { i8 4, i8 0, i16 32 }, %struct.FT_Frame_Field_ { i8 17, i8 8, i16 0 }, %struct.FT_Frame_Field_ { i8 17, i8 8, i16 8 }, %struct.FT_Frame_Field_ { i8 13, i8 2, i16 16 }, %struct.FT_Frame_Field_ { i8 13, i8 2, i16 18 }, %struct.FT_Frame_Field_ { i8 16, i8 8, i16 24 }, %struct.FT_Frame_Field_ { i8 16, i8 8, i16 32 }, %struct.FT_Frame_Field_ { i8 16, i8 8, i16 40 }, %struct.FT_Frame_Field_ { i8 16, i8 8, i16 48 }, %struct.FT_Frame_Field_ { i8 16, i8 8, i16 56 }, %struct.FT_Frame_Field_ zeroinitializer], align 16
@tt_face_load_name.name_table_fields = internal constant [5 x %struct.FT_Frame_Field_] [%struct.FT_Frame_Field_ { i8 4, i8 0, i16 6 }, %struct.FT_Frame_Field_ { i8 12, i8 2, i16 0 }, %struct.FT_Frame_Field_ { i8 12, i8 4, i16 4 }, %struct.FT_Frame_Field_ { i8 12, i8 4, i16 8 }, %struct.FT_Frame_Field_ zeroinitializer], align 16
@tt_face_load_name.name_record_fields = internal constant [7 x %struct.FT_Frame_Field_] [%struct.FT_Frame_Field_ { i8 12, i8 2, i16 0 }, %struct.FT_Frame_Field_ { i8 12, i8 2, i16 2 }, %struct.FT_Frame_Field_ { i8 12, i8 2, i16 4 }, %struct.FT_Frame_Field_ { i8 12, i8 2, i16 6 }, %struct.FT_Frame_Field_ { i8 12, i8 2, i16 8 }, %struct.FT_Frame_Field_ { i8 12, i8 8, i16 16 }, %struct.FT_Frame_Field_ zeroinitializer], align 16
@tt_face_load_name.langTag_record_fields = internal constant [3 x %struct.FT_Frame_Field_] [%struct.FT_Frame_Field_ { i8 12, i8 2, i16 0 }, %struct.FT_Frame_Field_ { i8 12, i8 8, i16 8 }, %struct.FT_Frame_Field_ zeroinitializer], align 2
@tt_face_load_pclt.pclt_fields = internal constant [17 x %struct.FT_Frame_Field_] [%struct.FT_Frame_Field_ { i8 4, i8 0, i16 54 }, %struct.FT_Frame_Field_ { i8 16, i8 8, i16 0 }, %struct.FT_Frame_Field_ { i8 16, i8 8, i16 8 }, %struct.FT_Frame_Field_ { i8 12, i8 2, i16 16 }, %struct.FT_Frame_Field_ { i8 12, i8 2, i16 18 }, %struct.FT_Frame_Field_ { i8 12, i8 2, i16 20 }, %struct.FT_Frame_Field_ { i8 12, i8 2, i16 22 }, %struct.FT_Frame_Field_ { i8 12, i8 2, i16 24 }, %struct.FT_Frame_Field_ { i8 12, i8 2, i16 26 }, %struct.FT_Frame_Field_ { i8 24, i8 16, i16 28 }, %struct.FT_Frame_Field_ { i8 24, i8 8, i16 44 }, %struct.FT_Frame_Field_ { i8 24, i8 6, i16 52 }, %struct.FT_Frame_Field_ { i8 9, i8 1, i16 58 }, %struct.FT_Frame_Field_ { i8 9, i8 1, i16 59 }, %struct.FT_Frame_Field_ { i8 8, i8 1, i16 60 }, %struct.FT_Frame_Field_ { i8 8, i8 1, i16 61 }, %struct.FT_Frame_Field_ zeroinitializer], align 16
@.str.5 = private unnamed_addr constant [7 x i8] c"1.6.37\00", align 1
@tt_face_load_font_dir.offset_table_fields = internal constant [6 x %struct.FT_Frame_Field_] [%struct.FT_Frame_Field_ { i8 4, i8 0, i16 8 }, %struct.FT_Frame_Field_ { i8 12, i8 2, i16 8 }, %struct.FT_Frame_Field_ { i8 12, i8 2, i16 10 }, %struct.FT_Frame_Field_ { i8 12, i8 2, i16 12 }, %struct.FT_Frame_Field_ { i8 12, i8 2, i16 14 }, %struct.FT_Frame_Field_ zeroinitializer], align 16
@check_table_dir.table_dir_entry_fields = internal constant [6 x %struct.FT_Frame_Field_] [%struct.FT_Frame_Field_ { i8 4, i8 0, i16 16 }, %struct.FT_Frame_Field_ { i8 16, i8 8, i16 0 }, %struct.FT_Frame_Field_ { i8 16, i8 8, i16 8 }, %struct.FT_Frame_Field_ { i8 16, i8 8, i16 16 }, %struct.FT_Frame_Field_ { i8 16, i8 8, i16 24 }, %struct.FT_Frame_Field_ zeroinitializer], align 16
@__const.tt_face_get_paint.next_paint = private unnamed_addr constant { i8*, i8, [7 x i8] } { i8* inttoptr (i64 -6148914691236517206 to i8*), i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA" }, align 8
@sfnt_services = internal constant [5 x %struct.FT_ServiceDescRec_] [%struct.FT_ServiceDescRec_ { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.6, i32 0, i32 0), i8* bitcast (%struct.FT_Service_SFNT_TableRec_* @sfnt_service_sfnt_table to i8*) }, %struct.FT_ServiceDescRec_ { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.7, i32 0, i32 0), i8* bitcast (%struct.FT_Service_PsFontNameRec_* @sfnt_service_ps_name to i8*) }, %struct.FT_ServiceDescRec_ { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.8, i32 0, i32 0), i8* bitcast (%struct.FT_Service_GlyphDictRec_* @sfnt_service_glyph_dict to i8*) }, %struct.FT_ServiceDescRec_ { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.9, i32 0, i32 0), i8* bitcast (%struct.FT_Service_TTCMapsRec_* @tt_service_get_cmap_info to i8*) }, %struct.FT_ServiceDescRec_ zeroinitializer], align 16
@.str.6 = private unnamed_addr constant [11 x i8] c"sfnt-table\00", align 1
@sfnt_service_sfnt_table = internal constant %struct.FT_Service_SFNT_TableRec_ { i32 (%struct.FT_FaceRec_*, i64, i64, i8*, i64*)* bitcast (i32 (%struct.TT_FaceRec_*, i64, i64, i8*, i64*)* @tt_face_load_any to i32 (%struct.FT_FaceRec_*, i64, i64, i8*, i64*)*), i8* (%struct.FT_FaceRec_*, i32)* bitcast (i8* (%struct.TT_FaceRec_*, i32)* @get_sfnt_table to i8* (%struct.FT_FaceRec_*, i32)*), i32 (%struct.FT_FaceRec_*, i32, i64*, i64*, i64*)* bitcast (i32 (%struct.TT_FaceRec_*, i32, i64*, i64*, i64*)* @sfnt_table_info to i32 (%struct.FT_FaceRec_*, i32, i64*, i64*, i64*)*) }, align 8
@.str.7 = private unnamed_addr constant [21 x i8] c"postscript-font-name\00", align 1
@sfnt_service_ps_name = internal constant %struct.FT_Service_PsFontNameRec_ { i8* (%struct.FT_FaceRec_*)* bitcast (i8* (%struct.TT_FaceRec_*)* @sfnt_get_ps_name to i8* (%struct.FT_FaceRec_*)*) }, align 8
@.str.8 = private unnamed_addr constant [11 x i8] c"glyph-dict\00", align 1
@sfnt_service_glyph_dict = internal constant %struct.FT_Service_GlyphDictRec_ { i32 (%struct.FT_FaceRec_*, i32, i8*, i32)* @sfnt_get_glyph_name, i32 (%struct.FT_FaceRec_*, i8*)* @sfnt_get_name_index }, align 8
@.str.9 = private unnamed_addr constant [9 x i8] c"tt-cmaps\00", align 1
@tt_service_get_cmap_info = internal constant %struct.FT_Service_TTCMapsRec_ { i32 (%struct.FT_CharMapRec_*, %struct.TT_CMapInfo_*)* @tt_get_cmap_info }, align 8
@hexdigits = internal unnamed_addr constant [16 x i8] c"0123456789ABCDEF", align 16
@sfnt_ps_map = internal unnamed_addr constant [16 x i8] c"\00\00\00\00\DE|\FF\AF\FF\FF\FF\D7\FF\FF\FFW", align 16
@switch.table.sfnt_load_face = private unnamed_addr constant [11 x %struct.TEncoding_*] [%struct.TEncoding_* getelementptr inbounds ([11 x %struct.TEncoding_], [11 x %struct.TEncoding_]* @sfnt_find_encoding.tt_encodings, i64 0, i64 3), %struct.TEncoding_* getelementptr inbounds ([11 x %struct.TEncoding_], [11 x %struct.TEncoding_]* @sfnt_find_encoding.tt_encodings, i64 0, i64 5), %struct.TEncoding_* getelementptr inbounds ([11 x %struct.TEncoding_], [11 x %struct.TEncoding_]* @sfnt_find_encoding.tt_encodings, i64 0, i64 6), %struct.TEncoding_* getelementptr inbounds ([11 x %struct.TEncoding_], [11 x %struct.TEncoding_]* @sfnt_find_encoding.tt_encodings, i64 0, i64 7), %struct.TEncoding_* getelementptr inbounds ([11 x %struct.TEncoding_], [11 x %struct.TEncoding_]* @sfnt_find_encoding.tt_encodings, i64 0, i64 8), %struct.TEncoding_* getelementptr inbounds ([11 x %struct.TEncoding_], [11 x %struct.TEncoding_]* @sfnt_find_encoding.tt_encodings, i64 0, i64 9), %struct.TEncoding_* getelementptr inbounds ([11 x %struct.TEncoding_], [11 x %struct.TEncoding_]* @sfnt_find_encoding.tt_encodings, i64 0, i64 10), %struct.TEncoding_* getelementptr inbounds ([11 x %struct.TEncoding_], [11 x %struct.TEncoding_]* @sfnt_find_encoding.tt_encodings, i64 0, i64 3), %struct.TEncoding_* getelementptr inbounds ([11 x %struct.TEncoding_], [11 x %struct.TEncoding_]* @sfnt_find_encoding.tt_encodings, i64 0, i64 3), %struct.TEncoding_* getelementptr inbounds ([11 x %struct.TEncoding_], [11 x %struct.TEncoding_]* @sfnt_find_encoding.tt_encodings, i64 0, i64 3), %struct.TEncoding_* getelementptr inbounds ([11 x %struct.TEncoding_], [11 x %struct.TEncoding_]* @sfnt_find_encoding.tt_encodings, i64 0, i64 4)], align 8

; Function Attrs: nounwind ssp uwtable
define internal i8* @sfnt_get_interface(%struct.FT_ModuleRec_* nocapture readnone, i8*) #0 {
  %3 = tail call i8* @ft_service_list_lookup(%struct.FT_ServiceDescRec_* getelementptr inbounds ([5 x %struct.FT_ServiceDescRec_], [5 x %struct.FT_ServiceDescRec_]* @sfnt_services, i64 0, i64 0), i8* %1) #17
  ret i8* %3
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define internal i32 @tt_cmap_init(%struct.TT_CMapRec_* nocapture, i8*) #1 {
  %3 = getelementptr inbounds %struct.TT_CMapRec_, %struct.TT_CMapRec_* %0, i64 0, i32 1
  store i8* %1, i8** %3, align 8
  ret i32 0
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal i32 @tt_cmap0_char_index(%struct.TT_CMapRec_* nocapture readonly, i32) #2 {
  %3 = icmp ult i32 %1, 256
  br i1 %3, label %4, label %12

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.TT_CMapRec_, %struct.TT_CMapRec_* %0, i64 0, i32 1
  %6 = load i8*, i8** %5, align 8
  %7 = add nuw nsw i32 %1, 6
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds i8, i8* %6, i64 %8
  %10 = load i8, i8* %9, align 1
  %11 = zext i8 %10 to i32
  br label %12

12:                                               ; preds = %2, %4
  %13 = phi i32 [ %11, %4 ], [ 0, %2 ]
  ret i32 %13
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal i32 @tt_cmap0_char_next(%struct.TT_CMapRec_* nocapture readonly, i32* nocapture) #3 {
  %3 = getelementptr inbounds %struct.TT_CMapRec_, %struct.TT_CMapRec_* %0, i64 0, i32 1
  %4 = load i8*, i8** %3, align 8
  %5 = load i32, i32* %1, align 4
  %6 = getelementptr inbounds i8, i8* %4, i64 6
  br label %7

7:                                                ; preds = %11, %2
  %8 = phi i32 [ %5, %2 ], [ %9, %11 ]
  %9 = add i32 %8, 1
  %10 = icmp ult i32 %9, 256
  br i1 %10, label %11, label %18

11:                                               ; preds = %7
  %12 = zext i32 %9 to i64
  %13 = getelementptr inbounds i8, i8* %6, i64 %12
  %14 = load i8, i8* %13, align 1
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %7, label %16

16:                                               ; preds = %11
  %17 = zext i8 %14 to i32
  br label %18

18:                                               ; preds = %7, %16
  %19 = phi i32 [ %9, %16 ], [ 0, %7 ]
  %20 = phi i32 [ %17, %16 ], [ 0, %7 ]
  store i32 %19, i32* %1, align 4
  ret i32 %20
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @tt_cmap0_validate(i8* readonly, %struct.FT_ValidatorRec_*) #0 {
  %3 = getelementptr inbounds i8, i8* %0, i64 4
  %4 = getelementptr inbounds %struct.FT_ValidatorRec_, %struct.FT_ValidatorRec_* %1, i64 0, i32 2
  %5 = load volatile i8*, i8** %4, align 8
  %6 = icmp ugt i8* %3, %5
  br i1 %6, label %7, label %8

7:                                                ; preds = %2
  tail call void @ft_validator_error(%struct.FT_ValidatorRec_* %1, i32 8) #17
  br label %8

8:                                                ; preds = %7, %2
  %9 = getelementptr inbounds i8, i8* %0, i64 2
  %10 = load i8, i8* %9, align 1
  %11 = zext i8 %10 to i32
  %12 = shl nuw nsw i32 %11, 8
  %13 = getelementptr inbounds i8, i8* %0, i64 3
  %14 = load i8, i8* %13, align 1
  %15 = zext i8 %14 to i32
  %16 = or i32 %12, %15
  %17 = zext i32 %16 to i64
  %18 = getelementptr inbounds i8, i8* %0, i64 %17
  %19 = load volatile i8*, i8** %4, align 8
  %20 = icmp ugt i8* %18, %19
  %21 = icmp ult i32 %16, 262
  %22 = or i1 %21, %20
  br i1 %22, label %23, label %24

23:                                               ; preds = %8
  tail call void @ft_validator_error(%struct.FT_ValidatorRec_* %1, i32 8) #17
  br label %24

24:                                               ; preds = %8, %23
  %25 = getelementptr inbounds %struct.FT_ValidatorRec_, %struct.FT_ValidatorRec_* %1, i64 0, i32 3
  %26 = load volatile i32, i32* %25, align 8
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %44, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds i8, i8* %0, i64 6
  %30 = getelementptr inbounds %struct.FT_ValidatorRec_, %struct.FT_ValidatorRec_* %1, i64 1
  %31 = bitcast %struct.FT_ValidatorRec_* %30 to i32*
  br label %32

32:                                               ; preds = %41, %28
  %33 = phi i32 [ 0, %28 ], [ %42, %41 ]
  %34 = phi i8* [ %29, %28 ], [ %35, %41 ]
  %35 = getelementptr inbounds i8, i8* %34, i64 1
  %36 = load i8, i8* %34, align 1
  %37 = zext i8 %36 to i32
  %38 = load i32, i32* %31, align 8
  %39 = icmp ugt i32 %38, %37
  br i1 %39, label %41, label %40

40:                                               ; preds = %32
  tail call void @ft_validator_error(%struct.FT_ValidatorRec_* %1, i32 16) #17
  br label %41

41:                                               ; preds = %32, %40
  %42 = add nuw nsw i32 %33, 1
  %43 = icmp eq i32 %42, 256
  br i1 %43, label %44, label %32

44:                                               ; preds = %41, %24
  ret i32 0
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal i32 @tt_cmap0_get_info(%struct.TT_CMapRec_* nocapture readonly, %struct.TT_CMapInfo_* nocapture) #3 {
  %3 = getelementptr inbounds %struct.TT_CMapRec_, %struct.TT_CMapRec_* %0, i64 0, i32 1
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 4
  %6 = getelementptr inbounds %struct.TT_CMapInfo_, %struct.TT_CMapInfo_* %1, i64 0, i32 1
  store i64 0, i64* %6, align 8
  %7 = load i8, i8* %5, align 1
  %8 = zext i8 %7 to i64
  %9 = shl nuw nsw i64 %8, 8
  %10 = getelementptr inbounds i8, i8* %4, i64 5
  %11 = load i8, i8* %10, align 1
  %12 = zext i8 %11 to i64
  %13 = or i64 %9, %12
  %14 = getelementptr inbounds %struct.TT_CMapInfo_, %struct.TT_CMapInfo_* %1, i64 0, i32 0
  store i64 %13, i64* %14, align 8
  ret i32 0
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal i32 @tt_cmap2_char_index(%struct.TT_CMapRec_* nocapture readonly, i32) #2 {
  %3 = getelementptr inbounds %struct.TT_CMapRec_, %struct.TT_CMapRec_* %0, i64 0, i32 1
  %4 = load i8*, i8** %3, align 8
  %5 = icmp ult i32 %1, 65536
  br i1 %5, label %6, label %94

6:                                                ; preds = %2
  %7 = lshr i32 %1, 8
  %8 = getelementptr inbounds i8, i8* %4, i64 6
  %9 = getelementptr inbounds i8, i8* %4, i64 518
  %10 = icmp eq i32 %7, 0
  br i1 %10, label %11, label %24

11:                                               ; preds = %6
  %12 = shl i32 %1, 1
  %13 = and i32 %12, 510
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds i8, i8* %8, i64 %14
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i32
  %18 = shl nuw nsw i32 %17, 8
  %19 = getelementptr inbounds i8, i8* %15, i64 1
  %20 = load i8, i8* %19, align 1
  %21 = zext i8 %20 to i32
  %22 = or i32 %18, %21
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %38, label %94

24:                                               ; preds = %6
  %25 = shl nuw nsw i32 %7, 1
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds i8, i8* %8, i64 %26
  %28 = load i8, i8* %27, align 1
  %29 = zext i8 %28 to i64
  %30 = shl nuw nsw i64 %29, 8
  %31 = getelementptr inbounds i8, i8* %27, i64 1
  %32 = load i8, i8* %31, align 1
  %33 = and i8 %32, -8
  %34 = zext i8 %33 to i64
  %35 = or i64 %30, %34
  %36 = getelementptr inbounds i8, i8* %9, i64 %35
  %37 = icmp eq i64 %35, 0
  br i1 %37, label %94, label %38

38:                                               ; preds = %11, %24
  %39 = phi i8* [ %9, %11 ], [ %36, %24 ]
  %40 = icmp eq i8* %39, null
  br i1 %40, label %94, label %41

41:                                               ; preds = %38
  %42 = and i32 %1, 255
  %43 = load i8, i8* %39, align 1
  %44 = zext i8 %43 to i32
  %45 = shl nuw nsw i32 %44, 8
  %46 = getelementptr inbounds i8, i8* %39, i64 1
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i32
  %49 = or i32 %45, %48
  %50 = getelementptr inbounds i8, i8* %39, i64 2
  %51 = load i8, i8* %50, align 1
  %52 = zext i8 %51 to i32
  %53 = shl nuw nsw i32 %52, 8
  %54 = getelementptr inbounds i8, i8* %39, i64 3
  %55 = load i8, i8* %54, align 1
  %56 = zext i8 %55 to i32
  %57 = or i32 %53, %56
  %58 = getelementptr inbounds i8, i8* %39, i64 6
  %59 = getelementptr inbounds i8, i8* %39, i64 4
  %60 = load i8, i8* %59, align 1
  %61 = zext i8 %60 to i32
  %62 = shl nuw nsw i32 %61, 8
  %63 = getelementptr inbounds i8, i8* %39, i64 5
  %64 = load i8, i8* %63, align 1
  %65 = zext i8 %64 to i32
  %66 = or i32 %62, %65
  %67 = load i8, i8* %58, align 1
  %68 = zext i8 %67 to i32
  %69 = shl nuw nsw i32 %68, 8
  %70 = getelementptr inbounds i8, i8* %39, i64 7
  %71 = load i8, i8* %70, align 1
  %72 = zext i8 %71 to i32
  %73 = or i32 %69, %72
  %74 = sub nsw i32 %42, %49
  %75 = icmp ult i32 %74, %57
  %76 = icmp ne i32 %73, 0
  %77 = and i1 %75, %76
  br i1 %77, label %78, label %94

78:                                               ; preds = %41
  %79 = shl nsw i32 %74, 1
  %80 = add nsw i32 %73, %79
  %81 = zext i32 %80 to i64
  %82 = getelementptr inbounds i8, i8* %58, i64 %81
  %83 = load i8, i8* %82, align 1
  %84 = zext i8 %83 to i32
  %85 = shl nuw nsw i32 %84, 8
  %86 = getelementptr inbounds i8, i8* %82, i64 1
  %87 = load i8, i8* %86, align 1
  %88 = zext i8 %87 to i32
  %89 = or i32 %85, %88
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %94, label %91

91:                                               ; preds = %78
  %92 = add nuw nsw i32 %89, %66
  %93 = and i32 %92, 65535
  br label %94

94:                                               ; preds = %24, %11, %2, %41, %91, %78, %38
  %95 = phi i32 [ 0, %38 ], [ %93, %91 ], [ 0, %78 ], [ 0, %41 ], [ 0, %2 ], [ 0, %11 ], [ 0, %24 ]
  ret i32 %95
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal i32 @tt_cmap2_char_next(%struct.TT_CMapRec_* nocapture readonly, i32* nocapture) #3 {
  %3 = getelementptr inbounds %struct.TT_CMapRec_, %struct.TT_CMapRec_* %0, i64 0, i32 1
  %4 = load i8*, i8** %3, align 8
  %5 = load i32, i32* %1, align 4
  %6 = add i32 %5, 1
  %7 = icmp ult i32 %6, 65536
  br i1 %7, label %8, label %134

8:                                                ; preds = %2
  %9 = getelementptr inbounds i8, i8* %4, i64 6
  %10 = getelementptr inbounds i8, i8* %4, i64 518
  br label %11

11:                                               ; preds = %8, %131
  %12 = phi i32 [ %6, %8 ], [ %132, %131 ]
  %13 = lshr i32 %12, 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %28

15:                                               ; preds = %11
  %16 = shl i32 %12, 1
  %17 = and i32 %16, 510
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds i8, i8* %9, i64 %18
  %20 = load i8, i8* %19, align 1
  %21 = zext i8 %20 to i32
  %22 = shl nuw nsw i32 %21, 8
  %23 = getelementptr inbounds i8, i8* %19, i64 1
  %24 = load i8, i8* %23, align 1
  %25 = zext i8 %24 to i32
  %26 = or i32 %22, %25
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %42, label %124

28:                                               ; preds = %11
  %29 = shl nuw nsw i32 %13, 1
  %30 = zext i32 %29 to i64
  %31 = getelementptr inbounds i8, i8* %9, i64 %30
  %32 = load i8, i8* %31, align 1
  %33 = zext i8 %32 to i64
  %34 = shl nuw nsw i64 %33, 8
  %35 = getelementptr inbounds i8, i8* %31, i64 1
  %36 = load i8, i8* %35, align 1
  %37 = and i8 %36, -8
  %38 = zext i8 %37 to i64
  %39 = or i64 %34, %38
  %40 = getelementptr inbounds i8, i8* %10, i64 %39
  %41 = icmp eq i64 %39, 0
  br i1 %41, label %124, label %42

42:                                               ; preds = %15, %28
  %43 = phi i8* [ %10, %15 ], [ %40, %28 ]
  %44 = icmp eq i8* %43, null
  br i1 %44, label %124, label %45

45:                                               ; preds = %42
  %46 = load i8, i8* %43, align 1
  %47 = zext i8 %46 to i32
  %48 = shl nuw nsw i32 %47, 8
  %49 = getelementptr inbounds i8, i8* %43, i64 1
  %50 = load i8, i8* %49, align 1
  %51 = zext i8 %50 to i32
  %52 = or i32 %48, %51
  %53 = getelementptr inbounds i8, i8* %43, i64 2
  %54 = load i8, i8* %53, align 1
  %55 = zext i8 %54 to i32
  %56 = shl nuw nsw i32 %55, 8
  %57 = getelementptr inbounds i8, i8* %43, i64 3
  %58 = load i8, i8* %57, align 1
  %59 = zext i8 %58 to i32
  %60 = or i32 %56, %59
  %61 = getelementptr inbounds i8, i8* %43, i64 6
  %62 = getelementptr inbounds i8, i8* %43, i64 4
  %63 = load i8, i8* %62, align 1
  %64 = zext i8 %63 to i32
  %65 = shl nuw nsw i32 %64, 8
  %66 = getelementptr inbounds i8, i8* %43, i64 5
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i32
  %69 = or i32 %65, %68
  %70 = load i8, i8* %61, align 1
  %71 = zext i8 %70 to i32
  %72 = shl nuw nsw i32 %71, 8
  %73 = getelementptr inbounds i8, i8* %43, i64 7
  %74 = load i8, i8* %73, align 1
  %75 = zext i8 %74 to i32
  %76 = or i32 %72, %75
  %77 = and i32 %12, 255
  %78 = add nuw nsw i32 %60, %52
  %79 = icmp uge i32 %77, %78
  %80 = icmp ult i32 %12, 256
  %81 = and i1 %80, %79
  br i1 %81, label %131, label %82

82:                                               ; preds = %45
  %83 = icmp eq i32 %76, 0
  br i1 %83, label %84, label %86

84:                                               ; preds = %82
  %85 = icmp eq i32 %12, 256
  br i1 %85, label %134, label %124

86:                                               ; preds = %82
  %87 = icmp ult i32 %77, %52
  %88 = select i1 %87, i32 %52, i32 %77
  %89 = tail call i32 @llvm.usub.sat.i32(i32 %77, i32 %52)
  %90 = and i32 %12, -256
  %91 = add i32 %88, %90
  %92 = icmp ult i32 %89, %60
  br i1 %92, label %93, label %119

93:                                               ; preds = %86
  %94 = shl nuw nsw i32 %89, 1
  %95 = add nuw nsw i32 %76, %94
  %96 = zext i32 %95 to i64
  %97 = getelementptr inbounds i8, i8* %61, i64 %96
  br label %98

98:                                               ; preds = %115, %93
  %99 = phi i32 [ %116, %115 ], [ %89, %93 ]
  %100 = phi i8* [ %102, %115 ], [ %97, %93 ]
  %101 = phi i32 [ %117, %115 ], [ %91, %93 ]
  %102 = getelementptr inbounds i8, i8* %100, i64 2
  %103 = load i8, i8* %100, align 1
  %104 = zext i8 %103 to i32
  %105 = shl nuw nsw i32 %104, 8
  %106 = getelementptr inbounds i8, i8* %100, i64 1
  %107 = load i8, i8* %106, align 1
  %108 = zext i8 %107 to i32
  %109 = or i32 %105, %108
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %115, label %111

111:                                              ; preds = %98
  %112 = add nuw nsw i32 %109, %69
  %113 = and i32 %112, 65535
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %115, label %134

115:                                              ; preds = %111, %98
  %116 = add nuw nsw i32 %99, 1
  %117 = add i32 %101, 1
  %118 = icmp eq i32 %116, %60
  br i1 %118, label %119, label %98

119:                                              ; preds = %115, %86
  %120 = phi i32 [ %91, %86 ], [ %117, %115 ]
  %121 = icmp ne i32 %60, 0
  %122 = zext i1 %121 to i32
  %123 = sub i32 %120, %122
  br label %124

124:                                              ; preds = %84, %119, %28, %15, %42
  %125 = phi i32 [ %12, %42 ], [ %12, %15 ], [ %12, %28 ], [ %12, %84 ], [ %123, %119 ]
  %126 = icmp ult i32 %125, 256
  %127 = add i32 %125, 1
  %128 = add i32 %125, 256
  %129 = and i32 %128, -256
  %130 = select i1 %126, i32 %127, i32 %129
  br label %131

131:                                              ; preds = %124, %45
  %132 = phi i32 [ %130, %124 ], [ 256, %45 ]
  %133 = icmp ult i32 %132, 65536
  br i1 %133, label %11, label %134

134:                                              ; preds = %131, %84, %111, %2
  %135 = phi i32 [ 0, %2 ], [ %113, %111 ], [ 0, %84 ], [ 0, %131 ]
  %136 = phi i32 [ 0, %2 ], [ %101, %111 ], [ 0, %84 ], [ 0, %131 ]
  store i32 %136, i32* %1, align 4
  ret i32 %135
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @tt_cmap2_validate(i8* readonly, %struct.FT_ValidatorRec_*) #0 {
  %3 = getelementptr inbounds i8, i8* %0, i64 4
  %4 = getelementptr inbounds %struct.FT_ValidatorRec_, %struct.FT_ValidatorRec_* %1, i64 0, i32 2
  %5 = load volatile i8*, i8** %4, align 8
  %6 = icmp ugt i8* %3, %5
  br i1 %6, label %7, label %8

7:                                                ; preds = %2
  tail call void @ft_validator_error(%struct.FT_ValidatorRec_* %1, i32 8) #17
  br label %8

8:                                                ; preds = %7, %2
  %9 = getelementptr inbounds i8, i8* %0, i64 2
  %10 = load i8, i8* %9, align 1
  %11 = zext i8 %10 to i32
  %12 = shl nuw nsw i32 %11, 8
  %13 = getelementptr inbounds i8, i8* %0, i64 3
  %14 = load i8, i8* %13, align 1
  %15 = zext i8 %14 to i32
  %16 = or i32 %12, %15
  %17 = zext i32 %16 to i64
  %18 = getelementptr inbounds i8, i8* %0, i64 %17
  %19 = load volatile i8*, i8** %4, align 8
  %20 = icmp ugt i8* %18, %19
  %21 = icmp ult i32 %16, 518
  %22 = or i1 %21, %20
  br i1 %22, label %23, label %24

23:                                               ; preds = %8
  tail call void @ft_validator_error(%struct.FT_ValidatorRec_* %1, i32 8) #17
  br label %24

24:                                               ; preds = %8, %23
  %25 = getelementptr inbounds i8, i8* %0, i64 6
  %26 = getelementptr inbounds %struct.FT_ValidatorRec_, %struct.FT_ValidatorRec_* %1, i64 0, i32 3
  br label %27

27:                                               ; preds = %45, %24
  %28 = phi i32 [ 0, %24 ], [ %48, %45 ]
  %29 = phi i32 [ 0, %24 ], [ %49, %45 ]
  %30 = phi i8* [ %25, %24 ], [ %31, %45 ]
  %31 = getelementptr inbounds i8, i8* %30, i64 2
  %32 = load i8, i8* %30, align 1
  %33 = zext i8 %32 to i32
  %34 = shl nuw nsw i32 %33, 8
  %35 = getelementptr inbounds i8, i8* %30, i64 1
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i32
  %38 = or i32 %34, %37
  %39 = load volatile i32, i32* %26, align 8
  %40 = icmp ult i32 %39, 2
  %41 = and i32 %37, 7
  %42 = icmp eq i32 %41, 0
  %43 = or i1 %40, %42
  br i1 %43, label %45, label %44

44:                                               ; preds = %27
  tail call void @ft_validator_error(%struct.FT_ValidatorRec_* %1, i32 8) #17
  br label %45

45:                                               ; preds = %27, %44
  %46 = lshr i32 %38, 3
  %47 = icmp ugt i32 %46, %28
  %48 = select i1 %47, i32 %46, i32 %28
  %49 = add nuw nsw i32 %29, 1
  %50 = icmp eq i32 %49, 256
  br i1 %50, label %51, label %27

51:                                               ; preds = %45
  %52 = getelementptr i8, i8* %0, i64 518
  %53 = shl i32 %48, 3
  %54 = add i32 %53, 8
  %55 = zext i32 %54 to i64
  %56 = getelementptr inbounds i8, i8* %52, i64 %55
  %57 = load volatile i8*, i8** %4, align 8
  %58 = icmp ugt i8* %56, %57
  br i1 %58, label %59, label %60

59:                                               ; preds = %51
  tail call void @ft_validator_error(%struct.FT_ValidatorRec_* %1, i32 8) #17
  br label %60

60:                                               ; preds = %59, %51
  %61 = getelementptr inbounds %struct.FT_ValidatorRec_, %struct.FT_ValidatorRec_* %1, i64 1
  %62 = bitcast %struct.FT_ValidatorRec_* %61 to i32*
  br label %63

63:                                               ; preds = %60, %147
  %64 = phi i32 [ 0, %60 ], [ %149, %147 ]
  %65 = phi i8* [ %52, %60 ], [ %148, %147 ]
  %66 = load i8, i8* %65, align 1
  %67 = zext i8 %66 to i32
  %68 = shl nuw nsw i32 %67, 8
  %69 = getelementptr inbounds i8, i8* %65, i64 1
  %70 = load i8, i8* %69, align 1
  %71 = zext i8 %70 to i32
  %72 = or i32 %68, %71
  %73 = getelementptr inbounds i8, i8* %65, i64 2
  %74 = load i8, i8* %73, align 1
  %75 = zext i8 %74 to i32
  %76 = shl nuw nsw i32 %75, 8
  %77 = getelementptr inbounds i8, i8* %65, i64 3
  %78 = load i8, i8* %77, align 1
  %79 = zext i8 %78 to i32
  %80 = or i32 %76, %79
  %81 = getelementptr inbounds i8, i8* %65, i64 4
  %82 = load i8, i8* %81, align 1
  %83 = zext i8 %82 to i32
  %84 = shl nuw nsw i32 %83, 8
  %85 = getelementptr inbounds i8, i8* %65, i64 5
  %86 = load i8, i8* %85, align 1
  %87 = zext i8 %86 to i32
  %88 = or i32 %84, %87
  %89 = getelementptr inbounds i8, i8* %65, i64 8
  %90 = getelementptr inbounds i8, i8* %65, i64 6
  %91 = load i8, i8* %90, align 1
  %92 = zext i8 %91 to i32
  %93 = shl nuw nsw i32 %92, 8
  %94 = getelementptr inbounds i8, i8* %65, i64 7
  %95 = load i8, i8* %94, align 1
  %96 = zext i8 %95 to i32
  %97 = or i32 %93, %96
  %98 = icmp eq i32 %80, 0
  br i1 %98, label %147, label %99

99:                                               ; preds = %63
  %100 = load volatile i32, i32* %26, align 8
  %101 = icmp ugt i32 %100, 1
  br i1 %101, label %102, label %108

102:                                              ; preds = %99
  %103 = icmp ugt i32 %72, 255
  %104 = sub nsw i32 256, %72
  %105 = icmp ugt i32 %80, %104
  %106 = or i1 %103, %105
  br i1 %106, label %107, label %108

107:                                              ; preds = %102
  tail call void @ft_validator_error(%struct.FT_ValidatorRec_* %1, i32 8) #17
  br label %108

108:                                              ; preds = %102, %107, %99
  %109 = icmp eq i32 %97, 0
  br i1 %109, label %147, label %110

110:                                              ; preds = %108
  %111 = zext i32 %97 to i64
  %112 = getelementptr inbounds i8, i8* %90, i64 %111
  %113 = icmp ult i8* %112, %56
  br i1 %113, label %119, label %114

114:                                              ; preds = %110
  %115 = shl nuw nsw i32 %80, 1
  %116 = zext i32 %115 to i64
  %117 = getelementptr inbounds i8, i8* %112, i64 %116
  %118 = icmp ugt i8* %117, %18
  br i1 %118, label %119, label %120

119:                                              ; preds = %114, %110
  tail call void @ft_validator_error(%struct.FT_ValidatorRec_* %1, i32 9) #17
  br label %120

120:                                              ; preds = %119, %114
  %121 = load volatile i32, i32* %26, align 8
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %147, label %123

123:                                              ; preds = %120
  %124 = shl nuw nsw i32 %80, 1
  %125 = add nuw nsw i32 %124, 8
  %126 = zext i32 %125 to i64
  %127 = getelementptr inbounds i8, i8* %65, i64 %126
  br label %128

128:                                              ; preds = %123, %145
  %129 = phi i8* [ %130, %145 ], [ %89, %123 ]
  %130 = getelementptr inbounds i8, i8* %129, i64 2
  %131 = load i8, i8* %129, align 1
  %132 = zext i8 %131 to i32
  %133 = shl nuw nsw i32 %132, 8
  %134 = getelementptr inbounds i8, i8* %129, i64 1
  %135 = load i8, i8* %134, align 1
  %136 = zext i8 %135 to i32
  %137 = or i32 %133, %136
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %145, label %139

139:                                              ; preds = %128
  %140 = add nuw nsw i32 %137, %88
  %141 = and i32 %140, 65535
  %142 = load i32, i32* %62, align 8
  %143 = icmp ult i32 %141, %142
  br i1 %143, label %145, label %144

144:                                              ; preds = %139
  tail call void @ft_validator_error(%struct.FT_ValidatorRec_* %1, i32 16) #17
  br label %145

145:                                              ; preds = %139, %128, %144
  %146 = icmp ult i8* %130, %127
  br i1 %146, label %128, label %147

147:                                              ; preds = %145, %108, %120, %63
  %148 = phi i8* [ %89, %63 ], [ %89, %108 ], [ %89, %120 ], [ %130, %145 ]
  %149 = add i32 %64, 1
  %150 = icmp ugt i32 %149, %48
  br i1 %150, label %151, label %63

151:                                              ; preds = %147
  ret i32 0
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal i32 @tt_cmap2_get_info(%struct.TT_CMapRec_* nocapture readonly, %struct.TT_CMapInfo_* nocapture) #3 {
  %3 = getelementptr inbounds %struct.TT_CMapRec_, %struct.TT_CMapRec_* %0, i64 0, i32 1
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 4
  %6 = getelementptr inbounds %struct.TT_CMapInfo_, %struct.TT_CMapInfo_* %1, i64 0, i32 1
  store i64 2, i64* %6, align 8
  %7 = load i8, i8* %5, align 1
  %8 = zext i8 %7 to i64
  %9 = shl nuw nsw i64 %8, 8
  %10 = getelementptr inbounds i8, i8* %4, i64 5
  %11 = load i8, i8* %10, align 1
  %12 = zext i8 %11 to i64
  %13 = or i64 %9, %12
  %14 = getelementptr inbounds %struct.TT_CMapInfo_, %struct.TT_CMapInfo_* %1, i64 0, i32 0
  store i64 %13, i64* %14, align 8
  ret i32 0
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal i32 @tt_cmap4_init(%struct.TT_CMap4Rec_* nocapture, i8*) #3 {
  %3 = getelementptr inbounds %struct.TT_CMap4Rec_, %struct.TT_CMap4Rec_* %0, i64 0, i32 0, i32 1
  store i8* %1, i8** %3, align 8
  %4 = getelementptr inbounds i8, i8* %1, i64 6
  %5 = load i8, i8* %4, align 1
  %6 = zext i8 %5 to i32
  %7 = shl nuw nsw i32 %6, 8
  %8 = getelementptr inbounds i8, i8* %1, i64 7
  %9 = load i8, i8* %8, align 1
  %10 = zext i8 %9 to i32
  %11 = or i32 %7, %10
  %12 = lshr i32 %11, 1
  %13 = getelementptr inbounds %struct.TT_CMap4Rec_, %struct.TT_CMap4Rec_* %0, i64 0, i32 3
  store i32 %12, i32* %13, align 8
  %14 = getelementptr inbounds %struct.TT_CMap4Rec_, %struct.TT_CMap4Rec_* %0, i64 0, i32 1
  store i32 -1, i32* %14, align 8
  %15 = getelementptr inbounds %struct.TT_CMap4Rec_, %struct.TT_CMap4Rec_* %0, i64 0, i32 2
  store i32 0, i32* %15, align 4
  ret i32 0
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal i32 @tt_cmap4_char_index(%struct.TT_CMapRec_* nocapture, i32) #3 {
  %3 = alloca i32, align 4
  store i32 %1, i32* %3, align 4
  %4 = icmp ugt i32 %1, 65535
  br i1 %4, label %14, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.TT_CMapRec_, %struct.TT_CMapRec_* %0, i64 0, i32 2
  %7 = load i32, i32* %6, align 8
  %8 = and i32 %7, 1
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %12, label %10

10:                                               ; preds = %5
  %11 = call fastcc i32 @tt_cmap4_char_map_linear(%struct.TT_CMapRec_* %0, i32* nonnull %3, i8 zeroext 0)
  br label %14

12:                                               ; preds = %5
  %13 = call fastcc i32 @tt_cmap4_char_map_binary(%struct.TT_CMapRec_* %0, i32* nonnull %3, i8 zeroext 0)
  br label %14

14:                                               ; preds = %2, %12, %10
  %15 = phi i32 [ %11, %10 ], [ %13, %12 ], [ 0, %2 ]
  ret i32 %15
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal i32 @tt_cmap4_char_next(%struct.TT_CMapRec_* nocapture, i32* nocapture) #3 {
  %3 = load i32, i32* %1, align 4
  %4 = icmp ugt i32 %3, 65534
  br i1 %4, label %26, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.TT_CMapRec_, %struct.TT_CMapRec_* %0, i64 0, i32 2
  %7 = load i32, i32* %6, align 8
  %8 = and i32 %7, 1
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %12, label %10

10:                                               ; preds = %5
  %11 = tail call fastcc i32 @tt_cmap4_char_map_linear(%struct.TT_CMapRec_* %0, i32* %1, i8 zeroext 1)
  br label %26

12:                                               ; preds = %5
  %13 = bitcast %struct.TT_CMapRec_* %0 to %struct.TT_CMap4Rec_*
  %14 = getelementptr inbounds %struct.TT_CMapRec_, %struct.TT_CMapRec_* %0, i64 1
  %15 = bitcast %struct.TT_CMapRec_* %14 to i32*
  %16 = load i32, i32* %15, align 8
  %17 = icmp eq i32 %3, %16
  br i1 %17, label %18, label %24

18:                                               ; preds = %12
  tail call fastcc void @tt_cmap4_next(%struct.TT_CMap4Rec_* %13)
  %19 = getelementptr inbounds %struct.TT_CMap4Rec_, %struct.TT_CMap4Rec_* %13, i64 0, i32 2
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %26, label %22

22:                                               ; preds = %18
  %23 = load i32, i32* %15, align 8
  store i32 %23, i32* %1, align 4
  br label %26

24:                                               ; preds = %12
  %25 = tail call fastcc i32 @tt_cmap4_char_map_binary(%struct.TT_CMapRec_* %0, i32* %1, i8 zeroext 1)
  br label %26

26:                                               ; preds = %10, %18, %22, %24, %2
  %27 = phi i32 [ 0, %2 ], [ %11, %10 ], [ %20, %22 ], [ 0, %18 ], [ %25, %24 ]
  ret i32 %27
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @tt_cmap4_validate(i8*, %struct.FT_ValidatorRec_*) #0 {
  %3 = getelementptr inbounds i8, i8* %0, i64 4
  %4 = getelementptr inbounds %struct.FT_ValidatorRec_, %struct.FT_ValidatorRec_* %1, i64 0, i32 2
  %5 = load volatile i8*, i8** %4, align 8
  %6 = icmp ugt i8* %3, %5
  br i1 %6, label %7, label %8

7:                                                ; preds = %2
  tail call void @ft_validator_error(%struct.FT_ValidatorRec_* %1, i32 8) #17
  br label %8

8:                                                ; preds = %7, %2
  %9 = getelementptr inbounds i8, i8* %0, i64 2
  %10 = load i8, i8* %9, align 1
  %11 = zext i8 %10 to i32
  %12 = shl nuw nsw i32 %11, 8
  %13 = getelementptr inbounds i8, i8* %0, i64 3
  %14 = load i8, i8* %13, align 1
  %15 = zext i8 %14 to i32
  %16 = or i32 %12, %15
  %17 = zext i32 %16 to i64
  %18 = getelementptr inbounds i8, i8* %0, i64 %17
  %19 = load volatile i8*, i8** %4, align 8
  %20 = icmp ugt i8* %18, %19
  br i1 %20, label %21, label %32

21:                                               ; preds = %8
  %22 = getelementptr inbounds %struct.FT_ValidatorRec_, %struct.FT_ValidatorRec_* %1, i64 0, i32 3
  %23 = load volatile i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %26, label %25

25:                                               ; preds = %21
  tail call void @ft_validator_error(%struct.FT_ValidatorRec_* %1, i32 8) #17
  br label %26

26:                                               ; preds = %21, %25
  %27 = load volatile i8*, i8** %4, align 8
  %28 = ptrtoint i8* %27 to i64
  %29 = ptrtoint i8* %0 to i64
  %30 = sub i64 %28, %29
  %31 = trunc i64 %30 to i32
  br label %32

32:                                               ; preds = %26, %8
  %33 = phi i32 [ %31, %26 ], [ %16, %8 ]
  %34 = icmp ult i32 %33, 16
  br i1 %34, label %35, label %36

35:                                               ; preds = %32
  tail call void @ft_validator_error(%struct.FT_ValidatorRec_* %1, i32 8) #17
  br label %36

36:                                               ; preds = %35, %32
  %37 = getelementptr inbounds i8, i8* %0, i64 6
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i32
  %40 = shl nuw nsw i32 %39, 8
  %41 = getelementptr inbounds i8, i8* %0, i64 7
  %42 = load i8, i8* %41, align 1
  %43 = zext i8 %42 to i32
  %44 = or i32 %40, %43
  %45 = getelementptr inbounds %struct.FT_ValidatorRec_, %struct.FT_ValidatorRec_* %1, i64 0, i32 3
  %46 = load volatile i32, i32* %45, align 8
  %47 = icmp ult i32 %46, 2
  %48 = and i32 %43, 1
  %49 = icmp eq i32 %48, 0
  %50 = or i1 %47, %49
  br i1 %50, label %52, label %51

51:                                               ; preds = %36
  tail call void @ft_validator_error(%struct.FT_ValidatorRec_* %1, i32 8) #17
  br label %52

52:                                               ; preds = %36, %51
  %53 = lshr i32 %44, 1
  %54 = and i32 %44, 65534
  %55 = shl nuw nsw i32 %54, 2
  %56 = add nuw nsw i32 %55, 16
  %57 = icmp ult i32 %33, %56
  br i1 %57, label %58, label %59

58:                                               ; preds = %52
  tail call void @ft_validator_error(%struct.FT_ValidatorRec_* %1, i32 8) #17
  br label %59

59:                                               ; preds = %58, %52
  %60 = load volatile i32, i32* %45, align 8
  %61 = icmp ugt i32 %60, 1
  br i1 %61, label %62, label %105

62:                                               ; preds = %59
  %63 = getelementptr inbounds i8, i8* %0, i64 8
  %64 = load i8, i8* %63, align 1
  %65 = zext i8 %64 to i32
  %66 = shl nuw nsw i32 %65, 8
  %67 = getelementptr inbounds i8, i8* %0, i64 9
  %68 = load i8, i8* %67, align 1
  %69 = zext i8 %68 to i32
  %70 = or i32 %66, %69
  %71 = getelementptr inbounds i8, i8* %0, i64 10
  %72 = load i8, i8* %71, align 1
  %73 = zext i8 %72 to i32
  %74 = shl nuw nsw i32 %73, 8
  %75 = getelementptr inbounds i8, i8* %0, i64 11
  %76 = load i8, i8* %75, align 1
  %77 = zext i8 %76 to i32
  %78 = or i32 %74, %77
  %79 = getelementptr inbounds i8, i8* %0, i64 12
  %80 = load i8, i8* %79, align 1
  %81 = zext i8 %80 to i32
  %82 = shl nuw nsw i32 %81, 8
  %83 = getelementptr inbounds i8, i8* %0, i64 13
  %84 = load i8, i8* %83, align 1
  %85 = zext i8 %84 to i32
  %86 = or i32 %82, %85
  %87 = or i8 %84, %68
  %88 = and i8 %87, 1
  %89 = icmp eq i8 %88, 0
  br i1 %89, label %91, label %90

90:                                               ; preds = %62
  tail call void @ft_validator_error(%struct.FT_ValidatorRec_* %1, i32 8) #17
  br label %91

91:                                               ; preds = %62, %90
  %92 = lshr i32 %70, 1
  %93 = lshr i32 %86, 1
  %94 = icmp ule i32 %92, %53
  %95 = and i32 %70, 65534
  %96 = icmp uge i32 %95, %53
  %97 = and i1 %96, %94
  %98 = add nuw nsw i32 %93, %92
  %99 = icmp eq i32 %98, %53
  %100 = and i1 %97, %99
  %101 = shl i32 1, %78
  %102 = icmp eq i32 %92, %101
  %103 = and i1 %102, %100
  br i1 %103, label %105, label %104

104:                                              ; preds = %91
  tail call void @ft_validator_error(%struct.FT_ValidatorRec_* %1, i32 8) #17
  br label %105

105:                                              ; preds = %104, %91, %59
  %106 = getelementptr inbounds i8, i8* %0, i64 14
  %107 = getelementptr inbounds i8, i8* %0, i64 16
  %108 = zext i32 %54 to i64
  %109 = getelementptr inbounds i8, i8* %107, i64 %108
  %110 = getelementptr inbounds i8, i8* %109, i64 %108
  %111 = getelementptr inbounds i8, i8* %110, i64 %108
  %112 = getelementptr inbounds i8, i8* %111, i64 %108
  %113 = load volatile i32, i32* %45, align 8
  %114 = icmp ugt i32 %113, 1
  br i1 %114, label %115, label %128

115:                                              ; preds = %105
  %116 = add nsw i32 %54, -2
  %117 = zext i32 %116 to i64
  %118 = getelementptr inbounds i8, i8* %106, i64 %117
  %119 = load i8, i8* %118, align 1
  %120 = zext i8 %119 to i32
  %121 = shl nuw nsw i32 %120, 8
  %122 = getelementptr inbounds i8, i8* %118, i64 1
  %123 = load i8, i8* %122, align 1
  %124 = zext i8 %123 to i32
  %125 = or i32 %121, %124
  %126 = icmp eq i32 %125, 65535
  br i1 %126, label %128, label %127

127:                                              ; preds = %115
  tail call void @ft_validator_error(%struct.FT_ValidatorRec_* %1, i32 8) #17
  br label %128

128:                                              ; preds = %115, %127, %105
  %129 = icmp eq i32 %53, 0
  br i1 %129, label %269, label %130

130:                                              ; preds = %128
  %131 = add nsw i32 %53, -1
  %132 = zext i32 %33 to i64
  %133 = getelementptr inbounds i8, i8* %0, i64 %132
  %134 = getelementptr inbounds %struct.FT_ValidatorRec_, %struct.FT_ValidatorRec_* %1, i64 1
  %135 = bitcast %struct.FT_ValidatorRec_* %134 to i32*
  br label %136

136:                                              ; preds = %266, %130
  %137 = phi i8* [ %111, %130 ], [ %169, %266 ]
  %138 = phi i8* [ %110, %130 ], [ %161, %266 ]
  %139 = phi i8* [ %106, %130 ], [ %153, %266 ]
  %140 = phi i8* [ %109, %130 ], [ %145, %266 ]
  %141 = phi i32 [ 0, %130 ], [ %160, %266 ]
  %142 = phi i32 [ 0, %130 ], [ %152, %266 ]
  %143 = phi i32 [ 0, %130 ], [ %267, %266 ]
  %144 = phi i32 [ 0, %130 ], [ %196, %266 ]
  %145 = getelementptr inbounds i8, i8* %140, i64 2
  %146 = load i8, i8* %140, align 1
  %147 = zext i8 %146 to i32
  %148 = shl nuw nsw i32 %147, 8
  %149 = getelementptr inbounds i8, i8* %140, i64 1
  %150 = load i8, i8* %149, align 1
  %151 = zext i8 %150 to i32
  %152 = or i32 %148, %151
  %153 = getelementptr inbounds i8, i8* %139, i64 2
  %154 = load i8, i8* %139, align 1
  %155 = zext i8 %154 to i32
  %156 = shl nuw nsw i32 %155, 8
  %157 = getelementptr inbounds i8, i8* %139, i64 1
  %158 = load i8, i8* %157, align 1
  %159 = zext i8 %158 to i32
  %160 = or i32 %156, %159
  %161 = getelementptr inbounds i8, i8* %138, i64 2
  %162 = load i8, i8* %138, align 1
  %163 = zext i8 %162 to i32
  %164 = shl nuw nsw i32 %163, 8
  %165 = getelementptr inbounds i8, i8* %138, i64 1
  %166 = load i8, i8* %165, align 1
  %167 = zext i8 %166 to i32
  %168 = or i32 %164, %167
  %169 = getelementptr inbounds i8, i8* %137, i64 2
  %170 = load i8, i8* %137, align 1
  %171 = zext i8 %170 to i32
  %172 = shl nuw nsw i32 %171, 8
  %173 = getelementptr inbounds i8, i8* %137, i64 1
  %174 = load i8, i8* %173, align 1
  %175 = zext i8 %174 to i32
  %176 = or i32 %172, %175
  %177 = icmp ult i32 %160, %152
  br i1 %177, label %178, label %179

178:                                              ; preds = %136
  tail call void @ft_validator_error(%struct.FT_ValidatorRec_* %1, i32 8) #17
  br label %179

179:                                              ; preds = %178, %136
  %180 = icmp ule i32 %152, %141
  %181 = icmp ne i32 %143, 0
  %182 = and i1 %181, %180
  br i1 %182, label %183, label %195

183:                                              ; preds = %179
  %184 = load volatile i32, i32* %45, align 8
  %185 = icmp eq i32 %184, 0
  br i1 %185, label %187, label %186

186:                                              ; preds = %183
  tail call void @ft_validator_error(%struct.FT_ValidatorRec_* %1, i32 8) #17
  br label %195

187:                                              ; preds = %183
  %188 = icmp ugt i32 %142, %152
  %189 = icmp ugt i32 %141, %160
  %190 = or i1 %188, %189
  br i1 %190, label %191, label %193

191:                                              ; preds = %187
  %192 = or i32 %144, 1
  br label %195

193:                                              ; preds = %187
  %194 = or i32 %144, 2
  br label %195

195:                                              ; preds = %186, %193, %191, %179
  %196 = phi i32 [ %144, %186 ], [ %192, %191 ], [ %194, %193 ], [ %144, %179 ]
  %197 = trunc i32 %176 to i16
  switch i16 %197, label %198 [
    i16 -1, label %256
    i16 0, label %266
  ]

198:                                              ; preds = %195
  %199 = zext i32 %176 to i64
  %200 = getelementptr inbounds i8, i8* %137, i64 %199
  %201 = load volatile i32, i32* %45, align 8
  %202 = icmp eq i32 %201, 0
  br i1 %202, label %213, label %203

203:                                              ; preds = %198
  %204 = icmp ult i8* %200, %112
  br i1 %204, label %212, label %205

205:                                              ; preds = %203
  %206 = sub nsw i32 %160, %152
  %207 = shl nsw i32 %206, 1
  %208 = add nsw i32 %207, 2
  %209 = zext i32 %208 to i64
  %210 = getelementptr inbounds i8, i8* %200, i64 %209
  %211 = icmp ugt i8* %210, %133
  br i1 %211, label %212, label %230

212:                                              ; preds = %205, %203
  tail call void @ft_validator_error(%struct.FT_ValidatorRec_* %1, i32 8) #17
  br label %230

213:                                              ; preds = %198
  %214 = icmp eq i32 %143, %131
  %215 = icmp eq i32 %152, 65535
  %216 = and i1 %214, %215
  %217 = icmp eq i32 %160, 65535
  %218 = and i1 %216, %217
  br i1 %218, label %230, label %219

219:                                              ; preds = %213
  %220 = icmp ult i8* %200, %112
  br i1 %220, label %229, label %221

221:                                              ; preds = %219
  %222 = sub nsw i32 %160, %152
  %223 = shl nsw i32 %222, 1
  %224 = add nsw i32 %223, 2
  %225 = zext i32 %224 to i64
  %226 = getelementptr inbounds i8, i8* %200, i64 %225
  %227 = load volatile i8*, i8** %4, align 8
  %228 = icmp ugt i8* %226, %227
  br i1 %228, label %229, label %230

229:                                              ; preds = %221, %219
  tail call void @ft_validator_error(%struct.FT_ValidatorRec_* %1, i32 8) #17
  br label %230

230:                                              ; preds = %213, %229, %221, %205, %212
  %231 = load volatile i32, i32* %45, align 8
  %232 = icmp ne i32 %231, 0
  %233 = icmp ugt i32 %160, %152
  %234 = and i1 %232, %233
  br i1 %234, label %235, label %266

235:                                              ; preds = %230, %253
  %236 = phi i32 [ %254, %253 ], [ %152, %230 ]
  %237 = phi i8* [ %238, %253 ], [ %200, %230 ]
  %238 = getelementptr inbounds i8, i8* %237, i64 2
  %239 = load i8, i8* %237, align 1
  %240 = zext i8 %239 to i32
  %241 = shl nuw nsw i32 %240, 8
  %242 = getelementptr inbounds i8, i8* %237, i64 1
  %243 = load i8, i8* %242, align 1
  %244 = zext i8 %243 to i32
  %245 = or i32 %241, %244
  %246 = icmp eq i32 %245, 0
  br i1 %246, label %253, label %247

247:                                              ; preds = %235
  %248 = add nuw nsw i32 %245, %168
  %249 = and i32 %248, 65535
  %250 = load i32, i32* %135, align 8
  %251 = icmp ult i32 %249, %250
  br i1 %251, label %253, label %252

252:                                              ; preds = %247
  tail call void @ft_validator_error(%struct.FT_ValidatorRec_* %1, i32 16) #17
  br label %253

253:                                              ; preds = %247, %235, %252
  %254 = add nuw nsw i32 %236, 1
  %255 = icmp eq i32 %254, %160
  br i1 %255, label %266, label %235

256:                                              ; preds = %195
  %257 = load volatile i32, i32* %45, align 8
  %258 = icmp ugt i32 %257, 1
  br i1 %258, label %265, label %259

259:                                              ; preds = %256
  %260 = icmp eq i32 %143, %131
  %261 = icmp eq i32 %152, 65535
  %262 = and i1 %260, %261
  %263 = icmp eq i32 %160, 65535
  %264 = and i1 %262, %263
  br i1 %264, label %266, label %265

265:                                              ; preds = %259, %256
  tail call void @ft_validator_error(%struct.FT_ValidatorRec_* %1, i32 8) #17
  br label %266

266:                                              ; preds = %253, %230, %195, %259, %265
  %267 = add nuw nsw i32 %143, 1
  %268 = icmp eq i32 %267, %53
  br i1 %268, label %269, label %136

269:                                              ; preds = %266, %128
  %270 = phi i32 [ 0, %128 ], [ %196, %266 ]
  ret i32 %270
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal i32 @tt_cmap4_get_info(%struct.TT_CMapRec_* nocapture readonly, %struct.TT_CMapInfo_* nocapture) #3 {
  %3 = getelementptr inbounds %struct.TT_CMapRec_, %struct.TT_CMapRec_* %0, i64 0, i32 1
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 4
  %6 = getelementptr inbounds %struct.TT_CMapInfo_, %struct.TT_CMapInfo_* %1, i64 0, i32 1
  store i64 4, i64* %6, align 8
  %7 = load i8, i8* %5, align 1
  %8 = zext i8 %7 to i64
  %9 = shl nuw nsw i64 %8, 8
  %10 = getelementptr inbounds i8, i8* %4, i64 5
  %11 = load i8, i8* %10, align 1
  %12 = zext i8 %11 to i64
  %13 = or i64 %9, %12
  %14 = getelementptr inbounds %struct.TT_CMapInfo_, %struct.TT_CMapInfo_* %1, i64 0, i32 0
  store i64 %13, i64* %14, align 8
  ret i32 0
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal i32 @tt_cmap6_char_index(%struct.TT_CMapRec_* nocapture readonly, i32) #2 {
  %3 = getelementptr inbounds %struct.TT_CMapRec_, %struct.TT_CMapRec_* %0, i64 0, i32 1
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 6
  %6 = load i8, i8* %5, align 1
  %7 = zext i8 %6 to i32
  %8 = shl nuw nsw i32 %7, 8
  %9 = getelementptr inbounds i8, i8* %4, i64 7
  %10 = load i8, i8* %9, align 1
  %11 = zext i8 %10 to i32
  %12 = or i32 %8, %11
  %13 = getelementptr inbounds i8, i8* %4, i64 8
  %14 = load i8, i8* %13, align 1
  %15 = zext i8 %14 to i32
  %16 = shl nuw nsw i32 %15, 8
  %17 = getelementptr inbounds i8, i8* %4, i64 9
  %18 = load i8, i8* %17, align 1
  %19 = zext i8 %18 to i32
  %20 = or i32 %16, %19
  %21 = sub i32 %1, %12
  %22 = icmp ult i32 %21, %20
  br i1 %22, label %23, label %35

23:                                               ; preds = %2
  %24 = getelementptr inbounds i8, i8* %4, i64 10
  %25 = shl i32 %21, 1
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds i8, i8* %24, i64 %26
  %28 = load i8, i8* %27, align 1
  %29 = zext i8 %28 to i32
  %30 = shl nuw nsw i32 %29, 8
  %31 = getelementptr inbounds i8, i8* %27, i64 1
  %32 = load i8, i8* %31, align 1
  %33 = zext i8 %32 to i32
  %34 = or i32 %30, %33
  br label %35

35:                                               ; preds = %23, %2
  %36 = phi i32 [ %34, %23 ], [ 0, %2 ]
  ret i32 %36
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal i32 @tt_cmap6_char_next(%struct.TT_CMapRec_* nocapture readonly, i32* nocapture) #3 {
  %3 = getelementptr inbounds %struct.TT_CMapRec_, %struct.TT_CMapRec_* %0, i64 0, i32 1
  %4 = load i8*, i8** %3, align 8
  %5 = load i32, i32* %1, align 4
  %6 = add i32 %5, 1
  %7 = getelementptr inbounds i8, i8* %4, i64 6
  %8 = load i8, i8* %7, align 1
  %9 = zext i8 %8 to i32
  %10 = shl nuw nsw i32 %9, 8
  %11 = getelementptr inbounds i8, i8* %4, i64 7
  %12 = load i8, i8* %11, align 1
  %13 = zext i8 %12 to i32
  %14 = or i32 %10, %13
  %15 = getelementptr inbounds i8, i8* %4, i64 8
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i32
  %18 = shl nuw nsw i32 %17, 8
  %19 = getelementptr inbounds i8, i8* %4, i64 9
  %20 = load i8, i8* %19, align 1
  %21 = zext i8 %20 to i32
  %22 = or i32 %18, %21
  %23 = icmp ugt i32 %6, 65535
  br i1 %23, label %56, label %24

24:                                               ; preds = %2
  %25 = icmp ult i32 %6, %14
  %26 = select i1 %25, i32 %14, i32 %6
  %27 = sub i32 %26, %14
  %28 = icmp ult i32 %27, %22
  br i1 %28, label %29, label %53

29:                                               ; preds = %24
  %30 = getelementptr inbounds i8, i8* %4, i64 10
  %31 = shl i32 %27, 1
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds i8, i8* %30, i64 %32
  br label %34

34:                                               ; preds = %29, %49
  %35 = phi i32 [ %51, %49 ], [ %27, %29 ]
  %36 = phi i8* [ %38, %49 ], [ %33, %29 ]
  %37 = phi i32 [ %50, %49 ], [ %26, %29 ]
  %38 = getelementptr inbounds i8, i8* %36, i64 2
  %39 = load i8, i8* %36, align 1
  %40 = zext i8 %39 to i32
  %41 = shl nuw nsw i32 %40, 8
  %42 = getelementptr inbounds i8, i8* %36, i64 1
  %43 = load i8, i8* %42, align 1
  %44 = zext i8 %43 to i32
  %45 = or i32 %41, %44
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %53

47:                                               ; preds = %34
  %48 = icmp ugt i32 %37, 65534
  br i1 %48, label %56, label %49

49:                                               ; preds = %47
  %50 = add nuw nsw i32 %37, 1
  %51 = add nuw nsw i32 %35, 1
  %52 = icmp ult i32 %51, %22
  br i1 %52, label %34, label %53

53:                                               ; preds = %49, %34, %24
  %54 = phi i32 [ 0, %24 ], [ %37, %34 ], [ 0, %49 ]
  %55 = phi i32 [ 0, %24 ], [ %45, %34 ], [ 0, %49 ]
  store i32 %54, i32* %1, align 4
  br label %56

56:                                               ; preds = %47, %2, %53
  %57 = phi i32 [ %55, %53 ], [ 0, %2 ], [ 0, %47 ]
  ret i32 %57
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @tt_cmap6_validate(i8* readonly, %struct.FT_ValidatorRec_*) #0 {
  %3 = getelementptr inbounds i8, i8* %0, i64 10
  %4 = getelementptr inbounds %struct.FT_ValidatorRec_, %struct.FT_ValidatorRec_* %1, i64 0, i32 2
  %5 = load volatile i8*, i8** %4, align 8
  %6 = icmp ugt i8* %3, %5
  br i1 %6, label %7, label %8

7:                                                ; preds = %2
  tail call void @ft_validator_error(%struct.FT_ValidatorRec_* %1, i32 8) #17
  br label %8

8:                                                ; preds = %7, %2
  %9 = getelementptr inbounds i8, i8* %0, i64 2
  %10 = load i8, i8* %9, align 1
  %11 = zext i8 %10 to i32
  %12 = shl nuw nsw i32 %11, 8
  %13 = getelementptr inbounds i8, i8* %0, i64 3
  %14 = load i8, i8* %13, align 1
  %15 = zext i8 %14 to i32
  %16 = or i32 %12, %15
  %17 = getelementptr inbounds i8, i8* %0, i64 8
  %18 = load i8, i8* %17, align 1
  %19 = zext i8 %18 to i32
  %20 = shl nuw nsw i32 %19, 8
  %21 = getelementptr inbounds i8, i8* %0, i64 9
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i32
  %24 = or i32 %20, %23
  %25 = zext i32 %16 to i64
  %26 = getelementptr inbounds i8, i8* %0, i64 %25
  %27 = load volatile i8*, i8** %4, align 8
  %28 = icmp ugt i8* %26, %27
  br i1 %28, label %33, label %29

29:                                               ; preds = %8
  %30 = shl nuw nsw i32 %24, 1
  %31 = add nuw nsw i32 %30, 10
  %32 = icmp ult i32 %16, %31
  br i1 %32, label %33, label %34

33:                                               ; preds = %29, %8
  tail call void @ft_validator_error(%struct.FT_ValidatorRec_* %1, i32 8) #17
  br label %34

34:                                               ; preds = %33, %29
  %35 = getelementptr inbounds %struct.FT_ValidatorRec_, %struct.FT_ValidatorRec_* %1, i64 0, i32 3
  %36 = load volatile i32, i32* %35, align 8
  %37 = icmp eq i32 %36, 0
  %38 = icmp eq i32 %24, 0
  %39 = or i1 %37, %38
  br i1 %39, label %60, label %40

40:                                               ; preds = %34
  %41 = getelementptr inbounds %struct.FT_ValidatorRec_, %struct.FT_ValidatorRec_* %1, i64 1
  %42 = bitcast %struct.FT_ValidatorRec_* %41 to i32*
  br label %43

43:                                               ; preds = %40, %57
  %44 = phi i32 [ %24, %40 ], [ %58, %57 ]
  %45 = phi i8* [ %3, %40 ], [ %46, %57 ]
  %46 = getelementptr inbounds i8, i8* %45, i64 2
  %47 = load i8, i8* %45, align 1
  %48 = zext i8 %47 to i32
  %49 = shl nuw nsw i32 %48, 8
  %50 = getelementptr inbounds i8, i8* %45, i64 1
  %51 = load i8, i8* %50, align 1
  %52 = zext i8 %51 to i32
  %53 = or i32 %49, %52
  %54 = load i32, i32* %42, align 8
  %55 = icmp ult i32 %53, %54
  br i1 %55, label %57, label %56

56:                                               ; preds = %43
  tail call void @ft_validator_error(%struct.FT_ValidatorRec_* %1, i32 16) #17
  br label %57

57:                                               ; preds = %43, %56
  %58 = add nsw i32 %44, -1
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %43

60:                                               ; preds = %57, %34
  ret i32 0
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal i32 @tt_cmap6_get_info(%struct.TT_CMapRec_* nocapture readonly, %struct.TT_CMapInfo_* nocapture) #3 {
  %3 = getelementptr inbounds %struct.TT_CMapRec_, %struct.TT_CMapRec_* %0, i64 0, i32 1
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 4
  %6 = getelementptr inbounds %struct.TT_CMapInfo_, %struct.TT_CMapInfo_* %1, i64 0, i32 1
  store i64 6, i64* %6, align 8
  %7 = load i8, i8* %5, align 1
  %8 = zext i8 %7 to i64
  %9 = shl nuw nsw i64 %8, 8
  %10 = getelementptr inbounds i8, i8* %4, i64 5
  %11 = load i8, i8* %10, align 1
  %12 = zext i8 %11 to i64
  %13 = or i64 %9, %12
  %14 = getelementptr inbounds %struct.TT_CMapInfo_, %struct.TT_CMapInfo_* %1, i64 0, i32 0
  store i64 %13, i64* %14, align 8
  ret i32 0
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal i32 @tt_cmap8_char_index(%struct.TT_CMapRec_* nocapture readonly, i32) #2 {
  %3 = getelementptr inbounds %struct.TT_CMapRec_, %struct.TT_CMapRec_* %0, i64 0, i32 1
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 8204
  %6 = load i8, i8* %5, align 1
  %7 = zext i8 %6 to i32
  %8 = shl nuw i32 %7, 24
  %9 = getelementptr inbounds i8, i8* %4, i64 8205
  %10 = load i8, i8* %9, align 1
  %11 = zext i8 %10 to i32
  %12 = shl nuw nsw i32 %11, 16
  %13 = or i32 %12, %8
  %14 = getelementptr inbounds i8, i8* %4, i64 8206
  %15 = load i8, i8* %14, align 1
  %16 = zext i8 %15 to i32
  %17 = shl nuw nsw i32 %16, 8
  %18 = or i32 %13, %17
  %19 = getelementptr inbounds i8, i8* %4, i64 8207
  %20 = load i8, i8* %19, align 1
  %21 = zext i8 %20 to i32
  %22 = or i32 %18, %21
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %95, label %24

24:                                               ; preds = %2
  %25 = getelementptr inbounds i8, i8* %4, i64 8208
  br label %29

26:                                               ; preds = %50
  %27 = getelementptr inbounds i8, i8* %31, i64 12
  %28 = icmp eq i32 %70, 0
  br i1 %28, label %95, label %29

29:                                               ; preds = %24, %26
  %30 = phi i32 [ %70, %26 ], [ %22, %24 ]
  %31 = phi i8* [ %27, %26 ], [ %25, %24 ]
  %32 = load i8, i8* %31, align 1
  %33 = zext i8 %32 to i32
  %34 = shl nuw i32 %33, 24
  %35 = getelementptr inbounds i8, i8* %31, i64 1
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i32
  %38 = shl nuw nsw i32 %37, 16
  %39 = or i32 %38, %34
  %40 = getelementptr inbounds i8, i8* %31, i64 2
  %41 = load i8, i8* %40, align 1
  %42 = zext i8 %41 to i32
  %43 = shl nuw nsw i32 %42, 8
  %44 = or i32 %39, %43
  %45 = getelementptr inbounds i8, i8* %31, i64 3
  %46 = load i8, i8* %45, align 1
  %47 = zext i8 %46 to i32
  %48 = or i32 %44, %47
  %49 = icmp ugt i32 %48, %1
  br i1 %49, label %95, label %50

50:                                               ; preds = %29
  %51 = getelementptr inbounds i8, i8* %31, i64 4
  %52 = load i8, i8* %51, align 1
  %53 = zext i8 %52 to i32
  %54 = shl nuw i32 %53, 24
  %55 = getelementptr inbounds i8, i8* %31, i64 5
  %56 = load i8, i8* %55, align 1
  %57 = zext i8 %56 to i32
  %58 = shl nuw nsw i32 %57, 16
  %59 = or i32 %58, %54
  %60 = getelementptr inbounds i8, i8* %31, i64 6
  %61 = load i8, i8* %60, align 1
  %62 = zext i8 %61 to i32
  %63 = shl nuw nsw i32 %62, 8
  %64 = or i32 %59, %63
  %65 = getelementptr inbounds i8, i8* %31, i64 7
  %66 = load i8, i8* %65, align 1
  %67 = zext i8 %66 to i32
  %68 = or i32 %64, %67
  %69 = icmp ult i32 %68, %1
  %70 = add i32 %30, -1
  br i1 %69, label %26, label %71

71:                                               ; preds = %50
  %72 = getelementptr inbounds i8, i8* %31, i64 8
  %73 = load i8, i8* %72, align 1
  %74 = zext i8 %73 to i32
  %75 = shl nuw i32 %74, 24
  %76 = getelementptr inbounds i8, i8* %31, i64 9
  %77 = load i8, i8* %76, align 1
  %78 = zext i8 %77 to i32
  %79 = shl nuw nsw i32 %78, 16
  %80 = or i32 %79, %75
  %81 = getelementptr inbounds i8, i8* %31, i64 10
  %82 = load i8, i8* %81, align 1
  %83 = zext i8 %82 to i32
  %84 = shl nuw nsw i32 %83, 8
  %85 = or i32 %80, %84
  %86 = getelementptr inbounds i8, i8* %31, i64 11
  %87 = load i8, i8* %86, align 1
  %88 = zext i8 %87 to i32
  %89 = or i32 %85, %88
  %90 = sub i32 %1, %48
  %91 = xor i32 %90, -1
  %92 = icmp ugt i32 %89, %91
  %93 = add i32 %89, %90
  %94 = select i1 %92, i32 0, i32 %93
  ret i32 %94

95:                                               ; preds = %26, %29, %2
  ret i32 0
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal i32 @tt_cmap8_char_next(%struct.TT_CMapRec_* nocapture readonly, i32* nocapture) #3 {
  %3 = getelementptr inbounds %struct.TT_CMapRec_, %struct.TT_CMapRec_* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %3, align 8
  %5 = getelementptr inbounds %struct.TT_CMapRec_, %struct.TT_CMapRec_* %0, i64 0, i32 1
  %6 = load i8*, i8** %5, align 8
  %7 = load i32, i32* %1, align 4
  %8 = icmp eq i32 %7, -1
  br i1 %8, label %118, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %6, i64 8204
  %11 = load i8, i8* %10, align 1
  %12 = zext i8 %11 to i32
  %13 = shl nuw i32 %12, 24
  %14 = getelementptr inbounds i8, i8* %6, i64 8205
  %15 = load i8, i8* %14, align 1
  %16 = zext i8 %15 to i32
  %17 = shl nuw nsw i32 %16, 16
  %18 = or i32 %17, %13
  %19 = getelementptr inbounds i8, i8* %6, i64 8206
  %20 = load i8, i8* %19, align 1
  %21 = zext i8 %20 to i32
  %22 = shl nuw nsw i32 %21, 8
  %23 = or i32 %18, %22
  %24 = getelementptr inbounds i8, i8* %6, i64 8207
  %25 = load i8, i8* %24, align 1
  %26 = zext i8 %25 to i32
  %27 = or i32 %23, %26
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %115, label %29

29:                                               ; preds = %9
  %30 = getelementptr inbounds i8, i8* %6, i64 8208
  %31 = add nuw i32 %7, 1
  %32 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %4, i64 0, i32 4
  br label %33

33:                                               ; preds = %29, %111
  %34 = phi i32 [ %27, %29 ], [ %113, %111 ]
  %35 = phi i8* [ %30, %29 ], [ %72, %111 ]
  %36 = phi i32 [ %31, %29 ], [ %112, %111 ]
  %37 = load i8, i8* %35, align 1
  %38 = zext i8 %37 to i32
  %39 = shl nuw i32 %38, 24
  %40 = getelementptr inbounds i8, i8* %35, i64 1
  %41 = load i8, i8* %40, align 1
  %42 = zext i8 %41 to i32
  %43 = shl nuw nsw i32 %42, 16
  %44 = or i32 %43, %39
  %45 = getelementptr inbounds i8, i8* %35, i64 2
  %46 = load i8, i8* %45, align 1
  %47 = zext i8 %46 to i32
  %48 = shl nuw nsw i32 %47, 8
  %49 = or i32 %44, %48
  %50 = getelementptr inbounds i8, i8* %35, i64 3
  %51 = load i8, i8* %50, align 1
  %52 = zext i8 %51 to i32
  %53 = or i32 %49, %52
  %54 = getelementptr inbounds i8, i8* %35, i64 4
  %55 = load i8, i8* %54, align 1
  %56 = zext i8 %55 to i32
  %57 = shl nuw i32 %56, 24
  %58 = getelementptr inbounds i8, i8* %35, i64 5
  %59 = load i8, i8* %58, align 1
  %60 = zext i8 %59 to i32
  %61 = shl nuw nsw i32 %60, 16
  %62 = or i32 %61, %57
  %63 = getelementptr inbounds i8, i8* %35, i64 6
  %64 = load i8, i8* %63, align 1
  %65 = zext i8 %64 to i32
  %66 = shl nuw nsw i32 %65, 8
  %67 = or i32 %62, %66
  %68 = getelementptr inbounds i8, i8* %35, i64 7
  %69 = load i8, i8* %68, align 1
  %70 = zext i8 %69 to i32
  %71 = or i32 %67, %70
  %72 = getelementptr inbounds i8, i8* %35, i64 12
  %73 = getelementptr inbounds i8, i8* %35, i64 8
  %74 = load i8, i8* %73, align 1
  %75 = zext i8 %74 to i32
  %76 = shl nuw i32 %75, 24
  %77 = getelementptr inbounds i8, i8* %35, i64 9
  %78 = load i8, i8* %77, align 1
  %79 = zext i8 %78 to i32
  %80 = shl nuw nsw i32 %79, 16
  %81 = or i32 %80, %76
  %82 = getelementptr inbounds i8, i8* %35, i64 10
  %83 = load i8, i8* %82, align 1
  %84 = zext i8 %83 to i32
  %85 = shl nuw nsw i32 %84, 8
  %86 = or i32 %81, %85
  %87 = getelementptr inbounds i8, i8* %35, i64 11
  %88 = load i8, i8* %87, align 1
  %89 = zext i8 %88 to i32
  %90 = or i32 %86, %89
  %91 = icmp ult i32 %36, %53
  %92 = select i1 %91, i32 %53, i32 %36
  %93 = icmp ugt i32 %92, %71
  br i1 %93, label %111, label %94

94:                                               ; preds = %33, %104
  %95 = phi i32 [ %105, %104 ], [ %92, %33 ]
  %96 = sub i32 %95, %53
  %97 = xor i32 %96, -1
  %98 = icmp ugt i32 %90, %97
  br i1 %98, label %111, label %99

99:                                               ; preds = %94
  %100 = add i32 %96, %90
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %102, label %107

102:                                              ; preds = %99
  %103 = icmp eq i32 %95, -1
  br i1 %103, label %115, label %104

104:                                              ; preds = %102
  %105 = add nuw i32 %95, 1
  %106 = icmp ult i32 %95, %71
  br i1 %106, label %94, label %111

107:                                              ; preds = %99
  %108 = load i64, i64* %32, align 8
  %109 = trunc i64 %108 to i32
  %110 = icmp ult i32 %100, %109
  br i1 %110, label %115, label %111

111:                                              ; preds = %104, %94, %33, %107
  %112 = phi i32 [ %95, %107 ], [ %92, %33 ], [ %95, %94 ], [ %105, %104 ]
  %113 = add i32 %34, -1
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %115, label %33

115:                                              ; preds = %111, %107, %102, %9
  %116 = phi i32 [ 0, %9 ], [ 0, %102 ], [ 0, %111 ], [ %95, %107 ]
  %117 = phi i32 [ 0, %9 ], [ 0, %102 ], [ 0, %111 ], [ %100, %107 ]
  store i32 %116, i32* %1, align 4
  br label %118

118:                                              ; preds = %2, %115
  %119 = phi i32 [ %117, %115 ], [ 0, %2 ]
  ret i32 %119
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @tt_cmap8_validate(i8*, %struct.FT_ValidatorRec_*) #0 {
  %3 = getelementptr inbounds i8, i8* %0, i64 8208
  %4 = getelementptr inbounds %struct.FT_ValidatorRec_, %struct.FT_ValidatorRec_* %1, i64 0, i32 2
  %5 = load volatile i8*, i8** %4, align 8
  %6 = icmp ugt i8* %3, %5
  br i1 %6, label %7, label %8

7:                                                ; preds = %2
  tail call void @ft_validator_error(%struct.FT_ValidatorRec_* %1, i32 8) #17
  br label %8

8:                                                ; preds = %7, %2
  %9 = getelementptr inbounds i8, i8* %0, i64 4
  %10 = load i8, i8* %9, align 1
  %11 = zext i8 %10 to i32
  %12 = shl nuw i32 %11, 24
  %13 = getelementptr inbounds i8, i8* %0, i64 5
  %14 = load i8, i8* %13, align 1
  %15 = zext i8 %14 to i32
  %16 = shl nuw nsw i32 %15, 16
  %17 = or i32 %16, %12
  %18 = getelementptr inbounds i8, i8* %0, i64 6
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = shl nuw nsw i32 %20, 8
  %22 = or i32 %17, %21
  %23 = getelementptr inbounds i8, i8* %0, i64 7
  %24 = load i8, i8* %23, align 1
  %25 = zext i8 %24 to i32
  %26 = or i32 %22, %25
  %27 = load volatile i8*, i8** %4, align 8
  %28 = ptrtoint i8* %27 to i64
  %29 = ptrtoint i8* %0 to i64
  %30 = sub i64 %28, %29
  %31 = trunc i64 %30 to i32
  %32 = icmp ugt i32 %26, %31
  %33 = icmp ult i32 %26, 8208
  %34 = or i1 %33, %32
  br i1 %34, label %35, label %36

35:                                               ; preds = %8
  tail call void @ft_validator_error(%struct.FT_ValidatorRec_* %1, i32 8) #17
  br label %36

36:                                               ; preds = %8, %35
  %37 = getelementptr inbounds i8, i8* %0, i64 12
  %38 = getelementptr inbounds i8, i8* %0, i64 8204
  %39 = load i8, i8* %38, align 1
  %40 = zext i8 %39 to i32
  %41 = shl nuw i32 %40, 24
  %42 = getelementptr inbounds i8, i8* %0, i64 8205
  %43 = load i8, i8* %42, align 1
  %44 = zext i8 %43 to i32
  %45 = shl nuw nsw i32 %44, 16
  %46 = or i32 %45, %41
  %47 = getelementptr inbounds i8, i8* %0, i64 8206
  %48 = load i8, i8* %47, align 1
  %49 = zext i8 %48 to i32
  %50 = shl nuw nsw i32 %49, 8
  %51 = or i32 %46, %50
  %52 = getelementptr inbounds i8, i8* %0, i64 8207
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i32
  %55 = or i32 %51, %54
  %56 = load volatile i8*, i8** %4, align 8
  %57 = ptrtoint i8* %56 to i64
  %58 = ptrtoint i8* %3 to i64
  %59 = sub i64 %57, %58
  %60 = trunc i64 %59 to i32
  %61 = udiv i32 %60, 12
  %62 = icmp ugt i32 %55, %61
  br i1 %62, label %63, label %64

63:                                               ; preds = %36
  tail call void @ft_validator_error(%struct.FT_ValidatorRec_* %1, i32 8) #17
  br label %66

64:                                               ; preds = %36
  %65 = icmp eq i32 %55, 0
  br i1 %65, label %207, label %66

66:                                               ; preds = %63, %64
  %67 = getelementptr inbounds %struct.FT_ValidatorRec_, %struct.FT_ValidatorRec_* %1, i64 0, i32 3
  %68 = getelementptr inbounds %struct.FT_ValidatorRec_, %struct.FT_ValidatorRec_* %1, i64 1
  %69 = bitcast %struct.FT_ValidatorRec_* %68 to i32*
  br label %70

70:                                               ; preds = %204, %66
  %71 = phi i32 [ 0, %66 ], [ %108, %204 ]
  %72 = phi i32 [ 0, %66 ], [ %205, %204 ]
  %73 = phi i8* [ %3, %66 ], [ %109, %204 ]
  %74 = load i8, i8* %73, align 1
  %75 = zext i8 %74 to i32
  %76 = shl nuw i32 %75, 24
  %77 = getelementptr inbounds i8, i8* %73, i64 1
  %78 = load i8, i8* %77, align 1
  %79 = zext i8 %78 to i32
  %80 = shl nuw nsw i32 %79, 16
  %81 = or i32 %80, %76
  %82 = getelementptr inbounds i8, i8* %73, i64 2
  %83 = load i8, i8* %82, align 1
  %84 = zext i8 %83 to i32
  %85 = shl nuw nsw i32 %84, 8
  %86 = or i32 %81, %85
  %87 = getelementptr inbounds i8, i8* %73, i64 3
  %88 = load i8, i8* %87, align 1
  %89 = zext i8 %88 to i32
  %90 = or i32 %86, %89
  %91 = getelementptr inbounds i8, i8* %73, i64 4
  %92 = load i8, i8* %91, align 1
  %93 = zext i8 %92 to i32
  %94 = shl nuw i32 %93, 24
  %95 = getelementptr inbounds i8, i8* %73, i64 5
  %96 = load i8, i8* %95, align 1
  %97 = zext i8 %96 to i32
  %98 = shl nuw nsw i32 %97, 16
  %99 = or i32 %98, %94
  %100 = getelementptr inbounds i8, i8* %73, i64 6
  %101 = load i8, i8* %100, align 1
  %102 = zext i8 %101 to i32
  %103 = shl nuw nsw i32 %102, 8
  %104 = or i32 %99, %103
  %105 = getelementptr inbounds i8, i8* %73, i64 7
  %106 = load i8, i8* %105, align 1
  %107 = zext i8 %106 to i32
  %108 = or i32 %104, %107
  %109 = getelementptr inbounds i8, i8* %73, i64 12
  %110 = getelementptr inbounds i8, i8* %73, i64 8
  %111 = load i8, i8* %110, align 1
  %112 = zext i8 %111 to i32
  %113 = shl nuw i32 %112, 24
  %114 = getelementptr inbounds i8, i8* %73, i64 9
  %115 = load i8, i8* %114, align 1
  %116 = zext i8 %115 to i32
  %117 = shl nuw nsw i32 %116, 16
  %118 = or i32 %117, %113
  %119 = getelementptr inbounds i8, i8* %73, i64 10
  %120 = load i8, i8* %119, align 1
  %121 = zext i8 %120 to i32
  %122 = shl nuw nsw i32 %121, 8
  %123 = or i32 %118, %122
  %124 = getelementptr inbounds i8, i8* %73, i64 11
  %125 = load i8, i8* %124, align 1
  %126 = zext i8 %125 to i32
  %127 = or i32 %123, %126
  %128 = icmp ult i32 %108, %90
  br i1 %128, label %129, label %130

129:                                              ; preds = %70
  tail call void @ft_validator_error(%struct.FT_ValidatorRec_* %1, i32 8) #17
  br label %130

130:                                              ; preds = %129, %70
  %131 = icmp eq i32 %72, 0
  %132 = icmp ugt i32 %90, %71
  %133 = or i1 %131, %132
  br i1 %133, label %135, label %134

134:                                              ; preds = %130
  tail call void @ft_validator_error(%struct.FT_ValidatorRec_* %1, i32 8) #17
  br label %135

135:                                              ; preds = %130, %134
  %136 = load volatile i32, i32* %67, align 8
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %204, label %138

138:                                              ; preds = %135
  %139 = sub i32 %108, %90
  %140 = load i32, i32* %69, align 8
  %141 = icmp uge i32 %140, %139
  %142 = sub i32 %140, %139
  %143 = icmp ult i32 %127, %142
  %144 = and i1 %141, %143
  br i1 %144, label %146, label %145

145:                                              ; preds = %138
  tail call void @ft_validator_error(%struct.FT_ValidatorRec_* %1, i32 16) #17
  br label %146

146:                                              ; preds = %138, %145
  %147 = add i32 %139, 1
  %148 = icmp eq i32 %81, 0
  br i1 %148, label %181, label %149

149:                                              ; preds = %146
  %150 = icmp eq i32 %147, 0
  br i1 %150, label %204, label %151

151:                                              ; preds = %149, %177
  %152 = phi i32 [ %178, %177 ], [ %147, %149 ]
  %153 = phi i32 [ %179, %177 ], [ %90, %149 ]
  %154 = lshr i32 %153, 16
  %155 = lshr i32 %153, 19
  %156 = zext i32 %155 to i64
  %157 = getelementptr inbounds i8, i8* %37, i64 %156
  %158 = load i8, i8* %157, align 1
  %159 = zext i8 %158 to i32
  %160 = and i32 %154, 7
  %161 = lshr i32 128, %160
  %162 = and i32 %161, %159
  %163 = icmp eq i32 %162, 0
  br i1 %163, label %164, label %165

164:                                              ; preds = %151
  tail call void @ft_validator_error(%struct.FT_ValidatorRec_* %1, i32 8) #17
  br label %165

165:                                              ; preds = %164, %151
  %166 = lshr i32 %153, 3
  %167 = and i32 %166, 8191
  %168 = zext i32 %167 to i64
  %169 = getelementptr inbounds i8, i8* %37, i64 %168
  %170 = load i8, i8* %169, align 1
  %171 = zext i8 %170 to i32
  %172 = and i32 %153, 7
  %173 = lshr i32 128, %172
  %174 = and i32 %173, %171
  %175 = icmp eq i32 %174, 0
  br i1 %175, label %176, label %177

176:                                              ; preds = %165
  tail call void @ft_validator_error(%struct.FT_ValidatorRec_* %1, i32 8) #17
  br label %177

177:                                              ; preds = %165, %176
  %178 = add i32 %152, -1
  %179 = add i32 %153, 1
  %180 = icmp eq i32 %178, 0
  br i1 %180, label %204, label %151

181:                                              ; preds = %146
  %182 = icmp eq i32 %99, 0
  br i1 %182, label %184, label %183

183:                                              ; preds = %181
  tail call void @ft_validator_error(%struct.FT_ValidatorRec_* %1, i32 8) #17
  br label %184

184:                                              ; preds = %181, %183
  %185 = icmp eq i32 %147, 0
  br i1 %185, label %204, label %186

186:                                              ; preds = %184, %200
  %187 = phi i32 [ %201, %200 ], [ %147, %184 ]
  %188 = phi i32 [ %202, %200 ], [ %90, %184 ]
  %189 = lshr i32 %188, 3
  %190 = and i32 %189, 8191
  %191 = zext i32 %190 to i64
  %192 = getelementptr inbounds i8, i8* %37, i64 %191
  %193 = load i8, i8* %192, align 1
  %194 = zext i8 %193 to i32
  %195 = and i32 %188, 7
  %196 = lshr i32 128, %195
  %197 = and i32 %196, %194
  %198 = icmp eq i32 %197, 0
  br i1 %198, label %200, label %199

199:                                              ; preds = %186
  tail call void @ft_validator_error(%struct.FT_ValidatorRec_* %1, i32 8) #17
  br label %200

200:                                              ; preds = %186, %199
  %201 = add i32 %187, -1
  %202 = add i32 %188, 1
  %203 = icmp eq i32 %201, 0
  br i1 %203, label %204, label %186

204:                                              ; preds = %177, %200, %149, %184, %135
  %205 = add nuw i32 %72, 1
  %206 = icmp eq i32 %205, %55
  br i1 %206, label %207, label %70

207:                                              ; preds = %204, %64
  ret i32 0
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal i32 @tt_cmap8_get_info(%struct.TT_CMapRec_* nocapture readonly, %struct.TT_CMapInfo_* nocapture) #3 {
  %3 = getelementptr inbounds %struct.TT_CMapRec_, %struct.TT_CMapRec_* %0, i64 0, i32 1
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 8
  %6 = getelementptr inbounds %struct.TT_CMapInfo_, %struct.TT_CMapInfo_* %1, i64 0, i32 1
  store i64 8, i64* %6, align 8
  %7 = load i8, i8* %5, align 1
  %8 = zext i8 %7 to i64
  %9 = shl nuw nsw i64 %8, 24
  %10 = getelementptr inbounds i8, i8* %4, i64 9
  %11 = load i8, i8* %10, align 1
  %12 = zext i8 %11 to i64
  %13 = shl nuw nsw i64 %12, 16
  %14 = or i64 %13, %9
  %15 = getelementptr inbounds i8, i8* %4, i64 10
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i64
  %18 = shl nuw nsw i64 %17, 8
  %19 = or i64 %14, %18
  %20 = getelementptr inbounds i8, i8* %4, i64 11
  %21 = load i8, i8* %20, align 1
  %22 = zext i8 %21 to i64
  %23 = or i64 %19, %22
  %24 = getelementptr inbounds %struct.TT_CMapInfo_, %struct.TT_CMapInfo_* %1, i64 0, i32 0
  store i64 %23, i64* %24, align 8
  ret i32 0
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal i32 @tt_cmap10_char_index(%struct.TT_CMapRec_* nocapture readonly, i32) #2 {
  %3 = getelementptr inbounds %struct.TT_CMapRec_, %struct.TT_CMapRec_* %0, i64 0, i32 1
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 12
  %6 = load i8, i8* %5, align 1
  %7 = zext i8 %6 to i32
  %8 = shl nuw i32 %7, 24
  %9 = getelementptr inbounds i8, i8* %4, i64 13
  %10 = load i8, i8* %9, align 1
  %11 = zext i8 %10 to i32
  %12 = shl nuw nsw i32 %11, 16
  %13 = or i32 %12, %8
  %14 = getelementptr inbounds i8, i8* %4, i64 14
  %15 = load i8, i8* %14, align 1
  %16 = zext i8 %15 to i32
  %17 = shl nuw nsw i32 %16, 8
  %18 = or i32 %13, %17
  %19 = getelementptr inbounds i8, i8* %4, i64 15
  %20 = load i8, i8* %19, align 1
  %21 = zext i8 %20 to i32
  %22 = or i32 %18, %21
  %23 = getelementptr inbounds i8, i8* %4, i64 20
  %24 = icmp ugt i32 %22, %1
  br i1 %24, label %57, label %25

25:                                               ; preds = %2
  %26 = getelementptr inbounds i8, i8* %4, i64 16
  %27 = load i8, i8* %26, align 1
  %28 = zext i8 %27 to i32
  %29 = shl nuw i32 %28, 24
  %30 = getelementptr inbounds i8, i8* %4, i64 17
  %31 = load i8, i8* %30, align 1
  %32 = zext i8 %31 to i32
  %33 = shl nuw nsw i32 %32, 16
  %34 = or i32 %33, %29
  %35 = getelementptr inbounds i8, i8* %4, i64 18
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i32
  %38 = shl nuw nsw i32 %37, 8
  %39 = or i32 %34, %38
  %40 = getelementptr inbounds i8, i8* %4, i64 19
  %41 = load i8, i8* %40, align 1
  %42 = zext i8 %41 to i32
  %43 = or i32 %39, %42
  %44 = sub i32 %1, %22
  %45 = icmp ult i32 %44, %43
  br i1 %45, label %46, label %57

46:                                               ; preds = %25
  %47 = shl i32 %44, 1
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds i8, i8* %23, i64 %48
  %50 = load i8, i8* %49, align 1
  %51 = zext i8 %50 to i32
  %52 = shl nuw nsw i32 %51, 8
  %53 = getelementptr inbounds i8, i8* %49, i64 1
  %54 = load i8, i8* %53, align 1
  %55 = zext i8 %54 to i32
  %56 = or i32 %52, %55
  br label %57

57:                                               ; preds = %25, %46, %2
  %58 = phi i32 [ 0, %2 ], [ %56, %46 ], [ 0, %25 ]
  ret i32 %58
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal i32 @tt_cmap10_char_next(%struct.TT_CMapRec_* nocapture readonly, i32* nocapture) #3 {
  %3 = getelementptr inbounds %struct.TT_CMapRec_, %struct.TT_CMapRec_* %0, i64 0, i32 1
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 12
  %6 = load i8, i8* %5, align 1
  %7 = zext i8 %6 to i32
  %8 = shl nuw i32 %7, 24
  %9 = getelementptr inbounds i8, i8* %4, i64 13
  %10 = load i8, i8* %9, align 1
  %11 = zext i8 %10 to i32
  %12 = shl nuw nsw i32 %11, 16
  %13 = or i32 %12, %8
  %14 = getelementptr inbounds i8, i8* %4, i64 14
  %15 = load i8, i8* %14, align 1
  %16 = zext i8 %15 to i32
  %17 = shl nuw nsw i32 %16, 8
  %18 = or i32 %13, %17
  %19 = getelementptr inbounds i8, i8* %4, i64 15
  %20 = load i8, i8* %19, align 1
  %21 = zext i8 %20 to i32
  %22 = or i32 %18, %21
  %23 = getelementptr inbounds i8, i8* %4, i64 16
  %24 = load i8, i8* %23, align 1
  %25 = zext i8 %24 to i32
  %26 = shl nuw i32 %25, 24
  %27 = getelementptr inbounds i8, i8* %4, i64 17
  %28 = load i8, i8* %27, align 1
  %29 = zext i8 %28 to i32
  %30 = shl nuw nsw i32 %29, 16
  %31 = or i32 %30, %26
  %32 = getelementptr inbounds i8, i8* %4, i64 18
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = shl nuw nsw i32 %34, 8
  %36 = or i32 %31, %35
  %37 = getelementptr inbounds i8, i8* %4, i64 19
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i32
  %40 = or i32 %36, %39
  %41 = load i32, i32* %1, align 4
  %42 = icmp eq i32 %41, -1
  br i1 %42, label %76, label %43

43:                                               ; preds = %2
  %44 = add nuw i32 %41, 1
  %45 = icmp ult i32 %44, %22
  %46 = select i1 %45, i32 %22, i32 %44
  %47 = sub i32 %46, %22
  %48 = icmp ult i32 %47, %40
  br i1 %48, label %49, label %73

49:                                               ; preds = %43
  %50 = getelementptr inbounds i8, i8* %4, i64 20
  %51 = shl i32 %47, 1
  %52 = zext i32 %51 to i64
  %53 = getelementptr inbounds i8, i8* %50, i64 %52
  br label %54

54:                                               ; preds = %49, %69
  %55 = phi i32 [ %71, %69 ], [ %47, %49 ]
  %56 = phi i8* [ %58, %69 ], [ %53, %49 ]
  %57 = phi i32 [ %70, %69 ], [ %46, %49 ]
  %58 = getelementptr inbounds i8, i8* %56, i64 2
  %59 = load i8, i8* %56, align 1
  %60 = zext i8 %59 to i32
  %61 = shl nuw nsw i32 %60, 8
  %62 = getelementptr inbounds i8, i8* %56, i64 1
  %63 = load i8, i8* %62, align 1
  %64 = zext i8 %63 to i32
  %65 = or i32 %61, %64
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %73

67:                                               ; preds = %54
  %68 = icmp eq i32 %57, -1
  br i1 %68, label %76, label %69

69:                                               ; preds = %67
  %70 = add nuw i32 %57, 1
  %71 = add nuw i32 %55, 1
  %72 = icmp ult i32 %71, %40
  br i1 %72, label %54, label %73

73:                                               ; preds = %69, %54, %43
  %74 = phi i32 [ %46, %43 ], [ %57, %54 ], [ %70, %69 ]
  %75 = phi i32 [ 0, %43 ], [ %65, %54 ], [ 0, %69 ]
  store i32 %74, i32* %1, align 4
  br label %76

76:                                               ; preds = %67, %2, %73
  %77 = phi i32 [ %75, %73 ], [ 0, %2 ], [ 0, %67 ]
  ret i32 %77
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @tt_cmap10_validate(i8*, %struct.FT_ValidatorRec_*) #0 {
  %3 = getelementptr inbounds i8, i8* %0, i64 20
  %4 = getelementptr inbounds %struct.FT_ValidatorRec_, %struct.FT_ValidatorRec_* %1, i64 0, i32 2
  %5 = load volatile i8*, i8** %4, align 8
  %6 = icmp ugt i8* %3, %5
  br i1 %6, label %7, label %8

7:                                                ; preds = %2
  tail call void @ft_validator_error(%struct.FT_ValidatorRec_* %1, i32 8) #17
  br label %8

8:                                                ; preds = %7, %2
  %9 = getelementptr inbounds i8, i8* %0, i64 4
  %10 = load i8, i8* %9, align 1
  %11 = zext i8 %10 to i64
  %12 = shl nuw nsw i64 %11, 24
  %13 = getelementptr inbounds i8, i8* %0, i64 5
  %14 = load i8, i8* %13, align 1
  %15 = zext i8 %14 to i64
  %16 = shl nuw nsw i64 %15, 16
  %17 = or i64 %16, %12
  %18 = getelementptr inbounds i8, i8* %0, i64 6
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i64
  %21 = shl nuw nsw i64 %20, 8
  %22 = or i64 %17, %21
  %23 = getelementptr inbounds i8, i8* %0, i64 7
  %24 = load i8, i8* %23, align 1
  %25 = zext i8 %24 to i64
  %26 = or i64 %22, %25
  %27 = getelementptr inbounds i8, i8* %0, i64 16
  %28 = load i8, i8* %27, align 1
  %29 = zext i8 %28 to i64
  %30 = shl nuw nsw i64 %29, 24
  %31 = getelementptr inbounds i8, i8* %0, i64 17
  %32 = load i8, i8* %31, align 1
  %33 = zext i8 %32 to i64
  %34 = shl nuw nsw i64 %33, 16
  %35 = or i64 %34, %30
  %36 = getelementptr inbounds i8, i8* %0, i64 18
  %37 = load i8, i8* %36, align 1
  %38 = zext i8 %37 to i64
  %39 = shl nuw nsw i64 %38, 8
  %40 = or i64 %35, %39
  %41 = getelementptr inbounds i8, i8* %0, i64 19
  %42 = load i8, i8* %41, align 1
  %43 = zext i8 %42 to i64
  %44 = or i64 %40, %43
  %45 = load volatile i8*, i8** %4, align 8
  %46 = ptrtoint i8* %45 to i64
  %47 = ptrtoint i8* %0 to i64
  %48 = sub i64 %46, %47
  %49 = icmp ugt i64 %26, %48
  %50 = icmp ult i64 %26, 20
  %51 = or i1 %50, %49
  br i1 %51, label %56, label %52

52:                                               ; preds = %8
  %53 = add nsw i64 %26, -20
  %54 = lshr i64 %53, 1
  %55 = icmp ult i64 %54, %44
  br i1 %55, label %56, label %57

56:                                               ; preds = %52, %8
  tail call void @ft_validator_error(%struct.FT_ValidatorRec_* %1, i32 8) #17
  br label %57

57:                                               ; preds = %56, %52
  %58 = getelementptr inbounds %struct.FT_ValidatorRec_, %struct.FT_ValidatorRec_* %1, i64 0, i32 3
  %59 = load volatile i32, i32* %58, align 8
  %60 = icmp eq i32 %59, 0
  %61 = icmp eq i64 %44, 0
  %62 = or i1 %60, %61
  br i1 %62, label %83, label %63

63:                                               ; preds = %57
  %64 = getelementptr inbounds %struct.FT_ValidatorRec_, %struct.FT_ValidatorRec_* %1, i64 1
  %65 = bitcast %struct.FT_ValidatorRec_* %64 to i32*
  br label %66

66:                                               ; preds = %63, %80
  %67 = phi i64 [ %44, %63 ], [ %81, %80 ]
  %68 = phi i8* [ %3, %63 ], [ %69, %80 ]
  %69 = getelementptr inbounds i8, i8* %68, i64 2
  %70 = load i8, i8* %68, align 1
  %71 = zext i8 %70 to i32
  %72 = shl nuw nsw i32 %71, 8
  %73 = getelementptr inbounds i8, i8* %68, i64 1
  %74 = load i8, i8* %73, align 1
  %75 = zext i8 %74 to i32
  %76 = or i32 %72, %75
  %77 = load i32, i32* %65, align 8
  %78 = icmp ult i32 %76, %77
  br i1 %78, label %80, label %79

79:                                               ; preds = %66
  tail call void @ft_validator_error(%struct.FT_ValidatorRec_* %1, i32 16) #17
  br label %80

80:                                               ; preds = %66, %79
  %81 = add nsw i64 %67, -1
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %83, label %66

83:                                               ; preds = %80, %57
  ret i32 0
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal i32 @tt_cmap10_get_info(%struct.TT_CMapRec_* nocapture readonly, %struct.TT_CMapInfo_* nocapture) #3 {
  %3 = getelementptr inbounds %struct.TT_CMapRec_, %struct.TT_CMapRec_* %0, i64 0, i32 1
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 8
  %6 = getelementptr inbounds %struct.TT_CMapInfo_, %struct.TT_CMapInfo_* %1, i64 0, i32 1
  store i64 10, i64* %6, align 8
  %7 = load i8, i8* %5, align 1
  %8 = zext i8 %7 to i64
  %9 = shl nuw nsw i64 %8, 24
  %10 = getelementptr inbounds i8, i8* %4, i64 9
  %11 = load i8, i8* %10, align 1
  %12 = zext i8 %11 to i64
  %13 = shl nuw nsw i64 %12, 16
  %14 = or i64 %13, %9
  %15 = getelementptr inbounds i8, i8* %4, i64 10
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i64
  %18 = shl nuw nsw i64 %17, 8
  %19 = or i64 %14, %18
  %20 = getelementptr inbounds i8, i8* %4, i64 11
  %21 = load i8, i8* %20, align 1
  %22 = zext i8 %21 to i64
  %23 = or i64 %19, %22
  %24 = getelementptr inbounds %struct.TT_CMapInfo_, %struct.TT_CMapInfo_* %1, i64 0, i32 0
  store i64 %23, i64* %24, align 8
  ret i32 0
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal i32 @tt_cmap12_init(%struct.TT_CMap12Rec_* nocapture, i8*) #3 {
  %3 = getelementptr inbounds %struct.TT_CMap12Rec_, %struct.TT_CMap12Rec_* %0, i64 0, i32 0, i32 1
  store i8* %1, i8** %3, align 8
  %4 = getelementptr inbounds i8, i8* %1, i64 12
  %5 = load i8, i8* %4, align 1
  %6 = zext i8 %5 to i64
  %7 = shl nuw nsw i64 %6, 24
  %8 = getelementptr inbounds i8, i8* %1, i64 13
  %9 = load i8, i8* %8, align 1
  %10 = zext i8 %9 to i64
  %11 = shl nuw nsw i64 %10, 16
  %12 = or i64 %11, %7
  %13 = getelementptr inbounds i8, i8* %1, i64 14
  %14 = load i8, i8* %13, align 1
  %15 = zext i8 %14 to i64
  %16 = shl nuw nsw i64 %15, 8
  %17 = or i64 %12, %16
  %18 = getelementptr inbounds i8, i8* %1, i64 15
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i64
  %21 = or i64 %17, %20
  %22 = getelementptr inbounds %struct.TT_CMap12Rec_, %struct.TT_CMap12Rec_* %0, i64 0, i32 5
  store i64 %21, i64* %22, align 8
  %23 = getelementptr inbounds %struct.TT_CMap12Rec_, %struct.TT_CMap12Rec_* %0, i64 0, i32 1
  store i8 0, i8* %23, align 8
  ret i32 0
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal i32 @tt_cmap12_char_index(%struct.TT_CMapRec_* nocapture, i32) #3 {
  %3 = alloca i32, align 4
  store i32 %1, i32* %3, align 4
  %4 = call fastcc i32 @tt_cmap12_char_map_binary(%struct.TT_CMapRec_* %0, i32* nonnull %3, i8 zeroext 0)
  ret i32 %4
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal i32 @tt_cmap12_char_next(%struct.TT_CMapRec_* nocapture, i32* nocapture) #3 {
  %3 = bitcast %struct.TT_CMapRec_* %0 to %struct.TT_CMap12Rec_*
  %4 = getelementptr inbounds %struct.TT_CMapRec_, %struct.TT_CMapRec_* %0, i64 1
  %5 = bitcast %struct.TT_CMapRec_* %4 to i8*
  %6 = load i8, i8* %5, align 8
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %24, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.TT_CMapRec_, %struct.TT_CMapRec_* %0, i64 1, i32 0, i32 0, i32 1
  %10 = bitcast i32* %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = load i32, i32* %1, align 4
  %13 = zext i32 %12 to i64
  %14 = icmp eq i64 %11, %13
  br i1 %14, label %15, label %24

15:                                               ; preds = %8
  tail call fastcc void @tt_cmap12_next(%struct.TT_CMap12Rec_* %3)
  %16 = load i8, i8* %5, align 8
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %26, label %18

18:                                               ; preds = %15
  %19 = getelementptr inbounds %struct.TT_CMapRec_, %struct.TT_CMapRec_* %0, i64 1, i32 0, i32 1
  %20 = bitcast %struct.FT_CMap_ClassRec_** %19 to i32*
  %21 = load i32, i32* %20, align 8
  %22 = load i64, i64* %10, align 8
  %23 = trunc i64 %22 to i32
  store i32 %23, i32* %1, align 4
  br label %26

24:                                               ; preds = %2, %8
  %25 = tail call fastcc i32 @tt_cmap12_char_map_binary(%struct.TT_CMapRec_* %0, i32* %1, i8 zeroext 1)
  br label %26

26:                                               ; preds = %15, %18, %24
  %27 = phi i32 [ %21, %18 ], [ %25, %24 ], [ 0, %15 ]
  ret i32 %27
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @tt_cmap12_validate(i8*, %struct.FT_ValidatorRec_*) #0 {
  %3 = getelementptr inbounds i8, i8* %0, i64 16
  %4 = getelementptr inbounds %struct.FT_ValidatorRec_, %struct.FT_ValidatorRec_* %1, i64 0, i32 2
  %5 = load volatile i8*, i8** %4, align 8
  %6 = icmp ugt i8* %3, %5
  br i1 %6, label %7, label %8

7:                                                ; preds = %2
  tail call void @ft_validator_error(%struct.FT_ValidatorRec_* %1, i32 8) #17
  br label %8

8:                                                ; preds = %7, %2
  %9 = getelementptr inbounds i8, i8* %0, i64 4
  %10 = load i8, i8* %9, align 1
  %11 = zext i8 %10 to i64
  %12 = shl nuw nsw i64 %11, 24
  %13 = getelementptr inbounds i8, i8* %0, i64 5
  %14 = load i8, i8* %13, align 1
  %15 = zext i8 %14 to i64
  %16 = shl nuw nsw i64 %15, 16
  %17 = or i64 %16, %12
  %18 = getelementptr inbounds i8, i8* %0, i64 6
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i64
  %21 = shl nuw nsw i64 %20, 8
  %22 = or i64 %17, %21
  %23 = getelementptr inbounds i8, i8* %0, i64 7
  %24 = load i8, i8* %23, align 1
  %25 = zext i8 %24 to i64
  %26 = or i64 %22, %25
  %27 = getelementptr inbounds i8, i8* %0, i64 12
  %28 = load i8, i8* %27, align 1
  %29 = zext i8 %28 to i64
  %30 = shl nuw nsw i64 %29, 24
  %31 = getelementptr inbounds i8, i8* %0, i64 13
  %32 = load i8, i8* %31, align 1
  %33 = zext i8 %32 to i64
  %34 = shl nuw nsw i64 %33, 16
  %35 = or i64 %34, %30
  %36 = getelementptr inbounds i8, i8* %0, i64 14
  %37 = load i8, i8* %36, align 1
  %38 = zext i8 %37 to i64
  %39 = shl nuw nsw i64 %38, 8
  %40 = or i64 %35, %39
  %41 = getelementptr inbounds i8, i8* %0, i64 15
  %42 = load i8, i8* %41, align 1
  %43 = zext i8 %42 to i64
  %44 = or i64 %40, %43
  %45 = load volatile i8*, i8** %4, align 8
  %46 = ptrtoint i8* %45 to i64
  %47 = ptrtoint i8* %0 to i64
  %48 = sub i64 %46, %47
  %49 = icmp ugt i64 %26, %48
  %50 = icmp ult i64 %26, 16
  %51 = or i1 %50, %49
  br i1 %51, label %56, label %52

52:                                               ; preds = %8
  %53 = add nsw i64 %26, -16
  %54 = udiv i64 %53, 12
  %55 = icmp ult i64 %54, %44
  br i1 %55, label %56, label %57

56:                                               ; preds = %52, %8
  tail call void @ft_validator_error(%struct.FT_ValidatorRec_* %1, i32 8) #17
  br label %57

57:                                               ; preds = %56, %52
  %58 = icmp eq i64 %44, 0
  br i1 %58, label %144, label %59

59:                                               ; preds = %57
  %60 = getelementptr inbounds %struct.FT_ValidatorRec_, %struct.FT_ValidatorRec_* %1, i64 0, i32 3
  %61 = getelementptr inbounds %struct.FT_ValidatorRec_, %struct.FT_ValidatorRec_* %1, i64 1
  %62 = bitcast %struct.FT_ValidatorRec_* %61 to i32*
  br label %63

63:                                               ; preds = %141, %59
  %64 = phi i64 [ 0, %59 ], [ %101, %141 ]
  %65 = phi i64 [ 0, %59 ], [ %142, %141 ]
  %66 = phi i8* [ %3, %59 ], [ %102, %141 ]
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i64
  %69 = shl nuw nsw i64 %68, 24
  %70 = getelementptr inbounds i8, i8* %66, i64 1
  %71 = load i8, i8* %70, align 1
  %72 = zext i8 %71 to i64
  %73 = shl nuw nsw i64 %72, 16
  %74 = or i64 %73, %69
  %75 = getelementptr inbounds i8, i8* %66, i64 2
  %76 = load i8, i8* %75, align 1
  %77 = zext i8 %76 to i64
  %78 = shl nuw nsw i64 %77, 8
  %79 = or i64 %74, %78
  %80 = getelementptr inbounds i8, i8* %66, i64 3
  %81 = load i8, i8* %80, align 1
  %82 = zext i8 %81 to i64
  %83 = or i64 %79, %82
  %84 = getelementptr inbounds i8, i8* %66, i64 4
  %85 = load i8, i8* %84, align 1
  %86 = zext i8 %85 to i64
  %87 = shl nuw nsw i64 %86, 24
  %88 = getelementptr inbounds i8, i8* %66, i64 5
  %89 = load i8, i8* %88, align 1
  %90 = zext i8 %89 to i64
  %91 = shl nuw nsw i64 %90, 16
  %92 = or i64 %91, %87
  %93 = getelementptr inbounds i8, i8* %66, i64 6
  %94 = load i8, i8* %93, align 1
  %95 = zext i8 %94 to i64
  %96 = shl nuw nsw i64 %95, 8
  %97 = or i64 %92, %96
  %98 = getelementptr inbounds i8, i8* %66, i64 7
  %99 = load i8, i8* %98, align 1
  %100 = zext i8 %99 to i64
  %101 = or i64 %97, %100
  %102 = getelementptr inbounds i8, i8* %66, i64 12
  %103 = getelementptr inbounds i8, i8* %66, i64 8
  %104 = load i8, i8* %103, align 1
  %105 = zext i8 %104 to i64
  %106 = shl nuw nsw i64 %105, 24
  %107 = getelementptr inbounds i8, i8* %66, i64 9
  %108 = load i8, i8* %107, align 1
  %109 = zext i8 %108 to i64
  %110 = shl nuw nsw i64 %109, 16
  %111 = or i64 %110, %106
  %112 = getelementptr inbounds i8, i8* %66, i64 10
  %113 = load i8, i8* %112, align 1
  %114 = zext i8 %113 to i64
  %115 = shl nuw nsw i64 %114, 8
  %116 = or i64 %111, %115
  %117 = getelementptr inbounds i8, i8* %66, i64 11
  %118 = load i8, i8* %117, align 1
  %119 = zext i8 %118 to i64
  %120 = or i64 %116, %119
  %121 = icmp ult i64 %101, %83
  br i1 %121, label %122, label %123

122:                                              ; preds = %63
  tail call void @ft_validator_error(%struct.FT_ValidatorRec_* %1, i32 8) #17
  br label %123

123:                                              ; preds = %122, %63
  %124 = icmp eq i64 %65, 0
  %125 = icmp ugt i64 %83, %64
  %126 = or i1 %124, %125
  br i1 %126, label %128, label %127

127:                                              ; preds = %123
  tail call void @ft_validator_error(%struct.FT_ValidatorRec_* %1, i32 8) #17
  br label %128

128:                                              ; preds = %123, %127
  %129 = load volatile i32, i32* %60, align 8
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %141, label %131

131:                                              ; preds = %128
  %132 = sub nsw i64 %101, %83
  %133 = trunc i64 %132 to i32
  %134 = load i32, i32* %62, align 8
  %135 = icmp ult i32 %134, %133
  br i1 %135, label %140, label %136

136:                                              ; preds = %131
  %137 = sub i32 %134, %133
  %138 = zext i32 %137 to i64
  %139 = icmp ult i64 %120, %138
  br i1 %139, label %141, label %140

140:                                              ; preds = %136, %131
  tail call void @ft_validator_error(%struct.FT_ValidatorRec_* %1, i32 16) #17
  br label %141

141:                                              ; preds = %140, %136, %128
  %142 = add nuw nsw i64 %65, 1
  %143 = icmp eq i64 %142, %44
  br i1 %143, label %144, label %63

144:                                              ; preds = %141, %57
  ret i32 0
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal i32 @tt_cmap12_get_info(%struct.TT_CMapRec_* nocapture readonly, %struct.TT_CMapInfo_* nocapture) #3 {
  %3 = getelementptr inbounds %struct.TT_CMapRec_, %struct.TT_CMapRec_* %0, i64 0, i32 1
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 8
  %6 = getelementptr inbounds %struct.TT_CMapInfo_, %struct.TT_CMapInfo_* %1, i64 0, i32 1
  store i64 12, i64* %6, align 8
  %7 = load i8, i8* %5, align 1
  %8 = zext i8 %7 to i64
  %9 = shl nuw nsw i64 %8, 24
  %10 = getelementptr inbounds i8, i8* %4, i64 9
  %11 = load i8, i8* %10, align 1
  %12 = zext i8 %11 to i64
  %13 = shl nuw nsw i64 %12, 16
  %14 = or i64 %13, %9
  %15 = getelementptr inbounds i8, i8* %4, i64 10
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i64
  %18 = shl nuw nsw i64 %17, 8
  %19 = or i64 %14, %18
  %20 = getelementptr inbounds i8, i8* %4, i64 11
  %21 = load i8, i8* %20, align 1
  %22 = zext i8 %21 to i64
  %23 = or i64 %19, %22
  %24 = getelementptr inbounds %struct.TT_CMapInfo_, %struct.TT_CMapInfo_* %1, i64 0, i32 0
  store i64 %23, i64* %24, align 8
  ret i32 0
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal i32 @tt_cmap13_init(%struct.TT_CMap13Rec_* nocapture, i8*) #3 {
  %3 = getelementptr inbounds %struct.TT_CMap13Rec_, %struct.TT_CMap13Rec_* %0, i64 0, i32 0, i32 1
  store i8* %1, i8** %3, align 8
  %4 = getelementptr inbounds i8, i8* %1, i64 12
  %5 = load i8, i8* %4, align 1
  %6 = zext i8 %5 to i64
  %7 = shl nuw nsw i64 %6, 24
  %8 = getelementptr inbounds i8, i8* %1, i64 13
  %9 = load i8, i8* %8, align 1
  %10 = zext i8 %9 to i64
  %11 = shl nuw nsw i64 %10, 16
  %12 = or i64 %11, %7
  %13 = getelementptr inbounds i8, i8* %1, i64 14
  %14 = load i8, i8* %13, align 1
  %15 = zext i8 %14 to i64
  %16 = shl nuw nsw i64 %15, 8
  %17 = or i64 %12, %16
  %18 = getelementptr inbounds i8, i8* %1, i64 15
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i64
  %21 = or i64 %17, %20
  %22 = getelementptr inbounds %struct.TT_CMap13Rec_, %struct.TT_CMap13Rec_* %0, i64 0, i32 5
  store i64 %21, i64* %22, align 8
  %23 = getelementptr inbounds %struct.TT_CMap13Rec_, %struct.TT_CMap13Rec_* %0, i64 0, i32 1
  store i8 0, i8* %23, align 8
  ret i32 0
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal i32 @tt_cmap13_char_index(%struct.TT_CMapRec_* nocapture readonly, i32) #2 {
  %3 = getelementptr inbounds %struct.TT_CMapRec_, %struct.TT_CMapRec_* %0, i64 0, i32 1
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 12
  %6 = load i8, i8* %5, align 1
  %7 = zext i8 %6 to i32
  %8 = shl nuw i32 %7, 24
  %9 = getelementptr inbounds i8, i8* %4, i64 13
  %10 = load i8, i8* %9, align 1
  %11 = zext i8 %10 to i32
  %12 = shl nuw nsw i32 %11, 16
  %13 = or i32 %12, %8
  %14 = getelementptr inbounds i8, i8* %4, i64 14
  %15 = load i8, i8* %14, align 1
  %16 = zext i8 %15 to i32
  %17 = shl nuw nsw i32 %16, 8
  %18 = or i32 %13, %17
  %19 = getelementptr inbounds i8, i8* %4, i64 15
  %20 = load i8, i8* %19, align 1
  %21 = zext i8 %20 to i32
  %22 = or i32 %18, %21
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %98, label %24

24:                                               ; preds = %2
  %25 = getelementptr inbounds i8, i8* %4, i64 20
  br label %26

26:                                               ; preds = %94, %24
  %27 = phi i32 [ 0, %24 ], [ %96, %94 ]
  %28 = phi i32 [ %22, %24 ], [ %95, %94 ]
  %29 = add i32 %28, %27
  %30 = lshr i32 %29, 1
  %31 = mul i32 %30, 12
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds i8, i8* %25, i64 %32
  %34 = getelementptr inbounds i8, i8* %33, i64 -4
  %35 = load i8, i8* %34, align 1
  %36 = zext i8 %35 to i32
  %37 = shl nuw i32 %36, 24
  %38 = getelementptr inbounds i8, i8* %34, i64 1
  %39 = load i8, i8* %38, align 1
  %40 = zext i8 %39 to i32
  %41 = shl nuw nsw i32 %40, 16
  %42 = or i32 %41, %37
  %43 = getelementptr inbounds i8, i8* %34, i64 2
  %44 = load i8, i8* %43, align 1
  %45 = zext i8 %44 to i32
  %46 = shl nuw nsw i32 %45, 8
  %47 = or i32 %42, %46
  %48 = getelementptr inbounds i8, i8* %34, i64 3
  %49 = load i8, i8* %48, align 1
  %50 = zext i8 %49 to i32
  %51 = or i32 %47, %50
  %52 = getelementptr inbounds i8, i8* %33, i64 4
  %53 = getelementptr inbounds i8, i8* %52, i64 -4
  %54 = icmp ugt i32 %51, %1
  br i1 %54, label %94, label %55

55:                                               ; preds = %26
  %56 = getelementptr inbounds i8, i8* %53, i64 1
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i32
  %59 = shl nuw nsw i32 %58, 16
  %60 = load i8, i8* %53, align 1
  %61 = zext i8 %60 to i32
  %62 = shl nuw i32 %61, 24
  %63 = or i32 %62, %59
  %64 = getelementptr inbounds i8, i8* %53, i64 2
  %65 = load i8, i8* %64, align 1
  %66 = zext i8 %65 to i32
  %67 = shl nuw nsw i32 %66, 8
  %68 = or i32 %63, %67
  %69 = getelementptr inbounds i8, i8* %53, i64 3
  %70 = load i8, i8* %69, align 1
  %71 = zext i8 %70 to i32
  %72 = or i32 %68, %71
  %73 = icmp ult i32 %72, %1
  br i1 %73, label %74, label %76

74:                                               ; preds = %55
  %75 = add nuw i32 %30, 1
  br label %94

76:                                               ; preds = %55
  %77 = load i8, i8* %52, align 1
  %78 = zext i8 %77 to i32
  %79 = shl nuw i32 %78, 24
  %80 = getelementptr inbounds i8, i8* %52, i64 1
  %81 = load i8, i8* %80, align 1
  %82 = zext i8 %81 to i32
  %83 = shl nuw nsw i32 %82, 16
  %84 = or i32 %83, %79
  %85 = getelementptr inbounds i8, i8* %52, i64 2
  %86 = load i8, i8* %85, align 1
  %87 = zext i8 %86 to i32
  %88 = shl nuw nsw i32 %87, 8
  %89 = or i32 %84, %88
  %90 = getelementptr inbounds i8, i8* %52, i64 3
  %91 = load i8, i8* %90, align 1
  %92 = zext i8 %91 to i32
  %93 = or i32 %89, %92
  br label %98

94:                                               ; preds = %74, %26
  %95 = phi i32 [ %28, %74 ], [ %30, %26 ]
  %96 = phi i32 [ %75, %74 ], [ %27, %26 ]
  %97 = icmp ult i32 %96, %95
  br i1 %97, label %26, label %98

98:                                               ; preds = %94, %76, %2
  %99 = phi i32 [ 0, %2 ], [ %93, %76 ], [ 0, %94 ]
  ret i32 %99
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal i32 @tt_cmap13_char_next(%struct.TT_CMapRec_* nocapture, i32* nocapture) #3 {
  %3 = bitcast %struct.TT_CMapRec_* %0 to %struct.TT_CMap13Rec_*
  %4 = getelementptr inbounds %struct.TT_CMapRec_, %struct.TT_CMapRec_* %0, i64 1
  %5 = bitcast %struct.TT_CMapRec_* %4 to i8*
  %6 = load i8, i8* %5, align 8
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %10

8:                                                ; preds = %2
  %9 = load i32, i32* %1, align 4
  br label %26

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.TT_CMapRec_, %struct.TT_CMapRec_* %0, i64 1, i32 0, i32 0, i32 1
  %12 = bitcast i32* %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = load i32, i32* %1, align 4
  %15 = zext i32 %14 to i64
  %16 = icmp eq i64 %13, %15
  br i1 %16, label %17, label %26

17:                                               ; preds = %10
  tail call fastcc void @tt_cmap13_next(%struct.TT_CMap13Rec_* %3)
  %18 = load i8, i8* %5, align 8
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %162, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %struct.TT_CMapRec_, %struct.TT_CMapRec_* %0, i64 1, i32 0, i32 1
  %22 = bitcast %struct.FT_CMap_ClassRec_** %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = load i64, i64* %12, align 8
  %25 = trunc i64 %24 to i32
  store i32 %25, i32* %1, align 4
  br label %162

26:                                               ; preds = %8, %10
  %27 = phi i32 [ %9, %8 ], [ %14, %10 ]
  %28 = getelementptr inbounds %struct.TT_CMapRec_, %struct.TT_CMapRec_* %0, i64 0, i32 1
  %29 = load i8*, i8** %28, align 8
  %30 = getelementptr inbounds i8, i8* %29, i64 12
  %31 = load i8, i8* %30, align 1
  %32 = zext i8 %31 to i32
  %33 = shl nuw i32 %32, 24
  %34 = getelementptr inbounds i8, i8* %29, i64 13
  %35 = load i8, i8* %34, align 1
  %36 = zext i8 %35 to i32
  %37 = shl nuw nsw i32 %36, 16
  %38 = or i32 %37, %33
  %39 = getelementptr inbounds i8, i8* %29, i64 14
  %40 = load i8, i8* %39, align 1
  %41 = zext i8 %40 to i32
  %42 = shl nuw nsw i32 %41, 8
  %43 = or i32 %38, %42
  %44 = getelementptr inbounds i8, i8* %29, i64 15
  %45 = load i8, i8* %44, align 1
  %46 = zext i8 %45 to i32
  %47 = or i32 %43, %46
  %48 = icmp eq i32 %47, 0
  %49 = icmp eq i32 %27, -1
  %50 = or i1 %49, %48
  br i1 %50, label %162, label %51

51:                                               ; preds = %26
  %52 = add nuw i32 %27, 1
  %53 = getelementptr inbounds i8, i8* %29, i64 20
  br label %54

54:                                               ; preds = %122, %51
  %55 = phi i32 [ 0, %51 ], [ %124, %122 ]
  %56 = phi i32 [ %47, %51 ], [ %123, %122 ]
  %57 = add i32 %56, %55
  %58 = lshr i32 %57, 1
  %59 = mul i32 %58, 12
  %60 = zext i32 %59 to i64
  %61 = getelementptr inbounds i8, i8* %53, i64 %60
  %62 = getelementptr inbounds i8, i8* %61, i64 -4
  %63 = load i8, i8* %62, align 1
  %64 = zext i8 %63 to i32
  %65 = shl nuw i32 %64, 24
  %66 = getelementptr inbounds i8, i8* %62, i64 1
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i32
  %69 = shl nuw nsw i32 %68, 16
  %70 = or i32 %69, %65
  %71 = getelementptr inbounds i8, i8* %62, i64 2
  %72 = load i8, i8* %71, align 1
  %73 = zext i8 %72 to i32
  %74 = shl nuw nsw i32 %73, 8
  %75 = or i32 %70, %74
  %76 = getelementptr inbounds i8, i8* %62, i64 3
  %77 = load i8, i8* %76, align 1
  %78 = zext i8 %77 to i32
  %79 = or i32 %75, %78
  %80 = getelementptr inbounds i8, i8* %61, i64 4
  %81 = getelementptr inbounds i8, i8* %80, i64 -4
  %82 = load i8, i8* %81, align 1
  %83 = zext i8 %82 to i32
  %84 = shl nuw i32 %83, 24
  %85 = getelementptr inbounds i8, i8* %81, i64 1
  %86 = load i8, i8* %85, align 1
  %87 = zext i8 %86 to i32
  %88 = shl nuw nsw i32 %87, 16
  %89 = or i32 %88, %84
  %90 = getelementptr inbounds i8, i8* %81, i64 2
  %91 = load i8, i8* %90, align 1
  %92 = zext i8 %91 to i32
  %93 = shl nuw nsw i32 %92, 8
  %94 = or i32 %89, %93
  %95 = getelementptr inbounds i8, i8* %81, i64 3
  %96 = load i8, i8* %95, align 1
  %97 = zext i8 %96 to i32
  %98 = or i32 %94, %97
  %99 = icmp ult i32 %52, %79
  br i1 %99, label %122, label %100

100:                                              ; preds = %54
  %101 = icmp ult i32 %27, %98
  br i1 %101, label %104, label %102

102:                                              ; preds = %100
  %103 = add nuw i32 %58, 1
  br label %122

104:                                              ; preds = %100
  %105 = load i8, i8* %80, align 1
  %106 = zext i8 %105 to i32
  %107 = shl nuw i32 %106, 24
  %108 = getelementptr inbounds i8, i8* %80, i64 1
  %109 = load i8, i8* %108, align 1
  %110 = zext i8 %109 to i32
  %111 = shl nuw nsw i32 %110, 16
  %112 = or i32 %111, %107
  %113 = getelementptr inbounds i8, i8* %80, i64 2
  %114 = load i8, i8* %113, align 1
  %115 = zext i8 %114 to i32
  %116 = shl nuw nsw i32 %115, 8
  %117 = or i32 %112, %116
  %118 = getelementptr inbounds i8, i8* %80, i64 3
  %119 = load i8, i8* %118, align 1
  %120 = zext i8 %119 to i32
  %121 = or i32 %117, %120
  br label %126

122:                                              ; preds = %102, %54
  %123 = phi i32 [ %56, %102 ], [ %58, %54 ]
  %124 = phi i32 [ %103, %102 ], [ %55, %54 ]
  %125 = icmp ult i32 %124, %123
  br i1 %125, label %54, label %126

126:                                              ; preds = %122, %104
  %127 = phi i32 [ %121, %104 ], [ 0, %122 ]
  %128 = getelementptr inbounds %struct.TT_CMapRec_, %struct.TT_CMapRec_* %0, i64 0, i32 0, i32 0, i32 0
  %129 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %128, align 8
  %130 = icmp ult i32 %27, %98
  br i1 %130, label %134, label %131

131:                                              ; preds = %126
  %132 = add nuw i32 %58, 1
  %133 = icmp eq i32 %132, %47
  br i1 %133, label %162, label %134

134:                                              ; preds = %126, %131
  %135 = phi i32 [ %132, %131 ], [ %58, %126 ]
  store i8 1, i8* %5, align 8
  %136 = zext i32 %52 to i64
  %137 = getelementptr inbounds %struct.TT_CMapRec_, %struct.TT_CMapRec_* %0, i64 1, i32 0, i32 0, i32 1
  %138 = bitcast i32* %137 to i64*
  store i64 %136, i64* %138, align 8
  %139 = zext i32 %135 to i64
  %140 = getelementptr inbounds %struct.TT_CMapRec_, %struct.TT_CMapRec_* %0, i64 1, i32 1
  %141 = bitcast i8** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %129, i64 0, i32 4
  %143 = load i64, i64* %142, align 8
  %144 = trunc i64 %143 to i32
  %145 = icmp uge i32 %127, %144
  %146 = icmp eq i32 %127, 0
  %147 = or i1 %146, %145
  br i1 %147, label %148, label %155

148:                                              ; preds = %134
  tail call fastcc void @tt_cmap13_next(%struct.TT_CMap13Rec_* %3) #17
  %149 = load i8, i8* %5, align 8
  %150 = icmp eq i8 %149, 0
  br i1 %150, label %158, label %151

151:                                              ; preds = %148
  %152 = getelementptr inbounds %struct.TT_CMapRec_, %struct.TT_CMapRec_* %0, i64 1, i32 0, i32 1
  %153 = bitcast %struct.FT_CMap_ClassRec_** %152 to i32*
  %154 = load i32, i32* %153, align 8
  br label %158

155:                                              ; preds = %134
  %156 = getelementptr inbounds %struct.TT_CMapRec_, %struct.TT_CMapRec_* %0, i64 1, i32 0, i32 1
  %157 = bitcast %struct.FT_CMap_ClassRec_** %156 to i32*
  store i32 %127, i32* %157, align 8
  br label %158

158:                                              ; preds = %155, %151, %148
  %159 = phi i32 [ %127, %155 ], [ %154, %151 ], [ 0, %148 ]
  %160 = load i64, i64* %138, align 8
  %161 = trunc i64 %160 to i32
  store i32 %161, i32* %1, align 4
  br label %162

162:                                              ; preds = %158, %131, %26, %17, %20
  %163 = phi i32 [ %23, %20 ], [ 0, %17 ], [ 0, %26 ], [ 0, %131 ], [ %159, %158 ]
  ret i32 %163
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @tt_cmap13_validate(i8*, %struct.FT_ValidatorRec_*) #0 {
  %3 = getelementptr inbounds i8, i8* %0, i64 16
  %4 = getelementptr inbounds %struct.FT_ValidatorRec_, %struct.FT_ValidatorRec_* %1, i64 0, i32 2
  %5 = load volatile i8*, i8** %4, align 8
  %6 = icmp ugt i8* %3, %5
  br i1 %6, label %7, label %8

7:                                                ; preds = %2
  tail call void @ft_validator_error(%struct.FT_ValidatorRec_* %1, i32 8) #17
  br label %8

8:                                                ; preds = %7, %2
  %9 = getelementptr inbounds i8, i8* %0, i64 4
  %10 = load i8, i8* %9, align 1
  %11 = zext i8 %10 to i64
  %12 = shl nuw nsw i64 %11, 24
  %13 = getelementptr inbounds i8, i8* %0, i64 5
  %14 = load i8, i8* %13, align 1
  %15 = zext i8 %14 to i64
  %16 = shl nuw nsw i64 %15, 16
  %17 = or i64 %16, %12
  %18 = getelementptr inbounds i8, i8* %0, i64 6
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i64
  %21 = shl nuw nsw i64 %20, 8
  %22 = or i64 %17, %21
  %23 = getelementptr inbounds i8, i8* %0, i64 7
  %24 = load i8, i8* %23, align 1
  %25 = zext i8 %24 to i64
  %26 = or i64 %22, %25
  %27 = getelementptr inbounds i8, i8* %0, i64 12
  %28 = load i8, i8* %27, align 1
  %29 = zext i8 %28 to i64
  %30 = shl nuw nsw i64 %29, 24
  %31 = getelementptr inbounds i8, i8* %0, i64 13
  %32 = load i8, i8* %31, align 1
  %33 = zext i8 %32 to i64
  %34 = shl nuw nsw i64 %33, 16
  %35 = or i64 %34, %30
  %36 = getelementptr inbounds i8, i8* %0, i64 14
  %37 = load i8, i8* %36, align 1
  %38 = zext i8 %37 to i64
  %39 = shl nuw nsw i64 %38, 8
  %40 = or i64 %35, %39
  %41 = getelementptr inbounds i8, i8* %0, i64 15
  %42 = load i8, i8* %41, align 1
  %43 = zext i8 %42 to i64
  %44 = or i64 %40, %43
  %45 = load volatile i8*, i8** %4, align 8
  %46 = ptrtoint i8* %45 to i64
  %47 = ptrtoint i8* %0 to i64
  %48 = sub i64 %46, %47
  %49 = icmp ugt i64 %26, %48
  %50 = icmp ult i64 %26, 16
  %51 = or i1 %50, %49
  br i1 %51, label %56, label %52

52:                                               ; preds = %8
  %53 = add nsw i64 %26, -16
  %54 = udiv i64 %53, 12
  %55 = icmp ult i64 %54, %44
  br i1 %55, label %56, label %57

56:                                               ; preds = %52, %8
  tail call void @ft_validator_error(%struct.FT_ValidatorRec_* %1, i32 8) #17
  br label %57

57:                                               ; preds = %56, %52
  %58 = icmp eq i64 %44, 0
  br i1 %58, label %139, label %59

59:                                               ; preds = %57
  %60 = getelementptr inbounds %struct.FT_ValidatorRec_, %struct.FT_ValidatorRec_* %1, i64 0, i32 3
  %61 = getelementptr inbounds %struct.FT_ValidatorRec_, %struct.FT_ValidatorRec_* %1, i64 1
  %62 = bitcast %struct.FT_ValidatorRec_* %61 to i32*
  br label %63

63:                                               ; preds = %136, %59
  %64 = phi i64 [ 0, %59 ], [ %101, %136 ]
  %65 = phi i64 [ 0, %59 ], [ %137, %136 ]
  %66 = phi i8* [ %3, %59 ], [ %102, %136 ]
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i64
  %69 = shl nuw nsw i64 %68, 24
  %70 = getelementptr inbounds i8, i8* %66, i64 1
  %71 = load i8, i8* %70, align 1
  %72 = zext i8 %71 to i64
  %73 = shl nuw nsw i64 %72, 16
  %74 = or i64 %73, %69
  %75 = getelementptr inbounds i8, i8* %66, i64 2
  %76 = load i8, i8* %75, align 1
  %77 = zext i8 %76 to i64
  %78 = shl nuw nsw i64 %77, 8
  %79 = or i64 %74, %78
  %80 = getelementptr inbounds i8, i8* %66, i64 3
  %81 = load i8, i8* %80, align 1
  %82 = zext i8 %81 to i64
  %83 = or i64 %79, %82
  %84 = getelementptr inbounds i8, i8* %66, i64 4
  %85 = load i8, i8* %84, align 1
  %86 = zext i8 %85 to i64
  %87 = shl nuw nsw i64 %86, 24
  %88 = getelementptr inbounds i8, i8* %66, i64 5
  %89 = load i8, i8* %88, align 1
  %90 = zext i8 %89 to i64
  %91 = shl nuw nsw i64 %90, 16
  %92 = or i64 %91, %87
  %93 = getelementptr inbounds i8, i8* %66, i64 6
  %94 = load i8, i8* %93, align 1
  %95 = zext i8 %94 to i64
  %96 = shl nuw nsw i64 %95, 8
  %97 = or i64 %92, %96
  %98 = getelementptr inbounds i8, i8* %66, i64 7
  %99 = load i8, i8* %98, align 1
  %100 = zext i8 %99 to i64
  %101 = or i64 %97, %100
  %102 = getelementptr inbounds i8, i8* %66, i64 12
  %103 = getelementptr inbounds i8, i8* %66, i64 8
  %104 = load i8, i8* %103, align 1
  %105 = zext i8 %104 to i64
  %106 = shl nuw nsw i64 %105, 24
  %107 = getelementptr inbounds i8, i8* %66, i64 9
  %108 = load i8, i8* %107, align 1
  %109 = zext i8 %108 to i64
  %110 = shl nuw nsw i64 %109, 16
  %111 = or i64 %110, %106
  %112 = getelementptr inbounds i8, i8* %66, i64 10
  %113 = load i8, i8* %112, align 1
  %114 = zext i8 %113 to i64
  %115 = shl nuw nsw i64 %114, 8
  %116 = or i64 %111, %115
  %117 = getelementptr inbounds i8, i8* %66, i64 11
  %118 = load i8, i8* %117, align 1
  %119 = zext i8 %118 to i64
  %120 = or i64 %116, %119
  %121 = icmp ugt i64 %83, %101
  br i1 %121, label %122, label %123

122:                                              ; preds = %63
  tail call void @ft_validator_error(%struct.FT_ValidatorRec_* %1, i32 8) #17
  br label %123

123:                                              ; preds = %122, %63
  %124 = icmp eq i64 %65, 0
  %125 = icmp ugt i64 %83, %64
  %126 = or i1 %124, %125
  br i1 %126, label %128, label %127

127:                                              ; preds = %123
  tail call void @ft_validator_error(%struct.FT_ValidatorRec_* %1, i32 8) #17
  br label %128

128:                                              ; preds = %123, %127
  %129 = load volatile i32, i32* %60, align 8
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %136, label %131

131:                                              ; preds = %128
  %132 = load i32, i32* %62, align 8
  %133 = zext i32 %132 to i64
  %134 = icmp ult i64 %120, %133
  br i1 %134, label %136, label %135

135:                                              ; preds = %131
  tail call void @ft_validator_error(%struct.FT_ValidatorRec_* %1, i32 16) #17
  br label %136

136:                                              ; preds = %131, %128, %135
  %137 = add nuw nsw i64 %65, 1
  %138 = icmp eq i64 %137, %44
  br i1 %138, label %139, label %63

139:                                              ; preds = %136, %57
  ret i32 0
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal i32 @tt_cmap13_get_info(%struct.TT_CMapRec_* nocapture readonly, %struct.TT_CMapInfo_* nocapture) #3 {
  %3 = getelementptr inbounds %struct.TT_CMapRec_, %struct.TT_CMapRec_* %0, i64 0, i32 1
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 8
  %6 = getelementptr inbounds %struct.TT_CMapInfo_, %struct.TT_CMapInfo_* %1, i64 0, i32 1
  store i64 13, i64* %6, align 8
  %7 = load i8, i8* %5, align 1
  %8 = zext i8 %7 to i64
  %9 = shl nuw nsw i64 %8, 24
  %10 = getelementptr inbounds i8, i8* %4, i64 9
  %11 = load i8, i8* %10, align 1
  %12 = zext i8 %11 to i64
  %13 = shl nuw nsw i64 %12, 16
  %14 = or i64 %13, %9
  %15 = getelementptr inbounds i8, i8* %4, i64 10
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i64
  %18 = shl nuw nsw i64 %17, 8
  %19 = or i64 %14, %18
  %20 = getelementptr inbounds i8, i8* %4, i64 11
  %21 = load i8, i8* %20, align 1
  %22 = zext i8 %21 to i64
  %23 = or i64 %19, %22
  %24 = getelementptr inbounds %struct.TT_CMapInfo_, %struct.TT_CMapInfo_* %1, i64 0, i32 0
  store i64 %23, i64* %24, align 8
  ret i32 0
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal i32 @tt_cmap14_init(%struct.TT_CMap14Rec_* nocapture, i8*) #3 {
  %3 = getelementptr inbounds %struct.TT_CMap14Rec_, %struct.TT_CMap14Rec_* %0, i64 0, i32 0, i32 1
  store i8* %1, i8** %3, align 8
  %4 = getelementptr inbounds i8, i8* %1, i64 6
  %5 = load i8, i8* %4, align 1
  %6 = zext i8 %5 to i64
  %7 = shl nuw nsw i64 %6, 24
  %8 = getelementptr inbounds i8, i8* %1, i64 7
  %9 = load i8, i8* %8, align 1
  %10 = zext i8 %9 to i64
  %11 = shl nuw nsw i64 %10, 16
  %12 = or i64 %11, %7
  %13 = getelementptr inbounds i8, i8* %1, i64 8
  %14 = load i8, i8* %13, align 1
  %15 = zext i8 %14 to i64
  %16 = shl nuw nsw i64 %15, 8
  %17 = or i64 %12, %16
  %18 = getelementptr inbounds i8, i8* %1, i64 9
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i64
  %21 = or i64 %17, %20
  %22 = getelementptr inbounds %struct.TT_CMap14Rec_, %struct.TT_CMap14Rec_* %0, i64 0, i32 1
  store i64 %21, i64* %22, align 8
  %23 = getelementptr inbounds %struct.TT_CMap14Rec_, %struct.TT_CMap14Rec_* %0, i64 0, i32 2
  store i32 0, i32* %23, align 8
  %24 = getelementptr inbounds %struct.TT_CMap14Rec_, %struct.TT_CMap14Rec_* %0, i64 0, i32 3
  store i32* null, i32** %24, align 8
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define internal void @tt_cmap14_done(%struct.TT_CMap14Rec_* nocapture) #0 {
  %2 = getelementptr inbounds %struct.TT_CMap14Rec_, %struct.TT_CMap14Rec_* %0, i64 0, i32 4
  %3 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %2, align 8
  %4 = getelementptr inbounds %struct.TT_CMap14Rec_, %struct.TT_CMap14Rec_* %0, i64 0, i32 2
  store i32 0, i32* %4, align 8
  %5 = icmp eq %struct.FT_MemoryRec_* %3, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.TT_CMap14Rec_, %struct.TT_CMap14Rec_* %0, i64 0, i32 3
  %8 = load i32*, i32** %7, align 8
  %9 = icmp eq i32* %8, null
  br i1 %9, label %12, label %10

10:                                               ; preds = %6
  %11 = bitcast i32* %8 to i8*
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* nonnull %3, i8* nonnull %11) #17
  store i32* null, i32** %7, align 8
  br label %12

12:                                               ; preds = %6, %1, %10
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal i32 @tt_cmap14_char_index(%struct.TT_CMapRec_* nocapture readnone, i32) #4 {
  ret i32 0
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define internal i32 @tt_cmap14_char_next(%struct.TT_CMapRec_* nocapture readnone, i32* nocapture) #1 {
  store i32 0, i32* %1, align 4
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @tt_cmap14_char_var_index(%struct.TT_CMapRec_* nocapture readonly, %struct.TT_CMapRec_*, i32, i32) #0 {
  %5 = getelementptr inbounds %struct.TT_CMapRec_, %struct.TT_CMapRec_* %0, i64 0, i32 1
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds i8, i8* %6, i64 6
  %8 = load i8, i8* %7, align 1
  %9 = zext i8 %8 to i32
  %10 = shl nuw i32 %9, 24
  %11 = getelementptr inbounds i8, i8* %6, i64 7
  %12 = load i8, i8* %11, align 1
  %13 = zext i8 %12 to i32
  %14 = shl nuw nsw i32 %13, 16
  %15 = or i32 %14, %10
  %16 = getelementptr inbounds i8, i8* %6, i64 8
  %17 = load i8, i8* %16, align 1
  %18 = zext i8 %17 to i32
  %19 = shl nuw nsw i32 %18, 8
  %20 = or i32 %15, %19
  %21 = getelementptr inbounds i8, i8* %6, i64 9
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i32
  %24 = or i32 %20, %23
  %25 = getelementptr inbounds i8, i8* %6, i64 13
  %26 = zext i32 %3 to i64
  br label %27

27:                                               ; preds = %53, %4
  %28 = phi i32 [ %31, %53 ], [ %24, %4 ]
  %29 = phi i32 [ %55, %53 ], [ 0, %4 ]
  br label %30

30:                                               ; preds = %33, %27
  %31 = phi i32 [ %35, %33 ], [ %28, %27 ]
  %32 = icmp ult i32 %29, %31
  br i1 %32, label %33, label %217

33:                                               ; preds = %30
  %34 = add i32 %31, %29
  %35 = lshr i32 %34, 1
  %36 = mul i32 %35, 11
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds i8, i8* %25, i64 %37
  %39 = getelementptr inbounds i8, i8* %38, i64 -3
  %40 = load i8, i8* %39, align 1
  %41 = zext i8 %40 to i64
  %42 = shl nuw nsw i64 %41, 16
  %43 = getelementptr inbounds i8, i8* %39, i64 1
  %44 = load i8, i8* %43, align 1
  %45 = zext i8 %44 to i64
  %46 = shl nuw nsw i64 %45, 8
  %47 = or i64 %46, %42
  %48 = getelementptr inbounds i8, i8* %39, i64 2
  %49 = load i8, i8* %48, align 1
  %50 = zext i8 %49 to i64
  %51 = or i64 %47, %50
  %52 = icmp ugt i64 %51, %26
  br i1 %52, label %30, label %53

53:                                               ; preds = %33
  %54 = icmp ult i64 %51, %26
  %55 = add nuw i32 %35, 1
  br i1 %54, label %27, label %56

56:                                               ; preds = %53
  %57 = icmp eq i8* %38, null
  br i1 %57, label %217, label %58

58:                                               ; preds = %56
  %59 = getelementptr inbounds i8, i8* %38, i64 4
  %60 = load i8, i8* %38, align 1
  %61 = zext i8 %60 to i64
  %62 = shl nuw nsw i64 %61, 24
  %63 = getelementptr inbounds i8, i8* %38, i64 1
  %64 = load i8, i8* %63, align 1
  %65 = zext i8 %64 to i64
  %66 = shl nuw nsw i64 %65, 16
  %67 = or i64 %66, %62
  %68 = getelementptr inbounds i8, i8* %38, i64 2
  %69 = load i8, i8* %68, align 1
  %70 = zext i8 %69 to i64
  %71 = shl nuw nsw i64 %70, 8
  %72 = or i64 %67, %71
  %73 = getelementptr inbounds i8, i8* %38, i64 3
  %74 = load i8, i8* %73, align 1
  %75 = zext i8 %74 to i64
  %76 = or i64 %72, %75
  %77 = load i8, i8* %59, align 1
  %78 = zext i8 %77 to i64
  %79 = shl nuw nsw i64 %78, 24
  %80 = getelementptr inbounds i8, i8* %38, i64 5
  %81 = load i8, i8* %80, align 1
  %82 = zext i8 %81 to i64
  %83 = shl nuw nsw i64 %82, 16
  %84 = or i64 %83, %79
  %85 = getelementptr inbounds i8, i8* %38, i64 6
  %86 = load i8, i8* %85, align 1
  %87 = zext i8 %86 to i64
  %88 = shl nuw nsw i64 %87, 8
  %89 = or i64 %84, %88
  %90 = getelementptr inbounds i8, i8* %38, i64 7
  %91 = load i8, i8* %90, align 1
  %92 = zext i8 %91 to i64
  %93 = or i64 %89, %92
  %94 = icmp eq i64 %76, 0
  br i1 %94, label %155, label %95

95:                                               ; preds = %58
  %96 = getelementptr inbounds i8, i8* %6, i64 %76
  %97 = load i8, i8* %96, align 1
  %98 = zext i8 %97 to i32
  %99 = shl nuw i32 %98, 24
  %100 = getelementptr inbounds i8, i8* %96, i64 1
  %101 = load i8, i8* %100, align 1
  %102 = zext i8 %101 to i32
  %103 = shl nuw nsw i32 %102, 16
  %104 = or i32 %103, %99
  %105 = getelementptr inbounds i8, i8* %96, i64 2
  %106 = load i8, i8* %105, align 1
  %107 = zext i8 %106 to i32
  %108 = shl nuw nsw i32 %107, 8
  %109 = or i32 %104, %108
  %110 = getelementptr inbounds i8, i8* %96, i64 3
  %111 = load i8, i8* %110, align 1
  %112 = zext i8 %111 to i32
  %113 = or i32 %109, %112
  %114 = getelementptr inbounds i8, i8* %96, i64 7
  %115 = zext i32 %2 to i64
  br label %116

116:                                              ; preds = %122, %95
  %117 = phi i32 [ %113, %95 ], [ %124, %122 ]
  %118 = phi i32 [ 0, %95 ], [ %120, %122 ]
  br label %119

119:                                              ; preds = %142, %116
  %120 = phi i32 [ %147, %142 ], [ %118, %116 ]
  %121 = icmp ult i32 %120, %117
  br i1 %121, label %122, label %155

122:                                              ; preds = %119
  %123 = add i32 %120, %117
  %124 = lshr i32 %123, 1
  %125 = shl i32 %124, 2
  %126 = zext i32 %125 to i64
  %127 = getelementptr inbounds i8, i8* %114, i64 %126
  %128 = getelementptr inbounds i8, i8* %127, i64 -3
  %129 = load i8, i8* %128, align 1
  %130 = zext i8 %129 to i64
  %131 = shl nuw nsw i64 %130, 16
  %132 = getelementptr inbounds i8, i8* %128, i64 1
  %133 = load i8, i8* %132, align 1
  %134 = zext i8 %133 to i64
  %135 = shl nuw nsw i64 %134, 8
  %136 = or i64 %135, %131
  %137 = getelementptr inbounds i8, i8* %128, i64 2
  %138 = load i8, i8* %137, align 1
  %139 = zext i8 %138 to i64
  %140 = or i64 %136, %139
  %141 = icmp ugt i64 %140, %115
  br i1 %141, label %116, label %142

142:                                              ; preds = %122
  %143 = load i8, i8* %127, align 1
  %144 = zext i8 %143 to i64
  %145 = add nuw nsw i64 %140, %144
  %146 = icmp ult i64 %145, %115
  %147 = add nuw i32 %124, 1
  br i1 %146, label %119, label %148

148:                                              ; preds = %142
  %149 = getelementptr inbounds %struct.TT_CMapRec_, %struct.TT_CMapRec_* %1, i64 0, i32 0
  %150 = getelementptr inbounds %struct.TT_CMapRec_, %struct.TT_CMapRec_* %1, i64 0, i32 0, i32 1
  %151 = load %struct.FT_CMap_ClassRec_*, %struct.FT_CMap_ClassRec_** %150, align 8
  %152 = getelementptr inbounds %struct.FT_CMap_ClassRec_, %struct.FT_CMap_ClassRec_* %151, i64 0, i32 3
  %153 = load i32 (%struct.FT_CMapRec_*, i32)*, i32 (%struct.FT_CMapRec_*, i32)** %152, align 8
  %154 = tail call i32 %153(%struct.FT_CMapRec_* %149, i32 %2) #17
  br label %217

155:                                              ; preds = %119, %58
  %156 = icmp eq i64 %93, 0
  br i1 %156, label %217, label %157

157:                                              ; preds = %155
  %158 = getelementptr inbounds i8, i8* %6, i64 %93
  %159 = load i8, i8* %158, align 1
  %160 = zext i8 %159 to i32
  %161 = shl nuw i32 %160, 24
  %162 = getelementptr inbounds i8, i8* %158, i64 1
  %163 = load i8, i8* %162, align 1
  %164 = zext i8 %163 to i32
  %165 = shl nuw nsw i32 %164, 16
  %166 = or i32 %165, %161
  %167 = getelementptr inbounds i8, i8* %158, i64 2
  %168 = load i8, i8* %167, align 1
  %169 = zext i8 %168 to i32
  %170 = shl nuw nsw i32 %169, 8
  %171 = or i32 %166, %170
  %172 = getelementptr inbounds i8, i8* %158, i64 3
  %173 = load i8, i8* %172, align 1
  %174 = zext i8 %173 to i32
  %175 = or i32 %171, %174
  %176 = icmp eq i32 %175, 0
  br i1 %176, label %217, label %177

177:                                              ; preds = %157
  %178 = getelementptr inbounds i8, i8* %158, i64 7
  br label %179

179:                                              ; preds = %213, %177
  %180 = phi i32 [ 0, %177 ], [ %215, %213 ]
  %181 = phi i32 [ %175, %177 ], [ %214, %213 ]
  %182 = add i32 %181, %180
  %183 = lshr i32 %182, 1
  %184 = mul i32 %183, 5
  %185 = zext i32 %184 to i64
  %186 = getelementptr inbounds i8, i8* %178, i64 %185
  %187 = getelementptr inbounds i8, i8* %186, i64 -3
  %188 = load i8, i8* %187, align 1
  %189 = zext i8 %188 to i32
  %190 = shl nuw nsw i32 %189, 16
  %191 = getelementptr inbounds i8, i8* %187, i64 1
  %192 = load i8, i8* %191, align 1
  %193 = zext i8 %192 to i32
  %194 = shl nuw nsw i32 %193, 8
  %195 = or i32 %194, %190
  %196 = getelementptr inbounds i8, i8* %187, i64 2
  %197 = load i8, i8* %196, align 1
  %198 = zext i8 %197 to i32
  %199 = or i32 %195, %198
  %200 = icmp ugt i32 %199, %2
  br i1 %200, label %213, label %201

201:                                              ; preds = %179
  %202 = icmp ult i32 %199, %2
  br i1 %202, label %203, label %205

203:                                              ; preds = %201
  %204 = add nuw i32 %183, 1
  br label %213

205:                                              ; preds = %201
  %206 = load i8, i8* %186, align 1
  %207 = zext i8 %206 to i32
  %208 = shl nuw nsw i32 %207, 8
  %209 = getelementptr inbounds i8, i8* %186, i64 1
  %210 = load i8, i8* %209, align 1
  %211 = zext i8 %210 to i32
  %212 = or i32 %208, %211
  br label %217

213:                                              ; preds = %203, %179
  %214 = phi i32 [ %181, %203 ], [ %183, %179 ]
  %215 = phi i32 [ %204, %203 ], [ %180, %179 ]
  %216 = icmp ult i32 %215, %214
  br i1 %216, label %179, label %217

217:                                              ; preds = %30, %213, %205, %157, %155, %56, %148
  %218 = phi i32 [ %154, %148 ], [ 0, %56 ], [ 0, %155 ], [ %212, %205 ], [ 0, %157 ], [ 0, %213 ], [ 0, %30 ]
  ret i32 %218
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal i32 @tt_cmap14_char_var_isdefault(%struct.TT_CMapRec_* nocapture readonly, i32, i32) #2 {
  %4 = getelementptr inbounds %struct.TT_CMapRec_, %struct.TT_CMapRec_* %0, i64 0, i32 1
  %5 = load i8*, i8** %4, align 8
  %6 = getelementptr inbounds i8, i8* %5, i64 6
  %7 = load i8, i8* %6, align 1
  %8 = zext i8 %7 to i32
  %9 = shl nuw i32 %8, 24
  %10 = getelementptr inbounds i8, i8* %5, i64 7
  %11 = load i8, i8* %10, align 1
  %12 = zext i8 %11 to i32
  %13 = shl nuw nsw i32 %12, 16
  %14 = or i32 %13, %9
  %15 = getelementptr inbounds i8, i8* %5, i64 8
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i32
  %18 = shl nuw nsw i32 %17, 8
  %19 = or i32 %14, %18
  %20 = getelementptr inbounds i8, i8* %5, i64 9
  %21 = load i8, i8* %20, align 1
  %22 = zext i8 %21 to i32
  %23 = or i32 %19, %22
  %24 = getelementptr inbounds i8, i8* %5, i64 13
  %25 = zext i32 %2 to i64
  br label %26

26:                                               ; preds = %52, %3
  %27 = phi i32 [ %30, %52 ], [ %23, %3 ]
  %28 = phi i32 [ %54, %52 ], [ 0, %3 ]
  br label %29

29:                                               ; preds = %32, %26
  %30 = phi i32 [ %34, %32 ], [ %27, %26 ]
  %31 = icmp ult i32 %28, %30
  br i1 %31, label %32, label %211

32:                                               ; preds = %29
  %33 = add i32 %30, %28
  %34 = lshr i32 %33, 1
  %35 = mul i32 %34, 11
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i8, i8* %24, i64 %36
  %38 = getelementptr inbounds i8, i8* %37, i64 -3
  %39 = load i8, i8* %38, align 1
  %40 = zext i8 %39 to i64
  %41 = shl nuw nsw i64 %40, 16
  %42 = getelementptr inbounds i8, i8* %38, i64 1
  %43 = load i8, i8* %42, align 1
  %44 = zext i8 %43 to i64
  %45 = shl nuw nsw i64 %44, 8
  %46 = or i64 %45, %41
  %47 = getelementptr inbounds i8, i8* %38, i64 2
  %48 = load i8, i8* %47, align 1
  %49 = zext i8 %48 to i64
  %50 = or i64 %46, %49
  %51 = icmp ugt i64 %50, %25
  br i1 %51, label %29, label %52

52:                                               ; preds = %32
  %53 = icmp ult i64 %50, %25
  %54 = add nuw i32 %34, 1
  br i1 %53, label %26, label %55

55:                                               ; preds = %52
  %56 = icmp eq i8* %37, null
  br i1 %56, label %211, label %57

57:                                               ; preds = %55
  %58 = load i8, i8* %37, align 1
  %59 = zext i8 %58 to i64
  %60 = shl nuw nsw i64 %59, 24
  %61 = getelementptr inbounds i8, i8* %37, i64 1
  %62 = load i8, i8* %61, align 1
  %63 = zext i8 %62 to i64
  %64 = shl nuw nsw i64 %63, 16
  %65 = or i64 %64, %60
  %66 = getelementptr inbounds i8, i8* %37, i64 2
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i64
  %69 = shl nuw nsw i64 %68, 8
  %70 = or i64 %65, %69
  %71 = getelementptr inbounds i8, i8* %37, i64 3
  %72 = load i8, i8* %71, align 1
  %73 = zext i8 %72 to i64
  %74 = or i64 %70, %73
  %75 = getelementptr inbounds i8, i8* %37, i64 4
  %76 = load i8, i8* %75, align 1
  %77 = zext i8 %76 to i64
  %78 = shl nuw nsw i64 %77, 24
  %79 = getelementptr inbounds i8, i8* %37, i64 5
  %80 = load i8, i8* %79, align 1
  %81 = zext i8 %80 to i64
  %82 = shl nuw nsw i64 %81, 16
  %83 = or i64 %82, %78
  %84 = getelementptr inbounds i8, i8* %37, i64 6
  %85 = load i8, i8* %84, align 1
  %86 = zext i8 %85 to i64
  %87 = shl nuw nsw i64 %86, 8
  %88 = or i64 %83, %87
  %89 = getelementptr inbounds i8, i8* %37, i64 7
  %90 = load i8, i8* %89, align 1
  %91 = zext i8 %90 to i64
  %92 = or i64 %88, %91
  %93 = icmp eq i64 %74, 0
  br i1 %93, label %147, label %94

94:                                               ; preds = %57
  %95 = getelementptr inbounds i8, i8* %5, i64 %74
  %96 = load i8, i8* %95, align 1
  %97 = zext i8 %96 to i32
  %98 = shl nuw i32 %97, 24
  %99 = getelementptr inbounds i8, i8* %95, i64 1
  %100 = load i8, i8* %99, align 1
  %101 = zext i8 %100 to i32
  %102 = shl nuw nsw i32 %101, 16
  %103 = or i32 %102, %98
  %104 = getelementptr inbounds i8, i8* %95, i64 2
  %105 = load i8, i8* %104, align 1
  %106 = zext i8 %105 to i32
  %107 = shl nuw nsw i32 %106, 8
  %108 = or i32 %103, %107
  %109 = getelementptr inbounds i8, i8* %95, i64 3
  %110 = load i8, i8* %109, align 1
  %111 = zext i8 %110 to i32
  %112 = or i32 %108, %111
  %113 = getelementptr inbounds i8, i8* %95, i64 7
  %114 = zext i32 %1 to i64
  br label %115

115:                                              ; preds = %121, %94
  %116 = phi i32 [ %112, %94 ], [ %123, %121 ]
  %117 = phi i32 [ 0, %94 ], [ %119, %121 ]
  br label %118

118:                                              ; preds = %141, %115
  %119 = phi i32 [ %146, %141 ], [ %117, %115 ]
  %120 = icmp ult i32 %119, %116
  br i1 %120, label %121, label %147

121:                                              ; preds = %118
  %122 = add i32 %119, %116
  %123 = lshr i32 %122, 1
  %124 = shl i32 %123, 2
  %125 = zext i32 %124 to i64
  %126 = getelementptr inbounds i8, i8* %113, i64 %125
  %127 = getelementptr inbounds i8, i8* %126, i64 -3
  %128 = load i8, i8* %127, align 1
  %129 = zext i8 %128 to i64
  %130 = shl nuw nsw i64 %129, 16
  %131 = getelementptr inbounds i8, i8* %127, i64 1
  %132 = load i8, i8* %131, align 1
  %133 = zext i8 %132 to i64
  %134 = shl nuw nsw i64 %133, 8
  %135 = or i64 %134, %130
  %136 = getelementptr inbounds i8, i8* %127, i64 2
  %137 = load i8, i8* %136, align 1
  %138 = zext i8 %137 to i64
  %139 = or i64 %135, %138
  %140 = icmp ugt i64 %139, %114
  br i1 %140, label %115, label %141

141:                                              ; preds = %121
  %142 = load i8, i8* %126, align 1
  %143 = zext i8 %142 to i64
  %144 = add nuw nsw i64 %139, %143
  %145 = icmp ult i64 %144, %114
  %146 = add nuw i32 %123, 1
  br i1 %145, label %118, label %211

147:                                              ; preds = %118, %57
  %148 = icmp eq i64 %92, 0
  br i1 %148, label %210, label %149

149:                                              ; preds = %147
  %150 = getelementptr inbounds i8, i8* %5, i64 %92
  %151 = load i8, i8* %150, align 1
  %152 = zext i8 %151 to i32
  %153 = shl nuw i32 %152, 24
  %154 = getelementptr inbounds i8, i8* %150, i64 1
  %155 = load i8, i8* %154, align 1
  %156 = zext i8 %155 to i32
  %157 = shl nuw nsw i32 %156, 16
  %158 = or i32 %157, %153
  %159 = getelementptr inbounds i8, i8* %150, i64 2
  %160 = load i8, i8* %159, align 1
  %161 = zext i8 %160 to i32
  %162 = shl nuw nsw i32 %161, 8
  %163 = or i32 %158, %162
  %164 = getelementptr inbounds i8, i8* %150, i64 3
  %165 = load i8, i8* %164, align 1
  %166 = zext i8 %165 to i32
  %167 = or i32 %163, %166
  %168 = icmp eq i32 %167, 0
  br i1 %168, label %210, label %169

169:                                              ; preds = %149
  %170 = getelementptr inbounds i8, i8* %150, i64 7
  br label %171

171:                                              ; preds = %197, %169
  %172 = phi i32 [ 0, %169 ], [ %199, %197 ]
  %173 = phi i32 [ %167, %169 ], [ %198, %197 ]
  %174 = add i32 %173, %172
  %175 = lshr i32 %174, 1
  %176 = mul i32 %175, 5
  %177 = zext i32 %176 to i64
  %178 = getelementptr inbounds i8, i8* %170, i64 %177
  %179 = getelementptr inbounds i8, i8* %178, i64 -3
  %180 = load i8, i8* %179, align 1
  %181 = zext i8 %180 to i32
  %182 = shl nuw nsw i32 %181, 16
  %183 = getelementptr inbounds i8, i8* %179, i64 1
  %184 = load i8, i8* %183, align 1
  %185 = zext i8 %184 to i32
  %186 = shl nuw nsw i32 %185, 8
  %187 = or i32 %186, %182
  %188 = getelementptr inbounds i8, i8* %179, i64 2
  %189 = load i8, i8* %188, align 1
  %190 = zext i8 %189 to i32
  %191 = or i32 %187, %190
  %192 = icmp ugt i32 %191, %1
  br i1 %192, label %197, label %193

193:                                              ; preds = %171
  %194 = icmp ult i32 %191, %1
  br i1 %194, label %195, label %201

195:                                              ; preds = %193
  %196 = add nuw i32 %175, 1
  br label %197

197:                                              ; preds = %195, %171
  %198 = phi i32 [ %173, %195 ], [ %175, %171 ]
  %199 = phi i32 [ %196, %195 ], [ %172, %171 ]
  %200 = icmp ult i32 %199, %198
  br i1 %200, label %171, label %210

201:                                              ; preds = %193
  %202 = load i8, i8* %178, align 1
  %203 = zext i8 %202 to i32
  %204 = shl nuw nsw i32 %203, 8
  %205 = getelementptr inbounds i8, i8* %178, i64 1
  %206 = load i8, i8* %205, align 1
  %207 = zext i8 %206 to i32
  %208 = or i32 %204, %207
  %209 = icmp eq i32 %208, 0
  br i1 %209, label %210, label %211

210:                                              ; preds = %197, %149, %201, %147
  br label %211

211:                                              ; preds = %29, %141, %201, %55, %210
  %212 = phi i32 [ -1, %210 ], [ -1, %55 ], [ 0, %201 ], [ 1, %141 ], [ -1, %29 ]
  ret i32 %212
}

; Function Attrs: nounwind ssp uwtable
define internal i32* @tt_cmap14_variants(%struct.TT_CMapRec_* nocapture, %struct.FT_MemoryRec_*) #0 {
  %3 = alloca i32, align 4
  %4 = getelementptr inbounds %struct.TT_CMapRec_, %struct.TT_CMapRec_* %0, i64 1
  %5 = bitcast %struct.TT_CMapRec_* %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = trunc i64 %6 to i32
  %8 = getelementptr inbounds %struct.TT_CMapRec_, %struct.TT_CMapRec_* %0, i64 0, i32 1
  %9 = load i8*, i8** %8, align 8
  %10 = add i32 %7, 1
  %11 = getelementptr inbounds %struct.TT_CMapRec_, %struct.TT_CMapRec_* %0, i64 1, i32 0, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %13) #17
  store i32 0, i32* %3, align 4
  %14 = icmp ult i32 %12, %10
  br i1 %14, label %19, label %15

15:                                               ; preds = %2
  %16 = getelementptr inbounds %struct.TT_CMapRec_, %struct.TT_CMapRec_* %0, i64 1, i32 0, i32 1
  %17 = bitcast %struct.FT_CMap_ClassRec_** %16 to i32**
  %18 = load i32*, i32** %17, align 8
  br label %33

19:                                               ; preds = %2
  %20 = getelementptr inbounds %struct.TT_CMapRec_, %struct.TT_CMapRec_* %0, i64 1, i32 1
  %21 = bitcast i8** %20 to %struct.FT_MemoryRec_**
  store %struct.FT_MemoryRec_* %1, %struct.FT_MemoryRec_** %21, align 8
  %22 = zext i32 %12 to i64
  %23 = zext i32 %10 to i64
  %24 = getelementptr inbounds %struct.TT_CMapRec_, %struct.TT_CMapRec_* %0, i64 1, i32 0, i32 1
  %25 = bitcast %struct.FT_CMap_ClassRec_** %24 to i8**
  %26 = load i8*, i8** %25, align 8
  %27 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %1, i64 4, i64 %22, i64 %23, i8* %26, i32* nonnull %3) #17
  store i8* %27, i8** %25, align 8
  %28 = load i32, i32* %3, align 4
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %32

30:                                               ; preds = %19
  %31 = bitcast i8* %27 to i32*
  store i32 %10, i32* %11, align 8
  br label %33

32:                                               ; preds = %19
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %13) #17
  br label %102

33:                                               ; preds = %15, %30
  %34 = phi i32* [ %18, %15 ], [ %31, %30 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %13) #17
  %35 = icmp eq i32 %7, 0
  br i1 %35, label %99, label %36

36:                                               ; preds = %33
  %37 = getelementptr inbounds i8, i8* %9, i64 10
  %38 = and i64 %6, 4294967295
  %39 = and i64 %6, 1
  %40 = icmp eq i64 %38, 1
  br i1 %40, label %79, label %41

41:                                               ; preds = %36
  %42 = sub nsw i64 %38, %39
  br label %43

43:                                               ; preds = %43, %41
  %44 = phi i64 [ 0, %41 ], [ %76, %43 ]
  %45 = phi i8* [ %37, %41 ], [ %75, %43 ]
  %46 = phi i64 [ %42, %41 ], [ %77, %43 ]
  %47 = load i8, i8* %45, align 1
  %48 = zext i8 %47 to i32
  %49 = shl nuw nsw i32 %48, 16
  %50 = getelementptr inbounds i8, i8* %45, i64 1
  %51 = load i8, i8* %50, align 1
  %52 = zext i8 %51 to i32
  %53 = shl nuw nsw i32 %52, 8
  %54 = or i32 %53, %49
  %55 = getelementptr inbounds i8, i8* %45, i64 2
  %56 = load i8, i8* %55, align 1
  %57 = zext i8 %56 to i32
  %58 = or i32 %54, %57
  %59 = getelementptr inbounds i32, i32* %34, i64 %44
  store i32 %58, i32* %59, align 4
  %60 = getelementptr inbounds i8, i8* %45, i64 11
  %61 = or i64 %44, 1
  %62 = load i8, i8* %60, align 1
  %63 = zext i8 %62 to i32
  %64 = shl nuw nsw i32 %63, 16
  %65 = getelementptr inbounds i8, i8* %45, i64 12
  %66 = load i8, i8* %65, align 1
  %67 = zext i8 %66 to i32
  %68 = shl nuw nsw i32 %67, 8
  %69 = or i32 %68, %64
  %70 = getelementptr inbounds i8, i8* %45, i64 13
  %71 = load i8, i8* %70, align 1
  %72 = zext i8 %71 to i32
  %73 = or i32 %69, %72
  %74 = getelementptr inbounds i32, i32* %34, i64 %61
  store i32 %73, i32* %74, align 4
  %75 = getelementptr inbounds i8, i8* %45, i64 22
  %76 = add nuw nsw i64 %44, 2
  %77 = add i64 %46, -2
  %78 = icmp eq i64 %77, 0
  br i1 %78, label %79, label %43

79:                                               ; preds = %43, %36
  %80 = phi i64 [ 0, %36 ], [ %76, %43 ]
  %81 = phi i8* [ %37, %36 ], [ %75, %43 ]
  %82 = icmp eq i64 %39, 0
  br i1 %82, label %97, label %83

83:                                               ; preds = %79
  %84 = load i8, i8* %81, align 1
  %85 = zext i8 %84 to i32
  %86 = shl nuw nsw i32 %85, 16
  %87 = getelementptr inbounds i8, i8* %81, i64 1
  %88 = load i8, i8* %87, align 1
  %89 = zext i8 %88 to i32
  %90 = shl nuw nsw i32 %89, 8
  %91 = or i32 %90, %86
  %92 = getelementptr inbounds i8, i8* %81, i64 2
  %93 = load i8, i8* %92, align 1
  %94 = zext i8 %93 to i32
  %95 = or i32 %91, %94
  %96 = getelementptr inbounds i32, i32* %34, i64 %80
  store i32 %95, i32* %96, align 4
  br label %97

97:                                               ; preds = %79, %83
  %98 = and i64 %6, 4294967295
  br label %99

99:                                               ; preds = %33, %97
  %100 = phi i64 [ %98, %97 ], [ 0, %33 ]
  %101 = getelementptr inbounds i32, i32* %34, i64 %100
  store i32 0, i32* %101, align 4
  br label %102

102:                                              ; preds = %32, %99
  %103 = phi i32* [ %34, %99 ], [ null, %32 ]
  ret i32* %103
}

; Function Attrs: nounwind ssp uwtable
define internal i32* @tt_cmap14_char_variants(%struct.TT_CMapRec_* nocapture, %struct.FT_MemoryRec_*, i32) #0 {
  %4 = alloca i32, align 4
  %5 = getelementptr inbounds %struct.TT_CMapRec_, %struct.TT_CMapRec_* %0, i64 1
  %6 = bitcast %struct.TT_CMapRec_* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = trunc i64 %7 to i32
  %9 = getelementptr inbounds %struct.TT_CMapRec_, %struct.TT_CMapRec_* %0, i64 0, i32 1
  %10 = load i8*, i8** %9, align 8
  %11 = add i32 %8, 1
  %12 = getelementptr inbounds %struct.TT_CMapRec_, %struct.TT_CMapRec_* %0, i64 1, i32 0, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %14) #17
  store i32 0, i32* %4, align 4
  %15 = icmp ult i32 %13, %11
  br i1 %15, label %20, label %16

16:                                               ; preds = %3
  %17 = getelementptr inbounds %struct.TT_CMapRec_, %struct.TT_CMapRec_* %0, i64 1, i32 0, i32 1
  %18 = bitcast %struct.FT_CMap_ClassRec_** %17 to i32**
  %19 = load i32*, i32** %18, align 8
  br label %35

20:                                               ; preds = %3
  %21 = getelementptr inbounds %struct.TT_CMapRec_, %struct.TT_CMapRec_* %0, i64 1, i32 1
  %22 = bitcast i8** %21 to %struct.FT_MemoryRec_**
  store %struct.FT_MemoryRec_* %1, %struct.FT_MemoryRec_** %22, align 8
  %23 = zext i32 %13 to i64
  %24 = zext i32 %11 to i64
  %25 = getelementptr inbounds %struct.TT_CMapRec_, %struct.TT_CMapRec_* %0, i64 1, i32 0, i32 1
  %26 = bitcast %struct.FT_CMap_ClassRec_** %25 to i8**
  %27 = load i8*, i8** %26, align 8
  %28 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %1, i64 4, i64 %23, i64 %24, i8* %27, i32* nonnull %4) #17
  store i8* %28, i8** %26, align 8
  %29 = load i32, i32* %4, align 4
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %34

31:                                               ; preds = %20
  %32 = bitcast i8* %28 to i32*
  store i32 %11, i32* %12, align 8
  %33 = bitcast %struct.FT_CMap_ClassRec_** %25 to i32**
  br label %35

34:                                               ; preds = %20
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %14) #17
  br label %222

35:                                               ; preds = %16, %31
  %36 = phi i32** [ %18, %16 ], [ %33, %31 ]
  %37 = phi i32* [ %19, %16 ], [ %32, %31 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %14) #17
  %38 = icmp eq i32 %8, 0
  br i1 %38, label %219, label %39

39:                                               ; preds = %35
  %40 = getelementptr inbounds i8, i8* %10, i64 10
  %41 = zext i32 %2 to i64
  br label %42

42:                                               ; preds = %39, %215
  %43 = phi i32* [ %37, %39 ], [ %216, %215 ]
  %44 = phi i8* [ %40, %39 ], [ %76, %215 ]
  %45 = phi i32 [ %8, %39 ], [ %217, %215 ]
  %46 = load i8, i8* %44, align 1
  %47 = zext i8 %46 to i32
  %48 = shl nuw nsw i32 %47, 16
  %49 = getelementptr inbounds i8, i8* %44, i64 1
  %50 = load i8, i8* %49, align 1
  %51 = zext i8 %50 to i32
  %52 = shl nuw nsw i32 %51, 8
  %53 = or i32 %52, %48
  %54 = getelementptr inbounds i8, i8* %44, i64 2
  %55 = load i8, i8* %54, align 1
  %56 = zext i8 %55 to i32
  %57 = or i32 %53, %56
  %58 = getelementptr inbounds i8, i8* %44, i64 3
  %59 = load i8, i8* %58, align 1
  %60 = zext i8 %59 to i64
  %61 = shl nuw nsw i64 %60, 24
  %62 = getelementptr inbounds i8, i8* %44, i64 4
  %63 = load i8, i8* %62, align 1
  %64 = zext i8 %63 to i64
  %65 = shl nuw nsw i64 %64, 16
  %66 = or i64 %65, %61
  %67 = getelementptr inbounds i8, i8* %44, i64 5
  %68 = load i8, i8* %67, align 1
  %69 = zext i8 %68 to i64
  %70 = shl nuw nsw i64 %69, 8
  %71 = or i64 %66, %70
  %72 = getelementptr inbounds i8, i8* %44, i64 6
  %73 = load i8, i8* %72, align 1
  %74 = zext i8 %73 to i64
  %75 = or i64 %71, %74
  %76 = getelementptr inbounds i8, i8* %44, i64 11
  %77 = getelementptr inbounds i8, i8* %44, i64 7
  %78 = load i8, i8* %77, align 1
  %79 = zext i8 %78 to i64
  %80 = shl nuw nsw i64 %79, 24
  %81 = getelementptr inbounds i8, i8* %44, i64 8
  %82 = load i8, i8* %81, align 1
  %83 = zext i8 %82 to i64
  %84 = shl nuw nsw i64 %83, 16
  %85 = or i64 %84, %80
  %86 = getelementptr inbounds i8, i8* %44, i64 9
  %87 = load i8, i8* %86, align 1
  %88 = zext i8 %87 to i64
  %89 = shl nuw nsw i64 %88, 8
  %90 = or i64 %85, %89
  %91 = getelementptr inbounds i8, i8* %44, i64 10
  %92 = load i8, i8* %91, align 1
  %93 = zext i8 %92 to i64
  %94 = or i64 %90, %93
  %95 = icmp eq i64 %75, 0
  br i1 %95, label %149, label %96

96:                                               ; preds = %42
  %97 = load i8*, i8** %9, align 8
  %98 = getelementptr inbounds i8, i8* %97, i64 %75
  %99 = load i8, i8* %98, align 1
  %100 = zext i8 %99 to i32
  %101 = shl nuw i32 %100, 24
  %102 = getelementptr inbounds i8, i8* %98, i64 1
  %103 = load i8, i8* %102, align 1
  %104 = zext i8 %103 to i32
  %105 = shl nuw nsw i32 %104, 16
  %106 = or i32 %105, %101
  %107 = getelementptr inbounds i8, i8* %98, i64 2
  %108 = load i8, i8* %107, align 1
  %109 = zext i8 %108 to i32
  %110 = shl nuw nsw i32 %109, 8
  %111 = or i32 %106, %110
  %112 = getelementptr inbounds i8, i8* %98, i64 3
  %113 = load i8, i8* %112, align 1
  %114 = zext i8 %113 to i32
  %115 = or i32 %111, %114
  %116 = getelementptr inbounds i8, i8* %98, i64 7
  br label %117

117:                                              ; preds = %123, %96
  %118 = phi i32 [ %115, %96 ], [ %125, %123 ]
  %119 = phi i32 [ 0, %96 ], [ %121, %123 ]
  br label %120

120:                                              ; preds = %143, %117
  %121 = phi i32 [ %148, %143 ], [ %119, %117 ]
  %122 = icmp ult i32 %121, %118
  br i1 %122, label %123, label %149

123:                                              ; preds = %120
  %124 = add i32 %121, %118
  %125 = lshr i32 %124, 1
  %126 = shl i32 %125, 2
  %127 = zext i32 %126 to i64
  %128 = getelementptr inbounds i8, i8* %116, i64 %127
  %129 = getelementptr inbounds i8, i8* %128, i64 -3
  %130 = load i8, i8* %129, align 1
  %131 = zext i8 %130 to i64
  %132 = shl nuw nsw i64 %131, 16
  %133 = getelementptr inbounds i8, i8* %129, i64 1
  %134 = load i8, i8* %133, align 1
  %135 = zext i8 %134 to i64
  %136 = shl nuw nsw i64 %135, 8
  %137 = or i64 %136, %132
  %138 = getelementptr inbounds i8, i8* %129, i64 2
  %139 = load i8, i8* %138, align 1
  %140 = zext i8 %139 to i64
  %141 = or i64 %137, %140
  %142 = icmp ugt i64 %141, %41
  br i1 %142, label %117, label %143

143:                                              ; preds = %123
  %144 = load i8, i8* %128, align 1
  %145 = zext i8 %144 to i64
  %146 = add nuw nsw i64 %141, %145
  %147 = icmp ult i64 %146, %41
  %148 = add nuw i32 %125, 1
  br i1 %147, label %120, label %213

149:                                              ; preds = %120, %42
  %150 = icmp eq i64 %94, 0
  br i1 %150, label %215, label %151

151:                                              ; preds = %149
  %152 = load i8*, i8** %9, align 8
  %153 = getelementptr inbounds i8, i8* %152, i64 %94
  %154 = load i8, i8* %153, align 1
  %155 = zext i8 %154 to i32
  %156 = shl nuw i32 %155, 24
  %157 = getelementptr inbounds i8, i8* %153, i64 1
  %158 = load i8, i8* %157, align 1
  %159 = zext i8 %158 to i32
  %160 = shl nuw nsw i32 %159, 16
  %161 = or i32 %160, %156
  %162 = getelementptr inbounds i8, i8* %153, i64 2
  %163 = load i8, i8* %162, align 1
  %164 = zext i8 %163 to i32
  %165 = shl nuw nsw i32 %164, 8
  %166 = or i32 %161, %165
  %167 = getelementptr inbounds i8, i8* %153, i64 3
  %168 = load i8, i8* %167, align 1
  %169 = zext i8 %168 to i32
  %170 = or i32 %166, %169
  %171 = icmp eq i32 %170, 0
  br i1 %171, label %215, label %172

172:                                              ; preds = %151
  %173 = getelementptr inbounds i8, i8* %153, i64 7
  br label %174

174:                                              ; preds = %200, %172
  %175 = phi i32 [ 0, %172 ], [ %202, %200 ]
  %176 = phi i32 [ %170, %172 ], [ %201, %200 ]
  %177 = add i32 %176, %175
  %178 = lshr i32 %177, 1
  %179 = mul i32 %178, 5
  %180 = zext i32 %179 to i64
  %181 = getelementptr inbounds i8, i8* %173, i64 %180
  %182 = getelementptr inbounds i8, i8* %181, i64 -3
  %183 = load i8, i8* %182, align 1
  %184 = zext i8 %183 to i32
  %185 = shl nuw nsw i32 %184, 16
  %186 = getelementptr inbounds i8, i8* %182, i64 1
  %187 = load i8, i8* %186, align 1
  %188 = zext i8 %187 to i32
  %189 = shl nuw nsw i32 %188, 8
  %190 = or i32 %189, %185
  %191 = getelementptr inbounds i8, i8* %182, i64 2
  %192 = load i8, i8* %191, align 1
  %193 = zext i8 %192 to i32
  %194 = or i32 %190, %193
  %195 = icmp ugt i32 %194, %2
  br i1 %195, label %200, label %196

196:                                              ; preds = %174
  %197 = icmp ult i32 %194, %2
  br i1 %197, label %198, label %204

198:                                              ; preds = %196
  %199 = add nuw i32 %178, 1
  br label %200

200:                                              ; preds = %198, %174
  %201 = phi i32 [ %176, %198 ], [ %178, %174 ]
  %202 = phi i32 [ %199, %198 ], [ %175, %174 ]
  %203 = icmp ult i32 %202, %201
  br i1 %203, label %174, label %215

204:                                              ; preds = %196
  %205 = load i8, i8* %181, align 1
  %206 = zext i8 %205 to i32
  %207 = shl nuw nsw i32 %206, 8
  %208 = getelementptr inbounds i8, i8* %181, i64 1
  %209 = load i8, i8* %208, align 1
  %210 = zext i8 %209 to i32
  %211 = or i32 %207, %210
  %212 = icmp eq i32 %211, 0
  br i1 %212, label %215, label %213

213:                                              ; preds = %143, %204
  store i32 %57, i32* %43, align 4
  %214 = getelementptr inbounds i32, i32* %43, i64 1
  br label %215

215:                                              ; preds = %200, %151, %204, %149, %213
  %216 = phi i32* [ %214, %213 ], [ %43, %204 ], [ %43, %149 ], [ %43, %151 ], [ %43, %200 ]
  %217 = add i32 %45, -1
  %218 = icmp eq i32 %217, 0
  br i1 %218, label %219, label %42

219:                                              ; preds = %215, %35
  %220 = phi i32* [ %37, %35 ], [ %216, %215 ]
  store i32 0, i32* %220, align 4
  %221 = load i32*, i32** %36, align 8
  br label %222

222:                                              ; preds = %34, %219
  %223 = phi i32* [ %221, %219 ], [ null, %34 ]
  ret i32* %223
}

; Function Attrs: nounwind ssp uwtable
define internal i32* @tt_cmap14_variant_chars(%struct.TT_CMapRec_* nocapture, %struct.FT_MemoryRec_*, i32) #0 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = getelementptr inbounds %struct.TT_CMapRec_, %struct.TT_CMapRec_* %0, i64 0, i32 1
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds i8, i8* %10, i64 6
  %12 = load i8, i8* %11, align 1
  %13 = zext i8 %12 to i32
  %14 = shl nuw i32 %13, 24
  %15 = getelementptr inbounds i8, i8* %10, i64 7
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i32
  %18 = shl nuw nsw i32 %17, 16
  %19 = or i32 %18, %14
  %20 = getelementptr inbounds i8, i8* %10, i64 8
  %21 = load i8, i8* %20, align 1
  %22 = zext i8 %21 to i32
  %23 = shl nuw nsw i32 %22, 8
  %24 = or i32 %19, %23
  %25 = getelementptr inbounds i8, i8* %10, i64 9
  %26 = load i8, i8* %25, align 1
  %27 = zext i8 %26 to i32
  %28 = or i32 %24, %27
  %29 = getelementptr inbounds i8, i8* %10, i64 13
  %30 = zext i32 %2 to i64
  br label %31

31:                                               ; preds = %57, %3
  %32 = phi i32 [ %35, %57 ], [ %28, %3 ]
  %33 = phi i32 [ %59, %57 ], [ 0, %3 ]
  br label %34

34:                                               ; preds = %37, %31
  %35 = phi i32 [ %39, %37 ], [ %32, %31 ]
  %36 = icmp ult i32 %33, %35
  br i1 %36, label %37, label %1160

37:                                               ; preds = %34
  %38 = add i32 %35, %33
  %39 = lshr i32 %38, 1
  %40 = mul i32 %39, 11
  %41 = zext i32 %40 to i64
  %42 = getelementptr inbounds i8, i8* %29, i64 %41
  %43 = getelementptr inbounds i8, i8* %42, i64 -3
  %44 = load i8, i8* %43, align 1
  %45 = zext i8 %44 to i64
  %46 = shl nuw nsw i64 %45, 16
  %47 = getelementptr inbounds i8, i8* %43, i64 1
  %48 = load i8, i8* %47, align 1
  %49 = zext i8 %48 to i64
  %50 = shl nuw nsw i64 %49, 8
  %51 = or i64 %50, %46
  %52 = getelementptr inbounds i8, i8* %43, i64 2
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i64
  %55 = or i64 %51, %54
  %56 = icmp ugt i64 %55, %30
  br i1 %56, label %34, label %57

57:                                               ; preds = %37
  %58 = icmp ult i64 %55, %30
  %59 = add nuw i32 %39, 1
  br i1 %58, label %31, label %60

60:                                               ; preds = %57
  %61 = icmp eq i8* %42, null
  br i1 %61, label %1160, label %62

62:                                               ; preds = %60
  %63 = load i8, i8* %42, align 1
  %64 = zext i8 %63 to i64
  %65 = shl nuw nsw i64 %64, 24
  %66 = getelementptr inbounds i8, i8* %42, i64 1
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i64
  %69 = shl nuw nsw i64 %68, 16
  %70 = or i64 %69, %65
  %71 = getelementptr inbounds i8, i8* %42, i64 2
  %72 = load i8, i8* %71, align 1
  %73 = zext i8 %72 to i64
  %74 = shl nuw nsw i64 %73, 8
  %75 = or i64 %70, %74
  %76 = getelementptr inbounds i8, i8* %42, i64 3
  %77 = load i8, i8* %76, align 1
  %78 = zext i8 %77 to i64
  %79 = or i64 %75, %78
  %80 = getelementptr inbounds i8, i8* %42, i64 4
  %81 = load i8, i8* %80, align 1
  %82 = zext i8 %81 to i64
  %83 = shl nuw nsw i64 %82, 24
  %84 = getelementptr inbounds i8, i8* %42, i64 5
  %85 = load i8, i8* %84, align 1
  %86 = zext i8 %85 to i64
  %87 = shl nuw nsw i64 %86, 16
  %88 = or i64 %87, %83
  %89 = getelementptr inbounds i8, i8* %42, i64 6
  %90 = load i8, i8* %89, align 1
  %91 = zext i8 %90 to i64
  %92 = shl nuw nsw i64 %91, 8
  %93 = or i64 %88, %92
  %94 = getelementptr inbounds i8, i8* %42, i64 7
  %95 = load i8, i8* %94, align 1
  %96 = zext i8 %95 to i64
  %97 = or i64 %93, %96
  %98 = icmp eq i64 %97, 0
  %99 = or i64 %97, %79
  %100 = icmp eq i64 %99, 0
  br i1 %100, label %1160, label %101

101:                                              ; preds = %62
  %102 = icmp eq i64 %79, 0
  br i1 %102, label %103, label %212

103:                                              ; preds = %101
  %104 = getelementptr inbounds i8, i8* %10, i64 %97
  %105 = load i8, i8* %104, align 1
  %106 = zext i8 %105 to i32
  %107 = shl nuw i32 %106, 24
  %108 = getelementptr inbounds i8, i8* %104, i64 1
  %109 = load i8, i8* %108, align 1
  %110 = zext i8 %109 to i32
  %111 = shl nuw nsw i32 %110, 16
  %112 = or i32 %111, %107
  %113 = getelementptr inbounds i8, i8* %104, i64 2
  %114 = load i8, i8* %113, align 1
  %115 = zext i8 %114 to i32
  %116 = shl nuw nsw i32 %115, 8
  %117 = or i32 %112, %116
  %118 = getelementptr inbounds i8, i8* %104, i64 3
  %119 = load i8, i8* %118, align 1
  %120 = zext i8 %119 to i32
  %121 = or i32 %117, %120
  %122 = add i32 %121, 1
  %123 = getelementptr inbounds %struct.TT_CMapRec_, %struct.TT_CMapRec_* %0, i64 1, i32 0, i32 0, i32 1
  %124 = load i32, i32* %123, align 8
  %125 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %125) #17
  store i32 0, i32* %7, align 4
  %126 = icmp ult i32 %124, %122
  br i1 %126, label %131, label %127

127:                                              ; preds = %103
  %128 = getelementptr inbounds %struct.TT_CMapRec_, %struct.TT_CMapRec_* %0, i64 1, i32 0, i32 1
  %129 = bitcast %struct.FT_CMap_ClassRec_** %128 to i32**
  %130 = load i32*, i32** %129, align 8
  br label %145

131:                                              ; preds = %103
  %132 = getelementptr inbounds %struct.TT_CMapRec_, %struct.TT_CMapRec_* %0, i64 1, i32 1
  %133 = bitcast i8** %132 to %struct.FT_MemoryRec_**
  store %struct.FT_MemoryRec_* %1, %struct.FT_MemoryRec_** %133, align 8
  %134 = zext i32 %124 to i64
  %135 = zext i32 %122 to i64
  %136 = getelementptr inbounds %struct.TT_CMapRec_, %struct.TT_CMapRec_* %0, i64 1, i32 0, i32 1
  %137 = bitcast %struct.FT_CMap_ClassRec_** %136 to i8**
  %138 = load i8*, i8** %137, align 8
  %139 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %1, i64 4, i64 %134, i64 %135, i8* %138, i32* nonnull %7) #17
  store i8* %139, i8** %137, align 8
  %140 = load i32, i32* %7, align 4
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %142, label %144

142:                                              ; preds = %131
  %143 = bitcast i8* %139 to i32*
  store i32 %122, i32* %123, align 8
  br label %145

144:                                              ; preds = %131
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %125) #17
  br label %1160

145:                                              ; preds = %142, %127
  %146 = phi i32* [ %130, %127 ], [ %143, %142 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %125) #17
  %147 = icmp eq i32 %121, 0
  br i1 %147, label %209, label %148

148:                                              ; preds = %145
  %149 = getelementptr inbounds i8, i8* %104, i64 4
  %150 = zext i32 %121 to i64
  %151 = and i64 %150, 1
  %152 = icmp eq i32 %121, 1
  br i1 %152, label %191, label %153

153:                                              ; preds = %148
  %154 = sub nsw i64 %150, %151
  br label %155

155:                                              ; preds = %155, %153
  %156 = phi i64 [ 0, %153 ], [ %188, %155 ]
  %157 = phi i8* [ %149, %153 ], [ %187, %155 ]
  %158 = phi i64 [ %154, %153 ], [ %189, %155 ]
  %159 = load i8, i8* %157, align 1
  %160 = zext i8 %159 to i32
  %161 = shl nuw nsw i32 %160, 16
  %162 = getelementptr inbounds i8, i8* %157, i64 1
  %163 = load i8, i8* %162, align 1
  %164 = zext i8 %163 to i32
  %165 = shl nuw nsw i32 %164, 8
  %166 = or i32 %165, %161
  %167 = getelementptr inbounds i8, i8* %157, i64 2
  %168 = load i8, i8* %167, align 1
  %169 = zext i8 %168 to i32
  %170 = or i32 %166, %169
  %171 = getelementptr inbounds i32, i32* %146, i64 %156
  store i32 %170, i32* %171, align 4
  %172 = getelementptr inbounds i8, i8* %157, i64 5
  %173 = or i64 %156, 1
  %174 = load i8, i8* %172, align 1
  %175 = zext i8 %174 to i32
  %176 = shl nuw nsw i32 %175, 16
  %177 = getelementptr inbounds i8, i8* %157, i64 6
  %178 = load i8, i8* %177, align 1
  %179 = zext i8 %178 to i32
  %180 = shl nuw nsw i32 %179, 8
  %181 = or i32 %180, %176
  %182 = getelementptr inbounds i8, i8* %157, i64 7
  %183 = load i8, i8* %182, align 1
  %184 = zext i8 %183 to i32
  %185 = or i32 %181, %184
  %186 = getelementptr inbounds i32, i32* %146, i64 %173
  store i32 %185, i32* %186, align 4
  %187 = getelementptr inbounds i8, i8* %157, i64 10
  %188 = add nuw nsw i64 %156, 2
  %189 = add i64 %158, -2
  %190 = icmp eq i64 %189, 0
  br i1 %190, label %191, label %155

191:                                              ; preds = %155, %148
  %192 = phi i64 [ 0, %148 ], [ %188, %155 ]
  %193 = phi i8* [ %149, %148 ], [ %187, %155 ]
  %194 = icmp eq i64 %151, 0
  br i1 %194, label %209, label %195

195:                                              ; preds = %191
  %196 = load i8, i8* %193, align 1
  %197 = zext i8 %196 to i32
  %198 = shl nuw nsw i32 %197, 16
  %199 = getelementptr inbounds i8, i8* %193, i64 1
  %200 = load i8, i8* %199, align 1
  %201 = zext i8 %200 to i32
  %202 = shl nuw nsw i32 %201, 8
  %203 = or i32 %202, %198
  %204 = getelementptr inbounds i8, i8* %193, i64 2
  %205 = load i8, i8* %204, align 1
  %206 = zext i8 %205 to i32
  %207 = or i32 %203, %206
  %208 = getelementptr inbounds i32, i32* %146, i64 %192
  store i32 %207, i32* %208, align 4
  br label %209

209:                                              ; preds = %195, %191, %145
  %210 = phi i64 [ 0, %145 ], [ %150, %191 ], [ %150, %195 ]
  %211 = getelementptr inbounds i32, i32* %146, i64 %210
  store i32 0, i32* %211, align 4
  br label %1160

212:                                              ; preds = %101
  br i1 %98, label %213, label %436

213:                                              ; preds = %212
  %214 = getelementptr inbounds i8, i8* %10, i64 %79
  %215 = load i8, i8* %214, align 1
  %216 = zext i8 %215 to i32
  %217 = shl nuw i32 %216, 24
  %218 = getelementptr inbounds i8, i8* %214, i64 1
  %219 = load i8, i8* %218, align 1
  %220 = zext i8 %219 to i32
  %221 = shl nuw nsw i32 %220, 16
  %222 = or i32 %221, %217
  %223 = getelementptr inbounds i8, i8* %214, i64 2
  %224 = load i8, i8* %223, align 1
  %225 = zext i8 %224 to i32
  %226 = shl nuw nsw i32 %225, 8
  %227 = or i32 %222, %226
  %228 = getelementptr inbounds i8, i8* %214, i64 3
  %229 = load i8, i8* %228, align 1
  %230 = zext i8 %229 to i32
  %231 = or i32 %227, %230
  %232 = icmp eq i32 %231, 0
  br i1 %232, label %295, label %233

233:                                              ; preds = %213
  %234 = getelementptr inbounds i8, i8* %214, i64 7
  %235 = add i32 %231, -1
  %236 = zext i32 %235 to i64
  %237 = add nuw nsw i64 %236, 1
  %238 = icmp ult i64 %237, 9
  br i1 %238, label %278, label %239

239:                                              ; preds = %233
  %240 = and i64 %237, 7
  %241 = icmp eq i64 %240, 0
  %242 = select i1 %241, i64 8, i64 %240
  %243 = sub nsw i64 %237, %242
  %244 = trunc i64 %243 to i32
  %245 = sub i32 %231, %244
  %246 = shl nsw i64 %243, 2
  %247 = getelementptr i8, i8* %234, i64 %246
  br label %248

248:                                              ; preds = %248, %239
  %249 = phi i64 [ 0, %239 ], [ %269, %248 ]
  %250 = phi <4 x i32> [ zeroinitializer, %239 ], [ %267, %248 ]
  %251 = phi <4 x i32> [ zeroinitializer, %239 ], [ %268, %248 ]
  %252 = shl i64 %249, 2
  %253 = getelementptr i8, i8* %234, i64 %252
  %254 = shl i64 %249, 2
  %255 = or i64 %254, 16
  %256 = getelementptr i8, i8* %234, i64 %255
  %257 = bitcast i8* %253 to <16 x i8>*
  %258 = bitcast i8* %256 to <16 x i8>*
  %259 = load <16 x i8>, <16 x i8>* %257, align 1
  %260 = load <16 x i8>, <16 x i8>* %258, align 1
  %261 = shufflevector <16 x i8> %259, <16 x i8> undef, <4 x i32> <i32 0, i32 4, i32 8, i32 12>
  %262 = shufflevector <16 x i8> %260, <16 x i8> undef, <4 x i32> <i32 0, i32 4, i32 8, i32 12>
  %263 = zext <4 x i8> %261 to <4 x i32>
  %264 = zext <4 x i8> %262 to <4 x i32>
  %265 = add <4 x i32> %250, <i32 1, i32 1, i32 1, i32 1>
  %266 = add <4 x i32> %251, <i32 1, i32 1, i32 1, i32 1>
  %267 = add <4 x i32> %265, %263
  %268 = add <4 x i32> %266, %264
  %269 = add i64 %249, 8
  %270 = icmp eq i64 %269, %243
  br i1 %270, label %271, label %248, !llvm.loop !2

271:                                              ; preds = %248
  %272 = add <4 x i32> %268, %267
  %273 = shufflevector <4 x i32> %272, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %274 = add <4 x i32> %272, %273
  %275 = shufflevector <4 x i32> %274, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %276 = add <4 x i32> %274, %275
  %277 = extractelement <4 x i32> %276, i32 0
  br label %278

278:                                              ; preds = %271, %233
  %279 = phi i32 [ 0, %233 ], [ %277, %271 ]
  %280 = phi i32 [ %231, %233 ], [ %245, %271 ]
  %281 = phi i8* [ %234, %233 ], [ %247, %271 ]
  br label %282

282:                                              ; preds = %278, %282
  %283 = phi i32 [ %289, %282 ], [ %279, %278 ]
  %284 = phi i32 [ %291, %282 ], [ %280, %278 ]
  %285 = phi i8* [ %290, %282 ], [ %281, %278 ]
  %286 = load i8, i8* %285, align 1
  %287 = zext i8 %286 to i32
  %288 = add i32 %283, 1
  %289 = add i32 %288, %287
  %290 = getelementptr inbounds i8, i8* %285, i64 4
  %291 = add i32 %284, -1
  %292 = icmp eq i32 %291, 0
  br i1 %292, label %293, label %282, !llvm.loop !4

293:                                              ; preds = %282
  %294 = add i32 %289, 1
  br label %295

295:                                              ; preds = %293, %213
  %296 = phi i32 [ 1, %213 ], [ %294, %293 ]
  %297 = getelementptr inbounds %struct.TT_CMapRec_, %struct.TT_CMapRec_* %0, i64 1, i32 0, i32 0, i32 1
  %298 = load i32, i32* %297, align 8
  %299 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %299) #17
  store i32 0, i32* %6, align 4
  %300 = icmp ult i32 %298, %296
  br i1 %300, label %305, label %301

301:                                              ; preds = %295
  %302 = getelementptr inbounds %struct.TT_CMapRec_, %struct.TT_CMapRec_* %0, i64 1, i32 0, i32 1
  %303 = bitcast %struct.FT_CMap_ClassRec_** %302 to i32**
  %304 = load i32*, i32** %303, align 8
  br label %320

305:                                              ; preds = %295
  %306 = getelementptr inbounds %struct.TT_CMapRec_, %struct.TT_CMapRec_* %0, i64 1, i32 1
  %307 = bitcast i8** %306 to %struct.FT_MemoryRec_**
  store %struct.FT_MemoryRec_* %1, %struct.FT_MemoryRec_** %307, align 8
  %308 = zext i32 %298 to i64
  %309 = zext i32 %296 to i64
  %310 = getelementptr inbounds %struct.TT_CMapRec_, %struct.TT_CMapRec_* %0, i64 1, i32 0, i32 1
  %311 = bitcast %struct.FT_CMap_ClassRec_** %310 to i8**
  %312 = load i8*, i8** %311, align 8
  %313 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %1, i64 4, i64 %308, i64 %309, i8* %312, i32* nonnull %6) #17
  store i8* %313, i8** %311, align 8
  %314 = load i32, i32* %6, align 4
  %315 = icmp eq i32 %314, 0
  br i1 %315, label %316, label %319

316:                                              ; preds = %305
  %317 = bitcast i8* %313 to i32*
  store i32 %296, i32* %297, align 8
  %318 = bitcast %struct.FT_CMap_ClassRec_** %310 to i32**
  br label %320

319:                                              ; preds = %305
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %299) #17
  br label %1160

320:                                              ; preds = %301, %316
  %321 = phi i32** [ %303, %301 ], [ %318, %316 ]
  %322 = phi i32* [ %304, %301 ], [ %317, %316 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %299) #17
  br i1 %232, label %433, label %323

323:                                              ; preds = %320, %429
  %324 = phi i8* [ %327, %429 ], [ %214, %320 ]
  %325 = phi i32* [ %430, %429 ], [ %322, %320 ]
  %326 = phi i32 [ %431, %429 ], [ %231, %320 ]
  %327 = getelementptr inbounds i8, i8* %324, i64 4
  %328 = getelementptr inbounds i8, i8* %324, i64 7
  %329 = load i8, i8* %327, align 1
  %330 = zext i8 %329 to i32
  %331 = shl nuw nsw i32 %330, 16
  %332 = getelementptr inbounds i8, i8* %324, i64 5
  %333 = load i8, i8* %332, align 1
  %334 = zext i8 %333 to i32
  %335 = shl nuw nsw i32 %334, 8
  %336 = or i32 %335, %331
  %337 = getelementptr inbounds i8, i8* %324, i64 6
  %338 = load i8, i8* %337, align 1
  %339 = zext i8 %338 to i32
  %340 = or i32 %336, %339
  %341 = load i8, i8* %328, align 1
  %342 = zext i8 %341 to i32
  %343 = add nuw nsw i32 %342, 1
  %344 = zext i8 %341 to i64
  %345 = add nuw nsw i64 %344, 1
  %346 = icmp ult i64 %345, 8
  br i1 %346, label %417, label %347

347:                                              ; preds = %323
  %348 = and i64 %345, 504
  %349 = trunc i64 %348 to i32
  %350 = sub nsw i32 %343, %349
  %351 = getelementptr i32, i32* %325, i64 %348
  %352 = trunc i64 %348 to i32
  %353 = add nuw nsw i32 %340, %352
  %354 = insertelement <4 x i32> undef, i32 %340, i32 0
  %355 = shufflevector <4 x i32> %354, <4 x i32> undef, <4 x i32> zeroinitializer
  %356 = add <4 x i32> %355, <i32 0, i32 1, i32 2, i32 3>
  %357 = add nsw i64 %348, -8
  %358 = lshr exact i64 %357, 3
  %359 = add nuw nsw i64 %358, 1
  %360 = and i64 %359, 3
  %361 = icmp ult i64 %357, 24
  br i1 %361, label %398, label %362

362:                                              ; preds = %347
  %363 = sub nsw i64 %359, %360
  br label %364

364:                                              ; preds = %364, %362
  %365 = phi i64 [ 0, %362 ], [ %394, %364 ]
  %366 = phi <4 x i32> [ %356, %362 ], [ %395, %364 ]
  %367 = phi i64 [ %363, %362 ], [ %396, %364 ]
  %368 = getelementptr i32, i32* %325, i64 %365
  %369 = add <4 x i32> %366, <i32 4, i32 4, i32 4, i32 4>
  %370 = bitcast i32* %368 to <4 x i32>*
  store <4 x i32> %366, <4 x i32>* %370, align 4
  %371 = getelementptr i32, i32* %368, i64 4
  %372 = bitcast i32* %371 to <4 x i32>*
  store <4 x i32> %369, <4 x i32>* %372, align 4
  %373 = or i64 %365, 8
  %374 = add <4 x i32> %366, <i32 8, i32 8, i32 8, i32 8>
  %375 = getelementptr i32, i32* %325, i64 %373
  %376 = add <4 x i32> %366, <i32 12, i32 12, i32 12, i32 12>
  %377 = bitcast i32* %375 to <4 x i32>*
  store <4 x i32> %374, <4 x i32>* %377, align 4
  %378 = getelementptr i32, i32* %375, i64 4
  %379 = bitcast i32* %378 to <4 x i32>*
  store <4 x i32> %376, <4 x i32>* %379, align 4
  %380 = or i64 %365, 16
  %381 = add <4 x i32> %366, <i32 16, i32 16, i32 16, i32 16>
  %382 = getelementptr i32, i32* %325, i64 %380
  %383 = add <4 x i32> %366, <i32 20, i32 20, i32 20, i32 20>
  %384 = bitcast i32* %382 to <4 x i32>*
  store <4 x i32> %381, <4 x i32>* %384, align 4
  %385 = getelementptr i32, i32* %382, i64 4
  %386 = bitcast i32* %385 to <4 x i32>*
  store <4 x i32> %383, <4 x i32>* %386, align 4
  %387 = or i64 %365, 24
  %388 = add <4 x i32> %366, <i32 24, i32 24, i32 24, i32 24>
  %389 = getelementptr i32, i32* %325, i64 %387
  %390 = add <4 x i32> %366, <i32 28, i32 28, i32 28, i32 28>
  %391 = bitcast i32* %389 to <4 x i32>*
  store <4 x i32> %388, <4 x i32>* %391, align 4
  %392 = getelementptr i32, i32* %389, i64 4
  %393 = bitcast i32* %392 to <4 x i32>*
  store <4 x i32> %390, <4 x i32>* %393, align 4
  %394 = add i64 %365, 32
  %395 = add <4 x i32> %366, <i32 32, i32 32, i32 32, i32 32>
  %396 = add i64 %367, -4
  %397 = icmp eq i64 %396, 0
  br i1 %397, label %398, label %364, !llvm.loop !6

398:                                              ; preds = %364, %347
  %399 = phi i64 [ 0, %347 ], [ %394, %364 ]
  %400 = phi <4 x i32> [ %356, %347 ], [ %395, %364 ]
  %401 = icmp eq i64 %360, 0
  br i1 %401, label %415, label %402

402:                                              ; preds = %398, %402
  %403 = phi i64 [ %411, %402 ], [ %399, %398 ]
  %404 = phi <4 x i32> [ %412, %402 ], [ %400, %398 ]
  %405 = phi i64 [ %413, %402 ], [ %360, %398 ]
  %406 = getelementptr i32, i32* %325, i64 %403
  %407 = add <4 x i32> %404, <i32 4, i32 4, i32 4, i32 4>
  %408 = bitcast i32* %406 to <4 x i32>*
  store <4 x i32> %404, <4 x i32>* %408, align 4
  %409 = getelementptr i32, i32* %406, i64 4
  %410 = bitcast i32* %409 to <4 x i32>*
  store <4 x i32> %407, <4 x i32>* %410, align 4
  %411 = add i64 %403, 8
  %412 = add <4 x i32> %404, <i32 8, i32 8, i32 8, i32 8>
  %413 = add i64 %405, -1
  %414 = icmp eq i64 %413, 0
  br i1 %414, label %415, label %402, !llvm.loop !7

415:                                              ; preds = %402, %398
  %416 = icmp eq i64 %345, %348
  br i1 %416, label %429, label %417

417:                                              ; preds = %415, %323
  %418 = phi i32 [ %343, %323 ], [ %350, %415 ]
  %419 = phi i32* [ %325, %323 ], [ %351, %415 ]
  %420 = phi i32 [ %340, %323 ], [ %353, %415 ]
  br label %421

421:                                              ; preds = %417, %421
  %422 = phi i32 [ %427, %421 ], [ %418, %417 ]
  %423 = phi i32* [ %426, %421 ], [ %419, %417 ]
  %424 = phi i32 [ %425, %421 ], [ %420, %417 ]
  store i32 %424, i32* %423, align 4
  %425 = add nuw nsw i32 %424, 1
  %426 = getelementptr inbounds i32, i32* %423, i64 1
  %427 = add nsw i32 %422, -1
  %428 = icmp eq i32 %427, 0
  br i1 %428, label %429, label %421, !llvm.loop !9

429:                                              ; preds = %421, %415
  %430 = phi i32* [ %351, %415 ], [ %426, %421 ]
  %431 = add i32 %326, -1
  %432 = icmp eq i32 %431, 0
  br i1 %432, label %433, label %323

433:                                              ; preds = %429, %320
  %434 = phi i32* [ %322, %320 ], [ %430, %429 ]
  store i32 0, i32* %434, align 4
  %435 = load i32*, i32** %321, align 8
  br label %1160

436:                                              ; preds = %212
  %437 = getelementptr inbounds i8, i8* %10, i64 %97
  %438 = getelementptr inbounds i8, i8* %10, i64 %79
  %439 = getelementptr inbounds i8, i8* %437, i64 4
  %440 = getelementptr inbounds i8, i8* %439, i64 -4
  %441 = load i8, i8* %440, align 1
  %442 = zext i8 %441 to i32
  %443 = shl nuw i32 %442, 24
  %444 = getelementptr inbounds i8, i8* %440, i64 1
  %445 = load i8, i8* %444, align 1
  %446 = zext i8 %445 to i32
  %447 = shl nuw nsw i32 %446, 16
  %448 = or i32 %447, %443
  %449 = getelementptr inbounds i8, i8* %440, i64 2
  %450 = load i8, i8* %449, align 1
  %451 = zext i8 %450 to i32
  %452 = shl nuw nsw i32 %451, 8
  %453 = or i32 %448, %452
  %454 = getelementptr inbounds i8, i8* %440, i64 3
  %455 = load i8, i8* %454, align 1
  %456 = zext i8 %455 to i32
  %457 = or i32 %453, %456
  %458 = load i8, i8* %438, align 1
  %459 = zext i8 %458 to i32
  %460 = shl nuw i32 %459, 24
  %461 = getelementptr inbounds i8, i8* %438, i64 1
  %462 = load i8, i8* %461, align 1
  %463 = zext i8 %462 to i32
  %464 = shl nuw nsw i32 %463, 16
  %465 = or i32 %464, %460
  %466 = getelementptr inbounds i8, i8* %438, i64 2
  %467 = load i8, i8* %466, align 1
  %468 = zext i8 %467 to i32
  %469 = shl nuw nsw i32 %468, 8
  %470 = or i32 %465, %469
  %471 = getelementptr inbounds i8, i8* %438, i64 3
  %472 = load i8, i8* %471, align 1
  %473 = zext i8 %472 to i32
  %474 = or i32 %470, %473
  %475 = icmp eq i32 %474, 0
  br i1 %475, label %536, label %476

476:                                              ; preds = %436
  %477 = getelementptr inbounds i8, i8* %438, i64 7
  %478 = add i32 %474, -1
  %479 = zext i32 %478 to i64
  %480 = add nuw nsw i64 %479, 1
  %481 = icmp ult i64 %480, 9
  br i1 %481, label %521, label %482

482:                                              ; preds = %476
  %483 = and i64 %480, 7
  %484 = icmp eq i64 %483, 0
  %485 = select i1 %484, i64 8, i64 %483
  %486 = sub nsw i64 %480, %485
  %487 = trunc i64 %486 to i32
  %488 = sub i32 %474, %487
  %489 = shl nsw i64 %486, 2
  %490 = getelementptr i8, i8* %477, i64 %489
  br label %491

491:                                              ; preds = %491, %482
  %492 = phi i64 [ 0, %482 ], [ %512, %491 ]
  %493 = phi <4 x i32> [ zeroinitializer, %482 ], [ %510, %491 ]
  %494 = phi <4 x i32> [ zeroinitializer, %482 ], [ %511, %491 ]
  %495 = shl i64 %492, 2
  %496 = getelementptr i8, i8* %477, i64 %495
  %497 = shl i64 %492, 2
  %498 = or i64 %497, 16
  %499 = getelementptr i8, i8* %477, i64 %498
  %500 = bitcast i8* %496 to <16 x i8>*
  %501 = bitcast i8* %499 to <16 x i8>*
  %502 = load <16 x i8>, <16 x i8>* %500, align 1
  %503 = load <16 x i8>, <16 x i8>* %501, align 1
  %504 = shufflevector <16 x i8> %502, <16 x i8> undef, <4 x i32> <i32 0, i32 4, i32 8, i32 12>
  %505 = shufflevector <16 x i8> %503, <16 x i8> undef, <4 x i32> <i32 0, i32 4, i32 8, i32 12>
  %506 = zext <4 x i8> %504 to <4 x i32>
  %507 = zext <4 x i8> %505 to <4 x i32>
  %508 = add <4 x i32> %493, <i32 1, i32 1, i32 1, i32 1>
  %509 = add <4 x i32> %494, <i32 1, i32 1, i32 1, i32 1>
  %510 = add <4 x i32> %508, %506
  %511 = add <4 x i32> %509, %507
  %512 = add i64 %492, 8
  %513 = icmp eq i64 %512, %486
  br i1 %513, label %514, label %491, !llvm.loop !10

514:                                              ; preds = %491
  %515 = add <4 x i32> %511, %510
  %516 = shufflevector <4 x i32> %515, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %517 = add <4 x i32> %515, %516
  %518 = shufflevector <4 x i32> %517, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %519 = add <4 x i32> %517, %518
  %520 = extractelement <4 x i32> %519, i32 0
  br label %521

521:                                              ; preds = %514, %476
  %522 = phi i32 [ 0, %476 ], [ %520, %514 ]
  %523 = phi i32 [ %474, %476 ], [ %488, %514 ]
  %524 = phi i8* [ %477, %476 ], [ %490, %514 ]
  br label %525

525:                                              ; preds = %521, %525
  %526 = phi i32 [ %532, %525 ], [ %522, %521 ]
  %527 = phi i32 [ %534, %525 ], [ %523, %521 ]
  %528 = phi i8* [ %533, %525 ], [ %524, %521 ]
  %529 = load i8, i8* %528, align 1
  %530 = zext i8 %529 to i32
  %531 = add i32 %526, 1
  %532 = add i32 %531, %530
  %533 = getelementptr inbounds i8, i8* %528, i64 4
  %534 = add i32 %527, -1
  %535 = icmp eq i32 %534, 0
  br i1 %535, label %536, label %525, !llvm.loop !11

536:                                              ; preds = %525, %436
  %537 = phi i32 [ 0, %436 ], [ %532, %525 ]
  %538 = getelementptr inbounds i8, i8* %438, i64 4
  %539 = icmp eq i32 %457, 0
  br i1 %539, label %540, label %744

540:                                              ; preds = %536
  br i1 %475, label %603, label %541

541:                                              ; preds = %540
  %542 = getelementptr inbounds i8, i8* %438, i64 7
  %543 = add i32 %474, -1
  %544 = zext i32 %543 to i64
  %545 = add nuw nsw i64 %544, 1
  %546 = icmp ult i64 %545, 9
  br i1 %546, label %586, label %547

547:                                              ; preds = %541
  %548 = and i64 %545, 7
  %549 = icmp eq i64 %548, 0
  %550 = select i1 %549, i64 8, i64 %548
  %551 = sub nsw i64 %545, %550
  %552 = trunc i64 %551 to i32
  %553 = sub i32 %474, %552
  %554 = shl nsw i64 %551, 2
  %555 = getelementptr i8, i8* %542, i64 %554
  br label %556

556:                                              ; preds = %556, %547
  %557 = phi i64 [ 0, %547 ], [ %577, %556 ]
  %558 = phi <4 x i32> [ zeroinitializer, %547 ], [ %575, %556 ]
  %559 = phi <4 x i32> [ zeroinitializer, %547 ], [ %576, %556 ]
  %560 = shl i64 %557, 2
  %561 = getelementptr i8, i8* %542, i64 %560
  %562 = shl i64 %557, 2
  %563 = or i64 %562, 16
  %564 = getelementptr i8, i8* %542, i64 %563
  %565 = bitcast i8* %561 to <16 x i8>*
  %566 = bitcast i8* %564 to <16 x i8>*
  %567 = load <16 x i8>, <16 x i8>* %565, align 1
  %568 = load <16 x i8>, <16 x i8>* %566, align 1
  %569 = shufflevector <16 x i8> %567, <16 x i8> undef, <4 x i32> <i32 0, i32 4, i32 8, i32 12>
  %570 = shufflevector <16 x i8> %568, <16 x i8> undef, <4 x i32> <i32 0, i32 4, i32 8, i32 12>
  %571 = zext <4 x i8> %569 to <4 x i32>
  %572 = zext <4 x i8> %570 to <4 x i32>
  %573 = add <4 x i32> %558, <i32 1, i32 1, i32 1, i32 1>
  %574 = add <4 x i32> %559, <i32 1, i32 1, i32 1, i32 1>
  %575 = add <4 x i32> %573, %571
  %576 = add <4 x i32> %574, %572
  %577 = add i64 %557, 8
  %578 = icmp eq i64 %577, %551
  br i1 %578, label %579, label %556, !llvm.loop !12

579:                                              ; preds = %556
  %580 = add <4 x i32> %576, %575
  %581 = shufflevector <4 x i32> %580, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %582 = add <4 x i32> %580, %581
  %583 = shufflevector <4 x i32> %582, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %584 = add <4 x i32> %582, %583
  %585 = extractelement <4 x i32> %584, i32 0
  br label %586

586:                                              ; preds = %579, %541
  %587 = phi i32 [ 0, %541 ], [ %585, %579 ]
  %588 = phi i32 [ %474, %541 ], [ %553, %579 ]
  %589 = phi i8* [ %542, %541 ], [ %555, %579 ]
  br label %590

590:                                              ; preds = %586, %590
  %591 = phi i32 [ %597, %590 ], [ %587, %586 ]
  %592 = phi i32 [ %599, %590 ], [ %588, %586 ]
  %593 = phi i8* [ %598, %590 ], [ %589, %586 ]
  %594 = load i8, i8* %593, align 1
  %595 = zext i8 %594 to i32
  %596 = add i32 %591, 1
  %597 = add i32 %596, %595
  %598 = getelementptr inbounds i8, i8* %593, i64 4
  %599 = add i32 %592, -1
  %600 = icmp eq i32 %599, 0
  br i1 %600, label %601, label %590, !llvm.loop !13

601:                                              ; preds = %590
  %602 = add i32 %597, 1
  br label %603

603:                                              ; preds = %601, %540
  %604 = phi i32 [ 1, %540 ], [ %602, %601 ]
  %605 = getelementptr inbounds %struct.TT_CMapRec_, %struct.TT_CMapRec_* %0, i64 1, i32 0, i32 0, i32 1
  %606 = load i32, i32* %605, align 8
  %607 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %607) #17
  store i32 0, i32* %4, align 4
  %608 = icmp ult i32 %606, %604
  br i1 %608, label %613, label %609

609:                                              ; preds = %603
  %610 = getelementptr inbounds %struct.TT_CMapRec_, %struct.TT_CMapRec_* %0, i64 1, i32 0, i32 1
  %611 = bitcast %struct.FT_CMap_ClassRec_** %610 to i32**
  %612 = load i32*, i32** %611, align 8
  br label %628

613:                                              ; preds = %603
  %614 = getelementptr inbounds %struct.TT_CMapRec_, %struct.TT_CMapRec_* %0, i64 1, i32 1
  %615 = bitcast i8** %614 to %struct.FT_MemoryRec_**
  store %struct.FT_MemoryRec_* %1, %struct.FT_MemoryRec_** %615, align 8
  %616 = zext i32 %606 to i64
  %617 = zext i32 %604 to i64
  %618 = getelementptr inbounds %struct.TT_CMapRec_, %struct.TT_CMapRec_* %0, i64 1, i32 0, i32 1
  %619 = bitcast %struct.FT_CMap_ClassRec_** %618 to i8**
  %620 = load i8*, i8** %619, align 8
  %621 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %1, i64 4, i64 %616, i64 %617, i8* %620, i32* nonnull %4) #17
  store i8* %621, i8** %619, align 8
  %622 = load i32, i32* %4, align 4
  %623 = icmp eq i32 %622, 0
  br i1 %623, label %624, label %627

624:                                              ; preds = %613
  %625 = bitcast i8* %621 to i32*
  store i32 %604, i32* %605, align 8
  %626 = bitcast %struct.FT_CMap_ClassRec_** %618 to i32**
  br label %628

627:                                              ; preds = %613
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %607) #17
  br label %1160

628:                                              ; preds = %609, %624
  %629 = phi i32** [ %611, %609 ], [ %626, %624 ]
  %630 = phi i32* [ %612, %609 ], [ %625, %624 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %607) #17
  br i1 %475, label %741, label %631

631:                                              ; preds = %628, %737
  %632 = phi i8* [ %635, %737 ], [ %438, %628 ]
  %633 = phi i32* [ %738, %737 ], [ %630, %628 ]
  %634 = phi i32 [ %739, %737 ], [ %474, %628 ]
  %635 = getelementptr inbounds i8, i8* %632, i64 4
  %636 = getelementptr inbounds i8, i8* %632, i64 7
  %637 = load i8, i8* %635, align 1
  %638 = zext i8 %637 to i32
  %639 = shl nuw nsw i32 %638, 16
  %640 = getelementptr inbounds i8, i8* %632, i64 5
  %641 = load i8, i8* %640, align 1
  %642 = zext i8 %641 to i32
  %643 = shl nuw nsw i32 %642, 8
  %644 = or i32 %643, %639
  %645 = getelementptr inbounds i8, i8* %632, i64 6
  %646 = load i8, i8* %645, align 1
  %647 = zext i8 %646 to i32
  %648 = or i32 %644, %647
  %649 = load i8, i8* %636, align 1
  %650 = zext i8 %649 to i32
  %651 = add nuw nsw i32 %650, 1
  %652 = zext i8 %649 to i64
  %653 = add nuw nsw i64 %652, 1
  %654 = icmp ult i64 %653, 8
  br i1 %654, label %725, label %655

655:                                              ; preds = %631
  %656 = and i64 %653, 504
  %657 = trunc i64 %656 to i32
  %658 = sub nsw i32 %651, %657
  %659 = getelementptr i32, i32* %633, i64 %656
  %660 = trunc i64 %656 to i32
  %661 = add nuw nsw i32 %648, %660
  %662 = insertelement <4 x i32> undef, i32 %648, i32 0
  %663 = shufflevector <4 x i32> %662, <4 x i32> undef, <4 x i32> zeroinitializer
  %664 = add <4 x i32> %663, <i32 0, i32 1, i32 2, i32 3>
  %665 = add nsw i64 %656, -8
  %666 = lshr exact i64 %665, 3
  %667 = add nuw nsw i64 %666, 1
  %668 = and i64 %667, 3
  %669 = icmp ult i64 %665, 24
  br i1 %669, label %706, label %670

670:                                              ; preds = %655
  %671 = sub nsw i64 %667, %668
  br label %672

672:                                              ; preds = %672, %670
  %673 = phi i64 [ 0, %670 ], [ %702, %672 ]
  %674 = phi <4 x i32> [ %664, %670 ], [ %703, %672 ]
  %675 = phi i64 [ %671, %670 ], [ %704, %672 ]
  %676 = getelementptr i32, i32* %633, i64 %673
  %677 = add <4 x i32> %674, <i32 4, i32 4, i32 4, i32 4>
  %678 = bitcast i32* %676 to <4 x i32>*
  store <4 x i32> %674, <4 x i32>* %678, align 4
  %679 = getelementptr i32, i32* %676, i64 4
  %680 = bitcast i32* %679 to <4 x i32>*
  store <4 x i32> %677, <4 x i32>* %680, align 4
  %681 = or i64 %673, 8
  %682 = add <4 x i32> %674, <i32 8, i32 8, i32 8, i32 8>
  %683 = getelementptr i32, i32* %633, i64 %681
  %684 = add <4 x i32> %674, <i32 12, i32 12, i32 12, i32 12>
  %685 = bitcast i32* %683 to <4 x i32>*
  store <4 x i32> %682, <4 x i32>* %685, align 4
  %686 = getelementptr i32, i32* %683, i64 4
  %687 = bitcast i32* %686 to <4 x i32>*
  store <4 x i32> %684, <4 x i32>* %687, align 4
  %688 = or i64 %673, 16
  %689 = add <4 x i32> %674, <i32 16, i32 16, i32 16, i32 16>
  %690 = getelementptr i32, i32* %633, i64 %688
  %691 = add <4 x i32> %674, <i32 20, i32 20, i32 20, i32 20>
  %692 = bitcast i32* %690 to <4 x i32>*
  store <4 x i32> %689, <4 x i32>* %692, align 4
  %693 = getelementptr i32, i32* %690, i64 4
  %694 = bitcast i32* %693 to <4 x i32>*
  store <4 x i32> %691, <4 x i32>* %694, align 4
  %695 = or i64 %673, 24
  %696 = add <4 x i32> %674, <i32 24, i32 24, i32 24, i32 24>
  %697 = getelementptr i32, i32* %633, i64 %695
  %698 = add <4 x i32> %674, <i32 28, i32 28, i32 28, i32 28>
  %699 = bitcast i32* %697 to <4 x i32>*
  store <4 x i32> %696, <4 x i32>* %699, align 4
  %700 = getelementptr i32, i32* %697, i64 4
  %701 = bitcast i32* %700 to <4 x i32>*
  store <4 x i32> %698, <4 x i32>* %701, align 4
  %702 = add i64 %673, 32
  %703 = add <4 x i32> %674, <i32 32, i32 32, i32 32, i32 32>
  %704 = add i64 %675, -4
  %705 = icmp eq i64 %704, 0
  br i1 %705, label %706, label %672, !llvm.loop !14

706:                                              ; preds = %672, %655
  %707 = phi i64 [ 0, %655 ], [ %702, %672 ]
  %708 = phi <4 x i32> [ %664, %655 ], [ %703, %672 ]
  %709 = icmp eq i64 %668, 0
  br i1 %709, label %723, label %710

710:                                              ; preds = %706, %710
  %711 = phi i64 [ %719, %710 ], [ %707, %706 ]
  %712 = phi <4 x i32> [ %720, %710 ], [ %708, %706 ]
  %713 = phi i64 [ %721, %710 ], [ %668, %706 ]
  %714 = getelementptr i32, i32* %633, i64 %711
  %715 = add <4 x i32> %712, <i32 4, i32 4, i32 4, i32 4>
  %716 = bitcast i32* %714 to <4 x i32>*
  store <4 x i32> %712, <4 x i32>* %716, align 4
  %717 = getelementptr i32, i32* %714, i64 4
  %718 = bitcast i32* %717 to <4 x i32>*
  store <4 x i32> %715, <4 x i32>* %718, align 4
  %719 = add i64 %711, 8
  %720 = add <4 x i32> %712, <i32 8, i32 8, i32 8, i32 8>
  %721 = add i64 %713, -1
  %722 = icmp eq i64 %721, 0
  br i1 %722, label %723, label %710, !llvm.loop !15

723:                                              ; preds = %710, %706
  %724 = icmp eq i64 %653, %656
  br i1 %724, label %737, label %725

725:                                              ; preds = %723, %631
  %726 = phi i32 [ %651, %631 ], [ %658, %723 ]
  %727 = phi i32* [ %633, %631 ], [ %659, %723 ]
  %728 = phi i32 [ %648, %631 ], [ %661, %723 ]
  br label %729

729:                                              ; preds = %725, %729
  %730 = phi i32 [ %735, %729 ], [ %726, %725 ]
  %731 = phi i32* [ %734, %729 ], [ %727, %725 ]
  %732 = phi i32 [ %733, %729 ], [ %728, %725 ]
  store i32 %732, i32* %731, align 4
  %733 = add nuw nsw i32 %732, 1
  %734 = getelementptr inbounds i32, i32* %731, i64 1
  %735 = add nsw i32 %730, -1
  %736 = icmp eq i32 %735, 0
  br i1 %736, label %737, label %729, !llvm.loop !16

737:                                              ; preds = %729, %723
  %738 = phi i32* [ %659, %723 ], [ %734, %729 ]
  %739 = add i32 %634, -1
  %740 = icmp eq i32 %739, 0
  br i1 %740, label %741, label %631

741:                                              ; preds = %737, %628
  %742 = phi i32* [ %630, %628 ], [ %738, %737 ]
  store i32 0, i32* %742, align 4
  %743 = load i32*, i32** %629, align 8
  br label %1160

744:                                              ; preds = %536
  %745 = icmp eq i32 %537, 0
  %746 = add i32 %457, 1
  br i1 %745, label %747, label %833

747:                                              ; preds = %744
  %748 = getelementptr inbounds %struct.TT_CMapRec_, %struct.TT_CMapRec_* %0, i64 1, i32 0, i32 0, i32 1
  %749 = load i32, i32* %748, align 8
  %750 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %750) #17
  store i32 0, i32* %5, align 4
  %751 = icmp ult i32 %749, %746
  br i1 %751, label %756, label %752

752:                                              ; preds = %747
  %753 = getelementptr inbounds %struct.TT_CMapRec_, %struct.TT_CMapRec_* %0, i64 1, i32 0, i32 1
  %754 = bitcast %struct.FT_CMap_ClassRec_** %753 to i32**
  %755 = load i32*, i32** %754, align 8
  br label %770

756:                                              ; preds = %747
  %757 = getelementptr inbounds %struct.TT_CMapRec_, %struct.TT_CMapRec_* %0, i64 1, i32 1
  %758 = bitcast i8** %757 to %struct.FT_MemoryRec_**
  store %struct.FT_MemoryRec_* %1, %struct.FT_MemoryRec_** %758, align 8
  %759 = zext i32 %749 to i64
  %760 = zext i32 %746 to i64
  %761 = getelementptr inbounds %struct.TT_CMapRec_, %struct.TT_CMapRec_* %0, i64 1, i32 0, i32 1
  %762 = bitcast %struct.FT_CMap_ClassRec_** %761 to i8**
  %763 = load i8*, i8** %762, align 8
  %764 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %1, i64 4, i64 %759, i64 %760, i8* %763, i32* nonnull %5) #17
  store i8* %764, i8** %762, align 8
  %765 = load i32, i32* %5, align 4
  %766 = icmp eq i32 %765, 0
  br i1 %766, label %767, label %769

767:                                              ; preds = %756
  %768 = bitcast i8* %764 to i32*
  store i32 %746, i32* %748, align 8
  br label %770

769:                                              ; preds = %756
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %750) #17
  br label %1160

770:                                              ; preds = %752, %767
  %771 = phi i32* [ %755, %752 ], [ %768, %767 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %750) #17
  %772 = zext i32 %457 to i64
  %773 = and i64 %772, 1
  %774 = icmp eq i32 %457, 1
  br i1 %774, label %813, label %775

775:                                              ; preds = %770
  %776 = sub nsw i64 %772, %773
  br label %777

777:                                              ; preds = %777, %775
  %778 = phi i64 [ 0, %775 ], [ %810, %777 ]
  %779 = phi i8* [ %439, %775 ], [ %809, %777 ]
  %780 = phi i64 [ %776, %775 ], [ %811, %777 ]
  %781 = load i8, i8* %779, align 1
  %782 = zext i8 %781 to i32
  %783 = shl nuw nsw i32 %782, 16
  %784 = getelementptr inbounds i8, i8* %779, i64 1
  %785 = load i8, i8* %784, align 1
  %786 = zext i8 %785 to i32
  %787 = shl nuw nsw i32 %786, 8
  %788 = or i32 %787, %783
  %789 = getelementptr inbounds i8, i8* %779, i64 2
  %790 = load i8, i8* %789, align 1
  %791 = zext i8 %790 to i32
  %792 = or i32 %788, %791
  %793 = getelementptr inbounds i32, i32* %771, i64 %778
  store i32 %792, i32* %793, align 4
  %794 = getelementptr inbounds i8, i8* %779, i64 5
  %795 = or i64 %778, 1
  %796 = load i8, i8* %794, align 1
  %797 = zext i8 %796 to i32
  %798 = shl nuw nsw i32 %797, 16
  %799 = getelementptr inbounds i8, i8* %779, i64 6
  %800 = load i8, i8* %799, align 1
  %801 = zext i8 %800 to i32
  %802 = shl nuw nsw i32 %801, 8
  %803 = or i32 %802, %798
  %804 = getelementptr inbounds i8, i8* %779, i64 7
  %805 = load i8, i8* %804, align 1
  %806 = zext i8 %805 to i32
  %807 = or i32 %803, %806
  %808 = getelementptr inbounds i32, i32* %771, i64 %795
  store i32 %807, i32* %808, align 4
  %809 = getelementptr inbounds i8, i8* %779, i64 10
  %810 = add nuw nsw i64 %778, 2
  %811 = add i64 %780, -2
  %812 = icmp eq i64 %811, 0
  br i1 %812, label %813, label %777

813:                                              ; preds = %777, %770
  %814 = phi i64 [ 0, %770 ], [ %810, %777 ]
  %815 = phi i8* [ %439, %770 ], [ %809, %777 ]
  %816 = icmp eq i64 %773, 0
  br i1 %816, label %831, label %817

817:                                              ; preds = %813
  %818 = load i8, i8* %815, align 1
  %819 = zext i8 %818 to i32
  %820 = shl nuw nsw i32 %819, 16
  %821 = getelementptr inbounds i8, i8* %815, i64 1
  %822 = load i8, i8* %821, align 1
  %823 = zext i8 %822 to i32
  %824 = shl nuw nsw i32 %823, 8
  %825 = or i32 %824, %820
  %826 = getelementptr inbounds i8, i8* %815, i64 2
  %827 = load i8, i8* %826, align 1
  %828 = zext i8 %827 to i32
  %829 = or i32 %825, %828
  %830 = getelementptr inbounds i32, i32* %771, i64 %814
  store i32 %829, i32* %830, align 4
  br label %831

831:                                              ; preds = %813, %817
  %832 = getelementptr inbounds i32, i32* %771, i64 %772
  store i32 0, i32* %832, align 4
  br label %1160

833:                                              ; preds = %744
  %834 = add i32 %746, %537
  %835 = getelementptr inbounds %struct.TT_CMapRec_, %struct.TT_CMapRec_* %0, i64 1, i32 0, i32 0, i32 1
  %836 = load i32, i32* %835, align 8
  %837 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %837) #17
  store i32 0, i32* %8, align 4
  %838 = icmp ult i32 %836, %834
  br i1 %838, label %843, label %839

839:                                              ; preds = %833
  %840 = getelementptr inbounds %struct.TT_CMapRec_, %struct.TT_CMapRec_* %0, i64 1, i32 0, i32 1
  %841 = bitcast %struct.FT_CMap_ClassRec_** %840 to i32**
  %842 = load i32*, i32** %841, align 8
  br label %857

843:                                              ; preds = %833
  %844 = getelementptr inbounds %struct.TT_CMapRec_, %struct.TT_CMapRec_* %0, i64 1, i32 1
  %845 = bitcast i8** %844 to %struct.FT_MemoryRec_**
  store %struct.FT_MemoryRec_* %1, %struct.FT_MemoryRec_** %845, align 8
  %846 = zext i32 %836 to i64
  %847 = zext i32 %834 to i64
  %848 = getelementptr inbounds %struct.TT_CMapRec_, %struct.TT_CMapRec_* %0, i64 1, i32 0, i32 1
  %849 = bitcast %struct.FT_CMap_ClassRec_** %848 to i8**
  %850 = load i8*, i8** %849, align 8
  %851 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %1, i64 4, i64 %846, i64 %847, i8* %850, i32* nonnull %8) #17
  store i8* %851, i8** %849, align 8
  %852 = load i32, i32* %8, align 4
  %853 = icmp eq i32 %852, 0
  br i1 %853, label %854, label %856

854:                                              ; preds = %843
  %855 = bitcast i8* %851 to i32*
  store i32 %834, i32* %835, align 8
  br label %857

856:                                              ; preds = %843
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %837) #17
  br label %1160

857:                                              ; preds = %839, %854
  %858 = phi i32* [ %842, %839 ], [ %855, %854 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %837) #17
  %859 = getelementptr inbounds i8, i8* %538, i64 3
  %860 = getelementptr inbounds i8, i8* %859, i64 -3
  %861 = load i8, i8* %860, align 1
  %862 = zext i8 %861 to i32
  %863 = shl nuw nsw i32 %862, 16
  %864 = getelementptr inbounds i8, i8* %860, i64 1
  %865 = load i8, i8* %864, align 1
  %866 = zext i8 %865 to i32
  %867 = shl nuw nsw i32 %866, 8
  %868 = or i32 %867, %863
  %869 = getelementptr inbounds i8, i8* %860, i64 2
  %870 = load i8, i8* %869, align 1
  %871 = zext i8 %870 to i32
  %872 = or i32 %868, %871
  %873 = getelementptr inbounds i8, i8* %859, i64 1
  %874 = load i8, i8* %859, align 1
  %875 = zext i8 %874 to i32
  %876 = getelementptr inbounds i8, i8* %439, i64 3
  %877 = getelementptr inbounds i8, i8* %876, i64 -3
  %878 = load i8, i8* %877, align 1
  %879 = zext i8 %878 to i32
  %880 = shl nuw nsw i32 %879, 16
  %881 = getelementptr inbounds i8, i8* %877, i64 1
  %882 = load i8, i8* %881, align 1
  %883 = zext i8 %882 to i32
  %884 = shl nuw nsw i32 %883, 8
  %885 = or i32 %884, %880
  %886 = getelementptr inbounds i8, i8* %877, i64 2
  %887 = load i8, i8* %886, align 1
  %888 = zext i8 %887 to i32
  %889 = or i32 %885, %888
  %890 = getelementptr inbounds i8, i8* %876, i64 2
  br label %891

891:                                              ; preds = %949, %857
  %892 = phi i8* [ %962, %949 ], [ %890, %857 ]
  %893 = phi i32 [ %946, %949 ], [ 0, %857 ]
  %894 = phi i32 [ %902, %949 ], [ %872, %857 ]
  %895 = phi i32 [ %903, %949 ], [ %875, %857 ]
  %896 = phi i32 [ %961, %949 ], [ %889, %857 ]
  %897 = phi i8* [ %904, %949 ], [ %873, %857 ]
  %898 = phi i32 [ %905, %949 ], [ 1, %857 ]
  %899 = phi i32 [ %947, %949 ], [ 1, %857 ]
  br label %900

900:                                              ; preds = %891, %922
  %901 = phi i32 [ %921, %922 ], [ %893, %891 ]
  %902 = phi i32 [ %935, %922 ], [ %894, %891 ]
  %903 = phi i32 [ %938, %922 ], [ %895, %891 ]
  %904 = phi i8* [ %936, %922 ], [ %897, %891 ]
  %905 = phi i32 [ %919, %922 ], [ %898, %891 ]
  %906 = add i32 %903, %902
  %907 = icmp ugt i32 %896, %906
  br i1 %907, label %908, label %939

908:                                              ; preds = %900
  %909 = sext i32 %901 to i64
  br label %910

910:                                              ; preds = %908, %910
  %911 = phi i64 [ %909, %908 ], [ %914, %910 ]
  %912 = phi i32 [ 0, %908 ], [ %916, %910 ]
  %913 = add i32 %912, %902
  %914 = add i64 %911, 1
  %915 = getelementptr inbounds i32, i32* %858, i64 %911
  store i32 %913, i32* %915, align 4
  %916 = add i32 %912, 1
  %917 = icmp ugt i32 %916, %903
  br i1 %917, label %918, label %910

918:                                              ; preds = %910
  %919 = add i32 %905, 1
  %920 = icmp ugt i32 %919, %474
  %921 = trunc i64 %914 to i32
  br i1 %920, label %963, label %922

922:                                              ; preds = %918
  %923 = getelementptr inbounds i8, i8* %904, i64 3
  %924 = load i8, i8* %904, align 1
  %925 = zext i8 %924 to i32
  %926 = shl nuw nsw i32 %925, 16
  %927 = getelementptr inbounds i8, i8* %904, i64 1
  %928 = load i8, i8* %927, align 1
  %929 = zext i8 %928 to i32
  %930 = shl nuw nsw i32 %929, 8
  %931 = or i32 %930, %926
  %932 = getelementptr inbounds i8, i8* %904, i64 2
  %933 = load i8, i8* %932, align 1
  %934 = zext i8 %933 to i32
  %935 = or i32 %931, %934
  %936 = getelementptr inbounds i8, i8* %904, i64 4
  %937 = load i8, i8* %923, align 1
  %938 = zext i8 %937 to i32
  br label %900

939:                                              ; preds = %900
  %940 = icmp ult i32 %896, %902
  br i1 %940, label %941, label %945

941:                                              ; preds = %939
  %942 = add nsw i32 %901, 1
  %943 = sext i32 %901 to i64
  %944 = getelementptr inbounds i32, i32* %858, i64 %943
  store i32 %896, i32* %944, align 4
  br label %945

945:                                              ; preds = %941, %939
  %946 = phi i32 [ %942, %941 ], [ %901, %939 ]
  %947 = add i32 %899, 1
  %948 = icmp ugt i32 %947, %457
  br i1 %948, label %965, label %949

949:                                              ; preds = %945
  %950 = load i8, i8* %892, align 1
  %951 = zext i8 %950 to i32
  %952 = shl nuw nsw i32 %951, 16
  %953 = getelementptr inbounds i8, i8* %892, i64 1
  %954 = load i8, i8* %953, align 1
  %955 = zext i8 %954 to i32
  %956 = shl nuw nsw i32 %955, 8
  %957 = or i32 %956, %952
  %958 = getelementptr inbounds i8, i8* %892, i64 2
  %959 = load i8, i8* %958, align 1
  %960 = zext i8 %959 to i32
  %961 = or i32 %957, %960
  %962 = getelementptr inbounds i8, i8* %892, i64 5
  br label %891

963:                                              ; preds = %918
  %964 = trunc i64 %914 to i32
  br label %965

965:                                              ; preds = %945, %963
  %966 = phi i32 [ %964, %963 ], [ %946, %945 ]
  %967 = phi i32 [ %919, %963 ], [ %905, %945 ]
  %968 = phi i32 [ %899, %963 ], [ %947, %945 ]
  %969 = icmp ult i32 %457, %968
  br i1 %969, label %1040, label %970

970:                                              ; preds = %965
  %971 = sext i32 %966 to i64
  %972 = getelementptr inbounds i32, i32* %858, i64 %971
  store i32 %896, i32* %972, align 4
  %973 = add i32 %966, 1
  %974 = icmp ugt i32 %457, %968
  br i1 %974, label %975, label %1156

975:                                              ; preds = %970
  %976 = sext i32 %973 to i64
  %977 = sub i32 %456, %968
  %978 = and i32 %977, 1
  %979 = icmp eq i32 %978, 0
  br i1 %979, label %997, label %980

980:                                              ; preds = %975
  %981 = load i8, i8* %892, align 1
  %982 = zext i8 %981 to i32
  %983 = shl nuw nsw i32 %982, 16
  %984 = getelementptr inbounds i8, i8* %892, i64 1
  %985 = load i8, i8* %984, align 1
  %986 = zext i8 %985 to i32
  %987 = shl nuw nsw i32 %986, 8
  %988 = or i32 %987, %983
  %989 = getelementptr inbounds i8, i8* %892, i64 2
  %990 = load i8, i8* %989, align 1
  %991 = zext i8 %990 to i32
  %992 = or i32 %988, %991
  %993 = getelementptr inbounds i32, i32* %858, i64 %976
  store i32 %992, i32* %993, align 4
  %994 = getelementptr inbounds i8, i8* %892, i64 5
  %995 = add nuw i32 %968, 1
  %996 = add nsw i64 %976, 1
  br label %997

997:                                              ; preds = %975, %980
  %998 = phi i64 [ undef, %975 ], [ %996, %980 ]
  %999 = phi i64 [ %976, %975 ], [ %996, %980 ]
  %1000 = phi i32 [ %968, %975 ], [ %995, %980 ]
  %1001 = phi i8* [ %892, %975 ], [ %994, %980 ]
  %1002 = add i32 %968, 1
  %1003 = icmp eq i32 %457, %1002
  br i1 %1003, label %1153, label %1004

1004:                                             ; preds = %997, %1004
  %1005 = phi i64 [ %1038, %1004 ], [ %999, %997 ]
  %1006 = phi i32 [ %1037, %1004 ], [ %1000, %997 ]
  %1007 = phi i8* [ %1036, %1004 ], [ %1001, %997 ]
  %1008 = load i8, i8* %1007, align 1
  %1009 = zext i8 %1008 to i32
  %1010 = shl nuw nsw i32 %1009, 16
  %1011 = getelementptr inbounds i8, i8* %1007, i64 1
  %1012 = load i8, i8* %1011, align 1
  %1013 = zext i8 %1012 to i32
  %1014 = shl nuw nsw i32 %1013, 8
  %1015 = or i32 %1014, %1010
  %1016 = getelementptr inbounds i8, i8* %1007, i64 2
  %1017 = load i8, i8* %1016, align 1
  %1018 = zext i8 %1017 to i32
  %1019 = or i32 %1015, %1018
  %1020 = getelementptr inbounds i32, i32* %858, i64 %1005
  store i32 %1019, i32* %1020, align 4
  %1021 = getelementptr inbounds i8, i8* %1007, i64 5
  %1022 = add nsw i64 %1005, 1
  %1023 = load i8, i8* %1021, align 1
  %1024 = zext i8 %1023 to i32
  %1025 = shl nuw nsw i32 %1024, 16
  %1026 = getelementptr inbounds i8, i8* %1007, i64 6
  %1027 = load i8, i8* %1026, align 1
  %1028 = zext i8 %1027 to i32
  %1029 = shl nuw nsw i32 %1028, 8
  %1030 = or i32 %1029, %1025
  %1031 = getelementptr inbounds i8, i8* %1007, i64 7
  %1032 = load i8, i8* %1031, align 1
  %1033 = zext i8 %1032 to i32
  %1034 = or i32 %1030, %1033
  %1035 = getelementptr inbounds i32, i32* %858, i64 %1022
  store i32 %1034, i32* %1035, align 4
  %1036 = getelementptr inbounds i8, i8* %1007, i64 10
  %1037 = add nuw i32 %1006, 2
  %1038 = add nsw i64 %1005, 2
  %1039 = icmp eq i32 %1037, %457
  br i1 %1039, label %1153, label %1004

1040:                                             ; preds = %965
  %1041 = icmp ugt i32 %967, %474
  br i1 %1041, label %1156, label %1042

1042:                                             ; preds = %1040
  %1043 = sext i32 %966 to i64
  br label %1047

1044:                                             ; preds = %1047
  %1045 = trunc i64 %1051 to i32
  %1046 = icmp ult i32 %967, %474
  br i1 %1046, label %1055, label %1156

1047:                                             ; preds = %1042, %1047
  %1048 = phi i64 [ %1043, %1042 ], [ %1051, %1047 ]
  %1049 = phi i32 [ 0, %1042 ], [ %1053, %1047 ]
  %1050 = add i32 %1049, %902
  %1051 = add i64 %1048, 1
  %1052 = getelementptr inbounds i32, i32* %858, i64 %1048
  store i32 %1050, i32* %1052, align 4
  %1053 = add i32 %1049, 1
  %1054 = icmp ugt i32 %1053, %903
  br i1 %1054, label %1044, label %1047

1055:                                             ; preds = %1044, %1146
  %1056 = phi i32 [ %1149, %1146 ], [ %967, %1044 ]
  %1057 = phi i8* [ %1148, %1146 ], [ %904, %1044 ]
  %1058 = phi i64 [ %1147, %1146 ], [ %1051, %1044 ]
  %1059 = getelementptr inbounds i8, i8* %1057, i64 3
  %1060 = load i8, i8* %1057, align 1
  %1061 = zext i8 %1060 to i32
  %1062 = shl nuw nsw i32 %1061, 16
  %1063 = getelementptr inbounds i8, i8* %1057, i64 1
  %1064 = load i8, i8* %1063, align 1
  %1065 = zext i8 %1064 to i32
  %1066 = shl nuw nsw i32 %1065, 8
  %1067 = or i32 %1066, %1062
  %1068 = getelementptr inbounds i8, i8* %1057, i64 2
  %1069 = load i8, i8* %1068, align 1
  %1070 = zext i8 %1069 to i32
  %1071 = or i32 %1067, %1070
  %1072 = load i8, i8* %1059, align 1
  %1073 = zext i8 %1072 to i32
  %1074 = shl i64 %1058, 32
  %1075 = ashr exact i64 %1074, 32
  %1076 = zext i8 %1072 to i64
  %1077 = add nuw nsw i64 %1076, 1
  %1078 = icmp ult i64 %1077, 8
  br i1 %1078, label %1135, label %1079

1079:                                             ; preds = %1055
  %1080 = and i64 %1077, 504
  %1081 = add nsw i64 %1075, %1080
  %1082 = trunc i64 %1080 to i32
  %1083 = insertelement <4 x i32> undef, i32 %1071, i32 0
  %1084 = shufflevector <4 x i32> %1083, <4 x i32> undef, <4 x i32> zeroinitializer
  %1085 = insertelement <4 x i32> undef, i32 %1071, i32 0
  %1086 = shufflevector <4 x i32> %1085, <4 x i32> undef, <4 x i32> zeroinitializer
  %1087 = add nsw i64 %1080, -8
  %1088 = lshr exact i64 %1087, 3
  %1089 = add nuw nsw i64 %1088, 1
  %1090 = and i64 %1089, 1
  %1091 = icmp eq i64 %1087, 0
  br i1 %1091, label %1120, label %1092

1092:                                             ; preds = %1079
  %1093 = sub nuw nsw i64 %1089, %1090
  br label %1094

1094:                                             ; preds = %1094, %1092
  %1095 = phi i64 [ 0, %1092 ], [ %1116, %1094 ]
  %1096 = phi <4 x i32> [ <i32 0, i32 1, i32 2, i32 3>, %1092 ], [ %1117, %1094 ]
  %1097 = phi i64 [ %1093, %1092 ], [ %1118, %1094 ]
  %1098 = add i64 %1075, %1095
  %1099 = add <4 x i32> %1096, <i32 4, i32 4, i32 4, i32 4>
  %1100 = add nuw nsw <4 x i32> %1096, %1084
  %1101 = add nuw nsw <4 x i32> %1099, %1086
  %1102 = getelementptr inbounds i32, i32* %858, i64 %1098
  %1103 = bitcast i32* %1102 to <4 x i32>*
  store <4 x i32> %1100, <4 x i32>* %1103, align 4
  %1104 = getelementptr inbounds i32, i32* %1102, i64 4
  %1105 = bitcast i32* %1104 to <4 x i32>*
  store <4 x i32> %1101, <4 x i32>* %1105, align 4
  %1106 = or i64 %1095, 8
  %1107 = add <4 x i32> %1096, <i32 8, i32 8, i32 8, i32 8>
  %1108 = add i64 %1075, %1106
  %1109 = add <4 x i32> %1096, <i32 12, i32 12, i32 12, i32 12>
  %1110 = add nuw nsw <4 x i32> %1107, %1084
  %1111 = add nuw nsw <4 x i32> %1109, %1086
  %1112 = getelementptr inbounds i32, i32* %858, i64 %1108
  %1113 = bitcast i32* %1112 to <4 x i32>*
  store <4 x i32> %1110, <4 x i32>* %1113, align 4
  %1114 = getelementptr inbounds i32, i32* %1112, i64 4
  %1115 = bitcast i32* %1114 to <4 x i32>*
  store <4 x i32> %1111, <4 x i32>* %1115, align 4
  %1116 = add i64 %1095, 16
  %1117 = add <4 x i32> %1096, <i32 16, i32 16, i32 16, i32 16>
  %1118 = add i64 %1097, -2
  %1119 = icmp eq i64 %1118, 0
  br i1 %1119, label %1120, label %1094, !llvm.loop !17

1120:                                             ; preds = %1094, %1079
  %1121 = phi i64 [ 0, %1079 ], [ %1116, %1094 ]
  %1122 = phi <4 x i32> [ <i32 0, i32 1, i32 2, i32 3>, %1079 ], [ %1117, %1094 ]
  %1123 = icmp eq i64 %1090, 0
  br i1 %1123, label %1133, label %1124

1124:                                             ; preds = %1120
  %1125 = add i64 %1075, %1121
  %1126 = add <4 x i32> %1122, <i32 4, i32 4, i32 4, i32 4>
  %1127 = add nuw nsw <4 x i32> %1122, %1084
  %1128 = add nuw nsw <4 x i32> %1126, %1086
  %1129 = getelementptr inbounds i32, i32* %858, i64 %1125
  %1130 = bitcast i32* %1129 to <4 x i32>*
  store <4 x i32> %1127, <4 x i32>* %1130, align 4
  %1131 = getelementptr inbounds i32, i32* %1129, i64 4
  %1132 = bitcast i32* %1131 to <4 x i32>*
  store <4 x i32> %1128, <4 x i32>* %1132, align 4
  br label %1133

1133:                                             ; preds = %1120, %1124
  %1134 = icmp eq i64 %1077, %1080
  br i1 %1134, label %1146, label %1135

1135:                                             ; preds = %1133, %1055
  %1136 = phi i64 [ %1075, %1055 ], [ %1081, %1133 ]
  %1137 = phi i32 [ 0, %1055 ], [ %1082, %1133 ]
  br label %1138

1138:                                             ; preds = %1135, %1138
  %1139 = phi i64 [ %1142, %1138 ], [ %1136, %1135 ]
  %1140 = phi i32 [ %1144, %1138 ], [ %1137, %1135 ]
  %1141 = add nuw nsw i32 %1140, %1071
  %1142 = add nsw i64 %1139, 1
  %1143 = getelementptr inbounds i32, i32* %858, i64 %1139
  store i32 %1141, i32* %1143, align 4
  %1144 = add nuw nsw i32 %1140, 1
  %1145 = icmp eq i32 %1140, %1073
  br i1 %1145, label %1146, label %1138, !llvm.loop !18

1146:                                             ; preds = %1138, %1133
  %1147 = phi i64 [ %1081, %1133 ], [ %1142, %1138 ]
  %1148 = getelementptr inbounds i8, i8* %1057, i64 4
  %1149 = add nuw i32 %1056, 1
  %1150 = icmp eq i32 %1149, %474
  br i1 %1150, label %1151, label %1055

1151:                                             ; preds = %1146
  %1152 = trunc i64 %1147 to i32
  br label %1156

1153:                                             ; preds = %1004, %997
  %1154 = phi i64 [ %998, %997 ], [ %1038, %1004 ]
  %1155 = trunc i64 %1154 to i32
  br label %1156

1156:                                             ; preds = %1153, %1151, %970, %1044, %1040
  %1157 = phi i32 [ %966, %1040 ], [ %1045, %1044 ], [ %973, %970 ], [ %1152, %1151 ], [ %1155, %1153 ]
  %1158 = sext i32 %1157 to i64
  %1159 = getelementptr inbounds i32, i32* %858, i64 %1158
  store i32 0, i32* %1159, align 4
  br label %1160

1160:                                             ; preds = %34, %856, %831, %769, %741, %627, %433, %319, %209, %144, %1156, %62, %60
  %1161 = phi i32* [ null, %60 ], [ null, %62 ], [ %858, %1156 ], [ null, %856 ], [ %146, %209 ], [ null, %144 ], [ %435, %433 ], [ null, %319 ], [ %743, %741 ], [ null, %627 ], [ %771, %831 ], [ null, %769 ], [ null, %34 ]
  ret i32* %1161
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @tt_cmap14_validate(i8*, %struct.FT_ValidatorRec_*) #0 {
  %3 = getelementptr inbounds i8, i8* %0, i64 10
  %4 = getelementptr inbounds %struct.FT_ValidatorRec_, %struct.FT_ValidatorRec_* %1, i64 0, i32 2
  %5 = load volatile i8*, i8** %4, align 8
  %6 = icmp ugt i8* %3, %5
  br i1 %6, label %7, label %8

7:                                                ; preds = %2
  tail call void @ft_validator_error(%struct.FT_ValidatorRec_* %1, i32 8) #17
  br label %8

8:                                                ; preds = %7, %2
  %9 = getelementptr inbounds i8, i8* %0, i64 2
  %10 = load i8, i8* %9, align 1
  %11 = zext i8 %10 to i64
  %12 = shl nuw nsw i64 %11, 24
  %13 = getelementptr inbounds i8, i8* %0, i64 3
  %14 = load i8, i8* %13, align 1
  %15 = zext i8 %14 to i64
  %16 = shl nuw nsw i64 %15, 16
  %17 = or i64 %16, %12
  %18 = getelementptr inbounds i8, i8* %0, i64 4
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i64
  %21 = shl nuw nsw i64 %20, 8
  %22 = or i64 %17, %21
  %23 = getelementptr inbounds i8, i8* %0, i64 5
  %24 = load i8, i8* %23, align 1
  %25 = zext i8 %24 to i64
  %26 = or i64 %22, %25
  %27 = getelementptr inbounds i8, i8* %0, i64 6
  %28 = load i8, i8* %27, align 1
  %29 = zext i8 %28 to i64
  %30 = shl nuw nsw i64 %29, 24
  %31 = getelementptr inbounds i8, i8* %0, i64 7
  %32 = load i8, i8* %31, align 1
  %33 = zext i8 %32 to i64
  %34 = shl nuw nsw i64 %33, 16
  %35 = or i64 %34, %30
  %36 = getelementptr inbounds i8, i8* %0, i64 8
  %37 = load i8, i8* %36, align 1
  %38 = zext i8 %37 to i64
  %39 = shl nuw nsw i64 %38, 8
  %40 = or i64 %35, %39
  %41 = getelementptr inbounds i8, i8* %0, i64 9
  %42 = load i8, i8* %41, align 1
  %43 = zext i8 %42 to i64
  %44 = or i64 %40, %43
  %45 = load volatile i8*, i8** %4, align 8
  %46 = ptrtoint i8* %45 to i64
  %47 = ptrtoint i8* %0 to i64
  %48 = sub i64 %46, %47
  %49 = icmp ugt i64 %26, %48
  %50 = icmp ult i64 %26, 10
  %51 = or i1 %50, %49
  br i1 %51, label %56, label %52

52:                                               ; preds = %8
  %53 = add nsw i64 %26, -10
  %54 = udiv i64 %53, 11
  %55 = icmp ult i64 %54, %44
  br i1 %55, label %56, label %57

56:                                               ; preds = %52, %8
  tail call void @ft_validator_error(%struct.FT_ValidatorRec_* %1, i32 8) #17
  br label %57

57:                                               ; preds = %56, %52
  %58 = icmp eq i64 %44, 0
  br i1 %58, label %271, label %59

59:                                               ; preds = %57
  %60 = getelementptr inbounds %struct.FT_ValidatorRec_, %struct.FT_ValidatorRec_* %1, i64 0, i32 3
  %61 = getelementptr inbounds %struct.FT_ValidatorRec_, %struct.FT_ValidatorRec_* %1, i64 1
  %62 = bitcast %struct.FT_ValidatorRec_* %61 to i32*
  br label %63

63:                                               ; preds = %268, %59
  %64 = phi i64 [ 1, %59 ], [ %124, %268 ]
  %65 = phi i64 [ 0, %59 ], [ %269, %268 ]
  %66 = phi i8* [ %3, %59 ], [ %97, %268 ]
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i64
  %69 = shl nuw nsw i64 %68, 16
  %70 = getelementptr inbounds i8, i8* %66, i64 1
  %71 = load i8, i8* %70, align 1
  %72 = zext i8 %71 to i64
  %73 = shl nuw nsw i64 %72, 8
  %74 = or i64 %73, %69
  %75 = getelementptr inbounds i8, i8* %66, i64 2
  %76 = load i8, i8* %75, align 1
  %77 = zext i8 %76 to i64
  %78 = or i64 %74, %77
  %79 = getelementptr inbounds i8, i8* %66, i64 3
  %80 = load i8, i8* %79, align 1
  %81 = zext i8 %80 to i64
  %82 = shl nuw nsw i64 %81, 24
  %83 = getelementptr inbounds i8, i8* %66, i64 4
  %84 = load i8, i8* %83, align 1
  %85 = zext i8 %84 to i64
  %86 = shl nuw nsw i64 %85, 16
  %87 = or i64 %86, %82
  %88 = getelementptr inbounds i8, i8* %66, i64 5
  %89 = load i8, i8* %88, align 1
  %90 = zext i8 %89 to i64
  %91 = shl nuw nsw i64 %90, 8
  %92 = or i64 %87, %91
  %93 = getelementptr inbounds i8, i8* %66, i64 6
  %94 = load i8, i8* %93, align 1
  %95 = zext i8 %94 to i64
  %96 = or i64 %92, %95
  %97 = getelementptr inbounds i8, i8* %66, i64 11
  %98 = getelementptr inbounds i8, i8* %66, i64 7
  %99 = load i8, i8* %98, align 1
  %100 = zext i8 %99 to i64
  %101 = shl nuw nsw i64 %100, 24
  %102 = getelementptr inbounds i8, i8* %66, i64 8
  %103 = load i8, i8* %102, align 1
  %104 = zext i8 %103 to i64
  %105 = shl nuw nsw i64 %104, 16
  %106 = or i64 %105, %101
  %107 = getelementptr inbounds i8, i8* %66, i64 9
  %108 = load i8, i8* %107, align 1
  %109 = zext i8 %108 to i64
  %110 = shl nuw nsw i64 %109, 8
  %111 = or i64 %106, %110
  %112 = getelementptr inbounds i8, i8* %66, i64 10
  %113 = load i8, i8* %112, align 1
  %114 = zext i8 %113 to i64
  %115 = or i64 %111, %114
  %116 = icmp ult i64 %96, %26
  %117 = icmp ult i64 %115, %26
  %118 = and i1 %116, %117
  br i1 %118, label %120, label %119

119:                                              ; preds = %63
  tail call void @ft_validator_error(%struct.FT_ValidatorRec_* %1, i32 8) #17
  br label %120

120:                                              ; preds = %63, %119
  %121 = icmp ult i64 %78, %64
  br i1 %121, label %122, label %123

122:                                              ; preds = %120
  tail call void @ft_validator_error(%struct.FT_ValidatorRec_* %1, i32 8) #17
  br label %123

123:                                              ; preds = %122, %120
  %124 = add nuw nsw i64 %78, 1
  %125 = icmp eq i64 %96, 0
  br i1 %125, label %190, label %126

126:                                              ; preds = %123
  %127 = getelementptr inbounds i8, i8* %18, i64 %96
  %128 = load volatile i8*, i8** %4, align 8
  %129 = icmp ugt i8* %127, %128
  br i1 %129, label %130, label %131

130:                                              ; preds = %126
  tail call void @ft_validator_error(%struct.FT_ValidatorRec_* %1, i32 8) #17
  br label %131

131:                                              ; preds = %130, %126
  %132 = getelementptr inbounds i8, i8* %127, i64 -4
  %133 = load i8, i8* %132, align 1
  %134 = zext i8 %133 to i64
  %135 = shl nuw nsw i64 %134, 24
  %136 = getelementptr inbounds i8, i8* %132, i64 1
  %137 = load i8, i8* %136, align 1
  %138 = zext i8 %137 to i64
  %139 = shl nuw nsw i64 %138, 16
  %140 = or i64 %139, %135
  %141 = getelementptr inbounds i8, i8* %132, i64 2
  %142 = load i8, i8* %141, align 1
  %143 = zext i8 %142 to i64
  %144 = shl nuw nsw i64 %143, 8
  %145 = or i64 %140, %144
  %146 = getelementptr inbounds i8, i8* %132, i64 3
  %147 = load i8, i8* %146, align 1
  %148 = zext i8 %147 to i64
  %149 = or i64 %145, %148
  %150 = load volatile i8*, i8** %4, align 8
  %151 = ptrtoint i8* %150 to i64
  %152 = ptrtoint i8* %127 to i64
  %153 = sub i64 %151, %152
  %154 = lshr i64 %153, 2
  %155 = icmp ugt i64 %149, %154
  br i1 %155, label %156, label %157

156:                                              ; preds = %131
  tail call void @ft_validator_error(%struct.FT_ValidatorRec_* %1, i32 8) #17
  br label %159

157:                                              ; preds = %131
  %158 = icmp eq i64 %149, 0
  br i1 %158, label %190, label %159

159:                                              ; preds = %156, %157
  br label %160

160:                                              ; preds = %159, %186
  %161 = phi i64 [ %187, %186 ], [ 0, %159 ]
  %162 = phi i64 [ %188, %186 ], [ 0, %159 ]
  %163 = phi i8* [ %177, %186 ], [ %127, %159 ]
  %164 = getelementptr inbounds i8, i8* %163, i64 3
  %165 = load i8, i8* %163, align 1
  %166 = zext i8 %165 to i64
  %167 = shl nuw nsw i64 %166, 16
  %168 = getelementptr inbounds i8, i8* %163, i64 1
  %169 = load i8, i8* %168, align 1
  %170 = zext i8 %169 to i64
  %171 = shl nuw nsw i64 %170, 8
  %172 = or i64 %171, %167
  %173 = getelementptr inbounds i8, i8* %163, i64 2
  %174 = load i8, i8* %173, align 1
  %175 = zext i8 %174 to i64
  %176 = or i64 %172, %175
  %177 = getelementptr inbounds i8, i8* %163, i64 4
  %178 = load i8, i8* %164, align 1
  %179 = zext i8 %178 to i64
  %180 = add nuw nsw i64 %176, %179
  %181 = icmp ugt i64 %180, 1114111
  br i1 %181, label %182, label %183

182:                                              ; preds = %160
  tail call void @ft_validator_error(%struct.FT_ValidatorRec_* %1, i32 8) #17
  br label %183

183:                                              ; preds = %182, %160
  %184 = icmp ult i64 %176, %161
  br i1 %184, label %185, label %186

185:                                              ; preds = %183
  tail call void @ft_validator_error(%struct.FT_ValidatorRec_* %1, i32 8) #17
  br label %186

186:                                              ; preds = %185, %183
  %187 = add nuw nsw i64 %180, 1
  %188 = add nuw nsw i64 %162, 1
  %189 = icmp eq i64 %188, %149
  br i1 %189, label %190, label %160

190:                                              ; preds = %186, %157, %123
  %191 = icmp eq i64 %115, 0
  br i1 %191, label %268, label %192

192:                                              ; preds = %190
  %193 = getelementptr inbounds i8, i8* %18, i64 %115
  %194 = load volatile i8*, i8** %4, align 8
  %195 = icmp ugt i8* %193, %194
  br i1 %195, label %196, label %197

196:                                              ; preds = %192
  tail call void @ft_validator_error(%struct.FT_ValidatorRec_* %1, i32 8) #17
  br label %197

197:                                              ; preds = %196, %192
  %198 = getelementptr inbounds i8, i8* %193, i64 -4
  %199 = load i8, i8* %198, align 1
  %200 = zext i8 %199 to i64
  %201 = shl nuw nsw i64 %200, 24
  %202 = getelementptr inbounds i8, i8* %198, i64 1
  %203 = load i8, i8* %202, align 1
  %204 = zext i8 %203 to i64
  %205 = shl nuw nsw i64 %204, 16
  %206 = or i64 %205, %201
  %207 = getelementptr inbounds i8, i8* %198, i64 2
  %208 = load i8, i8* %207, align 1
  %209 = zext i8 %208 to i64
  %210 = shl nuw nsw i64 %209, 8
  %211 = or i64 %206, %210
  %212 = getelementptr inbounds i8, i8* %198, i64 3
  %213 = load i8, i8* %212, align 1
  %214 = zext i8 %213 to i64
  %215 = or i64 %211, %214
  %216 = load volatile i8*, i8** %4, align 8
  %217 = ptrtoint i8* %216 to i64
  %218 = ptrtoint i8* %193 to i64
  %219 = sub i64 %217, %218
  %220 = udiv i64 %219, 5
  %221 = icmp ugt i64 %215, %220
  br i1 %221, label %222, label %223

222:                                              ; preds = %197
  tail call void @ft_validator_error(%struct.FT_ValidatorRec_* %1, i32 8) #17
  br label %225

223:                                              ; preds = %197
  %224 = icmp eq i64 %215, 0
  br i1 %224, label %268, label %225

225:                                              ; preds = %222, %223
  br label %226

226:                                              ; preds = %225, %265
  %227 = phi i64 [ %257, %265 ], [ 0, %225 ]
  %228 = phi i64 [ %266, %265 ], [ 0, %225 ]
  %229 = phi i8* [ %242, %265 ], [ %193, %225 ]
  %230 = load i8, i8* %229, align 1
  %231 = zext i8 %230 to i64
  %232 = shl nuw nsw i64 %231, 16
  %233 = getelementptr inbounds i8, i8* %229, i64 1
  %234 = load i8, i8* %233, align 1
  %235 = zext i8 %234 to i64
  %236 = shl nuw nsw i64 %235, 8
  %237 = or i64 %236, %232
  %238 = getelementptr inbounds i8, i8* %229, i64 2
  %239 = load i8, i8* %238, align 1
  %240 = zext i8 %239 to i64
  %241 = or i64 %237, %240
  %242 = getelementptr inbounds i8, i8* %229, i64 5
  %243 = getelementptr inbounds i8, i8* %229, i64 3
  %244 = load i8, i8* %243, align 1
  %245 = zext i8 %244 to i64
  %246 = shl nuw nsw i64 %245, 8
  %247 = getelementptr inbounds i8, i8* %229, i64 4
  %248 = load i8, i8* %247, align 1
  %249 = zext i8 %248 to i64
  %250 = or i64 %246, %249
  %251 = icmp ugt i64 %241, 1114111
  br i1 %251, label %252, label %253

252:                                              ; preds = %226
  tail call void @ft_validator_error(%struct.FT_ValidatorRec_* %1, i32 8) #17
  br label %253

253:                                              ; preds = %252, %226
  %254 = icmp ult i64 %241, %227
  br i1 %254, label %255, label %256

255:                                              ; preds = %253
  tail call void @ft_validator_error(%struct.FT_ValidatorRec_* %1, i32 8) #17
  br label %256

256:                                              ; preds = %255, %253
  %257 = add nuw nsw i64 %241, 1
  %258 = load volatile i32, i32* %60, align 8
  %259 = icmp eq i32 %258, 0
  br i1 %259, label %265, label %260

260:                                              ; preds = %256
  %261 = load i32, i32* %62, align 8
  %262 = zext i32 %261 to i64
  %263 = icmp ult i64 %250, %262
  br i1 %263, label %265, label %264

264:                                              ; preds = %260
  tail call void @ft_validator_error(%struct.FT_ValidatorRec_* %1, i32 16) #17
  br label %265

265:                                              ; preds = %260, %256, %264
  %266 = add nuw nsw i64 %228, 1
  %267 = icmp eq i64 %266, %215
  br i1 %267, label %268, label %226

268:                                              ; preds = %265, %223, %190
  %269 = add nuw nsw i64 %65, 1
  %270 = icmp eq i64 %269, %44
  br i1 %270, label %271, label %63

271:                                              ; preds = %268, %57
  ret i32 0
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define internal i32 @tt_cmap14_get_info(%struct.TT_CMapRec_* nocapture readnone, %struct.TT_CMapInfo_* nocapture) #1 {
  %3 = bitcast %struct.TT_CMapInfo_* %1 to <2 x i64>*
  store <2 x i64> <i64 4294967295, i64 14>, <2 x i64>* %3, align 8
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @tt_cmap_unicode_init(%struct.PS_UnicodesRec_*, i8* nocapture readnone) #0 {
  %3 = getelementptr inbounds %struct.PS_UnicodesRec_, %struct.PS_UnicodesRec_* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %3, align 8
  %5 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %4, i64 3, i32 17
  %6 = bitcast i16* %5 to %struct.FT_Service_PsCMapsRec_**
  %7 = load %struct.FT_Service_PsCMapsRec_*, %struct.FT_Service_PsCMapsRec_** %6, align 8
  %8 = getelementptr inbounds %struct.FT_Service_PsCMapsRec_, %struct.FT_Service_PsCMapsRec_* %7, i64 0, i32 1
  %9 = load i32 (%struct.FT_MemoryRec_*, %struct.PS_UnicodesRec_*, i32, i8* (i8*, i32)*, void (i8*, i8*)*, i8*)*, i32 (%struct.FT_MemoryRec_*, %struct.PS_UnicodesRec_*, i32, i8* (i8*, i32)*, void (i8*, i8*)*, i8*)** %8, align 8
  %10 = icmp eq i32 (%struct.FT_MemoryRec_*, %struct.PS_UnicodesRec_*, i32, i8* (i8*, i32)*, void (i8*, i8*)*, i8*)* %9, null
  br i1 %10, label %19, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %4, i64 0, i32 25
  %13 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %12, align 8
  %14 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %4, i64 0, i32 4
  %15 = load i64, i64* %14, align 8
  %16 = trunc i64 %15 to i32
  %17 = bitcast %struct.FT_FaceRec_* %4 to i8*
  %18 = tail call i32 %9(%struct.FT_MemoryRec_* %13, %struct.PS_UnicodesRec_* %0, i32 %16, i8* (i8*, i32)* bitcast (i8* (%struct.TT_FaceRec_*, i32)* @tt_get_glyph_name to i8* (i8*, i32)*), void (i8*, i8*)* null, i8* %17) #17
  br label %19

19:                                               ; preds = %2, %11
  %20 = phi i32 [ %18, %11 ], [ 7, %2 ]
  ret i32 %20
}

; Function Attrs: nounwind ssp uwtable
define internal void @tt_cmap_unicode_done(%struct.PS_UnicodesRec_* nocapture) #0 {
  %2 = getelementptr inbounds %struct.PS_UnicodesRec_, %struct.PS_UnicodesRec_* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %2, align 8
  %4 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %3, i64 0, i32 25
  %5 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %4, align 8
  %6 = getelementptr inbounds %struct.PS_UnicodesRec_, %struct.PS_UnicodesRec_* %0, i64 0, i32 2
  %7 = bitcast %struct.PS_UniMap_** %6 to i8**
  %8 = load i8*, i8** %7, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %5, i8* %8) #17
  store %struct.PS_UniMap_* null, %struct.PS_UniMap_** %6, align 8
  %9 = getelementptr inbounds %struct.PS_UnicodesRec_, %struct.PS_UnicodesRec_* %0, i64 0, i32 1
  store i32 0, i32* %9, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @tt_cmap_unicode_char_index(%struct.PS_UnicodesRec_*, i32) #0 {
  %3 = bitcast %struct.PS_UnicodesRec_* %0 to %struct.TT_FaceRec_**
  %4 = load %struct.TT_FaceRec_*, %struct.TT_FaceRec_** %3, align 8
  %5 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %4, i64 0, i32 23
  %6 = bitcast i8** %5 to %struct.FT_Service_PsCMapsRec_**
  %7 = load %struct.FT_Service_PsCMapsRec_*, %struct.FT_Service_PsCMapsRec_** %6, align 8
  %8 = getelementptr inbounds %struct.FT_Service_PsCMapsRec_, %struct.FT_Service_PsCMapsRec_* %7, i64 0, i32 2
  %9 = load i32 (%struct.PS_UnicodesRec_*, i32)*, i32 (%struct.PS_UnicodesRec_*, i32)** %8, align 8
  %10 = tail call i32 %9(%struct.PS_UnicodesRec_* %0, i32 %1) #17
  ret i32 %10
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @tt_cmap_unicode_char_next(%struct.PS_UnicodesRec_*, i32*) #0 {
  %3 = bitcast %struct.PS_UnicodesRec_* %0 to %struct.TT_FaceRec_**
  %4 = load %struct.TT_FaceRec_*, %struct.TT_FaceRec_** %3, align 8
  %5 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %4, i64 0, i32 23
  %6 = bitcast i8** %5 to %struct.FT_Service_PsCMapsRec_**
  %7 = load %struct.FT_Service_PsCMapsRec_*, %struct.FT_Service_PsCMapsRec_** %6, align 8
  %8 = getelementptr inbounds %struct.FT_Service_PsCMapsRec_, %struct.FT_Service_PsCMapsRec_* %7, i64 0, i32 3
  %9 = load i32 (%struct.PS_UnicodesRec_*, i32*)*, i32 (%struct.PS_UnicodesRec_*, i32*)** %8, align 8
  %10 = tail call i32 %9(%struct.PS_UnicodesRec_* %0, i32* %1) #17
  ret i32 %10
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @tt_face_goto_table(%struct.TT_FaceRec_* nocapture readonly, i64, %struct.FT_StreamRec_*, i64*) #0 {
  %5 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 4
  %6 = load %struct.TT_TableRec_*, %struct.TT_TableRec_** %5, align 8
  %7 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 3
  %8 = load i16, i16* %7, align 8
  %9 = zext i16 %8 to i64
  %10 = getelementptr inbounds %struct.TT_TableRec_, %struct.TT_TableRec_* %6, i64 %9
  %11 = icmp eq i16 %8, 0
  br i1 %11, label %33, label %12

12:                                               ; preds = %4, %21
  %13 = phi %struct.TT_TableRec_* [ %22, %21 ], [ %6, %4 ]
  %14 = getelementptr inbounds %struct.TT_TableRec_, %struct.TT_TableRec_* %13, i64 0, i32 0
  %15 = load i64, i64* %14, align 8
  %16 = icmp eq i64 %15, %1
  br i1 %16, label %17, label %21

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.TT_TableRec_, %struct.TT_TableRec_* %13, i64 0, i32 3
  %19 = load i64, i64* %18, align 8
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %21, label %24

21:                                               ; preds = %17, %12
  %22 = getelementptr inbounds %struct.TT_TableRec_, %struct.TT_TableRec_* %13, i64 1
  %23 = icmp ult %struct.TT_TableRec_* %22, %10
  br i1 %23, label %12, label %33

24:                                               ; preds = %17
  %25 = icmp eq %struct.TT_TableRec_* %13, null
  br i1 %25, label %33, label %26

26:                                               ; preds = %24
  %27 = icmp eq i64* %3, null
  br i1 %27, label %29, label %28

28:                                               ; preds = %26
  store i64 %19, i64* %3, align 8
  br label %29

29:                                               ; preds = %26, %28
  %30 = getelementptr inbounds %struct.TT_TableRec_, %struct.TT_TableRec_* %13, i64 0, i32 2
  %31 = load i64, i64* %30, align 8
  %32 = tail call i32 @FT_Stream_Seek(%struct.FT_StreamRec_* %2, i64 %31) #17
  br label %33

33:                                               ; preds = %21, %4, %24, %29
  %34 = phi i32 [ %32, %29 ], [ 142, %24 ], [ 142, %4 ], [ 142, %21 ]
  ret i32 %34
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @sfnt_init_face(%struct.FT_StreamRec_*, %struct.TT_FaceRec_*, i32, i32, %struct.FT_Parameter_* nocapture readnone) #0 {
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  store i32 %2, i32* %6, align 4
  %10 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #17
  store i32 -1431655766, i32* %7, align 4
  %11 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %1, i64 0, i32 0, i32 24
  %12 = load %struct.FT_DriverRec_*, %struct.FT_DriverRec_** %11, align 8
  %13 = getelementptr inbounds %struct.FT_DriverRec_, %struct.FT_DriverRec_* %12, i64 0, i32 0, i32 1
  %14 = load %struct.FT_LibraryRec_*, %struct.FT_LibraryRec_** %13, align 8
  %15 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #17
  store i64 0, i64* %8, align 8
  %16 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %1, i64 0, i32 22
  %17 = bitcast i8** %16 to %struct.SFNT_Interface_**
  %18 = load %struct.SFNT_Interface_*, %struct.SFNT_Interface_** %17, align 8
  %19 = icmp eq %struct.SFNT_Interface_* %18, null
  br i1 %19, label %22, label %20

20:                                               ; preds = %5
  %21 = getelementptr inbounds %struct.FT_DriverRec_, %struct.FT_DriverRec_* %12, i64 0, i32 0
  br label %33

22:                                               ; preds = %5
  %23 = tail call i8* @FT_Get_Module_Interface(%struct.FT_LibraryRec_* %14, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #17
  %24 = icmp eq i8* %23, null
  br i1 %24, label %257, label %25

25:                                               ; preds = %22
  %26 = bitcast i8* %23 to %struct.SFNT_Interface_*
  store i8* %23, i8** %16, align 8
  %27 = bitcast i8* %23 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %1, i64 0, i32 16
  %30 = bitcast {}** %29 to i64*
  store i64 %28, i64* %30, align 8
  %31 = bitcast %struct.FT_DriverRec_** %11 to %struct.FT_ModuleRec_**
  %32 = load %struct.FT_ModuleRec_*, %struct.FT_ModuleRec_** %31, align 8
  br label %33

33:                                               ; preds = %20, %25
  %34 = phi %struct.FT_ModuleRec_* [ %21, %20 ], [ %32, %25 ]
  %35 = phi %struct.SFNT_Interface_* [ %18, %20 ], [ %26, %25 ]
  %36 = tail call i8* @ft_module_get_service(%struct.FT_ModuleRec_* %34, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1, i64 0, i64 0), i8 zeroext 1) #17
  %37 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %1, i64 0, i32 23
  store i8* %36, i8** %37, align 8
  %38 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %1, i64 0, i32 24
  %39 = load i8*, i8** %38, align 8
  %40 = icmp eq i8* %39, null
  br i1 %40, label %41, label %44

41:                                               ; preds = %33
  %42 = tail call %struct.FT_ModuleRec_* @FT_Get_Module(%struct.FT_LibraryRec_* %14, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0)) #17
  %43 = tail call i8* @ft_module_get_service(%struct.FT_ModuleRec_* %42, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3, i64 0, i64 0), i8 zeroext 0) #17
  store i8* %43, i8** %38, align 8
  br label %44

44:                                               ; preds = %33, %41
  %45 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %1, i64 0, i32 25
  %46 = load i8*, i8** %45, align 8
  %47 = icmp eq i8* %46, null
  br i1 %47, label %48, label %51

48:                                               ; preds = %44
  %49 = tail call %struct.FT_ModuleRec_* @FT_Get_Module(%struct.FT_LibraryRec_* %14, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0)) #17
  %50 = tail call i8* @ft_module_get_service(%struct.FT_ModuleRec_* %49, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.4, i64 0, i64 0), i8 zeroext 0) #17
  store i8* %50, i8** %45, align 8
  br label %51

51:                                               ; preds = %44, %48
  %52 = call fastcc i32 @sfnt_open_font(%struct.FT_StreamRec_* %0, %struct.TT_FaceRec_* %1, i32* nonnull %6, i64* nonnull %8)
  store i32 %52, i32* %7, align 4
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %257

54:                                               ; preds = %51
  %55 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %1, i64 0, i32 0, i32 26
  %56 = load %struct.FT_StreamRec_*, %struct.FT_StreamRec_** %55, align 8
  %57 = load i32, i32* %6, align 4
  %58 = icmp slt i32 %57, 0
  %59 = sub nsw i32 0, %57
  %60 = select i1 %58, i32 %59, i32 %57
  %61 = and i32 %60, 65535
  %62 = ashr i32 %57, 31
  %63 = add nsw i32 %61, %62
  %64 = sext i32 %63 to i64
  %65 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %1, i64 0, i32 1, i32 2
  %66 = load i64, i64* %65, align 8
  %67 = icmp sgt i64 %66, %64
  br i1 %67, label %70, label %68

68:                                               ; preds = %54
  %69 = icmp sgt i32 %57, -1
  br i1 %69, label %257, label %70

70:                                               ; preds = %68, %54
  %71 = phi i32 [ %63, %54 ], [ 0, %68 ]
  %72 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %1, i64 0, i32 1, i32 3
  %73 = load i64*, i64** %72, align 8
  %74 = sext i32 %71 to i64
  %75 = getelementptr inbounds i64, i64* %73, i64 %74
  %76 = load i64, i64* %75, align 8
  %77 = tail call i32 @FT_Stream_Seek(%struct.FT_StreamRec_* %56, i64 %76) #17
  store i32 %77, i32* %7, align 4
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %257

79:                                               ; preds = %70
  %80 = getelementptr inbounds %struct.SFNT_Interface_, %struct.SFNT_Interface_* %35, i64 0, i32 22
  %81 = load i32 (%struct.TT_FaceRec_*, %struct.FT_StreamRec_*)*, i32 (%struct.TT_FaceRec_*, %struct.FT_StreamRec_*)** %80, align 8
  %82 = tail call i32 %81(%struct.TT_FaceRec_* %1, %struct.FT_StreamRec_* %56) #17
  store i32 %82, i32* %7, align 4
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %257

84:                                               ; preds = %79
  %85 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %1, i64 0, i32 0, i32 25
  %86 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %85, align 8
  %87 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %87) #17
  store i64 -6148914691236517206, i64* %9, align 8
  %88 = lshr i32 %60, 16
  %89 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %1, i64 0, i32 16
  %90 = bitcast {}** %89 to i32 (%struct.TT_FaceRec_*, i64, %struct.FT_StreamRec_*, i64*)**
  %91 = load i32 (%struct.TT_FaceRec_*, i64, %struct.FT_StreamRec_*, i64*)*, i32 (%struct.TT_FaceRec_*, i64, %struct.FT_StreamRec_*, i64*)** %90, align 8
  %92 = call i32 %91(%struct.TT_FaceRec_* %1, i64 1719034226, %struct.FT_StreamRec_* %56, i64* nonnull %9) #17
  %93 = icmp ne i32 %92, 0
  %94 = load i64, i64* %9, align 8
  %95 = icmp ult i64 %94, 20
  %96 = or i1 %93, %95
  br i1 %96, label %157, label %97

97:                                               ; preds = %84
  %98 = call i64 @FT_Stream_ReadULong(%struct.FT_StreamRec_* %56, i32* nonnull %7) #17
  %99 = load i32, i32* %7, align 4
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %157

101:                                              ; preds = %97
  %102 = call zeroext i16 @FT_Stream_ReadUShort(%struct.FT_StreamRec_* %56, i32* nonnull %7) #17
  %103 = zext i16 %102 to i64
  %104 = load i32, i32* %7, align 4
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %106, label %157

106:                                              ; preds = %101
  %107 = call i32 @FT_Stream_Skip(%struct.FT_StreamRec_* %56, i64 2) #17
  store i32 %107, i32* %7, align 4
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %109, label %157

109:                                              ; preds = %106
  %110 = call zeroext i16 @FT_Stream_ReadUShort(%struct.FT_StreamRec_* %56, i32* nonnull %7) #17
  %111 = load i32, i32* %7, align 4
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %113, label %157

113:                                              ; preds = %109
  %114 = call zeroext i16 @FT_Stream_ReadUShort(%struct.FT_StreamRec_* %56, i32* nonnull %7) #17
  %115 = load i32, i32* %7, align 4
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %157

117:                                              ; preds = %113
  %118 = call zeroext i16 @FT_Stream_ReadUShort(%struct.FT_StreamRec_* %56, i32* nonnull %7) #17
  %119 = load i32, i32* %7, align 4
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %121, label %157

121:                                              ; preds = %117
  %122 = call zeroext i16 @FT_Stream_ReadUShort(%struct.FT_StreamRec_* %56, i32* nonnull %7) #17
  %123 = load i32, i32* %7, align 4
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %125, label %157

125:                                              ; preds = %121
  %126 = icmp eq i64 %98, 65536
  %127 = icmp eq i16 %114, 20
  %128 = and i1 %126, %127
  br i1 %128, label %129, label %157

129:                                              ; preds = %125
  %130 = zext i16 %110 to i32
  %131 = add i16 %110, -1
  %132 = icmp ugt i16 %131, 16381
  br i1 %132, label %157, label %133

133:                                              ; preds = %129
  %134 = zext i16 %122 to i32
  %135 = shl nuw nsw i32 %130, 2
  %136 = add nuw nsw i32 %135, 4
  %137 = icmp ne i32 %136, %134
  %138 = add nuw nsw i32 %135, 6
  %139 = icmp ne i32 %138, %134
  %140 = and i1 %139, %137
  %141 = icmp ugt i16 %118, 32511
  %142 = or i1 %141, %140
  br i1 %142, label %157, label %143

143:                                              ; preds = %133
  %144 = zext i16 %118 to i32
  %145 = mul nuw nsw i32 %130, 20
  %146 = zext i32 %145 to i64
  %147 = add nuw nsw i64 %146, %103
  %148 = mul nuw nsw i32 %134, %144
  %149 = zext i32 %148 to i64
  %150 = add nuw nsw i64 %147, %149
  %151 = load i64, i64* %9, align 8
  %152 = icmp ugt i64 %150, %151
  br i1 %152, label %157, label %153

153:                                              ; preds = %143
  %154 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %1, i64 0, i32 51
  %155 = load i32, i32* %154, align 8
  %156 = or i32 %155, 1
  store i32 %156, i32* %154, align 8
  br label %157

157:                                              ; preds = %121, %117, %113, %109, %106, %101, %97, %84, %129, %143, %125, %133, %153
  %158 = phi i16 [ %122, %153 ], [ %122, %133 ], [ %122, %125 ], [ %122, %143 ], [ %122, %129 ], [ 0, %84 ], [ 0, %97 ], [ 0, %101 ], [ 0, %106 ], [ 0, %109 ], [ 0, %113 ], [ 0, %117 ], [ 0, %121 ]
  %159 = phi i16 [ 20, %153 ], [ 20, %133 ], [ %114, %125 ], [ 20, %143 ], [ 20, %129 ], [ 0, %84 ], [ 0, %97 ], [ 0, %101 ], [ 0, %106 ], [ 0, %109 ], [ 0, %113 ], [ 0, %117 ], [ 0, %121 ]
  %160 = phi i16 [ %110, %153 ], [ %110, %133 ], [ %110, %125 ], [ %110, %143 ], [ %110, %129 ], [ 0, %84 ], [ 0, %97 ], [ 0, %101 ], [ 0, %106 ], [ 0, %109 ], [ 0, %113 ], [ 0, %117 ], [ 0, %121 ]
  %161 = phi i64 [ %103, %153 ], [ %103, %133 ], [ %103, %125 ], [ %103, %143 ], [ %103, %129 ], [ 0, %84 ], [ 0, %97 ], [ 0, %101 ], [ 0, %106 ], [ 0, %109 ], [ 0, %113 ], [ 0, %117 ], [ 0, %121 ]
  %162 = phi i16 [ %118, %153 ], [ 0, %133 ], [ 0, %125 ], [ 0, %143 ], [ 0, %129 ], [ 0, %84 ], [ 0, %97 ], [ 0, %101 ], [ 0, %106 ], [ 0, %109 ], [ 0, %113 ], [ 0, %117 ], [ 0, %121 ]
  %163 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %1, i64 0, i32 51
  %164 = load i32, i32* %163, align 8
  %165 = and i32 %164, 1
  %166 = icmp eq i32 %165, 0
  br i1 %166, label %220, label %167

167:                                              ; preds = %157
  %168 = zext i16 %160 to i32
  %169 = shl nuw nsw i32 %168, 2
  %170 = zext i32 %169 to i64
  %171 = call i8* @ft_mem_qalloc(%struct.FT_MemoryRec_* %86, i64 %170, i32* nonnull %7) #17
  %172 = load i32, i32* %7, align 4
  %173 = icmp eq i32 %172, 0
  br i1 %173, label %174, label %220

174:                                              ; preds = %167
  %175 = call i8* @ft_mem_qalloc(%struct.FT_MemoryRec_* %86, i64 %170, i32* nonnull %7) #17
  %176 = load i32, i32* %7, align 4
  %177 = icmp eq i32 %176, 0
  br i1 %177, label %178, label %220

178:                                              ; preds = %174
  %179 = call i64 @FT_Stream_Pos(%struct.FT_StreamRec_* %56) #17
  %180 = add nsw i64 %161, -16
  %181 = add i64 %180, %179
  %182 = icmp eq i16 %160, 0
  br i1 %182, label %195, label %183

183:                                              ; preds = %178
  %184 = add i64 %181, 8
  %185 = zext i16 %159 to i64
  br label %186

186:                                              ; preds = %186, %183
  %187 = phi i32 [ 0, %183 ], [ %193, %186 ]
  %188 = phi i8* [ %171, %183 ], [ %192, %186 ]
  %189 = phi i64 [ %184, %183 ], [ %191, %186 ]
  %190 = call i32 @FT_Stream_ReadAt(%struct.FT_StreamRec_* %56, i64 %189, i8* %188, i64 4) #17
  store i32 %190, i32* %7, align 4
  %191 = add i64 %189, %185
  %192 = getelementptr inbounds i8, i8* %188, i64 4
  %193 = add nuw nsw i32 %187, 1
  %194 = icmp eq i32 %193, %168
  br i1 %194, label %195, label %186

195:                                              ; preds = %186, %178
  %196 = zext i16 %162 to i32
  %197 = icmp eq i16 %162, 0
  br i1 %197, label %215, label %198

198:                                              ; preds = %195
  %199 = zext i16 %159 to i32
  %200 = mul nuw nsw i32 %168, %199
  %201 = add nuw i32 %200, 4
  %202 = zext i32 %201 to i64
  %203 = add i64 %181, %202
  %204 = zext i16 %158 to i64
  br label %205

205:                                              ; preds = %211, %198
  %206 = phi i32 [ 0, %198 ], [ %213, %211 ]
  %207 = phi i64 [ %203, %198 ], [ %212, %211 ]
  %208 = call i32 @FT_Stream_ReadAt(%struct.FT_StreamRec_* %56, i64 %207, i8* %175, i64 %170) #17
  store i32 %208, i32* %7, align 4
  %209 = call i32 @bcmp(i8* %171, i8* %175, i64 %170)
  %210 = icmp eq i32 %209, 0
  br i1 %210, label %215, label %211

211:                                              ; preds = %205
  %212 = add i64 %207, %204
  %213 = add nuw nsw i32 %206, 1
  %214 = icmp eq i32 %213, %196
  br i1 %214, label %215, label %205

215:                                              ; preds = %205, %211, %195
  %216 = phi i32 [ 0, %195 ], [ %206, %205 ], [ %196, %211 ]
  %217 = icmp eq i32 %216, %196
  %218 = zext i1 %217 to i16
  %219 = add i16 %162, %218
  br label %220

220:                                              ; preds = %174, %167, %157, %215
  %221 = phi i16 [ %162, %167 ], [ %162, %174 ], [ %219, %215 ], [ %162, %157 ]
  %222 = phi i8* [ %171, %167 ], [ %171, %174 ], [ %171, %215 ], [ null, %157 ]
  %223 = phi i8* [ null, %167 ], [ %175, %174 ], [ %175, %215 ], [ null, %157 ]
  call void @ft_mem_free(%struct.FT_MemoryRec_* %86, i8* %222) #17
  call void @ft_mem_free(%struct.FT_MemoryRec_* %86, i8* %223) #17
  %224 = load i32 (%struct.TT_FaceRec_*, i64, %struct.FT_StreamRec_*, i64*)*, i32 (%struct.TT_FaceRec_*, i64, %struct.FT_StreamRec_*, i64*)** %90, align 8
  %225 = call i32 %224(%struct.TT_FaceRec_* %1, i64 1735162214, %struct.FT_StreamRec_* %56, i64* null) #17
  %226 = icmp eq i32 %225, 0
  br i1 %226, label %236, label %227

227:                                              ; preds = %220
  %228 = load i32 (%struct.TT_FaceRec_*, i64, %struct.FT_StreamRec_*, i64*)*, i32 (%struct.TT_FaceRec_*, i64, %struct.FT_StreamRec_*, i64*)** %90, align 8
  %229 = call i32 %228(%struct.TT_FaceRec_* %1, i64 1128678962, %struct.FT_StreamRec_* %56, i64* null) #17
  %230 = icmp eq i32 %229, 0
  br i1 %230, label %236, label %231

231:                                              ; preds = %227
  %232 = load i32 (%struct.TT_FaceRec_*, i64, %struct.FT_StreamRec_*, i64*)*, i32 (%struct.TT_FaceRec_*, i64, %struct.FT_StreamRec_*, i64*)** %90, align 8
  %233 = call i32 %232(%struct.TT_FaceRec_* %1, i64 1128678944, %struct.FT_StreamRec_* %56, i64* null) #17
  %234 = icmp eq i32 %233, 0
  %235 = select i1 %234, i16 0, i16 %221
  br label %236

236:                                              ; preds = %231, %227, %220
  %237 = phi i16 [ %221, %227 ], [ %221, %220 ], [ %235, %231 ]
  %238 = zext i16 %237 to i32
  %239 = icmp ugt i32 %88, %238
  br i1 %239, label %240, label %242

240:                                              ; preds = %236
  %241 = icmp sgt i32 %57, -1
  br i1 %241, label %253, label %242

242:                                              ; preds = %240, %236
  %243 = phi i16 [ %237, %236 ], [ 0, %240 ]
  %244 = zext i16 %243 to i64
  %245 = shl nuw nsw i64 %244, 16
  %246 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %1, i64 0, i32 0, i32 3
  store i64 %245, i64* %246, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %87) #17
  %247 = load i64, i64* %65, align 8
  %248 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %1, i64 0, i32 0, i32 0
  store i64 %247, i64* %248, align 8
  %249 = sext i32 %57 to i64
  %250 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %1, i64 0, i32 0, i32 1
  store i64 %249, i64* %250, align 8
  %251 = load i64, i64* %8, align 8
  %252 = icmp eq i64 %251, 0
  br i1 %252, label %255, label %254

253:                                              ; preds = %240
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %87) #17
  br label %257

254:                                              ; preds = %242
  store i64 %251, i64* %248, align 8
  br label %255

255:                                              ; preds = %242, %254
  %256 = load i32, i32* %7, align 4
  br label %257

257:                                              ; preds = %253, %79, %70, %68, %51, %22, %255
  %258 = phi i32 [ %256, %255 ], [ 6, %253 ], [ 11, %22 ], [ %52, %51 ], [ 6, %68 ], [ %77, %70 ], [ %82, %79 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #17
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #17
  ret i32 %258
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @sfnt_load_face(%struct.FT_StreamRec_*, %struct.TT_FaceRec_*, i32, i32, %struct.FT_Parameter_* nocapture readonly) #0 {
  %6 = alloca i32, align 4
  %7 = alloca %struct.FT_CharMapRec_, align 8
  %8 = alloca %struct.FT_Size_Metrics_, align 8
  %9 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #17
  store i32 -1431655766, i32* %6, align 4
  %10 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %1, i64 0, i32 22
  %11 = bitcast i8** %10 to %struct.SFNT_Interface_**
  %12 = load %struct.SFNT_Interface_*, %struct.SFNT_Interface_** %11, align 8
  %13 = icmp sgt i32 %3, 0
  br i1 %13, label %14, label %58

14:                                               ; preds = %5
  %15 = zext i32 %3 to i64
  %16 = add nsw i64 %15, -1
  %17 = and i64 %15, 3
  %18 = icmp ult i64 %16, 3
  br i1 %18, label %36, label %19

19:                                               ; preds = %14
  %20 = sub nsw i64 %15, %17
  br label %21

21:                                               ; preds = %757, %19
  %22 = phi i64 [ 0, %19 ], [ %760, %757 ]
  %23 = phi i8 [ 0, %19 ], [ %759, %757 ]
  %24 = phi i8 [ 0, %19 ], [ %758, %757 ]
  %25 = phi i64 [ %20, %19 ], [ %761, %757 ]
  %26 = getelementptr inbounds %struct.FT_Parameter_, %struct.FT_Parameter_* %4, i64 %22, i32 0
  %27 = load i64, i64* %26, align 8
  switch i64 %27, label %29 [
    i64 1768386662, label %30
    i64 1768386675, label %28
  ]

28:                                               ; preds = %21
  br label %30

29:                                               ; preds = %21
  br label %30

30:                                               ; preds = %21, %29, %28
  %31 = phi i8 [ %24, %28 ], [ 1, %21 ], [ %24, %29 ]
  %32 = phi i8 [ 1, %28 ], [ %23, %21 ], [ %23, %29 ]
  %33 = or i64 %22, 1
  %34 = getelementptr inbounds %struct.FT_Parameter_, %struct.FT_Parameter_* %4, i64 %33, i32 0
  %35 = load i64, i64* %34, align 8
  switch i64 %35, label %740 [
    i64 1768386662, label %741
    i64 1768386675, label %739
  ]

36:                                               ; preds = %757, %14
  %37 = phi i8 [ undef, %14 ], [ %758, %757 ]
  %38 = phi i8 [ undef, %14 ], [ %759, %757 ]
  %39 = phi i64 [ 0, %14 ], [ %760, %757 ]
  %40 = phi i8 [ 0, %14 ], [ %759, %757 ]
  %41 = phi i8 [ 0, %14 ], [ %758, %757 ]
  %42 = icmp eq i64 %17, 0
  br i1 %42, label %58, label %43

43:                                               ; preds = %36, %52
  %44 = phi i64 [ %55, %52 ], [ %39, %36 ]
  %45 = phi i8 [ %54, %52 ], [ %40, %36 ]
  %46 = phi i8 [ %53, %52 ], [ %41, %36 ]
  %47 = phi i64 [ %56, %52 ], [ %17, %36 ]
  %48 = getelementptr inbounds %struct.FT_Parameter_, %struct.FT_Parameter_* %4, i64 %44, i32 0
  %49 = load i64, i64* %48, align 8
  switch i64 %49, label %51 [
    i64 1768386662, label %52
    i64 1768386675, label %50
  ]

50:                                               ; preds = %43
  br label %52

51:                                               ; preds = %43
  br label %52

52:                                               ; preds = %51, %50, %43
  %53 = phi i8 [ %46, %50 ], [ 1, %43 ], [ %46, %51 ]
  %54 = phi i8 [ 1, %50 ], [ %45, %43 ], [ %45, %51 ]
  %55 = add nuw nsw i64 %44, 1
  %56 = add i64 %47, -1
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %58, label %43, !llvm.loop !19

58:                                               ; preds = %36, %52, %5
  %59 = phi i8 [ 0, %5 ], [ %37, %36 ], [ %53, %52 ]
  %60 = phi i8 [ 0, %5 ], [ %38, %36 ], [ %54, %52 ]
  %61 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %1, i64 0, i32 0
  %62 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %1, i64 0, i32 0, i32 30
  %63 = load %struct.FT_Face_InternalRec_*, %struct.FT_Face_InternalRec_** %62, align 8
  %64 = getelementptr inbounds %struct.FT_Face_InternalRec_, %struct.FT_Face_InternalRec_* %63, i64 0, i32 4
  %65 = load %struct.FT_Incremental_InterfaceRec_*, %struct.FT_Incremental_InterfaceRec_** %64, align 8
  %66 = icmp eq %struct.FT_Incremental_InterfaceRec_* %65, null
  br i1 %66, label %67, label %120

67:                                               ; preds = %58
  %68 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %1, i64 0, i32 4
  %69 = load %struct.TT_TableRec_*, %struct.TT_TableRec_** %68, align 8
  %70 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %1, i64 0, i32 3
  %71 = load i16, i16* %70, align 8
  %72 = zext i16 %71 to i64
  %73 = getelementptr inbounds %struct.TT_TableRec_, %struct.TT_TableRec_* %69, i64 %72
  %74 = icmp eq i16 %71, 0
  br i1 %74, label %117, label %75

75:                                               ; preds = %67, %84
  %76 = phi %struct.TT_TableRec_* [ %85, %84 ], [ %69, %67 ]
  %77 = getelementptr inbounds %struct.TT_TableRec_, %struct.TT_TableRec_* %76, i64 0, i32 0
  %78 = load i64, i64* %77, align 8
  %79 = icmp eq i64 %78, 1735162214
  br i1 %79, label %80, label %84

80:                                               ; preds = %75
  %81 = getelementptr inbounds %struct.TT_TableRec_, %struct.TT_TableRec_* %76, i64 0, i32 3
  %82 = load i64, i64* %81, align 8
  %83 = icmp eq i64 %82, 0
  br i1 %83, label %84, label %87

84:                                               ; preds = %80, %75
  %85 = getelementptr inbounds %struct.TT_TableRec_, %struct.TT_TableRec_* %76, i64 1
  %86 = icmp ult %struct.TT_TableRec_* %85, %73
  br i1 %86, label %75, label %89

87:                                               ; preds = %80
  %88 = icmp eq %struct.TT_TableRec_* %76, null
  br i1 %88, label %89, label %120

89:                                               ; preds = %84, %87
  br label %90

90:                                               ; preds = %89, %99
  %91 = phi %struct.TT_TableRec_* [ %100, %99 ], [ %69, %89 ]
  %92 = getelementptr inbounds %struct.TT_TableRec_, %struct.TT_TableRec_* %91, i64 0, i32 0
  %93 = load i64, i64* %92, align 8
  %94 = icmp eq i64 %93, 1128678944
  br i1 %94, label %95, label %99

95:                                               ; preds = %90
  %96 = getelementptr inbounds %struct.TT_TableRec_, %struct.TT_TableRec_* %91, i64 0, i32 3
  %97 = load i64, i64* %96, align 8
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %99, label %102

99:                                               ; preds = %95, %90
  %100 = getelementptr inbounds %struct.TT_TableRec_, %struct.TT_TableRec_* %91, i64 1
  %101 = icmp ult %struct.TT_TableRec_* %100, %73
  br i1 %101, label %90, label %104

102:                                              ; preds = %95
  %103 = icmp eq %struct.TT_TableRec_* %91, null
  br i1 %103, label %104, label %120

104:                                              ; preds = %99, %102
  br label %105

105:                                              ; preds = %104, %114
  %106 = phi %struct.TT_TableRec_* [ %115, %114 ], [ %69, %104 ]
  %107 = getelementptr inbounds %struct.TT_TableRec_, %struct.TT_TableRec_* %106, i64 0, i32 0
  %108 = load i64, i64* %107, align 8
  %109 = icmp eq i64 %108, 1128678962
  br i1 %109, label %110, label %114

110:                                              ; preds = %105
  %111 = getelementptr inbounds %struct.TT_TableRec_, %struct.TT_TableRec_* %106, i64 0, i32 3
  %112 = load i64, i64* %111, align 8
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %114, label %117

114:                                              ; preds = %110, %105
  %115 = getelementptr inbounds %struct.TT_TableRec_, %struct.TT_TableRec_* %106, i64 1
  %116 = icmp ult %struct.TT_TableRec_* %115, %73
  br i1 %116, label %105, label %117

117:                                              ; preds = %110, %114, %67
  %118 = phi %struct.TT_TableRec_* [ null, %67 ], [ %106, %110 ], [ null, %114 ]
  %119 = icmp ne %struct.TT_TableRec_* %118, null
  br label %120

120:                                              ; preds = %102, %87, %58, %117
  %121 = phi i1 [ true, %102 ], [ true, %87 ], [ true, %58 ], [ %119, %117 ]
  %122 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %1, i64 0, i32 16
  %123 = bitcast {}** %122 to i32 (%struct.TT_FaceRec_*, i64, %struct.FT_StreamRec_*, i64*)**
  %124 = load i32 (%struct.TT_FaceRec_*, i64, %struct.FT_StreamRec_*, i64*)*, i32 (%struct.TT_FaceRec_*, i64, %struct.FT_StreamRec_*, i64*)** %123, align 8
  %125 = tail call i32 %124(%struct.TT_FaceRec_* %1, i64 1935829368, %struct.FT_StreamRec_* %0, i64* null) #17
  %126 = icmp eq i32 %125, 0
  %127 = xor i1 %126, true
  %128 = and i1 %121, %127
  br i1 %128, label %138, label %129

129:                                              ; preds = %120
  %130 = getelementptr inbounds %struct.SFNT_Interface_, %struct.SFNT_Interface_* %12, i64 0, i32 17
  %131 = load i32 (%struct.TT_FaceRec_*, %struct.FT_StreamRec_*)*, i32 (%struct.TT_FaceRec_*, %struct.FT_StreamRec_*)** %130, align 8
  %132 = icmp eq i32 (%struct.TT_FaceRec_*, %struct.FT_StreamRec_*)* %131, null
  br i1 %132, label %138, label %133

133:                                              ; preds = %129
  %134 = tail call i32 %131(%struct.TT_FaceRec_* %1, %struct.FT_StreamRec_* %0) #17
  store i32 %134, i32* %6, align 4
  %135 = icmp eq i32 %134, 0
  %136 = xor i1 %135, true
  %137 = or i1 %126, %136
  br i1 %137, label %138, label %144

138:                                              ; preds = %120, %129, %133
  %139 = phi i1 [ %135, %133 ], [ false, %120 ], [ false, %129 ]
  %140 = getelementptr inbounds %struct.SFNT_Interface_, %struct.SFNT_Interface_* %12, i64 0, i32 6
  %141 = load i32 (%struct.TT_FaceRec_*, %struct.FT_StreamRec_*)*, i32 (%struct.TT_FaceRec_*, %struct.FT_StreamRec_*)** %140, align 8
  %142 = tail call i32 %141(%struct.TT_FaceRec_* %1, %struct.FT_StreamRec_* %0) #17
  store i32 %142, i32* %6, align 4
  %143 = icmp eq i32 %142, 0
  br i1 %143, label %144, label %737

144:                                              ; preds = %133, %138
  %145 = phi i1 [ %135, %133 ], [ %139, %138 ]
  %146 = load i32 (%struct.TT_FaceRec_*, i64, %struct.FT_StreamRec_*, i64*)*, i32 (%struct.TT_FaceRec_*, i64, %struct.FT_StreamRec_*, i64*)** %123, align 8
  %147 = tail call i32 %146(%struct.TT_FaceRec_* %1, i64 1128418371, %struct.FT_StreamRec_* %0, i64* null) #17
  %148 = icmp ne i32 %147, 0
  %149 = load i32 (%struct.TT_FaceRec_*, i64, %struct.FT_StreamRec_*, i64*)*, i32 (%struct.TT_FaceRec_*, i64, %struct.FT_StreamRec_*, i64*)** %123, align 8
  %150 = tail call i32 %149(%struct.TT_FaceRec_* %1, i64 1128416340, %struct.FT_StreamRec_* %0, i64* null) #17
  %151 = icmp ne i32 %150, 0
  %152 = and i1 %148, %151
  %153 = and i1 %128, %152
  %154 = zext i1 %153 to i8
  %155 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %1, i64 0, i32 5, i32 5
  %156 = load i16, i16* %155, align 2
  %157 = add i16 %156, -16
  %158 = icmp ugt i16 %157, 16368
  br i1 %158, label %159, label %160

159:                                              ; preds = %144
  store i32 8, i32* %6, align 4
  br label %737

160:                                              ; preds = %144
  %161 = getelementptr inbounds %struct.SFNT_Interface_, %struct.SFNT_Interface_* %12, i64 0, i32 9
  %162 = load i32 (%struct.TT_FaceRec_*, %struct.FT_StreamRec_*)*, i32 (%struct.TT_FaceRec_*, %struct.FT_StreamRec_*)** %161, align 8
  %163 = tail call i32 %162(%struct.TT_FaceRec_* %1, %struct.FT_StreamRec_* %0) #17
  %164 = getelementptr inbounds %struct.SFNT_Interface_, %struct.SFNT_Interface_* %12, i64 0, i32 8
  %165 = load i32 (%struct.TT_FaceRec_*, %struct.FT_StreamRec_*)*, i32 (%struct.TT_FaceRec_*, %struct.FT_StreamRec_*)** %164, align 8
  %166 = tail call i32 %165(%struct.TT_FaceRec_* %1, %struct.FT_StreamRec_* %0) #17
  %167 = getelementptr inbounds %struct.SFNT_Interface_, %struct.SFNT_Interface_* %12, i64 0, i32 12
  %168 = load i32 (%struct.TT_FaceRec_*, %struct.FT_StreamRec_*)*, i32 (%struct.TT_FaceRec_*, %struct.FT_StreamRec_*)** %167, align 8
  %169 = tail call i32 %168(%struct.TT_FaceRec_* %1, %struct.FT_StreamRec_* %0) #17
  %170 = getelementptr inbounds %struct.SFNT_Interface_, %struct.SFNT_Interface_* %12, i64 0, i32 11
  %171 = load i32 (%struct.TT_FaceRec_*, %struct.FT_StreamRec_*)*, i32 (%struct.TT_FaceRec_*, %struct.FT_StreamRec_*)** %170, align 8
  %172 = tail call i32 %171(%struct.TT_FaceRec_* %1, %struct.FT_StreamRec_* %0) #17
  store i32 %172, i32* %6, align 4
  br i1 %145, label %245, label %173

173:                                              ; preds = %160
  %174 = getelementptr inbounds %struct.SFNT_Interface_, %struct.SFNT_Interface_* %12, i64 0, i32 7
  %175 = load i32 (%struct.TT_FaceRec_*, %struct.FT_StreamRec_*, i8)*, i32 (%struct.TT_FaceRec_*, %struct.FT_StreamRec_*, i8)** %174, align 8
  %176 = tail call i32 %175(%struct.TT_FaceRec_* %1, %struct.FT_StreamRec_* %0, i8 zeroext 0) #17
  store i32 %176, i32* %6, align 4
  %177 = icmp eq i32 %176, 0
  br i1 %177, label %178, label %197

178:                                              ; preds = %173
  %179 = getelementptr inbounds %struct.SFNT_Interface_, %struct.SFNT_Interface_* %12, i64 0, i32 23
  %180 = load i32 (%struct.TT_FaceRec_*, %struct.FT_StreamRec_*, i8)*, i32 (%struct.TT_FaceRec_*, %struct.FT_StreamRec_*, i8)** %179, align 8
  %181 = tail call i32 %180(%struct.TT_FaceRec_* %1, %struct.FT_StreamRec_* %0, i8 zeroext 0) #17
  store i32 %181, i32* %6, align 4
  %182 = and i32 %181, 255
  %183 = icmp eq i32 %182, 142
  br i1 %183, label %184, label %218

184:                                              ; preds = %178
  store i32 147, i32* %6, align 4
  %185 = load %struct.FT_Face_InternalRec_*, %struct.FT_Face_InternalRec_** %62, align 8
  %186 = getelementptr inbounds %struct.FT_Face_InternalRec_, %struct.FT_Face_InternalRec_* %185, i64 0, i32 4
  %187 = load %struct.FT_Incremental_InterfaceRec_*, %struct.FT_Incremental_InterfaceRec_** %186, align 8
  %188 = icmp eq %struct.FT_Incremental_InterfaceRec_* %187, null
  br i1 %188, label %737, label %189

189:                                              ; preds = %184
  %190 = getelementptr inbounds %struct.FT_Incremental_InterfaceRec_, %struct.FT_Incremental_InterfaceRec_* %187, i64 0, i32 0
  %191 = load %struct.FT_Incremental_FuncsRec_*, %struct.FT_Incremental_FuncsRec_** %190, align 8
  %192 = getelementptr inbounds %struct.FT_Incremental_FuncsRec_, %struct.FT_Incremental_FuncsRec_* %191, i64 0, i32 2
  %193 = load i32 (%struct.FT_IncrementalRec_*, i32, i8, %struct.FT_Incremental_MetricsRec_*)*, i32 (%struct.FT_IncrementalRec_*, i32, i8, %struct.FT_Incremental_MetricsRec_*)** %192, align 8
  %194 = icmp eq i32 (%struct.FT_IncrementalRec_*, i32, i8, %struct.FT_Incremental_MetricsRec_*)* %193, null
  br i1 %194, label %737, label %195

195:                                              ; preds = %189
  %196 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %1, i64 0, i32 6, i32 13
  store i16 0, i16* %196, align 2
  store i32 0, i32* %6, align 4
  br label %220

197:                                              ; preds = %173
  %198 = and i32 %176, 255
  %199 = icmp eq i32 %198, 142
  br i1 %199, label %200, label %737

200:                                              ; preds = %197
  %201 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %1, i64 0, i32 2
  %202 = load i64, i64* %201, align 8
  %203 = icmp eq i64 %202, 1953658213
  br i1 %203, label %204, label %205

204:                                              ; preds = %200
  store i32 0, i32* %6, align 4
  br label %220

205:                                              ; preds = %200
  store i32 143, i32* %6, align 4
  %206 = load %struct.FT_Face_InternalRec_*, %struct.FT_Face_InternalRec_** %62, align 8
  %207 = getelementptr inbounds %struct.FT_Face_InternalRec_, %struct.FT_Face_InternalRec_* %206, i64 0, i32 4
  %208 = load %struct.FT_Incremental_InterfaceRec_*, %struct.FT_Incremental_InterfaceRec_** %207, align 8
  %209 = icmp eq %struct.FT_Incremental_InterfaceRec_* %208, null
  br i1 %209, label %737, label %210

210:                                              ; preds = %205
  %211 = getelementptr inbounds %struct.FT_Incremental_InterfaceRec_, %struct.FT_Incremental_InterfaceRec_* %208, i64 0, i32 0
  %212 = load %struct.FT_Incremental_FuncsRec_*, %struct.FT_Incremental_FuncsRec_** %211, align 8
  %213 = getelementptr inbounds %struct.FT_Incremental_FuncsRec_, %struct.FT_Incremental_FuncsRec_* %212, i64 0, i32 2
  %214 = load i32 (%struct.FT_IncrementalRec_*, i32, i8, %struct.FT_Incremental_MetricsRec_*)*, i32 (%struct.FT_IncrementalRec_*, i32, i8, %struct.FT_Incremental_MetricsRec_*)** %213, align 8
  %215 = icmp eq i32 (%struct.FT_IncrementalRec_*, i32, i8, %struct.FT_Incremental_MetricsRec_*)* %214, null
  br i1 %215, label %737, label %216

216:                                              ; preds = %210
  %217 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %1, i64 0, i32 6, i32 13
  store i16 0, i16* %217, align 2
  store i32 0, i32* %6, align 4
  br label %220

218:                                              ; preds = %178
  %219 = icmp eq i32 %181, 0
  br i1 %219, label %220, label %737

220:                                              ; preds = %195, %204, %216, %218
  %221 = phi i8 [ %154, %218 ], [ %154, %195 ], [ %154, %216 ], [ 0, %204 ]
  %222 = load i32 (%struct.TT_FaceRec_*, %struct.FT_StreamRec_*, i8)*, i32 (%struct.TT_FaceRec_*, %struct.FT_StreamRec_*, i8)** %174, align 8
  %223 = tail call i32 %222(%struct.TT_FaceRec_* %1, %struct.FT_StreamRec_* %0, i8 zeroext 1) #17
  store i32 %223, i32* %6, align 4
  %224 = icmp eq i32 %223, 0
  br i1 %224, label %225, label %232

225:                                              ; preds = %220
  %226 = getelementptr inbounds %struct.SFNT_Interface_, %struct.SFNT_Interface_* %12, i64 0, i32 23
  %227 = load i32 (%struct.TT_FaceRec_*, %struct.FT_StreamRec_*, i8)*, i32 (%struct.TT_FaceRec_*, %struct.FT_StreamRec_*, i8)** %226, align 8
  %228 = tail call i32 %227(%struct.TT_FaceRec_* %1, %struct.FT_StreamRec_* %0, i8 zeroext 1) #17
  store i32 %228, i32* %6, align 4
  %229 = icmp eq i32 %228, 0
  br i1 %229, label %230, label %232

230:                                              ; preds = %225
  %231 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %1, i64 0, i32 8
  store i8 1, i8* %231, align 8
  br label %238

232:                                              ; preds = %225, %220
  %233 = phi i32 [ %228, %225 ], [ %223, %220 ]
  %234 = icmp eq i32 %233, 0
  %235 = and i32 %233, 255
  %236 = icmp eq i32 %235, 142
  %237 = or i1 %234, %236
  br i1 %237, label %238, label %737

238:                                              ; preds = %230, %232
  %239 = getelementptr inbounds %struct.SFNT_Interface_, %struct.SFNT_Interface_* %12, i64 0, i32 10
  %240 = load i32 (%struct.TT_FaceRec_*, %struct.FT_StreamRec_*)*, i32 (%struct.TT_FaceRec_*, %struct.FT_StreamRec_*)** %239, align 8
  %241 = tail call i32 %240(%struct.TT_FaceRec_* %1, %struct.FT_StreamRec_* %0) #17
  store i32 %241, i32* %6, align 4
  %242 = icmp eq i32 %241, 0
  br i1 %242, label %245, label %243

243:                                              ; preds = %238
  %244 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %1, i64 0, i32 12, i32 0
  store i16 -1, i16* %244, align 8
  br label %245

245:                                              ; preds = %238, %243, %160
  %246 = phi i8 [ %154, %160 ], [ %221, %243 ], [ %221, %238 ]
  %247 = getelementptr inbounds %struct.SFNT_Interface_, %struct.SFNT_Interface_* %12, i64 0, i32 24
  %248 = load i32 (%struct.TT_FaceRec_*, %struct.FT_StreamRec_*)*, i32 (%struct.TT_FaceRec_*, %struct.FT_StreamRec_*)** %247, align 8
  %249 = icmp eq i32 (%struct.TT_FaceRec_*, %struct.FT_StreamRec_*)* %248, null
  br i1 %249, label %252, label %250

250:                                              ; preds = %245
  %251 = tail call i32 %248(%struct.TT_FaceRec_* %1, %struct.FT_StreamRec_* %0) #17
  store i32 %251, i32* %6, align 4
  br label %252

252:                                              ; preds = %245, %250
  %253 = getelementptr inbounds %struct.SFNT_Interface_, %struct.SFNT_Interface_* %12, i64 0, i32 28
  %254 = load i32 (%struct.TT_FaceRec_*, %struct.FT_StreamRec_*)*, i32 (%struct.TT_FaceRec_*, %struct.FT_StreamRec_*)** %253, align 8
  %255 = icmp eq i32 (%struct.TT_FaceRec_*, %struct.FT_StreamRec_*)* %254, null
  br i1 %255, label %261, label %256

256:                                              ; preds = %252
  %257 = tail call i32 %254(%struct.TT_FaceRec_* %1, %struct.FT_StreamRec_* %0) #17
  %258 = getelementptr inbounds %struct.SFNT_Interface_, %struct.SFNT_Interface_* %12, i64 0, i32 29
  %259 = load i32 (%struct.TT_FaceRec_*, %struct.FT_StreamRec_*)*, i32 (%struct.TT_FaceRec_*, %struct.FT_StreamRec_*)** %258, align 8
  %260 = tail call i32 %259(%struct.TT_FaceRec_* %1, %struct.FT_StreamRec_* %0) #17
  store i32 %260, i32* %6, align 4
  br label %261

261:                                              ; preds = %252, %256
  %262 = getelementptr inbounds %struct.SFNT_Interface_, %struct.SFNT_Interface_* %12, i64 0, i32 16
  %263 = load i32 (%struct.TT_FaceRec_*, %struct.FT_StreamRec_*)*, i32 (%struct.TT_FaceRec_*, %struct.FT_StreamRec_*)** %262, align 8
  %264 = tail call i32 %263(%struct.TT_FaceRec_* %1, %struct.FT_StreamRec_* %0) #17
  %265 = getelementptr inbounds %struct.SFNT_Interface_, %struct.SFNT_Interface_* %12, i64 0, i32 15
  %266 = load i32 (%struct.TT_FaceRec_*, %struct.FT_StreamRec_*)*, i32 (%struct.TT_FaceRec_*, %struct.FT_StreamRec_*)** %265, align 8
  %267 = tail call i32 %266(%struct.TT_FaceRec_* %1, %struct.FT_StreamRec_* %0) #17
  %268 = getelementptr inbounds %struct.SFNT_Interface_, %struct.SFNT_Interface_* %12, i64 0, i32 14
  %269 = load i32 (%struct.TT_FaceRec_*, %struct.FT_StreamRec_*)*, i32 (%struct.TT_FaceRec_*, %struct.FT_StreamRec_*)** %268, align 8
  %270 = tail call i32 %269(%struct.TT_FaceRec_* %1, %struct.FT_StreamRec_* %0) #17
  store i32 %270, i32* %6, align 4
  %271 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %1, i64 0, i32 7, i32 1
  %272 = load i16, i16* %271, align 8
  %273 = zext i16 %272 to i64
  %274 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %1, i64 0, i32 0, i32 4
  store i64 %273, i64* %274, align 8
  %275 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %1, i64 0, i32 0, i32 5
  %276 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %1, i64 0, i32 0, i32 6
  %277 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %1, i64 0, i32 12, i32 0
  %278 = bitcast i8** %275 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %278, i8 0, i64 16, i1 false)
  %279 = load i16, i16* %277, align 8
  %280 = icmp eq i16 %279, -1
  br i1 %280, label %308, label %281

281:                                              ; preds = %261
  %282 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %1, i64 0, i32 12, i32 22
  %283 = load i16, i16* %282, align 4
  %284 = and i16 %283, 256
  %285 = icmp eq i16 %284, 0
  br i1 %285, label %308, label %286

286:                                              ; preds = %281
  %287 = icmp eq i8 %59, 0
  br i1 %287, label %288, label %294

288:                                              ; preds = %286
  %289 = tail call i32 @tt_face_get_name(%struct.TT_FaceRec_* %1, i16 zeroext 16, i8** %275)
  store i32 %289, i32* %6, align 4
  %290 = icmp eq i32 %289, 0
  br i1 %290, label %291, label %737

291:                                              ; preds = %288
  %292 = load i8*, i8** %275, align 8
  %293 = icmp eq i8* %292, null
  br i1 %293, label %294, label %297

294:                                              ; preds = %286, %291
  %295 = tail call i32 @tt_face_get_name(%struct.TT_FaceRec_* %1, i16 zeroext 1, i8** %275)
  store i32 %295, i32* %6, align 4
  %296 = icmp eq i32 %295, 0
  br i1 %296, label %297, label %737

297:                                              ; preds = %294, %291
  %298 = icmp eq i8 %60, 0
  br i1 %298, label %299, label %302

299:                                              ; preds = %297
  %300 = tail call i32 @tt_face_get_name(%struct.TT_FaceRec_* %1, i16 zeroext 17, i8** %276)
  store i32 %300, i32* %6, align 4
  %301 = icmp eq i32 %300, 0
  br i1 %301, label %302, label %737

302:                                              ; preds = %299, %297
  %303 = load i8*, i8** %276, align 8
  %304 = icmp eq i8* %303, null
  br i1 %304, label %305, label %346

305:                                              ; preds = %302
  %306 = tail call i32 @tt_face_get_name(%struct.TT_FaceRec_* %1, i16 zeroext 2, i8** %276)
  store i32 %306, i32* %6, align 4
  %307 = icmp eq i32 %306, 0
  br i1 %307, label %346, label %737

308:                                              ; preds = %281, %261
  %309 = tail call i32 @tt_face_get_name(%struct.TT_FaceRec_* %1, i16 zeroext 21, i8** %275)
  store i32 %309, i32* %6, align 4
  %310 = icmp eq i32 %309, 0
  br i1 %310, label %311, label %737

311:                                              ; preds = %308
  %312 = load i8*, i8** %275, align 8
  %313 = icmp ne i8* %312, null
  %314 = icmp ne i8 %59, 0
  %315 = or i1 %314, %313
  br i1 %315, label %321, label %316

316:                                              ; preds = %311
  %317 = tail call i32 @tt_face_get_name(%struct.TT_FaceRec_* %1, i16 zeroext 16, i8** %275)
  store i32 %317, i32* %6, align 4
  %318 = icmp eq i32 %317, 0
  br i1 %318, label %319, label %737

319:                                              ; preds = %316
  %320 = load i8*, i8** %275, align 8
  br label %321

321:                                              ; preds = %319, %311
  %322 = phi i8* [ %320, %319 ], [ %312, %311 ]
  %323 = icmp eq i8* %322, null
  br i1 %323, label %324, label %327

324:                                              ; preds = %321
  %325 = tail call i32 @tt_face_get_name(%struct.TT_FaceRec_* %1, i16 zeroext 1, i8** %275)
  store i32 %325, i32* %6, align 4
  %326 = icmp eq i32 %325, 0
  br i1 %326, label %327, label %737

327:                                              ; preds = %324, %321
  %328 = tail call i32 @tt_face_get_name(%struct.TT_FaceRec_* %1, i16 zeroext 22, i8** %276)
  store i32 %328, i32* %6, align 4
  %329 = icmp eq i32 %328, 0
  br i1 %329, label %330, label %737

330:                                              ; preds = %327
  %331 = load i8*, i8** %276, align 8
  %332 = icmp ne i8* %331, null
  %333 = icmp ne i8 %60, 0
  %334 = or i1 %333, %332
  br i1 %334, label %340, label %335

335:                                              ; preds = %330
  %336 = tail call i32 @tt_face_get_name(%struct.TT_FaceRec_* %1, i16 zeroext 17, i8** %276)
  store i32 %336, i32* %6, align 4
  %337 = icmp eq i32 %336, 0
  br i1 %337, label %338, label %737

338:                                              ; preds = %335
  %339 = load i8*, i8** %276, align 8
  br label %340

340:                                              ; preds = %338, %330
  %341 = phi i8* [ %339, %338 ], [ %331, %330 ]
  %342 = icmp eq i8* %341, null
  br i1 %342, label %343, label %346

343:                                              ; preds = %340
  %344 = tail call i32 @tt_face_get_name(%struct.TT_FaceRec_* %1, i16 zeroext 2, i8** %276)
  store i32 %344, i32* %6, align 4
  %345 = icmp eq i32 %344, 0
  br i1 %345, label %346, label %737

346:                                              ; preds = %305, %302, %343, %340
  %347 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %1, i64 0, i32 0, i32 2
  %348 = load i64, i64* %347, align 8
  %349 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %1, i64 0, i32 65
  %350 = load i32, i32* %349, align 8
  %351 = and i32 %350, -2
  %352 = icmp eq i32 %351, 2
  br i1 %352, label %357, label %353

353:                                              ; preds = %346
  %354 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %1, i64 0, i32 78
  %355 = load i8*, i8** %354, align 8
  %356 = icmp eq i8* %355, null
  br i1 %356, label %359, label %357

357:                                              ; preds = %346, %353
  %358 = or i64 %348, 16384
  br label %359

359:                                              ; preds = %353, %357
  %360 = phi i64 [ %358, %357 ], [ %348, %353 ]
  %361 = icmp eq i8 %246, 1
  %362 = zext i1 %361 to i64
  %363 = or i64 %360, %362
  %364 = or i64 %363, 24
  %365 = icmp eq i32 %172, 0
  br i1 %365, label %366, label %372

366:                                              ; preds = %359
  %367 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %1, i64 0, i32 13, i32 0
  %368 = load i64, i64* %367, align 8
  %369 = icmp eq i64 %368, 196608
  %370 = or i64 %363, 536
  %371 = select i1 %369, i64 %364, i64 %370
  br label %372

372:                                              ; preds = %366, %359
  %373 = phi i64 [ %364, %359 ], [ %371, %366 ]
  %374 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %1, i64 0, i32 13, i32 4
  %375 = load i64, i64* %374, align 8
  %376 = icmp eq i64 %375, 0
  %377 = or i64 %373, 4
  %378 = select i1 %376, i64 %373, i64 %377
  %379 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %1, i64 0, i32 8
  %380 = load i8, i8* %379, align 8
  %381 = icmp eq i8 %380, 0
  %382 = or i64 %378, 32
  %383 = select i1 %381, i64 %378, i64 %382
  %384 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %1, i64 0, i32 71
  %385 = load i32, i32* %384, align 4
  %386 = icmp eq i32 %385, 0
  %387 = or i64 %383, 64
  %388 = select i1 %386, i64 %383, i64 %387
  %389 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %1, i64 0, i32 51
  %390 = load i32, i32* %389, align 8
  %391 = and i32 %390, 1
  %392 = icmp eq i32 %391, 0
  br i1 %392, label %452, label %393

393:                                              ; preds = %372
  %394 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %1, i64 0, i32 4
  %395 = load %struct.TT_TableRec_*, %struct.TT_TableRec_** %394, align 8
  %396 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %1, i64 0, i32 3
  %397 = load i16, i16* %396, align 8
  %398 = zext i16 %397 to i64
  %399 = getelementptr inbounds %struct.TT_TableRec_, %struct.TT_TableRec_* %395, i64 %398
  %400 = icmp eq i16 %397, 0
  br i1 %400, label %446, label %401

401:                                              ; preds = %393, %410
  %402 = phi %struct.TT_TableRec_* [ %411, %410 ], [ %395, %393 ]
  %403 = getelementptr inbounds %struct.TT_TableRec_, %struct.TT_TableRec_* %402, i64 0, i32 0
  %404 = load i64, i64* %403, align 8
  %405 = icmp eq i64 %404, 1735162214
  br i1 %405, label %406, label %410

406:                                              ; preds = %401
  %407 = getelementptr inbounds %struct.TT_TableRec_, %struct.TT_TableRec_* %402, i64 0, i32 3
  %408 = load i64, i64* %407, align 8
  %409 = icmp eq i64 %408, 0
  br i1 %409, label %410, label %413

410:                                              ; preds = %406, %401
  %411 = getelementptr inbounds %struct.TT_TableRec_, %struct.TT_TableRec_* %402, i64 1
  %412 = icmp ult %struct.TT_TableRec_* %411, %399
  br i1 %412, label %401, label %432

413:                                              ; preds = %406
  %414 = icmp eq %struct.TT_TableRec_* %402, null
  br i1 %414, label %432, label %415

415:                                              ; preds = %413, %424
  %416 = phi %struct.TT_TableRec_* [ %425, %424 ], [ %395, %413 ]
  %417 = getelementptr inbounds %struct.TT_TableRec_, %struct.TT_TableRec_* %416, i64 0, i32 0
  %418 = load i64, i64* %417, align 8
  %419 = icmp eq i64 %418, 1735811442
  br i1 %419, label %420, label %424

420:                                              ; preds = %415
  %421 = getelementptr inbounds %struct.TT_TableRec_, %struct.TT_TableRec_* %416, i64 0, i32 3
  %422 = load i64, i64* %421, align 8
  %423 = icmp eq i64 %422, 0
  br i1 %423, label %424, label %427

424:                                              ; preds = %420, %415
  %425 = getelementptr inbounds %struct.TT_TableRec_, %struct.TT_TableRec_* %416, i64 1
  %426 = icmp ult %struct.TT_TableRec_* %425, %399
  br i1 %426, label %415, label %427

427:                                              ; preds = %420, %424
  %428 = phi %struct.TT_TableRec_* [ null, %424 ], [ %416, %420 ]
  %429 = icmp eq %struct.TT_TableRec_* %428, null
  %430 = or i64 %388, 256
  %431 = select i1 %429, i64 %388, i64 %430
  br label %432

432:                                              ; preds = %410, %413, %427
  %433 = phi i64 [ %388, %413 ], [ %431, %427 ], [ %388, %410 ]
  br label %434

434:                                              ; preds = %432, %443
  %435 = phi %struct.TT_TableRec_* [ %444, %443 ], [ %395, %432 ]
  %436 = getelementptr inbounds %struct.TT_TableRec_, %struct.TT_TableRec_* %435, i64 0, i32 0
  %437 = load i64, i64* %436, align 8
  %438 = icmp eq i64 %437, 1128678962
  br i1 %438, label %439, label %443

439:                                              ; preds = %434
  %440 = getelementptr inbounds %struct.TT_TableRec_, %struct.TT_TableRec_* %435, i64 0, i32 3
  %441 = load i64, i64* %440, align 8
  %442 = icmp eq i64 %441, 0
  br i1 %442, label %443, label %446

443:                                              ; preds = %439, %434
  %444 = getelementptr inbounds %struct.TT_TableRec_, %struct.TT_TableRec_* %435, i64 1
  %445 = icmp ult %struct.TT_TableRec_* %444, %399
  br i1 %445, label %434, label %446

446:                                              ; preds = %439, %443, %393
  %447 = phi i64 [ %388, %393 ], [ %433, %443 ], [ %433, %439 ]
  %448 = phi %struct.TT_TableRec_* [ null, %393 ], [ %435, %439 ], [ null, %443 ]
  %449 = icmp eq %struct.TT_TableRec_* %448, null
  %450 = or i64 %447, 256
  %451 = select i1 %449, i64 %447, i64 %450
  br label %452

452:                                              ; preds = %446, %372
  %453 = phi i64 [ %388, %372 ], [ %451, %446 ]
  store i64 %453, i64* %347, align 8
  br i1 %361, label %454, label %467

454:                                              ; preds = %452
  %455 = load i16, i16* %277, align 8
  %456 = icmp eq i16 %455, -1
  br i1 %456, label %467, label %457

457:                                              ; preds = %454
  %458 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %1, i64 0, i32 12, i32 22
  %459 = load i16, i16* %458, align 4
  %460 = and i16 %459, 513
  %461 = icmp ne i16 %460, 0
  %462 = zext i1 %461 to i64
  %463 = lshr i16 %459, 4
  %464 = and i16 %463, 2
  %465 = zext i16 %464 to i64
  %466 = or i64 %462, %465
  br label %476

467:                                              ; preds = %454, %452
  %468 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %1, i64 0, i32 5, i32 12
  %469 = load i16, i16* %468, align 8
  %470 = shl i16 %469, 1
  %471 = and i16 %470, 2
  %472 = lshr i16 %469, 1
  %473 = and i16 %472, 1
  %474 = or i16 %473, %471
  %475 = zext i16 %474 to i64
  br label %476

476:                                              ; preds = %467, %457
  %477 = phi i64 [ %466, %457 ], [ %475, %467 ]
  %478 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %1, i64 0, i32 0, i32 3
  %479 = load i64, i64* %478, align 8
  %480 = or i64 %479, %477
  store i64 %480, i64* %478, align 8
  tail call fastcc void @tt_face_build_cmaps(%struct.TT_FaceRec_* %1)
  %481 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %1, i64 0, i32 0, i32 9
  %482 = load i32, i32* %481, align 8
  %483 = icmp sgt i32 %482, 0
  br i1 %483, label %484, label %525

484:                                              ; preds = %476
  %485 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %1, i64 0, i32 0, i32 10
  br label %486

486:                                              ; preds = %484, %517
  %487 = phi i64 [ 0, %484 ], [ %519, %517 ]
  %488 = phi i8 [ 0, %484 ], [ %518, %517 ]
  %489 = load %struct.FT_CharMapRec_**, %struct.FT_CharMapRec_*** %485, align 8
  %490 = getelementptr inbounds %struct.FT_CharMapRec_*, %struct.FT_CharMapRec_** %489, i64 %487
  %491 = load %struct.FT_CharMapRec_*, %struct.FT_CharMapRec_** %490, align 8
  %492 = getelementptr inbounds %struct.FT_CharMapRec_, %struct.FT_CharMapRec_* %491, i64 0, i32 2
  %493 = load i16, i16* %492, align 4
  %494 = getelementptr inbounds %struct.FT_CharMapRec_, %struct.FT_CharMapRec_* %491, i64 0, i32 3
  %495 = load i16, i16* %494, align 2
  switch i16 %493, label %501 [
    i16 2, label %511
    i16 0, label %496
    i16 1, label %497
    i16 3, label %499
  ]

496:                                              ; preds = %486
  br label %511

497:                                              ; preds = %486
  %498 = icmp eq i16 %495, 0
  br i1 %498, label %511, label %501

499:                                              ; preds = %486
  %500 = icmp ult i16 %495, 11
  br i1 %500, label %503, label %501

501:                                              ; preds = %503, %499, %497, %486
  %502 = getelementptr inbounds %struct.FT_CharMapRec_, %struct.FT_CharMapRec_* %491, i64 0, i32 1
  store i32 0, i32* %502, align 8
  br label %517

503:                                              ; preds = %499
  %504 = lshr i16 1151, %495
  %505 = and i16 %504, 1
  %506 = icmp eq i16 %505, 0
  br i1 %506, label %501, label %507

507:                                              ; preds = %503
  %508 = sext i16 %495 to i64
  %509 = getelementptr inbounds [11 x %struct.TEncoding_*], [11 x %struct.TEncoding_*]* @switch.table.sfnt_load_face, i64 0, i64 %508
  %510 = load %struct.TEncoding_*, %struct.TEncoding_** %509, align 8
  br label %511

511:                                              ; preds = %507, %486, %496, %497
  %512 = phi %struct.TEncoding_* [ getelementptr inbounds ([11 x %struct.TEncoding_], [11 x %struct.TEncoding_]* @sfnt_find_encoding.tt_encodings, i64 0, i64 2), %497 ], [ getelementptr inbounds ([11 x %struct.TEncoding_], [11 x %struct.TEncoding_]* @sfnt_find_encoding.tt_encodings, i64 0, i64 0), %486 ], [ getelementptr inbounds ([11 x %struct.TEncoding_], [11 x %struct.TEncoding_]* @sfnt_find_encoding.tt_encodings, i64 0, i64 1), %496 ], [ %510, %507 ]
  %513 = getelementptr inbounds %struct.TEncoding_, %struct.TEncoding_* %512, i64 0, i32 2
  %514 = load i32, i32* %513, align 4
  %515 = getelementptr inbounds %struct.FT_CharMapRec_, %struct.FT_CharMapRec_* %491, i64 0, i32 1
  store i32 %514, i32* %515, align 8
  switch i32 %514, label %517 [
    i32 1970170211, label %516
    i32 1937337698, label %516
  ]

516:                                              ; preds = %511, %511
  br label %517

517:                                              ; preds = %501, %511, %516
  %518 = phi i8 [ 1, %516 ], [ %488, %511 ], [ %488, %501 ]
  %519 = add nuw nsw i64 %487, 1
  %520 = load i32, i32* %481, align 8
  %521 = sext i32 %520 to i64
  %522 = icmp slt i64 %519, %521
  br i1 %522, label %486, label %523

523:                                              ; preds = %517
  %524 = icmp eq i8 %518, 0
  br i1 %524, label %525, label %541

525:                                              ; preds = %476, %523
  %526 = load i64, i64* %347, align 8
  %527 = and i64 %526, 512
  %528 = icmp eq i64 %527, 0
  br i1 %528, label %541, label %529

529:                                              ; preds = %525
  %530 = bitcast %struct.FT_CharMapRec_* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %530) #17
  %531 = getelementptr inbounds %struct.FT_CharMapRec_, %struct.FT_CharMapRec_* %7, i64 0, i32 0
  %532 = getelementptr inbounds %struct.FT_CharMapRec_, %struct.FT_CharMapRec_* %7, i64 0, i32 1
  %533 = getelementptr inbounds %struct.FT_CharMapRec_, %struct.FT_CharMapRec_* %7, i64 0, i32 2
  %534 = getelementptr inbounds %struct.FT_CharMapRec_, %struct.FT_CharMapRec_* %7, i64 0, i32 3
  store %struct.FT_FaceRec_* %61, %struct.FT_FaceRec_** %531, align 8
  store i16 3, i16* %533, align 4
  store i16 1, i16* %534, align 2
  store i32 1970170211, i32* %532, align 8
  %535 = call i32 @FT_CMap_New(%struct.FT_CMap_ClassRec_* bitcast ({ { i64, i32 (%struct.FT_CMapRec_*, i8*)*, void (%struct.FT_CMapRec_*)*, i32 (%struct.FT_CMapRec_*, i32)*, i32 (%struct.FT_CMapRec_*, i32*)*, i32 (%struct.FT_CMapRec_*, %struct.FT_CMapRec_*, i32, i32)*, i32 (%struct.FT_CMapRec_*, i32, i32)*, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*)*, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*, i32)*, i32* (%struct.FT_CMapRec_*, %struct.FT_MemoryRec_*, i32)* }, i32, i32 (i8*, %struct.FT_ValidatorRec_*)*, i32 (%struct.FT_CharMapRec_*, %struct.TT_CMapInfo_*)* }* @tt_cmap_unicode_class_rec to %struct.FT_CMap_ClassRec_*), i8* null, %struct.FT_CharMapRec_* nonnull %7, %struct.FT_CMapRec_** null) #17
  store i32 %535, i32* %6, align 4
  %536 = icmp eq i32 %535, 0
  br i1 %536, label %539, label %537

537:                                              ; preds = %529
  %538 = trunc i32 %535 to i8
  switch i8 %538, label %540 [
    i8 -93, label %539
    i8 7, label %539
  ]

539:                                              ; preds = %529, %537, %537
  store i32 0, i32* %6, align 4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %530) #17
  br label %541

540:                                              ; preds = %537
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %530) #17
  br label %737

541:                                              ; preds = %539, %525, %523
  %542 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %1, i64 0, i32 66
  %543 = load i32, i32* %542, align 4
  %544 = icmp eq i32 %543, 0
  br i1 %544, label %636, label %545

545:                                              ; preds = %541
  %546 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %1, i64 0, i32 0, i32 26
  %547 = load %struct.FT_StreamRec_*, %struct.FT_StreamRec_** %546, align 8
  %548 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %547, i64 0, i32 7
  %549 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %548, align 8
  %550 = load i16, i16* %155, align 2
  %551 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %1, i64 0, i32 12, i32 1
  %552 = load i16, i16* %551, align 2
  %553 = bitcast %struct.FT_Size_Metrics_* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %553) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %553, i8 -86, i64 56, i1 false)
  %554 = icmp eq i16 %550, 0
  br i1 %554, label %558, label %555

555:                                              ; preds = %545
  %556 = load i16, i16* %277, align 8
  %557 = icmp eq i16 %556, -1
  br i1 %557, label %558, label %559

558:                                              ; preds = %555, %545
  br label %559

559:                                              ; preds = %558, %555
  %560 = phi i16 [ 1, %558 ], [ %550, %555 ]
  %561 = phi i16 [ 1, %558 ], [ %552, %555 ]
  %562 = zext i32 %543 to i64
  %563 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %549, i64 32, i64 0, i64 %562, i8* null, i32* nonnull %6) #17
  %564 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %1, i64 0, i32 0, i32 8
  %565 = bitcast %struct.FT_Bitmap_Size_** %564 to i8**
  store i8* %563, i8** %565, align 8
  %566 = load i32, i32* %6, align 4
  %567 = icmp eq i32 %566, 0
  br i1 %567, label %568, label %635

568:                                              ; preds = %559
  %569 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %549, i64 4, i64 0, i64 %562, i8* null, i32* nonnull %6) #17
  %570 = bitcast i8* %569 to i32*
  %571 = load i32, i32* %6, align 4
  %572 = icmp eq i32 %571, 0
  br i1 %572, label %573, label %635

573:                                              ; preds = %568
  %574 = getelementptr inbounds %struct.SFNT_Interface_, %struct.SFNT_Interface_* %12, i64 0, i32 27
  %575 = getelementptr inbounds %struct.FT_Size_Metrics_, %struct.FT_Size_Metrics_* %8, i64 0, i32 6
  %576 = sext i16 %561 to i32
  %577 = getelementptr inbounds %struct.FT_Size_Metrics_, %struct.FT_Size_Metrics_* %8, i64 0, i32 0
  %578 = zext i16 %560 to i32
  %579 = lshr i32 %578, 1
  %580 = getelementptr inbounds %struct.FT_Size_Metrics_, %struct.FT_Size_Metrics_* %8, i64 0, i32 1
  br label %581

581:                                              ; preds = %620, %573
  %582 = phi i64 [ 0, %573 ], [ %622, %620 ]
  %583 = phi i32 [ 0, %573 ], [ %621, %620 ]
  %584 = load %struct.FT_Bitmap_Size_*, %struct.FT_Bitmap_Size_** %564, align 8
  %585 = zext i32 %583 to i64
  %586 = load i32 (%struct.TT_FaceRec_*, i64, %struct.FT_Size_Metrics_*)*, i32 (%struct.TT_FaceRec_*, i64, %struct.FT_Size_Metrics_*)** %574, align 8
  %587 = call i32 %586(%struct.TT_FaceRec_* %1, i64 %582, %struct.FT_Size_Metrics_* nonnull %8) #17
  store i32 %587, i32* %6, align 4
  %588 = icmp eq i32 %587, 0
  br i1 %588, label %589, label %620

589:                                              ; preds = %581
  %590 = load i64, i64* %575, align 8
  %591 = lshr i64 %590, 6
  %592 = trunc i64 %591 to i16
  %593 = getelementptr inbounds %struct.FT_Bitmap_Size_, %struct.FT_Bitmap_Size_* %584, i64 %585, i32 0
  store i16 %592, i16* %593, align 8
  %594 = load i16, i16* %577, align 8
  %595 = zext i16 %594 to i32
  %596 = mul nsw i32 %595, %576
  %597 = add nsw i32 %596, %579
  %598 = sdiv i32 %597, %578
  %599 = trunc i32 %598 to i16
  %600 = getelementptr inbounds %struct.FT_Bitmap_Size_, %struct.FT_Bitmap_Size_* %584, i64 %585, i32 1
  store i16 %599, i16* %600, align 2
  %601 = load i16, i16* %577, align 8
  %602 = zext i16 %601 to i64
  %603 = shl nuw nsw i64 %602, 6
  %604 = getelementptr inbounds %struct.FT_Bitmap_Size_, %struct.FT_Bitmap_Size_* %584, i64 %585, i32 3
  store i64 %603, i64* %604, align 8
  %605 = load i16, i16* %580, align 2
  %606 = zext i16 %605 to i64
  %607 = shl nuw nsw i64 %606, 6
  %608 = getelementptr inbounds %struct.FT_Bitmap_Size_, %struct.FT_Bitmap_Size_* %584, i64 %585, i32 4
  store i64 %607, i64* %608, align 8
  %609 = load i16, i16* %580, align 2
  %610 = zext i16 %609 to i64
  %611 = shl nuw nsw i64 %610, 6
  %612 = getelementptr inbounds %struct.FT_Bitmap_Size_, %struct.FT_Bitmap_Size_* %584, i64 %585, i32 2
  store i64 %611, i64* %612, align 8
  %613 = icmp eq i16 %601, 0
  %614 = icmp eq i16 %605, 0
  %615 = or i1 %613, %614
  br i1 %615, label %620, label %616

616:                                              ; preds = %589
  %617 = add i32 %583, 1
  %618 = getelementptr inbounds i32, i32* %570, i64 %585
  %619 = trunc i64 %582 to i32
  store i32 %619, i32* %618, align 4
  br label %620

620:                                              ; preds = %616, %589, %581
  %621 = phi i32 [ %583, %581 ], [ %617, %616 ], [ %583, %589 ]
  %622 = add nuw nsw i64 %582, 1
  %623 = icmp eq i64 %622, %562
  br i1 %623, label %624, label %581

624:                                              ; preds = %620
  %625 = zext i32 %621 to i64
  %626 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %549, i64 4, i64 %562, i64 %625, i8* %569, i32* nonnull %6) #17
  %627 = icmp eq i32 %621, 0
  br i1 %627, label %634, label %628

628:                                              ; preds = %624
  %629 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %1, i64 0, i32 67
  %630 = bitcast i32** %629 to i8**
  store i8* %626, i8** %630, align 8
  %631 = load i64, i64* %347, align 8
  %632 = or i64 %631, 2
  store i64 %632, i64* %347, align 8
  %633 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %1, i64 0, i32 0, i32 7
  store i32 %621, i32* %633, align 8
  br label %634

634:                                              ; preds = %624, %628
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %553) #17
  br label %636

635:                                              ; preds = %568, %559
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %553) #17
  br label %737

636:                                              ; preds = %634, %541
  %637 = load i64, i64* %347, align 8
  %638 = and i64 %637, 3
  %639 = icmp eq i64 %638, 0
  br i1 %639, label %640, label %642

640:                                              ; preds = %636
  %641 = or i64 %637, 1
  store i64 %641, i64* %347, align 8
  br label %642

642:                                              ; preds = %636, %640
  %643 = phi i64 [ %637, %636 ], [ %641, %640 ]
  %644 = and i64 %643, 1
  %645 = icmp eq i64 %644, 0
  br i1 %645, label %737, label %646

646:                                              ; preds = %642
  %647 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %1, i64 0, i32 5, i32 8
  %648 = load i16, i16* %647, align 8
  %649 = sext i16 %648 to i64
  %650 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %1, i64 0, i32 0, i32 12, i32 0
  store i64 %649, i64* %650, align 8
  %651 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %1, i64 0, i32 5, i32 9
  %652 = load i16, i16* %651, align 2
  %653 = sext i16 %652 to i64
  %654 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %1, i64 0, i32 0, i32 12, i32 1
  store i64 %653, i64* %654, align 8
  %655 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %1, i64 0, i32 5, i32 10
  %656 = load i16, i16* %655, align 4
  %657 = sext i16 %656 to i64
  %658 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %1, i64 0, i32 0, i32 12, i32 2
  store i64 %657, i64* %658, align 8
  %659 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %1, i64 0, i32 5, i32 11
  %660 = load i16, i16* %659, align 2
  %661 = sext i16 %660 to i64
  %662 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %1, i64 0, i32 0, i32 12, i32 3
  store i64 %661, i64* %662, align 8
  %663 = load i16, i16* %155, align 2
  %664 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %1, i64 0, i32 0, i32 13
  store i16 %663, i16* %664, align 8
  %665 = load i16, i16* %277, align 8
  %666 = icmp eq i16 %665, -1
  br i1 %666, label %684, label %667

667:                                              ; preds = %646
  %668 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %1, i64 0, i32 12, i32 22
  %669 = load i16, i16* %668, align 4
  %670 = trunc i16 %669 to i8
  %671 = icmp slt i8 %670, 0
  br i1 %671, label %672, label %684

672:                                              ; preds = %667
  %673 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %1, i64 0, i32 12, i32 25
  %674 = load i16, i16* %673, align 2
  %675 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %1, i64 0, i32 0, i32 14
  store i16 %674, i16* %675, align 2
  %676 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %1, i64 0, i32 12, i32 26
  %677 = load i16, i16* %676, align 4
  %678 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %1, i64 0, i32 0, i32 15
  store i16 %677, i16* %678, align 4
  %679 = sub i16 %674, %677
  %680 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %1, i64 0, i32 12, i32 27
  %681 = load i16, i16* %680, align 2
  %682 = add i16 %679, %681
  %683 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %1, i64 0, i32 0, i32 16
  store i16 %682, i16* %683, align 2
  br label %718

684:                                              ; preds = %646, %667
  %685 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %1, i64 0, i32 6, i32 1
  %686 = load i16, i16* %685, align 8
  %687 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %1, i64 0, i32 0, i32 14
  store i16 %686, i16* %687, align 2
  %688 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %1, i64 0, i32 6, i32 2
  %689 = load i16, i16* %688, align 2
  %690 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %1, i64 0, i32 0, i32 15
  store i16 %689, i16* %690, align 4
  %691 = sub i16 %686, %689
  %692 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %1, i64 0, i32 6, i32 3
  %693 = load i16, i16* %692, align 4
  %694 = add i16 %691, %693
  %695 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %1, i64 0, i32 0, i32 16
  store i16 %694, i16* %695, align 2
  %696 = or i16 %689, %686
  %697 = icmp ne i16 %696, 0
  %698 = or i1 %666, %697
  br i1 %698, label %718, label %699

699:                                              ; preds = %684
  %700 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %1, i64 0, i32 12, i32 25
  %701 = load i16, i16* %700, align 2
  %702 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %1, i64 0, i32 12, i32 26
  %703 = load i16, i16* %702, align 4
  %704 = or i16 %701, %703
  %705 = icmp eq i16 %704, 0
  br i1 %705, label %711, label %706

706:                                              ; preds = %699
  store i16 %701, i16* %687, align 2
  store i16 %703, i16* %690, align 4
  %707 = sub i16 %701, %703
  %708 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %1, i64 0, i32 12, i32 27
  %709 = load i16, i16* %708, align 2
  %710 = add i16 %707, %709
  store i16 %710, i16* %695, align 2
  br label %718

711:                                              ; preds = %699
  %712 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %1, i64 0, i32 12, i32 28
  %713 = load i16, i16* %712, align 8
  store i16 %713, i16* %687, align 2
  %714 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %1, i64 0, i32 12, i32 29
  %715 = load i16, i16* %714, align 2
  %716 = sub i16 0, %715
  store i16 %716, i16* %690, align 4
  %717 = add i16 %715, %713
  store i16 %717, i16* %695, align 2
  br label %718

718:                                              ; preds = %684, %706, %711, %672
  %719 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %1, i64 0, i32 6, i32 4
  %720 = load i16, i16* %719, align 2
  %721 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %1, i64 0, i32 0, i32 17
  store i16 %720, i16* %721, align 8
  %722 = load i8, i8* %379, align 8
  %723 = icmp eq i8 %722, 0
  %724 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %1, i64 0, i32 9, i32 4
  %725 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %1, i64 0, i32 0, i32 16
  %726 = select i1 %723, i16* %725, i16* %724
  %727 = load i16, i16* %726, align 2
  %728 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %1, i64 0, i32 0, i32 18
  store i16 %727, i16* %728, align 2
  %729 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %1, i64 0, i32 13, i32 2
  %730 = load i16, i16* %729, align 8
  %731 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %1, i64 0, i32 13, i32 3
  %732 = load i16, i16* %731, align 2
  %733 = sdiv i16 %732, 2
  %734 = sub i16 %730, %733
  %735 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %1, i64 0, i32 0, i32 19
  store i16 %734, i16* %735, align 4
  %736 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %1, i64 0, i32 0, i32 20
  store i16 %732, i16* %736, align 2
  br label %737

737:                                              ; preds = %210, %189, %197, %184, %205, %159, %138, %218, %308, %316, %324, %327, %335, %343, %288, %294, %299, %305, %232, %635, %540, %718, %642
  %738 = load i32, i32* %6, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #17
  ret i32 %738

739:                                              ; preds = %30
  br label %741

740:                                              ; preds = %30
  br label %741

741:                                              ; preds = %740, %739, %30
  %742 = phi i8 [ %31, %739 ], [ 1, %30 ], [ %31, %740 ]
  %743 = phi i8 [ 1, %739 ], [ %32, %30 ], [ %32, %740 ]
  %744 = or i64 %22, 2
  %745 = getelementptr inbounds %struct.FT_Parameter_, %struct.FT_Parameter_* %4, i64 %744, i32 0
  %746 = load i64, i64* %745, align 8
  switch i64 %746, label %748 [
    i64 1768386662, label %749
    i64 1768386675, label %747
  ]

747:                                              ; preds = %741
  br label %749

748:                                              ; preds = %741
  br label %749

749:                                              ; preds = %748, %747, %741
  %750 = phi i8 [ %742, %747 ], [ 1, %741 ], [ %742, %748 ]
  %751 = phi i8 [ 1, %747 ], [ %743, %741 ], [ %743, %748 ]
  %752 = or i64 %22, 3
  %753 = getelementptr inbounds %struct.FT_Parameter_, %struct.FT_Parameter_* %4, i64 %752, i32 0
  %754 = load i64, i64* %753, align 8
  switch i64 %754, label %756 [
    i64 1768386662, label %757
    i64 1768386675, label %755
  ]

755:                                              ; preds = %749
  br label %757

756:                                              ; preds = %749
  br label %757

757:                                              ; preds = %756, %755, %749
  %758 = phi i8 [ %750, %755 ], [ 1, %749 ], [ %750, %756 ]
  %759 = phi i8 [ 1, %755 ], [ %751, %749 ], [ %751, %756 ]
  %760 = add nuw nsw i64 %22, 4
  %761 = add i64 %25, -4
  %762 = icmp eq i64 %761, 0
  br i1 %762, label %36, label %21
}

; Function Attrs: nounwind ssp uwtable
define internal void @sfnt_done_face(%struct.TT_FaceRec_*) #0 {
  %2 = icmp eq %struct.TT_FaceRec_* %0, null
  br i1 %2, label %91, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 0, i32 25
  %5 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %4, align 8
  %6 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 22
  %7 = bitcast i8** %6 to %struct.SFNT_Interface_**
  %8 = load %struct.SFNT_Interface_*, %struct.SFNT_Interface_** %7, align 8
  %9 = icmp ne %struct.SFNT_Interface_* %8, null
  br i1 %9, label %10, label %27

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.SFNT_Interface_, %struct.SFNT_Interface_* %8, i64 0, i32 20
  %12 = load void (%struct.TT_FaceRec_*)*, void (%struct.TT_FaceRec_*)** %11, align 8
  %13 = icmp eq void (%struct.TT_FaceRec_*)* %12, null
  br i1 %13, label %15, label %14

14:                                               ; preds = %10
  tail call void %12(%struct.TT_FaceRec_* nonnull %0) #17
  br label %15

15:                                               ; preds = %10, %14
  %16 = getelementptr inbounds %struct.SFNT_Interface_, %struct.SFNT_Interface_* %8, i64 0, i32 25
  %17 = load void (%struct.TT_FaceRec_*)*, void (%struct.TT_FaceRec_*)** %16, align 8
  %18 = icmp eq void (%struct.TT_FaceRec_*)* %17, null
  br i1 %18, label %20, label %19

19:                                               ; preds = %15
  tail call void %17(%struct.TT_FaceRec_* nonnull %0) #17
  br label %20

20:                                               ; preds = %15, %19
  %21 = getelementptr inbounds %struct.SFNT_Interface_, %struct.SFNT_Interface_* %8, i64 0, i32 30
  %22 = load void (%struct.TT_FaceRec_*)*, void (%struct.TT_FaceRec_*)** %21, align 8
  %23 = icmp eq void (%struct.TT_FaceRec_*)* %22, null
  br i1 %23, label %27, label %24

24:                                               ; preds = %20
  tail call void %22(%struct.TT_FaceRec_* nonnull %0) #17
  %25 = getelementptr inbounds %struct.SFNT_Interface_, %struct.SFNT_Interface_* %8, i64 0, i32 31
  %26 = load void (%struct.TT_FaceRec_*)*, void (%struct.TT_FaceRec_*)** %25, align 8
  tail call void %26(%struct.TT_FaceRec_* nonnull %0) #17
  br label %27

27:                                               ; preds = %20, %24, %3
  %28 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 0, i32 26
  %29 = load %struct.FT_StreamRec_*, %struct.FT_StreamRec_** %28, align 8
  %30 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 68
  tail call void @FT_Stream_ReleaseFrame(%struct.FT_StreamRec_* %29, i8** %30) #17
  %31 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 69
  %32 = bitcast i64* %31 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %32, i8 0, i64 20, i1 false) #17
  %33 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 1, i32 3
  %34 = bitcast i64** %33 to i8**
  %35 = load i8*, i8** %34, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %5, i8* %35) #17
  %36 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 1, i32 2
  %37 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 4
  %38 = bitcast %struct.TT_TableRec_** %37 to i8**
  %39 = bitcast i64* %36 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %39, i8 0, i64 16, i1 false)
  %40 = load i8*, i8** %38, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %5, i8* %40) #17
  store %struct.TT_TableRec_* null, %struct.TT_TableRec_** %37, align 8
  %41 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 3
  store i16 0, i16* %41, align 8
  %42 = load %struct.FT_StreamRec_*, %struct.FT_StreamRec_** %28, align 8
  %43 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 14
  tail call void @FT_Stream_ReleaseFrame(%struct.FT_StreamRec_* %42, i8** %43) #17
  %44 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 15
  store i64 0, i64* %44, align 8
  %45 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 54
  %46 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 8
  %47 = bitcast i64* %45 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %47, i8 0, i64 16, i1 false)
  %48 = load i8, i8* %46, align 8
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %55, label %50

50:                                               ; preds = %27
  %51 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 9, i32 14
  %52 = load i8*, i8** %51, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %5, i8* %52) #17
  store i8* null, i8** %51, align 8
  %53 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 9, i32 15
  %54 = load i8*, i8** %53, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %5, i8* %54) #17
  store i8* null, i8** %53, align 8
  store i8 0, i8* %46, align 8
  br label %55

55:                                               ; preds = %27, %50
  %56 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 27, i32 2
  %57 = bitcast %struct.TT_GaspRangeRec_** %56 to i8**
  %58 = load i8*, i8** %57, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %5, i8* %58) #17
  store %struct.TT_GaspRangeRec_* null, %struct.TT_GaspRangeRec_** %56, align 8
  %59 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 27, i32 1
  store i16 0, i16* %59, align 2
  br i1 %9, label %60, label %63

60:                                               ; preds = %55
  %61 = getelementptr inbounds %struct.SFNT_Interface_, %struct.SFNT_Interface_* %8, i64 0, i32 13
  %62 = load void (%struct.TT_FaceRec_*)*, void (%struct.TT_FaceRec_*)** %61, align 8
  tail call void %62(%struct.TT_FaceRec_* nonnull %0) #17
  br label %63

63:                                               ; preds = %55, %60
  %64 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 0, i32 5
  %65 = load i8*, i8** %64, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %5, i8* %65) #17
  store i8* null, i8** %64, align 8
  %66 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 0, i32 6
  %67 = load i8*, i8** %66, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %5, i8* %67) #17
  store i8* null, i8** %66, align 8
  %68 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 0, i32 8
  %69 = bitcast %struct.FT_Bitmap_Size_** %68 to i8**
  %70 = load i8*, i8** %69, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %5, i8* %70) #17
  store %struct.FT_Bitmap_Size_* null, %struct.FT_Bitmap_Size_** %68, align 8
  %71 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 67
  %72 = bitcast i32** %71 to i8**
  %73 = load i8*, i8** %72, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %5, i8* %73) #17
  store i32* null, i32** %71, align 8
  %74 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 0, i32 7
  store i32 0, i32* %74, align 8
  %75 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 45
  %76 = load i8*, i8** %75, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %5, i8* %76) #17
  store i8* null, i8** %75, align 8
  %77 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 52
  %78 = load i8*, i8** %77, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %5, i8* %78) #17
  store i8* null, i8** %77, align 8
  %79 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 32, i32 1
  %80 = bitcast i16** %79 to i8**
  %81 = load i8*, i8** %80, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %5, i8* %81) #17
  store i16* null, i16** %79, align 8
  %82 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 32, i32 2
  %83 = bitcast i16** %82 to i8**
  %84 = load i8*, i8** %83, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %5, i8* %84) #17
  store i16* null, i16** %82, align 8
  %85 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 32, i32 4
  %86 = bitcast i16** %85 to i8**
  %87 = load i8*, i8** %86, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %5, i8* %87) #17
  store i16* null, i16** %85, align 8
  %88 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 34
  %89 = bitcast %struct.FT_Color_** %88 to i8**
  %90 = load i8*, i8** %89, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %5, i8* %90) #17
  store %struct.FT_Color_* null, %struct.FT_Color_** %88, align 8
  store i8* null, i8** %6, align 8
  br label %91

91:                                               ; preds = %1, %63
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @tt_face_load_any(%struct.TT_FaceRec_* nocapture readonly, i64, i64, i8*, i64*) #0 {
  %6 = icmp eq i64 %1, 0
  br i1 %6, label %33, label %7

7:                                                ; preds = %5
  %8 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 4
  %9 = load %struct.TT_TableRec_*, %struct.TT_TableRec_** %8, align 8
  %10 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 3
  %11 = load i16, i16* %10, align 8
  %12 = zext i16 %11 to i64
  %13 = getelementptr inbounds %struct.TT_TableRec_, %struct.TT_TableRec_* %9, i64 %12
  %14 = icmp eq i16 %11, 0
  br i1 %14, label %51, label %15

15:                                               ; preds = %7, %24
  %16 = phi %struct.TT_TableRec_* [ %25, %24 ], [ %9, %7 ]
  %17 = getelementptr inbounds %struct.TT_TableRec_, %struct.TT_TableRec_* %16, i64 0, i32 0
  %18 = load i64, i64* %17, align 8
  %19 = icmp eq i64 %18, %1
  br i1 %19, label %20, label %24

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.TT_TableRec_, %struct.TT_TableRec_* %16, i64 0, i32 3
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %20, %15
  %25 = getelementptr inbounds %struct.TT_TableRec_, %struct.TT_TableRec_* %16, i64 1
  %26 = icmp ult %struct.TT_TableRec_* %25, %13
  br i1 %26, label %15, label %51

27:                                               ; preds = %20
  %28 = icmp eq %struct.TT_TableRec_* %16, null
  br i1 %28, label %51, label %29

29:                                               ; preds = %27
  %30 = getelementptr inbounds %struct.TT_TableRec_, %struct.TT_TableRec_* %16, i64 0, i32 2
  %31 = load i64, i64* %30, align 8
  %32 = add i64 %31, %2
  br label %38

33:                                               ; preds = %5
  %34 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 0, i32 26
  %35 = load %struct.FT_StreamRec_*, %struct.FT_StreamRec_** %34, align 8
  %36 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %35, i64 0, i32 1
  %37 = load i64, i64* %36, align 8
  br label %38

38:                                               ; preds = %33, %29
  %39 = phi i64 [ %22, %29 ], [ %37, %33 ]
  %40 = phi i64 [ %32, %29 ], [ %2, %33 ]
  %41 = icmp eq i64* %4, null
  br i1 %41, label %46, label %42

42:                                               ; preds = %38
  %43 = load i64, i64* %4, align 8
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %42
  store i64 %39, i64* %4, align 8
  br label %51

46:                                               ; preds = %38, %42
  %47 = phi i64 [ %39, %38 ], [ %43, %42 ]
  %48 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 0, i32 26
  %49 = load %struct.FT_StreamRec_*, %struct.FT_StreamRec_** %48, align 8
  %50 = tail call i32 @FT_Stream_ReadAt(%struct.FT_StreamRec_* %49, i64 %40, i8* %3, i64 %47) #17
  br label %51

51:                                               ; preds = %24, %7, %46, %27, %45
  %52 = phi i32 [ 0, %45 ], [ %50, %46 ], [ 142, %27 ], [ 142, %7 ], [ 142, %24 ]
  ret i32 %52
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @tt_face_load_head(%struct.TT_FaceRec_*, %struct.FT_StreamRec_*) #0 {
  %3 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 16
  %4 = bitcast {}** %3 to i32 (%struct.TT_FaceRec_*, i64, %struct.FT_StreamRec_*, i64*)**
  %5 = load i32 (%struct.TT_FaceRec_*, i64, %struct.FT_StreamRec_*, i64*)*, i32 (%struct.TT_FaceRec_*, i64, %struct.FT_StreamRec_*, i64*)** %4, align 8
  %6 = tail call i32 %5(%struct.TT_FaceRec_* %0, i64 1751474532, %struct.FT_StreamRec_* %1, i64* null) #17
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %12

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 5
  %10 = bitcast %struct.TT_Header_* %9 to i8*
  %11 = tail call i32 @FT_Stream_ReadFields(%struct.FT_StreamRec_* %1, %struct.FT_Frame_Field_* getelementptr inbounds ([21 x %struct.FT_Frame_Field_], [21 x %struct.FT_Frame_Field_]* @tt_face_load_generic_header.header_fields, i64 0, i64 0), i8* %10) #17
  br label %12

12:                                               ; preds = %2, %8
  %13 = phi i32 [ %6, %2 ], [ %11, %8 ]
  ret i32 %13
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @tt_face_load_hhea(%struct.TT_FaceRec_*, %struct.FT_StreamRec_*, i8 zeroext) #0 {
  %4 = icmp eq i8 %2, 0
  %5 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 16
  %6 = bitcast {}** %5 to i32 (%struct.TT_FaceRec_*, i64, %struct.FT_StreamRec_*, i64*)**
  %7 = load i32 (%struct.TT_FaceRec_*, i64, %struct.FT_StreamRec_*, i64*)*, i32 (%struct.TT_FaceRec_*, i64, %struct.FT_StreamRec_*, i64*)** %6, align 8
  br i1 %4, label %13, label %8

8:                                                ; preds = %3
  %9 = tail call i32 %7(%struct.TT_FaceRec_* %0, i64 1986553185, %struct.FT_StreamRec_* %1, i64* null) #17
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 9
  %12 = bitcast %struct.TT_VertHeader_* %11 to %struct.TT_HoriHeader_*
  br i1 %10, label %18, label %26

13:                                               ; preds = %3
  %14 = tail call i32 %7(%struct.TT_FaceRec_* %0, i64 1751672161, %struct.FT_StreamRec_* %1, i64* null) #17
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %26

16:                                               ; preds = %13
  %17 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 6
  br label %18

18:                                               ; preds = %8, %16
  %19 = phi %struct.TT_HoriHeader_* [ %12, %8 ], [ %17, %16 ]
  %20 = bitcast %struct.TT_HoriHeader_* %19 to i8*
  %21 = tail call i32 @FT_Stream_ReadFields(%struct.FT_StreamRec_* %1, %struct.FT_Frame_Field_* getelementptr inbounds ([19 x %struct.FT_Frame_Field_], [19 x %struct.FT_Frame_Field_]* @tt_face_load_hhea.metrics_header_fields, i64 0, i64 0), i8* %20) #17
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %26

23:                                               ; preds = %18
  %24 = getelementptr inbounds %struct.TT_HoriHeader_, %struct.TT_HoriHeader_* %19, i64 0, i32 14
  %25 = bitcast i8** %24 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 16, i1 false)
  br label %26

26:                                               ; preds = %23, %13, %18, %8
  %27 = phi i32 [ %9, %8 ], [ %21, %18 ], [ 0, %23 ], [ %14, %13 ]
  ret i32 %27
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @tt_face_load_cmap(%struct.TT_FaceRec_*, %struct.FT_StreamRec_*) #0 {
  %3 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 16
  %4 = bitcast {}** %3 to i32 (%struct.TT_FaceRec_*, i64, %struct.FT_StreamRec_*, i64*)**
  %5 = load i32 (%struct.TT_FaceRec_*, i64, %struct.FT_StreamRec_*, i64*)*, i32 (%struct.TT_FaceRec_*, i64, %struct.FT_StreamRec_*, i64*)** %4, align 8
  %6 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 15
  %7 = tail call i32 %5(%struct.TT_FaceRec_* %0, i64 1668112752, %struct.FT_StreamRec_* %1, i64* %6) #17
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %15

9:                                                ; preds = %2
  %10 = load i64, i64* %6, align 8
  %11 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 14
  %12 = tail call i32 @FT_Stream_ExtractFrame(%struct.FT_StreamRec_* %1, i64 %10, i8** %11) #17
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %15, label %14

14:                                               ; preds = %9
  store i64 0, i64* %6, align 8
  br label %15

15:                                               ; preds = %9, %2, %14
  %16 = phi i32 [ %7, %2 ], [ %12, %14 ], [ 0, %9 ]
  ret i32 %16
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @tt_face_load_maxp(%struct.TT_FaceRec_*, %struct.FT_StreamRec_*) #0 {
  %3 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 7
  %4 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 16
  %5 = bitcast {}** %4 to i32 (%struct.TT_FaceRec_*, i64, %struct.FT_StreamRec_*, i64*)**
  %6 = load i32 (%struct.TT_FaceRec_*, i64, %struct.FT_StreamRec_*, i64*)*, i32 (%struct.TT_FaceRec_*, i64, %struct.FT_StreamRec_*, i64*)** %5, align 8
  %7 = tail call i32 %6(%struct.TT_FaceRec_* %0, i64 1835104368, %struct.FT_StreamRec_* %1, i64* null) #17
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %32

9:                                                ; preds = %2
  %10 = bitcast %struct.TT_MaxProfile_* %3 to i8*
  %11 = tail call i32 @FT_Stream_ReadFields(%struct.FT_StreamRec_* %1, %struct.FT_Frame_Field_* getelementptr inbounds ([4 x %struct.FT_Frame_Field_], [4 x %struct.FT_Frame_Field_]* @tt_face_load_maxp.maxp_fields, i64 0, i64 0), i8* %10) #17
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %32

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 7, i32 2
  %15 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 7, i32 7
  %16 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 7, i32 9
  %17 = getelementptr inbounds %struct.TT_MaxProfile_, %struct.TT_MaxProfile_* %3, i64 0, i32 0
  %18 = bitcast i16* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 2 %18, i8 0, i64 26, i1 false)
  %19 = load i64, i64* %17, align 8
  %20 = icmp sgt i64 %19, 65535
  br i1 %20, label %21, label %32

21:                                               ; preds = %13
  %22 = tail call i32 @FT_Stream_ReadFields(%struct.FT_StreamRec_* %1, %struct.FT_Frame_Field_* getelementptr inbounds ([15 x %struct.FT_Frame_Field_], [15 x %struct.FT_Frame_Field_]* @tt_face_load_maxp.maxp_fields_extra, i64 0, i64 0), i8* %10) #17
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %32

24:                                               ; preds = %21
  %25 = load i16, i16* %16, align 8
  %26 = icmp ult i16 %25, 64
  br i1 %26, label %27, label %28

27:                                               ; preds = %24
  store i16 64, i16* %16, align 8
  br label %28

28:                                               ; preds = %27, %24
  %29 = load i16, i16* %15, align 4
  %30 = icmp ugt i16 %29, -5
  br i1 %30, label %31, label %32

31:                                               ; preds = %28
  store i16 -5, i16* %15, align 4
  br label %32

32:                                               ; preds = %21, %9, %2, %28, %31, %13
  %33 = phi i32 [ %7, %2 ], [ %11, %9 ], [ %22, %21 ], [ 0, %31 ], [ 0, %28 ], [ 0, %13 ]
  ret i32 %33
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @tt_face_load_os2(%struct.TT_FaceRec_*, %struct.FT_StreamRec_*) #0 {
  %3 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 16
  %4 = bitcast {}** %3 to i32 (%struct.TT_FaceRec_*, i64, %struct.FT_StreamRec_*, i64*)**
  %5 = load i32 (%struct.TT_FaceRec_*, i64, %struct.FT_StreamRec_*, i64*)*, i32 (%struct.TT_FaceRec_*, i64, %struct.FT_StreamRec_*, i64*)** %4, align 8
  %6 = tail call i32 %5(%struct.TT_FaceRec_* %0, i64 1330851634, %struct.FT_StreamRec_* %1, i64* null) #17
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %34

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 12
  %10 = bitcast %struct.TT_OS2_* %9 to i8*
  %11 = tail call i32 @FT_Stream_ReadFields(%struct.FT_StreamRec_* %1, %struct.FT_Frame_Field_* getelementptr inbounds ([44 x %struct.FT_Frame_Field_], [44 x %struct.FT_Frame_Field_]* @tt_face_load_os2.os2_fields, i64 0, i64 0), i8* %10) #17
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %34

13:                                               ; preds = %8
  %14 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 12, i32 30
  %15 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 12, i32 38
  %16 = bitcast i64* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 28, i1 false)
  store i16 -1, i16* %15, align 4
  %17 = getelementptr inbounds %struct.TT_OS2_, %struct.TT_OS2_* %9, i64 0, i32 0
  %18 = load i16, i16* %17, align 8
  %19 = icmp eq i16 %18, 0
  br i1 %19, label %34, label %20

20:                                               ; preds = %13
  %21 = tail call i32 @FT_Stream_ReadFields(%struct.FT_StreamRec_* %1, %struct.FT_Frame_Field_* getelementptr inbounds ([4 x %struct.FT_Frame_Field_], [4 x %struct.FT_Frame_Field_]* @tt_face_load_os2.os2_fields_extra1, i64 0, i64 0), i8* %10) #17
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %34

23:                                               ; preds = %20
  %24 = load i16, i16* %17, align 8
  %25 = icmp ugt i16 %24, 1
  br i1 %25, label %26, label %34

26:                                               ; preds = %23
  %27 = tail call i32 @FT_Stream_ReadFields(%struct.FT_StreamRec_* %1, %struct.FT_Frame_Field_* getelementptr inbounds ([7 x %struct.FT_Frame_Field_], [7 x %struct.FT_Frame_Field_]* @tt_face_load_os2.os2_fields_extra2, i64 0, i64 0), i8* %10) #17
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %34

29:                                               ; preds = %26
  %30 = load i16, i16* %17, align 8
  %31 = icmp ugt i16 %30, 4
  br i1 %31, label %32, label %34

32:                                               ; preds = %29
  %33 = tail call i32 @FT_Stream_ReadFields(%struct.FT_StreamRec_* %1, %struct.FT_Frame_Field_* getelementptr inbounds ([4 x %struct.FT_Frame_Field_], [4 x %struct.FT_Frame_Field_]* @tt_face_load_os2.os2_fields_extra5, i64 0, i64 0), i8* %10) #17
  br label %34

34:                                               ; preds = %26, %20, %13, %8, %2, %32, %23, %29
  %35 = phi i32 [ %6, %2 ], [ %11, %8 ], [ %21, %20 ], [ %27, %26 ], [ %33, %32 ], [ 0, %29 ], [ 0, %23 ], [ 0, %13 ]
  ret i32 %35
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @tt_face_load_post(%struct.TT_FaceRec_*, %struct.FT_StreamRec_*) #0 {
  %3 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 13
  %4 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 16
  %5 = bitcast {}** %4 to i32 (%struct.TT_FaceRec_*, i64, %struct.FT_StreamRec_*, i64*)**
  %6 = load i32 (%struct.TT_FaceRec_*, i64, %struct.FT_StreamRec_*, i64*)*, i32 (%struct.TT_FaceRec_*, i64, %struct.FT_StreamRec_*, i64*)** %5, align 8
  %7 = tail call i32 %6(%struct.TT_FaceRec_* %0, i64 1886352244, %struct.FT_StreamRec_* %1, i64* null) #17
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %17

9:                                                ; preds = %2
  %10 = bitcast %struct.TT_Postscript_* %3 to i8*
  %11 = tail call i32 @FT_Stream_ReadFields(%struct.FT_StreamRec_* %1, %struct.FT_Frame_Field_* getelementptr inbounds ([11 x %struct.FT_Frame_Field_], [11 x %struct.FT_Frame_Field_]* @tt_face_load_post.post_fields, i64 0, i64 0), i8* %10) #17
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %17

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct.TT_Postscript_, %struct.TT_Postscript_* %3, i64 0, i32 0
  %15 = load i64, i64* %14, align 8
  switch i64 %15, label %17 [
    i64 196608, label %16
    i64 151552, label %16
    i64 131072, label %16
    i64 65536, label %16
  ]

16:                                               ; preds = %13, %13, %13, %13
  br label %17

17:                                               ; preds = %13, %9, %2, %16
  %18 = phi i32 [ 0, %16 ], [ %7, %2 ], [ %11, %9 ], [ 154, %13 ]
  ret i32 %18
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @tt_face_load_name(%struct.TT_FaceRec_*, %struct.FT_StreamRec_*) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i64, align 8
  %5 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #17
  %6 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %1, i64 0, i32 7
  %7 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %6, align 8
  %8 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #17
  store i64 -6148914691236517206, i64* %4, align 8
  %9 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 11
  %10 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 11, i32 6
  store %struct.FT_StreamRec_* %1, %struct.FT_StreamRec_** %10, align 8
  %11 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 16
  %12 = bitcast {}** %11 to i32 (%struct.TT_FaceRec_*, i64, %struct.FT_StreamRec_*, i64*)**
  %13 = load i32 (%struct.TT_FaceRec_*, i64, %struct.FT_StreamRec_*, i64*)*, i32 (%struct.TT_FaceRec_*, i64, %struct.FT_StreamRec_*, i64*)** %12, align 8
  %14 = call i32 %13(%struct.TT_FaceRec_* %0, i64 1851878757, %struct.FT_StreamRec_* %1, i64* nonnull %4) #17
  store i32 %14, i32* %3, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %186

16:                                               ; preds = %2
  %17 = call i64 @FT_Stream_Pos(%struct.FT_StreamRec_* %1) #17
  %18 = bitcast %struct.TT_NameTableRec_* %9 to i8*
  %19 = call i32 @FT_Stream_ReadFields(%struct.FT_StreamRec_* %1, %struct.FT_Frame_Field_* getelementptr inbounds ([5 x %struct.FT_Frame_Field_], [5 x %struct.FT_Frame_Field_]* @tt_face_load_name.name_table_fields, i64 0, i64 0), i8* %18) #17
  store i32 %19, i32* %3, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %186

21:                                               ; preds = %16
  %22 = add i64 %17, 6
  %23 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 11, i32 1
  %24 = load i32, i32* %23, align 4
  %25 = mul i32 %24, 12
  %26 = zext i32 %25 to i64
  %27 = add i64 %22, %26
  %28 = load i64, i64* %4, align 8
  %29 = add i64 %28, %17
  %30 = icmp ugt i64 %27, %29
  br i1 %30, label %31, label %32

31:                                               ; preds = %21
  store i32 145, i32* %3, align 4
  br label %186

32:                                               ; preds = %21
  %33 = getelementptr inbounds %struct.TT_NameTableRec_, %struct.TT_NameTableRec_* %9, i64 0, i32 0
  %34 = load i16, i16* %33, align 8
  %35 = icmp eq i16 %34, 1
  br i1 %35, label %36, label %97

36:                                               ; preds = %32
  %37 = call i32 @FT_Stream_Seek(%struct.FT_StreamRec_* %1, i64 %27) #17
  store i32 %37, i32* %3, align 4
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %186

39:                                               ; preds = %36
  %40 = call zeroext i16 @FT_Stream_ReadUShort(%struct.FT_StreamRec_* %1, i32* nonnull %3) #17
  %41 = zext i16 %40 to i32
  %42 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 11, i32 4
  store i32 %41, i32* %42, align 8
  %43 = load i32, i32* %3, align 4
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %186

45:                                               ; preds = %39
  %46 = shl nuw nsw i32 %41, 2
  %47 = or i32 %46, 2
  %48 = zext i32 %47 to i64
  %49 = add i64 %27, %48
  %50 = zext i16 %40 to i64
  %51 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %7, i64 24, i64 0, i64 %50, i8* null, i32* nonnull %3) #17
  %52 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 11, i32 5
  %53 = bitcast %struct.TT_LangTagRec_** %52 to i8**
  store i8* %51, i8** %53, align 8
  %54 = load i32, i32* %3, align 4
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %186

56:                                               ; preds = %45
  %57 = load i32, i32* %42, align 8
  %58 = shl i32 %57, 2
  %59 = zext i32 %58 to i64
  %60 = call i32 @FT_Stream_EnterFrame(%struct.FT_StreamRec_* %1, i64 %59) #17
  store i32 %60, i32* %3, align 4
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %186

62:                                               ; preds = %56
  %63 = load %struct.TT_LangTagRec_*, %struct.TT_LangTagRec_** %52, align 8
  %64 = icmp eq %struct.TT_LangTagRec_* %63, null
  br i1 %64, label %94, label %65

65:                                               ; preds = %62
  %66 = load i32, i32* %42, align 8
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds %struct.TT_LangTagRec_, %struct.TT_LangTagRec_* %63, i64 %67
  %69 = icmp eq i32 %66, 0
  br i1 %69, label %94, label %70

70:                                               ; preds = %65
  %71 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 11, i32 2
  br label %72

72:                                               ; preds = %70, %91
  %73 = phi %struct.TT_LangTagRec_* [ %63, %70 ], [ %92, %91 ]
  %74 = bitcast %struct.TT_LangTagRec_* %73 to i8*
  %75 = call i32 @FT_Stream_ReadFields(%struct.FT_StreamRec_* %1, %struct.FT_Frame_Field_* getelementptr inbounds ([3 x %struct.FT_Frame_Field_], [3 x %struct.FT_Frame_Field_]* @tt_face_load_name.langTag_record_fields, i64 0, i64 0), i8* %74) #17
  store i32 %75, i32* %3, align 4
  %76 = load i32, i32* %71, align 8
  %77 = zext i32 %76 to i64
  %78 = add i64 %17, %77
  %79 = getelementptr inbounds %struct.TT_LangTagRec_, %struct.TT_LangTagRec_* %73, i64 0, i32 1
  %80 = load i64, i64* %79, align 8
  %81 = add i64 %78, %80
  store i64 %81, i64* %79, align 8
  %82 = icmp ult i64 %81, %49
  br i1 %82, label %89, label %83

83:                                               ; preds = %72
  %84 = getelementptr inbounds %struct.TT_LangTagRec_, %struct.TT_LangTagRec_* %73, i64 0, i32 0
  %85 = load i16, i16* %84, align 8
  %86 = zext i16 %85 to i64
  %87 = add i64 %81, %86
  %88 = icmp ugt i64 %87, %29
  br i1 %88, label %89, label %91

89:                                               ; preds = %83, %72
  %90 = getelementptr inbounds %struct.TT_LangTagRec_, %struct.TT_LangTagRec_* %73, i64 0, i32 0
  store i16 0, i16* %90, align 8
  br label %91

91:                                               ; preds = %83, %89
  %92 = getelementptr inbounds %struct.TT_LangTagRec_, %struct.TT_LangTagRec_* %73, i64 1
  %93 = icmp ult %struct.TT_LangTagRec_* %92, %68
  br i1 %93, label %72, label %94

94:                                               ; preds = %91, %65, %62
  call void @FT_Stream_ExitFrame(%struct.FT_StreamRec_* %1) #17
  %95 = call i32 @FT_Stream_Seek(%struct.FT_StreamRec_* %1, i64 %22) #17
  store i32 %95, i32* %3, align 4
  %96 = load i32, i32* %23, align 4
  br label %97

97:                                               ; preds = %94, %32
  %98 = phi i32 [ %96, %94 ], [ %24, %32 ]
  %99 = phi i64 [ %49, %94 ], [ %27, %32 ]
  %100 = zext i32 %98 to i64
  %101 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %7, i64 32, i64 0, i64 %100, i8* null, i32* nonnull %3) #17
  %102 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 11, i32 3
  %103 = bitcast %struct.TT_NameRec_** %102 to i8**
  store i8* %101, i8** %103, align 8
  %104 = load i32, i32* %3, align 4
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %106, label %186

106:                                              ; preds = %97
  %107 = load i32, i32* %23, align 4
  %108 = mul i32 %107, 12
  %109 = zext i32 %108 to i64
  %110 = call i32 @FT_Stream_EnterFrame(%struct.FT_StreamRec_* %1, i64 %109) #17
  store i32 %110, i32* %3, align 4
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %186

112:                                              ; preds = %106
  %113 = load %struct.TT_NameRec_*, %struct.TT_NameRec_** %102, align 8
  %114 = load i32, i32* %23, align 4
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %170, label %116

116:                                              ; preds = %112
  %117 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 11, i32 2
  %118 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 11, i32 4
  %119 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 11, i32 5
  br label %120

120:                                              ; preds = %116, %162
  %121 = phi i32 [ %114, %116 ], [ %164, %162 ]
  %122 = phi %struct.TT_NameRec_* [ %113, %116 ], [ %163, %162 ]
  %123 = bitcast %struct.TT_NameRec_* %122 to i8*
  %124 = call i32 @FT_Stream_ReadFields(%struct.FT_StreamRec_* %1, %struct.FT_Frame_Field_* getelementptr inbounds ([7 x %struct.FT_Frame_Field_], [7 x %struct.FT_Frame_Field_]* @tt_face_load_name.name_record_fields, i64 0, i64 0), i8* %123) #17
  store i32 %124, i32* %3, align 4
  %125 = icmp eq i32 %124, 0
  br i1 %125, label %126, label %162

126:                                              ; preds = %120
  %127 = getelementptr inbounds %struct.TT_NameRec_, %struct.TT_NameRec_* %122, i64 0, i32 4
  %128 = load i16, i16* %127, align 8
  %129 = icmp eq i16 %128, 0
  br i1 %129, label %162, label %130

130:                                              ; preds = %126
  %131 = load i32, i32* %117, align 8
  %132 = zext i32 %131 to i64
  %133 = add i64 %17, %132
  %134 = getelementptr inbounds %struct.TT_NameRec_, %struct.TT_NameRec_* %122, i64 0, i32 5
  %135 = load i64, i64* %134, align 8
  %136 = add i64 %133, %135
  store i64 %136, i64* %134, align 8
  %137 = icmp ult i64 %136, %99
  br i1 %137, label %162, label %138

138:                                              ; preds = %130
  %139 = zext i16 %128 to i64
  %140 = add i64 %136, %139
  %141 = icmp ugt i64 %140, %29
  br i1 %141, label %162, label %142

142:                                              ; preds = %138
  %143 = load i16, i16* %33, align 8
  %144 = icmp eq i16 %143, 1
  br i1 %144, label %145, label %160

145:                                              ; preds = %142
  %146 = getelementptr inbounds %struct.TT_NameRec_, %struct.TT_NameRec_* %122, i64 0, i32 2
  %147 = load i16, i16* %146, align 4
  %148 = icmp slt i16 %147, 0
  br i1 %148, label %149, label %160

149:                                              ; preds = %145
  %150 = zext i16 %147 to i32
  %151 = add nsw i32 %150, -32768
  %152 = load i32, i32* %118, align 8
  %153 = icmp ult i32 %151, %152
  br i1 %153, label %154, label %162

154:                                              ; preds = %149
  %155 = load %struct.TT_LangTagRec_*, %struct.TT_LangTagRec_** %119, align 8
  %156 = zext i32 %151 to i64
  %157 = getelementptr inbounds %struct.TT_LangTagRec_, %struct.TT_LangTagRec_* %155, i64 %156, i32 0
  %158 = load i16, i16* %157, align 8
  %159 = icmp eq i16 %158, 0
  br i1 %159, label %162, label %160

160:                                              ; preds = %154, %145, %142
  %161 = getelementptr inbounds %struct.TT_NameRec_, %struct.TT_NameRec_* %122, i64 1
  br label %162

162:                                              ; preds = %154, %149, %120, %130, %138, %126, %160
  %163 = phi %struct.TT_NameRec_* [ %122, %120 ], [ %122, %126 ], [ %122, %130 ], [ %122, %138 ], [ %122, %149 ], [ %161, %160 ], [ %122, %154 ]
  %164 = add i32 %121, -1
  %165 = icmp eq i32 %164, 0
  br i1 %165, label %166, label %120

166:                                              ; preds = %162
  %167 = load %struct.TT_NameRec_*, %struct.TT_NameRec_** %102, align 8
  %168 = load i32, i32* %23, align 4
  %169 = zext i32 %168 to i64
  br label %170

170:                                              ; preds = %166, %112
  %171 = phi i64 [ 0, %112 ], [ %169, %166 ]
  %172 = phi %struct.TT_NameRec_* [ %113, %112 ], [ %167, %166 ]
  %173 = phi %struct.TT_NameRec_* [ %113, %112 ], [ %163, %166 ]
  %174 = ptrtoint %struct.TT_NameRec_* %173 to i64
  %175 = ptrtoint %struct.TT_NameRec_* %172 to i64
  %176 = sub i64 %174, %175
  %177 = lshr exact i64 %176, 5
  %178 = trunc i64 %177 to i32
  %179 = and i64 %177, 4294967295
  %180 = bitcast %struct.TT_NameRec_* %172 to i8*
  %181 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %7, i64 32, i64 %171, i64 %179, i8* %180, i32* nonnull %3) #17
  store i8* %181, i8** %103, align 8
  store i32 %178, i32* %23, align 4
  call void @FT_Stream_ExitFrame(%struct.FT_StreamRec_* %1) #17
  %182 = load i32, i32* %23, align 4
  %183 = trunc i32 %182 to i16
  %184 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 10
  store i16 %183, i16* %184, align 8
  %185 = load i32, i32* %3, align 4
  br label %186

186:                                              ; preds = %56, %45, %39, %36, %106, %97, %16, %2, %170, %31
  %187 = phi i32 [ %60, %56 ], [ %54, %45 ], [ %43, %39 ], [ %37, %36 ], [ %110, %106 ], [ %104, %97 ], [ %19, %16 ], [ %14, %2 ], [ %185, %170 ], [ 145, %31 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #17
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #17
  ret i32 %187
}

; Function Attrs: nounwind ssp uwtable
define internal void @tt_face_free_name(%struct.TT_FaceRec_* nocapture) #0 {
  %2 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 0, i32 24
  %3 = load %struct.FT_DriverRec_*, %struct.FT_DriverRec_** %2, align 8
  %4 = getelementptr inbounds %struct.FT_DriverRec_, %struct.FT_DriverRec_* %3, i64 0, i32 0, i32 2
  %5 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %4, align 8
  %6 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 11, i32 3
  %7 = load %struct.TT_NameRec_*, %struct.TT_NameRec_** %6, align 8
  %8 = icmp eq %struct.TT_NameRec_* %7, null
  br i1 %8, label %27, label %9

9:                                                ; preds = %1
  %10 = bitcast %struct.TT_NameRec_* %7 to i8*
  %11 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 11, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = zext i32 %12 to i64
  %14 = getelementptr inbounds %struct.TT_NameRec_, %struct.TT_NameRec_* %7, i64 %13
  %15 = icmp eq i32 %12, 0
  br i1 %15, label %25, label %16

16:                                               ; preds = %9, %16
  %17 = phi %struct.TT_NameRec_* [ %20, %16 ], [ %7, %9 ]
  %18 = getelementptr inbounds %struct.TT_NameRec_, %struct.TT_NameRec_* %17, i64 0, i32 6
  %19 = load i8*, i8** %18, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %5, i8* %19) #17
  store i8* null, i8** %18, align 8
  %20 = getelementptr inbounds %struct.TT_NameRec_, %struct.TT_NameRec_* %17, i64 1
  %21 = icmp ult %struct.TT_NameRec_* %20, %14
  br i1 %21, label %16, label %22

22:                                               ; preds = %16
  %23 = bitcast %struct.TT_NameRec_** %6 to i8**
  %24 = load i8*, i8** %23, align 8
  br label %25

25:                                               ; preds = %9, %22
  %26 = phi i8* [ %24, %22 ], [ %10, %9 ]
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %5, i8* %26) #17
  store %struct.TT_NameRec_* null, %struct.TT_NameRec_** %6, align 8
  br label %27

27:                                               ; preds = %1, %25
  %28 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 11, i32 5
  %29 = load %struct.TT_LangTagRec_*, %struct.TT_LangTagRec_** %28, align 8
  %30 = icmp eq %struct.TT_LangTagRec_* %29, null
  br i1 %30, label %49, label %31

31:                                               ; preds = %27
  %32 = bitcast %struct.TT_LangTagRec_* %29 to i8*
  %33 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 11, i32 4
  %34 = load i32, i32* %33, align 8
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds %struct.TT_LangTagRec_, %struct.TT_LangTagRec_* %29, i64 %35
  %37 = icmp eq i32 %34, 0
  br i1 %37, label %47, label %38

38:                                               ; preds = %31, %38
  %39 = phi %struct.TT_LangTagRec_* [ %42, %38 ], [ %29, %31 ]
  %40 = getelementptr inbounds %struct.TT_LangTagRec_, %struct.TT_LangTagRec_* %39, i64 0, i32 2
  %41 = load i8*, i8** %40, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %5, i8* %41) #17
  store i8* null, i8** %40, align 8
  %42 = getelementptr inbounds %struct.TT_LangTagRec_, %struct.TT_LangTagRec_* %39, i64 1
  %43 = icmp ult %struct.TT_LangTagRec_* %42, %36
  br i1 %43, label %38, label %44

44:                                               ; preds = %38
  %45 = bitcast %struct.TT_LangTagRec_** %28 to i8**
  %46 = load i8*, i8** %45, align 8
  br label %47

47:                                               ; preds = %31, %44
  %48 = phi i8* [ %46, %44 ], [ %32, %31 ]
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %5, i8* %48) #17
  store %struct.TT_LangTagRec_* null, %struct.TT_LangTagRec_** %28, align 8
  br label %49

49:                                               ; preds = %27, %47
  %50 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 11, i32 1
  store i32 0, i32* %50, align 4
  %51 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 11, i32 4
  store i32 0, i32* %51, align 8
  %52 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 11, i32 0
  store i16 0, i16* %52, align 8
  %53 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 11, i32 2
  store i32 0, i32* %53, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @tt_face_load_kern(%struct.TT_FaceRec_*, %struct.FT_StreamRec_*) #0 {
  %3 = alloca i64, align 8
  %4 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #17
  store i64 -6148914691236517206, i64* %3, align 8
  %5 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 16
  %6 = bitcast {}** %5 to i32 (%struct.TT_FaceRec_*, i64, %struct.FT_StreamRec_*, i64*)**
  %7 = load i32 (%struct.TT_FaceRec_*, i64, %struct.FT_StreamRec_*, i64*)*, i32 (%struct.TT_FaceRec_*, i64, %struct.FT_StreamRec_*, i64*)** %6, align 8
  %8 = call i32 %7(%struct.TT_FaceRec_* %0, i64 1801810542, %struct.FT_StreamRec_* %1, i64* nonnull %3) #17
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %153

10:                                               ; preds = %2
  %11 = load i64, i64* %3, align 8
  %12 = icmp ult i64 %11, 4
  br i1 %12, label %153, label %13

13:                                               ; preds = %10
  %14 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 68
  %15 = call i32 @FT_Stream_ExtractFrame(%struct.FT_StreamRec_* %1, i64 %11, i8** %14) #17
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %153

17:                                               ; preds = %13
  %18 = load i64, i64* %3, align 8
  %19 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 69
  store i64 %18, i64* %19, align 8
  %20 = load i8*, i8** %14, align 8
  %21 = getelementptr inbounds i8, i8* %20, i64 %18
  %22 = getelementptr inbounds i8, i8* %20, i64 2
  %23 = load i8, i8* %22, align 1
  %24 = zext i8 %23 to i32
  %25 = shl nuw nsw i32 %24, 8
  %26 = getelementptr inbounds i8, i8* %20, i64 3
  %27 = load i8, i8* %26, align 1
  %28 = zext i8 %27 to i32
  %29 = or i32 %25, %28
  %30 = icmp ult i32 %29, 32
  %31 = select i1 %30, i32 %29, i32 32
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %146, label %33

33:                                               ; preds = %17
  %34 = getelementptr inbounds i8, i8* %20, i64 4
  br label %35

35:                                               ; preds = %33, %141
  %36 = phi i32 [ %143, %141 ], [ 0, %33 ]
  %37 = phi i32 [ %142, %141 ], [ 0, %33 ]
  %38 = phi i32 [ %144, %141 ], [ 0, %33 ]
  %39 = phi i8* [ %61, %141 ], [ %34, %33 ]
  %40 = shl i32 1, %38
  %41 = getelementptr inbounds i8, i8* %39, i64 6
  %42 = icmp ugt i8* %41, %21
  br i1 %42, label %146, label %43

43:                                               ; preds = %35
  %44 = getelementptr inbounds i8, i8* %39, i64 2
  %45 = load i8, i8* %44, align 1
  %46 = zext i8 %45 to i32
  %47 = shl nuw nsw i32 %46, 8
  %48 = getelementptr inbounds i8, i8* %39, i64 3
  %49 = load i8, i8* %48, align 1
  %50 = zext i8 %49 to i32
  %51 = or i32 %47, %50
  %52 = icmp ult i32 %51, 15
  br i1 %52, label %146, label %53

53:                                               ; preds = %43
  %54 = getelementptr inbounds i8, i8* %39, i64 5
  %55 = load i8, i8* %54, align 1
  %56 = getelementptr inbounds i8, i8* %39, i64 4
  %57 = load i8, i8* %56, align 1
  %58 = zext i32 %51 to i64
  %59 = getelementptr inbounds i8, i8* %39, i64 %58
  %60 = icmp ugt i8* %59, %21
  %61 = select i1 %60, i8* %21, i8* %59
  %62 = icmp ne i8 %57, 0
  %63 = and i8 %55, 3
  %64 = icmp ne i8 %63, 1
  %65 = or i1 %64, %62
  %66 = getelementptr inbounds i8, i8* %39, i64 14
  %67 = icmp ugt i8* %66, %61
  %68 = or i1 %67, %65
  br i1 %68, label %141, label %69

69:                                               ; preds = %53
  %70 = load i8, i8* %41, align 1
  %71 = zext i8 %70 to i32
  %72 = shl nuw nsw i32 %71, 8
  %73 = getelementptr inbounds i8, i8* %39, i64 7
  %74 = load i8, i8* %73, align 1
  %75 = zext i8 %74 to i32
  %76 = or i32 %72, %75
  %77 = ptrtoint i8* %61 to i64
  %78 = ptrtoint i8* %66 to i64
  %79 = sub i64 %77, %78
  %80 = mul nuw nsw i32 %76, 6
  %81 = zext i32 %80 to i64
  %82 = icmp slt i64 %79, %81
  br i1 %82, label %83, label %86

83:                                               ; preds = %69
  %84 = sdiv i64 %79, 6
  %85 = trunc i64 %84 to i32
  br label %86

86:                                               ; preds = %83, %69
  %87 = phi i32 [ %85, %83 ], [ %76, %69 ]
  %88 = or i32 %37, %40
  %89 = icmp eq i32 %87, 0
  br i1 %89, label %141, label %90

90:                                               ; preds = %86
  %91 = add i32 %87, -1
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %139, label %93

93:                                               ; preds = %90
  %94 = zext i32 %91 to i64
  %95 = getelementptr inbounds i8, i8* %39, i64 20
  %96 = getelementptr inbounds i8, i8* %39, i64 15
  %97 = load i8, i8* %96, align 1
  %98 = zext i8 %97 to i64
  %99 = shl nuw nsw i64 %98, 16
  %100 = load i8, i8* %66, align 1
  %101 = zext i8 %100 to i64
  %102 = shl nuw nsw i64 %101, 24
  %103 = or i64 %99, %102
  %104 = getelementptr inbounds i8, i8* %39, i64 16
  %105 = load i8, i8* %104, align 1
  %106 = zext i8 %105 to i64
  %107 = shl nuw nsw i64 %106, 8
  %108 = or i64 %103, %107
  %109 = getelementptr inbounds i8, i8* %39, i64 17
  %110 = load i8, i8* %109, align 1
  %111 = zext i8 %110 to i64
  %112 = or i64 %108, %111
  br label %113

113:                                              ; preds = %93, %135
  %114 = phi i64 [ %133, %135 ], [ %112, %93 ]
  %115 = phi i64 [ %137, %135 ], [ %94, %93 ]
  %116 = phi i8* [ %136, %135 ], [ %95, %93 ]
  %117 = load i8, i8* %116, align 1
  %118 = zext i8 %117 to i64
  %119 = shl nuw nsw i64 %118, 24
  %120 = getelementptr inbounds i8, i8* %116, i64 1
  %121 = load i8, i8* %120, align 1
  %122 = zext i8 %121 to i64
  %123 = shl nuw nsw i64 %122, 16
  %124 = or i64 %123, %119
  %125 = getelementptr inbounds i8, i8* %116, i64 2
  %126 = load i8, i8* %125, align 1
  %127 = zext i8 %126 to i64
  %128 = shl nuw nsw i64 %127, 8
  %129 = or i64 %124, %128
  %130 = getelementptr inbounds i8, i8* %116, i64 3
  %131 = load i8, i8* %130, align 1
  %132 = zext i8 %131 to i64
  %133 = or i64 %129, %132
  %134 = icmp ugt i64 %133, %114
  br i1 %134, label %135, label %141

135:                                              ; preds = %113
  %136 = getelementptr inbounds i8, i8* %116, i64 6
  %137 = add nsw i64 %115, -1
  %138 = icmp eq i64 %137, 0
  br i1 %138, label %139, label %113

139:                                              ; preds = %135, %90
  %140 = or i32 %36, %40
  br label %141

141:                                              ; preds = %113, %139, %53, %86
  %142 = phi i32 [ %88, %139 ], [ %88, %86 ], [ %37, %53 ], [ %88, %113 ]
  %143 = phi i32 [ %140, %139 ], [ %36, %86 ], [ %36, %53 ], [ %36, %113 ]
  %144 = add nuw i32 %38, 1
  %145 = icmp ult i32 %144, %31
  br i1 %145, label %35, label %146

146:                                              ; preds = %141, %43, %35, %17
  %147 = phi i32 [ 0, %17 ], [ %38, %35 ], [ %38, %43 ], [ %144, %141 ]
  %148 = phi i32 [ 0, %17 ], [ %37, %35 ], [ %37, %43 ], [ %142, %141 ]
  %149 = phi i32 [ 0, %17 ], [ %36, %35 ], [ %36, %43 ], [ %143, %141 ]
  %150 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 70
  store i32 %147, i32* %150, align 8
  %151 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 71
  store i32 %148, i32* %151, align 4
  %152 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 72
  store i32 %149, i32* %152, align 8
  br label %153

153:                                              ; preds = %10, %13, %2, %146
  %154 = phi i32 [ %8, %2 ], [ %15, %13 ], [ 0, %146 ], [ 142, %10 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #17
  ret i32 %154
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @tt_face_load_gasp(%struct.TT_FaceRec_*, %struct.FT_StreamRec_*) #0 {
  %3 = alloca i32, align 4
  %4 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #17
  %5 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %1, i64 0, i32 7
  %6 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %5, align 8
  %7 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 16
  %8 = bitcast {}** %7 to i32 (%struct.TT_FaceRec_*, i64, %struct.FT_StreamRec_*, i64*)**
  %9 = load i32 (%struct.TT_FaceRec_*, i64, %struct.FT_StreamRec_*, i64*)*, i32 (%struct.TT_FaceRec_*, i64, %struct.FT_StreamRec_*, i64*)** %8, align 8
  %10 = tail call i32 %9(%struct.TT_FaceRec_* %0, i64 1734439792, %struct.FT_StreamRec_* %1, i64* null) #17
  store i32 %10, i32* %3, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %50

12:                                               ; preds = %2
  %13 = tail call i32 @FT_Stream_EnterFrame(%struct.FT_StreamRec_* %1, i64 4) #17
  store i32 %13, i32* %3, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %50

15:                                               ; preds = %12
  %16 = tail call zeroext i16 @FT_Stream_GetUShort(%struct.FT_StreamRec_* %1) #17
  %17 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 27, i32 0
  store i16 %16, i16* %17, align 8
  %18 = tail call zeroext i16 @FT_Stream_GetUShort(%struct.FT_StreamRec_* %1) #17
  %19 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 27, i32 1
  store i16 %18, i16* %19, align 2
  tail call void @FT_Stream_ExitFrame(%struct.FT_StreamRec_* %1) #17
  %20 = load i16, i16* %17, align 8
  %21 = icmp ugt i16 %20, 1
  br i1 %21, label %22, label %23

22:                                               ; preds = %15
  store i16 0, i16* %19, align 2
  store i32 8, i32* %3, align 4
  br label %50

23:                                               ; preds = %15
  %24 = load i16, i16* %19, align 2
  %25 = zext i16 %24 to i64
  %26 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %6, i64 4, i64 0, i64 %25, i8* null, i32* nonnull %3) #17
  %27 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 27, i32 2
  %28 = bitcast %struct.TT_GaspRangeRec_** %27 to i8**
  store i8* %26, i8** %28, align 8
  %29 = load i32, i32* %3, align 4
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %50

31:                                               ; preds = %23
  %32 = shl nuw nsw i64 %25, 2
  %33 = call i32 @FT_Stream_EnterFrame(%struct.FT_StreamRec_* %1, i64 %32) #17
  store i32 %33, i32* %3, align 4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %50

35:                                               ; preds = %31
  %36 = load %struct.TT_GaspRangeRec_*, %struct.TT_GaspRangeRec_** %27, align 8
  %37 = icmp eq i16 %24, 0
  br i1 %37, label %48, label %38

38:                                               ; preds = %35
  %39 = zext i16 %24 to i64
  br label %40

40:                                               ; preds = %40, %38
  %41 = phi i64 [ 0, %38 ], [ %46, %40 ]
  %42 = call zeroext i16 @FT_Stream_GetUShort(%struct.FT_StreamRec_* %1) #17
  %43 = getelementptr inbounds %struct.TT_GaspRangeRec_, %struct.TT_GaspRangeRec_* %36, i64 %41, i32 0
  store i16 %42, i16* %43, align 2
  %44 = call zeroext i16 @FT_Stream_GetUShort(%struct.FT_StreamRec_* %1) #17
  %45 = getelementptr inbounds %struct.TT_GaspRangeRec_, %struct.TT_GaspRangeRec_* %36, i64 %41, i32 1
  store i16 %44, i16* %45, align 2
  %46 = add nuw nsw i64 %41, 1
  %47 = icmp eq i64 %46, %39
  br i1 %47, label %48, label %40

48:                                               ; preds = %40, %35
  call void @FT_Stream_ExitFrame(%struct.FT_StreamRec_* %1) #17
  %49 = load i32, i32* %3, align 4
  br label %50

50:                                               ; preds = %31, %23, %12, %2, %48, %22
  %51 = phi i32 [ %33, %31 ], [ %29, %23 ], [ %13, %12 ], [ %10, %2 ], [ %49, %48 ], [ 8, %22 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #17
  ret i32 %51
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @tt_face_load_pclt(%struct.TT_FaceRec_*, %struct.FT_StreamRec_*) #0 {
  %3 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 16
  %4 = bitcast {}** %3 to i32 (%struct.TT_FaceRec_*, i64, %struct.FT_StreamRec_*, i64*)**
  %5 = load i32 (%struct.TT_FaceRec_*, i64, %struct.FT_StreamRec_*, i64*)*, i32 (%struct.TT_FaceRec_*, i64, %struct.FT_StreamRec_*, i64*)** %4, align 8
  %6 = tail call i32 %5(%struct.TT_FaceRec_* %0, i64 1346587732, %struct.FT_StreamRec_* %1, i64* null) #17
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %12

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 28
  %10 = bitcast %struct.TT_PCLT_* %9 to i8*
  %11 = tail call i32 @FT_Stream_ReadFields(%struct.FT_StreamRec_* %1, %struct.FT_Frame_Field_* getelementptr inbounds ([17 x %struct.FT_Frame_Field_], [17 x %struct.FT_Frame_Field_]* @tt_face_load_pclt.pclt_fields, i64 0, i64 0), i8* %10) #17
  br label %12

12:                                               ; preds = %2, %8
  %13 = phi i32 [ %6, %2 ], [ %11, %8 ]
  ret i32 %13
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @tt_face_load_bhed(%struct.TT_FaceRec_*, %struct.FT_StreamRec_*) #0 {
  %3 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 16
  %4 = bitcast {}** %3 to i32 (%struct.TT_FaceRec_*, i64, %struct.FT_StreamRec_*, i64*)**
  %5 = load i32 (%struct.TT_FaceRec_*, i64, %struct.FT_StreamRec_*, i64*)*, i32 (%struct.TT_FaceRec_*, i64, %struct.FT_StreamRec_*, i64*)** %4, align 8
  %6 = tail call i32 %5(%struct.TT_FaceRec_* %0, i64 1651008868, %struct.FT_StreamRec_* %1, i64* null) #17
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %12

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 5
  %10 = bitcast %struct.TT_Header_* %9 to i8*
  %11 = tail call i32 @FT_Stream_ReadFields(%struct.FT_StreamRec_* %1, %struct.FT_Frame_Field_* getelementptr inbounds ([21 x %struct.FT_Frame_Field_], [21 x %struct.FT_Frame_Field_]* @tt_face_load_generic_header.header_fields, i64 0, i64 0), i8* %10) #17
  br label %12

12:                                               ; preds = %2, %8
  %13 = phi i32 [ %6, %2 ], [ %11, %8 ]
  ret i32 %13
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @tt_face_load_sbit_image(%struct.TT_FaceRec_*, i64, i32, i32, %struct.FT_StreamRec_*, %struct.FT_Bitmap_*, %struct.TT_SBit_MetricsRec_*) #0 {
  %8 = alloca i16, align 2
  %9 = alloca i16, align 2
  %10 = alloca [1 x %struct.TT_SBitDecoderRec_], align 16
  %11 = alloca %struct.FT_Bitmap_, align 8
  %12 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 65
  %13 = load i32, i32* %12, align 8
  switch i32 %13, label %295 [
    i32 1, label %14
    i32 2, label %14
    i32 3, label %114
  ]

14:                                               ; preds = %7, %7
  %15 = bitcast [1 x %struct.TT_SBitDecoderRec_]* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %15) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %15, i8 -86, i64 88, i1 false)
  %16 = getelementptr inbounds [1 x %struct.TT_SBitDecoderRec_], [1 x %struct.TT_SBitDecoderRec_]* %10, i64 0, i64 0
  %17 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 0, i32 26
  %18 = load %struct.FT_StreamRec_*, %struct.FT_StreamRec_** %17, align 8
  %19 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 67
  %20 = load i32*, i32** %19, align 8
  %21 = getelementptr inbounds i32, i32* %20, i64 %1
  %22 = load i32, i32* %21, align 4
  %23 = zext i32 %22 to i64
  %24 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 76
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %112, label %27

27:                                               ; preds = %14
  %28 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 75
  %29 = load i64, i64* %28, align 8
  %30 = tail call i32 @FT_Stream_Seek(%struct.FT_StreamRec_* %18, i64 %29) #17
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %112

32:                                               ; preds = %27
  %33 = getelementptr inbounds [1 x %struct.TT_SBitDecoderRec_], [1 x %struct.TT_SBitDecoderRec_]* %10, i64 0, i64 0, i32 0
  store %struct.TT_FaceRec_* %0, %struct.TT_FaceRec_** %33, align 16
  %34 = getelementptr inbounds [1 x %struct.TT_SBitDecoderRec_], [1 x %struct.TT_SBitDecoderRec_]* %10, i64 0, i64 0, i32 1
  store %struct.FT_StreamRec_* %18, %struct.FT_StreamRec_** %34, align 8
  %35 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 0, i32 21
  %36 = load %struct.FT_GlyphSlotRec_*, %struct.FT_GlyphSlotRec_** %35, align 8
  %37 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %36, i64 0, i32 10
  %38 = getelementptr inbounds [1 x %struct.TT_SBitDecoderRec_], [1 x %struct.TT_SBitDecoderRec_]* %10, i64 0, i64 0, i32 2
  store %struct.FT_Bitmap_* %37, %struct.FT_Bitmap_** %38, align 16
  %39 = getelementptr inbounds [1 x %struct.TT_SBitDecoderRec_], [1 x %struct.TT_SBitDecoderRec_]* %10, i64 0, i64 0, i32 3
  store %struct.TT_SBit_MetricsRec_* %6, %struct.TT_SBit_MetricsRec_** %39, align 8
  %40 = getelementptr inbounds [1 x %struct.TT_SBitDecoderRec_], [1 x %struct.TT_SBitDecoderRec_]* %10, i64 0, i64 0, i32 4
  store i8 0, i8* %40, align 16
  %41 = getelementptr inbounds [1 x %struct.TT_SBitDecoderRec_], [1 x %struct.TT_SBitDecoderRec_]* %10, i64 0, i64 0, i32 5
  store i8 0, i8* %41, align 1
  %42 = getelementptr inbounds [1 x %struct.TT_SBitDecoderRec_], [1 x %struct.TT_SBitDecoderRec_]* %10, i64 0, i64 0, i32 7
  %43 = bitcast i64* %28 to <2 x i64>*
  %44 = load <2 x i64>, <2 x i64>* %43, align 8
  %45 = bitcast i64* %42 to <2 x i64>*
  store <2 x i64> %44, <2 x i64>* %45, align 8
  %46 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 63
  %47 = bitcast i8** %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = getelementptr inbounds [1 x %struct.TT_SBitDecoderRec_], [1 x %struct.TT_SBitDecoderRec_]* %10, i64 0, i64 0, i32 11
  %50 = bitcast i8** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = inttoptr i64 %48 to i8*
  %52 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 64
  %53 = load i64, i64* %52, align 8
  %54 = getelementptr inbounds i8, i8* %51, i64 %53
  %55 = getelementptr inbounds [1 x %struct.TT_SBitDecoderRec_], [1 x %struct.TT_SBitDecoderRec_]* %10, i64 0, i64 0, i32 12
  store i8* %54, i8** %55, align 16
  %56 = mul nuw nsw i64 %23, 48
  %57 = or i64 %56, 8
  %58 = add nuw nsw i64 %57, 47
  %59 = icmp ugt i64 %58, %53
  br i1 %59, label %112, label %60

60:                                               ; preds = %32
  %61 = getelementptr inbounds i8, i8* %51, i64 8
  %62 = getelementptr inbounds i8, i8* %61, i64 %56
  %63 = getelementptr inbounds i8, i8* %62, i64 4
  %64 = getelementptr inbounds i8, i8* %63, i64 -4
  %65 = load i8, i8* %64, align 1
  %66 = zext i8 %65 to i64
  %67 = shl nuw nsw i64 %66, 24
  %68 = getelementptr inbounds i8, i8* %64, i64 1
  %69 = load i8, i8* %68, align 1
  %70 = zext i8 %69 to i64
  %71 = shl nuw nsw i64 %70, 16
  %72 = or i64 %71, %67
  %73 = getelementptr inbounds i8, i8* %64, i64 2
  %74 = load i8, i8* %73, align 1
  %75 = zext i8 %74 to i64
  %76 = shl nuw nsw i64 %75, 8
  %77 = or i64 %72, %76
  %78 = getelementptr inbounds i8, i8* %64, i64 3
  %79 = load i8, i8* %78, align 1
  %80 = zext i8 %79 to i64
  %81 = or i64 %77, %80
  %82 = getelementptr inbounds [1 x %struct.TT_SBitDecoderRec_], [1 x %struct.TT_SBitDecoderRec_]* %10, i64 0, i64 0, i32 9
  store i64 %81, i64* %82, align 8
  %83 = getelementptr inbounds i8, i8* %63, i64 4
  %84 = getelementptr inbounds i8, i8* %83, i64 4
  %85 = getelementptr inbounds i8, i8* %84, i64 -4
  %86 = load i8, i8* %85, align 1
  %87 = zext i8 %86 to i64
  %88 = shl nuw nsw i64 %87, 24
  %89 = getelementptr inbounds i8, i8* %85, i64 1
  %90 = load i8, i8* %89, align 1
  %91 = zext i8 %90 to i64
  %92 = shl nuw nsw i64 %91, 16
  %93 = or i64 %92, %88
  %94 = getelementptr inbounds i8, i8* %85, i64 2
  %95 = load i8, i8* %94, align 1
  %96 = zext i8 %95 to i64
  %97 = shl nuw nsw i64 %96, 8
  %98 = or i64 %93, %97
  %99 = getelementptr inbounds i8, i8* %85, i64 3
  %100 = load i8, i8* %99, align 1
  %101 = zext i8 %100 to i64
  %102 = or i64 %98, %101
  %103 = getelementptr inbounds [1 x %struct.TT_SBitDecoderRec_], [1 x %struct.TT_SBitDecoderRec_]* %10, i64 0, i64 0, i32 10
  store i64 %102, i64* %103, align 16
  %104 = getelementptr inbounds i8, i8* %84, i64 34
  %105 = load i8, i8* %104, align 1
  %106 = getelementptr inbounds [1 x %struct.TT_SBitDecoderRec_], [1 x %struct.TT_SBitDecoderRec_]* %10, i64 0, i64 0, i32 6
  store i8 %105, i8* %106, align 2
  %107 = icmp ult i64 %53, %81
  br i1 %107, label %112, label %108

108:                                              ; preds = %60
  %109 = sub i64 %53, %81
  %110 = lshr i64 %109, 3
  %111 = icmp ugt i64 %102, %110
  br i1 %111, label %112, label %253

112:                                              ; preds = %60, %108, %32, %14, %27
  %113 = phi i32 [ 3, %32 ], [ 142, %14 ], [ %30, %27 ], [ 3, %108 ], [ 3, %60 ]
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %15) #17
  br label %295

114:                                              ; preds = %7
  %115 = lshr i32 %3, 22
  %116 = trunc i32 %115 to i8
  %117 = and i8 %116, 1
  %118 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 67
  %119 = load i32*, i32** %118, align 8
  %120 = getelementptr inbounds i32, i32* %119, i64 %1
  %121 = load i32, i32* %120, align 4
  %122 = zext i32 %121 to i64
  %123 = getelementptr inbounds %struct.TT_SBit_MetricsRec_, %struct.TT_SBit_MetricsRec_* %6, i64 0, i32 1
  store i16 0, i16* %123, align 2
  %124 = getelementptr inbounds %struct.TT_SBit_MetricsRec_, %struct.TT_SBit_MetricsRec_* %6, i64 0, i32 0
  store i16 0, i16* %124, align 2
  %125 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 63
  %126 = load i8*, i8** %125, align 8
  %127 = getelementptr inbounds i8, i8* %126, i64 8
  %128 = shl nuw nsw i64 %122, 2
  %129 = getelementptr inbounds i8, i8* %127, i64 %128
  %130 = getelementptr inbounds i8, i8* %129, i64 4
  %131 = getelementptr inbounds i8, i8* %130, i64 -4
  %132 = load i8, i8* %131, align 1
  %133 = zext i8 %132 to i64
  %134 = shl nuw nsw i64 %133, 24
  %135 = getelementptr inbounds i8, i8* %131, i64 1
  %136 = load i8, i8* %135, align 1
  %137 = zext i8 %136 to i64
  %138 = shl nuw nsw i64 %137, 16
  %139 = or i64 %138, %134
  %140 = getelementptr inbounds i8, i8* %131, i64 2
  %141 = load i8, i8* %140, align 1
  %142 = zext i8 %141 to i64
  %143 = shl nuw nsw i64 %142, 8
  %144 = or i64 %139, %143
  %145 = getelementptr inbounds i8, i8* %131, i64 3
  %146 = load i8, i8* %145, align 1
  %147 = zext i8 %146 to i64
  %148 = or i64 %144, %147
  %149 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 0, i32 4
  %150 = load i64, i64* %149, align 8
  %151 = trunc i64 %150 to i32
  %152 = icmp ult i32 %151, %2
  br i1 %152, label %295, label %153

153:                                              ; preds = %114
  %154 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 76
  %155 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 75
  %156 = add nuw nsw i64 %148, 4
  br label %157

157:                                              ; preds = %212, %153
  %158 = phi i32 [ 0, %153 ], [ %215, %212 ]
  %159 = phi i32 [ %2, %153 ], [ %214, %212 ]
  %160 = load i64, i64* %154, align 8
  %161 = icmp ugt i64 %160, %148
  br i1 %161, label %162, label %295

162:                                              ; preds = %157
  %163 = sub i64 %160, %148
  %164 = shl i32 %159, 2
  %165 = add i32 %164, 12
  %166 = zext i32 %165 to i64
  %167 = icmp ult i64 %163, %166
  br i1 %167, label %295, label %168

168:                                              ; preds = %162
  %169 = load i64, i64* %155, align 8
  %170 = zext i32 %164 to i64
  %171 = add nuw nsw i64 %156, %170
  %172 = add i64 %171, %169
  %173 = tail call i32 @FT_Stream_Seek(%struct.FT_StreamRec_* %4, i64 %172) #17
  %174 = icmp eq i32 %173, 0
  br i1 %174, label %175, label %295

175:                                              ; preds = %168
  %176 = tail call i32 @FT_Stream_EnterFrame(%struct.FT_StreamRec_* %4, i64 8) #17
  %177 = icmp eq i32 %176, 0
  br i1 %177, label %178, label %295

178:                                              ; preds = %175
  %179 = tail call i64 @FT_Stream_GetULong(%struct.FT_StreamRec_* %4) #17
  %180 = trunc i64 %179 to i32
  %181 = tail call i64 @FT_Stream_GetULong(%struct.FT_StreamRec_* %4) #17
  %182 = trunc i64 %181 to i32
  tail call void @FT_Stream_ExitFrame(%struct.FT_StreamRec_* %4) #17
  %183 = icmp eq i32 %182, %180
  br i1 %183, label %295, label %184

184:                                              ; preds = %178
  %185 = icmp ult i32 %182, %180
  br i1 %185, label %295, label %186

186:                                              ; preds = %184
  %187 = sub i32 %182, %180
  %188 = icmp ult i32 %187, 8
  br i1 %188, label %295, label %189

189:                                              ; preds = %186
  %190 = load i64, i64* %154, align 8
  %191 = sub i64 %190, %148
  %192 = and i64 %181, 4294967295
  %193 = icmp ult i64 %191, %192
  br i1 %193, label %295, label %194

194:                                              ; preds = %189
  %195 = load i64, i64* %155, align 8
  %196 = and i64 %179, 4294967295
  %197 = add nuw nsw i64 %196, %148
  %198 = add i64 %197, %195
  %199 = tail call i32 @FT_Stream_Seek(%struct.FT_StreamRec_* %4, i64 %198) #17
  %200 = icmp eq i32 %199, 0
  br i1 %200, label %201, label %295

201:                                              ; preds = %194
  %202 = zext i32 %187 to i64
  %203 = tail call i32 @FT_Stream_EnterFrame(%struct.FT_StreamRec_* %4, i64 %202) #17
  %204 = icmp eq i32 %203, 0
  br i1 %204, label %205, label %295

205:                                              ; preds = %201
  %206 = tail call zeroext i16 @FT_Stream_GetUShort(%struct.FT_StreamRec_* %4) #17
  %207 = tail call zeroext i16 @FT_Stream_GetUShort(%struct.FT_StreamRec_* %4) #17
  %208 = tail call i64 @FT_Stream_GetULong(%struct.FT_StreamRec_* %4) #17
  %209 = trunc i64 %208 to i32
  switch i32 %209, label %219 [
    i32 1685418085, label %210
    i32 1886283552, label %222
    i32 1785751328, label %220
    i32 1953064550, label %220
    i32 1919378028, label %220
  ]

210:                                              ; preds = %205
  %211 = icmp eq i32 %158, 4
  br i1 %211, label %220, label %212

212:                                              ; preds = %210
  %213 = tail call zeroext i16 @FT_Stream_GetUShort(%struct.FT_StreamRec_* %4) #17
  %214 = zext i16 %213 to i32
  tail call void @FT_Stream_ExitFrame(%struct.FT_StreamRec_* %4) #17
  %215 = add nuw nsw i32 %158, 1
  %216 = load i64, i64* %149, align 8
  %217 = trunc i64 %216 to i32
  %218 = icmp ugt i32 %214, %217
  br i1 %218, label %295, label %157

219:                                              ; preds = %205
  br label %220

220:                                              ; preds = %205, %205, %205, %210, %219
  %221 = phi i32 [ 7, %219 ], [ 2, %205 ], [ 2, %205 ], [ 2, %205 ], [ 3, %210 ]
  tail call void @FT_Stream_ExitFrame(%struct.FT_StreamRec_* %4) #17
  br label %295

222:                                              ; preds = %205
  %223 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 0, i32 21
  %224 = load %struct.FT_GlyphSlotRec_*, %struct.FT_GlyphSlotRec_** %223, align 8
  %225 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %4, i64 0, i32 7
  %226 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %225, align 8
  %227 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %4, i64 0, i32 8
  %228 = load i8*, i8** %227, align 8
  %229 = add i32 %187, -8
  %230 = tail call fastcc i32 @Load_SBit_Png(%struct.FT_GlyphSlotRec_* %224, i32 0, i32 0, i32 32, %struct.TT_SBit_MetricsRec_* %6, %struct.FT_MemoryRec_* %226, i8* %228, i32 %229, i8 zeroext 1, i8 zeroext %117) #17
  tail call void @FT_Stream_ExitFrame(%struct.FT_StreamRec_* %4) #17
  %231 = icmp eq i32 %230, 0
  br i1 %231, label %232, label %295

232:                                              ; preds = %222
  %233 = bitcast i16* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %233) #17
  store i16 -21846, i16* %8, align 2
  %234 = bitcast i16* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %234) #17
  store i16 -21846, i16* %9, align 2
  call void @tt_face_get_metrics(%struct.TT_FaceRec_* %0, i8 zeroext 0, i32 %159, i16* nonnull %8, i16* nonnull %9) #17
  %235 = getelementptr inbounds %struct.TT_SBit_MetricsRec_, %struct.TT_SBit_MetricsRec_* %6, i64 0, i32 2
  store i16 %206, i16* %235, align 2
  %236 = load i16, i16* %124, align 2
  %237 = sub i16 %236, %207
  %238 = getelementptr inbounds %struct.TT_SBit_MetricsRec_, %struct.TT_SBit_MetricsRec_* %6, i64 0, i32 3
  store i16 %237, i16* %238, align 2
  %239 = load i16, i16* %9, align 2
  %240 = zext i16 %239 to i32
  %241 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 0, i32 22
  %242 = load %struct.FT_SizeRec_*, %struct.FT_SizeRec_** %241, align 8
  %243 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %242, i64 0, i32 2, i32 0
  %244 = load i16, i16* %243, align 8
  %245 = zext i16 %244 to i32
  %246 = mul nuw nsw i32 %245, %240
  %247 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 5, i32 5
  %248 = load i16, i16* %247, align 2
  %249 = zext i16 %248 to i32
  %250 = udiv i32 %246, %249
  %251 = trunc i32 %250 to i16
  %252 = getelementptr inbounds %struct.TT_SBit_MetricsRec_, %struct.TT_SBit_MetricsRec_* %6, i64 0, i32 4
  store i16 %251, i16* %252, align 2
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %234) #17
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %233) #17
  br label %259

253:                                              ; preds = %108
  %254 = lshr i32 %3, 22
  %255 = trunc i32 %254 to i8
  %256 = and i8 %255, 1
  %257 = call fastcc i32 @tt_sbit_decoder_load_image(%struct.TT_SBitDecoderRec_* nonnull %16, i32 %2, i32 0, i32 0, i32 0, i8 zeroext %256)
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %15) #17
  %258 = icmp eq i32 %257, 0
  br i1 %258, label %259, label %295

259:                                              ; preds = %232, %253
  %260 = and i32 %3, 5242880
  %261 = icmp eq i32 %260, 0
  br i1 %261, label %262, label %295

262:                                              ; preds = %259
  %263 = getelementptr inbounds %struct.FT_Bitmap_, %struct.FT_Bitmap_* %5, i64 0, i32 5
  %264 = load i8, i8* %263, align 2
  %265 = icmp eq i8 %264, 7
  br i1 %265, label %266, label %295

266:                                              ; preds = %262
  %267 = bitcast %struct.FT_Bitmap_* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %267) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %267, i8 -86, i64 40, i1 false)
  %268 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 0, i32 21
  %269 = load %struct.FT_GlyphSlotRec_*, %struct.FT_GlyphSlotRec_** %268, align 8
  %270 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %269, i64 0, i32 0
  %271 = load %struct.FT_LibraryRec_*, %struct.FT_LibraryRec_** %270, align 8
  call void @FT_Bitmap_Init(%struct.FT_Bitmap_* nonnull %11) #17
  %272 = call i32 @FT_Bitmap_Convert(%struct.FT_LibraryRec_* %271, %struct.FT_Bitmap_* %5, %struct.FT_Bitmap_* nonnull %11, i32 1) #17
  %273 = icmp eq i32 %272, 0
  br i1 %273, label %276, label %274

274:                                              ; preds = %266
  %275 = call i32 @FT_Bitmap_Done(%struct.FT_LibraryRec_* %271, %struct.FT_Bitmap_* nonnull %11) #17
  br label %294

276:                                              ; preds = %266
  %277 = getelementptr inbounds %struct.FT_Bitmap_, %struct.FT_Bitmap_* %11, i64 0, i32 5
  %278 = load i8, i8* %277, align 2
  store i8 %278, i8* %263, align 2
  %279 = getelementptr inbounds %struct.FT_Bitmap_, %struct.FT_Bitmap_* %11, i64 0, i32 2
  %280 = load i32, i32* %279, align 8
  %281 = getelementptr inbounds %struct.FT_Bitmap_, %struct.FT_Bitmap_* %5, i64 0, i32 2
  store i32 %280, i32* %281, align 8
  %282 = getelementptr inbounds %struct.FT_Bitmap_, %struct.FT_Bitmap_* %11, i64 0, i32 4
  %283 = load i16, i16* %282, align 8
  %284 = getelementptr inbounds %struct.FT_Bitmap_, %struct.FT_Bitmap_* %5, i64 0, i32 4
  store i16 %283, i16* %284, align 8
  %285 = load %struct.FT_GlyphSlotRec_*, %struct.FT_GlyphSlotRec_** %268, align 8
  %286 = getelementptr inbounds %struct.FT_Bitmap_, %struct.FT_Bitmap_* %11, i64 0, i32 3
  %287 = load i8*, i8** %286, align 8
  call void @ft_glyphslot_set_bitmap(%struct.FT_GlyphSlotRec_* %285, i8* %287) #17
  %288 = load %struct.FT_GlyphSlotRec_*, %struct.FT_GlyphSlotRec_** %268, align 8
  %289 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %288, i64 0, i32 21
  %290 = load %struct.FT_Slot_InternalRec_*, %struct.FT_Slot_InternalRec_** %289, align 8
  %291 = getelementptr inbounds %struct.FT_Slot_InternalRec_, %struct.FT_Slot_InternalRec_* %290, i64 0, i32 1
  %292 = load i32, i32* %291, align 8
  %293 = or i32 %292, 1
  store i32 %293, i32* %291, align 8
  br label %294

294:                                              ; preds = %276, %274
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %267) #17
  br label %295

295:                                              ; preds = %194, %201, %184, %186, %189, %178, %168, %175, %162, %157, %212, %114, %220, %222, %7, %112, %259, %253, %294, %262
  %296 = phi i32 [ %257, %253 ], [ 0, %259 ], [ %272, %294 ], [ 0, %262 ], [ %113, %112 ], [ 6, %114 ], [ %221, %220 ], [ %230, %222 ], [ 2, %7 ], [ 6, %212 ], [ 3, %157 ], [ 3, %162 ], [ %176, %175 ], [ %173, %168 ], [ 157, %178 ], [ 3, %189 ], [ 3, %186 ], [ 3, %184 ], [ %203, %201 ], [ %199, %194 ]
  ret i32 %296
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @tt_face_get_ps_name(%struct.TT_FaceRec_*, i32, i8** nocapture) #0 {
  %4 = icmp eq %struct.TT_FaceRec_* %0, null
  br i1 %4, label %82, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 7, i32 1
  %7 = load i16, i16* %6, align 8
  %8 = zext i16 %7 to i32
  %9 = icmp ugt i32 %8, %1
  br i1 %9, label %10, label %82

10:                                               ; preds = %5
  %11 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 23
  %12 = bitcast i8** %11 to %struct.FT_Service_PsCMapsRec_**
  %13 = load %struct.FT_Service_PsCMapsRec_*, %struct.FT_Service_PsCMapsRec_** %12, align 8
  %14 = icmp eq %struct.FT_Service_PsCMapsRec_* %13, null
  br i1 %14, label %82, label %15

15:                                               ; preds = %10
  %16 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 31
  %17 = getelementptr inbounds %struct.FT_Service_PsCMapsRec_, %struct.FT_Service_PsCMapsRec_* %13, i64 0, i32 4
  %18 = load i8* (i32)*, i8* (i32)** %17, align 8
  %19 = tail call i8* %18(i32 0) #17
  store i8* %19, i8** %2, align 8
  %20 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 13, i32 0
  %21 = load i64, i64* %20, align 8
  switch i64 %21, label %82 [
    i64 65536, label %22
    i64 131072, label %27
    i64 151552, label %59
  ]

22:                                               ; preds = %15
  %23 = icmp ult i32 %1, 258
  br i1 %23, label %24, label %82

24:                                               ; preds = %22
  %25 = load i8* (i32)*, i8* (i32)** %17, align 8
  %26 = tail call i8* %25(i32 %1) #17
  store i8* %26, i8** %2, align 8
  br label %82

27:                                               ; preds = %15
  %28 = getelementptr inbounds %struct.TT_Post_NamesRec_, %struct.TT_Post_NamesRec_* %16, i64 0, i32 0
  %29 = load i8, i8* %28, align 8
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %31, label %34

31:                                               ; preds = %27
  %32 = tail call fastcc i32 @load_post_names(%struct.TT_FaceRec_* nonnull %0)
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %82

34:                                               ; preds = %31, %27
  %35 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 31, i32 1, i32 0, i32 0
  %36 = load i16, i16* %35, align 8
  %37 = zext i16 %36 to i32
  %38 = icmp ugt i32 %37, %1
  br i1 %38, label %39, label %82

39:                                               ; preds = %34
  %40 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 31, i32 1, i32 0, i32 2
  %41 = load i16*, i16** %40, align 8
  %42 = zext i32 %1 to i64
  %43 = getelementptr inbounds i16, i16* %41, i64 %42
  %44 = load i16, i16* %43, align 2
  %45 = zext i16 %44 to i32
  %46 = icmp ult i16 %44, 258
  br i1 %46, label %47, label %50

47:                                               ; preds = %39
  %48 = load i8* (i32)*, i8* (i32)** %17, align 8
  %49 = tail call i8* %48(i32 %45) #17
  store i8* %49, i8** %2, align 8
  br label %82

50:                                               ; preds = %39
  %51 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 31, i32 1, i32 0, i32 3
  %52 = load i8**, i8*** %51, align 8
  %53 = add nsw i32 %45, -258
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds i8*, i8** %52, i64 %54
  %56 = bitcast i8** %55 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = bitcast i8** %2 to i64*
  store i64 %57, i64* %58, align 8
  br label %82

59:                                               ; preds = %15
  %60 = getelementptr inbounds %struct.TT_Post_NamesRec_, %struct.TT_Post_NamesRec_* %16, i64 0, i32 0
  %61 = load i8, i8* %60, align 8
  %62 = icmp eq i8 %61, 0
  br i1 %62, label %63, label %66

63:                                               ; preds = %59
  %64 = tail call fastcc i32 @load_post_names(%struct.TT_FaceRec_* nonnull %0)
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %82

66:                                               ; preds = %63, %59
  %67 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 31, i32 1, i32 0, i32 0
  %68 = load i16, i16* %67, align 8
  %69 = zext i16 %68 to i32
  %70 = icmp ugt i32 %69, %1
  br i1 %70, label %71, label %82

71:                                               ; preds = %66
  %72 = load i8* (i32)*, i8* (i32)** %17, align 8
  %73 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 31, i32 1, i32 0, i32 2
  %74 = bitcast i16** %73 to i8**
  %75 = load i8*, i8** %74, align 8
  %76 = zext i32 %1 to i64
  %77 = getelementptr inbounds i8, i8* %75, i64 %76
  %78 = load i8, i8* %77, align 1
  %79 = sext i8 %78 to i32
  %80 = add nsw i32 %79, %1
  %81 = tail call i8* %72(i32 %80) #17
  store i8* %81, i8** %2, align 8
  br label %82

82:                                               ; preds = %22, %24, %34, %50, %47, %31, %15, %66, %71, %63, %10, %5, %3
  %83 = phi i32 [ 35, %3 ], [ 16, %5 ], [ 7, %10 ], [ 0, %63 ], [ 0, %71 ], [ 0, %66 ], [ 0, %15 ], [ 0, %31 ], [ 0, %47 ], [ 0, %50 ], [ 0, %34 ], [ 0, %24 ], [ 0, %22 ]
  ret i32 %83
}

; Function Attrs: nounwind ssp uwtable
define internal void @tt_face_free_ps_names(%struct.TT_FaceRec_* nocapture) #0 {
  %2 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 0, i32 25
  %3 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %2, align 8
  %4 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 31, i32 0
  %5 = load i8, i8* %4, align 8
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %33, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 13, i32 0
  %9 = load i64, i64* %8, align 8
  switch i64 %9, label %33 [
    i64 131072, label %10
    i64 151552, label %28
  ]

10:                                               ; preds = %7
  %11 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 31, i32 1, i32 0, i32 2
  %12 = bitcast i16** %11 to i8**
  %13 = load i8*, i8** %12, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %3, i8* %13) #17
  store i16* null, i16** %11, align 8
  %14 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 31, i32 1, i32 0, i32 0
  store i16 0, i16* %14, align 8
  %15 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 31, i32 1, i32 0, i32 1
  %16 = load i16, i16* %15, align 2
  %17 = icmp eq i16 %16, 0
  br i1 %17, label %33, label %18

18:                                               ; preds = %10
  %19 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 31, i32 1, i32 0, i32 3
  %20 = load i8**, i8*** %19, align 8
  %21 = load i8*, i8** %20, align 8
  %22 = getelementptr inbounds i8, i8* %21, i64 -1
  store i8* %22, i8** %20, align 8
  %23 = load i8**, i8*** %19, align 8
  %24 = load i8*, i8** %23, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %3, i8* %24) #17
  %25 = load i8**, i8*** %19, align 8
  store i8* null, i8** %25, align 8
  %26 = bitcast i8*** %19 to i8**
  %27 = load i8*, i8** %26, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %3, i8* %27) #17
  store i8** null, i8*** %19, align 8
  store i16 0, i16* %15, align 2
  br label %33

28:                                               ; preds = %7
  %29 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 31, i32 1, i32 0, i32 2
  %30 = bitcast i16** %29 to i8**
  %31 = load i8*, i8** %30, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %3, i8* %31) #17
  store i8* null, i8** %30, align 8
  %32 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 31, i32 1, i32 0, i32 0
  store i16 0, i16* %32, align 8
  br label %33

33:                                               ; preds = %7, %18, %10, %1, %28
  store i8 0, i8* %4, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal i32 @tt_face_get_kerning(%struct.TT_FaceRec_* nocapture readonly, i32, i32) #2 {
  %4 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 68
  %5 = load i8*, i8** %4, align 8
  %6 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 69
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds i8, i8* %5, i64 %7
  %9 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 70
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i64 %7, 10
  %13 = or i1 %12, %11
  br i1 %13, label %162, label %14

14:                                               ; preds = %3
  %15 = getelementptr inbounds i8, i8* %5, i64 4
  %16 = getelementptr inbounds i8, i8* %5, i64 10
  %17 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 71
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %1 to i64
  %20 = shl nuw nsw i64 %19, 16
  %21 = zext i32 %2 to i64
  %22 = or i64 %20, %21
  %23 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 72
  br label %24

24:                                               ; preds = %14, %154
  %25 = phi i8* [ %16, %14 ], [ %159, %154 ]
  %26 = phi i32 [ 0, %14 ], [ %155, %154 ]
  %27 = phi i32 [ %10, %14 ], [ %156, %154 ]
  %28 = phi i32 [ 1, %14 ], [ %157, %154 ]
  %29 = phi i8* [ %15, %14 ], [ %44, %154 ]
  %30 = getelementptr inbounds i8, i8* %29, i64 2
  %31 = load i8, i8* %30, align 1
  %32 = zext i8 %31 to i64
  %33 = shl nuw nsw i64 %32, 8
  %34 = getelementptr inbounds i8, i8* %29, i64 3
  %35 = load i8, i8* %34, align 1
  %36 = zext i8 %35 to i64
  %37 = or i64 %33, %36
  %38 = getelementptr inbounds i8, i8* %29, i64 4
  %39 = load i8, i8* %38, align 1
  %40 = getelementptr inbounds i8, i8* %29, i64 5
  %41 = load i8, i8* %40, align 1
  %42 = getelementptr inbounds i8, i8* %29, i64 %37
  %43 = icmp ugt i8* %42, %8
  %44 = select i1 %43, i8* %8, i8* %42
  %45 = and i32 %18, %28
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %154, label %47

47:                                               ; preds = %24
  %48 = load i8, i8* %25, align 1
  %49 = zext i8 %48 to i32
  %50 = shl nuw nsw i32 %49, 8
  %51 = getelementptr inbounds i8, i8* %29, i64 7
  %52 = load i8, i8* %51, align 1
  %53 = zext i8 %52 to i32
  %54 = or i32 %50, %53
  %55 = getelementptr inbounds i8, i8* %29, i64 14
  %56 = ptrtoint i8* %44 to i64
  %57 = ptrtoint i8* %55 to i64
  %58 = sub i64 %56, %57
  %59 = mul nuw nsw i32 %54, 6
  %60 = zext i32 %59 to i64
  %61 = icmp slt i64 %58, %60
  br i1 %61, label %62, label %65

62:                                               ; preds = %47
  %63 = sdiv i64 %58, 6
  %64 = trunc i64 %63 to i32
  br label %65

65:                                               ; preds = %62, %47
  %66 = phi i32 [ %64, %62 ], [ %54, %47 ]
  %67 = icmp eq i8 %39, 0
  br i1 %67, label %68, label %154

68:                                               ; preds = %65
  %69 = load i32, i32* %23, align 8
  %70 = and i32 %69, %28
  %71 = icmp eq i32 %70, 0
  %72 = icmp eq i32 %66, 0
  br i1 %71, label %76, label %73

73:                                               ; preds = %68
  br i1 %72, label %154, label %74

74:                                               ; preds = %73
  %75 = getelementptr inbounds i8, i8* %29, i64 18
  br label %77

76:                                               ; preds = %68
  br i1 %72, label %154, label %112

77:                                               ; preds = %74, %104
  %78 = phi i32 [ %66, %74 ], [ %108, %104 ]
  %79 = phi i32 [ 0, %74 ], [ %107, %104 ]
  %80 = add i32 %78, %79
  %81 = lshr i32 %80, 1
  %82 = mul i32 %81, 6
  %83 = zext i32 %82 to i64
  %84 = getelementptr inbounds i8, i8* %75, i64 %83
  %85 = getelementptr inbounds i8, i8* %84, i64 -4
  %86 = load i8, i8* %85, align 1
  %87 = zext i8 %86 to i64
  %88 = shl nuw nsw i64 %87, 24
  %89 = getelementptr inbounds i8, i8* %85, i64 1
  %90 = load i8, i8* %89, align 1
  %91 = zext i8 %90 to i64
  %92 = shl nuw nsw i64 %91, 16
  %93 = or i64 %92, %88
  %94 = getelementptr inbounds i8, i8* %85, i64 2
  %95 = load i8, i8* %94, align 1
  %96 = zext i8 %95 to i64
  %97 = shl nuw nsw i64 %96, 8
  %98 = or i64 %93, %97
  %99 = getelementptr inbounds i8, i8* %85, i64 3
  %100 = load i8, i8* %99, align 1
  %101 = zext i8 %100 to i64
  %102 = or i64 %98, %101
  %103 = icmp eq i64 %102, %22
  br i1 %103, label %110, label %104

104:                                              ; preds = %77
  %105 = icmp ult i64 %102, %22
  %106 = add nuw i32 %81, 1
  %107 = select i1 %105, i32 %106, i32 %79
  %108 = select i1 %105, i32 %78, i32 %81
  %109 = icmp ult i32 %107, %108
  br i1 %109, label %77, label %154

110:                                              ; preds = %77
  %111 = getelementptr inbounds i8, i8* %84, i64 1
  br label %140

112:                                              ; preds = %76, %133
  %113 = phi i32 [ %135, %133 ], [ %66, %76 ]
  %114 = phi i8* [ %134, %133 ], [ %55, %76 ]
  %115 = load i8, i8* %114, align 1
  %116 = zext i8 %115 to i64
  %117 = shl nuw nsw i64 %116, 24
  %118 = getelementptr inbounds i8, i8* %114, i64 1
  %119 = load i8, i8* %118, align 1
  %120 = zext i8 %119 to i64
  %121 = shl nuw nsw i64 %120, 16
  %122 = or i64 %121, %117
  %123 = getelementptr inbounds i8, i8* %114, i64 2
  %124 = load i8, i8* %123, align 1
  %125 = zext i8 %124 to i64
  %126 = shl nuw nsw i64 %125, 8
  %127 = or i64 %122, %126
  %128 = getelementptr inbounds i8, i8* %114, i64 3
  %129 = load i8, i8* %128, align 1
  %130 = zext i8 %129 to i64
  %131 = or i64 %127, %130
  %132 = icmp eq i64 %131, %22
  br i1 %132, label %137, label %133

133:                                              ; preds = %112
  %134 = getelementptr inbounds i8, i8* %114, i64 6
  %135 = add i32 %113, -1
  %136 = icmp eq i32 %135, 0
  br i1 %136, label %154, label %112

137:                                              ; preds = %112
  %138 = getelementptr inbounds i8, i8* %114, i64 4
  %139 = getelementptr inbounds i8, i8* %114, i64 5
  br label %140

140:                                              ; preds = %110, %137
  %141 = phi i8* [ %111, %110 ], [ %139, %137 ]
  %142 = phi i8* [ %84, %110 ], [ %138, %137 ]
  %143 = load i8, i8* %142, align 1
  %144 = zext i8 %143 to i16
  %145 = shl nuw i16 %144, 8
  %146 = load i8, i8* %141, align 1
  %147 = zext i8 %146 to i16
  %148 = or i16 %145, %147
  %149 = sext i16 %148 to i32
  %150 = and i8 %41, 8
  %151 = icmp eq i8 %150, 0
  %152 = select i1 %151, i32 %26, i32 0
  %153 = add nsw i32 %152, %149
  br label %154

154:                                              ; preds = %104, %133, %73, %76, %140, %65, %24
  %155 = phi i32 [ %26, %24 ], [ %26, %65 ], [ %153, %140 ], [ %26, %76 ], [ %26, %73 ], [ %26, %133 ], [ %26, %104 ]
  %156 = add i32 %27, -1
  %157 = shl i32 %28, 1
  %158 = icmp eq i32 %156, 0
  %159 = getelementptr inbounds i8, i8* %44, i64 6
  %160 = icmp ugt i8* %159, %8
  %161 = or i1 %160, %158
  br i1 %161, label %162, label %24

162:                                              ; preds = %154, %3
  %163 = phi i32 [ 0, %3 ], [ %155, %154 ]
  ret i32 %163
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @tt_face_load_font_dir(%struct.TT_FaceRec_* nocapture, %struct.FT_StreamRec_*) #0 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.TT_TableRec_, align 8
  %5 = alloca %struct.SFNT_HeaderRec_, align 8
  %6 = alloca i32, align 4
  %7 = bitcast %struct.SFNT_HeaderRec_* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #17
  %8 = getelementptr inbounds %struct.SFNT_HeaderRec_, %struct.SFNT_HeaderRec_* %5, i64 0, i32 0
  %9 = getelementptr inbounds %struct.SFNT_HeaderRec_, %struct.SFNT_HeaderRec_* %5, i64 0, i32 1
  %10 = getelementptr inbounds %struct.SFNT_HeaderRec_, %struct.SFNT_HeaderRec_* %5, i64 0, i32 5
  %11 = bitcast i32* %6 to i8*
  %12 = getelementptr inbounds %struct.SFNT_HeaderRec_, %struct.SFNT_HeaderRec_* %5, i64 0, i32 1
  %13 = bitcast i16* %12 to i64*
  store i64 -6148914691236517206, i64* %13, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #17
  store i32 -1431655766, i32* %6, align 4
  %14 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %1, i64 0, i32 7
  %15 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %14, align 8
  %16 = tail call i64 @FT_Stream_Pos(%struct.FT_StreamRec_* %1) #17
  store i64 %16, i64* %10, align 8
  %17 = call i64 @FT_Stream_ReadULong(%struct.FT_StreamRec_* %1, i32* nonnull %6) #17
  store i64 %17, i64* %8, align 8
  %18 = load i32, i32* %6, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %187

20:                                               ; preds = %2
  %21 = call i32 @FT_Stream_ReadFields(%struct.FT_StreamRec_* %1, %struct.FT_Frame_Field_* getelementptr inbounds ([6 x %struct.FT_Frame_Field_], [6 x %struct.FT_Frame_Field_]* @tt_face_load_font_dir.offset_table_fields, i64 0, i64 0), i8* nonnull %7) #17
  store i32 %21, i32* %6, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %187

23:                                               ; preds = %20
  %24 = load i64, i64* %8, align 8
  %25 = icmp eq i64 %24, 1330926671
  br i1 %25, label %112, label %26

26:                                               ; preds = %23
  %27 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %27) #17
  %28 = load i64, i64* %10, align 8
  %29 = add i64 %28, 12
  %30 = call i32 @FT_Stream_Seek(%struct.FT_StreamRec_* %1, i64 %29) #17
  store i32 %30, i32* %3, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %108

32:                                               ; preds = %26
  %33 = load i16, i16* %9, align 8
  %34 = icmp eq i16 %33, 0
  br i1 %34, label %100, label %35

35:                                               ; preds = %32
  %36 = bitcast %struct.TT_TableRec_* %4 to i8*
  %37 = getelementptr inbounds %struct.TT_TableRec_, %struct.TT_TableRec_* %4, i64 0, i32 0
  %38 = getelementptr inbounds %struct.TT_TableRec_, %struct.TT_TableRec_* %4, i64 0, i32 2
  %39 = getelementptr inbounds %struct.TT_TableRec_, %struct.TT_TableRec_* %4, i64 0, i32 3
  %40 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %1, i64 0, i32 1
  %41 = add i64 %28, 28
  br label %42

42:                                               ; preds = %85, %35
  %43 = phi i64 [ 0, %35 ], [ %90, %85 ]
  %44 = phi i32 [ 0, %35 ], [ %89, %85 ]
  %45 = phi i32 [ 0, %35 ], [ %88, %85 ]
  %46 = phi i32 [ 0, %35 ], [ %87, %85 ]
  %47 = phi i16 [ 0, %35 ], [ %86, %85 ]
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %36) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %36, i8 -86, i64 32, i1 false) #17
  %48 = call i32 @FT_Stream_ReadFields(%struct.FT_StreamRec_* %1, %struct.FT_Frame_Field_* getelementptr inbounds ([6 x %struct.FT_Frame_Field_], [6 x %struct.FT_Frame_Field_]* @check_table_dir.table_dir_entry_fields, i64 0, i64 0), i8* nonnull %36) #17
  store i32 %48, i32* %3, align 4
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %53, label %50

50:                                               ; preds = %42
  %51 = trunc i64 %43 to i16
  %52 = add i16 %51, -1
  store i16 %52, i16* %9, align 8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %36) #17
  br label %94

53:                                               ; preds = %42
  %54 = load i64, i64* %38, align 8
  %55 = load i64, i64* %40, align 8
  %56 = icmp ult i64 %55, %54
  br i1 %56, label %85, label %57

57:                                               ; preds = %53
  %58 = load i64, i64* %39, align 8
  %59 = sub i64 %55, %54
  %60 = icmp ugt i64 %58, %59
  %61 = load i64, i64* %37, align 8
  br i1 %60, label %62, label %63

62:                                               ; preds = %57
  switch i64 %61, label %85 [
    i64 1752003704, label %63
    i64 1986884728, label %63
  ]

63:                                               ; preds = %62, %62, %57
  %64 = add i16 %47, 1
  switch i64 %61, label %82 [
    i64 1751474532, label %65
    i64 1651008868, label %65
    i64 1397313095, label %85
    i64 1296389185, label %81
  ]

65:                                               ; preds = %63, %63
  %66 = icmp ult i64 %58, 54
  br i1 %66, label %67, label %68

67:                                               ; preds = %65
  store i32 142, i32* %3, align 4
  br label %83

68:                                               ; preds = %65
  %69 = add i64 %54, 12
  %70 = call i32 @FT_Stream_Seek(%struct.FT_StreamRec_* %1, i64 %69) #17
  store i32 %70, i32* %3, align 4
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %83

72:                                               ; preds = %68
  %73 = call i64 @FT_Stream_ReadULong(%struct.FT_StreamRec_* %1, i32* nonnull %3) #17
  %74 = load i32, i32* %3, align 4
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %83

76:                                               ; preds = %72
  %77 = shl nuw nsw i64 %43, 4
  %78 = add i64 %41, %77
  %79 = call i32 @FT_Stream_Seek(%struct.FT_StreamRec_* %1, i64 %78) #17
  store i32 %79, i32* %3, align 4
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %85, label %83

81:                                               ; preds = %63
  br label %85

82:                                               ; preds = %63
  br label %85

83:                                               ; preds = %76, %72, %68, %67
  %84 = phi i32 [ 142, %67 ], [ %79, %76 ], [ %70, %68 ], [ %74, %72 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %36) #17
  br label %108

85:                                               ; preds = %82, %81, %76, %63, %62, %53
  %86 = phi i16 [ %64, %81 ], [ %64, %82 ], [ %64, %63 ], [ %64, %76 ], [ %47, %62 ], [ %47, %53 ]
  %87 = phi i32 [ %46, %81 ], [ %46, %82 ], [ %46, %63 ], [ 1, %76 ], [ %46, %62 ], [ %46, %53 ]
  %88 = phi i32 [ %45, %81 ], [ %45, %82 ], [ 1, %63 ], [ %45, %76 ], [ %45, %62 ], [ %45, %53 ]
  %89 = phi i32 [ 1, %81 ], [ %44, %82 ], [ %44, %63 ], [ %44, %76 ], [ %44, %62 ], [ %44, %53 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %36) #17
  %90 = add nuw nsw i64 %43, 1
  %91 = load i16, i16* %9, align 8
  %92 = zext i16 %91 to i64
  %93 = icmp ult i64 %90, %92
  br i1 %93, label %42, label %94

94:                                               ; preds = %85, %50
  %95 = phi i16 [ %47, %50 ], [ %86, %85 ]
  %96 = phi i32 [ %46, %50 ], [ %87, %85 ]
  %97 = phi i32 [ %45, %50 ], [ %88, %85 ]
  %98 = phi i32 [ %44, %50 ], [ %89, %85 ]
  %99 = icmp eq i16 %95, 0
  br i1 %99, label %100, label %101

100:                                              ; preds = %32, %94
  store i32 2, i32* %3, align 4
  br label %108

101:                                              ; preds = %94
  %102 = icmp eq i32 %96, 0
  br i1 %102, label %103, label %110

103:                                              ; preds = %101
  %104 = icmp ne i32 %97, 0
  %105 = icmp ne i32 %98, 0
  %106 = and i1 %104, %105
  br i1 %106, label %110, label %107

107:                                              ; preds = %103
  store i32 142, i32* %3, align 4
  br label %108

108:                                              ; preds = %100, %107, %26, %83
  %109 = phi i32 [ %84, %83 ], [ %30, %26 ], [ 142, %107 ], [ 2, %100 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %27) #17
  store i32 %109, i32* %6, align 4
  br label %187

110:                                              ; preds = %101, %103
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %27) #17
  store i32 0, i32* %6, align 4
  %111 = load i64, i64* %8, align 8
  br label %116

112:                                              ; preds = %23
  %113 = load i16, i16* %9, align 8
  %114 = icmp eq i16 %113, 0
  br i1 %114, label %115, label %116

115:                                              ; preds = %112
  store i32 2, i32* %6, align 4
  br label %187

116:                                              ; preds = %110, %112
  %117 = phi i64 [ 1330926671, %112 ], [ %111, %110 ]
  %118 = phi i16 [ %113, %112 ], [ %95, %110 ]
  %119 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 3
  store i16 %118, i16* %119, align 8
  %120 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 2
  store i64 %117, i64* %120, align 8
  %121 = zext i16 %118 to i64
  %122 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %15, i64 32, i64 0, i64 %121, i8* null, i32* nonnull %6) #17
  %123 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 4
  %124 = bitcast %struct.TT_TableRec_** %123 to i8**
  store i8* %122, i8** %124, align 8
  %125 = load i32, i32* %6, align 4
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %127, label %187

127:                                              ; preds = %116
  %128 = load i64, i64* %10, align 8
  %129 = add i64 %128, 12
  %130 = call i32 @FT_Stream_Seek(%struct.FT_StreamRec_* %1, i64 %129) #17
  store i32 %130, i32* %6, align 4
  %131 = icmp eq i32 %130, 0
  br i1 %131, label %132, label %187

132:                                              ; preds = %127
  %133 = load i16, i16* %9, align 8
  %134 = zext i16 %133 to i64
  %135 = shl nuw nsw i64 %134, 4
  %136 = call i32 @FT_Stream_EnterFrame(%struct.FT_StreamRec_* %1, i64 %135) #17
  store i32 %136, i32* %6, align 4
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %138, label %187

138:                                              ; preds = %132
  %139 = load i16, i16* %9, align 8
  %140 = icmp eq i16 %139, 0
  br i1 %140, label %184, label %141

141:                                              ; preds = %138
  %142 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %1, i64 0, i32 1
  br label %143

143:                                              ; preds = %141, %179
  %144 = phi i16 [ 0, %141 ], [ %181, %179 ]
  %145 = phi i16 [ 0, %141 ], [ %180, %179 ]
  %146 = call i64 @FT_Stream_GetULong(%struct.FT_StreamRec_* %1) #17
  %147 = call i64 @FT_Stream_GetULong(%struct.FT_StreamRec_* %1) #17
  %148 = call i64 @FT_Stream_GetULong(%struct.FT_StreamRec_* %1) #17
  %149 = call i64 @FT_Stream_GetULong(%struct.FT_StreamRec_* %1) #17
  %150 = load i64, i64* %142, align 8
  %151 = icmp ult i64 %150, %148
  br i1 %151, label %179, label %152

152:                                              ; preds = %143
  %153 = sub i64 %150, %148
  %154 = icmp ugt i64 %149, %153
  br i1 %154, label %155, label %158

155:                                              ; preds = %152
  switch i64 %146, label %179 [
    i64 1752003704, label %156
    i64 1986884728, label %156
  ]

156:                                              ; preds = %155, %155
  %157 = and i64 %153, 4294967292
  br label %158

158:                                              ; preds = %152, %156
  %159 = phi i64 [ %157, %156 ], [ %149, %152 ]
  %160 = icmp eq i16 %145, 0
  %161 = load %struct.TT_TableRec_*, %struct.TT_TableRec_** %123, align 8
  br i1 %160, label %172, label %162

162:                                              ; preds = %158
  %163 = zext i16 %145 to i64
  br label %166

164:                                              ; preds = %166
  %165 = icmp eq i64 %171, %163
  br i1 %165, label %172, label %166

166:                                              ; preds = %164, %162
  %167 = phi i64 [ 0, %162 ], [ %171, %164 ]
  %168 = getelementptr inbounds %struct.TT_TableRec_, %struct.TT_TableRec_* %161, i64 %167, i32 0
  %169 = load i64, i64* %168, align 8
  %170 = icmp eq i64 %169, %146
  %171 = add nuw nsw i64 %167, 1
  br i1 %170, label %179, label %164

172:                                              ; preds = %164, %158
  %173 = phi i64 [ 0, %158 ], [ %163, %164 ]
  %174 = add i16 %145, 1
  %175 = getelementptr inbounds %struct.TT_TableRec_, %struct.TT_TableRec_* %161, i64 %173, i32 0
  store i64 %146, i64* %175, align 8
  %176 = getelementptr inbounds %struct.TT_TableRec_, %struct.TT_TableRec_* %161, i64 %173, i32 1
  store i64 %147, i64* %176, align 8
  %177 = getelementptr inbounds %struct.TT_TableRec_, %struct.TT_TableRec_* %161, i64 %173, i32 2
  store i64 %148, i64* %177, align 8
  %178 = getelementptr inbounds %struct.TT_TableRec_, %struct.TT_TableRec_* %161, i64 %173, i32 3
  store i64 %159, i64* %178, align 8
  br label %179

179:                                              ; preds = %166, %155, %143, %172
  %180 = phi i16 [ %145, %143 ], [ %145, %155 ], [ %174, %172 ], [ %145, %166 ]
  %181 = add nuw i16 %144, 1
  %182 = load i16, i16* %9, align 8
  %183 = icmp ult i16 %181, %182
  br i1 %183, label %143, label %184

184:                                              ; preds = %179, %138
  %185 = phi i16 [ 0, %138 ], [ %180, %179 ]
  store i16 %185, i16* %119, align 8
  call void @FT_Stream_ExitFrame(%struct.FT_StreamRec_* %1) #17
  %186 = load i32, i32* %6, align 4
  br label %187

187:                                              ; preds = %108, %132, %127, %116, %20, %2, %184, %115
  %188 = phi i32 [ %109, %108 ], [ %136, %132 ], [ %130, %127 ], [ %125, %116 ], [ %21, %20 ], [ %18, %2 ], [ %186, %184 ], [ 2, %115 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #17
  ret i32 %188
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @tt_face_load_hmtx(%struct.TT_FaceRec_*, %struct.FT_StreamRec_*, i8 zeroext) #0 {
  %4 = alloca i64, align 8
  %5 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #17
  store i64 -6148914691236517206, i64* %4, align 8
  %6 = icmp eq i8 %2, 0
  %7 = select i1 %6, i64 1752003704, i64 1986884728
  %8 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 16
  %9 = bitcast {}** %8 to i32 (%struct.TT_FaceRec_*, i64, %struct.FT_StreamRec_*, i64*)**
  %10 = load i32 (%struct.TT_FaceRec_*, i64, %struct.FT_StreamRec_*, i64*)*, i32 (%struct.TT_FaceRec_*, i64, %struct.FT_StreamRec_*, i64*)** %9, align 8
  %11 = call i32 %10(%struct.TT_FaceRec_* %0, i64 %7, %struct.FT_StreamRec_* %1, i64* nonnull %4) #17
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %22

13:                                               ; preds = %3
  %14 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 54
  %15 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 55
  %16 = select i1 %6, i64* %14, i64* %15
  %17 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 73
  %18 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 74
  %19 = select i1 %6, i64* %17, i64* %18
  %20 = load i64, i64* %4, align 8
  store i64 %20, i64* %16, align 8
  %21 = call i64 @FT_Stream_Pos(%struct.FT_StreamRec_* %1) #17
  store i64 %21, i64* %19, align 8
  br label %22

22:                                               ; preds = %3, %13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #17
  ret i32 %11
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @tt_face_load_sbit(%struct.TT_FaceRec_*, %struct.FT_StreamRec_*) #0 {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #17
  store i64 -6148914691236517206, i64* %3, align 8
  %6 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 63
  %7 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 64
  %8 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 65
  %9 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 66
  %10 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 16
  %11 = bitcast {}** %10 to i32 (%struct.TT_FaceRec_*, i64, %struct.FT_StreamRec_*, i64*)**
  %12 = bitcast i8** %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 24, i1 false)
  %13 = load i32 (%struct.TT_FaceRec_*, i64, %struct.FT_StreamRec_*, i64*)*, i32 (%struct.TT_FaceRec_*, i64, %struct.FT_StreamRec_*, i64*)** %11, align 8
  %14 = call i32 %13(%struct.TT_FaceRec_* %0, i64 1128418371, %struct.FT_StreamRec_* %1, i64* nonnull %3) #17
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %28, label %16

16:                                               ; preds = %2
  %17 = load i32 (%struct.TT_FaceRec_*, i64, %struct.FT_StreamRec_*, i64*)*, i32 (%struct.TT_FaceRec_*, i64, %struct.FT_StreamRec_*, i64*)** %11, align 8
  %18 = call i32 %17(%struct.TT_FaceRec_* %0, i64 1161972803, %struct.FT_StreamRec_* %1, i64* nonnull %3) #17
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %28, label %20

20:                                               ; preds = %16
  %21 = load i32 (%struct.TT_FaceRec_*, i64, %struct.FT_StreamRec_*, i64*)*, i32 (%struct.TT_FaceRec_*, i64, %struct.FT_StreamRec_*, i64*)** %11, align 8
  %22 = call i32 %21(%struct.TT_FaceRec_* %0, i64 1651273571, %struct.FT_StreamRec_* %1, i64* nonnull %3) #17
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %28, label %24

24:                                               ; preds = %20
  %25 = load i32 (%struct.TT_FaceRec_*, i64, %struct.FT_StreamRec_*, i64*)*, i32 (%struct.TT_FaceRec_*, i64, %struct.FT_StreamRec_*, i64*)** %11, align 8
  %26 = call i32 %25(%struct.TT_FaceRec_* %0, i64 1935829368, %struct.FT_StreamRec_* %1, i64* nonnull %3) #17
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %153

28:                                               ; preds = %24, %20, %16, %2
  %29 = phi i32 [ 2, %2 ], [ 1, %16 ], [ 1, %20 ], [ 3, %24 ]
  store i32 %29, i32* %8, align 8
  %30 = load i64, i64* %3, align 8
  %31 = icmp ult i64 %30, 8
  br i1 %31, label %153, label %32

32:                                               ; preds = %28
  %33 = call i64 @FT_Stream_Pos(%struct.FT_StreamRec_* %1) #17
  %34 = load i32, i32* %8, align 8
  switch i32 %34, label %122 [
    i32 1, label %35
    i32 2, label %35
    i32 3, label %88
  ]

35:                                               ; preds = %32, %32
  %36 = load i64, i64* %3, align 8
  %37 = call i32 @FT_Stream_ExtractFrame(%struct.FT_StreamRec_* %1, i64 %36, i8** %6) #17
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %153

39:                                               ; preds = %35
  %40 = load i64, i64* %3, align 8
  store i64 %40, i64* %7, align 8
  %41 = load i8*, i8** %6, align 8
  %42 = load i8, i8* %41, align 1
  %43 = zext i8 %42 to i32
  %44 = shl nuw i32 %43, 24
  %45 = getelementptr inbounds i8, i8* %41, i64 1
  %46 = load i8, i8* %45, align 1
  %47 = zext i8 %46 to i32
  %48 = shl nuw nsw i32 %47, 16
  %49 = or i32 %48, %44
  %50 = getelementptr inbounds i8, i8* %41, i64 4
  %51 = load i8, i8* %50, align 1
  %52 = zext i8 %51 to i32
  %53 = shl nuw i32 %52, 24
  %54 = getelementptr inbounds i8, i8* %41, i64 5
  %55 = load i8, i8* %54, align 1
  %56 = zext i8 %55 to i32
  %57 = shl nuw nsw i32 %56, 16
  %58 = or i32 %57, %53
  %59 = getelementptr inbounds i8, i8* %41, i64 6
  %60 = load i8, i8* %59, align 1
  %61 = zext i8 %60 to i32
  %62 = shl nuw nsw i32 %61, 8
  %63 = or i32 %58, %62
  %64 = getelementptr inbounds i8, i8* %41, i64 7
  %65 = load i8, i8* %64, align 1
  %66 = zext i8 %65 to i32
  %67 = or i32 %63, %66
  %68 = zext i32 %67 to i64
  switch i32 %49, label %69 [
    i32 131072, label %78
    i32 196608, label %78
  ]

69:                                               ; preds = %39
  %70 = getelementptr inbounds i8, i8* %41, i64 2
  %71 = load i8, i8* %70, align 1
  %72 = zext i8 %71 to i16
  %73 = shl nuw i16 %72, 8
  %74 = getelementptr inbounds i8, i8* %41, i64 3
  %75 = load i8, i8* %74, align 1
  %76 = zext i8 %75 to i16
  %77 = or i16 %73, %76
  switch i16 %77, label %153 [
    i16 768, label %78
    i16 512, label %78
  ]

78:                                               ; preds = %39, %39, %69, %69
  %79 = icmp ugt i32 %67, 65535
  br i1 %79, label %153, label %80

80:                                               ; preds = %78
  %81 = mul nuw nsw i64 %68, 48
  %82 = or i64 %81, 8
  %83 = icmp ugt i64 %82, %40
  br i1 %83, label %84, label %119

84:                                               ; preds = %80
  %85 = add i64 %40, -8
  %86 = udiv i64 %85, 48
  %87 = trunc i64 %86 to i32
  br label %119

88:                                               ; preds = %32
  %89 = call i32 @FT_Stream_EnterFrame(%struct.FT_StreamRec_* %1, i64 8) #17
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %153

91:                                               ; preds = %88
  %92 = call zeroext i16 @FT_Stream_GetUShort(%struct.FT_StreamRec_* %1) #17
  %93 = call zeroext i16 @FT_Stream_GetUShort(%struct.FT_StreamRec_* %1) #17
  %94 = call i64 @FT_Stream_GetULong(%struct.FT_StreamRec_* %1) #17
  call void @FT_Stream_ExitFrame(%struct.FT_StreamRec_* %1) #17
  %95 = icmp eq i16 %92, 0
  br i1 %95, label %153, label %96

96:                                               ; preds = %91
  switch i16 %93, label %153 [
    i16 1, label %97
    i16 3, label %97
  ]

97:                                               ; preds = %96, %96
  %98 = icmp ugt i64 %94, 65535
  br i1 %98, label %153, label %99

99:                                               ; preds = %97
  %100 = shl i64 %94, 2
  %101 = and i64 %100, 17179869180
  %102 = add nuw nsw i64 %101, 8
  %103 = load i64, i64* %3, align 8
  %104 = icmp ugt i64 %102, %103
  %105 = add i64 %103, -8
  %106 = lshr i64 %105, 2
  %107 = select i1 %104, i64 %106, i64 %94
  %108 = call i64 @FT_Stream_Pos(%struct.FT_StreamRec_* %1) #17
  %109 = add i64 %108, -8
  %110 = call i32 @FT_Stream_Seek(%struct.FT_StreamRec_* %1, i64 %109) #17
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %153

112:                                              ; preds = %99
  %113 = trunc i64 %107 to i32
  %114 = shl i64 %107, 2
  %115 = add i64 %114, 8
  %116 = and i64 %115, 4294967292
  store i64 %116, i64* %7, align 8
  %117 = call i32 @FT_Stream_ExtractFrame(%struct.FT_StreamRec_* %1, i64 %116, i8** %6) #17
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %119, label %153

119:                                              ; preds = %112, %84, %80
  %120 = phi i32 [ %87, %84 ], [ %67, %80 ], [ %113, %112 ]
  store i32 %120, i32* %9, align 4
  %121 = load i32, i32* %8, align 8
  br label %122

122:                                              ; preds = %119, %32
  %123 = phi i32 [ %121, %119 ], [ %34, %32 ]
  %124 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 75
  %125 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 76
  %126 = bitcast i64* %124 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %126, i8 0, i64 16, i1 false)
  switch i32 %123, label %129 [
    i32 3, label %127
    i32 0, label %152
  ]

127:                                              ; preds = %122
  store i64 %33, i64* %124, align 8
  %128 = load i64, i64* %3, align 8
  store i64 %128, i64* %125, align 8
  br label %149

129:                                              ; preds = %122
  %130 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %130) #17
  store i64 -6148914691236517206, i64* %4, align 8
  %131 = load i32 (%struct.TT_FaceRec_*, i64, %struct.FT_StreamRec_*, i64*)*, i32 (%struct.TT_FaceRec_*, i64, %struct.FT_StreamRec_*, i64*)** %11, align 8
  %132 = call i32 %131(%struct.TT_FaceRec_* %0, i64 1128416340, %struct.FT_StreamRec_* %1, i64* nonnull %4) #17
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %144, label %134

134:                                              ; preds = %129
  %135 = load i32 (%struct.TT_FaceRec_*, i64, %struct.FT_StreamRec_*, i64*)*, i32 (%struct.TT_FaceRec_*, i64, %struct.FT_StreamRec_*, i64*)** %11, align 8
  %136 = call i32 %135(%struct.TT_FaceRec_* %0, i64 1161970772, %struct.FT_StreamRec_* %1, i64* nonnull %4) #17
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %144, label %138

138:                                              ; preds = %134
  %139 = load i32 (%struct.TT_FaceRec_*, i64, %struct.FT_StreamRec_*, i64*)*, i32 (%struct.TT_FaceRec_*, i64, %struct.FT_StreamRec_*, i64*)** %11, align 8
  %140 = call i32 %139(%struct.TT_FaceRec_* %0, i64 1650745716, %struct.FT_StreamRec_* %1, i64* nonnull %4) #17
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %144, label %142

142:                                              ; preds = %138
  %143 = load i64, i64* %125, align 8
  br label %147

144:                                              ; preds = %138, %134, %129
  %145 = call i64 @FT_Stream_Pos(%struct.FT_StreamRec_* %1) #17
  store i64 %145, i64* %124, align 8
  %146 = load i64, i64* %4, align 8
  store i64 %146, i64* %125, align 8
  br label %147

147:                                              ; preds = %142, %144
  %148 = phi i64 [ %143, %142 ], [ %146, %144 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %130) #17
  br label %149

149:                                              ; preds = %147, %127
  %150 = phi i64 [ %148, %147 ], [ %128, %127 ]
  %151 = icmp eq i64 %150, 0
  br i1 %151, label %152, label %159

152:                                              ; preds = %122, %149
  store i32 0, i32* %9, align 4
  br label %159

153:                                              ; preds = %112, %99, %97, %96, %91, %88, %78, %69, %35, %28, %24
  %154 = phi i32 [ 3, %28 ], [ %26, %24 ], [ 3, %78 ], [ 2, %69 ], [ %37, %35 ], [ %117, %112 ], [ %110, %99 ], [ 3, %97 ], [ 3, %96 ], [ 2, %91 ], [ %89, %88 ]
  %155 = load i8*, i8** %6, align 8
  %156 = icmp eq i8* %155, null
  br i1 %156, label %158, label %157

157:                                              ; preds = %153
  call void @FT_Stream_ReleaseFrame(%struct.FT_StreamRec_* %1, i8** %6) #17
  br label %158

158:                                              ; preds = %153, %157
  store i64 0, i64* %7, align 8
  store i32 0, i32* %8, align 8
  br label %159

159:                                              ; preds = %158, %152, %149
  %160 = phi i32 [ 0, %149 ], [ 0, %152 ], [ %154, %158 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #17
  ret i32 %160
}

; Function Attrs: nounwind ssp uwtable
define internal void @tt_face_free_sbit(%struct.TT_FaceRec_*) #0 {
  %2 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 0, i32 26
  %3 = load %struct.FT_StreamRec_*, %struct.FT_StreamRec_** %2, align 8
  %4 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 63
  tail call void @FT_Stream_ReleaseFrame(%struct.FT_StreamRec_* %3, i8** %4) #17
  %5 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 64
  %6 = bitcast i64* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 16, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @tt_face_set_sbit_strike(%struct.TT_FaceRec_*, %struct.FT_Size_RequestRec_*, i64*) #0 {
  %4 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 0
  %5 = tail call i32 @FT_Match_Size(%struct.FT_FaceRec_* %4, %struct.FT_Size_RequestRec_* %1, i8 zeroext 0, i64* %2) #17
  ret i32 %5
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @tt_face_load_strike_metrics(%struct.TT_FaceRec_* nocapture readonly, i64, %struct.FT_Size_Metrics_* nocapture) #0 {
  %4 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 67
  %5 = load i32*, i32** %4, align 8
  %6 = icmp eq i32* %5, null
  br i1 %6, label %16, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 0, i32 7
  %9 = load i32, i32* %8, align 8
  %10 = sext i32 %9 to i64
  %11 = icmp ugt i64 %10, %1
  br i1 %11, label %12, label %203

12:                                               ; preds = %7
  %13 = getelementptr inbounds i32, i32* %5, i64 %1
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i64
  br label %21

16:                                               ; preds = %3
  %17 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 66
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i64
  %20 = icmp ugt i64 %19, %1
  br i1 %20, label %21, label %203

21:                                               ; preds = %16, %12
  %22 = phi i64 [ %15, %12 ], [ %1, %16 ]
  %23 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 65
  %24 = load i32, i32* %23, align 8
  switch i32 %24, label %203 [
    i32 1, label %25
    i32 2, label %25
    i32 3, label %113
  ]

25:                                               ; preds = %21, %21
  %26 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 63
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds i8, i8* %27, i64 8
  %29 = mul i64 %22, 48
  %30 = getelementptr inbounds i8, i8* %28, i64 %29
  %31 = getelementptr inbounds i8, i8* %30, i64 44
  %32 = load i8, i8* %31, align 1
  %33 = zext i8 %32 to i16
  %34 = getelementptr inbounds %struct.FT_Size_Metrics_, %struct.FT_Size_Metrics_* %2, i64 0, i32 0
  store i16 %33, i16* %34, align 8
  %35 = getelementptr inbounds i8, i8* %30, i64 45
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i16
  %38 = getelementptr inbounds %struct.FT_Size_Metrics_, %struct.FT_Size_Metrics_* %2, i64 0, i32 1
  store i16 %37, i16* %38, align 2
  %39 = getelementptr inbounds i8, i8* %30, i64 16
  %40 = load i8, i8* %39, align 1
  %41 = sext i8 %40 to i32
  %42 = shl nsw i32 %41, 6
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds %struct.FT_Size_Metrics_, %struct.FT_Size_Metrics_* %2, i64 0, i32 4
  store i64 %43, i64* %44, align 8
  %45 = getelementptr inbounds i8, i8* %30, i64 17
  %46 = load i8, i8* %45, align 1
  %47 = sext i8 %46 to i32
  %48 = shl nsw i32 %47, 6
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds %struct.FT_Size_Metrics_, %struct.FT_Size_Metrics_* %2, i64 0, i32 5
  store i64 %49, i64* %50, align 8
  %51 = getelementptr inbounds i8, i8* %30, i64 24
  %52 = load i8, i8* %51, align 1
  %53 = getelementptr inbounds i8, i8* %30, i64 25
  %54 = load i8, i8* %53, align 1
  %55 = icmp sgt i8 %46, 0
  br i1 %55, label %56, label %60

56:                                               ; preds = %25
  %57 = icmp slt i8 %54, 0
  br i1 %57, label %58, label %76

58:                                               ; preds = %56
  %59 = sub nsw i64 0, %49
  store i64 %59, i64* %50, align 8
  br label %76

60:                                               ; preds = %25
  %61 = or i8 %46, %40
  %62 = icmp eq i8 %61, 0
  br i1 %62, label %63, label %76

63:                                               ; preds = %60
  %64 = or i8 %54, %52
  %65 = icmp eq i8 %64, 0
  br i1 %65, label %73, label %66

66:                                               ; preds = %63
  %67 = sext i8 %52 to i32
  %68 = shl nsw i32 %67, 6
  %69 = sext i32 %68 to i64
  store i64 %69, i64* %44, align 8
  %70 = sext i8 %54 to i32
  %71 = shl nsw i32 %70, 6
  %72 = sext i32 %71 to i64
  store i64 %72, i64* %50, align 8
  br label %76

73:                                               ; preds = %63
  %74 = zext i8 %36 to i64
  %75 = shl nuw nsw i64 %74, 6
  store i64 %75, i64* %44, align 8
  store i64 0, i64* %50, align 8
  br label %76

76:                                               ; preds = %60, %66, %73, %56, %58
  %77 = phi i64 [ %49, %60 ], [ %72, %66 ], [ 0, %73 ], [ %49, %56 ], [ %59, %58 ]
  %78 = phi i64 [ %43, %60 ], [ %69, %66 ], [ %75, %73 ], [ %43, %56 ], [ %43, %58 ]
  %79 = sub nsw i64 %78, %77
  %80 = getelementptr inbounds %struct.FT_Size_Metrics_, %struct.FT_Size_Metrics_* %2, i64 0, i32 6
  store i64 %79, i64* %80, align 8
  %81 = icmp eq i64 %79, 0
  br i1 %81, label %82, label %86

82:                                               ; preds = %76
  %83 = zext i8 %36 to i64
  %84 = shl nuw nsw i64 %83, 6
  store i64 %84, i64* %80, align 8
  %85 = sub nsw i64 %78, %84
  store i64 %85, i64* %50, align 8
  br label %86

86:                                               ; preds = %82, %76
  %87 = getelementptr inbounds i8, i8* %30, i64 22
  %88 = load i8, i8* %87, align 1
  %89 = sext i8 %88 to i32
  %90 = getelementptr inbounds i8, i8* %30, i64 18
  %91 = load i8, i8* %90, align 1
  %92 = zext i8 %91 to i32
  %93 = add nsw i32 %92, %89
  %94 = getelementptr inbounds i8, i8* %30, i64 23
  %95 = load i8, i8* %94, align 1
  %96 = sext i8 %95 to i32
  %97 = add nsw i32 %93, %96
  %98 = shl nsw i32 %97, 6
  %99 = sext i32 %98 to i64
  %100 = getelementptr inbounds %struct.FT_Size_Metrics_, %struct.FT_Size_Metrics_* %2, i64 0, i32 7
  store i64 %99, i64* %100, align 8
  %101 = zext i8 %32 to i64
  %102 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 5, i32 5
  %103 = load i16, i16* %102, align 2
  %104 = zext i16 %103 to i64
  %105 = tail call i64 @FT_MulDiv(i64 %101, i64 4194304, i64 %104) #17
  %106 = getelementptr inbounds %struct.FT_Size_Metrics_, %struct.FT_Size_Metrics_* %2, i64 0, i32 2
  store i64 %105, i64* %106, align 8
  %107 = load i16, i16* %38, align 2
  %108 = zext i16 %107 to i64
  %109 = load i16, i16* %102, align 2
  %110 = zext i16 %109 to i64
  %111 = tail call i64 @FT_MulDiv(i64 %108, i64 4194304, i64 %110) #17
  %112 = getelementptr inbounds %struct.FT_Size_Metrics_, %struct.FT_Size_Metrics_* %2, i64 0, i32 3
  store i64 %111, i64* %112, align 8
  br label %203

113:                                              ; preds = %21
  %114 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 0, i32 26
  %115 = load %struct.FT_StreamRec_*, %struct.FT_StreamRec_** %114, align 8
  %116 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 63
  %117 = load i8*, i8** %116, align 8
  %118 = getelementptr inbounds i8, i8* %117, i64 8
  %119 = shl i64 %22, 2
  %120 = getelementptr inbounds i8, i8* %118, i64 %119
  %121 = getelementptr inbounds i8, i8* %120, i64 4
  %122 = getelementptr inbounds i8, i8* %121, i64 -4
  %123 = load i8, i8* %122, align 1
  %124 = zext i8 %123 to i32
  %125 = shl nuw i32 %124, 24
  %126 = getelementptr inbounds i8, i8* %122, i64 1
  %127 = load i8, i8* %126, align 1
  %128 = zext i8 %127 to i32
  %129 = shl nuw nsw i32 %128, 16
  %130 = or i32 %129, %125
  %131 = getelementptr inbounds i8, i8* %122, i64 2
  %132 = load i8, i8* %131, align 1
  %133 = zext i8 %132 to i32
  %134 = shl nuw nsw i32 %133, 8
  %135 = or i32 %130, %134
  %136 = getelementptr inbounds i8, i8* %122, i64 3
  %137 = load i8, i8* %136, align 1
  %138 = zext i8 %137 to i32
  %139 = or i32 %135, %138
  %140 = add i32 %139, 4
  %141 = zext i32 %140 to i64
  %142 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 76
  %143 = load i64, i64* %142, align 8
  %144 = icmp ult i64 %143, %141
  br i1 %144, label %203, label %145

145:                                              ; preds = %113
  %146 = zext i32 %139 to i64
  %147 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 75
  %148 = load i64, i64* %147, align 8
  %149 = add i64 %148, %146
  %150 = tail call i32 @FT_Stream_Seek(%struct.FT_StreamRec_* %115, i64 %149) #17
  %151 = icmp eq i32 %150, 0
  br i1 %151, label %152, label %203

152:                                              ; preds = %145
  %153 = tail call i32 @FT_Stream_EnterFrame(%struct.FT_StreamRec_* %115, i64 4) #17
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %155, label %203

155:                                              ; preds = %152
  %156 = tail call zeroext i16 @FT_Stream_GetUShort(%struct.FT_StreamRec_* %115) #17
  %157 = tail call zeroext i16 @FT_Stream_GetUShort(%struct.FT_StreamRec_* %115) #17
  tail call void @FT_Stream_ExitFrame(%struct.FT_StreamRec_* %115) #17
  %158 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 5, i32 5
  %159 = load i16, i16* %158, align 2
  %160 = getelementptr inbounds %struct.FT_Size_Metrics_, %struct.FT_Size_Metrics_* %2, i64 0, i32 0
  store i16 %156, i16* %160, align 8
  %161 = getelementptr inbounds %struct.FT_Size_Metrics_, %struct.FT_Size_Metrics_* %2, i64 0, i32 1
  store i16 %156, i16* %161, align 2
  %162 = zext i16 %156 to i64
  %163 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 6, i32 1
  %164 = load i16, i16* %163, align 8
  %165 = sext i16 %164 to i64
  %166 = shl nuw nsw i64 %162, 6
  %167 = zext i16 %159 to i64
  %168 = tail call i64 @FT_MulDiv(i64 %165, i64 %166, i64 %167) #17
  %169 = getelementptr inbounds %struct.FT_Size_Metrics_, %struct.FT_Size_Metrics_* %2, i64 0, i32 4
  store i64 %168, i64* %169, align 8
  %170 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 6, i32 2
  %171 = load i16, i16* %170, align 2
  %172 = sext i16 %171 to i64
  %173 = tail call i64 @FT_MulDiv(i64 %172, i64 %166, i64 %167) #17
  %174 = getelementptr inbounds %struct.FT_Size_Metrics_, %struct.FT_Size_Metrics_* %2, i64 0, i32 5
  store i64 %173, i64* %174, align 8
  %175 = load i16, i16* %163, align 8
  %176 = sext i16 %175 to i64
  %177 = load i16, i16* %170, align 2
  %178 = sext i16 %177 to i64
  %179 = sub nsw i64 %176, %178
  %180 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 6, i32 3
  %181 = load i16, i16* %180, align 4
  %182 = sext i16 %181 to i64
  %183 = add nsw i64 %179, %182
  %184 = tail call i64 @FT_MulDiv(i64 %183, i64 %166, i64 %167) #17
  %185 = getelementptr inbounds %struct.FT_Size_Metrics_, %struct.FT_Size_Metrics_* %2, i64 0, i32 6
  store i64 %184, i64* %185, align 8
  %186 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 6, i32 4
  %187 = load i16, i16* %186, align 2
  %188 = zext i16 %187 to i64
  %189 = tail call i64 @FT_MulDiv(i64 %188, i64 %166, i64 %167) #17
  %190 = getelementptr inbounds %struct.FT_Size_Metrics_, %struct.FT_Size_Metrics_* %2, i64 0, i32 7
  store i64 %189, i64* %190, align 8
  %191 = load i16, i16* %160, align 8
  %192 = zext i16 %191 to i64
  %193 = load i16, i16* %158, align 2
  %194 = zext i16 %193 to i64
  %195 = tail call i64 @FT_MulDiv(i64 %192, i64 4194304, i64 %194) #17
  %196 = getelementptr inbounds %struct.FT_Size_Metrics_, %struct.FT_Size_Metrics_* %2, i64 0, i32 2
  store i64 %195, i64* %196, align 8
  %197 = load i16, i16* %161, align 2
  %198 = zext i16 %197 to i64
  %199 = load i16, i16* %158, align 2
  %200 = zext i16 %199 to i64
  %201 = tail call i64 @FT_MulDiv(i64 %198, i64 4194304, i64 %200) #17
  %202 = getelementptr inbounds %struct.FT_Size_Metrics_, %struct.FT_Size_Metrics_* %2, i64 0, i32 3
  store i64 %201, i64* %202, align 8
  br label %203

203:                                              ; preds = %21, %155, %113, %152, %145, %16, %7, %86
  %204 = phi i32 [ 0, %86 ], [ 6, %7 ], [ 6, %16 ], [ 0, %155 ], [ 3, %113 ], [ %150, %145 ], [ %153, %152 ], [ 2, %21 ]
  ret i32 %204
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @tt_face_load_cpal(%struct.TT_FaceRec_*, %struct.FT_StreamRec_*) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  %5 = alloca i64, align 8
  %6 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #17
  %7 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 0, i32 25
  %8 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %7, align 8
  %9 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #17
  store i8* null, i8** %4, align 8
  %10 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #17
  store i64 -6148914691236517206, i64* %5, align 8
  %11 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 16
  %12 = bitcast {}** %11 to i32 (%struct.TT_FaceRec_*, i64, %struct.FT_StreamRec_*, i64*)**
  %13 = load i32 (%struct.TT_FaceRec_*, i64, %struct.FT_StreamRec_*, i64*)*, i32 (%struct.TT_FaceRec_*, i64, %struct.FT_StreamRec_*, i64*)** %12, align 8
  %14 = call i32 %13(%struct.TT_FaceRec_* %0, i64 1129333068, %struct.FT_StreamRec_* %1, i64* nonnull %5) #17
  store i32 %14, i32* %3, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %606

16:                                               ; preds = %2
  %17 = load i64, i64* %5, align 8
  %18 = icmp ult i64 %17, 12
  br i1 %18, label %604, label %19

19:                                               ; preds = %16
  %20 = call i32 @FT_Stream_ExtractFrame(%struct.FT_StreamRec_* %1, i64 %17, i8** nonnull %4) #17
  store i32 %20, i32* %3, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %606

22:                                               ; preds = %19
  %23 = load i8*, i8** %4, align 8
  %24 = call i8* @ft_mem_alloc(%struct.FT_MemoryRec_* %8, i64 40, i32* nonnull %3) #17
  %25 = load i32, i32* %3, align 4
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %606

27:                                               ; preds = %22
  %28 = load i8, i8* %23, align 1
  %29 = zext i8 %28 to i16
  %30 = shl nuw i16 %29, 8
  %31 = getelementptr inbounds i8, i8* %23, i64 1
  %32 = load i8, i8* %31, align 1
  %33 = zext i8 %32 to i16
  %34 = or i16 %30, %33
  %35 = bitcast i8* %24 to i16*
  store i16 %34, i16* %35, align 8
  %36 = icmp ugt i16 %34, 1
  br i1 %36, label %604, label %37

37:                                               ; preds = %27
  %38 = getelementptr inbounds i8, i8* %23, i64 2
  %39 = load i8, i8* %38, align 1
  %40 = zext i8 %39 to i16
  %41 = shl nuw i16 %40, 8
  %42 = getelementptr inbounds i8, i8* %23, i64 3
  %43 = load i8, i8* %42, align 1
  %44 = zext i8 %43 to i16
  %45 = or i16 %41, %44
  %46 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 32, i32 3
  store i16 %45, i16* %46, align 8
  %47 = getelementptr inbounds i8, i8* %23, i64 4
  %48 = load i8, i8* %47, align 1
  %49 = zext i8 %48 to i16
  %50 = shl nuw i16 %49, 8
  %51 = getelementptr inbounds i8, i8* %23, i64 5
  %52 = load i8, i8* %51, align 1
  %53 = zext i8 %52 to i16
  %54 = or i16 %50, %53
  %55 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 32, i32 0
  store i16 %54, i16* %55, align 8
  %56 = getelementptr inbounds i8, i8* %23, i64 6
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i16
  %59 = shl nuw i16 %58, 8
  %60 = getelementptr inbounds i8, i8* %23, i64 7
  %61 = load i8, i8* %60, align 1
  %62 = zext i8 %61 to i16
  %63 = or i16 %59, %62
  %64 = getelementptr inbounds i8, i8* %24, i64 2
  %65 = bitcast i8* %64 to i16*
  store i16 %63, i16* %65, align 2
  %66 = getelementptr inbounds i8, i8* %23, i64 12
  %67 = getelementptr inbounds i8, i8* %23, i64 8
  %68 = load i8, i8* %67, align 1
  %69 = zext i8 %68 to i64
  %70 = shl nuw nsw i64 %69, 24
  %71 = getelementptr inbounds i8, i8* %23, i64 9
  %72 = load i8, i8* %71, align 1
  %73 = zext i8 %72 to i64
  %74 = shl nuw nsw i64 %73, 16
  %75 = or i64 %74, %70
  %76 = getelementptr inbounds i8, i8* %23, i64 10
  %77 = load i8, i8* %76, align 1
  %78 = zext i8 %77 to i64
  %79 = shl nuw nsw i64 %78, 8
  %80 = or i64 %75, %79
  %81 = getelementptr inbounds i8, i8* %23, i64 11
  %82 = load i8, i8* %81, align 1
  %83 = zext i8 %82 to i64
  %84 = or i64 %80, %83
  %85 = load i16, i16* %55, align 8
  %86 = zext i16 %85 to i64
  %87 = shl nuw nsw i64 %86, 1
  %88 = add nuw nsw i64 %87, 12
  %89 = load i64, i64* %5, align 8
  %90 = icmp ule i64 %88, %89
  %91 = icmp ugt i64 %89, %84
  %92 = and i1 %91, %90
  br i1 %92, label %93, label %604

93:                                               ; preds = %37
  %94 = zext i16 %63 to i64
  %95 = shl nuw nsw i64 %94, 2
  %96 = sub i64 %89, %84
  %97 = icmp ult i64 %96, %95
  br i1 %97, label %604, label %98

98:                                               ; preds = %93
  %99 = load i16, i16* %46, align 8
  %100 = icmp ugt i16 %99, %63
  br i1 %100, label %604, label %101

101:                                              ; preds = %98
  %102 = getelementptr inbounds i8, i8* %24, i64 16
  %103 = bitcast i8* %102 to i8**
  store i8* %66, i8** %103, align 8
  %104 = load i8*, i8** %4, align 8
  %105 = getelementptr inbounds i8, i8* %104, i64 %84
  %106 = getelementptr inbounds i8, i8* %24, i64 8
  %107 = bitcast i8* %106 to i8**
  store i8* %105, i8** %107, align 8
  %108 = load i16, i16* %35, align 8
  %109 = icmp eq i16 %108, 1
  br i1 %109, label %110, label %536

110:                                              ; preds = %101
  %111 = load i16, i16* %55, align 8
  %112 = zext i16 %111 to i32
  %113 = shl nuw nsw i32 %112, 1
  %114 = add nuw nsw i32 %113, 24
  %115 = zext i32 %114 to i64
  %116 = icmp ult i64 %89, %115
  br i1 %116, label %604, label %117

117:                                              ; preds = %110
  %118 = zext i32 %113 to i64
  %119 = getelementptr inbounds i8, i8* %66, i64 %118
  %120 = getelementptr inbounds i8, i8* %119, i64 4
  %121 = getelementptr inbounds i8, i8* %120, i64 -4
  %122 = load i8, i8* %121, align 1
  %123 = zext i8 %122 to i64
  %124 = shl nuw nsw i64 %123, 24
  %125 = getelementptr inbounds i8, i8* %121, i64 1
  %126 = load i8, i8* %125, align 1
  %127 = zext i8 %126 to i64
  %128 = shl nuw nsw i64 %127, 16
  %129 = or i64 %128, %124
  %130 = getelementptr inbounds i8, i8* %121, i64 2
  %131 = load i8, i8* %130, align 1
  %132 = zext i8 %131 to i64
  %133 = shl nuw nsw i64 %132, 8
  %134 = or i64 %129, %133
  %135 = getelementptr inbounds i8, i8* %121, i64 3
  %136 = load i8, i8* %135, align 1
  %137 = zext i8 %136 to i64
  %138 = or i64 %134, %137
  %139 = getelementptr inbounds i8, i8* %120, i64 4
  %140 = getelementptr inbounds i8, i8* %139, i64 -4
  %141 = load i8, i8* %140, align 1
  %142 = zext i8 %141 to i64
  %143 = shl nuw nsw i64 %142, 24
  %144 = getelementptr inbounds i8, i8* %140, i64 1
  %145 = load i8, i8* %144, align 1
  %146 = zext i8 %145 to i64
  %147 = shl nuw nsw i64 %146, 16
  %148 = or i64 %147, %143
  %149 = getelementptr inbounds i8, i8* %140, i64 2
  %150 = load i8, i8* %149, align 1
  %151 = zext i8 %150 to i64
  %152 = shl nuw nsw i64 %151, 8
  %153 = or i64 %148, %152
  %154 = getelementptr inbounds i8, i8* %140, i64 3
  %155 = load i8, i8* %154, align 1
  %156 = zext i8 %155 to i64
  %157 = or i64 %153, %156
  %158 = getelementptr inbounds i8, i8* %139, i64 4
  %159 = getelementptr inbounds i8, i8* %158, i64 -4
  %160 = load i8, i8* %159, align 1
  %161 = zext i8 %160 to i64
  %162 = shl nuw nsw i64 %161, 24
  %163 = getelementptr inbounds i8, i8* %159, i64 1
  %164 = load i8, i8* %163, align 1
  %165 = zext i8 %164 to i64
  %166 = shl nuw nsw i64 %165, 16
  %167 = or i64 %166, %162
  %168 = getelementptr inbounds i8, i8* %159, i64 2
  %169 = load i8, i8* %168, align 1
  %170 = zext i8 %169 to i64
  %171 = shl nuw nsw i64 %170, 8
  %172 = or i64 %167, %171
  %173 = getelementptr inbounds i8, i8* %159, i64 3
  %174 = load i8, i8* %173, align 1
  %175 = zext i8 %174 to i64
  %176 = or i64 %172, %175
  %177 = icmp eq i64 %138, 0
  br i1 %177, label %294, label %178

178:                                              ; preds = %117
  %179 = icmp ule i64 %89, %138
  %180 = sub i64 %89, %138
  %181 = icmp ult i64 %180, %118
  %182 = or i1 %179, %181
  br i1 %182, label %604, label %183

183:                                              ; preds = %178
  %184 = zext i16 %111 to i64
  %185 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %8, i64 2, i64 0, i64 %184, i8* null, i32* nonnull %3) #17
  %186 = bitcast i8* %185 to i16*
  %187 = load i32, i32* %3, align 4
  %188 = icmp eq i32 %187, 0
  br i1 %188, label %189, label %606

189:                                              ; preds = %183
  %190 = load i16, i16* %55, align 8
  %191 = zext i16 %190 to i64
  %192 = getelementptr inbounds i16, i16* %186, i64 %191
  %193 = icmp ugt i16* %192, %186
  br i1 %193, label %194, label %291

194:                                              ; preds = %189
  %195 = load i8*, i8** %4, align 8
  %196 = getelementptr inbounds i8, i8* %195, i64 %138
  %197 = shl nuw nsw i64 %191, 1
  %198 = add nsw i64 %197, -1
  %199 = lshr i64 %198, 1
  %200 = add nuw i64 %199, 1
  %201 = icmp ult i64 %200, 8
  br i1 %201, label %275, label %202

202:                                              ; preds = %194
  %203 = shl nuw nsw i64 %191, 1
  %204 = add nsw i64 %203, -1
  %205 = and i64 %204, -2
  %206 = add nsw i64 %205, 2
  %207 = getelementptr i8, i8* %185, i64 %206
  %208 = add nsw i64 %138, %205
  %209 = add nsw i64 %208, 2
  %210 = getelementptr i8, i8* %195, i64 %209
  %211 = icmp ult i8* %185, %210
  %212 = icmp ult i8* %196, %207
  %213 = and i1 %211, %212
  br i1 %213, label %275, label %214

214:                                              ; preds = %202
  %215 = and i64 %200, -8
  %216 = getelementptr i16, i16* %186, i64 %215
  %217 = shl i64 %215, 1
  %218 = getelementptr i8, i8* %196, i64 %217
  %219 = add i64 %215, -8
  %220 = lshr exact i64 %219, 3
  %221 = add nuw nsw i64 %220, 1
  %222 = and i64 %221, 1
  %223 = icmp eq i64 %219, 0
  br i1 %223, label %257, label %224

224:                                              ; preds = %214
  %225 = sub nuw nsw i64 %221, %222
  br label %226

226:                                              ; preds = %226, %224
  %227 = phi i64 [ 0, %224 ], [ %254, %226 ]
  %228 = phi i64 [ %225, %224 ], [ %255, %226 ]
  %229 = getelementptr i16, i16* %186, i64 %227
  %230 = shl i64 %227, 1
  %231 = getelementptr i8, i8* %196, i64 %230
  %232 = bitcast i8* %231 to <16 x i8>*
  %233 = load <16 x i8>, <16 x i8>* %232, align 1
  %234 = shufflevector <16 x i8> %233, <16 x i8> undef, <8 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14>
  %235 = shufflevector <16 x i8> %233, <16 x i8> undef, <8 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15>
  %236 = zext <8 x i8> %234 to <8 x i16>
  %237 = shl nuw <8 x i16> %236, <i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8>
  %238 = zext <8 x i8> %235 to <8 x i16>
  %239 = or <8 x i16> %237, %238
  %240 = bitcast i16* %229 to <8 x i16>*
  store <8 x i16> %239, <8 x i16>* %240, align 2, !alias.scope !20, !noalias !23
  %241 = or i64 %227, 8
  %242 = getelementptr i16, i16* %186, i64 %241
  %243 = shl i64 %241, 1
  %244 = getelementptr i8, i8* %196, i64 %243
  %245 = bitcast i8* %244 to <16 x i8>*
  %246 = load <16 x i8>, <16 x i8>* %245, align 1
  %247 = shufflevector <16 x i8> %246, <16 x i8> undef, <8 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14>
  %248 = shufflevector <16 x i8> %246, <16 x i8> undef, <8 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15>
  %249 = zext <8 x i8> %247 to <8 x i16>
  %250 = shl nuw <8 x i16> %249, <i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8>
  %251 = zext <8 x i8> %248 to <8 x i16>
  %252 = or <8 x i16> %250, %251
  %253 = bitcast i16* %242 to <8 x i16>*
  store <8 x i16> %252, <8 x i16>* %253, align 2, !alias.scope !20, !noalias !23
  %254 = add i64 %227, 16
  %255 = add i64 %228, -2
  %256 = icmp eq i64 %255, 0
  br i1 %256, label %257, label %226, !llvm.loop !25

257:                                              ; preds = %226, %214
  %258 = phi i64 [ 0, %214 ], [ %254, %226 ]
  %259 = icmp eq i64 %222, 0
  br i1 %259, label %273, label %260

260:                                              ; preds = %257
  %261 = getelementptr i16, i16* %186, i64 %258
  %262 = shl i64 %258, 1
  %263 = getelementptr i8, i8* %196, i64 %262
  %264 = bitcast i8* %263 to <16 x i8>*
  %265 = load <16 x i8>, <16 x i8>* %264, align 1
  %266 = shufflevector <16 x i8> %265, <16 x i8> undef, <8 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14>
  %267 = shufflevector <16 x i8> %265, <16 x i8> undef, <8 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15>
  %268 = zext <8 x i8> %266 to <8 x i16>
  %269 = shl nuw <8 x i16> %268, <i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8>
  %270 = zext <8 x i8> %267 to <8 x i16>
  %271 = or <8 x i16> %269, %270
  %272 = bitcast i16* %261 to <8 x i16>*
  store <8 x i16> %271, <8 x i16>* %272, align 2, !alias.scope !20, !noalias !23
  br label %273

273:                                              ; preds = %257, %260
  %274 = icmp eq i64 %200, %215
  br i1 %274, label %291, label %275

275:                                              ; preds = %273, %202, %194
  %276 = phi i16* [ %186, %202 ], [ %186, %194 ], [ %216, %273 ]
  %277 = phi i8* [ %196, %202 ], [ %196, %194 ], [ %218, %273 ]
  br label %278

278:                                              ; preds = %275, %278
  %279 = phi i16* [ %289, %278 ], [ %276, %275 ]
  %280 = phi i8* [ %281, %278 ], [ %277, %275 ]
  %281 = getelementptr inbounds i8, i8* %280, i64 2
  %282 = load i8, i8* %280, align 1
  %283 = zext i8 %282 to i16
  %284 = shl nuw i16 %283, 8
  %285 = getelementptr inbounds i8, i8* %280, i64 1
  %286 = load i8, i8* %285, align 1
  %287 = zext i8 %286 to i16
  %288 = or i16 %284, %287
  %289 = getelementptr inbounds i16, i16* %279, i64 1
  store i16 %288, i16* %279, align 2
  %290 = icmp ult i16* %289, %192
  br i1 %290, label %278, label %291, !llvm.loop !26

291:                                              ; preds = %278, %273, %189
  %292 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 32, i32 2
  %293 = bitcast i16** %292 to i8**
  store i8* %185, i8** %293, align 8
  br label %294

294:                                              ; preds = %117, %291
  %295 = icmp eq i64 %157, 0
  br i1 %295, label %415, label %296

296:                                              ; preds = %294
  %297 = load i64, i64* %5, align 8
  %298 = icmp ugt i64 %297, %157
  br i1 %298, label %299, label %604

299:                                              ; preds = %296
  %300 = load i16, i16* %55, align 8
  %301 = zext i16 %300 to i64
  %302 = shl nuw nsw i64 %301, 1
  %303 = sub i64 %297, %157
  %304 = icmp ugt i64 %302, %303
  br i1 %304, label %604, label %305

305:                                              ; preds = %299
  %306 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %8, i64 2, i64 0, i64 %301, i8* null, i32* nonnull %3) #17
  %307 = bitcast i8* %306 to i16*
  %308 = load i32, i32* %3, align 4
  %309 = icmp eq i32 %308, 0
  br i1 %309, label %310, label %606

310:                                              ; preds = %305
  %311 = load i16, i16* %55, align 8
  %312 = zext i16 %311 to i64
  %313 = getelementptr inbounds i16, i16* %307, i64 %312
  %314 = icmp ugt i16* %313, %307
  br i1 %314, label %315, label %412

315:                                              ; preds = %310
  %316 = load i8*, i8** %4, align 8
  %317 = getelementptr inbounds i8, i8* %316, i64 %157
  %318 = shl nuw nsw i64 %312, 1
  %319 = add nsw i64 %318, -1
  %320 = lshr i64 %319, 1
  %321 = add nuw i64 %320, 1
  %322 = icmp ult i64 %321, 8
  br i1 %322, label %396, label %323

323:                                              ; preds = %315
  %324 = shl nuw nsw i64 %312, 1
  %325 = add nsw i64 %324, -1
  %326 = and i64 %325, -2
  %327 = add nsw i64 %326, 2
  %328 = getelementptr i8, i8* %306, i64 %327
  %329 = add nsw i64 %157, %326
  %330 = add nsw i64 %329, 2
  %331 = getelementptr i8, i8* %316, i64 %330
  %332 = icmp ult i8* %306, %331
  %333 = icmp ult i8* %317, %328
  %334 = and i1 %332, %333
  br i1 %334, label %396, label %335

335:                                              ; preds = %323
  %336 = and i64 %321, -8
  %337 = getelementptr i16, i16* %307, i64 %336
  %338 = shl i64 %336, 1
  %339 = getelementptr i8, i8* %317, i64 %338
  %340 = add i64 %336, -8
  %341 = lshr exact i64 %340, 3
  %342 = add nuw nsw i64 %341, 1
  %343 = and i64 %342, 1
  %344 = icmp eq i64 %340, 0
  br i1 %344, label %378, label %345

345:                                              ; preds = %335
  %346 = sub nuw nsw i64 %342, %343
  br label %347

347:                                              ; preds = %347, %345
  %348 = phi i64 [ 0, %345 ], [ %375, %347 ]
  %349 = phi i64 [ %346, %345 ], [ %376, %347 ]
  %350 = getelementptr i16, i16* %307, i64 %348
  %351 = shl i64 %348, 1
  %352 = getelementptr i8, i8* %317, i64 %351
  %353 = bitcast i8* %352 to <16 x i8>*
  %354 = load <16 x i8>, <16 x i8>* %353, align 1
  %355 = shufflevector <16 x i8> %354, <16 x i8> undef, <8 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14>
  %356 = shufflevector <16 x i8> %354, <16 x i8> undef, <8 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15>
  %357 = zext <8 x i8> %355 to <8 x i16>
  %358 = shl nuw <8 x i16> %357, <i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8>
  %359 = zext <8 x i8> %356 to <8 x i16>
  %360 = or <8 x i16> %358, %359
  %361 = bitcast i16* %350 to <8 x i16>*
  store <8 x i16> %360, <8 x i16>* %361, align 2, !alias.scope !27, !noalias !30
  %362 = or i64 %348, 8
  %363 = getelementptr i16, i16* %307, i64 %362
  %364 = shl i64 %362, 1
  %365 = getelementptr i8, i8* %317, i64 %364
  %366 = bitcast i8* %365 to <16 x i8>*
  %367 = load <16 x i8>, <16 x i8>* %366, align 1
  %368 = shufflevector <16 x i8> %367, <16 x i8> undef, <8 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14>
  %369 = shufflevector <16 x i8> %367, <16 x i8> undef, <8 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15>
  %370 = zext <8 x i8> %368 to <8 x i16>
  %371 = shl nuw <8 x i16> %370, <i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8>
  %372 = zext <8 x i8> %369 to <8 x i16>
  %373 = or <8 x i16> %371, %372
  %374 = bitcast i16* %363 to <8 x i16>*
  store <8 x i16> %373, <8 x i16>* %374, align 2, !alias.scope !27, !noalias !30
  %375 = add i64 %348, 16
  %376 = add i64 %349, -2
  %377 = icmp eq i64 %376, 0
  br i1 %377, label %378, label %347, !llvm.loop !32

378:                                              ; preds = %347, %335
  %379 = phi i64 [ 0, %335 ], [ %375, %347 ]
  %380 = icmp eq i64 %343, 0
  br i1 %380, label %394, label %381

381:                                              ; preds = %378
  %382 = getelementptr i16, i16* %307, i64 %379
  %383 = shl i64 %379, 1
  %384 = getelementptr i8, i8* %317, i64 %383
  %385 = bitcast i8* %384 to <16 x i8>*
  %386 = load <16 x i8>, <16 x i8>* %385, align 1
  %387 = shufflevector <16 x i8> %386, <16 x i8> undef, <8 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14>
  %388 = shufflevector <16 x i8> %386, <16 x i8> undef, <8 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15>
  %389 = zext <8 x i8> %387 to <8 x i16>
  %390 = shl nuw <8 x i16> %389, <i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8>
  %391 = zext <8 x i8> %388 to <8 x i16>
  %392 = or <8 x i16> %390, %391
  %393 = bitcast i16* %382 to <8 x i16>*
  store <8 x i16> %392, <8 x i16>* %393, align 2, !alias.scope !27, !noalias !30
  br label %394

394:                                              ; preds = %378, %381
  %395 = icmp eq i64 %321, %336
  br i1 %395, label %412, label %396

396:                                              ; preds = %394, %323, %315
  %397 = phi i16* [ %307, %323 ], [ %307, %315 ], [ %337, %394 ]
  %398 = phi i8* [ %317, %323 ], [ %317, %315 ], [ %339, %394 ]
  br label %399

399:                                              ; preds = %396, %399
  %400 = phi i16* [ %410, %399 ], [ %397, %396 ]
  %401 = phi i8* [ %402, %399 ], [ %398, %396 ]
  %402 = getelementptr inbounds i8, i8* %401, i64 2
  %403 = load i8, i8* %401, align 1
  %404 = zext i8 %403 to i16
  %405 = shl nuw i16 %404, 8
  %406 = getelementptr inbounds i8, i8* %401, i64 1
  %407 = load i8, i8* %406, align 1
  %408 = zext i8 %407 to i16
  %409 = or i16 %405, %408
  %410 = getelementptr inbounds i16, i16* %400, i64 1
  store i16 %409, i16* %400, align 2
  %411 = icmp ult i16* %410, %313
  br i1 %411, label %399, label %412, !llvm.loop !33

412:                                              ; preds = %399, %394, %310
  %413 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 32, i32 1
  %414 = bitcast i16** %413 to i8**
  store i8* %306, i8** %414, align 8
  br label %415

415:                                              ; preds = %294, %412
  %416 = icmp eq i64 %176, 0
  br i1 %416, label %536, label %417

417:                                              ; preds = %415
  %418 = load i64, i64* %5, align 8
  %419 = icmp ugt i64 %418, %176
  br i1 %419, label %420, label %604

420:                                              ; preds = %417
  %421 = load i16, i16* %46, align 8
  %422 = zext i16 %421 to i64
  %423 = shl nuw nsw i64 %422, 1
  %424 = sub i64 %418, %176
  %425 = icmp ugt i64 %423, %424
  br i1 %425, label %604, label %426

426:                                              ; preds = %420
  %427 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %8, i64 2, i64 0, i64 %422, i8* null, i32* nonnull %3) #17
  %428 = bitcast i8* %427 to i16*
  %429 = load i32, i32* %3, align 4
  %430 = icmp eq i32 %429, 0
  br i1 %430, label %431, label %606

431:                                              ; preds = %426
  %432 = load i16, i16* %46, align 8
  %433 = zext i16 %432 to i64
  %434 = getelementptr inbounds i16, i16* %428, i64 %433
  %435 = icmp ugt i16* %434, %428
  br i1 %435, label %436, label %533

436:                                              ; preds = %431
  %437 = load i8*, i8** %4, align 8
  %438 = getelementptr inbounds i8, i8* %437, i64 %176
  %439 = shl nuw nsw i64 %433, 1
  %440 = add nsw i64 %439, -1
  %441 = lshr i64 %440, 1
  %442 = add nuw i64 %441, 1
  %443 = icmp ult i64 %442, 8
  br i1 %443, label %517, label %444

444:                                              ; preds = %436
  %445 = shl nuw nsw i64 %433, 1
  %446 = add nsw i64 %445, -1
  %447 = and i64 %446, -2
  %448 = add nsw i64 %447, 2
  %449 = getelementptr i8, i8* %427, i64 %448
  %450 = add nsw i64 %176, %447
  %451 = add nsw i64 %450, 2
  %452 = getelementptr i8, i8* %437, i64 %451
  %453 = icmp ult i8* %427, %452
  %454 = icmp ult i8* %438, %449
  %455 = and i1 %453, %454
  br i1 %455, label %517, label %456

456:                                              ; preds = %444
  %457 = and i64 %442, -8
  %458 = getelementptr i16, i16* %428, i64 %457
  %459 = shl i64 %457, 1
  %460 = getelementptr i8, i8* %438, i64 %459
  %461 = add i64 %457, -8
  %462 = lshr exact i64 %461, 3
  %463 = add nuw nsw i64 %462, 1
  %464 = and i64 %463, 1
  %465 = icmp eq i64 %461, 0
  br i1 %465, label %499, label %466

466:                                              ; preds = %456
  %467 = sub nuw nsw i64 %463, %464
  br label %468

468:                                              ; preds = %468, %466
  %469 = phi i64 [ 0, %466 ], [ %496, %468 ]
  %470 = phi i64 [ %467, %466 ], [ %497, %468 ]
  %471 = getelementptr i16, i16* %428, i64 %469
  %472 = shl i64 %469, 1
  %473 = getelementptr i8, i8* %438, i64 %472
  %474 = bitcast i8* %473 to <16 x i8>*
  %475 = load <16 x i8>, <16 x i8>* %474, align 1
  %476 = shufflevector <16 x i8> %475, <16 x i8> undef, <8 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14>
  %477 = shufflevector <16 x i8> %475, <16 x i8> undef, <8 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15>
  %478 = zext <8 x i8> %476 to <8 x i16>
  %479 = shl nuw <8 x i16> %478, <i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8>
  %480 = zext <8 x i8> %477 to <8 x i16>
  %481 = or <8 x i16> %479, %480
  %482 = bitcast i16* %471 to <8 x i16>*
  store <8 x i16> %481, <8 x i16>* %482, align 2, !alias.scope !34, !noalias !37
  %483 = or i64 %469, 8
  %484 = getelementptr i16, i16* %428, i64 %483
  %485 = shl i64 %483, 1
  %486 = getelementptr i8, i8* %438, i64 %485
  %487 = bitcast i8* %486 to <16 x i8>*
  %488 = load <16 x i8>, <16 x i8>* %487, align 1
  %489 = shufflevector <16 x i8> %488, <16 x i8> undef, <8 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14>
  %490 = shufflevector <16 x i8> %488, <16 x i8> undef, <8 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15>
  %491 = zext <8 x i8> %489 to <8 x i16>
  %492 = shl nuw <8 x i16> %491, <i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8>
  %493 = zext <8 x i8> %490 to <8 x i16>
  %494 = or <8 x i16> %492, %493
  %495 = bitcast i16* %484 to <8 x i16>*
  store <8 x i16> %494, <8 x i16>* %495, align 2, !alias.scope !34, !noalias !37
  %496 = add i64 %469, 16
  %497 = add i64 %470, -2
  %498 = icmp eq i64 %497, 0
  br i1 %498, label %499, label %468, !llvm.loop !39

499:                                              ; preds = %468, %456
  %500 = phi i64 [ 0, %456 ], [ %496, %468 ]
  %501 = icmp eq i64 %464, 0
  br i1 %501, label %515, label %502

502:                                              ; preds = %499
  %503 = getelementptr i16, i16* %428, i64 %500
  %504 = shl i64 %500, 1
  %505 = getelementptr i8, i8* %438, i64 %504
  %506 = bitcast i8* %505 to <16 x i8>*
  %507 = load <16 x i8>, <16 x i8>* %506, align 1
  %508 = shufflevector <16 x i8> %507, <16 x i8> undef, <8 x i32> <i32 0, i32 2, i32 4, i32 6, i32 8, i32 10, i32 12, i32 14>
  %509 = shufflevector <16 x i8> %507, <16 x i8> undef, <8 x i32> <i32 1, i32 3, i32 5, i32 7, i32 9, i32 11, i32 13, i32 15>
  %510 = zext <8 x i8> %508 to <8 x i16>
  %511 = shl nuw <8 x i16> %510, <i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8>
  %512 = zext <8 x i8> %509 to <8 x i16>
  %513 = or <8 x i16> %511, %512
  %514 = bitcast i16* %503 to <8 x i16>*
  store <8 x i16> %513, <8 x i16>* %514, align 2, !alias.scope !34, !noalias !37
  br label %515

515:                                              ; preds = %499, %502
  %516 = icmp eq i64 %442, %457
  br i1 %516, label %533, label %517

517:                                              ; preds = %515, %444, %436
  %518 = phi i16* [ %428, %444 ], [ %428, %436 ], [ %458, %515 ]
  %519 = phi i8* [ %438, %444 ], [ %438, %436 ], [ %460, %515 ]
  br label %520

520:                                              ; preds = %517, %520
  %521 = phi i16* [ %531, %520 ], [ %518, %517 ]
  %522 = phi i8* [ %523, %520 ], [ %519, %517 ]
  %523 = getelementptr inbounds i8, i8* %522, i64 2
  %524 = load i8, i8* %522, align 1
  %525 = zext i8 %524 to i16
  %526 = shl nuw i16 %525, 8
  %527 = getelementptr inbounds i8, i8* %522, i64 1
  %528 = load i8, i8* %527, align 1
  %529 = zext i8 %528 to i16
  %530 = or i16 %526, %529
  %531 = getelementptr inbounds i16, i16* %521, i64 1
  store i16 %530, i16* %521, align 2
  %532 = icmp ult i16* %531, %434
  br i1 %532, label %520, label %533, !llvm.loop !40

533:                                              ; preds = %520, %515, %431
  %534 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 32, i32 4
  %535 = bitcast i16** %534 to i8**
  store i8* %427, i8** %535, align 8
  br label %536

536:                                              ; preds = %415, %533, %101
  %537 = bitcast i8** %4 to i64*
  %538 = load i64, i64* %537, align 8
  %539 = getelementptr inbounds i8, i8* %24, i64 24
  %540 = bitcast i8* %539 to i64*
  store i64 %538, i64* %540, align 8
  %541 = load i64, i64* %5, align 8
  %542 = getelementptr inbounds i8, i8* %24, i64 32
  %543 = bitcast i8* %542 to i64*
  store i64 %541, i64* %543, align 8
  %544 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 77
  store i8* %24, i8** %544, align 8
  %545 = load i16, i16* %46, align 8
  %546 = zext i16 %545 to i64
  %547 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %8, i64 4, i64 0, i64 %546, i8* null, i32* nonnull %3) #17
  %548 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 34
  %549 = bitcast %struct.FT_Color_** %548 to i8**
  store i8* %547, i8** %549, align 8
  %550 = load i32, i32* %3, align 4
  %551 = icmp eq i32 %550, 0
  %552 = bitcast i8* %547 to %struct.FT_Color_*
  br i1 %551, label %553, label %606

553:                                              ; preds = %536
  %554 = bitcast i8** %544 to %struct.Cpal_**
  %555 = load %struct.Cpal_*, %struct.Cpal_** %554, align 8
  %556 = icmp eq %struct.Cpal_* %555, null
  br i1 %556, label %604, label %557

557:                                              ; preds = %553
  %558 = load i16, i16* %55, align 8
  %559 = icmp eq i16 %558, 0
  br i1 %559, label %604, label %560

560:                                              ; preds = %557
  %561 = getelementptr inbounds %struct.Cpal_, %struct.Cpal_* %555, i64 0, i32 3
  %562 = load i8*, i8** %561, align 8
  %563 = load i8, i8* %562, align 1
  %564 = zext i8 %563 to i32
  %565 = shl nuw nsw i32 %564, 8
  %566 = getelementptr inbounds i8, i8* %562, i64 1
  %567 = load i8, i8* %566, align 1
  %568 = zext i8 %567 to i32
  %569 = or i32 %565, %568
  %570 = load i16, i16* %46, align 8
  %571 = zext i16 %570 to i32
  %572 = add nuw nsw i32 %569, %571
  %573 = getelementptr inbounds %struct.Cpal_, %struct.Cpal_* %555, i64 0, i32 1
  %574 = load i16, i16* %573, align 2
  %575 = zext i16 %574 to i32
  %576 = icmp ugt i32 %572, %575
  br i1 %576, label %604, label %577

577:                                              ; preds = %560
  %578 = zext i16 %570 to i64
  %579 = getelementptr inbounds %struct.FT_Color_, %struct.FT_Color_* %552, i64 %578
  %580 = icmp eq i16 %570, 0
  br i1 %580, label %610, label %581

581:                                              ; preds = %577
  %582 = getelementptr inbounds %struct.Cpal_, %struct.Cpal_* %555, i64 0, i32 2
  %583 = load i8*, i8** %582, align 8
  %584 = shl nuw nsw i32 %569, 2
  %585 = zext i32 %584 to i64
  %586 = getelementptr inbounds i8, i8* %583, i64 %585
  br label %587

587:                                              ; preds = %587, %581
  %588 = phi %struct.FT_Color_* [ %602, %587 ], [ %552, %581 ]
  %589 = phi i8* [ %599, %587 ], [ %586, %581 ]
  %590 = getelementptr inbounds i8, i8* %589, i64 1
  %591 = load i8, i8* %589, align 1
  %592 = getelementptr inbounds %struct.FT_Color_, %struct.FT_Color_* %588, i64 0, i32 0
  store i8 %591, i8* %592, align 1
  %593 = getelementptr inbounds i8, i8* %589, i64 2
  %594 = load i8, i8* %590, align 1
  %595 = getelementptr inbounds %struct.FT_Color_, %struct.FT_Color_* %588, i64 0, i32 1
  store i8 %594, i8* %595, align 1
  %596 = getelementptr inbounds i8, i8* %589, i64 3
  %597 = load i8, i8* %593, align 1
  %598 = getelementptr inbounds %struct.FT_Color_, %struct.FT_Color_* %588, i64 0, i32 2
  store i8 %597, i8* %598, align 1
  %599 = getelementptr inbounds i8, i8* %589, i64 4
  %600 = load i8, i8* %596, align 1
  %601 = getelementptr inbounds %struct.FT_Color_, %struct.FT_Color_* %588, i64 0, i32 3
  store i8 %600, i8* %601, align 1
  %602 = getelementptr inbounds %struct.FT_Color_, %struct.FT_Color_* %588, i64 1
  %603 = icmp ult %struct.FT_Color_* %602, %579
  br i1 %603, label %587, label %610

604:                                              ; preds = %557, %560, %553, %420, %417, %299, %296, %178, %110, %37, %98, %93, %27, %16
  %605 = phi i8* [ null, %16 ], [ %24, %27 ], [ %24, %37 ], [ %24, %93 ], [ %24, %98 ], [ %24, %110 ], [ %24, %178 ], [ %24, %296 ], [ %24, %299 ], [ %24, %417 ], [ %24, %420 ], [ %24, %557 ], [ %24, %553 ], [ %24, %560 ]
  store i32 8, i32* %3, align 4
  br label %606

606:                                              ; preds = %426, %305, %183, %536, %22, %19, %2, %604
  %607 = phi i8* [ null, %2 ], [ %605, %604 ], [ null, %19 ], [ %24, %22 ], [ %24, %536 ], [ %24, %183 ], [ %24, %305 ], [ %24, %426 ]
  call void @FT_Stream_ReleaseFrame(%struct.FT_StreamRec_* %1, i8** nonnull %4) #17
  call void @ft_mem_free(%struct.FT_MemoryRec_* %8, i8* %607) #17
  %608 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 77
  store i8* null, i8** %608, align 8
  %609 = load i32, i32* %3, align 4
  br label %610

610:                                              ; preds = %587, %577, %606
  %611 = phi i32 [ %609, %606 ], [ 0, %577 ], [ 0, %587 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #17
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #17
  ret i32 %611
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @tt_face_load_colr(%struct.TT_FaceRec_*, %struct.FT_StreamRec_*) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  %5 = alloca i64, align 8
  %6 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #17
  store i32 -1431655766, i32* %3, align 4
  %7 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 0, i32 25
  %8 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %7, align 8
  %9 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #17
  store i8* null, i8** %4, align 8
  %10 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #17
  store i64 -6148914691236517206, i64* %5, align 8
  %11 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 77
  %12 = load i8*, i8** %11, align 8
  %13 = icmp eq i8* %12, null
  br i1 %13, label %228, label %14

14:                                               ; preds = %2
  %15 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 16
  %16 = bitcast {}** %15 to i32 (%struct.TT_FaceRec_*, i64, %struct.FT_StreamRec_*, i64*)**
  %17 = load i32 (%struct.TT_FaceRec_*, i64, %struct.FT_StreamRec_*, i64*)*, i32 (%struct.TT_FaceRec_*, i64, %struct.FT_StreamRec_*, i64*)** %16, align 8
  %18 = call i32 %17(%struct.TT_FaceRec_* %0, i64 1129270354, %struct.FT_StreamRec_* %1, i64* nonnull %5) #17
  store i32 %18, i32* %3, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %225

20:                                               ; preds = %14
  %21 = load i64, i64* %5, align 8
  %22 = icmp ult i64 %21, 14
  br i1 %22, label %223, label %23

23:                                               ; preds = %20
  %24 = call i32 @FT_Stream_ExtractFrame(%struct.FT_StreamRec_* %1, i64 %21, i8** nonnull %4) #17
  store i32 %24, i32* %3, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %225

26:                                               ; preds = %23
  %27 = load i8*, i8** %4, align 8
  %28 = call i8* @ft_mem_alloc(%struct.FT_MemoryRec_* %8, i64 72, i32* nonnull %3) #17
  %29 = load i32, i32* %3, align 4
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %225

31:                                               ; preds = %26
  %32 = load i8, i8* %27, align 1
  %33 = zext i8 %32 to i16
  %34 = shl nuw i16 %33, 8
  %35 = getelementptr inbounds i8, i8* %27, i64 1
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i16
  %38 = or i16 %34, %37
  %39 = bitcast i8* %28 to i16*
  store i16 %38, i16* %39, align 8
  %40 = icmp ult i16 %38, 2
  br i1 %40, label %41, label %223

41:                                               ; preds = %31
  %42 = getelementptr inbounds i8, i8* %27, i64 2
  %43 = load i8, i8* %42, align 1
  %44 = zext i8 %43 to i16
  %45 = shl nuw i16 %44, 8
  %46 = getelementptr inbounds i8, i8* %27, i64 3
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i16
  %49 = or i16 %45, %48
  %50 = getelementptr inbounds i8, i8* %28, i64 2
  %51 = bitcast i8* %50 to i16*
  store i16 %49, i16* %51, align 2
  %52 = getelementptr inbounds i8, i8* %27, i64 4
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i64
  %55 = shl nuw nsw i64 %54, 24
  %56 = getelementptr inbounds i8, i8* %27, i64 5
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i64
  %59 = shl nuw nsw i64 %58, 16
  %60 = or i64 %59, %55
  %61 = getelementptr inbounds i8, i8* %27, i64 6
  %62 = load i8, i8* %61, align 1
  %63 = zext i8 %62 to i64
  %64 = shl nuw nsw i64 %63, 8
  %65 = or i64 %60, %64
  %66 = getelementptr inbounds i8, i8* %27, i64 7
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i64
  %69 = or i64 %65, %68
  %70 = load i64, i64* %5, align 8
  %71 = icmp ugt i64 %70, %69
  br i1 %71, label %72, label %223

72:                                               ; preds = %41
  %73 = zext i16 %49 to i64
  %74 = mul nuw nsw i64 %73, 6
  %75 = sub i64 %70, %69
  %76 = icmp ugt i64 %74, %75
  br i1 %76, label %223, label %77

77:                                               ; preds = %72
  %78 = getelementptr inbounds i8, i8* %27, i64 8
  %79 = load i8, i8* %78, align 1
  %80 = zext i8 %79 to i64
  %81 = shl nuw nsw i64 %80, 24
  %82 = getelementptr inbounds i8, i8* %27, i64 9
  %83 = load i8, i8* %82, align 1
  %84 = zext i8 %83 to i64
  %85 = shl nuw nsw i64 %84, 16
  %86 = or i64 %85, %81
  %87 = getelementptr inbounds i8, i8* %27, i64 10
  %88 = load i8, i8* %87, align 1
  %89 = zext i8 %88 to i64
  %90 = shl nuw nsw i64 %89, 8
  %91 = or i64 %86, %90
  %92 = getelementptr inbounds i8, i8* %27, i64 11
  %93 = load i8, i8* %92, align 1
  %94 = zext i8 %93 to i64
  %95 = or i64 %91, %94
  %96 = getelementptr inbounds i8, i8* %27, i64 12
  %97 = load i8, i8* %96, align 1
  %98 = zext i8 %97 to i16
  %99 = shl nuw i16 %98, 8
  %100 = getelementptr inbounds i8, i8* %27, i64 13
  %101 = load i8, i8* %100, align 1
  %102 = zext i8 %101 to i16
  %103 = or i16 %99, %102
  %104 = getelementptr inbounds i8, i8* %28, i64 4
  %105 = bitcast i8* %104 to i16*
  store i16 %103, i16* %105, align 4
  %106 = load i64, i64* %5, align 8
  %107 = icmp ugt i64 %106, %95
  br i1 %107, label %108, label %223

108:                                              ; preds = %77
  %109 = zext i16 %103 to i64
  %110 = shl nuw nsw i64 %109, 2
  %111 = sub i64 %106, %95
  %112 = icmp ugt i64 %110, %111
  br i1 %112, label %223, label %113

113:                                              ; preds = %108
  %114 = icmp eq i16 %38, 1
  br i1 %114, label %117, label %115

115:                                              ; preds = %113
  %116 = load i8*, i8** %4, align 8
  br label %209

117:                                              ; preds = %113
  %118 = getelementptr inbounds i8, i8* %27, i64 14
  %119 = load i8, i8* %118, align 1
  %120 = zext i8 %119 to i64
  %121 = shl nuw nsw i64 %120, 24
  %122 = getelementptr inbounds i8, i8* %27, i64 15
  %123 = load i8, i8* %122, align 1
  %124 = zext i8 %123 to i64
  %125 = shl nuw nsw i64 %124, 16
  %126 = or i64 %125, %121
  %127 = getelementptr inbounds i8, i8* %27, i64 16
  %128 = load i8, i8* %127, align 1
  %129 = zext i8 %128 to i64
  %130 = shl nuw nsw i64 %129, 8
  %131 = or i64 %126, %130
  %132 = getelementptr inbounds i8, i8* %27, i64 17
  %133 = load i8, i8* %132, align 1
  %134 = zext i8 %133 to i64
  %135 = or i64 %131, %134
  %136 = icmp ugt i64 %106, %135
  br i1 %136, label %137, label %223

137:                                              ; preds = %117
  %138 = load i8*, i8** %4, align 8
  %139 = getelementptr inbounds i8, i8* %138, i64 %135
  %140 = load i8, i8* %139, align 1
  %141 = zext i8 %140 to i64
  %142 = shl nuw nsw i64 %141, 24
  %143 = getelementptr inbounds i8, i8* %139, i64 1
  %144 = load i8, i8* %143, align 1
  %145 = zext i8 %144 to i64
  %146 = shl nuw nsw i64 %145, 16
  %147 = or i64 %146, %142
  %148 = getelementptr inbounds i8, i8* %139, i64 2
  %149 = load i8, i8* %148, align 1
  %150 = zext i8 %149 to i64
  %151 = shl nuw nsw i64 %150, 8
  %152 = or i64 %147, %151
  %153 = getelementptr inbounds i8, i8* %139, i64 3
  %154 = load i8, i8* %153, align 1
  %155 = zext i8 %154 to i64
  %156 = or i64 %152, %155
  %157 = mul nuw nsw i64 %156, 6
  %158 = sub i64 %106, %135
  %159 = icmp ugt i64 %157, %158
  br i1 %159, label %223, label %160

160:                                              ; preds = %137
  %161 = getelementptr inbounds i8, i8* %28, i64 24
  %162 = bitcast i8* %161 to i64*
  store i64 %156, i64* %162, align 8
  %163 = getelementptr inbounds i8, i8* %28, i64 32
  %164 = bitcast i8* %163 to i8**
  store i8* %139, i8** %164, align 8
  %165 = getelementptr inbounds i8, i8* %27, i64 18
  %166 = load i8, i8* %165, align 1
  %167 = zext i8 %166 to i64
  %168 = shl nuw nsw i64 %167, 24
  %169 = getelementptr inbounds i8, i8* %27, i64 19
  %170 = load i8, i8* %169, align 1
  %171 = zext i8 %170 to i64
  %172 = shl nuw nsw i64 %171, 16
  %173 = or i64 %172, %168
  %174 = getelementptr inbounds i8, i8* %27, i64 20
  %175 = load i8, i8* %174, align 1
  %176 = zext i8 %175 to i64
  %177 = shl nuw nsw i64 %176, 8
  %178 = or i64 %173, %177
  %179 = getelementptr inbounds i8, i8* %27, i64 21
  %180 = load i8, i8* %179, align 1
  %181 = zext i8 %180 to i64
  %182 = or i64 %178, %181
  %183 = icmp ne i64 %182, 0
  %184 = icmp ult i64 %182, %106
  %185 = and i1 %183, %184
  br i1 %185, label %186, label %223

186:                                              ; preds = %160
  %187 = getelementptr inbounds i8, i8* %138, i64 %182
  %188 = load i8, i8* %187, align 1
  %189 = zext i8 %188 to i64
  %190 = shl nuw nsw i64 %189, 24
  %191 = getelementptr inbounds i8, i8* %187, i64 1
  %192 = load i8, i8* %191, align 1
  %193 = zext i8 %192 to i64
  %194 = shl nuw nsw i64 %193, 16
  %195 = or i64 %194, %190
  %196 = getelementptr inbounds i8, i8* %187, i64 2
  %197 = load i8, i8* %196, align 1
  %198 = zext i8 %197 to i64
  %199 = shl nuw nsw i64 %198, 8
  %200 = or i64 %195, %199
  %201 = getelementptr inbounds i8, i8* %187, i64 3
  %202 = load i8, i8* %201, align 1
  %203 = zext i8 %202 to i64
  %204 = or i64 %200, %203
  %205 = getelementptr inbounds i8, i8* %28, i64 40
  %206 = bitcast i8* %205 to i64*
  store i64 %204, i64* %206, align 8
  %207 = getelementptr inbounds i8, i8* %28, i64 48
  %208 = bitcast i8* %207 to i8**
  store i8* %187, i8** %208, align 8
  br label %209

209:                                              ; preds = %115, %186
  %210 = phi i8* [ %116, %115 ], [ %138, %186 ]
  %211 = ptrtoint i8* %210 to i64
  %212 = getelementptr inbounds i8, i8* %210, i64 %69
  %213 = getelementptr inbounds i8, i8* %28, i64 8
  %214 = bitcast i8* %213 to i8**
  store i8* %212, i8** %214, align 8
  %215 = getelementptr inbounds i8, i8* %210, i64 %95
  %216 = getelementptr inbounds i8, i8* %28, i64 16
  %217 = bitcast i8* %216 to i8**
  store i8* %215, i8** %217, align 8
  %218 = getelementptr inbounds i8, i8* %28, i64 56
  %219 = bitcast i8* %218 to i64*
  store i64 %211, i64* %219, align 8
  %220 = getelementptr inbounds i8, i8* %28, i64 64
  %221 = bitcast i8* %220 to i64*
  store i64 %106, i64* %221, align 8
  %222 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 78
  store i8* %28, i8** %222, align 8
  br label %228

223:                                              ; preds = %31, %160, %117, %77, %41, %137, %108, %72, %20
  %224 = phi i8* [ null, %20 ], [ %28, %41 ], [ %28, %72 ], [ %28, %77 ], [ %28, %108 ], [ %28, %117 ], [ %28, %137 ], [ %28, %160 ], [ %28, %31 ]
  store i32 8, i32* %3, align 4
  br label %225

225:                                              ; preds = %26, %23, %14, %223
  %226 = phi i8* [ null, %14 ], [ %224, %223 ], [ null, %23 ], [ %28, %26 ]
  call void @FT_Stream_ReleaseFrame(%struct.FT_StreamRec_* %1, i8** nonnull %4) #17
  call void @ft_mem_free(%struct.FT_MemoryRec_* %8, i8* %226) #17
  %227 = load i32, i32* %3, align 4
  br label %228

228:                                              ; preds = %2, %225, %209
  %229 = phi i32 [ %227, %225 ], [ 0, %209 ], [ 3, %2 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #17
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #17
  ret i32 %229
}

; Function Attrs: nounwind ssp uwtable
define internal void @tt_face_free_cpal(%struct.TT_FaceRec_* nocapture readonly) #0 {
  %2 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 77
  %3 = load i8*, i8** %2, align 8
  %4 = icmp eq i8* %3, null
  br i1 %4, label %12, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 0, i32 25
  %7 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %6, align 8
  %8 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 0, i32 26
  %9 = load %struct.FT_StreamRec_*, %struct.FT_StreamRec_** %8, align 8
  %10 = getelementptr inbounds i8, i8* %3, i64 24
  %11 = bitcast i8* %10 to i8**
  tail call void @FT_Stream_ReleaseFrame(%struct.FT_StreamRec_* %9, i8** %11) #17
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %7, i8* nonnull %3) #17
  br label %12

12:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @tt_face_free_colr(%struct.TT_FaceRec_* nocapture readonly) #0 {
  %2 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 78
  %3 = load i8*, i8** %2, align 8
  %4 = icmp eq i8* %3, null
  br i1 %4, label %12, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 0, i32 25
  %7 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %6, align 8
  %8 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 0, i32 26
  %9 = load %struct.FT_StreamRec_*, %struct.FT_StreamRec_** %8, align 8
  %10 = getelementptr inbounds i8, i8* %3, i64 56
  %11 = bitcast i8* %10 to i8**
  tail call void @FT_Stream_ReleaseFrame(%struct.FT_StreamRec_* %9, i8** %11) #17
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %7, i8* nonnull %3) #17
  br label %12

12:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal i32 @tt_face_palette_set(%struct.TT_FaceRec_* nocapture readonly, i32) #3 {
  %3 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 77
  %4 = bitcast i8** %3 to %struct.Cpal_**
  %5 = load %struct.Cpal_*, %struct.Cpal_** %4, align 8
  %6 = icmp eq %struct.Cpal_* %5, null
  br i1 %6, label %62, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 32, i32 0
  %9 = load i16, i16* %8, align 8
  %10 = zext i16 %9 to i32
  %11 = icmp ugt i32 %10, %1
  br i1 %11, label %12, label %62

12:                                               ; preds = %7
  %13 = getelementptr inbounds %struct.Cpal_, %struct.Cpal_* %5, i64 0, i32 3
  %14 = load i8*, i8** %13, align 8
  %15 = shl i32 %1, 1
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds i8, i8* %14, i64 %16
  %18 = load i8, i8* %17, align 1
  %19 = zext i8 %18 to i32
  %20 = shl nuw nsw i32 %19, 8
  %21 = getelementptr inbounds i8, i8* %17, i64 1
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i32
  %24 = or i32 %20, %23
  %25 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 32, i32 3
  %26 = load i16, i16* %25, align 8
  %27 = zext i16 %26 to i32
  %28 = add nuw nsw i32 %24, %27
  %29 = getelementptr inbounds %struct.Cpal_, %struct.Cpal_* %5, i64 0, i32 1
  %30 = load i16, i16* %29, align 2
  %31 = zext i16 %30 to i32
  %32 = icmp ugt i32 %28, %31
  br i1 %32, label %62, label %33

33:                                               ; preds = %12
  %34 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 34
  %35 = load %struct.FT_Color_*, %struct.FT_Color_** %34, align 8
  %36 = zext i16 %26 to i64
  %37 = getelementptr inbounds %struct.FT_Color_, %struct.FT_Color_* %35, i64 %36
  %38 = icmp eq i16 %26, 0
  br i1 %38, label %62, label %39

39:                                               ; preds = %33
  %40 = getelementptr inbounds %struct.Cpal_, %struct.Cpal_* %5, i64 0, i32 2
  %41 = load i8*, i8** %40, align 8
  %42 = shl nuw nsw i32 %24, 2
  %43 = zext i32 %42 to i64
  %44 = getelementptr inbounds i8, i8* %41, i64 %43
  br label %45

45:                                               ; preds = %39, %45
  %46 = phi %struct.FT_Color_* [ %60, %45 ], [ %35, %39 ]
  %47 = phi i8* [ %57, %45 ], [ %44, %39 ]
  %48 = getelementptr inbounds i8, i8* %47, i64 1
  %49 = load i8, i8* %47, align 1
  %50 = getelementptr inbounds %struct.FT_Color_, %struct.FT_Color_* %46, i64 0, i32 0
  store i8 %49, i8* %50, align 1
  %51 = getelementptr inbounds i8, i8* %47, i64 2
  %52 = load i8, i8* %48, align 1
  %53 = getelementptr inbounds %struct.FT_Color_, %struct.FT_Color_* %46, i64 0, i32 1
  store i8 %52, i8* %53, align 1
  %54 = getelementptr inbounds i8, i8* %47, i64 3
  %55 = load i8, i8* %51, align 1
  %56 = getelementptr inbounds %struct.FT_Color_, %struct.FT_Color_* %46, i64 0, i32 2
  store i8 %55, i8* %56, align 1
  %57 = getelementptr inbounds i8, i8* %47, i64 4
  %58 = load i8, i8* %54, align 1
  %59 = getelementptr inbounds %struct.FT_Color_, %struct.FT_Color_* %46, i64 0, i32 3
  store i8 %58, i8* %59, align 1
  %60 = getelementptr inbounds %struct.FT_Color_, %struct.FT_Color_* %46, i64 1
  %61 = icmp ult %struct.FT_Color_* %60, %37
  br i1 %61, label %45, label %62

62:                                               ; preds = %45, %33, %12, %2, %7
  %63 = phi i32 [ 6, %7 ], [ 6, %2 ], [ 8, %12 ], [ 0, %33 ], [ 0, %45 ]
  ret i32 %63
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i8 @tt_face_get_colr_layer(%struct.TT_FaceRec_* nocapture readonly, i32, i32* nocapture, i32* nocapture, %struct.FT_LayerIterator_* nocapture) #0 {
  %6 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 78
  %7 = bitcast i8** %6 to %struct.Colr_**
  %8 = load %struct.Colr_*, %struct.Colr_** %7, align 8
  %9 = icmp eq %struct.Colr_* %8, null
  br i1 %9, label %130, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %struct.FT_LayerIterator_, %struct.FT_LayerIterator_* %4, i64 0, i32 2
  %12 = load i8*, i8** %11, align 8
  %13 = icmp eq i8* %12, null
  %14 = getelementptr inbounds %struct.FT_LayerIterator_, %struct.FT_LayerIterator_* %4, i64 0, i32 1
  br i1 %13, label %19, label %15

15:                                               ; preds = %10
  %16 = load i32, i32* %14, align 4
  %17 = getelementptr inbounds %struct.FT_LayerIterator_, %struct.FT_LayerIterator_* %4, i64 0, i32 0
  %18 = load i32, i32* %17, align 8
  br label %91

19:                                               ; preds = %10
  store i32 0, i32* %14, align 4
  %20 = getelementptr inbounds %struct.Colr_, %struct.Colr_* %8, i64 0, i32 1
  %21 = load i16, i16* %20, align 2
  %22 = icmp eq i16 %21, 0
  br i1 %22, label %130, label %23

23:                                               ; preds = %19
  %24 = zext i16 %21 to i32
  %25 = getelementptr inbounds %struct.Colr_, %struct.Colr_* %8, i64 0, i32 3
  %26 = load i8*, i8** %25, align 8
  %27 = add nsw i32 %24, -1
  %28 = getelementptr inbounds i8, i8* %26, i64 2
  br label %29

29:                                               ; preds = %53, %23
  %30 = phi i32 [ %27, %23 ], [ %55, %53 ]
  %31 = phi i32 [ 0, %23 ], [ %54, %53 ]
  %32 = sub nsw i32 %30, %31
  %33 = sdiv i32 %32, 2
  %34 = add nsw i32 %33, %31
  %35 = mul i32 %34, 6
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i8, i8* %28, i64 %36
  %38 = getelementptr inbounds i8, i8* %37, i64 -2
  %39 = load i8, i8* %38, align 1
  %40 = zext i8 %39 to i32
  %41 = shl nuw nsw i32 %40, 8
  %42 = getelementptr inbounds i8, i8* %38, i64 1
  %43 = load i8, i8* %42, align 1
  %44 = zext i8 %43 to i32
  %45 = or i32 %41, %44
  %46 = icmp ult i32 %45, %1
  br i1 %46, label %47, label %49

47:                                               ; preds = %29
  %48 = add nsw i32 %34, 1
  br label %53

49:                                               ; preds = %29
  %50 = icmp ugt i32 %45, %1
  br i1 %50, label %51, label %57

51:                                               ; preds = %49
  %52 = add nsw i32 %34, -1
  br label %53

53:                                               ; preds = %51, %47
  %54 = phi i32 [ %48, %47 ], [ %31, %51 ]
  %55 = phi i32 [ %30, %47 ], [ %52, %51 ]
  %56 = icmp slt i32 %55, %54
  br i1 %56, label %130, label %29

57:                                               ; preds = %49
  %58 = getelementptr inbounds i8, i8* %37, i64 2
  %59 = getelementptr inbounds i8, i8* %58, i64 -2
  %60 = getelementptr inbounds i8, i8* %58, i64 2
  %61 = getelementptr inbounds i8, i8* %60, i64 -2
  %62 = load i8, i8* %61, align 1
  %63 = zext i8 %62 to i16
  %64 = shl nuw i16 %63, 8
  %65 = getelementptr inbounds i8, i8* %61, i64 1
  %66 = load i8, i8* %65, align 1
  %67 = zext i8 %66 to i16
  %68 = or i16 %64, %67
  %69 = icmp eq i16 %68, 0
  br i1 %69, label %130, label %70

70:                                               ; preds = %57
  %71 = load i8, i8* %59, align 1
  %72 = zext i8 %71 to i64
  %73 = shl nuw nsw i64 %72, 8
  %74 = getelementptr inbounds i8, i8* %59, i64 1
  %75 = load i8, i8* %74, align 1
  %76 = zext i8 %75 to i64
  %77 = or i64 %73, %76
  %78 = zext i16 %68 to i32
  %79 = getelementptr inbounds %struct.FT_LayerIterator_, %struct.FT_LayerIterator_* %4, i64 0, i32 0
  store i32 %78, i32* %79, align 8
  %80 = shl nuw nsw i64 %77, 2
  %81 = zext i16 %68 to i64
  %82 = shl nuw nsw i64 %81, 2
  %83 = add nuw nsw i64 %80, %82
  %84 = getelementptr inbounds %struct.Colr_, %struct.Colr_* %8, i64 0, i32 10
  %85 = load i64, i64* %84, align 8
  %86 = icmp ugt i64 %83, %85
  br i1 %86, label %130, label %87

87:                                               ; preds = %70
  %88 = getelementptr inbounds %struct.Colr_, %struct.Colr_* %8, i64 0, i32 4
  %89 = load i8*, i8** %88, align 8
  %90 = getelementptr inbounds i8, i8* %89, i64 %80
  store i8* %90, i8** %11, align 8
  br label %91

91:                                               ; preds = %15, %87
  %92 = phi i8* [ %12, %15 ], [ %90, %87 ]
  %93 = phi i32 [ %18, %15 ], [ %78, %87 ]
  %94 = phi i32 [ %16, %15 ], [ 0, %87 ]
  %95 = getelementptr inbounds %struct.FT_LayerIterator_, %struct.FT_LayerIterator_* %4, i64 0, i32 1
  %96 = icmp ult i32 %94, %93
  br i1 %96, label %97, label %130

97:                                               ; preds = %91
  %98 = getelementptr inbounds i8, i8* %92, i64 2
  store i8* %98, i8** %11, align 8
  %99 = load i8, i8* %92, align 1
  %100 = zext i8 %99 to i32
  %101 = shl nuw nsw i32 %100, 8
  %102 = getelementptr inbounds i8, i8* %92, i64 1
  %103 = load i8, i8* %102, align 1
  %104 = zext i8 %103 to i32
  %105 = or i32 %101, %104
  store i32 %105, i32* %2, align 4
  %106 = load i8*, i8** %11, align 8
  %107 = getelementptr inbounds i8, i8* %106, i64 2
  store i8* %107, i8** %11, align 8
  %108 = load i8, i8* %106, align 1
  %109 = zext i8 %108 to i32
  %110 = shl nuw nsw i32 %109, 8
  %111 = getelementptr inbounds i8, i8* %106, i64 1
  %112 = load i8, i8* %111, align 1
  %113 = zext i8 %112 to i32
  %114 = or i32 %110, %113
  store i32 %114, i32* %3, align 4
  %115 = load i32, i32* %2, align 4
  %116 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 0, i32 4
  %117 = load i64, i64* %116, align 8
  %118 = trunc i64 %117 to i32
  %119 = icmp ult i32 %115, %118
  br i1 %119, label %120, label %130

120:                                              ; preds = %97
  %121 = icmp eq i32 %114, 65535
  br i1 %121, label %127, label %122

122:                                              ; preds = %120
  %123 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 32, i32 3
  %124 = load i16, i16* %123, align 8
  %125 = zext i16 %124 to i32
  %126 = icmp ult i32 %114, %125
  br i1 %126, label %127, label %130

127:                                              ; preds = %122, %120
  %128 = load i32, i32* %95, align 4
  %129 = add i32 %128, 1
  store i32 %129, i32* %95, align 4
  br label %130

130:                                              ; preds = %53, %19, %97, %122, %91, %57, %70, %5, %127
  %131 = phi i8 [ 1, %127 ], [ 0, %5 ], [ 0, %70 ], [ 0, %57 ], [ 0, %91 ], [ 0, %122 ], [ 0, %97 ], [ 0, %19 ], [ 0, %53 ]
  ret i8 %131
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i8 @tt_face_get_colr_glyph_paint(%struct.TT_FaceRec_* nocapture readonly, i32, i32, %struct.FT_Opaque_Paint_* nocapture) #0 {
  %5 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 78
  %6 = bitcast i8** %5 to %struct.Colr_**
  %7 = load %struct.Colr_*, %struct.Colr_** %6, align 8
  %8 = icmp eq %struct.Colr_* %7, null
  br i1 %8, label %96, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %struct.Colr_, %struct.Colr_* %7, i64 0, i32 9
  %11 = load i8*, i8** %10, align 8
  %12 = icmp eq i8* %11, null
  br i1 %12, label %96, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct.Colr_, %struct.Colr_* %7, i64 0, i32 0
  %15 = load i16, i16* %14, align 8
  %16 = icmp eq i16 %15, 0
  br i1 %16, label %96, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %struct.Colr_, %struct.Colr_* %7, i64 0, i32 5
  %19 = load i64, i64* %18, align 8
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %96, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds %struct.Colr_, %struct.Colr_* %7, i64 0, i32 6
  %23 = load i8*, i8** %22, align 8
  %24 = icmp eq i8* %23, null
  br i1 %24, label %96, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.FT_Opaque_Paint_, %struct.FT_Opaque_Paint_* %3, i64 0, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = icmp eq i8* %27, null
  br i1 %28, label %29, label %96

29:                                               ; preds = %25
  %30 = trunc i64 %19 to i32
  %31 = icmp slt i32 %30, 1
  br i1 %31, label %96, label %32

32:                                               ; preds = %29
  %33 = add nsw i32 %30, -1
  %34 = getelementptr inbounds i8, i8* %23, i64 6
  br label %35

35:                                               ; preds = %59, %32
  %36 = phi i32 [ %33, %32 ], [ %61, %59 ]
  %37 = phi i32 [ 0, %32 ], [ %60, %59 ]
  %38 = sub nsw i32 %36, %37
  %39 = sdiv i32 %38, 2
  %40 = add nsw i32 %39, %37
  %41 = mul i32 %40, 6
  %42 = zext i32 %41 to i64
  %43 = getelementptr inbounds i8, i8* %34, i64 %42
  %44 = getelementptr inbounds i8, i8* %43, i64 -2
  %45 = load i8, i8* %44, align 1
  %46 = zext i8 %45 to i32
  %47 = shl nuw nsw i32 %46, 8
  %48 = getelementptr inbounds i8, i8* %44, i64 1
  %49 = load i8, i8* %48, align 1
  %50 = zext i8 %49 to i32
  %51 = or i32 %47, %50
  %52 = icmp ult i32 %51, %1
  br i1 %52, label %53, label %55

53:                                               ; preds = %35
  %54 = add nsw i32 %40, 1
  br label %59

55:                                               ; preds = %35
  %56 = icmp ugt i32 %51, %1
  br i1 %56, label %57, label %63

57:                                               ; preds = %55
  %58 = add nsw i32 %40, -1
  br label %59

59:                                               ; preds = %57, %53
  %60 = phi i32 [ %54, %53 ], [ %37, %57 ]
  %61 = phi i32 [ %36, %53 ], [ %58, %57 ]
  %62 = icmp slt i32 %61, %60
  br i1 %62, label %96, label %35

63:                                               ; preds = %55
  %64 = getelementptr inbounds i8, i8* %43, i64 4
  %65 = getelementptr inbounds i8, i8* %64, i64 -4
  %66 = load i8, i8* %65, align 1
  %67 = zext i8 %66 to i64
  %68 = shl nuw nsw i64 %67, 24
  %69 = getelementptr inbounds i8, i8* %65, i64 1
  %70 = load i8, i8* %69, align 1
  %71 = zext i8 %70 to i64
  %72 = shl nuw nsw i64 %71, 16
  %73 = or i64 %72, %68
  %74 = getelementptr inbounds i8, i8* %65, i64 2
  %75 = load i8, i8* %74, align 1
  %76 = zext i8 %75 to i64
  %77 = shl nuw nsw i64 %76, 8
  %78 = or i64 %73, %77
  %79 = getelementptr inbounds i8, i8* %65, i64 3
  %80 = load i8, i8* %79, align 1
  %81 = zext i8 %80 to i64
  %82 = or i64 %78, %81
  %83 = icmp eq i64 %82, 0
  br i1 %83, label %96, label %84

84:                                               ; preds = %63
  %85 = getelementptr inbounds %struct.Colr_, %struct.Colr_* %7, i64 0, i32 10
  %86 = load i64, i64* %85, align 8
  %87 = icmp ugt i64 %82, %86
  br i1 %87, label %96, label %88

88:                                               ; preds = %84
  %89 = getelementptr inbounds i8, i8* %23, i64 %82
  %90 = getelementptr inbounds i8, i8* %11, i64 %86
  %91 = icmp ult i8* %89, %90
  br i1 %91, label %92, label %96

92:                                               ; preds = %88
  store i8* %89, i8** %26, align 8
  %93 = icmp eq i32 %2, 0
  %94 = getelementptr inbounds %struct.FT_Opaque_Paint_, %struct.FT_Opaque_Paint_* %3, i64 0, i32 1
  %95 = zext i1 %93 to i8
  store i8 %95, i8* %94, align 8
  br label %96

96:                                               ; preds = %59, %29, %88, %84, %63, %25, %13, %17, %21, %4, %9, %92
  %97 = phi i8 [ 1, %92 ], [ 0, %9 ], [ 0, %4 ], [ 0, %21 ], [ 0, %17 ], [ 0, %13 ], [ 0, %25 ], [ 0, %63 ], [ 0, %84 ], [ 0, %88 ], [ 0, %29 ], [ 0, %59 ]
  ret i8 %97
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal zeroext i8 @tt_face_get_paint_layers(%struct.TT_FaceRec_* nocapture readonly, %struct.FT_LayerIterator_* nocapture, %struct.FT_Opaque_Paint_* nocapture) #3 {
  %4 = getelementptr inbounds %struct.FT_LayerIterator_, %struct.FT_LayerIterator_* %1, i64 0, i32 1
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %struct.FT_LayerIterator_, %struct.FT_LayerIterator_* %1, i64 0, i32 0
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %5, %7
  br i1 %8, label %68, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 78
  %11 = bitcast i8** %10 to %struct.Colr_**
  %12 = load %struct.Colr_*, %struct.Colr_** %11, align 8
  %13 = icmp eq %struct.Colr_* %12, null
  br i1 %13, label %68, label %14

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.FT_LayerIterator_, %struct.FT_LayerIterator_* %1, i64 0, i32 2
  %16 = load i8*, i8** %15, align 8
  %17 = shl i32 %5, 2
  %18 = zext i32 %17 to i64
  %19 = sub nsw i64 0, %18
  %20 = getelementptr inbounds i8, i8* %16, i64 %19
  %21 = getelementptr inbounds i8, i8* %20, i64 -4
  %22 = getelementptr inbounds %struct.Colr_, %struct.Colr_* %12, i64 0, i32 8
  %23 = load i8*, i8** %22, align 8
  %24 = icmp ult i8* %21, %23
  br i1 %24, label %68, label %25

25:                                               ; preds = %14
  %26 = getelementptr inbounds i8, i8* %23, i64 4
  %27 = getelementptr inbounds %struct.Colr_, %struct.Colr_* %12, i64 0, i32 7
  %28 = load i64, i64* %27, align 8
  %29 = shl i64 %28, 2
  %30 = getelementptr inbounds i8, i8* %26, i64 %29
  %31 = icmp ult i8* %21, %30
  br i1 %31, label %32, label %68

32:                                               ; preds = %25
  %33 = getelementptr inbounds i8, i8* %16, i64 4
  %34 = load i8, i8* %16, align 1
  %35 = zext i8 %34 to i64
  %36 = shl nuw nsw i64 %35, 24
  %37 = getelementptr inbounds i8, i8* %16, i64 1
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i64
  %40 = shl nuw nsw i64 %39, 16
  %41 = or i64 %40, %36
  %42 = getelementptr inbounds i8, i8* %16, i64 2
  %43 = load i8, i8* %42, align 1
  %44 = zext i8 %43 to i64
  %45 = shl nuw nsw i64 %44, 8
  %46 = or i64 %41, %45
  %47 = getelementptr inbounds i8, i8* %16, i64 3
  %48 = load i8, i8* %47, align 1
  %49 = zext i8 %48 to i64
  %50 = or i64 %46, %49
  %51 = getelementptr inbounds %struct.FT_Opaque_Paint_, %struct.FT_Opaque_Paint_* %2, i64 0, i32 1
  store i8 0, i8* %51, align 8
  %52 = load i8*, i8** %22, align 8
  %53 = getelementptr inbounds i8, i8* %52, i64 %50
  %54 = getelementptr inbounds %struct.Colr_, %struct.Colr_* %12, i64 0, i32 6
  %55 = load i8*, i8** %54, align 8
  %56 = icmp ult i8* %53, %55
  br i1 %56, label %68, label %57

57:                                               ; preds = %32
  %58 = getelementptr inbounds %struct.Colr_, %struct.Colr_* %12, i64 0, i32 9
  %59 = load i8*, i8** %58, align 8
  %60 = getelementptr inbounds %struct.Colr_, %struct.Colr_* %12, i64 0, i32 10
  %61 = load i64, i64* %60, align 8
  %62 = getelementptr inbounds i8, i8* %59, i64 %61
  %63 = icmp ult i8* %53, %62
  br i1 %63, label %64, label %68

64:                                               ; preds = %57
  %65 = getelementptr inbounds %struct.FT_Opaque_Paint_, %struct.FT_Opaque_Paint_* %2, i64 0, i32 0
  store i8* %53, i8** %65, align 8
  store i8* %33, i8** %15, align 8
  %66 = load i32, i32* %4, align 4
  %67 = add i32 %66, 1
  store i32 %67, i32* %4, align 4
  br label %68

68:                                               ; preds = %32, %57, %25, %14, %9, %3, %64
  %69 = phi i8 [ 1, %64 ], [ 0, %3 ], [ 0, %9 ], [ 0, %14 ], [ 0, %25 ], [ 0, %57 ], [ 0, %32 ]
  ret i8 %69
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal zeroext i8 @tt_face_get_colorline_stops(%struct.TT_FaceRec_* nocapture readonly, %struct.FT_ColorStop_* nocapture, %struct.FT_ColorStopIterator_* nocapture) #3 {
  %4 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 78
  %5 = bitcast i8** %4 to %struct.Colr_**
  %6 = load %struct.Colr_*, %struct.Colr_** %5, align 8
  %7 = icmp eq %struct.Colr_* %6, null
  br i1 %7, label %59, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.Colr_, %struct.Colr_* %6, i64 0, i32 9
  %10 = load i8*, i8** %9, align 8
  %11 = icmp eq i8* %10, null
  br i1 %11, label %59, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %struct.FT_ColorStopIterator_, %struct.FT_ColorStopIterator_* %2, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds %struct.FT_ColorStopIterator_, %struct.FT_ColorStopIterator_* %2, i64 0, i32 0
  %16 = load i32, i32* %15, align 8
  %17 = icmp ugt i32 %16, %14
  br i1 %17, label %18, label %59

18:                                               ; preds = %12
  %19 = getelementptr inbounds %struct.FT_ColorStopIterator_, %struct.FT_ColorStopIterator_* %2, i64 0, i32 2
  %20 = load i8*, i8** %19, align 8
  %21 = sub i32 %16, %14
  %22 = mul i32 %21, 6
  %23 = zext i32 %22 to i64
  %24 = getelementptr inbounds i8, i8* %20, i64 %23
  %25 = getelementptr inbounds %struct.Colr_, %struct.Colr_* %6, i64 0, i32 10
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds i8, i8* %10, i64 %26
  %28 = icmp ugt i8* %24, %27
  br i1 %28, label %59, label %29

29:                                               ; preds = %18
  %30 = load i8, i8* %20, align 1
  %31 = zext i8 %30 to i16
  %32 = shl nuw i16 %31, 8
  %33 = getelementptr inbounds i8, i8* %20, i64 1
  %34 = load i8, i8* %33, align 1
  %35 = zext i8 %34 to i16
  %36 = or i16 %32, %35
  %37 = getelementptr inbounds %struct.FT_ColorStop_, %struct.FT_ColorStop_* %1, i64 0, i32 0
  store i16 %36, i16* %37, align 2
  %38 = getelementptr inbounds i8, i8* %20, i64 2
  %39 = load i8, i8* %38, align 1
  %40 = zext i8 %39 to i16
  %41 = shl nuw i16 %40, 8
  %42 = getelementptr inbounds i8, i8* %20, i64 3
  %43 = load i8, i8* %42, align 1
  %44 = zext i8 %43 to i16
  %45 = or i16 %41, %44
  %46 = getelementptr inbounds %struct.FT_ColorStop_, %struct.FT_ColorStop_* %1, i64 0, i32 1, i32 0
  store i16 %45, i16* %46, align 2
  %47 = getelementptr inbounds i8, i8* %20, i64 6
  %48 = getelementptr inbounds i8, i8* %20, i64 4
  %49 = load i8, i8* %48, align 1
  %50 = zext i8 %49 to i16
  %51 = shl nuw i16 %50, 8
  %52 = getelementptr inbounds i8, i8* %20, i64 5
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i16
  %55 = or i16 %51, %54
  %56 = getelementptr inbounds %struct.FT_ColorStop_, %struct.FT_ColorStop_* %1, i64 0, i32 1, i32 1
  store i16 %55, i16* %56, align 2
  store i8* %47, i8** %19, align 8
  %57 = load i32, i32* %13, align 4
  %58 = add i32 %57, 1
  store i32 %58, i32* %13, align 4
  br label %59

59:                                               ; preds = %18, %12, %3, %8, %29
  %60 = phi i8 [ 1, %29 ], [ 0, %8 ], [ 0, %3 ], [ 0, %12 ], [ 0, %18 ]
  ret i8 %60
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i8 @tt_face_get_paint(%struct.TT_FaceRec_* nocapture readonly, i8*, i8, %struct.FT_COLR_Paint_*) #0 {
  %5 = alloca %struct.FT_Matrix_, align 8
  %6 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 78
  %7 = bitcast i8** %6 to %struct.Colr_**
  %8 = load %struct.Colr_*, %struct.Colr_** %7, align 8
  %9 = bitcast %struct.FT_Matrix_* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #17
  %10 = getelementptr inbounds %struct.FT_Matrix_, %struct.FT_Matrix_* %5, i64 0, i32 0
  %11 = getelementptr inbounds %struct.FT_Matrix_, %struct.FT_Matrix_* %5, i64 0, i32 1
  %12 = getelementptr inbounds %struct.FT_Matrix_, %struct.FT_Matrix_* %5, i64 0, i32 2
  %13 = getelementptr inbounds %struct.FT_Matrix_, %struct.FT_Matrix_* %5, i64 0, i32 3
  %14 = icmp eq %struct.Colr_* %8, null
  %15 = bitcast %struct.FT_Matrix_* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 32, i1 false)
  br i1 %14, label %816, label %16

16:                                               ; preds = %4
  %17 = getelementptr inbounds %struct.Colr_, %struct.Colr_* %8, i64 0, i32 6
  %18 = load i8*, i8** %17, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %816, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %struct.Colr_, %struct.Colr_* %8, i64 0, i32 9
  %22 = load i8*, i8** %21, align 8
  %23 = icmp eq i8* %22, null
  br i1 %23, label %816, label %24

24:                                               ; preds = %20
  %25 = icmp eq i8 %2, 0
  br i1 %25, label %92, label %26

26:                                               ; preds = %24
  %27 = getelementptr inbounds %struct.FT_COLR_Paint_, %struct.FT_COLR_Paint_* %3, i64 0, i32 0
  store i32 12, i32* %27, align 8
  %28 = getelementptr inbounds %struct.FT_COLR_Paint_, %struct.FT_COLR_Paint_* %3, i64 0, i32 1
  %29 = bitcast %union.anon.0* %28 to i8**
  store i8* %1, i8** %29, align 8
  %30 = getelementptr inbounds %struct.FT_COLR_Paint_, %struct.FT_COLR_Paint_* %3, i64 0, i32 1, i32 0, i32 0, i32 1
  %31 = bitcast %struct.FT_ColorStopIterator_* %30 to i8*
  store i8 0, i8* %31, align 8
  %32 = bitcast %struct.FT_COLR_Paint_* %3 to i8*
  %33 = getelementptr inbounds i8, i8* %32, i64 17
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %33, i8* align 1 getelementptr inbounds ({ i8*, i8, [7 x i8] }, { i8*, i8, [7 x i8] }* @__const.tt_face_get_paint.next_paint, i64 0, i32 2, i64 0), i64 7, i1 false)
  %34 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 0, i32 22
  %35 = load %struct.FT_SizeRec_*, %struct.FT_SizeRec_** %34, align 8
  %36 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %35, i64 0, i32 2, i32 2
  %37 = load i64, i64* %36, align 8
  %38 = add nsw i64 %37, 32
  %39 = ashr i64 %38, 6
  store i64 %39, i64* %10, align 8
  %40 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %35, i64 0, i32 2, i32 3
  %41 = bitcast i64* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %41, i8 0, i64 16, i1 false)
  %42 = load i64, i64* %40, align 8
  %43 = add nsw i64 %42, 32
  %44 = ashr i64 %43, 6
  store i64 %44, i64* %13, align 8
  %45 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 0, i32 30
  %46 = load %struct.FT_Face_InternalRec_*, %struct.FT_Face_InternalRec_** %45, align 8
  %47 = getelementptr inbounds %struct.FT_Face_InternalRec_, %struct.FT_Face_InternalRec_* %46, i64 0, i32 2
  %48 = load i32, i32* %47, align 8
  %49 = and i32 %48, 1
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %57, label %51

51:                                               ; preds = %26
  %52 = getelementptr inbounds %struct.FT_Face_InternalRec_, %struct.FT_Face_InternalRec_* %46, i64 0, i32 0
  call void @FT_Matrix_Multiply(%struct.FT_Matrix_* %52, %struct.FT_Matrix_* nonnull %5) #17
  %53 = load i64, i64* %10, align 8
  %54 = load i64, i64* %11, align 8
  %55 = load i64, i64* %12, align 8
  %56 = load i64, i64* %13, align 8
  br label %57

57:                                               ; preds = %26, %51
  %58 = phi i64 [ %44, %26 ], [ %56, %51 ]
  %59 = phi i64 [ 0, %26 ], [ %55, %51 ]
  %60 = phi i64 [ 0, %26 ], [ %54, %51 ]
  %61 = phi i64 [ %39, %26 ], [ %53, %51 ]
  %62 = getelementptr inbounds %struct.FT_COLR_Paint_, %struct.FT_COLR_Paint_* %3, i64 0, i32 1, i32 0, i32 0, i32 1, i32 2
  %63 = bitcast i8** %62 to i64*
  store i64 %61, i64* %63, align 8
  %64 = getelementptr inbounds i8*, i8** %62, i64 1
  %65 = bitcast i8** %64 to i64*
  store i64 %60, i64* %65, align 8
  %66 = getelementptr inbounds i8*, i8** %62, i64 3
  %67 = bitcast i8** %66 to i64*
  store i64 %59, i64* %67, align 8
  %68 = getelementptr inbounds i8*, i8** %62, i64 4
  %69 = bitcast i8** %68 to i64*
  store i64 %58, i64* %69, align 8
  %70 = load %struct.FT_Face_InternalRec_*, %struct.FT_Face_InternalRec_** %45, align 8
  %71 = getelementptr inbounds %struct.FT_Face_InternalRec_, %struct.FT_Face_InternalRec_* %70, i64 0, i32 2
  %72 = load i32, i32* %71, align 8
  %73 = and i32 %72, 2
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %87, label %75

75:                                               ; preds = %57
  %76 = getelementptr inbounds %struct.FT_Face_InternalRec_, %struct.FT_Face_InternalRec_* %70, i64 0, i32 1, i32 0
  %77 = load i64, i64* %76, align 8
  %78 = shl i64 %77, 10
  %79 = getelementptr inbounds i8*, i8** %62, i64 2
  %80 = bitcast i8** %79 to i64*
  store i64 %78, i64* %80, align 8
  %81 = load %struct.FT_Face_InternalRec_*, %struct.FT_Face_InternalRec_** %45, align 8
  %82 = getelementptr inbounds %struct.FT_Face_InternalRec_, %struct.FT_Face_InternalRec_* %81, i64 0, i32 1, i32 1
  %83 = load i64, i64* %82, align 8
  %84 = shl i64 %83, 10
  %85 = getelementptr inbounds i8*, i8** %62, i64 5
  %86 = bitcast i8** %85 to i64*
  store i64 %84, i64* %86, align 8
  br label %816

87:                                               ; preds = %57
  %88 = getelementptr inbounds i8*, i8** %62, i64 2
  %89 = bitcast i8** %88 to i64*
  store i64 0, i64* %89, align 8
  %90 = getelementptr inbounds i8*, i8** %62, i64 5
  %91 = bitcast i8** %90 to i64*
  store i64 0, i64* %91, align 8
  br label %816

92:                                               ; preds = %24
  %93 = icmp eq i8* %1, null
  %94 = icmp ugt i8* %18, %1
  %95 = or i1 %93, %94
  br i1 %95, label %816, label %96

96:                                               ; preds = %92
  %97 = getelementptr inbounds %struct.Colr_, %struct.Colr_* %8, i64 0, i32 10
  %98 = load i64, i64* %97, align 8
  %99 = getelementptr inbounds i8, i8* %22, i64 %98
  %100 = icmp ugt i8* %99, %1
  br i1 %100, label %101, label %816

101:                                              ; preds = %96
  %102 = getelementptr inbounds i8, i8* %1, i64 1
  %103 = load i8, i8* %1, align 1
  %104 = zext i8 %103 to i32
  %105 = getelementptr inbounds %struct.FT_COLR_Paint_, %struct.FT_COLR_Paint_* %3, i64 0, i32 0
  store i32 %104, i32* %105, align 8
  %106 = icmp ugt i8 %103, 20
  br i1 %106, label %816, label %107

107:                                              ; preds = %101
  switch i8 %103, label %179 [
    i8 1, label %108
    i8 2, label %150
    i8 11, label %170
  ]

108:                                              ; preds = %107
  %109 = load i8, i8* %102, align 1
  %110 = zext i8 %109 to i64
  %111 = getelementptr inbounds %struct.Colr_, %struct.Colr_* %8, i64 0, i32 7
  %112 = load i64, i64* %111, align 8
  %113 = icmp ult i64 %112, %110
  br i1 %113, label %816, label %114

114:                                              ; preds = %108
  %115 = getelementptr inbounds i8, i8* %1, i64 2
  %116 = load i8, i8* %115, align 1
  %117 = zext i8 %116 to i32
  %118 = shl nuw i32 %117, 24
  %119 = getelementptr inbounds i8, i8* %1, i64 3
  %120 = load i8, i8* %119, align 1
  %121 = zext i8 %120 to i32
  %122 = shl nuw nsw i32 %121, 16
  %123 = or i32 %122, %118
  %124 = getelementptr inbounds i8, i8* %1, i64 4
  %125 = load i8, i8* %124, align 1
  %126 = zext i8 %125 to i32
  %127 = shl nuw nsw i32 %126, 8
  %128 = or i32 %123, %127
  %129 = getelementptr inbounds i8, i8* %1, i64 5
  %130 = load i8, i8* %129, align 1
  %131 = zext i8 %130 to i32
  %132 = or i32 %128, %131
  %133 = zext i8 %109 to i32
  %134 = add i32 %132, %133
  %135 = zext i32 %134 to i64
  %136 = icmp ult i64 %112, %135
  br i1 %136, label %816, label %137

137:                                              ; preds = %114
  %138 = getelementptr inbounds %struct.FT_COLR_Paint_, %struct.FT_COLR_Paint_* %3, i64 0, i32 1
  %139 = bitcast %union.anon.0* %138 to %struct.FT_LayerIterator_*
  %140 = getelementptr inbounds %union.anon.0, %union.anon.0* %138, i64 0, i32 0, i32 0, i32 0
  store i32 %133, i32* %140, align 8
  %141 = getelementptr inbounds %struct.FT_LayerIterator_, %struct.FT_LayerIterator_* %139, i64 0, i32 1
  store i32 0, i32* %141, align 4
  %142 = getelementptr inbounds %struct.Colr_, %struct.Colr_* %8, i64 0, i32 8
  %143 = load i8*, i8** %142, align 8
  %144 = getelementptr inbounds i8, i8* %143, i64 4
  %145 = shl i32 %132, 2
  %146 = zext i32 %145 to i64
  %147 = getelementptr inbounds i8, i8* %144, i64 %146
  %148 = getelementptr inbounds %struct.FT_COLR_Paint_, %struct.FT_COLR_Paint_* %3, i64 0, i32 1, i32 0, i32 0, i32 1
  %149 = bitcast %struct.FT_ColorStopIterator_* %148 to i8**
  store i8* %147, i8** %149, align 8
  br label %816

150:                                              ; preds = %107
  %151 = getelementptr inbounds i8, i8* %1, i64 3
  %152 = load i8, i8* %102, align 1
  %153 = zext i8 %152 to i16
  %154 = shl nuw i16 %153, 8
  %155 = getelementptr inbounds i8, i8* %1, i64 2
  %156 = load i8, i8* %155, align 1
  %157 = zext i8 %156 to i16
  %158 = or i16 %154, %157
  %159 = getelementptr inbounds %struct.FT_COLR_Paint_, %struct.FT_COLR_Paint_* %3, i64 0, i32 1
  %160 = bitcast %union.anon.0* %159 to %struct.FT_ColorIndex_*
  %161 = bitcast %union.anon.0* %159 to i16*
  store i16 %158, i16* %161, align 8
  %162 = load i8, i8* %151, align 1
  %163 = zext i8 %162 to i16
  %164 = shl nuw i16 %163, 8
  %165 = getelementptr inbounds i8, i8* %1, i64 4
  %166 = load i8, i8* %165, align 1
  %167 = zext i8 %166 to i16
  %168 = or i16 %164, %167
  %169 = getelementptr inbounds %struct.FT_ColorIndex_, %struct.FT_ColorIndex_* %160, i64 0, i32 1
  store i16 %168, i16* %169, align 2
  br label %816

170:                                              ; preds = %107
  %171 = load i8, i8* %102, align 1
  %172 = zext i8 %171 to i32
  %173 = shl nuw nsw i32 %172, 8
  %174 = getelementptr inbounds i8, i8* %1, i64 2
  %175 = load i8, i8* %174, align 1
  %176 = zext i8 %175 to i32
  %177 = or i32 %173, %176
  %178 = getelementptr inbounds %struct.FT_COLR_Paint_, %struct.FT_COLR_Paint_* %3, i64 0, i32 1, i32 0, i32 0, i32 0
  store i32 %177, i32* %178, align 8
  br label %816

179:                                              ; preds = %107
  %180 = getelementptr inbounds i8, i8* %1, i64 4
  %181 = load i8, i8* %102, align 1
  %182 = zext i8 %181 to i32
  %183 = shl nuw nsw i32 %182, 16
  %184 = getelementptr inbounds i8, i8* %1, i64 2
  %185 = load i8, i8* %184, align 1
  %186 = zext i8 %185 to i32
  %187 = shl nuw nsw i32 %186, 8
  %188 = or i32 %187, %183
  %189 = getelementptr inbounds i8, i8* %1, i64 3
  %190 = load i8, i8* %189, align 1
  %191 = zext i8 %190 to i32
  %192 = or i32 %188, %191
  %193 = icmp eq i32 %192, 0
  br i1 %193, label %816, label %194

194:                                              ; preds = %179
  %195 = zext i32 %192 to i64
  %196 = getelementptr inbounds i8, i8* %1, i64 %195
  %197 = load i8*, i8** %17, align 8
  %198 = icmp ult i8* %196, %197
  br i1 %198, label %816, label %199

199:                                              ; preds = %194
  %200 = load i8*, i8** %21, align 8
  %201 = load i64, i64* %97, align 8
  %202 = getelementptr inbounds i8, i8* %200, i64 %201
  %203 = icmp ult i8* %196, %202
  br i1 %203, label %204, label %816

204:                                              ; preds = %199
  %205 = ptrtoint i8* %196 to i64
  switch i8 %103, label %816 [
    i8 4, label %206
    i8 6, label %283
    i8 8, label %360
    i8 10, label %437
    i8 12, label %451
    i8 14, label %581
    i8 16, label %626
    i8 18, label %691
    i8 20, label %776
  ]

206:                                              ; preds = %204
  %207 = load i8, i8* %196, align 1
  %208 = icmp ugt i8 %207, 2
  br i1 %208, label %816, label %209

209:                                              ; preds = %206
  %210 = zext i8 %207 to i32
  %211 = getelementptr inbounds %struct.FT_COLR_Paint_, %struct.FT_COLR_Paint_* %3, i64 0, i32 1, i32 0, i32 0, i32 0
  store i32 %210, i32* %211, align 8
  %212 = getelementptr inbounds i8, i8* %196, i64 3
  %213 = getelementptr inbounds i8, i8* %196, i64 1
  %214 = load i8, i8* %213, align 1
  %215 = zext i8 %214 to i32
  %216 = shl nuw nsw i32 %215, 8
  %217 = getelementptr inbounds i8, i8* %196, i64 2
  %218 = load i8, i8* %217, align 1
  %219 = zext i8 %218 to i32
  %220 = or i32 %216, %219
  %221 = getelementptr inbounds %struct.FT_COLR_Paint_, %struct.FT_COLR_Paint_* %3, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0
  store i32 %220, i32* %221, align 8
  %222 = getelementptr inbounds %struct.FT_COLR_Paint_, %struct.FT_COLR_Paint_* %3, i64 0, i32 1, i32 0, i32 0, i32 1, i32 2
  store i8* %212, i8** %222, align 8
  %223 = getelementptr inbounds %struct.FT_COLR_Paint_, %struct.FT_COLR_Paint_* %3, i64 0, i32 1, i32 0, i32 0, i32 1, i32 1
  store i32 0, i32* %223, align 4
  %224 = getelementptr inbounds i8, i8* %1, i64 6
  %225 = load i8, i8* %180, align 1
  %226 = zext i8 %225 to i16
  %227 = shl nuw i16 %226, 8
  %228 = getelementptr inbounds i8, i8* %1, i64 5
  %229 = load i8, i8* %228, align 1
  %230 = zext i8 %229 to i16
  %231 = or i16 %227, %230
  %232 = sext i16 %231 to i64
  %233 = getelementptr inbounds %struct.FT_COLR_Paint_, %struct.FT_COLR_Paint_* %3, i64 0, i32 1, i32 0, i32 1, i32 0
  store i64 %232, i64* %233, align 8
  %234 = getelementptr inbounds i8, i8* %1, i64 8
  %235 = load i8, i8* %224, align 1
  %236 = zext i8 %235 to i16
  %237 = shl nuw i16 %236, 8
  %238 = getelementptr inbounds i8, i8* %1, i64 7
  %239 = load i8, i8* %238, align 1
  %240 = zext i8 %239 to i16
  %241 = or i16 %237, %240
  %242 = sext i16 %241 to i64
  %243 = getelementptr inbounds %struct.FT_COLR_Paint_, %struct.FT_COLR_Paint_* %3, i64 0, i32 1, i32 0, i32 1, i32 1
  store i64 %242, i64* %243, align 8
  %244 = getelementptr inbounds i8, i8* %1, i64 10
  %245 = load i8, i8* %234, align 1
  %246 = zext i8 %245 to i16
  %247 = shl nuw i16 %246, 8
  %248 = getelementptr inbounds i8, i8* %1, i64 9
  %249 = load i8, i8* %248, align 1
  %250 = zext i8 %249 to i16
  %251 = or i16 %247, %250
  %252 = sext i16 %251 to i64
  %253 = getelementptr inbounds %struct.FT_COLR_Paint_, %struct.FT_COLR_Paint_* %3, i64 0, i32 1, i32 0, i32 2, i32 0
  store i64 %252, i64* %253, align 8
  %254 = getelementptr inbounds i8, i8* %1, i64 12
  %255 = load i8, i8* %244, align 1
  %256 = zext i8 %255 to i16
  %257 = shl nuw i16 %256, 8
  %258 = getelementptr inbounds i8, i8* %1, i64 11
  %259 = load i8, i8* %258, align 1
  %260 = zext i8 %259 to i16
  %261 = or i16 %257, %260
  %262 = sext i16 %261 to i64
  %263 = getelementptr inbounds %struct.FT_COLR_Paint_, %struct.FT_COLR_Paint_* %3, i64 0, i32 1, i32 0, i32 2, i32 1
  store i64 %262, i64* %263, align 8
  %264 = getelementptr inbounds i8, i8* %1, i64 14
  %265 = load i8, i8* %254, align 1
  %266 = zext i8 %265 to i16
  %267 = shl nuw i16 %266, 8
  %268 = getelementptr inbounds i8, i8* %1, i64 13
  %269 = load i8, i8* %268, align 1
  %270 = zext i8 %269 to i16
  %271 = or i16 %267, %270
  %272 = sext i16 %271 to i64
  %273 = getelementptr inbounds %struct.FT_COLR_Paint_, %struct.FT_COLR_Paint_* %3, i64 0, i32 1, i32 0, i32 3, i32 0
  store i64 %272, i64* %273, align 8
  %274 = load i8, i8* %264, align 1
  %275 = zext i8 %274 to i16
  %276 = shl nuw i16 %275, 8
  %277 = getelementptr inbounds i8, i8* %1, i64 15
  %278 = load i8, i8* %277, align 1
  %279 = zext i8 %278 to i16
  %280 = or i16 %276, %279
  %281 = sext i16 %280 to i64
  %282 = getelementptr inbounds %struct.FT_COLR_Paint_, %struct.FT_COLR_Paint_* %3, i64 0, i32 1, i32 0, i32 3, i32 1
  store i64 %281, i64* %282, align 8
  br label %816

283:                                              ; preds = %204
  %284 = load i8, i8* %196, align 1
  %285 = icmp ugt i8 %284, 2
  br i1 %285, label %816, label %286

286:                                              ; preds = %283
  %287 = zext i8 %284 to i32
  %288 = getelementptr inbounds %struct.FT_COLR_Paint_, %struct.FT_COLR_Paint_* %3, i64 0, i32 1, i32 0, i32 0, i32 0
  store i32 %287, i32* %288, align 8
  %289 = getelementptr inbounds i8, i8* %196, i64 3
  %290 = getelementptr inbounds i8, i8* %196, i64 1
  %291 = load i8, i8* %290, align 1
  %292 = zext i8 %291 to i32
  %293 = shl nuw nsw i32 %292, 8
  %294 = getelementptr inbounds i8, i8* %196, i64 2
  %295 = load i8, i8* %294, align 1
  %296 = zext i8 %295 to i32
  %297 = or i32 %293, %296
  %298 = getelementptr inbounds %struct.FT_COLR_Paint_, %struct.FT_COLR_Paint_* %3, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0
  store i32 %297, i32* %298, align 8
  %299 = getelementptr inbounds %struct.FT_COLR_Paint_, %struct.FT_COLR_Paint_* %3, i64 0, i32 1, i32 0, i32 0, i32 1, i32 2
  store i8* %289, i8** %299, align 8
  %300 = getelementptr inbounds %struct.FT_COLR_Paint_, %struct.FT_COLR_Paint_* %3, i64 0, i32 1, i32 0, i32 0, i32 1, i32 1
  store i32 0, i32* %300, align 4
  %301 = getelementptr inbounds i8, i8* %1, i64 6
  %302 = load i8, i8* %180, align 1
  %303 = zext i8 %302 to i16
  %304 = shl nuw i16 %303, 8
  %305 = getelementptr inbounds i8, i8* %1, i64 5
  %306 = load i8, i8* %305, align 1
  %307 = zext i8 %306 to i16
  %308 = or i16 %304, %307
  %309 = sext i16 %308 to i64
  %310 = getelementptr inbounds %struct.FT_COLR_Paint_, %struct.FT_COLR_Paint_* %3, i64 0, i32 1, i32 0, i32 1, i32 0
  store i64 %309, i64* %310, align 8
  %311 = getelementptr inbounds i8, i8* %1, i64 8
  %312 = load i8, i8* %301, align 1
  %313 = zext i8 %312 to i16
  %314 = shl nuw i16 %313, 8
  %315 = getelementptr inbounds i8, i8* %1, i64 7
  %316 = load i8, i8* %315, align 1
  %317 = zext i8 %316 to i16
  %318 = or i16 %314, %317
  %319 = sext i16 %318 to i64
  %320 = getelementptr inbounds %struct.FT_COLR_Paint_, %struct.FT_COLR_Paint_* %3, i64 0, i32 1, i32 0, i32 1, i32 1
  store i64 %319, i64* %320, align 8
  %321 = getelementptr inbounds i8, i8* %1, i64 10
  %322 = load i8, i8* %311, align 1
  %323 = zext i8 %322 to i16
  %324 = shl nuw i16 %323, 8
  %325 = getelementptr inbounds i8, i8* %1, i64 9
  %326 = load i8, i8* %325, align 1
  %327 = zext i8 %326 to i16
  %328 = or i16 %324, %327
  %329 = getelementptr inbounds %struct.FT_COLR_Paint_, %struct.FT_COLR_Paint_* %3, i64 0, i32 1, i32 0, i32 2
  %330 = bitcast %struct.FT_Vector_* %329 to i16*
  store i16 %328, i16* %330, align 8
  %331 = getelementptr inbounds i8, i8* %1, i64 12
  %332 = load i8, i8* %321, align 1
  %333 = zext i8 %332 to i16
  %334 = shl nuw i16 %333, 8
  %335 = getelementptr inbounds i8, i8* %1, i64 11
  %336 = load i8, i8* %335, align 1
  %337 = zext i8 %336 to i16
  %338 = or i16 %334, %337
  %339 = sext i16 %338 to i64
  %340 = getelementptr inbounds %struct.FT_COLR_Paint_, %struct.FT_COLR_Paint_* %3, i64 0, i32 1, i32 0, i32 2, i32 1
  store i64 %339, i64* %340, align 8
  %341 = getelementptr inbounds i8, i8* %1, i64 14
  %342 = load i8, i8* %331, align 1
  %343 = zext i8 %342 to i16
  %344 = shl nuw i16 %343, 8
  %345 = getelementptr inbounds i8, i8* %1, i64 13
  %346 = load i8, i8* %345, align 1
  %347 = zext i8 %346 to i16
  %348 = or i16 %344, %347
  %349 = sext i16 %348 to i64
  %350 = getelementptr inbounds i64, i64* %340, i64 1
  store i64 %349, i64* %350, align 8
  %351 = load i8, i8* %341, align 1
  %352 = zext i8 %351 to i16
  %353 = shl nuw i16 %352, 8
  %354 = getelementptr inbounds i8, i8* %1, i64 15
  %355 = load i8, i8* %354, align 1
  %356 = zext i8 %355 to i16
  %357 = or i16 %353, %356
  %358 = getelementptr inbounds %struct.FT_COLR_Paint_, %struct.FT_COLR_Paint_* %3, i64 0, i32 1, i32 0, i32 3, i32 1
  %359 = bitcast i64* %358 to i16*
  store i16 %357, i16* %359, align 8
  br label %816

360:                                              ; preds = %204
  %361 = load i8, i8* %196, align 1
  %362 = icmp ugt i8 %361, 2
  br i1 %362, label %816, label %363

363:                                              ; preds = %360
  %364 = zext i8 %361 to i32
  %365 = getelementptr inbounds %struct.FT_COLR_Paint_, %struct.FT_COLR_Paint_* %3, i64 0, i32 1, i32 0, i32 0, i32 0
  store i32 %364, i32* %365, align 8
  %366 = getelementptr inbounds i8, i8* %196, i64 3
  %367 = getelementptr inbounds i8, i8* %196, i64 1
  %368 = load i8, i8* %367, align 1
  %369 = zext i8 %368 to i32
  %370 = shl nuw nsw i32 %369, 8
  %371 = getelementptr inbounds i8, i8* %196, i64 2
  %372 = load i8, i8* %371, align 1
  %373 = zext i8 %372 to i32
  %374 = or i32 %370, %373
  %375 = getelementptr inbounds %struct.FT_COLR_Paint_, %struct.FT_COLR_Paint_* %3, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0
  store i32 %374, i32* %375, align 8
  %376 = getelementptr inbounds %struct.FT_COLR_Paint_, %struct.FT_COLR_Paint_* %3, i64 0, i32 1, i32 0, i32 0, i32 1, i32 2
  store i8* %366, i8** %376, align 8
  %377 = getelementptr inbounds %struct.FT_COLR_Paint_, %struct.FT_COLR_Paint_* %3, i64 0, i32 1, i32 0, i32 0, i32 1, i32 1
  store i32 0, i32* %377, align 4
  %378 = getelementptr inbounds i8, i8* %1, i64 6
  %379 = load i8, i8* %180, align 1
  %380 = zext i8 %379 to i16
  %381 = shl nuw i16 %380, 8
  %382 = getelementptr inbounds i8, i8* %1, i64 5
  %383 = load i8, i8* %382, align 1
  %384 = zext i8 %383 to i16
  %385 = or i16 %381, %384
  %386 = sext i16 %385 to i64
  %387 = getelementptr inbounds %struct.FT_COLR_Paint_, %struct.FT_COLR_Paint_* %3, i64 0, i32 1, i32 0, i32 1, i32 0
  store i64 %386, i64* %387, align 8
  %388 = getelementptr inbounds i8, i8* %1, i64 8
  %389 = load i8, i8* %378, align 1
  %390 = zext i8 %389 to i16
  %391 = shl nuw i16 %390, 8
  %392 = getelementptr inbounds i8, i8* %1, i64 7
  %393 = load i8, i8* %392, align 1
  %394 = zext i8 %393 to i16
  %395 = or i16 %391, %394
  %396 = sext i16 %395 to i64
  %397 = getelementptr inbounds %struct.FT_COLR_Paint_, %struct.FT_COLR_Paint_* %3, i64 0, i32 1, i32 0, i32 1, i32 1
  store i64 %396, i64* %397, align 8
  %398 = getelementptr inbounds i8, i8* %1, i64 12
  %399 = load i8, i8* %388, align 1
  %400 = zext i8 %399 to i32
  %401 = shl nuw i32 %400, 24
  %402 = getelementptr inbounds i8, i8* %1, i64 9
  %403 = load i8, i8* %402, align 1
  %404 = zext i8 %403 to i32
  %405 = shl nuw nsw i32 %404, 16
  %406 = or i32 %405, %401
  %407 = getelementptr inbounds i8, i8* %1, i64 10
  %408 = load i8, i8* %407, align 1
  %409 = zext i8 %408 to i32
  %410 = shl nuw nsw i32 %409, 8
  %411 = or i32 %406, %410
  %412 = getelementptr inbounds i8, i8* %1, i64 11
  %413 = load i8, i8* %412, align 1
  %414 = zext i8 %413 to i32
  %415 = or i32 %411, %414
  %416 = sext i32 %415 to i64
  %417 = getelementptr inbounds %struct.FT_COLR_Paint_, %struct.FT_COLR_Paint_* %3, i64 0, i32 1, i32 0, i32 2, i32 0
  store i64 %416, i64* %417, align 8
  %418 = load i8, i8* %398, align 1
  %419 = zext i8 %418 to i32
  %420 = shl nuw i32 %419, 24
  %421 = getelementptr inbounds i8, i8* %1, i64 13
  %422 = load i8, i8* %421, align 1
  %423 = zext i8 %422 to i32
  %424 = shl nuw nsw i32 %423, 16
  %425 = or i32 %424, %420
  %426 = getelementptr inbounds i8, i8* %1, i64 14
  %427 = load i8, i8* %426, align 1
  %428 = zext i8 %427 to i32
  %429 = shl nuw nsw i32 %428, 8
  %430 = or i32 %425, %429
  %431 = getelementptr inbounds i8, i8* %1, i64 15
  %432 = load i8, i8* %431, align 1
  %433 = zext i8 %432 to i32
  %434 = or i32 %430, %433
  %435 = sext i32 %434 to i64
  %436 = getelementptr inbounds %struct.FT_COLR_Paint_, %struct.FT_COLR_Paint_* %3, i64 0, i32 1, i32 0, i32 2, i32 1
  store i64 %435, i64* %436, align 8
  br label %816

437:                                              ; preds = %204
  %438 = getelementptr inbounds %struct.FT_COLR_Paint_, %struct.FT_COLR_Paint_* %3, i64 0, i32 1
  %439 = bitcast %union.anon.0* %438 to i64*
  store i64 %205, i64* %439, align 8
  %440 = getelementptr inbounds %struct.FT_COLR_Paint_, %struct.FT_COLR_Paint_* %3, i64 0, i32 1, i32 0, i32 0, i32 1
  %441 = bitcast %struct.FT_ColorStopIterator_* %440 to i8*
  store i8 0, i8* %441, align 8
  %442 = load i8, i8* %180, align 1
  %443 = zext i8 %442 to i32
  %444 = shl nuw nsw i32 %443, 8
  %445 = getelementptr inbounds i8, i8* %1, i64 5
  %446 = load i8, i8* %445, align 1
  %447 = zext i8 %446 to i32
  %448 = or i32 %444, %447
  %449 = getelementptr inbounds %struct.FT_COLR_Paint_, %struct.FT_COLR_Paint_* %3, i64 0, i32 1, i32 0, i32 0, i32 1, i32 2
  %450 = bitcast i8** %449 to i32*
  store i32 %448, i32* %450, align 8
  br label %816

451:                                              ; preds = %204
  %452 = getelementptr inbounds %struct.FT_COLR_Paint_, %struct.FT_COLR_Paint_* %3, i64 0, i32 1
  %453 = bitcast %union.anon.0* %452 to i64*
  store i64 %205, i64* %453, align 8
  %454 = getelementptr inbounds %struct.FT_COLR_Paint_, %struct.FT_COLR_Paint_* %3, i64 0, i32 1, i32 0, i32 0, i32 1
  %455 = bitcast %struct.FT_ColorStopIterator_* %454 to i8*
  store i8 0, i8* %455, align 8
  %456 = getelementptr inbounds i8, i8* %1, i64 8
  %457 = load i8, i8* %180, align 1
  %458 = zext i8 %457 to i32
  %459 = shl nuw i32 %458, 24
  %460 = getelementptr inbounds i8, i8* %1, i64 5
  %461 = load i8, i8* %460, align 1
  %462 = zext i8 %461 to i32
  %463 = shl nuw nsw i32 %462, 16
  %464 = or i32 %463, %459
  %465 = getelementptr inbounds i8, i8* %1, i64 6
  %466 = load i8, i8* %465, align 1
  %467 = zext i8 %466 to i32
  %468 = shl nuw nsw i32 %467, 8
  %469 = or i32 %464, %468
  %470 = getelementptr inbounds i8, i8* %1, i64 7
  %471 = load i8, i8* %470, align 1
  %472 = zext i8 %471 to i32
  %473 = or i32 %469, %472
  %474 = sext i32 %473 to i64
  %475 = getelementptr inbounds %struct.FT_COLR_Paint_, %struct.FT_COLR_Paint_* %3, i64 0, i32 1, i32 0, i32 0, i32 1, i32 2
  %476 = bitcast i8** %475 to i64*
  store i64 %474, i64* %476, align 8
  %477 = getelementptr inbounds i8, i8* %1, i64 12
  %478 = load i8, i8* %456, align 1
  %479 = zext i8 %478 to i32
  %480 = shl nuw i32 %479, 24
  %481 = getelementptr inbounds i8, i8* %1, i64 9
  %482 = load i8, i8* %481, align 1
  %483 = zext i8 %482 to i32
  %484 = shl nuw nsw i32 %483, 16
  %485 = or i32 %484, %480
  %486 = getelementptr inbounds i8, i8* %1, i64 10
  %487 = load i8, i8* %486, align 1
  %488 = zext i8 %487 to i32
  %489 = shl nuw nsw i32 %488, 8
  %490 = or i32 %485, %489
  %491 = getelementptr inbounds i8, i8* %1, i64 11
  %492 = load i8, i8* %491, align 1
  %493 = zext i8 %492 to i32
  %494 = or i32 %490, %493
  %495 = sext i32 %494 to i64
  %496 = getelementptr inbounds i8*, i8** %475, i64 3
  %497 = bitcast i8** %496 to i64*
  store i64 %495, i64* %497, align 8
  %498 = getelementptr inbounds i8, i8* %1, i64 16
  %499 = load i8, i8* %477, align 1
  %500 = zext i8 %499 to i32
  %501 = shl nuw i32 %500, 24
  %502 = getelementptr inbounds i8, i8* %1, i64 13
  %503 = load i8, i8* %502, align 1
  %504 = zext i8 %503 to i32
  %505 = shl nuw nsw i32 %504, 16
  %506 = or i32 %505, %501
  %507 = getelementptr inbounds i8, i8* %1, i64 14
  %508 = load i8, i8* %507, align 1
  %509 = zext i8 %508 to i32
  %510 = shl nuw nsw i32 %509, 8
  %511 = or i32 %506, %510
  %512 = getelementptr inbounds i8, i8* %1, i64 15
  %513 = load i8, i8* %512, align 1
  %514 = zext i8 %513 to i32
  %515 = or i32 %511, %514
  %516 = sext i32 %515 to i64
  %517 = getelementptr inbounds i8*, i8** %475, i64 1
  %518 = bitcast i8** %517 to i64*
  store i64 %516, i64* %518, align 8
  %519 = getelementptr inbounds i8, i8* %1, i64 20
  %520 = load i8, i8* %498, align 1
  %521 = zext i8 %520 to i32
  %522 = shl nuw i32 %521, 24
  %523 = getelementptr inbounds i8, i8* %1, i64 17
  %524 = load i8, i8* %523, align 1
  %525 = zext i8 %524 to i32
  %526 = shl nuw nsw i32 %525, 16
  %527 = or i32 %526, %522
  %528 = getelementptr inbounds i8, i8* %1, i64 18
  %529 = load i8, i8* %528, align 1
  %530 = zext i8 %529 to i32
  %531 = shl nuw nsw i32 %530, 8
  %532 = or i32 %527, %531
  %533 = getelementptr inbounds i8, i8* %1, i64 19
  %534 = load i8, i8* %533, align 1
  %535 = zext i8 %534 to i32
  %536 = or i32 %532, %535
  %537 = sext i32 %536 to i64
  %538 = getelementptr inbounds i8*, i8** %475, i64 4
  %539 = bitcast i8** %538 to i64*
  store i64 %537, i64* %539, align 8
  %540 = getelementptr inbounds i8, i8* %1, i64 24
  %541 = load i8, i8* %519, align 1
  %542 = zext i8 %541 to i32
  %543 = shl nuw i32 %542, 24
  %544 = getelementptr inbounds i8, i8* %1, i64 21
  %545 = load i8, i8* %544, align 1
  %546 = zext i8 %545 to i32
  %547 = shl nuw nsw i32 %546, 16
  %548 = or i32 %547, %543
  %549 = getelementptr inbounds i8, i8* %1, i64 22
  %550 = load i8, i8* %549, align 1
  %551 = zext i8 %550 to i32
  %552 = shl nuw nsw i32 %551, 8
  %553 = or i32 %548, %552
  %554 = getelementptr inbounds i8, i8* %1, i64 23
  %555 = load i8, i8* %554, align 1
  %556 = zext i8 %555 to i32
  %557 = or i32 %553, %556
  %558 = sext i32 %557 to i64
  %559 = getelementptr inbounds i8*, i8** %475, i64 2
  %560 = bitcast i8** %559 to i64*
  store i64 %558, i64* %560, align 8
  %561 = load i8, i8* %540, align 1
  %562 = zext i8 %561 to i32
  %563 = shl nuw i32 %562, 24
  %564 = getelementptr inbounds i8, i8* %1, i64 25
  %565 = load i8, i8* %564, align 1
  %566 = zext i8 %565 to i32
  %567 = shl nuw nsw i32 %566, 16
  %568 = or i32 %567, %563
  %569 = getelementptr inbounds i8, i8* %1, i64 26
  %570 = load i8, i8* %569, align 1
  %571 = zext i8 %570 to i32
  %572 = shl nuw nsw i32 %571, 8
  %573 = or i32 %568, %572
  %574 = getelementptr inbounds i8, i8* %1, i64 27
  %575 = load i8, i8* %574, align 1
  %576 = zext i8 %575 to i32
  %577 = or i32 %573, %576
  %578 = sext i32 %577 to i64
  %579 = getelementptr inbounds i8*, i8** %475, i64 5
  %580 = bitcast i8** %579 to i64*
  store i64 %578, i64* %580, align 8
  br label %816

581:                                              ; preds = %204
  %582 = getelementptr inbounds %struct.FT_COLR_Paint_, %struct.FT_COLR_Paint_* %3, i64 0, i32 1
  %583 = bitcast %union.anon.0* %582 to i64*
  store i64 %205, i64* %583, align 8
  %584 = getelementptr inbounds %struct.FT_COLR_Paint_, %struct.FT_COLR_Paint_* %3, i64 0, i32 1, i32 0, i32 0, i32 1
  %585 = bitcast %struct.FT_ColorStopIterator_* %584 to i8*
  store i8 0, i8* %585, align 8
  %586 = getelementptr inbounds i8, i8* %1, i64 8
  %587 = load i8, i8* %180, align 1
  %588 = zext i8 %587 to i32
  %589 = shl nuw i32 %588, 24
  %590 = getelementptr inbounds i8, i8* %1, i64 5
  %591 = load i8, i8* %590, align 1
  %592 = zext i8 %591 to i32
  %593 = shl nuw nsw i32 %592, 16
  %594 = or i32 %593, %589
  %595 = getelementptr inbounds i8, i8* %1, i64 6
  %596 = load i8, i8* %595, align 1
  %597 = zext i8 %596 to i32
  %598 = shl nuw nsw i32 %597, 8
  %599 = or i32 %594, %598
  %600 = getelementptr inbounds i8, i8* %1, i64 7
  %601 = load i8, i8* %600, align 1
  %602 = zext i8 %601 to i32
  %603 = or i32 %599, %602
  %604 = sext i32 %603 to i64
  %605 = getelementptr inbounds %struct.FT_COLR_Paint_, %struct.FT_COLR_Paint_* %3, i64 0, i32 1, i32 0, i32 0, i32 1, i32 2
  %606 = bitcast i8** %605 to i64*
  store i64 %604, i64* %606, align 8
  %607 = load i8, i8* %586, align 1
  %608 = zext i8 %607 to i32
  %609 = shl nuw i32 %608, 24
  %610 = getelementptr inbounds i8, i8* %1, i64 9
  %611 = load i8, i8* %610, align 1
  %612 = zext i8 %611 to i32
  %613 = shl nuw nsw i32 %612, 16
  %614 = or i32 %613, %609
  %615 = getelementptr inbounds i8, i8* %1, i64 10
  %616 = load i8, i8* %615, align 1
  %617 = zext i8 %616 to i32
  %618 = shl nuw nsw i32 %617, 8
  %619 = or i32 %614, %618
  %620 = getelementptr inbounds i8, i8* %1, i64 11
  %621 = load i8, i8* %620, align 1
  %622 = zext i8 %621 to i32
  %623 = or i32 %619, %622
  %624 = sext i32 %623 to i64
  %625 = getelementptr inbounds %struct.FT_COLR_Paint_, %struct.FT_COLR_Paint_* %3, i64 0, i32 1, i32 0, i32 1, i32 0
  store i64 %624, i64* %625, align 8
  br label %816

626:                                              ; preds = %204
  %627 = getelementptr inbounds %struct.FT_COLR_Paint_, %struct.FT_COLR_Paint_* %3, i64 0, i32 1
  %628 = bitcast %union.anon.0* %627 to i64*
  store i64 %205, i64* %628, align 8
  %629 = getelementptr inbounds %struct.FT_COLR_Paint_, %struct.FT_COLR_Paint_* %3, i64 0, i32 1, i32 0, i32 0, i32 1
  %630 = bitcast %struct.FT_ColorStopIterator_* %629 to i8*
  store i8 0, i8* %630, align 8
  %631 = getelementptr inbounds i8, i8* %1, i64 8
  %632 = load i8, i8* %180, align 1
  %633 = zext i8 %632 to i32
  %634 = shl nuw i32 %633, 24
  %635 = getelementptr inbounds i8, i8* %1, i64 5
  %636 = load i8, i8* %635, align 1
  %637 = zext i8 %636 to i32
  %638 = shl nuw nsw i32 %637, 16
  %639 = or i32 %638, %634
  %640 = getelementptr inbounds i8, i8* %1, i64 6
  %641 = load i8, i8* %640, align 1
  %642 = zext i8 %641 to i32
  %643 = shl nuw nsw i32 %642, 8
  %644 = or i32 %639, %643
  %645 = getelementptr inbounds i8, i8* %1, i64 7
  %646 = load i8, i8* %645, align 1
  %647 = zext i8 %646 to i32
  %648 = or i32 %644, %647
  %649 = sext i32 %648 to i64
  %650 = getelementptr inbounds %struct.FT_COLR_Paint_, %struct.FT_COLR_Paint_* %3, i64 0, i32 1, i32 0, i32 0, i32 1, i32 2
  %651 = bitcast i8** %650 to i64*
  store i64 %649, i64* %651, align 8
  %652 = getelementptr inbounds i8, i8* %1, i64 12
  %653 = load i8, i8* %631, align 1
  %654 = zext i8 %653 to i32
  %655 = shl nuw i32 %654, 24
  %656 = getelementptr inbounds i8, i8* %1, i64 9
  %657 = load i8, i8* %656, align 1
  %658 = zext i8 %657 to i32
  %659 = shl nuw nsw i32 %658, 16
  %660 = or i32 %659, %655
  %661 = getelementptr inbounds i8, i8* %1, i64 10
  %662 = load i8, i8* %661, align 1
  %663 = zext i8 %662 to i32
  %664 = shl nuw nsw i32 %663, 8
  %665 = or i32 %660, %664
  %666 = getelementptr inbounds i8, i8* %1, i64 11
  %667 = load i8, i8* %666, align 1
  %668 = zext i8 %667 to i32
  %669 = or i32 %665, %668
  %670 = sext i32 %669 to i64
  %671 = getelementptr inbounds %struct.FT_COLR_Paint_, %struct.FT_COLR_Paint_* %3, i64 0, i32 1, i32 0, i32 1, i32 0
  store i64 %670, i64* %671, align 8
  %672 = load i8, i8* %652, align 1
  %673 = zext i8 %672 to i32
  %674 = shl nuw i32 %673, 24
  %675 = getelementptr inbounds i8, i8* %1, i64 13
  %676 = load i8, i8* %675, align 1
  %677 = zext i8 %676 to i32
  %678 = shl nuw nsw i32 %677, 16
  %679 = or i32 %678, %674
  %680 = getelementptr inbounds i8, i8* %1, i64 14
  %681 = load i8, i8* %680, align 1
  %682 = zext i8 %681 to i32
  %683 = shl nuw nsw i32 %682, 8
  %684 = or i32 %679, %683
  %685 = getelementptr inbounds i8, i8* %1, i64 15
  %686 = load i8, i8* %685, align 1
  %687 = zext i8 %686 to i32
  %688 = or i32 %684, %687
  %689 = sext i32 %688 to i64
  %690 = getelementptr inbounds %struct.FT_COLR_Paint_, %struct.FT_COLR_Paint_* %3, i64 0, i32 1, i32 0, i32 1, i32 1
  store i64 %689, i64* %690, align 8
  br label %816

691:                                              ; preds = %204
  %692 = getelementptr inbounds %struct.FT_COLR_Paint_, %struct.FT_COLR_Paint_* %3, i64 0, i32 1
  %693 = bitcast %union.anon.0* %692 to i64*
  store i64 %205, i64* %693, align 8
  %694 = getelementptr inbounds %struct.FT_COLR_Paint_, %struct.FT_COLR_Paint_* %3, i64 0, i32 1, i32 0, i32 0, i32 1
  %695 = bitcast %struct.FT_ColorStopIterator_* %694 to i8*
  store i8 0, i8* %695, align 8
  %696 = getelementptr inbounds i8, i8* %1, i64 8
  %697 = load i8, i8* %180, align 1
  %698 = zext i8 %697 to i32
  %699 = shl nuw i32 %698, 24
  %700 = getelementptr inbounds i8, i8* %1, i64 5
  %701 = load i8, i8* %700, align 1
  %702 = zext i8 %701 to i32
  %703 = shl nuw nsw i32 %702, 16
  %704 = or i32 %703, %699
  %705 = getelementptr inbounds i8, i8* %1, i64 6
  %706 = load i8, i8* %705, align 1
  %707 = zext i8 %706 to i32
  %708 = shl nuw nsw i32 %707, 8
  %709 = or i32 %704, %708
  %710 = getelementptr inbounds i8, i8* %1, i64 7
  %711 = load i8, i8* %710, align 1
  %712 = zext i8 %711 to i32
  %713 = or i32 %709, %712
  %714 = sext i32 %713 to i64
  %715 = getelementptr inbounds %struct.FT_COLR_Paint_, %struct.FT_COLR_Paint_* %3, i64 0, i32 1, i32 0, i32 0, i32 1, i32 2
  %716 = bitcast i8** %715 to i64*
  store i64 %714, i64* %716, align 8
  %717 = getelementptr inbounds i8, i8* %1, i64 12
  %718 = load i8, i8* %696, align 1
  %719 = zext i8 %718 to i32
  %720 = shl nuw i32 %719, 24
  %721 = getelementptr inbounds i8, i8* %1, i64 9
  %722 = load i8, i8* %721, align 1
  %723 = zext i8 %722 to i32
  %724 = shl nuw nsw i32 %723, 16
  %725 = or i32 %724, %720
  %726 = getelementptr inbounds i8, i8* %1, i64 10
  %727 = load i8, i8* %726, align 1
  %728 = zext i8 %727 to i32
  %729 = shl nuw nsw i32 %728, 8
  %730 = or i32 %725, %729
  %731 = getelementptr inbounds i8, i8* %1, i64 11
  %732 = load i8, i8* %731, align 1
  %733 = zext i8 %732 to i32
  %734 = or i32 %730, %733
  %735 = sext i32 %734 to i64
  %736 = getelementptr inbounds %struct.FT_COLR_Paint_, %struct.FT_COLR_Paint_* %3, i64 0, i32 1, i32 0, i32 1, i32 0
  store i64 %735, i64* %736, align 8
  %737 = getelementptr inbounds i8, i8* %1, i64 16
  %738 = load i8, i8* %717, align 1
  %739 = zext i8 %738 to i32
  %740 = shl nuw i32 %739, 24
  %741 = getelementptr inbounds i8, i8* %1, i64 13
  %742 = load i8, i8* %741, align 1
  %743 = zext i8 %742 to i32
  %744 = shl nuw nsw i32 %743, 16
  %745 = or i32 %744, %740
  %746 = getelementptr inbounds i8, i8* %1, i64 14
  %747 = load i8, i8* %746, align 1
  %748 = zext i8 %747 to i32
  %749 = shl nuw nsw i32 %748, 8
  %750 = or i32 %745, %749
  %751 = getelementptr inbounds i8, i8* %1, i64 15
  %752 = load i8, i8* %751, align 1
  %753 = zext i8 %752 to i32
  %754 = or i32 %750, %753
  %755 = sext i32 %754 to i64
  %756 = getelementptr inbounds %struct.FT_COLR_Paint_, %struct.FT_COLR_Paint_* %3, i64 0, i32 1, i32 0, i32 1, i32 1
  store i64 %755, i64* %756, align 8
  %757 = load i8, i8* %737, align 1
  %758 = zext i8 %757 to i32
  %759 = shl nuw i32 %758, 24
  %760 = getelementptr inbounds i8, i8* %1, i64 17
  %761 = load i8, i8* %760, align 1
  %762 = zext i8 %761 to i32
  %763 = shl nuw nsw i32 %762, 16
  %764 = or i32 %763, %759
  %765 = getelementptr inbounds i8, i8* %1, i64 18
  %766 = load i8, i8* %765, align 1
  %767 = zext i8 %766 to i32
  %768 = shl nuw nsw i32 %767, 8
  %769 = or i32 %764, %768
  %770 = getelementptr inbounds i8, i8* %1, i64 19
  %771 = load i8, i8* %770, align 1
  %772 = zext i8 %771 to i32
  %773 = or i32 %769, %772
  %774 = sext i32 %773 to i64
  %775 = getelementptr inbounds %struct.FT_COLR_Paint_, %struct.FT_COLR_Paint_* %3, i64 0, i32 1, i32 0, i32 2, i32 0
  store i64 %774, i64* %775, align 8
  br label %816

776:                                              ; preds = %204
  %777 = getelementptr inbounds %struct.FT_COLR_Paint_, %struct.FT_COLR_Paint_* %3, i64 0, i32 1
  %778 = bitcast %union.anon.0* %777 to i64*
  store i64 %205, i64* %778, align 8
  %779 = getelementptr inbounds %struct.FT_COLR_Paint_, %struct.FT_COLR_Paint_* %3, i64 0, i32 1, i32 0, i32 0, i32 1
  %780 = bitcast %struct.FT_ColorStopIterator_* %779 to i8*
  store i8 0, i8* %780, align 8
  %781 = load i8, i8* %180, align 1
  %782 = icmp ugt i8 %781, 26
  br i1 %782, label %816, label %783

783:                                              ; preds = %776
  %784 = getelementptr inbounds i8, i8* %1, i64 5
  %785 = zext i8 %781 to i32
  %786 = getelementptr inbounds %struct.FT_COLR_Paint_, %struct.FT_COLR_Paint_* %3, i64 0, i32 1, i32 0, i32 0, i32 1, i32 2
  %787 = bitcast i8** %786 to i32*
  store i32 %785, i32* %787, align 8
  %788 = load i8, i8* %784, align 1
  %789 = zext i8 %788 to i32
  %790 = shl nuw nsw i32 %789, 16
  %791 = getelementptr inbounds i8, i8* %1, i64 6
  %792 = load i8, i8* %791, align 1
  %793 = zext i8 %792 to i32
  %794 = shl nuw nsw i32 %793, 8
  %795 = or i32 %794, %790
  %796 = getelementptr inbounds i8, i8* %1, i64 7
  %797 = load i8, i8* %796, align 1
  %798 = zext i8 %797 to i32
  %799 = or i32 %795, %798
  %800 = icmp eq i32 %799, 0
  br i1 %800, label %816, label %801

801:                                              ; preds = %783
  %802 = zext i32 %799 to i64
  %803 = getelementptr inbounds i8, i8* %1, i64 %802
  %804 = load i8*, i8** %17, align 8
  %805 = icmp ult i8* %803, %804
  br i1 %805, label %816, label %806

806:                                              ; preds = %801
  %807 = load i8*, i8** %21, align 8
  %808 = load i64, i64* %97, align 8
  %809 = getelementptr inbounds i8, i8* %807, i64 %808
  %810 = icmp ult i8* %803, %809
  br i1 %810, label %811, label %816

811:                                              ; preds = %806
  %812 = ptrtoint i8* %803 to i64
  %813 = getelementptr inbounds %struct.FT_COLR_Paint_, %struct.FT_COLR_Paint_* %3, i64 0, i32 1, i32 0, i32 1, i32 0
  store i64 %812, i64* %813, align 8
  %814 = getelementptr inbounds %struct.FT_COLR_Paint_, %struct.FT_COLR_Paint_* %3, i64 0, i32 1, i32 0, i32 1, i32 1
  %815 = bitcast i64* %814 to i8*
  store i8 0, i8* %815, align 8
  br label %816

816:                                              ; preds = %92, %811, %806, %801, %783, %776, %691, %626, %581, %451, %437, %363, %360, %286, %283, %209, %206, %204, %199, %194, %179, %170, %150, %137, %114, %108, %101, %96, %75, %87, %4, %16, %20
  %817 = phi i8 [ 0, %20 ], [ 0, %16 ], [ 0, %4 ], [ 1, %87 ], [ 1, %75 ], [ 1, %150 ], [ 1, %170 ], [ 1, %209 ], [ 1, %286 ], [ 1, %363 ], [ 1, %437 ], [ 1, %451 ], [ 1, %581 ], [ 1, %626 ], [ 1, %691 ], [ 0, %92 ], [ 0, %96 ], [ 0, %101 ], [ 1, %137 ], [ 0, %108 ], [ 0, %114 ], [ 1, %811 ], [ 0, %776 ], [ 0, %204 ], [ 0, %179 ], [ 0, %199 ], [ 0, %194 ], [ 0, %206 ], [ 0, %283 ], [ 0, %360 ], [ 0, %783 ], [ 0, %806 ], [ 0, %801 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #17
  ret i8 %817
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @tt_face_colr_blend_layer(%struct.TT_FaceRec_* nocapture readonly, i32, %struct.FT_GlyphSlotRec_*, %struct.FT_GlyphSlotRec_* nocapture readonly) #0 {
  %5 = alloca i32, align 4
  %6 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #17
  store i32 -1431655766, i32* %5, align 4
  %7 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %2, i64 0, i32 10
  %8 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %2, i64 0, i32 10, i32 3
  %9 = load i8*, i8** %8, align 8
  %10 = icmp eq i8* %9, null
  br i1 %10, label %11, label %34

11:                                               ; preds = %4
  %12 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %3, i64 0, i32 11
  %13 = load i32, i32* %12, align 8
  %14 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %2, i64 0, i32 11
  store i32 %13, i32* %14, align 8
  %15 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %3, i64 0, i32 12
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %2, i64 0, i32 12
  store i32 %16, i32* %17, align 4
  %18 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %3, i64 0, i32 10, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %2, i64 0, i32 10, i32 1
  store i32 %19, i32* %20, align 4
  %21 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %3, i64 0, i32 10, i32 0
  %22 = load i32, i32* %21, align 8
  %23 = getelementptr inbounds %struct.FT_Bitmap_, %struct.FT_Bitmap_* %7, i64 0, i32 0
  store i32 %22, i32* %23, align 8
  %24 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %2, i64 0, i32 10, i32 5
  store i8 7, i8* %24, align 2
  %25 = shl nsw i32 %19, 2
  %26 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %2, i64 0, i32 10, i32 2
  store i32 %25, i32* %26, align 8
  %27 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %2, i64 0, i32 10, i32 4
  store i16 256, i16* %27, align 8
  %28 = mul i32 %22, %25
  %29 = zext i32 %28 to i64
  %30 = tail call i32 @ft_glyphslot_alloc_bitmap(%struct.FT_GlyphSlotRec_* %2, i64 %29) #17
  store i32 %30, i32* %5, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %278

32:                                               ; preds = %11
  %33 = load i8*, i8** %8, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %33, i8 0, i64 %29, i1 false)
  br label %120

34:                                               ; preds = %4
  %35 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %2, i64 0, i32 11
  %36 = load i32, i32* %35, align 8
  %37 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %3, i64 0, i32 11
  %38 = load i32, i32* %37, align 8
  %39 = icmp slt i32 %36, %38
  %40 = select i1 %39, i32 %36, i32 %38
  %41 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %2, i64 0, i32 10, i32 1
  %42 = load i32, i32* %41, align 4
  %43 = add nsw i32 %42, %36
  %44 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %3, i64 0, i32 10, i32 1
  %45 = load i32, i32* %44, align 4
  %46 = add nsw i32 %45, %38
  %47 = icmp sgt i32 %43, %46
  %48 = select i1 %47, i32 %43, i32 %46
  %49 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %2, i64 0, i32 12
  %50 = load i32, i32* %49, align 4
  %51 = getelementptr inbounds %struct.FT_Bitmap_, %struct.FT_Bitmap_* %7, i64 0, i32 0
  %52 = load i32, i32* %51, align 8
  %53 = sub nsw i32 %50, %52
  %54 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %3, i64 0, i32 12
  %55 = load i32, i32* %54, align 4
  %56 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %3, i64 0, i32 10, i32 0
  %57 = load i32, i32* %56, align 8
  %58 = sub nsw i32 %55, %57
  %59 = icmp slt i32 %53, %58
  %60 = select i1 %59, i32 %53, i32 %58
  %61 = icmp sgt i32 %50, %55
  %62 = select i1 %61, i32 %50, i32 %55
  %63 = icmp sle i32 %36, %38
  %64 = icmp sge i32 %43, %46
  %65 = and i1 %63, %64
  br i1 %65, label %66, label %70

66:                                               ; preds = %34
  %67 = icmp sle i32 %53, %58
  %68 = icmp sge i32 %50, %55
  %69 = and i1 %68, %67
  br i1 %69, label %120, label %70

70:                                               ; preds = %66, %34
  %71 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 0, i32 25
  %72 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %71, align 8
  %73 = sub nsw i32 %48, %40
  %74 = sub nsw i32 %62, %60
  %75 = shl i32 %73, 2
  %76 = mul i32 %74, %75
  %77 = zext i32 %76 to i64
  %78 = call i8* @ft_mem_alloc(%struct.FT_MemoryRec_* %72, i64 %77, i32* nonnull %5) #17
  %79 = load i32, i32* %5, align 4
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %278

81:                                               ; preds = %70
  %82 = load i32, i32* %51, align 8
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %112, label %84

84:                                               ; preds = %81
  %85 = load i32, i32* %49, align 4
  %86 = sub nsw i32 %62, %85
  %87 = mul nsw i32 %86, %75
  %88 = sext i32 %87 to i64
  %89 = getelementptr inbounds i8, i8* %78, i64 %88
  %90 = load i32, i32* %35, align 8
  %91 = sub nsw i32 %90, %40
  %92 = shl nsw i32 %91, 2
  %93 = sext i32 %92 to i64
  %94 = getelementptr inbounds i8, i8* %89, i64 %93
  %95 = load i8*, i8** %8, align 8
  %96 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %2, i64 0, i32 10, i32 2
  %97 = zext i32 %75 to i64
  br label %98

98:                                               ; preds = %84, %98
  %99 = phi i32 [ 0, %84 ], [ %109, %98 ]
  %100 = phi i8* [ %94, %84 ], [ %108, %98 ]
  %101 = phi i8* [ %95, %84 ], [ %107, %98 ]
  %102 = load i32, i32* %41, align 4
  %103 = shl i32 %102, 2
  %104 = zext i32 %103 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %100, i8* align 1 %101, i64 %104, i1 false)
  %105 = load i32, i32* %96, align 8
  %106 = sext i32 %105 to i64
  %107 = getelementptr inbounds i8, i8* %101, i64 %106
  %108 = getelementptr inbounds i8, i8* %100, i64 %97
  %109 = add nuw i32 %99, 1
  %110 = load i32, i32* %51, align 8
  %111 = icmp ult i32 %109, %110
  br i1 %111, label %98, label %112

112:                                              ; preds = %98, %81
  call void @ft_glyphslot_set_bitmap(%struct.FT_GlyphSlotRec_* %2, i8* %78) #17
  store i32 %62, i32* %49, align 4
  store i32 %40, i32* %35, align 8
  store i32 %73, i32* %41, align 4
  store i32 %74, i32* %51, align 8
  %113 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %2, i64 0, i32 10, i32 2
  store i32 %75, i32* %113, align 8
  %114 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %2, i64 0, i32 21
  %115 = load %struct.FT_Slot_InternalRec_*, %struct.FT_Slot_InternalRec_** %114, align 8
  %116 = getelementptr inbounds %struct.FT_Slot_InternalRec_, %struct.FT_Slot_InternalRec_* %115, i64 0, i32 1
  %117 = load i32, i32* %116, align 8
  %118 = or i32 %117, 1
  store i32 %118, i32* %116, align 8
  %119 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %2, i64 0, i32 9
  store i32 1651078259, i32* %119, align 8
  br label %120

120:                                              ; preds = %66, %112, %32
  %121 = icmp eq i32 %1, 65535
  br i1 %121, label %122, label %148

122:                                              ; preds = %120
  %123 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 35
  %124 = load i8, i8* %123, align 8
  %125 = icmp eq i8 %124, 0
  br i1 %125, label %135, label %126

126:                                              ; preds = %122
  %127 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 36, i32 0
  %128 = load i8, i8* %127, align 1
  %129 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 36, i32 1
  %130 = load i8, i8* %129, align 1
  %131 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 36, i32 2
  %132 = load i8, i8* %131, align 1
  %133 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 36, i32 3
  %134 = load i8, i8* %133, align 1
  br label %160

135:                                              ; preds = %122
  %136 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 32, i32 2
  %137 = load i16*, i16** %136, align 8
  %138 = icmp eq i16* %137, null
  br i1 %138, label %147, label %139

139:                                              ; preds = %135
  %140 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 33
  %141 = load i16, i16* %140, align 8
  %142 = zext i16 %141 to i64
  %143 = getelementptr inbounds i16, i16* %137, i64 %142
  %144 = load i16, i16* %143, align 2
  %145 = and i16 %144, 2
  %146 = icmp eq i16 %145, 0
  br i1 %146, label %147, label %160

147:                                              ; preds = %139, %135
  br label %160

148:                                              ; preds = %120
  %149 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 34
  %150 = load %struct.FT_Color_*, %struct.FT_Color_** %149, align 8
  %151 = zext i32 %1 to i64
  %152 = getelementptr inbounds %struct.FT_Color_, %struct.FT_Color_* %150, i64 %151, i32 0
  %153 = load i8, i8* %152, align 1
  %154 = getelementptr inbounds %struct.FT_Color_, %struct.FT_Color_* %150, i64 %151, i32 1
  %155 = load i8, i8* %154, align 1
  %156 = getelementptr inbounds %struct.FT_Color_, %struct.FT_Color_* %150, i64 %151, i32 2
  %157 = load i8, i8* %156, align 1
  %158 = getelementptr inbounds %struct.FT_Color_, %struct.FT_Color_* %150, i64 %151, i32 3
  %159 = load i8, i8* %158, align 1
  br label %160

160:                                              ; preds = %139, %126, %147, %148
  %161 = phi i8 [ %134, %126 ], [ -1, %147 ], [ %159, %148 ], [ -1, %139 ]
  %162 = phi i8 [ %132, %126 ], [ 0, %147 ], [ %157, %148 ], [ -1, %139 ]
  %163 = phi i8 [ %130, %126 ], [ 0, %147 ], [ %155, %148 ], [ -1, %139 ]
  %164 = phi i8 [ %128, %126 ], [ 0, %147 ], [ %153, %148 ], [ -1, %139 ]
  %165 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %2, i64 0, i32 10, i32 2
  %166 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %3, i64 0, i32 10, i32 0
  %167 = load i32, i32* %166, align 8
  %168 = icmp eq i32 %167, 0
  br i1 %168, label %278, label %169

169:                                              ; preds = %160
  %170 = load i8*, i8** %8, align 8
  %171 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %2, i64 0, i32 12
  %172 = load i32, i32* %171, align 4
  %173 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %3, i64 0, i32 12
  %174 = load i32, i32* %173, align 4
  %175 = sub nsw i32 %172, %174
  %176 = load i32, i32* %165, align 8
  %177 = mul nsw i32 %175, %176
  %178 = sext i32 %177 to i64
  %179 = getelementptr inbounds i8, i8* %170, i64 %178
  %180 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %3, i64 0, i32 11
  %181 = load i32, i32* %180, align 8
  %182 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %2, i64 0, i32 11
  %183 = load i32, i32* %182, align 8
  %184 = sub nsw i32 %181, %183
  %185 = shl nsw i32 %184, 2
  %186 = sext i32 %185 to i64
  %187 = getelementptr inbounds i8, i8* %179, i64 %186
  %188 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %3, i64 0, i32 10, i32 3
  %189 = load i8*, i8** %188, align 8
  %190 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %3, i64 0, i32 10, i32 1
  %191 = zext i8 %161 to i16
  %192 = zext i8 %164 to i16
  %193 = zext i8 %163 to i16
  %194 = zext i8 %162 to i16
  %195 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %3, i64 0, i32 10, i32 2
  %196 = load i32, i32* %190, align 4
  br label %197

197:                                              ; preds = %169, %267
  %198 = phi i32 [ %167, %169 ], [ %268, %267 ]
  %199 = phi i32 [ %176, %169 ], [ %269, %267 ]
  %200 = phi i32 [ %196, %169 ], [ %270, %267 ]
  %201 = phi i32 [ 0, %169 ], [ %276, %267 ]
  %202 = phi i8* [ %189, %169 ], [ %273, %267 ]
  %203 = phi i8* [ %187, %169 ], [ %275, %267 ]
  %204 = icmp eq i32 %200, 0
  br i1 %204, label %267, label %205

205:                                              ; preds = %197, %205
  %206 = phi i64 [ %260, %205 ], [ 0, %197 ]
  %207 = getelementptr inbounds i8, i8* %202, i64 %206
  %208 = load i8, i8* %207, align 1
  %209 = zext i8 %208 to i16
  %210 = mul nuw i16 %209, %191
  %211 = udiv i16 %210, 255
  %212 = zext i16 %211 to i32
  %213 = mul i16 %211, %192
  %214 = udiv i16 %213, 255
  %215 = zext i16 %214 to i32
  %216 = mul i16 %211, %193
  %217 = udiv i16 %216, 255
  %218 = zext i16 %217 to i32
  %219 = mul i16 %211, %194
  %220 = udiv i16 %219, 255
  %221 = zext i16 %220 to i32
  %222 = sub nuw nsw i32 255, %212
  %223 = trunc i64 %206 to i32
  %224 = shl i32 %223, 2
  %225 = zext i32 %224 to i64
  %226 = getelementptr inbounds i8, i8* %203, i64 %225
  %227 = load i8, i8* %226, align 1
  %228 = zext i8 %227 to i32
  %229 = or i32 %224, 1
  %230 = zext i32 %229 to i64
  %231 = getelementptr inbounds i8, i8* %203, i64 %230
  %232 = load i8, i8* %231, align 1
  %233 = zext i8 %232 to i32
  %234 = or i32 %224, 2
  %235 = zext i32 %234 to i64
  %236 = getelementptr inbounds i8, i8* %203, i64 %235
  %237 = load i8, i8* %236, align 1
  %238 = zext i8 %237 to i32
  %239 = or i32 %224, 3
  %240 = zext i32 %239 to i64
  %241 = getelementptr inbounds i8, i8* %203, i64 %240
  %242 = load i8, i8* %241, align 1
  %243 = zext i8 %242 to i32
  %244 = mul nsw i32 %222, %228
  %245 = sdiv i32 %244, 255
  %246 = add nuw nsw i32 %245, %215
  %247 = trunc i32 %246 to i8
  store i8 %247, i8* %226, align 1
  %248 = mul nsw i32 %222, %233
  %249 = sdiv i32 %248, 255
  %250 = add nuw nsw i32 %249, %218
  %251 = trunc i32 %250 to i8
  store i8 %251, i8* %231, align 1
  %252 = mul nsw i32 %222, %238
  %253 = sdiv i32 %252, 255
  %254 = add nuw nsw i32 %253, %221
  %255 = trunc i32 %254 to i8
  store i8 %255, i8* %236, align 1
  %256 = mul nsw i32 %222, %243
  %257 = sdiv i32 %256, 255
  %258 = add nuw nsw i32 %257, %212
  %259 = trunc i32 %258 to i8
  store i8 %259, i8* %241, align 1
  %260 = add nuw nsw i64 %206, 1
  %261 = load i32, i32* %190, align 4
  %262 = zext i32 %261 to i64
  %263 = icmp ult i64 %260, %262
  br i1 %263, label %205, label %264

264:                                              ; preds = %205
  %265 = load i32, i32* %165, align 8
  %266 = load i32, i32* %166, align 8
  br label %267

267:                                              ; preds = %264, %197
  %268 = phi i32 [ %266, %264 ], [ %198, %197 ]
  %269 = phi i32 [ %265, %264 ], [ %199, %197 ]
  %270 = phi i32 [ %261, %264 ], [ 0, %197 ]
  %271 = load i32, i32* %195, align 8
  %272 = sext i32 %271 to i64
  %273 = getelementptr inbounds i8, i8* %202, i64 %272
  %274 = sext i32 %269 to i64
  %275 = getelementptr inbounds i8, i8* %203, i64 %274
  %276 = add nuw i32 %201, 1
  %277 = icmp ult i32 %276, %268
  br i1 %277, label %197, label %278

278:                                              ; preds = %267, %160, %70, %11
  %279 = phi i32 [ %30, %11 ], [ %79, %70 ], [ 0, %160 ], [ 0, %267 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #17
  ret i32 %279
}

; Function Attrs: nounwind ssp uwtable
define internal void @tt_face_get_metrics(%struct.TT_FaceRec_*, i8 zeroext, i32, i16* nocapture, i16* nocapture) #0 {
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #17
  store i32 -1431655766, i32* %6, align 4
  %10 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 0, i32 26
  %11 = load %struct.FT_StreamRec_*, %struct.FT_StreamRec_** %10, align 8
  %12 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 25
  %13 = bitcast i8** %12 to %struct.FT_Service_MetricsVariationsRec_**
  %14 = load %struct.FT_Service_MetricsVariationsRec_*, %struct.FT_Service_MetricsVariationsRec_** %13, align 8
  %15 = icmp ne i8 %1, 0
  %16 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 9
  %17 = bitcast %struct.TT_VertHeader_* %16 to %struct.TT_HoriHeader_*
  %18 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 74
  %19 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 55
  %20 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 6
  %21 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 73
  %22 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 54
  %23 = select i1 %15, %struct.TT_HoriHeader_* %17, %struct.TT_HoriHeader_* %20
  %24 = select i1 %15, i64* %18, i64* %21
  %25 = select i1 %15, i64* %19, i64* %22
  %26 = load i64, i64* %25, align 8
  %27 = load i64, i64* %24, align 8
  %28 = add i64 %27, %26
  %29 = getelementptr inbounds %struct.TT_HoriHeader_, %struct.TT_HoriHeader_* %23, i64 0, i32 13
  %30 = load i16, i16* %29, align 2
  %31 = zext i16 %30 to i32
  %32 = icmp eq i16 %30, 0
  br i1 %32, label %81, label %33

33:                                               ; preds = %5
  %34 = icmp ugt i32 %31, %2
  br i1 %34, label %35, label %52

35:                                               ; preds = %33
  %36 = shl i32 %2, 2
  %37 = zext i32 %36 to i64
  %38 = add i64 %27, %37
  %39 = add i64 %38, 4
  %40 = icmp ugt i64 %39, %28
  br i1 %40, label %81, label %41

41:                                               ; preds = %35
  %42 = tail call i32 @FT_Stream_Seek(%struct.FT_StreamRec_* %11, i64 %38) #17
  store i32 %42, i32* %6, align 4
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %81

44:                                               ; preds = %41
  %45 = call zeroext i16 @FT_Stream_ReadUShort(%struct.FT_StreamRec_* %11, i32* nonnull %6) #17
  store i16 %45, i16* %4, align 2
  %46 = load i32, i32* %6, align 4
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %81

48:                                               ; preds = %44
  %49 = call zeroext i16 @FT_Stream_ReadUShort(%struct.FT_StreamRec_* %11, i32* nonnull %6) #17
  store i16 %49, i16* %3, align 2
  %50 = load i32, i32* %6, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %82, label %81

52:                                               ; preds = %33
  %53 = shl nuw nsw i32 %31, 2
  %54 = add nsw i32 %53, -4
  %55 = sext i32 %54 to i64
  %56 = add i64 %27, %55
  %57 = add i64 %56, 2
  %58 = icmp ugt i64 %57, %28
  br i1 %58, label %81, label %59

59:                                               ; preds = %52
  %60 = tail call i32 @FT_Stream_Seek(%struct.FT_StreamRec_* %11, i64 %56) #17
  store i32 %60, i32* %6, align 4
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %81

62:                                               ; preds = %59
  %63 = call zeroext i16 @FT_Stream_ReadUShort(%struct.FT_StreamRec_* %11, i32* nonnull %6) #17
  store i16 %63, i16* %4, align 2
  %64 = load i32, i32* %6, align 4
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %81

66:                                               ; preds = %62
  %67 = sub i32 %2, %31
  %68 = shl i32 %67, 1
  %69 = add i32 %68, 4
  %70 = zext i32 %69 to i64
  %71 = add i64 %56, %70
  %72 = add i64 %71, 2
  %73 = icmp ugt i64 %72, %28
  br i1 %73, label %74, label %75

74:                                               ; preds = %66
  store i16 0, i16* %3, align 2
  br label %82

75:                                               ; preds = %66
  %76 = call i32 @FT_Stream_Seek(%struct.FT_StreamRec_* %11, i64 %71) #17
  store i32 %76, i32* %6, align 4
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %79, label %78

78:                                               ; preds = %75
  store i16 0, i16* %3, align 2
  br label %82

79:                                               ; preds = %75
  %80 = call zeroext i16 @FT_Stream_ReadUShort(%struct.FT_StreamRec_* %11, i32* nonnull %6) #17
  store i16 %80, i16* %3, align 2
  br label %82

81:                                               ; preds = %48, %44, %41, %62, %59, %5, %52, %35
  store i16 0, i16* %3, align 2
  store i16 0, i16* %4, align 2
  br label %82

82:                                               ; preds = %48, %78, %79, %74, %81
  %83 = icmp eq %struct.FT_Service_MetricsVariationsRec_* %14, null
  br i1 %83, label %121, label %84

84:                                               ; preds = %82
  %85 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 0
  %86 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %86) #17
  %87 = load i16, i16* %4, align 2
  %88 = zext i16 %87 to i32
  store i32 %88, i32* %7, align 4
  %89 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %89) #17
  %90 = load i16, i16* %3, align 2
  %91 = sext i16 %90 to i32
  store i32 %91, i32* %8, align 4
  br i1 %15, label %92, label %104

92:                                               ; preds = %84
  %93 = getelementptr inbounds %struct.FT_Service_MetricsVariationsRec_, %struct.FT_Service_MetricsVariationsRec_* %14, i64 0, i32 3
  %94 = load i32 (%struct.FT_FaceRec_*, i32, i32*)*, i32 (%struct.FT_FaceRec_*, i32, i32*)** %93, align 8
  %95 = icmp eq i32 (%struct.FT_FaceRec_*, i32, i32*)* %94, null
  br i1 %95, label %98, label %96

96:                                               ; preds = %92
  %97 = call i32 %94(%struct.FT_FaceRec_* %85, i32 %2, i32* nonnull %7) #17
  br label %98

98:                                               ; preds = %92, %96
  %99 = getelementptr inbounds %struct.FT_Service_MetricsVariationsRec_, %struct.FT_Service_MetricsVariationsRec_* %14, i64 0, i32 4
  %100 = load i32 (%struct.FT_FaceRec_*, i32, i32*)*, i32 (%struct.FT_FaceRec_*, i32, i32*)** %99, align 8
  %101 = icmp eq i32 (%struct.FT_FaceRec_*, i32, i32*)* %100, null
  br i1 %101, label %116, label %102

102:                                              ; preds = %98
  %103 = call i32 %100(%struct.FT_FaceRec_* %85, i32 %2, i32* nonnull %8) #17
  br label %116

104:                                              ; preds = %84
  %105 = getelementptr inbounds %struct.FT_Service_MetricsVariationsRec_, %struct.FT_Service_MetricsVariationsRec_* %14, i64 0, i32 0
  %106 = load i32 (%struct.FT_FaceRec_*, i32, i32*)*, i32 (%struct.FT_FaceRec_*, i32, i32*)** %105, align 8
  %107 = icmp eq i32 (%struct.FT_FaceRec_*, i32, i32*)* %106, null
  br i1 %107, label %110, label %108

108:                                              ; preds = %104
  %109 = call i32 %106(%struct.FT_FaceRec_* %85, i32 %2, i32* nonnull %7) #17
  br label %110

110:                                              ; preds = %104, %108
  %111 = getelementptr inbounds %struct.FT_Service_MetricsVariationsRec_, %struct.FT_Service_MetricsVariationsRec_* %14, i64 0, i32 1
  %112 = load i32 (%struct.FT_FaceRec_*, i32, i32*)*, i32 (%struct.FT_FaceRec_*, i32, i32*)** %111, align 8
  %113 = icmp eq i32 (%struct.FT_FaceRec_*, i32, i32*)* %112, null
  br i1 %113, label %116, label %114

114:                                              ; preds = %110
  %115 = call i32 %112(%struct.FT_FaceRec_* %85, i32 %2, i32* nonnull %8) #17
  br label %116

116:                                              ; preds = %98, %110, %114, %102
  %117 = load i32, i32* %7, align 4
  %118 = trunc i32 %117 to i16
  store i16 %118, i16* %4, align 2
  %119 = load i32, i32* %8, align 4
  %120 = trunc i32 %119 to i16
  store i16 %120, i16* %3, align 2
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %89) #17
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %86) #17
  br label %121

121:                                              ; preds = %82, %116
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @tt_face_get_name(%struct.TT_FaceRec_* nocapture readonly, i16 zeroext, i8** nocapture) #0 {
  %4 = alloca i32, align 4
  %5 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 0, i32 25
  %6 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %5, align 8
  %7 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #17
  store i32 0, i32* %4, align 4
  %8 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 11, i32 3
  %9 = load %struct.TT_NameRec_*, %struct.TT_NameRec_** %8, align 8
  %10 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 10
  %11 = load i16, i16* %10, align 8
  %12 = icmp eq i16 %11, 0
  br i1 %12, label %123, label %13

13:                                               ; preds = %3
  %14 = zext i16 %11 to i32
  br label %15

15:                                               ; preds = %13, %59
  %16 = phi i32 [ 0, %13 ], [ %65, %59 ]
  %17 = phi i8 [ 0, %13 ], [ %64, %59 ]
  %18 = phi i32 [ -1, %13 ], [ %63, %59 ]
  %19 = phi i32 [ -1, %13 ], [ %62, %59 ]
  %20 = phi i32 [ -1, %13 ], [ %61, %59 ]
  %21 = phi i32 [ -1, %13 ], [ %60, %59 ]
  %22 = phi %struct.TT_NameRec_* [ %9, %13 ], [ %66, %59 ]
  %23 = getelementptr inbounds %struct.TT_NameRec_, %struct.TT_NameRec_* %22, i64 0, i32 3
  %24 = load i16, i16* %23, align 2
  %25 = icmp eq i16 %24, %1
  br i1 %25, label %26, label %59

26:                                               ; preds = %15
  %27 = getelementptr inbounds %struct.TT_NameRec_, %struct.TT_NameRec_* %22, i64 0, i32 4
  %28 = load i16, i16* %27, align 8
  %29 = icmp eq i16 %28, 0
  br i1 %29, label %59, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %struct.TT_NameRec_, %struct.TT_NameRec_* %22, i64 0, i32 0
  %32 = load i16, i16* %31, align 8
  switch i16 %32, label %59 [
    i16 0, label %33
    i16 2, label %33
    i16 1, label %34
    i16 3, label %43
  ]

33:                                               ; preds = %30, %30
  br label %59

34:                                               ; preds = %30
  %35 = getelementptr inbounds %struct.TT_NameRec_, %struct.TT_NameRec_* %22, i64 0, i32 2
  %36 = load i16, i16* %35, align 4
  %37 = icmp eq i16 %36, 0
  br i1 %37, label %59, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds %struct.TT_NameRec_, %struct.TT_NameRec_* %22, i64 0, i32 1
  %40 = load i16, i16* %39, align 2
  %41 = icmp eq i16 %40, 0
  %42 = select i1 %41, i32 %16, i32 %21
  br label %59

43:                                               ; preds = %30
  %44 = icmp eq i32 %19, -1
  br i1 %44, label %50, label %45

45:                                               ; preds = %43
  %46 = getelementptr inbounds %struct.TT_NameRec_, %struct.TT_NameRec_* %22, i64 0, i32 2
  %47 = load i16, i16* %46, align 4
  %48 = and i16 %47, 1023
  %49 = icmp eq i16 %48, 9
  br i1 %49, label %50, label %59

50:                                               ; preds = %45, %43
  %51 = getelementptr inbounds %struct.TT_NameRec_, %struct.TT_NameRec_* %22, i64 0, i32 1
  %52 = load i16, i16* %51, align 2
  switch i16 %52, label %59 [
    i16 0, label %53
    i16 1, label %53
    i16 10, label %53
  ]

53:                                               ; preds = %50, %50, %50
  %54 = getelementptr inbounds %struct.TT_NameRec_, %struct.TT_NameRec_* %22, i64 0, i32 2
  %55 = load i16, i16* %54, align 4
  %56 = and i16 %55, 1023
  %57 = icmp eq i16 %56, 9
  %58 = zext i1 %57 to i8
  br label %59

59:                                               ; preds = %38, %34, %26, %15, %30, %45, %50, %53, %33
  %60 = phi i32 [ %21, %30 ], [ %21, %50 ], [ %21, %53 ], [ %21, %45 ], [ %21, %33 ], [ %21, %26 ], [ %21, %15 ], [ %21, %34 ], [ %42, %38 ]
  %61 = phi i32 [ %20, %30 ], [ %20, %50 ], [ %20, %53 ], [ %20, %45 ], [ %20, %33 ], [ %20, %26 ], [ %20, %15 ], [ %16, %34 ], [ %20, %38 ]
  %62 = phi i32 [ %19, %30 ], [ %19, %50 ], [ %16, %53 ], [ %19, %45 ], [ %19, %33 ], [ %19, %26 ], [ %19, %15 ], [ %19, %34 ], [ %19, %38 ]
  %63 = phi i32 [ %18, %30 ], [ %18, %50 ], [ %18, %53 ], [ %18, %45 ], [ %16, %33 ], [ %18, %26 ], [ %18, %15 ], [ %18, %34 ], [ %18, %38 ]
  %64 = phi i8 [ %17, %30 ], [ %17, %50 ], [ %58, %53 ], [ %17, %45 ], [ %17, %33 ], [ %17, %26 ], [ %17, %15 ], [ %17, %34 ], [ %17, %38 ]
  %65 = add nuw nsw i32 %16, 1
  %66 = getelementptr inbounds %struct.TT_NameRec_, %struct.TT_NameRec_* %22, i64 1
  %67 = icmp ult i32 %65, %14
  br i1 %67, label %15, label %68

68:                                               ; preds = %59
  %69 = icmp sgt i32 %61, -1
  %70 = select i1 %69, i32 %61, i32 %60
  %71 = icmp sgt i32 %62, -1
  br i1 %71, label %72, label %81

72:                                               ; preds = %68
  %73 = icmp slt i32 %70, 0
  %74 = icmp ne i8 %64, 0
  %75 = or i1 %73, %74
  br i1 %75, label %76, label %83

76:                                               ; preds = %72
  %77 = sext i32 %62 to i64
  %78 = getelementptr inbounds %struct.TT_NameRec_, %struct.TT_NameRec_* %9, i64 %77
  %79 = getelementptr inbounds %struct.TT_NameRec_, %struct.TT_NameRec_* %9, i64 %77, i32 1
  %80 = load i16, i16* %79, align 2
  switch i16 %80, label %123 [
    i16 1, label %91
    i16 0, label %91
    i16 10, label %91
  ]

81:                                               ; preds = %68
  %82 = icmp sgt i32 %70, -1
  br i1 %82, label %83, label %86

83:                                               ; preds = %72, %81
  %84 = sext i32 %70 to i64
  %85 = getelementptr inbounds %struct.TT_NameRec_, %struct.TT_NameRec_* %9, i64 %84
  br label %91

86:                                               ; preds = %81
  %87 = icmp sgt i32 %63, -1
  br i1 %87, label %88, label %123

88:                                               ; preds = %86
  %89 = sext i32 %63 to i64
  %90 = getelementptr inbounds %struct.TT_NameRec_, %struct.TT_NameRec_* %9, i64 %89
  br label %91

91:                                               ; preds = %76, %76, %76, %83, %88
  %92 = phi %struct.TT_NameRec_* [ %85, %83 ], [ %90, %88 ], [ %78, %76 ], [ %78, %76 ], [ %78, %76 ]
  %93 = phi i8* (%struct.TT_NameRec_*, %struct.FT_MemoryRec_*)* [ @tt_name_ascii_from_other, %83 ], [ @tt_name_ascii_from_utf16, %88 ], [ @tt_name_ascii_from_utf16, %76 ], [ @tt_name_ascii_from_utf16, %76 ], [ @tt_name_ascii_from_utf16, %76 ]
  %94 = icmp eq %struct.TT_NameRec_* %92, null
  br i1 %94, label %123, label %95

95:                                               ; preds = %91
  %96 = getelementptr inbounds %struct.TT_NameRec_, %struct.TT_NameRec_* %92, i64 0, i32 6
  %97 = load i8*, i8** %96, align 8
  %98 = icmp eq i8* %97, null
  br i1 %98, label %99, label %121

99:                                               ; preds = %95
  %100 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 11, i32 6
  %101 = load %struct.FT_StreamRec_*, %struct.FT_StreamRec_** %100, align 8
  %102 = getelementptr inbounds %struct.TT_NameRec_, %struct.TT_NameRec_* %92, i64 0, i32 4
  %103 = load i16, i16* %102, align 8
  %104 = zext i16 %103 to i64
  %105 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %6, i64 1, i64 0, i64 %104, i8* null, i32* nonnull %4) #17
  store i8* %105, i8** %96, align 8
  %106 = load i32, i32* %4, align 4
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %108, label %119

108:                                              ; preds = %99
  %109 = getelementptr inbounds %struct.TT_NameRec_, %struct.TT_NameRec_* %92, i64 0, i32 5
  %110 = load i64, i64* %109, align 8
  %111 = call i32 @FT_Stream_Seek(%struct.FT_StreamRec_* %101, i64 %110) #17
  store i32 %111, i32* %4, align 4
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %113, label %119

113:                                              ; preds = %108
  %114 = load i8*, i8** %96, align 8
  %115 = load i16, i16* %102, align 8
  %116 = zext i16 %115 to i64
  %117 = call i32 @FT_Stream_Read(%struct.FT_StreamRec_* %101, i8* %114, i64 %116) #17
  store i32 %117, i32* %4, align 4
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %121, label %119

119:                                              ; preds = %99, %108, %113
  %120 = load i8*, i8** %96, align 8
  call void @ft_mem_free(%struct.FT_MemoryRec_* %6, i8* %120) #17
  store i8* null, i8** %96, align 8
  store i16 0, i16* %102, align 8
  br label %123

121:                                              ; preds = %113, %95
  %122 = call i8* %93(%struct.TT_NameRec_* nonnull %92, %struct.FT_MemoryRec_* %6) #17, !callees !41
  br label %123

123:                                              ; preds = %3, %91, %86, %76, %121, %119
  %124 = phi i8* [ %122, %121 ], [ null, %119 ], [ null, %91 ], [ null, %76 ], [ null, %86 ], [ null, %3 ]
  store i8* %124, i8** %2, align 8
  %125 = load i32, i32* %4, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #17
  ret i32 %125
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal zeroext i8 @sfnt_get_name_id(%struct.TT_FaceRec_* nocapture readonly, i16 zeroext, i32* nocapture, i32* nocapture) #3 {
  store i32 -1, i32* %2, align 4
  store i32 -1, i32* %3, align 4
  %5 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 10
  %6 = load i16, i16* %5, align 8
  %7 = icmp eq i16 %6, 0
  br i1 %7, label %59, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 11, i32 3
  br label %10

10:                                               ; preds = %8, %54
  %11 = phi i64 [ 0, %8 ], [ %55, %54 ]
  %12 = load %struct.TT_NameRec_*, %struct.TT_NameRec_** %9, align 8
  %13 = getelementptr inbounds %struct.TT_NameRec_, %struct.TT_NameRec_* %12, i64 %11, i32 3
  %14 = load i16, i16* %13, align 2
  %15 = icmp eq i16 %14, %1
  br i1 %15, label %16, label %54

16:                                               ; preds = %10
  %17 = getelementptr inbounds %struct.TT_NameRec_, %struct.TT_NameRec_* %12, i64 %11, i32 4
  %18 = load i16, i16* %17, align 8
  %19 = icmp eq i16 %18, 0
  br i1 %19, label %54, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %struct.TT_NameRec_, %struct.TT_NameRec_* %12, i64 %11, i32 0
  %22 = load i16, i16* %21, align 8
  %23 = icmp eq i16 %22, 3
  br i1 %23, label %24, label %38

24:                                               ; preds = %20
  %25 = getelementptr inbounds %struct.TT_NameRec_, %struct.TT_NameRec_* %12, i64 %11, i32 1
  %26 = load i16, i16* %25, align 2
  %27 = icmp ult i16 %26, 2
  br i1 %27, label %28, label %54

28:                                               ; preds = %24
  %29 = getelementptr inbounds %struct.TT_NameRec_, %struct.TT_NameRec_* %12, i64 %11, i32 2
  %30 = load i16, i16* %29, align 4
  %31 = icmp eq i16 %30, 1033
  br i1 %31, label %35, label %32

32:                                               ; preds = %28
  %33 = load i32, i32* %2, align 4
  %34 = icmp eq i32 %33, -1
  br i1 %34, label %35, label %54

35:                                               ; preds = %32, %28
  %36 = trunc i64 %11 to i32
  store i32 %36, i32* %2, align 4
  %37 = load i16, i16* %21, align 8
  br label %38

38:                                               ; preds = %35, %20
  %39 = phi i16 [ %22, %20 ], [ %37, %35 ]
  %40 = icmp eq i16 %39, 1
  br i1 %40, label %41, label %54

41:                                               ; preds = %38
  %42 = getelementptr inbounds %struct.TT_NameRec_, %struct.TT_NameRec_* %12, i64 %11, i32 1
  %43 = load i16, i16* %42, align 2
  %44 = icmp eq i16 %43, 0
  br i1 %44, label %45, label %54

45:                                               ; preds = %41
  %46 = getelementptr inbounds %struct.TT_NameRec_, %struct.TT_NameRec_* %12, i64 %11, i32 2
  %47 = load i16, i16* %46, align 4
  %48 = icmp eq i16 %47, 0
  br i1 %48, label %52, label %49

49:                                               ; preds = %45
  %50 = load i32, i32* %3, align 4
  %51 = icmp eq i32 %50, -1
  br i1 %51, label %52, label %54

52:                                               ; preds = %49, %45
  %53 = trunc i64 %11 to i32
  store i32 %53, i32* %3, align 4
  br label %54

54:                                               ; preds = %24, %32, %16, %38, %41, %49, %52, %10
  %55 = add nuw nsw i64 %11, 1
  %56 = load i16, i16* %5, align 8
  %57 = zext i16 %56 to i64
  %58 = icmp ult i64 %55, %57
  br i1 %58, label %10, label %59

59:                                               ; preds = %54, %4
  %60 = load i32, i32* %2, align 4
  %61 = icmp sgt i32 %60, -1
  br i1 %61, label %67, label %62

62:                                               ; preds = %59
  %63 = load i32, i32* %3, align 4
  %64 = lshr i32 %63, 31
  %65 = trunc i32 %64 to i8
  %66 = xor i8 %65, 1
  br label %67

67:                                               ; preds = %62, %59
  %68 = phi i8 [ 1, %59 ], [ %66, %62 ]
  ret i8 %68
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #5

declare hidden i32 @FT_Stream_Seek(%struct.FT_StreamRec_*, i64) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #5

declare hidden i8* @FT_Get_Module_Interface(%struct.FT_LibraryRec_*, i8*) local_unnamed_addr #6

declare hidden i8* @ft_module_get_service(%struct.FT_ModuleRec_*, i8*, i8 zeroext) local_unnamed_addr #6

declare %struct.FT_ModuleRec_* @FT_Get_Module(%struct.FT_LibraryRec_*, i8*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @sfnt_open_font(%struct.FT_StreamRec_*, %struct.TT_FaceRec_*, i32* nocapture, i64* nocapture) unnamed_addr #0 {
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i16, align 2
  %15 = alloca i16, align 2
  %16 = alloca i16, align 2
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca [3 x i8], align 1
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca %struct.WOFF2_HeaderRec_, align 8
  %25 = alloca i16, align 2
  %26 = alloca i32, align 4
  %27 = alloca %struct.WOFF_HeaderRec_, align 8
  %28 = alloca i64, align 8
  %29 = alloca i32, align 4
  %30 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %0, i64 0, i32 7
  %31 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %30, align 8
  %32 = bitcast i32* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %32) #17
  store i32 -1431655766, i32* %29, align 4
  %33 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %1, i64 0, i32 1
  %34 = getelementptr inbounds %struct.TTC_HeaderRec_, %struct.TTC_HeaderRec_* %33, i64 0, i32 0
  %35 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %1, i64 0, i32 1, i32 1
  %36 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %1, i64 0, i32 1, i32 2
  %37 = bitcast %struct.TTC_HeaderRec_* %33 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 24, i1 false)
  %38 = call i64 @FT_Stream_Pos(%struct.FT_StreamRec_* %0) #17
  %39 = call i64 @FT_Stream_ReadULong(%struct.FT_StreamRec_* %0, i32* nonnull %29) #17
  %40 = load i32, i32* %29, align 4
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %3151

42:                                               ; preds = %4
  %43 = bitcast i32* %23 to i8*
  %44 = bitcast %struct.WOFF2_HeaderRec_* %24 to i8*
  %45 = getelementptr inbounds %struct.WOFF2_HeaderRec_, %struct.WOFF2_HeaderRec_* %24, i64 0, i32 1
  %46 = getelementptr inbounds %struct.WOFF2_HeaderRec_, %struct.WOFF2_HeaderRec_* %24, i64 0, i32 2
  %47 = getelementptr inbounds %struct.WOFF2_HeaderRec_, %struct.WOFF2_HeaderRec_* %24, i64 0, i32 3
  %48 = getelementptr inbounds %struct.WOFF2_HeaderRec_, %struct.WOFF2_HeaderRec_* %24, i64 0, i32 6
  %49 = getelementptr inbounds %struct.WOFF2_HeaderRec_, %struct.WOFF2_HeaderRec_* %24, i64 0, i32 7
  %50 = getelementptr inbounds %struct.WOFF2_HeaderRec_, %struct.WOFF2_HeaderRec_* %24, i64 0, i32 8
  %51 = getelementptr inbounds %struct.WOFF2_HeaderRec_, %struct.WOFF2_HeaderRec_* %24, i64 0, i32 9
  %52 = getelementptr inbounds %struct.WOFF2_HeaderRec_, %struct.WOFF2_HeaderRec_* %24, i64 0, i32 10
  %53 = getelementptr inbounds %struct.WOFF2_HeaderRec_, %struct.WOFF2_HeaderRec_* %24, i64 0, i32 16
  %54 = getelementptr inbounds %struct.WOFF2_HeaderRec_, %struct.WOFF2_HeaderRec_* %24, i64 0, i32 11
  %55 = getelementptr inbounds %struct.WOFF2_HeaderRec_, %struct.WOFF2_HeaderRec_* %24, i64 0, i32 14
  %56 = getelementptr inbounds %struct.WOFF2_HeaderRec_, %struct.WOFF2_HeaderRec_* %24, i64 0, i32 13
  %57 = bitcast %struct.WOFF2_TtcFontRec_** %53 to i8**
  %58 = bitcast i16* %25 to i8*
  %59 = getelementptr inbounds %struct.WOFF2_HeaderRec_, %struct.WOFF2_HeaderRec_* %24, i64 0, i32 12
  %60 = getelementptr inbounds %struct.WOFF2_HeaderRec_, %struct.WOFF2_HeaderRec_* %24, i64 0, i32 5
  %61 = getelementptr inbounds %struct.WOFF2_HeaderRec_, %struct.WOFF2_HeaderRec_* %24, i64 0, i32 4
  %62 = bitcast i32* %22 to i8*
  %63 = bitcast i32* %18 to i8*
  %64 = bitcast i32* %7 to i8*
  %65 = bitcast i32* %6 to i8*
  %66 = bitcast i32* %5 to i8*
  %67 = bitcast i32* %13 to i8*
  %68 = bitcast i16* %14 to i8*
  %69 = bitcast i32* %12 to i8*
  %70 = bitcast i16* %15 to i8*
  %71 = bitcast i16* %16 to i8*
  %72 = bitcast i32* %11 to i8*
  %73 = bitcast i32* %10 to i8*
  %74 = bitcast i32* %9 to i8*
  %75 = bitcast i32* %8 to i8*
  %76 = bitcast i32* %17 to i8*
  %77 = bitcast i32* %19 to i8*
  %78 = bitcast i32* %20 to i8*
  %79 = getelementptr inbounds [3 x i8], [3 x i8]* %21, i64 0, i64 0
  %80 = getelementptr inbounds %struct.WOFF2_HeaderRec_, %struct.WOFF2_HeaderRec_* %24, i64 0, i32 15
  %81 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %1, i64 0, i32 0, i32 26
  %82 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %1, i64 0, i32 0, i32 2
  %83 = bitcast %struct.FT_StreamRec_** %81 to i8**
  %84 = bitcast i32* %26 to i8*
  %85 = bitcast %struct.WOFF_HeaderRec_* %27 to i8*
  %86 = getelementptr inbounds %struct.WOFF_HeaderRec_, %struct.WOFF_HeaderRec_* %27, i64 0, i32 1
  %87 = getelementptr inbounds %struct.WOFF_HeaderRec_, %struct.WOFF_HeaderRec_* %27, i64 0, i32 2
  %88 = getelementptr inbounds %struct.WOFF_HeaderRec_, %struct.WOFF_HeaderRec_* %27, i64 0, i32 3
  %89 = getelementptr inbounds %struct.WOFF_HeaderRec_, %struct.WOFF_HeaderRec_* %27, i64 0, i32 5
  %90 = getelementptr inbounds %struct.WOFF_HeaderRec_, %struct.WOFF_HeaderRec_* %27, i64 0, i32 8
  %91 = getelementptr inbounds %struct.WOFF_HeaderRec_, %struct.WOFF_HeaderRec_* %27, i64 0, i32 9
  %92 = getelementptr inbounds %struct.WOFF_HeaderRec_, %struct.WOFF_HeaderRec_* %27, i64 0, i32 10
  %93 = getelementptr inbounds %struct.WOFF_HeaderRec_, %struct.WOFF_HeaderRec_* %27, i64 0, i32 11
  %94 = getelementptr inbounds %struct.WOFF_HeaderRec_, %struct.WOFF_HeaderRec_* %27, i64 0, i32 12
  %95 = bitcast i64* %28 to i8*
  br label %96

96:                                               ; preds = %42, %497
  %97 = phi i64 [ %39, %42 ], [ %500, %497 ]
  %98 = phi i64 [ %38, %42 ], [ %499, %497 ]
  %99 = phi %struct.FT_StreamRec_* [ %0, %42 ], [ %498, %497 ]
  switch i64 %97, label %3151 [
    i64 2001684038, label %100
    i64 2001684018, label %503
    i64 2775348084, label %3104
    i64 2775278180, label %3104
    i64 1954115633, label %3104
    i64 1953784678, label %3104
    i64 1953658213, label %3104
    i64 1330926671, label %3104
    i64 131072, label %3104
    i64 65536, label %3104
  ]

100:                                              ; preds = %96
  %101 = call i32 @FT_Stream_Seek(%struct.FT_StreamRec_* %99, i64 %98) #17
  store i32 %101, i32* %29, align 4
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %103, label %3151

103:                                              ; preds = %100
  %104 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %99, i64 0, i32 7
  %105 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %104, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %84) #17
  store i32 0, i32* %26, align 4
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %85) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %85, i8 -86, i64 88, i1 false) #17
  %106 = call i32 @FT_Stream_ReadFields(%struct.FT_StreamRec_* %99, %struct.FT_Frame_Field_* getelementptr inbounds ([15 x %struct.FT_Frame_Field_], [15 x %struct.FT_Frame_Field_]* @woff_open_font.woff_header_fields, i64 0, i64 0), i8* nonnull %85) #17
  store i32 %106, i32* %26, align 4
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %108, label %492

108:                                              ; preds = %103
  %109 = load i64, i64* %86, align 8
  switch i64 %109, label %110 [
    i64 2001684038, label %492
    i64 1953784678, label %492
  ]

110:                                              ; preds = %108
  %111 = load i64, i64* %87, align 8
  %112 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %99, i64 0, i32 1
  %113 = load i64, i64* %112, align 8
  %114 = icmp eq i64 %111, %113
  br i1 %114, label %115, label %492

115:                                              ; preds = %110
  %116 = load i16, i16* %88, align 8
  %117 = icmp eq i16 %116, 0
  br i1 %117, label %492, label %118

118:                                              ; preds = %115
  %119 = zext i16 %116 to i64
  %120 = mul nuw nsw i64 %119, 20
  %121 = add nuw nsw i64 %120, 44
  %122 = icmp ult i64 %121, %111
  br i1 %122, label %123, label %492

123:                                              ; preds = %118
  %124 = shl nuw nsw i64 %119, 4
  %125 = or i64 %124, 12
  %126 = load i64, i64* %89, align 8
  %127 = icmp ult i64 %125, %126
  %128 = and i64 %126, 3
  %129 = icmp eq i64 %128, 0
  %130 = and i1 %127, %129
  br i1 %130, label %131, label %492

131:                                              ; preds = %123
  %132 = load i64, i64* %90, align 8
  %133 = icmp eq i64 %132, 0
  %134 = load i64, i64* %91, align 8
  br i1 %133, label %135, label %139

135:                                              ; preds = %131
  %136 = load i64, i64* %92, align 8
  %137 = or i64 %134, %136
  %138 = icmp eq i64 %137, 0
  br i1 %138, label %144, label %492

139:                                              ; preds = %131
  %140 = icmp ne i64 %134, 0
  %141 = load i64, i64* %92, align 8
  %142 = icmp eq i64 %141, 0
  %143 = and i1 %142, %140
  br i1 %143, label %492, label %144

144:                                              ; preds = %139, %135
  %145 = load i64, i64* %93, align 8
  %146 = icmp ne i64 %145, 0
  %147 = load i64, i64* %94, align 8
  %148 = icmp eq i64 %147, 0
  %149 = or i1 %146, %148
  br i1 %149, label %150, label %492

150:                                              ; preds = %144
  %151 = call i8* @ft_mem_qalloc(%struct.FT_MemoryRec_* %105, i64 %125, i32* nonnull %26) #17
  %152 = load i32, i32* %26, align 4
  %153 = icmp eq i32 %152, 0
  br i1 %153, label %154, label %482

154:                                              ; preds = %150
  %155 = call i8* @ft_mem_alloc(%struct.FT_MemoryRec_* %105, i64 80, i32* nonnull %26) #17
  %156 = bitcast i8* %155 to %struct.FT_StreamRec_*
  %157 = load i32, i32* %26, align 4
  %158 = icmp eq i32 %157, 0
  br i1 %158, label %159, label %482

159:                                              ; preds = %154
  %160 = load i16, i16* %88, align 8
  %161 = zext i16 %160 to i32
  %162 = icmp eq i16 %160, 0
  br i1 %162, label %169, label %163

163:                                              ; preds = %159, %163
  %164 = phi i32 [ %166, %163 ], [ %161, %159 ]
  %165 = phi i32 [ %167, %163 ], [ 0, %159 ]
  %166 = lshr i32 %164, 1
  %167 = add nuw nsw i32 %165, 1
  %168 = icmp eq i32 %166, 0
  br i1 %168, label %169, label %163

169:                                              ; preds = %163, %159
  %170 = phi i32 [ 0, %159 ], [ %167, %163 ]
  %171 = add i32 %170, -1
  %172 = shl i32 16, %171
  %173 = shl nuw nsw i32 %161, 4
  %174 = sub i32 %173, %172
  %175 = load i64, i64* %86, align 8
  %176 = lshr i64 %175, 24
  %177 = trunc i64 %176 to i8
  %178 = getelementptr inbounds i8, i8* %151, i64 1
  store i8 %177, i8* %151, align 1
  %179 = load i64, i64* %86, align 8
  %180 = lshr i64 %179, 16
  %181 = trunc i64 %180 to i8
  %182 = getelementptr inbounds i8, i8* %151, i64 2
  store i8 %181, i8* %178, align 1
  %183 = load i64, i64* %86, align 8
  %184 = lshr i64 %183, 8
  %185 = trunc i64 %184 to i8
  %186 = getelementptr inbounds i8, i8* %151, i64 3
  store i8 %185, i8* %182, align 1
  %187 = load i64, i64* %86, align 8
  %188 = trunc i64 %187 to i8
  %189 = getelementptr inbounds i8, i8* %151, i64 4
  store i8 %188, i8* %186, align 1
  %190 = load i16, i16* %88, align 8
  %191 = lshr i16 %190, 8
  %192 = trunc i16 %191 to i8
  %193 = getelementptr inbounds i8, i8* %151, i64 5
  store i8 %192, i8* %189, align 1
  %194 = load i16, i16* %88, align 8
  %195 = trunc i16 %194 to i8
  %196 = getelementptr inbounds i8, i8* %151, i64 6
  store i8 %195, i8* %193, align 1
  %197 = lshr i32 %172, 8
  %198 = trunc i32 %197 to i8
  %199 = getelementptr inbounds i8, i8* %151, i64 7
  store i8 %198, i8* %196, align 1
  %200 = trunc i32 %172 to i8
  %201 = getelementptr inbounds i8, i8* %151, i64 8
  store i8 %200, i8* %199, align 1
  %202 = lshr i32 %171, 8
  %203 = trunc i32 %202 to i8
  %204 = getelementptr inbounds i8, i8* %151, i64 9
  store i8 %203, i8* %201, align 1
  %205 = trunc i32 %171 to i8
  %206 = getelementptr inbounds i8, i8* %151, i64 10
  store i8 %205, i8* %204, align 1
  %207 = lshr i32 %174, 8
  %208 = trunc i32 %207 to i8
  %209 = getelementptr inbounds i8, i8* %151, i64 11
  store i8 %208, i8* %206, align 1
  %210 = trunc i32 %174 to i8
  store i8 %210, i8* %209, align 1
  %211 = load i16, i16* %88, align 8
  %212 = zext i16 %211 to i64
  %213 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %105, i64 48, i64 0, i64 %212, i8* null, i32* nonnull %26) #17
  %214 = bitcast i8* %213 to %struct.WOFF_TableRec_*
  %215 = load i32, i32* %26, align 4
  %216 = icmp eq i32 %215, 0
  br i1 %216, label %217, label %482

217:                                              ; preds = %169
  %218 = load i16, i16* %88, align 8
  %219 = zext i16 %218 to i64
  %220 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %105, i64 8, i64 0, i64 %219, i8* null, i32* nonnull %26) #17
  %221 = bitcast i8* %220 to %struct.WOFF_TableRec_**
  %222 = load i32, i32* %26, align 4
  %223 = icmp eq i32 %222, 0
  br i1 %223, label %224, label %482

224:                                              ; preds = %217
  %225 = load i16, i16* %88, align 8
  %226 = zext i16 %225 to i64
  %227 = mul nuw nsw i64 %226, 20
  %228 = call i32 @FT_Stream_EnterFrame(%struct.FT_StreamRec_* %99, i64 %227) #17
  store i32 %228, i32* %26, align 4
  %229 = icmp eq i32 %228, 0
  br i1 %229, label %230, label %482

230:                                              ; preds = %224
  %231 = load i16, i16* %88, align 8
  %232 = icmp eq i16 %231, 0
  br i1 %232, label %256, label %233

233:                                              ; preds = %230, %250
  %234 = phi i64 [ %252, %250 ], [ 0, %230 ]
  %235 = phi i64 [ %247, %250 ], [ 0, %230 ]
  %236 = getelementptr inbounds %struct.WOFF_TableRec_, %struct.WOFF_TableRec_* %214, i64 %234
  %237 = call i64 @FT_Stream_GetULong(%struct.FT_StreamRec_* %99) #17
  %238 = getelementptr inbounds %struct.WOFF_TableRec_, %struct.WOFF_TableRec_* %236, i64 0, i32 0
  store i64 %237, i64* %238, align 8
  %239 = call i64 @FT_Stream_GetULong(%struct.FT_StreamRec_* %99) #17
  %240 = getelementptr inbounds %struct.WOFF_TableRec_, %struct.WOFF_TableRec_* %214, i64 %234, i32 1
  store i64 %239, i64* %240, align 8
  %241 = call i64 @FT_Stream_GetULong(%struct.FT_StreamRec_* %99) #17
  %242 = getelementptr inbounds %struct.WOFF_TableRec_, %struct.WOFF_TableRec_* %214, i64 %234, i32 2
  store i64 %241, i64* %242, align 8
  %243 = call i64 @FT_Stream_GetULong(%struct.FT_StreamRec_* %99) #17
  %244 = getelementptr inbounds %struct.WOFF_TableRec_, %struct.WOFF_TableRec_* %214, i64 %234, i32 3
  store i64 %243, i64* %244, align 8
  %245 = call i64 @FT_Stream_GetULong(%struct.FT_StreamRec_* %99) #17
  %246 = getelementptr inbounds %struct.WOFF_TableRec_, %struct.WOFF_TableRec_* %214, i64 %234, i32 4
  store i64 %245, i64* %246, align 8
  %247 = load i64, i64* %238, align 8
  %248 = icmp ugt i64 %247, %235
  br i1 %248, label %250, label %249

249:                                              ; preds = %233
  call void @FT_Stream_ExitFrame(%struct.FT_StreamRec_* %99) #17
  store i32 8, i32* %26, align 4
  br label %482

250:                                              ; preds = %233
  %251 = getelementptr inbounds %struct.WOFF_TableRec_*, %struct.WOFF_TableRec_** %221, i64 %234
  store %struct.WOFF_TableRec_* %236, %struct.WOFF_TableRec_** %251, align 8
  %252 = add nuw nsw i64 %234, 1
  %253 = load i16, i16* %88, align 8
  %254 = zext i16 %253 to i64
  %255 = icmp ult i64 %252, %254
  br i1 %255, label %233, label %256

256:                                              ; preds = %250, %230
  call void @FT_Stream_ExitFrame(%struct.FT_StreamRec_* %99) #17
  %257 = load i16, i16* %88, align 8
  %258 = zext i16 %257 to i64
  call void @qsort(i8* %220, i64 %258, i64 8, i32 (i8*, i8*)* nonnull @compare_offsets) #17
  %259 = load i16, i16* %88, align 8
  %260 = zext i16 %259 to i64
  %261 = mul nuw nsw i64 %260, 20
  %262 = add nuw nsw i64 %261, 44
  %263 = shl nuw nsw i64 %260, 4
  %264 = or i64 %263, 12
  %265 = icmp eq i16 %259, 0
  br i1 %265, label %304, label %266

266:                                              ; preds = %256, %294
  %267 = phi i64 [ %302, %294 ], [ 0, %256 ]
  %268 = phi i64 [ %301, %294 ], [ %264, %256 ]
  %269 = phi i64 [ %298, %294 ], [ %262, %256 ]
  %270 = getelementptr inbounds %struct.WOFF_TableRec_*, %struct.WOFF_TableRec_** %221, i64 %267
  %271 = load %struct.WOFF_TableRec_*, %struct.WOFF_TableRec_** %270, align 8
  %272 = getelementptr inbounds %struct.WOFF_TableRec_, %struct.WOFF_TableRec_* %271, i64 0, i32 1
  %273 = load i64, i64* %272, align 8
  %274 = icmp eq i64 %273, %269
  br i1 %274, label %275, label %293

275:                                              ; preds = %266
  %276 = getelementptr inbounds %struct.WOFF_TableRec_, %struct.WOFF_TableRec_* %271, i64 0, i32 2
  %277 = load i64, i64* %276, align 8
  %278 = load i64, i64* %87, align 8
  %279 = icmp ult i64 %278, %277
  %280 = sub i64 %278, %277
  %281 = icmp ugt i64 %269, %280
  %282 = or i1 %279, %281
  br i1 %282, label %293, label %283

283:                                              ; preds = %275
  %284 = getelementptr inbounds %struct.WOFF_TableRec_, %struct.WOFF_TableRec_* %271, i64 0, i32 3
  %285 = load i64, i64* %284, align 8
  %286 = load i64, i64* %89, align 8
  %287 = icmp ult i64 %286, %285
  %288 = sub i64 %286, %285
  %289 = icmp ugt i64 %268, %288
  %290 = or i1 %287, %289
  %291 = icmp ugt i64 %277, %285
  %292 = or i1 %291, %290
  br i1 %292, label %293, label %294

293:                                              ; preds = %283, %275, %266
  store i32 8, i32* %26, align 4
  br label %482

294:                                              ; preds = %283
  %295 = getelementptr inbounds %struct.WOFF_TableRec_, %struct.WOFF_TableRec_* %271, i64 0, i32 5
  store i64 %268, i64* %295, align 8
  %296 = add i64 %277, 3
  %297 = and i64 %296, 4294967292
  %298 = add i64 %297, %269
  %299 = add i64 %285, 3
  %300 = and i64 %299, 4294967292
  %301 = add i64 %300, %268
  %302 = add nuw nsw i64 %267, 1
  %303 = icmp eq i64 %302, %260
  br i1 %303, label %304, label %266

304:                                              ; preds = %294, %256
  %305 = phi i64 [ %262, %256 ], [ %298, %294 ]
  %306 = phi i64 [ %264, %256 ], [ %301, %294 ]
  %307 = load i64, i64* %90, align 8
  %308 = icmp eq i64 %307, 0
  br i1 %308, label %317, label %309

309:                                              ; preds = %304
  %310 = icmp eq i64 %307, %305
  br i1 %310, label %311, label %316

311:                                              ; preds = %309
  %312 = load i64, i64* %91, align 8
  %313 = add i64 %312, %305
  %314 = load i64, i64* %87, align 8
  %315 = icmp ugt i64 %313, %314
  br i1 %315, label %316, label %317

316:                                              ; preds = %311, %309
  store i32 8, i32* %26, align 4
  br label %482

317:                                              ; preds = %311, %304
  %318 = phi i64 [ %305, %304 ], [ %313, %311 ]
  %319 = load i64, i64* %93, align 8
  %320 = icmp eq i64 %319, 0
  br i1 %320, label %321, label %323

321:                                              ; preds = %317
  %322 = load i64, i64* %87, align 8
  br label %333

323:                                              ; preds = %317
  %324 = add i64 %318, 3
  %325 = and i64 %324, 4294967292
  %326 = icmp eq i64 %319, %325
  br i1 %326, label %327, label %332

327:                                              ; preds = %323
  %328 = load i64, i64* %94, align 8
  %329 = add i64 %328, %319
  %330 = load i64, i64* %87, align 8
  %331 = icmp ugt i64 %329, %330
  br i1 %331, label %332, label %333

332:                                              ; preds = %327, %323
  store i32 8, i32* %26, align 4
  br label %482

333:                                              ; preds = %327, %321
  %334 = phi i64 [ %322, %321 ], [ %330, %327 ]
  %335 = phi i64 [ %318, %321 ], [ %329, %327 ]
  %336 = load i64, i64* %89, align 8
  %337 = icmp eq i64 %306, %336
  %338 = icmp eq i64 %335, %334
  %339 = and i1 %338, %337
  br i1 %339, label %341, label %340

340:                                              ; preds = %333
  store i32 8, i32* %26, align 4
  br label %482

341:                                              ; preds = %333
  %342 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %105, i64 1, i64 %264, i64 %306, i8* %151, i32* nonnull %26) #17
  %343 = load i32, i32* %26, align 4
  %344 = icmp eq i32 %343, 0
  br i1 %344, label %345, label %482

345:                                              ; preds = %341
  %346 = load i16, i16* %88, align 8
  %347 = icmp eq i16 %346, 0
  br i1 %347, label %467, label %348

348:                                              ; preds = %345
  %349 = getelementptr inbounds i8, i8* %342, i64 12
  %350 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %99, i64 0, i32 8
  br label %351

351:                                              ; preds = %462, %348
  %352 = phi i64 [ 0, %348 ], [ %463, %462 ]
  %353 = phi i8* [ %349, %348 ], [ %417, %462 ]
  %354 = getelementptr inbounds %struct.WOFF_TableRec_, %struct.WOFF_TableRec_* %214, i64 %352, i32 0
  %355 = load i64, i64* %354, align 8
  %356 = lshr i64 %355, 24
  %357 = trunc i64 %356 to i8
  %358 = getelementptr inbounds i8, i8* %353, i64 1
  store i8 %357, i8* %353, align 1
  %359 = load i64, i64* %354, align 8
  %360 = lshr i64 %359, 16
  %361 = trunc i64 %360 to i8
  %362 = getelementptr inbounds i8, i8* %353, i64 2
  store i8 %361, i8* %358, align 1
  %363 = load i64, i64* %354, align 8
  %364 = lshr i64 %363, 8
  %365 = trunc i64 %364 to i8
  %366 = getelementptr inbounds i8, i8* %353, i64 3
  store i8 %365, i8* %362, align 1
  %367 = load i64, i64* %354, align 8
  %368 = trunc i64 %367 to i8
  %369 = getelementptr inbounds i8, i8* %353, i64 4
  store i8 %368, i8* %366, align 1
  %370 = getelementptr inbounds %struct.WOFF_TableRec_, %struct.WOFF_TableRec_* %214, i64 %352, i32 4
  %371 = load i64, i64* %370, align 8
  %372 = lshr i64 %371, 24
  %373 = trunc i64 %372 to i8
  %374 = getelementptr inbounds i8, i8* %353, i64 5
  store i8 %373, i8* %369, align 1
  %375 = load i64, i64* %370, align 8
  %376 = lshr i64 %375, 16
  %377 = trunc i64 %376 to i8
  %378 = getelementptr inbounds i8, i8* %353, i64 6
  store i8 %377, i8* %374, align 1
  %379 = load i64, i64* %370, align 8
  %380 = lshr i64 %379, 8
  %381 = trunc i64 %380 to i8
  %382 = getelementptr inbounds i8, i8* %353, i64 7
  store i8 %381, i8* %378, align 1
  %383 = load i64, i64* %370, align 8
  %384 = trunc i64 %383 to i8
  %385 = getelementptr inbounds i8, i8* %353, i64 8
  store i8 %384, i8* %382, align 1
  %386 = getelementptr inbounds %struct.WOFF_TableRec_, %struct.WOFF_TableRec_* %214, i64 %352, i32 5
  %387 = load i64, i64* %386, align 8
  %388 = lshr i64 %387, 24
  %389 = trunc i64 %388 to i8
  %390 = getelementptr inbounds i8, i8* %353, i64 9
  store i8 %389, i8* %385, align 1
  %391 = load i64, i64* %386, align 8
  %392 = lshr i64 %391, 16
  %393 = trunc i64 %392 to i8
  %394 = getelementptr inbounds i8, i8* %353, i64 10
  store i8 %393, i8* %390, align 1
  %395 = load i64, i64* %386, align 8
  %396 = lshr i64 %395, 8
  %397 = trunc i64 %396 to i8
  %398 = getelementptr inbounds i8, i8* %353, i64 11
  store i8 %397, i8* %394, align 1
  %399 = load i64, i64* %386, align 8
  %400 = trunc i64 %399 to i8
  %401 = getelementptr inbounds i8, i8* %353, i64 12
  store i8 %400, i8* %398, align 1
  %402 = getelementptr inbounds %struct.WOFF_TableRec_, %struct.WOFF_TableRec_* %214, i64 %352, i32 3
  %403 = load i64, i64* %402, align 8
  %404 = lshr i64 %403, 24
  %405 = trunc i64 %404 to i8
  %406 = getelementptr inbounds i8, i8* %353, i64 13
  store i8 %405, i8* %401, align 1
  %407 = load i64, i64* %402, align 8
  %408 = lshr i64 %407, 16
  %409 = trunc i64 %408 to i8
  %410 = getelementptr inbounds i8, i8* %353, i64 14
  store i8 %409, i8* %406, align 1
  %411 = load i64, i64* %402, align 8
  %412 = lshr i64 %411, 8
  %413 = trunc i64 %412 to i8
  %414 = getelementptr inbounds i8, i8* %353, i64 15
  store i8 %413, i8* %410, align 1
  %415 = load i64, i64* %402, align 8
  %416 = trunc i64 %415 to i8
  %417 = getelementptr inbounds i8, i8* %353, i64 16
  store i8 %416, i8* %414, align 1
  %418 = getelementptr inbounds %struct.WOFF_TableRec_, %struct.WOFF_TableRec_* %214, i64 %352, i32 1
  %419 = load i64, i64* %418, align 8
  %420 = call i32 @FT_Stream_Seek(%struct.FT_StreamRec_* %99, i64 %419) #17
  store i32 %420, i32* %26, align 4
  %421 = icmp eq i32 %420, 0
  br i1 %421, label %422, label %482

422:                                              ; preds = %351
  %423 = getelementptr inbounds %struct.WOFF_TableRec_, %struct.WOFF_TableRec_* %214, i64 %352, i32 2
  %424 = load i64, i64* %423, align 8
  %425 = call i32 @FT_Stream_EnterFrame(%struct.FT_StreamRec_* %99, i64 %424) #17
  store i32 %425, i32* %26, align 4
  %426 = icmp eq i32 %425, 0
  br i1 %426, label %427, label %482

427:                                              ; preds = %422
  %428 = load i64, i64* %423, align 8
  %429 = load i64, i64* %402, align 8
  %430 = icmp eq i64 %428, %429
  br i1 %430, label %431, label %435

431:                                              ; preds = %427
  %432 = load i64, i64* %386, align 8
  %433 = getelementptr inbounds i8, i8* %342, i64 %432
  %434 = load i8*, i8** %350, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %433, i8* align 1 %434, i64 %428, i1 false) #17
  br label %449

435:                                              ; preds = %427
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %95) #17
  store i64 -6148914691236517206, i64* %28, align 8
  %436 = load i64, i64* %402, align 8
  store i64 %436, i64* %28, align 8
  %437 = load i64, i64* %386, align 8
  %438 = getelementptr inbounds i8, i8* %342, i64 %437
  %439 = load i8*, i8** %350, align 8
  %440 = load i64, i64* %423, align 8
  %441 = call i32 @FT_Gzip_Uncompress(%struct.FT_MemoryRec_* %105, i8* %438, i64* nonnull %28, i8* %439, i64 %440) #17
  store i32 %441, i32* %26, align 4
  %442 = icmp eq i32 %441, 0
  br i1 %442, label %443, label %491

443:                                              ; preds = %435
  %444 = load i64, i64* %28, align 8
  %445 = load i64, i64* %402, align 8
  %446 = icmp eq i64 %444, %445
  br i1 %446, label %448, label %447

447:                                              ; preds = %443
  store i32 8, i32* %26, align 4
  br label %491

448:                                              ; preds = %443
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %95) #17
  br label %449

449:                                              ; preds = %448, %431
  call void @FT_Stream_ExitFrame(%struct.FT_StreamRec_* %99) #17
  %450 = load i64, i64* %386, align 8
  %451 = load i64, i64* %402, align 8
  %452 = add i64 %451, %450
  %453 = and i64 %452, 3
  %454 = icmp eq i64 %453, 0
  br i1 %454, label %462, label %455

455:                                              ; preds = %449
  %456 = getelementptr i8, i8* %342, i64 %452
  %457 = add i64 %451, 1
  %458 = add i64 %450, %457
  %459 = sub i64 0, %458
  %460 = and i64 %459, 3
  %461 = add nuw nsw i64 %460, 1
  call void @llvm.memset.p0i8.i64(i8* align 1 %456, i8 0, i64 %461, i1 false) #17
  br label %462

462:                                              ; preds = %455, %449
  %463 = add nuw nsw i64 %352, 1
  %464 = load i16, i16* %88, align 8
  %465 = zext i16 %464 to i64
  %466 = icmp ult i64 %463, %465
  br i1 %466, label %351, label %467

467:                                              ; preds = %462, %345
  %468 = load i64, i64* %89, align 8
  call void @FT_Stream_OpenMemory(%struct.FT_StreamRec_* %156, i8* %342, i64 %468) #17
  %469 = bitcast %struct.FT_MemoryRec_** %104 to i64*
  %470 = load i64, i64* %469, align 8
  %471 = getelementptr inbounds i8, i8* %155, i64 56
  %472 = bitcast i8* %471 to i64*
  store i64 %470, i64* %472, align 8
  %473 = getelementptr inbounds i8, i8* %155, i64 48
  %474 = bitcast i8* %473 to void (%struct.FT_StreamRec_*)**
  store void (%struct.FT_StreamRec_*)* @sfnt_stream_close, void (%struct.FT_StreamRec_*)** %474, align 8
  %475 = load %struct.FT_StreamRec_*, %struct.FT_StreamRec_** %81, align 8
  %476 = load i64, i64* %82, align 8
  %477 = lshr i64 %476, 10
  %478 = trunc i64 %477 to i32
  %479 = and i32 %478, 1
  call void @FT_Stream_Free(%struct.FT_StreamRec_* %475, i32 %479) #17
  store i8* %155, i8** %83, align 8
  %480 = load i64, i64* %82, align 8
  %481 = and i64 %480, -1025
  store i64 %481, i64* %82, align 8
  br label %482

482:                                              ; preds = %422, %351, %491, %467, %341, %340, %332, %316, %293, %249, %224, %217, %169, %154, %150
  %483 = phi i8* [ null, %150 ], [ null, %154 ], [ %213, %169 ], [ %213, %217 ], [ %213, %224 ], [ %213, %249 ], [ %213, %293 ], [ %213, %316 ], [ %213, %332 ], [ %213, %340 ], [ %213, %341 ], [ %213, %491 ], [ %213, %467 ], [ %213, %351 ], [ %213, %422 ]
  %484 = phi i8* [ null, %150 ], [ null, %154 ], [ null, %169 ], [ %220, %217 ], [ %220, %224 ], [ %220, %249 ], [ %220, %293 ], [ %220, %316 ], [ %220, %332 ], [ %220, %340 ], [ %220, %341 ], [ %220, %491 ], [ %220, %467 ], [ %220, %351 ], [ %220, %422 ]
  %485 = phi i8* [ %151, %150 ], [ %151, %154 ], [ %151, %169 ], [ %151, %217 ], [ %151, %224 ], [ %151, %249 ], [ %151, %293 ], [ %151, %316 ], [ %151, %332 ], [ %151, %340 ], [ %342, %341 ], [ %342, %491 ], [ %342, %467 ], [ %342, %351 ], [ %342, %422 ]
  %486 = phi i8* [ null, %150 ], [ %155, %154 ], [ %155, %169 ], [ %155, %217 ], [ %155, %224 ], [ %155, %249 ], [ %155, %293 ], [ %155, %316 ], [ %155, %332 ], [ %155, %340 ], [ %155, %341 ], [ %155, %491 ], [ %155, %467 ], [ %155, %351 ], [ %155, %422 ]
  %487 = phi %struct.FT_StreamRec_* [ null, %150 ], [ %156, %154 ], [ %156, %169 ], [ %156, %217 ], [ %156, %224 ], [ %156, %249 ], [ %156, %293 ], [ %156, %316 ], [ %156, %332 ], [ %156, %340 ], [ %156, %341 ], [ %156, %491 ], [ %156, %467 ], [ %156, %351 ], [ %156, %422 ]
  call void @ft_mem_free(%struct.FT_MemoryRec_* %105, i8* %483) #17
  call void @ft_mem_free(%struct.FT_MemoryRec_* %105, i8* %484) #17
  %488 = load i32, i32* %26, align 4
  %489 = icmp eq i32 %488, 0
  br i1 %489, label %490, label %494

490:                                              ; preds = %482
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %85) #17
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %84) #17
  store i32 0, i32* %29, align 4
  br label %497

491:                                              ; preds = %435, %447
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %95) #17
  call void @FT_Stream_ExitFrame(%struct.FT_StreamRec_* %99) #17
  br label %482

492:                                              ; preds = %144, %139, %103, %108, %108, %135, %123, %118, %110, %115
  %493 = phi i32 [ 8, %115 ], [ 8, %110 ], [ 8, %118 ], [ 8, %123 ], [ 8, %135 ], [ 8, %108 ], [ 8, %108 ], [ %106, %103 ], [ 8, %139 ], [ 8, %144 ]
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %85) #17
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %84) #17
  store i32 %493, i32* %29, align 4
  br label %3151

494:                                              ; preds = %482
  call void @ft_mem_free(%struct.FT_MemoryRec_* %105, i8* %485) #17
  call void @FT_Stream_Close(%struct.FT_StreamRec_* %487) #17
  call void @ft_mem_free(%struct.FT_MemoryRec_* %105, i8* %486) #17
  %495 = load i32, i32* %26, align 4
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %85) #17
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %84) #17
  store i32 %495, i32* %29, align 4
  %496 = icmp eq i32 %495, 0
  br i1 %496, label %497, label %3151

497:                                              ; preds = %3101, %3094, %494, %490
  %498 = load %struct.FT_StreamRec_*, %struct.FT_StreamRec_** %81, align 8
  %499 = call i64 @FT_Stream_Pos(%struct.FT_StreamRec_* %498) #17
  %500 = call i64 @FT_Stream_ReadULong(%struct.FT_StreamRec_* %498, i32* nonnull %29) #17
  %501 = load i32, i32* %29, align 4
  %502 = icmp eq i32 %501, 0
  br i1 %502, label %96, label %3151

503:                                              ; preds = %96
  %504 = call i32 @FT_Stream_Seek(%struct.FT_StreamRec_* %99, i64 %98) #17
  store i32 %504, i32* %29, align 4
  %505 = icmp eq i32 %504, 0
  br i1 %505, label %506, label %3151

506:                                              ; preds = %503
  %507 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %99, i64 0, i32 7
  %508 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %507, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %43) #17
  store i32 0, i32* %23, align 4
  call void @llvm.lifetime.start.p0i8(i64 136, i8* nonnull %44) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 -86, i64 136, i1 false) #17
  %509 = load i32, i32* %2, align 4
  %510 = icmp slt i32 %509, 0
  %511 = sub nsw i32 0, %509
  %512 = select i1 %510, i32 %511, i32 %509
  %513 = and i32 %512, 65535
  %514 = call i32 @FT_Stream_ReadFields(%struct.FT_StreamRec_* %99, %struct.FT_Frame_Field_* getelementptr inbounds ([15 x %struct.FT_Frame_Field_], [15 x %struct.FT_Frame_Field_]* @woff2_open_font.woff2_header_fields, i64 0, i64 0), i8* nonnull %44) #17
  store i32 %514, i32* %23, align 4
  %515 = icmp eq i32 %514, 0
  br i1 %515, label %516, label %3099

516:                                              ; preds = %506
  %517 = load i64, i64* %45, align 8
  %518 = icmp eq i64 %517, 2001684018
  br i1 %518, label %3099, label %519

519:                                              ; preds = %516
  %520 = load i64, i64* %46, align 8
  %521 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %99, i64 0, i32 1
  %522 = load i64, i64* %521, align 8
  %523 = icmp eq i64 %520, %522
  br i1 %523, label %524, label %3099

524:                                              ; preds = %519
  %525 = load i16, i16* %47, align 8
  %526 = icmp eq i16 %525, 0
  br i1 %526, label %3099, label %527

527:                                              ; preds = %524
  %528 = zext i16 %525 to i64
  %529 = mul nuw nsw i64 %528, 20
  %530 = add nuw nsw i64 %529, 48
  %531 = icmp ult i64 %530, %520
  br i1 %531, label %532, label %3099

532:                                              ; preds = %527
  %533 = load i64, i64* %48, align 8
  %534 = icmp eq i64 %533, 0
  %535 = load i64, i64* %49, align 8
  br i1 %534, label %536, label %540

536:                                              ; preds = %532
  %537 = load i64, i64* %50, align 8
  %538 = or i64 %535, %537
  %539 = icmp eq i64 %538, 0
  br i1 %539, label %552, label %3099

540:                                              ; preds = %532
  %541 = icmp eq i64 %535, 0
  br i1 %541, label %550, label %542

542:                                              ; preds = %540
  %543 = load i64, i64* %50, align 8
  %544 = icmp eq i64 %543, 0
  %545 = icmp ule i64 %520, %533
  %546 = or i1 %545, %544
  %547 = sub i64 %520, %533
  %548 = icmp ult i64 %547, %535
  %549 = or i1 %548, %546
  br i1 %549, label %3099, label %552

550:                                              ; preds = %540
  %551 = icmp ugt i64 %520, %533
  br i1 %551, label %552, label %3099

552:                                              ; preds = %536, %542, %550
  %553 = load i64, i64* %51, align 8
  %554 = icmp eq i64 %553, 0
  br i1 %554, label %555, label %558

555:                                              ; preds = %552
  %556 = load i64, i64* %52, align 8
  %557 = icmp eq i64 %556, 0
  br i1 %557, label %564, label %3099

558:                                              ; preds = %552
  %559 = icmp ugt i64 %520, %553
  br i1 %559, label %560, label %3099

560:                                              ; preds = %558
  %561 = load i64, i64* %52, align 8
  %562 = sub i64 %520, %553
  %563 = icmp ult i64 %562, %561
  br i1 %563, label %3099, label %564

564:                                              ; preds = %555, %560
  store %struct.WOFF2_TtcFontRec_* null, %struct.WOFF2_TtcFontRec_** %53, align 8
  %565 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %508, i64 64, i64 0, i64 %528, i8* null, i32* nonnull %23) #17
  %566 = bitcast i8* %565 to %struct.WOFF2_TableRec_*
  %567 = load i32, i32* %23, align 4
  %568 = icmp eq i32 %567, 0
  br i1 %568, label %569, label %3063

569:                                              ; preds = %564
  %570 = load i16, i16* %47, align 8
  %571 = zext i16 %570 to i64
  %572 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %508, i64 8, i64 0, i64 %571, i8* null, i32* nonnull %23) #17
  %573 = bitcast i8* %572 to %struct.WOFF2_TableRec_**
  %574 = load i32, i32* %23, align 4
  %575 = icmp eq i32 %574, 0
  br i1 %575, label %576, label %3063

576:                                              ; preds = %569
  %577 = load i16, i16* %47, align 8
  %578 = icmp eq i16 %577, 0
  br i1 %578, label %650, label %579

579:                                              ; preds = %576, %639
  %580 = phi i64 [ %646, %639 ], [ 0, %576 ]
  %581 = phi i64 [ %643, %639 ], [ 0, %576 ]
  %582 = getelementptr inbounds %struct.WOFF2_TableRec_, %struct.WOFF2_TableRec_* %566, i64 %580
  %583 = call signext i8 @FT_Stream_ReadChar(%struct.FT_StreamRec_* %99, i32* nonnull %23) #17
  %584 = getelementptr inbounds %struct.WOFF2_TableRec_, %struct.WOFF2_TableRec_* %582, i64 0, i32 0
  store i8 %583, i8* %584, align 8
  %585 = load i32, i32* %23, align 4
  %586 = icmp eq i32 %585, 0
  br i1 %586, label %587, label %3063

587:                                              ; preds = %579
  %588 = and i8 %583, 63
  %589 = icmp eq i8 %588, 63
  br i1 %589, label %590, label %597

590:                                              ; preds = %587
  %591 = call i64 @FT_Stream_ReadULong(%struct.FT_StreamRec_* %99, i32* nonnull %23) #17
  %592 = getelementptr inbounds %struct.WOFF2_TableRec_, %struct.WOFF2_TableRec_* %566, i64 %580, i32 1
  store i64 %591, i64* %592, align 8
  %593 = load i32, i32* %23, align 4
  %594 = icmp eq i32 %593, 0
  br i1 %594, label %595, label %3063

595:                                              ; preds = %590
  %596 = load i8, i8* %584, align 8
  br label %602

597:                                              ; preds = %587
  %598 = zext i8 %588 to i64
  %599 = getelementptr inbounds [63 x i64], [63 x i64]* @woff2_known_tags.known_tags, i64 0, i64 %598
  %600 = load i64, i64* %599, align 8
  %601 = getelementptr inbounds %struct.WOFF2_TableRec_, %struct.WOFF2_TableRec_* %566, i64 %580, i32 1
  store i64 %600, i64* %601, align 8
  br label %602

602:                                              ; preds = %597, %595
  %603 = phi i64 [ %591, %595 ], [ %600, %597 ]
  %604 = phi i8 [ %596, %595 ], [ %583, %597 ]
  %605 = lshr i8 %604, 6
  %606 = getelementptr inbounds %struct.WOFF2_TableRec_, %struct.WOFF2_TableRec_* %566, i64 %580, i32 1
  switch i64 %603, label %610 [
    i64 1735162214, label %607
    i64 1819239265, label %607
  ]

607:                                              ; preds = %602, %602
  %608 = icmp eq i8 %605, 0
  %609 = select i1 %608, i64 256, i64 0
  br label %613

610:                                              ; preds = %602
  %611 = icmp eq i8 %605, 0
  %612 = select i1 %611, i64 0, i64 256
  br label %613

613:                                              ; preds = %610, %607
  %614 = phi i64 [ %609, %607 ], [ %612, %610 ]
  %615 = zext i8 %605 to i64
  %616 = or i64 %614, %615
  %617 = getelementptr inbounds %struct.WOFF2_TableRec_, %struct.WOFF2_TableRec_* %566, i64 %580, i32 2
  %618 = call fastcc i32 @ReadBase128(%struct.FT_StreamRec_* %99, i64* %617) #17
  store i32 %618, i32* %23, align 4
  %619 = icmp eq i32 %618, 0
  br i1 %619, label %620, label %3063

620:                                              ; preds = %613
  %621 = load i64, i64* %617, align 8
  %622 = getelementptr inbounds %struct.WOFF2_TableRec_, %struct.WOFF2_TableRec_* %566, i64 %580, i32 3
  store i64 %621, i64* %622, align 8
  %623 = icmp eq i64 %614, 0
  br i1 %623, label %634, label %624

624:                                              ; preds = %620
  %625 = call fastcc i32 @ReadBase128(%struct.FT_StreamRec_* %99, i64* %622) #17
  store i32 %625, i32* %23, align 4
  %626 = icmp eq i32 %625, 0
  br i1 %626, label %627, label %3063

627:                                              ; preds = %624
  %628 = load i64, i64* %606, align 8
  %629 = icmp eq i64 %628, 1819239265
  %630 = load i64, i64* %622, align 8
  br i1 %629, label %631, label %634

631:                                              ; preds = %627
  %632 = icmp eq i64 %630, 0
  br i1 %632, label %639, label %633

633:                                              ; preds = %631
  store i32 8, i32* %23, align 4
  br label %3063

634:                                              ; preds = %627, %620
  %635 = phi i64 [ %621, %620 ], [ %630, %627 ]
  %636 = xor i64 %581, -1
  %637 = icmp ugt i64 %635, %636
  br i1 %637, label %638, label %639

638:                                              ; preds = %634
  store i32 8, i32* %23, align 4
  br label %3063

639:                                              ; preds = %634, %631
  %640 = phi i64 [ %635, %634 ], [ 0, %631 ]
  %641 = getelementptr inbounds %struct.WOFF2_TableRec_, %struct.WOFF2_TableRec_* %566, i64 %580, i32 5
  store i64 %581, i64* %641, align 8
  %642 = getelementptr inbounds %struct.WOFF2_TableRec_, %struct.WOFF2_TableRec_* %566, i64 %580, i32 6
  store i64 %640, i64* %642, align 8
  %643 = add i64 %640, %581
  %644 = getelementptr inbounds %struct.WOFF2_TableRec_, %struct.WOFF2_TableRec_* %566, i64 %580, i32 4
  store i64 %616, i64* %644, align 8
  %645 = getelementptr inbounds %struct.WOFF2_TableRec_*, %struct.WOFF2_TableRec_** %573, i64 %580
  store %struct.WOFF2_TableRec_* %582, %struct.WOFF2_TableRec_** %645, align 8
  %646 = add nuw nsw i64 %580, 1
  %647 = load i16, i16* %47, align 8
  %648 = zext i16 %647 to i64
  %649 = icmp ult i64 %646, %648
  br i1 %649, label %579, label %650

650:                                              ; preds = %639, %576
  %651 = phi i16 [ 0, %576 ], [ %647, %639 ]
  %652 = zext i16 %651 to i64
  %653 = add nsw i64 %652, -1
  %654 = getelementptr inbounds %struct.WOFF2_TableRec_*, %struct.WOFF2_TableRec_** %573, i64 %653
  %655 = load %struct.WOFF2_TableRec_*, %struct.WOFF2_TableRec_** %654, align 8
  %656 = getelementptr inbounds %struct.WOFF2_TableRec_, %struct.WOFF2_TableRec_* %655, i64 0, i32 5
  %657 = load i64, i64* %656, align 8
  %658 = getelementptr inbounds %struct.WOFF2_TableRec_, %struct.WOFF2_TableRec_* %655, i64 0, i32 6
  %659 = load i64, i64* %658, align 8
  %660 = add i64 %659, %657
  store i64 %660, i64* %54, align 8
  %661 = load i64, i64* %656, align 8
  %662 = icmp ult i64 %660, %661
  br i1 %662, label %663, label %664

663:                                              ; preds = %650
  store i32 8, i32* %23, align 4
  br label %3063

664:                                              ; preds = %650
  store i16 1, i16* %55, align 8
  store i64 0, i64* %56, align 8
  %665 = load i64, i64* %45, align 8
  %666 = icmp eq i64 %665, 1953784678
  br i1 %666, label %667, label %763

667:                                              ; preds = %664
  %668 = call i64 @FT_Stream_ReadULong(%struct.FT_StreamRec_* %99, i32* nonnull %23) #17
  store i64 %668, i64* %56, align 8
  %669 = load i32, i32* %23, align 4
  %670 = icmp eq i32 %669, 0
  br i1 %670, label %671, label %3063

671:                                              ; preds = %667
  switch i64 %668, label %672 [
    i64 65536, label %673
    i64 131072, label %673
  ]

672:                                              ; preds = %671
  store i32 8, i32* %23, align 4
  br label %3063

673:                                              ; preds = %671, %671
  %674 = call fastcc i32 @Read255UShort(%struct.FT_StreamRec_* %99, i16* %55) #17
  store i32 %674, i32* %23, align 4
  %675 = icmp eq i32 %674, 0
  br i1 %675, label %676, label %3063

676:                                              ; preds = %673
  %677 = load i16, i16* %55, align 8
  %678 = icmp eq i16 %677, 0
  br i1 %678, label %679, label %680

679:                                              ; preds = %676
  store i32 8, i32* %23, align 4
  br label %3063

680:                                              ; preds = %676
  %681 = zext i16 %677 to i64
  %682 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %508, i64 24, i64 0, i64 %681, i8* null, i32* nonnull %23) #17
  store i8* %682, i8** %57, align 8
  %683 = load i32, i32* %23, align 4
  %684 = icmp eq i32 %683, 0
  %685 = bitcast i8* %682 to %struct.WOFF2_TtcFontRec_*
  br i1 %684, label %686, label %3063

686:                                              ; preds = %680
  %687 = load i16, i16* %55, align 8
  %688 = icmp eq i16 %687, 0
  br i1 %688, label %764, label %689

689:                                              ; preds = %686
  %690 = getelementptr inbounds i8, i8* %682, i64 8
  %691 = bitcast i8* %690 to i16*
  %692 = call fastcc i32 @Read255UShort(%struct.FT_StreamRec_* %99, i16* %691) #17
  store i32 %692, i32* %23, align 4
  %693 = icmp eq i32 %692, 0
  br i1 %693, label %694, label %3063

694:                                              ; preds = %689, %758
  %695 = phi i16* [ %760, %758 ], [ %691, %689 ]
  %696 = phi i64 [ %754, %758 ], [ 0, %689 ]
  %697 = phi %struct.WOFF2_TtcFontRec_* [ %759, %758 ], [ %685, %689 ]
  %698 = call i64 @FT_Stream_ReadULong(%struct.FT_StreamRec_* %99, i32* nonnull %23) #17
  %699 = getelementptr inbounds %struct.WOFF2_TtcFontRec_, %struct.WOFF2_TtcFontRec_* %697, i64 %696, i32 0
  store i64 %698, i64* %699, align 8
  %700 = load i32, i32* %23, align 4
  %701 = icmp eq i32 %700, 0
  br i1 %701, label %702, label %3063

702:                                              ; preds = %694
  %703 = load i16, i16* %695, align 8
  %704 = zext i16 %703 to i64
  %705 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %508, i64 2, i64 0, i64 %704, i8* null, i32* nonnull %23) #17
  %706 = getelementptr inbounds %struct.WOFF2_TtcFontRec_, %struct.WOFF2_TtcFontRec_* %697, i64 %696, i32 2
  %707 = bitcast i16** %706 to i8**
  store i8* %705, i8** %707, align 8
  %708 = load i32, i32* %23, align 4
  %709 = icmp eq i32 %708, 0
  br i1 %709, label %710, label %3063

710:                                              ; preds = %702
  %711 = load i16, i16* %695, align 8
  %712 = icmp eq i16 %711, 0
  br i1 %712, label %742, label %713

713:                                              ; preds = %710, %725
  %714 = phi i32 [ %735, %725 ], [ 0, %710 ]
  %715 = phi i32 [ %737, %725 ], [ 0, %710 ]
  %716 = phi i64 [ %738, %725 ], [ 0, %710 ]
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %58) #17
  store i16 -21846, i16* %25, align 2
  %717 = call fastcc i32 @Read255UShort(%struct.FT_StreamRec_* %99, i16* nonnull %25) #17
  store i32 %717, i32* %23, align 4
  %718 = icmp eq i32 %717, 0
  br i1 %718, label %719, label %724

719:                                              ; preds = %713
  %720 = load i16, i16* %25, align 2
  %721 = load i16, i16* %47, align 8
  %722 = icmp ult i16 %720, %721
  br i1 %722, label %725, label %723

723:                                              ; preds = %719
  store i32 8, i32* %23, align 4
  br label %724

724:                                              ; preds = %713, %723
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %58) #17
  br label %3063

725:                                              ; preds = %719
  %726 = load i16*, i16** %706, align 8
  %727 = getelementptr inbounds i16, i16* %726, i64 %716
  store i16 %720, i16* %727, align 2
  %728 = zext i16 %720 to i64
  %729 = getelementptr inbounds %struct.WOFF2_TableRec_*, %struct.WOFF2_TableRec_** %573, i64 %728
  %730 = load %struct.WOFF2_TableRec_*, %struct.WOFF2_TableRec_** %729, align 8
  %731 = getelementptr inbounds %struct.WOFF2_TableRec_, %struct.WOFF2_TableRec_* %730, i64 0, i32 1
  %732 = load i64, i64* %731, align 8
  %733 = icmp eq i64 %732, 1819239265
  %734 = zext i16 %720 to i32
  %735 = select i1 %733, i32 %734, i32 %714
  %736 = icmp eq i64 %732, 1735162214
  %737 = select i1 %736, i32 %734, i32 %715
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %58) #17
  %738 = add nuw nsw i64 %716, 1
  %739 = load i16, i16* %695, align 8
  %740 = zext i16 %739 to i64
  %741 = icmp ult i64 %738, %740
  br i1 %741, label %713, label %742

742:                                              ; preds = %725, %710
  %743 = phi i32 [ 0, %710 ], [ %737, %725 ]
  %744 = phi i32 [ 0, %710 ], [ %735, %725 ]
  %745 = or i32 %744, %743
  %746 = icmp eq i32 %745, 0
  br i1 %746, label %753, label %747

747:                                              ; preds = %742
  %748 = icmp uge i32 %744, %743
  %749 = sub i32 %744, %743
  %750 = icmp eq i32 %749, 1
  %751 = and i1 %748, %750
  br i1 %751, label %753, label %752

752:                                              ; preds = %747
  store i32 8, i32* %23, align 4
  br label %3063

753:                                              ; preds = %747, %742
  %754 = add nuw nsw i64 %696, 1
  %755 = load i16, i16* %55, align 8
  %756 = zext i16 %755 to i64
  %757 = icmp ult i64 %754, %756
  br i1 %757, label %758, label %764

758:                                              ; preds = %753
  %759 = load %struct.WOFF2_TtcFontRec_*, %struct.WOFF2_TtcFontRec_** %53, align 8
  %760 = getelementptr inbounds %struct.WOFF2_TtcFontRec_, %struct.WOFF2_TtcFontRec_* %759, i64 %754, i32 1
  %761 = call fastcc i32 @Read255UShort(%struct.FT_StreamRec_* %99, i16* %760) #17
  store i32 %761, i32* %23, align 4
  %762 = icmp eq i32 %761, 0
  br i1 %762, label %694, label %3063

763:                                              ; preds = %664
  store %struct.WOFF2_TtcFontRec_* null, %struct.WOFF2_TtcFontRec_** %53, align 8
  br label %764

764:                                              ; preds = %753, %763, %686
  %765 = call i64 @FT_Stream_Pos(%struct.FT_StreamRec_* %99) #17
  store i64 %765, i64* %59, align 8
  %766 = load i64, i64* %60, align 8
  %767 = add i64 %766, %765
  %768 = trunc i64 %767 to i32
  %769 = add i32 %768, 3
  %770 = and i32 %769, -4
  %771 = zext i32 %770 to i64
  %772 = load i64, i64* %46, align 8
  %773 = icmp ult i64 %772, %771
  br i1 %773, label %774, label %775

774:                                              ; preds = %764
  store i32 8, i32* %23, align 4
  br label %3063

775:                                              ; preds = %764
  %776 = load i64, i64* %48, align 8
  %777 = icmp eq i64 %776, 0
  br i1 %777, label %787, label %778

778:                                              ; preds = %775
  %779 = icmp eq i64 %776, %771
  br i1 %779, label %781, label %780

780:                                              ; preds = %778
  store i32 8, i32* %23, align 4
  br label %3063

781:                                              ; preds = %778
  %782 = load i64, i64* %49, align 8
  %783 = trunc i64 %782 to i32
  %784 = or i32 %769, 3
  %785 = add i32 %784, %783
  %786 = and i32 %785, -4
  br label %787

787:                                              ; preds = %781, %775
  %788 = phi i32 [ %786, %781 ], [ %770, %775 ]
  %789 = load i64, i64* %51, align 8
  %790 = icmp eq i64 %789, 0
  br i1 %790, label %801, label %791

791:                                              ; preds = %787
  %792 = zext i32 %788 to i64
  %793 = icmp eq i64 %789, %792
  br i1 %793, label %795, label %794

794:                                              ; preds = %791
  store i32 8, i32* %23, align 4
  br label %3063

795:                                              ; preds = %791
  %796 = load i64, i64* %52, align 8
  %797 = add i64 %796, %789
  %798 = trunc i64 %797 to i32
  %799 = add i32 %798, 3
  %800 = and i32 %799, -4
  br label %801

801:                                              ; preds = %795, %787
  %802 = phi i32 [ %800, %795 ], [ %788, %787 ]
  %803 = zext i32 %802 to i64
  %804 = add i64 %772, 3
  %805 = and i64 %804, -4
  %806 = icmp eq i64 %805, %803
  br i1 %806, label %808, label %807

807:                                              ; preds = %801
  store i32 8, i32* %23, align 4
  br label %3063

808:                                              ; preds = %801
  %809 = load i16, i16* %55, align 8
  %810 = zext i16 %809 to i64
  store i64 %810, i64* %3, align 8
  %811 = load i32, i32* %2, align 4
  %812 = ashr i32 %811, 31
  %813 = add nsw i32 %812, %513
  %814 = zext i16 %809 to i32
  %815 = icmp slt i32 %813, %814
  br i1 %815, label %819, label %816

816:                                              ; preds = %808
  %817 = icmp sgt i32 %811, -1
  br i1 %817, label %818, label %819

818:                                              ; preds = %816
  store i32 6, i32* %23, align 4
  br label %3063

819:                                              ; preds = %816, %808
  %820 = phi i32 [ %813, %808 ], [ 0, %816 ]
  %821 = load i64, i64* %56, align 8
  %822 = icmp eq i64 %821, 0
  br i1 %822, label %823, label %825

823:                                              ; preds = %819
  %824 = load i16, i16* %47, align 8
  br label %882

825:                                              ; preds = %819
  %826 = load %struct.WOFF2_TtcFontRec_*, %struct.WOFF2_TtcFontRec_** %53, align 8
  %827 = sext i32 %820 to i64
  %828 = getelementptr inbounds %struct.WOFF2_TtcFontRec_, %struct.WOFF2_TtcFontRec_* %826, i64 %827, i32 1
  %829 = load i16, i16* %828, align 8
  %830 = zext i16 %829 to i64
  %831 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %508, i64 8, i64 0, i64 %830, i8* null, i32* nonnull %23) #17
  %832 = bitcast i8* %831 to %struct.WOFF2_TableRec_**
  %833 = load i32, i32* %23, align 4
  %834 = icmp eq i32 %833, 0
  br i1 %834, label %835, label %3063

835:                                              ; preds = %825
  %836 = load i16, i16* %828, align 8
  %837 = icmp eq i16 %836, 0
  br i1 %837, label %855, label %838

838:                                              ; preds = %835
  %839 = getelementptr inbounds %struct.WOFF2_TtcFontRec_, %struct.WOFF2_TtcFontRec_* %826, i64 %827, i32 2
  br label %840

840:                                              ; preds = %840, %838
  %841 = phi i64 [ 0, %838 ], [ %851, %840 ]
  %842 = load i16*, i16** %839, align 8
  %843 = getelementptr inbounds i16, i16* %842, i64 %841
  %844 = load i16, i16* %843, align 2
  %845 = zext i16 %844 to i64
  %846 = getelementptr inbounds %struct.WOFF2_TableRec_*, %struct.WOFF2_TableRec_** %573, i64 %845
  %847 = bitcast %struct.WOFF2_TableRec_** %846 to i64*
  %848 = load i64, i64* %847, align 8
  %849 = getelementptr inbounds %struct.WOFF2_TableRec_*, %struct.WOFF2_TableRec_** %832, i64 %841
  %850 = bitcast %struct.WOFF2_TableRec_** %849 to i64*
  store i64 %848, i64* %850, align 8
  %851 = add nuw nsw i64 %841, 1
  %852 = load i16, i16* %828, align 8
  %853 = zext i16 %852 to i64
  %854 = icmp ult i64 %851, %853
  br i1 %854, label %840, label %855

855:                                              ; preds = %840, %835
  %856 = phi i16 [ 0, %835 ], [ %852, %840 ]
  %857 = load i16, i16* %47, align 8
  %858 = zext i16 %857 to i64
  %859 = zext i16 %856 to i64
  %860 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %508, i64 8, i64 %858, i64 %859, i8* %572, i32* nonnull %23) #17
  %861 = bitcast i8* %860 to %struct.WOFF2_TableRec_**
  %862 = load i32, i32* %23, align 4
  %863 = icmp eq i32 %862, 0
  br i1 %863, label %864, label %3063

864:                                              ; preds = %855
  %865 = load i16, i16* %828, align 8
  %866 = icmp eq i16 %865, 0
  br i1 %866, label %878, label %867

867:                                              ; preds = %864, %867
  %868 = phi i64 [ %874, %867 ], [ 0, %864 ]
  %869 = getelementptr inbounds %struct.WOFF2_TableRec_*, %struct.WOFF2_TableRec_** %832, i64 %868
  %870 = bitcast %struct.WOFF2_TableRec_** %869 to i64*
  %871 = load i64, i64* %870, align 8
  %872 = getelementptr inbounds %struct.WOFF2_TableRec_*, %struct.WOFF2_TableRec_** %861, i64 %868
  %873 = bitcast %struct.WOFF2_TableRec_** %872 to i64*
  store i64 %871, i64* %873, align 8
  %874 = add nuw nsw i64 %868, 1
  %875 = load i16, i16* %828, align 8
  %876 = zext i16 %875 to i64
  %877 = icmp ult i64 %874, %876
  br i1 %877, label %867, label %878

878:                                              ; preds = %867, %864
  call void @ft_mem_free(%struct.FT_MemoryRec_* %508, i8* %831) #17
  %879 = getelementptr inbounds %struct.WOFF2_TtcFontRec_, %struct.WOFF2_TtcFontRec_* %826, i64 %827, i32 0
  %880 = load i64, i64* %879, align 8
  store i64 %880, i64* %45, align 8
  %881 = load i16, i16* %828, align 8
  store i16 %881, i16* %47, align 8
  br label %882

882:                                              ; preds = %878, %823
  %883 = phi i16 [ %881, %878 ], [ %824, %823 ]
  %884 = phi i8* [ %860, %878 ], [ %572, %823 ]
  %885 = phi %struct.WOFF2_TableRec_** [ %861, %878 ], [ %573, %823 ]
  %886 = zext i16 %883 to i64
  %887 = shl nuw nsw i64 %886, 4
  %888 = or i64 %887, 12
  %889 = load i64, i64* %61, align 8
  %890 = icmp ugt i64 %889, %888
  br i1 %890, label %891, label %899

891:                                              ; preds = %882
  %892 = lshr i64 %889, 6
  %893 = load i64, i64* %46, align 8
  %894 = icmp ugt i64 %892, %893
  %895 = shl i64 %893, 6
  %896 = select i1 %894, i64 %895, i64 %889
  %897 = icmp ult i64 %896, 67108864
  %898 = select i1 %897, i64 %896, i64 67108864
  br label %899

899:                                              ; preds = %891, %882
  %900 = phi i64 [ %898, %891 ], [ %888, %882 ]
  %901 = call i8* @ft_mem_qalloc(%struct.FT_MemoryRec_* %508, i64 %900, i32* nonnull %23) #17
  %902 = ptrtoint i8* %901 to i64
  %903 = load i32, i32* %23, align 4
  %904 = icmp eq i32 %903, 0
  br i1 %904, label %905, label %3063

905:                                              ; preds = %899
  %906 = call i8* @ft_mem_alloc(%struct.FT_MemoryRec_* %508, i64 80, i32* nonnull %23) #17
  %907 = bitcast i8* %906 to %struct.FT_StreamRec_*
  %908 = load i32, i32* %23, align 4
  %909 = icmp eq i32 %908, 0
  br i1 %909, label %910, label %3063

910:                                              ; preds = %905
  %911 = load i64, i64* %45, align 8
  %912 = lshr i64 %911, 24
  %913 = trunc i64 %912 to i8
  %914 = getelementptr inbounds i8, i8* %901, i64 1
  store i8 %913, i8* %901, align 1
  %915 = load i64, i64* %45, align 8
  %916 = lshr i64 %915, 16
  %917 = trunc i64 %916 to i8
  %918 = getelementptr inbounds i8, i8* %901, i64 2
  store i8 %917, i8* %914, align 1
  %919 = load i64, i64* %45, align 8
  %920 = lshr i64 %919, 8
  %921 = trunc i64 %920 to i8
  %922 = getelementptr inbounds i8, i8* %901, i64 3
  store i8 %921, i8* %918, align 1
  %923 = load i64, i64* %45, align 8
  %924 = trunc i64 %923 to i8
  %925 = getelementptr inbounds i8, i8* %901, i64 4
  store i8 %924, i8* %922, align 1
  %926 = load i16, i16* %47, align 8
  %927 = icmp eq i16 %926, 0
  br i1 %927, label %928, label %944

928:                                              ; preds = %910
  %929 = load i8, i8* %925, align 1
  %930 = getelementptr inbounds i8, i8* %901, i64 5
  %931 = load i8, i8* %930, align 1
  %932 = getelementptr inbounds i8, i8* %901, i64 6
  %933 = load i8, i8* %932, align 1
  %934 = getelementptr inbounds i8, i8* %901, i64 7
  %935 = load i8, i8* %934, align 1
  %936 = getelementptr inbounds i8, i8* %901, i64 8
  %937 = load i8, i8* %936, align 1
  %938 = getelementptr inbounds i8, i8* %901, i64 9
  %939 = load i8, i8* %938, align 1
  %940 = getelementptr inbounds i8, i8* %901, i64 10
  %941 = load i8, i8* %940, align 1
  %942 = getelementptr inbounds i8, i8* %901, i64 11
  %943 = load i8, i8* %942, align 1
  br label %973

944:                                              ; preds = %910
  %945 = zext i16 %926 to i32
  %946 = lshr i32 %945, 1
  %947 = call i32 @llvm.ctlz.i32(i32 %946, i1 false), !range !42
  %948 = sub nuw nsw i32 32, %947
  %949 = shl i32 16, %948
  %950 = shl nuw nsw i32 %945, 4
  %951 = sub i32 %950, %949
  %952 = lshr i16 %926, 8
  %953 = trunc i16 %952 to i8
  %954 = getelementptr inbounds i8, i8* %901, i64 5
  store i8 %953, i8* %925, align 1
  %955 = load i16, i16* %47, align 8
  %956 = trunc i16 %955 to i8
  %957 = getelementptr inbounds i8, i8* %901, i64 6
  store i8 %956, i8* %954, align 1
  %958 = lshr i32 %949, 8
  %959 = trunc i32 %958 to i8
  %960 = getelementptr inbounds i8, i8* %901, i64 7
  store i8 %959, i8* %957, align 1
  %961 = trunc i32 %949 to i8
  %962 = getelementptr inbounds i8, i8* %901, i64 8
  store i8 %961, i8* %960, align 1
  %963 = lshr i32 %948, 8
  %964 = trunc i32 %963 to i8
  %965 = getelementptr inbounds i8, i8* %901, i64 9
  store i8 %964, i8* %962, align 1
  %966 = trunc i32 %948 to i8
  %967 = getelementptr inbounds i8, i8* %901, i64 10
  store i8 %966, i8* %965, align 1
  %968 = lshr i32 %951, 8
  %969 = trunc i32 %968 to i8
  %970 = getelementptr inbounds i8, i8* %901, i64 11
  store i8 %969, i8* %967, align 1
  %971 = trunc i32 %951 to i8
  store i8 %971, i8* %970, align 1
  %972 = load i16, i16* %47, align 8
  br label %973

973:                                              ; preds = %944, %928
  %974 = phi i16 [ 0, %928 ], [ %972, %944 ]
  %975 = phi i8 [ %943, %928 ], [ %971, %944 ]
  %976 = phi i8 [ %941, %928 ], [ %969, %944 ]
  %977 = phi i8 [ %939, %928 ], [ %966, %944 ]
  %978 = phi i8 [ %937, %928 ], [ %964, %944 ]
  %979 = phi i8 [ %935, %928 ], [ %961, %944 ]
  %980 = phi i8 [ %933, %928 ], [ %959, %944 ]
  %981 = phi i8 [ %931, %928 ], [ %956, %944 ]
  %982 = phi i8 [ %929, %928 ], [ %953, %944 ]
  %983 = and i64 %911, 4278190080
  %984 = and i64 %915, 16711680
  %985 = or i64 %984, %983
  %986 = and i64 %919, 65280
  %987 = or i64 %985, %986
  %988 = and i64 %923, 255
  %989 = or i64 %987, %988
  %990 = zext i8 %982 to i64
  %991 = shl nuw nsw i64 %990, 24
  %992 = zext i8 %981 to i64
  %993 = shl nuw nsw i64 %992, 16
  %994 = zext i8 %980 to i64
  %995 = shl nuw nsw i64 %994, 8
  %996 = zext i8 %979 to i64
  %997 = or i64 %995, %996
  %998 = or i64 %997, %993
  %999 = or i64 %998, %991
  %1000 = zext i8 %978 to i64
  %1001 = shl nuw nsw i64 %1000, 24
  %1002 = zext i8 %977 to i64
  %1003 = shl nuw nsw i64 %1002, 16
  %1004 = zext i8 %976 to i64
  %1005 = shl nuw nsw i64 %1004, 8
  %1006 = zext i8 %975 to i64
  %1007 = or i64 %1005, %1006
  %1008 = or i64 %1007, %1003
  %1009 = or i64 %1008, %1001
  %1010 = add nuw nsw i64 %1009, %989
  %1011 = add nuw nsw i64 %1010, %999
  %1012 = zext i16 %974 to i64
  call void @qsort(i8* %884, i64 %1012, i64 8, i32 (i8*, i8*)* nonnull @compare_tags) #17
  %1013 = load i16, i16* %47, align 8
  %1014 = icmp ugt i16 %1013, 1
  br i1 %1014, label %1015, label %1032

1015:                                             ; preds = %973
  %1016 = zext i16 %1013 to i64
  %1017 = load %struct.WOFF2_TableRec_*, %struct.WOFF2_TableRec_** %885, align 8
  %1018 = getelementptr inbounds %struct.WOFF2_TableRec_, %struct.WOFF2_TableRec_* %1017, i64 0, i32 1
  %1019 = load i64, i64* %1018, align 8
  br label %1022

1020:                                             ; preds = %1022
  %1021 = icmp eq i64 %1030, %1016
  br i1 %1021, label %1032, label %1022

1022:                                             ; preds = %1020, %1015
  %1023 = phi i64 [ %1019, %1015 ], [ %1028, %1020 ]
  %1024 = phi i64 [ 1, %1015 ], [ %1030, %1020 ]
  %1025 = getelementptr inbounds %struct.WOFF2_TableRec_*, %struct.WOFF2_TableRec_** %885, i64 %1024
  %1026 = load %struct.WOFF2_TableRec_*, %struct.WOFF2_TableRec_** %1025, align 8
  %1027 = getelementptr inbounds %struct.WOFF2_TableRec_, %struct.WOFF2_TableRec_* %1026, i64 0, i32 1
  %1028 = load i64, i64* %1027, align 8
  %1029 = icmp eq i64 %1028, %1023
  %1030 = add nuw nsw i64 %1024, 1
  br i1 %1029, label %1031, label %1020

1031:                                             ; preds = %1022
  store i32 8, i32* %23, align 4
  br label %3063

1032:                                             ; preds = %1020, %973
  %1033 = load i64, i64* %54, align 8
  %1034 = icmp eq i64 %1033, 0
  br i1 %1034, label %1035, label %1036

1035:                                             ; preds = %1032
  store i32 8, i32* %23, align 4
  br label %3063

1036:                                             ; preds = %1032
  %1037 = icmp ugt i64 %1033, %900
  br i1 %1037, label %1038, label %1039

1038:                                             ; preds = %1036
  store i32 8, i32* %23, align 4
  br label %3063

1039:                                             ; preds = %1036
  %1040 = call i8* @ft_mem_qalloc(%struct.FT_MemoryRec_* %508, i64 %1033, i32* nonnull %23) #17
  %1041 = load i32, i32* %23, align 4
  %1042 = icmp eq i32 %1041, 0
  br i1 %1042, label %1043, label %3063

1043:                                             ; preds = %1039
  %1044 = load i64, i64* %60, align 8
  %1045 = call i32 @FT_Stream_EnterFrame(%struct.FT_StreamRec_* %99, i64 %1044) #17
  store i32 %1045, i32* %23, align 4
  %1046 = icmp eq i32 %1045, 0
  br i1 %1046, label %1047, label %3063

1047:                                             ; preds = %1043
  store i32 7, i32* %23, align 4
  call void @FT_Stream_ExitFrame(%struct.FT_StreamRec_* %99) #17
  %1048 = load i32, i32* %23, align 4
  %1049 = icmp eq i32 %1048, 0
  br i1 %1049, label %1050, label %3063

1050:                                             ; preds = %1047
  %1051 = load i64, i64* %54, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %62) #17
  store i32 0, i32* %22, align 4
  %1052 = load i16, i16* %47, align 8
  %1053 = zext i16 %1052 to i64
  %1054 = shl nuw nsw i64 %1053, 4
  %1055 = or i64 %1054, 12
  %1056 = icmp eq i16 %1052, 0
  br i1 %1056, label %1094, label %1059

1057:                                             ; preds = %1059
  %1058 = icmp eq i64 %1066, %1053
  br i1 %1058, label %1067, label %1059

1059:                                             ; preds = %1050, %1057
  %1060 = phi i64 [ %1066, %1057 ], [ 0, %1050 ]
  %1061 = getelementptr inbounds %struct.WOFF2_TableRec_*, %struct.WOFF2_TableRec_** %885, i64 %1060
  %1062 = load %struct.WOFF2_TableRec_*, %struct.WOFF2_TableRec_** %1061, align 8
  %1063 = getelementptr inbounds %struct.WOFF2_TableRec_, %struct.WOFF2_TableRec_* %1062, i64 0, i32 1
  %1064 = load i64, i64* %1063, align 8
  %1065 = icmp eq i64 %1064, 1735162214
  %1066 = add nuw nsw i64 %1060, 1
  br i1 %1065, label %1067, label %1057

1067:                                             ; preds = %1059, %1057
  %1068 = phi %struct.WOFF2_TableRec_* [ null, %1057 ], [ %1062, %1059 ]
  br label %1071

1069:                                             ; preds = %1071
  %1070 = icmp eq i64 %1078, %1053
  br i1 %1070, label %1079, label %1071

1071:                                             ; preds = %1069, %1067
  %1072 = phi i64 [ %1078, %1069 ], [ 0, %1067 ]
  %1073 = getelementptr inbounds %struct.WOFF2_TableRec_*, %struct.WOFF2_TableRec_** %885, i64 %1072
  %1074 = load %struct.WOFF2_TableRec_*, %struct.WOFF2_TableRec_** %1073, align 8
  %1075 = getelementptr inbounds %struct.WOFF2_TableRec_, %struct.WOFF2_TableRec_* %1074, i64 0, i32 1
  %1076 = load i64, i64* %1075, align 8
  %1077 = icmp eq i64 %1076, 1819239265
  %1078 = add nuw nsw i64 %1072, 1
  br i1 %1077, label %1081, label %1069

1079:                                             ; preds = %1069
  %1080 = icmp eq %struct.WOFF2_TableRec_* %1068, null
  br i1 %1080, label %1094, label %3022

1081:                                             ; preds = %1071
  %1082 = icmp eq %struct.WOFF2_TableRec_* %1068, null
  %1083 = icmp eq %struct.WOFF2_TableRec_* %1074, null
  %1084 = xor i1 %1082, %1083
  br i1 %1084, label %3022, label %1085

1085:                                             ; preds = %1081
  br i1 %1082, label %1094, label %1086

1086:                                             ; preds = %1085
  %1087 = getelementptr inbounds %struct.WOFF2_TableRec_, %struct.WOFF2_TableRec_* %1068, i64 0, i32 4
  %1088 = load i64, i64* %1087, align 8
  %1089 = getelementptr inbounds %struct.WOFF2_TableRec_, %struct.WOFF2_TableRec_* %1074, i64 0, i32 4
  %1090 = load i64, i64* %1089, align 8
  %1091 = xor i64 %1090, %1088
  %1092 = and i64 %1091, 256
  %1093 = icmp eq i64 %1092, 0
  br i1 %1093, label %1094, label %3022

1094:                                             ; preds = %1086, %1085, %1079, %1050
  %1095 = phi %struct.WOFF2_TableRec_* [ null, %1085 ], [ %1068, %1086 ], [ null, %1079 ], [ null, %1050 ]
  %1096 = phi %struct.WOFF2_TableRec_* [ %1074, %1085 ], [ %1074, %1086 ], [ null, %1079 ], [ null, %1050 ]
  %1097 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %508, i64 1, i64 0, i64 16, i8* null, i32* nonnull %22) #17
  %1098 = load i32, i32* %22, align 4
  %1099 = icmp eq i32 %1098, 0
  br i1 %1099, label %1100, label %3023

1100:                                             ; preds = %1094
  %1101 = call i8* @ft_mem_alloc(%struct.FT_MemoryRec_* %508, i64 80, i32* nonnull %22) #17
  %1102 = bitcast i8* %1101 to %struct.FT_StreamRec_*
  %1103 = load i32, i32* %22, align 4
  %1104 = icmp eq i32 %1103, 0
  br i1 %1104, label %1105, label %3023

1105:                                             ; preds = %1100
  call void @FT_Stream_OpenMemory(%struct.FT_StreamRec_* %1102, i8* %1040, i64 %1051) #17
  br i1 %1056, label %3010, label %1106

1106:                                             ; preds = %1105
  %1107 = bitcast i8* %1101 to i8**
  %1108 = getelementptr inbounds i8, i8* %1040, i64 8
  %1109 = getelementptr inbounds i8, i8* %1097, i64 1
  %1110 = getelementptr inbounds i8, i8* %1097, i64 2
  %1111 = getelementptr inbounds i8, i8* %1097, i64 3
  %1112 = getelementptr inbounds i8, i8* %1097, i64 4
  %1113 = getelementptr inbounds i8, i8* %1097, i64 5
  %1114 = getelementptr inbounds i8, i8* %1097, i64 6
  %1115 = getelementptr inbounds i8, i8* %1097, i64 7
  %1116 = getelementptr inbounds i8, i8* %1097, i64 8
  %1117 = getelementptr inbounds i8, i8* %1097, i64 9
  %1118 = getelementptr inbounds i8, i8* %1097, i64 10
  %1119 = getelementptr inbounds i8, i8* %1097, i64 11
  %1120 = getelementptr inbounds i8, i8* %1097, i64 12
  %1121 = getelementptr inbounds i8, i8* %1097, i64 13
  %1122 = getelementptr inbounds i8, i8* %1097, i64 14
  %1123 = getelementptr inbounds i8, i8* %1097, i64 15
  %1124 = icmp eq %struct.WOFF2_TableRec_* %1096, null
  %1125 = getelementptr inbounds %struct.WOFF2_TableRec_, %struct.WOFF2_TableRec_* %1096, i64 0, i32 5
  %1126 = getelementptr inbounds %struct.WOFF2_TableRec_, %struct.WOFF2_TableRec_* %1095, i64 0, i32 5
  %1127 = getelementptr inbounds %struct.WOFF2_TableRec_, %struct.WOFF2_TableRec_* %1096, i64 0, i32 2
  %1128 = getelementptr inbounds %struct.WOFF2_TableRec_, %struct.WOFF2_TableRec_* %1095, i64 0, i32 3
  %1129 = getelementptr inbounds %struct.WOFF2_TableRec_, %struct.WOFF2_TableRec_* %1095, i64 0, i32 7
  %1130 = getelementptr inbounds %struct.WOFF2_TableRec_, %struct.WOFF2_TableRec_* %1095, i64 0, i32 2
  %1131 = getelementptr inbounds %struct.WOFF2_TableRec_, %struct.WOFF2_TableRec_* %1096, i64 0, i32 7
  br label %1134

1132:                                             ; preds = %2966
  %1133 = icmp eq i64 %2972, %1053
  br i1 %1133, label %2975, label %1134

1134:                                             ; preds = %1132, %1106
  %1135 = phi i16 [ 0, %1106 ], [ %2824, %1132 ]
  %1136 = phi i8* [ null, %1106 ], [ %2825, %1132 ]
  %1137 = phi i16* [ null, %1106 ], [ %2826, %1132 ]
  %1138 = phi i64 [ %900, %1106 ], [ %2967, %1132 ]
  %1139 = phi i64 [ 0, %1106 ], [ %2972, %1132 ]
  %1140 = phi i8 [ 0, %1106 ], [ %2832, %1132 ]
  %1141 = phi i64 [ %1011, %1106 ], [ %2940, %1132 ]
  %1142 = phi i64 [ 12, %1106 ], [ %2879, %1132 ]
  %1143 = phi i16 [ 0, %1106 ], [ %1178, %1132 ]
  %1144 = phi i64 [ 0, %1106 ], [ %2831, %1132 ]
  %1145 = phi i64 [ %1055, %1106 ], [ %2969, %1132 ]
  %1146 = phi i64 [ %902, %1106 ], [ %2968, %1132 ]
  %1147 = getelementptr inbounds %struct.WOFF2_TableRec_*, %struct.WOFF2_TableRec_** %885, i64 %1139
  %1148 = load %struct.WOFF2_TableRec_*, %struct.WOFF2_TableRec_** %1147, align 8
  %1149 = getelementptr inbounds %struct.WOFF2_TableRec_, %struct.WOFF2_TableRec_* %1148, i64 0, i32 1
  %1150 = load i64, i64* %1149, align 8
  %1151 = getelementptr inbounds %struct.WOFF2_TableRec_, %struct.WOFF2_TableRec_* %1148, i64 0, i32 2
  %1152 = load i64, i64* %1151, align 8
  %1153 = getelementptr inbounds %struct.WOFF2_TableRec_, %struct.WOFF2_TableRec_* %1148, i64 0, i32 4
  %1154 = load i64, i64* %1153, align 8
  %1155 = getelementptr inbounds %struct.WOFF2_TableRec_, %struct.WOFF2_TableRec_* %1148, i64 0, i32 5
  %1156 = load i64, i64* %1155, align 8
  %1157 = getelementptr inbounds %struct.WOFF2_TableRec_, %struct.WOFF2_TableRec_* %1148, i64 0, i32 6
  %1158 = load i64, i64* %1157, align 8
  %1159 = getelementptr inbounds %struct.WOFF2_TableRec_, %struct.WOFF2_TableRec_* %1148, i64 0, i32 7
  %1160 = load i64, i64* %1159, align 8
  %1161 = call i32 @FT_Stream_Seek(%struct.FT_StreamRec_* %1102, i64 %1156) #17
  store i32 %1161, i32* %22, align 4
  %1162 = icmp ne i32 %1161, 0
  %1163 = add i64 %1158, %1156
  %1164 = icmp ugt i64 %1163, %1051
  %1165 = or i1 %1164, %1162
  br i1 %1165, label %3015, label %1166

1166:                                             ; preds = %1134
  %1167 = icmp eq i64 %1150, 1751672161
  br i1 %1167, label %1168, label %1177

1168:                                             ; preds = %1166
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %63) #17
  %1169 = call i32 @FT_Stream_Skip(%struct.FT_StreamRec_* %1102, i64 34) #17
  store i32 %1169, i32* %18, align 4
  %1170 = icmp eq i32 %1169, 0
  br i1 %1170, label %1171, label %1175

1171:                                             ; preds = %1168
  %1172 = call zeroext i16 @FT_Stream_ReadUShort(%struct.FT_StreamRec_* %1102, i32* nonnull %18) #17
  %1173 = load i32, i32* %18, align 4
  %1174 = icmp eq i32 %1173, 0
  br i1 %1174, label %1176, label %1175

1175:                                             ; preds = %1171, %1168
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %63) #17
  br label %3010

1176:                                             ; preds = %1171
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %63) #17
  br label %1177

1177:                                             ; preds = %1176, %1166
  %1178 = phi i16 [ %1172, %1176 ], [ %1143, %1166 ]
  %1179 = and i64 %1154, 256
  %1180 = icmp eq i64 %1179, 0
  br i1 %1180, label %1181, label %1307

1181:                                             ; preds = %1177
  %1182 = icmp eq i64 %1150, 1751474532
  br i1 %1182, label %1183, label %1190

1183:                                             ; preds = %1181
  %1184 = icmp ult i64 %1158, 12
  br i1 %1184, label %3010, label %1185

1185:                                             ; preds = %1183
  %1186 = getelementptr inbounds i8, i8* %1108, i64 %1156
  %1187 = getelementptr inbounds i8, i8* %1186, i64 1
  store i8 0, i8* %1186, align 1
  %1188 = getelementptr inbounds i8, i8* %1187, i64 1
  store i8 0, i8* %1187, align 1
  %1189 = getelementptr inbounds i8, i8* %1188, i64 1
  store i8 0, i8* %1188, align 1
  store i8 0, i8* %1189, align 1
  br label %1190

1190:                                             ; preds = %1185, %1181
  %1191 = getelementptr inbounds i8, i8* %1040, i64 %1156
  %1192 = and i64 %1158, -4
  %1193 = icmp eq i64 %1192, 0
  br i1 %1193, label %1221, label %1194

1194:                                             ; preds = %1190, %1194
  %1195 = phi i64 [ %1219, %1194 ], [ 0, %1190 ]
  %1196 = phi i64 [ %1218, %1194 ], [ 0, %1190 ]
  %1197 = getelementptr inbounds i8, i8* %1191, i64 %1195
  %1198 = load i8, i8* %1197, align 1
  %1199 = zext i8 %1198 to i64
  %1200 = shl nuw nsw i64 %1199, 24
  %1201 = or i64 %1195, 1
  %1202 = getelementptr inbounds i8, i8* %1191, i64 %1201
  %1203 = load i8, i8* %1202, align 1
  %1204 = zext i8 %1203 to i64
  %1205 = shl nuw nsw i64 %1204, 16
  %1206 = or i64 %1205, %1200
  %1207 = or i64 %1195, 2
  %1208 = getelementptr inbounds i8, i8* %1191, i64 %1207
  %1209 = load i8, i8* %1208, align 1
  %1210 = zext i8 %1209 to i64
  %1211 = shl nuw nsw i64 %1210, 8
  %1212 = or i64 %1206, %1211
  %1213 = or i64 %1195, 3
  %1214 = getelementptr inbounds i8, i8* %1191, i64 %1213
  %1215 = load i8, i8* %1214, align 1
  %1216 = zext i8 %1215 to i64
  %1217 = or i64 %1212, %1216
  %1218 = add i64 %1217, %1196
  %1219 = add nuw i64 %1195, 4
  %1220 = icmp ult i64 %1219, %1192
  br i1 %1220, label %1194, label %1221

1221:                                             ; preds = %1194, %1190
  %1222 = phi i64 [ 0, %1190 ], [ %1218, %1194 ]
  %1223 = icmp eq i64 %1158, %1192
  br i1 %1223, label %1288, label %1224

1224:                                             ; preds = %1221
  %1225 = icmp ugt i64 %1158, %1192
  br i1 %1225, label %1226, label %1285

1226:                                             ; preds = %1224
  %1227 = sub i64 %1158, %1192
  %1228 = icmp ult i64 %1227, 4
  br i1 %1228, label %1269, label %1229

1229:                                             ; preds = %1226
  %1230 = and i64 %1227, -4
  %1231 = add i64 %1192, %1230
  %1232 = insertelement <2 x i64> undef, i64 %1192, i32 0
  %1233 = shufflevector <2 x i64> %1232, <2 x i64> undef, <2 x i32> zeroinitializer
  %1234 = add <2 x i64> %1233, <i64 0, i64 1>
  br label %1235

1235:                                             ; preds = %1235, %1229
  %1236 = phi i64 [ 0, %1229 ], [ %1260, %1235 ]
  %1237 = phi <2 x i64> [ zeroinitializer, %1229 ], [ %1258, %1235 ]
  %1238 = phi <2 x i64> [ zeroinitializer, %1229 ], [ %1259, %1235 ]
  %1239 = phi <2 x i64> [ %1234, %1229 ], [ %1261, %1235 ]
  %1240 = add i64 %1192, %1236
  %1241 = getelementptr inbounds i8, i8* %1191, i64 %1240
  %1242 = bitcast i8* %1241 to <2 x i8>*
  %1243 = load <2 x i8>, <2 x i8>* %1242, align 1
  %1244 = getelementptr inbounds i8, i8* %1241, i64 2
  %1245 = bitcast i8* %1244 to <2 x i8>*
  %1246 = load <2 x i8>, <2 x i8>* %1245, align 1
  %1247 = zext <2 x i8> %1243 to <2 x i64>
  %1248 = zext <2 x i8> %1246 to <2 x i64>
  %1249 = shl <2 x i64> %1239, <i64 3, i64 3>
  %1250 = shl <2 x i64> %1239, <i64 3, i64 3>
  %1251 = add <2 x i64> %1250, <i64 16, i64 16>
  %1252 = and <2 x i64> %1249, <i64 24, i64 24>
  %1253 = and <2 x i64> %1251, <i64 24, i64 24>
  %1254 = xor <2 x i64> %1252, <i64 24, i64 24>
  %1255 = xor <2 x i64> %1253, <i64 24, i64 24>
  %1256 = shl <2 x i64> %1247, %1254
  %1257 = shl <2 x i64> %1248, %1255
  %1258 = or <2 x i64> %1256, %1237
  %1259 = or <2 x i64> %1257, %1238
  %1260 = add i64 %1236, 4
  %1261 = add <2 x i64> %1239, <i64 4, i64 4>
  %1262 = icmp eq i64 %1260, %1230
  br i1 %1262, label %1263, label %1235, !llvm.loop !43

1263:                                             ; preds = %1235
  %1264 = or <2 x i64> %1259, %1258
  %1265 = shufflevector <2 x i64> %1264, <2 x i64> undef, <2 x i32> <i32 1, i32 undef>
  %1266 = or <2 x i64> %1264, %1265
  %1267 = extractelement <2 x i64> %1266, i32 0
  %1268 = icmp eq i64 %1227, %1230
  br i1 %1268, label %1285, label %1269

1269:                                             ; preds = %1263, %1226
  %1270 = phi i64 [ 0, %1226 ], [ %1267, %1263 ]
  %1271 = phi i64 [ %1192, %1226 ], [ %1231, %1263 ]
  br label %1272

1272:                                             ; preds = %1269, %1272
  %1273 = phi i64 [ %1282, %1272 ], [ %1270, %1269 ]
  %1274 = phi i64 [ %1283, %1272 ], [ %1271, %1269 ]
  %1275 = getelementptr inbounds i8, i8* %1191, i64 %1274
  %1276 = load i8, i8* %1275, align 1
  %1277 = zext i8 %1276 to i64
  %1278 = shl i64 %1274, 3
  %1279 = and i64 %1278, 24
  %1280 = xor i64 %1279, 24
  %1281 = shl i64 %1277, %1280
  %1282 = or i64 %1281, %1273
  %1283 = add nuw i64 %1274, 1
  %1284 = icmp eq i64 %1283, %1158
  br i1 %1284, label %1285, label %1272, !llvm.loop !44

1285:                                             ; preds = %1272, %1263, %1224
  %1286 = phi i64 [ 0, %1224 ], [ %1267, %1263 ], [ %1282, %1272 ]
  %1287 = add i64 %1286, %1222
  br label %1288

1288:                                             ; preds = %1285, %1221
  %1289 = phi i64 [ %1287, %1285 ], [ %1222, %1221 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %76) #17
  store i32 0, i32* %17, align 4
  %1290 = inttoptr i64 %1146 to i8*
  %1291 = add i64 %1158, %1145
  %1292 = icmp ugt i64 %1291, 31457280
  br i1 %1292, label %1299, label %1293

1293:                                             ; preds = %1288
  %1294 = icmp ugt i64 %1291, %1138
  br i1 %1294, label %1295, label %1300

1295:                                             ; preds = %1293
  %1296 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %508, i64 1, i64 %1138, i64 %1291, i8* %1290, i32* nonnull %17) #17
  %1297 = load i32, i32* %17, align 4
  %1298 = icmp eq i32 %1297, 0
  br i1 %1298, label %1300, label %1299

1299:                                             ; preds = %1295, %1288
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %76) #17
  br label %3010

1300:                                             ; preds = %1295, %1293
  %1301 = phi i64 [ %1138, %1293 ], [ %1291, %1295 ]
  %1302 = phi i8* [ %1290, %1293 ], [ %1296, %1295 ]
  %1303 = getelementptr inbounds i8, i8* %1302, i64 %1145
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1303, i8* align 1 %1191, i64 %1158, i1 false) #17
  %1304 = ptrtoint i8* %1302 to i64
  %1305 = load i32, i32* %17, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %76) #17
  %1306 = icmp eq i32 %1305, 0
  br i1 %1306, label %2823, label %3008

1307:                                             ; preds = %1177
  switch i64 %1150, label %3010 [
    i64 1735162214, label %1308
    i64 1819239265, label %2823
    i64 1752003704, label %2488
  ]

1308:                                             ; preds = %1307
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %67) #17
  store i32 0, i32* %13, align 4
  %1309 = call i64 @FT_Stream_Pos(%struct.FT_StreamRec_* %1102) #17
  %1310 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %508, i64 24, i64 0, i64 7, i8* null, i32* nonnull %13) #17
  %1311 = bitcast i8* %1310 to %struct.WOFF2_SubstreamRec_*
  %1312 = load i32, i32* %13, align 4
  %1313 = icmp eq i32 %1312, 0
  br i1 %1313, label %1314, label %2473

1314:                                             ; preds = %1308
  %1315 = call i32 @FT_Stream_Skip(%struct.FT_StreamRec_* %1102, i64 4) #17
  store i32 %1315, i32* %13, align 4
  %1316 = icmp eq i32 %1315, 0
  br i1 %1316, label %1317, label %2473

1317:                                             ; preds = %1314
  %1318 = call zeroext i16 @FT_Stream_ReadUShort(%struct.FT_StreamRec_* %1102, i32* nonnull %13) #17
  %1319 = load i32, i32* %13, align 4
  %1320 = icmp eq i32 %1319, 0
  br i1 %1320, label %1321, label %2473

1321:                                             ; preds = %1317
  %1322 = call zeroext i16 @FT_Stream_ReadUShort(%struct.FT_StreamRec_* %1102, i32* nonnull %13) #17
  %1323 = load i32, i32* %13, align 4
  %1324 = icmp eq i32 %1323, 0
  br i1 %1324, label %1325, label %2473

1325:                                             ; preds = %1321
  %1326 = icmp eq i16 %1322, 0
  %1327 = select i1 %1326, i64 2, i64 4
  %1328 = zext i16 %1318 to i64
  %1329 = add nuw nsw i64 %1328, 1
  %1330 = mul nuw nsw i64 %1327, %1329
  %1331 = load i64, i64* %1127, align 8
  %1332 = icmp eq i64 %1331, %1330
  br i1 %1332, label %1333, label %2459

1333:                                             ; preds = %1325
  %1334 = load i64, i64* %1128, align 8
  %1335 = icmp ult i64 %1334, 36
  br i1 %1335, label %2459, label %1336

1336:                                             ; preds = %1333, %1347
  %1337 = phi i64 [ %1354, %1347 ], [ 0, %1333 ]
  %1338 = phi i32 [ %1353, %1347 ], [ 36, %1333 ]
  %1339 = call i64 @FT_Stream_ReadULong(%struct.FT_StreamRec_* %1102, i32* nonnull %13) #17
  %1340 = load i32, i32* %13, align 4
  %1341 = icmp eq i32 %1340, 0
  br i1 %1341, label %1342, label %2473

1342:                                             ; preds = %1336
  %1343 = load i64, i64* %1128, align 8
  %1344 = zext i32 %1338 to i64
  %1345 = sub i64 %1343, %1344
  %1346 = icmp ugt i64 %1339, %1345
  br i1 %1346, label %2459, label %1347

1347:                                             ; preds = %1342
  %1348 = add i64 %1309, %1344
  %1349 = getelementptr inbounds %struct.WOFF2_SubstreamRec_, %struct.WOFF2_SubstreamRec_* %1311, i64 %1337, i32 0
  store i64 %1348, i64* %1349, align 8
  %1350 = getelementptr inbounds %struct.WOFF2_SubstreamRec_, %struct.WOFF2_SubstreamRec_* %1311, i64 %1337, i32 1
  store i64 %1348, i64* %1350, align 8
  %1351 = getelementptr inbounds %struct.WOFF2_SubstreamRec_, %struct.WOFF2_SubstreamRec_* %1311, i64 %1337, i32 2
  store i64 %1339, i64* %1351, align 8
  %1352 = trunc i64 %1339 to i32
  %1353 = add i32 %1338, %1352
  %1354 = add nuw nsw i64 %1337, 1
  %1355 = icmp eq i64 %1354, 7
  br i1 %1355, label %1356, label %1336

1356:                                             ; preds = %1347
  %1357 = zext i16 %1318 to i32
  %1358 = add nuw nsw i32 %1357, 1
  %1359 = zext i32 %1358 to i64
  %1360 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %508, i64 8, i64 0, i64 %1359, i8* null, i32* nonnull %13) #17
  %1361 = bitcast i8* %1360 to i64*
  %1362 = load i32, i32* %13, align 4
  %1363 = icmp eq i32 %1362, 0
  br i1 %1363, label %1364, label %2473

1364:                                             ; preds = %1356
  %1365 = getelementptr inbounds i8, i8* %1310, i64 128
  %1366 = bitcast i8* %1365 to i64*
  %1367 = load i64, i64* %1366, align 8
  %1368 = add nuw nsw i32 %1357, 31
  %1369 = lshr i32 %1368, 5
  %1370 = shl nuw nsw i32 %1369, 2
  %1371 = zext i32 %1370 to i64
  %1372 = add i64 %1367, %1371
  store i64 %1372, i64* %1366, align 8
  %1373 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %508, i64 1, i64 0, i64 5120, i8* null, i32* nonnull %13) #17
  %1374 = load i32, i32* %13, align 4
  %1375 = icmp eq i32 %1374, 0
  br i1 %1375, label %1376, label %2473

1376:                                             ; preds = %1364
  %1377 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %508, i64 2, i64 0, i64 %1328, i8* null, i32* nonnull %13) #17
  %1378 = bitcast i8* %1377 to i16*
  %1379 = load i32, i32* %13, align 4
  %1380 = icmp eq i32 %1379, 0
  br i1 %1380, label %1381, label %2473

1381:                                             ; preds = %1376
  %1382 = icmp eq i16 %1318, 0
  br i1 %1382, label %2283, label %1383

1383:                                             ; preds = %1381
  %1384 = getelementptr inbounds i8, i8* %1310, i64 8
  %1385 = bitcast i8* %1384 to i64*
  %1386 = getelementptr inbounds i8, i8* %1310, i64 104
  %1387 = bitcast i8* %1386 to i64*
  %1388 = getelementptr inbounds i8, i8* %1310, i64 80
  %1389 = bitcast i8* %1388 to i64*
  %1390 = getelementptr inbounds i8, i8* %1310, i64 152
  %1391 = bitcast i8* %1390 to i64*
  %1392 = getelementptr inbounds i8, i8* %1310, i64 32
  %1393 = bitcast i8* %1392 to i64*
  %1394 = getelementptr inbounds i8, i8* %1310, i64 64
  %1395 = bitcast i8* %1394 to i64*
  %1396 = getelementptr inbounds i8, i8* %1310, i64 56
  %1397 = bitcast i8* %1396 to i64*
  %1398 = getelementptr inbounds i8, i8* %1310, i64 72
  %1399 = getelementptr inbounds i8, i8* %1310, i64 88
  %1400 = bitcast i8* %1399 to i64*
  %1401 = bitcast i8* %1398 to i64*
  br label %1402

1402:                                             ; preds = %2278, %1383
  %1403 = phi i64 [ %1138, %1383 ], [ %2172, %2278 ]
  %1404 = phi i64 [ 0, %1383 ], [ %2274, %2278 ]
  %1405 = phi i64 [ 0, %1383 ], [ %2279, %2278 ]
  %1406 = phi i8* [ %1373, %1383 ], [ %2129, %2278 ]
  %1407 = phi i64 [ 5120, %1383 ], [ %2128, %2278 ]
  %1408 = phi i64 [ %1145, %1383 ], [ %2174, %2278 ]
  %1409 = phi i64 [ %1146, %1383 ], [ %2175, %2278 ]
  %1410 = trunc i64 %1405 to i32
  %1411 = lshr i64 %1405, 3
  %1412 = and i64 %1411, 536870911
  %1413 = add i64 %1412, %1367
  %1414 = call i32 @FT_Stream_Seek(%struct.FT_StreamRec_* %1102, i64 %1413) #17
  store i32 %1414, i32* %13, align 4
  %1415 = icmp eq i32 %1414, 0
  br i1 %1415, label %1416, label %2473

1416:                                             ; preds = %1402
  %1417 = call signext i8 @FT_Stream_ReadChar(%struct.FT_StreamRec_* %1102, i32* nonnull %13) #17
  %1418 = load i32, i32* %13, align 4
  %1419 = icmp eq i32 %1418, 0
  br i1 %1419, label %1420, label %2473

1420:                                             ; preds = %1416
  %1421 = zext i8 %1417 to i32
  %1422 = and i32 %1410, 7
  %1423 = lshr i32 128, %1422
  %1424 = and i32 %1423, %1421
  %1425 = icmp eq i32 %1424, 0
  %1426 = load i64, i64* %1385, align 8
  %1427 = call i32 @FT_Stream_Seek(%struct.FT_StreamRec_* %1102, i64 %1426) #17
  store i32 %1427, i32* %13, align 4
  %1428 = icmp eq i32 %1427, 0
  br i1 %1428, label %1429, label %2473

1429:                                             ; preds = %1420
  %1430 = call zeroext i16 @FT_Stream_ReadUShort(%struct.FT_StreamRec_* %1102, i32* nonnull %13) #17
  %1431 = load i32, i32* %13, align 4
  %1432 = icmp eq i32 %1431, 0
  br i1 %1432, label %1433, label %2473

1433:                                             ; preds = %1429
  %1434 = load i64, i64* %1385, align 8
  %1435 = add i64 %1434, 2
  store i64 %1435, i64* %1385, align 8
  %1436 = zext i16 %1430 to i32
  switch i16 %1430, label %1557 [
    i16 -1, label %1437
    i16 0, label %2118
  ]

1437:                                             ; preds = %1433
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %68) #17
  store i16 0, i16* %14, align 2
  br i1 %1425, label %1555, label %1438

1438:                                             ; preds = %1437
  %1439 = load i64, i64* %1387, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %69) #17
  %1440 = call i32 @FT_Stream_Seek(%struct.FT_StreamRec_* %1102, i64 %1439) #17
  store i32 %1440, i32* %12, align 4
  %1441 = icmp eq i32 %1440, 0
  br i1 %1441, label %1442, label %1478

1442:                                             ; preds = %1438, %1474
  %1443 = phi i8 [ %1456, %1474 ], [ 0, %1438 ]
  %1444 = phi i16 [ %1448, %1474 ], [ 32, %1438 ]
  %1445 = and i16 %1444, 32
  %1446 = icmp eq i16 %1445, 0
  br i1 %1446, label %1479, label %1447

1447:                                             ; preds = %1442
  %1448 = call zeroext i16 @FT_Stream_ReadUShort(%struct.FT_StreamRec_* %1102, i32* nonnull %12) #17
  %1449 = load i32, i32* %12, align 4
  %1450 = icmp eq i32 %1449, 0
  br i1 %1450, label %1451, label %1478

1451:                                             ; preds = %1447
  %1452 = zext i16 %1448 to i32
  %1453 = lshr i16 %1448, 8
  %1454 = trunc i16 %1453 to i8
  %1455 = and i8 %1454, 1
  %1456 = or i8 %1455, %1443
  %1457 = and i32 %1452, 1
  %1458 = icmp eq i32 %1457, 0
  %1459 = select i1 %1458, i64 4, i64 6
  %1460 = and i32 %1452, 8
  %1461 = icmp eq i32 %1460, 0
  br i1 %1461, label %1464, label %1462

1462:                                             ; preds = %1451
  %1463 = add nuw nsw i64 %1459, 2
  br label %1474

1464:                                             ; preds = %1451
  %1465 = and i32 %1452, 64
  %1466 = icmp eq i32 %1465, 0
  br i1 %1466, label %1469, label %1467

1467:                                             ; preds = %1464
  %1468 = add nuw nsw i64 %1459, 4
  br label %1474

1469:                                             ; preds = %1464
  %1470 = lshr i16 %1448, 4
  %1471 = and i16 %1470, 8
  %1472 = zext i16 %1471 to i64
  %1473 = or i64 %1459, %1472
  br label %1474

1474:                                             ; preds = %1469, %1467, %1462
  %1475 = phi i64 [ %1463, %1462 ], [ %1468, %1467 ], [ %1473, %1469 ]
  %1476 = call i32 @FT_Stream_Skip(%struct.FT_StreamRec_* %1102, i64 %1475) #17
  store i32 %1476, i32* %12, align 4
  %1477 = icmp eq i32 %1476, 0
  br i1 %1477, label %1442, label %1478

1478:                                             ; preds = %1438, %1474, %1447
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %69) #17
  br label %1555

1479:                                             ; preds = %1442
  %1480 = call i64 @FT_Stream_Pos(%struct.FT_StreamRec_* %1102) #17
  %1481 = sub i64 %1480, %1439
  %1482 = load i32, i32* %12, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %69) #17
  %1483 = icmp eq i32 %1482, 0
  br i1 %1483, label %1484, label %1555

1484:                                             ; preds = %1479
  %1485 = icmp eq i8 %1443, 0
  br i1 %1485, label %1496, label %1486

1486:                                             ; preds = %1484
  %1487 = load i64, i64* %1389, align 8
  %1488 = call i32 @FT_Stream_Seek(%struct.FT_StreamRec_* %1102, i64 %1487) #17
  store i32 %1488, i32* %13, align 4
  %1489 = icmp eq i32 %1488, 0
  br i1 %1489, label %1490, label %1555

1490:                                             ; preds = %1486
  %1491 = call fastcc i32 @Read255UShort(%struct.FT_StreamRec_* %1102, i16* nonnull %14) #17
  store i32 %1491, i32* %13, align 4
  %1492 = icmp eq i32 %1491, 0
  br i1 %1492, label %1493, label %1555

1493:                                             ; preds = %1490
  %1494 = call i64 @FT_Stream_Pos(%struct.FT_StreamRec_* %1102) #17
  store i64 %1494, i64* %1389, align 8
  %1495 = load i16, i16* %14, align 2
  br label %1496

1496:                                             ; preds = %1493, %1484
  %1497 = phi i16 [ 0, %1484 ], [ %1495, %1493 ]
  %1498 = add i64 %1481, 12
  %1499 = zext i16 %1497 to i64
  %1500 = add i64 %1498, %1499
  %1501 = icmp ult i64 %1407, %1500
  br i1 %1501, label %1502, label %1506

1502:                                             ; preds = %1496
  %1503 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %508, i64 1, i64 %1407, i64 %1500, i8* %1406, i32* nonnull %13) #17
  %1504 = load i32, i32* %13, align 4
  %1505 = icmp eq i32 %1504, 0
  br i1 %1505, label %1506, label %1555

1506:                                             ; preds = %1502, %1496
  %1507 = phi i64 [ %1407, %1496 ], [ %1500, %1502 ]
  %1508 = phi i8* [ %1406, %1496 ], [ %1503, %1502 ]
  %1509 = getelementptr inbounds i8, i8* %1508, i64 1
  store i8 -1, i8* %1508, align 1
  store i8 -1, i8* %1509, align 1
  %1510 = load i64, i64* %1366, align 8
  %1511 = call i32 @FT_Stream_Seek(%struct.FT_StreamRec_* %1102, i64 %1510) #17
  store i32 %1511, i32* %13, align 4
  %1512 = icmp eq i32 %1511, 0
  br i1 %1512, label %1513, label %1555

1513:                                             ; preds = %1506
  %1514 = call zeroext i16 @FT_Stream_ReadUShort(%struct.FT_StreamRec_* %1102, i32* nonnull %13) #17
  %1515 = load i32, i32* %13, align 4
  %1516 = icmp eq i32 %1515, 0
  br i1 %1516, label %1517, label %1555

1517:                                             ; preds = %1513
  %1518 = load i64, i64* %1366, align 8
  %1519 = call i32 @FT_Stream_Seek(%struct.FT_StreamRec_* %1102, i64 %1518) #17
  store i32 %1519, i32* %13, align 4
  %1520 = icmp eq i32 %1519, 0
  br i1 %1520, label %1521, label %1555

1521:                                             ; preds = %1517
  %1522 = getelementptr inbounds i8, i8* %1508, i64 2
  %1523 = call i32 @FT_Stream_Read(%struct.FT_StreamRec_* %1102, i8* %1522, i64 8) #17
  store i32 %1523, i32* %13, align 4
  %1524 = icmp eq i32 %1523, 0
  br i1 %1524, label %1525, label %1555

1525:                                             ; preds = %1521
  %1526 = load i64, i64* %1366, align 8
  %1527 = add i64 %1526, 8
  store i64 %1527, i64* %1366, align 8
  %1528 = load i64, i64* %1387, align 8
  %1529 = call i32 @FT_Stream_Seek(%struct.FT_StreamRec_* %1102, i64 %1528) #17
  store i32 %1529, i32* %13, align 4
  %1530 = icmp eq i32 %1529, 0
  br i1 %1530, label %1531, label %1555

1531:                                             ; preds = %1525
  %1532 = getelementptr inbounds i8, i8* %1508, i64 10
  %1533 = call i32 @FT_Stream_Read(%struct.FT_StreamRec_* %1102, i8* %1532, i64 %1481) #17
  store i32 %1533, i32* %13, align 4
  %1534 = icmp eq i32 %1533, 0
  br i1 %1534, label %1535, label %1555

1535:                                             ; preds = %1531
  %1536 = load i64, i64* %1387, align 8
  %1537 = add i64 %1536, %1481
  store i64 %1537, i64* %1387, align 8
  %1538 = add i64 %1481, 10
  br i1 %1485, label %2119, label %1539

1539:                                             ; preds = %1535
  %1540 = getelementptr inbounds i8, i8* %1508, i64 %1538
  %1541 = lshr i16 %1497, 8
  %1542 = trunc i16 %1541 to i8
  %1543 = getelementptr inbounds i8, i8* %1540, i64 1
  store i8 %1542, i8* %1540, align 1
  %1544 = trunc i16 %1497 to i8
  store i8 %1544, i8* %1543, align 1
  %1545 = load i64, i64* %1391, align 8
  %1546 = call i32 @FT_Stream_Seek(%struct.FT_StreamRec_* %1102, i64 %1545) #17
  store i32 %1546, i32* %13, align 4
  %1547 = icmp eq i32 %1546, 0
  br i1 %1547, label %1548, label %1555

1548:                                             ; preds = %1539
  %1549 = getelementptr inbounds i8, i8* %1508, i64 %1498
  %1550 = call i32 @FT_Stream_Read(%struct.FT_StreamRec_* %1102, i8* %1549, i64 %1499) #17
  store i32 %1550, i32* %13, align 4
  %1551 = icmp eq i32 %1550, 0
  br i1 %1551, label %1552, label %1555

1552:                                             ; preds = %1548
  %1553 = load i64, i64* %1391, align 8
  %1554 = add i64 %1553, %1499
  store i64 %1554, i64* %1391, align 8
  br label %2119

1555:                                             ; preds = %1548, %1539, %1531, %1525, %1521, %1517, %1513, %1506, %1502, %1490, %1486, %1479, %1437, %1478
  %1556 = phi i8* [ %1406, %1478 ], [ %1406, %1437 ], [ %1406, %1479 ], [ %1406, %1490 ], [ %1406, %1486 ], [ %1503, %1502 ], [ %1508, %1513 ], [ %1508, %1506 ], [ %1508, %1521 ], [ %1508, %1517 ], [ %1508, %1531 ], [ %1508, %1525 ], [ %1508, %1548 ], [ %1508, %1539 ]
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %68) #17
  br label %2459

1557:                                             ; preds = %1433
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %70) #17
  store i16 -21846, i16* %15, align 2
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %71) #17
  store i16 -21846, i16* %16, align 2
  %1558 = zext i16 %1430 to i64
  %1559 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %508, i64 2, i64 0, i64 %1558, i8* null, i32* nonnull %13) #17
  %1560 = bitcast i8* %1559 to i16*
  %1561 = load i32, i32* %13, align 4
  %1562 = icmp eq i32 %1561, 0
  br i1 %1562, label %1563, label %2112

1563:                                             ; preds = %1557
  %1564 = load i64, i64* %1393, align 8
  %1565 = call i32 @FT_Stream_Seek(%struct.FT_StreamRec_* %1102, i64 %1564) #17
  store i32 %1565, i32* %13, align 4
  %1566 = icmp eq i32 %1565, 0
  br i1 %1566, label %1569, label %2112

1567:                                             ; preds = %1574
  %1568 = icmp eq i64 %1580, %1558
  br i1 %1568, label %1581, label %1569

1569:                                             ; preds = %1563, %1567
  %1570 = phi i64 [ %1580, %1567 ], [ 0, %1563 ]
  %1571 = phi i64 [ %1578, %1567 ], [ 0, %1563 ]
  %1572 = call fastcc i32 @Read255UShort(%struct.FT_StreamRec_* %1102, i16* nonnull %15) #17
  store i32 %1572, i32* %13, align 4
  %1573 = icmp eq i32 %1572, 0
  br i1 %1573, label %1574, label %2112

1574:                                             ; preds = %1569
  %1575 = load i16, i16* %15, align 2
  %1576 = getelementptr inbounds i16, i16* %1560, i64 %1570
  store i16 %1575, i16* %1576, align 2
  %1577 = zext i16 %1575 to i64
  %1578 = add i64 %1571, %1577
  %1579 = icmp ult i64 %1578, %1571
  %1580 = add nuw nsw i64 %1570, 1
  br i1 %1579, label %2112, label %1567

1581:                                             ; preds = %1567
  %1582 = call i64 @FT_Stream_Pos(%struct.FT_StreamRec_* %1102) #17
  store i64 %1582, i64* %1393, align 8
  %1583 = load i64, i64* %1395, align 8
  %1584 = icmp ugt i64 %1578, %1583
  br i1 %1584, label %2112, label %1585

1585:                                             ; preds = %1581
  %1586 = load i8*, i8** %1107, align 8
  %1587 = load i64, i64* %1397, align 8
  %1588 = getelementptr inbounds i8, i8* %1586, i64 %1587
  %1589 = load i64, i64* %1389, align 8
  %1590 = getelementptr inbounds i8, i8* %1586, i64 %1589
  %1591 = load i64, i64* %1400, align 8
  %1592 = load i64, i64* %1401, align 8
  %1593 = sub i64 %1589, %1592
  %1594 = icmp ult i64 %1591, %1593
  br i1 %1594, label %2112, label %1595

1595:                                             ; preds = %1585
  %1596 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %508, i64 12, i64 0, i64 %1578, i8* null, i32* nonnull %13) #17
  %1597 = bitcast i8* %1596 to %struct.WOFF2_PointRec_*
  %1598 = load i32, i32* %13, align 4
  %1599 = icmp eq i32 %1598, 0
  br i1 %1599, label %1600, label %2112

1600:                                             ; preds = %1595
  %1601 = sub i64 %1591, %1593
  %1602 = icmp ugt i64 %1578, %1601
  br i1 %1602, label %2112, label %1603

1603:                                             ; preds = %1600
  %1604 = icmp eq i64 %1578, 0
  br i1 %1604, label %1794, label %1605

1605:                                             ; preds = %1603, %1786
  %1606 = phi i64 [ %1792, %1786 ], [ 0, %1603 ]
  %1607 = phi i32 [ %1791, %1786 ], [ 0, %1603 ]
  %1608 = phi i64 [ %1625, %1786 ], [ 0, %1603 ]
  %1609 = phi i32 [ %1787, %1786 ], [ 0, %1603 ]
  %1610 = phi i32 [ %1776, %1786 ], [ 0, %1603 ]
  %1611 = getelementptr inbounds i8, i8* %1588, i64 %1606
  %1612 = load i8, i8* %1611, align 1
  %1613 = lshr i8 %1612, 7
  %1614 = xor i8 %1613, 1
  %1615 = and i8 %1612, 127
  %1616 = zext i8 %1615 to i32
  %1617 = icmp ult i8 %1615, 84
  br i1 %1617, label %1623, label %1618

1618:                                             ; preds = %1605
  %1619 = icmp ult i8 %1615, 120
  br i1 %1619, label %1623, label %1620

1620:                                             ; preds = %1618
  %1621 = icmp ult i8 %1615, 124
  %1622 = select i1 %1621, i64 3, i64 4
  br label %1623

1623:                                             ; preds = %1620, %1618, %1605
  %1624 = phi i64 [ 1, %1605 ], [ 2, %1618 ], [ %1622, %1620 ]
  %1625 = add i64 %1624, %1608
  %1626 = icmp ugt i64 %1625, %1601
  %1627 = icmp ult i64 %1625, %1608
  %1628 = or i1 %1626, %1627
  br i1 %1628, label %2112, label %1629

1629:                                             ; preds = %1623
  %1630 = icmp ult i8 %1615, 10
  br i1 %1630, label %1631, label %1642

1631:                                             ; preds = %1629
  %1632 = shl nuw nsw i32 %1616, 7
  %1633 = and i32 %1632, 1792
  %1634 = getelementptr inbounds i8, i8* %1590, i64 %1608
  %1635 = load i8, i8* %1634, align 1
  %1636 = zext i8 %1635 to i32
  %1637 = or i32 %1633, %1636
  %1638 = and i8 %1612, 1
  %1639 = icmp eq i8 %1638, 0
  %1640 = sub nsw i32 0, %1637
  %1641 = select i1 %1639, i32 %1640, i32 %1637
  br label %1763

1642:                                             ; preds = %1629
  %1643 = icmp ult i8 %1615, 20
  br i1 %1643, label %1644, label %1656

1644:                                             ; preds = %1642
  %1645 = shl nuw nsw i32 %1616, 7
  %1646 = add nuw nsw i32 %1645, 768
  %1647 = and i32 %1646, 1792
  %1648 = getelementptr inbounds i8, i8* %1590, i64 %1608
  %1649 = load i8, i8* %1648, align 1
  %1650 = zext i8 %1649 to i32
  %1651 = or i32 %1647, %1650
  %1652 = and i8 %1612, 1
  %1653 = icmp eq i8 %1652, 0
  %1654 = sub nsw i32 0, %1651
  %1655 = select i1 %1653, i32 %1654, i32 %1651
  br label %1763

1656:                                             ; preds = %1642
  br i1 %1617, label %1657, label %1679

1657:                                             ; preds = %1656
  %1658 = add nsw i32 %1616, -20
  %1659 = getelementptr inbounds i8, i8* %1590, i64 %1608
  %1660 = load i8, i8* %1659, align 1
  %1661 = zext i8 %1660 to i32
  %1662 = and i32 %1658, 48
  %1663 = or i32 %1662, 1
  %1664 = lshr i32 %1661, 4
  %1665 = add nuw nsw i32 %1664, %1663
  %1666 = and i8 %1612, 1
  %1667 = icmp eq i8 %1666, 0
  %1668 = sub nsw i32 0, %1665
  %1669 = select i1 %1667, i32 %1668, i32 %1665
  %1670 = shl nsw i32 %1658, 2
  %1671 = and i32 %1670, 48
  %1672 = or i32 %1671, 1
  %1673 = and i32 %1661, 15
  %1674 = add nuw nsw i32 %1673, %1672
  %1675 = and i8 %1612, 2
  %1676 = icmp eq i8 %1675, 0
  %1677 = sub nsw i32 0, %1674
  %1678 = select i1 %1676, i32 %1677, i32 %1674
  br label %1763

1679:                                             ; preds = %1656
  %1680 = icmp ult i8 %1615, 120
  br i1 %1680, label %1681, label %1707

1681:                                             ; preds = %1679
  %1682 = add nsw i32 %1616, -84
  %1683 = sdiv i32 %1682, 12
  %1684 = shl nsw i32 %1683, 8
  %1685 = or i32 %1684, 1
  %1686 = getelementptr inbounds i8, i8* %1590, i64 %1608
  %1687 = load i8, i8* %1686, align 1
  %1688 = zext i8 %1687 to i32
  %1689 = add nsw i32 %1685, %1688
  %1690 = and i8 %1612, 1
  %1691 = icmp eq i8 %1690, 0
  %1692 = sub nsw i32 0, %1689
  %1693 = select i1 %1691, i32 %1692, i32 %1689
  %1694 = srem i32 %1682, 12
  %1695 = ashr i32 %1694, 2
  %1696 = shl nsw i32 %1695, 8
  %1697 = or i32 %1696, 1
  %1698 = add i64 %1608, 1
  %1699 = getelementptr inbounds i8, i8* %1590, i64 %1698
  %1700 = load i8, i8* %1699, align 1
  %1701 = zext i8 %1700 to i32
  %1702 = add nsw i32 %1697, %1701
  %1703 = and i8 %1612, 2
  %1704 = icmp eq i8 %1703, 0
  %1705 = sub nsw i32 0, %1702
  %1706 = select i1 %1704, i32 %1705, i32 %1702
  br label %1763

1707:                                             ; preds = %1679
  %1708 = icmp ult i8 %1615, 124
  br i1 %1708, label %1709, label %1735

1709:                                             ; preds = %1707
  %1710 = add i64 %1608, 1
  %1711 = getelementptr inbounds i8, i8* %1590, i64 %1710
  %1712 = load i8, i8* %1711, align 1
  %1713 = zext i8 %1712 to i32
  %1714 = getelementptr inbounds i8, i8* %1590, i64 %1608
  %1715 = load i8, i8* %1714, align 1
  %1716 = zext i8 %1715 to i32
  %1717 = shl nuw nsw i32 %1716, 4
  %1718 = lshr i32 %1713, 4
  %1719 = or i32 %1717, %1718
  %1720 = and i8 %1612, 1
  %1721 = icmp eq i8 %1720, 0
  %1722 = sub nsw i32 0, %1719
  %1723 = select i1 %1721, i32 %1722, i32 %1719
  %1724 = shl nuw nsw i32 %1713, 8
  %1725 = and i32 %1724, 3840
  %1726 = add i64 %1608, 2
  %1727 = getelementptr inbounds i8, i8* %1590, i64 %1726
  %1728 = load i8, i8* %1727, align 1
  %1729 = zext i8 %1728 to i32
  %1730 = or i32 %1725, %1729
  %1731 = and i8 %1612, 2
  %1732 = icmp eq i8 %1731, 0
  %1733 = sub nsw i32 0, %1730
  %1734 = select i1 %1732, i32 %1733, i32 %1730
  br label %1763

1735:                                             ; preds = %1707
  %1736 = getelementptr inbounds i8, i8* %1590, i64 %1608
  %1737 = load i8, i8* %1736, align 1
  %1738 = zext i8 %1737 to i32
  %1739 = shl nuw nsw i32 %1738, 8
  %1740 = add i64 %1608, 1
  %1741 = getelementptr inbounds i8, i8* %1590, i64 %1740
  %1742 = load i8, i8* %1741, align 1
  %1743 = zext i8 %1742 to i32
  %1744 = or i32 %1739, %1743
  %1745 = and i8 %1612, 1
  %1746 = icmp eq i8 %1745, 0
  %1747 = sub nsw i32 0, %1744
  %1748 = select i1 %1746, i32 %1747, i32 %1744
  %1749 = add i64 %1608, 2
  %1750 = getelementptr inbounds i8, i8* %1590, i64 %1749
  %1751 = load i8, i8* %1750, align 1
  %1752 = zext i8 %1751 to i32
  %1753 = shl nuw nsw i32 %1752, 8
  %1754 = add i64 %1608, 3
  %1755 = getelementptr inbounds i8, i8* %1590, i64 %1754
  %1756 = load i8, i8* %1755, align 1
  %1757 = zext i8 %1756 to i32
  %1758 = or i32 %1753, %1757
  %1759 = and i8 %1612, 2
  %1760 = icmp eq i8 %1759, 0
  %1761 = sub nsw i32 0, %1758
  %1762 = select i1 %1760, i32 %1761, i32 %1758
  br label %1763

1763:                                             ; preds = %1735, %1709, %1681, %1657, %1644, %1631
  %1764 = phi i32 [ 0, %1631 ], [ %1655, %1644 ], [ %1669, %1657 ], [ %1693, %1681 ], [ %1723, %1709 ], [ %1748, %1735 ]
  %1765 = phi i32 [ %1641, %1631 ], [ 0, %1644 ], [ %1678, %1657 ], [ %1706, %1681 ], [ %1734, %1709 ], [ %1762, %1735 ]
  %1766 = icmp sgt i32 %1610, 0
  %1767 = sub nsw i32 2147483647, %1610
  %1768 = icmp slt i32 %1767, %1764
  %1769 = and i1 %1766, %1768
  br i1 %1769, label %2112, label %1770

1770:                                             ; preds = %1763
  %1771 = icmp slt i32 %1610, 0
  %1772 = sub nsw i32 -2147483648, %1610
  %1773 = icmp sgt i32 %1772, %1764
  %1774 = and i1 %1771, %1773
  br i1 %1774, label %2112, label %1775

1775:                                             ; preds = %1770
  %1776 = add nsw i32 %1764, %1610
  %1777 = icmp sgt i32 %1609, 0
  %1778 = sub nsw i32 2147483647, %1609
  %1779 = icmp slt i32 %1778, %1765
  %1780 = and i1 %1777, %1779
  br i1 %1780, label %2112, label %1781

1781:                                             ; preds = %1775
  %1782 = icmp slt i32 %1609, 0
  %1783 = sub nsw i32 -2147483648, %1609
  %1784 = icmp sgt i32 %1783, %1765
  %1785 = and i1 %1782, %1784
  br i1 %1785, label %2112, label %1786

1786:                                             ; preds = %1781
  %1787 = add nsw i32 %1765, %1609
  %1788 = getelementptr inbounds %struct.WOFF2_PointRec_, %struct.WOFF2_PointRec_* %1597, i64 %1606, i32 0
  store i32 %1776, i32* %1788, align 4
  %1789 = getelementptr inbounds %struct.WOFF2_PointRec_, %struct.WOFF2_PointRec_* %1597, i64 %1606, i32 1
  store i32 %1787, i32* %1789, align 4
  %1790 = getelementptr inbounds %struct.WOFF2_PointRec_, %struct.WOFF2_PointRec_* %1597, i64 %1606, i32 2
  store i8 %1614, i8* %1790, align 4
  %1791 = add i32 %1607, 1
  %1792 = zext i32 %1791 to i64
  %1793 = icmp ugt i64 %1578, %1792
  br i1 %1793, label %1605, label %1794

1794:                                             ; preds = %1786, %1603
  %1795 = phi i64 [ 0, %1603 ], [ %1625, %1786 ]
  %1796 = load i64, i64* %1397, align 8
  %1797 = add i64 %1796, %1578
  store i64 %1797, i64* %1397, align 8
  %1798 = load i64, i64* %1389, align 8
  %1799 = add i64 %1798, %1795
  store i64 %1799, i64* %1389, align 8
  %1800 = call i32 @FT_Stream_Seek(%struct.FT_StreamRec_* %1102, i64 %1799) #17
  store i32 %1800, i32* %13, align 4
  %1801 = icmp eq i32 %1800, 0
  br i1 %1801, label %1802, label %2112

1802:                                             ; preds = %1794
  %1803 = call fastcc i32 @Read255UShort(%struct.FT_StreamRec_* %1102, i16* nonnull %16) #17
  store i32 %1803, i32* %13, align 4
  %1804 = icmp eq i32 %1803, 0
  br i1 %1804, label %1805, label %2112

1805:                                             ; preds = %1802
  %1806 = call i64 @FT_Stream_Pos(%struct.FT_StreamRec_* %1102) #17
  store i64 %1806, i64* %1389, align 8
  %1807 = icmp ugt i64 %1578, 134217727
  br i1 %1807, label %2112, label %1808

1808:                                             ; preds = %1805
  %1809 = shl nuw nsw i32 %1436, 1
  %1810 = add nuw nsw i32 %1809, 12
  %1811 = zext i32 %1810 to i64
  %1812 = mul i64 %1578, 5
  %1813 = add nuw nsw i64 %1812, %1811
  %1814 = load i16, i16* %16, align 2
  %1815 = zext i16 %1814 to i64
  %1816 = add nuw nsw i64 %1813, %1815
  %1817 = icmp ult i64 %1407, %1816
  br i1 %1817, label %1818, label %1822

1818:                                             ; preds = %1808
  %1819 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %508, i64 1, i64 %1407, i64 %1816, i8* %1406, i32* nonnull %13) #17
  %1820 = load i32, i32* %13, align 4
  %1821 = icmp eq i32 %1820, 0
  br i1 %1821, label %1822, label %2112

1822:                                             ; preds = %1818, %1808
  %1823 = phi i64 [ %1407, %1808 ], [ %1816, %1818 ]
  %1824 = phi i8* [ %1406, %1808 ], [ %1819, %1818 ]
  %1825 = lshr i16 %1430, 8
  %1826 = trunc i16 %1825 to i8
  %1827 = getelementptr inbounds i8, i8* %1824, i64 1
  store i8 %1826, i8* %1824, align 1
  %1828 = trunc i16 %1430 to i8
  store i8 %1828, i8* %1827, align 1
  br i1 %1425, label %1848, label %1829

1829:                                             ; preds = %1822
  %1830 = load i64, i64* %1366, align 8
  %1831 = call i32 @FT_Stream_Seek(%struct.FT_StreamRec_* %1102, i64 %1830) #17
  store i32 %1831, i32* %13, align 4
  %1832 = icmp eq i32 %1831, 0
  br i1 %1832, label %1833, label %2112

1833:                                             ; preds = %1829
  %1834 = call zeroext i16 @FT_Stream_ReadUShort(%struct.FT_StreamRec_* %1102, i32* nonnull %13) #17
  %1835 = load i32, i32* %13, align 4
  %1836 = icmp eq i32 %1835, 0
  br i1 %1836, label %1837, label %2112

1837:                                             ; preds = %1833
  %1838 = load i64, i64* %1366, align 8
  %1839 = call i32 @FT_Stream_Seek(%struct.FT_StreamRec_* %1102, i64 %1838) #17
  store i32 %1839, i32* %13, align 4
  %1840 = icmp eq i32 %1839, 0
  br i1 %1840, label %1841, label %2112

1841:                                             ; preds = %1837
  %1842 = getelementptr inbounds i8, i8* %1824, i64 2
  %1843 = call i32 @FT_Stream_Read(%struct.FT_StreamRec_* %1102, i8* %1842, i64 8) #17
  store i32 %1843, i32* %13, align 4
  %1844 = icmp eq i32 %1843, 0
  br i1 %1844, label %1845, label %2112

1845:                                             ; preds = %1841
  %1846 = load i64, i64* %1366, align 8
  %1847 = add i64 %1846, 8
  store i64 %1847, i64* %1366, align 8
  br label %1904

1848:                                             ; preds = %1822
  br i1 %1604, label %1878, label %1849

1849:                                             ; preds = %1848
  %1850 = bitcast i8* %1596 to i32*
  %1851 = load i32, i32* %1850, align 4
  %1852 = getelementptr inbounds i8, i8* %1596, i64 4
  %1853 = bitcast i8* %1852 to i32*
  %1854 = load i32, i32* %1853, align 4
  %1855 = icmp eq i64 %1578, 1
  br i1 %1855, label %1878, label %1856

1856:                                             ; preds = %1849, %1856
  %1857 = phi i64 [ %1876, %1856 ], [ 1, %1849 ]
  %1858 = phi i32 [ %1868, %1856 ], [ %1851, %1849 ]
  %1859 = phi i32 [ %1870, %1856 ], [ %1854, %1849 ]
  %1860 = phi i32 [ %1875, %1856 ], [ 1, %1849 ]
  %1861 = phi i32 [ %1874, %1856 ], [ %1854, %1849 ]
  %1862 = phi i32 [ %1872, %1856 ], [ %1851, %1849 ]
  %1863 = getelementptr inbounds %struct.WOFF2_PointRec_, %struct.WOFF2_PointRec_* %1597, i64 %1857, i32 0
  %1864 = load i32, i32* %1863, align 4
  %1865 = getelementptr inbounds %struct.WOFF2_PointRec_, %struct.WOFF2_PointRec_* %1597, i64 %1857, i32 1
  %1866 = load i32, i32* %1865, align 4
  %1867 = icmp slt i32 %1864, %1858
  %1868 = select i1 %1867, i32 %1864, i32 %1858
  %1869 = icmp slt i32 %1866, %1859
  %1870 = select i1 %1869, i32 %1866, i32 %1859
  %1871 = icmp sgt i32 %1864, %1862
  %1872 = select i1 %1871, i32 %1864, i32 %1862
  %1873 = icmp sgt i32 %1866, %1861
  %1874 = select i1 %1873, i32 %1866, i32 %1861
  %1875 = add i32 %1860, 1
  %1876 = zext i32 %1875 to i64
  %1877 = icmp ugt i64 %1578, %1876
  br i1 %1877, label %1856, label %1878

1878:                                             ; preds = %1856, %1849, %1848
  %1879 = phi i32 [ %1851, %1849 ], [ 0, %1848 ], [ %1872, %1856 ]
  %1880 = phi i32 [ %1854, %1849 ], [ 0, %1848 ], [ %1874, %1856 ]
  %1881 = phi i32 [ %1854, %1849 ], [ 0, %1848 ], [ %1870, %1856 ]
  %1882 = phi i32 [ %1851, %1849 ], [ 0, %1848 ], [ %1868, %1856 ]
  %1883 = getelementptr inbounds i8, i8* %1824, i64 2
  %1884 = lshr i32 %1882, 8
  %1885 = trunc i32 %1884 to i8
  %1886 = getelementptr inbounds i8, i8* %1824, i64 3
  store i8 %1885, i8* %1883, align 1
  %1887 = trunc i32 %1882 to i8
  %1888 = getelementptr inbounds i8, i8* %1824, i64 4
  store i8 %1887, i8* %1886, align 1
  %1889 = lshr i32 %1881, 8
  %1890 = trunc i32 %1889 to i8
  %1891 = getelementptr inbounds i8, i8* %1824, i64 5
  store i8 %1890, i8* %1888, align 1
  %1892 = trunc i32 %1881 to i8
  %1893 = getelementptr inbounds i8, i8* %1824, i64 6
  store i8 %1892, i8* %1891, align 1
  %1894 = lshr i32 %1879, 8
  %1895 = trunc i32 %1894 to i8
  %1896 = getelementptr inbounds i8, i8* %1824, i64 7
  store i8 %1895, i8* %1893, align 1
  %1897 = trunc i32 %1879 to i8
  %1898 = getelementptr inbounds i8, i8* %1824, i64 8
  store i8 %1897, i8* %1896, align 1
  %1899 = lshr i32 %1880, 8
  %1900 = trunc i32 %1899 to i8
  %1901 = getelementptr inbounds i8, i8* %1824, i64 9
  store i8 %1900, i8* %1898, align 1
  %1902 = trunc i32 %1880 to i8
  store i8 %1902, i8* %1901, align 1
  %1903 = trunc i32 %1882 to i16
  br label %1904

1904:                                             ; preds = %1878, %1845
  %1905 = phi i16 [ %1903, %1878 ], [ %1834, %1845 ]
  %1906 = getelementptr inbounds i8, i8* %1824, i64 10
  br label %1907

1907:                                             ; preds = %1917, %1904
  %1908 = phi i64 [ 0, %1904 ], [ %1924, %1917 ]
  %1909 = phi i8* [ %1906, %1904 ], [ %1922, %1917 ]
  %1910 = phi i32 [ -1, %1904 ], [ %1915, %1917 ]
  %1911 = phi i64 [ 10, %1904 ], [ %1923, %1917 ]
  %1912 = getelementptr inbounds i16, i16* %1560, i64 %1908
  %1913 = load i16, i16* %1912, align 2
  %1914 = zext i16 %1913 to i32
  %1915 = add nsw i32 %1910, %1914
  %1916 = icmp sgt i32 %1915, 65535
  br i1 %1916, label %2112, label %1917

1917:                                             ; preds = %1907
  %1918 = lshr i32 %1915, 8
  %1919 = trunc i32 %1918 to i8
  %1920 = getelementptr inbounds i8, i8* %1909, i64 1
  store i8 %1919, i8* %1909, align 1
  %1921 = trunc i32 %1915 to i8
  %1922 = getelementptr inbounds i8, i8* %1909, i64 2
  store i8 %1921, i8* %1920, align 1
  %1923 = add nuw nsw i64 %1911, 2
  %1924 = add nuw nsw i64 %1908, 1
  %1925 = icmp eq i64 %1924, %1558
  br i1 %1925, label %1926, label %1907

1926:                                             ; preds = %1917
  %1927 = load i16, i16* %16, align 2
  %1928 = lshr i16 %1927, 8
  %1929 = trunc i16 %1928 to i8
  %1930 = getelementptr inbounds i8, i8* %1909, i64 3
  store i8 %1929, i8* %1922, align 1
  %1931 = trunc i16 %1927 to i8
  store i8 %1931, i8* %1930, align 1
  %1932 = load i64, i64* %1391, align 8
  %1933 = call i32 @FT_Stream_Seek(%struct.FT_StreamRec_* %1102, i64 %1932) #17
  store i32 %1933, i32* %13, align 4
  %1934 = icmp eq i32 %1933, 0
  br i1 %1934, label %1935, label %2112

1935:                                             ; preds = %1926
  %1936 = add nuw i64 %1911, 4
  %1937 = getelementptr inbounds i8, i8* %1824, i64 %1936
  %1938 = zext i16 %1927 to i64
  %1939 = call i32 @FT_Stream_Read(%struct.FT_StreamRec_* %1102, i8* %1937, i64 %1938) #17
  store i32 %1939, i32* %13, align 4
  %1940 = icmp eq i32 %1939, 0
  br i1 %1940, label %1941, label %2112

1941:                                             ; preds = %1935
  %1942 = load i64, i64* %1391, align 8
  %1943 = add i64 %1942, %1938
  store i64 %1943, i64* %1391, align 8
  %1944 = zext i16 %1927 to i32
  %1945 = add nuw nsw i32 %1810, %1944
  br i1 %1604, label %2041, label %1946

1946:                                             ; preds = %1941, %2023
  %1947 = phi i64 [ %2027, %2023 ], [ 0, %1941 ]
  %1948 = phi i32 [ %2026, %2023 ], [ 0, %1941 ]
  %1949 = phi i32 [ %1996, %2023 ], [ 0, %1941 ]
  %1950 = phi i32 [ %1980, %2023 ], [ 0, %1941 ]
  %1951 = phi i32 [ %1959, %2023 ], [ 0, %1941 ]
  %1952 = phi i32 [ %1957, %2023 ], [ 0, %1941 ]
  %1953 = phi i8 [ %2025, %2023 ], [ 0, %1941 ]
  %1954 = phi i8 [ %1997, %2023 ], [ -1, %1941 ]
  %1955 = phi i32 [ %2024, %2023 ], [ %1945, %1941 ]
  %1956 = getelementptr inbounds %struct.WOFF2_PointRec_, %struct.WOFF2_PointRec_* %1597, i64 %1947, i32 0
  %1957 = load i32, i32* %1956, align 4
  %1958 = getelementptr inbounds %struct.WOFF2_PointRec_, %struct.WOFF2_PointRec_* %1597, i64 %1947, i32 1
  %1959 = load i32, i32* %1958, align 4
  %1960 = getelementptr inbounds %struct.WOFF2_PointRec_, %struct.WOFF2_PointRec_* %1597, i64 %1947, i32 2
  %1961 = load i8, i8* %1960, align 4
  %1962 = icmp ne i8 %1961, 0
  %1963 = zext i1 %1962 to i8
  %1964 = sub nsw i32 %1957, %1952
  %1965 = sub nsw i32 %1959, %1951
  %1966 = icmp eq i32 %1964, 0
  br i1 %1966, label %1967, label %1969

1967:                                             ; preds = %1946
  %1968 = or i8 %1963, 16
  br label %1979

1969:                                             ; preds = %1946
  %1970 = add i32 %1964, 255
  %1971 = icmp ult i32 %1970, 511
  br i1 %1971, label %1972, label %1977

1972:                                             ; preds = %1969
  %1973 = icmp sgt i32 %1964, 0
  %1974 = select i1 %1973, i8 18, i8 2
  %1975 = or i8 %1974, %1963
  %1976 = add i32 %1950, 1
  br label %1979

1977:                                             ; preds = %1969
  %1978 = add i32 %1950, 2
  br label %1979

1979:                                             ; preds = %1977, %1972, %1967
  %1980 = phi i32 [ %1950, %1967 ], [ %1976, %1972 ], [ %1978, %1977 ]
  %1981 = phi i8 [ %1968, %1967 ], [ %1975, %1972 ], [ %1963, %1977 ]
  %1982 = icmp eq i32 %1965, 0
  br i1 %1982, label %1983, label %1985

1983:                                             ; preds = %1979
  %1984 = or i8 %1981, 32
  br label %1995

1985:                                             ; preds = %1979
  %1986 = add i32 %1965, 255
  %1987 = icmp ult i32 %1986, 511
  br i1 %1987, label %1988, label %1993

1988:                                             ; preds = %1985
  %1989 = icmp sgt i32 %1965, 0
  %1990 = select i1 %1989, i8 36, i8 4
  %1991 = or i8 %1981, %1990
  %1992 = add i32 %1949, 1
  br label %1995

1993:                                             ; preds = %1985
  %1994 = add i32 %1949, 2
  br label %1995

1995:                                             ; preds = %1993, %1988, %1983
  %1996 = phi i32 [ %1949, %1983 ], [ %1992, %1988 ], [ %1994, %1993 ]
  %1997 = phi i8 [ %1984, %1983 ], [ %1991, %1988 ], [ %1981, %1993 ]
  %1998 = icmp ne i8 %1997, %1954
  %1999 = icmp eq i8 %1953, -1
  %2000 = or i1 %1999, %1998
  br i1 %2000, label %2008, label %2001

2001:                                             ; preds = %1995
  %2002 = add i32 %1955, -1
  %2003 = zext i32 %2002 to i64
  %2004 = getelementptr inbounds i8, i8* %1824, i64 %2003
  %2005 = load i8, i8* %2004, align 1
  %2006 = or i8 %2005, 8
  store i8 %2006, i8* %2004, align 1
  %2007 = add nuw i8 %1953, 1
  br label %2023

2008:                                             ; preds = %1995
  %2009 = icmp eq i8 %1953, 0
  br i1 %2009, label %2016, label %2010

2010:                                             ; preds = %2008
  %2011 = zext i32 %1955 to i64
  %2012 = icmp ugt i64 %1823, %2011
  br i1 %2012, label %2013, label %2112

2013:                                             ; preds = %2010
  %2014 = add i32 %1955, 1
  %2015 = getelementptr inbounds i8, i8* %1824, i64 %2011
  store i8 %1953, i8* %2015, align 1
  br label %2016

2016:                                             ; preds = %2013, %2008
  %2017 = phi i32 [ %2014, %2013 ], [ %1955, %2008 ]
  %2018 = zext i32 %2017 to i64
  %2019 = icmp ugt i64 %1823, %2018
  br i1 %2019, label %2020, label %2112

2020:                                             ; preds = %2016
  %2021 = add i32 %2017, 1
  %2022 = getelementptr inbounds i8, i8* %1824, i64 %2018
  store i8 %1997, i8* %2022, align 1
  br label %2023

2023:                                             ; preds = %2020, %2001
  %2024 = phi i32 [ %2021, %2020 ], [ %1955, %2001 ]
  %2025 = phi i8 [ 0, %2020 ], [ %2007, %2001 ]
  %2026 = add i32 %1948, 1
  %2027 = zext i32 %2026 to i64
  %2028 = icmp ugt i64 %1578, %2027
  br i1 %2028, label %1946, label %2029

2029:                                             ; preds = %2023
  %2030 = icmp eq i8 %2025, 0
  br i1 %2030, label %2037, label %2031

2031:                                             ; preds = %2029
  %2032 = zext i32 %2024 to i64
  %2033 = icmp ugt i64 %1823, %2032
  br i1 %2033, label %2034, label %2112

2034:                                             ; preds = %2031
  %2035 = add i32 %2024, 1
  %2036 = getelementptr inbounds i8, i8* %1824, i64 %2032
  store i8 %2025, i8* %2036, align 1
  br label %2037

2037:                                             ; preds = %2034, %2029
  %2038 = phi i32 [ %2035, %2034 ], [ %2024, %2029 ]
  %2039 = add i32 %1996, %1980
  %2040 = icmp ult i32 %2039, %1980
  br i1 %2040, label %2112, label %2041

2041:                                             ; preds = %2037, %1941
  %2042 = phi i32 [ %2039, %2037 ], [ 0, %1941 ]
  %2043 = phi i32 [ %2038, %2037 ], [ %1945, %1941 ]
  %2044 = phi i32 [ %1980, %2037 ], [ 0, %1941 ]
  %2045 = add i32 %2043, %2042
  %2046 = icmp ult i32 %2045, %2043
  %2047 = zext i32 %2045 to i64
  %2048 = icmp ult i64 %1823, %2047
  %2049 = or i1 %2046, %2048
  br i1 %2049, label %2112, label %2050

2050:                                             ; preds = %2041
  %2051 = add i32 %2044, %2043
  br i1 %1604, label %2115, label %2052

2052:                                             ; preds = %2050, %2107
  %2053 = phi i64 [ %2110, %2107 ], [ 0, %2050 ]
  %2054 = phi i32 [ %2108, %2107 ], [ %2051, %2050 ]
  %2055 = phi i32 [ %2086, %2107 ], [ %2043, %2050 ]
  %2056 = phi i32 [ %2109, %2107 ], [ 0, %2050 ]
  %2057 = phi i32 [ %2063, %2107 ], [ 0, %2050 ]
  %2058 = phi i32 [ %2060, %2107 ], [ 0, %2050 ]
  %2059 = getelementptr inbounds %struct.WOFF2_PointRec_, %struct.WOFF2_PointRec_* %1597, i64 %2053, i32 0
  %2060 = load i32, i32* %2059, align 4
  %2061 = sub nsw i32 %2060, %2058
  %2062 = getelementptr inbounds %struct.WOFF2_PointRec_, %struct.WOFF2_PointRec_* %1597, i64 %2053, i32 1
  %2063 = load i32, i32* %2062, align 4
  %2064 = sub nsw i32 %2063, %2057
  %2065 = icmp eq i32 %2061, 0
  br i1 %2065, label %2085, label %2066

2066:                                             ; preds = %2052
  %2067 = add i32 %2061, 255
  %2068 = icmp ult i32 %2067, 511
  br i1 %2068, label %2069, label %2077

2069:                                             ; preds = %2066
  %2070 = icmp slt i32 %2061, 0
  %2071 = sub nsw i32 0, %2061
  %2072 = select i1 %2070, i32 %2071, i32 %2061
  %2073 = trunc i32 %2072 to i8
  %2074 = add i32 %2055, 1
  %2075 = zext i32 %2055 to i64
  %2076 = getelementptr inbounds i8, i8* %1824, i64 %2075
  store i8 %2073, i8* %2076, align 1
  br label %2085

2077:                                             ; preds = %2066
  %2078 = zext i32 %2055 to i64
  %2079 = getelementptr inbounds i8, i8* %1824, i64 %2078
  %2080 = lshr i32 %2061, 8
  %2081 = trunc i32 %2080 to i8
  %2082 = getelementptr inbounds i8, i8* %2079, i64 1
  store i8 %2081, i8* %2079, align 1
  %2083 = trunc i32 %2061 to i8
  store i8 %2083, i8* %2082, align 1
  %2084 = add i32 %2055, 2
  br label %2085

2085:                                             ; preds = %2077, %2069, %2052
  %2086 = phi i32 [ %2055, %2052 ], [ %2074, %2069 ], [ %2084, %2077 ]
  %2087 = icmp eq i32 %2064, 0
  br i1 %2087, label %2107, label %2088

2088:                                             ; preds = %2085
  %2089 = add i32 %2064, 255
  %2090 = icmp ult i32 %2089, 511
  br i1 %2090, label %2091, label %2099

2091:                                             ; preds = %2088
  %2092 = icmp slt i32 %2064, 0
  %2093 = sub nsw i32 0, %2064
  %2094 = select i1 %2092, i32 %2093, i32 %2064
  %2095 = trunc i32 %2094 to i8
  %2096 = add i32 %2054, 1
  %2097 = zext i32 %2054 to i64
  %2098 = getelementptr inbounds i8, i8* %1824, i64 %2097
  store i8 %2095, i8* %2098, align 1
  br label %2107

2099:                                             ; preds = %2088
  %2100 = zext i32 %2054 to i64
  %2101 = getelementptr inbounds i8, i8* %1824, i64 %2100
  %2102 = lshr i32 %2064, 8
  %2103 = trunc i32 %2102 to i8
  %2104 = getelementptr inbounds i8, i8* %2101, i64 1
  store i8 %2103, i8* %2101, align 1
  %2105 = trunc i32 %2064 to i8
  store i8 %2105, i8* %2104, align 1
  %2106 = add i32 %2054, 2
  br label %2107

2107:                                             ; preds = %2099, %2091, %2085
  %2108 = phi i32 [ %2054, %2085 ], [ %2096, %2091 ], [ %2106, %2099 ]
  %2109 = add i32 %2056, 1
  %2110 = zext i32 %2109 to i64
  %2111 = icmp ugt i64 %1578, %2110
  br i1 %2111, label %2052, label %2115

2112:                                             ; preds = %2041, %2037, %2031, %1935, %1926, %1841, %1837, %1833, %1829, %1818, %1805, %1802, %1794, %1600, %1595, %1585, %1581, %1563, %1557, %1574, %1569, %1781, %1775, %1770, %1763, %1623, %1907, %2016, %2010
  %2113 = phi i8* [ %1824, %2010 ], [ %1824, %2016 ], [ %1824, %1907 ], [ %1406, %1623 ], [ %1406, %1763 ], [ %1406, %1770 ], [ %1406, %1775 ], [ %1406, %1781 ], [ %1406, %1569 ], [ %1406, %1574 ], [ %1824, %2037 ], [ %1824, %2041 ], [ %1824, %2031 ], [ %1406, %1600 ], [ %1824, %1926 ], [ %1824, %1935 ], [ %1824, %1837 ], [ %1824, %1841 ], [ %1824, %1829 ], [ %1824, %1833 ], [ %1819, %1818 ], [ %1406, %1805 ], [ %1406, %1794 ], [ %1406, %1802 ], [ %1406, %1595 ], [ %1406, %1585 ], [ %1406, %1581 ], [ %1406, %1563 ], [ %1406, %1557 ]
  %2114 = phi i8* [ %1596, %2010 ], [ %1596, %2016 ], [ %1596, %1907 ], [ %1596, %1623 ], [ %1596, %1763 ], [ %1596, %1770 ], [ %1596, %1775 ], [ %1596, %1781 ], [ null, %1569 ], [ null, %1574 ], [ %1596, %2037 ], [ %1596, %2041 ], [ %1596, %2031 ], [ %1596, %1600 ], [ %1596, %1926 ], [ %1596, %1935 ], [ %1596, %1837 ], [ %1596, %1841 ], [ %1596, %1829 ], [ %1596, %1833 ], [ %1596, %1818 ], [ %1596, %1805 ], [ %1596, %1794 ], [ %1596, %1802 ], [ %1596, %1595 ], [ null, %1585 ], [ null, %1581 ], [ null, %1563 ], [ null, %1557 ]
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %71) #17
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %70) #17
  br label %2459

2115:                                             ; preds = %2107, %2050
  %2116 = phi i32 [ %2051, %2050 ], [ %2108, %2107 ]
  %2117 = zext i32 %2116 to i64
  call void @ft_mem_free(%struct.FT_MemoryRec_* %508, i8* %1596) #17
  call void @ft_mem_free(%struct.FT_MemoryRec_* %508, i8* %1559) #17
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %71) #17
  br label %2119

2118:                                             ; preds = %1433
  br i1 %1425, label %2125, label %2459

2119:                                             ; preds = %1535, %1552, %2115
  %2120 = phi i8* [ %70, %2115 ], [ %68, %1552 ], [ %68, %1535 ]
  %2121 = phi i64 [ %2117, %2115 ], [ %1500, %1552 ], [ %1538, %1535 ]
  %2122 = phi i16 [ %1905, %2115 ], [ %1514, %1552 ], [ %1514, %1535 ]
  %2123 = phi i64 [ %1823, %2115 ], [ %1507, %1552 ], [ %1507, %1535 ]
  %2124 = phi i8* [ %1824, %2115 ], [ %1508, %1552 ], [ %1508, %1535 ]
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %2120) #17
  br label %2125

2125:                                             ; preds = %2119, %2118
  %2126 = phi i64 [ 0, %2118 ], [ %2121, %2119 ]
  %2127 = phi i16 [ 0, %2118 ], [ %2122, %2119 ]
  %2128 = phi i64 [ %1407, %2118 ], [ %2123, %2119 ]
  %2129 = phi i8* [ %1406, %2118 ], [ %2124, %2119 ]
  %2130 = sub i64 %1408, %1145
  %2131 = getelementptr inbounds i64, i64* %1361, i64 %1405
  store i64 %2130, i64* %2131, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %72) #17
  store i32 0, i32* %11, align 4
  %2132 = inttoptr i64 %1409 to i8*
  %2133 = add i64 %2126, %1408
  %2134 = icmp ugt i64 %2133, 31457280
  br i1 %2134, label %2141, label %2135

2135:                                             ; preds = %2125
  %2136 = icmp ugt i64 %2133, %1403
  br i1 %2136, label %2137, label %2142

2137:                                             ; preds = %2135
  %2138 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %508, i64 1, i64 %1403, i64 %2133, i8* %2132, i32* nonnull %11) #17
  %2139 = load i32, i32* %11, align 4
  %2140 = icmp eq i32 %2139, 0
  br i1 %2140, label %2142, label %2141

2141:                                             ; preds = %2137, %2125
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %72) #17
  br label %2459

2142:                                             ; preds = %2137, %2135
  %2143 = phi i64 [ %1403, %2135 ], [ %2133, %2137 ]
  %2144 = phi i8* [ %2132, %2135 ], [ %2138, %2137 ]
  %2145 = getelementptr inbounds i8, i8* %2144, i64 %1408
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2145, i8* align 1 %2129, i64 %2126, i1 false) #17
  %2146 = load i32, i32* %11, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %72) #17
  %2147 = icmp eq i32 %2146, 0
  br i1 %2147, label %2148, label %2457

2148:                                             ; preds = %2142
  call void @llvm.lifetime.start.p0i8(i64 3, i8* nonnull %79)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %79, i8 0, i64 3, i1 false)
  %2149 = add nuw nsw i64 %2133, 3
  %2150 = and i64 %2149, -4
  %2151 = sub nsw i64 %2150, %2133
  %2152 = icmp eq i64 %2151, 0
  br i1 %2152, label %2171, label %2153

2153:                                             ; preds = %2148
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %73) #17
  store i32 0, i32* %10, align 4
  %2154 = icmp ugt i64 %2150, 31457280
  br i1 %2154, label %2161, label %2155

2155:                                             ; preds = %2153
  %2156 = icmp ugt i64 %2150, %2143
  br i1 %2156, label %2157, label %2162

2157:                                             ; preds = %2155
  %2158 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %508, i64 1, i64 %2143, i64 %2150, i8* %2144, i32* nonnull %10) #17
  %2159 = load i32, i32* %10, align 4
  %2160 = icmp eq i32 %2159, 0
  br i1 %2160, label %2162, label %2161

2161:                                             ; preds = %2157, %2153
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %73) #17
  br label %2168

2162:                                             ; preds = %2157, %2155
  %2163 = phi i64 [ %2143, %2155 ], [ %2150, %2157 ]
  %2164 = phi i8* [ %2144, %2155 ], [ %2158, %2157 ]
  %2165 = getelementptr inbounds i8, i8* %2164, i64 %2133
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2165, i8* nonnull align 1 %79, i64 %2151, i1 false) #17
  %2166 = load i32, i32* %10, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %73) #17
  %2167 = icmp eq i32 %2166, 0
  br i1 %2167, label %2171, label %2168

2168:                                             ; preds = %2162, %2161
  %2169 = phi i64 [ %2143, %2161 ], [ %2163, %2162 ]
  %2170 = ptrtoint i8* %2144 to i64
  call void @llvm.lifetime.end.p0i8(i64 3, i8* nonnull %79)
  br label %2459

2171:                                             ; preds = %2162, %2148
  %2172 = phi i64 [ %2143, %2148 ], [ %2163, %2162 ]
  %2173 = phi i8* [ %2144, %2148 ], [ %2164, %2162 ]
  %2174 = phi i64 [ %2133, %2148 ], [ %2150, %2162 ]
  %2175 = ptrtoint i8* %2173 to i64
  call void @llvm.lifetime.end.p0i8(i64 3, i8* nonnull %79)
  %2176 = and i64 %2126, -4
  %2177 = icmp eq i64 %2176, 0
  br i1 %2177, label %2205, label %2178

2178:                                             ; preds = %2171, %2178
  %2179 = phi i64 [ %2203, %2178 ], [ 0, %2171 ]
  %2180 = phi i64 [ %2202, %2178 ], [ 0, %2171 ]
  %2181 = getelementptr inbounds i8, i8* %2129, i64 %2179
  %2182 = load i8, i8* %2181, align 1
  %2183 = zext i8 %2182 to i64
  %2184 = shl nuw nsw i64 %2183, 24
  %2185 = or i64 %2179, 1
  %2186 = getelementptr inbounds i8, i8* %2129, i64 %2185
  %2187 = load i8, i8* %2186, align 1
  %2188 = zext i8 %2187 to i64
  %2189 = shl nuw nsw i64 %2188, 16
  %2190 = or i64 %2189, %2184
  %2191 = or i64 %2179, 2
  %2192 = getelementptr inbounds i8, i8* %2129, i64 %2191
  %2193 = load i8, i8* %2192, align 1
  %2194 = zext i8 %2193 to i64
  %2195 = shl nuw nsw i64 %2194, 8
  %2196 = or i64 %2190, %2195
  %2197 = or i64 %2179, 3
  %2198 = getelementptr inbounds i8, i8* %2129, i64 %2197
  %2199 = load i8, i8* %2198, align 1
  %2200 = zext i8 %2199 to i64
  %2201 = or i64 %2196, %2200
  %2202 = add i64 %2201, %2180
  %2203 = add nuw i64 %2179, 4
  %2204 = icmp ult i64 %2203, %2176
  br i1 %2204, label %2178, label %2205

2205:                                             ; preds = %2178, %2171
  %2206 = phi i64 [ 0, %2171 ], [ %2202, %2178 ]
  %2207 = icmp eq i64 %2126, %2176
  br i1 %2207, label %2272, label %2208

2208:                                             ; preds = %2205
  %2209 = icmp ugt i64 %2126, %2176
  br i1 %2209, label %2210, label %2269

2210:                                             ; preds = %2208
  %2211 = sub i64 %2126, %2176
  %2212 = icmp ult i64 %2211, 4
  br i1 %2212, label %2253, label %2213

2213:                                             ; preds = %2210
  %2214 = and i64 %2211, -4
  %2215 = add i64 %2176, %2214
  %2216 = insertelement <2 x i64> undef, i64 %2176, i32 0
  %2217 = shufflevector <2 x i64> %2216, <2 x i64> undef, <2 x i32> zeroinitializer
  %2218 = add <2 x i64> %2217, <i64 0, i64 1>
  br label %2219

2219:                                             ; preds = %2219, %2213
  %2220 = phi i64 [ 0, %2213 ], [ %2244, %2219 ]
  %2221 = phi <2 x i64> [ zeroinitializer, %2213 ], [ %2242, %2219 ]
  %2222 = phi <2 x i64> [ zeroinitializer, %2213 ], [ %2243, %2219 ]
  %2223 = phi <2 x i64> [ %2218, %2213 ], [ %2245, %2219 ]
  %2224 = add i64 %2176, %2220
  %2225 = getelementptr inbounds i8, i8* %2129, i64 %2224
  %2226 = bitcast i8* %2225 to <2 x i8>*
  %2227 = load <2 x i8>, <2 x i8>* %2226, align 1
  %2228 = getelementptr inbounds i8, i8* %2225, i64 2
  %2229 = bitcast i8* %2228 to <2 x i8>*
  %2230 = load <2 x i8>, <2 x i8>* %2229, align 1
  %2231 = zext <2 x i8> %2227 to <2 x i64>
  %2232 = zext <2 x i8> %2230 to <2 x i64>
  %2233 = shl <2 x i64> %2223, <i64 3, i64 3>
  %2234 = shl <2 x i64> %2223, <i64 3, i64 3>
  %2235 = add <2 x i64> %2234, <i64 16, i64 16>
  %2236 = and <2 x i64> %2233, <i64 24, i64 24>
  %2237 = and <2 x i64> %2235, <i64 24, i64 24>
  %2238 = xor <2 x i64> %2236, <i64 24, i64 24>
  %2239 = xor <2 x i64> %2237, <i64 24, i64 24>
  %2240 = shl <2 x i64> %2231, %2238
  %2241 = shl <2 x i64> %2232, %2239
  %2242 = or <2 x i64> %2240, %2221
  %2243 = or <2 x i64> %2241, %2222
  %2244 = add i64 %2220, 4
  %2245 = add <2 x i64> %2223, <i64 4, i64 4>
  %2246 = icmp eq i64 %2244, %2214
  br i1 %2246, label %2247, label %2219, !llvm.loop !45

2247:                                             ; preds = %2219
  %2248 = or <2 x i64> %2243, %2242
  %2249 = shufflevector <2 x i64> %2248, <2 x i64> undef, <2 x i32> <i32 1, i32 undef>
  %2250 = or <2 x i64> %2248, %2249
  %2251 = extractelement <2 x i64> %2250, i32 0
  %2252 = icmp eq i64 %2211, %2214
  br i1 %2252, label %2269, label %2253

2253:                                             ; preds = %2247, %2210
  %2254 = phi i64 [ 0, %2210 ], [ %2251, %2247 ]
  %2255 = phi i64 [ %2176, %2210 ], [ %2215, %2247 ]
  br label %2256

2256:                                             ; preds = %2253, %2256
  %2257 = phi i64 [ %2266, %2256 ], [ %2254, %2253 ]
  %2258 = phi i64 [ %2267, %2256 ], [ %2255, %2253 ]
  %2259 = getelementptr inbounds i8, i8* %2129, i64 %2258
  %2260 = load i8, i8* %2259, align 1
  %2261 = zext i8 %2260 to i64
  %2262 = shl i64 %2258, 3
  %2263 = and i64 %2262, 24
  %2264 = xor i64 %2263, 24
  %2265 = shl i64 %2261, %2264
  %2266 = or i64 %2265, %2257
  %2267 = add nuw i64 %2258, 1
  %2268 = icmp eq i64 %2267, %2126
  br i1 %2268, label %2269, label %2256, !llvm.loop !46

2269:                                             ; preds = %2256, %2247, %2208
  %2270 = phi i64 [ 0, %2208 ], [ %2251, %2247 ], [ %2266, %2256 ]
  %2271 = add i64 %2270, %2206
  br label %2272

2272:                                             ; preds = %2269, %2205
  %2273 = phi i64 [ %2271, %2269 ], [ %2206, %2205 ]
  %2274 = add i64 %2273, %1404
  %2275 = icmp eq i16 %1430, 0
  br i1 %2275, label %2278, label %2276

2276:                                             ; preds = %2272
  %2277 = getelementptr inbounds i16, i16* %1378, i64 %1405
  store i16 %2127, i16* %2277, align 2
  br label %2278

2278:                                             ; preds = %2276, %2272
  %2279 = add nuw nsw i64 %1405, 1
  %2280 = icmp eq i64 %2279, %1328
  br i1 %2280, label %2281, label %1402

2281:                                             ; preds = %2278
  %2282 = ptrtoint i8* %2173 to i64
  br label %2283

2283:                                             ; preds = %2281, %1381
  %2284 = phi i64 [ %1138, %1381 ], [ %2172, %2281 ]
  %2285 = phi i64 [ 0, %1381 ], [ %2274, %2281 ]
  %2286 = phi i64 [ %1146, %1381 ], [ %2282, %2281 ]
  %2287 = phi i64 [ %1145, %1381 ], [ %2174, %2281 ]
  %2288 = phi i8* [ %1373, %1381 ], [ %2129, %2281 ]
  %2289 = load i64, i64* %1129, align 8
  %2290 = sub i64 %2287, %2289
  store i64 %2290, i64* %1130, align 8
  store i64 %2287, i64* %1131, align 8
  %2291 = load i64, i64* %1130, align 8
  %2292 = getelementptr inbounds i64, i64* %1361, i64 %1328
  store i64 %2291, i64* %2292, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %74) #17
  store i32 0, i32* %9, align 4
  %2293 = inttoptr i64 %2286 to i8*
  %2294 = mul nuw nsw i64 %1327, %1359
  %2295 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %508, i64 1, i64 0, i64 %2294, i8* null, i32* nonnull %9) #17
  %2296 = load i32, i32* %9, align 4
  %2297 = icmp eq i32 %2296, 0
  br i1 %2297, label %2298, label %2447

2298:                                             ; preds = %2283, %2318
  %2299 = phi i64 [ %2323, %2318 ], [ 0, %2283 ]
  %2300 = phi i8* [ %2320, %2318 ], [ %2295, %2283 ]
  %2301 = getelementptr inbounds i64, i64* %1361, i64 %2299
  %2302 = load i64, i64* %2301, align 8
  br i1 %1326, label %2313, label %2303

2303:                                             ; preds = %2298
  %2304 = lshr i64 %2302, 24
  %2305 = trunc i64 %2304 to i8
  store i8 %2305, i8* %2300, align 1
  %2306 = lshr i64 %2302, 16
  %2307 = getelementptr inbounds i8, i8* %2300, i64 2
  %2308 = lshr i64 %2302, 8
  %2309 = trunc i64 %2308 to i8
  %2310 = getelementptr inbounds i8, i8* %2300, i64 3
  store i8 %2309, i8* %2307, align 1
  %2311 = trunc i64 %2302 to i8
  %2312 = getelementptr inbounds i8, i8* %2300, i64 4
  store i8 %2311, i8* %2310, align 1
  br label %2318

2313:                                             ; preds = %2298
  %2314 = lshr i64 %2302, 1
  %2315 = lshr i64 %2302, 9
  %2316 = trunc i64 %2315 to i8
  store i8 %2316, i8* %2300, align 1
  %2317 = getelementptr inbounds i8, i8* %2300, i64 2
  br label %2318

2318:                                             ; preds = %2313, %2303
  %2319 = phi i64 [ %2314, %2313 ], [ %2306, %2303 ]
  %2320 = phi i8* [ %2317, %2313 ], [ %2312, %2303 ]
  %2321 = trunc i64 %2319 to i8
  %2322 = getelementptr inbounds i8, i8* %2300, i64 1
  store i8 %2321, i8* %2322, align 1
  %2323 = add nuw nsw i64 %2299, 1
  %2324 = icmp eq i64 %2323, %1359
  br i1 %2324, label %2325, label %2298

2325:                                             ; preds = %2318
  %2326 = and i64 %2294, 1048572
  %2327 = icmp eq i64 %2326, 0
  br i1 %2327, label %2355, label %2328

2328:                                             ; preds = %2325, %2328
  %2329 = phi i64 [ %2353, %2328 ], [ 0, %2325 ]
  %2330 = phi i64 [ %2352, %2328 ], [ 0, %2325 ]
  %2331 = getelementptr inbounds i8, i8* %2295, i64 %2329
  %2332 = load i8, i8* %2331, align 1
  %2333 = zext i8 %2332 to i64
  %2334 = shl nuw nsw i64 %2333, 24
  %2335 = or i64 %2329, 1
  %2336 = getelementptr inbounds i8, i8* %2295, i64 %2335
  %2337 = load i8, i8* %2336, align 1
  %2338 = zext i8 %2337 to i64
  %2339 = shl nuw nsw i64 %2338, 16
  %2340 = or i64 %2339, %2334
  %2341 = or i64 %2329, 2
  %2342 = getelementptr inbounds i8, i8* %2295, i64 %2341
  %2343 = load i8, i8* %2342, align 1
  %2344 = zext i8 %2343 to i64
  %2345 = shl nuw nsw i64 %2344, 8
  %2346 = or i64 %2340, %2345
  %2347 = or i64 %2329, 3
  %2348 = getelementptr inbounds i8, i8* %2295, i64 %2347
  %2349 = load i8, i8* %2348, align 1
  %2350 = zext i8 %2349 to i64
  %2351 = or i64 %2346, %2350
  %2352 = add i64 %2351, %2330
  %2353 = add nuw nsw i64 %2329, 4
  %2354 = icmp ult i64 %2353, %2326
  br i1 %2354, label %2328, label %2355

2355:                                             ; preds = %2328, %2325
  %2356 = phi i64 [ 0, %2325 ], [ %2352, %2328 ]
  %2357 = icmp eq i64 %2326, %2294
  br i1 %2357, label %2423, label %2358

2358:                                             ; preds = %2355
  %2359 = icmp ult i64 %2326, %2294
  br i1 %2359, label %2360, label %2420

2360:                                             ; preds = %2358
  %2361 = mul nuw nsw i64 %1327, %1359
  %2362 = sub nsw i64 %2361, %2326
  %2363 = icmp ult i64 %2362, 4
  br i1 %2363, label %2404, label %2364

2364:                                             ; preds = %2360
  %2365 = and i64 %2362, -4
  %2366 = add nsw i64 %2326, %2365
  %2367 = insertelement <2 x i64> undef, i64 %2326, i32 0
  %2368 = shufflevector <2 x i64> %2367, <2 x i64> undef, <2 x i32> zeroinitializer
  %2369 = add <2 x i64> %2368, <i64 0, i64 1>
  br label %2370

2370:                                             ; preds = %2370, %2364
  %2371 = phi i64 [ 0, %2364 ], [ %2395, %2370 ]
  %2372 = phi <2 x i64> [ zeroinitializer, %2364 ], [ %2393, %2370 ]
  %2373 = phi <2 x i64> [ zeroinitializer, %2364 ], [ %2394, %2370 ]
  %2374 = phi <2 x i64> [ %2369, %2364 ], [ %2396, %2370 ]
  %2375 = add i64 %2326, %2371
  %2376 = getelementptr inbounds i8, i8* %2295, i64 %2375
  %2377 = bitcast i8* %2376 to <2 x i8>*
  %2378 = load <2 x i8>, <2 x i8>* %2377, align 1
  %2379 = getelementptr inbounds i8, i8* %2376, i64 2
  %2380 = bitcast i8* %2379 to <2 x i8>*
  %2381 = load <2 x i8>, <2 x i8>* %2380, align 1
  %2382 = zext <2 x i8> %2378 to <2 x i64>
  %2383 = zext <2 x i8> %2381 to <2 x i64>
  %2384 = shl <2 x i64> %2374, <i64 3, i64 3>
  %2385 = shl <2 x i64> %2374, <i64 3, i64 3>
  %2386 = add <2 x i64> %2385, <i64 16, i64 16>
  %2387 = and <2 x i64> %2384, <i64 24, i64 24>
  %2388 = and <2 x i64> %2386, <i64 24, i64 24>
  %2389 = xor <2 x i64> %2387, <i64 24, i64 24>
  %2390 = xor <2 x i64> %2388, <i64 24, i64 24>
  %2391 = shl <2 x i64> %2382, %2389
  %2392 = shl <2 x i64> %2383, %2390
  %2393 = or <2 x i64> %2391, %2372
  %2394 = or <2 x i64> %2392, %2373
  %2395 = add i64 %2371, 4
  %2396 = add <2 x i64> %2374, <i64 4, i64 4>
  %2397 = icmp eq i64 %2395, %2365
  br i1 %2397, label %2398, label %2370, !llvm.loop !47

2398:                                             ; preds = %2370
  %2399 = or <2 x i64> %2394, %2393
  %2400 = shufflevector <2 x i64> %2399, <2 x i64> undef, <2 x i32> <i32 1, i32 undef>
  %2401 = or <2 x i64> %2399, %2400
  %2402 = extractelement <2 x i64> %2401, i32 0
  %2403 = icmp eq i64 %2362, %2365
  br i1 %2403, label %2420, label %2404

2404:                                             ; preds = %2398, %2360
  %2405 = phi i64 [ 0, %2360 ], [ %2402, %2398 ]
  %2406 = phi i64 [ %2326, %2360 ], [ %2366, %2398 ]
  br label %2407

2407:                                             ; preds = %2404, %2407
  %2408 = phi i64 [ %2417, %2407 ], [ %2405, %2404 ]
  %2409 = phi i64 [ %2418, %2407 ], [ %2406, %2404 ]
  %2410 = getelementptr inbounds i8, i8* %2295, i64 %2409
  %2411 = load i8, i8* %2410, align 1
  %2412 = zext i8 %2411 to i64
  %2413 = shl i64 %2409, 3
  %2414 = and i64 %2413, 24
  %2415 = xor i64 %2414, 24
  %2416 = shl i64 %2412, %2415
  %2417 = or i64 %2416, %2408
  %2418 = add nuw i64 %2409, 1
  %2419 = icmp eq i64 %2418, %2294
  br i1 %2419, label %2420, label %2407, !llvm.loop !48

2420:                                             ; preds = %2407, %2398, %2358
  %2421 = phi i64 [ 0, %2358 ], [ %2402, %2398 ], [ %2417, %2407 ]
  %2422 = add i64 %2421, %2356
  br label %2423

2423:                                             ; preds = %2420, %2355
  %2424 = phi i64 [ %2422, %2420 ], [ %2356, %2355 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %75) #17
  store i32 0, i32* %8, align 4
  %2425 = add i64 %2287, %2294
  %2426 = icmp ugt i64 %2425, 31457280
  br i1 %2426, label %2433, label %2427

2427:                                             ; preds = %2423
  %2428 = icmp ugt i64 %2425, %2284
  br i1 %2428, label %2429, label %2434

2429:                                             ; preds = %2427
  %2430 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %508, i64 1, i64 %2284, i64 %2425, i8* %2293, i32* nonnull %8) #17
  %2431 = load i32, i32* %8, align 4
  %2432 = icmp eq i32 %2431, 0
  br i1 %2432, label %2434, label %2433

2433:                                             ; preds = %2429, %2423
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %75) #17
  br label %2442

2434:                                             ; preds = %2429, %2427
  %2435 = phi i64 [ %2284, %2427 ], [ %2425, %2429 ]
  %2436 = phi i8* [ %2293, %2427 ], [ %2430, %2429 ]
  %2437 = getelementptr inbounds i8, i8* %2436, i64 %2287
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2437, i8* align 1 %2295, i64 %2294, i1 false) #17
  %2438 = load i32, i32* %8, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %75) #17
  %2439 = icmp eq i32 %2438, 0
  br i1 %2439, label %2440, label %2442

2440:                                             ; preds = %2434
  %2441 = ptrtoint i8* %2436 to i64
  br label %2447

2442:                                             ; preds = %2434, %2433
  %2443 = phi i64 [ %2284, %2433 ], [ %2435, %2434 ]
  %2444 = load i32, i32* %9, align 4
  %2445 = icmp eq i32 %2444, 0
  br i1 %2445, label %2446, label %2447

2446:                                             ; preds = %2442
  store i32 8, i32* %9, align 4
  br label %2447

2447:                                             ; preds = %2283, %2442, %2446, %2440
  %2448 = phi i64 [ %2435, %2440 ], [ %2443, %2446 ], [ %2443, %2442 ], [ %2284, %2283 ]
  %2449 = phi i64 [ %2424, %2440 ], [ %2424, %2446 ], [ %2424, %2442 ], [ %1144, %2283 ]
  %2450 = phi i64 [ %2441, %2440 ], [ %2286, %2446 ], [ %2286, %2442 ], [ %2286, %2283 ]
  %2451 = phi i64 [ %2425, %2440 ], [ %2287, %2446 ], [ %2287, %2442 ], [ %2287, %2283 ]
  call void @ft_mem_free(%struct.FT_MemoryRec_* %508, i8* %2295) #17
  %2452 = load i32, i32* %9, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %74) #17
  %2453 = icmp eq i32 %2452, 0
  br i1 %2453, label %2454, label %2459

2454:                                             ; preds = %2447
  %2455 = load i64, i64* %1131, align 8
  %2456 = sub i64 %2451, %2455
  store i64 %2456, i64* %1127, align 8
  br label %2473

2457:                                             ; preds = %2142
  %2458 = ptrtoint i8* %2144 to i64
  br label %2459

2459:                                             ; preds = %1342, %2118, %2457, %2447, %2168, %2141, %2112, %1555, %1333, %1325
  %2460 = phi i8* [ %1136, %1333 ], [ %1377, %2447 ], [ %1377, %2112 ], [ %1377, %2141 ], [ %1377, %2168 ], [ %1377, %2457 ], [ %1377, %1555 ], [ %1136, %1325 ], [ %1377, %2118 ], [ %1136, %1342 ]
  %2461 = phi i16* [ %1137, %1333 ], [ %1378, %2447 ], [ %1378, %2112 ], [ %1378, %2141 ], [ %1378, %2168 ], [ %1378, %2457 ], [ %1378, %1555 ], [ %1137, %1325 ], [ %1378, %2118 ], [ %1137, %1342 ]
  %2462 = phi i64 [ %1138, %1333 ], [ %2448, %2447 ], [ %1403, %2112 ], [ %1403, %2141 ], [ %2169, %2168 ], [ %2143, %2457 ], [ %1403, %1555 ], [ %1138, %1325 ], [ %1403, %2118 ], [ %1138, %1342 ]
  %2463 = phi i64 [ 0, %1333 ], [ %2285, %2447 ], [ %1404, %2112 ], [ %1404, %2141 ], [ %1404, %2168 ], [ %1404, %2457 ], [ %1404, %1555 ], [ 0, %1325 ], [ %1404, %2118 ], [ 0, %1342 ]
  %2464 = phi i64 [ %1144, %1333 ], [ %2449, %2447 ], [ %1144, %2112 ], [ %1144, %2141 ], [ %1144, %2168 ], [ %1144, %2457 ], [ %1144, %1555 ], [ %1144, %1325 ], [ %1144, %2118 ], [ %1144, %1342 ]
  %2465 = phi i64 [ %1146, %1333 ], [ %2450, %2447 ], [ %1409, %2112 ], [ %1409, %2141 ], [ %2170, %2168 ], [ %2458, %2457 ], [ %1409, %1555 ], [ %1146, %1325 ], [ %1409, %2118 ], [ %1146, %1342 ]
  %2466 = phi i8* [ null, %1333 ], [ %1360, %2447 ], [ %1360, %2112 ], [ %1360, %2141 ], [ %1360, %2168 ], [ %1360, %2457 ], [ %1360, %1555 ], [ null, %1325 ], [ %1360, %2118 ], [ null, %1342 ]
  %2467 = phi i8* [ null, %1333 ], [ null, %2447 ], [ %1559, %2112 ], [ null, %2141 ], [ null, %2168 ], [ null, %2457 ], [ null, %1555 ], [ null, %1325 ], [ null, %2118 ], [ null, %1342 ]
  %2468 = phi i8* [ null, %1333 ], [ %2288, %2447 ], [ %2113, %2112 ], [ %2129, %2141 ], [ %2129, %2168 ], [ %2129, %2457 ], [ %1556, %1555 ], [ null, %1325 ], [ %1406, %2118 ], [ null, %1342 ]
  %2469 = phi i8* [ null, %1333 ], [ null, %2447 ], [ %2114, %2112 ], [ null, %2141 ], [ null, %2168 ], [ null, %2457 ], [ null, %1555 ], [ null, %1325 ], [ null, %2118 ], [ null, %1342 ]
  %2470 = load i32, i32* %13, align 4
  %2471 = icmp eq i32 %2470, 0
  br i1 %2471, label %2472, label %2473

2472:                                             ; preds = %2459
  store i32 8, i32* %13, align 4
  br label %2473

2473:                                             ; preds = %1336, %1402, %1416, %1420, %1429, %1308, %1314, %1317, %1321, %1356, %1364, %1376, %2459, %2472, %2454
  %2474 = phi i8* [ %1360, %2454 ], [ %2466, %2472 ], [ %2466, %2459 ], [ %1360, %1376 ], [ %1360, %1364 ], [ %1360, %1356 ], [ null, %1321 ], [ null, %1317 ], [ null, %1314 ], [ null, %1308 ], [ %1360, %1429 ], [ %1360, %1420 ], [ %1360, %1416 ], [ %1360, %1402 ], [ null, %1336 ]
  %2475 = phi i8* [ null, %2454 ], [ %2467, %2472 ], [ %2467, %2459 ], [ null, %1376 ], [ null, %1364 ], [ null, %1356 ], [ null, %1321 ], [ null, %1317 ], [ null, %1314 ], [ null, %1308 ], [ null, %1429 ], [ null, %1420 ], [ null, %1416 ], [ null, %1402 ], [ null, %1336 ]
  %2476 = phi i8* [ %2288, %2454 ], [ %2468, %2472 ], [ %2468, %2459 ], [ %1373, %1376 ], [ %1373, %1364 ], [ null, %1356 ], [ null, %1321 ], [ null, %1317 ], [ null, %1314 ], [ null, %1308 ], [ %1406, %1429 ], [ %1406, %1420 ], [ %1406, %1416 ], [ %1406, %1402 ], [ null, %1336 ]
  %2477 = phi i8* [ null, %2454 ], [ %2469, %2472 ], [ %2469, %2459 ], [ null, %1376 ], [ null, %1364 ], [ null, %1356 ], [ null, %1321 ], [ null, %1317 ], [ null, %1314 ], [ null, %1308 ], [ null, %1429 ], [ null, %1420 ], [ null, %1416 ], [ null, %1402 ], [ null, %1336 ]
  %2478 = phi i16 [ %1318, %2454 ], [ %1318, %2472 ], [ %1318, %2459 ], [ %1318, %1376 ], [ %1318, %1364 ], [ %1318, %1356 ], [ %1135, %1321 ], [ %1135, %1317 ], [ %1135, %1314 ], [ %1135, %1308 ], [ %1318, %1429 ], [ %1318, %1420 ], [ %1318, %1416 ], [ %1318, %1402 ], [ %1318, %1336 ]
  %2479 = phi i8* [ %1377, %2454 ], [ %2460, %2472 ], [ %2460, %2459 ], [ %1377, %1376 ], [ %1136, %1364 ], [ %1136, %1356 ], [ %1136, %1321 ], [ %1136, %1317 ], [ %1136, %1314 ], [ %1136, %1308 ], [ %1377, %1429 ], [ %1377, %1420 ], [ %1377, %1416 ], [ %1377, %1402 ], [ %1136, %1336 ]
  %2480 = phi i16* [ %1378, %2454 ], [ %2461, %2472 ], [ %2461, %2459 ], [ %1378, %1376 ], [ %1137, %1364 ], [ %1137, %1356 ], [ %1137, %1321 ], [ %1137, %1317 ], [ %1137, %1314 ], [ %1137, %1308 ], [ %1378, %1429 ], [ %1378, %1420 ], [ %1378, %1416 ], [ %1378, %1402 ], [ %1137, %1336 ]
  %2481 = phi i64 [ %2448, %2454 ], [ %2462, %2472 ], [ %2462, %2459 ], [ %1138, %1376 ], [ %1138, %1364 ], [ %1138, %1356 ], [ %1138, %1321 ], [ %1138, %1317 ], [ %1138, %1314 ], [ %1138, %1308 ], [ %1403, %1429 ], [ %1403, %1420 ], [ %1403, %1416 ], [ %1403, %1402 ], [ %1138, %1336 ]
  %2482 = phi i64 [ %2450, %2454 ], [ %2465, %2472 ], [ %2465, %2459 ], [ %1146, %1376 ], [ %1146, %1364 ], [ %1146, %1356 ], [ %1146, %1321 ], [ %1146, %1317 ], [ %1146, %1314 ], [ %1146, %1308 ], [ %1409, %1429 ], [ %1409, %1420 ], [ %1409, %1416 ], [ %1409, %1402 ], [ %1146, %1336 ]
  %2483 = phi i64 [ %2451, %2454 ], [ %1145, %2472 ], [ %1145, %2459 ], [ %1145, %1376 ], [ %1145, %1364 ], [ %1145, %1356 ], [ %1145, %1321 ], [ %1145, %1317 ], [ %1145, %1314 ], [ %1145, %1308 ], [ %1145, %1429 ], [ %1145, %1420 ], [ %1145, %1416 ], [ %1145, %1402 ], [ %1145, %1336 ]
  %2484 = phi i64 [ %2285, %2454 ], [ %2463, %2472 ], [ %2463, %2459 ], [ 0, %1376 ], [ 0, %1364 ], [ 0, %1356 ], [ 0, %1321 ], [ 0, %1317 ], [ 0, %1314 ], [ 0, %1308 ], [ %1404, %1429 ], [ %1404, %1420 ], [ %1404, %1416 ], [ %1404, %1402 ], [ 0, %1336 ]
  %2485 = phi i64 [ %2449, %2454 ], [ %2464, %2472 ], [ %2464, %2459 ], [ %1144, %1376 ], [ %1144, %1364 ], [ %1144, %1356 ], [ %1144, %1321 ], [ %1144, %1317 ], [ %1144, %1314 ], [ %1144, %1308 ], [ %1144, %1429 ], [ %1144, %1420 ], [ %1144, %1416 ], [ %1144, %1402 ], [ %1144, %1336 ]
  call void @ft_mem_free(%struct.FT_MemoryRec_* %508, i8* %1310) #17
  call void @ft_mem_free(%struct.FT_MemoryRec_* %508, i8* %2474) #17
  call void @ft_mem_free(%struct.FT_MemoryRec_* %508, i8* %2475) #17
  call void @ft_mem_free(%struct.FT_MemoryRec_* %508, i8* %2476) #17
  call void @ft_mem_free(%struct.FT_MemoryRec_* %508, i8* %2477) #17
  %2486 = load i32, i32* %13, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %67) #17
  %2487 = icmp eq i32 %2486, 0
  br i1 %2487, label %2823, label %3010

2488:                                             ; preds = %1307
  %2489 = icmp eq i8 %1140, 0
  br i1 %2489, label %2490, label %2592

2490:                                             ; preds = %2488
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %64) #17
  store i32 0, i32* %7, align 4
  br label %2493

2491:                                             ; preds = %2493
  %2492 = icmp eq i64 %2500, %1053
  br i1 %2492, label %2501, label %2493

2493:                                             ; preds = %2491, %2490
  %2494 = phi i64 [ %2500, %2491 ], [ 0, %2490 ]
  %2495 = getelementptr inbounds %struct.WOFF2_TableRec_*, %struct.WOFF2_TableRec_** %885, i64 %2494
  %2496 = load %struct.WOFF2_TableRec_*, %struct.WOFF2_TableRec_** %2495, align 8
  %2497 = getelementptr inbounds %struct.WOFF2_TableRec_, %struct.WOFF2_TableRec_* %2496, i64 0, i32 1
  %2498 = load i64, i64* %2497, align 8
  %2499 = icmp eq i64 %2498, 1835104368
  %2500 = add nuw nsw i64 %2494, 1
  br i1 %2499, label %2501, label %2491

2501:                                             ; preds = %2493, %2491
  %2502 = phi %struct.WOFF2_TableRec_* [ null, %2491 ], [ %2496, %2493 ]
  br label %2505

2503:                                             ; preds = %2505
  %2504 = icmp eq i64 %2512, %1053
  br i1 %2504, label %2589, label %2505

2505:                                             ; preds = %2503, %2501
  %2506 = phi i64 [ 0, %2501 ], [ %2512, %2503 ]
  %2507 = getelementptr inbounds %struct.WOFF2_TableRec_*, %struct.WOFF2_TableRec_** %885, i64 %2506
  %2508 = load %struct.WOFF2_TableRec_*, %struct.WOFF2_TableRec_** %2507, align 8
  %2509 = getelementptr inbounds %struct.WOFF2_TableRec_, %struct.WOFF2_TableRec_* %2508, i64 0, i32 1
  %2510 = load i64, i64* %2509, align 8
  %2511 = icmp eq i64 %2510, 1751474532
  %2512 = add nuw nsw i64 %2506, 1
  br i1 %2511, label %2513, label %2503

2513:                                             ; preds = %2505
  %2514 = icmp eq %struct.WOFF2_TableRec_* %2502, null
  %2515 = icmp eq %struct.WOFF2_TableRec_* %2508, null
  %2516 = or i1 %2514, %2515
  %2517 = or i1 %1124, %2516
  br i1 %2517, label %2589, label %2518

2518:                                             ; preds = %2513
  %2519 = getelementptr inbounds %struct.WOFF2_TableRec_, %struct.WOFF2_TableRec_* %2502, i64 0, i32 5
  %2520 = load i64, i64* %2519, align 8
  %2521 = call i32 @FT_Stream_Seek(%struct.FT_StreamRec_* %1102, i64 %2520) #17
  store i32 %2521, i32* %7, align 4
  %2522 = icmp eq i32 %2521, 0
  br i1 %2522, label %2523, label %2589

2523:                                             ; preds = %2518
  %2524 = call i32 @FT_Stream_Skip(%struct.FT_StreamRec_* %1102, i64 8) #17
  store i32 %2524, i32* %7, align 4
  %2525 = icmp eq i32 %2524, 0
  br i1 %2525, label %2526, label %2589

2526:                                             ; preds = %2523
  %2527 = call zeroext i16 @FT_Stream_ReadUShort(%struct.FT_StreamRec_* %1102, i32* nonnull %7) #17
  %2528 = load i32, i32* %7, align 4
  %2529 = icmp eq i32 %2528, 0
  br i1 %2529, label %2530, label %2589

2530:                                             ; preds = %2526
  %2531 = getelementptr inbounds %struct.WOFF2_TableRec_, %struct.WOFF2_TableRec_* %2508, i64 0, i32 5
  %2532 = load i64, i64* %2531, align 8
  %2533 = call i32 @FT_Stream_Seek(%struct.FT_StreamRec_* %1102, i64 %2532) #17
  store i32 %2533, i32* %7, align 4
  %2534 = icmp eq i32 %2533, 0
  br i1 %2534, label %2535, label %2589

2535:                                             ; preds = %2530
  %2536 = call i32 @FT_Stream_Skip(%struct.FT_StreamRec_* %1102, i64 50) #17
  store i32 %2536, i32* %7, align 4
  %2537 = icmp eq i32 %2536, 0
  br i1 %2537, label %2538, label %2589

2538:                                             ; preds = %2535
  %2539 = call zeroext i16 @FT_Stream_ReadUShort(%struct.FT_StreamRec_* %1102, i32* nonnull %7) #17
  %2540 = load i32, i32* %7, align 4
  %2541 = icmp eq i32 %2540, 0
  br i1 %2541, label %2542, label %2589

2542:                                             ; preds = %2538
  %2543 = icmp eq i16 %2539, 0
  %2544 = select i1 %2543, i64 2, i64 4
  %2545 = zext i16 %2527 to i64
  %2546 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %508, i64 2, i64 0, i64 %2545, i8* null, i32* nonnull %7) #17
  %2547 = bitcast i8* %2546 to i16*
  %2548 = load i32, i32* %7, align 4
  %2549 = icmp eq i32 %2548, 0
  br i1 %2549, label %2550, label %2589

2550:                                             ; preds = %2542
  %2551 = icmp eq i16 %2527, 0
  br i1 %2551, label %2591, label %2552

2552:                                             ; preds = %2550
  %2553 = load i64, i64* %1125, align 8
  br label %2556

2554:                                             ; preds = %2583
  %2555 = icmp eq i64 %2588, %2545
  br i1 %2555, label %2591, label %2556

2556:                                             ; preds = %2554, %2552
  %2557 = phi i64 [ 0, %2552 ], [ %2588, %2554 ]
  %2558 = phi i64 [ %2553, %2552 ], [ %2562, %2554 ]
  %2559 = call i32 @FT_Stream_Seek(%struct.FT_StreamRec_* %1102, i64 %2558) #17
  store i32 %2559, i32* %7, align 4
  %2560 = icmp eq i32 %2559, 0
  br i1 %2560, label %2561, label %2589

2561:                                             ; preds = %2556
  %2562 = add i64 %2558, %2544
  br i1 %2543, label %2567, label %2563

2563:                                             ; preds = %2561
  %2564 = call i64 @FT_Stream_ReadULong(%struct.FT_StreamRec_* %1102, i32* nonnull %7) #17
  %2565 = load i32, i32* %7, align 4
  %2566 = icmp eq i32 %2565, 0
  br i1 %2566, label %2574, label %2589

2567:                                             ; preds = %2561
  %2568 = call zeroext i16 @FT_Stream_ReadUShort(%struct.FT_StreamRec_* %1102, i32* nonnull %7) #17
  %2569 = load i32, i32* %7, align 4
  %2570 = icmp eq i32 %2569, 0
  br i1 %2570, label %2571, label %2589

2571:                                             ; preds = %2567
  %2572 = zext i16 %2568 to i64
  %2573 = shl nuw nsw i64 %2572, 1
  br label %2574

2574:                                             ; preds = %2571, %2563
  %2575 = phi i64 [ %2564, %2563 ], [ %2573, %2571 ]
  %2576 = load i64, i64* %1126, align 8
  %2577 = add i64 %2576, %2575
  %2578 = call i32 @FT_Stream_Seek(%struct.FT_StreamRec_* %1102, i64 %2577) #17
  store i32 %2578, i32* %7, align 4
  %2579 = icmp eq i32 %2578, 0
  br i1 %2579, label %2580, label %2589

2580:                                             ; preds = %2574
  %2581 = call i32 @FT_Stream_Skip(%struct.FT_StreamRec_* %1102, i64 2) #17
  store i32 %2581, i32* %7, align 4
  %2582 = icmp eq i32 %2581, 0
  br i1 %2582, label %2583, label %2589

2583:                                             ; preds = %2580
  %2584 = call zeroext i16 @FT_Stream_ReadUShort(%struct.FT_StreamRec_* %1102, i32* nonnull %7) #17
  %2585 = getelementptr inbounds i16, i16* %2547, i64 %2557
  store i16 %2584, i16* %2585, align 2
  %2586 = load i32, i32* %7, align 4
  %2587 = icmp eq i32 %2586, 0
  %2588 = add nuw nsw i64 %2557, 1
  br i1 %2587, label %2554, label %2589

2589:                                             ; preds = %2542, %2538, %2535, %2530, %2526, %2523, %2518, %2513, %2503, %2583, %2580, %2574, %2567, %2563, %2556
  %2590 = phi i8* [ %2546, %2556 ], [ %2546, %2563 ], [ %2546, %2567 ], [ %2546, %2574 ], [ %2546, %2580 ], [ %2546, %2583 ], [ %1136, %2503 ], [ %1136, %2513 ], [ %2546, %2542 ], [ %1136, %2538 ], [ %1136, %2535 ], [ %1136, %2530 ], [ %1136, %2526 ], [ %1136, %2523 ], [ %1136, %2518 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %64) #17
  br label %3010

2591:                                             ; preds = %2554, %2550
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %64) #17
  br label %2592

2592:                                             ; preds = %2591, %2488
  %2593 = phi i16 [ %2527, %2591 ], [ %1135, %2488 ]
  %2594 = phi i8* [ %2546, %2591 ], [ %1136, %2488 ]
  %2595 = phi i16* [ %2547, %2591 ], [ %1137, %2488 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %65) #17
  store i32 0, i32* %6, align 4
  %2596 = inttoptr i64 %1146 to i8*
  %2597 = call signext i8 @FT_Stream_ReadChar(%struct.FT_StreamRec_* %1102, i32* nonnull %6) #17
  %2598 = load i32, i32* %6, align 4
  %2599 = icmp ne i32 %2598, 0
  %2600 = icmp ugt i8 %2597, 3
  %2601 = or i1 %2600, %2599
  br i1 %2601, label %2810, label %2602

2602:                                             ; preds = %2592
  %2603 = and i8 %2597, 2
  %2604 = and i8 %2597, 1
  %2605 = icmp eq i8 %2604, 0
  %2606 = icmp eq i8 %2603, 0
  %2607 = and i8 %2597, 3
  %2608 = icmp eq i8 %2607, 0
  br i1 %2608, label %2810, label %2609

2609:                                             ; preds = %2602
  %2610 = zext i16 %1178 to i64
  %2611 = zext i16 %2593 to i64
  %2612 = add i16 %1178, -1
  %2613 = icmp ult i16 %2612, %2593
  br i1 %2613, label %2614, label %2810

2614:                                             ; preds = %2609
  %2615 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %508, i64 2, i64 0, i64 %2610, i8* null, i32* nonnull %6) #17
  %2616 = bitcast i8* %2615 to i16*
  %2617 = load i32, i32* %6, align 4
  %2618 = icmp eq i32 %2617, 0
  br i1 %2618, label %2619, label %2810

2619:                                             ; preds = %2614
  %2620 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %508, i64 2, i64 0, i64 %2611, i8* null, i32* nonnull %6) #17
  %2621 = bitcast i8* %2620 to i16*
  %2622 = load i32, i32* %6, align 4
  %2623 = icmp eq i32 %2622, 0
  br i1 %2623, label %2624, label %2810

2624:                                             ; preds = %2619, %2629
  %2625 = phi i64 [ %2631, %2629 ], [ 0, %2619 ]
  %2626 = call zeroext i16 @FT_Stream_ReadUShort(%struct.FT_StreamRec_* %1102, i32* nonnull %6) #17
  %2627 = load i32, i32* %6, align 4
  %2628 = icmp eq i32 %2627, 0
  br i1 %2628, label %2629, label %2810

2629:                                             ; preds = %2624
  %2630 = getelementptr inbounds i16, i16* %2616, i64 %2625
  store i16 %2626, i16* %2630, align 2
  %2631 = add nuw nsw i64 %2625, 1
  %2632 = icmp eq i64 %2631, %2610
  br i1 %2632, label %2635, label %2624

2633:                                             ; preds = %2644
  %2634 = icmp ult i16 %1178, %2593
  br i1 %2634, label %2649, label %2663

2635:                                             ; preds = %2629, %2644
  %2636 = phi i64 [ %2647, %2644 ], [ 0, %2629 ]
  br i1 %2605, label %2637, label %2641

2637:                                             ; preds = %2635
  %2638 = call zeroext i16 @FT_Stream_ReadUShort(%struct.FT_StreamRec_* %1102, i32* nonnull %6) #17
  %2639 = load i32, i32* %6, align 4
  %2640 = icmp eq i32 %2639, 0
  br i1 %2640, label %2644, label %2810

2641:                                             ; preds = %2635
  %2642 = getelementptr inbounds i16, i16* %2595, i64 %2636
  %2643 = load i16, i16* %2642, align 2
  br label %2644

2644:                                             ; preds = %2641, %2637
  %2645 = phi i16 [ %2638, %2637 ], [ %2643, %2641 ]
  %2646 = getelementptr inbounds i16, i16* %2621, i64 %2636
  store i16 %2645, i16* %2646, align 2
  %2647 = add nuw nsw i64 %2636, 1
  %2648 = icmp eq i64 %2647, %2610
  br i1 %2648, label %2633, label %2635

2649:                                             ; preds = %2633, %2658
  %2650 = phi i64 [ %2661, %2658 ], [ %2610, %2633 ]
  br i1 %2606, label %2651, label %2655

2651:                                             ; preds = %2649
  %2652 = call zeroext i16 @FT_Stream_ReadUShort(%struct.FT_StreamRec_* %1102, i32* nonnull %6) #17
  %2653 = load i32, i32* %6, align 4
  %2654 = icmp eq i32 %2653, 0
  br i1 %2654, label %2658, label %2810

2655:                                             ; preds = %2649
  %2656 = getelementptr inbounds i16, i16* %2595, i64 %2650
  %2657 = load i16, i16* %2656, align 2
  br label %2658

2658:                                             ; preds = %2655, %2651
  %2659 = phi i16 [ %2652, %2651 ], [ %2657, %2655 ]
  %2660 = getelementptr inbounds i16, i16* %2621, i64 %2650
  store i16 %2659, i16* %2660, align 2
  %2661 = add nuw nsw i64 %2650, 1
  %2662 = icmp eq i64 %2661, %2611
  br i1 %2662, label %2663, label %2649

2663:                                             ; preds = %2658, %2633
  %2664 = add nuw nsw i64 %2611, %2610
  %2665 = shl nuw nsw i64 %2664, 1
  %2666 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %508, i64 1, i64 0, i64 %2665, i8* null, i32* nonnull %6) #17
  %2667 = load i32, i32* %6, align 4
  %2668 = icmp eq i32 %2667, 0
  br i1 %2668, label %2669, label %2810

2669:                                             ; preds = %2663
  %2670 = icmp eq i16 %2593, 0
  br i1 %2670, label %2696, label %2671

2671:                                             ; preds = %2669, %2684
  %2672 = phi i64 [ %2694, %2684 ], [ 0, %2669 ]
  %2673 = phi i8* [ %2693, %2684 ], [ %2666, %2669 ]
  %2674 = icmp ult i64 %2672, %2610
  br i1 %2674, label %2675, label %2684

2675:                                             ; preds = %2671
  %2676 = getelementptr inbounds i16, i16* %2616, i64 %2672
  %2677 = load i16, i16* %2676, align 2
  %2678 = lshr i16 %2677, 8
  %2679 = trunc i16 %2678 to i8
  %2680 = getelementptr inbounds i8, i8* %2673, i64 1
  store i8 %2679, i8* %2673, align 1
  %2681 = load i16, i16* %2676, align 2
  %2682 = trunc i16 %2681 to i8
  %2683 = getelementptr inbounds i8, i8* %2673, i64 2
  store i8 %2682, i8* %2680, align 1
  br label %2684

2684:                                             ; preds = %2675, %2671
  %2685 = phi i8* [ %2683, %2675 ], [ %2673, %2671 ]
  %2686 = getelementptr inbounds i16, i16* %2621, i64 %2672
  %2687 = load i16, i16* %2686, align 2
  %2688 = lshr i16 %2687, 8
  %2689 = trunc i16 %2688 to i8
  %2690 = getelementptr inbounds i8, i8* %2685, i64 1
  store i8 %2689, i8* %2685, align 1
  %2691 = load i16, i16* %2686, align 2
  %2692 = trunc i16 %2691 to i8
  %2693 = getelementptr inbounds i8, i8* %2685, i64 2
  store i8 %2692, i8* %2690, align 1
  %2694 = add nuw nsw i64 %2672, 1
  %2695 = icmp eq i64 %2694, %2611
  br i1 %2695, label %2696, label %2671

2696:                                             ; preds = %2684, %2669
  %2697 = and i64 %2665, 262140
  %2698 = icmp eq i64 %2697, 0
  br i1 %2698, label %2726, label %2699

2699:                                             ; preds = %2696, %2699
  %2700 = phi i64 [ %2724, %2699 ], [ 0, %2696 ]
  %2701 = phi i64 [ %2723, %2699 ], [ 0, %2696 ]
  %2702 = getelementptr inbounds i8, i8* %2666, i64 %2700
  %2703 = load i8, i8* %2702, align 1
  %2704 = zext i8 %2703 to i64
  %2705 = shl nuw nsw i64 %2704, 24
  %2706 = or i64 %2700, 1
  %2707 = getelementptr inbounds i8, i8* %2666, i64 %2706
  %2708 = load i8, i8* %2707, align 1
  %2709 = zext i8 %2708 to i64
  %2710 = shl nuw nsw i64 %2709, 16
  %2711 = or i64 %2710, %2705
  %2712 = or i64 %2700, 2
  %2713 = getelementptr inbounds i8, i8* %2666, i64 %2712
  %2714 = load i8, i8* %2713, align 1
  %2715 = zext i8 %2714 to i64
  %2716 = shl nuw nsw i64 %2715, 8
  %2717 = or i64 %2711, %2716
  %2718 = or i64 %2700, 3
  %2719 = getelementptr inbounds i8, i8* %2666, i64 %2718
  %2720 = load i8, i8* %2719, align 1
  %2721 = zext i8 %2720 to i64
  %2722 = or i64 %2717, %2721
  %2723 = add i64 %2722, %2701
  %2724 = add nuw nsw i64 %2700, 4
  %2725 = icmp ult i64 %2724, %2697
  br i1 %2725, label %2699, label %2726

2726:                                             ; preds = %2699, %2696
  %2727 = phi i64 [ 0, %2696 ], [ %2723, %2699 ]
  %2728 = icmp eq i64 %2665, %2697
  br i1 %2728, label %2793, label %2729

2729:                                             ; preds = %2726
  %2730 = icmp ugt i64 %2665, %2697
  br i1 %2730, label %2731, label %2790

2731:                                             ; preds = %2729
  %2732 = sub nsw i64 %2665, %2697
  %2733 = icmp ult i64 %2732, 4
  br i1 %2733, label %2774, label %2734

2734:                                             ; preds = %2731
  %2735 = and i64 %2732, -4
  %2736 = add nsw i64 %2697, %2735
  %2737 = insertelement <2 x i64> undef, i64 %2697, i32 0
  %2738 = shufflevector <2 x i64> %2737, <2 x i64> undef, <2 x i32> zeroinitializer
  %2739 = add <2 x i64> %2738, <i64 0, i64 1>
  br label %2740

2740:                                             ; preds = %2740, %2734
  %2741 = phi i64 [ 0, %2734 ], [ %2765, %2740 ]
  %2742 = phi <2 x i64> [ zeroinitializer, %2734 ], [ %2763, %2740 ]
  %2743 = phi <2 x i64> [ zeroinitializer, %2734 ], [ %2764, %2740 ]
  %2744 = phi <2 x i64> [ %2739, %2734 ], [ %2766, %2740 ]
  %2745 = add i64 %2697, %2741
  %2746 = getelementptr inbounds i8, i8* %2666, i64 %2745
  %2747 = bitcast i8* %2746 to <2 x i8>*
  %2748 = load <2 x i8>, <2 x i8>* %2747, align 1
  %2749 = getelementptr inbounds i8, i8* %2746, i64 2
  %2750 = bitcast i8* %2749 to <2 x i8>*
  %2751 = load <2 x i8>, <2 x i8>* %2750, align 1
  %2752 = zext <2 x i8> %2748 to <2 x i64>
  %2753 = zext <2 x i8> %2751 to <2 x i64>
  %2754 = shl <2 x i64> %2744, <i64 3, i64 3>
  %2755 = shl <2 x i64> %2744, <i64 3, i64 3>
  %2756 = add <2 x i64> %2755, <i64 16, i64 16>
  %2757 = and <2 x i64> %2754, <i64 24, i64 24>
  %2758 = and <2 x i64> %2756, <i64 24, i64 24>
  %2759 = xor <2 x i64> %2757, <i64 24, i64 24>
  %2760 = xor <2 x i64> %2758, <i64 24, i64 24>
  %2761 = shl <2 x i64> %2752, %2759
  %2762 = shl <2 x i64> %2753, %2760
  %2763 = or <2 x i64> %2761, %2742
  %2764 = or <2 x i64> %2762, %2743
  %2765 = add i64 %2741, 4
  %2766 = add <2 x i64> %2744, <i64 4, i64 4>
  %2767 = icmp eq i64 %2765, %2735
  br i1 %2767, label %2768, label %2740, !llvm.loop !49

2768:                                             ; preds = %2740
  %2769 = or <2 x i64> %2764, %2763
  %2770 = shufflevector <2 x i64> %2769, <2 x i64> undef, <2 x i32> <i32 1, i32 undef>
  %2771 = or <2 x i64> %2769, %2770
  %2772 = extractelement <2 x i64> %2771, i32 0
  %2773 = icmp eq i64 %2732, %2735
  br i1 %2773, label %2790, label %2774

2774:                                             ; preds = %2768, %2731
  %2775 = phi i64 [ 0, %2731 ], [ %2772, %2768 ]
  %2776 = phi i64 [ %2697, %2731 ], [ %2736, %2768 ]
  br label %2777

2777:                                             ; preds = %2774, %2777
  %2778 = phi i64 [ %2787, %2777 ], [ %2775, %2774 ]
  %2779 = phi i64 [ %2788, %2777 ], [ %2776, %2774 ]
  %2780 = getelementptr inbounds i8, i8* %2666, i64 %2779
  %2781 = load i8, i8* %2780, align 1
  %2782 = zext i8 %2781 to i64
  %2783 = shl i64 %2779, 3
  %2784 = and i64 %2783, 24
  %2785 = xor i64 %2784, 24
  %2786 = shl i64 %2782, %2785
  %2787 = or i64 %2786, %2778
  %2788 = add nuw i64 %2779, 1
  %2789 = icmp eq i64 %2788, %2665
  br i1 %2789, label %2790, label %2777, !llvm.loop !50

2790:                                             ; preds = %2777, %2768, %2729
  %2791 = phi i64 [ 0, %2729 ], [ %2772, %2768 ], [ %2787, %2777 ]
  %2792 = add i64 %2791, %2727
  br label %2793

2793:                                             ; preds = %2790, %2726
  %2794 = phi i64 [ %2792, %2790 ], [ %2727, %2726 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %66) #17
  store i32 0, i32* %5, align 4
  %2795 = add i64 %2665, %1145
  %2796 = icmp ugt i64 %2795, 31457280
  br i1 %2796, label %2803, label %2797

2797:                                             ; preds = %2793
  %2798 = icmp ugt i64 %2795, %1138
  br i1 %2798, label %2799, label %2804

2799:                                             ; preds = %2797
  %2800 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %508, i64 1, i64 %1138, i64 %2795, i8* %2596, i32* nonnull %5) #17
  %2801 = load i32, i32* %5, align 4
  %2802 = icmp eq i32 %2801, 0
  br i1 %2802, label %2804, label %2803

2803:                                             ; preds = %2799, %2793
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %66) #17
  br label %2810

2804:                                             ; preds = %2799, %2797
  %2805 = phi i64 [ %1138, %2797 ], [ %2795, %2799 ]
  %2806 = phi i8* [ %2596, %2797 ], [ %2800, %2799 ]
  %2807 = getelementptr inbounds i8, i8* %2806, i64 %1145
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2807, i8* align 1 %2666, i64 %2665, i1 false) #17
  %2808 = load i32, i32* %5, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %66) #17
  %2809 = icmp eq i32 %2808, 0
  br i1 %2809, label %2819, label %2810

2810:                                             ; preds = %2804, %2663, %2619, %2614, %2609, %2602, %2592, %2624, %2637, %2651, %2803
  %2811 = phi i64 [ %1138, %2803 ], [ %1138, %2651 ], [ %1138, %2637 ], [ %1138, %2624 ], [ %1138, %2592 ], [ %1138, %2602 ], [ %1138, %2609 ], [ %1138, %2614 ], [ %1138, %2619 ], [ %1138, %2663 ], [ %2805, %2804 ]
  %2812 = phi i8* [ %2615, %2803 ], [ %2615, %2651 ], [ %2615, %2637 ], [ %2615, %2624 ], [ null, %2592 ], [ null, %2602 ], [ null, %2609 ], [ %2615, %2614 ], [ %2615, %2619 ], [ %2615, %2663 ], [ %2615, %2804 ]
  %2813 = phi i8* [ %2620, %2803 ], [ %2620, %2651 ], [ %2620, %2637 ], [ %2620, %2624 ], [ null, %2592 ], [ null, %2602 ], [ null, %2609 ], [ null, %2614 ], [ %2620, %2619 ], [ %2620, %2663 ], [ %2620, %2804 ]
  %2814 = phi i8* [ %2666, %2803 ], [ null, %2651 ], [ null, %2637 ], [ null, %2624 ], [ null, %2592 ], [ null, %2602 ], [ null, %2609 ], [ null, %2614 ], [ null, %2619 ], [ %2666, %2663 ], [ %2666, %2804 ]
  call void @ft_mem_free(%struct.FT_MemoryRec_* %508, i8* %2812) #17
  call void @ft_mem_free(%struct.FT_MemoryRec_* %508, i8* %2813) #17
  call void @ft_mem_free(%struct.FT_MemoryRec_* %508, i8* %2814) #17
  %2815 = load i32, i32* %6, align 4
  %2816 = icmp eq i32 %2815, 0
  br i1 %2816, label %2817, label %2818

2817:                                             ; preds = %2810
  store i32 8, i32* %6, align 4
  br label %2818

2818:                                             ; preds = %2817, %2810
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %65) #17
  br label %3010

2819:                                             ; preds = %2804
  %2820 = ptrtoint i8* %2806 to i64
  call void @ft_mem_free(%struct.FT_MemoryRec_* %508, i8* %2615) #17
  call void @ft_mem_free(%struct.FT_MemoryRec_* %508, i8* %2620) #17
  call void @ft_mem_free(%struct.FT_MemoryRec_* %508, i8* %2666) #17
  %2821 = load i32, i32* %6, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %65) #17
  %2822 = icmp eq i32 %2821, 0
  br i1 %2822, label %2823, label %3006

2823:                                             ; preds = %2819, %2473, %1307, %1300
  %2824 = phi i16 [ %1135, %1300 ], [ %2593, %2819 ], [ %1135, %1307 ], [ %2478, %2473 ]
  %2825 = phi i8* [ %1136, %1300 ], [ %2594, %2819 ], [ %1136, %1307 ], [ %2479, %2473 ]
  %2826 = phi i16* [ %1137, %1300 ], [ %2595, %2819 ], [ %1137, %1307 ], [ %2480, %2473 ]
  %2827 = phi i64 [ %1301, %1300 ], [ %2805, %2819 ], [ %1138, %1307 ], [ %2481, %2473 ]
  %2828 = phi i64 [ %1304, %1300 ], [ %2820, %2819 ], [ %1146, %1307 ], [ %2482, %2473 ]
  %2829 = phi i64 [ %1291, %1300 ], [ %2795, %2819 ], [ %1145, %1307 ], [ %2483, %2473 ]
  %2830 = phi i64 [ %1289, %1300 ], [ %2794, %2819 ], [ %1144, %1307 ], [ %2484, %2473 ]
  %2831 = phi i64 [ %1144, %1300 ], [ %1144, %2819 ], [ %1144, %1307 ], [ %2485, %2473 ]
  %2832 = phi i8 [ %1140, %1300 ], [ %1140, %2819 ], [ %1140, %1307 ], [ 1, %2473 ]
  %2833 = phi i64 [ %1145, %1300 ], [ %1145, %2819 ], [ %1160, %1307 ], [ %1145, %2473 ]
  %2834 = lshr i64 %1150, 24
  %2835 = trunc i64 %2834 to i8
  store i8 %2835, i8* %1097, align 1
  %2836 = lshr i64 %1150, 16
  %2837 = trunc i64 %2836 to i8
  store i8 %2837, i8* %1109, align 1
  %2838 = lshr i64 %1150, 8
  %2839 = trunc i64 %2838 to i8
  store i8 %2839, i8* %1110, align 1
  %2840 = trunc i64 %1150 to i8
  store i8 %2840, i8* %1111, align 1
  %2841 = lshr i64 %2830, 24
  %2842 = trunc i64 %2841 to i8
  store i8 %2842, i8* %1112, align 1
  %2843 = lshr i64 %2830, 16
  %2844 = trunc i64 %2843 to i8
  store i8 %2844, i8* %1113, align 1
  %2845 = lshr i64 %2830, 8
  %2846 = trunc i64 %2845 to i8
  store i8 %2846, i8* %1114, align 1
  %2847 = trunc i64 %2830 to i8
  store i8 %2847, i8* %1115, align 1
  %2848 = lshr i64 %2833, 24
  %2849 = trunc i64 %2848 to i8
  store i8 %2849, i8* %1116, align 1
  %2850 = lshr i64 %2833, 16
  %2851 = trunc i64 %2850 to i8
  store i8 %2851, i8* %1117, align 1
  %2852 = lshr i64 %2833, 8
  %2853 = trunc i64 %2852 to i8
  store i8 %2853, i8* %1118, align 1
  %2854 = trunc i64 %2833 to i8
  store i8 %2854, i8* %1119, align 1
  %2855 = lshr i64 %1152, 24
  %2856 = trunc i64 %2855 to i8
  store i8 %2856, i8* %1120, align 1
  %2857 = lshr i64 %1152, 16
  %2858 = trunc i64 %2857 to i8
  store i8 %2858, i8* %1121, align 1
  %2859 = lshr i64 %1152, 8
  %2860 = trunc i64 %2859 to i8
  store i8 %2860, i8* %1122, align 1
  %2861 = trunc i64 %1152 to i8
  store i8 %2861, i8* %1123, align 1
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %77) #17
  store i32 0, i32* %19, align 4
  %2862 = inttoptr i64 %2828 to i8*
  %2863 = add i64 %1142, 16
  %2864 = icmp ugt i64 %2863, 31457280
  br i1 %2864, label %2876, label %2865

2865:                                             ; preds = %2823
  %2866 = icmp ugt i64 %2863, %2827
  br i1 %2866, label %2867, label %2871

2867:                                             ; preds = %2865
  %2868 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %508, i64 1, i64 %2827, i64 %2863, i8* %2862, i32* nonnull %19) #17
  %2869 = load i32, i32* %19, align 4
  %2870 = icmp eq i32 %2869, 0
  br i1 %2870, label %2871, label %2876

2871:                                             ; preds = %2867, %2865
  %2872 = phi i64 [ %2827, %2865 ], [ %2863, %2867 ]
  %2873 = phi i8* [ %2862, %2865 ], [ %2868, %2867 ]
  %2874 = getelementptr inbounds i8, i8* %2873, i64 %1142
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2874, i8* align 1 %1097, i64 16, i1 false) #17
  %2875 = ptrtoint i8* %2873 to i64
  br label %2876

2876:                                             ; preds = %2871, %2867, %2823
  %2877 = phi i64 [ %2827, %2823 ], [ %2872, %2871 ], [ %2827, %2867 ]
  %2878 = phi i64 [ %2828, %2823 ], [ %2875, %2871 ], [ %2828, %2867 ]
  %2879 = phi i64 [ %1142, %2823 ], [ %2863, %2871 ], [ %1142, %2867 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %77) #17
  %2880 = load i8, i8* %1097, align 1
  %2881 = zext i8 %2880 to i64
  %2882 = shl nuw nsw i64 %2881, 24
  %2883 = load i8, i8* %1109, align 1
  %2884 = zext i8 %2883 to i64
  %2885 = shl nuw nsw i64 %2884, 16
  %2886 = or i64 %2885, %2882
  %2887 = load i8, i8* %1110, align 1
  %2888 = zext i8 %2887 to i64
  %2889 = shl nuw nsw i64 %2888, 8
  %2890 = or i64 %2886, %2889
  %2891 = load i8, i8* %1111, align 1
  %2892 = zext i8 %2891 to i64
  %2893 = or i64 %2890, %2892
  %2894 = load i8, i8* %1112, align 1
  %2895 = zext i8 %2894 to i64
  %2896 = shl nuw nsw i64 %2895, 24
  %2897 = load i8, i8* %1113, align 1
  %2898 = zext i8 %2897 to i64
  %2899 = shl nuw nsw i64 %2898, 16
  %2900 = or i64 %2899, %2896
  %2901 = load i8, i8* %1114, align 1
  %2902 = zext i8 %2901 to i64
  %2903 = shl nuw nsw i64 %2902, 8
  %2904 = or i64 %2900, %2903
  %2905 = load i8, i8* %1115, align 1
  %2906 = zext i8 %2905 to i64
  %2907 = or i64 %2904, %2906
  %2908 = load i8, i8* %1116, align 1
  %2909 = zext i8 %2908 to i64
  %2910 = shl nuw nsw i64 %2909, 24
  %2911 = load i8, i8* %1117, align 1
  %2912 = zext i8 %2911 to i64
  %2913 = shl nuw nsw i64 %2912, 16
  %2914 = or i64 %2913, %2910
  %2915 = load i8, i8* %1118, align 1
  %2916 = zext i8 %2915 to i64
  %2917 = shl nuw nsw i64 %2916, 8
  %2918 = or i64 %2914, %2917
  %2919 = load i8, i8* %1119, align 1
  %2920 = zext i8 %2919 to i64
  %2921 = or i64 %2918, %2920
  %2922 = load i8, i8* %1120, align 1
  %2923 = zext i8 %2922 to i64
  %2924 = shl nuw nsw i64 %2923, 24
  %2925 = load i8, i8* %1121, align 1
  %2926 = zext i8 %2925 to i64
  %2927 = shl nuw nsw i64 %2926, 16
  %2928 = or i64 %2927, %2924
  %2929 = load i8, i8* %1122, align 1
  %2930 = zext i8 %2929 to i64
  %2931 = shl nuw nsw i64 %2930, 8
  %2932 = or i64 %2928, %2931
  %2933 = load i8, i8* %1123, align 1
  %2934 = zext i8 %2933 to i64
  %2935 = or i64 %2932, %2934
  %2936 = add i64 %2830, %1141
  %2937 = add i64 %2936, %2893
  %2938 = add i64 %2937, %2907
  %2939 = add i64 %2938, %2921
  %2940 = add i64 %2939, %2935
  call void @llvm.lifetime.start.p0i8(i64 3, i8* nonnull %79)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %79, i8 0, i64 3, i1 false)
  %2941 = icmp ugt i64 %2829, -4
  br i1 %2941, label %2964, label %2942

2942:                                             ; preds = %2876
  %2943 = add nuw i64 %2829, 3
  %2944 = and i64 %2943, -4
  %2945 = sub i64 %2944, %2829
  %2946 = icmp eq i64 %2945, 0
  br i1 %2946, label %2966, label %2947

2947:                                             ; preds = %2942
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %78) #17
  store i32 0, i32* %20, align 4
  %2948 = inttoptr i64 %2878 to i8*
  %2949 = icmp ugt i64 %2944, 31457280
  br i1 %2949, label %2956, label %2950

2950:                                             ; preds = %2947
  %2951 = icmp ugt i64 %2944, %2877
  br i1 %2951, label %2952, label %2957

2952:                                             ; preds = %2950
  %2953 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %508, i64 1, i64 %2877, i64 %2944, i8* %2948, i32* nonnull %20) #17
  %2954 = load i32, i32* %20, align 4
  %2955 = icmp eq i32 %2954, 0
  br i1 %2955, label %2957, label %2956

2956:                                             ; preds = %2952, %2947
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %78) #17
  br label %2964

2957:                                             ; preds = %2952, %2950
  %2958 = phi i64 [ %2877, %2950 ], [ %2944, %2952 ]
  %2959 = phi i8* [ %2948, %2950 ], [ %2953, %2952 ]
  %2960 = getelementptr inbounds i8, i8* %2959, i64 %2829
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2960, i8* nonnull align 1 %79, i64 %2945, i1 false) #17
  %2961 = ptrtoint i8* %2959 to i64
  %2962 = load i32, i32* %20, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %78) #17
  %2963 = icmp eq i32 %2962, 0
  br i1 %2963, label %2966, label %2964

2964:                                             ; preds = %2957, %2876, %2956
  %2965 = phi i64 [ %2877, %2956 ], [ %2877, %2876 ], [ %2958, %2957 ]
  call void @llvm.lifetime.end.p0i8(i64 3, i8* nonnull %79)
  br label %3010

2966:                                             ; preds = %2957, %2942
  %2967 = phi i64 [ %2877, %2942 ], [ %2958, %2957 ]
  %2968 = phi i64 [ %2878, %2942 ], [ %2961, %2957 ]
  %2969 = phi i64 [ %2829, %2942 ], [ %2944, %2957 ]
  call void @llvm.lifetime.end.p0i8(i64 3, i8* nonnull %79)
  %2970 = add i64 %2833, %1152
  %2971 = icmp ugt i64 %2970, %2969
  %2972 = add nuw nsw i64 %1139, 1
  br i1 %2971, label %3010, label %1132

2973:                                             ; preds = %2975
  %2974 = icmp eq i64 %2982, %1053
  br i1 %2974, label %3010, label %2975

2975:                                             ; preds = %1132, %2973
  %2976 = phi i64 [ %2982, %2973 ], [ 0, %1132 ]
  %2977 = getelementptr inbounds %struct.WOFF2_TableRec_*, %struct.WOFF2_TableRec_** %885, i64 %2976
  %2978 = load %struct.WOFF2_TableRec_*, %struct.WOFF2_TableRec_** %2977, align 8
  %2979 = getelementptr inbounds %struct.WOFF2_TableRec_, %struct.WOFF2_TableRec_* %2978, i64 0, i32 1
  %2980 = load i64, i64* %2979, align 8
  %2981 = icmp eq i64 %2980, 1751474532
  %2982 = add nuw nsw i64 %2976, 1
  br i1 %2981, label %2983, label %2973

2983:                                             ; preds = %2975
  %2984 = icmp eq %struct.WOFF2_TableRec_* %2978, null
  br i1 %2984, label %3010, label %2985

2985:                                             ; preds = %2983
  %2986 = getelementptr inbounds %struct.WOFF2_TableRec_, %struct.WOFF2_TableRec_* %2978, i64 0, i32 2
  %2987 = load i64, i64* %2986, align 8
  %2988 = icmp ult i64 %2987, 12
  br i1 %2988, label %3010, label %2989

2989:                                             ; preds = %2985
  %2990 = inttoptr i64 %2968 to i8*
  %2991 = getelementptr inbounds %struct.WOFF2_TableRec_, %struct.WOFF2_TableRec_* %2978, i64 0, i32 7
  %2992 = load i64, i64* %2991, align 8
  %2993 = getelementptr inbounds i8, i8* %2990, i64 8
  %2994 = getelementptr inbounds i8, i8* %2993, i64 %2992
  %2995 = sub i64 2981146554, %2940
  %2996 = lshr i64 %2995, 24
  %2997 = trunc i64 %2996 to i8
  %2998 = getelementptr inbounds i8, i8* %2994, i64 1
  store i8 %2997, i8* %2994, align 1
  %2999 = lshr i64 %2995, 16
  %3000 = trunc i64 %2999 to i8
  %3001 = getelementptr inbounds i8, i8* %2998, i64 1
  store i8 %3000, i8* %2998, align 1
  %3002 = lshr i64 %2995, 8
  %3003 = trunc i64 %3002 to i8
  %3004 = getelementptr inbounds i8, i8* %3001, i64 1
  store i8 %3003, i8* %3001, align 1
  %3005 = trunc i64 %2995 to i8
  store i8 %3005, i8* %3004, align 1
  store i64 %2969, i64* %80, align 8
  br label %3023

3006:                                             ; preds = %2819
  %3007 = ptrtoint i8* %2806 to i64
  br label %3010

3008:                                             ; preds = %1300
  %3009 = ptrtoint i8* %1302 to i64
  br label %3010

3010:                                             ; preds = %2966, %2473, %1307, %1183, %2973, %3006, %3008, %2985, %2983, %2964, %2818, %2589, %1299, %1175, %1105
  %3011 = phi i8* [ %1136, %1299 ], [ %2825, %2964 ], [ %2825, %2983 ], [ %2825, %2985 ], [ %2590, %2589 ], [ %2594, %2818 ], [ %1136, %1175 ], [ null, %1105 ], [ %2594, %3006 ], [ %1136, %3008 ], [ %2825, %2973 ], [ %2825, %2966 ], [ %2479, %2473 ], [ %1136, %1307 ], [ %1136, %1183 ]
  %3012 = phi i64 [ %1138, %1299 ], [ %2965, %2964 ], [ %2967, %2983 ], [ %2967, %2985 ], [ %1138, %2589 ], [ %2811, %2818 ], [ %1138, %1175 ], [ %900, %1105 ], [ %2805, %3006 ], [ %1301, %3008 ], [ %2967, %2973 ], [ %2967, %2966 ], [ %2481, %2473 ], [ %1138, %1307 ], [ %1138, %1183 ]
  %3013 = phi i64 [ %1146, %1299 ], [ %2878, %2964 ], [ %2968, %2983 ], [ %2968, %2985 ], [ %1146, %2589 ], [ %1146, %2818 ], [ %1146, %1175 ], [ %902, %1105 ], [ %3007, %3006 ], [ %3009, %3008 ], [ %2968, %2973 ], [ %2968, %2966 ], [ %2482, %2473 ], [ %1146, %1307 ], [ %1146, %1183 ]
  %3014 = load i32, i32* %22, align 4
  br label %3015

3015:                                             ; preds = %1134, %3010
  %3016 = phi i8* [ %3011, %3010 ], [ %1136, %1134 ]
  %3017 = phi i64 [ %3012, %3010 ], [ %1138, %1134 ]
  %3018 = phi i32 [ %3014, %3010 ], [ %1161, %1134 ]
  %3019 = phi i64 [ %3013, %3010 ], [ %1146, %1134 ]
  %3020 = icmp eq i32 %3018, 0
  br i1 %3020, label %3021, label %3023

3021:                                             ; preds = %3015
  store i32 8, i32* %22, align 4
  br label %3023

3022:                                             ; preds = %1086, %1081, %1079
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %62) #17
  store i32 8, i32* %23, align 4
  br label %3063

3023:                                             ; preds = %1094, %1100, %3015, %3021, %2989
  %3024 = phi %struct.FT_StreamRec_* [ %1102, %2989 ], [ %1102, %3021 ], [ %1102, %3015 ], [ %1102, %1100 ], [ null, %1094 ]
  %3025 = phi i8* [ %1101, %2989 ], [ %1101, %3021 ], [ %1101, %3015 ], [ %1101, %1100 ], [ null, %1094 ]
  %3026 = phi i8* [ %2825, %2989 ], [ %3016, %3021 ], [ %3016, %3015 ], [ null, %1100 ], [ null, %1094 ]
  %3027 = phi i64 [ %2968, %2989 ], [ %3019, %3021 ], [ %3019, %3015 ], [ %902, %1100 ], [ %902, %1094 ]
  %3028 = phi i64 [ %2967, %2989 ], [ %3017, %3021 ], [ %3017, %3015 ], [ %900, %1100 ], [ %900, %1094 ]
  call void @ft_mem_free(%struct.FT_MemoryRec_* %508, i8* %1097) #17
  call void @FT_Stream_Close(%struct.FT_StreamRec_* %3024) #17
  call void @ft_mem_free(%struct.FT_MemoryRec_* %508, i8* %3025) #17
  %3029 = load i32, i32* %22, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %62) #17
  store i32 %3029, i32* %23, align 4
  %3030 = icmp eq i32 %3029, 0
  br i1 %3030, label %3031, label %3063

3031:                                             ; preds = %3023
  %3032 = load i64, i64* %80, align 8
  %3033 = icmp ult i64 %3032, %3028
  br i1 %3033, label %3034, label %3042

3034:                                             ; preds = %3031
  %3035 = inttoptr i64 %3027 to i8*
  %3036 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %508, i64 1, i64 %3028, i64 %3032, i8* %3035, i32* nonnull %23) #17
  %3037 = ptrtoint i8* %3036 to i64
  %3038 = load i32, i32* %23, align 4
  %3039 = icmp eq i32 %3038, 0
  br i1 %3039, label %3040, label %3063

3040:                                             ; preds = %3034
  %3041 = load i64, i64* %80, align 8
  br label %3042

3042:                                             ; preds = %3040, %3031
  %3043 = phi i64 [ %3041, %3040 ], [ %3032, %3031 ]
  %3044 = phi i64 [ %3037, %3040 ], [ %3027, %3031 ]
  %3045 = inttoptr i64 %3044 to i8*
  call void @FT_Stream_OpenMemory(%struct.FT_StreamRec_* %907, i8* %3045, i64 %3043) #17
  %3046 = bitcast %struct.FT_MemoryRec_** %507 to i64*
  %3047 = load i64, i64* %3046, align 8
  %3048 = getelementptr inbounds i8, i8* %906, i64 56
  %3049 = bitcast i8* %3048 to i64*
  store i64 %3047, i64* %3049, align 8
  %3050 = getelementptr inbounds i8, i8* %906, i64 48
  %3051 = bitcast i8* %3050 to void (%struct.FT_StreamRec_*)**
  store void (%struct.FT_StreamRec_*)* @stream_close, void (%struct.FT_StreamRec_*)** %3051, align 8
  %3052 = load %struct.FT_StreamRec_*, %struct.FT_StreamRec_** %81, align 8
  %3053 = load i64, i64* %82, align 8
  %3054 = lshr i64 %3053, 10
  %3055 = trunc i64 %3054 to i32
  %3056 = and i32 %3055, 1
  call void @FT_Stream_Free(%struct.FT_StreamRec_* %3052, i32 %3056) #17
  store i8* %906, i8** %83, align 8
  %3057 = load i64, i64* %82, align 8
  %3058 = and i64 %3057, -1025
  store i64 %3058, i64* %82, align 8
  %3059 = load i32, i32* %2, align 4
  %3060 = icmp sgt i32 %3059, -1
  br i1 %3060, label %3061, label %3062

3061:                                             ; preds = %3042
  store i32 0, i32* %2, align 4
  br label %3063

3062:                                             ; preds = %3042
  store i32 -1, i32* %2, align 4
  br label %3063

3063:                                             ; preds = %624, %613, %590, %579, %758, %694, %702, %689, %3062, %3061, %3034, %3023, %3022, %1047, %1043, %1039, %1038, %1035, %1031, %905, %899, %855, %825, %818, %807, %794, %780, %774, %752, %724, %680, %679, %673, %672, %667, %663, %638, %633, %569, %564
  %3064 = phi i8* [ null, %663 ], [ null, %672 ], [ null, %679 ], [ null, %774 ], [ null, %1031 ], [ null, %1035 ], [ null, %1038 ], [ %3026, %3061 ], [ %3026, %3062 ], [ %3026, %3034 ], [ %3026, %3023 ], [ null, %1047 ], [ null, %1043 ], [ null, %1039 ], [ null, %905 ], [ null, %899 ], [ null, %818 ], [ null, %807 ], [ null, %794 ], [ null, %780 ], [ null, %680 ], [ null, %673 ], [ null, %667 ], [ null, %569 ], [ null, %564 ], [ null, %3022 ], [ null, %633 ], [ null, %638 ], [ null, %752 ], [ null, %724 ], [ null, %825 ], [ null, %855 ], [ null, %689 ], [ null, %702 ], [ null, %694 ], [ null, %758 ], [ null, %579 ], [ null, %590 ], [ null, %613 ], [ null, %624 ]
  %3065 = phi i64 [ 0, %663 ], [ 0, %672 ], [ 0, %679 ], [ 0, %774 ], [ %902, %1031 ], [ %902, %1035 ], [ %902, %1038 ], [ %3044, %3061 ], [ %3044, %3062 ], [ %3037, %3034 ], [ %3027, %3023 ], [ %902, %1047 ], [ %902, %1043 ], [ %902, %1039 ], [ %902, %905 ], [ %902, %899 ], [ 0, %818 ], [ 0, %807 ], [ 0, %794 ], [ 0, %780 ], [ 0, %680 ], [ 0, %673 ], [ 0, %667 ], [ 0, %569 ], [ 0, %564 ], [ %902, %3022 ], [ 0, %633 ], [ 0, %638 ], [ 0, %752 ], [ 0, %724 ], [ 0, %825 ], [ 0, %855 ], [ 0, %689 ], [ 0, %702 ], [ 0, %694 ], [ 0, %758 ], [ 0, %579 ], [ 0, %590 ], [ 0, %613 ], [ 0, %624 ]
  %3066 = phi i8* [ %572, %663 ], [ %572, %672 ], [ %572, %679 ], [ %572, %774 ], [ %884, %1031 ], [ %884, %1035 ], [ %884, %1038 ], [ %884, %3061 ], [ %884, %3062 ], [ %884, %3034 ], [ %884, %3023 ], [ %884, %1047 ], [ %884, %1043 ], [ %884, %1039 ], [ %884, %905 ], [ %884, %899 ], [ %572, %818 ], [ %572, %807 ], [ %572, %794 ], [ %572, %780 ], [ %572, %680 ], [ %572, %673 ], [ %572, %667 ], [ %572, %569 ], [ null, %564 ], [ %884, %3022 ], [ %572, %633 ], [ %572, %638 ], [ %572, %752 ], [ %572, %724 ], [ %572, %825 ], [ %860, %855 ], [ %572, %689 ], [ %572, %702 ], [ %572, %694 ], [ %572, %758 ], [ %572, %579 ], [ %572, %590 ], [ %572, %613 ], [ %572, %624 ]
  %3067 = phi i8* [ null, %663 ], [ null, %672 ], [ null, %679 ], [ null, %774 ], [ %906, %1031 ], [ %906, %1035 ], [ %906, %1038 ], [ %906, %3061 ], [ %906, %3062 ], [ %906, %3034 ], [ %906, %3023 ], [ %906, %1047 ], [ %906, %1043 ], [ %906, %1039 ], [ %906, %905 ], [ null, %899 ], [ null, %818 ], [ null, %807 ], [ null, %794 ], [ null, %780 ], [ null, %680 ], [ null, %673 ], [ null, %667 ], [ null, %569 ], [ null, %564 ], [ %906, %3022 ], [ null, %633 ], [ null, %638 ], [ null, %752 ], [ null, %724 ], [ null, %825 ], [ null, %855 ], [ null, %689 ], [ null, %702 ], [ null, %694 ], [ null, %758 ], [ null, %579 ], [ null, %590 ], [ null, %613 ], [ null, %624 ]
  %3068 = phi %struct.FT_StreamRec_* [ null, %663 ], [ null, %672 ], [ null, %679 ], [ null, %774 ], [ %907, %1031 ], [ %907, %1035 ], [ %907, %1038 ], [ %907, %3061 ], [ %907, %3062 ], [ %907, %3034 ], [ %907, %3023 ], [ %907, %1047 ], [ %907, %1043 ], [ %907, %1039 ], [ %907, %905 ], [ null, %899 ], [ null, %818 ], [ null, %807 ], [ null, %794 ], [ null, %780 ], [ null, %680 ], [ null, %673 ], [ null, %667 ], [ null, %569 ], [ null, %564 ], [ %907, %3022 ], [ null, %633 ], [ null, %638 ], [ null, %752 ], [ null, %724 ], [ null, %825 ], [ null, %855 ], [ null, %689 ], [ null, %702 ], [ null, %694 ], [ null, %758 ], [ null, %579 ], [ null, %590 ], [ null, %613 ], [ null, %624 ]
  %3069 = phi i8* [ null, %663 ], [ null, %672 ], [ null, %679 ], [ null, %774 ], [ null, %1031 ], [ null, %1035 ], [ null, %1038 ], [ %1040, %3061 ], [ %1040, %3062 ], [ %1040, %3034 ], [ %1040, %3023 ], [ %1040, %1047 ], [ %1040, %1043 ], [ %1040, %1039 ], [ null, %905 ], [ null, %899 ], [ null, %818 ], [ null, %807 ], [ null, %794 ], [ null, %780 ], [ null, %680 ], [ null, %673 ], [ null, %667 ], [ null, %569 ], [ null, %564 ], [ %1040, %3022 ], [ null, %633 ], [ null, %638 ], [ null, %752 ], [ null, %724 ], [ null, %825 ], [ null, %855 ], [ null, %689 ], [ null, %702 ], [ null, %694 ], [ null, %758 ], [ null, %579 ], [ null, %590 ], [ null, %613 ], [ null, %624 ]
  call void @ft_mem_free(%struct.FT_MemoryRec_* %508, i8* %565) #17
  call void @ft_mem_free(%struct.FT_MemoryRec_* %508, i8* %3066) #17
  call void @ft_mem_free(%struct.FT_MemoryRec_* %508, i8* %3069) #17
  call void @ft_mem_free(%struct.FT_MemoryRec_* %508, i8* %3064) #17
  %3070 = load %struct.WOFF2_TtcFontRec_*, %struct.WOFF2_TtcFontRec_** %53, align 8
  %3071 = icmp eq %struct.WOFF2_TtcFontRec_* %3070, null
  br i1 %3071, label %3091, label %3072

3072:                                             ; preds = %3063
  %3073 = bitcast %struct.WOFF2_TtcFontRec_* %3070 to i8*
  %3074 = load i16, i16* %55, align 8
  %3075 = icmp eq i16 %3074, 0
  br i1 %3075, label %3089, label %3076

3076:                                             ; preds = %3072, %3076
  %3077 = phi %struct.WOFF2_TtcFontRec_* [ %3082, %3076 ], [ %3070, %3072 ]
  %3078 = phi i32 [ %3083, %3076 ], [ 0, %3072 ]
  %3079 = getelementptr inbounds %struct.WOFF2_TtcFontRec_, %struct.WOFF2_TtcFontRec_* %3077, i64 0, i32 2
  %3080 = bitcast i16** %3079 to i8**
  %3081 = load i8*, i8** %3080, align 8
  call void @ft_mem_free(%struct.FT_MemoryRec_* %508, i8* %3081) #17
  store i16* null, i16** %3079, align 8
  %3082 = getelementptr inbounds %struct.WOFF2_TtcFontRec_, %struct.WOFF2_TtcFontRec_* %3077, i64 1
  %3083 = add nuw nsw i32 %3078, 1
  %3084 = load i16, i16* %55, align 8
  %3085 = zext i16 %3084 to i32
  %3086 = icmp ult i32 %3083, %3085
  br i1 %3086, label %3076, label %3087

3087:                                             ; preds = %3076
  %3088 = load i8*, i8** %57, align 8
  br label %3089

3089:                                             ; preds = %3087, %3072
  %3090 = phi i8* [ %3088, %3087 ], [ %3073, %3072 ]
  call void @ft_mem_free(%struct.FT_MemoryRec_* %508, i8* %3090) #17
  store %struct.WOFF2_TtcFontRec_* null, %struct.WOFF2_TtcFontRec_** %53, align 8
  br label %3091

3091:                                             ; preds = %3089, %3063
  %3092 = load i32, i32* %23, align 4
  %3093 = icmp eq i32 %3092, 0
  br i1 %3093, label %3094, label %3095

3094:                                             ; preds = %3091
  call void @llvm.lifetime.end.p0i8(i64 136, i8* nonnull %44) #17
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %43) #17
  store i32 0, i32* %29, align 4
  br label %497

3095:                                             ; preds = %3091
  %3096 = inttoptr i64 %3065 to i8*
  call void @ft_mem_free(%struct.FT_MemoryRec_* %508, i8* %3096) #17
  %3097 = icmp eq %struct.FT_StreamRec_* %3068, null
  br i1 %3097, label %3101, label %3098

3098:                                             ; preds = %3095
  call void @FT_Stream_Close(%struct.FT_StreamRec_* nonnull %3068) #17
  call void @ft_mem_free(%struct.FT_MemoryRec_* %508, i8* %3067) #17
  br label %3101

3099:                                             ; preds = %542, %506, %516, %536, %555, %558, %550, %527, %519, %524, %560
  %3100 = phi i32 [ 8, %560 ], [ 8, %542 ], [ 8, %524 ], [ 8, %519 ], [ 8, %527 ], [ 8, %550 ], [ 8, %558 ], [ 8, %555 ], [ 8, %536 ], [ 8, %516 ], [ %514, %506 ]
  call void @llvm.lifetime.end.p0i8(i64 136, i8* nonnull %44) #17
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %43) #17
  store i32 %3100, i32* %29, align 4
  br label %3151

3101:                                             ; preds = %3095, %3098
  %3102 = load i32, i32* %23, align 4
  call void @llvm.lifetime.end.p0i8(i64 136, i8* nonnull %44) #17
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %43) #17
  store i32 %3102, i32* %29, align 4
  %3103 = icmp eq i32 %3102, 0
  br i1 %3103, label %497, label %3151

3104:                                             ; preds = %96, %96, %96, %96, %96, %96, %96, %96
  store i64 1953784678, i64* %34, align 8
  %3105 = icmp eq i64 %97, 1953784678
  br i1 %3105, label %3106, label %3142

3106:                                             ; preds = %3104
  %3107 = bitcast %struct.TTC_HeaderRec_* %33 to i8*
  %3108 = call i32 @FT_Stream_ReadFields(%struct.FT_StreamRec_* %99, %struct.FT_Frame_Field_* getelementptr inbounds ([4 x %struct.FT_Frame_Field_], [4 x %struct.FT_Frame_Field_]* @sfnt_open_font.ttc_header_fields, i64 0, i64 0), i8* %3107) #17
  store i32 %3108, i32* %29, align 4
  %3109 = icmp eq i32 %3108, 0
  br i1 %3109, label %3110, label %3151

3110:                                             ; preds = %3106
  %3111 = load i64, i64* %36, align 8
  %3112 = icmp eq i64 %3111, 0
  br i1 %3112, label %3151, label %3113

3113:                                             ; preds = %3110
  %3114 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %99, i64 0, i32 1
  %3115 = load i64, i64* %3114, align 8
  %3116 = lshr i64 %3115, 5
  %3117 = icmp ugt i64 %3111, %3116
  br i1 %3117, label %3151, label %3118

3118:                                             ; preds = %3113
  %3119 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %31, i64 8, i64 0, i64 %3111, i8* null, i32* nonnull %29) #17
  %3120 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %1, i64 0, i32 1, i32 3
  %3121 = bitcast i64** %3120 to i8**
  store i8* %3119, i8** %3121, align 8
  %3122 = load i32, i32* %29, align 4
  %3123 = icmp eq i32 %3122, 0
  br i1 %3123, label %3124, label %3151

3124:                                             ; preds = %3118
  %3125 = load i64, i64* %36, align 8
  %3126 = shl nsw i64 %3125, 2
  %3127 = call i32 @FT_Stream_EnterFrame(%struct.FT_StreamRec_* %99, i64 %3126) #17
  store i32 %3127, i32* %29, align 4
  %3128 = icmp eq i32 %3127, 0
  br i1 %3128, label %3129, label %3151

3129:                                             ; preds = %3124
  %3130 = load i64, i64* %36, align 8
  %3131 = icmp sgt i64 %3130, 0
  br i1 %3131, label %3132, label %3140

3132:                                             ; preds = %3129, %3132
  %3133 = phi i64 [ %3137, %3132 ], [ 0, %3129 ]
  %3134 = call i64 @FT_Stream_GetULong(%struct.FT_StreamRec_* %99) #17
  %3135 = load i64*, i64** %3120, align 8
  %3136 = getelementptr inbounds i64, i64* %3135, i64 %3133
  store i64 %3134, i64* %3136, align 8
  %3137 = add nuw nsw i64 %3133, 1
  %3138 = load i64, i64* %36, align 8
  %3139 = icmp sgt i64 %3138, %3137
  br i1 %3139, label %3132, label %3140

3140:                                             ; preds = %3132, %3129
  call void @FT_Stream_ExitFrame(%struct.FT_StreamRec_* %99) #17
  %3141 = load i32, i32* %29, align 4
  br label %3151

3142:                                             ; preds = %3104
  %3143 = bitcast i64* %35 to <2 x i64>*
  store <2 x i64> <i64 65536, i64 1>, <2 x i64>* %3143, align 8
  %3144 = call i8* @ft_mem_qalloc(%struct.FT_MemoryRec_* %31, i64 8, i32* nonnull %29) #17
  %3145 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %1, i64 0, i32 1, i32 3
  %3146 = bitcast i64** %3145 to i8**
  store i8* %3144, i8** %3146, align 8
  %3147 = load i32, i32* %29, align 4
  %3148 = icmp eq i32 %3147, 0
  br i1 %3148, label %3149, label %3151

3149:                                             ; preds = %3142
  %3150 = bitcast i8* %3144 to i64*
  store i64 %98, i64* %3150, align 8
  br label %3151

3151:                                             ; preds = %497, %100, %494, %503, %3101, %96, %3149, %3140, %4, %3124, %3118, %3113, %3110, %3106, %3099, %492, %3142
  %3152 = phi i32 [ %3147, %3142 ], [ %493, %492 ], [ %3100, %3099 ], [ %3127, %3124 ], [ %3122, %3118 ], [ 10, %3113 ], [ 8, %3110 ], [ %3108, %3106 ], [ %40, %4 ], [ %3141, %3140 ], [ 0, %3149 ], [ %501, %497 ], [ %101, %100 ], [ %495, %494 ], [ %504, %503 ], [ %3102, %3101 ], [ 2, %96 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %32) #17
  ret i32 %3152
}

declare hidden i64 @FT_Stream_ReadULong(%struct.FT_StreamRec_*, i32*) local_unnamed_addr #6

declare hidden zeroext i16 @FT_Stream_ReadUShort(%struct.FT_StreamRec_*, i32*) local_unnamed_addr #6

declare hidden i32 @FT_Stream_Skip(%struct.FT_StreamRec_*, i64) local_unnamed_addr #6

declare hidden i8* @ft_mem_qalloc(%struct.FT_MemoryRec_*, i64, i32*) local_unnamed_addr #6

declare hidden i64 @FT_Stream_Pos(%struct.FT_StreamRec_*) local_unnamed_addr #6

declare hidden i32 @FT_Stream_ReadAt(%struct.FT_StreamRec_*, i64, i8*, i64) local_unnamed_addr #6

declare hidden void @ft_mem_free(%struct.FT_MemoryRec_*, i8*) local_unnamed_addr #6

declare hidden i32 @FT_Stream_ReadFields(%struct.FT_StreamRec_*, %struct.FT_Frame_Field_*, i8*) local_unnamed_addr #6

declare hidden i8* @ft_mem_realloc(%struct.FT_MemoryRec_*, i64, i64, i64, i8*, i32*) local_unnamed_addr #6

declare hidden i32 @FT_Stream_EnterFrame(%struct.FT_StreamRec_*, i64) local_unnamed_addr #6

declare hidden i64 @FT_Stream_GetULong(%struct.FT_StreamRec_*) local_unnamed_addr #6

declare hidden void @FT_Stream_ExitFrame(%struct.FT_StreamRec_*) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

declare hidden i8* @ft_mem_alloc(%struct.FT_MemoryRec_*, i64, i32*) local_unnamed_addr #6

; Function Attrs: nofree
declare void @qsort(i8*, i64, i64, i32 (i8*, i8*)* nocapture) local_unnamed_addr #7

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal i32 @compare_offsets(i8* nocapture readonly, i8* nocapture readonly) #2 {
  %3 = bitcast i8* %0 to %struct.WOFF_TableRec_**
  %4 = load %struct.WOFF_TableRec_*, %struct.WOFF_TableRec_** %3, align 8
  %5 = bitcast i8* %1 to %struct.WOFF_TableRec_**
  %6 = load %struct.WOFF_TableRec_*, %struct.WOFF_TableRec_** %5, align 8
  %7 = getelementptr inbounds %struct.WOFF_TableRec_, %struct.WOFF_TableRec_* %4, i64 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.WOFF_TableRec_, %struct.WOFF_TableRec_* %6, i64 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = icmp ugt i64 %8, %10
  %12 = icmp ult i64 %8, %10
  %13 = sext i1 %12 to i32
  %14 = select i1 %11, i32 1, i32 %13
  ret i32 %14
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #5

declare i32 @FT_Gzip_Uncompress(%struct.FT_MemoryRec_*, i8*, i64*, i8*, i64) local_unnamed_addr #6

declare hidden void @FT_Stream_OpenMemory(%struct.FT_StreamRec_*, i8*, i64) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define internal void @sfnt_stream_close(%struct.FT_StreamRec_* nocapture) #0 {
  %2 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %0, i64 0, i32 7
  %3 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %2, align 8
  %4 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %0, i64 0, i32 0
  %5 = load i8*, i8** %4, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %3, i8* %5) #17
  %6 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %0, i64 0, i32 6
  store void (%struct.FT_StreamRec_*)* null, void (%struct.FT_StreamRec_*)** %6, align 8
  %7 = bitcast %struct.FT_StreamRec_* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false)
  ret void
}

declare hidden void @FT_Stream_Free(%struct.FT_StreamRec_*, i32) local_unnamed_addr #6

declare hidden void @FT_Stream_Close(%struct.FT_StreamRec_*) local_unnamed_addr #6

declare hidden signext i8 @FT_Stream_ReadChar(%struct.FT_StreamRec_*, i32*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @ReadBase128(%struct.FT_StreamRec_*, i64* nocapture) unnamed_addr #0 {
  %3 = alloca i32, align 4
  %4 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #17
  store i32 0, i32* %3, align 4
  %5 = call signext i8 @FT_Stream_ReadChar(%struct.FT_StreamRec_* %0, i32* nonnull %3) #17
  %6 = load i32, i32* %3, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %12, label %20

8:                                                ; preds = %14
  %9 = call signext i8 @FT_Stream_ReadChar(%struct.FT_StreamRec_* %0, i32* nonnull %3) #17
  %10 = load i32, i32* %3, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %22, label %20

12:                                               ; preds = %2
  %13 = icmp eq i8 %5, -128
  br i1 %13, label %20, label %14

14:                                               ; preds = %12
  %15 = and i8 %5, 127
  %16 = zext i8 %15 to i64
  %17 = icmp sgt i8 %5, -1
  br i1 %17, label %18, label %8

18:                                               ; preds = %55, %42, %32, %22, %14
  %19 = phi i64 [ %16, %14 ], [ %26, %22 ], [ %36, %32 ], [ %46, %42 ], [ %59, %55 ]
  store i64 %19, i64* %1, align 8
  br label %20

20:                                               ; preds = %55, %2, %8, %28, %38, %48, %52, %12, %18
  %21 = phi i32 [ 0, %18 ], [ %6, %2 ], [ 8, %12 ], [ %10, %8 ], [ %30, %28 ], [ %40, %38 ], [ %50, %48 ], [ 8, %52 ], [ 8, %55 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #17
  ret i32 %21

22:                                               ; preds = %8
  %23 = shl nuw nsw i64 %16, 7
  %24 = and i8 %9, 127
  %25 = zext i8 %24 to i64
  %26 = or i64 %23, %25
  %27 = icmp sgt i8 %9, -1
  br i1 %27, label %18, label %28

28:                                               ; preds = %22
  %29 = call signext i8 @FT_Stream_ReadChar(%struct.FT_StreamRec_* %0, i32* nonnull %3) #17
  %30 = load i32, i32* %3, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %20

32:                                               ; preds = %28
  %33 = shl nuw nsw i64 %26, 7
  %34 = and i8 %29, 127
  %35 = zext i8 %34 to i64
  %36 = or i64 %33, %35
  %37 = icmp sgt i8 %29, -1
  br i1 %37, label %18, label %38

38:                                               ; preds = %32
  %39 = call signext i8 @FT_Stream_ReadChar(%struct.FT_StreamRec_* %0, i32* nonnull %3) #17
  %40 = load i32, i32* %3, align 4
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %20

42:                                               ; preds = %38
  %43 = shl nuw nsw i64 %36, 7
  %44 = and i8 %39, 127
  %45 = zext i8 %44 to i64
  %46 = or i64 %43, %45
  %47 = icmp sgt i8 %39, -1
  br i1 %47, label %18, label %48

48:                                               ; preds = %42
  %49 = call signext i8 @FT_Stream_ReadChar(%struct.FT_StreamRec_* %0, i32* nonnull %3) #17
  %50 = load i32, i32* %3, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %20

52:                                               ; preds = %48
  %53 = and i64 %16, 112
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %55, label %20

55:                                               ; preds = %52
  %56 = shl i64 %46, 7
  %57 = and i8 %49, 127
  %58 = zext i8 %57 to i64
  %59 = or i64 %56, %58
  %60 = icmp sgt i8 %49, -1
  br i1 %60, label %18, label %20
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @Read255UShort(%struct.FT_StreamRec_*, i16* nocapture) unnamed_addr #0 {
  %3 = alloca i32, align 4
  %4 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #17
  store i32 0, i32* %3, align 4
  %5 = call signext i8 @FT_Stream_ReadChar(%struct.FT_StreamRec_* %0, i32* nonnull %3) #17
  %6 = load i32, i32* %3, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %30

8:                                                ; preds = %2
  switch i8 %5, label %28 [
    i8 -3, label %9
    i8 -1, label %14
    i8 -2, label %21
  ]

9:                                                ; preds = %8
  %10 = call zeroext i16 @FT_Stream_ReadUShort(%struct.FT_StreamRec_* %0, i32* nonnull %3) #17
  %11 = load i32, i32* %3, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %30

13:                                               ; preds = %9
  store i16 %10, i16* %1, align 2
  br label %30

14:                                               ; preds = %8
  %15 = call signext i8 @FT_Stream_ReadChar(%struct.FT_StreamRec_* %0, i32* nonnull %3) #17
  %16 = load i32, i32* %3, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %30

18:                                               ; preds = %14
  %19 = zext i8 %15 to i16
  %20 = add nuw nsw i16 %19, 253
  store i16 %20, i16* %1, align 2
  br label %30

21:                                               ; preds = %8
  %22 = call signext i8 @FT_Stream_ReadChar(%struct.FT_StreamRec_* %0, i32* nonnull %3) #17
  %23 = load i32, i32* %3, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %30

25:                                               ; preds = %21
  %26 = zext i8 %22 to i16
  %27 = add nuw nsw i16 %26, 506
  store i16 %27, i16* %1, align 2
  br label %30

28:                                               ; preds = %8
  %29 = zext i8 %5 to i16
  store i16 %29, i16* %1, align 2
  br label %30

30:                                               ; preds = %21, %14, %9, %2, %28, %25, %18, %13
  %31 = phi i32 [ 0, %13 ], [ 0, %18 ], [ 0, %25 ], [ 0, %28 ], [ %6, %2 ], [ %11, %9 ], [ %16, %14 ], [ %23, %21 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #17
  ret i32 %31
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal i32 @compare_tags(i8* nocapture readonly, i8* nocapture readonly) #2 {
  %3 = bitcast i8* %0 to %struct.WOFF2_TableRec_**
  %4 = load %struct.WOFF2_TableRec_*, %struct.WOFF2_TableRec_** %3, align 8
  %5 = bitcast i8* %1 to %struct.WOFF2_TableRec_**
  %6 = load %struct.WOFF2_TableRec_*, %struct.WOFF2_TableRec_** %5, align 8
  %7 = getelementptr inbounds %struct.WOFF2_TableRec_, %struct.WOFF2_TableRec_* %4, i64 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.WOFF2_TableRec_, %struct.WOFF2_TableRec_* %6, i64 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = icmp ugt i64 %8, %10
  %12 = icmp ult i64 %8, %10
  %13 = sext i1 %12 to i32
  %14 = select i1 %11, i32 1, i32 %13
  ret i32 %14
}

; Function Attrs: nounwind ssp uwtable
define internal void @stream_close(%struct.FT_StreamRec_* nocapture) #0 {
  %2 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %0, i64 0, i32 7
  %3 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %2, align 8
  %4 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %0, i64 0, i32 0
  %5 = load i8*, i8** %4, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %3, i8* %5) #17
  %6 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %0, i64 0, i32 6
  store void (%struct.FT_StreamRec_*)* null, void (%struct.FT_StreamRec_*)** %6, align 8
  %7 = bitcast %struct.FT_StreamRec_* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false)
  ret void
}

declare hidden i32 @FT_Stream_Read(%struct.FT_StreamRec_*, i8*, i64) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @tt_face_build_cmaps(%struct.TT_FaceRec_*) unnamed_addr #0 {
  %2 = alloca i32, align 4
  %3 = alloca i8*, align 8
  %4 = alloca %struct.FT_CharMapRec_, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  %7 = alloca %struct.TT_CMap_ClassRec_**, align 8
  %8 = alloca i64, align 8
  %9 = alloca %struct.TT_ValidatorRec_, align 8
  %10 = alloca i32, align 4
  %11 = alloca %struct.FT_CMapRec_*, align 8
  %12 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 14
  %13 = load i8*, i8** %12, align 8
  %14 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %14)
  store volatile i32 -1431655766, i32* %2, align 4
  %15 = bitcast i8** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15)
  store volatile i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %3, align 8
  store volatile i8* %13, i8** %3, align 8
  %16 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 0
  %17 = load volatile i8*, i8** %3, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %186, label %19

19:                                               ; preds = %1
  %20 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 15
  %21 = load i64, i64* %20, align 8
  %22 = icmp ult i64 %21, 4
  br i1 %22, label %186, label %23

23:                                               ; preds = %19
  %24 = load volatile i8*, i8** %3, align 8
  %25 = getelementptr inbounds i8, i8* %24, i64 2
  store volatile i8* %25, i8** %3, align 8
  %26 = load volatile i8*, i8** %3, align 8
  %27 = getelementptr inbounds i8, i8* %26, i64 2
  store volatile i8* %27, i8** %3, align 8
  %28 = load volatile i8*, i8** %3, align 8
  %29 = getelementptr inbounds i8, i8* %28, i64 -2
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i32
  %32 = shl nuw nsw i32 %31, 8
  %33 = load volatile i8*, i8** %3, align 8
  %34 = getelementptr inbounds i8, i8* %33, i64 -1
  %35 = load i8, i8* %34, align 1
  %36 = zext i8 %35 to i32
  %37 = or i32 %32, %36
  store volatile i32 %37, i32* %2, align 4
  %38 = getelementptr inbounds i8, i8* %13, i64 %21
  %39 = load volatile i32, i32* %2, align 4
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %186, label %41

41:                                               ; preds = %23
  %42 = bitcast %struct.FT_CharMapRec_* %4 to i8*
  %43 = getelementptr inbounds %struct.FT_CharMapRec_, %struct.FT_CharMapRec_* %4, i64 0, i32 0
  %44 = getelementptr inbounds %struct.FT_CharMapRec_, %struct.FT_CharMapRec_* %4, i64 0, i32 1
  %45 = getelementptr inbounds %struct.FT_CharMapRec_, %struct.FT_CharMapRec_* %4, i64 0, i32 2
  %46 = getelementptr inbounds %struct.FT_CharMapRec_, %struct.FT_CharMapRec_* %4, i64 0, i32 3
  %47 = bitcast i8** %5 to i8*
  %48 = bitcast i32* %6 to i8*
  %49 = bitcast %struct.TT_CMap_ClassRec_*** %7 to i8*
  %50 = bitcast i64* %8 to i8*
  %51 = bitcast %struct.TT_ValidatorRec_* %9 to i8*
  %52 = bitcast i32* %10 to i8*
  %53 = getelementptr inbounds %struct.TT_ValidatorRec_, %struct.TT_ValidatorRec_* %9, i64 0, i32 0
  %54 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 7, i32 1
  %55 = getelementptr inbounds %struct.TT_ValidatorRec_, %struct.TT_ValidatorRec_* %9, i64 0, i32 1
  %56 = getelementptr inbounds %struct.TT_ValidatorRec_, %struct.TT_ValidatorRec_* %9, i64 0, i32 0, i32 0, i64 0
  %57 = getelementptr inbounds %struct.TT_ValidatorRec_, %struct.TT_ValidatorRec_* %9, i64 0, i32 0, i32 4
  %58 = bitcast %struct.FT_CMapRec_** %11 to i8*
  %59 = bitcast %struct.FT_CMapRec_** %11 to %struct.TT_CMapRec_**
  %60 = bitcast %struct.FT_CharMapRec_* %4 to i8*
  br label %61

61:                                               ; preds = %41, %181
  %62 = load volatile i8*, i8** %3, align 8
  %63 = getelementptr inbounds i8, i8* %62, i64 8
  %64 = icmp ugt i8* %63, %38
  br i1 %64, label %186, label %65

65:                                               ; preds = %61
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %42) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %60, i8 -86, i64 16, i1 false)
  %66 = load volatile i8*, i8** %3, align 8
  %67 = getelementptr inbounds i8, i8* %66, i64 2
  store volatile i8* %67, i8** %3, align 8
  %68 = load volatile i8*, i8** %3, align 8
  %69 = getelementptr inbounds i8, i8* %68, i64 -2
  %70 = load i8, i8* %69, align 1
  %71 = zext i8 %70 to i16
  %72 = shl nuw i16 %71, 8
  %73 = load volatile i8*, i8** %3, align 8
  %74 = getelementptr inbounds i8, i8* %73, i64 -1
  %75 = load i8, i8* %74, align 1
  %76 = zext i8 %75 to i16
  %77 = or i16 %72, %76
  store i16 %77, i16* %45, align 4
  %78 = load volatile i8*, i8** %3, align 8
  %79 = getelementptr inbounds i8, i8* %78, i64 2
  store volatile i8* %79, i8** %3, align 8
  %80 = load volatile i8*, i8** %3, align 8
  %81 = getelementptr inbounds i8, i8* %80, i64 -2
  %82 = load i8, i8* %81, align 1
  %83 = zext i8 %82 to i16
  %84 = shl nuw i16 %83, 8
  %85 = load volatile i8*, i8** %3, align 8
  %86 = getelementptr inbounds i8, i8* %85, i64 -1
  %87 = load i8, i8* %86, align 1
  %88 = zext i8 %87 to i16
  %89 = or i16 %84, %88
  store i16 %89, i16* %46, align 2
  store %struct.FT_FaceRec_* %16, %struct.FT_FaceRec_** %43, align 8
  store i32 0, i32* %44, align 8
  %90 = load volatile i8*, i8** %3, align 8
  %91 = getelementptr inbounds i8, i8* %90, i64 4
  store volatile i8* %91, i8** %3, align 8
  %92 = load volatile i8*, i8** %3, align 8
  %93 = getelementptr inbounds i8, i8* %92, i64 -4
  %94 = load i8, i8* %93, align 1
  %95 = zext i8 %94 to i32
  %96 = shl nuw i32 %95, 24
  %97 = load volatile i8*, i8** %3, align 8
  %98 = getelementptr inbounds i8, i8* %97, i64 -3
  %99 = load i8, i8* %98, align 1
  %100 = zext i8 %99 to i32
  %101 = shl nuw nsw i32 %100, 16
  %102 = or i32 %101, %96
  %103 = load volatile i8*, i8** %3, align 8
  %104 = getelementptr inbounds i8, i8* %103, i64 -2
  %105 = load i8, i8* %104, align 1
  %106 = zext i8 %105 to i32
  %107 = shl nuw nsw i32 %106, 8
  %108 = or i32 %102, %107
  %109 = load volatile i8*, i8** %3, align 8
  %110 = getelementptr inbounds i8, i8* %109, i64 -1
  %111 = load i8, i8* %110, align 1
  %112 = zext i8 %111 to i32
  %113 = or i32 %108, %112
  %114 = zext i32 %113 to i64
  %115 = icmp eq i32 %113, 0
  br i1 %115, label %181, label %116

116:                                              ; preds = %65
  %117 = load i64, i64* %20, align 8
  %118 = add i64 %117, -2
  %119 = icmp ult i64 %118, %114
  br i1 %119, label %181, label %120

120:                                              ; preds = %116
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47)
  store volatile i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %5, align 8
  %121 = getelementptr inbounds i8, i8* %13, i64 %114
  store volatile i8* %121, i8** %5, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %48)
  store volatile i32 -1431655766, i32* %6, align 4
  %122 = load volatile i8*, i8** %5, align 8
  %123 = load i8, i8* %122, align 1
  %124 = zext i8 %123 to i32
  %125 = shl nuw nsw i32 %124, 8
  %126 = load volatile i8*, i8** %5, align 8
  %127 = getelementptr inbounds i8, i8* %126, i64 1
  %128 = load i8, i8* %127, align 1
  %129 = zext i8 %128 to i32
  %130 = or i32 %125, %129
  store volatile i32 %130, i32* %6, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %49)
  store volatile %struct.TT_CMap_ClassRec_** inttoptr (i64 -6148914691236517206 to %struct.TT_CMap_ClassRec_**), %struct.TT_CMap_ClassRec_*** %7, align 8
  store volatile %struct.TT_CMap_ClassRec_** getelementptr inbounds ([10 x %struct.TT_CMap_ClassRec_*], [10 x %struct.TT_CMap_ClassRec_*]* @tt_cmap_classes, i64 0, i64 0), %struct.TT_CMap_ClassRec_*** %7, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50)
  store volatile i64 -6148914691236517206, i64* %8, align 8
  %131 = load volatile %struct.TT_CMap_ClassRec_**, %struct.TT_CMap_ClassRec_*** %7, align 8
  %132 = load %struct.TT_CMap_ClassRec_*, %struct.TT_CMap_ClassRec_** %131, align 8
  %133 = icmp eq %struct.TT_CMap_ClassRec_* %132, null
  br i1 %133, label %179, label %134

134:                                              ; preds = %120, %173
  %135 = load volatile %struct.TT_CMap_ClassRec_**, %struct.TT_CMap_ClassRec_*** %7, align 8
  %136 = bitcast %struct.TT_CMap_ClassRec_** %135 to i64*
  %137 = load i64, i64* %136, align 8
  store volatile i64 %137, i64* %8, align 8
  %138 = load volatile i64, i64* %8, align 8
  %139 = inttoptr i64 %138 to %struct.TT_CMap_ClassRec_*
  %140 = getelementptr inbounds %struct.TT_CMap_ClassRec_, %struct.TT_CMap_ClassRec_* %139, i64 0, i32 1
  %141 = load i32, i32* %140, align 8
  %142 = load volatile i32, i32* %6, align 4
  %143 = icmp eq i32 %141, %142
  br i1 %143, label %144, label %173

144:                                              ; preds = %134
  call void @llvm.lifetime.start.p0i8(i64 232, i8* nonnull %51) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %51, i8 -86, i64 232, i1 true)
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %52)
  store volatile i32 -1431655766, i32* %10, align 4
  store volatile i32 0, i32* %10, align 4
  %145 = load volatile i8*, i8** %5, align 8
  call void @ft_validator_init(%struct.FT_ValidatorRec_* nonnull %53, i8* %145, i8* %38, i32 0) #17
  %146 = load i16, i16* %54, align 8
  %147 = zext i16 %146 to i32
  store volatile i32 %147, i32* %55, align 8
  %148 = call i32 @_setjmp(%struct.__jmp_buf_tag* nonnull %56) #18
  %149 = icmp eq i32 %148, 0
  br i1 %149, label %150, label %157

150:                                              ; preds = %144
  %151 = load volatile i64, i64* %8, align 8
  %152 = inttoptr i64 %151 to %struct.TT_CMap_ClassRec_*
  %153 = getelementptr inbounds %struct.TT_CMap_ClassRec_, %struct.TT_CMap_ClassRec_* %152, i64 0, i32 2
  %154 = load i32 (i8*, %struct.FT_ValidatorRec_*)*, i32 (i8*, %struct.FT_ValidatorRec_*)** %153, align 8
  %155 = load volatile i8*, i8** %5, align 8
  %156 = call i32 %154(i8* %155, %struct.FT_ValidatorRec_* nonnull %53) #17
  store volatile i32 %156, i32* %10, align 4
  br label %157

157:                                              ; preds = %150, %144
  %158 = load volatile i32, i32* %57, align 4
  %159 = icmp eq i32 %158, 0
  br i1 %159, label %160, label %172

160:                                              ; preds = %157
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %58) #17
  store %struct.FT_CMapRec_* inttoptr (i64 -6148914691236517206 to %struct.FT_CMapRec_*), %struct.FT_CMapRec_** %11, align 8
  %161 = load volatile i64, i64* %8, align 8
  %162 = inttoptr i64 %161 to %struct.TT_CMap_ClassRec_*
  %163 = getelementptr inbounds %struct.TT_CMap_ClassRec_, %struct.TT_CMap_ClassRec_* %162, i64 0, i32 0
  %164 = load volatile i8*, i8** %5, align 8
  %165 = call i32 @FT_CMap_New(%struct.FT_CMap_ClassRec_* %163, i8* %164, %struct.FT_CharMapRec_* nonnull %4, %struct.FT_CMapRec_** nonnull %11) #17
  %166 = icmp eq i32 %165, 0
  br i1 %166, label %167, label %171

167:                                              ; preds = %160
  %168 = load volatile i32, i32* %10, align 4
  %169 = load %struct.TT_CMapRec_*, %struct.TT_CMapRec_** %59, align 8
  %170 = getelementptr inbounds %struct.TT_CMapRec_, %struct.TT_CMapRec_* %169, i64 0, i32 2
  store i32 %168, i32* %170, align 8
  br label %171

171:                                              ; preds = %160, %167
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %58) #17
  br label %172

172:                                              ; preds = %157, %171
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %52)
  call void @llvm.lifetime.end.p0i8(i64 232, i8* nonnull %51) #17
  br label %179

173:                                              ; preds = %134
  %174 = load volatile %struct.TT_CMap_ClassRec_**, %struct.TT_CMap_ClassRec_*** %7, align 8
  %175 = getelementptr inbounds %struct.TT_CMap_ClassRec_*, %struct.TT_CMap_ClassRec_** %174, i64 1
  store volatile %struct.TT_CMap_ClassRec_** %175, %struct.TT_CMap_ClassRec_*** %7, align 8
  %176 = load volatile %struct.TT_CMap_ClassRec_**, %struct.TT_CMap_ClassRec_*** %7, align 8
  %177 = load %struct.TT_CMap_ClassRec_*, %struct.TT_CMap_ClassRec_** %176, align 8
  %178 = icmp eq %struct.TT_CMap_ClassRec_* %177, null
  br i1 %178, label %179, label %134

179:                                              ; preds = %173, %120, %172
  %180 = load volatile %struct.TT_CMap_ClassRec_**, %struct.TT_CMap_ClassRec_*** %7, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %48)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47)
  br label %181

181:                                              ; preds = %116, %65, %179
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %42) #17
  %182 = load volatile i32, i32* %2, align 4
  %183 = add i32 %182, -1
  store volatile i32 %183, i32* %2, align 4
  %184 = load volatile i32, i32* %2, align 4
  %185 = icmp eq i32 %184, 0
  br i1 %185, label %186, label %61

186:                                              ; preds = %61, %181, %23, %19, %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %14)
  ret void
}

declare hidden i32 @FT_CMap_New(%struct.FT_CMap_ClassRec_*, i8*, %struct.FT_CharMapRec_*, %struct.FT_CMapRec_**) local_unnamed_addr #6

declare hidden void @ft_validator_init(%struct.FT_ValidatorRec_*, i8*, i8*, i32) local_unnamed_addr #6

; Function Attrs: nounwind returns_twice
declare i32 @_setjmp(%struct.__jmp_buf_tag*) local_unnamed_addr #8

declare hidden void @FT_Stream_ReleaseFrame(%struct.FT_StreamRec_*, i8**) local_unnamed_addr #6

declare hidden i32 @FT_Stream_ExtractFrame(%struct.FT_StreamRec_*, i64, i8**) local_unnamed_addr #6

declare hidden zeroext i16 @FT_Stream_GetUShort(%struct.FT_StreamRec_*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @tt_sbit_decoder_load_image(%struct.TT_SBitDecoderRec_*, i32, i32, i32, i32, i8 zeroext) unnamed_addr #0 {
  %7 = alloca i8*, align 8
  %8 = getelementptr inbounds %struct.TT_SBitDecoderRec_, %struct.TT_SBitDecoderRec_* %0, i64 0, i32 11
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr inbounds %struct.TT_SBitDecoderRec_, %struct.TT_SBitDecoderRec_* %0, i64 0, i32 9
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds i8, i8* %9, i64 %11
  %13 = getelementptr inbounds %struct.TT_SBitDecoderRec_, %struct.TT_SBitDecoderRec_* %0, i64 0, i32 12
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds %struct.TT_SBitDecoderRec_, %struct.TT_SBitDecoderRec_* %0, i64 0, i32 10
  %16 = load i64, i64* %15, align 8
  %17 = icmp ugt i32 %4, 100
  br i1 %17, label %623, label %18

18:                                               ; preds = %6
  %19 = icmp eq i64 %16, 0
  br i1 %19, label %620, label %20

20:                                               ; preds = %18, %41
  %21 = phi i64 [ %43, %41 ], [ %16, %18 ]
  %22 = phi i8* [ %42, %41 ], [ %12, %18 ]
  %23 = load i8, i8* %22, align 1
  %24 = zext i8 %23 to i32
  %25 = shl nuw nsw i32 %24, 8
  %26 = getelementptr inbounds i8, i8* %22, i64 1
  %27 = load i8, i8* %26, align 1
  %28 = zext i8 %27 to i32
  %29 = or i32 %25, %28
  %30 = icmp ugt i32 %29, %1
  br i1 %30, label %41, label %31

31:                                               ; preds = %20
  %32 = getelementptr inbounds i8, i8* %22, i64 2
  %33 = load i8, i8* %32, align 1
  %34 = getelementptr inbounds i8, i8* %22, i64 3
  %35 = load i8, i8* %34, align 1
  %36 = zext i8 %33 to i32
  %37 = shl nuw nsw i32 %36, 8
  %38 = zext i8 %35 to i32
  %39 = or i32 %37, %38
  %40 = icmp ult i32 %39, %1
  br i1 %40, label %41, label %45

41:                                               ; preds = %31, %20
  %42 = getelementptr inbounds i8, i8* %22, i64 8
  %43 = add i64 %21, -1
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %620, label %20

45:                                               ; preds = %31
  %46 = getelementptr inbounds i8, i8* %22, i64 4
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i64
  %49 = shl nuw nsw i64 %48, 24
  %50 = getelementptr inbounds i8, i8* %22, i64 5
  %51 = load i8, i8* %50, align 1
  %52 = zext i8 %51 to i64
  %53 = shl nuw nsw i64 %52, 16
  %54 = or i64 %53, %49
  %55 = getelementptr inbounds i8, i8* %22, i64 6
  %56 = load i8, i8* %55, align 1
  %57 = zext i8 %56 to i64
  %58 = shl nuw nsw i64 %57, 8
  %59 = or i64 %54, %58
  %60 = getelementptr inbounds i8, i8* %22, i64 7
  %61 = load i8, i8* %60, align 1
  %62 = zext i8 %61 to i64
  %63 = or i64 %59, %62
  %64 = ptrtoint i8* %14 to i64
  %65 = ptrtoint i8* %12 to i64
  %66 = sub i64 %64, %65
  %67 = icmp ugt i64 %63, %66
  br i1 %67, label %623, label %68

68:                                               ; preds = %45
  %69 = getelementptr inbounds i8, i8* %12, i64 %63
  %70 = getelementptr inbounds i8, i8* %69, i64 8
  %71 = icmp ugt i8* %70, %14
  br i1 %71, label %620, label %72

72:                                               ; preds = %68
  %73 = getelementptr inbounds i8, i8* %69, i64 2
  %74 = getelementptr inbounds i8, i8* %73, i64 -2
  %75 = load i8, i8* %74, align 1
  %76 = zext i8 %75 to i16
  %77 = shl nuw i16 %76, 8
  %78 = getelementptr inbounds i8, i8* %74, i64 1
  %79 = load i8, i8* %78, align 1
  %80 = zext i8 %79 to i16
  %81 = or i16 %77, %80
  %82 = getelementptr inbounds i8, i8* %73, i64 2
  %83 = getelementptr inbounds i8, i8* %82, i64 -2
  %84 = load i8, i8* %83, align 1
  %85 = zext i8 %84 to i16
  %86 = shl nuw i16 %85, 8
  %87 = getelementptr inbounds i8, i8* %83, i64 1
  %88 = load i8, i8* %87, align 1
  %89 = zext i8 %88 to i16
  %90 = or i16 %86, %89
  %91 = getelementptr inbounds i8, i8* %82, i64 4
  %92 = getelementptr inbounds i8, i8* %91, i64 -4
  %93 = load i8, i8* %92, align 1
  %94 = zext i8 %93 to i64
  %95 = shl nuw nsw i64 %94, 24
  %96 = getelementptr inbounds i8, i8* %92, i64 1
  %97 = load i8, i8* %96, align 1
  %98 = zext i8 %97 to i64
  %99 = shl nuw nsw i64 %98, 16
  %100 = or i64 %99, %95
  %101 = getelementptr inbounds i8, i8* %92, i64 2
  %102 = load i8, i8* %101, align 1
  %103 = zext i8 %102 to i64
  %104 = shl nuw nsw i64 %103, 8
  %105 = or i64 %100, %104
  %106 = getelementptr inbounds i8, i8* %92, i64 3
  %107 = load i8, i8* %106, align 1
  %108 = zext i8 %107 to i64
  %109 = or i64 %105, %108
  switch i16 %81, label %620 [
    i16 1, label %110
    i16 2, label %157
    i16 3, label %223
    i16 4, label %250
    i16 5, label %314
    i16 19, label %314
  ]

110:                                              ; preds = %72
  %111 = sub i32 %1, %29
  %112 = shl i32 %111, 2
  %113 = zext i32 %112 to i64
  %114 = getelementptr inbounds i8, i8* %91, i64 %113
  %115 = getelementptr inbounds i8, i8* %114, i64 8
  %116 = icmp ugt i8* %115, %14
  br i1 %116, label %620, label %117

117:                                              ; preds = %110
  %118 = getelementptr inbounds i8, i8* %114, i64 4
  %119 = getelementptr inbounds i8, i8* %118, i64 -4
  %120 = load i8, i8* %119, align 1
  %121 = zext i8 %120 to i64
  %122 = shl nuw nsw i64 %121, 24
  %123 = getelementptr inbounds i8, i8* %119, i64 1
  %124 = load i8, i8* %123, align 1
  %125 = zext i8 %124 to i64
  %126 = shl nuw nsw i64 %125, 16
  %127 = or i64 %126, %122
  %128 = getelementptr inbounds i8, i8* %119, i64 2
  %129 = load i8, i8* %128, align 1
  %130 = zext i8 %129 to i64
  %131 = shl nuw nsw i64 %130, 8
  %132 = or i64 %127, %131
  %133 = getelementptr inbounds i8, i8* %119, i64 3
  %134 = load i8, i8* %133, align 1
  %135 = zext i8 %134 to i64
  %136 = or i64 %132, %135
  %137 = getelementptr inbounds i8, i8* %118, i64 4
  %138 = getelementptr inbounds i8, i8* %137, i64 -4
  %139 = load i8, i8* %138, align 1
  %140 = zext i8 %139 to i64
  %141 = shl nuw nsw i64 %140, 24
  %142 = getelementptr inbounds i8, i8* %138, i64 1
  %143 = load i8, i8* %142, align 1
  %144 = zext i8 %143 to i64
  %145 = shl nuw nsw i64 %144, 16
  %146 = or i64 %145, %141
  %147 = getelementptr inbounds i8, i8* %138, i64 2
  %148 = load i8, i8* %147, align 1
  %149 = zext i8 %148 to i64
  %150 = shl nuw nsw i64 %149, 8
  %151 = or i64 %146, %150
  %152 = getelementptr inbounds i8, i8* %138, i64 3
  %153 = load i8, i8* %152, align 1
  %154 = zext i8 %153 to i64
  %155 = or i64 %151, %154
  %156 = icmp eq i64 %136, %155
  br i1 %156, label %620, label %417

157:                                              ; preds = %72
  %158 = getelementptr inbounds i8, i8* %91, i64 12
  %159 = icmp ugt i8* %158, %14
  br i1 %159, label %620, label %160

160:                                              ; preds = %157
  %161 = getelementptr inbounds i8, i8* %91, i64 4
  %162 = getelementptr inbounds i8, i8* %161, i64 -4
  %163 = load i8, i8* %162, align 1
  %164 = zext i8 %163 to i64
  %165 = shl nuw nsw i64 %164, 24
  %166 = getelementptr inbounds i8, i8* %162, i64 1
  %167 = load i8, i8* %166, align 1
  %168 = zext i8 %167 to i64
  %169 = shl nuw nsw i64 %168, 16
  %170 = or i64 %169, %165
  %171 = getelementptr inbounds i8, i8* %162, i64 2
  %172 = load i8, i8* %171, align 1
  %173 = zext i8 %172 to i64
  %174 = shl nuw nsw i64 %173, 8
  %175 = or i64 %170, %174
  %176 = getelementptr inbounds i8, i8* %162, i64 3
  %177 = load i8, i8* %176, align 1
  %178 = zext i8 %177 to i64
  %179 = or i64 %175, %178
  %180 = getelementptr inbounds %struct.TT_SBitDecoderRec_, %struct.TT_SBitDecoderRec_* %0, i64 0, i32 3
  %181 = load %struct.TT_SBit_MetricsRec_*, %struct.TT_SBit_MetricsRec_** %180, align 8
  %182 = getelementptr inbounds i8, i8* %161, i64 5
  %183 = icmp ugt i8* %182, %14
  br i1 %183, label %620, label %184

184:                                              ; preds = %160
  %185 = load i8, i8* %161, align 1
  %186 = zext i8 %185 to i16
  %187 = getelementptr inbounds %struct.TT_SBit_MetricsRec_, %struct.TT_SBit_MetricsRec_* %181, i64 0, i32 0
  store i16 %186, i16* %187, align 2
  %188 = getelementptr inbounds i8, i8* %161, i64 1
  %189 = load i8, i8* %188, align 1
  %190 = zext i8 %189 to i16
  %191 = getelementptr inbounds %struct.TT_SBit_MetricsRec_, %struct.TT_SBit_MetricsRec_* %181, i64 0, i32 1
  store i16 %190, i16* %191, align 2
  %192 = getelementptr inbounds i8, i8* %161, i64 2
  %193 = load i8, i8* %192, align 1
  %194 = sext i8 %193 to i16
  %195 = getelementptr inbounds %struct.TT_SBit_MetricsRec_, %struct.TT_SBit_MetricsRec_* %181, i64 0, i32 2
  store i16 %194, i16* %195, align 2
  %196 = getelementptr inbounds i8, i8* %161, i64 3
  %197 = load i8, i8* %196, align 1
  %198 = sext i8 %197 to i16
  %199 = getelementptr inbounds %struct.TT_SBit_MetricsRec_, %struct.TT_SBit_MetricsRec_* %181, i64 0, i32 3
  store i16 %198, i16* %199, align 2
  %200 = getelementptr inbounds i8, i8* %161, i64 4
  %201 = load i8, i8* %200, align 1
  %202 = zext i8 %201 to i16
  %203 = getelementptr inbounds %struct.TT_SBit_MetricsRec_, %struct.TT_SBit_MetricsRec_* %181, i64 0, i32 4
  store i16 %202, i16* %203, align 2
  %204 = getelementptr inbounds i8, i8* %161, i64 8
  %205 = icmp ugt i8* %204, %14
  br i1 %205, label %620, label %206

206:                                              ; preds = %184
  %207 = load i8, i8* %182, align 1
  %208 = sext i8 %207 to i16
  %209 = getelementptr inbounds %struct.TT_SBit_MetricsRec_, %struct.TT_SBit_MetricsRec_* %181, i64 0, i32 5
  store i16 %208, i16* %209, align 2
  %210 = getelementptr inbounds i8, i8* %161, i64 6
  %211 = load i8, i8* %210, align 1
  %212 = sext i8 %211 to i16
  %213 = getelementptr inbounds %struct.TT_SBit_MetricsRec_, %struct.TT_SBit_MetricsRec_* %181, i64 0, i32 6
  store i16 %212, i16* %213, align 2
  %214 = getelementptr inbounds i8, i8* %161, i64 7
  %215 = load i8, i8* %214, align 1
  %216 = zext i8 %215 to i16
  %217 = getelementptr inbounds %struct.TT_SBit_MetricsRec_, %struct.TT_SBit_MetricsRec_* %181, i64 0, i32 7
  store i16 %216, i16* %217, align 2
  %218 = getelementptr inbounds %struct.TT_SBitDecoderRec_, %struct.TT_SBitDecoderRec_* %0, i64 0, i32 4
  store i8 1, i8* %218, align 8
  %219 = sub i32 %1, %29
  %220 = zext i32 %219 to i64
  %221 = mul nuw i64 %179, %220
  %222 = add i64 %221, %179
  br label %417

223:                                              ; preds = %72
  %224 = sub i32 %1, %29
  %225 = shl i32 %224, 1
  %226 = zext i32 %225 to i64
  %227 = getelementptr inbounds i8, i8* %91, i64 %226
  %228 = getelementptr inbounds i8, i8* %227, i64 4
  %229 = icmp ugt i8* %228, %14
  br i1 %229, label %620, label %230

230:                                              ; preds = %223
  %231 = getelementptr inbounds i8, i8* %227, i64 2
  %232 = getelementptr inbounds i8, i8* %231, i64 -2
  %233 = load i8, i8* %232, align 1
  %234 = zext i8 %233 to i64
  %235 = shl nuw nsw i64 %234, 8
  %236 = getelementptr inbounds i8, i8* %232, i64 1
  %237 = load i8, i8* %236, align 1
  %238 = zext i8 %237 to i64
  %239 = or i64 %235, %238
  %240 = getelementptr inbounds i8, i8* %231, i64 2
  %241 = getelementptr inbounds i8, i8* %240, i64 -2
  %242 = load i8, i8* %241, align 1
  %243 = zext i8 %242 to i64
  %244 = shl nuw nsw i64 %243, 8
  %245 = getelementptr inbounds i8, i8* %241, i64 1
  %246 = load i8, i8* %245, align 1
  %247 = zext i8 %246 to i64
  %248 = or i64 %244, %247
  %249 = icmp eq i64 %239, %248
  br i1 %249, label %620, label %417

250:                                              ; preds = %72
  %251 = getelementptr inbounds i8, i8* %91, i64 4
  %252 = icmp ugt i8* %251, %14
  br i1 %252, label %620, label %253

253:                                              ; preds = %250
  %254 = getelementptr inbounds i8, i8* %251, i64 -4
  %255 = load i8, i8* %254, align 1
  %256 = zext i8 %255 to i64
  %257 = shl nuw nsw i64 %256, 24
  %258 = getelementptr inbounds i8, i8* %254, i64 1
  %259 = load i8, i8* %258, align 1
  %260 = zext i8 %259 to i64
  %261 = shl nuw nsw i64 %260, 16
  %262 = or i64 %261, %257
  %263 = getelementptr inbounds i8, i8* %254, i64 2
  %264 = load i8, i8* %263, align 1
  %265 = zext i8 %264 to i64
  %266 = shl nuw nsw i64 %265, 8
  %267 = or i64 %262, %266
  %268 = getelementptr inbounds i8, i8* %254, i64 3
  %269 = load i8, i8* %268, align 1
  %270 = zext i8 %269 to i64
  %271 = or i64 %267, %270
  %272 = getelementptr inbounds i8, i8* %251, i64 4
  %273 = icmp ugt i8* %272, %14
  br i1 %273, label %620, label %274

274:                                              ; preds = %253
  %275 = ptrtoint i8* %251 to i64
  %276 = sub i64 %64, %275
  %277 = ashr i64 %276, 2
  %278 = add nsw i64 %277, -1
  %279 = icmp ule i64 %271, %278
  %280 = icmp ne i64 %271, 0
  %281 = and i1 %279, %280
  br i1 %281, label %282, label %620

282:                                              ; preds = %274, %310
  %283 = phi i64 [ %312, %310 ], [ 0, %274 ]
  %284 = phi i8* [ %311, %310 ], [ %251, %274 ]
  %285 = load i8, i8* %284, align 1
  %286 = zext i8 %285 to i32
  %287 = shl nuw nsw i32 %286, 8
  %288 = getelementptr inbounds i8, i8* %284, i64 1
  %289 = load i8, i8* %288, align 1
  %290 = zext i8 %289 to i32
  %291 = or i32 %287, %290
  %292 = icmp eq i32 %291, %1
  br i1 %292, label %293, label %310

293:                                              ; preds = %282
  %294 = getelementptr inbounds i8, i8* %284, i64 2
  %295 = load i8, i8* %294, align 1
  %296 = zext i8 %295 to i64
  %297 = shl nuw nsw i64 %296, 8
  %298 = getelementptr inbounds i8, i8* %284, i64 3
  %299 = load i8, i8* %298, align 1
  %300 = zext i8 %299 to i64
  %301 = or i64 %297, %300
  %302 = getelementptr inbounds i8, i8* %284, i64 6
  %303 = load i8, i8* %302, align 1
  %304 = zext i8 %303 to i64
  %305 = shl nuw nsw i64 %304, 8
  %306 = getelementptr inbounds i8, i8* %284, i64 7
  %307 = load i8, i8* %306, align 1
  %308 = zext i8 %307 to i64
  %309 = or i64 %305, %308
  br label %417

310:                                              ; preds = %282
  %311 = getelementptr inbounds i8, i8* %284, i64 4
  %312 = add nuw nsw i64 %283, 1
  %313 = icmp eq i64 %312, %271
  br i1 %313, label %620, label %282

314:                                              ; preds = %72, %72
  %315 = getelementptr inbounds i8, i8* %91, i64 16
  %316 = icmp ugt i8* %315, %14
  br i1 %316, label %620, label %317

317:                                              ; preds = %314
  %318 = getelementptr inbounds i8, i8* %91, i64 4
  %319 = load i8, i8* %91, align 1
  %320 = zext i8 %319 to i64
  %321 = shl nuw nsw i64 %320, 24
  %322 = getelementptr inbounds i8, i8* %91, i64 1
  %323 = load i8, i8* %322, align 1
  %324 = zext i8 %323 to i64
  %325 = shl nuw nsw i64 %324, 16
  %326 = or i64 %325, %321
  %327 = getelementptr inbounds i8, i8* %91, i64 2
  %328 = load i8, i8* %327, align 1
  %329 = zext i8 %328 to i64
  %330 = shl nuw nsw i64 %329, 8
  %331 = or i64 %326, %330
  %332 = getelementptr inbounds i8, i8* %91, i64 3
  %333 = load i8, i8* %332, align 1
  %334 = zext i8 %333 to i64
  %335 = or i64 %331, %334
  %336 = getelementptr inbounds %struct.TT_SBitDecoderRec_, %struct.TT_SBitDecoderRec_* %0, i64 0, i32 3
  %337 = load %struct.TT_SBit_MetricsRec_*, %struct.TT_SBit_MetricsRec_** %336, align 8
  %338 = getelementptr inbounds i8, i8* %318, i64 5
  %339 = icmp ugt i8* %338, %14
  br i1 %339, label %620, label %340

340:                                              ; preds = %317
  %341 = load i8, i8* %318, align 1
  %342 = zext i8 %341 to i16
  %343 = getelementptr inbounds %struct.TT_SBit_MetricsRec_, %struct.TT_SBit_MetricsRec_* %337, i64 0, i32 0
  store i16 %342, i16* %343, align 2
  %344 = getelementptr inbounds i8, i8* %318, i64 1
  %345 = load i8, i8* %344, align 1
  %346 = zext i8 %345 to i16
  %347 = getelementptr inbounds %struct.TT_SBit_MetricsRec_, %struct.TT_SBit_MetricsRec_* %337, i64 0, i32 1
  store i16 %346, i16* %347, align 2
  %348 = getelementptr inbounds i8, i8* %318, i64 2
  %349 = load i8, i8* %348, align 1
  %350 = sext i8 %349 to i16
  %351 = getelementptr inbounds %struct.TT_SBit_MetricsRec_, %struct.TT_SBit_MetricsRec_* %337, i64 0, i32 2
  store i16 %350, i16* %351, align 2
  %352 = getelementptr inbounds i8, i8* %318, i64 3
  %353 = load i8, i8* %352, align 1
  %354 = sext i8 %353 to i16
  %355 = getelementptr inbounds %struct.TT_SBit_MetricsRec_, %struct.TT_SBit_MetricsRec_* %337, i64 0, i32 3
  store i16 %354, i16* %355, align 2
  %356 = getelementptr inbounds i8, i8* %318, i64 4
  %357 = load i8, i8* %356, align 1
  %358 = zext i8 %357 to i16
  %359 = getelementptr inbounds %struct.TT_SBit_MetricsRec_, %struct.TT_SBit_MetricsRec_* %337, i64 0, i32 4
  store i16 %358, i16* %359, align 2
  %360 = getelementptr inbounds i8, i8* %318, i64 8
  %361 = icmp ugt i8* %360, %14
  br i1 %361, label %620, label %362

362:                                              ; preds = %340
  %363 = load i8, i8* %338, align 1
  %364 = sext i8 %363 to i16
  %365 = getelementptr inbounds %struct.TT_SBit_MetricsRec_, %struct.TT_SBit_MetricsRec_* %337, i64 0, i32 5
  store i16 %364, i16* %365, align 2
  %366 = getelementptr inbounds i8, i8* %318, i64 6
  %367 = load i8, i8* %366, align 1
  %368 = sext i8 %367 to i16
  %369 = getelementptr inbounds %struct.TT_SBit_MetricsRec_, %struct.TT_SBit_MetricsRec_* %337, i64 0, i32 6
  store i16 %368, i16* %369, align 2
  %370 = getelementptr inbounds i8, i8* %318, i64 7
  %371 = load i8, i8* %370, align 1
  %372 = zext i8 %371 to i16
  %373 = getelementptr inbounds %struct.TT_SBit_MetricsRec_, %struct.TT_SBit_MetricsRec_* %337, i64 0, i32 7
  store i16 %372, i16* %373, align 2
  %374 = getelementptr inbounds %struct.TT_SBitDecoderRec_, %struct.TT_SBitDecoderRec_* %0, i64 0, i32 4
  store i8 1, i8* %374, align 8
  %375 = getelementptr inbounds i8, i8* %360, i64 4
  %376 = load i8, i8* %360, align 1
  %377 = zext i8 %376 to i64
  %378 = shl nuw nsw i64 %377, 24
  %379 = getelementptr inbounds i8, i8* %360, i64 1
  %380 = load i8, i8* %379, align 1
  %381 = zext i8 %380 to i64
  %382 = shl nuw nsw i64 %381, 16
  %383 = or i64 %382, %378
  %384 = getelementptr inbounds i8, i8* %360, i64 2
  %385 = load i8, i8* %384, align 1
  %386 = zext i8 %385 to i64
  %387 = shl nuw nsw i64 %386, 8
  %388 = or i64 %383, %387
  %389 = getelementptr inbounds i8, i8* %360, i64 3
  %390 = load i8, i8* %389, align 1
  %391 = zext i8 %390 to i64
  %392 = or i64 %388, %391
  %393 = ptrtoint i8* %375 to i64
  %394 = sub i64 %64, %393
  %395 = ashr i64 %394, 1
  %396 = icmp ule i64 %392, %395
  %397 = icmp ne i64 %392, 0
  %398 = and i1 %396, %397
  br i1 %398, label %399, label %620

399:                                              ; preds = %362, %410
  %400 = phi i64 [ %412, %410 ], [ 0, %362 ]
  %401 = phi i8* [ %411, %410 ], [ %375, %362 ]
  %402 = load i8, i8* %401, align 1
  %403 = zext i8 %402 to i32
  %404 = shl nuw nsw i32 %403, 8
  %405 = getelementptr inbounds i8, i8* %401, i64 1
  %406 = load i8, i8* %405, align 1
  %407 = zext i8 %406 to i32
  %408 = or i32 %404, %407
  %409 = icmp eq i32 %408, %1
  br i1 %409, label %414, label %410

410:                                              ; preds = %399
  %411 = getelementptr inbounds i8, i8* %401, i64 2
  %412 = add nuw nsw i64 %400, 1
  %413 = icmp eq i64 %412, %392
  br i1 %413, label %620, label %399

414:                                              ; preds = %399
  %415 = mul i64 %400, %335
  %416 = add i64 %415, %335
  br label %417

417:                                              ; preds = %293, %414, %206, %230, %117
  %418 = phi i64 [ %415, %414 ], [ %239, %230 ], [ %221, %206 ], [ %136, %117 ], [ %301, %293 ]
  %419 = phi i64 [ %416, %414 ], [ %248, %230 ], [ %222, %206 ], [ %155, %117 ], [ %309, %293 ]
  %420 = icmp ult i64 %419, %418
  br i1 %420, label %620, label %421

421:                                              ; preds = %417
  %422 = sub i64 %419, %418
  %423 = add i64 %418, %109
  %424 = getelementptr inbounds %struct.TT_SBitDecoderRec_, %struct.TT_SBitDecoderRec_* %0, i64 0, i32 1
  %425 = load %struct.FT_StreamRec_*, %struct.FT_StreamRec_** %424, align 8
  %426 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %426) #17
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %427 = icmp eq i64 %422, 0
  br i1 %427, label %618, label %428

428:                                              ; preds = %421
  %429 = add i64 %419, %109
  %430 = getelementptr inbounds %struct.TT_SBitDecoderRec_, %struct.TT_SBitDecoderRec_* %0, i64 0, i32 8
  %431 = load i64, i64* %430, align 8
  %432 = icmp ugt i64 %429, %431
  br i1 %432, label %618, label %433

433:                                              ; preds = %428
  %434 = getelementptr inbounds %struct.TT_SBitDecoderRec_, %struct.TT_SBitDecoderRec_* %0, i64 0, i32 7
  %435 = load i64, i64* %434, align 8
  %436 = add i64 %423, %435
  %437 = tail call i32 @FT_Stream_Seek(%struct.FT_StreamRec_* %425, i64 %436) #17
  %438 = icmp eq i32 %437, 0
  br i1 %438, label %439, label %618

439:                                              ; preds = %433
  %440 = call i32 @FT_Stream_ExtractFrame(%struct.FT_StreamRec_* %425, i64 %422, i8** nonnull %7) #17
  %441 = icmp eq i32 %440, 0
  br i1 %441, label %442, label %618

442:                                              ; preds = %439
  %443 = load i8*, i8** %7, align 8
  %444 = getelementptr inbounds i8, i8* %443, i64 %422
  switch i16 %90, label %516 [
    i16 1, label %445
    i16 2, label %445
    i16 8, label %445
    i16 17, label %445
    i16 6, label %472
    i16 7, label %472
    i16 9, label %472
    i16 18, label %472
  ]

445:                                              ; preds = %442, %442, %442, %442
  %446 = getelementptr inbounds %struct.TT_SBitDecoderRec_, %struct.TT_SBitDecoderRec_* %0, i64 0, i32 3
  %447 = load %struct.TT_SBit_MetricsRec_*, %struct.TT_SBit_MetricsRec_** %446, align 8
  %448 = icmp slt i64 %422, 5
  br i1 %448, label %616, label %449

449:                                              ; preds = %445
  %450 = getelementptr inbounds i8, i8* %443, i64 5
  %451 = load i8, i8* %443, align 1
  %452 = zext i8 %451 to i16
  %453 = getelementptr inbounds %struct.TT_SBit_MetricsRec_, %struct.TT_SBit_MetricsRec_* %447, i64 0, i32 0
  store i16 %452, i16* %453, align 2
  %454 = getelementptr inbounds i8, i8* %443, i64 1
  %455 = load i8, i8* %454, align 1
  %456 = zext i8 %455 to i16
  %457 = getelementptr inbounds %struct.TT_SBit_MetricsRec_, %struct.TT_SBit_MetricsRec_* %447, i64 0, i32 1
  store i16 %456, i16* %457, align 2
  %458 = getelementptr inbounds i8, i8* %443, i64 2
  %459 = load i8, i8* %458, align 1
  %460 = sext i8 %459 to i16
  %461 = getelementptr inbounds %struct.TT_SBit_MetricsRec_, %struct.TT_SBit_MetricsRec_* %447, i64 0, i32 2
  store i16 %460, i16* %461, align 2
  %462 = getelementptr inbounds i8, i8* %443, i64 3
  %463 = load i8, i8* %462, align 1
  %464 = sext i8 %463 to i16
  %465 = getelementptr inbounds %struct.TT_SBit_MetricsRec_, %struct.TT_SBit_MetricsRec_* %447, i64 0, i32 3
  store i16 %464, i16* %465, align 2
  %466 = getelementptr inbounds i8, i8* %443, i64 4
  %467 = load i8, i8* %466, align 1
  %468 = zext i8 %467 to i16
  %469 = getelementptr inbounds %struct.TT_SBit_MetricsRec_, %struct.TT_SBit_MetricsRec_* %447, i64 0, i32 4
  store i16 %468, i16* %469, align 2
  %470 = getelementptr inbounds %struct.TT_SBit_MetricsRec_, %struct.TT_SBit_MetricsRec_* %447, i64 0, i32 5
  store i16 0, i16* %470, align 2
  %471 = getelementptr inbounds %struct.TT_SBit_MetricsRec_, %struct.TT_SBit_MetricsRec_* %447, i64 0, i32 6
  store i16 0, i16* %471, align 2
  br label %510

472:                                              ; preds = %442, %442, %442, %442
  %473 = getelementptr inbounds %struct.TT_SBitDecoderRec_, %struct.TT_SBitDecoderRec_* %0, i64 0, i32 3
  %474 = load %struct.TT_SBit_MetricsRec_*, %struct.TT_SBit_MetricsRec_** %473, align 8
  %475 = getelementptr inbounds i8, i8* %443, i64 5
  %476 = icmp slt i64 %422, 5
  br i1 %476, label %616, label %477

477:                                              ; preds = %472
  %478 = load i8, i8* %443, align 1
  %479 = zext i8 %478 to i16
  %480 = getelementptr inbounds %struct.TT_SBit_MetricsRec_, %struct.TT_SBit_MetricsRec_* %474, i64 0, i32 0
  store i16 %479, i16* %480, align 2
  %481 = getelementptr inbounds i8, i8* %443, i64 1
  %482 = load i8, i8* %481, align 1
  %483 = zext i8 %482 to i16
  %484 = getelementptr inbounds %struct.TT_SBit_MetricsRec_, %struct.TT_SBit_MetricsRec_* %474, i64 0, i32 1
  store i16 %483, i16* %484, align 2
  %485 = getelementptr inbounds i8, i8* %443, i64 2
  %486 = load i8, i8* %485, align 1
  %487 = sext i8 %486 to i16
  %488 = getelementptr inbounds %struct.TT_SBit_MetricsRec_, %struct.TT_SBit_MetricsRec_* %474, i64 0, i32 2
  store i16 %487, i16* %488, align 2
  %489 = getelementptr inbounds i8, i8* %443, i64 3
  %490 = load i8, i8* %489, align 1
  %491 = sext i8 %490 to i16
  %492 = getelementptr inbounds %struct.TT_SBit_MetricsRec_, %struct.TT_SBit_MetricsRec_* %474, i64 0, i32 3
  store i16 %491, i16* %492, align 2
  %493 = getelementptr inbounds i8, i8* %443, i64 4
  %494 = load i8, i8* %493, align 1
  %495 = zext i8 %494 to i16
  %496 = getelementptr inbounds %struct.TT_SBit_MetricsRec_, %struct.TT_SBit_MetricsRec_* %474, i64 0, i32 4
  store i16 %495, i16* %496, align 2
  %497 = icmp slt i64 %422, 8
  br i1 %497, label %616, label %498

498:                                              ; preds = %477
  %499 = getelementptr inbounds i8, i8* %443, i64 8
  %500 = load i8, i8* %475, align 1
  %501 = sext i8 %500 to i16
  %502 = getelementptr inbounds %struct.TT_SBit_MetricsRec_, %struct.TT_SBit_MetricsRec_* %474, i64 0, i32 5
  store i16 %501, i16* %502, align 2
  %503 = getelementptr inbounds i8, i8* %443, i64 6
  %504 = load i8, i8* %503, align 1
  %505 = sext i8 %504 to i16
  %506 = getelementptr inbounds %struct.TT_SBit_MetricsRec_, %struct.TT_SBit_MetricsRec_* %474, i64 0, i32 6
  store i16 %505, i16* %506, align 2
  %507 = getelementptr inbounds i8, i8* %443, i64 7
  %508 = load i8, i8* %507, align 1
  %509 = zext i8 %508 to i16
  br label %510

510:                                              ; preds = %449, %498
  %511 = phi %struct.TT_SBit_MetricsRec_* [ %474, %498 ], [ %447, %449 ]
  %512 = phi i16 [ %509, %498 ], [ 0, %449 ]
  %513 = phi i8* [ %499, %498 ], [ %450, %449 ]
  %514 = getelementptr inbounds %struct.TT_SBit_MetricsRec_, %struct.TT_SBit_MetricsRec_* %511, i64 0, i32 7
  store i16 %512, i16* %514, align 2
  %515 = getelementptr inbounds %struct.TT_SBitDecoderRec_, %struct.TT_SBitDecoderRec_* %0, i64 0, i32 4
  store i8 1, i8* %515, align 8
  br label %516

516:                                              ; preds = %510, %442
  %517 = phi i8* [ %443, %442 ], [ %513, %510 ]
  %518 = ptrtoint i8* %517 to i64
  switch i16 %90, label %616 [
    i16 1, label %550
    i16 6, label %550
    i16 2, label %519
    i16 7, label %519
    i16 5, label %541
    i16 8, label %542
    i16 9, label %547
    i16 17, label %549
    i16 18, label %549
    i16 19, label %549
  ]

519:                                              ; preds = %516, %516
  %520 = getelementptr inbounds %struct.TT_SBitDecoderRec_, %struct.TT_SBitDecoderRec_* %0, i64 0, i32 3
  %521 = load %struct.TT_SBit_MetricsRec_*, %struct.TT_SBit_MetricsRec_** %520, align 8
  %522 = getelementptr inbounds %struct.TT_SBit_MetricsRec_, %struct.TT_SBit_MetricsRec_* %521, i64 0, i32 1
  %523 = load i16, i16* %522, align 2
  %524 = zext i16 %523 to i32
  %525 = getelementptr inbounds %struct.TT_SBit_MetricsRec_, %struct.TT_SBit_MetricsRec_* %521, i64 0, i32 0
  %526 = load i16, i16* %525, align 2
  %527 = zext i16 %526 to i32
  %528 = mul nuw i32 %527, %524
  %529 = add nuw i32 %528, 7
  %530 = lshr i32 %529, 3
  %531 = add nuw nsw i32 %524, 7
  %532 = lshr i32 %531, 3
  %533 = mul nuw nsw i32 %532, %527
  %534 = icmp ult i32 %530, %533
  br i1 %534, label %535, label %540

535:                                              ; preds = %519
  %536 = ptrtoint i8* %444 to i64
  %537 = sub i64 %536, %518
  %538 = trunc i64 %537 to i32
  %539 = icmp eq i32 %533, %538
  br i1 %539, label %550, label %540

540:                                              ; preds = %535, %519
  br label %550

541:                                              ; preds = %516
  br label %550

542:                                              ; preds = %516
  %543 = getelementptr inbounds i8, i8* %517, i64 1
  %544 = icmp ugt i8* %543, %444
  br i1 %544, label %616, label %545

545:                                              ; preds = %542
  %546 = ptrtoint i8* %543 to i64
  br label %547

547:                                              ; preds = %545, %516
  %548 = phi i64 [ %518, %516 ], [ %546, %545 ]
  br label %550

549:                                              ; preds = %516, %516, %516
  br label %550

550:                                              ; preds = %549, %547, %541, %540, %535, %516, %516
  %551 = phi i64 [ %518, %549 ], [ %548, %547 ], [ %518, %541 ], [ %518, %535 ], [ %518, %540 ], [ %518, %516 ], [ %518, %516 ]
  %552 = phi i32 (%struct.TT_SBitDecoderRec_*, i8*, i8*, i32, i32, i32)* [ @tt_sbit_decoder_load_png, %549 ], [ @tt_sbit_decoder_load_compound, %547 ], [ @tt_sbit_decoder_load_bit_aligned, %541 ], [ @tt_sbit_decoder_load_byte_aligned, %535 ], [ @tt_sbit_decoder_load_bit_aligned, %540 ], [ @tt_sbit_decoder_load_byte_aligned, %516 ], [ @tt_sbit_decoder_load_byte_aligned, %516 ]
  %553 = getelementptr inbounds %struct.TT_SBitDecoderRec_, %struct.TT_SBitDecoderRec_* %0, i64 0, i32 5
  %554 = load i8, i8* %553, align 1
  %555 = icmp eq i8 %554, 0
  br i1 %555, label %556, label %611

556:                                              ; preds = %550
  %557 = getelementptr inbounds %struct.TT_SBitDecoderRec_, %struct.TT_SBitDecoderRec_* %0, i64 0, i32 2
  %558 = load %struct.FT_Bitmap_*, %struct.FT_Bitmap_** %557, align 8
  %559 = getelementptr inbounds %struct.TT_SBitDecoderRec_, %struct.TT_SBitDecoderRec_* %0, i64 0, i32 4
  %560 = load i8, i8* %559, align 8
  %561 = icmp eq i8 %560, 0
  br i1 %561, label %616, label %562

562:                                              ; preds = %556
  %563 = getelementptr inbounds %struct.TT_SBitDecoderRec_, %struct.TT_SBitDecoderRec_* %0, i64 0, i32 3
  %564 = load %struct.TT_SBit_MetricsRec_*, %struct.TT_SBit_MetricsRec_** %563, align 8
  %565 = getelementptr inbounds %struct.TT_SBit_MetricsRec_, %struct.TT_SBit_MetricsRec_* %564, i64 0, i32 1
  %566 = load i16, i16* %565, align 2
  %567 = zext i16 %566 to i32
  %568 = getelementptr inbounds %struct.TT_SBit_MetricsRec_, %struct.TT_SBit_MetricsRec_* %564, i64 0, i32 0
  %569 = load i16, i16* %568, align 2
  %570 = zext i16 %569 to i32
  %571 = getelementptr inbounds %struct.FT_Bitmap_, %struct.FT_Bitmap_* %558, i64 0, i32 1
  store i32 %567, i32* %571, align 4
  %572 = getelementptr inbounds %struct.FT_Bitmap_, %struct.FT_Bitmap_* %558, i64 0, i32 0
  store i32 %570, i32* %572, align 8
  %573 = getelementptr inbounds %struct.TT_SBitDecoderRec_, %struct.TT_SBitDecoderRec_* %0, i64 0, i32 6
  %574 = load i8, i8* %573, align 2
  switch i8 %574, label %616 [
    i8 1, label %575
    i8 2, label %579
    i8 4, label %583
    i8 8, label %587
    i8 32, label %589
  ]

575:                                              ; preds = %562
  %576 = getelementptr inbounds %struct.FT_Bitmap_, %struct.FT_Bitmap_* %558, i64 0, i32 5
  store i8 1, i8* %576, align 2
  %577 = add nuw nsw i32 %567, 7
  %578 = lshr i32 %577, 3
  br label %592

579:                                              ; preds = %562
  %580 = getelementptr inbounds %struct.FT_Bitmap_, %struct.FT_Bitmap_* %558, i64 0, i32 5
  store i8 3, i8* %580, align 2
  %581 = add nuw nsw i32 %567, 3
  %582 = lshr i32 %581, 2
  br label %592

583:                                              ; preds = %562
  %584 = getelementptr inbounds %struct.FT_Bitmap_, %struct.FT_Bitmap_* %558, i64 0, i32 5
  store i8 4, i8* %584, align 2
  %585 = add nuw nsw i32 %567, 1
  %586 = lshr i32 %585, 1
  br label %592

587:                                              ; preds = %562
  %588 = getelementptr inbounds %struct.FT_Bitmap_, %struct.FT_Bitmap_* %558, i64 0, i32 5
  store i8 2, i8* %588, align 2
  br label %592

589:                                              ; preds = %562
  %590 = getelementptr inbounds %struct.FT_Bitmap_, %struct.FT_Bitmap_* %558, i64 0, i32 5
  store i8 7, i8* %590, align 2
  %591 = shl nuw nsw i32 %567, 2
  br label %592

592:                                              ; preds = %589, %587, %583, %579, %575
  %593 = phi i32 [ %591, %589 ], [ %567, %587 ], [ %586, %583 ], [ %582, %579 ], [ %578, %575 ]
  %594 = phi i16 [ 256, %589 ], [ 256, %587 ], [ 16, %583 ], [ 4, %579 ], [ 2, %575 ]
  %595 = getelementptr inbounds %struct.FT_Bitmap_, %struct.FT_Bitmap_* %558, i64 0, i32 2
  store i32 %593, i32* %595, align 8
  %596 = getelementptr inbounds %struct.FT_Bitmap_, %struct.FT_Bitmap_* %558, i64 0, i32 4
  store i16 %594, i16* %596, align 8
  %597 = zext i16 %569 to i64
  %598 = sext i32 %593 to i64
  %599 = mul nsw i64 %598, %597
  %600 = icmp eq i64 %599, 0
  %601 = icmp ne i8 %5, 0
  %602 = or i1 %601, %600
  br i1 %602, label %611, label %603

603:                                              ; preds = %592
  %604 = getelementptr inbounds %struct.TT_SBitDecoderRec_, %struct.TT_SBitDecoderRec_* %0, i64 0, i32 0
  %605 = load %struct.TT_FaceRec_*, %struct.TT_FaceRec_** %604, align 8
  %606 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %605, i64 0, i32 0, i32 21
  %607 = load %struct.FT_GlyphSlotRec_*, %struct.FT_GlyphSlotRec_** %606, align 8
  %608 = call i32 @ft_glyphslot_alloc_bitmap(%struct.FT_GlyphSlotRec_* %607, i64 %599) #17
  %609 = icmp eq i32 %608, 0
  br i1 %609, label %610, label %616

610:                                              ; preds = %603
  store i8 1, i8* %553, align 1
  br label %613

611:                                              ; preds = %592, %550
  %612 = icmp eq i8 %5, 0
  br i1 %612, label %613, label %616

613:                                              ; preds = %611, %610
  %614 = inttoptr i64 %551 to i8*
  %615 = call i32 %552(%struct.TT_SBitDecoderRec_* %0, i8* %614, i8* %444, i32 %2, i32 %3, i32 %4) #17, !callees !51
  br label %616

616:                                              ; preds = %613, %611, %603, %562, %556, %542, %516, %477, %472, %445
  %617 = phi i32 [ %615, %613 ], [ 0, %542 ], [ 8, %516 ], [ 0, %611 ], [ 6, %445 ], [ 6, %472 ], [ 6, %477 ], [ 3, %562 ], [ 6, %556 ], [ %608, %603 ]
  call void @FT_Stream_ReleaseFrame(%struct.FT_StreamRec_* %425, i8** nonnull %7) #17
  br label %618

618:                                              ; preds = %421, %428, %433, %439, %616
  %619 = phi i32 [ %437, %433 ], [ %440, %439 ], [ %617, %616 ], [ 6, %421 ], [ 6, %428 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %426) #17
  br label %623

620:                                              ; preds = %41, %410, %310, %362, %274, %18, %340, %317, %314, %253, %250, %184, %160, %157, %417, %72, %230, %223, %117, %110, %68
  %621 = icmp eq i32 %4, 0
  %622 = select i1 %621, i32 157, i32 21
  br label %623

623:                                              ; preds = %620, %6, %45, %618
  %624 = phi i32 [ %619, %618 ], [ 8, %45 ], [ 8, %6 ], [ %622, %620 ]
  ret i32 %624
}

declare void @FT_Bitmap_Init(%struct.FT_Bitmap_*) local_unnamed_addr #6

declare i32 @FT_Bitmap_Convert(%struct.FT_LibraryRec_*, %struct.FT_Bitmap_*, %struct.FT_Bitmap_*, i32) local_unnamed_addr #6

declare i32 @FT_Bitmap_Done(%struct.FT_LibraryRec_*, %struct.FT_Bitmap_*) local_unnamed_addr #6

declare hidden void @ft_glyphslot_set_bitmap(%struct.FT_GlyphSlotRec_*, i8*) local_unnamed_addr #6

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal i32 @tt_sbit_decoder_load_byte_aligned(%struct.TT_SBitDecoderRec_* nocapture readonly, i8* readonly, i8* readnone, i32, i32, i32) unnamed_addr #3 {
  %7 = getelementptr inbounds %struct.TT_SBitDecoderRec_, %struct.TT_SBitDecoderRec_* %0, i64 0, i32 2
  %8 = load %struct.FT_Bitmap_*, %struct.FT_Bitmap_** %7, align 8
  %9 = getelementptr inbounds %struct.FT_Bitmap_, %struct.FT_Bitmap_* %8, i64 0, i32 2
  %10 = load i32, i32* %9, align 8
  %11 = getelementptr inbounds %struct.FT_Bitmap_, %struct.FT_Bitmap_* %8, i64 0, i32 3
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds %struct.TT_SBitDecoderRec_, %struct.TT_SBitDecoderRec_* %0, i64 0, i32 3
  %14 = load %struct.TT_SBit_MetricsRec_*, %struct.TT_SBit_MetricsRec_** %13, align 8
  %15 = getelementptr inbounds %struct.TT_SBit_MetricsRec_, %struct.TT_SBit_MetricsRec_* %14, i64 0, i32 1
  %16 = load i16, i16* %15, align 2
  %17 = zext i16 %16 to i32
  %18 = getelementptr inbounds %struct.TT_SBit_MetricsRec_, %struct.TT_SBit_MetricsRec_* %14, i64 0, i32 0
  %19 = load i16, i16* %18, align 2
  %20 = zext i16 %19 to i32
  %21 = getelementptr inbounds %struct.TT_SBitDecoderRec_, %struct.TT_SBitDecoderRec_* %0, i64 0, i32 6
  %22 = load i8, i8* %21, align 2
  %23 = zext i8 %22 to i32
  %24 = mul nuw nsw i32 %23, %17
  %25 = icmp slt i32 %3, 0
  br i1 %25, label %291, label %26

26:                                               ; preds = %6
  %27 = getelementptr inbounds %struct.FT_Bitmap_, %struct.FT_Bitmap_* %8, i64 0, i32 0
  %28 = load i32, i32* %27, align 8
  %29 = getelementptr inbounds %struct.FT_Bitmap_, %struct.FT_Bitmap_* %8, i64 0, i32 1
  %30 = load i32, i32* %29, align 4
  %31 = add nuw nsw i32 %17, %3
  %32 = icmp ugt i32 %31, %30
  %33 = icmp slt i32 %4, 0
  %34 = or i1 %33, %32
  %35 = add nsw i32 %20, %4
  %36 = icmp ugt i32 %35, %28
  %37 = or i1 %36, %34
  br i1 %37, label %291, label %38

38:                                               ; preds = %26
  %39 = add nuw nsw i32 %24, 7
  %40 = lshr i32 %39, 3
  %41 = mul nsw i32 %40, %20
  %42 = zext i32 %41 to i64
  %43 = getelementptr inbounds i8, i8* %1, i64 %42
  %44 = icmp ugt i8* %43, %2
  br i1 %44, label %291, label %45

45:                                               ; preds = %38
  %46 = mul nsw i32 %10, %4
  %47 = lshr i32 %3, 3
  %48 = add nsw i32 %46, %47
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds i8, i8* %12, i64 %49
  %51 = and i32 %3, 7
  %52 = icmp eq i32 %51, 0
  %53 = icmp ne i16 %19, 0
  br i1 %52, label %66, label %54

54:                                               ; preds = %45
  br i1 %53, label %55, label %291

55:                                               ; preds = %54
  %56 = icmp ugt i32 %24, 7
  %57 = sext i32 %10 to i64
  %58 = and i32 %24, 7
  %59 = add nsw i32 %24, -8
  %60 = lshr i32 %59, 3
  %61 = add nuw nsw i32 %60, 1
  %62 = and i32 %61, 1
  %63 = icmp eq i32 %60, 0
  %64 = sub nuw nsw i32 %61, %62
  %65 = icmp eq i32 %62, 0
  br label %208

66:                                               ; preds = %45
  br i1 %53, label %67, label %291

67:                                               ; preds = %66
  %68 = icmp ugt i32 %24, 7
  %69 = sext i32 %10 to i64
  %70 = and i32 %24, 7
  %71 = mul nuw nsw i32 %23, %17
  %72 = add nsw i32 %71, -8
  %73 = lshr i32 %72, 3
  %74 = add nuw nsw i32 %73, 1
  %75 = zext i32 %74 to i64
  %76 = add nsw i32 %71, -8
  %77 = lshr i32 %76, 3
  %78 = zext i32 %77 to i64
  %79 = add nsw i64 %78, %49
  %80 = add nsw i64 %79, 1
  %81 = add nuw nsw i64 %78, 1
  %82 = and i64 %75, 1073741792
  %83 = add nsw i64 %82, -32
  %84 = lshr exact i64 %83, 5
  %85 = add nuw nsw i64 %84, 1
  %86 = icmp ult i32 %74, 32
  %87 = and i64 %75, 1073741792
  %88 = trunc i64 %87 to i32
  %89 = mul i32 %88, -8
  %90 = add i32 %24, %89
  %91 = and i64 %85, 1
  %92 = icmp eq i64 %83, 0
  %93 = sub nuw nsw i64 %85, %91
  %94 = icmp eq i64 %91, 0
  %95 = icmp eq i64 %87, %75
  br label %96

96:                                               ; preds = %67, %202
  %97 = phi i64 [ 0, %67 ], [ %207, %202 ]
  %98 = phi i8* [ %1, %67 ], [ %203, %202 ]
  %99 = phi i32 [ %20, %67 ], [ %204, %202 ]
  %100 = phi i8* [ %50, %67 ], [ %205, %202 ]
  %101 = mul i64 %97, %69
  %102 = add i64 %101, %49
  %103 = getelementptr i8, i8* %12, i64 %102
  %104 = add i64 %80, %101
  %105 = getelementptr i8, i8* %12, i64 %104
  br i1 %68, label %106, label %189

106:                                              ; preds = %96
  br i1 %86, label %174, label %107

107:                                              ; preds = %106
  %108 = getelementptr i8, i8* %98, i64 %81
  %109 = icmp ult i8* %103, %108
  %110 = icmp ult i8* %98, %105
  %111 = and i1 %109, %110
  br i1 %111, label %174, label %112

112:                                              ; preds = %107
  %113 = getelementptr i8, i8* %100, i64 %87
  %114 = getelementptr i8, i8* %98, i64 %87
  br i1 %92, label %154, label %115

115:                                              ; preds = %112, %115
  %116 = phi i64 [ %151, %115 ], [ 0, %112 ]
  %117 = phi i64 [ %152, %115 ], [ %93, %112 ]
  %118 = getelementptr i8, i8* %100, i64 %116
  %119 = getelementptr i8, i8* %98, i64 %116
  %120 = bitcast i8* %118 to <16 x i8>*
  %121 = load <16 x i8>, <16 x i8>* %120, align 1, !alias.scope !52, !noalias !55
  %122 = getelementptr i8, i8* %118, i64 16
  %123 = bitcast i8* %122 to <16 x i8>*
  %124 = load <16 x i8>, <16 x i8>* %123, align 1, !alias.scope !52, !noalias !55
  %125 = bitcast i8* %119 to <16 x i8>*
  %126 = load <16 x i8>, <16 x i8>* %125, align 1, !alias.scope !55
  %127 = getelementptr i8, i8* %119, i64 16
  %128 = bitcast i8* %127 to <16 x i8>*
  %129 = load <16 x i8>, <16 x i8>* %128, align 1, !alias.scope !55
  %130 = or <16 x i8> %126, %121
  %131 = or <16 x i8> %129, %124
  %132 = bitcast i8* %118 to <16 x i8>*
  store <16 x i8> %130, <16 x i8>* %132, align 1, !alias.scope !52, !noalias !55
  %133 = bitcast i8* %122 to <16 x i8>*
  store <16 x i8> %131, <16 x i8>* %133, align 1, !alias.scope !52, !noalias !55
  %134 = or i64 %116, 32
  %135 = getelementptr i8, i8* %100, i64 %134
  %136 = getelementptr i8, i8* %98, i64 %134
  %137 = bitcast i8* %135 to <16 x i8>*
  %138 = load <16 x i8>, <16 x i8>* %137, align 1, !alias.scope !52, !noalias !55
  %139 = getelementptr i8, i8* %135, i64 16
  %140 = bitcast i8* %139 to <16 x i8>*
  %141 = load <16 x i8>, <16 x i8>* %140, align 1, !alias.scope !52, !noalias !55
  %142 = bitcast i8* %136 to <16 x i8>*
  %143 = load <16 x i8>, <16 x i8>* %142, align 1, !alias.scope !55
  %144 = getelementptr i8, i8* %136, i64 16
  %145 = bitcast i8* %144 to <16 x i8>*
  %146 = load <16 x i8>, <16 x i8>* %145, align 1, !alias.scope !55
  %147 = or <16 x i8> %143, %138
  %148 = or <16 x i8> %146, %141
  %149 = bitcast i8* %135 to <16 x i8>*
  store <16 x i8> %147, <16 x i8>* %149, align 1, !alias.scope !52, !noalias !55
  %150 = bitcast i8* %139 to <16 x i8>*
  store <16 x i8> %148, <16 x i8>* %150, align 1, !alias.scope !52, !noalias !55
  %151 = add i64 %116, 64
  %152 = add i64 %117, -2
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %115, !llvm.loop !57

154:                                              ; preds = %115, %112
  %155 = phi i64 [ 0, %112 ], [ %151, %115 ]
  br i1 %94, label %173, label %156

156:                                              ; preds = %154
  %157 = getelementptr i8, i8* %100, i64 %155
  %158 = getelementptr i8, i8* %98, i64 %155
  %159 = bitcast i8* %157 to <16 x i8>*
  %160 = load <16 x i8>, <16 x i8>* %159, align 1, !alias.scope !52, !noalias !55
  %161 = getelementptr i8, i8* %157, i64 16
  %162 = bitcast i8* %161 to <16 x i8>*
  %163 = load <16 x i8>, <16 x i8>* %162, align 1, !alias.scope !52, !noalias !55
  %164 = bitcast i8* %158 to <16 x i8>*
  %165 = load <16 x i8>, <16 x i8>* %164, align 1, !alias.scope !55
  %166 = getelementptr i8, i8* %158, i64 16
  %167 = bitcast i8* %166 to <16 x i8>*
  %168 = load <16 x i8>, <16 x i8>* %167, align 1, !alias.scope !55
  %169 = or <16 x i8> %165, %160
  %170 = or <16 x i8> %168, %163
  %171 = bitcast i8* %157 to <16 x i8>*
  store <16 x i8> %169, <16 x i8>* %171, align 1, !alias.scope !52, !noalias !55
  %172 = bitcast i8* %161 to <16 x i8>*
  store <16 x i8> %170, <16 x i8>* %172, align 1, !alias.scope !52, !noalias !55
  br label %173

173:                                              ; preds = %154, %156
  br i1 %95, label %189, label %174

174:                                              ; preds = %173, %107, %106
  %175 = phi i32 [ %24, %107 ], [ %24, %106 ], [ %90, %173 ]
  %176 = phi i8* [ %100, %107 ], [ %100, %106 ], [ %113, %173 ]
  %177 = phi i8* [ %98, %107 ], [ %98, %106 ], [ %114, %173 ]
  br label %178

178:                                              ; preds = %174, %178
  %179 = phi i32 [ %187, %178 ], [ %175, %174 ]
  %180 = phi i8* [ %186, %178 ], [ %176, %174 ]
  %181 = phi i8* [ %183, %178 ], [ %177, %174 ]
  %182 = load i8, i8* %180, align 1
  %183 = getelementptr inbounds i8, i8* %181, i64 1
  %184 = load i8, i8* %181, align 1
  %185 = or i8 %184, %182
  store i8 %185, i8* %180, align 1
  %186 = getelementptr inbounds i8, i8* %180, i64 1
  %187 = add nsw i32 %179, -8
  %188 = icmp sgt i32 %187, 7
  br i1 %188, label %178, label %189, !llvm.loop !58

189:                                              ; preds = %178, %173, %96
  %190 = phi i8* [ %98, %96 ], [ %114, %173 ], [ %183, %178 ]
  %191 = phi i8* [ %100, %96 ], [ %113, %173 ], [ %186, %178 ]
  %192 = phi i32 [ %24, %96 ], [ %70, %173 ], [ %70, %178 ]
  %193 = icmp sgt i32 %192, 0
  br i1 %193, label %194, label %202

194:                                              ; preds = %189
  %195 = load i8, i8* %191, align 1
  %196 = getelementptr inbounds i8, i8* %190, i64 1
  %197 = load i8, i8* %190, align 1
  %198 = lshr i32 65280, %192
  %199 = trunc i32 %198 to i8
  %200 = and i8 %197, %199
  %201 = or i8 %200, %195
  store i8 %201, i8* %191, align 1
  br label %202

202:                                              ; preds = %194, %189
  %203 = phi i8* [ %196, %194 ], [ %190, %189 ]
  %204 = add nsw i32 %99, -1
  %205 = getelementptr inbounds i8, i8* %100, i64 %69
  %206 = icmp sgt i32 %204, 0
  %207 = add i64 %97, 1
  br i1 %206, label %96, label %291

208:                                              ; preds = %55, %287
  %209 = phi i8* [ %1, %55 ], [ %272, %287 ]
  %210 = phi i32 [ %20, %55 ], [ %288, %287 ]
  %211 = phi i8* [ %50, %55 ], [ %289, %287 ]
  br i1 %56, label %212, label %258

212:                                              ; preds = %208
  br i1 %63, label %240, label %213

213:                                              ; preds = %212, %213
  %214 = phi i32 [ %237, %213 ], [ 0, %212 ]
  %215 = phi i8* [ %236, %213 ], [ %211, %212 ]
  %216 = phi i8* [ %228, %213 ], [ %209, %212 ]
  %217 = phi i32 [ %238, %213 ], [ %64, %212 ]
  %218 = getelementptr inbounds i8, i8* %216, i64 1
  %219 = load i8, i8* %216, align 1
  %220 = zext i8 %219 to i32
  %221 = or i32 %214, %220
  %222 = load i8, i8* %215, align 1
  %223 = lshr i32 %221, %51
  %224 = trunc i32 %223 to i8
  %225 = or i8 %222, %224
  store i8 %225, i8* %215, align 1
  %226 = getelementptr inbounds i8, i8* %215, i64 1
  %227 = shl i32 %221, 8
  %228 = getelementptr inbounds i8, i8* %216, i64 2
  %229 = load i8, i8* %218, align 1
  %230 = zext i8 %229 to i32
  %231 = or i32 %227, %230
  %232 = load i8, i8* %226, align 1
  %233 = lshr i32 %231, %51
  %234 = trunc i32 %233 to i8
  %235 = or i8 %232, %234
  store i8 %235, i8* %226, align 1
  %236 = getelementptr inbounds i8, i8* %215, i64 2
  %237 = shl i32 %231, 8
  %238 = add i32 %217, -2
  %239 = icmp eq i32 %238, 0
  br i1 %239, label %240, label %213

240:                                              ; preds = %213, %212
  %241 = phi i8* [ undef, %212 ], [ %228, %213 ]
  %242 = phi i8* [ undef, %212 ], [ %236, %213 ]
  %243 = phi i32 [ undef, %212 ], [ %237, %213 ]
  %244 = phi i32 [ 0, %212 ], [ %237, %213 ]
  %245 = phi i8* [ %211, %212 ], [ %236, %213 ]
  %246 = phi i8* [ %209, %212 ], [ %228, %213 ]
  br i1 %65, label %258, label %247

247:                                              ; preds = %240
  %248 = load i8, i8* %246, align 1
  %249 = zext i8 %248 to i32
  %250 = or i32 %244, %249
  %251 = load i8, i8* %245, align 1
  %252 = lshr i32 %250, %51
  %253 = trunc i32 %252 to i8
  %254 = or i8 %251, %253
  store i8 %254, i8* %245, align 1
  %255 = shl i32 %250, 8
  %256 = getelementptr inbounds i8, i8* %245, i64 1
  %257 = getelementptr inbounds i8, i8* %246, i64 1
  br label %258

258:                                              ; preds = %247, %240, %208
  %259 = phi i8* [ %209, %208 ], [ %241, %240 ], [ %257, %247 ]
  %260 = phi i8* [ %211, %208 ], [ %242, %240 ], [ %256, %247 ]
  %261 = phi i32 [ %24, %208 ], [ %58, %240 ], [ %58, %247 ]
  %262 = phi i32 [ 0, %208 ], [ %243, %240 ], [ %255, %247 ]
  %263 = icmp sgt i32 %261, 0
  br i1 %263, label %264, label %271

264:                                              ; preds = %258
  %265 = getelementptr inbounds i8, i8* %259, i64 1
  %266 = load i8, i8* %259, align 1
  %267 = zext i8 %266 to i32
  %268 = lshr i32 65280, %261
  %269 = and i32 %268, %267
  %270 = or i32 %269, %262
  br label %271

271:                                              ; preds = %264, %258
  %272 = phi i8* [ %265, %264 ], [ %259, %258 ]
  %273 = phi i32 [ %270, %264 ], [ %262, %258 ]
  %274 = load i8, i8* %260, align 1
  %275 = lshr i32 %273, %51
  %276 = trunc i32 %275 to i8
  %277 = or i8 %274, %276
  store i8 %277, i8* %260, align 1
  %278 = add nsw i32 %261, %51
  %279 = icmp sgt i32 %278, 8
  br i1 %279, label %280, label %287

280:                                              ; preds = %271
  %281 = getelementptr inbounds i8, i8* %260, i64 1
  %282 = shl i32 %273, 8
  %283 = load i8, i8* %281, align 1
  %284 = lshr i32 %282, %51
  %285 = trunc i32 %284 to i8
  %286 = or i8 %283, %285
  store i8 %286, i8* %281, align 1
  br label %287

287:                                              ; preds = %280, %271
  %288 = add nsw i32 %210, -1
  %289 = getelementptr inbounds i8, i8* %211, i64 %57
  %290 = icmp sgt i32 %288, 0
  br i1 %290, label %208, label %291

291:                                              ; preds = %287, %202, %54, %66, %38, %26, %6
  %292 = phi i32 [ 3, %6 ], [ 3, %26 ], [ 3, %38 ], [ 0, %66 ], [ 0, %54 ], [ 0, %202 ], [ 0, %287 ]
  ret i32 %292
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal i32 @tt_sbit_decoder_load_bit_aligned(%struct.TT_SBitDecoderRec_* nocapture readonly, i8* readonly, i8* readnone, i32, i32, i32) unnamed_addr #3 {
  %7 = getelementptr inbounds %struct.TT_SBitDecoderRec_, %struct.TT_SBitDecoderRec_* %0, i64 0, i32 2
  %8 = load %struct.FT_Bitmap_*, %struct.FT_Bitmap_** %7, align 8
  %9 = getelementptr inbounds %struct.FT_Bitmap_, %struct.FT_Bitmap_* %8, i64 0, i32 2
  %10 = load i32, i32* %9, align 8
  %11 = getelementptr inbounds %struct.FT_Bitmap_, %struct.FT_Bitmap_* %8, i64 0, i32 3
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds %struct.TT_SBitDecoderRec_, %struct.TT_SBitDecoderRec_* %0, i64 0, i32 3
  %14 = load %struct.TT_SBit_MetricsRec_*, %struct.TT_SBit_MetricsRec_** %13, align 8
  %15 = getelementptr inbounds %struct.TT_SBit_MetricsRec_, %struct.TT_SBit_MetricsRec_* %14, i64 0, i32 1
  %16 = load i16, i16* %15, align 2
  %17 = zext i16 %16 to i32
  %18 = getelementptr inbounds %struct.TT_SBit_MetricsRec_, %struct.TT_SBit_MetricsRec_* %14, i64 0, i32 0
  %19 = load i16, i16* %18, align 2
  %20 = zext i16 %19 to i32
  %21 = getelementptr inbounds %struct.TT_SBitDecoderRec_, %struct.TT_SBitDecoderRec_* %0, i64 0, i32 6
  %22 = load i8, i8* %21, align 2
  %23 = zext i8 %22 to i32
  %24 = mul nuw nsw i32 %23, %17
  %25 = icmp slt i32 %3, 0
  br i1 %25, label %218, label %26

26:                                               ; preds = %6
  %27 = getelementptr inbounds %struct.FT_Bitmap_, %struct.FT_Bitmap_* %8, i64 0, i32 0
  %28 = load i32, i32* %27, align 8
  %29 = getelementptr inbounds %struct.FT_Bitmap_, %struct.FT_Bitmap_* %8, i64 0, i32 1
  %30 = load i32, i32* %29, align 4
  %31 = add nuw nsw i32 %17, %3
  %32 = icmp ugt i32 %31, %30
  %33 = icmp slt i32 %4, 0
  %34 = or i1 %33, %32
  %35 = add nsw i32 %20, %4
  %36 = icmp ugt i32 %35, %28
  %37 = or i1 %36, %34
  br i1 %37, label %218, label %38

38:                                               ; preds = %26
  %39 = mul nsw i32 %24, %20
  %40 = add nuw nsw i32 %39, 7
  %41 = lshr i32 %40, 3
  %42 = zext i32 %41 to i64
  %43 = getelementptr inbounds i8, i8* %1, i64 %42
  %44 = icmp ugt i8* %43, %2
  br i1 %44, label %218, label %45

45:                                               ; preds = %38
  %46 = icmp ne i32 %24, 0
  %47 = icmp ne i16 %19, 0
  %48 = and i1 %47, %46
  br i1 %48, label %49, label %218

49:                                               ; preds = %45
  %50 = and i32 %3, 7
  %51 = mul nsw i32 %10, %4
  %52 = lshr i32 %3, 3
  %53 = add nsw i32 %51, %52
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds i8, i8* %12, i64 %54
  %56 = icmp eq i32 %50, 0
  %57 = sub nuw nsw i32 8, %50
  %58 = icmp ult i32 %24, %57
  %59 = select i1 %58, i32 %24, i32 %57
  %60 = sub nsw i32 8, %59
  %61 = shl i32 255, %59
  %62 = xor i32 %61, -1
  %63 = sub nsw i32 %57, %59
  %64 = shl i32 %62, %63
  %65 = sub nsw i32 %24, %59
  %66 = sext i32 %10 to i64
  br label %67

67:                                               ; preds = %49, %211
  %68 = phi i16 [ 0, %49 ], [ %214, %211 ]
  %69 = phi i8* [ %1, %49 ], [ %213, %211 ]
  %70 = phi i32 [ 0, %49 ], [ %212, %211 ]
  %71 = phi i32 [ %20, %49 ], [ %215, %211 ]
  %72 = phi i8* [ %55, %49 ], [ %216, %211 ]
  br i1 %56, label %107, label %73

73:                                               ; preds = %67
  %74 = icmp eq i32 %71, %20
  br i1 %74, label %75, label %79

75:                                               ; preds = %73
  %76 = getelementptr inbounds i8, i8* %69, i64 1
  %77 = load i8, i8* %69, align 1
  %78 = zext i8 %77 to i16
  br label %95

79:                                               ; preds = %73
  %80 = icmp slt i32 %70, %59
  br i1 %80, label %81, label %92

81:                                               ; preds = %79
  %82 = icmp ult i8* %69, %2
  br i1 %82, label %83, label %88

83:                                               ; preds = %81
  %84 = getelementptr inbounds i8, i8* %69, i64 1
  %85 = load i8, i8* %69, align 1
  %86 = zext i8 %85 to i16
  %87 = or i16 %68, %86
  br label %88

88:                                               ; preds = %83, %81
  %89 = phi i8* [ %84, %83 ], [ %69, %81 ]
  %90 = phi i16 [ %87, %83 ], [ %68, %81 ]
  %91 = add nsw i32 %60, %70
  br label %95

92:                                               ; preds = %79
  %93 = lshr i16 %68, 8
  %94 = sub nsw i32 %70, %59
  br label %95

95:                                               ; preds = %88, %92, %75
  %96 = phi i32 [ %50, %75 ], [ %91, %88 ], [ %94, %92 ]
  %97 = phi i8* [ %76, %75 ], [ %89, %88 ], [ %69, %92 ]
  %98 = phi i16 [ %78, %75 ], [ %90, %88 ], [ %93, %92 ]
  %99 = zext i16 %98 to i32
  %100 = lshr i32 %99, %96
  %101 = and i32 %100, %64
  %102 = getelementptr inbounds i8, i8* %72, i64 1
  %103 = load i8, i8* %72, align 1
  %104 = trunc i32 %101 to i8
  %105 = or i8 %103, %104
  store i8 %105, i8* %72, align 1
  %106 = shl i16 %98, 8
  br label %107

107:                                              ; preds = %67, %95
  %108 = phi i32 [ %96, %95 ], [ %70, %67 ]
  %109 = phi i8* [ %97, %95 ], [ %69, %67 ]
  %110 = phi i16 [ %106, %95 ], [ %68, %67 ]
  %111 = phi i8* [ %102, %95 ], [ %72, %67 ]
  %112 = phi i32 [ %65, %95 ], [ %24, %67 ]
  %113 = icmp sgt i32 %112, 7
  br i1 %113, label %114, label %174

114:                                              ; preds = %107
  %115 = add nsw i32 %112, -8
  %116 = and i32 %115, 8
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %118, label %131

118:                                              ; preds = %114
  %119 = getelementptr inbounds i8, i8* %109, i64 1
  %120 = load i8, i8* %109, align 1
  %121 = zext i8 %120 to i16
  %122 = or i16 %110, %121
  %123 = zext i16 %122 to i32
  %124 = lshr i32 %123, %108
  %125 = getelementptr inbounds i8, i8* %111, i64 1
  %126 = load i8, i8* %111, align 1
  %127 = trunc i32 %124 to i8
  %128 = or i8 %126, %127
  store i8 %128, i8* %111, align 1
  %129 = shl i16 %122, 8
  %130 = add nsw i32 %112, -8
  br label %131

131:                                              ; preds = %118, %114
  %132 = phi i32 [ %130, %118 ], [ %112, %114 ]
  %133 = phi i8* [ %125, %118 ], [ %111, %114 ]
  %134 = phi i16 [ %129, %118 ], [ %110, %114 ]
  %135 = phi i8* [ %119, %118 ], [ %109, %114 ]
  %136 = phi i8* [ %119, %118 ], [ undef, %114 ]
  %137 = phi i8* [ %125, %118 ], [ undef, %114 ]
  %138 = phi i16 [ %129, %118 ], [ undef, %114 ]
  %139 = icmp ult i32 %115, 8
  br i1 %139, label %169, label %140

140:                                              ; preds = %131, %140
  %141 = phi i32 [ %167, %140 ], [ %132, %131 ]
  %142 = phi i8* [ %162, %140 ], [ %133, %131 ]
  %143 = phi i16 [ %166, %140 ], [ %134, %131 ]
  %144 = phi i8* [ %156, %140 ], [ %135, %131 ]
  %145 = getelementptr inbounds i8, i8* %144, i64 1
  %146 = load i8, i8* %144, align 1
  %147 = zext i8 %146 to i16
  %148 = or i16 %143, %147
  %149 = zext i16 %148 to i32
  %150 = lshr i32 %149, %108
  %151 = getelementptr inbounds i8, i8* %142, i64 1
  %152 = load i8, i8* %142, align 1
  %153 = trunc i32 %150 to i8
  %154 = or i8 %152, %153
  store i8 %154, i8* %142, align 1
  %155 = shl i16 %148, 8
  %156 = getelementptr inbounds i8, i8* %144, i64 2
  %157 = load i8, i8* %145, align 1
  %158 = zext i8 %157 to i16
  %159 = or i16 %155, %158
  %160 = zext i16 %159 to i32
  %161 = lshr i32 %160, %108
  %162 = getelementptr inbounds i8, i8* %142, i64 2
  %163 = load i8, i8* %151, align 1
  %164 = trunc i32 %161 to i8
  %165 = or i8 %163, %164
  store i8 %165, i8* %151, align 1
  %166 = shl nuw i16 %158, 8
  %167 = add nsw i32 %141, -16
  %168 = icmp sgt i32 %167, 7
  br i1 %168, label %140, label %169

169:                                              ; preds = %140, %131
  %170 = phi i8* [ %136, %131 ], [ %156, %140 ]
  %171 = phi i8* [ %137, %131 ], [ %162, %140 ]
  %172 = phi i16 [ %138, %131 ], [ %166, %140 ]
  %173 = and i32 %112, 7
  br label %174

174:                                              ; preds = %169, %107
  %175 = phi i8* [ %109, %107 ], [ %170, %169 ]
  %176 = phi i16 [ %110, %107 ], [ %172, %169 ]
  %177 = phi i8* [ %111, %107 ], [ %171, %169 ]
  %178 = phi i32 [ %112, %107 ], [ %173, %169 ]
  %179 = icmp sgt i32 %178, 0
  br i1 %179, label %180, label %211

180:                                              ; preds = %174
  %181 = icmp slt i32 %108, %178
  br i1 %181, label %182, label %202

182:                                              ; preds = %180
  %183 = icmp ult i8* %175, %2
  br i1 %183, label %184, label %189

184:                                              ; preds = %182
  %185 = getelementptr inbounds i8, i8* %175, i64 1
  %186 = load i8, i8* %175, align 1
  %187 = zext i8 %186 to i16
  %188 = or i16 %176, %187
  br label %189

189:                                              ; preds = %184, %182
  %190 = phi i8* [ %185, %184 ], [ %175, %182 ]
  %191 = phi i16 [ %188, %184 ], [ %176, %182 ]
  %192 = zext i16 %191 to i32
  %193 = lshr i32 %192, %108
  %194 = lshr i32 65280, %178
  %195 = and i32 %193, %194
  %196 = load i8, i8* %177, align 1
  %197 = trunc i32 %195 to i8
  %198 = or i8 %196, %197
  store i8 %198, i8* %177, align 1
  %199 = add i32 %108, 8
  %200 = sub i32 %199, %178
  %201 = shl i16 %191, 8
  br label %211

202:                                              ; preds = %180
  %203 = zext i16 %176 to i32
  %204 = lshr i32 %203, %108
  %205 = lshr i32 65280, %178
  %206 = and i32 %205, %204
  %207 = load i8, i8* %177, align 1
  %208 = trunc i32 %206 to i8
  %209 = or i8 %207, %208
  store i8 %209, i8* %177, align 1
  %210 = sub nsw i32 %108, %178
  br label %211

211:                                              ; preds = %189, %202, %174
  %212 = phi i32 [ %200, %189 ], [ %210, %202 ], [ %108, %174 ]
  %213 = phi i8* [ %190, %189 ], [ %175, %202 ], [ %175, %174 ]
  %214 = phi i16 [ %201, %189 ], [ %176, %202 ], [ %176, %174 ]
  %215 = add nsw i32 %71, -1
  %216 = getelementptr inbounds i8, i8* %72, i64 %66
  %217 = icmp sgt i32 %215, 0
  br i1 %217, label %67, label %218

218:                                              ; preds = %211, %38, %26, %6, %45
  %219 = phi i32 [ 0, %45 ], [ 3, %6 ], [ 3, %26 ], [ 3, %38 ], [ 0, %211 ]
  ret i32 %219
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @tt_sbit_decoder_load_compound(%struct.TT_SBitDecoderRec_*, i8* readonly, i8* readnone, i32, i32, i32) unnamed_addr #0 {
  %7 = getelementptr inbounds %struct.TT_SBitDecoderRec_, %struct.TT_SBitDecoderRec_* %0, i64 0, i32 3
  %8 = load %struct.TT_SBit_MetricsRec_*, %struct.TT_SBit_MetricsRec_** %7, align 8
  %9 = getelementptr inbounds %struct.TT_SBit_MetricsRec_, %struct.TT_SBit_MetricsRec_* %8, i64 0, i32 2
  %10 = load i16, i16* %9, align 2
  %11 = getelementptr inbounds %struct.TT_SBit_MetricsRec_, %struct.TT_SBit_MetricsRec_* %8, i64 0, i32 3
  %12 = load i16, i16* %11, align 2
  %13 = getelementptr inbounds %struct.TT_SBit_MetricsRec_, %struct.TT_SBit_MetricsRec_* %8, i64 0, i32 4
  %14 = load i16, i16* %13, align 2
  %15 = getelementptr inbounds %struct.TT_SBit_MetricsRec_, %struct.TT_SBit_MetricsRec_* %8, i64 0, i32 5
  %16 = load i16, i16* %15, align 2
  %17 = getelementptr inbounds %struct.TT_SBit_MetricsRec_, %struct.TT_SBit_MetricsRec_* %8, i64 0, i32 6
  %18 = load i16, i16* %17, align 2
  %19 = getelementptr inbounds %struct.TT_SBit_MetricsRec_, %struct.TT_SBit_MetricsRec_* %8, i64 0, i32 7
  %20 = load i16, i16* %19, align 2
  %21 = getelementptr inbounds i8, i8* %1, i64 2
  %22 = icmp ugt i8* %21, %2
  br i1 %22, label %104, label %23

23:                                               ; preds = %6
  %24 = load i8, i8* %1, align 1
  %25 = zext i8 %24 to i32
  %26 = shl nuw nsw i32 %25, 8
  %27 = getelementptr inbounds i8, i8* %1, i64 1
  %28 = load i8, i8* %27, align 1
  %29 = zext i8 %28 to i32
  %30 = or i32 %26, %29
  %31 = shl nuw nsw i32 %30, 2
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds i8, i8* %21, i64 %32
  %34 = icmp ugt i8* %33, %2
  br i1 %34, label %104, label %35

35:                                               ; preds = %23
  %36 = icmp eq i32 %30, 0
  br i1 %36, label %65, label %37

37:                                               ; preds = %35
  %38 = add i32 %5, 1
  br label %39

39:                                               ; preds = %59, %37
  %40 = phi i8* [ %21, %37 ], [ %60, %59 ]
  %41 = phi i32 [ 0, %37 ], [ %61, %59 ]
  %42 = getelementptr inbounds i8, i8* %40, i64 2
  %43 = load i8, i8* %40, align 1
  %44 = zext i8 %43 to i32
  %45 = shl nuw nsw i32 %44, 8
  %46 = getelementptr inbounds i8, i8* %40, i64 1
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i32
  %49 = or i32 %45, %48
  %50 = getelementptr inbounds i8, i8* %40, i64 3
  %51 = load i8, i8* %42, align 1
  %52 = load i8, i8* %50, align 1
  %53 = sext i8 %51 to i32
  %54 = add nsw i32 %53, %3
  %55 = sext i8 %52 to i32
  %56 = add nsw i32 %55, %4
  %57 = tail call fastcc i32 @tt_sbit_decoder_load_image(%struct.TT_SBitDecoderRec_* %0, i32 %49, i32 %54, i32 %56, i32 %38, i8 zeroext 0)
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %63

59:                                               ; preds = %39
  %60 = getelementptr inbounds i8, i8* %40, i64 4
  %61 = add nuw nsw i32 %41, 1
  %62 = icmp eq i32 %61, %30
  br i1 %62, label %63, label %39

63:                                               ; preds = %59, %39
  %64 = load %struct.TT_SBit_MetricsRec_*, %struct.TT_SBit_MetricsRec_** %7, align 8
  br label %65

65:                                               ; preds = %63, %35
  %66 = phi %struct.TT_SBit_MetricsRec_* [ %8, %35 ], [ %64, %63 ]
  %67 = phi i32 [ 0, %35 ], [ %57, %63 ]
  %68 = shl i16 %10, 8
  %69 = ashr exact i16 %68, 8
  %70 = getelementptr inbounds %struct.TT_SBit_MetricsRec_, %struct.TT_SBit_MetricsRec_* %66, i64 0, i32 2
  store i16 %69, i16* %70, align 2
  %71 = shl i16 %12, 8
  %72 = ashr exact i16 %71, 8
  %73 = load %struct.TT_SBit_MetricsRec_*, %struct.TT_SBit_MetricsRec_** %7, align 8
  %74 = getelementptr inbounds %struct.TT_SBit_MetricsRec_, %struct.TT_SBit_MetricsRec_* %73, i64 0, i32 3
  store i16 %72, i16* %74, align 2
  %75 = and i16 %14, 255
  %76 = load %struct.TT_SBit_MetricsRec_*, %struct.TT_SBit_MetricsRec_** %7, align 8
  %77 = getelementptr inbounds %struct.TT_SBit_MetricsRec_, %struct.TT_SBit_MetricsRec_* %76, i64 0, i32 4
  store i16 %75, i16* %77, align 2
  %78 = shl i16 %16, 8
  %79 = ashr exact i16 %78, 8
  %80 = load %struct.TT_SBit_MetricsRec_*, %struct.TT_SBit_MetricsRec_** %7, align 8
  %81 = getelementptr inbounds %struct.TT_SBit_MetricsRec_, %struct.TT_SBit_MetricsRec_* %80, i64 0, i32 5
  store i16 %79, i16* %81, align 2
  %82 = shl i16 %18, 8
  %83 = ashr exact i16 %82, 8
  %84 = load %struct.TT_SBit_MetricsRec_*, %struct.TT_SBit_MetricsRec_** %7, align 8
  %85 = getelementptr inbounds %struct.TT_SBit_MetricsRec_, %struct.TT_SBit_MetricsRec_* %84, i64 0, i32 6
  store i16 %83, i16* %85, align 2
  %86 = and i16 %20, 255
  %87 = load %struct.TT_SBit_MetricsRec_*, %struct.TT_SBit_MetricsRec_** %7, align 8
  %88 = getelementptr inbounds %struct.TT_SBit_MetricsRec_, %struct.TT_SBit_MetricsRec_* %87, i64 0, i32 7
  store i16 %86, i16* %88, align 2
  %89 = getelementptr inbounds %struct.TT_SBitDecoderRec_, %struct.TT_SBitDecoderRec_* %0, i64 0, i32 2
  %90 = load %struct.FT_Bitmap_*, %struct.FT_Bitmap_** %89, align 8
  %91 = getelementptr inbounds %struct.FT_Bitmap_, %struct.FT_Bitmap_* %90, i64 0, i32 1
  %92 = load i32, i32* %91, align 4
  %93 = trunc i32 %92 to i16
  %94 = and i16 %93, 255
  %95 = load %struct.TT_SBit_MetricsRec_*, %struct.TT_SBit_MetricsRec_** %7, align 8
  %96 = getelementptr inbounds %struct.TT_SBit_MetricsRec_, %struct.TT_SBit_MetricsRec_* %95, i64 0, i32 1
  store i16 %94, i16* %96, align 2
  %97 = load %struct.FT_Bitmap_*, %struct.FT_Bitmap_** %89, align 8
  %98 = getelementptr inbounds %struct.FT_Bitmap_, %struct.FT_Bitmap_* %97, i64 0, i32 0
  %99 = load i32, i32* %98, align 8
  %100 = trunc i32 %99 to i16
  %101 = and i16 %100, 255
  %102 = load %struct.TT_SBit_MetricsRec_*, %struct.TT_SBit_MetricsRec_** %7, align 8
  %103 = getelementptr inbounds %struct.TT_SBit_MetricsRec_, %struct.TT_SBit_MetricsRec_* %102, i64 0, i32 0
  store i16 %101, i16* %103, align 2
  br label %104

104:                                              ; preds = %6, %23, %65
  %105 = phi i32 [ %67, %65 ], [ 3, %23 ], [ 3, %6 ]
  ret i32 %105
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @tt_sbit_decoder_load_png(%struct.TT_SBitDecoderRec_* nocapture readonly, i8*, i8*, i32, i32, i32) unnamed_addr #0 {
  %7 = ptrtoint i8* %2 to i64
  %8 = ptrtoint i8* %1 to i64
  %9 = sub i64 %7, %8
  %10 = icmp slt i64 %9, 4
  br i1 %10, label %49, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds i8, i8* %1, i64 4
  %13 = load i8, i8* %1, align 1
  %14 = zext i8 %13 to i32
  %15 = shl nuw i32 %14, 24
  %16 = getelementptr inbounds i8, i8* %1, i64 1
  %17 = load i8, i8* %16, align 1
  %18 = zext i8 %17 to i32
  %19 = shl nuw nsw i32 %18, 16
  %20 = or i32 %19, %15
  %21 = getelementptr inbounds i8, i8* %1, i64 2
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i32
  %24 = shl nuw nsw i32 %23, 8
  %25 = or i32 %20, %24
  %26 = getelementptr inbounds i8, i8* %1, i64 3
  %27 = load i8, i8* %26, align 1
  %28 = zext i8 %27 to i32
  %29 = or i32 %25, %28
  %30 = zext i32 %29 to i64
  %31 = ptrtoint i8* %12 to i64
  %32 = sub i64 %7, %31
  %33 = icmp ult i64 %32, %30
  br i1 %33, label %49, label %34

34:                                               ; preds = %11
  %35 = getelementptr inbounds %struct.TT_SBitDecoderRec_, %struct.TT_SBitDecoderRec_* %0, i64 0, i32 0
  %36 = load %struct.TT_FaceRec_*, %struct.TT_FaceRec_** %35, align 8
  %37 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %36, i64 0, i32 0, i32 21
  %38 = load %struct.FT_GlyphSlotRec_*, %struct.FT_GlyphSlotRec_** %37, align 8
  %39 = getelementptr inbounds %struct.TT_SBitDecoderRec_, %struct.TT_SBitDecoderRec_* %0, i64 0, i32 6
  %40 = load i8, i8* %39, align 2
  %41 = zext i8 %40 to i32
  %42 = getelementptr inbounds %struct.TT_SBitDecoderRec_, %struct.TT_SBitDecoderRec_* %0, i64 0, i32 3
  %43 = load %struct.TT_SBit_MetricsRec_*, %struct.TT_SBit_MetricsRec_** %42, align 8
  %44 = getelementptr inbounds %struct.TT_SBitDecoderRec_, %struct.TT_SBitDecoderRec_* %0, i64 0, i32 1
  %45 = load %struct.FT_StreamRec_*, %struct.FT_StreamRec_** %44, align 8
  %46 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %45, i64 0, i32 7
  %47 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %46, align 8
  %48 = tail call fastcc i32 @Load_SBit_Png(%struct.FT_GlyphSlotRec_* %38, i32 %3, i32 %4, i32 %41, %struct.TT_SBit_MetricsRec_* %43, %struct.FT_MemoryRec_* %47, i8* %12, i32 %29, i8 zeroext 0, i8 zeroext 0)
  br label %49

49:                                               ; preds = %11, %6, %34
  %50 = phi i32 [ %48, %34 ], [ 3, %6 ], [ 3, %11 ]
  ret i32 %50
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @Load_SBit_Png(%struct.FT_GlyphSlotRec_*, i32, i32, i32, %struct.TT_SBit_MetricsRec_* nocapture, %struct.FT_MemoryRec_*, i8*, i32, i8 zeroext, i8 zeroext) unnamed_addr #0 {
  %11 = alloca i32, align 4
  %12 = alloca %struct.FT_StreamRec_, align 8
  %13 = alloca %struct.png_struct_def*, align 8
  %14 = alloca %struct.png_info_def*, align 8
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i8**, align 8
  %21 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 10
  %22 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %22) #17
  store i32 0, i32* %11, align 4
  %23 = bitcast %struct.FT_StreamRec_* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %23) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 -86, i64 80, i1 false)
  %24 = bitcast %struct.png_struct_def** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #17
  store %struct.png_struct_def* inttoptr (i64 -6148914691236517206 to %struct.png_struct_def*), %struct.png_struct_def** %13, align 8
  %25 = bitcast %struct.png_info_def** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #17
  store %struct.png_info_def* inttoptr (i64 -6148914691236517206 to %struct.png_info_def*), %struct.png_info_def** %14, align 8
  %26 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %26) #17
  store i32 -1431655766, i32* %15, align 4
  %27 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %27) #17
  store i32 -1431655766, i32* %16, align 4
  %28 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %28) #17
  store i32 -1431655766, i32* %17, align 4
  %29 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %29) #17
  store i32 -1431655766, i32* %18, align 4
  %30 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %30) #17
  store i32 -1431655766, i32* %19, align 4
  %31 = bitcast i8*** %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31)
  store volatile i8** inttoptr (i64 -6148914691236517206 to i8**), i8*** %20, align 8
  store volatile i8** null, i8*** %20, align 8
  %32 = or i32 %2, %1
  %33 = icmp slt i32 %32, 0
  br i1 %33, label %34, label %35

34:                                               ; preds = %10
  store i32 6, i32* %11, align 4
  br label %259

35:                                               ; preds = %10
  %36 = icmp ne i8 %8, 0
  br i1 %36, label %60, label %37

37:                                               ; preds = %35
  %38 = getelementptr inbounds %struct.TT_SBit_MetricsRec_, %struct.TT_SBit_MetricsRec_* %4, i64 0, i32 1
  %39 = load i16, i16* %38, align 2
  %40 = zext i16 %39 to i32
  %41 = add i32 %40, %1
  %42 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 10, i32 1
  %43 = load i32, i32* %42, align 4
  %44 = icmp ugt i32 %41, %43
  br i1 %44, label %59, label %45

45:                                               ; preds = %37
  %46 = getelementptr inbounds %struct.TT_SBit_MetricsRec_, %struct.TT_SBit_MetricsRec_* %4, i64 0, i32 0
  %47 = load i16, i16* %46, align 2
  %48 = zext i16 %47 to i32
  %49 = add i32 %48, %2
  %50 = getelementptr inbounds %struct.FT_Bitmap_, %struct.FT_Bitmap_* %21, i64 0, i32 0
  %51 = load i32, i32* %50, align 8
  %52 = icmp ugt i32 %49, %51
  %53 = icmp ne i32 %3, 32
  %54 = or i1 %53, %52
  br i1 %54, label %59, label %55

55:                                               ; preds = %45
  %56 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 10, i32 5
  %57 = load i8, i8* %56, align 2
  %58 = icmp eq i8 %57, 7
  br i1 %58, label %60, label %59

59:                                               ; preds = %55, %45, %37
  store i32 6, i32* %11, align 4
  br label %259

60:                                               ; preds = %55, %35
  %61 = zext i32 %7 to i64
  call void @FT_Stream_OpenMemory(%struct.FT_StreamRec_* nonnull %12, i8* %6, i64 %61) #17
  %62 = call noalias %struct.png_struct_def* @cr_png_create_read_struct(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.5, i64 0, i64 0), i8* nonnull %22, void (%struct.png_struct_def*, i8*)* nonnull @error_callback, void (%struct.png_struct_def*, i8*)* nonnull @warning_callback) #17
  store %struct.png_struct_def* %62, %struct.png_struct_def** %13, align 8
  %63 = icmp eq %struct.png_struct_def* %62, null
  br i1 %63, label %64, label %65

64:                                               ; preds = %60
  store i32 64, i32* %11, align 4
  br label %259

65:                                               ; preds = %60
  %66 = call noalias %struct.png_info_def* @cr_png_create_info_struct(%struct.png_struct_def* nonnull %62) #17
  store %struct.png_info_def* %66, %struct.png_info_def** %14, align 8
  %67 = icmp eq %struct.png_info_def* %66, null
  br i1 %67, label %68, label %69

68:                                               ; preds = %65
  store i32 64, i32* %11, align 4
  call void @cr_png_destroy_read_struct(%struct.png_struct_def** nonnull %13, %struct.png_info_def** null, %struct.png_info_def** null) #17
  br label %259

69:                                               ; preds = %65
  %70 = load %struct.png_struct_def*, %struct.png_struct_def** %13, align 8
  %71 = call [1 x %struct.__jmp_buf_tag]* @cr_png_set_longjmp_fn(%struct.png_struct_def* %70, void (%struct.__jmp_buf_tag*, i32)* nonnull @longjmp, i64 200) #17
  %72 = getelementptr inbounds [1 x %struct.__jmp_buf_tag], [1 x %struct.__jmp_buf_tag]* %71, i64 0, i64 0
  %73 = call i32 @_setjmp(%struct.__jmp_buf_tag* %72) #18
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %76, label %75

75:                                               ; preds = %69
  store i32 3, i32* %11, align 4
  br label %256

76:                                               ; preds = %69
  %77 = load %struct.png_struct_def*, %struct.png_struct_def** %13, align 8
  call void @cr_png_set_read_fn(%struct.png_struct_def* %77, i8* nonnull %23, void (%struct.png_struct_def*, i8*, i64)* nonnull @read_data_from_FT_Stream) #17
  %78 = load %struct.png_struct_def*, %struct.png_struct_def** %13, align 8
  %79 = load %struct.png_info_def*, %struct.png_info_def** %14, align 8
  call void @cr_png_read_info(%struct.png_struct_def* %78, %struct.png_info_def* %79) #17
  %80 = load %struct.png_struct_def*, %struct.png_struct_def** %13, align 8
  %81 = load %struct.png_info_def*, %struct.png_info_def** %14, align 8
  %82 = call i32 @cr_png_get_IHDR(%struct.png_struct_def* %80, %struct.png_info_def* %81, i32* nonnull %15, i32* nonnull %16, i32* nonnull %17, i32* nonnull %18, i32* nonnull %19, i32* null, i32* null) #17
  %83 = load i32, i32* %11, align 4
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %256

85:                                               ; preds = %76
  br i1 %36, label %98, label %86

86:                                               ; preds = %85
  %87 = load i32, i32* %15, align 4
  %88 = getelementptr inbounds %struct.TT_SBit_MetricsRec_, %struct.TT_SBit_MetricsRec_* %4, i64 0, i32 1
  %89 = load i16, i16* %88, align 2
  %90 = zext i16 %89 to i32
  %91 = icmp eq i32 %87, %90
  br i1 %91, label %92, label %256

92:                                               ; preds = %86
  %93 = load i32, i32* %16, align 4
  %94 = getelementptr inbounds %struct.TT_SBit_MetricsRec_, %struct.TT_SBit_MetricsRec_* %4, i64 0, i32 0
  %95 = load i16, i16* %94, align 2
  %96 = zext i16 %95 to i32
  %97 = icmp eq i32 %93, %96
  br i1 %97, label %118, label %256

98:                                               ; preds = %85
  %99 = load i32, i32* %16, align 4
  %100 = load i32, i32* %15, align 4
  %101 = or i32 %100, %99
  %102 = icmp ugt i32 %101, 32767
  br i1 %102, label %103, label %104

103:                                              ; preds = %98
  store i32 10, i32* %11, align 4
  br label %256

104:                                              ; preds = %98
  %105 = trunc i32 %100 to i16
  %106 = getelementptr inbounds %struct.TT_SBit_MetricsRec_, %struct.TT_SBit_MetricsRec_* %4, i64 0, i32 1
  store i16 %105, i16* %106, align 2
  %107 = trunc i32 %99 to i16
  %108 = getelementptr inbounds %struct.TT_SBit_MetricsRec_, %struct.TT_SBit_MetricsRec_* %4, i64 0, i32 0
  store i16 %107, i16* %108, align 2
  %109 = and i32 %100, 65535
  %110 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 10, i32 1
  store i32 %109, i32* %110, align 4
  %111 = load i16, i16* %108, align 2
  %112 = zext i16 %111 to i32
  %113 = getelementptr inbounds %struct.FT_Bitmap_, %struct.FT_Bitmap_* %21, i64 0, i32 0
  store i32 %112, i32* %113, align 8
  %114 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 10, i32 5
  store i8 7, i8* %114, align 2
  %115 = shl nuw nsw i32 %109, 2
  %116 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 10, i32 2
  store i32 %115, i32* %116, align 8
  %117 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 10, i32 4
  store i16 256, i16* %117, align 8
  br label %118

118:                                              ; preds = %92, %104
  %119 = load i32, i32* %18, align 4
  %120 = icmp eq i32 %119, 3
  br i1 %120, label %121, label %124

121:                                              ; preds = %118
  %122 = load %struct.png_struct_def*, %struct.png_struct_def** %13, align 8
  call void @cr_png_set_palette_to_rgb(%struct.png_struct_def* %122) #17
  %123 = load i32, i32* %18, align 4
  br label %124

124:                                              ; preds = %121, %118
  %125 = phi i32 [ %123, %121 ], [ %119, %118 ]
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %127, label %129

127:                                              ; preds = %124
  %128 = load %struct.png_struct_def*, %struct.png_struct_def** %13, align 8
  call void @cr_png_set_expand_gray_1_2_4_to_8(%struct.png_struct_def* %128) #17
  br label %129

129:                                              ; preds = %127, %124
  %130 = load %struct.png_struct_def*, %struct.png_struct_def** %13, align 8
  %131 = load %struct.png_info_def*, %struct.png_info_def** %14, align 8
  %132 = call i32 @cr_png_get_valid(%struct.png_struct_def* %130, %struct.png_info_def* %131, i32 16) #17
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %136, label %134

134:                                              ; preds = %129
  %135 = load %struct.png_struct_def*, %struct.png_struct_def** %13, align 8
  call void @cr_png_set_tRNS_to_alpha(%struct.png_struct_def* %135) #17
  br label %136

136:                                              ; preds = %129, %134
  %137 = load i32, i32* %17, align 4
  %138 = icmp eq i32 %137, 16
  br i1 %138, label %139, label %142

139:                                              ; preds = %136
  %140 = load %struct.png_struct_def*, %struct.png_struct_def** %13, align 8
  call void @cr_png_set_strip_16(%struct.png_struct_def* %140) #17
  %141 = load i32, i32* %17, align 4
  br label %142

142:                                              ; preds = %139, %136
  %143 = phi i32 [ %141, %139 ], [ %137, %136 ]
  %144 = icmp slt i32 %143, 8
  br i1 %144, label %145, label %147

145:                                              ; preds = %142
  %146 = load %struct.png_struct_def*, %struct.png_struct_def** %13, align 8
  call void @cr_png_set_packing(%struct.png_struct_def* %146) #17
  br label %147

147:                                              ; preds = %145, %142
  %148 = load i32, i32* %18, align 4
  %149 = and i32 %148, -5
  %150 = icmp eq i32 %149, 0
  br i1 %150, label %151, label %153

151:                                              ; preds = %147
  %152 = load %struct.png_struct_def*, %struct.png_struct_def** %13, align 8
  call void @cr_png_set_gray_to_rgb(%struct.png_struct_def* %152) #17
  br label %153

153:                                              ; preds = %147, %151
  %154 = load i32, i32* %19, align 4
  %155 = icmp eq i32 %154, 0
  br i1 %155, label %159, label %156

156:                                              ; preds = %153
  %157 = load %struct.png_struct_def*, %struct.png_struct_def** %13, align 8
  %158 = call i32 @cr_png_set_interlace_handling(%struct.png_struct_def* %157) #17
  br label %159

159:                                              ; preds = %153, %156
  %160 = load %struct.png_struct_def*, %struct.png_struct_def** %13, align 8
  call void @cr_png_set_filler(%struct.png_struct_def* %160, i32 255, i32 1) #17
  %161 = load %struct.png_struct_def*, %struct.png_struct_def** %13, align 8
  %162 = load %struct.png_info_def*, %struct.png_info_def** %14, align 8
  call void @cr_png_read_update_info(%struct.png_struct_def* %161, %struct.png_info_def* %162) #17
  %163 = load %struct.png_struct_def*, %struct.png_struct_def** %13, align 8
  %164 = load %struct.png_info_def*, %struct.png_info_def** %14, align 8
  %165 = call i32 @cr_png_get_IHDR(%struct.png_struct_def* %163, %struct.png_info_def* %164, i32* nonnull %15, i32* nonnull %16, i32* nonnull %17, i32* nonnull %18, i32* nonnull %19, i32* null, i32* null) #17
  %166 = load i32, i32* %17, align 4
  %167 = icmp eq i32 %166, 8
  br i1 %167, label %168, label %173

168:                                              ; preds = %159
  %169 = load i32, i32* %18, align 4
  %170 = icmp eq i32 %169, 2
  %171 = or i32 %169, 4
  %172 = icmp eq i32 %171, 6
  br i1 %172, label %174, label %173

173:                                              ; preds = %159, %168
  store i32 3, i32* %11, align 4
  br label %256

174:                                              ; preds = %168
  %175 = icmp eq i8 %9, 0
  br i1 %175, label %176, label %256

176:                                              ; preds = %174
  %177 = load %struct.png_struct_def*, %struct.png_struct_def** %13, align 8
  %178 = select i1 %170, void (%struct.png_struct_def*, %struct.png_row_info_struct*, i8*)* @convert_bytes_to_data, void (%struct.png_struct_def*, %struct.png_row_info_struct*, i8*)* @premultiply_data
  call void @cr_png_set_read_user_transform_fn(%struct.png_struct_def* %177, void (%struct.png_struct_def*, %struct.png_row_info_struct*, i8*)* nonnull %178) #17
  br i1 %36, label %179, label %189

179:                                              ; preds = %176
  %180 = getelementptr inbounds %struct.FT_Bitmap_, %struct.FT_Bitmap_* %21, i64 0, i32 0
  %181 = load i32, i32* %180, align 8
  %182 = zext i32 %181 to i64
  %183 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 10, i32 2
  %184 = load i32, i32* %183, align 8
  %185 = sext i32 %184 to i64
  %186 = mul nsw i64 %185, %182
  %187 = call i32 @ft_glyphslot_alloc_bitmap(%struct.FT_GlyphSlotRec_* %0, i64 %186) #17
  store i32 %187, i32* %11, align 4
  %188 = icmp eq i32 %187, 0
  br i1 %188, label %189, label %256

189:                                              ; preds = %179, %176
  %190 = load i32, i32* %16, align 4
  %191 = zext i32 %190 to i64
  %192 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %5, i64 8, i64 0, i64 %191, i8* null, i32* nonnull %11) #17
  %193 = bitcast i8* %192 to i8**
  store volatile i8** %193, i8*** %20, align 8
  %194 = load i32, i32* %11, align 4
  %195 = icmp eq i32 %194, 0
  br i1 %195, label %196, label %209

196:                                              ; preds = %189
  %197 = load i32, i32* %16, align 4
  %198 = icmp sgt i32 %197, 0
  br i1 %198, label %199, label %251

199:                                              ; preds = %196
  %200 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 10, i32 3
  %201 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %0, i64 0, i32 10, i32 2
  %202 = shl nsw i32 %1, 2
  %203 = sext i32 %202 to i64
  %204 = sext i32 %197 to i64
  %205 = and i64 %204, 1
  %206 = icmp eq i32 %197, 1
  br i1 %206, label %237, label %207

207:                                              ; preds = %199
  %208 = sub nsw i64 %204, %205
  br label %210

209:                                              ; preds = %189
  store i32 64, i32* %11, align 4
  br label %256

210:                                              ; preds = %210, %207
  %211 = phi i64 [ 0, %207 ], [ %234, %210 ]
  %212 = phi i64 [ %208, %207 ], [ %235, %210 ]
  %213 = load i8*, i8** %200, align 8
  %214 = trunc i64 %211 to i32
  %215 = add nsw i32 %214, %2
  %216 = load i32, i32* %201, align 8
  %217 = mul nsw i32 %216, %215
  %218 = sext i32 %217 to i64
  %219 = getelementptr inbounds i8, i8* %213, i64 %203
  %220 = getelementptr inbounds i8, i8* %219, i64 %218
  %221 = load volatile i8**, i8*** %20, align 8
  %222 = getelementptr inbounds i8*, i8** %221, i64 %211
  store i8* %220, i8** %222, align 8
  %223 = or i64 %211, 1
  %224 = load i8*, i8** %200, align 8
  %225 = trunc i64 %223 to i32
  %226 = add nsw i32 %225, %2
  %227 = load i32, i32* %201, align 8
  %228 = mul nsw i32 %227, %226
  %229 = sext i32 %228 to i64
  %230 = getelementptr inbounds i8, i8* %224, i64 %203
  %231 = getelementptr inbounds i8, i8* %230, i64 %229
  %232 = load volatile i8**, i8*** %20, align 8
  %233 = getelementptr inbounds i8*, i8** %232, i64 %223
  store i8* %231, i8** %233, align 8
  %234 = add nuw nsw i64 %211, 2
  %235 = add i64 %212, -2
  %236 = icmp eq i64 %235, 0
  br i1 %236, label %237, label %210

237:                                              ; preds = %210, %199
  %238 = phi i64 [ 0, %199 ], [ %234, %210 ]
  %239 = icmp eq i64 %205, 0
  br i1 %239, label %251, label %240

240:                                              ; preds = %237
  %241 = load i8*, i8** %200, align 8
  %242 = trunc i64 %238 to i32
  %243 = add nsw i32 %242, %2
  %244 = load i32, i32* %201, align 8
  %245 = mul nsw i32 %244, %243
  %246 = sext i32 %245 to i64
  %247 = getelementptr inbounds i8, i8* %241, i64 %203
  %248 = getelementptr inbounds i8, i8* %247, i64 %246
  %249 = load volatile i8**, i8*** %20, align 8
  %250 = getelementptr inbounds i8*, i8** %249, i64 %238
  store i8* %248, i8** %250, align 8
  br label %251

251:                                              ; preds = %240, %237, %196
  %252 = load %struct.png_struct_def*, %struct.png_struct_def** %13, align 8
  %253 = load volatile i8**, i8*** %20, align 8
  call void @cr_png_read_image(%struct.png_struct_def* %252, i8** %253) #17
  %254 = load %struct.png_struct_def*, %struct.png_struct_def** %13, align 8
  %255 = load %struct.png_info_def*, %struct.png_info_def** %14, align 8
  call void @cr_png_read_end(%struct.png_struct_def* %254, %struct.png_info_def* %255) #17
  br label %256

256:                                              ; preds = %179, %174, %92, %86, %76, %75, %103, %173, %209, %251
  %257 = load volatile i8**, i8*** %20, align 8
  %258 = bitcast i8** %257 to i8*
  call void @ft_mem_free(%struct.FT_MemoryRec_* %5, i8* %258) #17
  store volatile i8** null, i8*** %20, align 8
  call void @cr_png_destroy_read_struct(%struct.png_struct_def** nonnull %13, %struct.png_info_def** nonnull %14, %struct.png_info_def** null) #17
  call void @FT_Stream_Close(%struct.FT_StreamRec_* nonnull %12) #17
  br label %259

259:                                              ; preds = %256, %68, %64, %59, %34
  %260 = load i32, i32* %11, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %30) #17
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %29) #17
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %28) #17
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %27) #17
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %26) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #17
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %23) #17
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %22) #17
  ret i32 %260
}

declare noalias %struct.png_struct_def* @cr_png_create_read_struct(i8*, i8*, void (%struct.png_struct_def*, i8*)*, void (%struct.png_struct_def*, i8*)*) local_unnamed_addr #6

; Function Attrs: noreturn nounwind ssp uwtable
define internal void @error_callback(%struct.png_struct_def*, i8* nocapture readnone) #9 {
  %3 = tail call i8* @cr_png_get_error_ptr(%struct.png_struct_def* %0) #17
  %4 = bitcast i8* %3 to i32*
  store i32 64, i32* %4, align 4
  %5 = tail call [1 x %struct.__jmp_buf_tag]* @cr_png_set_longjmp_fn(%struct.png_struct_def* %0, void (%struct.__jmp_buf_tag*, i32)* nonnull @longjmp, i64 200) #17
  %6 = getelementptr inbounds [1 x %struct.__jmp_buf_tag], [1 x %struct.__jmp_buf_tag]* %5, i64 0, i64 0
  tail call void @longjmp(%struct.__jmp_buf_tag* %6, i32 1) #19
  unreachable
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @warning_callback(%struct.png_struct_def* nocapture, i8* nocapture) #4 {
  ret void
}

declare noalias %struct.png_info_def* @cr_png_create_info_struct(%struct.png_struct_def*) local_unnamed_addr #6

declare void @cr_png_destroy_read_struct(%struct.png_struct_def**, %struct.png_info_def**, %struct.png_info_def**) local_unnamed_addr #6

declare [1 x %struct.__jmp_buf_tag]* @cr_png_set_longjmp_fn(%struct.png_struct_def*, void (%struct.__jmp_buf_tag*, i32)*, i64) local_unnamed_addr #6

; Function Attrs: noreturn nounwind
declare void @longjmp(%struct.__jmp_buf_tag*, i32) #10

declare void @cr_png_set_read_fn(%struct.png_struct_def*, i8*, void (%struct.png_struct_def*, i8*, i64)*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define internal void @read_data_from_FT_Stream(%struct.png_struct_def*, i8* nocapture, i64) #0 {
  %4 = tail call i8* @cr_png_get_io_ptr(%struct.png_struct_def* %0) #17
  %5 = bitcast i8* %4 to %struct.FT_StreamRec_*
  %6 = tail call i32 @FT_Stream_EnterFrame(%struct.FT_StreamRec_* %5, i64 %2) #17
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %3
  %9 = tail call i8* @cr_png_get_error_ptr(%struct.png_struct_def* %0) #17
  %10 = bitcast i8* %9 to i32*
  store i32 84, i32* %10, align 4
  tail call void @cr_png_error(%struct.png_struct_def* %0, i8* null) #19
  unreachable

11:                                               ; preds = %3
  %12 = getelementptr inbounds i8, i8* %4, i64 64
  %13 = bitcast i8* %12 to i8**
  %14 = load i8*, i8** %13, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %14, i64 %2, i1 false)
  tail call void @FT_Stream_ExitFrame(%struct.FT_StreamRec_* %5) #17
  ret void
}

declare void @cr_png_read_info(%struct.png_struct_def*, %struct.png_info_def*) local_unnamed_addr #6

declare i32 @cr_png_get_IHDR(%struct.png_struct_def*, %struct.png_info_def*, i32*, i32*, i32*, i32*, i32*, i32*, i32*) local_unnamed_addr #6

declare void @cr_png_set_palette_to_rgb(%struct.png_struct_def*) local_unnamed_addr #6

declare void @cr_png_set_expand_gray_1_2_4_to_8(%struct.png_struct_def*) local_unnamed_addr #6

declare i32 @cr_png_get_valid(%struct.png_struct_def*, %struct.png_info_def*, i32) local_unnamed_addr #6

declare void @cr_png_set_tRNS_to_alpha(%struct.png_struct_def*) local_unnamed_addr #6

declare void @cr_png_set_strip_16(%struct.png_struct_def*) local_unnamed_addr #6

declare void @cr_png_set_packing(%struct.png_struct_def*) local_unnamed_addr #6

declare void @cr_png_set_gray_to_rgb(%struct.png_struct_def*) local_unnamed_addr #6

declare i32 @cr_png_set_interlace_handling(%struct.png_struct_def*) local_unnamed_addr #6

declare void @cr_png_set_filler(%struct.png_struct_def*, i32, i32) local_unnamed_addr #6

declare void @cr_png_read_update_info(%struct.png_struct_def*, %struct.png_info_def*) local_unnamed_addr #6

declare void @cr_png_set_read_user_transform_fn(%struct.png_struct_def*, void (%struct.png_struct_def*, %struct.png_row_info_struct*, i8*)*) local_unnamed_addr #6

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @premultiply_data(%struct.png_struct_def* nocapture readnone, %struct.png_row_info_struct* nocapture readonly, i8* nocapture) #3 {
  %4 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %1, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp ugt i64 %5, 15
  br i1 %6, label %7, label %37

7:                                                ; preds = %3
  %8 = trunc i64 %5 to i32
  %9 = add i32 %8, -15
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %37, label %11

11:                                               ; preds = %7, %11
  %12 = phi i32 [ %33, %11 ], [ 0, %7 ]
  %13 = zext i32 %12 to i64
  %14 = getelementptr inbounds i8, i8* %2, i64 %13
  %15 = bitcast i8* %14 to <8 x i16>*
  %16 = load <8 x i16>, <8 x i16>* %15, align 1
  %17 = and <8 x i16> %16, <i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255, i16 255>
  %18 = lshr <8 x i16> %16, <i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8>
  %19 = shufflevector <8 x i16> %18, <8 x i16> undef, <8 x i32> <i32 1, i32 1, i32 3, i32 3, i32 5, i32 5, i32 7, i32 7>
  %20 = or <8 x i16> %18, <i16 0, i16 255, i16 0, i16 255, i16 0, i16 255, i16 0, i16 255>
  %21 = shufflevector <8 x i16> %17, <8 x i16> undef, <8 x i32> <i32 1, i32 0, i32 3, i32 2, i32 5, i32 4, i32 7, i32 6>
  %22 = mul <8 x i16> %21, %19
  %23 = mul <8 x i16> %20, %19
  %24 = add <8 x i16> %22, <i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128>
  %25 = add <8 x i16> %23, <i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128>
  %26 = lshr <8 x i16> %24, <i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8>
  %27 = add <8 x i16> %26, %24
  %28 = lshr <8 x i16> %27, <i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8>
  %29 = lshr <8 x i16> %25, <i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8>
  %30 = add <8 x i16> %29, %25
  %31 = and <8 x i16> %30, <i16 -256, i16 -256, i16 -256, i16 -256, i16 -256, i16 -256, i16 -256, i16 -256>
  %32 = or <8 x i16> %28, %31
  store <8 x i16> %32, <8 x i16>* %15, align 1
  %33 = add i32 %12, 16
  %34 = icmp ult i32 %33, %9
  br i1 %34, label %11, label %35

35:                                               ; preds = %11
  %36 = load i64, i64* %4, align 8
  br label %37

37:                                               ; preds = %35, %7, %3
  %38 = phi i64 [ %5, %3 ], [ %5, %7 ], [ %36, %35 ]
  %39 = phi i32 [ 0, %3 ], [ 0, %7 ], [ %33, %35 ]
  %40 = trunc i64 %38 to i32
  %41 = icmp ult i32 %39, %40
  br i1 %41, label %42, label %89

42:                                               ; preds = %37, %86
  %43 = phi i32 [ %87, %86 ], [ %39, %37 ]
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds i8, i8* %2, i64 %44
  %46 = getelementptr inbounds i8, i8* %45, i64 3
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i32
  %49 = icmp eq i8 %47, 0
  br i1 %49, label %50, label %53

50:                                               ; preds = %42
  store i8 0, i8* %46, align 1
  %51 = getelementptr inbounds i8, i8* %45, i64 2
  store i8 0, i8* %51, align 1
  %52 = getelementptr inbounds i8, i8* %45, i64 1
  store i8 0, i8* %52, align 1
  store i8 0, i8* %45, align 1
  br label %86

53:                                               ; preds = %42
  %54 = load i8, i8* %45, align 1
  %55 = zext i8 %54 to i32
  %56 = getelementptr inbounds i8, i8* %45, i64 1
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i32
  %59 = getelementptr inbounds i8, i8* %45, i64 2
  %60 = load i8, i8* %59, align 1
  %61 = zext i8 %60 to i32
  %62 = icmp eq i8 %47, -1
  br i1 %62, label %79, label %63

63:                                               ; preds = %53
  %64 = mul nuw nsw i32 %55, %48
  %65 = add nuw nsw i32 %64, 128
  %66 = lshr i32 %65, 8
  %67 = add nuw nsw i32 %66, %65
  %68 = lshr i32 %67, 8
  %69 = mul nuw nsw i32 %58, %48
  %70 = add nuw nsw i32 %69, 128
  %71 = lshr i32 %70, 8
  %72 = add nuw nsw i32 %71, %70
  %73 = lshr i32 %72, 8
  %74 = mul nuw nsw i32 %61, %48
  %75 = add nuw nsw i32 %74, 128
  %76 = lshr i32 %75, 8
  %77 = add nuw nsw i32 %76, %75
  %78 = lshr i32 %77, 8
  br label %79

79:                                               ; preds = %53, %63
  %80 = phi i32 [ %68, %63 ], [ %55, %53 ]
  %81 = phi i32 [ %73, %63 ], [ %58, %53 ]
  %82 = phi i32 [ %78, %63 ], [ %61, %53 ]
  %83 = trunc i32 %82 to i8
  store i8 %83, i8* %45, align 1
  %84 = trunc i32 %81 to i8
  store i8 %84, i8* %56, align 1
  %85 = trunc i32 %80 to i8
  store i8 %85, i8* %59, align 1
  br label %86

86:                                               ; preds = %79, %50
  %87 = add i32 %43, 4
  %88 = icmp ult i32 %87, %40
  br i1 %88, label %42, label %89

89:                                               ; preds = %86, %37
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @convert_bytes_to_data(%struct.png_struct_def* nocapture readnone, %struct.png_row_info_struct* nocapture readonly, i8* nocapture) #3 {
  %4 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %1, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %19, label %7

7:                                                ; preds = %3, %7
  %8 = phi i64 [ %16, %7 ], [ 0, %3 ]
  %9 = phi i32 [ %15, %7 ], [ 0, %3 ]
  %10 = getelementptr inbounds i8, i8* %2, i64 %8
  %11 = load i8, i8* %10, align 1
  %12 = getelementptr inbounds i8, i8* %10, i64 2
  %13 = load i8, i8* %12, align 1
  store i8 %13, i8* %10, align 1
  store i8 %11, i8* %12, align 1
  %14 = getelementptr inbounds i8, i8* %10, i64 3
  store i8 -1, i8* %14, align 1
  %15 = add i32 %9, 4
  %16 = zext i32 %15 to i64
  %17 = load i64, i64* %4, align 8
  %18 = icmp ugt i64 %17, %16
  br i1 %18, label %7, label %19

19:                                               ; preds = %7, %3
  ret void
}

declare hidden i32 @ft_glyphslot_alloc_bitmap(%struct.FT_GlyphSlotRec_*, i64) local_unnamed_addr #6

declare void @cr_png_read_image(%struct.png_struct_def*, i8**) local_unnamed_addr #6

declare void @cr_png_read_end(%struct.png_struct_def*, %struct.png_info_def*) local_unnamed_addr #6

declare i8* @cr_png_get_error_ptr(%struct.png_struct_def*) local_unnamed_addr #6

declare i8* @cr_png_get_io_ptr(%struct.png_struct_def*) local_unnamed_addr #6

; Function Attrs: noreturn
declare void @cr_png_error(%struct.png_struct_def*, i8*) local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @load_post_names(%struct.TT_FaceRec_*) unnamed_addr #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i64, align 8
  %5 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #17
  store i64 -6148914691236517206, i64* %4, align 8
  %6 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 0, i32 26
  %7 = load %struct.FT_StreamRec_*, %struct.FT_StreamRec_** %6, align 8
  %8 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 16
  %9 = bitcast {}** %8 to i32 (%struct.TT_FaceRec_*, i64, %struct.FT_StreamRec_*, i64*)**
  %10 = load i32 (%struct.TT_FaceRec_*, i64, %struct.FT_StreamRec_*, i64*)*, i32 (%struct.TT_FaceRec_*, i64, %struct.FT_StreamRec_*, i64*)** %9, align 8
  %11 = call i32 %10(%struct.TT_FaceRec_* %0, i64 1886352244, %struct.FT_StreamRec_* %7, i64* nonnull %4) #17
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %281

13:                                               ; preds = %1
  %14 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 13, i32 0
  %15 = load i64, i64* %14, align 8
  %16 = call i32 @FT_Stream_Skip(%struct.FT_StreamRec_* %7, i64 32) #17
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %281

18:                                               ; preds = %13
  %19 = icmp eq i64 %15, 131072
  %20 = load i64, i64* %4, align 8
  %21 = icmp ugt i64 %20, 33
  %22 = and i1 %19, %21
  br i1 %22, label %23, label %232

23:                                               ; preds = %18
  %24 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %7, i64 0, i32 7
  %25 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %24, align 8
  %26 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %26) #17
  store i32 -1431655766, i32* %3, align 4
  %27 = call zeroext i16 @FT_Stream_ReadUShort(%struct.FT_StreamRec_* %7, i32* nonnull %3) #17
  %28 = load i32, i32* %3, align 4
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %275

30:                                               ; preds = %23
  %31 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 7, i32 1
  %32 = load i16, i16* %31, align 8
  %33 = icmp ugt i16 %27, %32
  br i1 %33, label %39, label %34

34:                                               ; preds = %30
  %35 = zext i16 %27 to i64
  %36 = shl nuw nsw i64 %35, 1
  %37 = add i64 %20, -34
  %38 = icmp ult i64 %37, %36
  br i1 %38, label %39, label %40

39:                                               ; preds = %34, %30
  store i32 3, i32* %3, align 4
  br label %275

40:                                               ; preds = %34
  %41 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %25, i64 2, i64 0, i64 %35, i8* null, i32* nonnull %3) #17
  %42 = bitcast i8* %41 to i16*
  %43 = load i32, i32* %3, align 4
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %228

45:                                               ; preds = %40
  %46 = call i32 @FT_Stream_EnterFrame(%struct.FT_StreamRec_* %7, i64 %36) #17
  store i32 %46, i32* %3, align 4
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %228

48:                                               ; preds = %45
  %49 = icmp eq i16 %27, 0
  br i1 %49, label %50, label %51

50:                                               ; preds = %48
  call void @FT_Stream_ExitFrame(%struct.FT_StreamRec_* %7) #17
  br label %220

51:                                               ; preds = %48, %51
  %52 = phi i64 [ %55, %51 ], [ 0, %48 ]
  %53 = call zeroext i16 @FT_Stream_GetUShort(%struct.FT_StreamRec_* %7) #17
  %54 = getelementptr inbounds i16, i16* %42, i64 %52
  store i16 %53, i16* %54, align 2
  %55 = add nuw nsw i64 %52, 1
  %56 = icmp eq i64 %55, %35
  br i1 %56, label %57, label %51

57:                                               ; preds = %51
  call void @FT_Stream_ExitFrame(%struct.FT_StreamRec_* %7) #17
  %58 = and i64 %35, 1
  %59 = icmp eq i16 %27, 1
  br i1 %59, label %82, label %60

60:                                               ; preds = %57
  %61 = sub nsw i64 %35, %58
  br label %62

62:                                               ; preds = %290, %60
  %63 = phi i64 [ 0, %60 ], [ %292, %290 ]
  %64 = phi i16 [ 0, %60 ], [ %291, %290 ]
  %65 = phi i64 [ %61, %60 ], [ %293, %290 ]
  %66 = getelementptr inbounds i16, i16* %42, i64 %63
  %67 = load i16, i16* %66, align 2
  %68 = icmp ugt i16 %67, 257
  br i1 %68, label %69, label %76

69:                                               ; preds = %62
  %70 = zext i16 %67 to i32
  %71 = add nsw i32 %70, -257
  %72 = zext i16 %64 to i32
  %73 = icmp sgt i32 %71, %72
  %74 = trunc i32 %71 to i16
  %75 = select i1 %73, i16 %74, i16 %64
  br label %76

76:                                               ; preds = %69, %62
  %77 = phi i16 [ %64, %62 ], [ %75, %69 ]
  %78 = or i64 %63, 1
  %79 = getelementptr inbounds i16, i16* %42, i64 %78
  %80 = load i16, i16* %79, align 2
  %81 = icmp ugt i16 %80, 257
  br i1 %81, label %283, label %290

82:                                               ; preds = %290, %57
  %83 = phi i16 [ undef, %57 ], [ %291, %290 ]
  %84 = phi i64 [ 0, %57 ], [ %292, %290 ]
  %85 = phi i16 [ 0, %57 ], [ %291, %290 ]
  %86 = icmp eq i64 %58, 0
  br i1 %86, label %98, label %87

87:                                               ; preds = %82
  %88 = getelementptr inbounds i16, i16* %42, i64 %84
  %89 = load i16, i16* %88, align 2
  %90 = icmp ugt i16 %89, 257
  br i1 %90, label %91, label %98

91:                                               ; preds = %87
  %92 = zext i16 %89 to i32
  %93 = add nsw i32 %92, -257
  %94 = zext i16 %85 to i32
  %95 = icmp sgt i32 %93, %94
  %96 = trunc i32 %93 to i16
  %97 = select i1 %95, i16 %96, i16 %85
  br label %98

98:                                               ; preds = %91, %87, %82
  %99 = phi i16 [ %83, %82 ], [ %85, %87 ], [ %97, %91 ]
  %100 = icmp eq i16 %99, 0
  br i1 %100, label %220, label %101

101:                                              ; preds = %98
  %102 = sub i64 %37, %36
  %103 = add i64 %102, 1
  %104 = call i8* @ft_mem_qalloc(%struct.FT_MemoryRec_* %25, i64 %103, i32* nonnull %3) #17
  %105 = load i32, i32* %3, align 4
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %107, label %228

107:                                              ; preds = %101
  %108 = call i32 @FT_Stream_Read(%struct.FT_StreamRec_* %7, i8* %104, i64 %102) #17
  store i32 %108, i32* %3, align 4
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %110, label %228

110:                                              ; preds = %107
  %111 = zext i16 %99 to i64
  %112 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %25, i64 8, i64 0, i64 %111, i8* null, i32* nonnull %3) #17
  %113 = bitcast i8* %112 to i8**
  %114 = load i32, i32* %3, align 4
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %116, label %228

116:                                              ; preds = %110
  %117 = icmp eq i64 %102, 0
  br i1 %117, label %138, label %118

118:                                              ; preds = %116, %125
  %119 = phi i64 [ %131, %125 ], [ 0, %116 ]
  %120 = phi i64 [ %130, %125 ], [ 0, %116 ]
  %121 = getelementptr inbounds i8, i8* %104, i64 %120
  %122 = load i8, i8* %121, align 1
  %123 = icmp ugt i8 %122, 63
  br i1 %123, label %124, label %125

124:                                              ; preds = %118
  store i32 3, i32* %3, align 4
  br label %228

125:                                              ; preds = %118
  %126 = zext i8 %122 to i64
  store i8 0, i8* %121, align 1
  %127 = getelementptr inbounds i8, i8* %121, i64 1
  %128 = getelementptr inbounds i8*, i8** %113, i64 %119
  store i8* %127, i8** %128, align 8
  %129 = add nuw i64 %120, 1
  %130 = add i64 %129, %126
  %131 = add nuw nsw i64 %119, 1
  %132 = icmp ult i64 %130, %102
  %133 = icmp ult i64 %131, %111
  %134 = and i1 %133, %132
  br i1 %134, label %118, label %135

135:                                              ; preds = %125
  %136 = trunc i64 %131 to i16
  %137 = getelementptr inbounds i8, i8* %104, i64 %102
  store i8 0, i8* %137, align 1
  br i1 %133, label %144, label %220

138:                                              ; preds = %116
  store i8 0, i8* %104, align 1
  %139 = call i8* @ft_mem_qrealloc(%struct.FT_MemoryRec_* %25, i64 1, i64 1, i64 2, i8* %104, i32* nonnull %3) #17
  %140 = load i32, i32* %3, align 4
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %142, label %228

142:                                              ; preds = %138
  %143 = getelementptr inbounds i8, i8* %139, i64 1
  store i8 0, i8* %143, align 1
  br label %144

144:                                              ; preds = %142, %135
  %145 = phi i16 [ 0, %142 ], [ %136, %135 ]
  %146 = phi i64 [ 1, %142 ], [ %102, %135 ]
  %147 = phi i8* [ %139, %142 ], [ %104, %135 ]
  %148 = icmp ult i16 %145, %99
  br i1 %148, label %149, label %220

149:                                              ; preds = %144
  %150 = getelementptr inbounds i8, i8* %147, i64 %146
  %151 = zext i16 %145 to i64
  %152 = sub nsw i64 %111, %151
  %153 = icmp ult i64 %152, 4
  br i1 %153, label %213, label %154

154:                                              ; preds = %149
  %155 = and i64 %152, -4
  %156 = add nsw i64 %155, %151
  %157 = insertelement <2 x i8*> undef, i8* %150, i32 0
  %158 = shufflevector <2 x i8*> %157, <2 x i8*> undef, <2 x i32> zeroinitializer
  %159 = insertelement <2 x i8*> undef, i8* %150, i32 0
  %160 = shufflevector <2 x i8*> %159, <2 x i8*> undef, <2 x i32> zeroinitializer
  %161 = add nsw i64 %155, -4
  %162 = lshr exact i64 %161, 2
  %163 = add nuw nsw i64 %162, 1
  %164 = and i64 %163, 3
  %165 = icmp ult i64 %161, 12
  br i1 %165, label %197, label %166

166:                                              ; preds = %154
  %167 = sub nsw i64 %163, %164
  br label %168

168:                                              ; preds = %168, %166
  %169 = phi i64 [ 0, %166 ], [ %194, %168 ]
  %170 = phi i64 [ %167, %166 ], [ %195, %168 ]
  %171 = add i64 %169, %151
  %172 = getelementptr inbounds i8*, i8** %113, i64 %171
  %173 = bitcast i8** %172 to <2 x i8*>*
  store <2 x i8*> %158, <2 x i8*>* %173, align 8
  %174 = getelementptr inbounds i8*, i8** %172, i64 2
  %175 = bitcast i8** %174 to <2 x i8*>*
  store <2 x i8*> %160, <2 x i8*>* %175, align 8
  %176 = or i64 %169, 4
  %177 = add i64 %176, %151
  %178 = getelementptr inbounds i8*, i8** %113, i64 %177
  %179 = bitcast i8** %178 to <2 x i8*>*
  store <2 x i8*> %158, <2 x i8*>* %179, align 8
  %180 = getelementptr inbounds i8*, i8** %178, i64 2
  %181 = bitcast i8** %180 to <2 x i8*>*
  store <2 x i8*> %160, <2 x i8*>* %181, align 8
  %182 = or i64 %169, 8
  %183 = add i64 %182, %151
  %184 = getelementptr inbounds i8*, i8** %113, i64 %183
  %185 = bitcast i8** %184 to <2 x i8*>*
  store <2 x i8*> %158, <2 x i8*>* %185, align 8
  %186 = getelementptr inbounds i8*, i8** %184, i64 2
  %187 = bitcast i8** %186 to <2 x i8*>*
  store <2 x i8*> %160, <2 x i8*>* %187, align 8
  %188 = or i64 %169, 12
  %189 = add i64 %188, %151
  %190 = getelementptr inbounds i8*, i8** %113, i64 %189
  %191 = bitcast i8** %190 to <2 x i8*>*
  store <2 x i8*> %158, <2 x i8*>* %191, align 8
  %192 = getelementptr inbounds i8*, i8** %190, i64 2
  %193 = bitcast i8** %192 to <2 x i8*>*
  store <2 x i8*> %160, <2 x i8*>* %193, align 8
  %194 = add i64 %169, 16
  %195 = add i64 %170, -4
  %196 = icmp eq i64 %195, 0
  br i1 %196, label %197, label %168, !llvm.loop !59

197:                                              ; preds = %168, %154
  %198 = phi i64 [ 0, %154 ], [ %194, %168 ]
  %199 = icmp eq i64 %164, 0
  br i1 %199, label %211, label %200

200:                                              ; preds = %197, %200
  %201 = phi i64 [ %208, %200 ], [ %198, %197 ]
  %202 = phi i64 [ %209, %200 ], [ %164, %197 ]
  %203 = add i64 %201, %151
  %204 = getelementptr inbounds i8*, i8** %113, i64 %203
  %205 = bitcast i8** %204 to <2 x i8*>*
  store <2 x i8*> %158, <2 x i8*>* %205, align 8
  %206 = getelementptr inbounds i8*, i8** %204, i64 2
  %207 = bitcast i8** %206 to <2 x i8*>*
  store <2 x i8*> %160, <2 x i8*>* %207, align 8
  %208 = add i64 %201, 4
  %209 = add i64 %202, -1
  %210 = icmp eq i64 %209, 0
  br i1 %210, label %211, label %200, !llvm.loop !60

211:                                              ; preds = %200, %197
  %212 = icmp eq i64 %152, %155
  br i1 %212, label %220, label %213

213:                                              ; preds = %211, %149
  %214 = phi i64 [ %151, %149 ], [ %156, %211 ]
  br label %215

215:                                              ; preds = %213, %215
  %216 = phi i64 [ %218, %215 ], [ %214, %213 ]
  %217 = getelementptr inbounds i8*, i8** %113, i64 %216
  store i8* %150, i8** %217, align 8
  %218 = add nuw nsw i64 %216, 1
  %219 = icmp eq i64 %218, %111
  br i1 %219, label %220, label %215, !llvm.loop !61

220:                                              ; preds = %215, %211, %144, %135, %98, %50
  %221 = phi i16 [ 0, %98 ], [ %99, %135 ], [ %99, %144 ], [ 0, %50 ], [ %99, %211 ], [ %99, %215 ]
  %222 = phi i8** [ null, %98 ], [ %113, %135 ], [ %113, %144 ], [ null, %50 ], [ %113, %211 ], [ %113, %215 ]
  %223 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 31, i32 1, i32 0, i32 0
  store i16 %27, i16* %223, align 8
  %224 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 31, i32 1, i32 0, i32 1
  store i16 %221, i16* %224, align 2
  %225 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 31, i32 1, i32 0, i32 2
  %226 = bitcast i16** %225 to i8**
  store i8* %41, i8** %226, align 8
  %227 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 31, i32 1, i32 0, i32 3
  store i8** %222, i8*** %227, align 8
  br label %275

228:                                              ; preds = %138, %124, %110, %107, %101, %45, %40
  %229 = phi i8* [ null, %45 ], [ null, %40 ], [ %112, %138 ], [ %112, %110 ], [ null, %107 ], [ null, %101 ], [ %112, %124 ]
  %230 = phi i8* [ null, %45 ], [ null, %40 ], [ %139, %138 ], [ %104, %110 ], [ %104, %107 ], [ %104, %101 ], [ %104, %124 ]
  call void @ft_mem_free(%struct.FT_MemoryRec_* %25, i8* %229) #17
  call void @ft_mem_free(%struct.FT_MemoryRec_* %25, i8* %230) #17
  call void @ft_mem_free(%struct.FT_MemoryRec_* %25, i8* %41) #17
  %231 = load i32, i32* %3, align 4
  br label %275

232:                                              ; preds = %18
  %233 = icmp eq i64 %15, 151552
  %234 = and i1 %233, %21
  br i1 %234, label %235, label %278

235:                                              ; preds = %232
  %236 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %7, i64 0, i32 7
  %237 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %236, align 8
  %238 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %238) #17
  store i32 -1431655766, i32* %2, align 4
  %239 = call zeroext i16 @FT_Stream_ReadUShort(%struct.FT_StreamRec_* %7, i32* nonnull %2) #17
  %240 = load i32, i32* %2, align 4
  %241 = icmp eq i32 %240, 0
  br i1 %241, label %242, label %275

242:                                              ; preds = %235
  %243 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 7, i32 1
  %244 = load i16, i16* %243, align 8
  %245 = icmp ugt i16 %239, 258
  %246 = add i16 %239, -1
  %247 = icmp uge i16 %246, %244
  %248 = or i1 %245, %247
  br i1 %248, label %249, label %250

249:                                              ; preds = %242
  store i32 3, i32* %2, align 4
  br label %275

250:                                              ; preds = %242
  %251 = zext i16 %239 to i64
  %252 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %237, i64 1, i64 0, i64 %251, i8* null, i32* nonnull %2) #17
  %253 = load i32, i32* %2, align 4
  %254 = icmp eq i32 %253, 0
  br i1 %254, label %255, label %273

255:                                              ; preds = %250
  %256 = call i32 @FT_Stream_Read(%struct.FT_StreamRec_* %7, i8* %252, i64 %251) #17
  store i32 %256, i32* %2, align 4
  %257 = icmp eq i32 %256, 0
  br i1 %257, label %260, label %273

258:                                              ; preds = %260
  %259 = icmp eq i64 %267, %251
  br i1 %259, label %269, label %260

260:                                              ; preds = %255, %258
  %261 = phi i64 [ %267, %258 ], [ 0, %255 ]
  %262 = getelementptr inbounds i8, i8* %252, i64 %261
  %263 = load i8, i8* %262, align 1
  %264 = sext i8 %263 to i64
  %265 = add nsw i64 %261, %264
  %266 = icmp ugt i64 %265, %251
  %267 = add nuw nsw i64 %261, 1
  br i1 %266, label %268, label %258

268:                                              ; preds = %260
  store i32 3, i32* %2, align 4
  br label %273

269:                                              ; preds = %258
  %270 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 31, i32 1, i32 0, i32 0
  store i16 %239, i16* %270, align 8
  %271 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 31, i32 1, i32 0, i32 2
  %272 = bitcast i16** %271 to i8**
  store i8* %252, i8** %272, align 8
  br label %275

273:                                              ; preds = %268, %255, %250
  call void @ft_mem_free(%struct.FT_MemoryRec_* %237, i8* %252) #17
  %274 = load i32, i32* %2, align 4
  br label %275

275:                                              ; preds = %273, %269, %249, %235, %228, %220, %39, %23
  %276 = phi i8* [ %26, %23 ], [ %26, %39 ], [ %26, %220 ], [ %26, %228 ], [ %238, %235 ], [ %238, %249 ], [ %238, %269 ], [ %238, %273 ]
  %277 = phi i32 [ %28, %23 ], [ 3, %39 ], [ 0, %220 ], [ %231, %228 ], [ %240, %235 ], [ 3, %249 ], [ 0, %269 ], [ %274, %273 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %276) #17
  br label %278

278:                                              ; preds = %275, %232
  %279 = phi i32 [ 3, %232 ], [ %277, %275 ]
  %280 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 31, i32 0
  store i8 1, i8* %280, align 8
  br label %281

281:                                              ; preds = %13, %1, %278
  %282 = phi i32 [ %11, %1 ], [ %16, %13 ], [ %279, %278 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #17
  ret i32 %282

283:                                              ; preds = %76
  %284 = zext i16 %80 to i32
  %285 = add nsw i32 %284, -257
  %286 = zext i16 %77 to i32
  %287 = icmp sgt i32 %285, %286
  %288 = trunc i32 %285 to i16
  %289 = select i1 %287, i16 %288, i16 %77
  br label %290

290:                                              ; preds = %283, %76
  %291 = phi i16 [ %77, %76 ], [ %289, %283 ]
  %292 = add nuw nsw i64 %63, 2
  %293 = add i64 %65, -2
  %294 = icmp eq i64 %293, 0
  br i1 %294, label %82, label %62
}

declare hidden i8* @ft_mem_qrealloc(%struct.FT_MemoryRec_*, i64, i64, i64, i8*, i32*) local_unnamed_addr #6

declare hidden i32 @FT_Match_Size(%struct.FT_FaceRec_*, %struct.FT_Size_RequestRec_*, i8 zeroext, i64*) local_unnamed_addr #6

declare i64 @FT_MulDiv(i64, i64, i64) local_unnamed_addr #6

declare void @FT_Matrix_Multiply(%struct.FT_Matrix_*, %struct.FT_Matrix_*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define internal i8* @tt_name_ascii_from_utf16(%struct.TT_NameRec_* nocapture readonly, %struct.FT_MemoryRec_*) unnamed_addr #0 {
  %3 = alloca i32, align 4
  %4 = getelementptr inbounds %struct.TT_NameRec_, %struct.TT_NameRec_* %0, i64 0, i32 6
  %5 = load i8*, i8** %4, align 8
  %6 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #17
  store i32 -1431655766, i32* %3, align 4
  %7 = getelementptr inbounds %struct.TT_NameRec_, %struct.TT_NameRec_* %0, i64 0, i32 4
  %8 = load i16, i16* %7, align 8
  %9 = lshr i16 %8, 1
  %10 = add nuw i16 %9, 1
  %11 = zext i16 %10 to i64
  %12 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %1, i64 1, i64 0, i64 %11, i8* null, i32* nonnull %3) #17
  %13 = load i32, i32* %3, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %46

15:                                               ; preds = %2
  %16 = icmp eq i16 %9, 0
  br i1 %16, label %42, label %17

17:                                               ; preds = %15
  %18 = zext i16 %9 to i64
  br label %19

19:                                               ; preds = %31, %17
  %20 = phi i64 [ 0, %17 ], [ %37, %31 ]
  %21 = phi i8* [ %5, %17 ], [ %32, %31 ]
  %22 = phi i32 [ 0, %17 ], [ %38, %31 ]
  %23 = load i8, i8* %21, align 1
  %24 = zext i8 %23 to i32
  %25 = shl nuw nsw i32 %24, 8
  %26 = getelementptr inbounds i8, i8* %21, i64 1
  %27 = load i8, i8* %26, align 1
  %28 = zext i8 %27 to i32
  %29 = or i32 %25, %28
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %40, label %31

31:                                               ; preds = %19
  %32 = getelementptr inbounds i8, i8* %21, i64 2
  %33 = add nsw i32 %29, -32
  %34 = icmp ugt i32 %33, 95
  %35 = select i1 %34, i8 63, i8 %27
  %36 = getelementptr inbounds i8, i8* %12, i64 %20
  store i8 %35, i8* %36, align 1
  %37 = add nuw nsw i64 %20, 1
  %38 = add nuw nsw i32 %22, 1
  %39 = icmp eq i64 %37, %18
  br i1 %39, label %42, label %19

40:                                               ; preds = %19
  %41 = trunc i64 %20 to i32
  br label %42

42:                                               ; preds = %31, %40, %15
  %43 = phi i32 [ 0, %15 ], [ %41, %40 ], [ %38, %31 ]
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds i8, i8* %12, i64 %44
  store i8 0, i8* %45, align 1
  br label %46

46:                                               ; preds = %2, %42
  %47 = phi i8* [ %12, %42 ], [ null, %2 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #17
  ret i8* %47
}

; Function Attrs: nounwind ssp uwtable
define internal i8* @tt_name_ascii_from_other(%struct.TT_NameRec_* nocapture readonly, %struct.FT_MemoryRec_*) unnamed_addr #0 {
  %3 = alloca i32, align 4
  %4 = getelementptr inbounds %struct.TT_NameRec_, %struct.TT_NameRec_* %0, i64 0, i32 6
  %5 = load i8*, i8** %4, align 8
  %6 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #17
  store i32 -1431655766, i32* %3, align 4
  %7 = getelementptr inbounds %struct.TT_NameRec_, %struct.TT_NameRec_* %0, i64 0, i32 4
  %8 = load i16, i16* %7, align 8
  %9 = zext i16 %8 to i64
  %10 = add nuw nsw i64 %9, 1
  %11 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %1, i64 1, i64 0, i64 %10, i8* null, i32* nonnull %3) #17
  %12 = load i32, i32* %3, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %40

14:                                               ; preds = %2
  %15 = icmp eq i16 %8, 0
  br i1 %15, label %36, label %16

16:                                               ; preds = %14
  %17 = zext i16 %8 to i64
  br label %18

18:                                               ; preds = %24, %16
  %19 = phi i64 [ 0, %16 ], [ %31, %24 ]
  %20 = phi i8* [ %5, %16 ], [ %25, %24 ]
  %21 = phi i32 [ 0, %16 ], [ %32, %24 ]
  %22 = load i8, i8* %20, align 1
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %34, label %24

24:                                               ; preds = %18
  %25 = getelementptr inbounds i8, i8* %20, i64 1
  %26 = icmp ult i8 %22, 32
  %27 = icmp slt i8 %22, 0
  %28 = or i1 %26, %27
  %29 = select i1 %28, i8 63, i8 %22
  %30 = getelementptr inbounds i8, i8* %11, i64 %19
  store i8 %29, i8* %30, align 1
  %31 = add nuw nsw i64 %19, 1
  %32 = add nuw nsw i32 %21, 1
  %33 = icmp eq i64 %31, %17
  br i1 %33, label %36, label %18

34:                                               ; preds = %18
  %35 = trunc i64 %19 to i32
  br label %36

36:                                               ; preds = %24, %34, %14
  %37 = phi i32 [ 0, %14 ], [ %35, %34 ], [ %32, %24 ]
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds i8, i8* %11, i64 %38
  store i8 0, i8* %39, align 1
  br label %40

40:                                               ; preds = %2, %36
  %41 = phi i8* [ %11, %36 ], [ null, %2 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #17
  ret i8* %41
}

declare hidden i8* @ft_service_list_lookup(%struct.FT_ServiceDescRec_*, i8*) local_unnamed_addr #6

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal i8* @get_sfnt_table(%struct.TT_FaceRec_* readonly, i32) #2 {
  switch i32 %1, label %36 [
    i32 0, label %3
    i32 3, label %6
    i32 4, label %9
    i32 2, label %16
    i32 5, label %23
    i32 1, label %26
    i32 6, label %29
  ]

3:                                                ; preds = %2
  %4 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 5
  %5 = bitcast %struct.TT_Header_* %4 to i8*
  br label %36

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 6
  %8 = bitcast %struct.TT_HoriHeader_* %7 to i8*
  br label %36

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 8
  %11 = load i8, i8* %10, align 8
  %12 = icmp eq i8 %11, 0
  %13 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 9
  %14 = bitcast %struct.TT_VertHeader_* %13 to i8*
  %15 = select i1 %12, i8* null, i8* %14
  br label %36

16:                                               ; preds = %2
  %17 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 12
  %18 = getelementptr inbounds %struct.TT_OS2_, %struct.TT_OS2_* %17, i64 0, i32 0
  %19 = load i16, i16* %18, align 8
  %20 = icmp eq i16 %19, -1
  %21 = bitcast %struct.TT_OS2_* %17 to i8*
  %22 = select i1 %20, i8* null, i8* %21
  br label %36

23:                                               ; preds = %2
  %24 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 13
  %25 = bitcast %struct.TT_Postscript_* %24 to i8*
  br label %36

26:                                               ; preds = %2
  %27 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 7
  %28 = bitcast %struct.TT_MaxProfile_* %27 to i8*
  br label %36

29:                                               ; preds = %2
  %30 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 28
  %31 = getelementptr inbounds %struct.TT_PCLT_, %struct.TT_PCLT_* %30, i64 0, i32 0
  %32 = load i64, i64* %31, align 8
  %33 = icmp eq i64 %32, 0
  %34 = bitcast %struct.TT_PCLT_* %30 to i8*
  %35 = select i1 %33, i8* null, i8* %34
  br label %36

36:                                               ; preds = %2, %29, %26, %23, %16, %9, %6, %3
  %37 = phi i8* [ %35, %29 ], [ %28, %26 ], [ %25, %23 ], [ %22, %16 ], [ %15, %9 ], [ %8, %6 ], [ %5, %3 ], [ null, %2 ]
  ret i8* %37
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal i32 @sfnt_table_info(%struct.TT_FaceRec_* nocapture readonly, i32, i64*, i64*, i64*) #3 {
  %6 = icmp ne i64* %3, null
  %7 = icmp ne i64* %4, null
  %8 = and i1 %6, %7
  br i1 %8, label %9, label %32

9:                                                ; preds = %5
  %10 = icmp eq i64* %2, null
  %11 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 3
  %12 = load i16, i16* %11, align 8
  br i1 %10, label %13, label %15

13:                                               ; preds = %9
  %14 = zext i16 %12 to i64
  br label %30

15:                                               ; preds = %9
  %16 = zext i16 %12 to i32
  %17 = icmp ugt i32 %16, %1
  br i1 %17, label %18, label %32

18:                                               ; preds = %15
  %19 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 4
  %20 = load %struct.TT_TableRec_*, %struct.TT_TableRec_** %19, align 8
  %21 = zext i32 %1 to i64
  %22 = getelementptr inbounds %struct.TT_TableRec_, %struct.TT_TableRec_* %20, i64 %21, i32 0
  %23 = load i64, i64* %22, align 8
  store i64 %23, i64* %2, align 8
  %24 = load %struct.TT_TableRec_*, %struct.TT_TableRec_** %19, align 8
  %25 = getelementptr inbounds %struct.TT_TableRec_, %struct.TT_TableRec_* %24, i64 %21, i32 2
  %26 = load i64, i64* %25, align 8
  store i64 %26, i64* %3, align 8
  %27 = load %struct.TT_TableRec_*, %struct.TT_TableRec_** %19, align 8
  %28 = getelementptr inbounds %struct.TT_TableRec_, %struct.TT_TableRec_* %27, i64 %21, i32 3
  %29 = load i64, i64* %28, align 8
  br label %30

30:                                               ; preds = %18, %13
  %31 = phi i64 [ %14, %13 ], [ %29, %18 ]
  store i64 %31, i64* %4, align 8
  br label %32

32:                                               ; preds = %15, %5, %30
  %33 = phi i32 [ 0, %30 ], [ 6, %5 ], [ 142, %15 ]
  ret i32 %33
}

; Function Attrs: nounwind ssp uwtable
define internal i8* @sfnt_get_ps_name(%struct.TT_FaceRec_*) #0 {
  %2 = alloca [5 x i8], align 1
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i64*, align 8
  %6 = alloca %struct.FT_MM_Var_*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 45
  %10 = load i8*, i8** %9, align 8
  %11 = icmp eq i8* %10, null
  br i1 %11, label %12, label %1207

12:                                               ; preds = %1
  %13 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 50
  %14 = load %struct.GX_BlendRec_*, %struct.GX_BlendRec_** %13, align 8
  %15 = icmp eq %struct.GX_BlendRec_* %14, null
  br i1 %15, label %1121, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = and i64 %18, 2147418112
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %21, label %26

21:                                               ; preds = %16
  %22 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 0, i32 2
  %23 = load i64, i64* %22, align 8
  %24 = trunc i64 %23 to i16
  %25 = icmp slt i16 %24, 0
  br i1 %25, label %26, label %1121

26:                                               ; preds = %16, %21
  %27 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %27) #17
  store i32 -1431655766, i32* %3, align 4
  %28 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 0, i32 25
  %29 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %28, align 8
  %30 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 24
  %31 = bitcast i8** %30 to %struct.FT_Service_MultiMastersRec_**
  %32 = load %struct.FT_Service_MultiMastersRec_*, %struct.FT_Service_MultiMastersRec_** %31, align 8
  %33 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %33) #17
  store i32 -1431655766, i32* %4, align 4
  %34 = bitcast i64** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #17
  store i64* inttoptr (i64 -6148914691236517206 to i64*), i64** %5, align 8
  %35 = bitcast %struct.FT_MM_Var_** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #17
  store %struct.FT_MM_Var_* inttoptr (i64 -6148914691236517206 to %struct.FT_MM_Var_*), %struct.FT_MM_Var_** %6, align 8
  %36 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 52
  %37 = load i8*, i8** %36, align 8
  %38 = icmp eq i8* %37, null
  br i1 %38, label %39, label %226

39:                                               ; preds = %26
  %40 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 10
  %41 = load i16, i16* %40, align 8
  %42 = icmp eq i16 %41, 0
  br i1 %42, label %1119, label %43

43:                                               ; preds = %39
  %44 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 11, i32 3
  %45 = load %struct.TT_NameRec_*, %struct.TT_NameRec_** %44, align 8
  %46 = zext i16 %41 to i64
  br label %47

47:                                               ; preds = %85, %43
  %48 = phi i32 [ -1, %43 ], [ %86, %85 ]
  %49 = phi i32 [ -1, %43 ], [ %87, %85 ]
  %50 = phi i64 [ 0, %43 ], [ %88, %85 ]
  %51 = getelementptr inbounds %struct.TT_NameRec_, %struct.TT_NameRec_* %45, i64 %50, i32 3
  %52 = load i16, i16* %51, align 2
  %53 = icmp eq i16 %52, 25
  br i1 %53, label %54, label %85

54:                                               ; preds = %47
  %55 = getelementptr inbounds %struct.TT_NameRec_, %struct.TT_NameRec_* %45, i64 %50, i32 4
  %56 = load i16, i16* %55, align 8
  %57 = icmp eq i16 %56, 0
  br i1 %57, label %85, label %58

58:                                               ; preds = %54
  %59 = getelementptr inbounds %struct.TT_NameRec_, %struct.TT_NameRec_* %45, i64 %50, i32 0
  %60 = load i16, i16* %59, align 8
  switch i16 %60, label %85 [
    i16 3, label %61
    i16 1, label %73
  ]

61:                                               ; preds = %58
  %62 = getelementptr inbounds %struct.TT_NameRec_, %struct.TT_NameRec_* %45, i64 %50, i32 1
  %63 = load i16, i16* %62, align 2
  %64 = icmp ult i16 %63, 2
  br i1 %64, label %65, label %85

65:                                               ; preds = %61
  %66 = getelementptr inbounds %struct.TT_NameRec_, %struct.TT_NameRec_* %45, i64 %50, i32 2
  %67 = load i16, i16* %66, align 4
  %68 = icmp eq i16 %67, 1033
  %69 = icmp eq i32 %48, -1
  %70 = or i1 %69, %68
  %71 = trunc i64 %50 to i32
  %72 = select i1 %70, i32 %71, i32 %48
  br label %85

73:                                               ; preds = %58
  %74 = getelementptr inbounds %struct.TT_NameRec_, %struct.TT_NameRec_* %45, i64 %50, i32 1
  %75 = load i16, i16* %74, align 2
  %76 = icmp eq i16 %75, 0
  br i1 %76, label %77, label %85

77:                                               ; preds = %73
  %78 = getelementptr inbounds %struct.TT_NameRec_, %struct.TT_NameRec_* %45, i64 %50, i32 2
  %79 = load i16, i16* %78, align 4
  %80 = icmp eq i16 %79, 0
  %81 = icmp eq i32 %49, -1
  %82 = or i1 %81, %80
  %83 = trunc i64 %50 to i32
  %84 = select i1 %82, i32 %83, i32 %49
  br label %85

85:                                               ; preds = %77, %73, %65, %61, %58, %54, %47
  %86 = phi i32 [ %48, %54 ], [ %48, %73 ], [ %48, %61 ], [ %48, %47 ], [ %48, %58 ], [ %72, %65 ], [ %48, %77 ]
  %87 = phi i32 [ %49, %54 ], [ %49, %73 ], [ %49, %61 ], [ %49, %47 ], [ %49, %58 ], [ %49, %65 ], [ %84, %77 ]
  %88 = add nuw nsw i64 %50, 1
  %89 = icmp eq i64 %88, %46
  br i1 %89, label %90, label %47

90:                                               ; preds = %85
  %91 = icmp sgt i32 %86, -1
  br i1 %91, label %192, label %92

92:                                               ; preds = %90
  %93 = icmp slt i32 %87, 0
  br i1 %93, label %94, label %188

94:                                               ; preds = %92, %132
  %95 = phi i32 [ %133, %132 ], [ -1, %92 ]
  %96 = phi i32 [ %134, %132 ], [ -1, %92 ]
  %97 = phi i64 [ %135, %132 ], [ 0, %92 ]
  %98 = getelementptr inbounds %struct.TT_NameRec_, %struct.TT_NameRec_* %45, i64 %97, i32 3
  %99 = load i16, i16* %98, align 2
  %100 = icmp eq i16 %99, 16
  br i1 %100, label %101, label %132

101:                                              ; preds = %94
  %102 = getelementptr inbounds %struct.TT_NameRec_, %struct.TT_NameRec_* %45, i64 %97, i32 4
  %103 = load i16, i16* %102, align 8
  %104 = icmp eq i16 %103, 0
  br i1 %104, label %132, label %105

105:                                              ; preds = %101
  %106 = getelementptr inbounds %struct.TT_NameRec_, %struct.TT_NameRec_* %45, i64 %97, i32 0
  %107 = load i16, i16* %106, align 8
  switch i16 %107, label %132 [
    i16 3, label %108
    i16 1, label %120
  ]

108:                                              ; preds = %105
  %109 = getelementptr inbounds %struct.TT_NameRec_, %struct.TT_NameRec_* %45, i64 %97, i32 1
  %110 = load i16, i16* %109, align 2
  %111 = icmp ult i16 %110, 2
  br i1 %111, label %112, label %132

112:                                              ; preds = %108
  %113 = getelementptr inbounds %struct.TT_NameRec_, %struct.TT_NameRec_* %45, i64 %97, i32 2
  %114 = load i16, i16* %113, align 4
  %115 = icmp eq i16 %114, 1033
  %116 = icmp eq i32 %95, -1
  %117 = or i1 %116, %115
  %118 = trunc i64 %97 to i32
  %119 = select i1 %117, i32 %118, i32 %95
  br label %132

120:                                              ; preds = %105
  %121 = getelementptr inbounds %struct.TT_NameRec_, %struct.TT_NameRec_* %45, i64 %97, i32 1
  %122 = load i16, i16* %121, align 2
  %123 = icmp eq i16 %122, 0
  br i1 %123, label %124, label %132

124:                                              ; preds = %120
  %125 = getelementptr inbounds %struct.TT_NameRec_, %struct.TT_NameRec_* %45, i64 %97, i32 2
  %126 = load i16, i16* %125, align 4
  %127 = icmp eq i16 %126, 0
  %128 = icmp eq i32 %96, -1
  %129 = or i1 %128, %127
  %130 = trunc i64 %97 to i32
  %131 = select i1 %129, i32 %130, i32 %96
  br label %132

132:                                              ; preds = %124, %120, %112, %108, %105, %101, %94
  %133 = phi i32 [ %95, %101 ], [ %95, %120 ], [ %95, %108 ], [ %95, %94 ], [ %95, %105 ], [ %119, %112 ], [ %95, %124 ]
  %134 = phi i32 [ %96, %101 ], [ %96, %120 ], [ %96, %108 ], [ %96, %94 ], [ %96, %105 ], [ %96, %112 ], [ %131, %124 ]
  %135 = add nuw nsw i64 %97, 1
  %136 = icmp eq i64 %135, %46
  br i1 %136, label %137, label %94

137:                                              ; preds = %132
  %138 = icmp sgt i32 %133, -1
  br i1 %138, label %192, label %139

139:                                              ; preds = %137
  %140 = icmp slt i32 %134, 0
  br i1 %140, label %141, label %188

141:                                              ; preds = %139, %179
  %142 = phi i32 [ %180, %179 ], [ -1, %139 ]
  %143 = phi i32 [ %181, %179 ], [ -1, %139 ]
  %144 = phi i64 [ %182, %179 ], [ 0, %139 ]
  %145 = getelementptr inbounds %struct.TT_NameRec_, %struct.TT_NameRec_* %45, i64 %144, i32 3
  %146 = load i16, i16* %145, align 2
  %147 = icmp eq i16 %146, 1
  br i1 %147, label %148, label %179

148:                                              ; preds = %141
  %149 = getelementptr inbounds %struct.TT_NameRec_, %struct.TT_NameRec_* %45, i64 %144, i32 4
  %150 = load i16, i16* %149, align 8
  %151 = icmp eq i16 %150, 0
  br i1 %151, label %179, label %152

152:                                              ; preds = %148
  %153 = getelementptr inbounds %struct.TT_NameRec_, %struct.TT_NameRec_* %45, i64 %144, i32 0
  %154 = load i16, i16* %153, align 8
  switch i16 %154, label %179 [
    i16 3, label %155
    i16 1, label %167
  ]

155:                                              ; preds = %152
  %156 = getelementptr inbounds %struct.TT_NameRec_, %struct.TT_NameRec_* %45, i64 %144, i32 1
  %157 = load i16, i16* %156, align 2
  %158 = icmp ult i16 %157, 2
  br i1 %158, label %159, label %179

159:                                              ; preds = %155
  %160 = getelementptr inbounds %struct.TT_NameRec_, %struct.TT_NameRec_* %45, i64 %144, i32 2
  %161 = load i16, i16* %160, align 4
  %162 = icmp eq i16 %161, 1033
  %163 = icmp eq i32 %142, -1
  %164 = or i1 %163, %162
  %165 = trunc i64 %144 to i32
  %166 = select i1 %164, i32 %165, i32 %142
  br label %179

167:                                              ; preds = %152
  %168 = getelementptr inbounds %struct.TT_NameRec_, %struct.TT_NameRec_* %45, i64 %144, i32 1
  %169 = load i16, i16* %168, align 2
  %170 = icmp eq i16 %169, 0
  br i1 %170, label %171, label %179

171:                                              ; preds = %167
  %172 = getelementptr inbounds %struct.TT_NameRec_, %struct.TT_NameRec_* %45, i64 %144, i32 2
  %173 = load i16, i16* %172, align 4
  %174 = icmp eq i16 %173, 0
  %175 = icmp eq i32 %143, -1
  %176 = or i1 %175, %174
  %177 = trunc i64 %144 to i32
  %178 = select i1 %176, i32 %177, i32 %143
  br label %179

179:                                              ; preds = %171, %167, %159, %155, %152, %148, %141
  %180 = phi i32 [ %142, %148 ], [ %142, %167 ], [ %142, %155 ], [ %142, %141 ], [ %142, %152 ], [ %166, %159 ], [ %142, %171 ]
  %181 = phi i32 [ %143, %148 ], [ %143, %167 ], [ %143, %155 ], [ %143, %141 ], [ %143, %152 ], [ %143, %159 ], [ %178, %171 ]
  %182 = add nuw nsw i64 %144, 1
  %183 = icmp eq i64 %182, %46
  br i1 %183, label %184, label %141

184:                                              ; preds = %179
  %185 = icmp sgt i32 %180, -1
  br i1 %185, label %192, label %186

186:                                              ; preds = %184
  %187 = icmp slt i32 %181, 0
  br i1 %187, label %1119, label %188

188:                                              ; preds = %186, %139, %92
  %189 = phi i32 [ %181, %186 ], [ %134, %139 ], [ %87, %92 ]
  %190 = phi i32 [ %180, %186 ], [ %133, %139 ], [ %86, %92 ]
  %191 = icmp eq i32 %190, -1
  br i1 %191, label %200, label %192

192:                                              ; preds = %188, %184, %137, %90
  %193 = phi i32 [ %86, %90 ], [ %133, %137 ], [ %180, %184 ], [ %190, %188 ]
  %194 = phi i32 [ %87, %90 ], [ %134, %137 ], [ %181, %184 ], [ %189, %188 ]
  %195 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 11, i32 6
  %196 = load %struct.FT_StreamRec_*, %struct.FT_StreamRec_** %195, align 8
  %197 = sext i32 %193 to i64
  %198 = getelementptr inbounds %struct.TT_NameRec_, %struct.TT_NameRec_* %45, i64 %197
  %199 = tail call fastcc i8* @get_win_string(%struct.FT_MemoryRec_* %29, %struct.FT_StreamRec_* %196, %struct.TT_NameRec_* %198, i32 (i32)* nonnull @sfnt_is_alphanumeric) #17
  br label %200

200:                                              ; preds = %192, %188
  %201 = phi i32 [ %194, %192 ], [ %189, %188 ]
  %202 = phi i8* [ %199, %192 ], [ null, %188 ]
  %203 = icmp eq i8* %202, null
  %204 = icmp ne i32 %201, -1
  %205 = and i1 %204, %203
  br i1 %205, label %206, label %214

206:                                              ; preds = %200
  %207 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %28, align 8
  %208 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 11, i32 6
  %209 = load %struct.FT_StreamRec_*, %struct.FT_StreamRec_** %208, align 8
  %210 = load %struct.TT_NameRec_*, %struct.TT_NameRec_** %44, align 8
  %211 = sext i32 %201 to i64
  %212 = getelementptr inbounds %struct.TT_NameRec_, %struct.TT_NameRec_* %210, i64 %211
  %213 = tail call fastcc i8* @get_apple_string(%struct.FT_MemoryRec_* %207, %struct.FT_StreamRec_* %209, %struct.TT_NameRec_* %212, i32 (i32)* nonnull @sfnt_is_alphanumeric) #17
  br label %214

214:                                              ; preds = %206, %200
  %215 = phi i8* [ %213, %206 ], [ %202, %200 ]
  %216 = icmp eq i8* %215, null
  br i1 %216, label %1119, label %217

217:                                              ; preds = %214
  %218 = tail call i64 @strlen(i8* nonnull %215) #20
  %219 = trunc i64 %218 to i32
  %220 = icmp ugt i32 %219, 91
  br i1 %220, label %221, label %223

221:                                              ; preds = %217
  %222 = getelementptr inbounds i8, i8* %215, i64 91
  store i8 0, i8* %222, align 1
  br label %223

223:                                              ; preds = %221, %217
  %224 = phi i32 [ 91, %221 ], [ %219, %217 ]
  store i8* %215, i8** %36, align 8
  %225 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 53
  store i32 %224, i32* %225, align 8
  br label %226

226:                                              ; preds = %223, %26
  %227 = getelementptr inbounds %struct.FT_Service_MultiMastersRec_, %struct.FT_Service_MultiMastersRec_* %32, i64 0, i32 10
  %228 = load i32 (%struct.FT_FaceRec_*, i32*, i64**, i64**, %struct.FT_MM_Var_**)*, i32 (%struct.FT_FaceRec_*, i32*, i64**, i64**, %struct.FT_MM_Var_**)** %227, align 8
  %229 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 0
  %230 = call i32 %228(%struct.FT_FaceRec_* %229, i32* nonnull %4, i64** nonnull %5, i64** null, %struct.FT_MM_Var_** nonnull %6) #17
  %231 = load i64, i64* %17, align 8
  %232 = and i64 %231, 2147418112
  %233 = icmp eq i64 %232, 0
  br i1 %233, label %327, label %234

234:                                              ; preds = %226
  %235 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 0, i32 2
  %236 = load i64, i64* %235, align 8
  %237 = trunc i64 %236 to i16
  %238 = icmp slt i16 %237, 0
  br i1 %238, label %327, label %239

239:                                              ; preds = %234
  %240 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 22
  %241 = bitcast i8** %240 to %struct.SFNT_Interface_**
  %242 = load %struct.SFNT_Interface_*, %struct.SFNT_Interface_** %241, align 8
  %243 = lshr i64 %231, 16
  %244 = and i64 %243, 32767
  %245 = add nsw i64 %244, -1
  %246 = load %struct.FT_MM_Var_*, %struct.FT_MM_Var_** %6, align 8
  %247 = getelementptr inbounds %struct.FT_MM_Var_, %struct.FT_MM_Var_* %246, i64 0, i32 4
  %248 = load %struct.FT_Var_Named_Style_*, %struct.FT_Var_Named_Style_** %247, align 8
  %249 = getelementptr inbounds %struct.FT_Var_Named_Style_, %struct.FT_Var_Named_Style_* %248, i64 %245, i32 2
  %250 = load i32, i32* %249, align 4
  %251 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %251) #17
  store i8* null, i8** %7, align 8
  %252 = icmp eq i32 %250, 6
  %253 = add i32 %250, -256
  %254 = icmp ult i32 %253, 32512
  %255 = or i1 %252, %254
  br i1 %255, label %256, label %271

256:                                              ; preds = %239
  %257 = getelementptr inbounds %struct.SFNT_Interface_, %struct.SFNT_Interface_* %242, i64 0, i32 40
  %258 = load i32 (%struct.TT_FaceRec_*, i16, i8**)*, i32 (%struct.TT_FaceRec_*, i16, i8**)** %257, align 8
  %259 = trunc i32 %250 to i16
  %260 = call i32 %258(%struct.TT_FaceRec_* %0, i16 zeroext %259, i8** nonnull %7) #17
  %261 = load i8*, i8** %7, align 8
  %262 = icmp eq i8* %261, null
  br i1 %262, label %263, label %267

263:                                              ; preds = %256
  %264 = load %struct.FT_MM_Var_*, %struct.FT_MM_Var_** %6, align 8
  %265 = getelementptr inbounds %struct.FT_MM_Var_, %struct.FT_MM_Var_* %264, i64 0, i32 4
  %266 = load %struct.FT_Var_Named_Style_*, %struct.FT_Var_Named_Style_** %265, align 8
  br label %271

267:                                              ; preds = %256
  %268 = call i64 @strlen(i8* nonnull %261) #20
  %269 = getelementptr inbounds i8, i8* %261, i64 %268
  %270 = getelementptr inbounds i8, i8* %269, i64 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %251) #17
  br label %633

271:                                              ; preds = %263, %239
  %272 = phi %struct.FT_Var_Named_Style_* [ %266, %263 ], [ %248, %239 ]
  %273 = getelementptr inbounds %struct.FT_Var_Named_Style_, %struct.FT_Var_Named_Style_* %272, i64 %245, i32 1
  %274 = load i32, i32* %273, align 8
  %275 = bitcast i8** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %275) #17
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %8, align 8
  %276 = getelementptr inbounds %struct.SFNT_Interface_, %struct.SFNT_Interface_* %242, i64 0, i32 40
  %277 = load i32 (%struct.TT_FaceRec_*, i16, i8**)*, i32 (%struct.TT_FaceRec_*, i16, i8**)** %276, align 8
  %278 = trunc i32 %274 to i16
  %279 = call i32 %277(%struct.TT_FaceRec_* %0, i16 zeroext %278, i8** nonnull %8) #17
  %280 = load i8*, i8** %8, align 8
  %281 = icmp eq i8* %280, null
  br i1 %281, label %326, label %282

282:                                              ; preds = %271
  %283 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 53
  %284 = load i32, i32* %283, align 8
  %285 = add i32 %284, 1
  %286 = zext i32 %285 to i64
  %287 = call i64 @strlen(i8* nonnull %280) #20
  %288 = add i64 %287, 1
  %289 = add i64 %288, %286
  %290 = call i8* @ft_mem_qalloc(%struct.FT_MemoryRec_* %29, i64 %289, i32* nonnull %3) #17
  %291 = load i32, i32* %3, align 4
  %292 = icmp eq i32 %291, 0
  br i1 %292, label %294, label %293

293:                                              ; preds = %282
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %275) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %251) #17
  br label %1119

294:                                              ; preds = %282
  %295 = load i8*, i8** %36, align 8
  %296 = call i8* @strcpy(i8* %290, i8* %295) #17
  %297 = load i32, i32* %283, align 8
  %298 = zext i32 %297 to i64
  %299 = getelementptr inbounds i8, i8* %290, i64 %298
  %300 = getelementptr inbounds i8, i8* %299, i64 1
  store i8 45, i8* %299, align 1
  %301 = load i8*, i8** %8, align 8
  %302 = load i8, i8* %301, align 1
  %303 = icmp eq i8 %302, 0
  br i1 %303, label %322, label %304

304:                                              ; preds = %294, %317
  %305 = phi i8 [ %320, %317 ], [ %302, %294 ]
  %306 = phi i8* [ %319, %317 ], [ %301, %294 ]
  %307 = phi i8* [ %318, %317 ], [ %300, %294 ]
  %308 = sext i8 %305 to i32
  %309 = add nsw i32 %308, -48
  %310 = icmp ult i32 %309, 10
  %311 = and i32 %308, -33
  %312 = add nsw i32 %311, -65
  %313 = icmp ult i32 %312, 26
  %314 = or i1 %310, %313
  br i1 %314, label %315, label %317

315:                                              ; preds = %304
  %316 = getelementptr inbounds i8, i8* %307, i64 1
  store i8 %305, i8* %307, align 1
  br label %317

317:                                              ; preds = %315, %304
  %318 = phi i8* [ %316, %315 ], [ %307, %304 ]
  %319 = getelementptr inbounds i8, i8* %306, i64 1
  %320 = load i8, i8* %319, align 1
  %321 = icmp eq i8 %320, 0
  br i1 %321, label %322, label %304

322:                                              ; preds = %317, %294
  %323 = phi i8* [ %300, %294 ], [ %318, %317 ]
  %324 = getelementptr inbounds i8, i8* %323, i64 1
  store i8 0, i8* %323, align 1
  %325 = load i8*, i8** %8, align 8
  call void @ft_mem_free(%struct.FT_MemoryRec_* %29, i8* %325) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %275) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %251) #17
  br label %633

326:                                              ; preds = %271
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %275) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %251) #17
  br label %327

327:                                              ; preds = %326, %234, %226
  %328 = load %struct.FT_MM_Var_*, %struct.FT_MM_Var_** %6, align 8
  %329 = getelementptr inbounds %struct.FT_MM_Var_, %struct.FT_MM_Var_* %328, i64 0, i32 3
  %330 = load %struct.FT_Var_Axis_*, %struct.FT_Var_Axis_** %329, align 8
  %331 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 53
  %332 = load i32, i32* %331, align 8
  %333 = load i32, i32* %4, align 4
  %334 = mul i32 %333, 17
  %335 = add i32 %332, 1
  %336 = add i32 %335, %334
  %337 = zext i32 %336 to i64
  %338 = call i8* @ft_mem_qalloc(%struct.FT_MemoryRec_* %29, i64 %337, i32* nonnull %3) #17
  %339 = load i32, i32* %3, align 4
  %340 = icmp eq i32 %339, 0
  br i1 %340, label %341, label %1119

341:                                              ; preds = %327
  %342 = load i8*, i8** %36, align 8
  %343 = call i8* @strcpy(i8* %338, i8* %342) #17
  %344 = load i32, i32* %331, align 8
  %345 = zext i32 %344 to i64
  %346 = getelementptr inbounds i8, i8* %338, i64 %345
  %347 = load i32, i32* %4, align 4
  %348 = icmp eq i32 %347, 0
  br i1 %348, label %630, label %349

349:                                              ; preds = %341
  %350 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i64 0, i64 0
  %351 = load i64*, i64** %5, align 8
  %352 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i64 0, i64 0
  br label %353

353:                                              ; preds = %622, %349
  %354 = phi i64* [ %351, %349 ], [ %626, %622 ]
  %355 = phi %struct.FT_Var_Axis_* [ %330, %349 ], [ %627, %622 ]
  %356 = phi i8* [ %346, %349 ], [ %623, %622 ]
  %357 = phi i32 [ 0, %349 ], [ %624, %622 ]
  %358 = load i64, i64* %354, align 8
  %359 = getelementptr inbounds %struct.FT_Var_Axis_, %struct.FT_Var_Axis_* %355, i64 0, i32 2
  %360 = load i64, i64* %359, align 8
  %361 = icmp eq i64 %358, %360
  br i1 %361, label %622, label %362

362:                                              ; preds = %353
  %363 = getelementptr inbounds i8, i8* %356, i64 1
  store i8 95, i8* %356, align 1
  %364 = load i64*, i64** %5, align 8
  %365 = load i64, i64* %364, align 8
  %366 = trunc i64 %365 to i32
  call void @llvm.lifetime.start.p0i8(i64 5, i8* nonnull %350) #17
  %367 = icmp eq i32 %366, 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %350, i8 -86, i64 5, i1 false) #17
  br i1 %367, label %368, label %370

368:                                              ; preds = %362
  %369 = getelementptr inbounds i8, i8* %356, i64 2
  store i8 48, i8* %363, align 1
  br label %555

370:                                              ; preds = %362
  %371 = icmp slt i32 %366, 0
  br i1 %371, label %372, label %375

372:                                              ; preds = %370
  %373 = getelementptr inbounds i8, i8* %356, i64 2
  store i8 45, i8* %363, align 1
  %374 = sub i32 0, %366
  br label %375

375:                                              ; preds = %372, %370
  %376 = phi i32 [ %374, %372 ], [ %366, %370 ]
  %377 = phi i8* [ %373, %372 ], [ %363, %370 ]
  %378 = lshr i32 %376, 16
  %379 = and i32 %376, 65535
  %380 = icmp eq i32 %378, 0
  br i1 %380, label %476, label %381

381:                                              ; preds = %375, %381
  %382 = phi i32 [ %389, %381 ], [ %378, %375 ]
  %383 = phi i64 [ %388, %381 ], [ 0, %375 ]
  %384 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i64 0, i64 %383
  %385 = urem i32 %382, 10
  %386 = trunc i32 %385 to i8
  %387 = or i8 %386, 48
  %388 = add nuw nsw i64 %383, 1
  store i8 %387, i8* %384, align 1
  %389 = udiv i32 %382, 10
  %390 = icmp ult i32 %382, 10
  br i1 %390, label %391, label %381

391:                                              ; preds = %381
  %392 = icmp ult i64 %388, 32
  br i1 %392, label %465, label %393

393:                                              ; preds = %391
  %394 = getelementptr i8, i8* %377, i64 %388
  %395 = getelementptr [5 x i8], [5 x i8]* %2, i64 0, i64 %388
  %396 = icmp ult i8* %377, %395
  %397 = icmp ult i8* %352, %394
  %398 = and i1 %396, %397
  br i1 %398, label %465, label %399

399:                                              ; preds = %393
  %400 = and i64 %388, 9223372036854775776
  %401 = sub nsw i64 %388, %400
  %402 = getelementptr i8, i8* %377, i64 %400
  %403 = add nsw i64 %400, -32
  %404 = lshr exact i64 %403, 5
  %405 = add nuw nsw i64 %404, 1
  %406 = and i64 %405, 1
  %407 = icmp eq i64 %403, 0
  br i1 %407, label %445, label %408

408:                                              ; preds = %399
  %409 = sub nuw nsw i64 %405, %406
  br label %410

410:                                              ; preds = %410, %408
  %411 = phi i64 [ 0, %408 ], [ %442, %410 ]
  %412 = phi i64 [ %409, %408 ], [ %443, %410 ]
  %413 = getelementptr i8, i8* %377, i64 %411
  %414 = sub i64 %383, %411
  %415 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i64 0, i64 %414
  %416 = getelementptr inbounds i8, i8* %415, i64 -15
  %417 = bitcast i8* %416 to <16 x i8>*
  %418 = load <16 x i8>, <16 x i8>* %417, align 1, !alias.scope !62
  %419 = shufflevector <16 x i8> %418, <16 x i8> undef, <16 x i32> <i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %420 = getelementptr inbounds i8, i8* %415, i64 -31
  %421 = bitcast i8* %420 to <16 x i8>*
  %422 = load <16 x i8>, <16 x i8>* %421, align 1, !alias.scope !62
  %423 = shufflevector <16 x i8> %422, <16 x i8> undef, <16 x i32> <i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %424 = bitcast i8* %413 to <16 x i8>*
  store <16 x i8> %419, <16 x i8>* %424, align 1, !alias.scope !65, !noalias !62
  %425 = getelementptr i8, i8* %413, i64 16
  %426 = bitcast i8* %425 to <16 x i8>*
  store <16 x i8> %423, <16 x i8>* %426, align 1, !alias.scope !65, !noalias !62
  %427 = or i64 %411, 32
  %428 = getelementptr i8, i8* %377, i64 %427
  %429 = sub i64 %383, %427
  %430 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i64 0, i64 %429
  %431 = getelementptr inbounds i8, i8* %430, i64 -15
  %432 = bitcast i8* %431 to <16 x i8>*
  %433 = load <16 x i8>, <16 x i8>* %432, align 1, !alias.scope !62
  %434 = shufflevector <16 x i8> %433, <16 x i8> undef, <16 x i32> <i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %435 = getelementptr inbounds i8, i8* %430, i64 -31
  %436 = bitcast i8* %435 to <16 x i8>*
  %437 = load <16 x i8>, <16 x i8>* %436, align 1, !alias.scope !62
  %438 = shufflevector <16 x i8> %437, <16 x i8> undef, <16 x i32> <i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %439 = bitcast i8* %428 to <16 x i8>*
  store <16 x i8> %434, <16 x i8>* %439, align 1, !alias.scope !65, !noalias !62
  %440 = getelementptr i8, i8* %428, i64 16
  %441 = bitcast i8* %440 to <16 x i8>*
  store <16 x i8> %438, <16 x i8>* %441, align 1, !alias.scope !65, !noalias !62
  %442 = add i64 %411, 64
  %443 = add i64 %412, -2
  %444 = icmp eq i64 %443, 0
  br i1 %444, label %445, label %410, !llvm.loop !67

445:                                              ; preds = %410, %399
  %446 = phi i64 [ 0, %399 ], [ %442, %410 ]
  %447 = icmp eq i64 %406, 0
  br i1 %447, label %463, label %448

448:                                              ; preds = %445
  %449 = getelementptr i8, i8* %377, i64 %446
  %450 = sub i64 %383, %446
  %451 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i64 0, i64 %450
  %452 = getelementptr inbounds i8, i8* %451, i64 -15
  %453 = bitcast i8* %452 to <16 x i8>*
  %454 = load <16 x i8>, <16 x i8>* %453, align 1, !alias.scope !62
  %455 = shufflevector <16 x i8> %454, <16 x i8> undef, <16 x i32> <i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %456 = getelementptr inbounds i8, i8* %451, i64 -31
  %457 = bitcast i8* %456 to <16 x i8>*
  %458 = load <16 x i8>, <16 x i8>* %457, align 1, !alias.scope !62
  %459 = shufflevector <16 x i8> %458, <16 x i8> undef, <16 x i32> <i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0>
  %460 = bitcast i8* %449 to <16 x i8>*
  store <16 x i8> %455, <16 x i8>* %460, align 1, !alias.scope !65, !noalias !62
  %461 = getelementptr i8, i8* %449, i64 16
  %462 = bitcast i8* %461 to <16 x i8>*
  store <16 x i8> %459, <16 x i8>* %462, align 1, !alias.scope !65, !noalias !62
  br label %463

463:                                              ; preds = %445, %448
  %464 = icmp eq i64 %388, %400
  br i1 %464, label %476, label %465

465:                                              ; preds = %463, %393, %391
  %466 = phi i64 [ %388, %393 ], [ %388, %391 ], [ %401, %463 ]
  %467 = phi i8* [ %377, %393 ], [ %377, %391 ], [ %402, %463 ]
  br label %468

468:                                              ; preds = %465, %468
  %469 = phi i64 [ %471, %468 ], [ %466, %465 ]
  %470 = phi i8* [ %474, %468 ], [ %467, %465 ]
  %471 = add nsw i64 %469, -1
  %472 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i64 0, i64 %471
  %473 = load i8, i8* %472, align 1
  %474 = getelementptr inbounds i8, i8* %470, i64 1
  store i8 %473, i8* %470, align 1
  %475 = icmp sgt i64 %471, 0
  br i1 %475, label %468, label %476, !llvm.loop !68

476:                                              ; preds = %468, %463, %375
  %477 = phi i8* [ %377, %375 ], [ %402, %463 ], [ %474, %468 ]
  %478 = icmp eq i32 %379, 0
  br i1 %478, label %555, label %516

479:                                              ; preds = %545, %537, %516
  %480 = phi i8 [ %534, %516 ], [ %542, %537 ], [ %550, %545 ]
  %481 = phi i8* [ %531, %516 ], [ %539, %537 ], [ %547, %545 ]
  %482 = phi i32 [ 0, %516 ], [ 0, %537 ], [ %554, %545 ]
  %483 = ptrtoint i8* %481 to i64
  %484 = ptrtoint i8* %477 to i64
  %485 = sub i64 %483, %484
  %486 = icmp eq i64 %485, 5
  %487 = icmp slt i32 %482, 344800
  %488 = and i1 %487, %486
  br i1 %488, label %489, label %505

489:                                              ; preds = %479
  %490 = icmp eq i8 %480, 49
  br i1 %490, label %491, label %492

491:                                              ; preds = %489
  store i8 48, i8* %481, align 1
  br label %507

492:                                              ; preds = %489
  %493 = icmp eq i32 %482, 172320
  br i1 %493, label %494, label %499

494:                                              ; preds = %492
  %495 = and i8 %480, 1
  %496 = icmp eq i8 %495, 0
  br i1 %496, label %505, label %497

497:                                              ; preds = %494
  %498 = add nsw i8 %480, -1
  store i8 %498, i8* %481, align 1
  br label %513

499:                                              ; preds = %492
  %500 = icmp slt i32 %482, 172320
  br i1 %500, label %501, label %505

501:                                              ; preds = %499
  %502 = icmp eq i8 %480, 48
  br i1 %502, label %507, label %503

503:                                              ; preds = %501
  %504 = add nsw i8 %480, -1
  store i8 %504, i8* %481, align 1
  br label %513

505:                                              ; preds = %499, %494, %479
  %506 = icmp eq i8 %480, 48
  br i1 %506, label %507, label %513

507:                                              ; preds = %505, %501, %491
  br label %508

508:                                              ; preds = %507, %508
  %509 = phi i8* [ %510, %508 ], [ %481, %507 ]
  %510 = getelementptr inbounds i8, i8* %509, i64 -1
  store i8 0, i8* %509, align 1
  %511 = load i8, i8* %510, align 1
  %512 = icmp eq i8 %511, 48
  br i1 %512, label %508, label %513

513:                                              ; preds = %508, %505, %503, %497
  %514 = phi i8* [ %481, %505 ], [ %481, %503 ], [ %481, %497 ], [ %510, %508 ]
  %515 = getelementptr inbounds i8, i8* %514, i64 1
  br label %555

516:                                              ; preds = %476
  store i8 46, i8* %477, align 1
  %517 = mul nuw nsw i32 %379, 10
  %518 = add nuw nsw i32 %517, 5
  %519 = getelementptr inbounds i8, i8* %477, i64 1
  %520 = lshr i32 %518, 16
  %521 = trunc i32 %520 to i8
  %522 = add nuw nsw i8 %521, 48
  store i8 %522, i8* %519, align 1
  %523 = and i32 %518, 65535
  %524 = mul nuw nsw i32 %523, 10
  %525 = getelementptr inbounds i8, i8* %477, i64 2
  %526 = lshr i32 %524, 16
  %527 = trunc i32 %526 to i8
  %528 = or i8 %527, 48
  store i8 %528, i8* %525, align 1
  %529 = and i32 %524, 65534
  %530 = mul nuw nsw i32 %529, 10
  %531 = getelementptr inbounds i8, i8* %477, i64 3
  %532 = lshr i32 %530, 16
  %533 = trunc i32 %532 to i8
  %534 = or i8 %533, 48
  store i8 %534, i8* %531, align 1
  %535 = and i32 %530, 65532
  %536 = icmp eq i32 %535, 0
  br i1 %536, label %479, label %537

537:                                              ; preds = %516
  %538 = mul nuw nsw i32 %535, 10
  %539 = getelementptr inbounds i8, i8* %477, i64 4
  %540 = lshr i32 %538, 16
  %541 = trunc i32 %540 to i8
  %542 = or i8 %541, 48
  store i8 %542, i8* %539, align 1
  %543 = and i32 %538, 65528
  %544 = icmp eq i32 %543, 0
  br i1 %544, label %479, label %545

545:                                              ; preds = %537
  %546 = mul nuw nsw i32 %543, 10
  %547 = getelementptr inbounds i8, i8* %477, i64 5
  %548 = lshr i32 %546, 16
  %549 = trunc i32 %548 to i8
  %550 = or i8 %549, 48
  store i8 %550, i8* %547, align 1
  %551 = and i32 %546, 65520
  %552 = icmp eq i32 %551, 0
  %553 = mul nuw nsw i32 %551, 10
  %554 = select i1 %552, i32 0, i32 %553
  br label %479

555:                                              ; preds = %513, %476, %368
  %556 = phi i8* [ %369, %368 ], [ %515, %513 ], [ %477, %476 ]
  call void @llvm.lifetime.end.p0i8(i64 5, i8* nonnull %350) #17
  %557 = getelementptr inbounds %struct.FT_Var_Axis_, %struct.FT_Var_Axis_* %355, i64 0, i32 4
  %558 = load i64, i64* %557, align 8
  %559 = lshr i64 %558, 24
  %560 = trunc i64 %559 to i8
  %561 = sext i8 %560 to i32
  %562 = icmp eq i8 %560, 32
  br i1 %562, label %573, label %563

563:                                              ; preds = %555
  %564 = add nsw i32 %561, -48
  %565 = icmp ult i32 %564, 10
  %566 = and i32 %561, -33
  %567 = add nsw i32 %566, -65
  %568 = icmp ult i32 %567, 26
  %569 = or i1 %565, %568
  br i1 %569, label %570, label %573

570:                                              ; preds = %563
  %571 = getelementptr inbounds i8, i8* %556, i64 1
  store i8 %560, i8* %556, align 1
  %572 = load i64, i64* %557, align 8
  br label %573

573:                                              ; preds = %570, %563, %555
  %574 = phi i64 [ %572, %570 ], [ %558, %555 ], [ %558, %563 ]
  %575 = phi i8* [ %571, %570 ], [ %556, %555 ], [ %556, %563 ]
  %576 = lshr i64 %574, 16
  %577 = trunc i64 %576 to i8
  %578 = sext i8 %577 to i32
  %579 = icmp eq i8 %577, 32
  br i1 %579, label %590, label %580

580:                                              ; preds = %573
  %581 = add nsw i32 %578, -48
  %582 = icmp ult i32 %581, 10
  %583 = and i32 %578, -33
  %584 = add nsw i32 %583, -65
  %585 = icmp ult i32 %584, 26
  %586 = or i1 %582, %585
  br i1 %586, label %587, label %590

587:                                              ; preds = %580
  %588 = getelementptr inbounds i8, i8* %575, i64 1
  store i8 %577, i8* %575, align 1
  %589 = load i64, i64* %557, align 8
  br label %590

590:                                              ; preds = %587, %580, %573
  %591 = phi i64 [ %589, %587 ], [ %574, %573 ], [ %574, %580 ]
  %592 = phi i8* [ %588, %587 ], [ %575, %573 ], [ %575, %580 ]
  %593 = lshr i64 %591, 8
  %594 = trunc i64 %593 to i8
  %595 = sext i8 %594 to i32
  %596 = icmp eq i8 %594, 32
  br i1 %596, label %607, label %597

597:                                              ; preds = %590
  %598 = add nsw i32 %595, -48
  %599 = icmp ult i32 %598, 10
  %600 = and i32 %595, -33
  %601 = add nsw i32 %600, -65
  %602 = icmp ult i32 %601, 26
  %603 = or i1 %599, %602
  br i1 %603, label %604, label %607

604:                                              ; preds = %597
  %605 = getelementptr inbounds i8, i8* %592, i64 1
  store i8 %594, i8* %592, align 1
  %606 = load i64, i64* %557, align 8
  br label %607

607:                                              ; preds = %604, %597, %590
  %608 = phi i64 [ %606, %604 ], [ %591, %590 ], [ %591, %597 ]
  %609 = phi i8* [ %605, %604 ], [ %592, %590 ], [ %592, %597 ]
  %610 = trunc i64 %608 to i8
  %611 = sext i8 %610 to i32
  %612 = icmp eq i8 %610, 32
  br i1 %612, label %622, label %613

613:                                              ; preds = %607
  %614 = add nsw i32 %611, -48
  %615 = icmp ult i32 %614, 10
  %616 = and i32 %611, -33
  %617 = add nsw i32 %616, -65
  %618 = icmp ult i32 %617, 26
  %619 = or i1 %615, %618
  br i1 %619, label %620, label %622

620:                                              ; preds = %613
  %621 = getelementptr inbounds i8, i8* %609, i64 1
  store i8 %610, i8* %609, align 1
  br label %622

622:                                              ; preds = %620, %613, %607, %353
  %623 = phi i8* [ %356, %353 ], [ %621, %620 ], [ %609, %607 ], [ %609, %613 ]
  %624 = add nuw i32 %357, 1
  %625 = load i64*, i64** %5, align 8
  %626 = getelementptr inbounds i64, i64* %625, i64 1
  store i64* %626, i64** %5, align 8
  %627 = getelementptr inbounds %struct.FT_Var_Axis_, %struct.FT_Var_Axis_* %355, i64 1
  %628 = load i32, i32* %4, align 4
  %629 = icmp ult i32 %624, %628
  br i1 %629, label %353, label %630

630:                                              ; preds = %622, %341
  %631 = phi i8* [ %346, %341 ], [ %623, %622 ]
  %632 = getelementptr inbounds i8, i8* %631, i64 1
  store i8 0, i8* %631, align 1
  br label %633

633:                                              ; preds = %630, %322, %267
  %634 = phi i8* [ %338, %630 ], [ %261, %267 ], [ %290, %322 ]
  %635 = phi i8* [ %632, %630 ], [ %270, %267 ], [ %324, %322 ]
  %636 = ptrtoint i8* %635 to i64
  %637 = ptrtoint i8* %634 to i64
  %638 = sub i64 %636, %637
  %639 = icmp sgt i64 %638, 127
  br i1 %639, label %640, label %1119

640:                                              ; preds = %633
  %641 = trunc i64 %638 to i32
  %642 = sdiv i32 %641, 16
  %643 = shl nsw i32 %642, 4
  %644 = sext i32 %643 to i64
  %645 = getelementptr inbounds i8, i8* %634, i64 %644
  %646 = bitcast i8* %645 to i32*
  %647 = sub nsw i32 0, %642
  %648 = add i32 %641, 15
  %649 = icmp ult i32 %648, 31
  br i1 %649, label %727, label %650

650:                                              ; preds = %640
  %651 = sext i32 %647 to i64
  br label %652

652:                                              ; preds = %652, %650
  %653 = phi i64 [ %723, %652 ], [ %651, %650 ]
  %654 = phi i32 [ %686, %652 ], [ 123456789, %650 ]
  %655 = phi i32 [ %698, %652 ], [ 123456789, %650 ]
  %656 = phi i32 [ %724, %652 ], [ %647, %650 ]
  %657 = phi i32 [ %710, %652 ], [ 123456789, %650 ]
  %658 = phi i32 [ %722, %652 ], [ 123456789, %650 ]
  %659 = shl nsw i32 %656, 2
  %660 = sext i32 %659 to i64
  %661 = getelementptr inbounds i32, i32* %646, i64 %660
  %662 = load i32, i32* %661, align 4
  %663 = or i32 %659, 1
  %664 = sext i32 %663 to i64
  %665 = getelementptr inbounds i32, i32* %646, i64 %664
  %666 = load i32, i32* %665, align 4
  %667 = or i32 %659, 2
  %668 = sext i32 %667 to i64
  %669 = getelementptr inbounds i32, i32* %646, i64 %668
  %670 = load i32, i32* %669, align 4
  %671 = or i32 %659, 3
  %672 = sext i32 %671 to i64
  %673 = getelementptr inbounds i32, i32* %646, i64 %672
  %674 = load i32, i32* %673, align 4
  %675 = mul i32 %662, 597399067
  %676 = mul i32 %662, -888307712
  %677 = lshr i32 %675, 17
  %678 = or i32 %677, %676
  %679 = mul i32 %678, -1425107063
  %680 = xor i32 %679, %654
  %681 = shl i32 %680, 19
  %682 = lshr i32 %680, 13
  %683 = or i32 %681, %682
  %684 = add i32 %683, %655
  %685 = mul i32 %684, 5
  %686 = add i32 %685, 1444728091
  %687 = mul i32 %666, -1425107063
  %688 = mul i32 %666, -1752629248
  %689 = lshr i32 %687, 16
  %690 = or i32 %689, %688
  %691 = mul i32 %690, 951274213
  %692 = xor i32 %691, %655
  %693 = shl i32 %692, 17
  %694 = lshr i32 %692, 15
  %695 = or i32 %693, %694
  %696 = add i32 %695, %657
  %697 = mul i32 %696, 5
  %698 = add i32 %697, 197830471
  %699 = mul i32 %670, 951274213
  %700 = mul i32 %670, -1781923840
  %701 = lshr i32 %699, 15
  %702 = or i32 %701, %700
  %703 = mul i32 %702, -1578923117
  %704 = xor i32 %703, %657
  %705 = shl i32 %704, 15
  %706 = lshr i32 %704, 17
  %707 = or i32 %705, %706
  %708 = add i32 %707, %658
  %709 = mul i32 %708, 5
  %710 = add i32 %709, -1764942795
  %711 = mul i32 %674, -1578923117
  %712 = mul i32 %674, 776732672
  %713 = lshr i32 %711, 14
  %714 = or i32 %713, %712
  %715 = mul i32 %714, 597399067
  %716 = xor i32 %715, %658
  %717 = shl i32 %716, 13
  %718 = lshr i32 %716, 19
  %719 = or i32 %717, %718
  %720 = add i32 %719, %686
  %721 = mul i32 %720, 5
  %722 = add i32 %721, 850148119
  %723 = add nsw i64 %653, 1
  %724 = add nsw i32 %656, 1
  %725 = trunc i64 %723 to i32
  %726 = icmp eq i32 %725, 0
  br i1 %726, label %727, label %652

727:                                              ; preds = %652, %640
  %728 = phi i32 [ 123456789, %640 ], [ %722, %652 ]
  %729 = phi i32 [ 123456789, %640 ], [ %710, %652 ]
  %730 = phi i32 [ 123456789, %640 ], [ %698, %652 ]
  %731 = phi i32 [ 123456789, %640 ], [ %686, %652 ]
  %732 = and i32 %641, 15
  switch i32 %732, label %873 [
    i32 15, label %733
    i32 14, label %738
    i32 13, label %745
    i32 12, label %757
    i32 11, label %763
    i32 10, label %771
    i32 9, label %779
    i32 8, label %792
    i32 7, label %799
    i32 6, label %808
    i32 5, label %817
    i32 4, label %831
    i32 3, label %839
    i32 2, label %849
    i32 1, label %859
  ]

733:                                              ; preds = %727
  %734 = getelementptr inbounds i8, i8* %645, i64 14
  %735 = load i8, i8* %734, align 1
  %736 = zext i8 %735 to i32
  %737 = shl nuw nsw i32 %736, 16
  br label %738

738:                                              ; preds = %733, %727
  %739 = phi i32 [ 0, %727 ], [ %737, %733 ]
  %740 = getelementptr inbounds i8, i8* %645, i64 13
  %741 = load i8, i8* %740, align 1
  %742 = zext i8 %741 to i32
  %743 = shl nuw nsw i32 %742, 8
  %744 = or i32 %743, %739
  br label %745

745:                                              ; preds = %738, %727
  %746 = phi i32 [ 0, %727 ], [ %744, %738 ]
  %747 = getelementptr inbounds i8, i8* %645, i64 12
  %748 = load i8, i8* %747, align 1
  %749 = zext i8 %748 to i32
  %750 = xor i32 %746, %749
  %751 = mul i32 %750, -1578923117
  %752 = mul i32 %750, 776732672
  %753 = lshr i32 %751, 14
  %754 = or i32 %753, %752
  %755 = mul i32 %754, 597399067
  %756 = xor i32 %755, %728
  br label %757

757:                                              ; preds = %745, %727
  %758 = phi i32 [ %728, %727 ], [ %756, %745 ]
  %759 = getelementptr inbounds i8, i8* %645, i64 11
  %760 = load i8, i8* %759, align 1
  %761 = zext i8 %760 to i32
  %762 = shl nuw i32 %761, 24
  br label %763

763:                                              ; preds = %757, %727
  %764 = phi i32 [ %728, %727 ], [ %758, %757 ]
  %765 = phi i32 [ 0, %727 ], [ %762, %757 ]
  %766 = getelementptr inbounds i8, i8* %645, i64 10
  %767 = load i8, i8* %766, align 1
  %768 = zext i8 %767 to i32
  %769 = shl nuw nsw i32 %768, 16
  %770 = or i32 %769, %765
  br label %771

771:                                              ; preds = %763, %727
  %772 = phi i32 [ %728, %727 ], [ %764, %763 ]
  %773 = phi i32 [ 0, %727 ], [ %770, %763 ]
  %774 = getelementptr inbounds i8, i8* %645, i64 9
  %775 = load i8, i8* %774, align 1
  %776 = zext i8 %775 to i32
  %777 = shl nuw nsw i32 %776, 8
  %778 = xor i32 %777, %773
  br label %779

779:                                              ; preds = %771, %727
  %780 = phi i32 [ %728, %727 ], [ %772, %771 ]
  %781 = phi i32 [ 0, %727 ], [ %778, %771 ]
  %782 = getelementptr inbounds i8, i8* %645, i64 8
  %783 = load i8, i8* %782, align 1
  %784 = zext i8 %783 to i32
  %785 = xor i32 %781, %784
  %786 = mul i32 %785, 951274213
  %787 = mul i32 %785, -1781923840
  %788 = lshr i32 %786, 15
  %789 = or i32 %788, %787
  %790 = mul i32 %789, -1578923117
  %791 = xor i32 %790, %729
  br label %792

792:                                              ; preds = %779, %727
  %793 = phi i32 [ %728, %727 ], [ %780, %779 ]
  %794 = phi i32 [ %729, %727 ], [ %791, %779 ]
  %795 = getelementptr inbounds i8, i8* %645, i64 7
  %796 = load i8, i8* %795, align 1
  %797 = zext i8 %796 to i32
  %798 = shl nuw i32 %797, 24
  br label %799

799:                                              ; preds = %792, %727
  %800 = phi i32 [ %728, %727 ], [ %793, %792 ]
  %801 = phi i32 [ %729, %727 ], [ %794, %792 ]
  %802 = phi i32 [ 0, %727 ], [ %798, %792 ]
  %803 = getelementptr inbounds i8, i8* %645, i64 6
  %804 = load i8, i8* %803, align 1
  %805 = zext i8 %804 to i32
  %806 = shl nuw nsw i32 %805, 16
  %807 = or i32 %806, %802
  br label %808

808:                                              ; preds = %799, %727
  %809 = phi i32 [ %728, %727 ], [ %800, %799 ]
  %810 = phi i32 [ %729, %727 ], [ %801, %799 ]
  %811 = phi i32 [ 0, %727 ], [ %807, %799 ]
  %812 = getelementptr inbounds i8, i8* %645, i64 5
  %813 = load i8, i8* %812, align 1
  %814 = zext i8 %813 to i32
  %815 = shl nuw nsw i32 %814, 8
  %816 = xor i32 %815, %811
  br label %817

817:                                              ; preds = %808, %727
  %818 = phi i32 [ %728, %727 ], [ %809, %808 ]
  %819 = phi i32 [ %729, %727 ], [ %810, %808 ]
  %820 = phi i32 [ 0, %727 ], [ %816, %808 ]
  %821 = getelementptr inbounds i8, i8* %645, i64 4
  %822 = load i8, i8* %821, align 1
  %823 = zext i8 %822 to i32
  %824 = xor i32 %820, %823
  %825 = mul i32 %824, -1425107063
  %826 = mul i32 %824, -1752629248
  %827 = lshr i32 %825, 16
  %828 = or i32 %827, %826
  %829 = mul i32 %828, 951274213
  %830 = xor i32 %829, %730
  br label %831

831:                                              ; preds = %817, %727
  %832 = phi i32 [ %728, %727 ], [ %818, %817 ]
  %833 = phi i32 [ %729, %727 ], [ %819, %817 ]
  %834 = phi i32 [ %730, %727 ], [ %830, %817 ]
  %835 = getelementptr inbounds i8, i8* %645, i64 3
  %836 = load i8, i8* %835, align 1
  %837 = zext i8 %836 to i32
  %838 = shl nuw i32 %837, 24
  br label %839

839:                                              ; preds = %831, %727
  %840 = phi i32 [ %728, %727 ], [ %832, %831 ]
  %841 = phi i32 [ %729, %727 ], [ %833, %831 ]
  %842 = phi i32 [ %730, %727 ], [ %834, %831 ]
  %843 = phi i32 [ 0, %727 ], [ %838, %831 ]
  %844 = getelementptr inbounds i8, i8* %645, i64 2
  %845 = load i8, i8* %844, align 1
  %846 = zext i8 %845 to i32
  %847 = shl nuw nsw i32 %846, 16
  %848 = or i32 %847, %843
  br label %849

849:                                              ; preds = %839, %727
  %850 = phi i32 [ %728, %727 ], [ %840, %839 ]
  %851 = phi i32 [ %729, %727 ], [ %841, %839 ]
  %852 = phi i32 [ %730, %727 ], [ %842, %839 ]
  %853 = phi i32 [ 0, %727 ], [ %848, %839 ]
  %854 = getelementptr inbounds i8, i8* %645, i64 1
  %855 = load i8, i8* %854, align 1
  %856 = zext i8 %855 to i32
  %857 = shl nuw nsw i32 %856, 8
  %858 = xor i32 %857, %853
  br label %859

859:                                              ; preds = %849, %727
  %860 = phi i32 [ %728, %727 ], [ %850, %849 ]
  %861 = phi i32 [ %729, %727 ], [ %851, %849 ]
  %862 = phi i32 [ %730, %727 ], [ %852, %849 ]
  %863 = phi i32 [ 0, %727 ], [ %858, %849 ]
  %864 = load i8, i8* %645, align 1
  %865 = zext i8 %864 to i32
  %866 = xor i32 %863, %865
  %867 = mul i32 %866, 597399067
  %868 = mul i32 %866, -888307712
  %869 = lshr i32 %867, 17
  %870 = or i32 %869, %868
  %871 = mul i32 %870, -1425107063
  %872 = xor i32 %871, %731
  br label %873

873:                                              ; preds = %859, %727
  %874 = phi i32 [ %728, %727 ], [ %860, %859 ]
  %875 = phi i32 [ %729, %727 ], [ %861, %859 ]
  %876 = phi i32 [ %730, %727 ], [ %862, %859 ]
  %877 = phi i32 [ %731, %727 ], [ %872, %859 ]
  %878 = xor i32 %877, %641
  %879 = xor i32 %876, %641
  %880 = xor i32 %875, %641
  %881 = xor i32 %874, %641
  %882 = add i32 %880, %881
  %883 = add i32 %882, %879
  %884 = add i32 %883, %878
  %885 = add i32 %884, %879
  %886 = add i32 %884, %880
  %887 = add i32 %884, %881
  %888 = lshr i32 %884, 16
  %889 = xor i32 %888, %884
  %890 = mul i32 %889, -2048144789
  %891 = lshr i32 %890, 13
  %892 = xor i32 %891, %890
  %893 = mul i32 %892, -1028477387
  %894 = lshr i32 %893, 16
  %895 = xor i32 %894, %893
  %896 = lshr i32 %885, 16
  %897 = xor i32 %896, %885
  %898 = mul i32 %897, -2048144789
  %899 = lshr i32 %898, 13
  %900 = xor i32 %899, %898
  %901 = mul i32 %900, -1028477387
  %902 = lshr i32 %901, 16
  %903 = xor i32 %902, %901
  %904 = lshr i32 %886, 16
  %905 = xor i32 %904, %886
  %906 = mul i32 %905, -2048144789
  %907 = lshr i32 %906, 13
  %908 = xor i32 %907, %906
  %909 = mul i32 %908, -1028477387
  %910 = lshr i32 %909, 16
  %911 = xor i32 %910, %909
  %912 = lshr i32 %887, 16
  %913 = xor i32 %912, %887
  %914 = mul i32 %913, -2048144789
  %915 = lshr i32 %914, 13
  %916 = xor i32 %915, %914
  %917 = mul i32 %916, -1028477387
  %918 = lshr i32 %917, 16
  %919 = xor i32 %918, %917
  %920 = add i32 %903, %895
  %921 = add i32 %920, %911
  %922 = add i32 %921, %919
  %923 = add i32 %922, %903
  %924 = add i32 %922, %911
  %925 = add i32 %922, %919
  %926 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 53
  %927 = load i32, i32* %926, align 8
  %928 = zext i32 %927 to i64
  %929 = getelementptr inbounds i8, i8* %634, i64 %928
  %930 = getelementptr inbounds i8, i8* %929, i64 1
  store i8 45, i8* %929, align 1
  %931 = getelementptr inbounds i8, i8* %930, i64 35
  %932 = getelementptr inbounds i8, i8* %931, i64 -1
  store i8 0, i8* %931, align 1
  %933 = getelementptr inbounds i8, i8* %932, i64 -1
  store i8 46, i8* %932, align 1
  %934 = getelementptr inbounds i8, i8* %933, i64 -1
  store i8 46, i8* %933, align 1
  %935 = getelementptr inbounds i8, i8* %934, i64 -1
  store i8 46, i8* %934, align 1
  %936 = and i32 %925, 15
  %937 = zext i32 %936 to i64
  %938 = getelementptr inbounds [16 x i8], [16 x i8]* @hexdigits, i64 0, i64 %937
  %939 = load i8, i8* %938, align 1
  %940 = getelementptr inbounds i8, i8* %935, i64 -1
  store i8 %939, i8* %935, align 1
  %941 = lshr i32 %925, 4
  %942 = and i32 %941, 15
  %943 = zext i32 %942 to i64
  %944 = getelementptr inbounds [16 x i8], [16 x i8]* @hexdigits, i64 0, i64 %943
  %945 = load i8, i8* %944, align 1
  %946 = getelementptr inbounds i8, i8* %940, i64 -1
  store i8 %945, i8* %940, align 1
  %947 = lshr i32 %925, 8
  %948 = and i32 %947, 15
  %949 = zext i32 %948 to i64
  %950 = getelementptr inbounds [16 x i8], [16 x i8]* @hexdigits, i64 0, i64 %949
  %951 = load i8, i8* %950, align 1
  %952 = getelementptr inbounds i8, i8* %946, i64 -1
  store i8 %951, i8* %946, align 1
  %953 = lshr i32 %925, 12
  %954 = and i32 %953, 15
  %955 = zext i32 %954 to i64
  %956 = getelementptr inbounds [16 x i8], [16 x i8]* @hexdigits, i64 0, i64 %955
  %957 = load i8, i8* %956, align 1
  %958 = getelementptr inbounds i8, i8* %952, i64 -1
  store i8 %957, i8* %952, align 1
  %959 = lshr i32 %925, 16
  %960 = and i32 %959, 15
  %961 = zext i32 %960 to i64
  %962 = getelementptr inbounds [16 x i8], [16 x i8]* @hexdigits, i64 0, i64 %961
  %963 = load i8, i8* %962, align 1
  %964 = getelementptr inbounds i8, i8* %958, i64 -1
  store i8 %963, i8* %958, align 1
  %965 = lshr i32 %925, 20
  %966 = and i32 %965, 15
  %967 = zext i32 %966 to i64
  %968 = getelementptr inbounds [16 x i8], [16 x i8]* @hexdigits, i64 0, i64 %967
  %969 = load i8, i8* %968, align 1
  %970 = getelementptr inbounds i8, i8* %964, i64 -1
  store i8 %969, i8* %964, align 1
  %971 = lshr i32 %925, 24
  %972 = and i32 %971, 15
  %973 = zext i32 %972 to i64
  %974 = getelementptr inbounds [16 x i8], [16 x i8]* @hexdigits, i64 0, i64 %973
  %975 = load i8, i8* %974, align 1
  %976 = getelementptr inbounds i8, i8* %970, i64 -1
  store i8 %975, i8* %970, align 1
  %977 = lshr i32 %925, 28
  %978 = zext i32 %977 to i64
  %979 = getelementptr inbounds [16 x i8], [16 x i8]* @hexdigits, i64 0, i64 %978
  %980 = load i8, i8* %979, align 1
  %981 = getelementptr inbounds i8, i8* %976, i64 -1
  store i8 %980, i8* %976, align 1
  %982 = and i32 %924, 15
  %983 = zext i32 %982 to i64
  %984 = getelementptr inbounds [16 x i8], [16 x i8]* @hexdigits, i64 0, i64 %983
  %985 = load i8, i8* %984, align 1
  %986 = getelementptr inbounds i8, i8* %981, i64 -1
  store i8 %985, i8* %981, align 1
  %987 = lshr i32 %924, 4
  %988 = and i32 %987, 15
  %989 = zext i32 %988 to i64
  %990 = getelementptr inbounds [16 x i8], [16 x i8]* @hexdigits, i64 0, i64 %989
  %991 = load i8, i8* %990, align 1
  %992 = getelementptr inbounds i8, i8* %986, i64 -1
  store i8 %991, i8* %986, align 1
  %993 = lshr i32 %924, 8
  %994 = and i32 %993, 15
  %995 = zext i32 %994 to i64
  %996 = getelementptr inbounds [16 x i8], [16 x i8]* @hexdigits, i64 0, i64 %995
  %997 = load i8, i8* %996, align 1
  %998 = getelementptr inbounds i8, i8* %992, i64 -1
  store i8 %997, i8* %992, align 1
  %999 = lshr i32 %924, 12
  %1000 = and i32 %999, 15
  %1001 = zext i32 %1000 to i64
  %1002 = getelementptr inbounds [16 x i8], [16 x i8]* @hexdigits, i64 0, i64 %1001
  %1003 = load i8, i8* %1002, align 1
  %1004 = getelementptr inbounds i8, i8* %998, i64 -1
  store i8 %1003, i8* %998, align 1
  %1005 = lshr i32 %924, 16
  %1006 = and i32 %1005, 15
  %1007 = zext i32 %1006 to i64
  %1008 = getelementptr inbounds [16 x i8], [16 x i8]* @hexdigits, i64 0, i64 %1007
  %1009 = load i8, i8* %1008, align 1
  %1010 = getelementptr inbounds i8, i8* %1004, i64 -1
  store i8 %1009, i8* %1004, align 1
  %1011 = lshr i32 %924, 20
  %1012 = and i32 %1011, 15
  %1013 = zext i32 %1012 to i64
  %1014 = getelementptr inbounds [16 x i8], [16 x i8]* @hexdigits, i64 0, i64 %1013
  %1015 = load i8, i8* %1014, align 1
  %1016 = getelementptr inbounds i8, i8* %1010, i64 -1
  store i8 %1015, i8* %1010, align 1
  %1017 = lshr i32 %924, 24
  %1018 = and i32 %1017, 15
  %1019 = zext i32 %1018 to i64
  %1020 = getelementptr inbounds [16 x i8], [16 x i8]* @hexdigits, i64 0, i64 %1019
  %1021 = load i8, i8* %1020, align 1
  %1022 = getelementptr inbounds i8, i8* %1016, i64 -1
  store i8 %1021, i8* %1016, align 1
  %1023 = lshr i32 %924, 28
  %1024 = zext i32 %1023 to i64
  %1025 = getelementptr inbounds [16 x i8], [16 x i8]* @hexdigits, i64 0, i64 %1024
  %1026 = load i8, i8* %1025, align 1
  %1027 = getelementptr inbounds i8, i8* %1022, i64 -1
  store i8 %1026, i8* %1022, align 1
  %1028 = and i32 %923, 15
  %1029 = zext i32 %1028 to i64
  %1030 = getelementptr inbounds [16 x i8], [16 x i8]* @hexdigits, i64 0, i64 %1029
  %1031 = load i8, i8* %1030, align 1
  %1032 = getelementptr inbounds i8, i8* %1027, i64 -1
  store i8 %1031, i8* %1027, align 1
  %1033 = lshr i32 %923, 4
  %1034 = and i32 %1033, 15
  %1035 = zext i32 %1034 to i64
  %1036 = getelementptr inbounds [16 x i8], [16 x i8]* @hexdigits, i64 0, i64 %1035
  %1037 = load i8, i8* %1036, align 1
  %1038 = getelementptr inbounds i8, i8* %1032, i64 -1
  store i8 %1037, i8* %1032, align 1
  %1039 = lshr i32 %923, 8
  %1040 = and i32 %1039, 15
  %1041 = zext i32 %1040 to i64
  %1042 = getelementptr inbounds [16 x i8], [16 x i8]* @hexdigits, i64 0, i64 %1041
  %1043 = load i8, i8* %1042, align 1
  %1044 = getelementptr inbounds i8, i8* %1038, i64 -1
  store i8 %1043, i8* %1038, align 1
  %1045 = lshr i32 %923, 12
  %1046 = and i32 %1045, 15
  %1047 = zext i32 %1046 to i64
  %1048 = getelementptr inbounds [16 x i8], [16 x i8]* @hexdigits, i64 0, i64 %1047
  %1049 = load i8, i8* %1048, align 1
  %1050 = getelementptr inbounds i8, i8* %1044, i64 -1
  store i8 %1049, i8* %1044, align 1
  %1051 = lshr i32 %923, 16
  %1052 = and i32 %1051, 15
  %1053 = zext i32 %1052 to i64
  %1054 = getelementptr inbounds [16 x i8], [16 x i8]* @hexdigits, i64 0, i64 %1053
  %1055 = load i8, i8* %1054, align 1
  %1056 = getelementptr inbounds i8, i8* %1050, i64 -1
  store i8 %1055, i8* %1050, align 1
  %1057 = lshr i32 %923, 20
  %1058 = and i32 %1057, 15
  %1059 = zext i32 %1058 to i64
  %1060 = getelementptr inbounds [16 x i8], [16 x i8]* @hexdigits, i64 0, i64 %1059
  %1061 = load i8, i8* %1060, align 1
  %1062 = getelementptr inbounds i8, i8* %1056, i64 -1
  store i8 %1061, i8* %1056, align 1
  %1063 = lshr i32 %923, 24
  %1064 = and i32 %1063, 15
  %1065 = zext i32 %1064 to i64
  %1066 = getelementptr inbounds [16 x i8], [16 x i8]* @hexdigits, i64 0, i64 %1065
  %1067 = load i8, i8* %1066, align 1
  %1068 = getelementptr inbounds i8, i8* %1062, i64 -1
  store i8 %1067, i8* %1062, align 1
  %1069 = lshr i32 %923, 28
  %1070 = zext i32 %1069 to i64
  %1071 = getelementptr inbounds [16 x i8], [16 x i8]* @hexdigits, i64 0, i64 %1070
  %1072 = load i8, i8* %1071, align 1
  %1073 = getelementptr inbounds i8, i8* %1068, i64 -1
  store i8 %1072, i8* %1068, align 1
  %1074 = and i32 %922, 15
  %1075 = zext i32 %1074 to i64
  %1076 = getelementptr inbounds [16 x i8], [16 x i8]* @hexdigits, i64 0, i64 %1075
  %1077 = load i8, i8* %1076, align 1
  %1078 = getelementptr inbounds i8, i8* %1073, i64 -1
  store i8 %1077, i8* %1073, align 1
  %1079 = lshr i32 %922, 4
  %1080 = and i32 %1079, 15
  %1081 = zext i32 %1080 to i64
  %1082 = getelementptr inbounds [16 x i8], [16 x i8]* @hexdigits, i64 0, i64 %1081
  %1083 = load i8, i8* %1082, align 1
  %1084 = getelementptr inbounds i8, i8* %1078, i64 -1
  store i8 %1083, i8* %1078, align 1
  %1085 = lshr i32 %922, 8
  %1086 = and i32 %1085, 15
  %1087 = zext i32 %1086 to i64
  %1088 = getelementptr inbounds [16 x i8], [16 x i8]* @hexdigits, i64 0, i64 %1087
  %1089 = load i8, i8* %1088, align 1
  %1090 = getelementptr inbounds i8, i8* %1084, i64 -1
  store i8 %1089, i8* %1084, align 1
  %1091 = lshr i32 %922, 12
  %1092 = and i32 %1091, 15
  %1093 = zext i32 %1092 to i64
  %1094 = getelementptr inbounds [16 x i8], [16 x i8]* @hexdigits, i64 0, i64 %1093
  %1095 = load i8, i8* %1094, align 1
  %1096 = getelementptr inbounds i8, i8* %1090, i64 -1
  store i8 %1095, i8* %1090, align 1
  %1097 = lshr i32 %922, 16
  %1098 = and i32 %1097, 15
  %1099 = zext i32 %1098 to i64
  %1100 = getelementptr inbounds [16 x i8], [16 x i8]* @hexdigits, i64 0, i64 %1099
  %1101 = load i8, i8* %1100, align 1
  %1102 = getelementptr inbounds i8, i8* %1096, i64 -1
  store i8 %1101, i8* %1096, align 1
  %1103 = lshr i32 %922, 20
  %1104 = and i32 %1103, 15
  %1105 = zext i32 %1104 to i64
  %1106 = getelementptr inbounds [16 x i8], [16 x i8]* @hexdigits, i64 0, i64 %1105
  %1107 = load i8, i8* %1106, align 1
  %1108 = getelementptr inbounds i8, i8* %1102, i64 -1
  store i8 %1107, i8* %1102, align 1
  %1109 = lshr i32 %922, 24
  %1110 = and i32 %1109, 15
  %1111 = zext i32 %1110 to i64
  %1112 = getelementptr inbounds [16 x i8], [16 x i8]* @hexdigits, i64 0, i64 %1111
  %1113 = load i8, i8* %1112, align 1
  %1114 = getelementptr inbounds i8, i8* %1108, i64 -1
  store i8 %1113, i8* %1108, align 1
  %1115 = lshr i32 %922, 28
  %1116 = zext i32 %1115 to i64
  %1117 = getelementptr inbounds [16 x i8], [16 x i8]* @hexdigits, i64 0, i64 %1116
  %1118 = load i8, i8* %1117, align 1
  store i8 %1118, i8* %1114, align 1
  br label %1119

1119:                                             ; preds = %39, %186, %214, %293, %327, %633, %873
  %1120 = phi i8* [ null, %327 ], [ %634, %873 ], [ %634, %633 ], [ null, %293 ], [ null, %186 ], [ null, %214 ], [ null, %39 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #17
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %33) #17
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %27) #17
  store i8* %1120, i8** %9, align 8
  br label %1207

1121:                                             ; preds = %12, %21
  %1122 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 10
  %1123 = load i16, i16* %1122, align 8
  %1124 = icmp eq i16 %1123, 0
  br i1 %1124, label %1207, label %1125

1125:                                             ; preds = %1121
  %1126 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 11, i32 3
  %1127 = load %struct.TT_NameRec_*, %struct.TT_NameRec_** %1126, align 8
  %1128 = zext i16 %1123 to i64
  br label %1129

1129:                                             ; preds = %1167, %1125
  %1130 = phi i32 [ -1, %1125 ], [ %1168, %1167 ]
  %1131 = phi i32 [ -1, %1125 ], [ %1169, %1167 ]
  %1132 = phi i64 [ 0, %1125 ], [ %1170, %1167 ]
  %1133 = getelementptr inbounds %struct.TT_NameRec_, %struct.TT_NameRec_* %1127, i64 %1132, i32 3
  %1134 = load i16, i16* %1133, align 2
  %1135 = icmp eq i16 %1134, 6
  br i1 %1135, label %1136, label %1167

1136:                                             ; preds = %1129
  %1137 = getelementptr inbounds %struct.TT_NameRec_, %struct.TT_NameRec_* %1127, i64 %1132, i32 4
  %1138 = load i16, i16* %1137, align 8
  %1139 = icmp eq i16 %1138, 0
  br i1 %1139, label %1167, label %1140

1140:                                             ; preds = %1136
  %1141 = getelementptr inbounds %struct.TT_NameRec_, %struct.TT_NameRec_* %1127, i64 %1132, i32 0
  %1142 = load i16, i16* %1141, align 8
  switch i16 %1142, label %1167 [
    i16 3, label %1143
    i16 1, label %1155
  ]

1143:                                             ; preds = %1140
  %1144 = getelementptr inbounds %struct.TT_NameRec_, %struct.TT_NameRec_* %1127, i64 %1132, i32 1
  %1145 = load i16, i16* %1144, align 2
  %1146 = icmp ult i16 %1145, 2
  br i1 %1146, label %1147, label %1167

1147:                                             ; preds = %1143
  %1148 = getelementptr inbounds %struct.TT_NameRec_, %struct.TT_NameRec_* %1127, i64 %1132, i32 2
  %1149 = load i16, i16* %1148, align 4
  %1150 = icmp eq i16 %1149, 1033
  %1151 = icmp eq i32 %1130, -1
  %1152 = or i1 %1151, %1150
  %1153 = trunc i64 %1132 to i32
  %1154 = select i1 %1152, i32 %1153, i32 %1130
  br label %1167

1155:                                             ; preds = %1140
  %1156 = getelementptr inbounds %struct.TT_NameRec_, %struct.TT_NameRec_* %1127, i64 %1132, i32 1
  %1157 = load i16, i16* %1156, align 2
  %1158 = icmp eq i16 %1157, 0
  br i1 %1158, label %1159, label %1167

1159:                                             ; preds = %1155
  %1160 = getelementptr inbounds %struct.TT_NameRec_, %struct.TT_NameRec_* %1127, i64 %1132, i32 2
  %1161 = load i16, i16* %1160, align 4
  %1162 = icmp eq i16 %1161, 0
  %1163 = icmp eq i32 %1131, -1
  %1164 = or i1 %1163, %1162
  %1165 = trunc i64 %1132 to i32
  %1166 = select i1 %1164, i32 %1165, i32 %1131
  br label %1167

1167:                                             ; preds = %1159, %1147, %1140, %1155, %1143, %1136, %1129
  %1168 = phi i32 [ %1130, %1136 ], [ %1130, %1155 ], [ %1130, %1143 ], [ %1130, %1129 ], [ %1130, %1140 ], [ %1154, %1147 ], [ %1130, %1159 ]
  %1169 = phi i32 [ %1131, %1136 ], [ %1131, %1155 ], [ %1131, %1143 ], [ %1131, %1129 ], [ %1131, %1140 ], [ %1131, %1147 ], [ %1166, %1159 ]
  %1170 = add nuw nsw i64 %1132, 1
  %1171 = icmp eq i64 %1170, %1128
  br i1 %1171, label %1172, label %1129

1172:                                             ; preds = %1167
  %1173 = icmp sgt i32 %1168, -1
  br i1 %1173, label %1181, label %1174

1174:                                             ; preds = %1172
  %1175 = icmp slt i32 %1169, 0
  br i1 %1175, label %1207, label %1176

1176:                                             ; preds = %1174
  %1177 = icmp eq i32 %1168, -1
  br i1 %1177, label %1190, label %1178

1178:                                             ; preds = %1176
  %1179 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 11, i32 3
  %1180 = load %struct.TT_NameRec_*, %struct.TT_NameRec_** %1179, align 8
  br label %1181

1181:                                             ; preds = %1178, %1172
  %1182 = phi %struct.TT_NameRec_* [ %1180, %1178 ], [ %1127, %1172 ]
  %1183 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 0, i32 25
  %1184 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %1183, align 8
  %1185 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 11, i32 6
  %1186 = load %struct.FT_StreamRec_*, %struct.FT_StreamRec_** %1185, align 8
  %1187 = sext i32 %1168 to i64
  %1188 = getelementptr inbounds %struct.TT_NameRec_, %struct.TT_NameRec_* %1182, i64 %1187
  %1189 = tail call fastcc i8* @get_win_string(%struct.FT_MemoryRec_* %1184, %struct.FT_StreamRec_* %1186, %struct.TT_NameRec_* %1188, i32 (i32)* nonnull @sfnt_is_postscript)
  br label %1190

1190:                                             ; preds = %1176, %1181
  %1191 = phi i8* [ %1189, %1181 ], [ null, %1176 ]
  %1192 = icmp eq i8* %1191, null
  %1193 = icmp ne i32 %1169, -1
  %1194 = and i1 %1193, %1192
  br i1 %1194, label %1195, label %1205

1195:                                             ; preds = %1190
  %1196 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 0, i32 25
  %1197 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %1196, align 8
  %1198 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 11, i32 6
  %1199 = load %struct.FT_StreamRec_*, %struct.FT_StreamRec_** %1198, align 8
  %1200 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %0, i64 0, i32 11, i32 3
  %1201 = load %struct.TT_NameRec_*, %struct.TT_NameRec_** %1200, align 8
  %1202 = sext i32 %1169 to i64
  %1203 = getelementptr inbounds %struct.TT_NameRec_, %struct.TT_NameRec_* %1201, i64 %1202
  %1204 = tail call fastcc i8* @get_apple_string(%struct.FT_MemoryRec_* %1197, %struct.FT_StreamRec_* %1199, %struct.TT_NameRec_* %1203, i32 (i32)* nonnull @sfnt_is_postscript)
  br label %1205

1205:                                             ; preds = %1190, %1195
  %1206 = phi i8* [ %1204, %1195 ], [ %1191, %1190 ]
  store i8* %1206, i8** %9, align 8
  br label %1207

1207:                                             ; preds = %1121, %1174, %1, %1205, %1119
  %1208 = phi i8* [ %1120, %1119 ], [ %1206, %1205 ], [ %10, %1 ], [ null, %1174 ], [ null, %1121 ]
  ret i8* %1208
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i8* @get_win_string(%struct.FT_MemoryRec_*, %struct.FT_StreamRec_*, %struct.TT_NameRec_* nocapture, i32 (i32)* nocapture) unnamed_addr #0 {
  %5 = alloca i32, align 4
  %6 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #17
  store i32 0, i32* %5, align 4
  %7 = getelementptr inbounds %struct.TT_NameRec_, %struct.TT_NameRec_* %2, i64 0, i32 4
  %8 = load i16, i16* %7, align 8
  %9 = lshr i16 %8, 1
  %10 = add nuw i16 %9, 1
  %11 = zext i16 %10 to i64
  %12 = call i8* @ft_mem_qalloc(%struct.FT_MemoryRec_* %0, i64 %11, i32* nonnull %5) #17
  %13 = load i32, i32* %5, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %57

15:                                               ; preds = %4
  %16 = getelementptr inbounds %struct.TT_NameRec_, %struct.TT_NameRec_* %2, i64 0, i32 5
  %17 = load i64, i64* %16, align 8
  %18 = call i32 @FT_Stream_Seek(%struct.FT_StreamRec_* %1, i64 %17) #17
  store i32 %18, i32* %5, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %54

20:                                               ; preds = %15
  %21 = load i16, i16* %7, align 8
  %22 = zext i16 %21 to i64
  %23 = call i32 @FT_Stream_EnterFrame(%struct.FT_StreamRec_* %1, i64 %22) #17
  store i32 %23, i32* %5, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %54

25:                                               ; preds = %20
  %26 = load i16, i16* %7, align 8
  %27 = lshr i16 %26, 1
  %28 = icmp eq i16 %27, 0
  br i1 %28, label %51, label %29

29:                                               ; preds = %25
  %30 = zext i16 %27 to i32
  %31 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %1, i64 0, i32 8
  %32 = load i8*, i8** %31, align 8
  br label %33

33:                                               ; preds = %29, %45
  %34 = phi i32 [ %48, %45 ], [ %30, %29 ]
  %35 = phi i8* [ %49, %45 ], [ %32, %29 ]
  %36 = phi i8* [ %47, %45 ], [ %12, %29 ]
  %37 = load i8, i8* %35, align 1
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %39, label %53

39:                                               ; preds = %33
  %40 = getelementptr inbounds i8, i8* %35, i64 1
  %41 = load i8, i8* %40, align 1
  %42 = sext i8 %41 to i32
  %43 = call i32 %3(i32 %42) #17, !callees !69
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %53, label %45

45:                                               ; preds = %39
  %46 = load i8, i8* %40, align 1
  %47 = getelementptr inbounds i8, i8* %36, i64 1
  store i8 %46, i8* %36, align 1
  %48 = add nsw i32 %34, -1
  %49 = getelementptr inbounds i8, i8* %35, i64 2
  %50 = icmp eq i32 %48, 0
  br i1 %50, label %51, label %33

51:                                               ; preds = %45, %25
  %52 = phi i8* [ %12, %25 ], [ %47, %45 ]
  store i8 0, i8* %52, align 1
  call void @FT_Stream_ExitFrame(%struct.FT_StreamRec_* %1) #17
  br label %57

53:                                               ; preds = %39, %33
  call void @FT_Stream_ExitFrame(%struct.FT_StreamRec_* %1) #17
  br label %54

54:                                               ; preds = %53, %20, %15
  call void @ft_mem_free(%struct.FT_MemoryRec_* %0, i8* %12) #17
  store i16 0, i16* %7, align 8
  store i64 0, i64* %16, align 8
  %55 = getelementptr inbounds %struct.TT_NameRec_, %struct.TT_NameRec_* %2, i64 0, i32 6
  %56 = load i8*, i8** %55, align 8
  call void @ft_mem_free(%struct.FT_MemoryRec_* %0, i8* %56) #17
  store i8* null, i8** %55, align 8
  br label %57

57:                                               ; preds = %51, %4, %54
  %58 = phi i8* [ null, %54 ], [ null, %4 ], [ %12, %51 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #17
  ret i8* %58
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal i32 @sfnt_is_postscript(i32) #4 {
  %2 = icmp ugt i32 %0, 127
  br i1 %2, label %12, label %3

3:                                                ; preds = %1
  %4 = lshr i32 %0, 3
  %5 = zext i32 %4 to i64
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* @sfnt_ps_map, i64 0, i64 %5
  %7 = load i8, i8* %6, align 1
  %8 = zext i8 %7 to i32
  %9 = and i32 %0, 7
  %10 = shl i32 1, %9
  %11 = and i32 %10, %8
  br label %12

12:                                               ; preds = %1, %3
  %13 = phi i32 [ %11, %3 ], [ 0, %1 ]
  ret i32 %13
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i8* @get_apple_string(%struct.FT_MemoryRec_*, %struct.FT_StreamRec_*, %struct.TT_NameRec_* nocapture, i32 (i32)* nocapture) unnamed_addr #0 {
  %5 = alloca i32, align 4
  %6 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #17
  store i32 0, i32* %5, align 4
  %7 = getelementptr inbounds %struct.TT_NameRec_, %struct.TT_NameRec_* %2, i64 0, i32 4
  %8 = load i16, i16* %7, align 8
  %9 = zext i16 %8 to i64
  %10 = add nuw nsw i64 %9, 1
  %11 = call i8* @ft_mem_qalloc(%struct.FT_MemoryRec_* %0, i64 %10, i32* nonnull %5) #17
  %12 = load i32, i32* %5, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %51

14:                                               ; preds = %4
  %15 = getelementptr inbounds %struct.TT_NameRec_, %struct.TT_NameRec_* %2, i64 0, i32 5
  %16 = load i64, i64* %15, align 8
  %17 = call i32 @FT_Stream_Seek(%struct.FT_StreamRec_* %1, i64 %16) #17
  store i32 %17, i32* %5, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %48

19:                                               ; preds = %14
  %20 = load i16, i16* %7, align 8
  %21 = zext i16 %20 to i64
  %22 = call i32 @FT_Stream_EnterFrame(%struct.FT_StreamRec_* %1, i64 %21) #17
  store i32 %22, i32* %5, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %48

24:                                               ; preds = %19
  %25 = load i16, i16* %7, align 8
  %26 = icmp eq i16 %25, 0
  br i1 %26, label %45, label %27

27:                                               ; preds = %24
  %28 = zext i16 %25 to i32
  %29 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %1, i64 0, i32 8
  %30 = load i8*, i8** %29, align 8
  br label %31

31:                                               ; preds = %27, %39
  %32 = phi i32 [ %42, %39 ], [ %28, %27 ]
  %33 = phi i8* [ %43, %39 ], [ %30, %27 ]
  %34 = phi i8* [ %41, %39 ], [ %11, %27 ]
  %35 = load i8, i8* %33, align 1
  %36 = sext i8 %35 to i32
  %37 = call i32 %3(i32 %36) #17, !callees !69
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %47, label %39

39:                                               ; preds = %31
  %40 = load i8, i8* %33, align 1
  %41 = getelementptr inbounds i8, i8* %34, i64 1
  store i8 %40, i8* %34, align 1
  %42 = add nsw i32 %32, -1
  %43 = getelementptr inbounds i8, i8* %33, i64 1
  %44 = icmp eq i32 %42, 0
  br i1 %44, label %45, label %31

45:                                               ; preds = %39, %24
  %46 = phi i8* [ %11, %24 ], [ %41, %39 ]
  store i8 0, i8* %46, align 1
  call void @FT_Stream_ExitFrame(%struct.FT_StreamRec_* %1) #17
  br label %51

47:                                               ; preds = %31
  call void @FT_Stream_ExitFrame(%struct.FT_StreamRec_* %1) #17
  br label %48

48:                                               ; preds = %47, %19, %14
  call void @ft_mem_free(%struct.FT_MemoryRec_* %0, i8* %11) #17
  store i64 0, i64* %15, align 8
  store i16 0, i16* %7, align 8
  %49 = getelementptr inbounds %struct.TT_NameRec_, %struct.TT_NameRec_* %2, i64 0, i32 6
  %50 = load i8*, i8** %49, align 8
  call void @ft_mem_free(%struct.FT_MemoryRec_* %0, i8* %50) #17
  store i8* null, i8** %49, align 8
  br label %51

51:                                               ; preds = %45, %4, %48
  %52 = phi i8* [ null, %48 ], [ null, %4 ], [ %11, %45 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #17
  ret i8* %52
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal i32 @sfnt_is_alphanumeric(i32) #4 {
  %2 = add i32 %0, -48
  %3 = icmp ult i32 %2, 10
  %4 = add i32 %0, -65
  %5 = icmp ult i32 %4, 26
  %6 = or i1 %3, %5
  br i1 %6, label %11, label %7

7:                                                ; preds = %1
  %8 = add i32 %0, -97
  %9 = icmp ult i32 %8, 26
  %10 = zext i1 %9 to i32
  br label %11

11:                                               ; preds = %7, %1
  %12 = phi i32 [ 1, %1 ], [ %10, %7 ]
  ret i32 %12
}

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #12

; Function Attrs: nofree nounwind
declare i8* @strcpy(i8* returned, i8* nocapture readonly) local_unnamed_addr #13

; Function Attrs: nounwind ssp uwtable
define internal i32 @sfnt_get_glyph_name(%struct.FT_FaceRec_*, i32, i8*, i32) #0 {
  %5 = alloca i8*, align 8
  %6 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #17
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %5, align 8
  %7 = bitcast %struct.FT_FaceRec_* %0 to %struct.TT_FaceRec_*
  %8 = call i32 @tt_face_get_ps_name(%struct.TT_FaceRec_* %7, i32 %1, i8** nonnull %5)
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %14

10:                                               ; preds = %4
  %11 = load i8*, i8** %5, align 8
  %12 = zext i32 %3 to i64
  %13 = tail call i32 @ft_mem_strcpyn(i8* %2, i8* %11, i64 %12) #17
  br label %14

14:                                               ; preds = %4, %10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #17
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @sfnt_get_name_index(%struct.FT_FaceRec_*, i8* nocapture readonly) #0 {
  %3 = alloca i8*, align 8
  %4 = bitcast %struct.FT_FaceRec_* %0 to %struct.TT_FaceRec_*
  %5 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 4
  %6 = load i64, i64* %5, align 8
  %7 = icmp slt i64 %6, 0
  br i1 %7, label %27, label %8

8:                                                ; preds = %2
  %9 = icmp ult i64 %6, 4294967295
  %10 = select i1 %9, i64 %6, i64 4294967295
  %11 = trunc i64 %10 to i32
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %27, label %13

13:                                               ; preds = %8
  %14 = bitcast i8** %3 to i8*
  br label %15

15:                                               ; preds = %13, %24
  %16 = phi i32 [ 0, %13 ], [ %25, %24 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #17
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %3, align 8
  %17 = call i32 @tt_face_get_ps_name(%struct.TT_FaceRec_* %4, i32 %16, i8** nonnull %3)
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %24

19:                                               ; preds = %15
  %20 = load i8*, i8** %3, align 8
  %21 = tail call i32 @strcmp(i8* %1, i8* %20) #20
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %24

23:                                               ; preds = %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #17
  br label %27

24:                                               ; preds = %15, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #17
  %25 = add nuw i32 %16, 1
  %26 = icmp ult i32 %25, %11
  br i1 %26, label %15, label %27

27:                                               ; preds = %24, %8, %23, %2
  %28 = phi i32 [ %16, %23 ], [ 0, %2 ], [ 0, %8 ], [ 0, %24 ]
  ret i32 %28
}

declare hidden i32 @ft_mem_strcpyn(i8*, i8*, i64) local_unnamed_addr #6

; Function Attrs: nofree nounwind readonly
declare i32 @strcmp(i8* nocapture, i8* nocapture) local_unnamed_addr #14

; Function Attrs: nounwind ssp uwtable
define internal i32 @tt_get_cmap_info(%struct.FT_CharMapRec_*, %struct.TT_CMapInfo_*) #0 {
  %3 = getelementptr inbounds %struct.FT_CharMapRec_, %struct.FT_CharMapRec_* %0, i64 1
  %4 = bitcast %struct.FT_CharMapRec_* %3 to %struct.TT_CMap_ClassRec_**
  %5 = load %struct.TT_CMap_ClassRec_*, %struct.TT_CMap_ClassRec_** %4, align 8
  %6 = getelementptr inbounds %struct.TT_CMap_ClassRec_, %struct.TT_CMap_ClassRec_* %5, i64 0, i32 3
  %7 = load i32 (%struct.FT_CharMapRec_*, %struct.TT_CMapInfo_*)*, i32 (%struct.FT_CharMapRec_*, %struct.TT_CMapInfo_*)** %6, align 8
  %8 = icmp eq i32 (%struct.FT_CharMapRec_*, %struct.TT_CMapInfo_*)* %7, null
  br i1 %8, label %11, label %9

9:                                                ; preds = %2
  %10 = tail call i32 %7(%struct.FT_CharMapRec_* %0, %struct.TT_CMapInfo_* %1) #17
  br label %11

11:                                               ; preds = %2, %9
  %12 = phi i32 [ %10, %9 ], [ 150, %2 ]
  ret i32 %12
}

declare hidden void @ft_validator_error(%struct.FT_ValidatorRec_*, i32) local_unnamed_addr #6

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal fastcc i32 @tt_cmap4_char_map_linear(%struct.TT_CMapRec_* nocapture readonly, i32* nocapture, i8 zeroext) unnamed_addr #3 {
  %4 = bitcast %struct.TT_CMapRec_* %0 to %struct.TT_FaceRec_**
  %5 = load %struct.TT_FaceRec_*, %struct.TT_FaceRec_** %4, align 8
  %6 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %5, i64 0, i32 14
  %7 = load i8*, i8** %6, align 8
  %8 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %5, i64 0, i32 15
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds i8, i8* %7, i64 %9
  %11 = getelementptr inbounds %struct.TT_CMapRec_, %struct.TT_CMapRec_* %0, i64 0, i32 1
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds i8, i8* %12, i64 6
  %14 = load i8, i8* %13, align 1
  %15 = zext i8 %14 to i32
  %16 = shl nuw nsw i32 %15, 8
  %17 = getelementptr inbounds i8, i8* %12, i64 7
  %18 = load i8, i8* %17, align 1
  %19 = and i8 %18, -2
  %20 = zext i8 %19 to i32
  %21 = or i32 %16, %20
  %22 = lshr exact i32 %21, 1
  %23 = icmp eq i32 %21, 0
  br i1 %23, label %158, label %24

24:                                               ; preds = %3
  %25 = load i32, i32* %1, align 4
  %26 = icmp ne i8 %2, 0
  %27 = zext i1 %26 to i32
  %28 = add i32 %25, %27
  %29 = icmp ugt i32 %28, 65535
  br i1 %29, label %158, label %30

30:                                               ; preds = %24
  %31 = zext i32 %21 to i64
  %32 = getelementptr inbounds i8, i8* %12, i64 16
  %33 = getelementptr inbounds i8, i8* %32, i64 %31
  %34 = getelementptr inbounds i8, i8* %12, i64 14
  %35 = add nsw i32 %22, -1
  %36 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %5, i64 0, i32 0, i32 4
  %37 = icmp eq i8 %2, 0
  br label %38

38:                                               ; preds = %30, %151
  %39 = phi i8* [ %33, %30 ], [ %51, %151 ]
  %40 = phi i8* [ %34, %30 ], [ %43, %151 ]
  %41 = phi i32 [ %28, %30 ], [ %74, %151 ]
  %42 = phi i32 [ 0, %30 ], [ %152, %151 ]
  %43 = getelementptr inbounds i8, i8* %40, i64 2
  %44 = load i8, i8* %40, align 1
  %45 = zext i8 %44 to i32
  %46 = shl nuw nsw i32 %45, 8
  %47 = getelementptr inbounds i8, i8* %40, i64 1
  %48 = load i8, i8* %47, align 1
  %49 = zext i8 %48 to i32
  %50 = or i32 %46, %49
  %51 = getelementptr inbounds i8, i8* %39, i64 2
  %52 = load i8, i8* %39, align 1
  %53 = zext i8 %52 to i32
  %54 = shl nuw nsw i32 %53, 8
  %55 = getelementptr inbounds i8, i8* %39, i64 1
  %56 = load i8, i8* %55, align 1
  %57 = zext i8 %56 to i32
  %58 = or i32 %54, %57
  %59 = icmp uge i32 %41, %58
  %60 = or i1 %26, %59
  br i1 %60, label %61, label %154

61:                                               ; preds = %38
  %62 = select i1 %59, i32 %41, i32 %58
  %63 = getelementptr inbounds i8, i8* %39, i64 %31
  %64 = getelementptr inbounds i8, i8* %63, i64 1
  %65 = getelementptr inbounds i8, i8* %63, i64 %31
  %66 = getelementptr inbounds i8, i8* %65, i64 1
  %67 = icmp uge i32 %42, %35
  %68 = icmp eq i32 %58, 65535
  %69 = and i1 %67, %68
  %70 = icmp eq i32 %50, 65535
  %71 = and i1 %70, %69
  %72 = getelementptr inbounds i8, i8* %65, i64 2
  br label %73

73:                                               ; preds = %61, %148
  %74 = phi i32 [ %150, %148 ], [ %62, %61 ]
  %75 = icmp ugt i32 %74, %50
  br i1 %75, label %151, label %76

76:                                               ; preds = %73
  %77 = load i8, i8* %63, align 1
  %78 = zext i8 %77 to i16
  %79 = shl nuw i16 %78, 8
  %80 = load i8, i8* %64, align 1
  %81 = zext i8 %80 to i16
  %82 = or i16 %79, %81
  %83 = sext i16 %82 to i32
  %84 = load i8, i8* %65, align 1
  %85 = zext i8 %84 to i32
  %86 = shl nuw nsw i32 %85, 8
  %87 = load i8, i8* %66, align 1
  %88 = zext i8 %87 to i32
  %89 = or i32 %86, %88
  %90 = icmp ne i32 %89, 0
  %91 = and i1 %71, %90
  br i1 %91, label %92, label %96

92:                                               ; preds = %76
  %93 = zext i32 %89 to i64
  %94 = getelementptr inbounds i8, i8* %72, i64 %93
  %95 = icmp ugt i8* %94, %10
  br i1 %95, label %122, label %96

96:                                               ; preds = %92, %76
  %97 = trunc i32 %89 to i16
  switch i16 %97, label %98 [
    i16 -1, label %151
    i16 0, label %122
  ]

98:                                               ; preds = %96
  %99 = sub i32 %74, %58
  %100 = shl i32 %99, 1
  %101 = add i32 %89, %100
  %102 = zext i32 %101 to i64
  %103 = getelementptr inbounds i8, i8* %65, i64 %102
  %104 = icmp ugt i8* %103, %10
  %105 = and i1 %26, %104
  br i1 %105, label %151, label %106

106:                                              ; preds = %98
  %107 = load i8, i8* %103, align 1
  %108 = zext i8 %107 to i32
  %109 = shl nuw nsw i32 %108, 8
  %110 = getelementptr inbounds i8, i8* %103, i64 1
  %111 = load i8, i8* %110, align 1
  %112 = zext i8 %111 to i32
  %113 = or i32 %109, %112
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %143, label %115

115:                                              ; preds = %106
  %116 = add nsw i32 %113, %83
  %117 = and i32 %116, 65535
  %118 = load i64, i64* %36, align 8
  %119 = trunc i64 %118 to i32
  %120 = icmp ult i32 %117, %119
  %121 = select i1 %120, i32 %117, i32 0
  br label %143

122:                                              ; preds = %92, %96
  %123 = phi i32 [ %83, %96 ], [ 1, %92 ]
  %124 = add nsw i32 %123, %74
  %125 = and i32 %124, 65535
  br i1 %37, label %154, label %126

126:                                              ; preds = %122
  %127 = load i64, i64* %36, align 8
  %128 = trunc i64 %127 to i32
  %129 = icmp ult i32 %125, %128
  br i1 %129, label %143, label %130

130:                                              ; preds = %126
  %131 = icmp slt i32 %124, 0
  %132 = add nsw i32 %123, %50
  %133 = icmp sgt i32 %132, -1
  %134 = and i1 %131, %133
  br i1 %134, label %135, label %137

135:                                              ; preds = %130
  %136 = sub nsw i32 0, %123
  br label %143

137:                                              ; preds = %130
  %138 = icmp slt i32 %124, 65536
  %139 = icmp sgt i32 %132, 65535
  %140 = and i1 %138, %139
  br i1 %140, label %141, label %151

141:                                              ; preds = %137
  %142 = sub nsw i32 65536, %123
  br label %143

143:                                              ; preds = %106, %126, %141, %135, %115
  %144 = phi i32 [ %74, %115 ], [ %74, %106 ], [ %136, %135 ], [ %142, %141 ], [ %74, %126 ]
  %145 = phi i32 [ %121, %115 ], [ 0, %106 ], [ 0, %135 ], [ 0, %141 ], [ %125, %126 ]
  %146 = icmp ne i32 %145, 0
  %147 = or i1 %37, %146
  br i1 %147, label %154, label %148

148:                                              ; preds = %143
  %149 = icmp ugt i32 %144, 65534
  %150 = add i32 %144, 1
  br i1 %149, label %154, label %73

151:                                              ; preds = %137, %98, %96, %73
  %152 = add nuw nsw i32 %42, 1
  %153 = icmp ult i32 %152, %22
  br i1 %153, label %38, label %154

154:                                              ; preds = %151, %38, %148, %122, %143
  %155 = phi i32 [ %144, %148 ], [ %74, %122 ], [ %144, %143 ], [ %74, %151 ], [ %41, %38 ]
  %156 = phi i32 [ 0, %148 ], [ %125, %122 ], [ %145, %143 ], [ 0, %38 ], [ 0, %151 ]
  br i1 %26, label %157, label %158

157:                                              ; preds = %154
  store i32 %155, i32* %1, align 4
  br label %158

158:                                              ; preds = %154, %157, %24, %3
  %159 = phi i32 [ 0, %3 ], [ 0, %24 ], [ %156, %157 ], [ %156, %154 ]
  ret i32 %159
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal fastcc i32 @tt_cmap4_char_map_binary(%struct.TT_CMapRec_* nocapture, i32* nocapture, i8 zeroext) unnamed_addr #3 {
  %4 = bitcast %struct.TT_CMapRec_* %0 to %struct.TT_FaceRec_**
  %5 = load %struct.TT_FaceRec_*, %struct.TT_FaceRec_** %4, align 8
  %6 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %5, i64 0, i32 14
  %7 = load i8*, i8** %6, align 8
  %8 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %5, i64 0, i32 15
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds i8, i8* %7, i64 %9
  %11 = getelementptr inbounds %struct.TT_CMapRec_, %struct.TT_CMapRec_* %0, i64 0, i32 1
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds i8, i8* %12, i64 6
  %14 = load i8, i8* %13, align 1
  %15 = zext i8 %14 to i32
  %16 = shl nuw nsw i32 %15, 8
  %17 = getelementptr inbounds i8, i8* %12, i64 7
  %18 = load i8, i8* %17, align 1
  %19 = and i8 %18, -2
  %20 = zext i8 %19 to i32
  %21 = or i32 %16, %20
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %546, label %23

23:                                               ; preds = %3
  %24 = load i32, i32* %1, align 4
  %25 = lshr exact i32 %21, 1
  %26 = icmp ne i8 %2, 0
  %27 = zext i1 %26 to i32
  %28 = add i32 %24, %27
  %29 = getelementptr inbounds i8, i8* %12, i64 14
  %30 = add nuw nsw i32 %21, 2
  %31 = zext i32 %30 to i64
  br label %32

32:                                               ; preds = %23, %419
  %33 = phi i32 [ 0, %23 ], [ %421, %419 ]
  %34 = phi i32 [ %25, %23 ], [ %420, %419 ]
  %35 = add i32 %33, %34
  %36 = lshr i32 %35, 1
  %37 = and i32 %35, -2
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds i8, i8* %29, i64 %38
  %40 = load i8, i8* %39, align 1
  %41 = zext i8 %40 to i32
  %42 = shl nuw nsw i32 %41, 8
  %43 = getelementptr inbounds i8, i8* %39, i64 1
  %44 = load i8, i8* %43, align 1
  %45 = zext i8 %44 to i32
  %46 = or i32 %42, %45
  %47 = getelementptr inbounds i8, i8* %39, i64 %31
  %48 = load i8, i8* %47, align 1
  %49 = zext i8 %48 to i32
  %50 = shl nuw nsw i32 %49, 8
  %51 = getelementptr inbounds i8, i8* %47, i64 1
  %52 = load i8, i8* %51, align 1
  %53 = zext i8 %52 to i32
  %54 = or i32 %50, %53
  %55 = icmp ult i32 %28, %54
  br i1 %55, label %419, label %56

56:                                               ; preds = %32
  %57 = icmp ugt i32 %28, %46
  br i1 %57, label %58, label %60

58:                                               ; preds = %56
  %59 = add nuw i32 %36, 1
  br label %419

60:                                               ; preds = %56
  %61 = zext i32 %21 to i64
  %62 = getelementptr inbounds i8, i8* %47, i64 %61
  %63 = load i8, i8* %62, align 1
  %64 = zext i8 %63 to i16
  %65 = shl nuw i16 %64, 8
  %66 = getelementptr inbounds i8, i8* %62, i64 1
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i16
  %69 = or i16 %65, %68
  %70 = sext i16 %69 to i32
  %71 = getelementptr inbounds i8, i8* %62, i64 %61
  %72 = load i8, i8* %71, align 1
  %73 = zext i8 %72 to i32
  %74 = shl nuw nsw i32 %73, 8
  %75 = getelementptr inbounds i8, i8* %71, i64 1
  %76 = load i8, i8* %75, align 1
  %77 = zext i8 %76 to i32
  %78 = or i32 %74, %77
  %79 = add nsw i32 %25, -1
  %80 = icmp uge i32 %36, %79
  %81 = icmp eq i32 %54, 65535
  %82 = and i1 %80, %81
  %83 = icmp eq i32 %46, 65535
  %84 = and i1 %83, %82
  %85 = icmp ne i32 %78, 0
  %86 = and i1 %84, %85
  br i1 %86, label %87, label %94

87:                                               ; preds = %60
  %88 = zext i32 %78 to i64
  %89 = getelementptr inbounds i8, i8* %71, i64 %88
  %90 = getelementptr inbounds i8, i8* %89, i64 2
  %91 = icmp ugt i8* %90, %10
  %92 = select i1 %91, i32 0, i32 %78
  %93 = select i1 %91, i32 1, i32 %70
  br label %94

94:                                               ; preds = %87, %60
  %95 = phi i32 [ %78, %60 ], [ %92, %87 ]
  %96 = phi i32 [ %70, %60 ], [ %93, %87 ]
  %97 = getelementptr inbounds %struct.TT_CMapRec_, %struct.TT_CMapRec_* %0, i64 0, i32 2
  %98 = load i32, i32* %97, align 8
  %99 = and i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = icmp eq i32 %95, 65535
  br i1 %100, label %363, label %102

102:                                              ; preds = %94
  %103 = add nuw i32 %36, 1
  %104 = select i1 %101, i32 %103, i32 %36
  %105 = icmp eq i32 %36, 0
  br i1 %105, label %197, label %106

106:                                              ; preds = %102
  %107 = zext i32 %36 to i64
  %108 = add nsw i32 %36, -1
  %109 = shl i32 %108, 1
  %110 = zext i32 %109 to i64
  %111 = getelementptr inbounds i8, i8* %29, i64 %110
  %112 = load i8, i8* %111, align 1
  %113 = zext i8 %112 to i32
  %114 = shl nuw nsw i32 %113, 8
  %115 = getelementptr inbounds i8, i8* %111, i64 1
  %116 = load i8, i8* %115, align 1
  %117 = zext i8 %116 to i32
  %118 = or i32 %114, %117
  %119 = icmp ugt i32 %28, %118
  br i1 %119, label %172, label %120

120:                                              ; preds = %106
  %121 = getelementptr inbounds i8, i8* %29, i64 %31
  br label %136

122:                                              ; preds = %136
  %123 = trunc i64 %155 to i32
  %124 = add nsw i32 %123, -1
  %125 = shl i32 %124, 1
  %126 = zext i32 %125 to i64
  %127 = getelementptr inbounds i8, i8* %29, i64 %126
  %128 = load i8, i8* %127, align 1
  %129 = zext i8 %128 to i32
  %130 = shl nuw nsw i32 %129, 8
  %131 = getelementptr inbounds i8, i8* %127, i64 1
  %132 = load i8, i8* %131, align 1
  %133 = zext i8 %132 to i32
  %134 = or i32 %130, %133
  %135 = icmp ugt i32 %28, %134
  br i1 %135, label %156, label %136

136:                                              ; preds = %120, %122
  %137 = phi i32 [ %134, %122 ], [ %118, %120 ]
  %138 = phi i64 [ %126, %122 ], [ %110, %120 ]
  %139 = phi i32 [ %124, %122 ], [ %108, %120 ]
  %140 = phi i32 [ %153, %122 ], [ %104, %120 ]
  %141 = phi i64 [ %155, %122 ], [ %107, %120 ]
  %142 = getelementptr inbounds i8, i8* %121, i64 %138
  %143 = getelementptr inbounds i8, i8* %142, i64 %61
  %144 = getelementptr inbounds i8, i8* %143, i64 %61
  %145 = load i8, i8* %144, align 1
  %146 = zext i8 %145 to i32
  %147 = shl nuw nsw i32 %146, 8
  %148 = getelementptr inbounds i8, i8* %144, i64 1
  %149 = load i8, i8* %148, align 1
  %150 = zext i8 %149 to i32
  %151 = or i32 %147, %150
  %152 = icmp eq i32 %151, 65535
  %153 = select i1 %152, i32 %140, i32 %139
  %154 = icmp eq i32 %139, 0
  %155 = add nsw i64 %141, -1
  br i1 %154, label %181, label %122

156:                                              ; preds = %122
  %157 = load i8, i8* %142, align 1
  %158 = zext i8 %157 to i32
  %159 = shl nuw nsw i32 %158, 8
  %160 = getelementptr inbounds i8, i8* %142, i64 1
  %161 = load i8, i8* %160, align 1
  %162 = zext i8 %161 to i32
  %163 = or i32 %159, %162
  %164 = load i8, i8* %143, align 1
  %165 = zext i8 %164 to i16
  %166 = shl nuw i16 %165, 8
  %167 = getelementptr inbounds i8, i8* %143, i64 1
  %168 = load i8, i8* %167, align 1
  %169 = zext i8 %168 to i16
  %170 = or i16 %166, %169
  %171 = sext i16 %170 to i32
  br label %172

172:                                              ; preds = %156, %106
  %173 = phi i64 [ %107, %106 ], [ %155, %156 ]
  %174 = phi i8* [ %71, %106 ], [ %144, %156 ]
  %175 = phi i32 [ %104, %106 ], [ %153, %156 ]
  %176 = phi i32 [ %96, %106 ], [ %171, %156 ]
  %177 = phi i32 [ %95, %106 ], [ %151, %156 ]
  %178 = phi i32 [ %46, %106 ], [ %137, %156 ]
  %179 = phi i32 [ %54, %106 ], [ %163, %156 ]
  %180 = trunc i64 %173 to i32
  br label %197

181:                                              ; preds = %136
  %182 = load i8, i8* %142, align 1
  %183 = zext i8 %182 to i32
  %184 = shl nuw nsw i32 %183, 8
  %185 = getelementptr inbounds i8, i8* %142, i64 1
  %186 = load i8, i8* %185, align 1
  %187 = zext i8 %186 to i32
  %188 = or i32 %184, %187
  %189 = load i8, i8* %143, align 1
  %190 = zext i8 %189 to i16
  %191 = shl nuw i16 %190, 8
  %192 = getelementptr inbounds i8, i8* %143, i64 1
  %193 = load i8, i8* %192, align 1
  %194 = zext i8 %193 to i16
  %195 = or i16 %191, %194
  %196 = sext i16 %195 to i32
  br label %197

197:                                              ; preds = %181, %172, %102
  %198 = phi i32 [ %54, %102 ], [ %179, %172 ], [ %188, %181 ]
  %199 = phi i32 [ %46, %102 ], [ %178, %172 ], [ %137, %181 ]
  %200 = phi i32 [ %95, %102 ], [ %177, %172 ], [ %151, %181 ]
  %201 = phi i32 [ %96, %102 ], [ %176, %172 ], [ %196, %181 ]
  %202 = phi i32 [ %104, %102 ], [ %175, %172 ], [ %153, %181 ]
  %203 = phi i8* [ %71, %102 ], [ %174, %172 ], [ %144, %181 ]
  %204 = phi i32 [ 0, %102 ], [ %180, %172 ], [ 0, %181 ]
  %205 = icmp eq i32 %202, %103
  br i1 %205, label %206, label %318

206:                                              ; preds = %197
  %207 = icmp eq i32 %204, %36
  %208 = select i1 %207, i32 %199, i32 %46
  %209 = icmp ult i32 %103, %25
  br i1 %209, label %210, label %423

210:                                              ; preds = %206
  %211 = select i1 %207, i32 %201, i32 %70
  %212 = select i1 %207, i32 %200, i32 %78
  %213 = select i1 %207, i32 %198, i32 %54
  %214 = add nuw i32 %36, 1
  %215 = zext i32 %214 to i64
  %216 = zext i32 %25 to i64
  %217 = shl nuw nsw i64 %215, 1
  %218 = and i64 %217, 4294967294
  %219 = getelementptr inbounds i8, i8* %29, i64 %218
  %220 = getelementptr inbounds i8, i8* %219, i64 %31
  %221 = load i8, i8* %220, align 1
  %222 = zext i8 %221 to i32
  %223 = shl nuw nsw i32 %222, 8
  %224 = getelementptr inbounds i8, i8* %220, i64 1
  %225 = load i8, i8* %224, align 1
  %226 = zext i8 %225 to i32
  %227 = or i32 %223, %226
  %228 = icmp ult i32 %28, %227
  br i1 %228, label %283, label %229

229:                                              ; preds = %210
  %230 = getelementptr inbounds i8, i8* %29, i64 %31
  %231 = getelementptr inbounds i8, i8* %230, i64 %61
  br label %245

232:                                              ; preds = %245
  %233 = shl i64 %264, 1
  %234 = and i64 %233, 4294967294
  %235 = getelementptr inbounds i8, i8* %29, i64 %234
  %236 = getelementptr inbounds i8, i8* %235, i64 %31
  %237 = load i8, i8* %236, align 1
  %238 = zext i8 %237 to i32
  %239 = shl nuw nsw i32 %238, 8
  %240 = getelementptr inbounds i8, i8* %236, i64 1
  %241 = load i8, i8* %240, align 1
  %242 = zext i8 %241 to i32
  %243 = or i32 %239, %242
  %244 = icmp ult i32 %28, %243
  br i1 %244, label %267, label %245

245:                                              ; preds = %229, %232
  %246 = phi i32 [ %243, %232 ], [ %227, %229 ]
  %247 = phi i64 [ %234, %232 ], [ %218, %229 ]
  %248 = phi i8* [ %235, %232 ], [ %219, %229 ]
  %249 = phi i32 [ %263, %232 ], [ %36, %229 ]
  %250 = phi i32 [ %265, %232 ], [ %103, %229 ]
  %251 = phi i64 [ %264, %232 ], [ %215, %229 ]
  %252 = trunc i64 %251 to i32
  %253 = getelementptr inbounds i8, i8* %231, i64 %247
  %254 = getelementptr inbounds i8, i8* %253, i64 %61
  %255 = load i8, i8* %254, align 1
  %256 = zext i8 %255 to i32
  %257 = shl nuw nsw i32 %256, 8
  %258 = getelementptr inbounds i8, i8* %254, i64 1
  %259 = load i8, i8* %258, align 1
  %260 = zext i8 %259 to i32
  %261 = or i32 %257, %260
  %262 = icmp eq i32 %261, 65535
  %263 = select i1 %262, i32 %249, i32 %252
  %264 = add i64 %251, 1
  %265 = add nuw i32 %250, 1
  %266 = icmp eq i64 %264, %216
  br i1 %266, label %292, label %232

267:                                              ; preds = %232
  %268 = load i8, i8* %248, align 1
  %269 = zext i8 %268 to i32
  %270 = shl nuw nsw i32 %269, 8
  %271 = getelementptr inbounds i8, i8* %248, i64 1
  %272 = load i8, i8* %271, align 1
  %273 = zext i8 %272 to i32
  %274 = or i32 %270, %273
  %275 = load i8, i8* %253, align 1
  %276 = zext i8 %275 to i16
  %277 = shl nuw i16 %276, 8
  %278 = getelementptr inbounds i8, i8* %253, i64 1
  %279 = load i8, i8* %278, align 1
  %280 = zext i8 %279 to i16
  %281 = or i16 %277, %280
  %282 = sext i16 %281 to i32
  br label %283

283:                                              ; preds = %267, %210
  %284 = phi i64 [ %215, %210 ], [ %264, %267 ]
  %285 = phi i32 [ %36, %210 ], [ %263, %267 ]
  %286 = phi i32 [ %211, %210 ], [ %282, %267 ]
  %287 = phi i32 [ %212, %210 ], [ %261, %267 ]
  %288 = phi i32 [ %208, %210 ], [ %274, %267 ]
  %289 = phi i32 [ %213, %210 ], [ %246, %267 ]
  %290 = phi i8* [ %220, %210 ], [ %236, %267 ]
  %291 = trunc i64 %284 to i32
  br label %308

292:                                              ; preds = %245
  %293 = load i8, i8* %248, align 1
  %294 = zext i8 %293 to i32
  %295 = shl nuw nsw i32 %294, 8
  %296 = getelementptr inbounds i8, i8* %248, i64 1
  %297 = load i8, i8* %296, align 1
  %298 = zext i8 %297 to i32
  %299 = or i32 %295, %298
  %300 = load i8, i8* %253, align 1
  %301 = zext i8 %300 to i16
  %302 = shl nuw i16 %301, 8
  %303 = getelementptr inbounds i8, i8* %253, i64 1
  %304 = load i8, i8* %303, align 1
  %305 = zext i8 %304 to i16
  %306 = or i16 %302, %305
  %307 = sext i16 %306 to i32
  br label %308

308:                                              ; preds = %292, %283
  %309 = phi i32 [ %289, %283 ], [ %246, %292 ]
  %310 = phi i32 [ %288, %283 ], [ %299, %292 ]
  %311 = phi i32 [ %287, %283 ], [ %261, %292 ]
  %312 = phi i32 [ %286, %283 ], [ %307, %292 ]
  %313 = phi i32 [ %285, %283 ], [ %263, %292 ]
  %314 = phi i32 [ %291, %283 ], [ %265, %292 ]
  %315 = phi i8* [ %290, %283 ], [ %254, %292 ]
  %316 = add i32 %314, -1
  %317 = icmp eq i32 %313, %36
  br i1 %317, label %423, label %318

318:                                              ; preds = %308, %197
  %319 = phi i32 [ %309, %308 ], [ %198, %197 ]
  %320 = phi i32 [ %310, %308 ], [ %199, %197 ]
  %321 = phi i32 [ %311, %308 ], [ %200, %197 ]
  %322 = phi i32 [ %312, %308 ], [ %201, %197 ]
  %323 = phi i32 [ %313, %308 ], [ %202, %197 ]
  %324 = phi i8* [ %315, %308 ], [ %203, %197 ]
  %325 = phi i32 [ %316, %308 ], [ %204, %197 ]
  %326 = icmp eq i32 %323, %325
  br i1 %326, label %364, label %327

327:                                              ; preds = %318
  %328 = shl i32 %323, 1
  %329 = zext i32 %328 to i64
  %330 = getelementptr inbounds i8, i8* %29, i64 %329
  %331 = load i8, i8* %330, align 1
  %332 = zext i8 %331 to i32
  %333 = shl nuw nsw i32 %332, 8
  %334 = getelementptr inbounds i8, i8* %330, i64 1
  %335 = load i8, i8* %334, align 1
  %336 = zext i8 %335 to i32
  %337 = or i32 %333, %336
  %338 = getelementptr inbounds i8, i8* %330, i64 %31
  %339 = load i8, i8* %338, align 1
  %340 = zext i8 %339 to i32
  %341 = shl nuw nsw i32 %340, 8
  %342 = getelementptr inbounds i8, i8* %338, i64 1
  %343 = load i8, i8* %342, align 1
  %344 = zext i8 %343 to i32
  %345 = or i32 %341, %344
  %346 = getelementptr inbounds i8, i8* %338, i64 %61
  %347 = load i8, i8* %346, align 1
  %348 = zext i8 %347 to i16
  %349 = shl nuw i16 %348, 8
  %350 = getelementptr inbounds i8, i8* %346, i64 1
  %351 = load i8, i8* %350, align 1
  %352 = zext i8 %351 to i16
  %353 = or i16 %349, %352
  %354 = sext i16 %353 to i32
  %355 = getelementptr inbounds i8, i8* %346, i64 %61
  %356 = load i8, i8* %355, align 1
  %357 = zext i8 %356 to i32
  %358 = shl nuw nsw i32 %357, 8
  %359 = getelementptr inbounds i8, i8* %355, i64 1
  %360 = load i8, i8* %359, align 1
  %361 = zext i8 %360 to i32
  %362 = or i32 %358, %361
  br label %364

363:                                              ; preds = %94
  br i1 %101, label %423, label %364

364:                                              ; preds = %327, %318, %363
  %365 = phi i32 [ %54, %363 ], [ %319, %318 ], [ %345, %327 ]
  %366 = phi i32 [ %46, %363 ], [ %320, %318 ], [ %337, %327 ]
  %367 = phi i32 [ %95, %363 ], [ %321, %318 ], [ %362, %327 ]
  %368 = phi i32 [ %96, %363 ], [ %322, %318 ], [ %354, %327 ]
  %369 = phi i32 [ %36, %363 ], [ %323, %318 ], [ %323, %327 ]
  %370 = phi i8* [ %71, %363 ], [ %324, %318 ], [ %355, %327 ]
  %371 = icmp eq i32 %367, 0
  br i1 %371, label %397, label %372

372:                                              ; preds = %364
  %373 = sub i32 %28, %365
  %374 = shl i32 %373, 1
  %375 = add i32 %367, %374
  %376 = zext i32 %375 to i64
  %377 = getelementptr inbounds i8, i8* %370, i64 %376
  %378 = icmp ugt i8* %377, %10
  %379 = and i1 %26, %378
  br i1 %379, label %423, label %380

380:                                              ; preds = %372
  %381 = load i8, i8* %377, align 1
  %382 = zext i8 %381 to i32
  %383 = shl nuw nsw i32 %382, 8
  %384 = getelementptr inbounds i8, i8* %377, i64 1
  %385 = load i8, i8* %384, align 1
  %386 = zext i8 %385 to i32
  %387 = or i32 %383, %386
  %388 = icmp eq i32 %387, 0
  br i1 %388, label %423, label %389

389:                                              ; preds = %380
  %390 = add nsw i32 %387, %368
  %391 = and i32 %390, 65535
  %392 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %5, i64 0, i32 0, i32 4
  %393 = load i64, i64* %392, align 8
  %394 = trunc i64 %393 to i32
  %395 = icmp ult i32 %391, %394
  %396 = select i1 %395, i32 %391, i32 0
  br label %423

397:                                              ; preds = %364
  %398 = add nsw i32 %368, %28
  %399 = and i32 %398, 65535
  %400 = icmp eq i8 %2, 0
  br i1 %400, label %423, label %401

401:                                              ; preds = %397
  %402 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %5, i64 0, i32 0, i32 4
  %403 = load i64, i64* %402, align 8
  %404 = trunc i64 %403 to i32
  %405 = icmp ult i32 %399, %404
  br i1 %405, label %423, label %406

406:                                              ; preds = %401
  %407 = icmp slt i32 %398, 0
  %408 = add nsw i32 %368, %366
  %409 = icmp sgt i32 %408, -1
  %410 = and i1 %407, %409
  br i1 %410, label %411, label %413

411:                                              ; preds = %406
  %412 = sub nsw i32 0, %368
  br label %423

413:                                              ; preds = %406
  %414 = icmp slt i32 %398, 65536
  %415 = icmp sgt i32 %408, 65535
  %416 = and i1 %414, %415
  %417 = sub i32 65536, %368
  %418 = select i1 %416, i32 %417, i32 %28
  br label %423

419:                                              ; preds = %32, %58
  %420 = phi i32 [ %34, %58 ], [ %36, %32 ]
  %421 = phi i32 [ %59, %58 ], [ %33, %32 ]
  %422 = icmp ult i32 %421, %420
  br i1 %422, label %32, label %423

423:                                              ; preds = %419, %206, %308, %413, %372, %380, %401, %397, %389, %411, %363
  %424 = phi i32 [ %366, %389 ], [ %366, %380 ], [ %366, %411 ], [ %366, %401 ], [ %366, %397 ], [ %46, %363 ], [ %366, %372 ], [ %366, %413 ], [ %310, %308 ], [ %208, %206 ], [ %46, %419 ]
  %425 = phi i32 [ %369, %389 ], [ %369, %380 ], [ %369, %411 ], [ %369, %401 ], [ %369, %397 ], [ %36, %363 ], [ %369, %372 ], [ %369, %413 ], [ %316, %308 ], [ %36, %206 ], [ %36, %419 ]
  %426 = phi i32 [ %28, %389 ], [ %28, %380 ], [ %412, %411 ], [ %28, %401 ], [ %28, %397 ], [ %28, %363 ], [ %28, %372 ], [ %418, %413 ], [ %28, %308 ], [ %28, %206 ], [ %28, %419 ]
  %427 = phi i32 [ %396, %389 ], [ 0, %380 ], [ 0, %411 ], [ %399, %401 ], [ %399, %397 ], [ 0, %363 ], [ 0, %372 ], [ 0, %413 ], [ 0, %308 ], [ 0, %206 ], [ 0, %419 ]
  br i1 %26, label %428, label %546

428:                                              ; preds = %423
  %429 = bitcast %struct.TT_CMapRec_* %0 to %struct.TT_CMap4Rec_*
  %430 = icmp ugt i32 %426, %424
  br i1 %430, label %431, label %434

431:                                              ; preds = %428
  %432 = add i32 %425, 1
  %433 = icmp eq i32 %432, %25
  br i1 %433, label %546, label %434

434:                                              ; preds = %431, %428
  %435 = phi i32 [ %432, %431 ], [ %425, %428 ]
  %436 = getelementptr inbounds %struct.TT_CMapRec_, %struct.TT_CMapRec_* %0, i64 1, i32 0, i32 0, i32 1
  %437 = load i32, i32* %436, align 8
  %438 = icmp ugt i32 %437, %435
  br i1 %438, label %439, label %522

439:                                              ; preds = %434
  %440 = getelementptr inbounds i8, i8* %12, i64 14
  %441 = getelementptr inbounds %struct.TT_CMap4Rec_, %struct.TT_CMap4Rec_* %429, i64 0, i32 6
  %442 = shl i32 %437, 1
  %443 = add i32 %442, 2
  %444 = zext i32 %443 to i64
  %445 = getelementptr inbounds %struct.TT_CMapRec_, %struct.TT_CMapRec_* %0, i64 1, i32 0, i32 1
  %446 = bitcast %struct.FT_CMap_ClassRec_** %445 to i32*
  %447 = zext i32 %442 to i64
  %448 = getelementptr inbounds %struct.TT_CMapRec_, %struct.TT_CMapRec_* %0, i64 1, i32 1
  %449 = bitcast i8** %448 to i32*
  %450 = add i32 %437, -1
  %451 = zext i32 %435 to i64
  %452 = zext i32 %450 to i64
  br label %453

453:                                              ; preds = %518, %439
  %454 = phi i64 [ %451, %439 ], [ %519, %518 ]
  %455 = shl nuw i64 %454, 1
  %456 = and i64 %455, 4294967294
  %457 = getelementptr inbounds i8, i8* %440, i64 %456
  %458 = load i8, i8* %457, align 1
  %459 = zext i8 %458 to i32
  %460 = shl nuw nsw i32 %459, 8
  %461 = getelementptr inbounds i8, i8* %457, i64 1
  %462 = load i8, i8* %461, align 1
  %463 = zext i8 %462 to i32
  %464 = or i32 %460, %463
  store i32 %464, i32* %441, align 4
  %465 = getelementptr inbounds i8, i8* %457, i64 %444
  %466 = load i8, i8* %465, align 1
  %467 = zext i8 %466 to i32
  %468 = shl nuw nsw i32 %467, 8
  %469 = getelementptr inbounds i8, i8* %465, i64 1
  %470 = load i8, i8* %469, align 1
  %471 = zext i8 %470 to i32
  %472 = or i32 %468, %471
  store i32 %472, i32* %446, align 8
  %473 = getelementptr inbounds i8, i8* %465, i64 %447
  %474 = load i8, i8* %473, align 1
  %475 = zext i8 %474 to i16
  %476 = shl nuw i16 %475, 8
  %477 = getelementptr inbounds i8, i8* %473, i64 1
  %478 = load i8, i8* %477, align 1
  %479 = zext i8 %478 to i16
  %480 = or i16 %476, %479
  %481 = sext i16 %480 to i32
  store i32 %481, i32* %449, align 8
  %482 = getelementptr inbounds i8, i8* %473, i64 %447
  %483 = load i8, i8* %482, align 1
  %484 = zext i8 %483 to i32
  %485 = shl nuw nsw i32 %484, 8
  %486 = getelementptr inbounds i8, i8* %482, i64 1
  %487 = load i8, i8* %486, align 1
  %488 = zext i8 %487 to i32
  %489 = or i32 %485, %488
  %490 = icmp uge i64 %454, %452
  %491 = icmp eq i32 %472, 65535
  %492 = and i1 %490, %491
  %493 = icmp eq i32 %464, 65535
  %494 = and i1 %493, %492
  br i1 %494, label %495, label %507

495:                                              ; preds = %453
  %496 = icmp eq i32 %489, 0
  br i1 %496, label %514, label %497

497:                                              ; preds = %495
  %498 = load i8*, i8** %6, align 8
  %499 = load i64, i64* %8, align 8
  %500 = getelementptr inbounds i8, i8* %498, i64 %499
  %501 = zext i32 %489 to i64
  %502 = getelementptr inbounds i8, i8* %482, i64 2
  %503 = getelementptr inbounds i8, i8* %502, i64 %501
  %504 = icmp ugt i8* %503, %500
  br i1 %504, label %505, label %507

505:                                              ; preds = %497
  %506 = trunc i64 %454 to i32
  store i32 1, i32* %449, align 8
  br label %516

507:                                              ; preds = %497, %453
  %508 = icmp eq i32 %489, 65535
  br i1 %508, label %518, label %509

509:                                              ; preds = %507
  %510 = trunc i64 %454 to i32
  %511 = icmp eq i32 %489, 0
  %512 = zext i32 %489 to i64
  %513 = getelementptr inbounds i8, i8* %482, i64 %512
  br i1 %511, label %516, label %525

514:                                              ; preds = %495
  %515 = trunc i64 %454 to i32
  br label %516

516:                                              ; preds = %514, %509, %505
  %517 = phi i32 [ %515, %514 ], [ %506, %505 ], [ %510, %509 ]
  br label %525

518:                                              ; preds = %507
  %519 = add nuw nsw i64 %454, 1
  %520 = trunc i64 %519 to i32
  %521 = icmp eq i32 %437, %520
  br i1 %521, label %522, label %453

522:                                              ; preds = %518, %434
  %523 = icmp eq i32 %427, 0
  br i1 %523, label %546, label %524

524:                                              ; preds = %522
  store i32 %426, i32* %1, align 4
  br label %546

525:                                              ; preds = %516, %509
  %526 = phi i32 [ %517, %516 ], [ %510, %509 ]
  %527 = phi i8* [ null, %516 ], [ %513, %509 ]
  %528 = getelementptr inbounds %struct.TT_CMapRec_, %struct.TT_CMapRec_* %0, i64 1, i32 2
  %529 = bitcast i32* %528 to i8**
  store i8* %527, i8** %529, align 8
  %530 = getelementptr inbounds %struct.TT_CMapRec_, %struct.TT_CMapRec_* %0, i64 1, i32 0, i32 0, i32 2
  %531 = bitcast i16* %530 to i32*
  store i32 %526, i32* %531, align 4
  %532 = getelementptr inbounds %struct.TT_CMapRec_, %struct.TT_CMapRec_* %0, i64 1
  %533 = bitcast %struct.TT_CMapRec_* %532 to i32*
  store i32 %426, i32* %533, align 8
  %534 = icmp eq i32 %427, 0
  br i1 %534, label %537, label %535

535:                                              ; preds = %525
  %536 = getelementptr inbounds %struct.TT_CMap4Rec_, %struct.TT_CMap4Rec_* %429, i64 0, i32 2
  store i32 %427, i32* %536, align 4
  br label %543

537:                                              ; preds = %525
  store i32 %426, i32* %533, align 8
  tail call fastcc void @tt_cmap4_next(%struct.TT_CMap4Rec_* %429)
  %538 = getelementptr inbounds %struct.TT_CMap4Rec_, %struct.TT_CMap4Rec_* %429, i64 0, i32 2
  %539 = load i32, i32* %538, align 4
  %540 = icmp eq i32 %539, 0
  br i1 %540, label %546, label %541

541:                                              ; preds = %537
  %542 = load i32, i32* %533, align 8
  br label %543

543:                                              ; preds = %541, %535
  %544 = phi i32 [ %426, %535 ], [ %542, %541 ]
  %545 = phi i32 [ %427, %535 ], [ %539, %541 ]
  store i32 %544, i32* %1, align 4
  br label %546

546:                                              ; preds = %524, %543, %537, %522, %423, %431, %3
  %547 = phi i32 [ 0, %3 ], [ 0, %431 ], [ %427, %423 ], [ 0, %537 ], [ %545, %543 ], [ 0, %522 ], [ %427, %524 ]
  ret i32 %547
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal fastcc void @tt_cmap4_next(%struct.TT_CMap4Rec_* nocapture) unnamed_addr #3 {
  %2 = bitcast %struct.TT_CMap4Rec_* %0 to %struct.TT_FaceRec_**
  %3 = load %struct.TT_FaceRec_*, %struct.TT_FaceRec_** %2, align 8
  %4 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %3, i64 0, i32 14
  %5 = load i8*, i8** %4, align 8
  %6 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %3, i64 0, i32 15
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds i8, i8* %5, i64 %7
  %9 = getelementptr inbounds %struct.TT_CMap4Rec_, %struct.TT_CMap4Rec_* %0, i64 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = icmp ugt i32 %10, 65534
  br i1 %11, label %179, label %12

12:                                               ; preds = %1
  %13 = add nuw nsw i32 %10, 1
  %14 = getelementptr inbounds %struct.TT_CMap4Rec_, %struct.TT_CMap4Rec_* %0, i64 0, i32 5
  %15 = load i32, i32* %14, align 8
  %16 = icmp ult i32 %13, %15
  %17 = select i1 %16, i32 %15, i32 %13
  %18 = getelementptr inbounds %struct.TT_CMap4Rec_, %struct.TT_CMap4Rec_* %0, i64 0, i32 8
  %19 = getelementptr inbounds %struct.TT_CMap4Rec_, %struct.TT_CMap4Rec_* %0, i64 0, i32 6
  %20 = getelementptr inbounds %struct.TT_CMap4Rec_, %struct.TT_CMap4Rec_* %0, i64 0, i32 7
  %21 = getelementptr inbounds %struct.TT_FaceRec_, %struct.TT_FaceRec_* %3, i64 0, i32 0, i32 4
  %22 = getelementptr inbounds %struct.TT_CMap4Rec_, %struct.TT_CMap4Rec_* %0, i64 0, i32 4
  %23 = getelementptr inbounds %struct.TT_CMap4Rec_, %struct.TT_CMap4Rec_* %0, i64 0, i32 3
  %24 = getelementptr inbounds %struct.TT_CMap4Rec_, %struct.TT_CMap4Rec_* %0, i64 0, i32 0, i32 1
  %25 = load i8*, i8** %18, align 8
  %26 = load i32, i32* %19, align 4
  %27 = load i32, i32* %20, align 8
  br label %28

28:                                               ; preds = %173, %12
  %29 = phi i32 [ %15, %12 ], [ %122, %173 ]
  %30 = phi i32 [ %27, %12 ], [ %174, %173 ]
  %31 = phi i32 [ %26, %12 ], [ %114, %173 ]
  %32 = phi i8* [ %25, %12 ], [ %176, %173 ]
  %33 = phi i32 [ %17, %12 ], [ %178, %173 ]
  %34 = icmp ugt i32 %33, %31
  br i1 %34, label %87, label %35

35:                                               ; preds = %28
  %36 = icmp eq i8* %32, null
  br i1 %36, label %37, label %45

37:                                               ; preds = %35
  %38 = load i64, i64* %21, align 8
  %39 = trunc i64 %38 to i32
  %40 = add nsw i32 %30, %31
  %41 = icmp sgt i32 %40, -1
  %42 = icmp sgt i32 %40, 65535
  %43 = sub i32 65536, %30
  %44 = sub nsw i32 0, %30
  br label %70

45:                                               ; preds = %35
  %46 = sub i32 %33, %29
  %47 = shl i32 %46, 1
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds i8, i8* %32, i64 %48
  %50 = icmp ugt i8* %49, %8
  br i1 %50, label %87, label %51

51:                                               ; preds = %45, %67
  %52 = phi i32 [ %68, %67 ], [ %33, %45 ]
  %53 = phi i8* [ %54, %67 ], [ %49, %45 ]
  %54 = getelementptr inbounds i8, i8* %53, i64 2
  %55 = load i8, i8* %53, align 1
  %56 = zext i8 %55 to i32
  %57 = shl nuw nsw i32 %56, 8
  %58 = getelementptr inbounds i8, i8* %53, i64 1
  %59 = load i8, i8* %58, align 1
  %60 = zext i8 %59 to i32
  %61 = or i32 %57, %60
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %67, label %63

63:                                               ; preds = %51
  %64 = add nsw i32 %61, %30
  %65 = and i32 %64, 65535
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %179

67:                                               ; preds = %63, %51
  %68 = add i32 %52, 1
  %69 = icmp ugt i32 %68, %31
  br i1 %69, label %87, label %51

70:                                               ; preds = %37, %83
  %71 = phi i32 [ %85, %83 ], [ %33, %37 ]
  %72 = add nsw i32 %71, %30
  %73 = and i32 %72, 65535
  %74 = icmp ult i32 %73, %39
  br i1 %74, label %81, label %75

75:                                               ; preds = %70
  %76 = icmp slt i32 %72, 0
  %77 = and i1 %41, %76
  br i1 %77, label %83, label %78

78:                                               ; preds = %75
  %79 = icmp slt i32 %72, 65536
  %80 = and i1 %42, %79
  br i1 %80, label %83, label %87

81:                                               ; preds = %70
  %82 = icmp eq i32 %73, 0
  br i1 %82, label %83, label %179

83:                                               ; preds = %78, %75, %81
  %84 = phi i32 [ %71, %81 ], [ %44, %75 ], [ %43, %78 ]
  %85 = add i32 %84, 1
  %86 = icmp ugt i32 %85, %31
  br i1 %86, label %87, label %70

87:                                               ; preds = %67, %78, %83, %45, %28
  %88 = phi i32 [ %33, %28 ], [ %33, %45 ], [ %71, %78 ], [ %85, %83 ], [ %68, %67 ]
  %89 = load i32, i32* %22, align 4
  %90 = add i32 %89, 1
  %91 = load i32, i32* %23, align 8
  %92 = icmp ugt i32 %91, %90
  br i1 %92, label %93, label %179

93:                                               ; preds = %87
  %94 = load i8*, i8** %24, align 8
  %95 = getelementptr inbounds i8, i8* %94, i64 14
  %96 = shl i32 %91, 1
  %97 = add i32 %96, 2
  %98 = zext i32 %97 to i64
  %99 = zext i32 %96 to i64
  %100 = add i32 %91, -1
  %101 = zext i32 %90 to i64
  %102 = zext i32 %100 to i64
  br label %103

103:                                              ; preds = %169, %93
  %104 = phi i64 [ %101, %93 ], [ %170, %169 ]
  %105 = shl nuw i64 %104, 1
  %106 = and i64 %105, 4294967294
  %107 = getelementptr inbounds i8, i8* %95, i64 %106
  %108 = load i8, i8* %107, align 1
  %109 = zext i8 %108 to i32
  %110 = shl nuw nsw i32 %109, 8
  %111 = getelementptr inbounds i8, i8* %107, i64 1
  %112 = load i8, i8* %111, align 1
  %113 = zext i8 %112 to i32
  %114 = or i32 %110, %113
  store i32 %114, i32* %19, align 4
  %115 = getelementptr inbounds i8, i8* %107, i64 %98
  %116 = load i8, i8* %115, align 1
  %117 = zext i8 %116 to i32
  %118 = shl nuw nsw i32 %117, 8
  %119 = getelementptr inbounds i8, i8* %115, i64 1
  %120 = load i8, i8* %119, align 1
  %121 = zext i8 %120 to i32
  %122 = or i32 %118, %121
  store i32 %122, i32* %14, align 8
  %123 = getelementptr inbounds i8, i8* %115, i64 %99
  %124 = load i8, i8* %123, align 1
  %125 = zext i8 %124 to i16
  %126 = shl nuw i16 %125, 8
  %127 = getelementptr inbounds i8, i8* %123, i64 1
  %128 = load i8, i8* %127, align 1
  %129 = zext i8 %128 to i16
  %130 = or i16 %126, %129
  %131 = sext i16 %130 to i32
  store i32 %131, i32* %20, align 8
  %132 = getelementptr inbounds i8, i8* %123, i64 %99
  %133 = load i8, i8* %132, align 1
  %134 = zext i8 %133 to i32
  %135 = shl nuw nsw i32 %134, 8
  %136 = getelementptr inbounds i8, i8* %132, i64 1
  %137 = load i8, i8* %136, align 1
  %138 = zext i8 %137 to i32
  %139 = or i32 %135, %138
  %140 = icmp uge i64 %104, %102
  %141 = icmp eq i32 %122, 65535
  %142 = and i1 %140, %141
  %143 = icmp eq i32 %114, 65535
  %144 = and i1 %143, %142
  br i1 %144, label %145, label %157

145:                                              ; preds = %103
  %146 = icmp eq i32 %139, 0
  br i1 %146, label %164, label %147

147:                                              ; preds = %145
  %148 = load i8*, i8** %4, align 8
  %149 = load i64, i64* %6, align 8
  %150 = getelementptr inbounds i8, i8* %148, i64 %149
  %151 = zext i32 %139 to i64
  %152 = getelementptr inbounds i8, i8* %132, i64 2
  %153 = getelementptr inbounds i8, i8* %152, i64 %151
  %154 = icmp ugt i8* %153, %150
  br i1 %154, label %155, label %157

155:                                              ; preds = %147
  %156 = trunc i64 %104 to i32
  store i32 1, i32* %20, align 8
  br label %166

157:                                              ; preds = %147, %103
  %158 = icmp eq i32 %139, 65535
  br i1 %158, label %169, label %159

159:                                              ; preds = %157
  %160 = trunc i64 %104 to i32
  %161 = icmp eq i32 %139, 0
  %162 = zext i32 %139 to i64
  %163 = getelementptr inbounds i8, i8* %132, i64 %162
  br i1 %161, label %166, label %173

164:                                              ; preds = %145
  %165 = trunc i64 %104 to i32
  br label %166

166:                                              ; preds = %164, %159, %155
  %167 = phi i32 [ %131, %164 ], [ 1, %155 ], [ %131, %159 ]
  %168 = phi i32 [ %165, %164 ], [ %156, %155 ], [ %160, %159 ]
  br label %173

169:                                              ; preds = %157
  %170 = add nuw nsw i64 %104, 1
  %171 = trunc i64 %170 to i32
  %172 = icmp eq i32 %91, %171
  br i1 %172, label %179, label %103

173:                                              ; preds = %159, %166
  %174 = phi i32 [ %167, %166 ], [ %131, %159 ]
  %175 = phi i32 [ %168, %166 ], [ %160, %159 ]
  %176 = phi i8* [ null, %166 ], [ %163, %159 ]
  store i8* %176, i8** %18, align 8
  store i32 %175, i32* %22, align 4
  %177 = icmp ult i32 %88, %122
  %178 = select i1 %177, i32 %122, i32 %88
  br label %28

179:                                              ; preds = %87, %63, %81, %169, %1
  %180 = phi i32 [ -1, %1 ], [ -1, %169 ], [ %71, %81 ], [ %52, %63 ], [ -1, %87 ]
  %181 = phi i32 [ 0, %1 ], [ 0, %169 ], [ %73, %81 ], [ %65, %63 ], [ 0, %87 ]
  store i32 %180, i32* %9, align 8
  %182 = getelementptr inbounds %struct.TT_CMap4Rec_, %struct.TT_CMap4Rec_* %0, i64 0, i32 2
  store i32 %181, i32* %182, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal fastcc i32 @tt_cmap12_char_map_binary(%struct.TT_CMapRec_* nocapture, i32* nocapture, i8 zeroext) unnamed_addr #3 {
  %4 = getelementptr inbounds %struct.TT_CMapRec_, %struct.TT_CMapRec_* %0, i64 0, i32 1
  %5 = load i8*, i8** %4, align 8
  %6 = getelementptr inbounds i8, i8* %5, i64 12
  %7 = load i8, i8* %6, align 1
  %8 = zext i8 %7 to i32
  %9 = shl nuw i32 %8, 24
  %10 = getelementptr inbounds i8, i8* %5, i64 13
  %11 = load i8, i8* %10, align 1
  %12 = zext i8 %11 to i32
  %13 = shl nuw nsw i32 %12, 16
  %14 = or i32 %13, %9
  %15 = getelementptr inbounds i8, i8* %5, i64 14
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i32
  %18 = shl nuw nsw i32 %17, 8
  %19 = or i32 %14, %18
  %20 = getelementptr inbounds i8, i8* %5, i64 15
  %21 = load i8, i8* %20, align 1
  %22 = zext i8 %21 to i32
  %23 = or i32 %19, %22
  %24 = load i32, i32* %1, align 4
  %25 = icmp eq i32 %23, 0
  br i1 %25, label %152, label %26

26:                                               ; preds = %3
  %27 = icmp ne i8 %2, 0
  br i1 %27, label %28, label %32

28:                                               ; preds = %26
  %29 = icmp eq i32 %24, -1
  br i1 %29, label %152, label %30

30:                                               ; preds = %28
  %31 = add nuw i32 %24, 1
  br label %32

32:                                               ; preds = %26, %30
  %33 = phi i32 [ %31, %30 ], [ %24, %26 ]
  %34 = getelementptr inbounds i8, i8* %5, i64 20
  br label %35

35:                                               ; preds = %32, %108
  %36 = phi i32 [ 0, %32 ], [ %110, %108 ]
  %37 = phi i32 [ %23, %32 ], [ %109, %108 ]
  %38 = add i32 %36, %37
  %39 = lshr i32 %38, 1
  %40 = mul i32 %39, 12
  %41 = zext i32 %40 to i64
  %42 = getelementptr inbounds i8, i8* %34, i64 %41
  %43 = getelementptr inbounds i8, i8* %42, i64 -4
  %44 = load i8, i8* %43, align 1
  %45 = zext i8 %44 to i32
  %46 = shl nuw i32 %45, 24
  %47 = getelementptr inbounds i8, i8* %43, i64 1
  %48 = load i8, i8* %47, align 1
  %49 = zext i8 %48 to i32
  %50 = shl nuw nsw i32 %49, 16
  %51 = or i32 %50, %46
  %52 = getelementptr inbounds i8, i8* %43, i64 2
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i32
  %55 = shl nuw nsw i32 %54, 8
  %56 = or i32 %51, %55
  %57 = getelementptr inbounds i8, i8* %43, i64 3
  %58 = load i8, i8* %57, align 1
  %59 = zext i8 %58 to i32
  %60 = or i32 %56, %59
  %61 = getelementptr inbounds i8, i8* %42, i64 4
  %62 = getelementptr inbounds i8, i8* %61, i64 -4
  %63 = load i8, i8* %62, align 1
  %64 = zext i8 %63 to i32
  %65 = shl nuw i32 %64, 24
  %66 = getelementptr inbounds i8, i8* %62, i64 1
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i32
  %69 = shl nuw nsw i32 %68, 16
  %70 = or i32 %69, %65
  %71 = getelementptr inbounds i8, i8* %62, i64 2
  %72 = load i8, i8* %71, align 1
  %73 = zext i8 %72 to i32
  %74 = shl nuw nsw i32 %73, 8
  %75 = or i32 %70, %74
  %76 = getelementptr inbounds i8, i8* %62, i64 3
  %77 = load i8, i8* %76, align 1
  %78 = zext i8 %77 to i32
  %79 = or i32 %75, %78
  %80 = icmp ult i32 %33, %60
  br i1 %80, label %108, label %81

81:                                               ; preds = %35
  %82 = icmp ugt i32 %33, %79
  br i1 %82, label %83, label %85

83:                                               ; preds = %81
  %84 = add nuw i32 %39, 1
  br label %108

85:                                               ; preds = %81
  %86 = load i8, i8* %61, align 1
  %87 = zext i8 %86 to i32
  %88 = shl nuw i32 %87, 24
  %89 = getelementptr inbounds i8, i8* %61, i64 1
  %90 = load i8, i8* %89, align 1
  %91 = zext i8 %90 to i32
  %92 = shl nuw nsw i32 %91, 16
  %93 = or i32 %92, %88
  %94 = getelementptr inbounds i8, i8* %61, i64 2
  %95 = load i8, i8* %94, align 1
  %96 = zext i8 %95 to i32
  %97 = shl nuw nsw i32 %96, 8
  %98 = or i32 %93, %97
  %99 = getelementptr inbounds i8, i8* %61, i64 3
  %100 = load i8, i8* %99, align 1
  %101 = zext i8 %100 to i32
  %102 = or i32 %98, %101
  %103 = sub i32 %33, %60
  %104 = xor i32 %103, -1
  %105 = icmp ugt i32 %102, %104
  %106 = add i32 %102, %103
  %107 = select i1 %105, i32 0, i32 %106
  br label %112

108:                                              ; preds = %35, %83
  %109 = phi i32 [ %37, %83 ], [ %39, %35 ]
  %110 = phi i32 [ %84, %83 ], [ %36, %35 ]
  %111 = icmp ult i32 %110, %109
  br i1 %111, label %35, label %112

112:                                              ; preds = %108, %85
  %113 = phi i32 [ %107, %85 ], [ 0, %108 ]
  br i1 %27, label %114, label %152

114:                                              ; preds = %112
  %115 = getelementptr inbounds %struct.TT_CMapRec_, %struct.TT_CMapRec_* %0, i64 0, i32 0, i32 0, i32 0
  %116 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %115, align 8
  %117 = bitcast %struct.TT_CMapRec_* %0 to %struct.TT_CMap12Rec_*
  %118 = icmp ugt i32 %33, %79
  br i1 %118, label %119, label %122

119:                                              ; preds = %114
  %120 = add nuw i32 %39, 1
  %121 = icmp eq i32 %120, %23
  br i1 %121, label %152, label %122

122:                                              ; preds = %119, %114
  %123 = phi i32 [ %120, %119 ], [ %39, %114 ]
  %124 = getelementptr inbounds %struct.TT_CMapRec_, %struct.TT_CMapRec_* %0, i64 1
  %125 = bitcast %struct.TT_CMapRec_* %124 to i8*
  store i8 1, i8* %125, align 8
  %126 = zext i32 %33 to i64
  %127 = getelementptr inbounds %struct.TT_CMapRec_, %struct.TT_CMapRec_* %0, i64 1, i32 0, i32 0, i32 1
  %128 = bitcast i32* %127 to i64*
  store i64 %126, i64* %128, align 8
  %129 = zext i32 %123 to i64
  %130 = getelementptr inbounds %struct.TT_CMapRec_, %struct.TT_CMapRec_* %0, i64 1, i32 1
  %131 = bitcast i8** %130 to i64*
  store i64 %129, i64* %131, align 8
  %132 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %116, i64 0, i32 4
  %133 = load i64, i64* %132, align 8
  %134 = trunc i64 %133 to i32
  %135 = icmp uge i32 %113, %134
  %136 = icmp eq i32 %113, 0
  %137 = or i1 %136, %135
  br i1 %137, label %138, label %145

138:                                              ; preds = %122
  tail call fastcc void @tt_cmap12_next(%struct.TT_CMap12Rec_* %117)
  %139 = load i8, i8* %125, align 8
  %140 = icmp eq i8 %139, 0
  br i1 %140, label %148, label %141

141:                                              ; preds = %138
  %142 = getelementptr inbounds %struct.TT_CMapRec_, %struct.TT_CMapRec_* %0, i64 1, i32 0, i32 1
  %143 = bitcast %struct.FT_CMap_ClassRec_** %142 to i32*
  %144 = load i32, i32* %143, align 8
  br label %148

145:                                              ; preds = %122
  %146 = getelementptr inbounds %struct.TT_CMapRec_, %struct.TT_CMapRec_* %0, i64 1, i32 0, i32 1
  %147 = bitcast %struct.FT_CMap_ClassRec_** %146 to i32*
  store i32 %113, i32* %147, align 8
  br label %148

148:                                              ; preds = %145, %141, %138
  %149 = phi i32 [ %113, %145 ], [ %144, %141 ], [ 0, %138 ]
  %150 = load i64, i64* %128, align 8
  %151 = trunc i64 %150 to i32
  store i32 %151, i32* %1, align 4
  br label %152

152:                                              ; preds = %112, %148, %119, %28, %3
  %153 = phi i32 [ 0, %3 ], [ 0, %28 ], [ 0, %119 ], [ %113, %112 ], [ %149, %148 ]
  ret i32 %153
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal fastcc void @tt_cmap12_next(%struct.TT_CMap12Rec_* nocapture) unnamed_addr #3 {
  %2 = getelementptr inbounds %struct.TT_CMap12Rec_, %struct.TT_CMap12Rec_* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %2, align 8
  %4 = getelementptr inbounds %struct.TT_CMap12Rec_, %struct.TT_CMap12Rec_* %0, i64 0, i32 2
  %5 = load i64, i64* %4, align 8
  %6 = icmp ugt i64 %5, 4294967294
  br i1 %6, label %107, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %struct.TT_CMap12Rec_, %struct.TT_CMap12Rec_* %0, i64 0, i32 4
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %struct.TT_CMap12Rec_, %struct.TT_CMap12Rec_* %0, i64 0, i32 5
  %11 = load i64, i64* %10, align 8
  %12 = icmp ult i64 %9, %11
  br i1 %12, label %13, label %107

13:                                               ; preds = %7
  %14 = add nuw nsw i64 %5, 1
  %15 = getelementptr inbounds %struct.TT_CMap12Rec_, %struct.TT_CMap12Rec_* %0, i64 0, i32 0, i32 1
  %16 = load i8*, i8** %15, align 8
  %17 = getelementptr inbounds i8, i8* %16, i64 20
  %18 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %3, i64 0, i32 4
  br label %19

19:                                               ; preds = %13, %103
  %20 = phi i64 [ %9, %13 ], [ %105, %103 ]
  %21 = phi i64 [ %14, %13 ], [ %104, %103 ]
  %22 = mul i64 %20, 12
  %23 = getelementptr inbounds i8, i8* %17, i64 %22
  %24 = getelementptr inbounds i8, i8* %23, i64 -4
  %25 = load i8, i8* %24, align 1
  %26 = zext i8 %25 to i64
  %27 = shl nuw nsw i64 %26, 24
  %28 = getelementptr inbounds i8, i8* %24, i64 1
  %29 = load i8, i8* %28, align 1
  %30 = zext i8 %29 to i64
  %31 = shl nuw nsw i64 %30, 16
  %32 = or i64 %31, %27
  %33 = getelementptr inbounds i8, i8* %24, i64 2
  %34 = load i8, i8* %33, align 1
  %35 = zext i8 %34 to i64
  %36 = shl nuw nsw i64 %35, 8
  %37 = or i64 %32, %36
  %38 = getelementptr inbounds i8, i8* %24, i64 3
  %39 = load i8, i8* %38, align 1
  %40 = zext i8 %39 to i64
  %41 = or i64 %37, %40
  %42 = getelementptr inbounds i8, i8* %23, i64 4
  %43 = getelementptr inbounds i8, i8* %42, i64 -4
  %44 = load i8, i8* %43, align 1
  %45 = zext i8 %44 to i64
  %46 = shl nuw nsw i64 %45, 24
  %47 = getelementptr inbounds i8, i8* %43, i64 1
  %48 = load i8, i8* %47, align 1
  %49 = zext i8 %48 to i64
  %50 = shl nuw nsw i64 %49, 16
  %51 = or i64 %50, %46
  %52 = getelementptr inbounds i8, i8* %43, i64 2
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i64
  %55 = shl nuw nsw i64 %54, 8
  %56 = or i64 %51, %55
  %57 = getelementptr inbounds i8, i8* %43, i64 3
  %58 = load i8, i8* %57, align 1
  %59 = zext i8 %58 to i64
  %60 = or i64 %56, %59
  %61 = load i8, i8* %42, align 1
  %62 = zext i8 %61 to i64
  %63 = shl nuw nsw i64 %62, 24
  %64 = getelementptr inbounds i8, i8* %42, i64 1
  %65 = load i8, i8* %64, align 1
  %66 = zext i8 %65 to i64
  %67 = shl nuw nsw i64 %66, 16
  %68 = or i64 %67, %63
  %69 = getelementptr inbounds i8, i8* %42, i64 2
  %70 = load i8, i8* %69, align 1
  %71 = zext i8 %70 to i64
  %72 = shl nuw nsw i64 %71, 8
  %73 = or i64 %68, %72
  %74 = getelementptr inbounds i8, i8* %42, i64 3
  %75 = load i8, i8* %74, align 1
  %76 = zext i8 %75 to i64
  %77 = or i64 %73, %76
  %78 = icmp ult i64 %21, %41
  %79 = select i1 %78, i64 %41, i64 %21
  %80 = icmp ugt i64 %79, %60
  br i1 %80, label %103, label %81

81:                                               ; preds = %19, %92
  %82 = phi i64 [ %93, %92 ], [ %79, %19 ]
  %83 = sub i64 %82, %41
  %84 = sub i64 4294967295, %83
  %85 = icmp ugt i64 %77, %84
  br i1 %85, label %103, label %86

86:                                               ; preds = %81
  %87 = add i64 %83, %77
  %88 = trunc i64 %87 to i32
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %90, label %95

90:                                               ; preds = %86
  %91 = icmp ugt i64 %82, 4294967294
  br i1 %91, label %107, label %92

92:                                               ; preds = %90
  %93 = add nuw nsw i64 %82, 1
  %94 = icmp ult i64 %82, %60
  br i1 %94, label %81, label %103

95:                                               ; preds = %86
  %96 = trunc i64 %87 to i32
  %97 = load i64, i64* %18, align 8
  %98 = trunc i64 %97 to i32
  %99 = icmp ult i32 %96, %98
  br i1 %99, label %100, label %103

100:                                              ; preds = %95
  %101 = trunc i64 %87 to i32
  store i64 %82, i64* %4, align 8
  %102 = getelementptr inbounds %struct.TT_CMap12Rec_, %struct.TT_CMap12Rec_* %0, i64 0, i32 3
  store i32 %101, i32* %102, align 8
  store i64 %20, i64* %8, align 8
  br label %109

103:                                              ; preds = %92, %81, %19, %95
  %104 = phi i64 [ %82, %95 ], [ %79, %19 ], [ %82, %81 ], [ %93, %92 ]
  %105 = add nuw i64 %20, 1
  %106 = icmp ult i64 %105, %11
  br i1 %106, label %19, label %107

107:                                              ; preds = %103, %90, %7, %1
  %108 = getelementptr inbounds %struct.TT_CMap12Rec_, %struct.TT_CMap12Rec_* %0, i64 0, i32 1
  store i8 0, i8* %108, align 8
  br label %109

109:                                              ; preds = %107, %100
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal fastcc void @tt_cmap13_next(%struct.TT_CMap13Rec_* nocapture) unnamed_addr #3 {
  %2 = getelementptr inbounds %struct.TT_CMap13Rec_, %struct.TT_CMap13Rec_* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %2, align 8
  %4 = getelementptr inbounds %struct.TT_CMap13Rec_, %struct.TT_CMap13Rec_* %0, i64 0, i32 2
  %5 = load i64, i64* %4, align 8
  %6 = icmp ugt i64 %5, 4294967294
  br i1 %6, label %92, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %struct.TT_CMap13Rec_, %struct.TT_CMap13Rec_* %0, i64 0, i32 4
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %struct.TT_CMap13Rec_, %struct.TT_CMap13Rec_* %0, i64 0, i32 5
  %11 = load i64, i64* %10, align 8
  %12 = icmp ult i64 %9, %11
  br i1 %12, label %13, label %92

13:                                               ; preds = %7
  %14 = add nuw nsw i64 %5, 1
  %15 = getelementptr inbounds %struct.TT_CMap13Rec_, %struct.TT_CMap13Rec_* %0, i64 0, i32 0, i32 1
  %16 = load i8*, i8** %15, align 8
  %17 = getelementptr inbounds i8, i8* %16, i64 20
  %18 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %3, i64 0, i32 4
  br label %19

19:                                               ; preds = %13, %89
  %20 = phi i64 [ %9, %13 ], [ %90, %89 ]
  %21 = phi i64 [ %14, %13 ], [ %79, %89 ]
  %22 = mul i64 %20, 12
  %23 = getelementptr inbounds i8, i8* %17, i64 %22
  %24 = getelementptr inbounds i8, i8* %23, i64 -4
  %25 = load i8, i8* %24, align 1
  %26 = zext i8 %25 to i64
  %27 = shl nuw nsw i64 %26, 24
  %28 = getelementptr inbounds i8, i8* %24, i64 1
  %29 = load i8, i8* %28, align 1
  %30 = zext i8 %29 to i64
  %31 = shl nuw nsw i64 %30, 16
  %32 = or i64 %31, %27
  %33 = getelementptr inbounds i8, i8* %24, i64 2
  %34 = load i8, i8* %33, align 1
  %35 = zext i8 %34 to i64
  %36 = shl nuw nsw i64 %35, 8
  %37 = or i64 %32, %36
  %38 = getelementptr inbounds i8, i8* %24, i64 3
  %39 = load i8, i8* %38, align 1
  %40 = zext i8 %39 to i64
  %41 = or i64 %37, %40
  %42 = getelementptr inbounds i8, i8* %23, i64 4
  %43 = getelementptr inbounds i8, i8* %42, i64 -4
  %44 = load i8, i8* %43, align 1
  %45 = zext i8 %44 to i64
  %46 = shl nuw nsw i64 %45, 24
  %47 = getelementptr inbounds i8, i8* %43, i64 1
  %48 = load i8, i8* %47, align 1
  %49 = zext i8 %48 to i64
  %50 = shl nuw nsw i64 %49, 16
  %51 = or i64 %50, %46
  %52 = getelementptr inbounds i8, i8* %43, i64 2
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i64
  %55 = shl nuw nsw i64 %54, 8
  %56 = or i64 %51, %55
  %57 = getelementptr inbounds i8, i8* %43, i64 3
  %58 = load i8, i8* %57, align 1
  %59 = zext i8 %58 to i64
  %60 = or i64 %56, %59
  %61 = load i8, i8* %42, align 1
  %62 = zext i8 %61 to i32
  %63 = shl nuw i32 %62, 24
  %64 = getelementptr inbounds i8, i8* %42, i64 1
  %65 = load i8, i8* %64, align 1
  %66 = zext i8 %65 to i32
  %67 = shl nuw nsw i32 %66, 16
  %68 = or i32 %67, %63
  %69 = getelementptr inbounds i8, i8* %42, i64 2
  %70 = load i8, i8* %69, align 1
  %71 = zext i8 %70 to i32
  %72 = shl nuw nsw i32 %71, 8
  %73 = or i32 %68, %72
  %74 = getelementptr inbounds i8, i8* %42, i64 3
  %75 = load i8, i8* %74, align 1
  %76 = zext i8 %75 to i32
  %77 = or i32 %73, %76
  %78 = icmp ult i64 %21, %41
  %79 = select i1 %78, i64 %41, i64 %21
  %80 = icmp ugt i64 %79, %60
  %81 = icmp eq i32 %77, 0
  %82 = or i1 %80, %81
  br i1 %82, label %89, label %83

83:                                               ; preds = %19
  %84 = load i64, i64* %18, align 8
  %85 = trunc i64 %84 to i32
  %86 = icmp ult i32 %77, %85
  br i1 %86, label %87, label %89

87:                                               ; preds = %83
  store i64 %79, i64* %4, align 8
  %88 = getelementptr inbounds %struct.TT_CMap13Rec_, %struct.TT_CMap13Rec_* %0, i64 0, i32 3
  store i32 %77, i32* %88, align 8
  store i64 %20, i64* %8, align 8
  br label %94

89:                                               ; preds = %19, %83
  %90 = add nuw i64 %20, 1
  %91 = icmp ult i64 %90, %11
  br i1 %91, label %19, label %92

92:                                               ; preds = %89, %7, %1
  %93 = getelementptr inbounds %struct.TT_CMap13Rec_, %struct.TT_CMap13Rec_* %0, i64 0, i32 1
  store i8 0, i8* %93, align 8
  br label %94

94:                                               ; preds = %92, %87
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i8* @tt_get_glyph_name(%struct.TT_FaceRec_*, i32) #0 {
  %3 = alloca i8*, align 8
  %4 = bitcast i8** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #17
  store i8* null, i8** %3, align 8
  %5 = call i32 @tt_face_get_ps_name(%struct.TT_FaceRec_* %0, i32 %1, i8** nonnull %3)
  %6 = load i8*, i8** %3, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #17
  ret i8* %6
}

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #15

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.usub.sat.i32(i32, i32) #16

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #16

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind returns_twice "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { nofree nounwind readonly }
attributes #16 = { nounwind readnone speculatable }
attributes #17 = { nounwind }
attributes #18 = { nounwind returns_twice }
attributes #19 = { noreturn nounwind }
attributes #20 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.isvectorized", i32 1}
!4 = distinct !{!4, !5, !3}
!5 = !{!"llvm.loop.unroll.runtime.disable"}
!6 = distinct !{!6, !3}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.unroll.disable"}
!9 = distinct !{!9, !5, !3}
!10 = distinct !{!10, !3}
!11 = distinct !{!11, !5, !3}
!12 = distinct !{!12, !3}
!13 = distinct !{!13, !5, !3}
!14 = distinct !{!14, !3}
!15 = distinct !{!15, !8}
!16 = distinct !{!16, !5, !3}
!17 = distinct !{!17, !3}
!18 = distinct !{!18, !5, !3}
!19 = distinct !{!19, !8}
!20 = !{!21}
!21 = distinct !{!21, !22}
!22 = distinct !{!22, !"LVerDomain"}
!23 = !{!24}
!24 = distinct !{!24, !22}
!25 = distinct !{!25, !3}
!26 = distinct !{!26, !3}
!27 = !{!28}
!28 = distinct !{!28, !29}
!29 = distinct !{!29, !"LVerDomain"}
!30 = !{!31}
!31 = distinct !{!31, !29}
!32 = distinct !{!32, !3}
!33 = distinct !{!33, !3}
!34 = !{!35}
!35 = distinct !{!35, !36}
!36 = distinct !{!36, !"LVerDomain"}
!37 = !{!38}
!38 = distinct !{!38, !36}
!39 = distinct !{!39, !3}
!40 = distinct !{!40, !3}
!41 = !{i8* (%struct.TT_NameRec_*, %struct.FT_MemoryRec_*)* @tt_name_ascii_from_other, i8* (%struct.TT_NameRec_*, %struct.FT_MemoryRec_*)* @tt_name_ascii_from_utf16}
!42 = !{i32 17, i32 33}
!43 = distinct !{!43, !3}
!44 = distinct !{!44, !5, !3}
!45 = distinct !{!45, !3}
!46 = distinct !{!46, !5, !3}
!47 = distinct !{!47, !3}
!48 = distinct !{!48, !5, !3}
!49 = distinct !{!49, !3}
!50 = distinct !{!50, !5, !3}
!51 = !{i32 (%struct.TT_SBitDecoderRec_*, i8*, i8*, i32, i32, i32)* @tt_sbit_decoder_load_bit_aligned, i32 (%struct.TT_SBitDecoderRec_*, i8*, i8*, i32, i32, i32)* @tt_sbit_decoder_load_byte_aligned, i32 (%struct.TT_SBitDecoderRec_*, i8*, i8*, i32, i32, i32)* @tt_sbit_decoder_load_compound, i32 (%struct.TT_SBitDecoderRec_*, i8*, i8*, i32, i32, i32)* @tt_sbit_decoder_load_png}
!52 = !{!53}
!53 = distinct !{!53, !54}
!54 = distinct !{!54, !"LVerDomain"}
!55 = !{!56}
!56 = distinct !{!56, !54}
!57 = distinct !{!57, !3}
!58 = distinct !{!58, !3}
!59 = distinct !{!59, !3}
!60 = distinct !{!60, !8}
!61 = distinct !{!61, !5, !3}
!62 = !{!63}
!63 = distinct !{!63, !64}
!64 = distinct !{!64, !"LVerDomain"}
!65 = !{!66}
!66 = distinct !{!66, !64}
!67 = distinct !{!67, !3}
!68 = distinct !{!68, !3}
!69 = !{i32 (i32)* @sfnt_is_alphanumeric, i32 (i32)* @sfnt_is_postscript}
