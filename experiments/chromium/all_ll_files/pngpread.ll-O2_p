; ModuleID = '../../third_party/libpng/pngpread.c'
source_filename = "../../third_party/libpng/pngpread.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.png_struct_def = type { [1 x %struct.__jmp_buf_tag], void (%struct.__jmp_buf_tag*, i32)*, [1 x %struct.__jmp_buf_tag]*, i64, void (%struct.png_struct_def*, i8*)*, void (%struct.png_struct_def*, i8*)*, i8*, void (%struct.png_struct_def*, i8*, i64)*, void (%struct.png_struct_def*, i8*, i64)*, i8*, void (%struct.png_struct_def*, %struct.png_row_info_struct*, i8*)*, void (%struct.png_struct_def*, %struct.png_row_info_struct*, i8*)*, i8*, i8, i8, i32, i32, i32, i32, %struct.z_stream_s, %struct.png_compression_buffer*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i8*, i8*, i8*, i8*, i64, i32, i32, %struct.png_color_struct*, i16, i16, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i16, i8, i32, %struct.png_color_16_struct, %struct.png_color_16_struct, void (%struct.png_struct_def*)*, i32, i32, i32, i32, i8*, i16**, i8*, i8*, i16**, i16**, %struct.png_color_8_struct, %struct.png_color_8_struct, i8*, %struct.png_color_16_struct, void (%struct.png_struct_def*, i32, i32)*, void (%struct.png_struct_def*, i32, i32)*, void (%struct.png_struct_def*, %struct.png_info_def*)*, void (%struct.png_struct_def*, i8*, i32, i32)*, void (%struct.png_struct_def*, %struct.png_info_def*)*, i8*, i8*, i8*, i8*, i32, i32, i64, i64, i64, i64, i32, i32, i32, i32, i8*, i32 (%struct.png_struct_def*, %struct.png_unknown_chunk_t*)*, i32, i32, i8*, i8, i8, i16, i16, i8*, i8* (%struct.png_struct_def*, i64)*, void (%struct.png_struct_def*, i8*)*, i8*, i8, i32, i32, i32, i64, %struct.png_unknown_chunk_t, i64, i8*, i64, i32, i8*, [4 x void (%struct.png_row_info_struct*, i8*, i8*)*], %struct.png_colorspace }
%struct.__jmp_buf_tag = type { [8 x i64], i32, %struct.__sigset_t }
%struct.__sigset_t = type { [16 x i64] }
%struct.png_row_info_struct = type { i32, i64, i8, i8, i8, i8 }
%struct.z_stream_s = type { i8*, i32, i64, i8*, i32, i64, i8*, %struct.internal_state*, i8* (i8*, i32, i32)*, void (i8*, i8*)*, i8*, i32, i64, i64 }
%struct.internal_state = type opaque
%struct.png_compression_buffer = type { %struct.png_compression_buffer*, [1 x i8] }
%struct.png_color_struct = type { i8, i8, i8 }
%struct.png_color_8_struct = type { i8, i8, i8, i8, i8 }
%struct.png_color_16_struct = type { i8, i16, i16, i16, i16 }
%struct.png_unknown_chunk_t = type { [5 x i8], i8*, i64, i8 }
%struct.png_colorspace = type { i32, %struct.png_xy, %struct.png_XYZ, i16, i16 }
%struct.png_xy = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.png_XYZ = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.png_info_def = type { i32, i32, i32, i64, %struct.png_color_struct*, i16, i16, i8, i8, i8, i8, i8, i8, i8, i8, [8 x i8], %struct.png_colorspace, i8*, i8*, i32, i32, i32, %struct.png_text_struct*, %struct.png_color_8_struct, i8*, %struct.png_color_16_struct, %struct.png_color_16_struct, i32, %struct.png_unknown_chunk_t*, i32, i8** }
%struct.png_text_struct = type { i32, i8*, i8*, i64, i64, i8*, i8* }

@.str = private unnamed_addr constant [74 x i8] c"png_process_data_skip is not implemented in any current version of libpng\00", align 1
@.str.1 = private unnamed_addr constant [15 x i8] c"Not a PNG file\00", align 1
@.str.2 = private unnamed_addr constant [39 x i8] c"PNG file corrupted by ASCII conversion\00", align 1
@.str.3 = private unnamed_addr constant [25 x i8] c"Missing IHDR before IDAT\00", align 1
@.str.4 = private unnamed_addr constant [25 x i8] c"Missing PLTE before IDAT\00", align 1
@.str.5 = private unnamed_addr constant [21 x i8] c"Too many IDATs found\00", align 1
@.str.6 = private unnamed_addr constant [20 x i8] c"Invalid IHDR length\00", align 1
@.str.7 = private unnamed_addr constant [34 x i8] c"Potential overflow of save_buffer\00", align 1
@.str.8 = private unnamed_addr constant [36 x i8] c"Insufficient memory for save_buffer\00", align 1
@.str.9 = private unnamed_addr constant [18 x i8] c"save_buffer error\00", align 1
@.str.10 = private unnamed_addr constant [27 x i8] c"Not enough compressed data\00", align 1
@.str.11 = private unnamed_addr constant [30 x i8] c"No IDAT data (internal error)\00", align 1
@.str.12 = private unnamed_addr constant [34 x i8] c"Truncated compressed data in IDAT\00", align 1
@.str.13 = private unnamed_addr constant [32 x i8] c"IDAT: ADLER32 checksum mismatch\00", align 1
@.str.14 = private unnamed_addr constant [28 x i8] c"Decompression error in IDAT\00", align 1
@.str.15 = private unnamed_addr constant [30 x i8] c"Extra compressed data in IDAT\00", align 1
@.str.16 = private unnamed_addr constant [31 x i8] c"Extra compression data in IDAT\00", align 1
@.str.17 = private unnamed_addr constant [26 x i8] c"bad adaptive filter value\00", align 1
@.str.18 = private unnamed_addr constant [25 x i8] c"progressive row overflow\00", align 1
@.str.19 = private unnamed_addr constant [48 x i8] c"internal progressive row size calculation error\00", align 1
@cr_png_read_push_finish_row.png_pass_start = internal unnamed_addr constant [7 x i8] c"\00\04\00\02\00\01\00", align 1
@cr_png_read_push_finish_row.png_pass_inc = internal unnamed_addr constant [7 x i8] c"\08\08\04\04\02\02\01", align 1
@cr_png_read_push_finish_row.png_pass_ystart = internal unnamed_addr constant [7 x i8] c"\00\00\04\00\02\00\01", align 1
@cr_png_read_push_finish_row.png_pass_yinc = internal unnamed_addr constant [7 x i8] c"\08\08\08\04\04\02\02", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @cr_png_process_data(%struct.png_struct_def* noalias, %struct.png_info_def* noalias, i8*, i64) local_unnamed_addr #0 {
  %5 = icmp eq %struct.png_struct_def* %0, null
  %6 = icmp eq %struct.png_info_def* %1, null
  %7 = or i1 %5, %6
  br i1 %7, label %30, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 98
  store i8* %2, i8** %9, align 8, !alias.scope !2
  %10 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 104
  store i64 %3, i64* %10, align 8, !alias.scope !2
  %11 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 101
  %12 = load i64, i64* %11, align 8, !alias.scope !2
  %13 = add i64 %12, %3
  %14 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 103
  store i64 %13, i64* %14, align 8, !alias.scope !2
  %15 = ptrtoint i8* %2 to i64
  %16 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 97
  %17 = bitcast i8** %16 to i64*
  store i64 %15, i64* %17, align 8, !alias.scope !2
  %18 = icmp eq i64 %13, 0
  br i1 %18, label %30, label %19

19:                                               ; preds = %8
  %20 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 105
  br label %21

21:                                               ; preds = %19, %27
  %22 = load i32, i32* %20, align 8, !alias.scope !5, !noalias !8
  switch i32 %22, label %26 [
    i32 0, label %23
    i32 1, label %24
    i32 2, label %25
  ]

23:                                               ; preds = %21
  tail call void @cr_png_push_read_sig(%struct.png_struct_def* nonnull %0, %struct.png_info_def* %1) #6
  br label %27

24:                                               ; preds = %21
  tail call void @cr_png_push_read_chunk(%struct.png_struct_def* nonnull %0, %struct.png_info_def* %1) #6
  br label %27

25:                                               ; preds = %21
  tail call void @cr_png_push_read_IDAT(%struct.png_struct_def* nonnull %0) #6
  br label %27

26:                                               ; preds = %21
  store i64 0, i64* %14, align 8, !alias.scope !5, !noalias !8
  br label %30

27:                                               ; preds = %23, %24, %25
  %28 = load i64, i64* %14, align 8
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %30, label %21

30:                                               ; preds = %27, %26, %8, %4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @cr_png_push_restore_buffer(%struct.png_struct_def* noalias nocapture, i8*, i64) local_unnamed_addr #1 {
  %4 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 98
  store i8* %1, i8** %4, align 8
  %5 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 104
  store i64 %2, i64* %5, align 8
  %6 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 101
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, %2
  %9 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 103
  store i64 %8, i64* %9, align 8
  %10 = ptrtoint i8* %1 to i64
  %11 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 97
  %12 = bitcast i8** %11 to i64*
  store i64 %10, i64* %12, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @cr_png_process_some_data(%struct.png_struct_def* noalias, %struct.png_info_def* noalias) local_unnamed_addr #0 {
  %3 = icmp eq %struct.png_struct_def* %0, null
  br i1 %3, label %12, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 105
  %6 = load i32, i32* %5, align 8
  switch i32 %6, label %10 [
    i32 0, label %7
    i32 1, label %8
    i32 2, label %9
  ]

7:                                                ; preds = %4
  tail call void @cr_png_push_read_sig(%struct.png_struct_def* nonnull %0, %struct.png_info_def* %1)
  br label %12

8:                                                ; preds = %4
  tail call void @cr_png_push_read_chunk(%struct.png_struct_def* nonnull %0, %struct.png_info_def* %1)
  br label %12

9:                                                ; preds = %4
  tail call void @cr_png_push_read_IDAT(%struct.png_struct_def* nonnull %0)
  br label %12

10:                                               ; preds = %4
  %11 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 103
  store i64 0, i64* %11, align 8
  br label %12

12:                                               ; preds = %2, %10, %9, %8, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @cr_png_process_data_pause(%struct.png_struct_def* noalias, i32) local_unnamed_addr #0 {
  %3 = icmp eq %struct.png_struct_def* %0, null
  br i1 %3, label %14, label %4

4:                                                ; preds = %2
  %5 = icmp eq i32 %1, 0
  br i1 %5, label %7, label %6

6:                                                ; preds = %4
  tail call void @cr_png_push_save_buffer(%struct.png_struct_def* nonnull %0)
  br label %14

7:                                                ; preds = %4
  %8 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 103
  %9 = load i64, i64* %8, align 8
  store i64 0, i64* %8, align 8
  %10 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 101
  %11 = load i64, i64* %10, align 8
  %12 = icmp ugt i64 %9, %11
  %13 = sub i64 %9, %11
  br i1 %12, label %15, label %14

14:                                               ; preds = %7, %2, %6
  br label %15

15:                                               ; preds = %7, %14
  %16 = phi i64 [ 0, %14 ], [ %13, %7 ]
  ret i64 %16
}

; Function Attrs: nounwind ssp uwtable
define hidden void @cr_png_push_save_buffer(%struct.png_struct_def* noalias) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 101
  %3 = load i64, i64* %2, align 8
  %4 = icmp eq i64 %3, 0
  br i1 %4, label %156, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 95
  %7 = load i8*, i8** %6, align 8
  %8 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 96
  %9 = load i8*, i8** %8, align 8
  %10 = icmp eq i8* %7, %9
  br i1 %10, label %156, label %11

11:                                               ; preds = %5
  %12 = icmp ult i64 %3, 32
  br i1 %12, label %100, label %13

13:                                               ; preds = %11
  %14 = getelementptr i8, i8* %9, i64 %3
  %15 = getelementptr i8, i8* %7, i64 %3
  %16 = icmp ult i8* %9, %15
  %17 = icmp ult i8* %7, %14
  %18 = and i1 %16, %17
  br i1 %18, label %100, label %19

19:                                               ; preds = %13
  %20 = and i64 %3, -32
  %21 = getelementptr i8, i8* %9, i64 %20
  %22 = getelementptr i8, i8* %7, i64 %20
  %23 = add i64 %20, -32
  %24 = lshr exact i64 %23, 5
  %25 = add nuw nsw i64 %24, 1
  %26 = and i64 %25, 3
  %27 = icmp ult i64 %23, 96
  br i1 %27, label %79, label %28

28:                                               ; preds = %19
  %29 = sub nsw i64 %25, %26
  br label %30

30:                                               ; preds = %30, %28
  %31 = phi i64 [ 0, %28 ], [ %76, %30 ]
  %32 = phi i64 [ %29, %28 ], [ %77, %30 ]
  %33 = getelementptr i8, i8* %9, i64 %31
  %34 = getelementptr i8, i8* %7, i64 %31
  %35 = bitcast i8* %34 to <16 x i8>*
  %36 = load <16 x i8>, <16 x i8>* %35, align 1, !alias.scope !10
  %37 = getelementptr i8, i8* %34, i64 16
  %38 = bitcast i8* %37 to <16 x i8>*
  %39 = load <16 x i8>, <16 x i8>* %38, align 1, !alias.scope !10
  %40 = bitcast i8* %33 to <16 x i8>*
  store <16 x i8> %36, <16 x i8>* %40, align 1, !alias.scope !13, !noalias !10
  %41 = getelementptr i8, i8* %33, i64 16
  %42 = bitcast i8* %41 to <16 x i8>*
  store <16 x i8> %39, <16 x i8>* %42, align 1, !alias.scope !13, !noalias !10
  %43 = or i64 %31, 32
  %44 = getelementptr i8, i8* %9, i64 %43
  %45 = getelementptr i8, i8* %7, i64 %43
  %46 = bitcast i8* %45 to <16 x i8>*
  %47 = load <16 x i8>, <16 x i8>* %46, align 1, !alias.scope !10
  %48 = getelementptr i8, i8* %45, i64 16
  %49 = bitcast i8* %48 to <16 x i8>*
  %50 = load <16 x i8>, <16 x i8>* %49, align 1, !alias.scope !10
  %51 = bitcast i8* %44 to <16 x i8>*
  store <16 x i8> %47, <16 x i8>* %51, align 1, !alias.scope !13, !noalias !10
  %52 = getelementptr i8, i8* %44, i64 16
  %53 = bitcast i8* %52 to <16 x i8>*
  store <16 x i8> %50, <16 x i8>* %53, align 1, !alias.scope !13, !noalias !10
  %54 = or i64 %31, 64
  %55 = getelementptr i8, i8* %9, i64 %54
  %56 = getelementptr i8, i8* %7, i64 %54
  %57 = bitcast i8* %56 to <16 x i8>*
  %58 = load <16 x i8>, <16 x i8>* %57, align 1, !alias.scope !10
  %59 = getelementptr i8, i8* %56, i64 16
  %60 = bitcast i8* %59 to <16 x i8>*
  %61 = load <16 x i8>, <16 x i8>* %60, align 1, !alias.scope !10
  %62 = bitcast i8* %55 to <16 x i8>*
  store <16 x i8> %58, <16 x i8>* %62, align 1, !alias.scope !13, !noalias !10
  %63 = getelementptr i8, i8* %55, i64 16
  %64 = bitcast i8* %63 to <16 x i8>*
  store <16 x i8> %61, <16 x i8>* %64, align 1, !alias.scope !13, !noalias !10
  %65 = or i64 %31, 96
  %66 = getelementptr i8, i8* %9, i64 %65
  %67 = getelementptr i8, i8* %7, i64 %65
  %68 = bitcast i8* %67 to <16 x i8>*
  %69 = load <16 x i8>, <16 x i8>* %68, align 1, !alias.scope !10
  %70 = getelementptr i8, i8* %67, i64 16
  %71 = bitcast i8* %70 to <16 x i8>*
  %72 = load <16 x i8>, <16 x i8>* %71, align 1, !alias.scope !10
  %73 = bitcast i8* %66 to <16 x i8>*
  store <16 x i8> %69, <16 x i8>* %73, align 1, !alias.scope !13, !noalias !10
  %74 = getelementptr i8, i8* %66, i64 16
  %75 = bitcast i8* %74 to <16 x i8>*
  store <16 x i8> %72, <16 x i8>* %75, align 1, !alias.scope !13, !noalias !10
  %76 = add i64 %31, 128
  %77 = add i64 %32, -4
  %78 = icmp eq i64 %77, 0
  br i1 %78, label %79, label %30, !llvm.loop !15

79:                                               ; preds = %30, %19
  %80 = phi i64 [ 0, %19 ], [ %76, %30 ]
  %81 = icmp eq i64 %26, 0
  br i1 %81, label %98, label %82

82:                                               ; preds = %79, %82
  %83 = phi i64 [ %95, %82 ], [ %80, %79 ]
  %84 = phi i64 [ %96, %82 ], [ %26, %79 ]
  %85 = getelementptr i8, i8* %9, i64 %83
  %86 = getelementptr i8, i8* %7, i64 %83
  %87 = bitcast i8* %86 to <16 x i8>*
  %88 = load <16 x i8>, <16 x i8>* %87, align 1, !alias.scope !10
  %89 = getelementptr i8, i8* %86, i64 16
  %90 = bitcast i8* %89 to <16 x i8>*
  %91 = load <16 x i8>, <16 x i8>* %90, align 1, !alias.scope !10
  %92 = bitcast i8* %85 to <16 x i8>*
  store <16 x i8> %88, <16 x i8>* %92, align 1, !alias.scope !13, !noalias !10
  %93 = getelementptr i8, i8* %85, i64 16
  %94 = bitcast i8* %93 to <16 x i8>*
  store <16 x i8> %91, <16 x i8>* %94, align 1, !alias.scope !13, !noalias !10
  %95 = add i64 %83, 32
  %96 = add i64 %84, -1
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %98, label %82, !llvm.loop !17

98:                                               ; preds = %82, %79
  %99 = icmp eq i64 %3, %20
  br i1 %99, label %154, label %100

100:                                              ; preds = %98, %13, %11
  %101 = phi i8* [ %9, %13 ], [ %9, %11 ], [ %21, %98 ]
  %102 = phi i8* [ %7, %13 ], [ %7, %11 ], [ %22, %98 ]
  %103 = phi i64 [ 0, %13 ], [ 0, %11 ], [ %20, %98 ]
  %104 = xor i64 %103, -1
  %105 = add i64 %3, %104
  %106 = and i64 %3, 7
  %107 = icmp eq i64 %106, 0
  br i1 %107, label %119, label %108

108:                                              ; preds = %100, %108
  %109 = phi i8* [ %116, %108 ], [ %101, %100 ]
  %110 = phi i8* [ %115, %108 ], [ %102, %100 ]
  %111 = phi i64 [ %114, %108 ], [ %103, %100 ]
  %112 = phi i64 [ %117, %108 ], [ %106, %100 ]
  %113 = load i8, i8* %110, align 1
  store i8 %113, i8* %109, align 1
  %114 = add nuw i64 %111, 1
  %115 = getelementptr inbounds i8, i8* %110, i64 1
  %116 = getelementptr inbounds i8, i8* %109, i64 1
  %117 = add i64 %112, -1
  %118 = icmp eq i64 %117, 0
  br i1 %118, label %119, label %108, !llvm.loop !19

119:                                              ; preds = %108, %100
  %120 = phi i8* [ %101, %100 ], [ %116, %108 ]
  %121 = phi i8* [ %102, %100 ], [ %115, %108 ]
  %122 = phi i64 [ %103, %100 ], [ %114, %108 ]
  %123 = icmp ult i64 %105, 7
  br i1 %123, label %154, label %124

124:                                              ; preds = %119, %124
  %125 = phi i8* [ %152, %124 ], [ %120, %119 ]
  %126 = phi i8* [ %151, %124 ], [ %121, %119 ]
  %127 = phi i64 [ %150, %124 ], [ %122, %119 ]
  %128 = load i8, i8* %126, align 1
  store i8 %128, i8* %125, align 1
  %129 = getelementptr inbounds i8, i8* %126, i64 1
  %130 = getelementptr inbounds i8, i8* %125, i64 1
  %131 = load i8, i8* %129, align 1
  store i8 %131, i8* %130, align 1
  %132 = getelementptr inbounds i8, i8* %126, i64 2
  %133 = getelementptr inbounds i8, i8* %125, i64 2
  %134 = load i8, i8* %132, align 1
  store i8 %134, i8* %133, align 1
  %135 = getelementptr inbounds i8, i8* %126, i64 3
  %136 = getelementptr inbounds i8, i8* %125, i64 3
  %137 = load i8, i8* %135, align 1
  store i8 %137, i8* %136, align 1
  %138 = getelementptr inbounds i8, i8* %126, i64 4
  %139 = getelementptr inbounds i8, i8* %125, i64 4
  %140 = load i8, i8* %138, align 1
  store i8 %140, i8* %139, align 1
  %141 = getelementptr inbounds i8, i8* %126, i64 5
  %142 = getelementptr inbounds i8, i8* %125, i64 5
  %143 = load i8, i8* %141, align 1
  store i8 %143, i8* %142, align 1
  %144 = getelementptr inbounds i8, i8* %126, i64 6
  %145 = getelementptr inbounds i8, i8* %125, i64 6
  %146 = load i8, i8* %144, align 1
  store i8 %146, i8* %145, align 1
  %147 = getelementptr inbounds i8, i8* %126, i64 7
  %148 = getelementptr inbounds i8, i8* %125, i64 7
  %149 = load i8, i8* %147, align 1
  store i8 %149, i8* %148, align 1
  %150 = add nuw i64 %127, 8
  %151 = getelementptr inbounds i8, i8* %126, i64 8
  %152 = getelementptr inbounds i8, i8* %125, i64 8
  %153 = icmp eq i64 %150, %3
  br i1 %153, label %154, label %124, !llvm.loop !20

154:                                              ; preds = %119, %124, %98
  %155 = load i64, i64* %2, align 8
  br label %156

156:                                              ; preds = %154, %5, %1
  %157 = phi i64 [ %155, %154 ], [ %3, %5 ], [ 0, %1 ]
  %158 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 104
  %159 = load i64, i64* %158, align 8
  %160 = add i64 %159, %157
  %161 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 102
  %162 = load i64, i64* %161, align 8
  %163 = icmp ugt i64 %160, %162
  br i1 %163, label %164, label %184

164:                                              ; preds = %156
  %165 = sub i64 -257, %159
  %166 = icmp ugt i64 %157, %165
  br i1 %166, label %167, label %168

167:                                              ; preds = %164
  tail call void @cr_png_error(%struct.png_struct_def* %0, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.7, i64 0, i64 0)) #7
  unreachable

168:                                              ; preds = %164
  %169 = add i64 %160, 256
  %170 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 96
  %171 = load i8*, i8** %170, align 8
  %172 = tail call noalias i8* @cr_png_malloc_warn(%struct.png_struct_def* %0, i64 %169) #6
  store i8* %172, i8** %170, align 8
  %173 = icmp eq i8* %172, null
  br i1 %173, label %174, label %175

174:                                              ; preds = %168
  tail call void @cr_png_free(%struct.png_struct_def* %0, i8* %171) #6
  tail call void @cr_png_error(%struct.png_struct_def* %0, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.8, i64 0, i64 0)) #7
  unreachable

175:                                              ; preds = %168
  %176 = icmp eq i8* %171, null
  %177 = load i64, i64* %2, align 8
  br i1 %176, label %179, label %178

178:                                              ; preds = %175
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %172, i8* nonnull align 1 %171, i64 %177, i1 false)
  br label %182

179:                                              ; preds = %175
  %180 = icmp eq i64 %177, 0
  br i1 %180, label %182, label %181

181:                                              ; preds = %179
  tail call void @cr_png_error(%struct.png_struct_def* %0, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.9, i64 0, i64 0)) #7
  unreachable

182:                                              ; preds = %179, %178
  tail call void @cr_png_free(%struct.png_struct_def* %0, i8* %171) #6
  store i64 %169, i64* %161, align 8
  %183 = load i64, i64* %158, align 8
  br label %184

184:                                              ; preds = %182, %156
  %185 = phi i64 [ %183, %182 ], [ %159, %156 ]
  %186 = icmp eq i64 %185, 0
  br i1 %186, label %197, label %187

187:                                              ; preds = %184
  %188 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 96
  %189 = load i8*, i8** %188, align 8
  %190 = load i64, i64* %2, align 8
  %191 = getelementptr inbounds i8, i8* %189, i64 %190
  %192 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 97
  %193 = load i8*, i8** %192, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %191, i8* align 1 %193, i64 %185, i1 false)
  %194 = load i64, i64* %158, align 8
  %195 = load i64, i64* %2, align 8
  %196 = add i64 %195, %194
  store i64 %196, i64* %2, align 8
  store i64 0, i64* %158, align 8
  br label %197

197:                                              ; preds = %184, %187
  %198 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 96
  %199 = bitcast i8** %198 to i64*
  %200 = load i64, i64* %199, align 8
  %201 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 95
  %202 = bitcast i8** %201 to i64*
  store i64 %200, i64* %202, align 8
  %203 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 103
  store i64 0, i64* %203, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @cr_png_process_data_skip(%struct.png_struct_def* noalias) local_unnamed_addr #0 {
  tail call void @cr_png_app_warning(%struct.png_struct_def* %0, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str, i64 0, i64 0)) #6
  ret i32 0
}

declare void @cr_png_app_warning(%struct.png_struct_def*, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @cr_png_push_read_sig(%struct.png_struct_def* noalias, %struct.png_info_def* noalias) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 66
  %4 = load i8, i8* %3, align 1
  %5 = zext i8 %4 to i64
  %6 = sub nsw i64 8, %5
  %7 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 103
  %8 = load i64, i64* %7, align 8
  %9 = icmp ult i64 %8, %6
  %10 = select i1 %9, i64 %8, i64 %6
  %11 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %1, i64 0, i32 15, i64 %5
  %12 = icmp eq %struct.png_struct_def* %0, null
  br i1 %12, label %44, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 101
  %15 = load i64, i64* %14, align 8
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %27, label %17

17:                                               ; preds = %13
  %18 = icmp ugt i64 %15, %10
  %19 = select i1 %18, i64 %10, i64 %15
  %20 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 95
  %21 = load i8*, i8** %20, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %11, i8* align 1 %21, i64 %19, i1 false) #6
  %22 = sub i64 %10, %19
  %23 = getelementptr inbounds i8, i8* %11, i64 %19
  %24 = sub i64 %8, %19
  store i64 %24, i64* %7, align 8
  %25 = sub i64 %15, %19
  store i64 %25, i64* %14, align 8
  %26 = getelementptr inbounds i8, i8* %21, i64 %19
  store i8* %26, i8** %20, align 8
  br label %27

27:                                               ; preds = %17, %13
  %28 = phi i64 [ %24, %17 ], [ %8, %13 ]
  %29 = phi i64 [ %22, %17 ], [ %10, %13 ]
  %30 = phi i8* [ %23, %17 ], [ %11, %13 ]
  %31 = icmp eq i64 %29, 0
  br i1 %31, label %44, label %32

32:                                               ; preds = %27
  %33 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 104
  %34 = load i64, i64* %33, align 8
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %44, label %36

36:                                               ; preds = %32
  %37 = icmp ult i64 %29, %34
  %38 = select i1 %37, i64 %29, i64 %34
  %39 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 97
  %40 = load i8*, i8** %39, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %30, i8* align 1 %40, i64 %38, i1 false) #6
  %41 = sub i64 %28, %38
  store i64 %41, i64* %7, align 8
  %42 = sub i64 %34, %38
  store i64 %42, i64* %33, align 8
  %43 = getelementptr inbounds i8, i8* %40, i64 %38
  store i8* %43, i8** %39, align 8
  br label %44

44:                                               ; preds = %2, %27, %32, %36
  %45 = trunc i64 %10 to i8
  %46 = add i8 %4, %45
  store i8 %46, i8* %3, align 1
  %47 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %1, i64 0, i32 15, i64 0
  %48 = tail call i32 @cr_png_sig_cmp(i8* %47, i64 %5, i64 %10) #6
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %58, label %50

50:                                               ; preds = %44
  %51 = icmp ult i8 %4, 4
  br i1 %51, label %52, label %57

52:                                               ; preds = %50
  %53 = add i64 %10, -4
  %54 = tail call i32 @cr_png_sig_cmp(i8* %47, i64 %5, i64 %53) #6
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %57, label %56

56:                                               ; preds = %52
  tail call void @cr_png_error(%struct.png_struct_def* %0, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0)) #7
  unreachable

57:                                               ; preds = %52, %50
  tail call void @cr_png_error(%struct.png_struct_def* %0, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.2, i64 0, i64 0)) #7
  unreachable

58:                                               ; preds = %44
  %59 = load i8, i8* %3, align 1
  %60 = icmp ugt i8 %59, 7
  br i1 %60, label %61, label %63

61:                                               ; preds = %58
  %62 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 105
  store i32 1, i32* %62, align 8
  br label %63

63:                                               ; preds = %58, %61
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @cr_png_push_read_chunk(%struct.png_struct_def* noalias, %struct.png_info_def* noalias) local_unnamed_addr #0 {
  %3 = alloca i32, align 4
  %4 = bitcast i32* %3 to [4 x i8]*
  %5 = alloca i32, align 4
  %6 = bitcast i32* %5 to [4 x i8]*
  %7 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 15
  %8 = load i32, i32* %7, align 4
  %9 = and i32 %8, 256
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %74

11:                                               ; preds = %2
  %12 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #6
  %13 = bitcast i32* %5 to i8*
  store i32 -1431655766, i32* %3, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %13) #6
  %14 = getelementptr inbounds [4 x i8], [4 x i8]* %6, i64 0, i64 1
  %15 = getelementptr inbounds [4 x i8], [4 x i8]* %6, i64 0, i64 2
  %16 = getelementptr inbounds [4 x i8], [4 x i8]* %6, i64 0, i64 3
  %17 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 103
  store i32 -1431655766, i32* %5, align 4
  %18 = load i64, i64* %17, align 8
  %19 = icmp ult i64 %18, 8
  br i1 %19, label %20, label %21

20:                                               ; preds = %11
  tail call void @cr_png_push_save_buffer(%struct.png_struct_def* %0)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %13) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #6
  br label %286

21:                                               ; preds = %11
  %22 = icmp eq %struct.png_struct_def* %0, null
  br i1 %22, label %53, label %23

23:                                               ; preds = %21
  %24 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 101
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %38, label %27

27:                                               ; preds = %23
  %28 = icmp ult i64 %25, 4
  %29 = select i1 %28, i64 %25, i64 4
  %30 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 95
  %31 = load i8*, i8** %30, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %12, i8* align 1 %31, i64 %29, i1 false) #6
  %32 = sub nuw nsw i64 4, %29
  %33 = getelementptr inbounds [4 x i8], [4 x i8]* %4, i64 0, i64 %29
  %34 = sub nuw i64 %18, %29
  store i64 %34, i64* %17, align 8
  %35 = sub i64 %25, %29
  store i64 %35, i64* %24, align 8
  %36 = getelementptr inbounds i8, i8* %31, i64 %29
  store i8* %36, i8** %30, align 8
  %37 = icmp eq i64 %32, 0
  br i1 %37, label %53, label %38

38:                                               ; preds = %23, %27
  %39 = phi i64 [ %34, %27 ], [ %18, %23 ]
  %40 = phi i8* [ %33, %27 ], [ %12, %23 ]
  %41 = phi i64 [ %32, %27 ], [ 4, %23 ]
  %42 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 104
  %43 = load i64, i64* %42, align 8
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %53, label %45

45:                                               ; preds = %38
  %46 = icmp ult i64 %41, %43
  %47 = select i1 %46, i64 %41, i64 %43
  %48 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 97
  %49 = load i8*, i8** %48, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %40, i8* align 1 %49, i64 %47, i1 false) #6
  %50 = sub nuw i64 %39, %47
  store i64 %50, i64* %17, align 8
  %51 = sub i64 %43, %47
  store i64 %51, i64* %42, align 8
  %52 = getelementptr inbounds i8, i8* %49, i64 %47
  store i8* %52, i8** %48, align 8
  br label %53

53:                                               ; preds = %21, %27, %38, %45
  %54 = call i32 @cr_png_get_uint_31(%struct.png_struct_def* %0, i8* nonnull %12) #6
  %55 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 99
  store i32 %54, i32* %55, align 8
  call void @cr_png_reset_crc(%struct.png_struct_def* %0) #6
  call void @cr_png_crc_read(%struct.png_struct_def* %0, i8* nonnull %13, i32 4) #6
  %56 = load i8, i8* %13, align 4
  %57 = zext i8 %56 to i32
  %58 = shl nuw i32 %57, 24
  %59 = load i8, i8* %14, align 1
  %60 = zext i8 %59 to i32
  %61 = shl nuw nsw i32 %60, 16
  %62 = or i32 %61, %58
  %63 = load i8, i8* %15, align 2
  %64 = zext i8 %63 to i32
  %65 = shl nuw nsw i32 %64, 8
  %66 = or i32 %62, %65
  %67 = load i8, i8* %16, align 1
  %68 = zext i8 %67 to i32
  %69 = or i32 %66, %68
  %70 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 44
  store i32 %69, i32* %70, align 8
  call void @cr_png_check_chunk_name(%struct.png_struct_def* %0, i32 %69) #6
  %71 = load i32, i32* %55, align 8
  call void @cr_png_check_chunk_length(%struct.png_struct_def* %0, i32 %71) #6
  %72 = load i32, i32* %7, align 4
  %73 = or i32 %72, 256
  store i32 %73, i32* %7, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %13) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #6
  br label %74

74:                                               ; preds = %53, %2
  %75 = phi i32 [ %73, %53 ], [ %8, %2 ]
  %76 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 44
  %77 = load i32, i32* %76, align 8
  %78 = icmp eq i32 %77, 1229209940
  br i1 %78, label %79, label %110

79:                                               ; preds = %74
  %80 = and i32 %75, 8
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %84, label %82

82:                                               ; preds = %79
  %83 = or i32 %75, 8192
  store i32 %83, i32* %7, align 4
  br label %84

84:                                               ; preds = %79, %82
  %85 = phi i32 [ %75, %79 ], [ %83, %82 ]
  %86 = and i32 %85, 1
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %89

88:                                               ; preds = %84
  call void @cr_png_error(%struct.png_struct_def* %0, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.3, i64 0, i64 0)) #7
  unreachable

89:                                               ; preds = %84
  %90 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 60
  %91 = load i8, i8* %90, align 1
  %92 = icmp eq i8 %91, 3
  %93 = and i32 %85, 2
  %94 = icmp eq i32 %93, 0
  %95 = and i1 %94, %92
  br i1 %95, label %96, label %97

96:                                               ; preds = %89
  call void @cr_png_error(%struct.png_struct_def* %0, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.4, i64 0, i64 0)) #7
  unreachable

97:                                               ; preds = %89
  %98 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 105
  store i32 2, i32* %98, align 8
  %99 = and i32 %85, 8196
  %100 = icmp eq i32 %99, 4
  br i1 %100, label %101, label %105

101:                                              ; preds = %97
  %102 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 99
  %103 = load i32, i32* %102, align 8
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %286, label %105

105:                                              ; preds = %97, %101
  %106 = or i32 %85, 4
  store i32 %106, i32* %7, align 4
  %107 = and i32 %85, 8
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %137, label %109

109:                                              ; preds = %105
  call void @cr_png_benign_error(%struct.png_struct_def* %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5, i64 0, i64 0)) #6
  br label %137

110:                                              ; preds = %74
  switch i32 %77, label %137 [
    i32 1229472850, label %111
    i32 1229278788, label %122
  ]

111:                                              ; preds = %110
  %112 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 99
  %113 = load i32, i32* %112, align 8
  %114 = icmp eq i32 %113, 13
  br i1 %114, label %116, label %115

115:                                              ; preds = %111
  call void @cr_png_error(%struct.png_struct_def* %0, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.6, i64 0, i64 0)) #7
  unreachable

116:                                              ; preds = %111
  %117 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 103
  %118 = load i64, i64* %117, align 8
  %119 = icmp ult i64 %118, 17
  br i1 %119, label %120, label %121

120:                                              ; preds = %116
  call void @cr_png_push_save_buffer(%struct.png_struct_def* %0)
  br label %286

121:                                              ; preds = %116
  call void @cr_png_handle_IHDR(%struct.png_struct_def* %0, %struct.png_info_def* %1, i32 13) #6
  br label %283

122:                                              ; preds = %110
  %123 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 99
  %124 = load i32, i32* %123, align 8
  %125 = add i32 %124, 4
  %126 = zext i32 %125 to i64
  %127 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 103
  %128 = load i64, i64* %127, align 8
  %129 = icmp ult i64 %128, %126
  br i1 %129, label %130, label %131

130:                                              ; preds = %122
  call void @cr_png_push_save_buffer(%struct.png_struct_def* %0)
  br label %286

131:                                              ; preds = %122
  call void @cr_png_handle_IEND(%struct.png_struct_def* %0, %struct.png_info_def* %1, i32 %124) #6
  %132 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 105
  store i32 6, i32* %132, align 8
  %133 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 94
  %134 = load void (%struct.png_struct_def*, %struct.png_info_def*)*, void (%struct.png_struct_def*, %struct.png_info_def*)** %133, align 8, !alias.scope !21, !noalias !24
  %135 = icmp eq void (%struct.png_struct_def*, %struct.png_info_def*)* %134, null
  br i1 %135, label %283, label %136

136:                                              ; preds = %131
  call void %134(%struct.png_struct_def* %0, %struct.png_info_def* %1) #6
  br label %283

137:                                              ; preds = %109, %105, %110
  %138 = call i32 @cr_png_chunk_unknown_handling(%struct.png_struct_def* %0, i32 %77) #6
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %154, label %140

140:                                              ; preds = %137
  %141 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 99
  %142 = load i32, i32* %141, align 8
  %143 = add i32 %142, 4
  %144 = zext i32 %143 to i64
  %145 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 103
  %146 = load i64, i64* %145, align 8
  %147 = icmp ult i64 %146, %144
  br i1 %147, label %148, label %149

148:                                              ; preds = %140
  call void @cr_png_push_save_buffer(%struct.png_struct_def* %0)
  br label %286

149:                                              ; preds = %140
  call void @cr_png_handle_unknown(%struct.png_struct_def* %0, %struct.png_info_def* %1, i32 %142, i32 %138) #6
  %150 = icmp eq i32 %77, 1347179589
  br i1 %150, label %151, label %283

151:                                              ; preds = %149
  %152 = load i32, i32* %7, align 4
  %153 = or i32 %152, 2
  store i32 %153, i32* %7, align 4
  br label %283

154:                                              ; preds = %137
  %155 = icmp eq i32 %77, 1347179589
  br i1 %155, label %156, label %166

156:                                              ; preds = %154
  %157 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 99
  %158 = load i32, i32* %157, align 8
  %159 = add i32 %158, 4
  %160 = zext i32 %159 to i64
  %161 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 103
  %162 = load i64, i64* %161, align 8
  %163 = icmp ult i64 %162, %160
  br i1 %163, label %164, label %165

164:                                              ; preds = %156
  call void @cr_png_push_save_buffer(%struct.png_struct_def* %0)
  br label %286

165:                                              ; preds = %156
  call void @cr_png_handle_PLTE(%struct.png_struct_def* %0, %struct.png_info_def* %1, i32 %158) #6
  br label %283

166:                                              ; preds = %154
  br i1 %78, label %167, label %201

167:                                              ; preds = %166
  %168 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 99
  %169 = load i32, i32* %168, align 8
  %170 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 50
  store i32 %169, i32* %170, align 8
  %171 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 105
  store i32 2, i32* %171, align 8
  %172 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 92
  %173 = load void (%struct.png_struct_def*, %struct.png_info_def*)*, void (%struct.png_struct_def*, %struct.png_info_def*)** %172, align 8, !alias.scope !26, !noalias !29
  %174 = icmp eq void (%struct.png_struct_def*, %struct.png_info_def*)* %173, null
  br i1 %174, label %176, label %175

175:                                              ; preds = %167
  call void %173(%struct.png_struct_def* %0, %struct.png_info_def* %1) #6
  br label %176

176:                                              ; preds = %167, %175
  %177 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 63
  %178 = load i8, i8* %177, align 4
  %179 = icmp ugt i8 %178, 7
  %180 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 42
  %181 = load i32, i32* %180, align 8
  %182 = zext i32 %181 to i64
  %183 = zext i8 %178 to i64
  br i1 %179, label %184, label %187

184:                                              ; preds = %176
  %185 = lshr i64 %183, 3
  %186 = mul nuw nsw i64 %185, %182
  br label %191

187:                                              ; preds = %176
  %188 = mul nuw nsw i64 %182, %183
  %189 = add nuw nsw i64 %188, 7
  %190 = lshr i64 %189, 3
  br label %191

191:                                              ; preds = %187, %184
  %192 = phi i64 [ %186, %184 ], [ %190, %187 ]
  %193 = trunc i64 %192 to i32
  %194 = add i32 %193, 1
  %195 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 19, i32 4
  store i32 %194, i32* %195, align 8
  %196 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 46
  %197 = bitcast i8** %196 to i64*
  %198 = load i64, i64* %197, align 8
  %199 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 19, i32 3
  %200 = bitcast i8** %199 to i64*
  store i64 %198, i64* %200, align 8
  br label %286

201:                                              ; preds = %166
  %202 = load i32, i32* %76, align 8
  switch i32 %202, label %223 [
    i32 1732332865, label %203
    i32 1665684045, label %213
  ]

203:                                              ; preds = %201
  %204 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 99
  %205 = load i32, i32* %204, align 8
  %206 = add i32 %205, 4
  %207 = zext i32 %206 to i64
  %208 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 103
  %209 = load i64, i64* %208, align 8
  %210 = icmp ult i64 %209, %207
  br i1 %210, label %211, label %212

211:                                              ; preds = %203
  call void @cr_png_push_save_buffer(%struct.png_struct_def* %0)
  br label %286

212:                                              ; preds = %203
  call void @cr_png_handle_gAMA(%struct.png_struct_def* %0, %struct.png_info_def* %1, i32 %205) #6
  br label %283

213:                                              ; preds = %201
  %214 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 99
  %215 = load i32, i32* %214, align 8
  %216 = add i32 %215, 4
  %217 = zext i32 %216 to i64
  %218 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 103
  %219 = load i64, i64* %218, align 8
  %220 = icmp ult i64 %219, %217
  br i1 %220, label %221, label %222

221:                                              ; preds = %213
  call void @cr_png_push_save_buffer(%struct.png_struct_def* %0)
  br label %286

222:                                              ; preds = %213
  call void @cr_png_handle_cHRM(%struct.png_struct_def* %0, %struct.png_info_def* %1, i32 %215) #6
  br label %283

223:                                              ; preds = %201
  %224 = icmp eq i32 %77, 1934772034
  br i1 %224, label %225, label %235

225:                                              ; preds = %223
  %226 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 99
  %227 = load i32, i32* %226, align 8
  %228 = add i32 %227, 4
  %229 = zext i32 %228 to i64
  %230 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 103
  %231 = load i64, i64* %230, align 8
  %232 = icmp ult i64 %231, %229
  br i1 %232, label %233, label %234

233:                                              ; preds = %225
  call void @cr_png_push_save_buffer(%struct.png_struct_def* %0)
  br label %286

234:                                              ; preds = %225
  call void @cr_png_handle_sRGB(%struct.png_struct_def* %0, %struct.png_info_def* %1, i32 %227) #6
  br label %283

235:                                              ; preds = %223
  %236 = icmp eq i32 %202, 1766015824
  br i1 %236, label %237, label %247

237:                                              ; preds = %235
  %238 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 99
  %239 = load i32, i32* %238, align 8
  %240 = add i32 %239, 4
  %241 = zext i32 %240 to i64
  %242 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 103
  %243 = load i64, i64* %242, align 8
  %244 = icmp ult i64 %243, %241
  br i1 %244, label %245, label %246

245:                                              ; preds = %237
  call void @cr_png_push_save_buffer(%struct.png_struct_def* %0)
  br label %286

246:                                              ; preds = %237
  call void @cr_png_handle_iCCP(%struct.png_struct_def* %0, %struct.png_info_def* %1, i32 %239) #6
  br label %283

247:                                              ; preds = %235
  switch i32 %77, label %268 [
    i32 1951551059, label %248
    i32 1950701684, label %258
  ]

248:                                              ; preds = %247
  %249 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 99
  %250 = load i32, i32* %249, align 8
  %251 = add i32 %250, 4
  %252 = zext i32 %251 to i64
  %253 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 103
  %254 = load i64, i64* %253, align 8
  %255 = icmp ult i64 %254, %252
  br i1 %255, label %256, label %257

256:                                              ; preds = %248
  call void @cr_png_push_save_buffer(%struct.png_struct_def* %0)
  br label %286

257:                                              ; preds = %248
  call void @cr_png_handle_tRNS(%struct.png_struct_def* %0, %struct.png_info_def* %1, i32 %250) #6
  br label %283

258:                                              ; preds = %247
  %259 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 99
  %260 = load i32, i32* %259, align 8
  %261 = add i32 %260, 4
  %262 = zext i32 %261 to i64
  %263 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 103
  %264 = load i64, i64* %263, align 8
  %265 = icmp ult i64 %264, %262
  br i1 %265, label %266, label %267

266:                                              ; preds = %258
  call void @cr_png_push_save_buffer(%struct.png_struct_def* %0)
  br label %286

267:                                              ; preds = %258
  call void @cr_png_handle_tEXt(%struct.png_struct_def* %0, %struct.png_info_def* %1, i32 %260) #6
  br label %283

268:                                              ; preds = %247
  %269 = icmp eq i32 %77, 2052348020
  %270 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 99
  %271 = load i32, i32* %270, align 8
  %272 = add i32 %271, 4
  %273 = zext i32 %272 to i64
  %274 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 103
  %275 = load i64, i64* %274, align 8
  %276 = icmp ult i64 %275, %273
  br i1 %269, label %277, label %280

277:                                              ; preds = %268
  br i1 %276, label %278, label %279

278:                                              ; preds = %277
  call void @cr_png_push_save_buffer(%struct.png_struct_def* %0)
  br label %286

279:                                              ; preds = %277
  call void @cr_png_handle_zTXt(%struct.png_struct_def* %0, %struct.png_info_def* %1, i32 %271) #6
  br label %283

280:                                              ; preds = %268
  br i1 %276, label %281, label %282

281:                                              ; preds = %280
  call void @cr_png_push_save_buffer(%struct.png_struct_def* %0)
  br label %286

282:                                              ; preds = %280
  call void @cr_png_handle_unknown(%struct.png_struct_def* %0, %struct.png_info_def* %1, i32 %271, i32 0) #6
  br label %283

283:                                              ; preds = %136, %131, %165, %212, %234, %257, %279, %282, %267, %246, %222, %149, %151, %121
  %284 = load i32, i32* %7, align 4
  %285 = and i32 %284, -257
  store i32 %285, i32* %7, align 4
  br label %286

286:                                              ; preds = %101, %20, %283, %281, %278, %266, %256, %245, %233, %221, %211, %191, %164, %148, %130, %120
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @cr_png_push_read_IDAT(%struct.png_struct_def* noalias) local_unnamed_addr #0 {
  %2 = alloca i32, align 4
  %3 = bitcast i32* %2 to [4 x i8]*
  %4 = alloca i32, align 4
  %5 = bitcast i32* %4 to [4 x i8]*
  %6 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 15
  %7 = load i32, i32* %6, align 4
  %8 = and i32 %7, 256
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 50
  %12 = load i32, i32* %11, align 8
  br label %87

13:                                               ; preds = %1
  %14 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %14) #6
  %15 = bitcast i32* %4 to i8*
  store i32 -1431655766, i32* %2, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %15) #6
  %16 = getelementptr inbounds [4 x i8], [4 x i8]* %5, i64 0, i64 1
  %17 = getelementptr inbounds [4 x i8], [4 x i8]* %5, i64 0, i64 2
  %18 = getelementptr inbounds [4 x i8], [4 x i8]* %5, i64 0, i64 3
  %19 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 103
  store i32 -1431655766, i32* %4, align 4
  %20 = load i64, i64* %19, align 8
  %21 = icmp ult i64 %20, 8
  br i1 %21, label %22, label %23

22:                                               ; preds = %13
  tail call void @cr_png_push_save_buffer(%struct.png_struct_def* %0)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %15) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %14) #6
  br label %151

23:                                               ; preds = %13
  %24 = icmp eq %struct.png_struct_def* %0, null
  br i1 %24, label %55, label %25

25:                                               ; preds = %23
  %26 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 101
  %27 = load i64, i64* %26, align 8
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %40, label %29

29:                                               ; preds = %25
  %30 = icmp ult i64 %27, 4
  %31 = select i1 %30, i64 %27, i64 4
  %32 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 95
  %33 = load i8*, i8** %32, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %14, i8* align 1 %33, i64 %31, i1 false) #6
  %34 = sub nuw nsw i64 4, %31
  %35 = getelementptr inbounds [4 x i8], [4 x i8]* %3, i64 0, i64 %31
  %36 = sub nuw i64 %20, %31
  store i64 %36, i64* %19, align 8
  %37 = sub i64 %27, %31
  store i64 %37, i64* %26, align 8
  %38 = getelementptr inbounds i8, i8* %33, i64 %31
  store i8* %38, i8** %32, align 8
  %39 = icmp eq i64 %34, 0
  br i1 %39, label %55, label %40

40:                                               ; preds = %25, %29
  %41 = phi i64 [ %36, %29 ], [ %20, %25 ]
  %42 = phi i8* [ %35, %29 ], [ %14, %25 ]
  %43 = phi i64 [ %34, %29 ], [ 4, %25 ]
  %44 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 104
  %45 = load i64, i64* %44, align 8
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %55, label %47

47:                                               ; preds = %40
  %48 = icmp ult i64 %43, %45
  %49 = select i1 %48, i64 %43, i64 %45
  %50 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 97
  %51 = load i8*, i8** %50, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %42, i8* align 1 %51, i64 %49, i1 false) #6
  %52 = sub nuw i64 %41, %49
  store i64 %52, i64* %19, align 8
  %53 = sub i64 %45, %49
  store i64 %53, i64* %44, align 8
  %54 = getelementptr inbounds i8, i8* %51, i64 %49
  store i8* %54, i8** %50, align 8
  br label %55

55:                                               ; preds = %23, %29, %40, %47
  %56 = call i32 @cr_png_get_uint_31(%struct.png_struct_def* %0, i8* nonnull %14) #6
  %57 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 99
  store i32 %56, i32* %57, align 8
  call void @cr_png_reset_crc(%struct.png_struct_def* %0) #6
  call void @cr_png_crc_read(%struct.png_struct_def* %0, i8* nonnull %15, i32 4) #6
  %58 = load i8, i8* %15, align 4
  %59 = zext i8 %58 to i32
  %60 = shl nuw i32 %59, 24
  %61 = load i8, i8* %16, align 1
  %62 = zext i8 %61 to i32
  %63 = shl nuw nsw i32 %62, 16
  %64 = or i32 %63, %60
  %65 = load i8, i8* %17, align 2
  %66 = zext i8 %65 to i32
  %67 = shl nuw nsw i32 %66, 8
  %68 = or i32 %64, %67
  %69 = load i8, i8* %18, align 1
  %70 = zext i8 %69 to i32
  %71 = or i32 %68, %70
  %72 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 44
  store i32 %71, i32* %72, align 8
  %73 = load i32, i32* %6, align 4
  %74 = or i32 %73, 256
  store i32 %74, i32* %6, align 4
  %75 = icmp eq i32 %71, 1229209940
  br i1 %75, label %83, label %76

76:                                               ; preds = %55
  %77 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 105
  store i32 1, i32* %77, align 8
  %78 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 16
  %79 = load i32, i32* %78, align 8
  %80 = and i32 %79, 8
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %86

82:                                               ; preds = %76
  call void @cr_png_error(%struct.png_struct_def* %0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.10, i64 0, i64 0)) #7
  unreachable

83:                                               ; preds = %55
  %84 = load i32, i32* %57, align 8
  %85 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 50
  store i32 %84, i32* %85, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %15) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %14) #6
  br label %87

86:                                               ; preds = %76
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %15) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %14) #6
  br label %151

87:                                               ; preds = %10, %83
  %88 = phi i32 [ %12, %10 ], [ %84, %83 ]
  %89 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 50
  %90 = icmp eq i32 %88, 0
  br i1 %90, label %140, label %91

91:                                               ; preds = %87
  %92 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 101
  %93 = load i64, i64* %92, align 8
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %114, label %95

95:                                               ; preds = %91
  %96 = zext i32 %88 to i64
  %97 = icmp ugt i64 %93, %96
  %98 = trunc i64 %93 to i32
  %99 = select i1 %97, i64 %96, i64 %93
  %100 = select i1 %97, i32 %88, i32 %98
  %101 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 95
  %102 = load i8*, i8** %101, align 8
  call void @cr_png_calculate_crc(%struct.png_struct_def* %0, i8* %102, i64 %99) #6
  %103 = load i8*, i8** %101, align 8
  call void @cr_png_process_IDAT_data(%struct.png_struct_def* %0, i8* %103, i64 %99)
  %104 = load i32, i32* %89, align 8
  %105 = sub i32 %104, %100
  store i32 %105, i32* %89, align 8
  %106 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 103
  %107 = load i64, i64* %106, align 8
  %108 = sub i64 %107, %99
  store i64 %108, i64* %106, align 8
  %109 = load i64, i64* %92, align 8
  %110 = sub i64 %109, %99
  store i64 %110, i64* %92, align 8
  %111 = load i8*, i8** %101, align 8
  %112 = getelementptr inbounds i8, i8* %111, i64 %99
  store i8* %112, i8** %101, align 8
  %113 = icmp eq i32 %105, 0
  br i1 %113, label %140, label %114

114:                                              ; preds = %91, %95
  %115 = phi i32 [ %105, %95 ], [ %88, %91 ]
  %116 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 104
  %117 = load i64, i64* %116, align 8
  %118 = icmp eq i64 %117, 0
  br i1 %118, label %151, label %119

119:                                              ; preds = %114
  %120 = zext i32 %115 to i64
  %121 = icmp ugt i64 %117, %120
  %122 = trunc i64 %117 to i32
  %123 = select i1 %121, i64 %120, i64 %117
  %124 = select i1 %121, i32 %115, i32 %122
  %125 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 97
  %126 = load i8*, i8** %125, align 8
  call void @cr_png_calculate_crc(%struct.png_struct_def* %0, i8* %126, i64 %123) #6
  %127 = load i8*, i8** %125, align 8
  call void @cr_png_process_IDAT_data(%struct.png_struct_def* %0, i8* %127, i64 %123)
  %128 = load i32, i32* %89, align 8
  %129 = sub i32 %128, %124
  store i32 %129, i32* %89, align 8
  %130 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 103
  %131 = bitcast i64* %130 to <2 x i64>*
  %132 = load <2 x i64>, <2 x i64>* %131, align 8
  %133 = insertelement <2 x i64> undef, i64 %123, i32 0
  %134 = shufflevector <2 x i64> %133, <2 x i64> undef, <2 x i32> zeroinitializer
  %135 = sub <2 x i64> %132, %134
  %136 = bitcast i64* %130 to <2 x i64>*
  store <2 x i64> %135, <2 x i64>* %136, align 8
  %137 = load i8*, i8** %125, align 8
  %138 = getelementptr inbounds i8, i8* %137, i64 %123
  store i8* %138, i8** %125, align 8
  %139 = icmp eq i32 %129, 0
  br i1 %139, label %140, label %151

140:                                              ; preds = %87, %95, %119
  %141 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 103
  %142 = load i64, i64* %141, align 8
  %143 = icmp ult i64 %142, 4
  br i1 %143, label %144, label %145

144:                                              ; preds = %140
  call void @cr_png_push_save_buffer(%struct.png_struct_def* %0)
  br label %151

145:                                              ; preds = %140
  %146 = call i32 @cr_png_crc_finish(%struct.png_struct_def* %0, i32 0) #6
  %147 = load i32, i32* %6, align 4
  %148 = and i32 %147, -265
  %149 = or i32 %148, 8
  store i32 %149, i32* %6, align 4
  %150 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 18
  store i32 0, i32* %150, align 8
  br label %151

151:                                              ; preds = %114, %86, %22, %144, %145, %119
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @cr_png_push_fill_buffer(%struct.png_struct_def*, i8* nocapture, i64) #0 {
  %4 = icmp eq %struct.png_struct_def* %0, null
  br i1 %4, label %45, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 101
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %23, label %9

9:                                                ; preds = %5
  %10 = icmp ugt i64 %7, %2
  %11 = select i1 %10, i64 %2, i64 %7
  %12 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 95
  %13 = load i8*, i8** %12, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %13, i64 %11, i1 false)
  %14 = sub i64 %2, %11
  %15 = getelementptr inbounds i8, i8* %1, i64 %11
  %16 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 103
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %11
  store i64 %18, i64* %16, align 8
  %19 = load i64, i64* %6, align 8
  %20 = sub i64 %19, %11
  store i64 %20, i64* %6, align 8
  %21 = load i8*, i8** %12, align 8
  %22 = getelementptr inbounds i8, i8* %21, i64 %11
  store i8* %22, i8** %12, align 8
  br label %23

23:                                               ; preds = %5, %9
  %24 = phi i64 [ %14, %9 ], [ %2, %5 ]
  %25 = phi i8* [ %15, %9 ], [ %1, %5 ]
  %26 = icmp eq i64 %24, 0
  br i1 %26, label %45, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 104
  %29 = load i64, i64* %28, align 8
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %45, label %31

31:                                               ; preds = %27
  %32 = icmp ult i64 %24, %29
  %33 = select i1 %32, i64 %24, i64 %29
  %34 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 97
  %35 = load i8*, i8** %34, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %25, i8* align 1 %35, i64 %33, i1 false)
  %36 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 103
  %37 = bitcast i64* %36 to <2 x i64>*
  %38 = load <2 x i64>, <2 x i64>* %37, align 8
  %39 = insertelement <2 x i64> undef, i64 %33, i32 0
  %40 = shufflevector <2 x i64> %39, <2 x i64> undef, <2 x i32> zeroinitializer
  %41 = sub <2 x i64> %38, %40
  %42 = bitcast i64* %36 to <2 x i64>*
  store <2 x i64> %41, <2 x i64>* %42, align 8
  %43 = load i8*, i8** %34, align 8
  %44 = getelementptr inbounds i8, i8* %43, i64 %33
  store i8* %44, i8** %34, align 8
  br label %45

45:                                               ; preds = %31, %23, %27, %3
  ret void
}

declare i32 @cr_png_sig_cmp(i8*, i64, i64) local_unnamed_addr #3

; Function Attrs: noreturn
declare void @cr_png_error(%struct.png_struct_def*, i8*) local_unnamed_addr #4

declare i32 @cr_png_get_uint_31(%struct.png_struct_def*, i8*) local_unnamed_addr #3

declare void @cr_png_reset_crc(%struct.png_struct_def*) local_unnamed_addr #3

declare void @cr_png_crc_read(%struct.png_struct_def*, i8*, i32) local_unnamed_addr #3

declare void @cr_png_check_chunk_name(%struct.png_struct_def*, i32) local_unnamed_addr #3

declare void @cr_png_check_chunk_length(%struct.png_struct_def*, i32) local_unnamed_addr #3

declare void @cr_png_benign_error(%struct.png_struct_def*, i8*) local_unnamed_addr #3

declare void @cr_png_handle_IHDR(%struct.png_struct_def*, %struct.png_info_def*, i32) local_unnamed_addr #3

declare void @cr_png_handle_IEND(%struct.png_struct_def*, %struct.png_info_def*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @cr_png_push_have_end(%struct.png_struct_def* noalias, %struct.png_info_def* noalias) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 94
  %4 = load void (%struct.png_struct_def*, %struct.png_info_def*)*, void (%struct.png_struct_def*, %struct.png_info_def*)** %3, align 8
  %5 = icmp eq void (%struct.png_struct_def*, %struct.png_info_def*)* %4, null
  br i1 %5, label %7, label %6

6:                                                ; preds = %2
  tail call void %4(%struct.png_struct_def* %0, %struct.png_info_def* %1) #6
  br label %7

7:                                                ; preds = %2, %6
  ret void
}

declare i32 @cr_png_chunk_unknown_handling(%struct.png_struct_def*, i32) local_unnamed_addr #3

declare void @cr_png_handle_unknown(%struct.png_struct_def*, %struct.png_info_def*, i32, i32) local_unnamed_addr #3

declare void @cr_png_handle_PLTE(%struct.png_struct_def*, %struct.png_info_def*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @cr_png_push_have_info(%struct.png_struct_def* noalias, %struct.png_info_def* noalias) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 92
  %4 = load void (%struct.png_struct_def*, %struct.png_info_def*)*, void (%struct.png_struct_def*, %struct.png_info_def*)** %3, align 8
  %5 = icmp eq void (%struct.png_struct_def*, %struct.png_info_def*)* %4, null
  br i1 %5, label %7, label %6

6:                                                ; preds = %2
  tail call void %4(%struct.png_struct_def* %0, %struct.png_info_def* %1) #6
  br label %7

7:                                                ; preds = %2, %6
  ret void
}

declare void @cr_png_handle_gAMA(%struct.png_struct_def*, %struct.png_info_def*, i32) local_unnamed_addr #3

declare void @cr_png_handle_cHRM(%struct.png_struct_def*, %struct.png_info_def*, i32) local_unnamed_addr #3

declare void @cr_png_handle_sRGB(%struct.png_struct_def*, %struct.png_info_def*, i32) local_unnamed_addr #3

declare void @cr_png_handle_iCCP(%struct.png_struct_def*, %struct.png_info_def*, i32) local_unnamed_addr #3

declare void @cr_png_handle_tRNS(%struct.png_struct_def*, %struct.png_info_def*, i32) local_unnamed_addr #3

declare void @cr_png_handle_tEXt(%struct.png_struct_def*, %struct.png_info_def*, i32) local_unnamed_addr #3

declare void @cr_png_handle_zTXt(%struct.png_struct_def*, %struct.png_info_def*, i32) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare noalias i8* @cr_png_malloc_warn(%struct.png_struct_def*, i64) local_unnamed_addr #3

declare void @cr_png_free(%struct.png_struct_def*, i8*) local_unnamed_addr #3

declare void @cr_png_calculate_crc(%struct.png_struct_def*, i8*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @cr_png_process_IDAT_data(%struct.png_struct_def* noalias, i8*, i64) local_unnamed_addr #0 {
  %4 = icmp eq i64 %2, 0
  %5 = icmp eq i8* %1, null
  %6 = or i1 %5, %4
  br i1 %6, label %7, label %8

7:                                                ; preds = %3
  tail call void @cr_png_error(%struct.png_struct_def* %0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.11, i64 0, i64 0)) #7
  unreachable

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 19, i32 0
  store i8* %1, i8** %9, align 8
  %10 = trunc i64 %2 to i32
  %11 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 19, i32 1
  store i32 %10, i32* %11, align 8
  %12 = icmp eq i32 %10, 0
  br i1 %12, label %96, label %13

13:                                               ; preds = %8
  %14 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 16
  %15 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 19, i32 4
  %16 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 63
  %17 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 42
  %18 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 46
  %19 = bitcast i8** %18 to i64*
  %20 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 19, i32 3
  %21 = bitcast i8** %20 to i64*
  %22 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 43
  %23 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 39
  %24 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 58
  br label %25

25:                                               ; preds = %13, %92
  %26 = load i32, i32* %14, align 8
  %27 = and i32 %26, 8
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %95

29:                                               ; preds = %25
  %30 = load i32, i32* %15, align 8
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %50

32:                                               ; preds = %29
  %33 = load i8, i8* %16, align 4
  %34 = icmp ugt i8 %33, 7
  %35 = load i32, i32* %17, align 8
  %36 = zext i32 %35 to i64
  %37 = zext i8 %33 to i64
  br i1 %34, label %38, label %41

38:                                               ; preds = %32
  %39 = lshr i64 %37, 3
  %40 = mul nuw nsw i64 %39, %36
  br label %45

41:                                               ; preds = %32
  %42 = mul nuw nsw i64 %36, %37
  %43 = add nuw nsw i64 %42, 7
  %44 = lshr i64 %43, 3
  br label %45

45:                                               ; preds = %41, %38
  %46 = phi i64 [ %40, %38 ], [ %44, %41 ]
  %47 = trunc i64 %46 to i32
  %48 = add i32 %47, 1
  store i32 %48, i32* %15, align 8
  %49 = load i64, i64* %19, align 8
  store i64 %49, i64* %21, align 8
  br label %50

50:                                               ; preds = %29, %45
  %51 = tail call i32 @cr_png_zlib_inflate(%struct.png_struct_def* %0, i32 2) #6
  %52 = icmp ugt i32 %51, 1
  br i1 %52, label %53, label %68

53:                                               ; preds = %50
  %54 = load i32, i32* %14, align 8
  %55 = or i32 %54, 8
  store i32 %55, i32* %14, align 8
  %56 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 18
  store i32 0, i32* %56, align 8
  %57 = load i32, i32* %22, align 4
  %58 = load i32, i32* %23, align 8
  %59 = icmp ult i32 %57, %58
  br i1 %59, label %60, label %63

60:                                               ; preds = %53
  %61 = load i8, i8* %24, align 1
  %62 = icmp ugt i8 %61, 6
  br i1 %62, label %63, label %64

63:                                               ; preds = %53, %60
  tail call void @cr_png_warning(%struct.png_struct_def* %0, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.12, i64 0, i64 0)) #6
  br label %96

64:                                               ; preds = %60
  %65 = icmp eq i32 %51, -3
  br i1 %65, label %66, label %67

66:                                               ; preds = %64
  tail call void @cr_png_benign_error(%struct.png_struct_def* %0, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.13, i64 0, i64 0)) #6
  br label %96

67:                                               ; preds = %64
  tail call void @cr_png_error(%struct.png_struct_def* %0, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.14, i64 0, i64 0)) #7
  unreachable

68:                                               ; preds = %50
  %69 = load i8*, i8** %20, align 8
  %70 = load i8*, i8** %18, align 8
  %71 = icmp eq i8* %69, %70
  br i1 %71, label %87, label %72

72:                                               ; preds = %68
  %73 = load i32, i32* %22, align 4
  %74 = load i32, i32* %23, align 8
  %75 = icmp ult i32 %73, %74
  br i1 %75, label %76, label %79

76:                                               ; preds = %72
  %77 = load i8, i8* %24, align 1
  %78 = icmp ugt i8 %77, 6
  br i1 %78, label %79, label %83

79:                                               ; preds = %72, %76
  tail call void @cr_png_warning(%struct.png_struct_def* %0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.15, i64 0, i64 0)) #6
  %80 = load i32, i32* %14, align 8
  %81 = or i32 %80, 8
  store i32 %81, i32* %14, align 8
  %82 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 18
  store i32 0, i32* %82, align 8
  br label %96

83:                                               ; preds = %76
  %84 = load i32, i32* %15, align 8
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %87

86:                                               ; preds = %83
  tail call void @cr_png_push_process_row(%struct.png_struct_def* %0)
  br label %87

87:                                               ; preds = %68, %83, %86
  %88 = icmp eq i32 %51, 1
  br i1 %88, label %89, label %92

89:                                               ; preds = %87
  %90 = load i32, i32* %14, align 8
  %91 = or i32 %90, 8
  store i32 %91, i32* %14, align 8
  br label %92

92:                                               ; preds = %87, %89
  %93 = load i32, i32* %11, align 8
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %96, label %25

95:                                               ; preds = %25
  tail call void @cr_png_warning(%struct.png_struct_def* %0, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.16, i64 0, i64 0)) #6
  br label %96

96:                                               ; preds = %92, %8, %63, %66, %79, %95
  ret void
}

declare i32 @cr_png_crc_finish(%struct.png_struct_def*, i32) local_unnamed_addr #3

declare i32 @cr_png_zlib_inflate(%struct.png_struct_def*, i32) local_unnamed_addr #3

declare void @cr_png_warning(%struct.png_struct_def*, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @cr_png_push_process_row(%struct.png_struct_def* noalias) local_unnamed_addr #0 {
  %2 = alloca %struct.png_row_info_struct, align 8
  %3 = bitcast %struct.png_row_info_struct* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %3, i8 -86, i64 24, i1 false)
  %4 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 42
  %5 = load i32, i32* %4, align 8
  %6 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %2, i64 0, i32 0
  store i32 %5, i32* %6, align 8
  %7 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 60
  %8 = load i8, i8* %7, align 1
  %9 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %2, i64 0, i32 2
  store i8 %8, i8* %9, align 8
  %10 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 61
  %11 = load i8, i8* %10, align 2
  %12 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %2, i64 0, i32 3
  store i8 %11, i8* %12, align 1
  %13 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 64
  %14 = load i8, i8* %13, align 1
  %15 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %2, i64 0, i32 4
  store i8 %14, i8* %15, align 2
  %16 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 63
  %17 = load i8, i8* %16, align 4
  %18 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %2, i64 0, i32 5
  store i8 %17, i8* %18, align 1
  %19 = icmp ugt i8 %17, 7
  %20 = zext i32 %5 to i64
  %21 = zext i8 %17 to i64
  br i1 %19, label %22, label %25

22:                                               ; preds = %1
  %23 = lshr i64 %21, 3
  %24 = mul nuw nsw i64 %23, %20
  br label %29

25:                                               ; preds = %1
  %26 = mul nuw nsw i64 %21, %20
  %27 = add nuw nsw i64 %26, 7
  %28 = lshr i64 %27, 3
  br label %29

29:                                               ; preds = %25, %22
  %30 = phi i64 [ %24, %22 ], [ %28, %25 ]
  %31 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %2, i64 0, i32 1
  store i64 %30, i64* %31, align 8
  %32 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 46
  %33 = load i8*, i8** %32, align 8
  %34 = load i8, i8* %33, align 1
  %35 = zext i8 %34 to i32
  %36 = icmp eq i8 %34, 0
  br i1 %36, label %47, label %37

37:                                               ; preds = %29
  %38 = icmp ult i8 %34, 5
  br i1 %38, label %39, label %46

39:                                               ; preds = %37
  %40 = getelementptr inbounds i8, i8* %33, i64 1
  %41 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 45
  %42 = load i8*, i8** %41, align 8
  %43 = getelementptr inbounds i8, i8* %42, i64 1
  call void @cr_png_read_filter_row(%struct.png_struct_def* %0, %struct.png_row_info_struct* nonnull %2, i8* %40, i8* %43, i32 %35) #6
  %44 = load i8*, i8** %32, align 8
  %45 = load i64, i64* %31, align 8
  br label %47

46:                                               ; preds = %37
  tail call void @cr_png_error(%struct.png_struct_def* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.17, i64 0, i64 0)) #7
  unreachable

47:                                               ; preds = %29, %39
  %48 = phi i64 [ %30, %29 ], [ %45, %39 ]
  %49 = phi i8* [ %33, %29 ], [ %44, %39 ]
  %50 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 45
  %51 = load i8*, i8** %50, align 8
  %52 = add i64 %48, 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %51, i8* align 1 %49, i64 %52, i1 false)
  %53 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 17
  %54 = load i32, i32* %53, align 4
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %57, label %56

56:                                               ; preds = %47
  call void @cr_png_do_read_transformations(%struct.png_struct_def* %0, %struct.png_row_info_struct* nonnull %2) #6
  br label %57

57:                                               ; preds = %47, %56
  %58 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 68
  %59 = load i8, i8* %58, align 1
  %60 = icmp eq i8 %59, 0
  %61 = load i8, i8* %18, align 1
  br i1 %60, label %62, label %67

62:                                               ; preds = %57
  store i8 %61, i8* %58, align 1
  %63 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 67
  %64 = load i8, i8* %63, align 8
  %65 = icmp ugt i8 %61, %64
  br i1 %65, label %66, label %70

66:                                               ; preds = %62
  call void @cr_png_error(%struct.png_struct_def* %0, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.18, i64 0, i64 0)) #7
  unreachable

67:                                               ; preds = %57
  %68 = icmp eq i8 %59, %61
  br i1 %68, label %70, label %69

69:                                               ; preds = %67
  call void @cr_png_error(%struct.png_struct_def* %0, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.19, i64 0, i64 0)) #7
  unreachable

70:                                               ; preds = %67, %62
  %71 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 57
  %72 = load i8, i8* %71, align 2
  %73 = icmp eq i8 %72, 0
  br i1 %73, label %331, label %74

74:                                               ; preds = %70
  %75 = load i32, i32* %53, align 4
  %76 = and i32 %75, 2
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %331, label %78

78:                                               ; preds = %74
  %79 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 58
  %80 = load i8, i8* %79, align 1
  %81 = icmp ult i8 %80, 6
  br i1 %81, label %82, label %87

82:                                               ; preds = %78
  %83 = zext i8 %80 to i32
  %84 = load i8*, i8** %32, align 8
  %85 = getelementptr inbounds i8, i8* %84, i64 1
  call void @cr_png_do_read_interlace(%struct.png_row_info_struct* nonnull %2, i8* %85, i32 %83, i32 %75) #6
  %86 = load i8, i8* %79, align 1
  br label %87

87:                                               ; preds = %82, %78
  %88 = phi i8 [ %86, %82 ], [ %80, %78 ]
  switch i8 %88, label %311 [
    i8 0, label %98
    i8 1, label %95
    i8 2, label %187
    i8 3, label %92
    i8 4, label %251
    i8 5, label %89
  ]

89:                                               ; preds = %87
  %90 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 93
  %91 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 43
  br label %287

92:                                               ; preds = %87
  %93 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 93
  %94 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 43
  br label %225

95:                                               ; preds = %87
  %96 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 93
  %97 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 43
  br label %161

98:                                               ; preds = %87
  %99 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 93
  %100 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 43
  br label %101

101:                                              ; preds = %98, %109
  %102 = phi i32 [ 0, %98 ], [ %110, %109 ]
  %103 = load void (%struct.png_struct_def*, i8*, i32, i32)*, void (%struct.png_struct_def*, i8*, i32, i32)** %99, align 8, !alias.scope !31
  %104 = icmp eq void (%struct.png_struct_def*, i8*, i32, i32)* %103, null
  br i1 %104, label %109, label %105

105:                                              ; preds = %101
  %106 = load i8*, i8** %32, align 8
  %107 = getelementptr inbounds i8, i8* %106, i64 1
  %108 = load i32, i32* %100, align 4, !alias.scope !31
  call void %103(%struct.png_struct_def* %0, i8* %107, i32 %108, i32 0) #6
  br label %109

109:                                              ; preds = %101, %105
  call void @cr_png_read_push_finish_row(%struct.png_struct_def* %0)
  %110 = add nuw nsw i32 %102, 1
  %111 = icmp ult i32 %110, 8
  %112 = load i8, i8* %79, align 1
  %113 = icmp eq i8 %112, 0
  %114 = and i1 %111, %113
  br i1 %114, label %101, label %115

115:                                              ; preds = %109
  %116 = icmp eq i8 %112, 2
  br i1 %116, label %117, label %127

117:                                              ; preds = %115
  %118 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 93
  %119 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 43
  %120 = load void (%struct.png_struct_def*, i8*, i32, i32)*, void (%struct.png_struct_def*, i8*, i32, i32)** %118, align 8, !alias.scope !34
  %121 = icmp eq void (%struct.png_struct_def*, i8*, i32, i32)* %120, null
  br i1 %121, label %124, label %122

122:                                              ; preds = %117
  %123 = load i32, i32* %119, align 4, !alias.scope !34
  call void %120(%struct.png_struct_def* %0, i8* null, i32 %123, i32 2) #6
  br label %124

124:                                              ; preds = %117, %122
  call void @cr_png_read_push_finish_row(%struct.png_struct_def* %0)
  %125 = load i8, i8* %79, align 1
  %126 = icmp eq i8 %125, 2
  br i1 %126, label %352, label %127

127:                                              ; preds = %124, %357, %365, %115, %373
  %128 = phi i8 [ %374, %373 ], [ %112, %115 ], [ %125, %124 ], [ %358, %357 ], [ %366, %365 ]
  %129 = icmp eq i8 %128, 4
  br i1 %129, label %130, label %146

130:                                              ; preds = %127
  %131 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 38
  %132 = load i32, i32* %131, align 4
  %133 = icmp ult i32 %132, 5
  br i1 %133, label %134, label %146

134:                                              ; preds = %130
  %135 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 93
  %136 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 43
  %137 = icmp eq i8 %128, 4
  br i1 %137, label %138, label %146

138:                                              ; preds = %134
  %139 = load void (%struct.png_struct_def*, i8*, i32, i32)*, void (%struct.png_struct_def*, i8*, i32, i32)** %135, align 8, !alias.scope !37
  %140 = icmp eq void (%struct.png_struct_def*, i8*, i32, i32)* %139, null
  br i1 %140, label %143, label %141

141:                                              ; preds = %138
  %142 = load i32, i32* %136, align 4, !alias.scope !37
  call void %139(%struct.png_struct_def* %0, i8* null, i32 %142, i32 4) #6
  br label %143

143:                                              ; preds = %138, %141
  call void @cr_png_read_push_finish_row(%struct.png_struct_def* %0)
  %144 = load i8, i8* %79, align 1
  %145 = icmp eq i8 %144, 4
  br i1 %145, label %345, label %146

146:                                              ; preds = %134, %143, %130, %127, %350
  %147 = phi i8 [ %351, %350 ], [ %128, %127 ], [ %128, %130 ], [ %128, %134 ], [ %144, %143 ]
  %148 = icmp eq i8 %147, 6
  br i1 %148, label %149, label %344

149:                                              ; preds = %146
  %150 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 38
  %151 = load i32, i32* %150, align 4
  %152 = icmp ult i32 %151, 5
  br i1 %152, label %153, label %344

153:                                              ; preds = %149
  %154 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 93
  %155 = load void (%struct.png_struct_def*, i8*, i32, i32)*, void (%struct.png_struct_def*, i8*, i32, i32)** %154, align 8, !alias.scope !40
  %156 = icmp eq void (%struct.png_struct_def*, i8*, i32, i32)* %155, null
  br i1 %156, label %160, label %157

157:                                              ; preds = %153
  %158 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 43
  %159 = load i32, i32* %158, align 4, !alias.scope !40
  call void %155(%struct.png_struct_def* %0, i8* null, i32 %159, i32 6) #6
  br label %160

160:                                              ; preds = %153, %157
  call void @cr_png_read_push_finish_row(%struct.png_struct_def* %0)
  br label %344

161:                                              ; preds = %95, %169
  %162 = phi i32 [ 0, %95 ], [ %170, %169 ]
  %163 = load void (%struct.png_struct_def*, i8*, i32, i32)*, void (%struct.png_struct_def*, i8*, i32, i32)** %96, align 8, !alias.scope !43
  %164 = icmp eq void (%struct.png_struct_def*, i8*, i32, i32)* %163, null
  br i1 %164, label %169, label %165

165:                                              ; preds = %161
  %166 = load i8*, i8** %32, align 8
  %167 = getelementptr inbounds i8, i8* %166, i64 1
  %168 = load i32, i32* %97, align 4, !alias.scope !43
  call void %163(%struct.png_struct_def* %0, i8* %167, i32 %168, i32 1) #6
  br label %169

169:                                              ; preds = %161, %165
  call void @cr_png_read_push_finish_row(%struct.png_struct_def* %0)
  %170 = add nuw nsw i32 %162, 1
  %171 = icmp ult i32 %170, 8
  %172 = load i8, i8* %79, align 1
  %173 = icmp eq i8 %172, 1
  %174 = and i1 %171, %173
  br i1 %174, label %161, label %175

175:                                              ; preds = %169
  %176 = icmp eq i8 %172, 2
  br i1 %176, label %177, label %344

177:                                              ; preds = %175
  %178 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 93
  %179 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 43
  %180 = load void (%struct.png_struct_def*, i8*, i32, i32)*, void (%struct.png_struct_def*, i8*, i32, i32)** %178, align 8, !alias.scope !46
  %181 = icmp eq void (%struct.png_struct_def*, i8*, i32, i32)* %180, null
  br i1 %181, label %184, label %182

182:                                              ; preds = %177
  %183 = load i32, i32* %179, align 4, !alias.scope !46
  call void %180(%struct.png_struct_def* %0, i8* null, i32 %183, i32 2) #6
  br label %184

184:                                              ; preds = %177, %182
  call void @cr_png_read_push_finish_row(%struct.png_struct_def* %0)
  %185 = load i8, i8* %79, align 1
  %186 = icmp eq i8 %185, 2
  br i1 %186, label %375, label %344

187:                                              ; preds = %87
  %188 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 93
  %189 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 43
  %190 = load void (%struct.png_struct_def*, i8*, i32, i32)*, void (%struct.png_struct_def*, i8*, i32, i32)** %188, align 8, !alias.scope !49
  %191 = icmp eq void (%struct.png_struct_def*, i8*, i32, i32)* %190, null
  br i1 %191, label %196, label %192

192:                                              ; preds = %187
  %193 = load i8*, i8** %32, align 8
  %194 = getelementptr inbounds i8, i8* %193, i64 1
  %195 = load i32, i32* %189, align 4, !alias.scope !49
  call void %190(%struct.png_struct_def* %0, i8* %194, i32 %195, i32 2) #6
  br label %196

196:                                              ; preds = %187, %192
  call void @cr_png_read_push_finish_row(%struct.png_struct_def* %0)
  %197 = load i8, i8* %79, align 1
  %198 = icmp eq i8 %197, 2
  br i1 %198, label %403, label %214

199:                                              ; preds = %423, %426
  call void @cr_png_read_push_finish_row(%struct.png_struct_def* %0)
  %200 = load i8, i8* %79, align 1
  %201 = icmp eq i8 %200, 2
  br i1 %201, label %202, label %214

202:                                              ; preds = %199, %208
  %203 = phi i32 [ %209, %208 ], [ 0, %199 ]
  %204 = load void (%struct.png_struct_def*, i8*, i32, i32)*, void (%struct.png_struct_def*, i8*, i32, i32)** %188, align 8, !alias.scope !52
  %205 = icmp eq void (%struct.png_struct_def*, i8*, i32, i32)* %204, null
  br i1 %205, label %208, label %206

206:                                              ; preds = %202
  %207 = load i32, i32* %189, align 4, !alias.scope !52
  call void %204(%struct.png_struct_def* %0, i8* null, i32 %207, i32 2) #6
  br label %208

208:                                              ; preds = %202, %206
  call void @cr_png_read_push_finish_row(%struct.png_struct_def* %0)
  %209 = add nuw nsw i32 %203, 1
  %210 = icmp ult i32 %209, 4
  %211 = load i8, i8* %79, align 1
  %212 = icmp eq i8 %211, 2
  %213 = and i1 %210, %212
  br i1 %213, label %202, label %214

214:                                              ; preds = %208, %196, %410, %420, %199
  %215 = phi i8 [ %200, %199 ], [ %197, %196 ], [ %411, %410 ], [ %421, %420 ], [ %211, %208 ]
  %216 = icmp eq i8 %215, 4
  br i1 %216, label %217, label %344

217:                                              ; preds = %214
  %218 = load void (%struct.png_struct_def*, i8*, i32, i32)*, void (%struct.png_struct_def*, i8*, i32, i32)** %188, align 8, !alias.scope !55
  %219 = icmp eq void (%struct.png_struct_def*, i8*, i32, i32)* %218, null
  br i1 %219, label %222, label %220

220:                                              ; preds = %217
  %221 = load i32, i32* %189, align 4, !alias.scope !55
  call void %218(%struct.png_struct_def* %0, i8* null, i32 %221, i32 4) #6
  br label %222

222:                                              ; preds = %217, %220
  call void @cr_png_read_push_finish_row(%struct.png_struct_def* %0)
  %223 = load i8, i8* %79, align 1
  %224 = icmp eq i8 %223, 4
  br i1 %224, label %397, label %344

225:                                              ; preds = %92, %233
  %226 = phi i32 [ 0, %92 ], [ %234, %233 ]
  %227 = load void (%struct.png_struct_def*, i8*, i32, i32)*, void (%struct.png_struct_def*, i8*, i32, i32)** %93, align 8, !alias.scope !58
  %228 = icmp eq void (%struct.png_struct_def*, i8*, i32, i32)* %227, null
  br i1 %228, label %233, label %229

229:                                              ; preds = %225
  %230 = load i8*, i8** %32, align 8
  %231 = getelementptr inbounds i8, i8* %230, i64 1
  %232 = load i32, i32* %94, align 4, !alias.scope !58
  call void %227(%struct.png_struct_def* %0, i8* %231, i32 %232, i32 3) #6
  br label %233

233:                                              ; preds = %225, %229
  call void @cr_png_read_push_finish_row(%struct.png_struct_def* %0)
  %234 = add nuw nsw i32 %226, 1
  %235 = icmp ult i32 %234, 4
  %236 = load i8, i8* %79, align 1
  %237 = icmp eq i8 %236, 3
  %238 = and i1 %235, %237
  br i1 %238, label %225, label %239

239:                                              ; preds = %233
  %240 = icmp eq i8 %236, 4
  br i1 %240, label %241, label %344

241:                                              ; preds = %239
  %242 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 93
  %243 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 43
  %244 = load void (%struct.png_struct_def*, i8*, i32, i32)*, void (%struct.png_struct_def*, i8*, i32, i32)** %242, align 8, !alias.scope !61
  %245 = icmp eq void (%struct.png_struct_def*, i8*, i32, i32)* %244, null
  br i1 %245, label %248, label %246

246:                                              ; preds = %241
  %247 = load i32, i32* %243, align 4, !alias.scope !61
  call void %244(%struct.png_struct_def* %0, i8* null, i32 %247, i32 4) #6
  br label %248

248:                                              ; preds = %241, %246
  call void @cr_png_read_push_finish_row(%struct.png_struct_def* %0)
  %249 = load i8, i8* %79, align 1
  %250 = icmp eq i8 %249, 4
  br i1 %250, label %430, label %344

251:                                              ; preds = %87
  %252 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 93
  %253 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 43
  %254 = load void (%struct.png_struct_def*, i8*, i32, i32)*, void (%struct.png_struct_def*, i8*, i32, i32)** %252, align 8, !alias.scope !64
  %255 = icmp eq void (%struct.png_struct_def*, i8*, i32, i32)* %254, null
  br i1 %255, label %260, label %256

256:                                              ; preds = %251
  %257 = load i8*, i8** %32, align 8
  %258 = getelementptr inbounds i8, i8* %257, i64 1
  %259 = load i32, i32* %253, align 4, !alias.scope !64
  call void %254(%struct.png_struct_def* %0, i8* %258, i32 %259, i32 4) #6
  br label %260

260:                                              ; preds = %251, %256
  call void @cr_png_read_push_finish_row(%struct.png_struct_def* %0)
  %261 = load i8, i8* %79, align 1
  %262 = icmp eq i8 %261, 4
  br i1 %262, label %436, label %278

263:                                              ; preds = %436, %439
  call void @cr_png_read_push_finish_row(%struct.png_struct_def* %0)
  %264 = load i8, i8* %79, align 1
  %265 = icmp eq i8 %264, 4
  br i1 %265, label %266, label %278

266:                                              ; preds = %263, %272
  %267 = phi i32 [ %273, %272 ], [ 0, %263 ]
  %268 = load void (%struct.png_struct_def*, i8*, i32, i32)*, void (%struct.png_struct_def*, i8*, i32, i32)** %252, align 8, !alias.scope !67
  %269 = icmp eq void (%struct.png_struct_def*, i8*, i32, i32)* %268, null
  br i1 %269, label %272, label %270

270:                                              ; preds = %266
  %271 = load i32, i32* %253, align 4, !alias.scope !67
  call void %268(%struct.png_struct_def* %0, i8* null, i32 %271, i32 4) #6
  br label %272

272:                                              ; preds = %266, %270
  call void @cr_png_read_push_finish_row(%struct.png_struct_def* %0)
  %273 = add nuw nsw i32 %267, 1
  %274 = icmp ult i32 %273, 2
  %275 = load i8, i8* %79, align 1
  %276 = icmp eq i8 %275, 4
  %277 = and i1 %274, %276
  br i1 %277, label %266, label %278

278:                                              ; preds = %272, %260, %263
  %279 = phi i8 [ %264, %263 ], [ %261, %260 ], [ %275, %272 ]
  %280 = icmp eq i8 %279, 6
  br i1 %280, label %281, label %344

281:                                              ; preds = %278
  %282 = load void (%struct.png_struct_def*, i8*, i32, i32)*, void (%struct.png_struct_def*, i8*, i32, i32)** %252, align 8, !alias.scope !70
  %283 = icmp eq void (%struct.png_struct_def*, i8*, i32, i32)* %282, null
  br i1 %283, label %286, label %284

284:                                              ; preds = %281
  %285 = load i32, i32* %253, align 4, !alias.scope !70
  call void %282(%struct.png_struct_def* %0, i8* null, i32 %285, i32 6) #6
  br label %286

286:                                              ; preds = %281, %284
  call void @cr_png_read_push_finish_row(%struct.png_struct_def* %0)
  br label %344

287:                                              ; preds = %89, %295
  %288 = phi i32 [ 0, %89 ], [ %296, %295 ]
  %289 = load void (%struct.png_struct_def*, i8*, i32, i32)*, void (%struct.png_struct_def*, i8*, i32, i32)** %90, align 8, !alias.scope !73
  %290 = icmp eq void (%struct.png_struct_def*, i8*, i32, i32)* %289, null
  br i1 %290, label %295, label %291

291:                                              ; preds = %287
  %292 = load i8*, i8** %32, align 8
  %293 = getelementptr inbounds i8, i8* %292, i64 1
  %294 = load i32, i32* %91, align 4, !alias.scope !73
  call void %289(%struct.png_struct_def* %0, i8* %293, i32 %294, i32 5) #6
  br label %295

295:                                              ; preds = %287, %291
  call void @cr_png_read_push_finish_row(%struct.png_struct_def* %0)
  %296 = add nuw nsw i32 %288, 1
  %297 = icmp ult i32 %296, 2
  %298 = load i8, i8* %79, align 1
  %299 = icmp eq i8 %298, 5
  %300 = and i1 %297, %299
  br i1 %300, label %287, label %301

301:                                              ; preds = %295
  %302 = icmp eq i8 %298, 6
  br i1 %302, label %303, label %344

303:                                              ; preds = %301
  %304 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 93
  %305 = load void (%struct.png_struct_def*, i8*, i32, i32)*, void (%struct.png_struct_def*, i8*, i32, i32)** %304, align 8, !alias.scope !76
  %306 = icmp eq void (%struct.png_struct_def*, i8*, i32, i32)* %305, null
  br i1 %306, label %310, label %307

307:                                              ; preds = %303
  %308 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 43
  %309 = load i32, i32* %308, align 4, !alias.scope !76
  call void %305(%struct.png_struct_def* %0, i8* null, i32 %309, i32 6) #6
  br label %310

310:                                              ; preds = %303, %307
  call void @cr_png_read_push_finish_row(%struct.png_struct_def* %0)
  br label %344

311:                                              ; preds = %87
  %312 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 93
  %313 = load void (%struct.png_struct_def*, i8*, i32, i32)*, void (%struct.png_struct_def*, i8*, i32, i32)** %312, align 8, !alias.scope !79
  %314 = icmp eq void (%struct.png_struct_def*, i8*, i32, i32)* %313, null
  br i1 %314, label %321, label %315

315:                                              ; preds = %311
  %316 = load i8*, i8** %32, align 8
  %317 = getelementptr inbounds i8, i8* %316, i64 1
  %318 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 43
  %319 = load i32, i32* %318, align 4, !alias.scope !79
  %320 = zext i8 %88 to i32
  call void %313(%struct.png_struct_def* %0, i8* %317, i32 %319, i32 %320) #6
  br label %321

321:                                              ; preds = %311, %315
  call void @cr_png_read_push_finish_row(%struct.png_struct_def* %0)
  %322 = load i8, i8* %79, align 1
  %323 = icmp eq i8 %322, 6
  br i1 %323, label %324, label %344

324:                                              ; preds = %321
  %325 = load void (%struct.png_struct_def*, i8*, i32, i32)*, void (%struct.png_struct_def*, i8*, i32, i32)** %312, align 8, !alias.scope !82
  %326 = icmp eq void (%struct.png_struct_def*, i8*, i32, i32)* %325, null
  br i1 %326, label %330, label %327

327:                                              ; preds = %324
  %328 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 43
  %329 = load i32, i32* %328, align 4, !alias.scope !82
  call void %325(%struct.png_struct_def* %0, i8* null, i32 %329, i32 6) #6
  br label %330

330:                                              ; preds = %324, %327
  call void @cr_png_read_push_finish_row(%struct.png_struct_def* %0)
  br label %344

331:                                              ; preds = %74, %70
  %332 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 93
  %333 = load void (%struct.png_struct_def*, i8*, i32, i32)*, void (%struct.png_struct_def*, i8*, i32, i32)** %332, align 8, !alias.scope !85
  %334 = icmp eq void (%struct.png_struct_def*, i8*, i32, i32)* %333, null
  br i1 %334, label %343, label %335

335:                                              ; preds = %331
  %336 = load i8*, i8** %32, align 8
  %337 = getelementptr inbounds i8, i8* %336, i64 1
  %338 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 43
  %339 = load i32, i32* %338, align 4, !alias.scope !85
  %340 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 58
  %341 = load i8, i8* %340, align 1, !alias.scope !85
  %342 = zext i8 %341 to i32
  call void %333(%struct.png_struct_def* %0, i8* %337, i32 %339, i32 %342) #6
  br label %343

343:                                              ; preds = %331, %335
  call void @cr_png_read_push_finish_row(%struct.png_struct_def* %0)
  br label %344

344:                                              ; preds = %248, %435, %222, %402, %184, %380, %388, %396, %301, %310, %278, %286, %239, %214, %175, %146, %149, %160, %321, %330, %343
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #6
  ret void

345:                                              ; preds = %143
  %346 = load void (%struct.png_struct_def*, i8*, i32, i32)*, void (%struct.png_struct_def*, i8*, i32, i32)** %135, align 8, !alias.scope !37
  %347 = icmp eq void (%struct.png_struct_def*, i8*, i32, i32)* %346, null
  br i1 %347, label %350, label %348

348:                                              ; preds = %345
  %349 = load i32, i32* %136, align 4, !alias.scope !37
  call void %346(%struct.png_struct_def* %0, i8* null, i32 %349, i32 4) #6
  br label %350

350:                                              ; preds = %348, %345
  call void @cr_png_read_push_finish_row(%struct.png_struct_def* %0)
  %351 = load i8, i8* %79, align 1
  br label %146

352:                                              ; preds = %124
  %353 = load void (%struct.png_struct_def*, i8*, i32, i32)*, void (%struct.png_struct_def*, i8*, i32, i32)** %118, align 8, !alias.scope !34
  %354 = icmp eq void (%struct.png_struct_def*, i8*, i32, i32)* %353, null
  br i1 %354, label %357, label %355

355:                                              ; preds = %352
  %356 = load i32, i32* %119, align 4, !alias.scope !34
  call void %353(%struct.png_struct_def* %0, i8* null, i32 %356, i32 2) #6
  br label %357

357:                                              ; preds = %355, %352
  call void @cr_png_read_push_finish_row(%struct.png_struct_def* %0)
  %358 = load i8, i8* %79, align 1
  %359 = icmp eq i8 %358, 2
  br i1 %359, label %360, label %127

360:                                              ; preds = %357
  %361 = load void (%struct.png_struct_def*, i8*, i32, i32)*, void (%struct.png_struct_def*, i8*, i32, i32)** %118, align 8, !alias.scope !34
  %362 = icmp eq void (%struct.png_struct_def*, i8*, i32, i32)* %361, null
  br i1 %362, label %365, label %363

363:                                              ; preds = %360
  %364 = load i32, i32* %119, align 4, !alias.scope !34
  call void %361(%struct.png_struct_def* %0, i8* null, i32 %364, i32 2) #6
  br label %365

365:                                              ; preds = %363, %360
  call void @cr_png_read_push_finish_row(%struct.png_struct_def* %0)
  %366 = load i8, i8* %79, align 1
  %367 = icmp eq i8 %366, 2
  br i1 %367, label %368, label %127

368:                                              ; preds = %365
  %369 = load void (%struct.png_struct_def*, i8*, i32, i32)*, void (%struct.png_struct_def*, i8*, i32, i32)** %118, align 8, !alias.scope !34
  %370 = icmp eq void (%struct.png_struct_def*, i8*, i32, i32)* %369, null
  br i1 %370, label %373, label %371

371:                                              ; preds = %368
  %372 = load i32, i32* %119, align 4, !alias.scope !34
  call void %369(%struct.png_struct_def* %0, i8* null, i32 %372, i32 2) #6
  br label %373

373:                                              ; preds = %371, %368
  call void @cr_png_read_push_finish_row(%struct.png_struct_def* %0)
  %374 = load i8, i8* %79, align 1
  br label %127

375:                                              ; preds = %184
  %376 = load void (%struct.png_struct_def*, i8*, i32, i32)*, void (%struct.png_struct_def*, i8*, i32, i32)** %178, align 8, !alias.scope !46
  %377 = icmp eq void (%struct.png_struct_def*, i8*, i32, i32)* %376, null
  br i1 %377, label %380, label %378

378:                                              ; preds = %375
  %379 = load i32, i32* %179, align 4, !alias.scope !46
  call void %376(%struct.png_struct_def* %0, i8* null, i32 %379, i32 2) #6
  br label %380

380:                                              ; preds = %378, %375
  call void @cr_png_read_push_finish_row(%struct.png_struct_def* %0)
  %381 = load i8, i8* %79, align 1
  %382 = icmp eq i8 %381, 2
  br i1 %382, label %383, label %344

383:                                              ; preds = %380
  %384 = load void (%struct.png_struct_def*, i8*, i32, i32)*, void (%struct.png_struct_def*, i8*, i32, i32)** %178, align 8, !alias.scope !46
  %385 = icmp eq void (%struct.png_struct_def*, i8*, i32, i32)* %384, null
  br i1 %385, label %388, label %386

386:                                              ; preds = %383
  %387 = load i32, i32* %179, align 4, !alias.scope !46
  call void %384(%struct.png_struct_def* %0, i8* null, i32 %387, i32 2) #6
  br label %388

388:                                              ; preds = %386, %383
  call void @cr_png_read_push_finish_row(%struct.png_struct_def* %0)
  %389 = load i8, i8* %79, align 1
  %390 = icmp eq i8 %389, 2
  br i1 %390, label %391, label %344

391:                                              ; preds = %388
  %392 = load void (%struct.png_struct_def*, i8*, i32, i32)*, void (%struct.png_struct_def*, i8*, i32, i32)** %178, align 8, !alias.scope !46
  %393 = icmp eq void (%struct.png_struct_def*, i8*, i32, i32)* %392, null
  br i1 %393, label %396, label %394

394:                                              ; preds = %391
  %395 = load i32, i32* %179, align 4, !alias.scope !46
  call void %392(%struct.png_struct_def* %0, i8* null, i32 %395, i32 2) #6
  br label %396

396:                                              ; preds = %394, %391
  call void @cr_png_read_push_finish_row(%struct.png_struct_def* %0)
  br label %344

397:                                              ; preds = %222
  %398 = load void (%struct.png_struct_def*, i8*, i32, i32)*, void (%struct.png_struct_def*, i8*, i32, i32)** %188, align 8, !alias.scope !55
  %399 = icmp eq void (%struct.png_struct_def*, i8*, i32, i32)* %398, null
  br i1 %399, label %402, label %400

400:                                              ; preds = %397
  %401 = load i32, i32* %189, align 4, !alias.scope !55
  call void %398(%struct.png_struct_def* %0, i8* null, i32 %401, i32 4) #6
  br label %402

402:                                              ; preds = %400, %397
  call void @cr_png_read_push_finish_row(%struct.png_struct_def* %0)
  br label %344

403:                                              ; preds = %196
  %404 = load void (%struct.png_struct_def*, i8*, i32, i32)*, void (%struct.png_struct_def*, i8*, i32, i32)** %188, align 8, !alias.scope !49
  %405 = icmp eq void (%struct.png_struct_def*, i8*, i32, i32)* %404, null
  br i1 %405, label %410, label %406

406:                                              ; preds = %403
  %407 = load i8*, i8** %32, align 8
  %408 = getelementptr inbounds i8, i8* %407, i64 1
  %409 = load i32, i32* %189, align 4, !alias.scope !49
  call void %404(%struct.png_struct_def* %0, i8* %408, i32 %409, i32 2) #6
  br label %410

410:                                              ; preds = %406, %403
  call void @cr_png_read_push_finish_row(%struct.png_struct_def* %0)
  %411 = load i8, i8* %79, align 1
  %412 = icmp eq i8 %411, 2
  br i1 %412, label %413, label %214

413:                                              ; preds = %410
  %414 = load void (%struct.png_struct_def*, i8*, i32, i32)*, void (%struct.png_struct_def*, i8*, i32, i32)** %188, align 8, !alias.scope !49
  %415 = icmp eq void (%struct.png_struct_def*, i8*, i32, i32)* %414, null
  br i1 %415, label %420, label %416

416:                                              ; preds = %413
  %417 = load i8*, i8** %32, align 8
  %418 = getelementptr inbounds i8, i8* %417, i64 1
  %419 = load i32, i32* %189, align 4, !alias.scope !49
  call void %414(%struct.png_struct_def* %0, i8* %418, i32 %419, i32 2) #6
  br label %420

420:                                              ; preds = %416, %413
  call void @cr_png_read_push_finish_row(%struct.png_struct_def* %0)
  %421 = load i8, i8* %79, align 1
  %422 = icmp eq i8 %421, 2
  br i1 %422, label %423, label %214

423:                                              ; preds = %420
  %424 = load void (%struct.png_struct_def*, i8*, i32, i32)*, void (%struct.png_struct_def*, i8*, i32, i32)** %188, align 8, !alias.scope !49
  %425 = icmp eq void (%struct.png_struct_def*, i8*, i32, i32)* %424, null
  br i1 %425, label %199, label %426

426:                                              ; preds = %423
  %427 = load i8*, i8** %32, align 8
  %428 = getelementptr inbounds i8, i8* %427, i64 1
  %429 = load i32, i32* %189, align 4, !alias.scope !49
  call void %424(%struct.png_struct_def* %0, i8* %428, i32 %429, i32 2) #6
  br label %199

430:                                              ; preds = %248
  %431 = load void (%struct.png_struct_def*, i8*, i32, i32)*, void (%struct.png_struct_def*, i8*, i32, i32)** %242, align 8, !alias.scope !61
  %432 = icmp eq void (%struct.png_struct_def*, i8*, i32, i32)* %431, null
  br i1 %432, label %435, label %433

433:                                              ; preds = %430
  %434 = load i32, i32* %243, align 4, !alias.scope !61
  call void %431(%struct.png_struct_def* %0, i8* null, i32 %434, i32 4) #6
  br label %435

435:                                              ; preds = %433, %430
  call void @cr_png_read_push_finish_row(%struct.png_struct_def* %0)
  br label %344

436:                                              ; preds = %260
  %437 = load void (%struct.png_struct_def*, i8*, i32, i32)*, void (%struct.png_struct_def*, i8*, i32, i32)** %252, align 8, !alias.scope !64
  %438 = icmp eq void (%struct.png_struct_def*, i8*, i32, i32)* %437, null
  br i1 %438, label %263, label %439

439:                                              ; preds = %436
  %440 = load i8*, i8** %32, align 8
  %441 = getelementptr inbounds i8, i8* %440, i64 1
  %442 = load i32, i32* %253, align 4, !alias.scope !64
  call void %437(%struct.png_struct_def* %0, i8* %441, i32 %442, i32 4) #6
  br label %263
}

declare void @cr_png_read_filter_row(%struct.png_struct_def*, %struct.png_row_info_struct*, i8*, i8*, i32) local_unnamed_addr #3

declare void @cr_png_do_read_transformations(%struct.png_struct_def*, %struct.png_row_info_struct*) local_unnamed_addr #3

declare void @cr_png_do_read_interlace(%struct.png_row_info_struct*, i8*, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @cr_png_push_have_row(%struct.png_struct_def* noalias, i8*) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 93
  %4 = load void (%struct.png_struct_def*, i8*, i32, i32)*, void (%struct.png_struct_def*, i8*, i32, i32)** %3, align 8
  %5 = icmp eq void (%struct.png_struct_def*, i8*, i32, i32)* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 43
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 58
  %10 = load i8, i8* %9, align 1
  %11 = zext i8 %10 to i32
  tail call void %4(%struct.png_struct_def* %0, i8* %1, i32 %8, i32 %11) #6
  br label %12

12:                                               ; preds = %2, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @cr_png_read_push_finish_row(%struct.png_struct_def* noalias nocapture) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 43
  %3 = load i32, i32* %2, align 4
  %4 = add i32 %3, 1
  store i32 %4, i32* %2, align 4
  %5 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 39
  %6 = load i32, i32* %5, align 8
  %7 = icmp ult i32 %4, %6
  br i1 %7, label %80, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 57
  %10 = load i8, i8* %9, align 2
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %80, label %12

12:                                               ; preds = %8
  store i32 0, i32* %2, align 4
  %13 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 45
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 41
  %16 = load i64, i64* %15, align 8
  %17 = add i64 %16, 1
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %14, i8 0, i64 %17, i1 false)
  %18 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 58
  %19 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 37
  %20 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 42
  %21 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 17
  %22 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 38
  %23 = load i8, i8* %18, align 1
  br label %24

24:                                               ; preds = %63, %12
  %25 = phi i8 [ %48, %63 ], [ %23, %12 ]
  %26 = add i8 %25, 1
  switch i8 %25, label %39 [
    i8 0, label %27
    i8 2, label %30
    i8 4, label %33
  ]

27:                                               ; preds = %24
  %28 = load i32, i32* %19, align 8
  %29 = icmp ult i32 %28, 5
  br i1 %29, label %36, label %44

30:                                               ; preds = %24
  %31 = load i32, i32* %19, align 8
  %32 = icmp ult i32 %31, 3
  br i1 %32, label %36, label %44

33:                                               ; preds = %24
  %34 = load i32, i32* %19, align 8
  %35 = icmp ult i32 %34, 2
  br i1 %35, label %36, label %44

36:                                               ; preds = %33, %30, %27
  %37 = phi i32 [ %34, %33 ], [ %31, %30 ], [ %28, %27 ]
  %38 = add nuw nsw i8 %25, 2
  br label %46

39:                                               ; preds = %24
  %40 = icmp ugt i8 %26, 7
  br i1 %40, label %41, label %42

41:                                               ; preds = %39
  store i8 %25, i8* %18, align 1
  br label %80

42:                                               ; preds = %39
  %43 = icmp eq i8 %26, 7
  br i1 %43, label %78, label %44

44:                                               ; preds = %27, %30, %33, %42
  %45 = load i32, i32* %19, align 8
  br label %46

46:                                               ; preds = %44, %36
  %47 = phi i32 [ %37, %36 ], [ %45, %44 ]
  %48 = phi i8 [ %38, %36 ], [ %26, %44 ]
  %49 = zext i8 %48 to i64
  %50 = getelementptr inbounds [7 x i8], [7 x i8]* @cr_png_read_push_finish_row.png_pass_inc, i64 0, i64 %49
  %51 = load i8, i8* %50, align 1
  %52 = zext i8 %51 to i32
  %53 = add i32 %47, %52
  %54 = getelementptr inbounds [7 x i8], [7 x i8]* @cr_png_read_push_finish_row.png_pass_start, i64 0, i64 %49
  %55 = load i8, i8* %54, align 1
  %56 = zext i8 %55 to i32
  %57 = xor i32 %56, -1
  %58 = add i32 %53, %57
  %59 = udiv i32 %58, %52
  store i32 %59, i32* %20, align 8
  %60 = load i32, i32* %21, align 4
  %61 = and i32 %60, 2
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %78

63:                                               ; preds = %46
  %64 = load i32, i32* %22, align 4
  %65 = getelementptr inbounds [7 x i8], [7 x i8]* @cr_png_read_push_finish_row.png_pass_yinc, i64 0, i64 %49
  %66 = load i8, i8* %65, align 1
  %67 = zext i8 %66 to i32
  %68 = add i32 %64, %67
  %69 = getelementptr inbounds [7 x i8], [7 x i8]* @cr_png_read_push_finish_row.png_pass_ystart, i64 0, i64 %49
  %70 = load i8, i8* %69, align 1
  %71 = zext i8 %70 to i32
  %72 = xor i32 %71, -1
  %73 = add i32 %68, %72
  %74 = udiv i32 %73, %67
  store i32 %74, i32* %5, align 8
  %75 = icmp ult i32 %58, %52
  %76 = icmp ult i32 %73, %67
  %77 = or i1 %75, %76
  br i1 %77, label %24, label %78

78:                                               ; preds = %42, %46, %63
  %79 = phi i8 [ 7, %42 ], [ %48, %46 ], [ %48, %63 ]
  store i8 %79, i8* %18, align 1
  br label %80

80:                                               ; preds = %78, %41, %8, %1
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @cr_png_progressive_combine_row(%struct.png_struct_def* noalias, i8*, i8* readnone) local_unnamed_addr #0 {
  %4 = icmp ne %struct.png_struct_def* %0, null
  %5 = icmp ne i8* %2, null
  %6 = and i1 %4, %5
  br i1 %6, label %7, label %8

7:                                                ; preds = %3
  tail call void @cr_png_combine_row(%struct.png_struct_def* nonnull %0, i8* %1, i32 1) #6
  br label %8

8:                                                ; preds = %3, %7
  ret void
}

declare void @cr_png_combine_row(%struct.png_struct_def*, i8*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @cr_png_set_progressive_read_fn(%struct.png_struct_def* noalias, i8*, void (%struct.png_struct_def*, %struct.png_info_def*)*, void (%struct.png_struct_def*, i8*, i32, i32)*, void (%struct.png_struct_def*, %struct.png_info_def*)*) local_unnamed_addr #0 {
  %6 = icmp eq %struct.png_struct_def* %0, null
  br i1 %6, label %11, label %7

7:                                                ; preds = %5
  %8 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 92
  store void (%struct.png_struct_def*, %struct.png_info_def*)* %2, void (%struct.png_struct_def*, %struct.png_info_def*)** %8, align 8
  %9 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 93
  store void (%struct.png_struct_def*, i8*, i32, i32)* %3, void (%struct.png_struct_def*, i8*, i32, i32)** %9, align 8
  %10 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 94
  store void (%struct.png_struct_def*, %struct.png_info_def*)* %4, void (%struct.png_struct_def*, %struct.png_info_def*)** %10, align 8
  tail call void @cr_png_set_read_fn(%struct.png_struct_def* nonnull %0, i8* %1, void (%struct.png_struct_def*, i8*, i64)* nonnull @cr_png_push_fill_buffer) #6
  br label %11

11:                                               ; preds = %5, %7
  ret void
}

declare void @cr_png_set_read_fn(%struct.png_struct_def*, i8*, void (%struct.png_struct_def*, i8*, i64)*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i8* @cr_png_get_progressive_ptr(%struct.png_struct_def* noalias readonly) local_unnamed_addr #5 {
  %2 = icmp eq %struct.png_struct_def* %0, null
  br i1 %2, label %6, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 9
  %5 = load i8*, i8** %4, align 8
  br label %6

6:                                                ; preds = %1, %3
  %7 = phi i8* [ %5, %3 ], [ null, %1 ]
  ret i8* %7
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"cr_png_push_restore_buffer: argument 0"}
!4 = distinct !{!4, !"cr_png_push_restore_buffer"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"cr_png_process_some_data: argument 0"}
!7 = distinct !{!7, !"cr_png_process_some_data"}
!8 = !{!9}
!9 = distinct !{!9, !7, !"cr_png_process_some_data: argument 1"}
!10 = !{!11}
!11 = distinct !{!11, !12}
!12 = distinct !{!12, !"LVerDomain"}
!13 = !{!14}
!14 = distinct !{!14, !12}
!15 = distinct !{!15, !16}
!16 = !{!"llvm.loop.isvectorized", i32 1}
!17 = distinct !{!17, !18}
!18 = !{!"llvm.loop.unroll.disable"}
!19 = distinct !{!19, !18}
!20 = distinct !{!20, !16}
!21 = !{!22}
!22 = distinct !{!22, !23, !"cr_png_push_have_end: argument 0"}
!23 = distinct !{!23, !"cr_png_push_have_end"}
!24 = !{!25}
!25 = distinct !{!25, !23, !"cr_png_push_have_end: argument 1"}
!26 = !{!27}
!27 = distinct !{!27, !28, !"cr_png_push_have_info: argument 0"}
!28 = distinct !{!28, !"cr_png_push_have_info"}
!29 = !{!30}
!30 = distinct !{!30, !28, !"cr_png_push_have_info: argument 1"}
!31 = !{!32}
!32 = distinct !{!32, !33, !"cr_png_push_have_row: argument 0"}
!33 = distinct !{!33, !"cr_png_push_have_row"}
!34 = !{!35}
!35 = distinct !{!35, !36, !"cr_png_push_have_row: argument 0"}
!36 = distinct !{!36, !"cr_png_push_have_row"}
!37 = !{!38}
!38 = distinct !{!38, !39, !"cr_png_push_have_row: argument 0"}
!39 = distinct !{!39, !"cr_png_push_have_row"}
!40 = !{!41}
!41 = distinct !{!41, !42, !"cr_png_push_have_row: argument 0"}
!42 = distinct !{!42, !"cr_png_push_have_row"}
!43 = !{!44}
!44 = distinct !{!44, !45, !"cr_png_push_have_row: argument 0"}
!45 = distinct !{!45, !"cr_png_push_have_row"}
!46 = !{!47}
!47 = distinct !{!47, !48, !"cr_png_push_have_row: argument 0"}
!48 = distinct !{!48, !"cr_png_push_have_row"}
!49 = !{!50}
!50 = distinct !{!50, !51, !"cr_png_push_have_row: argument 0"}
!51 = distinct !{!51, !"cr_png_push_have_row"}
!52 = !{!53}
!53 = distinct !{!53, !54, !"cr_png_push_have_row: argument 0"}
!54 = distinct !{!54, !"cr_png_push_have_row"}
!55 = !{!56}
!56 = distinct !{!56, !57, !"cr_png_push_have_row: argument 0"}
!57 = distinct !{!57, !"cr_png_push_have_row"}
!58 = !{!59}
!59 = distinct !{!59, !60, !"cr_png_push_have_row: argument 0"}
!60 = distinct !{!60, !"cr_png_push_have_row"}
!61 = !{!62}
!62 = distinct !{!62, !63, !"cr_png_push_have_row: argument 0"}
!63 = distinct !{!63, !"cr_png_push_have_row"}
!64 = !{!65}
!65 = distinct !{!65, !66, !"cr_png_push_have_row: argument 0"}
!66 = distinct !{!66, !"cr_png_push_have_row"}
!67 = !{!68}
!68 = distinct !{!68, !69, !"cr_png_push_have_row: argument 0"}
!69 = distinct !{!69, !"cr_png_push_have_row"}
!70 = !{!71}
!71 = distinct !{!71, !72, !"cr_png_push_have_row: argument 0"}
!72 = distinct !{!72, !"cr_png_push_have_row"}
!73 = !{!74}
!74 = distinct !{!74, !75, !"cr_png_push_have_row: argument 0"}
!75 = distinct !{!75, !"cr_png_push_have_row"}
!76 = !{!77}
!77 = distinct !{!77, !78, !"cr_png_push_have_row: argument 0"}
!78 = distinct !{!78, !"cr_png_push_have_row"}
!79 = !{!80}
!80 = distinct !{!80, !81, !"cr_png_push_have_row: argument 0"}
!81 = distinct !{!81, !"cr_png_push_have_row"}
!82 = !{!83}
!83 = distinct !{!83, !84, !"cr_png_push_have_row: argument 0"}
!84 = distinct !{!84, !"cr_png_push_have_row"}
!85 = !{!86}
!86 = distinct !{!86, !87, !"cr_png_push_have_row: argument 0"}
!87 = distinct !{!87, !"cr_png_push_have_row"}
