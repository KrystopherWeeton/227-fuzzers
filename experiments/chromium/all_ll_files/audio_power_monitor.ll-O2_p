; ModuleID = '../../media/base/audio_power_monitor.cc'
source_filename = "../../media/base/audio_power_monitor.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.media::AudioPowerMonitor" = type <{ float, float, i8, [7 x i8], %"class.base::Lock", float, i8, [3 x i8] }>
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.media::AudioBus" = type { i32 (...)**, %"class.std::__1::unique_ptr", i8, i64, i32, %"class.std::__1::vector", i32, i8, %"class.base::OnceCallback" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { float* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { float**, float**, %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { float** }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }

@_ZN5media17AudioPowerMonitorC1EiN4base9TimeDeltaE = hidden unnamed_addr alias void (%"class.media::AudioPowerMonitor"*, i32, i64), void (%"class.media::AudioPowerMonitor"*, i32, i64)* @_ZN5media17AudioPowerMonitorC2EiN4base9TimeDeltaE
@_ZN5media17AudioPowerMonitorD1Ev = hidden unnamed_addr alias void (%"class.media::AudioPowerMonitor"*), void (%"class.media::AudioPowerMonitor"*)* @_ZN5media17AudioPowerMonitorD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media17AudioPowerMonitorC2EiN4base9TimeDeltaE(%"class.media::AudioPowerMonitor"*, i32, i64) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.media::AudioPowerMonitor", %"class.media::AudioPowerMonitor"* %0, i64 0, i32 0
  %5 = sitofp i32 %1 to double
  %6 = add i64 %2, -9223372036854775807
  %7 = icmp ult i64 %6, 2
  br i1 %7, label %11, label %8

8:                                                ; preds = %3
  %9 = sitofp i64 %2 to double
  %10 = fdiv double %9, 1.000000e+06
  br label %14

11:                                               ; preds = %3
  %12 = icmp slt i64 %2, 0
  %13 = select i1 %12, double 0xFFF0000000000000, double 0x7FF0000000000000
  br label %14

14:                                               ; preds = %8, %11
  %15 = phi double [ %13, %11 ], [ %10, %8 ]
  %16 = fmul double %15, %5
  %17 = fdiv double -1.000000e+00, %16
  %18 = fptrunc double %17 to float
  %19 = tail call float @expf(float %18) #7
  %20 = fsub float 1.000000e+00, %19
  store float %20, float* %4, align 8
  %21 = getelementptr inbounds %"class.media::AudioPowerMonitor", %"class.media::AudioPowerMonitor"* %0, i64 0, i32 4
  %22 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %21, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"* %22) #7
  %23 = getelementptr inbounds %"class.media::AudioPowerMonitor", %"class.media::AudioPowerMonitor"* %0, i64 0, i32 1
  store float 0.000000e+00, float* %23, align 4
  %24 = getelementptr inbounds %"class.media::AudioPowerMonitor", %"class.media::AudioPowerMonitor"* %0, i64 0, i32 2
  store i8 0, i8* %24, align 8
  %25 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %21, i64 0, i32 0, i32 0
  %26 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %25) #7
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %29, label %28, !prof !2

28:                                               ; preds = %14
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %22) #7
  br label %29

29:                                               ; preds = %14, %28
  %30 = getelementptr inbounds %"class.media::AudioPowerMonitor", %"class.media::AudioPowerMonitor"* %0, i64 0, i32 5
  store float 0.000000e+00, float* %30, align 8
  %31 = getelementptr inbounds %"class.media::AudioPowerMonitor", %"class.media::AudioPowerMonitor"* %0, i64 0, i32 6
  store i8 0, i8* %31, align 4
  %32 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %25) #7
  ret void
}

; Function Attrs: nofree nounwind
declare float @expf(float) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media17AudioPowerMonitor5ResetEv(%"class.media::AudioPowerMonitor"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.media::AudioPowerMonitor", %"class.media::AudioPowerMonitor"* %0, i64 0, i32 1
  store float 0.000000e+00, float* %2, align 4
  %3 = getelementptr inbounds %"class.media::AudioPowerMonitor", %"class.media::AudioPowerMonitor"* %0, i64 0, i32 2
  store i8 0, i8* %3, align 8
  %4 = getelementptr inbounds %"class.media::AudioPowerMonitor", %"class.media::AudioPowerMonitor"* %0, i64 0, i32 4
  %5 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %4, i64 0, i32 0, i32 0
  %6 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %5) #7
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %10, label %8, !prof !2

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %4, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %9) #7
  br label %10

10:                                               ; preds = %1, %8
  %11 = getelementptr inbounds %"class.media::AudioPowerMonitor", %"class.media::AudioPowerMonitor"* %0, i64 0, i32 5
  store float 0.000000e+00, float* %11, align 8
  %12 = getelementptr inbounds %"class.media::AudioPowerMonitor", %"class.media::AudioPowerMonitor"* %0, i64 0, i32 6
  store i8 0, i8* %12, align 4
  %13 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %5) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media17AudioPowerMonitorD2Ev(%"class.media::AudioPowerMonitor"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.media::AudioPowerMonitor", %"class.media::AudioPowerMonitor"* %0, i64 0, i32 4, i32 0
  tail call void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"* %2) #7
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media17AudioPowerMonitor4ScanERKNS_8AudioBusEi(%"class.media::AudioPowerMonitor"*, %"class.media::AudioBus"* nocapture readonly dereferenceable(80), i32) local_unnamed_addr #3 align 2 {
  %4 = alloca float, align 4
  %5 = alloca float, align 4
  %6 = alloca float, align 4
  %7 = getelementptr inbounds %"class.media::AudioBus", %"class.media::AudioBus"* %1, i64 0, i32 5
  %8 = getelementptr inbounds %"class.media::AudioBus", %"class.media::AudioBus"* %1, i64 0, i32 5, i32 0, i32 1
  %9 = bitcast float*** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector"* %7 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = lshr exact i64 %13, 3
  %15 = trunc i64 %14 to i32
  %16 = icmp slt i32 %2, 1
  %17 = icmp slt i32 %15, 1
  %18 = or i1 %16, %17
  br i1 %18, label %82, label %19

19:                                               ; preds = %3
  %20 = inttoptr i64 %12 to float**
  %21 = getelementptr inbounds %"class.media::AudioPowerMonitor", %"class.media::AudioPowerMonitor"* %0, i64 0, i32 1
  %22 = getelementptr inbounds %"class.media::AudioBus", %"class.media::AudioBus"* %1, i64 0, i32 5, i32 0, i32 0
  %23 = getelementptr inbounds %"class.media::AudioPowerMonitor", %"class.media::AudioPowerMonitor"* %0, i64 0, i32 0
  %24 = getelementptr inbounds %"class.media::AudioPowerMonitor", %"class.media::AudioPowerMonitor"* %0, i64 0, i32 2
  %25 = and i64 %14, 4294967295
  br label %44

26:                                               ; preds = %64
  %27 = bitcast float* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %27)
  %28 = sitofp i32 %15 to float
  %29 = fdiv float %66, %28
  store float %29, float* %4, align 4
  %30 = bitcast float* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %30)
  store float 0.000000e+00, float* %5, align 4
  %31 = bitcast float* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %31)
  store float 1.000000e+00, float* %6, align 4
  %32 = fcmp olt float %29, 0.000000e+00
  %33 = select i1 %32, float* %5, float* %4
  %34 = load float, float* %33, align 4
  %35 = fcmp ogt float %34, 1.000000e+00
  %36 = select i1 %35, float* %6, float* %33
  %37 = bitcast float* %36 to i32*
  %38 = load i32, i32* %37, align 4
  %39 = getelementptr inbounds %"class.media::AudioPowerMonitor", %"class.media::AudioPowerMonitor"* %0, i64 0, i32 1
  %40 = bitcast float* %39 to i32*
  store i32 %38, i32* %40, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %31)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %30)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %27)
  %41 = getelementptr inbounds %"class.media::AudioPowerMonitor", %"class.media::AudioPowerMonitor"* %0, i64 0, i32 4, i32 0, i32 0
  %42 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %41) #7
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %71, label %82

44:                                               ; preds = %69, %19
  %45 = phi float** [ %20, %19 ], [ %70, %69 ]
  %46 = phi i64 [ 0, %19 ], [ %67, %69 ]
  %47 = phi float [ 0.000000e+00, %19 ], [ %66, %69 ]
  %48 = load float, float* %21, align 4
  %49 = getelementptr inbounds float*, float** %45, i64 %46
  %50 = load float*, float** %49, align 8
  %51 = load float, float* %23, align 8
  %52 = tail call <2 x float> @_ZN5media11vector_math15EWMAAndMaxPowerEfPKfif(float %48, float* %50, i32 %2, float %51) #7
  %53 = extractelement <2 x float> %52, i32 0
  %54 = tail call float @llvm.fabs.f32(float %53) #8
  %55 = fcmp ueq float %54, 0x7FF0000000000000
  br i1 %55, label %56, label %58

56:                                               ; preds = %44
  %57 = load float, float* %21, align 4
  br label %64

58:                                               ; preds = %44
  %59 = extractelement <2 x float> %52, i32 1
  %60 = fcmp ogt float %59, 1.000000e+00
  %61 = zext i1 %60 to i8
  %62 = load i8, i8* %24, align 8, !range !3
  %63 = or i8 %62, %61
  store i8 %63, i8* %24, align 8
  br label %64

64:                                               ; preds = %58, %56
  %65 = phi float [ %53, %58 ], [ %57, %56 ]
  %66 = fadd float %47, %65
  %67 = add nuw nsw i64 %46, 1
  %68 = icmp eq i64 %67, %25
  br i1 %68, label %26, label %69

69:                                               ; preds = %64
  %70 = load float**, float*** %22, align 8
  br label %44

71:                                               ; preds = %26
  %72 = load i32, i32* %40, align 4
  %73 = getelementptr inbounds %"class.media::AudioPowerMonitor", %"class.media::AudioPowerMonitor"* %0, i64 0, i32 5
  %74 = bitcast float* %73 to i32*
  store i32 %72, i32* %74, align 8
  %75 = getelementptr inbounds %"class.media::AudioPowerMonitor", %"class.media::AudioPowerMonitor"* %0, i64 0, i32 2
  %76 = load i8, i8* %75, align 8, !range !3
  %77 = icmp eq i8 %76, 0
  br i1 %77, label %80, label %78

78:                                               ; preds = %71
  %79 = getelementptr inbounds %"class.media::AudioPowerMonitor", %"class.media::AudioPowerMonitor"* %0, i64 0, i32 6
  store i8 1, i8* %79, align 4
  store i8 0, i8* %75, align 8
  br label %80

80:                                               ; preds = %71, %78
  %81 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %41) #7
  br label %82

82:                                               ; preds = %26, %80, %3
  ret void
}

declare <2 x float> @_ZN5media11vector_math15EWMAAndMaxPowerEfPKfif(float, float*, i32, float) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN5media17AudioPowerMonitor23ReadCurrentPowerAndClipEv(%"class.media::AudioPowerMonitor"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.media::AudioPowerMonitor", %"class.media::AudioPowerMonitor"* %0, i64 0, i32 4
  %3 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %2, i64 0, i32 0, i32 0
  %4 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %3) #7
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %8, label %6, !prof !2

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %2, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %7) #7
  br label %8

8:                                                ; preds = %1, %6
  %9 = getelementptr inbounds %"class.media::AudioPowerMonitor", %"class.media::AudioPowerMonitor"* %0, i64 0, i32 5
  %10 = load float, float* %9, align 8
  %11 = fcmp olt float %10, 0x3DDB7CDFE0000000
  br i1 %11, label %17, label %12

12:                                               ; preds = %8
  %13 = tail call float @log10f(float %10) #7
  %14 = fmul float %13, 1.000000e+01
  %15 = bitcast float %14 to i32
  %16 = zext i32 %15 to i64
  br label %17

17:                                               ; preds = %8, %12
  %18 = phi i64 [ %16, %12 ], [ 4286578688, %8 ]
  %19 = getelementptr inbounds %"class.media::AudioPowerMonitor", %"class.media::AudioPowerMonitor"* %0, i64 0, i32 6
  %20 = load i8, i8* %19, align 4, !range !3
  store i8 0, i8* %19, align 4
  %21 = zext i8 %20 to i64
  %22 = shl nuw nsw i64 %21, 32
  %23 = or i64 %22, %18
  %24 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %3) #7
  ret i64 %23
}

; Function Attrs: nofree nounwind
declare float @log10f(float) local_unnamed_addr #1

declare void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"*) unnamed_addr #5

; Function Attrs: nounwind
declare i32 @pthread_mutex_trylock(%union.pthread_mutex_t*) local_unnamed_addr #5

; Function Attrs: nounwind
declare i32 @pthread_mutex_unlock(%union.pthread_mutex_t*) local_unnamed_addr #5

declare void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"*) local_unnamed_addr #4

; Function Attrs: nounwind readnone speculatable
declare float @llvm.fabs.f32(float) #6

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { nounwind }
attributes #8 = { nounwind readnone }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{i8 0, i8 2}
