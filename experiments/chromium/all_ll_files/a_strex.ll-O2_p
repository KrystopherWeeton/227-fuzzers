; ModuleID = '../../third_party/boringssl/src/crypto/x509/a_strex.c'
source_filename = "../../third_party/boringssl/src/crypto/x509/a_strex.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.bio_st = type { %struct.bio_method_st*, i32, i32, i32, i32, i32, i32, i8*, %struct.bio_st*, i64, i64 }
%struct.bio_method_st = type { i32, i8*, i32 (%struct.bio_st*, i8*, i32)*, i32 (%struct.bio_st*, i8*, i32)*, i32 (%struct.bio_st*, i8*)*, i32 (%struct.bio_st*, i8*, i32)*, i64 (%struct.bio_st*, i32, i64, i8*)*, i32 (%struct.bio_st*)*, i32 (%struct.bio_st*)*, i64 (%struct.bio_st*, i32, i64 (%struct.bio_st*, i32, i8*, i32, i64, i64)*)* }
%struct.X509_name_st = type { %struct.stack_st_X509_NAME_ENTRY*, i32, %struct.buf_mem_st*, i8*, i32 }
%struct.stack_st_X509_NAME_ENTRY = type opaque
%struct.buf_mem_st = type { i64, i8*, i64 }
%struct.X509_name_entry_st = type { %struct.asn1_object_st*, %struct.asn1_string_st*, i32, i32 }
%struct.asn1_object_st = type { i8*, i8*, i32, i32, i8*, i32 }
%struct.asn1_string_st = type { i32, i32, i8*, i64 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.asn1_type_st = type { i32, %union.anon }
%union.anon = type { i8* }

@tag2nbyte = internal unnamed_addr constant [31 x i8] c"\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\00\FF\FF\FF\FF\FF\01\01\01\FF\01\01\01\FF\01\FF\04\FF\02", align 16
@.str = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.1 = private unnamed_addr constant [4 x i8] c" + \00", align 1
@.str.2 = private unnamed_addr constant [2 x i8] c",\00", align 1
@.str.3 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@.str.4 = private unnamed_addr constant [3 x i8] c", \00", align 1
@.str.5 = private unnamed_addr constant [3 x i8] c"; \00", align 1
@.str.6 = private unnamed_addr constant [4 x i8] c" = \00", align 1
@.str.7 = private unnamed_addr constant [2 x i8] c"=\00", align 1
@.str.8 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.9 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.10 = private unnamed_addr constant [2 x i8] c":\00", align 1
@.str.11 = private unnamed_addr constant [2 x i8] c"\22\00", align 1
@.str.12 = private unnamed_addr constant [2 x i8] c"#\00", align 1
@do_hex_dump.hexdig = internal unnamed_addr constant [17 x i8] c"0123456789ABCDEF\00", align 16
@.str.13 = private unnamed_addr constant [54 x i8] c"../../third_party/boringssl/src/crypto/x509/a_strex.c\00", align 1
@.str.14 = private unnamed_addr constant [7 x i8] c"\5CW%08X\00", align 1
@.str.15 = private unnamed_addr constant [7 x i8] c"\5CU%04X\00", align 1
@char_type = internal unnamed_addr constant [128 x i8] c"\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02x\00\01(\00\00\00\10\10\10\00\19\19\10\10\10\10\10\10\10\10\10\10\10\10\10\10\09\09\10\09\10\00\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\00\01\00\00\00\00\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\00\00\00\00\02", align 16
@.str.16 = private unnamed_addr constant [2 x i8] c"\5C\00", align 1
@.str.17 = private unnamed_addr constant [6 x i8] c"\5C%02X\00", align 1
@.str.18 = private unnamed_addr constant [3 x i8] c"\5C\5C\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @X509_NAME_print_ex(%struct.bio_st*, %struct.X509_name_st*, i32, i64) local_unnamed_addr #0 {
  %5 = icmp eq i64 %3, 0
  br i1 %5, label %6, label %8

6:                                                ; preds = %4
  %7 = tail call i32 @X509_NAME_print(%struct.bio_st* %0, %struct.X509_name_st* %1, i32 %2) #6
  br label %11

8:                                                ; preds = %4
  %9 = bitcast %struct.bio_st* %0 to i8*
  %10 = tail call fastcc i32 @do_name_ex(i32 (i8*, i8*, i32)* nonnull @send_bio_chars, i8* %9, %struct.X509_name_st* %1, i32 %2, i64 %3)
  br label %11

11:                                               ; preds = %8, %6
  %12 = phi i32 [ %7, %6 ], [ %10, %8 ]
  ret i32 %12
}

declare i32 @X509_NAME_print(%struct.bio_st*, %struct.X509_name_st*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @do_name_ex(i32 (i8*, i8*, i32)* nocapture, i8*, %struct.X509_name_st*, i32, i64) unnamed_addr #0 {
  %6 = alloca [80 x i8], align 16
  %7 = getelementptr inbounds [80 x i8], [80 x i8]* %6, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %7) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %7, i8 -86, i64 80, i1 false)
  %8 = icmp sgt i32 %3, 0
  %9 = select i1 %8, i32 %3, i32 0
  br i1 %8, label %12, label %17

10:                                               ; preds = %12
  %11 = icmp eq i32 %16, %9
  br i1 %11, label %17, label %12

12:                                               ; preds = %5, %10
  %13 = phi i32 [ %16, %10 ], [ 0, %5 ]
  %14 = tail call i32 %0(i8* %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0), i32 1) #6, !callees !2
  %15 = icmp eq i32 %14, 0
  %16 = add nuw nsw i32 %13, 1
  br i1 %15, label %138, label %10

17:                                               ; preds = %10, %5
  %18 = and i64 %4, 983040
  %19 = add nsw i64 %18, -65536
  %20 = lshr exact i64 %19, 16
  switch i64 %20, label %138 [
    i64 3, label %24
    i64 0, label %21
    i64 1, label %22
    i64 2, label %23
  ]

21:                                               ; preds = %17
  br label %24

22:                                               ; preds = %17
  br label %24

23:                                               ; preds = %17
  br label %24

24:                                               ; preds = %17, %23, %22, %21
  %25 = phi i32 [ 0, %23 ], [ 0, %22 ], [ 0, %21 ], [ %9, %17 ]
  %26 = phi i8* [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i64 0, i64 0), %23 ], [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4, i64 0, i64 0), %22 ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0), %21 ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0), %17 ]
  %27 = phi i8* [ getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0), %23 ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0), %22 ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0), %21 ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0), %17 ]
  %28 = phi i32 [ 2, %23 ], [ 2, %22 ], [ 1, %21 ], [ 1, %17 ]
  %29 = phi i32 [ 3, %23 ], [ 3, %22 ], [ 1, %21 ], [ 3, %17 ]
  %30 = and i64 %4, 8388608
  %31 = icmp eq i64 %30, 0
  %32 = select i1 %31, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.6, i64 0, i64 0)
  %33 = select i1 %31, i32 1, i32 3
  %34 = trunc i64 %4 to i32
  %35 = and i32 %34, 6291456
  %36 = tail call i32 @X509_NAME_entry_count(%struct.X509_name_st* %2) #6
  %37 = icmp sgt i32 %36, 0
  br i1 %37, label %38, label %138

38:                                               ; preds = %24
  %39 = and i64 %4, 1048576
  %40 = icmp eq i64 %39, 0
  %41 = icmp eq i32 %25, 0
  %42 = add nuw i32 %28, %25
  %43 = icmp eq i32 %35, 6291456
  %44 = icmp eq i32 %35, 4194304
  %45 = and i64 %4, 33554432
  %46 = icmp eq i64 %45, 0
  %47 = and i64 %4, 16777216
  %48 = icmp eq i64 %47, 0
  br label %49

49:                                               ; preds = %134, %38
  %50 = phi i32 [ %9, %38 ], [ %135, %134 ]
  %51 = phi i32 [ -1, %38 ], [ %83, %134 ]
  %52 = phi i32 [ 0, %38 ], [ %136, %134 ]
  %53 = xor i32 %52, -1
  %54 = add i32 %36, %53
  %55 = select i1 %40, i32 %52, i32 %54
  %56 = call %struct.X509_name_entry_st* @X509_NAME_get_entry(%struct.X509_name_st* %2, i32 %55) #6
  %57 = icmp eq i32 %51, -1
  br i1 %57, label %80, label %58

58:                                               ; preds = %49
  %59 = getelementptr inbounds %struct.X509_name_entry_st, %struct.X509_name_entry_st* %56, i64 0, i32 2
  %60 = load i32, i32* %59, align 8
  %61 = icmp eq i32 %51, %60
  br i1 %61, label %62, label %67

62:                                               ; preds = %58
  %63 = call i32 %0(i8* %1, i8* %27, i32 %29) #6, !callees !2
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %138, label %65

65:                                               ; preds = %62
  %66 = add nsw i32 %50, %29
  br label %80

67:                                               ; preds = %58
  %68 = call i32 %0(i8* %1, i8* %26, i32 %28) #6, !callees !2
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %138, label %70

70:                                               ; preds = %67
  br i1 %41, label %78, label %73

71:                                               ; preds = %73
  %72 = icmp eq i32 %77, %25
  br i1 %72, label %78, label %73

73:                                               ; preds = %70, %71
  %74 = phi i32 [ %77, %71 ], [ 0, %70 ]
  %75 = call i32 %0(i8* %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0), i32 1) #6, !callees !2
  %76 = icmp eq i32 %75, 0
  %77 = add nuw nsw i32 %74, 1
  br i1 %76, label %138, label %71

78:                                               ; preds = %71, %70
  %79 = add i32 %42, %50
  br label %80

80:                                               ; preds = %49, %65, %78
  %81 = phi i32 [ %66, %65 ], [ %79, %78 ], [ %50, %49 ]
  %82 = getelementptr inbounds %struct.X509_name_entry_st, %struct.X509_name_entry_st* %56, i64 0, i32 2
  %83 = load i32, i32* %82, align 8
  %84 = call %struct.asn1_object_st* @X509_NAME_ENTRY_get_object(%struct.X509_name_entry_st* %56) #6
  %85 = call %struct.asn1_string_st* @X509_NAME_ENTRY_get_data(%struct.X509_name_entry_st* %56) #6
  %86 = call i32 @OBJ_obj2nid(%struct.asn1_object_st* %84) #6
  br i1 %43, label %126, label %87

87:                                               ; preds = %80
  %88 = icmp eq i32 %86, 0
  %89 = or i1 %44, %88
  br i1 %89, label %90, label %92

90:                                               ; preds = %87
  %91 = call i32 @OBJ_obj2txt(i8* nonnull %7, i32 80, %struct.asn1_object_st* %84, i32 1) #6
  br label %97

92:                                               ; preds = %87
  switch i32 %35, label %97 [
    i32 0, label %93
    i32 2097152, label %95
  ]

93:                                               ; preds = %92
  %94 = call i8* @OBJ_nid2sn(i32 %86) #6
  br label %97

95:                                               ; preds = %92
  %96 = call i8* @OBJ_nid2ln(i32 %86) #6
  br label %97

97:                                               ; preds = %92, %93, %95, %90
  %98 = phi i8* [ %7, %90 ], [ %94, %93 ], [ %96, %95 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.8, i64 0, i64 0), %92 ]
  %99 = phi i32 [ 0, %90 ], [ 10, %93 ], [ 25, %95 ], [ 0, %92 ]
  %100 = call i64 @strlen(i8* %98) #7
  %101 = trunc i64 %100 to i32
  %102 = call i32 %0(i8* %1, i8* %98, i32 %101) #6, !callees !2
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %138, label %104

104:                                              ; preds = %97
  %105 = icmp sle i32 %99, %101
  %106 = or i1 %46, %105
  br i1 %106, label %119, label %107

107:                                              ; preds = %104
  %108 = sub nsw i32 %99, %101
  %109 = icmp sgt i32 %108, 0
  br i1 %109, label %112, label %117

110:                                              ; preds = %112
  %111 = icmp eq i32 %116, %108
  br i1 %111, label %117, label %112

112:                                              ; preds = %107, %110
  %113 = phi i32 [ %116, %110 ], [ 0, %107 ]
  %114 = call i32 %0(i8* %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0), i32 1) #6, !callees !2
  %115 = icmp eq i32 %114, 0
  %116 = add nuw nsw i32 %113, 1
  br i1 %115, label %138, label %110

117:                                              ; preds = %110, %107
  %118 = add nsw i32 %108, %81
  br label %119

119:                                              ; preds = %104, %117
  %120 = phi i32 [ %118, %117 ], [ %81, %104 ]
  %121 = call i32 %0(i8* %1, i8* %32, i32 %33) #6, !callees !2
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %138, label %123

123:                                              ; preds = %119
  %124 = add nsw i32 %33, %101
  %125 = add nsw i32 %124, %120
  br label %126

126:                                              ; preds = %123, %80
  %127 = phi i32 [ %125, %123 ], [ %81, %80 ]
  %128 = icmp ne i32 %86, 0
  %129 = or i1 %48, %128
  %130 = select i1 %129, i64 0, i64 128
  %131 = or i64 %130, %4
  %132 = call fastcc i32 @do_print_ex(i32 (i8*, i8*, i32)* %0, i8* %1, i64 %131, %struct.asn1_string_st* %85)
  %133 = icmp slt i32 %132, 0
  br i1 %133, label %138, label %134

134:                                              ; preds = %126
  %135 = add nsw i32 %132, %127
  %136 = add nuw nsw i32 %52, 1
  %137 = icmp eq i32 %136, %36
  br i1 %137, label %138, label %49

138:                                              ; preds = %12, %62, %67, %126, %97, %119, %134, %73, %112, %24, %17
  %139 = phi i32 [ -1, %17 ], [ %9, %24 ], [ -1, %112 ], [ -1, %73 ], [ -1, %62 ], [ -1, %67 ], [ -1, %126 ], [ %135, %134 ], [ -1, %97 ], [ -1, %119 ], [ -1, %12 ]
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %7) #6
  ret i32 %139
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @send_bio_chars(i8*, i8*, i32) #0 {
  %4 = icmp eq i8* %0, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %3
  %6 = bitcast i8* %0 to %struct.bio_st*
  %7 = tail call i32 @BIO_write(%struct.bio_st* nonnull %6, i8* %1, i32 %2) #6
  %8 = icmp eq i32 %7, %2
  %9 = zext i1 %8 to i32
  br label %10

10:                                               ; preds = %5, %3
  %11 = phi i32 [ 1, %3 ], [ %9, %5 ]
  ret i32 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @X509_NAME_print_ex_fp(%struct._IO_FILE*, %struct.X509_name_st*, i32, i64) local_unnamed_addr #0 {
  %5 = icmp eq i64 %3, 0
  br i1 %5, label %6, label %12

6:                                                ; preds = %4
  %7 = tail call %struct.bio_st* @BIO_new_fp(%struct._IO_FILE* %0, i32 0) #6
  %8 = icmp eq %struct.bio_st* %7, null
  br i1 %8, label %15, label %9

9:                                                ; preds = %6
  %10 = tail call i32 @X509_NAME_print(%struct.bio_st* nonnull %7, %struct.X509_name_st* %1, i32 %2) #6
  %11 = tail call i32 @BIO_free(%struct.bio_st* nonnull %7) #6
  br label %15

12:                                               ; preds = %4
  %13 = bitcast %struct._IO_FILE* %0 to i8*
  %14 = tail call fastcc i32 @do_name_ex(i32 (i8*, i8*, i32)* nonnull @send_fp_chars, i8* %13, %struct.X509_name_st* %1, i32 %2, i64 %3)
  br label %15

15:                                               ; preds = %9, %6, %12
  %16 = phi i32 [ %14, %12 ], [ %10, %9 ], [ -1, %6 ]
  ret i32 %16
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare %struct.bio_st* @BIO_new_fp(%struct._IO_FILE*, i32) local_unnamed_addr #1

declare i32 @BIO_free(%struct.bio_st*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind ssp uwtable
define internal i32 @send_fp_chars(i8*, i8* nocapture, i32) #3 {
  %4 = icmp eq i8* %0, null
  br i1 %4, label %12, label %5

5:                                                ; preds = %3
  %6 = sext i32 %2 to i64
  %7 = bitcast i8* %0 to %struct._IO_FILE*
  %8 = tail call i64 @fwrite(i8* %1, i64 1, i64 %6, %struct._IO_FILE* nonnull %7)
  %9 = zext i32 %2 to i64
  %10 = icmp eq i64 %8, %9
  %11 = zext i1 %10 to i32
  br label %12

12:                                               ; preds = %5, %3
  %13 = phi i32 [ 1, %3 ], [ %11, %5 ]
  ret i32 %13
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @ASN1_STRING_print_ex(%struct.bio_st*, %struct.asn1_string_st*, i64) local_unnamed_addr #0 {
  %4 = bitcast %struct.bio_st* %0 to i8*
  %5 = tail call fastcc i32 @do_print_ex(i32 (i8*, i8*, i32)* nonnull @send_bio_chars, i8* %4, i64 %2, %struct.asn1_string_st* %1)
  ret i32 %5
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @do_print_ex(i32 (i8*, i8*, i32)* nocapture, i8*, i64, %struct.asn1_string_st*) unnamed_addr #0 {
  %5 = alloca [2 x i8], align 1
  %6 = alloca %struct.asn1_type_st, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %8) #6
  store i8 0, i8* %8, align 1
  %9 = trunc i64 %2 to i8
  %10 = and i8 %9, 15
  %11 = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %3, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = and i64 %2, 64
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %27, label %15

15:                                               ; preds = %4
  %16 = tail call i8* @ASN1_tag2str(i32 %12) #6
  %17 = tail call i64 @strlen(i8* %16) #7
  %18 = trunc i64 %17 to i32
  %19 = tail call i32 %0(i8* %1, i8* %16, i32 %18) #6, !callees !2
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %174, label %21

21:                                               ; preds = %15
  %22 = tail call i32 %0(i8* %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0), i32 1) #6, !callees !2
  %23 = icmp eq i32 %22, 0
  %24 = xor i1 %23, true
  %25 = zext i1 %24 to i32
  %26 = add nsw i32 %25, %18
  br i1 %23, label %174, label %27

27:                                               ; preds = %21, %4
  %28 = phi i32 [ %26, %21 ], [ 0, %4 ]
  %29 = icmp slt i8 %9, 0
  br i1 %29, label %47, label %30

30:                                               ; preds = %27
  %31 = and i64 %2, 32
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %33, label %135

33:                                               ; preds = %30
  %34 = add i32 %12, -1
  %35 = icmp ult i32 %34, 30
  br i1 %35, label %36, label %44

36:                                               ; preds = %33
  %37 = sext i32 %12 to i64
  %38 = getelementptr inbounds [31 x i8], [31 x i8]* @tag2nbyte, i64 0, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = sext i8 %39 to i32
  %41 = lshr i64 706998271, %37
  %42 = and i64 %41, 1
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %135, label %44

44:                                               ; preds = %36, %33
  %45 = and i64 %2, 256
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %135, label %47

47:                                               ; preds = %44, %27
  %48 = bitcast %struct.asn1_type_st* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %48) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %48, i8 -86, i64 16, i1 false) #6
  %49 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %49) #6
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %50 = tail call i32 %0(i8* %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i64 0, i64 0), i32 1) #6, !callees !2
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %129, label %52

52:                                               ; preds = %47
  %53 = and i64 %2, 512
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %55, label %90

55:                                               ; preds = %52
  %56 = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %3, i64 0, i32 2
  %57 = load i8*, i8** %56, align 8
  %58 = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %3, i64 0, i32 0
  %59 = load i32, i32* %58, align 8
  %60 = getelementptr inbounds [2 x i8], [2 x i8]* %5, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %60) #6
  store i8 -86, i8* %60, align 1
  %61 = getelementptr inbounds [2 x i8], [2 x i8]* %5, i64 0, i64 1
  store i8 -86, i8* %61, align 1
  %62 = icmp eq i8* %1, null
  br i1 %62, label %86, label %63

63:                                               ; preds = %55
  %64 = sext i32 %59 to i64
  %65 = getelementptr inbounds i8, i8* %57, i64 %64
  %66 = icmp eq i32 %59, 0
  br i1 %66, label %67, label %71

67:                                               ; preds = %63
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %60) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %48) #6
  %68 = add nsw i32 %28, 1
  br label %174

69:                                               ; preds = %71
  %70 = icmp eq i8* %84, %65
  br i1 %70, label %86, label %71

71:                                               ; preds = %63, %69
  %72 = phi i8* [ %84, %69 ], [ %57, %63 ]
  %73 = load i8, i8* %72, align 1
  %74 = lshr i8 %73, 4
  %75 = zext i8 %74 to i64
  %76 = getelementptr inbounds [17 x i8], [17 x i8]* @do_hex_dump.hexdig, i64 0, i64 %75
  %77 = load i8, i8* %76, align 1
  store i8 %77, i8* %60, align 1
  %78 = and i8 %73, 15
  %79 = zext i8 %78 to i64
  %80 = getelementptr inbounds [17 x i8], [17 x i8]* @do_hex_dump.hexdig, i64 0, i64 %79
  %81 = load i8, i8* %80, align 1
  store i8 %81, i8* %61, align 1
  %82 = call i32 %0(i8* nonnull %1, i8* nonnull %60, i32 2) #6, !callees !2
  %83 = icmp eq i32 %82, 0
  %84 = getelementptr inbounds i8, i8* %72, i64 1
  br i1 %83, label %85, label %69

85:                                               ; preds = %71
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %60) #6
  br label %129

86:                                               ; preds = %69, %55
  %87 = shl i32 %59, 1
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %60) #6
  %88 = icmp slt i32 %87, 0
  %89 = or i32 %87, 1
  br i1 %88, label %129, label %130

90:                                               ; preds = %52
  %91 = load i32, i32* %11, align 4
  %92 = getelementptr inbounds %struct.asn1_type_st, %struct.asn1_type_st* %6, i64 0, i32 0
  store i32 %91, i32* %92, align 8
  %93 = getelementptr inbounds %struct.asn1_type_st, %struct.asn1_type_st* %6, i64 0, i32 1, i32 0
  %94 = bitcast i8** %93 to %struct.asn1_string_st**
  store %struct.asn1_string_st* %3, %struct.asn1_string_st** %94, align 8
  %95 = call i32 @i2d_ASN1_TYPE(%struct.asn1_type_st* nonnull %6, i8** null) #6
  %96 = sext i32 %95 to i64
  %97 = call i8* @OPENSSL_malloc(i64 %96) #6
  %98 = icmp eq i8* %97, null
  br i1 %98, label %129, label %99

99:                                               ; preds = %90
  store i8* %97, i8** %7, align 8
  %100 = call i32 @i2d_ASN1_TYPE(%struct.asn1_type_st* nonnull %6, i8** nonnull %7) #6
  %101 = getelementptr inbounds [2 x i8], [2 x i8]* %5, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %101) #6
  store i8 -86, i8* %101, align 1
  %102 = getelementptr inbounds [2 x i8], [2 x i8]* %5, i64 0, i64 1
  store i8 -86, i8* %102, align 1
  %103 = icmp eq i8* %1, null
  br i1 %103, label %123, label %104

104:                                              ; preds = %99
  %105 = getelementptr inbounds i8, i8* %97, i64 %96
  %106 = icmp eq i32 %95, 0
  br i1 %106, label %123, label %109

107:                                              ; preds = %109
  %108 = icmp eq i8* %122, %105
  br i1 %108, label %123, label %109

109:                                              ; preds = %104, %107
  %110 = phi i8* [ %122, %107 ], [ %97, %104 ]
  %111 = load i8, i8* %110, align 1
  %112 = lshr i8 %111, 4
  %113 = zext i8 %112 to i64
  %114 = getelementptr inbounds [17 x i8], [17 x i8]* @do_hex_dump.hexdig, i64 0, i64 %113
  %115 = load i8, i8* %114, align 1
  store i8 %115, i8* %101, align 1
  %116 = and i8 %111, 15
  %117 = zext i8 %116 to i64
  %118 = getelementptr inbounds [17 x i8], [17 x i8]* @do_hex_dump.hexdig, i64 0, i64 %117
  %119 = load i8, i8* %118, align 1
  store i8 %119, i8* %102, align 1
  %120 = call i32 %0(i8* nonnull %1, i8* nonnull %101, i32 2) #6, !callees !2
  %121 = icmp eq i32 %120, 0
  %122 = getelementptr inbounds i8, i8* %110, i64 1
  br i1 %121, label %125, label %107

123:                                              ; preds = %107, %104, %99
  %124 = shl i32 %95, 1
  br label %125

125:                                              ; preds = %109, %123
  %126 = phi i32 [ %124, %123 ], [ -1, %109 ]
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %101) #6
  call void @OPENSSL_free(i8* nonnull %97) #6
  %127 = icmp slt i32 %126, 0
  %128 = add nsw i32 %126, 1
  br i1 %127, label %129, label %130

129:                                              ; preds = %47, %90, %86, %85, %125
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %48) #6
  br label %134

130:                                              ; preds = %125, %86
  %131 = phi i32 [ %89, %86 ], [ %128, %125 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %48) #6
  %132 = icmp slt i32 %131, 0
  %133 = add nsw i32 %131, %28
  br i1 %132, label %134, label %174

134:                                              ; preds = %129, %130
  br label %174

135:                                              ; preds = %36, %44, %30
  %136 = phi i32 [ 1, %30 ], [ 1, %44 ], [ %40, %36 ]
  %137 = and i64 %2, 16
  %138 = icmp eq i64 %137, 0
  br i1 %138, label %143, label %139

139:                                              ; preds = %135
  %140 = icmp eq i32 %136, 0
  %141 = or i32 %136, 8
  %142 = select i1 %140, i32 1, i32 %141
  br label %143

143:                                              ; preds = %139, %135
  %144 = phi i32 [ %136, %135 ], [ %142, %139 ]
  %145 = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %3, i64 0, i32 2
  %146 = load i8*, i8** %145, align 8
  %147 = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %3, i64 0, i32 0
  %148 = load i32, i32* %147, align 8
  %149 = call fastcc i32 @do_buf(i8* %146, i32 %148, i32 %144, i8 zeroext %10, i8* nonnull %8, i32 (i8*, i8*, i32)* %0, i8* null)
  %150 = icmp slt i32 %149, 0
  br i1 %150, label %174, label %151

151:                                              ; preds = %143
  %152 = add nsw i32 %149, %28
  %153 = load i8, i8* %8, align 1
  %154 = icmp eq i8 %153, 0
  %155 = add nsw i32 %152, 2
  %156 = select i1 %154, i32 %152, i32 %155
  %157 = icmp eq i8* %1, null
  br i1 %157, label %174, label %158

158:                                              ; preds = %151
  br i1 %154, label %162, label %159

159:                                              ; preds = %158
  %160 = call i32 %0(i8* nonnull %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11, i64 0, i64 0), i32 1) #6, !callees !2
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %174, label %162

162:                                              ; preds = %159, %158
  %163 = load i8*, i8** %145, align 8
  %164 = load i32, i32* %147, align 8
  %165 = call fastcc i32 @do_buf(i8* %163, i32 %164, i32 %144, i8 zeroext %10, i8* null, i32 (i8*, i8*, i32)* %0, i8* nonnull %1)
  %166 = icmp slt i32 %165, 0
  br i1 %166, label %174, label %167

167:                                              ; preds = %162
  %168 = load i8, i8* %8, align 1
  %169 = icmp eq i8 %168, 0
  br i1 %169, label %173, label %170

170:                                              ; preds = %167
  %171 = call i32 %0(i8* nonnull %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11, i64 0, i64 0), i32 1) #6, !callees !2
  %172 = icmp eq i32 %171, 0
  br i1 %172, label %174, label %173

173:                                              ; preds = %170, %167
  br label %174

174:                                              ; preds = %21, %15, %134, %130, %67, %170, %162, %159, %151, %143, %173
  %175 = phi i32 [ %156, %173 ], [ -1, %21 ], [ -1, %143 ], [ %156, %151 ], [ -1, %159 ], [ -1, %162 ], [ -1, %170 ], [ -1, %134 ], [ %133, %130 ], [ %68, %67 ], [ -1, %15 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %8) #6
  ret i32 %175
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @ASN1_STRING_print_ex_fp(%struct._IO_FILE*, %struct.asn1_string_st*, i64) local_unnamed_addr #0 {
  %4 = bitcast %struct._IO_FILE* %0 to i8*
  %5 = tail call fastcc i32 @do_print_ex(i32 (i8*, i8*, i32)* nonnull @send_fp_chars, i8* %4, i64 %2, %struct.asn1_string_st* %1)
  ret i32 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @ASN1_STRING_to_UTF8(i8** nocapture, %struct.asn1_string_st* readonly) local_unnamed_addr #0 {
  %3 = alloca %struct.asn1_string_st, align 8
  %4 = alloca %struct.asn1_string_st*, align 8
  %5 = bitcast %struct.asn1_string_st* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #6
  %6 = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %3, i64 0, i32 0
  %7 = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %3, i64 0, i32 2
  %8 = bitcast %struct.asn1_string_st** %4 to i8*
  %9 = bitcast %struct.asn1_string_st* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #6
  store %struct.asn1_string_st* %3, %struct.asn1_string_st** %4, align 8
  %10 = icmp eq %struct.asn1_string_st* %1, null
  br i1 %10, label %37, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %1, i64 0, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = icmp ugt i32 %13, 30
  br i1 %14, label %37, label %15

15:                                               ; preds = %11
  %16 = sext i32 %13 to i64
  %17 = lshr i64 706998271, %16
  %18 = and i64 %17, 1
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %20, label %37

20:                                               ; preds = %15
  %21 = getelementptr inbounds [31 x i8], [31 x i8]* @tag2nbyte, i64 0, i64 %16
  %22 = load i8, i8* %21, align 1
  %23 = sext i8 %22 to i32
  %24 = or i32 %23, 4096
  store i32 0, i32* %6, align 8
  %25 = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %1, i64 0, i32 2
  %26 = bitcast i8** %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false)
  %27 = load i8*, i8** %25, align 8
  %28 = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %1, i64 0, i32 0
  %29 = load i32, i32* %28, align 8
  %30 = call i32 @ASN1_mbstring_copy(%struct.asn1_string_st** nonnull %4, i8* %27, i32 %29, i32 %24, i64 8192) #6
  %31 = icmp slt i32 %30, 0
  br i1 %31, label %37, label %32

32:                                               ; preds = %20
  %33 = bitcast i8** %7 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = bitcast i8** %0 to i64*
  store i64 %34, i64* %35, align 8
  %36 = load i32, i32* %6, align 8
  br label %37

37:                                               ; preds = %20, %15, %11, %2, %32
  %38 = phi i32 [ %36, %32 ], [ -1, %2 ], [ -1, %11 ], [ -1, %15 ], [ %30, %20 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #6
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #6
  ret i32 %38
}

declare i32 @ASN1_mbstring_copy(%struct.asn1_string_st**, i8*, i32, i32, i64) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare i32 @X509_NAME_entry_count(%struct.X509_name_st*) local_unnamed_addr #1

declare %struct.X509_name_entry_st* @X509_NAME_get_entry(%struct.X509_name_st*, i32) local_unnamed_addr #1

declare %struct.asn1_object_st* @X509_NAME_ENTRY_get_object(%struct.X509_name_entry_st*) local_unnamed_addr #1

declare %struct.asn1_string_st* @X509_NAME_ENTRY_get_data(%struct.X509_name_entry_st*) local_unnamed_addr #1

declare i32 @OBJ_obj2nid(%struct.asn1_object_st*) local_unnamed_addr #1

declare i32 @OBJ_obj2txt(i8*, i32, %struct.asn1_object_st*, i32) local_unnamed_addr #1

declare i8* @OBJ_nid2sn(i32) local_unnamed_addr #1

declare i8* @OBJ_nid2ln(i32) local_unnamed_addr #1

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #4

declare i32 @BIO_write(%struct.bio_st*, i8*, i32) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare i64 @fwrite(i8* nocapture, i64, i64, %struct._IO_FILE* nocapture) local_unnamed_addr #5

declare i8* @ASN1_tag2str(i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @do_buf(i8*, i32, i32, i8 zeroext, i8*, i32 (i8*, i8*, i32)* nocapture, i8*) unnamed_addr #0 {
  %8 = alloca i32, align 4
  %9 = alloca [6 x i8], align 1
  %10 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #6
  store i32 -1431655766, i32* %8, align 4
  %11 = sext i32 %1 to i64
  %12 = getelementptr inbounds i8, i8* %0, i64 %11
  %13 = and i32 %2, 7
  switch i32 %13, label %22 [
    i32 4, label %14
    i32 2, label %18
  ]

14:                                               ; preds = %7
  %15 = and i32 %1, 3
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %22, label %17

17:                                               ; preds = %14
  tail call void @ERR_put_error(i32 12, i32 0, i32 149, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.13, i64 0, i64 0), i32 192) #6
  br label %114

18:                                               ; preds = %7
  %19 = and i32 %1, 1
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %22, label %21

21:                                               ; preds = %18
  tail call void @ERR_put_error(i32 12, i32 0, i32 142, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.13, i64 0, i64 0), i32 198) #6
  br label %114

22:                                               ; preds = %14, %18, %7
  %23 = icmp eq i32 %1, 0
  br i1 %23, label %114, label %24

24:                                               ; preds = %22
  %25 = and i8 %3, 1
  %26 = icmp eq i8 %25, 0
  %27 = and i32 %2, 8
  %28 = icmp eq i32 %27, 0
  %29 = getelementptr inbounds [6 x i8], [6 x i8]* %9, i64 0, i64 0
  br label %30

30:                                               ; preds = %24, %110
  %31 = phi i8* [ %0, %24 ], [ %78, %110 ]
  %32 = phi i32 [ 0, %24 ], [ %111, %110 ]
  %33 = phi i32 [ %1, %24 ], [ %77, %110 ]
  %34 = icmp ne i8* %31, %0
  %35 = or i1 %26, %34
  %36 = select i1 %35, i8 0, i8 32
  switch i32 %13, label %114 [
    i32 4, label %37
    i32 2, label %56
    i32 1, label %65
    i32 0, label %69
  ]

37:                                               ; preds = %30
  %38 = getelementptr inbounds i8, i8* %31, i64 1
  %39 = load i8, i8* %31, align 1
  %40 = zext i8 %39 to i32
  %41 = shl nuw i32 %40, 24
  store i32 %41, i32* %8, align 4
  %42 = getelementptr inbounds i8, i8* %31, i64 2
  %43 = load i8, i8* %38, align 1
  %44 = zext i8 %43 to i32
  %45 = shl nuw nsw i32 %44, 16
  %46 = or i32 %45, %41
  store i32 %46, i32* %8, align 4
  %47 = getelementptr inbounds i8, i8* %31, i64 3
  %48 = load i8, i8* %42, align 1
  %49 = zext i8 %48 to i32
  %50 = shl nuw nsw i32 %49, 8
  %51 = or i32 %50, %46
  store i32 %51, i32* %8, align 4
  %52 = getelementptr inbounds i8, i8* %31, i64 4
  %53 = load i8, i8* %47, align 1
  %54 = zext i8 %53 to i32
  %55 = or i32 %51, %54
  store i32 %55, i32* %8, align 4
  br label %76

56:                                               ; preds = %30
  %57 = getelementptr inbounds i8, i8* %31, i64 1
  %58 = load i8, i8* %31, align 1
  %59 = zext i8 %58 to i32
  %60 = shl nuw nsw i32 %59, 8
  store i32 %60, i32* %8, align 4
  %61 = getelementptr inbounds i8, i8* %31, i64 2
  %62 = load i8, i8* %57, align 1
  %63 = zext i8 %62 to i32
  %64 = or i32 %60, %63
  store i32 %64, i32* %8, align 4
  br label %76

65:                                               ; preds = %30
  %66 = getelementptr inbounds i8, i8* %31, i64 1
  %67 = load i8, i8* %31, align 1
  %68 = zext i8 %67 to i32
  store i32 %68, i32* %8, align 4
  br label %76

69:                                               ; preds = %30
  %70 = call i32 @UTF8_getc(i8* %31, i32 %33, i32* nonnull %8) #6
  %71 = icmp slt i32 %70, 0
  br i1 %71, label %114, label %72

72:                                               ; preds = %69
  %73 = sub nsw i32 %33, %70
  %74 = sext i32 %70 to i64
  %75 = getelementptr inbounds i8, i8* %31, i64 %74
  br label %76

76:                                               ; preds = %72, %65, %56, %37
  %77 = phi i32 [ %73, %72 ], [ %33, %65 ], [ %33, %56 ], [ %33, %37 ]
  %78 = phi i8* [ %75, %72 ], [ %66, %65 ], [ %61, %56 ], [ %52, %37 ]
  %79 = icmp ne i8* %78, %12
  %80 = or i1 %26, %79
  %81 = select i1 %80, i8 %36, i8 64
  br i1 %28, label %103, label %82

82:                                               ; preds = %76
  call void @llvm.lifetime.start.p0i8(i64 6, i8* nonnull %29) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %29, i8 -86, i64 6, i1 false)
  %83 = load i32, i32* %8, align 4
  %84 = call i32 @UTF8_putc(i8* nonnull %29, i32 6, i32 %83) #6
  %85 = icmp sgt i32 %84, 0
  br i1 %85, label %86, label %101

86:                                               ; preds = %82
  %87 = or i8 %81, %3
  %88 = zext i32 %84 to i64
  br label %89

89:                                               ; preds = %97, %86
  %90 = phi i64 [ 0, %86 ], [ %99, %97 ]
  %91 = phi i32 [ %32, %86 ], [ %98, %97 ]
  %92 = getelementptr inbounds [6 x i8], [6 x i8]* %9, i64 0, i64 %90
  %93 = load i8, i8* %92, align 1
  %94 = zext i8 %93 to i32
  %95 = call fastcc i32 @do_esc_char(i32 %94, i8 zeroext %87, i8* %4, i32 (i8*, i8*, i32)* %5, i8* %6)
  %96 = icmp slt i32 %95, 0
  br i1 %96, label %113, label %97

97:                                               ; preds = %89
  %98 = add nsw i32 %95, %91
  %99 = add nuw nsw i64 %90, 1
  %100 = icmp eq i64 %99, %88
  br i1 %100, label %101, label %89

101:                                              ; preds = %97, %82
  %102 = phi i32 [ %32, %82 ], [ %98, %97 ]
  call void @llvm.lifetime.end.p0i8(i64 6, i8* nonnull %29) #6
  br label %110

103:                                              ; preds = %76
  %104 = load i32, i32* %8, align 4
  %105 = or i8 %81, %3
  %106 = call fastcc i32 @do_esc_char(i32 %104, i8 zeroext %105, i8* %4, i32 (i8*, i8*, i32)* %5, i8* %6)
  %107 = icmp slt i32 %106, 0
  br i1 %107, label %114, label %108

108:                                              ; preds = %103
  %109 = add nsw i32 %106, %32
  br label %110

110:                                              ; preds = %101, %108
  %111 = phi i32 [ %102, %101 ], [ %109, %108 ]
  %112 = icmp eq i8* %78, %12
  br i1 %112, label %114, label %30

113:                                              ; preds = %89
  call void @llvm.lifetime.end.p0i8(i64 6, i8* nonnull %29) #6
  br label %114

114:                                              ; preds = %69, %30, %103, %110, %22, %113, %21, %17
  %115 = phi i32 [ -1, %21 ], [ -1, %17 ], [ -1, %113 ], [ 0, %22 ], [ -1, %69 ], [ -1, %30 ], [ -1, %103 ], [ %111, %110 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #6
  ret i32 %115
}

declare i32 @i2d_ASN1_TYPE(%struct.asn1_type_st*, i8**) local_unnamed_addr #1

declare i8* @OPENSSL_malloc(i64) local_unnamed_addr #1

declare void @OPENSSL_free(i8*) local_unnamed_addr #1

declare void @ERR_put_error(i32, i32, i32, i8*, i32) local_unnamed_addr #1

declare i32 @UTF8_getc(i8*, i32, i32*) local_unnamed_addr #1

declare i32 @UTF8_putc(i8*, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @do_esc_char(i32, i8 zeroext, i8*, i32 (i8*, i8*, i32)* nocapture, i8*) unnamed_addr #0 {
  %6 = alloca i8, align 1
  %7 = alloca [11 x i8], align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #6
  store i8 -86, i8* %6, align 1
  %8 = getelementptr inbounds [11 x i8], [11 x i8]* %7, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 11, i8* nonnull %8) #6
  %9 = icmp ugt i32 %0, 65535
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %8, i8 -86, i64 11, i1 false)
  br i1 %9, label %10, label %15

10:                                               ; preds = %5
  %11 = call i32 (i8*, i64, i8*, ...) @BIO_snprintf(i8* nonnull %8, i64 11, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.14, i64 0, i64 0), i32 %0) #6
  %12 = call i32 %3(i8* %4, i8* nonnull %8, i32 10) #6, !callees !2
  %13 = icmp eq i32 %12, 0
  %14 = select i1 %13, i32 -1, i32 10
  br label %77

15:                                               ; preds = %5
  %16 = icmp ugt i32 %0, 255
  br i1 %16, label %17, label %22

17:                                               ; preds = %15
  %18 = call i32 (i8*, i64, i8*, ...) @BIO_snprintf(i8* nonnull %8, i64 11, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.15, i64 0, i64 0), i32 %0) #6
  %19 = call i32 %3(i8* %4, i8* nonnull %8, i32 6) #6, !callees !2
  %20 = icmp eq i32 %19, 0
  %21 = select i1 %20, i32 -1, i32 6
  br label %77

22:                                               ; preds = %15
  %23 = trunc i32 %0 to i8
  store i8 %23, i8* %6, align 1
  %24 = icmp slt i8 %23, 0
  br i1 %24, label %25, label %27

25:                                               ; preds = %22
  %26 = and i8 %1, 4
  br label %33

27:                                               ; preds = %22
  %28 = and i32 %0, 255
  %29 = zext i32 %28 to i64
  %30 = getelementptr inbounds [128 x i8], [128 x i8]* @char_type, i64 0, i64 %29
  %31 = load i8, i8* %30, align 1
  %32 = and i8 %31, %1
  br label %33

33:                                               ; preds = %27, %25
  %34 = phi i8 [ %26, %25 ], [ %32, %27 ]
  %35 = zext i8 %34 to i32
  %36 = and i32 %35, 97
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %55, label %38

38:                                               ; preds = %33
  %39 = and i32 %35, 8
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %48, label %41

41:                                               ; preds = %38
  %42 = icmp eq i8* %2, null
  br i1 %42, label %44, label %43

43:                                               ; preds = %41
  store i8 1, i8* %2, align 1
  br label %44

44:                                               ; preds = %41, %43
  %45 = call i32 %3(i8* %4, i8* nonnull %6, i32 1) #6, !callees !2
  %46 = icmp eq i32 %45, 0
  %47 = select i1 %46, i32 -1, i32 1
  br label %77

48:                                               ; preds = %38
  %49 = tail call i32 %3(i8* %4, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.16, i64 0, i64 0), i32 1) #6, !callees !2
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %77, label %51

51:                                               ; preds = %48
  %52 = call i32 %3(i8* %4, i8* nonnull %6, i32 1) #6, !callees !2
  %53 = icmp eq i32 %52, 0
  %54 = select i1 %53, i32 -1, i32 2
  br label %77

55:                                               ; preds = %33
  %56 = and i32 %35, 6
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %64, label %58

58:                                               ; preds = %55
  %59 = and i32 %0, 255
  %60 = call i32 (i8*, i64, i8*, ...) @BIO_snprintf(i8* nonnull %8, i64 11, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.17, i64 0, i64 0), i32 %59) #6
  %61 = call i32 %3(i8* %4, i8* nonnull %8, i32 3) #6, !callees !2
  %62 = icmp eq i32 %61, 0
  %63 = select i1 %62, i32 -1, i32 3
  br label %77

64:                                               ; preds = %55
  %65 = icmp ne i8 %23, 92
  %66 = and i8 %1, 15
  %67 = icmp eq i8 %66, 0
  %68 = or i1 %65, %67
  br i1 %68, label %73, label %69

69:                                               ; preds = %64
  %70 = tail call i32 %3(i8* %4, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18, i64 0, i64 0), i32 2) #6, !callees !2
  %71 = icmp eq i32 %70, 0
  %72 = select i1 %71, i32 -1, i32 2
  br label %77

73:                                               ; preds = %64
  %74 = call i32 %3(i8* %4, i8* nonnull %6, i32 1) #6, !callees !2
  %75 = icmp eq i32 %74, 0
  %76 = select i1 %75, i32 -1, i32 1
  br label %77

77:                                               ; preds = %73, %69, %58, %51, %48, %44, %17, %10
  %78 = phi i32 [ %14, %10 ], [ %21, %17 ], [ %47, %44 ], [ -1, %48 ], [ %54, %51 ], [ %63, %58 ], [ %72, %69 ], [ %76, %73 ]
  call void @llvm.lifetime.end.p0i8(i64 11, i8* nonnull %8) #6
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #6
  ret i32 %78
}

declare i32 @BIO_snprintf(i8*, i64, i8*, ...) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 (i8*, i8*, i32)* @send_bio_chars, i32 (i8*, i8*, i32)* @send_fp_chars}
