; ModuleID = '../../ui/gfx/rendering_pipeline.cc'
source_filename = "../../ui/gfx/rendering_pipeline.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.gfx::RenderingPipeline::ScopedPipelineActive" = type { %"class.gfx::RenderingPipeline"* }
%"class.gfx::RenderingPipeline" = type { i32 (...)** }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.gfx::RenderingPipelineImpl" = type { %"class.gfx::RenderingPipeline", %"class.base::Lock", %"class.base::flat_map", %"class.std::__1::unique_ptr.14", i8*, i32, %"class.base::TimeDelta", %"class.base::TimeDelta" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.11" }
%"struct.std::__1::pair" = type { i32, %"class.std::__1::unique_ptr.4" }
%"class.std::__1::unique_ptr.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"* }
%"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver" = type { %"class.base::sequence_manager::TaskTimeObserver", %class.scoped_refptr, %"class.base::Lock", i8, %"class.base::TimeTicks", %"class.base::TimeDelta" }
%"class.base::sequence_manager::TaskTimeObserver" = type { i32 (...)** }
%class.scoped_refptr = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.7" }
%"struct.std::__1::__atomic_base.7" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"struct.std::__1::pair"* }
%"class.std::__1::unique_ptr.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.gfx::RenderingStageScheduler"* }
%"class.gfx::RenderingStageScheduler" = type { i32 (...)** }
%"class.base::TimeDelta" = type { i64 }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.23 }
%class.scoped_refptr.23 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.24", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.24" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::CurrentThread" = type { %"class.base::sequence_manager::internal::SequenceManagerImpl"* }
%"class.base::sequence_manager::internal::SequenceManagerImpl" = type opaque
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::vector.41" = type { %"class.std::__1::__vector_base.42" }
%"class.std::__1::__vector_base.42" = type { i32*, i32*, %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { i32* }

$_ZN3gfx21RenderingPipelineImplD2Ev = comdat any

$_ZN3gfx21RenderingPipelineImplD0Ev = comdat any

$_ZN3gfx21RenderingPipelineImpl24AddSequenceManagerThreadEi13scoped_refptrIN4base22SingleThreadTaskRunnerEE = comdat any

$_ZN3gfx21RenderingPipelineImpl15AddSimpleThreadEi = comdat any

$_ZN3gfx21RenderingPipelineImpl19NotifyFrameFinishedEv = comdat any

$_ZN3gfx21RenderingPipelineImpl17SetTargetDurationEN4base9TimeDeltaE = comdat any

$_ZN3gfx21RenderingPipelineImpl13SetGpuLatencyEN4base9TimeDeltaE = comdat any

$_ZN3gfx21RenderingPipelineImpl17UpdateActiveCountEb = comdat any

$_ZN3gfx21RenderingPipelineImpl40CreateSchedulerAndEnableWithLockAcquiredEv = comdat any

$_ZTVN3gfx21RenderingPipelineImplE = comdat any

@_ZZN3gfx17RenderingPipeline18CreateRendererMainEvE13kRendererMain = internal constant [13 x i8] c"RendererMain\00", align 1
@_ZZN3gfx17RenderingPipeline24CreateRendererCompositorEvE19kRendererCompositor = internal constant [19 x i8] c"RendererCompositor\00", align 16
@_ZZN3gfx17RenderingPipeline9CreateGpuEvE4kGpu = internal constant [4 x i8] c"Gpu\00", align 1
@_ZTVN3gfx21RenderingPipelineImplE = linkonce_odr hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.gfx::RenderingPipelineImpl"*)* @_ZN3gfx21RenderingPipelineImplD2Ev to i8*), i8* bitcast (void (%"class.gfx::RenderingPipelineImpl"*)* @_ZN3gfx21RenderingPipelineImplD0Ev to i8*), i8* bitcast (void (%"class.gfx::RenderingPipelineImpl"*, i32, %"class.base::SingleThreadTaskRunner"*)* @_ZN3gfx21RenderingPipelineImpl24AddSequenceManagerThreadEi13scoped_refptrIN4base22SingleThreadTaskRunnerEE to i8*), i8* bitcast (%"class.base::sequence_manager::TaskTimeObserver"* (%"class.gfx::RenderingPipelineImpl"*, i32)* @_ZN3gfx21RenderingPipelineImpl15AddSimpleThreadEi to i8*), i8* bitcast (void (%"class.gfx::RenderingPipelineImpl"*)* @_ZN3gfx21RenderingPipelineImpl19NotifyFrameFinishedEv to i8*), i8* bitcast (void (%"class.gfx::RenderingPipelineImpl"*, i64)* @_ZN3gfx21RenderingPipelineImpl17SetTargetDurationEN4base9TimeDeltaE to i8*), i8* bitcast (void (%"class.gfx::RenderingPipelineImpl"*, i64)* @_ZN3gfx21RenderingPipelineImpl13SetGpuLatencyEN4base9TimeDeltaE to i8*), i8* bitcast (void (%"class.gfx::RenderingPipelineImpl"*, i1)* @_ZN3gfx21RenderingPipelineImpl17UpdateActiveCountEb to i8*)] }, comdat, align 8
@.str = private unnamed_addr constant [11 x i8] c"SetEnabled\00", align 1
@.str.1 = private unnamed_addr constant [35 x i8] c"../../ui/gfx/rendering_pipeline.cc\00", align 1
@_ZTVN3gfx12_GLOBAL__N_122ThreadSafeTimeObserverE = internal unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"*)* @_ZN3gfx12_GLOBAL__N_122ThreadSafeTimeObserverD2Ev to i8*), i8* bitcast (void (%"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"*)* @_ZN3gfx12_GLOBAL__N_122ThreadSafeTimeObserverD0Ev to i8*), i8* bitcast (void (%"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"*, i64)* @_ZN3gfx12_GLOBAL__N_122ThreadSafeTimeObserver15WillProcessTaskEN4base9TimeTicksE to i8*), i8* bitcast (void (%"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"*, i64, i64)* @_ZN3gfx12_GLOBAL__N_122ThreadSafeTimeObserver14DidProcessTaskEN4base9TimeTicksES3_ to i8*)] }, align 8
@.str.2 = private unnamed_addr constant [23 x i8] c"../../base/time/time.h\00", align 1
@.str.3 = private unnamed_addr constant [38 x i8] c"!is_inf() || (delta_ == other.delta_)\00", align 1

@_ZN3gfx17RenderingPipeline20ScopedPipelineActiveC1EPS0_ = hidden unnamed_addr alias void (%"class.gfx::RenderingPipeline::ScopedPipelineActive"*, %"class.gfx::RenderingPipeline"*), void (%"class.gfx::RenderingPipeline::ScopedPipelineActive"*, %"class.gfx::RenderingPipeline"*)* @_ZN3gfx17RenderingPipeline20ScopedPipelineActiveC2EPS0_
@_ZN3gfx17RenderingPipeline20ScopedPipelineActiveD1Ev = hidden unnamed_addr alias void (%"class.gfx::RenderingPipeline::ScopedPipelineActive"*), void (%"class.gfx::RenderingPipeline::ScopedPipelineActive"*)* @_ZN3gfx17RenderingPipeline20ScopedPipelineActiveD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx17RenderingPipeline20ScopedPipelineActiveC2EPS0_(%"class.gfx::RenderingPipeline::ScopedPipelineActive"* nocapture, %"class.gfx::RenderingPipeline"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gfx::RenderingPipeline::ScopedPipelineActive", %"class.gfx::RenderingPipeline::ScopedPipelineActive"* %0, i64 0, i32 0
  store %"class.gfx::RenderingPipeline"* %1, %"class.gfx::RenderingPipeline"** %3, align 8
  %4 = bitcast %"class.gfx::RenderingPipeline"* %1 to void (%"class.gfx::RenderingPipeline"*, i1)***
  %5 = load void (%"class.gfx::RenderingPipeline"*, i1)**, void (%"class.gfx::RenderingPipeline"*, i1)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.gfx::RenderingPipeline"*, i1)*, void (%"class.gfx::RenderingPipeline"*, i1)** %5, i64 7
  %7 = load void (%"class.gfx::RenderingPipeline"*, i1)*, void (%"class.gfx::RenderingPipeline"*, i1)** %6, align 8
  tail call void %7(%"class.gfx::RenderingPipeline"* %1, i1 zeroext true) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx17RenderingPipeline20ScopedPipelineActiveD2Ev(%"class.gfx::RenderingPipeline::ScopedPipelineActive"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gfx::RenderingPipeline::ScopedPipelineActive", %"class.gfx::RenderingPipeline::ScopedPipelineActive"* %0, i64 0, i32 0
  %3 = load %"class.gfx::RenderingPipeline"*, %"class.gfx::RenderingPipeline"** %2, align 8
  %4 = bitcast %"class.gfx::RenderingPipeline"* %3 to void (%"class.gfx::RenderingPipeline"*, i1)***
  %5 = load void (%"class.gfx::RenderingPipeline"*, i1)**, void (%"class.gfx::RenderingPipeline"*, i1)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.gfx::RenderingPipeline"*, i1)*, void (%"class.gfx::RenderingPipeline"*, i1)** %5, i64 7
  %7 = load void (%"class.gfx::RenderingPipeline"*, i1)*, void (%"class.gfx::RenderingPipeline"*, i1)** %6, align 8
  tail call void %7(%"class.gfx::RenderingPipeline"* %3, i1 zeroext false) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.gfx::RenderingPipeline"* @_ZN3gfx17RenderingPipeline18CreateRendererMainEv() local_unnamed_addr #0 align 2 {
  %1 = tail call i8* @_Znwm(i64 112) #10
  %2 = bitcast i8* %1 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN3gfx21RenderingPipelineImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds i8, i8* %1, i64 8
  %4 = bitcast i8* %3 to %"class.base::internal::LockImpl"*
  tail call void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"* %4) #9
  %5 = getelementptr inbounds i8, i8* %1, i64 48
  %6 = getelementptr inbounds i8, i8* %1, i64 80
  %7 = bitcast i8* %6 to i8**
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 32, i1 false) #9
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @_ZZN3gfx17RenderingPipeline18CreateRendererMainEvE13kRendererMain, i64 0, i64 0), i8** %7, align 8
  %8 = getelementptr inbounds i8, i8* %1, i64 88
  %9 = bitcast i8* %8 to i32*
  store i32 0, i32* %9, align 8
  %10 = getelementptr inbounds i8, i8* %1, i64 96
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 16, i1 false) #9
  %11 = bitcast i8* %1 to %"class.gfx::RenderingPipeline"*
  ret %"class.gfx::RenderingPipeline"* %11
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.gfx::RenderingPipeline"* @_ZN3gfx17RenderingPipeline24CreateRendererCompositorEv() local_unnamed_addr #0 align 2 {
  %1 = tail call i8* @_Znwm(i64 112) #10
  %2 = bitcast i8* %1 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN3gfx21RenderingPipelineImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds i8, i8* %1, i64 8
  %4 = bitcast i8* %3 to %"class.base::internal::LockImpl"*
  tail call void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"* %4) #9
  %5 = getelementptr inbounds i8, i8* %1, i64 48
  %6 = getelementptr inbounds i8, i8* %1, i64 80
  %7 = bitcast i8* %6 to i8**
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 32, i1 false) #9
  store i8* getelementptr inbounds ([19 x i8], [19 x i8]* @_ZZN3gfx17RenderingPipeline24CreateRendererCompositorEvE19kRendererCompositor, i64 0, i64 0), i8** %7, align 8
  %8 = getelementptr inbounds i8, i8* %1, i64 88
  %9 = bitcast i8* %8 to i32*
  store i32 0, i32* %9, align 8
  %10 = getelementptr inbounds i8, i8* %1, i64 96
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 16, i1 false) #9
  %11 = bitcast i8* %1 to %"class.gfx::RenderingPipeline"*
  ret %"class.gfx::RenderingPipeline"* %11
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.gfx::RenderingPipeline"* @_ZN3gfx17RenderingPipeline9CreateGpuEv() local_unnamed_addr #0 align 2 {
  %1 = tail call i8* @_Znwm(i64 112) #10
  %2 = bitcast i8* %1 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN3gfx21RenderingPipelineImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds i8, i8* %1, i64 8
  %4 = bitcast i8* %3 to %"class.base::internal::LockImpl"*
  tail call void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"* %4) #9
  %5 = getelementptr inbounds i8, i8* %1, i64 48
  %6 = getelementptr inbounds i8, i8* %1, i64 80
  %7 = bitcast i8* %6 to i8**
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 32, i1 false) #9
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @_ZZN3gfx17RenderingPipeline9CreateGpuEvE4kGpu, i64 0, i64 0), i8** %7, align 8
  %8 = getelementptr inbounds i8, i8* %1, i64 88
  %9 = bitcast i8* %8 to i32*
  store i32 0, i32* %9, align 8
  %10 = getelementptr inbounds i8, i8* %1, i64 96
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 16, i1 false) #9
  %11 = bitcast i8* %1 to %"class.gfx::RenderingPipeline"*
  ret %"class.gfx::RenderingPipeline"* %11
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3gfx21RenderingPipelineImplD2Ev(%"class.gfx::RenderingPipelineImpl"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.gfx::RenderingPipelineImpl", %"class.gfx::RenderingPipelineImpl"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN3gfx21RenderingPipelineImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gfx::RenderingPipelineImpl", %"class.gfx::RenderingPipelineImpl"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %3, i64 0, i32 0, i32 0
  %5 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %4) #9
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %9, label %7, !prof !2

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %3, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %8) #9
  br label %9

9:                                                ; preds = %7, %1
  %10 = getelementptr inbounds %"class.gfx::RenderingPipelineImpl", %"class.gfx::RenderingPipelineImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %11 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %10, align 8
  %12 = getelementptr inbounds %"class.gfx::RenderingPipelineImpl", %"class.gfx::RenderingPipelineImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %13 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %12, align 8
  %14 = icmp eq %"struct.std::__1::pair"* %11, %13
  br i1 %14, label %15, label %24

15:                                               ; preds = %24, %9
  %16 = getelementptr inbounds %"class.gfx::RenderingPipelineImpl", %"class.gfx::RenderingPipelineImpl"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %17 = load %"class.gfx::RenderingStageScheduler"*, %"class.gfx::RenderingStageScheduler"** %16, align 8
  store %"class.gfx::RenderingStageScheduler"* null, %"class.gfx::RenderingStageScheduler"** %16, align 8
  %18 = icmp eq %"class.gfx::RenderingStageScheduler"* %17, null
  br i1 %18, label %30, label %19

19:                                               ; preds = %15
  %20 = bitcast %"class.gfx::RenderingStageScheduler"* %17 to void (%"class.gfx::RenderingStageScheduler"*)***
  %21 = load void (%"class.gfx::RenderingStageScheduler"*)**, void (%"class.gfx::RenderingStageScheduler"*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.gfx::RenderingStageScheduler"*)*, void (%"class.gfx::RenderingStageScheduler"*)** %21, i64 1
  %23 = load void (%"class.gfx::RenderingStageScheduler"*)*, void (%"class.gfx::RenderingStageScheduler"*)** %22, align 8
  tail call void %23(%"class.gfx::RenderingStageScheduler"* nonnull %17) #9
  br label %30

24:                                               ; preds = %9, %24
  %25 = phi %"struct.std::__1::pair"* [ %28, %24 ], [ %11, %9 ]
  %26 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %25, i64 0, i32 1, i32 0, i32 0, i32 0
  %27 = load %"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"*, %"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"** %26, align 8
  tail call fastcc void @_ZN3gfx12_GLOBAL__N_122ThreadSafeTimeObserver10SetEnabledEb(%"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"* %27, i1 zeroext false) #9
  %28 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %25, i64 1
  %29 = icmp eq %"struct.std::__1::pair"* %28, %13
  br i1 %29, label %15, label %24

30:                                               ; preds = %15, %19
  %31 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %4) #9
  %32 = load %"class.gfx::RenderingStageScheduler"*, %"class.gfx::RenderingStageScheduler"** %16, align 8
  store %"class.gfx::RenderingStageScheduler"* null, %"class.gfx::RenderingStageScheduler"** %16, align 8
  %33 = icmp eq %"class.gfx::RenderingStageScheduler"* %32, null
  br i1 %33, label %39, label %34

34:                                               ; preds = %30
  %35 = bitcast %"class.gfx::RenderingStageScheduler"* %32 to void (%"class.gfx::RenderingStageScheduler"*)***
  %36 = load void (%"class.gfx::RenderingStageScheduler"*)**, void (%"class.gfx::RenderingStageScheduler"*)*** %35, align 8
  %37 = getelementptr inbounds void (%"class.gfx::RenderingStageScheduler"*)*, void (%"class.gfx::RenderingStageScheduler"*)** %36, i64 1
  %38 = load void (%"class.gfx::RenderingStageScheduler"*)*, void (%"class.gfx::RenderingStageScheduler"*)** %37, align 8
  tail call void %38(%"class.gfx::RenderingStageScheduler"* nonnull %32) #9
  br label %39

39:                                               ; preds = %30, %34
  %40 = getelementptr inbounds %"class.gfx::RenderingPipelineImpl", %"class.gfx::RenderingPipelineImpl"* %0, i64 0, i32 2, i32 0
  %41 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %40, i64 0, i32 0, i32 0, i32 0
  %42 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %41, align 8
  %43 = icmp eq %"struct.std::__1::pair"* %42, null
  br i1 %43, label %66, label %44

44:                                               ; preds = %39
  %45 = bitcast %"struct.std::__1::pair"* %42 to i8*
  %46 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %12, align 8
  %47 = icmp eq %"struct.std::__1::pair"* %46, %42
  br i1 %47, label %64, label %48

48:                                               ; preds = %44, %59
  %49 = phi %"struct.std::__1::pair"* [ %50, %59 ], [ %46, %44 ]
  %50 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %49, i64 -1
  %51 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %49, i64 -1, i32 1, i32 0, i32 0, i32 0
  %52 = load %"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"*, %"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"** %51, align 8
  store %"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"* null, %"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"** %51, align 8
  %53 = icmp eq %"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"* %52, null
  br i1 %53, label %59, label %54

54:                                               ; preds = %48
  %55 = bitcast %"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"* %52 to void (%"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"*)***
  %56 = load void (%"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"*)**, void (%"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"*)*** %55, align 8
  %57 = getelementptr inbounds void (%"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"*)*, void (%"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"*)** %56, i64 1
  %58 = load void (%"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"*)*, void (%"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"*)** %57, align 8
  tail call void %58(%"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"* nonnull %52) #9
  br label %59

59:                                               ; preds = %54, %48
  %60 = icmp eq %"struct.std::__1::pair"* %50, %42
  br i1 %60, label %61, label %48

61:                                               ; preds = %59
  %62 = bitcast %"class.base::internal::flat_tree"* %40 to i8**
  %63 = load i8*, i8** %62, align 8
  br label %64

64:                                               ; preds = %61, %44
  %65 = phi i8* [ %63, %61 ], [ %45, %44 ]
  store %"struct.std::__1::pair"* %42, %"struct.std::__1::pair"** %12, align 8
  tail call void @_ZdlPv(i8* %65) #10
  br label %66

66:                                               ; preds = %39, %64
  %67 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %3, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"* %67) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3gfx21RenderingPipelineImplD0Ev(%"class.gfx::RenderingPipelineImpl"*) unnamed_addr #0 comdat align 2 {
  tail call void @_ZN3gfx21RenderingPipelineImplD2Ev(%"class.gfx::RenderingPipelineImpl"* %0) #9
  %2 = bitcast %"class.gfx::RenderingPipelineImpl"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3gfx21RenderingPipelineImpl24AddSequenceManagerThreadEi13scoped_refptrIN4base22SingleThreadTaskRunnerEE(%"class.gfx::RenderingPipelineImpl"*, i32, %"class.base::SingleThreadTaskRunner"*) unnamed_addr #0 comdat align 2 {
  %4 = alloca i32, align 4
  store i32 %1, i32* %4, align 4
  %5 = getelementptr inbounds %"class.gfx::RenderingPipelineImpl", %"class.gfx::RenderingPipelineImpl"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %5, i64 0, i32 0, i32 0
  %7 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %6) #9
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %11, label %9, !prof !2

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %5, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %10) #9
  br label %11

11:                                               ; preds = %3, %9
  %12 = tail call i8* @_Znwm(i64 80) #10
  %13 = icmp eq %"class.base::SingleThreadTaskRunner"* %2, null
  br i1 %13, label %17, label %14

14:                                               ; preds = %11
  %15 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %2, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = atomicrmw add i32* %15, i32 1 monotonic
  br label %17

17:                                               ; preds = %11, %14
  %18 = ptrtoint %"class.base::SingleThreadTaskRunner"* %2 to i64
  %19 = bitcast i8* %12 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3gfx12_GLOBAL__N_122ThreadSafeTimeObserverE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %19, align 8
  %20 = getelementptr inbounds i8, i8* %12, i64 8
  %21 = bitcast i8* %20 to i64*
  store i64 %18, i64* %21, align 8
  %22 = getelementptr inbounds i8, i8* %12, i64 16
  %23 = bitcast i8* %22 to %"class.base::internal::LockImpl"*
  tail call void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"* %23) #9
  %24 = getelementptr inbounds i8, i8* %12, i64 56
  store i8 0, i8* %24, align 8
  %25 = getelementptr inbounds i8, i8* %12, i64 64
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 16, i1 false) #9
  %26 = ptrtoint i8* %12 to i64
  %27 = getelementptr inbounds %"class.gfx::RenderingPipelineImpl", %"class.gfx::RenderingPipelineImpl"* %0, i64 0, i32 2
  %28 = call fastcc dereferenceable(8) %"class.std::__1::unique_ptr.4"* @_ZN4base8flat_mapIiNSt3__110unique_ptrIN3gfx12_GLOBAL__N_122ThreadSafeTimeObserverENS1_14default_deleteIS5_EEEENS1_4lessIvEENS1_6vectorINS1_4pairIiS8_EENS1_9allocatorISD_EEEEEixERKi(%"class.base::flat_map"* %27, i32* nonnull dereferenceable(4) %4)
  %29 = getelementptr inbounds %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4"* %28, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"*, %"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"** %29, align 8
  %31 = bitcast %"class.std::__1::unique_ptr.4"* %28 to i64*
  store i64 %26, i64* %31, align 8
  %32 = icmp eq %"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"* %30, null
  br i1 %32, label %38, label %33

33:                                               ; preds = %17
  %34 = bitcast %"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"* %30 to void (%"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"*)***
  %35 = load void (%"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"*)**, void (%"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"*)*** %34, align 8
  %36 = getelementptr inbounds void (%"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"*)*, void (%"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"*)** %35, i64 1
  %37 = load void (%"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"*)*, void (%"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"*)** %36, align 8
  tail call void %37(%"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"* nonnull %30) #9
  br label %38

38:                                               ; preds = %33, %17
  %39 = getelementptr inbounds %"class.gfx::RenderingPipelineImpl", %"class.gfx::RenderingPipelineImpl"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %40 = load %"class.gfx::RenderingStageScheduler"*, %"class.gfx::RenderingStageScheduler"** %39, align 8
  %41 = icmp eq %"class.gfx::RenderingStageScheduler"* %40, null
  br i1 %41, label %43, label %42

42:                                               ; preds = %38
  tail call void @_ZN3gfx21RenderingPipelineImpl40CreateSchedulerAndEnableWithLockAcquiredEv(%"class.gfx::RenderingPipelineImpl"* %0)
  br label %43

43:                                               ; preds = %38, %42
  %44 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %6) #9
  br i1 %13, label %53, label %45

45:                                               ; preds = %43
  %46 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %2, i64 0, i32 0, i32 0, i32 1
  %47 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %46, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = atomicrmw sub i32* %47, i32 1 acq_rel
  %49 = icmp eq i32 %48, 1
  br i1 %49, label %50, label %53

50:                                               ; preds = %45
  %51 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %46, i64 -2
  %52 = bitcast %"class.base::RefCountedThreadSafe"* %51 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %52) #9
  br label %53

53:                                               ; preds = %43, %45, %50
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.base::sequence_manager::TaskTimeObserver"* @_ZN3gfx21RenderingPipelineImpl15AddSimpleThreadEi(%"class.gfx::RenderingPipelineImpl"*, i32) unnamed_addr #0 comdat align 2 {
  %3 = alloca i32, align 4
  store i32 %1, i32* %3, align 4
  %4 = getelementptr inbounds %"class.gfx::RenderingPipelineImpl", %"class.gfx::RenderingPipelineImpl"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %4, i64 0, i32 0, i32 0
  %6 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %5) #9
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %10, label %8, !prof !2

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %4, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %9) #9
  br label %10

10:                                               ; preds = %2, %8
  %11 = tail call i8* @_Znwm(i64 80) #10
  %12 = bitcast i8* %11 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3gfx12_GLOBAL__N_122ThreadSafeTimeObserverE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %13 = getelementptr inbounds i8, i8* %11, i64 8
  %14 = bitcast i8* %13 to i64*
  store i64 0, i64* %14, align 8
  %15 = getelementptr inbounds i8, i8* %11, i64 16
  %16 = bitcast i8* %15 to %"class.base::internal::LockImpl"*
  tail call void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"* %16) #9
  %17 = getelementptr inbounds i8, i8* %11, i64 56
  store i8 0, i8* %17, align 8
  %18 = getelementptr inbounds i8, i8* %11, i64 64
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 16, i1 false) #9
  %19 = ptrtoint i8* %11 to i64
  %20 = getelementptr inbounds %"class.gfx::RenderingPipelineImpl", %"class.gfx::RenderingPipelineImpl"* %0, i64 0, i32 2
  %21 = call fastcc dereferenceable(8) %"class.std::__1::unique_ptr.4"* @_ZN4base8flat_mapIiNSt3__110unique_ptrIN3gfx12_GLOBAL__N_122ThreadSafeTimeObserverENS1_14default_deleteIS5_EEEENS1_4lessIvEENS1_6vectorINS1_4pairIiS8_EENS1_9allocatorISD_EEEEEixERKi(%"class.base::flat_map"* %20, i32* nonnull dereferenceable(4) %3)
  %22 = getelementptr inbounds %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4"* %21, i64 0, i32 0, i32 0, i32 0
  %23 = load %"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"*, %"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"** %22, align 8
  %24 = bitcast %"class.std::__1::unique_ptr.4"* %21 to i64*
  store i64 %19, i64* %24, align 8
  %25 = icmp eq %"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"* %23, null
  br i1 %25, label %31, label %26

26:                                               ; preds = %10
  %27 = bitcast %"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"* %23 to void (%"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"*)***
  %28 = load void (%"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"*)**, void (%"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"*)*, void (%"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"*)** %28, i64 1
  %30 = load void (%"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"*)*, void (%"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"*)** %29, align 8
  tail call void %30(%"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"* nonnull %23) #9
  br label %31

31:                                               ; preds = %26, %10
  %32 = getelementptr inbounds %"class.gfx::RenderingPipelineImpl", %"class.gfx::RenderingPipelineImpl"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %33 = load %"class.gfx::RenderingStageScheduler"*, %"class.gfx::RenderingStageScheduler"** %32, align 8
  %34 = icmp eq %"class.gfx::RenderingStageScheduler"* %33, null
  br i1 %34, label %36, label %35

35:                                               ; preds = %31
  tail call void @_ZN3gfx21RenderingPipelineImpl40CreateSchedulerAndEnableWithLockAcquiredEv(%"class.gfx::RenderingPipelineImpl"* %0)
  br label %36

36:                                               ; preds = %31, %35
  %37 = call fastcc dereferenceable(8) %"class.std::__1::unique_ptr.4"* @_ZN4base8flat_mapIiNSt3__110unique_ptrIN3gfx12_GLOBAL__N_122ThreadSafeTimeObserverENS1_14default_deleteIS5_EEEENS1_4lessIvEENS1_6vectorINS1_4pairIiS8_EENS1_9allocatorISD_EEEEEixERKi(%"class.base::flat_map"* %20, i32* nonnull dereferenceable(4) %3)
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4"* %37, i64 0, i32 0, i32 0, i32 0
  %39 = load %"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"*, %"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"** %38, align 8
  %40 = getelementptr inbounds %"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver", %"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"* %39, i64 0, i32 0
  %41 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %5) #9
  ret %"class.base::sequence_manager::TaskTimeObserver"* %40
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3gfx21RenderingPipelineImpl19NotifyFrameFinishedEv(%"class.gfx::RenderingPipelineImpl"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = getelementptr inbounds %"class.gfx::RenderingPipelineImpl", %"class.gfx::RenderingPipelineImpl"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %5, i64 0, i32 0, i32 0
  %7 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %6) #9
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %11, label %9, !prof !2

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %5, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %10) #9
  br label %11

11:                                               ; preds = %1, %9
  %12 = getelementptr inbounds %"class.gfx::RenderingPipelineImpl", %"class.gfx::RenderingPipelineImpl"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %13 = load %"class.gfx::RenderingStageScheduler"*, %"class.gfx::RenderingStageScheduler"** %12, align 8
  %14 = icmp eq %"class.gfx::RenderingStageScheduler"* %13, null
  br i1 %14, label %120, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.gfx::RenderingPipelineImpl", %"class.gfx::RenderingPipelineImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %17 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %16, align 8
  %18 = getelementptr inbounds %"class.gfx::RenderingPipelineImpl", %"class.gfx::RenderingPipelineImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %19 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %18, align 8
  %20 = icmp eq %"struct.std::__1::pair"* %17, %19
  br i1 %20, label %26, label %21

21:                                               ; preds = %15
  %22 = bitcast %"class.logging::CheckError"* %3 to i8*
  %23 = bitcast %"class.logging::CheckError"* %4 to i8*
  br label %54

24:                                               ; preds = %116
  %25 = load %"class.gfx::RenderingStageScheduler"*, %"class.gfx::RenderingStageScheduler"** %12, align 8
  br label %26

26:                                               ; preds = %24, %15
  %27 = phi %"class.gfx::RenderingStageScheduler"* [ %13, %15 ], [ %25, %24 ]
  %28 = phi i64 [ 0, %15 ], [ %117, %24 ]
  %29 = getelementptr inbounds %"class.gfx::RenderingPipelineImpl", %"class.gfx::RenderingPipelineImpl"* %0, i64 0, i32 7, i32 0
  %30 = load i64, i64* %29, align 8
  %31 = add i64 %30, -9223372036854775807
  %32 = icmp ult i64 %31, 2
  br i1 %32, label %40, label %33

33:                                               ; preds = %26
  %34 = icmp slt i64 %30, 0
  %35 = select i1 %34, i64 -9223372036854775808, i64 9223372036854775807
  %36 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %28, i64 %30) #9
  %37 = extractvalue { i64, i1 } %36, 1
  %38 = extractvalue { i64, i1 } %36, 0
  %39 = select i1 %37, i64 %35, i64 %38, !prof !3
  br label %48

40:                                               ; preds = %26
  %41 = add i64 %28, -9223372036854775807
  %42 = icmp ugt i64 %41, 1
  %43 = icmp eq i64 %28, %30
  %44 = or i1 %42, %43
  br i1 %44, label %48, label %45

45:                                               ; preds = %40
  %46 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.3, i64 0, i64 0)) #9
  %47 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #9
  br label %48

48:                                               ; preds = %33, %40, %45
  %49 = phi i64 [ %39, %33 ], [ %30, %40 ], [ %30, %45 ]
  %50 = bitcast %"class.gfx::RenderingStageScheduler"* %27 to void (%"class.gfx::RenderingStageScheduler"*, i64)***
  %51 = load void (%"class.gfx::RenderingStageScheduler"*, i64)**, void (%"class.gfx::RenderingStageScheduler"*, i64)*** %50, align 8
  %52 = getelementptr inbounds void (%"class.gfx::RenderingStageScheduler"*, i64)*, void (%"class.gfx::RenderingStageScheduler"*, i64)** %51, i64 2
  %53 = load void (%"class.gfx::RenderingStageScheduler"*, i64)*, void (%"class.gfx::RenderingStageScheduler"*, i64)** %52, align 8
  call void %53(%"class.gfx::RenderingStageScheduler"* %27, i64 %49) #9
  br label %120

54:                                               ; preds = %21, %116
  %55 = phi %"struct.std::__1::pair"* [ %17, %21 ], [ %118, %116 ]
  %56 = phi i64 [ 0, %21 ], [ %117, %116 ]
  %57 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %55, i64 0, i32 1, i32 0, i32 0, i32 0
  %58 = load %"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"*, %"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"** %57, align 8
  %59 = getelementptr inbounds %"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver", %"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"* %58, i64 0, i32 2
  %60 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %59, i64 0, i32 0, i32 0
  %61 = call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %60) #9
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %65, label %63, !prof !2

63:                                               ; preds = %54
  %64 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %59, i64 0, i32 0
  call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %64) #9
  br label %65

65:                                               ; preds = %63, %54
  %66 = getelementptr inbounds %"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver", %"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"* %58, i64 0, i32 4, i32 0, i32 0
  %67 = load i64, i64* %66, align 8
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %69, label %72

69:                                               ; preds = %65
  %70 = getelementptr inbounds %"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver", %"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"* %58, i64 0, i32 5, i32 0
  %71 = load i64, i64* %70, align 8
  br label %96

72:                                               ; preds = %65
  %73 = call i64 @_ZN4base9TimeTicks3NowEv() #9
  %74 = load i64, i64* %66, align 8
  %75 = sub nsw i64 %73, %74
  %76 = add i64 %75, -9223372036854775807
  %77 = icmp ult i64 %76, 2
  %78 = getelementptr inbounds %"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver", %"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"* %58, i64 0, i32 5, i32 0
  %79 = load i64, i64* %78, align 8
  br i1 %77, label %87, label %80

80:                                               ; preds = %72
  %81 = icmp slt i64 %75, 0
  %82 = select i1 %81, i64 -9223372036854775808, i64 9223372036854775807
  %83 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %79, i64 %75) #9
  %84 = extractvalue { i64, i1 } %83, 1
  %85 = extractvalue { i64, i1 } %83, 0
  %86 = select i1 %84, i64 %82, i64 %85, !prof !3
  br label %94

87:                                               ; preds = %72
  %88 = add i64 %79, -9223372036854775807
  %89 = icmp ugt i64 %88, 1
  %90 = icmp eq i64 %79, %75
  %91 = or i1 %90, %89
  br i1 %91, label %94, label %92

92:                                               ; preds = %87
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.3, i64 0, i64 0)) #9
  %93 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #9
  br label %94

94:                                               ; preds = %92, %87, %80
  %95 = phi i64 [ %86, %80 ], [ %75, %87 ], [ %75, %92 ]
  store i64 %95, i64* %78, align 8
  store i64 %73, i64* %66, align 8
  br label %96

96:                                               ; preds = %69, %94
  %97 = phi i64 [ %71, %69 ], [ %95, %94 ]
  %98 = getelementptr inbounds %"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver", %"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"* %58, i64 0, i32 5, i32 0
  store i64 0, i64* %98, align 8
  %99 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %60) #9
  %100 = add i64 %97, -9223372036854775807
  %101 = icmp ult i64 %100, 2
  br i1 %101, label %109, label %102

102:                                              ; preds = %96
  %103 = icmp slt i64 %97, 0
  %104 = select i1 %103, i64 -9223372036854775808, i64 9223372036854775807
  %105 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %56, i64 %97) #9
  %106 = extractvalue { i64, i1 } %105, 1
  %107 = extractvalue { i64, i1 } %105, 0
  %108 = select i1 %106, i64 %104, i64 %107, !prof !3
  br label %116

109:                                              ; preds = %96
  %110 = add i64 %56, -9223372036854775807
  %111 = icmp ugt i64 %110, 1
  %112 = icmp eq i64 %56, %97
  %113 = or i1 %111, %112
  br i1 %113, label %116, label %114

114:                                              ; preds = %109
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.3, i64 0, i64 0)) #9
  %115 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #9
  br label %116

116:                                              ; preds = %102, %109, %114
  %117 = phi i64 [ %108, %102 ], [ %97, %109 ], [ %97, %114 ]
  %118 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %55, i64 1
  %119 = icmp eq %"struct.std::__1::pair"* %118, %19
  br i1 %119, label %24, label %54

120:                                              ; preds = %11, %48
  %121 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %6) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3gfx21RenderingPipelineImpl17SetTargetDurationEN4base9TimeDeltaE(%"class.gfx::RenderingPipelineImpl"*, i64) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.gfx::RenderingPipelineImpl", %"class.gfx::RenderingPipelineImpl"* %0, i64 0, i32 6, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, %1
  br i1 %5, label %21, label %6

6:                                                ; preds = %2
  store i64 %1, i64* %3, align 8
  %7 = getelementptr inbounds %"class.gfx::RenderingPipelineImpl", %"class.gfx::RenderingPipelineImpl"* %0, i64 0, i32 5
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 1
  %10 = icmp ne i64 %1, 0
  %11 = and i1 %10, %9
  br i1 %11, label %12, label %21

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.gfx::RenderingPipelineImpl", %"class.gfx::RenderingPipelineImpl"* %0, i64 0, i32 1
  %14 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %13, i64 0, i32 0, i32 0
  %15 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %14) #9
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %19, label %17, !prof !2

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %13, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %18) #9
  br label %19

19:                                               ; preds = %12, %17
  tail call void @_ZN3gfx21RenderingPipelineImpl40CreateSchedulerAndEnableWithLockAcquiredEv(%"class.gfx::RenderingPipelineImpl"* %0) #9
  %20 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %14) #9
  br label %21

21:                                               ; preds = %6, %2, %19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3gfx21RenderingPipelineImpl13SetGpuLatencyEN4base9TimeDeltaE(%"class.gfx::RenderingPipelineImpl"*, i64) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.gfx::RenderingPipelineImpl", %"class.gfx::RenderingPipelineImpl"* %0, i64 0, i32 7, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3gfx21RenderingPipelineImpl17UpdateActiveCountEb(%"class.gfx::RenderingPipelineImpl"*, i1 zeroext) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.gfx::RenderingPipelineImpl", %"class.gfx::RenderingPipelineImpl"* %0, i64 0, i32 5
  %4 = load i32, i32* %3, align 8
  %5 = select i1 %1, i32 1, i32 -1
  %6 = add nsw i32 %4, %5
  store i32 %6, i32* %3, align 8
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %20

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.gfx::RenderingPipelineImpl", %"class.gfx::RenderingPipelineImpl"* %0, i64 0, i32 6, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %20, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.gfx::RenderingPipelineImpl", %"class.gfx::RenderingPipelineImpl"* %0, i64 0, i32 1
  %14 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %13, i64 0, i32 0, i32 0
  %15 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %14) #9
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %19, label %17, !prof !2

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %13, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %18) #9
  br label %19

19:                                               ; preds = %12, %17
  tail call void @_ZN3gfx21RenderingPipelineImpl40CreateSchedulerAndEnableWithLockAcquiredEv(%"class.gfx::RenderingPipelineImpl"* %0) #9
  br label %48

20:                                               ; preds = %8, %2
  %21 = getelementptr inbounds %"class.gfx::RenderingPipelineImpl", %"class.gfx::RenderingPipelineImpl"* %0, i64 0, i32 1
  %22 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %21, i64 0, i32 0, i32 0
  %23 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %22) #9
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %27, label %25, !prof !2

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %21, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %26) #9
  br label %27

27:                                               ; preds = %25, %20
  %28 = getelementptr inbounds %"class.gfx::RenderingPipelineImpl", %"class.gfx::RenderingPipelineImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %29 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %28, align 8
  %30 = getelementptr inbounds %"class.gfx::RenderingPipelineImpl", %"class.gfx::RenderingPipelineImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %31 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %30, align 8
  %32 = icmp eq %"struct.std::__1::pair"* %29, %31
  br i1 %32, label %33, label %42

33:                                               ; preds = %42, %27
  %34 = getelementptr inbounds %"class.gfx::RenderingPipelineImpl", %"class.gfx::RenderingPipelineImpl"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %35 = load %"class.gfx::RenderingStageScheduler"*, %"class.gfx::RenderingStageScheduler"** %34, align 8
  store %"class.gfx::RenderingStageScheduler"* null, %"class.gfx::RenderingStageScheduler"** %34, align 8
  %36 = icmp eq %"class.gfx::RenderingStageScheduler"* %35, null
  br i1 %36, label %48, label %37

37:                                               ; preds = %33
  %38 = bitcast %"class.gfx::RenderingStageScheduler"* %35 to void (%"class.gfx::RenderingStageScheduler"*)***
  %39 = load void (%"class.gfx::RenderingStageScheduler"*)**, void (%"class.gfx::RenderingStageScheduler"*)*** %38, align 8
  %40 = getelementptr inbounds void (%"class.gfx::RenderingStageScheduler"*)*, void (%"class.gfx::RenderingStageScheduler"*)** %39, i64 1
  %41 = load void (%"class.gfx::RenderingStageScheduler"*)*, void (%"class.gfx::RenderingStageScheduler"*)** %40, align 8
  tail call void %41(%"class.gfx::RenderingStageScheduler"* nonnull %35) #9
  br label %48

42:                                               ; preds = %27, %42
  %43 = phi %"struct.std::__1::pair"* [ %46, %42 ], [ %29, %27 ]
  %44 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %43, i64 0, i32 1, i32 0, i32 0, i32 0
  %45 = load %"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"*, %"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"** %44, align 8
  tail call fastcc void @_ZN3gfx12_GLOBAL__N_122ThreadSafeTimeObserver10SetEnabledEb(%"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"* %45, i1 zeroext false) #9
  %46 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %43, i64 1
  %47 = icmp eq %"struct.std::__1::pair"* %46, %31
  br i1 %47, label %33, label %42

48:                                               ; preds = %37, %33, %19
  %49 = phi %union.pthread_mutex_t* [ %14, %19 ], [ %22, %33 ], [ %22, %37 ]
  %50 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %49) #9
  ret void
}

declare void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN3gfx12_GLOBAL__N_122ThreadSafeTimeObserver10SetEnabledEb(%"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"*, i1 zeroext) unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = zext i1 %1 to i8
  %6 = getelementptr inbounds %"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver", %"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"* %0, i64 0, i32 2
  %7 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %6, i64 0, i32 0, i32 0
  %8 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %7) #9
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %12, label %10, !prof !2

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %6, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %11) #9
  br label %12

12:                                               ; preds = %2, %10
  %13 = getelementptr inbounds %"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver", %"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"* %0, i64 0, i32 3
  %14 = load i8, i8* %13, align 8, !range !4
  %15 = icmp eq i8 %14, %5
  br i1 %15, label %21, label %16

16:                                               ; preds = %12
  store i8 %5, i8* %13, align 8
  %17 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %7) #9
  %18 = getelementptr inbounds %"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver", %"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"* %0, i64 0, i32 1, i32 0
  %19 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %18, align 8
  %20 = icmp eq %"class.base::SingleThreadTaskRunner"* %19, null
  br i1 %20, label %46, label %23

21:                                               ; preds = %12
  %22 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %7) #9
  br label %46

23:                                               ; preds = %16
  %24 = bitcast %"class.base::SingleThreadTaskRunner"* %19 to %"class.base::SequencedTaskRunner"*
  %25 = bitcast %"class.base::SingleThreadTaskRunner"* %19 to i1 (%"class.base::SequencedTaskRunner"*)***
  %26 = load i1 (%"class.base::SequencedTaskRunner"*)**, i1 (%"class.base::SequencedTaskRunner"*)*** %25, align 8
  %27 = getelementptr inbounds i1 (%"class.base::SequencedTaskRunner"*)*, i1 (%"class.base::SequencedTaskRunner"*)** %26, i64 5
  %28 = load i1 (%"class.base::SequencedTaskRunner"*)*, i1 (%"class.base::SequencedTaskRunner"*)** %27, align 8
  %29 = tail call zeroext i1 %28(%"class.base::SequencedTaskRunner"* nonnull %24) #9
  br i1 %29, label %30, label %31

30:                                               ; preds = %23
  tail call void @_ZN3gfx12_GLOBAL__N_122ThreadSafeTimeObserver20UpdateOnTargetThreadEb(%"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"* %0, i1 zeroext %1)
  br label %46

31:                                               ; preds = %23
  %32 = bitcast %"class.base::SingleThreadTaskRunner"** %18 to %"class.base::TaskRunner"**
  %33 = load %"class.base::TaskRunner"*, %"class.base::TaskRunner"** %32, align 8
  %34 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %34) #9
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.1, i64 0, i64 0), i32 48) #9
  %35 = ptrtoint %"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"* %0 to i64
  %36 = call i8* @_Znwm(i64 64) #10, !noalias !5
  %37 = bitcast i8* %36 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %37, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN3gfx12_GLOBAL__N_122ThreadSafeTimeObserverEFvbEJNS0_17UnretainedWrapperIS5_EEbEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN3gfx12_GLOBAL__N_122ThreadSafeTimeObserverEFvbEJNS0_17UnretainedWrapperIS4_EEbEE7DestroyEPKNS0_13BindStateBaseE) #9, !noalias !5
  %38 = getelementptr inbounds i8, i8* %36, i64 32
  %39 = bitcast i8* %38 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"*, i1)* @_ZN3gfx12_GLOBAL__N_122ThreadSafeTimeObserver20UpdateOnTargetThreadEb to i64), i64 0>, <2 x i64>* %39, align 8, !noalias !5
  %40 = getelementptr inbounds i8, i8* %36, i64 48
  %41 = bitcast i8* %40 to i64*
  store i64 %35, i64* %41, align 8, !noalias !5
  %42 = getelementptr inbounds i8, i8* %36, i64 56
  store i8 %5, i8* %42, align 1, !noalias !5
  %43 = bitcast %"class.base::OnceCallback"* %4 to i8**
  store i8* %36, i8** %43, align 8, !alias.scope !5
  %44 = call zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"* %33, %"class.base::Location"* nonnull dereferenceable(32) %3, %"class.base::OnceCallback"* nonnull %4) #9
  %45 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %45) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %34) #9
  br label %46

46:                                               ; preds = %16, %21, %31, %30
  ret void
}

declare void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare i32 @pthread_mutex_trylock(%union.pthread_mutex_t*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3gfx12_GLOBAL__N_122ThreadSafeTimeObserver20UpdateOnTargetThreadEb(%"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"*, i1 zeroext) #0 align 2 {
  %3 = alloca %"class.base::CurrentThread", align 8
  %4 = alloca %"class.base::CurrentThread", align 8
  br i1 %1, label %5, label %20

5:                                                ; preds = %2
  %6 = bitcast %"class.base::CurrentThread"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #9
  %7 = tail call %"class.base::sequence_manager::internal::SequenceManagerImpl"* @_ZN4base13CurrentThread3GetEv() #9
  %8 = getelementptr inbounds %"class.base::CurrentThread", %"class.base::CurrentThread"* %3, i64 0, i32 0
  store %"class.base::sequence_manager::internal::SequenceManagerImpl"* %7, %"class.base::sequence_manager::internal::SequenceManagerImpl"** %8, align 8
  %9 = getelementptr inbounds %"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver", %"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"* %0, i64 0, i32 0
  call void @_ZN4base13CurrentThread19AddTaskTimeObserverEPNS_16sequence_manager16TaskTimeObserverE(%"class.base::CurrentThread"* nonnull %3, %"class.base::sequence_manager::TaskTimeObserver"* %9) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #9
  %10 = getelementptr inbounds %"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver", %"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"* %0, i64 0, i32 2
  %11 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %10, i64 0, i32 0, i32 0
  %12 = call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %11) #9
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %16, label %14, !prof !2

14:                                               ; preds = %5
  %15 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %10, i64 0, i32 0
  call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %15) #9
  br label %16

16:                                               ; preds = %5, %14
  %17 = getelementptr inbounds %"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver", %"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"* %0, i64 0, i32 4, i32 0, i32 0
  %18 = bitcast i64* %17 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 16, i1 false)
  %19 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %11) #9
  br label %25

20:                                               ; preds = %2
  %21 = bitcast %"class.base::CurrentThread"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #9
  %22 = tail call %"class.base::sequence_manager::internal::SequenceManagerImpl"* @_ZN4base13CurrentThread3GetEv() #9
  %23 = getelementptr inbounds %"class.base::CurrentThread", %"class.base::CurrentThread"* %4, i64 0, i32 0
  store %"class.base::sequence_manager::internal::SequenceManagerImpl"* %22, %"class.base::sequence_manager::internal::SequenceManagerImpl"** %23, align 8
  %24 = getelementptr inbounds %"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver", %"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"* %0, i64 0, i32 0
  call void @_ZN4base13CurrentThread22RemoveTaskTimeObserverEPNS_16sequence_manager16TaskTimeObserverE(%"class.base::CurrentThread"* nonnull %4, %"class.base::sequence_manager::TaskTimeObserver"* %24) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #9
  br label %25

25:                                               ; preds = %20, %16
  ret void
}

declare zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"*, %"class.base::Location"* dereferenceable(32), %"class.base::OnceCallback"*) local_unnamed_addr #3

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #4

declare %"class.base::sequence_manager::internal::SequenceManagerImpl"* @_ZN4base13CurrentThread3GetEv() local_unnamed_addr #3

declare void @_ZN4base13CurrentThread19AddTaskTimeObserverEPNS_16sequence_manager16TaskTimeObserverE(%"class.base::CurrentThread"*, %"class.base::sequence_manager::TaskTimeObserver"*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN4base13CurrentThread22RemoveTaskTimeObserverEPNS_16sequence_manager16TaskTimeObserverE(%"class.base::CurrentThread"*, %"class.base::sequence_manager::TaskTimeObserver"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base8internal7InvokerINS0_9BindStateIMN3gfx12_GLOBAL__N_122ThreadSafeTimeObserverEFvbEJNS0_17UnretainedWrapperIS5_EEbEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"* nocapture readonly) #0 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %4 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to i8**
  %5 = load i8*, i8** %4, align 8
  %6 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 1
  %7 = bitcast void (%"class.base::internal::BindStateBase"*)** %6 to i8*
  %8 = bitcast %"class.base::internal::BindStateBase"* %2 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %11 = bitcast void ()** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds i8, i8* %5, i64 %12
  %14 = bitcast i8* %13 to %"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"*
  %15 = and i64 %9, 1
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %24, label %17

17:                                               ; preds = %1
  %18 = bitcast i8* %13 to i8**
  %19 = load i8*, i8** %18, align 8
  %20 = add i64 %9, -1
  %21 = getelementptr i8, i8* %19, i64 %20
  %22 = bitcast i8* %21 to void (%"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"*, i1)**
  %23 = load void (%"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"*, i1)*, void (%"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"*, i1)** %22, align 8
  br label %26

24:                                               ; preds = %1
  %25 = inttoptr i64 %9 to void (%"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"*, i1)*
  br label %26

26:                                               ; preds = %17, %24
  %27 = phi void (%"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"*, i1)* [ %23, %17 ], [ %25, %24 ]
  %28 = load i8, i8* %7, align 1, !range !4
  %29 = icmp ne i8 %28, 0
  tail call void %27(%"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"* %14, i1 zeroext %29) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base8internal9BindStateIMN3gfx12_GLOBAL__N_122ThreadSafeTimeObserverEFvbEJNS0_17UnretainedWrapperIS4_EEbEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #10
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind
declare i32 @pthread_mutex_unlock(%union.pthread_mutex_t*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define internal fastcc dereferenceable(8) %"class.std::__1::unique_ptr.4"* @_ZN4base8flat_mapIiNSt3__110unique_ptrIN3gfx12_GLOBAL__N_122ThreadSafeTimeObserverENS1_14default_deleteIS5_EEEENS1_4lessIvEENS1_6vectorINS1_4pairIiS8_EENS1_9allocatorISD_EEEEEixERKi(%"class.base::flat_map"*, i32* nocapture readonly dereferenceable(4)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.base::flat_map", %"class.base::flat_map"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %3, align 8
  %5 = getelementptr inbounds %"class.base::flat_map", %"class.base::flat_map"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %6 = bitcast %"struct.std::__1::pair"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = ptrtoint %"struct.std::__1::pair"* %4 to i64
  %9 = sub i64 %7, %8
  %10 = icmp eq i64 %9, 0
  %11 = inttoptr i64 %7 to %"struct.std::__1::pair"*
  br i1 %10, label %31, label %12

12:                                               ; preds = %2
  %13 = ashr exact i64 %9, 4
  %14 = load i32, i32* %1, align 4
  br label %15

15:                                               ; preds = %15, %12
  %16 = phi %"struct.std::__1::pair"* [ %4, %12 ], [ %27, %15 ]
  %17 = phi i64 [ %13, %12 ], [ %26, %15 ]
  %18 = lshr i64 %17, 1
  %19 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %16, i64 %18
  %20 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %19, i64 0, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = icmp slt i32 %21, %14
  %23 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %19, i64 1
  %24 = xor i64 %18, -1
  %25 = add i64 %17, %24
  %26 = select i1 %22, i64 %25, i64 %18
  %27 = select i1 %22, %"struct.std::__1::pair"* %23, %"struct.std::__1::pair"* %16
  %28 = icmp eq i64 %26, 0
  br i1 %28, label %29, label %15

29:                                               ; preds = %15
  %30 = ptrtoint %"struct.std::__1::pair"* %27 to i64
  br label %31

31:                                               ; preds = %29, %2
  %32 = phi i64 [ %30, %29 ], [ %8, %2 ]
  %33 = phi %"struct.std::__1::pair"* [ %27, %29 ], [ %4, %2 ]
  %34 = ptrtoint %"struct.std::__1::pair"* %33 to i64
  %35 = icmp eq %"struct.std::__1::pair"* %33, %11
  br i1 %35, label %41, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %33, i64 0, i32 0
  %38 = load i32, i32* %1, align 4
  %39 = load i32, i32* %37, align 4
  %40 = icmp slt i32 %38, %39
  br i1 %40, label %41, label %438

41:                                               ; preds = %31, %36
  %42 = getelementptr inbounds %"class.base::flat_map", %"class.base::flat_map"* %0, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %43 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %42, align 8
  %44 = icmp ugt %"struct.std::__1::pair"* %43, %11
  %45 = ptrtoint %"struct.std::__1::pair"* %43 to i64
  br i1 %44, label %46, label %179

46:                                               ; preds = %41
  br i1 %35, label %47, label %54

47:                                               ; preds = %46
  %48 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %11, i64 0, i32 0
  %49 = load i32, i32* %1, align 4
  store i32 %49, i32* %48, align 8
  %50 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %11, i64 0, i32 1
  %51 = bitcast %"class.std::__1::unique_ptr.4"* %50 to i64*
  store i64 0, i64* %51, align 8
  %52 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %11, i64 1
  %53 = ptrtoint %"struct.std::__1::pair"* %52 to i64
  store i64 %53, i64* %6, align 8
  br label %438

54:                                               ; preds = %46
  %55 = load i32, i32* %1, align 4
  %56 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %33, i64 1
  %57 = ptrtoint %"struct.std::__1::pair"* %56 to i64
  %58 = sub i64 %7, %57
  %59 = ashr exact i64 %58, 4
  %60 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %33, i64 %59
  %61 = icmp ult %"struct.std::__1::pair"* %60, %11
  br i1 %61, label %62, label %98

62:                                               ; preds = %54
  %63 = sub nsw i64 0, %59
  %64 = getelementptr %"struct.std::__1::pair", %"struct.std::__1::pair"* %11, i64 %63, i32 0
  %65 = bitcast i32* %64 to i8*
  %66 = xor i64 %34, -1
  %67 = getelementptr i8, i8* %65, i64 %66
  %68 = ptrtoint i8* %67 to i64
  %69 = lshr i64 %68, 4
  %70 = add nuw nsw i64 %69, 1
  %71 = and i64 %70, 3
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %90, label %73

73:                                               ; preds = %62, %73
  %74 = phi %"struct.std::__1::pair"* [ %87, %73 ], [ %11, %62 ]
  %75 = phi %"struct.std::__1::pair"* [ %86, %73 ], [ %60, %62 ]
  %76 = phi i64 [ %88, %73 ], [ %71, %62 ]
  %77 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %74, i64 0, i32 0
  %78 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %75, i64 0, i32 0
  %79 = load i32, i32* %78, align 8
  store i32 %79, i32* %77, align 8
  %80 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %74, i64 0, i32 1
  %81 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %75, i64 0, i32 1
  %82 = getelementptr inbounds %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4"* %81, i64 0, i32 0, i32 0, i32 0
  %83 = bitcast %"class.std::__1::unique_ptr.4"* %81 to i64*
  %84 = load i64, i64* %83, align 8
  store %"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"* null, %"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"** %82, align 8
  %85 = bitcast %"class.std::__1::unique_ptr.4"* %80 to i64*
  store i64 %84, i64* %85, align 8
  %86 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %75, i64 1
  %87 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %74, i64 1
  %88 = add i64 %76, -1
  %89 = icmp eq i64 %88, 0
  br i1 %89, label %90, label %73, !llvm.loop !10

90:                                               ; preds = %73, %62
  %91 = phi %"struct.std::__1::pair"* [ %11, %62 ], [ %87, %73 ]
  %92 = phi %"struct.std::__1::pair"* [ %60, %62 ], [ %86, %73 ]
  %93 = phi %"struct.std::__1::pair"* [ undef, %62 ], [ %87, %73 ]
  %94 = icmp ult i8* %67, inttoptr (i64 48 to i8*)
  br i1 %94, label %95, label %125

95:                                               ; preds = %125, %90
  %96 = phi %"struct.std::__1::pair"* [ %93, %90 ], [ %165, %125 ]
  %97 = ptrtoint %"struct.std::__1::pair"* %96 to i64
  br label %98

98:                                               ; preds = %95, %54
  %99 = phi i64 [ %97, %95 ], [ %7, %54 ]
  store i64 %99, i64* %6, align 8
  %100 = icmp eq i64 %58, 0
  br i1 %100, label %167, label %101

101:                                              ; preds = %98, %123
  %102 = phi %"struct.std::__1::pair"* [ %105, %123 ], [ %11, %98 ]
  %103 = phi %"struct.std::__1::pair"* [ %104, %123 ], [ %60, %98 ]
  %104 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %103, i64 -1
  %105 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %102, i64 -1
  %106 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %104, i64 0, i32 0
  %107 = load i32, i32* %106, align 4
  %108 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %105, i64 0, i32 0
  store i32 %107, i32* %108, align 8
  %109 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %103, i64 -1, i32 1
  %110 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %102, i64 -1, i32 1
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4"* %109, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr.4"* %109 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"* null, %"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"** %111, align 8
  %114 = getelementptr inbounds %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4"* %110, i64 0, i32 0, i32 0, i32 0
  %115 = load %"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"*, %"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"** %114, align 8
  %116 = bitcast %"class.std::__1::unique_ptr.4"* %110 to i64*
  store i64 %113, i64* %116, align 8
  %117 = icmp eq %"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"* %115, null
  br i1 %117, label %123, label %118

118:                                              ; preds = %101
  %119 = bitcast %"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"* %115 to void (%"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"*)***
  %120 = load void (%"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"*)**, void (%"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"*)*** %119, align 8
  %121 = getelementptr inbounds void (%"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"*)*, void (%"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"*)** %120, i64 1
  %122 = load void (%"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"*)*, void (%"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"*)** %121, align 8
  tail call void %122(%"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"* nonnull %115) #9
  br label %123

123:                                              ; preds = %118, %101
  %124 = icmp eq %"struct.std::__1::pair"* %104, %33
  br i1 %124, label %167, label %101

125:                                              ; preds = %90, %125
  %126 = phi %"struct.std::__1::pair"* [ %165, %125 ], [ %91, %90 ]
  %127 = phi %"struct.std::__1::pair"* [ %164, %125 ], [ %92, %90 ]
  %128 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %126, i64 0, i32 0
  %129 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %127, i64 0, i32 0
  %130 = load i32, i32* %129, align 8
  store i32 %130, i32* %128, align 8
  %131 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %126, i64 0, i32 1
  %132 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %127, i64 0, i32 1
  %133 = getelementptr inbounds %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4"* %132, i64 0, i32 0, i32 0, i32 0
  %134 = bitcast %"class.std::__1::unique_ptr.4"* %132 to i64*
  %135 = load i64, i64* %134, align 8
  store %"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"* null, %"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"** %133, align 8
  %136 = bitcast %"class.std::__1::unique_ptr.4"* %131 to i64*
  store i64 %135, i64* %136, align 8
  %137 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %126, i64 1, i32 0
  %138 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %127, i64 1, i32 0
  %139 = load i32, i32* %138, align 8
  store i32 %139, i32* %137, align 8
  %140 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %126, i64 1, i32 1
  %141 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %127, i64 1, i32 1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = bitcast %"class.std::__1::unique_ptr.4"* %141 to i64*
  %144 = load i64, i64* %143, align 8
  store %"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"* null, %"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"** %142, align 8
  %145 = bitcast %"class.std::__1::unique_ptr.4"* %140 to i64*
  store i64 %144, i64* %145, align 8
  %146 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %126, i64 2, i32 0
  %147 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %127, i64 2, i32 0
  %148 = load i32, i32* %147, align 8
  store i32 %148, i32* %146, align 8
  %149 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %126, i64 2, i32 1
  %150 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %127, i64 2, i32 1
  %151 = getelementptr inbounds %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4"* %150, i64 0, i32 0, i32 0, i32 0
  %152 = bitcast %"class.std::__1::unique_ptr.4"* %150 to i64*
  %153 = load i64, i64* %152, align 8
  store %"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"* null, %"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"** %151, align 8
  %154 = bitcast %"class.std::__1::unique_ptr.4"* %149 to i64*
  store i64 %153, i64* %154, align 8
  %155 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %126, i64 3, i32 0
  %156 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %127, i64 3, i32 0
  %157 = load i32, i32* %156, align 8
  store i32 %157, i32* %155, align 8
  %158 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %126, i64 3, i32 1
  %159 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %127, i64 3, i32 1
  %160 = getelementptr inbounds %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4"* %159, i64 0, i32 0, i32 0, i32 0
  %161 = bitcast %"class.std::__1::unique_ptr.4"* %159 to i64*
  %162 = load i64, i64* %161, align 8
  store %"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"* null, %"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"** %160, align 8
  %163 = bitcast %"class.std::__1::unique_ptr.4"* %158 to i64*
  store i64 %162, i64* %163, align 8
  %164 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %127, i64 4
  %165 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %126, i64 4
  %166 = icmp ult %"struct.std::__1::pair"* %164, %11
  br i1 %166, label %125, label %95

167:                                              ; preds = %123, %98
  %168 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %33, i64 0, i32 0
  store i32 %55, i32* %168, align 8
  %169 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %33, i64 0, i32 1
  %170 = getelementptr inbounds %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4"* %169, i64 0, i32 0, i32 0, i32 0
  %171 = load %"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"*, %"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"** %170, align 8
  %172 = bitcast %"class.std::__1::unique_ptr.4"* %169 to i64*
  store i64 0, i64* %172, align 8
  %173 = icmp eq %"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"* %171, null
  br i1 %173, label %438, label %174

174:                                              ; preds = %167
  %175 = bitcast %"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"* %171 to void (%"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"*)***
  %176 = load void (%"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"*)**, void (%"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"*)*** %175, align 8
  %177 = getelementptr inbounds void (%"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"*)*, void (%"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"*)** %176, i64 1
  %178 = load void (%"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"*)*, void (%"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"*)** %177, align 8
  tail call void %178(%"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"* nonnull %171) #9
  br label %438

179:                                              ; preds = %41
  %180 = bitcast %"class.base::flat_map"* %0 to i64*
  %181 = ashr exact i64 %9, 4
  %182 = add nsw i64 %181, 1
  %183 = icmp ugt i64 %182, 1152921504606846975
  br i1 %183, label %184, label %186

184:                                              ; preds = %179
  %185 = bitcast %"class.base::flat_map"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %185) #11
  unreachable

186:                                              ; preds = %179
  %187 = bitcast %"struct.std::__1::pair"** %42 to i64*
  %188 = sub i64 %45, %8
  %189 = ashr exact i64 %188, 4
  %190 = icmp ult i64 %189, 576460752303423487
  br i1 %190, label %194, label %191

191:                                              ; preds = %186
  %192 = sub i64 %32, %8
  %193 = ashr exact i64 %192, 4
  br label %204

194:                                              ; preds = %186
  %195 = ashr exact i64 %188, 3
  %196 = icmp ult i64 %195, %182
  %197 = select i1 %196, i64 %182, i64 %195
  %198 = sub i64 %32, %8
  %199 = ashr exact i64 %198, 4
  %200 = icmp eq i64 %197, 0
  br i1 %200, label %210, label %201

201:                                              ; preds = %194
  %202 = icmp ugt i64 %197, 1152921504606846975
  br i1 %202, label %203, label %204

203:                                              ; preds = %201
  tail call void @abort() #11
  unreachable

204:                                              ; preds = %201, %191
  %205 = phi i64 [ 1152921504606846975, %191 ], [ %197, %201 ]
  %206 = phi i64 [ %193, %191 ], [ %199, %201 ]
  %207 = shl i64 %205, 4
  %208 = tail call i8* @_Znwm(i64 %207) #10
  %209 = bitcast i8* %208 to %"struct.std::__1::pair"*
  br label %210

210:                                              ; preds = %204, %194
  %211 = phi i64 [ %206, %204 ], [ %199, %194 ]
  %212 = phi i64 [ %205, %204 ], [ 0, %194 ]
  %213 = phi i8* [ %208, %204 ], [ null, %194 ]
  %214 = phi %"struct.std::__1::pair"* [ %209, %204 ], [ null, %194 ]
  %215 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %214, i64 %211
  %216 = ptrtoint %"struct.std::__1::pair"* %215 to i64
  %217 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %214, i64 %212
  %218 = ptrtoint %"struct.std::__1::pair"* %217 to i64
  %219 = icmp eq i64 %211, %212
  br i1 %219, label %220, label %244

220:                                              ; preds = %210
  %221 = icmp sgt i64 %211, 0
  br i1 %221, label %222, label %227

222:                                              ; preds = %220
  %223 = add nuw nsw i64 %211, 1
  %224 = sdiv i64 %223, -2
  %225 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %215, i64 %224
  %226 = ptrtoint %"struct.std::__1::pair"* %225 to i64
  br label %244

227:                                              ; preds = %220
  %228 = shl nsw i64 %211, 1
  %229 = icmp eq i64 %211, 0
  %230 = select i1 %229, i64 1, i64 %228
  %231 = icmp ugt i64 %230, 1152921504606846975
  br i1 %231, label %232, label %233

232:                                              ; preds = %227
  tail call void @abort() #11
  unreachable

233:                                              ; preds = %227
  %234 = lshr i64 %230, 2
  %235 = shl i64 %230, 4
  %236 = tail call i8* @_Znwm(i64 %235) #10
  %237 = bitcast i8* %236 to %"struct.std::__1::pair"*
  %238 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %237, i64 %234
  %239 = ptrtoint %"struct.std::__1::pair"* %238 to i64
  %240 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %237, i64 %230
  %241 = ptrtoint %"struct.std::__1::pair"* %240 to i64
  %242 = icmp eq %"struct.std::__1::pair"* %214, null
  br i1 %242, label %244, label %243

243:                                              ; preds = %233
  tail call void @_ZdlPv(i8* %213) #10
  br label %244

244:                                              ; preds = %243, %233, %222, %210
  %245 = phi i64 [ %226, %222 ], [ %239, %233 ], [ %239, %243 ], [ %216, %210 ]
  %246 = phi %"struct.std::__1::pair"* [ %225, %222 ], [ %238, %233 ], [ %238, %243 ], [ %215, %210 ]
  %247 = phi i64 [ %218, %222 ], [ %241, %233 ], [ %241, %243 ], [ %218, %210 ]
  %248 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %246, i64 0, i32 0
  %249 = load i32, i32* %1, align 4
  store i32 %249, i32* %248, align 8
  %250 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %246, i64 0, i32 1
  %251 = bitcast %"class.std::__1::unique_ptr.4"* %250 to i64*
  store i64 0, i64* %251, align 8
  %252 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %246, i64 1
  %253 = inttoptr i64 %245 to %"struct.std::__1::pair"*
  %254 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %3, align 8
  %255 = icmp eq %"struct.std::__1::pair"* %254, %33
  br i1 %255, label %332, label %256

256:                                              ; preds = %244
  %257 = ptrtoint %"struct.std::__1::pair"* %254 to i64
  %258 = getelementptr %"struct.std::__1::pair", %"struct.std::__1::pair"* %33, i64 -1, i32 0
  %259 = ptrtoint i32* %258 to i64
  %260 = sub i64 %259, %257
  %261 = lshr i64 %260, 4
  %262 = add nuw nsw i64 %261, 1
  %263 = and i64 %262, 3
  %264 = icmp eq i64 %263, 0
  br i1 %264, label %282, label %265

265:                                              ; preds = %256, %265
  %266 = phi %"struct.std::__1::pair"* [ %279, %265 ], [ %253, %256 ]
  %267 = phi %"struct.std::__1::pair"* [ %269, %265 ], [ %33, %256 ]
  %268 = phi i64 [ %280, %265 ], [ %263, %256 ]
  %269 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %267, i64 -1
  %270 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %266, i64 -1, i32 0
  %271 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %269, i64 0, i32 0
  %272 = load i32, i32* %271, align 8
  store i32 %272, i32* %270, align 8
  %273 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %266, i64 -1, i32 1
  %274 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %267, i64 -1, i32 1
  %275 = getelementptr inbounds %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4"* %274, i64 0, i32 0, i32 0, i32 0
  %276 = bitcast %"class.std::__1::unique_ptr.4"* %274 to i64*
  %277 = load i64, i64* %276, align 8
  store %"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"* null, %"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"** %275, align 8
  %278 = bitcast %"class.std::__1::unique_ptr.4"* %273 to i64*
  store i64 %277, i64* %278, align 8
  %279 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %266, i64 -1
  %280 = add i64 %268, -1
  %281 = icmp eq i64 %280, 0
  br i1 %281, label %282, label %265, !llvm.loop !12

282:                                              ; preds = %265, %256
  %283 = phi %"struct.std::__1::pair"* [ undef, %256 ], [ %279, %265 ]
  %284 = phi %"struct.std::__1::pair"* [ %253, %256 ], [ %279, %265 ]
  %285 = phi %"struct.std::__1::pair"* [ %33, %256 ], [ %269, %265 ]
  %286 = icmp ult i64 %260, 48
  br i1 %286, label %329, label %287

287:                                              ; preds = %282, %287
  %288 = phi %"struct.std::__1::pair"* [ %327, %287 ], [ %284, %282 ]
  %289 = phi %"struct.std::__1::pair"* [ %317, %287 ], [ %285, %282 ]
  %290 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %288, i64 -1, i32 0
  %291 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %289, i64 -1, i32 0
  %292 = load i32, i32* %291, align 8
  store i32 %292, i32* %290, align 8
  %293 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %288, i64 -1, i32 1
  %294 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %289, i64 -1, i32 1
  %295 = getelementptr inbounds %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4"* %294, i64 0, i32 0, i32 0, i32 0
  %296 = bitcast %"class.std::__1::unique_ptr.4"* %294 to i64*
  %297 = load i64, i64* %296, align 8
  store %"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"* null, %"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"** %295, align 8
  %298 = bitcast %"class.std::__1::unique_ptr.4"* %293 to i64*
  store i64 %297, i64* %298, align 8
  %299 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %288, i64 -2, i32 0
  %300 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %289, i64 -2, i32 0
  %301 = load i32, i32* %300, align 8
  store i32 %301, i32* %299, align 8
  %302 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %288, i64 -2, i32 1
  %303 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %289, i64 -2, i32 1
  %304 = getelementptr inbounds %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4"* %303, i64 0, i32 0, i32 0, i32 0
  %305 = bitcast %"class.std::__1::unique_ptr.4"* %303 to i64*
  %306 = load i64, i64* %305, align 8
  store %"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"* null, %"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"** %304, align 8
  %307 = bitcast %"class.std::__1::unique_ptr.4"* %302 to i64*
  store i64 %306, i64* %307, align 8
  %308 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %288, i64 -3, i32 0
  %309 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %289, i64 -3, i32 0
  %310 = load i32, i32* %309, align 8
  store i32 %310, i32* %308, align 8
  %311 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %288, i64 -3, i32 1
  %312 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %289, i64 -3, i32 1
  %313 = getelementptr inbounds %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4"* %312, i64 0, i32 0, i32 0, i32 0
  %314 = bitcast %"class.std::__1::unique_ptr.4"* %312 to i64*
  %315 = load i64, i64* %314, align 8
  store %"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"* null, %"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"** %313, align 8
  %316 = bitcast %"class.std::__1::unique_ptr.4"* %311 to i64*
  store i64 %315, i64* %316, align 8
  %317 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %289, i64 -4
  %318 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %288, i64 -4, i32 0
  %319 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %317, i64 0, i32 0
  %320 = load i32, i32* %319, align 8
  store i32 %320, i32* %318, align 8
  %321 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %288, i64 -4, i32 1
  %322 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %289, i64 -4, i32 1
  %323 = getelementptr inbounds %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4"* %322, i64 0, i32 0, i32 0, i32 0
  %324 = bitcast %"class.std::__1::unique_ptr.4"* %322 to i64*
  %325 = load i64, i64* %324, align 8
  store %"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"* null, %"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"** %323, align 8
  %326 = bitcast %"class.std::__1::unique_ptr.4"* %321 to i64*
  store i64 %325, i64* %326, align 8
  %327 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %288, i64 -4
  %328 = icmp eq %"struct.std::__1::pair"* %317, %254
  br i1 %328, label %329, label %287

329:                                              ; preds = %287, %282
  %330 = phi %"struct.std::__1::pair"* [ %283, %282 ], [ %327, %287 ]
  %331 = ptrtoint %"struct.std::__1::pair"* %330 to i64
  br label %332

332:                                              ; preds = %329, %244
  %333 = phi i64 [ %245, %244 ], [ %331, %329 ]
  %334 = phi %"struct.std::__1::pair"* [ %253, %244 ], [ %330, %329 ]
  %335 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %5, align 8
  %336 = icmp eq %"struct.std::__1::pair"* %335, %33
  br i1 %336, label %367, label %337

337:                                              ; preds = %332
  %338 = getelementptr %"struct.std::__1::pair", %"struct.std::__1::pair"* %335, i64 -1, i32 0
  %339 = ptrtoint i32* %338 to i64
  %340 = sub i64 %339, %34
  %341 = lshr i64 %340, 4
  %342 = add nuw nsw i64 %341, 1
  %343 = and i64 %342, 3
  %344 = icmp eq i64 %343, 0
  br i1 %344, label %362, label %345

345:                                              ; preds = %337, %345
  %346 = phi %"struct.std::__1::pair"* [ %359, %345 ], [ %252, %337 ]
  %347 = phi %"struct.std::__1::pair"* [ %358, %345 ], [ %33, %337 ]
  %348 = phi i64 [ %360, %345 ], [ %343, %337 ]
  %349 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %346, i64 0, i32 0
  %350 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %347, i64 0, i32 0
  %351 = load i32, i32* %350, align 8
  store i32 %351, i32* %349, align 8
  %352 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %346, i64 0, i32 1
  %353 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %347, i64 0, i32 1
  %354 = getelementptr inbounds %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4"* %353, i64 0, i32 0, i32 0, i32 0
  %355 = bitcast %"class.std::__1::unique_ptr.4"* %353 to i64*
  %356 = load i64, i64* %355, align 8
  store %"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"* null, %"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"** %354, align 8
  %357 = bitcast %"class.std::__1::unique_ptr.4"* %352 to i64*
  store i64 %356, i64* %357, align 8
  %358 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %347, i64 1
  %359 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %346, i64 1
  %360 = add i64 %348, -1
  %361 = icmp eq i64 %360, 0
  br i1 %361, label %362, label %345, !llvm.loop !13

362:                                              ; preds = %345, %337
  %363 = phi %"struct.std::__1::pair"* [ undef, %337 ], [ %359, %345 ]
  %364 = phi %"struct.std::__1::pair"* [ %252, %337 ], [ %359, %345 ]
  %365 = phi %"struct.std::__1::pair"* [ %33, %337 ], [ %358, %345 ]
  %366 = icmp ult i64 %340, 48
  br i1 %366, label %411, label %369

367:                                              ; preds = %332
  %368 = ptrtoint %"struct.std::__1::pair"* %334 to i64
  br label %414

369:                                              ; preds = %362, %369
  %370 = phi %"struct.std::__1::pair"* [ %409, %369 ], [ %364, %362 ]
  %371 = phi %"struct.std::__1::pair"* [ %408, %369 ], [ %365, %362 ]
  %372 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %370, i64 0, i32 0
  %373 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %371, i64 0, i32 0
  %374 = load i32, i32* %373, align 8
  store i32 %374, i32* %372, align 8
  %375 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %370, i64 0, i32 1
  %376 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %371, i64 0, i32 1
  %377 = getelementptr inbounds %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4"* %376, i64 0, i32 0, i32 0, i32 0
  %378 = bitcast %"class.std::__1::unique_ptr.4"* %376 to i64*
  %379 = load i64, i64* %378, align 8
  store %"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"* null, %"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"** %377, align 8
  %380 = bitcast %"class.std::__1::unique_ptr.4"* %375 to i64*
  store i64 %379, i64* %380, align 8
  %381 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %370, i64 1, i32 0
  %382 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %371, i64 1, i32 0
  %383 = load i32, i32* %382, align 8
  store i32 %383, i32* %381, align 8
  %384 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %370, i64 1, i32 1
  %385 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %371, i64 1, i32 1
  %386 = getelementptr inbounds %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4"* %385, i64 0, i32 0, i32 0, i32 0
  %387 = bitcast %"class.std::__1::unique_ptr.4"* %385 to i64*
  %388 = load i64, i64* %387, align 8
  store %"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"* null, %"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"** %386, align 8
  %389 = bitcast %"class.std::__1::unique_ptr.4"* %384 to i64*
  store i64 %388, i64* %389, align 8
  %390 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %370, i64 2, i32 0
  %391 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %371, i64 2, i32 0
  %392 = load i32, i32* %391, align 8
  store i32 %392, i32* %390, align 8
  %393 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %370, i64 2, i32 1
  %394 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %371, i64 2, i32 1
  %395 = getelementptr inbounds %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4"* %394, i64 0, i32 0, i32 0, i32 0
  %396 = bitcast %"class.std::__1::unique_ptr.4"* %394 to i64*
  %397 = load i64, i64* %396, align 8
  store %"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"* null, %"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"** %395, align 8
  %398 = bitcast %"class.std::__1::unique_ptr.4"* %393 to i64*
  store i64 %397, i64* %398, align 8
  %399 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %370, i64 3, i32 0
  %400 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %371, i64 3, i32 0
  %401 = load i32, i32* %400, align 8
  store i32 %401, i32* %399, align 8
  %402 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %370, i64 3, i32 1
  %403 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %371, i64 3, i32 1
  %404 = getelementptr inbounds %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4"* %403, i64 0, i32 0, i32 0, i32 0
  %405 = bitcast %"class.std::__1::unique_ptr.4"* %403 to i64*
  %406 = load i64, i64* %405, align 8
  store %"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"* null, %"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"** %404, align 8
  %407 = bitcast %"class.std::__1::unique_ptr.4"* %402 to i64*
  store i64 %406, i64* %407, align 8
  %408 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %371, i64 4
  %409 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %370, i64 4
  %410 = icmp eq %"struct.std::__1::pair"* %408, %335
  br i1 %410, label %411, label %369

411:                                              ; preds = %369, %362
  %412 = phi %"struct.std::__1::pair"* [ %363, %362 ], [ %409, %369 ]
  %413 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %5, align 8
  br label %414

414:                                              ; preds = %411, %367
  %415 = phi %"struct.std::__1::pair"* [ %33, %367 ], [ %413, %411 ]
  %416 = phi %"struct.std::__1::pair"* [ %252, %367 ], [ %412, %411 ]
  %417 = phi i64 [ %368, %367 ], [ %333, %411 ]
  %418 = ptrtoint %"struct.std::__1::pair"* %416 to i64
  %419 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %3, align 8
  store i64 %417, i64* %180, align 8
  store i64 %418, i64* %6, align 8
  store i64 %247, i64* %187, align 8
  %420 = icmp eq %"struct.std::__1::pair"* %415, %419
  br i1 %420, label %434, label %421

421:                                              ; preds = %414, %432
  %422 = phi %"struct.std::__1::pair"* [ %423, %432 ], [ %415, %414 ]
  %423 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %422, i64 -1
  %424 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %422, i64 -1, i32 1, i32 0, i32 0, i32 0
  %425 = load %"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"*, %"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"** %424, align 8
  store %"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"* null, %"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"** %424, align 8
  %426 = icmp eq %"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"* %425, null
  br i1 %426, label %432, label %427

427:                                              ; preds = %421
  %428 = bitcast %"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"* %425 to void (%"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"*)***
  %429 = load void (%"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"*)**, void (%"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"*)*** %428, align 8
  %430 = getelementptr inbounds void (%"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"*)*, void (%"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"*)** %429, i64 1
  %431 = load void (%"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"*)*, void (%"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"*)** %430, align 8
  tail call void %431(%"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"* nonnull %425) #9
  br label %432

432:                                              ; preds = %427, %421
  %433 = icmp eq %"struct.std::__1::pair"* %423, %419
  br i1 %433, label %434, label %421

434:                                              ; preds = %432, %414
  %435 = icmp eq %"struct.std::__1::pair"* %419, null
  br i1 %435, label %438, label %436

436:                                              ; preds = %434
  %437 = bitcast %"struct.std::__1::pair"* %419 to i8*
  tail call void @_ZdlPv(i8* %437) #10
  br label %438

438:                                              ; preds = %47, %167, %174, %434, %436, %36
  %439 = phi %"struct.std::__1::pair"* [ %33, %36 ], [ %11, %47 ], [ %33, %174 ], [ %33, %167 ], [ %253, %434 ], [ %253, %436 ]
  %440 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %439, i64 0, i32 1
  ret %"class.std::__1::unique_ptr.4"* %440
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3gfx21RenderingPipelineImpl40CreateSchedulerAndEnableWithLockAcquiredEv(%"class.gfx::RenderingPipelineImpl"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.std::__1::vector.41", align 8
  %3 = alloca %"class.std::__1::vector.41", align 8
  %4 = getelementptr inbounds %"class.gfx::RenderingPipelineImpl", %"class.gfx::RenderingPipelineImpl"* %0, i64 0, i32 3
  %5 = getelementptr inbounds %"class.std::__1::unique_ptr.14", %"class.std::__1::unique_ptr.14"* %4, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.gfx::RenderingStageScheduler"*, %"class.gfx::RenderingStageScheduler"** %5, align 8
  store %"class.gfx::RenderingStageScheduler"* null, %"class.gfx::RenderingStageScheduler"** %5, align 8
  %7 = icmp eq %"class.gfx::RenderingStageScheduler"* %6, null
  br i1 %7, label %13, label %8

8:                                                ; preds = %1
  %9 = bitcast %"class.gfx::RenderingStageScheduler"* %6 to void (%"class.gfx::RenderingStageScheduler"*)***
  %10 = load void (%"class.gfx::RenderingStageScheduler"*)**, void (%"class.gfx::RenderingStageScheduler"*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.gfx::RenderingStageScheduler"*)*, void (%"class.gfx::RenderingStageScheduler"*)** %10, i64 1
  %12 = load void (%"class.gfx::RenderingStageScheduler"*)*, void (%"class.gfx::RenderingStageScheduler"*)** %11, align 8
  tail call void %12(%"class.gfx::RenderingStageScheduler"* nonnull %6) #9
  br label %13

13:                                               ; preds = %1, %8
  %14 = bitcast %"class.std::__1::vector.41"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #9
  %15 = getelementptr inbounds %"class.std::__1::vector.41", %"class.std::__1::vector.41"* %2, i64 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.std::__1::vector.41", %"class.std::__1::vector.41"* %2, i64 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.std::__1::vector.41", %"class.std::__1::vector.41"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 0, i64 24, i1 false) #9
  %18 = getelementptr inbounds %"class.gfx::RenderingPipelineImpl", %"class.gfx::RenderingPipelineImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %19 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %18, align 8
  %20 = getelementptr inbounds %"class.gfx::RenderingPipelineImpl", %"class.gfx::RenderingPipelineImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %21 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %20, align 8
  %22 = icmp eq %"struct.std::__1::pair"* %19, %21
  %23 = bitcast i32** %16 to i64*
  br i1 %22, label %30, label %24

24:                                               ; preds = %13
  %25 = bitcast %"class.std::__1::vector.41"* %2 to i64*
  %26 = bitcast i32** %17 to i64*
  br label %67

27:                                               ; preds = %124
  %28 = load i64, i64* %25, align 8
  %29 = load i64, i64* %26, align 8
  br label %30

30:                                               ; preds = %13, %27
  %31 = phi i64 [ %29, %27 ], [ 0, %13 ]
  %32 = phi i64 [ %125, %27 ], [ 0, %13 ]
  %33 = phi i64 [ %28, %27 ], [ 0, %13 ]
  %34 = getelementptr inbounds %"class.gfx::RenderingPipelineImpl", %"class.gfx::RenderingPipelineImpl"* %0, i64 0, i32 4
  %35 = load i8*, i8** %34, align 8
  %36 = bitcast %"class.std::__1::vector.41"* %3 to i64*
  store i64 %33, i64* %36, align 8
  %37 = getelementptr inbounds %"class.std::__1::vector.41", %"class.std::__1::vector.41"* %3, i64 0, i32 0, i32 1
  %38 = bitcast i32** %37 to i64*
  store i64 %32, i64* %38, align 8
  %39 = getelementptr inbounds %"class.std::__1::vector.41", %"class.std::__1::vector.41"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %40 = bitcast i32** %39 to i64*
  store i64 %31, i64* %40, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 0, i64 24, i1 false) #9
  %41 = getelementptr inbounds %"class.gfx::RenderingPipelineImpl", %"class.gfx::RenderingPipelineImpl"* %0, i64 0, i32 6, i32 0
  %42 = load i64, i64* %41, align 8
  %43 = call %"class.gfx::RenderingStageScheduler"* @_ZN3gfx23RenderingStageScheduler10CreateAdpfEPKcNSt3__16vectorIiNS3_9allocatorIiEEEEN4base9TimeDeltaE(i8* %35, %"class.std::__1::vector.41"* nonnull %3, i64 %42) #9
  %44 = ptrtoint %"class.gfx::RenderingStageScheduler"* %43 to i64
  %45 = load %"class.gfx::RenderingStageScheduler"*, %"class.gfx::RenderingStageScheduler"** %5, align 8
  %46 = bitcast %"class.std::__1::unique_ptr.14"* %4 to i64*
  store i64 %44, i64* %46, align 8
  %47 = icmp eq %"class.gfx::RenderingStageScheduler"* %45, null
  br i1 %47, label %53, label %48

48:                                               ; preds = %30
  %49 = bitcast %"class.gfx::RenderingStageScheduler"* %45 to void (%"class.gfx::RenderingStageScheduler"*)***
  %50 = load void (%"class.gfx::RenderingStageScheduler"*)**, void (%"class.gfx::RenderingStageScheduler"*)*** %49, align 8
  %51 = getelementptr inbounds void (%"class.gfx::RenderingStageScheduler"*)*, void (%"class.gfx::RenderingStageScheduler"*)** %50, i64 1
  %52 = load void (%"class.gfx::RenderingStageScheduler"*)*, void (%"class.gfx::RenderingStageScheduler"*)** %51, align 8
  call void %52(%"class.gfx::RenderingStageScheduler"* nonnull %45) #9
  br label %53

53:                                               ; preds = %48, %30
  %54 = getelementptr inbounds %"class.std::__1::vector.41", %"class.std::__1::vector.41"* %3, i64 0, i32 0, i32 0
  %55 = load i32*, i32** %54, align 8
  %56 = icmp eq i32* %55, null
  br i1 %56, label %60, label %57

57:                                               ; preds = %53
  %58 = ptrtoint i32* %55 to i64
  store i64 %58, i64* %38, align 8
  %59 = bitcast i32* %55 to i8*
  call void @_ZdlPv(i8* %59) #10
  br label %60

60:                                               ; preds = %53, %57
  %61 = load i32*, i32** %15, align 8
  %62 = icmp eq i32* %61, null
  br i1 %62, label %66, label %63

63:                                               ; preds = %60
  %64 = ptrtoint i32* %61 to i64
  store i64 %64, i64* %23, align 8
  %65 = bitcast i32* %61 to i8*
  call void @_ZdlPv(i8* %65) #10
  br label %66

66:                                               ; preds = %60, %63
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #9
  ret void

67:                                               ; preds = %131, %24
  %68 = phi i64 [ 0, %24 ], [ %125, %131 ]
  %69 = phi i32* [ null, %24 ], [ %132, %131 ]
  %70 = phi i32* [ null, %24 ], [ %126, %131 ]
  %71 = phi %"struct.std::__1::pair"* [ %19, %24 ], [ %129, %131 ]
  %72 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %71, i64 0, i32 0
  %73 = icmp eq i32* %70, %69
  br i1 %73, label %78, label %74

74:                                               ; preds = %67
  %75 = load i32, i32* %72, align 4
  store i32 %75, i32* %70, align 4
  %76 = getelementptr inbounds i32, i32* %70, i64 1
  %77 = ptrtoint i32* %76 to i64
  store i64 %77, i64* %23, align 8
  br label %124

78:                                               ; preds = %67
  %79 = ptrtoint i32* %69 to i64
  %80 = load i64, i64* %25, align 8
  %81 = sub i64 %79, %80
  %82 = ashr exact i64 %81, 2
  %83 = add nsw i64 %82, 1
  %84 = icmp ugt i64 %83, 4611686018427387903
  br i1 %84, label %85, label %87

85:                                               ; preds = %78
  %86 = bitcast %"class.std::__1::vector.41"* %2 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %86) #11
  unreachable

87:                                               ; preds = %78
  %88 = icmp ult i64 %82, 2305843009213693951
  br i1 %88, label %89, label %97

89:                                               ; preds = %87
  %90 = ashr exact i64 %81, 1
  %91 = icmp ult i64 %90, %83
  %92 = select i1 %91, i64 %83, i64 %90
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %102, label %94

94:                                               ; preds = %89
  %95 = icmp ugt i64 %92, 4611686018427387903
  br i1 %95, label %96, label %97

96:                                               ; preds = %94
  tail call void @abort() #11
  unreachable

97:                                               ; preds = %94, %87
  %98 = phi i64 [ %92, %94 ], [ 4611686018427387903, %87 ]
  %99 = shl i64 %98, 2
  %100 = tail call i8* @_Znwm(i64 %99) #10
  %101 = bitcast i8* %100 to i32*
  br label %102

102:                                              ; preds = %97, %89
  %103 = phi i64 [ %98, %97 ], [ 0, %89 ]
  %104 = phi i32* [ %101, %97 ], [ null, %89 ]
  %105 = getelementptr inbounds i32, i32* %104, i64 %82
  %106 = getelementptr inbounds i32, i32* %104, i64 %103
  %107 = ptrtoint i32* %106 to i64
  %108 = load i32, i32* %72, align 4
  store i32 %108, i32* %105, align 4
  %109 = getelementptr inbounds i32, i32* %105, i64 1
  %110 = ptrtoint i32* %109 to i64
  %111 = sub i64 %68, %80
  %112 = ashr exact i64 %111, 2
  %113 = sub nsw i64 0, %112
  %114 = getelementptr inbounds i32, i32* %105, i64 %113
  %115 = ptrtoint i32* %114 to i64
  %116 = icmp sgt i64 %111, 0
  br i1 %116, label %117, label %120

117:                                              ; preds = %102
  %118 = bitcast i32* %114 to i8*
  %119 = inttoptr i64 %80 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %118, i8* align 4 %119, i64 %111, i1 false) #9
  br label %120

120:                                              ; preds = %117, %102
  store i64 %115, i64* %25, align 8
  store i64 %110, i64* %23, align 8
  store i64 %107, i64* %26, align 8
  %121 = icmp eq i64 %80, 0
  br i1 %121, label %124, label %122

122:                                              ; preds = %120
  %123 = inttoptr i64 %80 to i8*
  tail call void @_ZdlPv(i8* %123) #10
  br label %124

124:                                              ; preds = %74, %120, %122
  %125 = phi i64 [ %77, %74 ], [ %110, %120 ], [ %110, %122 ]
  %126 = phi i32* [ %76, %74 ], [ %109, %120 ], [ %109, %122 ]
  %127 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %71, i64 0, i32 1, i32 0, i32 0, i32 0
  %128 = load %"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"*, %"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"** %127, align 8
  tail call fastcc void @_ZN3gfx12_GLOBAL__N_122ThreadSafeTimeObserver10SetEnabledEb(%"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"* %128, i1 zeroext true)
  %129 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %71, i64 1
  %130 = icmp eq %"struct.std::__1::pair"* %129, %21
  br i1 %130, label %27, label %131

131:                                              ; preds = %124
  %132 = load i32*, i32** %17, align 8
  br label %67
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3gfx12_GLOBAL__N_122ThreadSafeTimeObserverD2Ev(%"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver", %"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3gfx12_GLOBAL__N_122ThreadSafeTimeObserverE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  tail call fastcc void @_ZN3gfx12_GLOBAL__N_122ThreadSafeTimeObserver10SetEnabledEb(%"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"* %0, i1 zeroext false)
  %3 = getelementptr inbounds %"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver", %"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"* %0, i64 0, i32 2, i32 0
  tail call void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"* %3) #9
  %4 = getelementptr inbounds %"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver", %"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"* %0, i64 0, i32 1, i32 0
  %5 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %4, align 8
  %6 = icmp eq %"class.base::SingleThreadTaskRunner"* %5, null
  br i1 %6, label %15, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %5, i64 0, i32 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = atomicrmw sub i32* %9, i32 1 acq_rel
  %11 = icmp eq i32 %10, 1
  br i1 %11, label %12, label %15

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %8, i64 -2
  %14 = bitcast %"class.base::RefCountedThreadSafe"* %13 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %14) #9
  br label %15

15:                                               ; preds = %1, %7, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3gfx12_GLOBAL__N_122ThreadSafeTimeObserverD0Ev(%"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver", %"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3gfx12_GLOBAL__N_122ThreadSafeTimeObserverE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  tail call fastcc void @_ZN3gfx12_GLOBAL__N_122ThreadSafeTimeObserver10SetEnabledEb(%"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"* %0, i1 zeroext false) #9
  %3 = getelementptr inbounds %"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver", %"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"* %0, i64 0, i32 2, i32 0
  tail call void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"* %3) #9
  %4 = getelementptr inbounds %"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver", %"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"* %0, i64 0, i32 1, i32 0
  %5 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %4, align 8
  %6 = icmp eq %"class.base::SingleThreadTaskRunner"* %5, null
  br i1 %6, label %15, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %5, i64 0, i32 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = atomicrmw sub i32* %9, i32 1 acq_rel
  %11 = icmp eq i32 %10, 1
  br i1 %11, label %12, label %15

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %8, i64 -2
  %14 = bitcast %"class.base::RefCountedThreadSafe"* %13 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %14) #9
  br label %15

15:                                               ; preds = %1, %7, %12
  %16 = bitcast %"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"* %0 to i8*
  tail call void @_ZdlPv(i8* %16) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3gfx12_GLOBAL__N_122ThreadSafeTimeObserver15WillProcessTaskEN4base9TimeTicksE(%"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"*, i64) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver", %"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %3, i64 0, i32 0, i32 0
  %5 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %4) #9
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %9, label %7, !prof !2

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %3, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %8) #9
  br label %9

9:                                                ; preds = %2, %7
  %10 = getelementptr inbounds %"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver", %"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"* %0, i64 0, i32 3
  %11 = load i8, i8* %10, align 8, !range !4
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %15, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver", %"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"* %0, i64 0, i32 4, i32 0, i32 0
  store i64 %1, i64* %14, align 8
  br label %15

15:                                               ; preds = %9, %13
  %16 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %4) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3gfx12_GLOBAL__N_122ThreadSafeTimeObserver14DidProcessTaskEN4base9TimeTicksES3_(%"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"*, i64, i64) unnamed_addr #0 align 2 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = getelementptr inbounds %"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver", %"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"* %0, i64 0, i32 2
  %6 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %5, i64 0, i32 0, i32 0
  %7 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %6) #9
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %11, label %9, !prof !2

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %5, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %10) #9
  br label %11

11:                                               ; preds = %3, %9
  %12 = getelementptr inbounds %"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver", %"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"* %0, i64 0, i32 3
  %13 = load i8, i8* %12, align 8, !range !4
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver", %"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"* %0, i64 0, i32 4, i32 0, i32 0
  br i1 %14, label %44, label %16

16:                                               ; preds = %11
  %17 = load i64, i64* %15, align 8
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %45, label %19

19:                                               ; preds = %16
  %20 = icmp sgt i64 %17, %2
  br i1 %20, label %44, label %21

21:                                               ; preds = %19
  %22 = sub nsw i64 %2, %17
  %23 = add i64 %22, -9223372036854775807
  %24 = icmp ult i64 %23, 2
  %25 = getelementptr inbounds %"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver", %"class.gfx::(anonymous namespace)::ThreadSafeTimeObserver"* %0, i64 0, i32 5, i32 0
  %26 = load i64, i64* %25, align 8
  br i1 %24, label %34, label %27

27:                                               ; preds = %21
  %28 = icmp slt i64 %22, 0
  %29 = select i1 %28, i64 -9223372036854775808, i64 9223372036854775807
  %30 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %26, i64 %22) #9
  %31 = extractvalue { i64, i1 } %30, 1
  %32 = extractvalue { i64, i1 } %30, 0
  %33 = select i1 %31, i64 %29, i64 %32, !prof !3
  br label %42

34:                                               ; preds = %21
  %35 = add i64 %26, -9223372036854775807
  %36 = icmp ugt i64 %35, 1
  %37 = icmp eq i64 %26, %22
  %38 = or i1 %37, %36
  br i1 %38, label %42, label %39

39:                                               ; preds = %34
  %40 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.3, i64 0, i64 0)) #9
  %41 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #9
  br label %42

42:                                               ; preds = %27, %34, %39
  %43 = phi i64 [ %33, %27 ], [ %22, %34 ], [ %22, %39 ]
  store i64 %43, i64* %25, align 8
  br label %44

44:                                               ; preds = %42, %19, %11
  store i64 0, i64* %15, align 8
  br label %45

45:                                               ; preds = %44, %16
  %46 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %6) #9
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.sadd.with.overflow.i64(i64, i64) #6

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

declare %"class.gfx::RenderingStageScheduler"* @_ZN3gfx23RenderingStageScheduler10CreateAdpfEPKcNSt3__16vectorIiNS3_9allocatorIiEEEEN4base9TimeDeltaE(i8*, %"class.std::__1::vector.41"*, i64) local_unnamed_addr #3

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #3

declare i64 @_ZN4base9TimeTicks3NowEv() local_unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{i8 0, i8 2}
!5 = !{!6, !8}
!6 = distinct !{!6, !7, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3gfx12_GLOBAL__N_122ThreadSafeTimeObserverEFvbEJNS0_17UnretainedWrapperIS5_EERbEEEDcOT0_DpOT1_: argument 0"}
!7 = distinct !{!7, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3gfx12_GLOBAL__N_122ThreadSafeTimeObserverEFvbEJNS0_17UnretainedWrapperIS5_EERbEEEDcOT0_DpOT1_"}
!8 = distinct !{!8, !9, !"_ZN4base8BindOnceIMN3gfx12_GLOBAL__N_122ThreadSafeTimeObserverEFvbEJNS_8internal17UnretainedWrapperIS3_EERbEEENS_12OnceCallbackINS6_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSC_DpOSD_: argument 0"}
!9 = distinct !{!9, !"_ZN4base8BindOnceIMN3gfx12_GLOBAL__N_122ThreadSafeTimeObserverEFvbEJNS_8internal17UnretainedWrapperIS3_EERbEEENS_12OnceCallbackINS6_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSC_DpOSD_"}
!10 = distinct !{!10, !11}
!11 = !{!"llvm.loop.unroll.disable"}
!12 = distinct !{!12, !11}
!13 = distinct !{!13, !11}
