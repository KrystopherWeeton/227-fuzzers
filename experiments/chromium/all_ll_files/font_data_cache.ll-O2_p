; ModuleID = '../../third_party/blink/renderer/platform/fonts/font_data_cache.cc'
source_filename = "../../third_party/blink/renderer/platform/fonts/font_data_cache.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr", %class.scoped_refptr.12, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted" }>
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional", %"class.absl::optional", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.8, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic" }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkOnce = type { %"struct.std::__1::atomic.1" }
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i8 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.6 }
%union.anon.6 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.8 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr, %class.scoped_refptr }
%class.scoped_refptr = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.12 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.13", [4 x i8] }>
%"class.WTF::RefCounted.13" = type { %"class.base::RefCounted.14" }
%"class.base::RefCounted.14" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"class.blink::FontDataCache" = type { %"class.WTF::HashMap", %"class.WTF::LinkedHashSet" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.blink::FontPlatformData"*, %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type <{ %class.scoped_refptr, i32, [4 x i8] }>
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.15", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.15" = type { %"class.WTF::HashTable.16" }
%"class.WTF::HashTable.16" = type <{ %"struct.WTF::KeyValuePair.19"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.19" = type <{ %class.scoped_refptr, i32, [4 x i8] }>
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector", i32, i32 }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type { i32, i32, %class.scoped_refptr }
%"struct.blink::FontMetricsOverride" = type { %"class.absl::optional", %"class.absl::optional", %"class.absl::optional" }
%"class.WTF::LinkedHashSet<scoped_refptr<blink::SimpleFontData>, WTF::HashTraits<scoped_refptr<blink::SimpleFontData> >, WTF::PartitionAllocator>::IteratorWrapper" = type { %"class.WTF::VectorBackedLinkedListConstIterator", %"struct.WTF::HashTableConstIteratorAdapter" }
%"class.WTF::VectorBackedLinkedListConstIterator" = type { %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"* }
%"struct.WTF::HashTableConstIteratorAdapter" = type { %"class.WTF::HashTableConstIterator.27" }
%"class.WTF::HashTableConstIterator.27" = type { %"struct.WTF::KeyValuePair.19"*, %"struct.WTF::KeyValuePair.19"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted", [4 x i8] }>
%"class.WTF::Vector.22" = type { %"class.WTF::VectorBuffer.23" }
%"class.WTF::VectorBuffer.23" = type { %"class.WTF::VectorBufferBase.24", [160 x i8] }
%"class.WTF::VectorBufferBase.24" = type { %class.scoped_refptr*, i32, i32 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.logging::CheckOpResult" = type { i8* }

$_ZN3WTF13LinkedHashSetI13scoped_refptrIN5blink14SimpleFontDataEENS_10HashTraitsIS4_EENS_18PartitionAllocatorEE6insertIRS4_EENS8_9AddResultEOT_ = comdat any

$_ZN3WTF12VectorBufferI13scoped_refptrIN5blink14SimpleFontDataEELj20ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS4_ = comdat any

$_ZN3WTF9HashTableIPKN5blink16FontPlatformDataENS_12KeyValuePairIS4_NSt3__14pairI13scoped_refptrINS1_14SimpleFontDataEEjEEEENS_24KeyValuePairKeyExtractorENS1_20FontDataCacheKeyHashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSG_ISB_EEEESH_NS_18PartitionAllocatorEE4findERKS4_ = comdat any

$_ZN3WTF9HashTableIPKN5blink16FontPlatformDataENS_12KeyValuePairIS4_NSt3__14pairI13scoped_refptrINS1_14SimpleFontDataEEjEEEENS_24KeyValuePairKeyExtractorENS1_20FontDataCacheKeyHashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSG_ISB_EEEESH_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISJ_SE_SK_EES4_RSB_EENS_18HashTableAddResultISL_SC_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIPKN5blink16FontPlatformDataENS_12KeyValuePairIS4_NSt3__14pairI13scoped_refptrINS1_14SimpleFontDataEEjEEEENS_24KeyValuePairKeyExtractorENS1_20FontDataCacheKeyHashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSG_ISB_EEEESH_NS_18PartitionAllocatorEE6ExpandEPSC_ = comdat any

$_ZN3WTF9HashTableIPKN5blink16FontPlatformDataENS_12KeyValuePairIS4_NSt3__14pairI13scoped_refptrINS1_14SimpleFontDataEEjEEEENS_24KeyValuePairKeyExtractorENS1_20FontDataCacheKeyHashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSG_ISB_EEEESH_NS_18PartitionAllocatorEE8RehashToEPSC_jSM_ = comdat any

$_ZN3WTF9HashTableIPKN5blink16FontPlatformDataENS_12KeyValuePairIS4_NSt3__14pairI13scoped_refptrINS1_14SimpleFontDataEEjEEEENS_24KeyValuePairKeyExtractorENS1_20FontDataCacheKeyHashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSG_ISB_EEEESH_NS_18PartitionAllocatorEE16LookupForWritingERKS4_ = comdat any

$_ZN3WTF22VectorBackedLinkedListI13scoped_refptrIN5blink14SimpleFontDataEENS_18PartitionAllocatorEE6insertIRS4_EENS_30VectorBackedLinkedListIteratorIS6_EENS_35VectorBackedLinkedListConstIteratorIS6_EEOT_ = comdat any

$_ZN3WTF9HashTableI13scoped_refptrIN5blink14SimpleFontDataEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10RefPtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERS4_RKjEENS_18HashTableAddResultISG_S6_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableI13scoped_refptrIN5blink14SimpleFontDataEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10RefPtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS_18PartitionAllocatorEE6ExpandEPS6_ = comdat any

$_ZN3WTF9HashTableI13scoped_refptrIN5blink14SimpleFontDataEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10RefPtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS_18PartitionAllocatorEE8RehashToEPS6_jSH_ = comdat any

$_ZN3WTF9HashTableI13scoped_refptrIN5blink14SimpleFontDataEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10RefPtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS_18PartitionAllocatorEE16LookupForWritingERKS4_ = comdat any

$_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeI13scoped_refptrIN5blink14SimpleFontDataEENS_18PartitionAllocatorEEELj0ES6_E2atEj = comdat any

$_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeI13scoped_refptrIN5blink14SimpleFontDataEENS_18PartitionAllocatorEEELj0ES6_E14AppendSlowCaseIS7_EEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINS_26VectorBackedLinkedListNodeI13scoped_refptrIN5blink14SimpleFontDataEES0_EEEEmm = comdat any

$_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeI13scoped_refptrIN5blink14SimpleFontDataEENS_18PartitionAllocatorEEELj0ES6_E2atEj = comdat any

$_ZN3WTF13LinkedHashSetI13scoped_refptrIN5blink14SimpleFontDataEENS_10HashTraitsIS4_EENS_18PartitionAllocatorEE4findENS6_17RefPtrValuePeekerE = comdat any

$_ZN3WTF9HashTableI13scoped_refptrIN5blink14SimpleFontDataEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10RefPtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS_18PartitionAllocatorEE4findENSC_17RefPtrValuePeekerE = comdat any

$_ZNK3WTF9HashTableIPKN5blink16FontPlatformDataENS_12KeyValuePairIS4_NSt3__14pairI13scoped_refptrINS1_14SimpleFontDataEEjEEEENS_24KeyValuePairKeyExtractorENS1_20FontDataCacheKeyHashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSG_ISB_EEEESH_NS_18PartitionAllocatorEE8ContainsINS_22IdentityHashTranslatorISE_SJ_SK_EES4_EEbRKT0_ = comdat any

$_ZN3WTF9HashTableIPKN5blink16FontPlatformDataENS_12KeyValuePairIS4_NSt3__14pairI13scoped_refptrINS1_14SimpleFontDataEEjEEEENS_24KeyValuePairKeyExtractorENS1_20FontDataCacheKeyHashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSG_ISB_EEEESH_NS_18PartitionAllocatorEE5eraseEPKSC_ = comdat any

$_ZN3WTF6VectorI13scoped_refptrIN5blink14SimpleFontDataEELj20ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS4_EEvOT_ = comdat any

$_ZN3WTF6VectorI13scoped_refptrIN5blink14SimpleFontDataEELj20ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorI13scoped_refptrIN5blink14SimpleFontDataEELj20ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIN5blink14SimpleFontDataEEEEmm = comdat any

$_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeI13scoped_refptrIN5blink14SimpleFontDataEENS_18PartitionAllocatorEEELj0ES6_E14ShrinkCapacityEj = comdat any

$_ZN3WTF22VectorBackedLinkedListI13scoped_refptrIN5blink14SimpleFontDataEENS_18PartitionAllocatorEE5eraseENS_35VectorBackedLinkedListConstIteratorIS6_EE = comdat any

$_ZN3WTF9HashTableI13scoped_refptrIN5blink14SimpleFontDataEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10RefPtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS_18PartitionAllocatorEE5eraseEPKS6_ = comdat any

@_ZZN5blink13FontDataCache22PurgeLeastRecentlyUsedEiE10is_purging = internal unnamed_addr global i1 false, align 1
@.str.2 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.3 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIPKN5blink16FontPlatformDataENSt3__14pairI13scoped_refptrINS2_14SimpleFontDataEEjEEEEEEPKcv = private unnamed_addr constant [167 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<const blink::FontPlatformData *, std::__1::pair<scoped_refptr<blink::SimpleFontData>, unsigned int> >]\00", align 1
@_ZN3WTFL9kNotFoundE = internal constant i32 -1, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairI13scoped_refptrIN5blink14SimpleFontDataEEjEEEEPKcv = private unnamed_addr constant [117 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<scoped_refptr<blink::SimpleFontData>, unsigned int>]\00", align 1
@.str.4 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.5 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.7 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.8 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_26VectorBackedLinkedListNodeI13scoped_refptrIN5blink14SimpleFontDataEENS_18PartitionAllocatorEEEEEPKcv = private unnamed_addr constant [142 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::VectorBackedLinkedListNode<scoped_refptr<blink::SimpleFontData>, WTF::PartitionAllocator>]\00", align 1
@.str.9 = private unnamed_addr constant [33 x i8] c"expanded_capacity > old_capacity\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI13scoped_refptrIN5blink14SimpleFontDataEEEEPKcv = private unnamed_addr constant [84 x i8] c"const char *WTF::GetStringWithTypeName() [T = scoped_refptr<blink::SimpleFontData>]\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::SimpleFontData"* @_ZN5blink13FontDataCache3GetEPKNS_16FontPlatformDataENS_12ShouldRetainEb(%"class.blink::FontDataCache"*, %"class.blink::FontPlatformData"*, i32, i1 zeroext) local_unnamed_addr #0 align 2 {
  %5 = alloca %"struct.blink::FontMetricsOverride", align 4
  %6 = alloca %"class.WTF::LinkedHashSet<scoped_refptr<blink::SimpleFontData>, WTF::HashTraits<scoped_refptr<blink::SimpleFontData> >, WTF::PartitionAllocator>::IteratorWrapper", align 8
  %7 = alloca %"class.blink::FontPlatformData"*, align 8
  %8 = alloca %"struct.std::__1::pair", align 8
  %9 = alloca %"class.blink::FontPlatformData"*, align 8
  store %"class.blink::FontPlatformData"* %1, %"class.blink::FontPlatformData"** %7, align 8
  %10 = icmp eq %"class.blink::FontPlatformData"* %1, null
  br i1 %10, label %135, label %11

11:                                               ; preds = %4
  %12 = tail call %class.SkTypeface* @_ZNK5blink16FontPlatformData8TypefaceEv(%"class.blink::FontPlatformData"* nonnull %1) #6
  %13 = icmp eq %class.SkTypeface* %12, null
  br i1 %13, label %135, label %14

14:                                               ; preds = %11
  %15 = getelementptr inbounds %"class.blink::FontDataCache", %"class.blink::FontDataCache"* %0, i64 0, i32 0, i32 0
  %16 = call { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableIPKN5blink16FontPlatformDataENS_12KeyValuePairIS4_NSt3__14pairI13scoped_refptrINS1_14SimpleFontDataEEjEEEENS_24KeyValuePairKeyExtractorENS1_20FontDataCacheKeyHashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSG_ISB_EEEESH_NS_18PartitionAllocatorEE4findERKS4_(%"class.WTF::HashTable"* %15, %"class.blink::FontPlatformData"** nonnull dereferenceable(8) %7) #6
  %17 = extractvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %16, 0
  %18 = getelementptr inbounds %"class.blink::FontDataCache", %"class.blink::FontDataCache"* %0, i64 0, i32 0, i32 0, i32 0
  %19 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::FontDataCache", %"class.blink::FontDataCache"* %0, i64 0, i32 0, i32 0, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %19, i64 %22
  %24 = icmp eq %"struct.WTF::KeyValuePair"* %17, %23
  br i1 %24, label %25, label %82

25:                                               ; preds = %14
  %26 = bitcast %"struct.std::__1::pair"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %26) #6
  %27 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %8, i64 0, i32 0
  %28 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %8, i64 0, i32 1
  %29 = bitcast %"struct.std::__1::pair"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 -86, i64 16, i1 false)
  %30 = load %"class.blink::FontPlatformData"*, %"class.blink::FontPlatformData"** %7, align 8
  %31 = call noalias i8* @malloc(i64 224) #6
  %32 = bitcast i8* %31 to %"class.blink::SimpleFontData"*
  %33 = getelementptr inbounds %"struct.blink::FontMetricsOverride", %"struct.blink::FontMetricsOverride"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %33) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %33, i8 0, i64 24, i1 false) #6
  call void @_ZN5blink14SimpleFontDataC1ERKNS_16FontPlatformDataE13scoped_refptrINS_14CustomFontDataEEbRKNS_19FontMetricsOverrideE(%"class.blink::SimpleFontData"* %32, %"class.blink::FontPlatformData"* dereferenceable(72) %30, %"class.blink::CustomFontData"* null, i1 zeroext %3, %"struct.blink::FontMetricsOverride"* nonnull dereferenceable(24) %5) #6
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %33) #6
  %34 = ptrtoint i8* %31 to i64
  %35 = icmp eq i32 %2, 0
  %36 = zext i1 %35 to i32
  %37 = bitcast %"struct.std::__1::pair"* %8 to i64*
  store i64 %34, i64* %37, align 8
  store i32 %36, i32* %28, align 8
  %38 = bitcast %"class.blink::FontPlatformData"** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #6
  %39 = getelementptr inbounds i8, i8* %31, i64 80
  %40 = bitcast %"class.blink::FontPlatformData"** %9 to i8**
  store i8* %39, i8** %40, align 8
  %41 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIPKN5blink16FontPlatformDataENS_12KeyValuePairIS4_NSt3__14pairI13scoped_refptrINS1_14SimpleFontDataEEjEEEENS_24KeyValuePairKeyExtractorENS1_20FontDataCacheKeyHashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSG_ISB_EEEESH_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISJ_SE_SK_EES4_RSB_EENS_18HashTableAddResultISL_SC_EEOT0_OT1_(%"class.WTF::HashTable"* %15, %"class.blink::FontPlatformData"** nonnull dereferenceable(8) %9, %"struct.std::__1::pair"* nonnull dereferenceable(16) %8) #6
  %42 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %41, 1
  %43 = and i8 %42, 1
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %45, label %75

45:                                               ; preds = %25
  %46 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %8, i64 0, i32 0, i32 0
  %47 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %41, 0
  %48 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %47, i64 0, i32 1
  %49 = load %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %46, align 8
  %50 = icmp eq %"class.blink::SimpleFontData"* %49, null
  br i1 %50, label %53, label %51

51:                                               ; preds = %45
  %52 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %49, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %52) #6
  br label %53

53:                                               ; preds = %51, %45
  %54 = ptrtoint %"class.blink::SimpleFontData"* %49 to i64
  %55 = bitcast %"struct.std::__1::pair"* %48 to i64*
  %56 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %48, i64 0, i32 0, i32 0
  %57 = load %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %56, align 8
  store i64 %54, i64* %55, align 8
  %58 = icmp eq %"class.blink::SimpleFontData"* %57, null
  br i1 %58, label %72, label %59

59:                                               ; preds = %53
  %60 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %57, i64 0, i32 0, i32 1, i32 0
  %61 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %60, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %61) #6
  %62 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %60, i64 0, i32 0, i32 0
  %63 = load i32, i32* %62, align 4
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %72

65:                                               ; preds = %59
  %66 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %60, i64 -2
  %67 = bitcast %"class.base::RefCounted"* %66 to %"class.blink::FontData"*
  %68 = bitcast %"class.base::RefCounted"* %66 to void (%"class.blink::FontData"*)***
  %69 = load void (%"class.blink::FontData"*)**, void (%"class.blink::FontData"*)*** %68, align 8
  %70 = getelementptr inbounds void (%"class.blink::FontData"*)*, void (%"class.blink::FontData"*)** %69, i64 1
  %71 = load void (%"class.blink::FontData"*)*, void (%"class.blink::FontData"*)** %70, align 8
  call void %71(%"class.blink::FontData"* nonnull %67) #6
  br label %72

72:                                               ; preds = %65, %59, %53
  %73 = load i32, i32* %28, align 8
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %47, i64 0, i32 1, i32 1
  store i32 %73, i32* %74, align 8
  br label %75

75:                                               ; preds = %25, %72
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #6
  %76 = icmp eq i32 %2, 1
  br i1 %76, label %77, label %80

77:                                               ; preds = %75
  %78 = getelementptr inbounds %"class.blink::FontDataCache", %"class.blink::FontDataCache"* %0, i64 0, i32 1
  %79 = call { %class.scoped_refptr*, i8 } @_ZN3WTF13LinkedHashSetI13scoped_refptrIN5blink14SimpleFontDataEENS_10HashTraitsIS4_EENS_18PartitionAllocatorEE6insertIRS4_EENS8_9AddResultEOT_(%"class.WTF::LinkedHashSet"* %78, %class.scoped_refptr* nonnull dereferenceable(8) %27)
  br label %80

80:                                               ; preds = %75, %77
  %81 = load i64, i64* %37, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %26) #6
  br label %135

82:                                               ; preds = %14
  %83 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %17, i64 0, i32 1, i32 1
  %84 = load i32, i32* %83, align 8
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %117

86:                                               ; preds = %82
  %87 = getelementptr inbounds %"class.blink::FontDataCache", %"class.blink::FontDataCache"* %0, i64 0, i32 1
  %88 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %17, i64 0, i32 1, i32 0, i32 0
  %89 = load %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %88, align 8
  %90 = bitcast %"class.WTF::LinkedHashSet<scoped_refptr<blink::SimpleFontData>, WTF::HashTraits<scoped_refptr<blink::SimpleFontData> >, WTF::PartitionAllocator>::IteratorWrapper"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %90)
  call void @_ZN3WTF13LinkedHashSetI13scoped_refptrIN5blink14SimpleFontDataEENS_10HashTraitsIS4_EENS_18PartitionAllocatorEE4findENS6_17RefPtrValuePeekerE(%"class.WTF::LinkedHashSet<scoped_refptr<blink::SimpleFontData>, WTF::HashTraits<scoped_refptr<blink::SimpleFontData> >, WTF::PartitionAllocator>::IteratorWrapper"* nonnull sret %6, %"class.WTF::LinkedHashSet"* %87, %"class.blink::SimpleFontData"* %89) #6
  %91 = getelementptr inbounds %"class.WTF::LinkedHashSet<scoped_refptr<blink::SimpleFontData>, WTF::HashTraits<scoped_refptr<blink::SimpleFontData> >, WTF::PartitionAllocator>::IteratorWrapper", %"class.WTF::LinkedHashSet<scoped_refptr<blink::SimpleFontData>, WTF::HashTraits<scoped_refptr<blink::SimpleFontData> >, WTF::PartitionAllocator>::IteratorWrapper"* %6, i64 0, i32 0, i32 0
  %92 = load %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedListNode"** %91, align 8
  %93 = getelementptr inbounds %"class.WTF::LinkedHashSet<scoped_refptr<blink::SimpleFontData>, WTF::HashTraits<scoped_refptr<blink::SimpleFontData> >, WTF::PartitionAllocator>::IteratorWrapper", %"class.WTF::LinkedHashSet<scoped_refptr<blink::SimpleFontData>, WTF::HashTraits<scoped_refptr<blink::SimpleFontData> >, WTF::PartitionAllocator>::IteratorWrapper"* %6, i64 0, i32 0, i32 1
  %94 = load %"class.WTF::VectorBackedLinkedList"*, %"class.WTF::VectorBackedLinkedList"** %93, align 8
  %95 = getelementptr inbounds %"class.blink::FontDataCache", %"class.blink::FontDataCache"* %0, i64 0, i32 1, i32 1
  %96 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %95, i64 0, i32 0
  %97 = call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeI13scoped_refptrIN5blink14SimpleFontDataEENS_18PartitionAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector"* %96, i32 0) #6, !noalias !2
  %98 = icmp eq %"class.WTF::VectorBackedLinkedListNode"* %92, %97
  br i1 %98, label %115, label %99

99:                                               ; preds = %86
  %100 = getelementptr inbounds %"class.blink::FontDataCache", %"class.blink::FontDataCache"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %101 = getelementptr inbounds %"class.WTF::LinkedHashSet", %"class.WTF::LinkedHashSet"* %87, i64 0, i32 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %92, i64 0, i32 2, i32 0
  %103 = load %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %102, align 8
  %104 = getelementptr inbounds %"class.WTF::LinkedHashSet", %"class.WTF::LinkedHashSet"* %87, i64 0, i32 0, i32 0
  %105 = call { %"struct.WTF::KeyValuePair.19"*, %"struct.WTF::KeyValuePair.19"* } @_ZN3WTF9HashTableI13scoped_refptrIN5blink14SimpleFontDataEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10RefPtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS_18PartitionAllocatorEE4findENSC_17RefPtrValuePeekerE(%"class.WTF::HashTable.16"* %104, %"class.blink::SimpleFontData"* %103) #6
  %106 = extractvalue { %"struct.WTF::KeyValuePair.19"*, %"struct.WTF::KeyValuePair.19"* } %105, 0
  %107 = load %"struct.WTF::KeyValuePair.19"*, %"struct.WTF::KeyValuePair.19"** %101, align 8
  %108 = load i32, i32* %100, align 8
  %109 = zext i32 %108 to i64
  %110 = getelementptr inbounds %"struct.WTF::KeyValuePair.19", %"struct.WTF::KeyValuePair.19"* %107, i64 %109
  %111 = icmp eq %"struct.WTF::KeyValuePair.19"* %110, %106
  br i1 %111, label %113, label %112

112:                                              ; preds = %99
  call void @_ZN3WTF9HashTableI13scoped_refptrIN5blink14SimpleFontDataEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10RefPtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS_18PartitionAllocatorEE5eraseEPKS6_(%"class.WTF::HashTable.16"* %104, %"struct.WTF::KeyValuePair.19"* %106) #6
  br label %113

113:                                              ; preds = %112, %99
  %114 = call { %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"* } @_ZN3WTF22VectorBackedLinkedListI13scoped_refptrIN5blink14SimpleFontDataEENS_18PartitionAllocatorEE5eraseENS_35VectorBackedLinkedListConstIteratorIS6_EE(%"class.WTF::VectorBackedLinkedList"* %95, %"class.WTF::VectorBackedLinkedListNode"* %92, %"class.WTF::VectorBackedLinkedList"* %94) #6
  br label %115

115:                                              ; preds = %86, %113
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %90)
  %116 = load i32, i32* %83, align 8
  br label %117

117:                                              ; preds = %82, %115
  %118 = phi i32 [ %84, %82 ], [ %116, %115 ]
  %119 = icmp eq i32 %2, 0
  br i1 %119, label %120, label %122

120:                                              ; preds = %117
  %121 = add i32 %118, 1
  store i32 %121, i32* %83, align 8
  br label %128

122:                                              ; preds = %117
  %123 = icmp eq i32 %118, 0
  br i1 %123, label %124, label %128

124:                                              ; preds = %122
  %125 = getelementptr inbounds %"class.blink::FontDataCache", %"class.blink::FontDataCache"* %0, i64 0, i32 1
  %126 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %17, i64 0, i32 1, i32 0
  %127 = call { %class.scoped_refptr*, i8 } @_ZN3WTF13LinkedHashSetI13scoped_refptrIN5blink14SimpleFontDataEENS_10HashTraitsIS4_EENS_18PartitionAllocatorEE6insertIRS4_EENS8_9AddResultEOT_(%"class.WTF::LinkedHashSet"* %125, %class.scoped_refptr* dereferenceable(8) %126)
  br label %128

128:                                              ; preds = %122, %124, %120
  %129 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %17, i64 0, i32 1, i32 0, i32 0
  %130 = load %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %129, align 8
  %131 = ptrtoint %"class.blink::SimpleFontData"* %130 to i64
  %132 = icmp eq %"class.blink::SimpleFontData"* %130, null
  br i1 %132, label %135, label %133

133:                                              ; preds = %128
  %134 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %130, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %134) #6
  br label %135

135:                                              ; preds = %80, %128, %133, %11, %4
  %136 = phi i64 [ 0, %4 ], [ 0, %11 ], [ %81, %80 ], [ %131, %128 ], [ %131, %133 ]
  %137 = inttoptr i64 %136 to %"class.blink::SimpleFontData"*
  ret %"class.blink::SimpleFontData"* %137
}

declare %class.SkTypeface* @_ZNK5blink16FontPlatformData8TypefaceEv(%"class.blink::FontPlatformData"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %class.scoped_refptr*, i8 } @_ZN3WTF13LinkedHashSetI13scoped_refptrIN5blink14SimpleFontDataEENS_10HashTraitsIS4_EENS_18PartitionAllocatorEE6insertIRS4_EENS8_9AddResultEOT_(%"class.WTF::LinkedHashSet"*, %class.scoped_refptr* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::LinkedHashSet", %"class.WTF::LinkedHashSet"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %3, i64 0, i32 0
  %5 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeI13scoped_refptrIN5blink14SimpleFontDataEENS_18PartitionAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector"* %4, i32 0) #6, !noalias !5
  %6 = getelementptr inbounds %"class.WTF::LinkedHashSet", %"class.WTF::LinkedHashSet"* %0, i64 0, i32 0, i32 0
  %7 = tail call { %"struct.WTF::KeyValuePair.19"*, i8 } @_ZN3WTF9HashTableI13scoped_refptrIN5blink14SimpleFontDataEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10RefPtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERS4_RKjEENS_18HashTableAddResultISG_S6_EEOT0_OT1_(%"class.WTF::HashTable.16"* %6, %class.scoped_refptr* dereferenceable(8) %1, i32* nonnull dereferenceable(4) @_ZN3WTFL9kNotFoundE) #6
  %8 = extractvalue { %"struct.WTF::KeyValuePair.19"*, i8 } %7, 0
  %9 = extractvalue { %"struct.WTF::KeyValuePair.19"*, i8 } %7, 1
  %10 = and i8 %9, 1
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %24, label %12

12:                                               ; preds = %2
  %13 = tail call { %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"* } @_ZN3WTF22VectorBackedLinkedListI13scoped_refptrIN5blink14SimpleFontDataEENS_18PartitionAllocatorEE6insertIRS4_EENS_30VectorBackedLinkedListIteratorIS6_EENS_35VectorBackedLinkedListConstIteratorIS6_EEOT_(%"class.WTF::VectorBackedLinkedList"* %3, %"class.WTF::VectorBackedLinkedListNode"* %5, %"class.WTF::VectorBackedLinkedList"* %3, %class.scoped_refptr* dereferenceable(8) %1) #6
  %14 = extractvalue { %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"* } %13, 0
  %15 = extractvalue { %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"* } %13, 1
  %16 = ptrtoint %"class.WTF::VectorBackedLinkedListNode"* %14 to i64
  %17 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %15, i64 0, i32 0
  %18 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeI13scoped_refptrIN5blink14SimpleFontDataEENS_18PartitionAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector"* %17, i32 0) #6
  %19 = ptrtoint %"class.WTF::VectorBackedLinkedListNode"* %18 to i64
  %20 = sub i64 %16, %19
  %21 = lshr exact i64 %20, 4
  %22 = trunc i64 %21 to i32
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.19", %"struct.WTF::KeyValuePair.19"* %8, i64 0, i32 1
  store i32 %22, i32* %23, align 8
  br label %28

24:                                               ; preds = %2
  %25 = getelementptr inbounds %"struct.WTF::KeyValuePair.19", %"struct.WTF::KeyValuePair.19"* %8, i64 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeI13scoped_refptrIN5blink14SimpleFontDataEENS_18PartitionAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector"* %4, i32 %26) #6
  br label %28

28:                                               ; preds = %12, %24
  %29 = phi %"class.WTF::VectorBackedLinkedListNode"* [ %14, %12 ], [ %27, %24 ]
  %30 = phi i8 [ 1, %12 ], [ 0, %24 ]
  %31 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %29, i64 0, i32 2
  %32 = insertvalue { %class.scoped_refptr*, i8 } undef, %class.scoped_refptr* %31, 0
  %33 = insertvalue { %class.scoped_refptr*, i8 } %32, i8 %30, 1
  ret { %class.scoped_refptr*, i8 } %33
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink13FontDataCache8ContainsEPKNS_16FontPlatformDataE(%"class.blink::FontDataCache"*, %"class.blink::FontPlatformData"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::FontPlatformData"*, align 8
  store %"class.blink::FontPlatformData"* %1, %"class.blink::FontPlatformData"** %3, align 8
  %4 = getelementptr inbounds %"class.blink::FontDataCache", %"class.blink::FontDataCache"* %0, i64 0, i32 0, i32 0
  %5 = call zeroext i1 @_ZNK3WTF9HashTableIPKN5blink16FontPlatformDataENS_12KeyValuePairIS4_NSt3__14pairI13scoped_refptrINS1_14SimpleFontDataEEjEEEENS_24KeyValuePairKeyExtractorENS1_20FontDataCacheKeyHashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSG_ISB_EEEESH_NS_18PartitionAllocatorEE8ContainsINS_22IdentityHashTranslatorISE_SJ_SK_EES4_EEbRKT0_(%"class.WTF::HashTable"* %4, %"class.blink::FontPlatformData"** nonnull dereferenceable(8) %3) #6
  ret i1 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13FontDataCache7ReleaseEPKNS_14SimpleFontDataE(%"class.blink::FontDataCache"*, %"class.blink::SimpleFontData"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::FontPlatformData"*, align 8
  %4 = bitcast %"class.blink::FontPlatformData"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #6
  %5 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %1, i64 0, i32 5
  store %"class.blink::FontPlatformData"* %5, %"class.blink::FontPlatformData"** %3, align 8
  %6 = getelementptr inbounds %"class.blink::FontDataCache", %"class.blink::FontDataCache"* %0, i64 0, i32 0, i32 0
  %7 = call { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableIPKN5blink16FontPlatformDataENS_12KeyValuePairIS4_NSt3__14pairI13scoped_refptrINS1_14SimpleFontDataEEjEEEENS_24KeyValuePairKeyExtractorENS1_20FontDataCacheKeyHashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSG_ISB_EEEESH_NS_18PartitionAllocatorEE4findERKS4_(%"class.WTF::HashTable"* %6, %"class.blink::FontPlatformData"** nonnull dereferenceable(8) %3) #6
  %8 = extractvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %7, 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #6
  %9 = getelementptr inbounds %"class.blink::FontDataCache", %"class.blink::FontDataCache"* %0, i64 0, i32 0, i32 0, i32 0
  %10 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::FontDataCache", %"class.blink::FontDataCache"* %0, i64 0, i32 0, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = zext i32 %12 to i64
  %14 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %10, i64 %13
  %15 = icmp eq %"struct.WTF::KeyValuePair"* %8, %14
  br i1 %15, label %25, label %16

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %8, i64 0, i32 1, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = add i32 %18, -1
  store i32 %19, i32* %17, align 8
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %25

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.blink::FontDataCache", %"class.blink::FontDataCache"* %0, i64 0, i32 1
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %8, i64 0, i32 1, i32 0
  %24 = call { %class.scoped_refptr*, i8 } @_ZN3WTF13LinkedHashSetI13scoped_refptrIN5blink14SimpleFontDataEENS_10HashTraitsIS4_EENS_18PartitionAllocatorEE6insertIRS4_EENS8_9AddResultEOT_(%"class.WTF::LinkedHashSet"* %22, %class.scoped_refptr* dereferenceable(8) %23)
  br label %25

25:                                               ; preds = %21, %16, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink13FontDataCache5PurgeENS_13PurgeSeverityE(%"class.blink::FontDataCache"*, i32) local_unnamed_addr #0 align 2 {
  %3 = icmp eq i32 %1, 1
  br i1 %3, label %10, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.blink::FontDataCache", %"class.blink::FontDataCache"* %0, i64 0, i32 1, i32 1, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = icmp ugt i32 %6, 250
  br i1 %7, label %8, label %13

8:                                                ; preds = %4
  %9 = add i32 %6, -200
  br label %10

10:                                               ; preds = %2, %8
  %11 = phi i32 [ %9, %8 ], [ 2147483647, %2 ]
  %12 = tail call zeroext i1 @_ZN5blink13FontDataCache22PurgeLeastRecentlyUsedEi(%"class.blink::FontDataCache"* %0, i32 %11)
  br label %13

13:                                               ; preds = %10, %4
  %14 = phi i1 [ false, %4 ], [ %12, %10 ]
  ret i1 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink13FontDataCache22PurgeLeastRecentlyUsedEi(%"class.blink::FontDataCache"*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::Vector.22", align 8
  %4 = alloca %"class.blink::FontPlatformData"*, align 8
  %5 = load i1, i1* @_ZZN5blink13FontDataCache22PurgeLeastRecentlyUsedEiE10is_purging, align 1
  br i1 %5, label %226, label %6

6:                                                ; preds = %2
  store i1 true, i1* @_ZZN5blink13FontDataCache22PurgeLeastRecentlyUsedEiE10is_purging, align 1
  %7 = bitcast %"class.WTF::Vector.22"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 176, i8* nonnull %7) #6
  %8 = getelementptr inbounds %"class.WTF::Vector.22", %"class.WTF::Vector.22"* %3, i64 0, i32 0, i32 1, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 160, i1 false)
  %9 = getelementptr inbounds %"class.WTF::Vector.22", %"class.WTF::Vector.22"* %3, i64 0, i32 0, i32 1, i64 0
  %10 = bitcast %"class.WTF::Vector.22"* %3 to i8**
  store i8* %9, i8** %10, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.22", %"class.WTF::Vector.22"* %3, i64 0, i32 0, i32 0, i32 1
  store i32 20, i32* %11, align 8
  %12 = getelementptr inbounds %"class.WTF::Vector.22", %"class.WTF::Vector.22"* %3, i64 0, i32 0, i32 0, i32 2
  store i32 0, i32* %12, align 4
  %13 = getelementptr inbounds %"class.blink::FontDataCache", %"class.blink::FontDataCache"* %0, i64 0, i32 1
  %14 = getelementptr inbounds %"class.blink::FontDataCache", %"class.blink::FontDataCache"* %0, i64 0, i32 1, i32 1
  %15 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %14, i64 0, i32 0
  %16 = call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeI13scoped_refptrIN5blink14SimpleFontDataEENS_18PartitionAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector"* %15, i32 0) #6, !noalias !8
  %17 = getelementptr inbounds %"class.blink::FontDataCache", %"class.blink::FontDataCache"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.WTF::LinkedHashSet", %"class.WTF::LinkedHashSet"* %13, i64 0, i32 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.blink::FontDataCache", %"class.blink::FontDataCache"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %20 = call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeI13scoped_refptrIN5blink14SimpleFontDataEENS_18PartitionAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector"* %15, i32 0) #6, !noalias !11
  %21 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %20, i64 0, i32 1
  %22 = load i32, i32* %21, align 4, !noalias !11
  %23 = call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeI13scoped_refptrIN5blink14SimpleFontDataEENS_18PartitionAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector"* %15, i32 %22) #6, !noalias !11
  %24 = icmp sgt i32 %1, 0
  %25 = icmp ne %"class.WTF::VectorBackedLinkedListNode"* %23, %16
  %26 = and i1 %25, %24
  br i1 %26, label %27, label %33

27:                                               ; preds = %6
  %28 = bitcast %"class.blink::FontPlatformData"** %4 to i8*
  %29 = getelementptr inbounds %"class.blink::FontDataCache", %"class.blink::FontDataCache"* %0, i64 0, i32 0, i32 0
  %30 = getelementptr inbounds %"class.blink::FontDataCache", %"class.blink::FontDataCache"* %0, i64 0, i32 0, i32 0, i32 0
  %31 = getelementptr inbounds %"class.blink::FontDataCache", %"class.blink::FontDataCache"* %0, i64 0, i32 0, i32 0, i32 1
  %32 = getelementptr inbounds %"class.WTF::Vector.22", %"class.WTF::Vector.22"* %3, i64 0, i32 0, i32 0, i32 0
  br label %39

33:                                               ; preds = %70, %6
  %34 = phi %"class.WTF::VectorBackedLinkedListNode"* [ %23, %6 ], [ %73, %70 ]
  %35 = icmp eq %"class.WTF::VectorBackedLinkedListNode"* %34, %16
  br i1 %35, label %78, label %36

36:                                               ; preds = %33
  br i1 %24, label %37, label %142

37:                                               ; preds = %36
  %38 = getelementptr inbounds %"class.WTF::LinkedHashSet", %"class.WTF::LinkedHashSet"* %13, i64 0, i32 0, i32 0
  br label %118

39:                                               ; preds = %27, %70
  %40 = phi i32 [ 0, %27 ], [ %74, %70 ]
  %41 = phi %"class.WTF::VectorBackedLinkedListNode"* [ %23, %27 ], [ %73, %70 ]
  %42 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %41, i64 0, i32 2
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #6
  %43 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %42, i64 0, i32 0
  %44 = load %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %44, i64 0, i32 5
  store %"class.blink::FontPlatformData"* %45, %"class.blink::FontPlatformData"** %4, align 8
  %46 = call { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableIPKN5blink16FontPlatformDataENS_12KeyValuePairIS4_NSt3__14pairI13scoped_refptrINS1_14SimpleFontDataEEjEEEENS_24KeyValuePairKeyExtractorENS1_20FontDataCacheKeyHashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSG_ISB_EEEESH_NS_18PartitionAllocatorEE4findERKS4_(%"class.WTF::HashTable"* %29, %"class.blink::FontPlatformData"** nonnull dereferenceable(8) %4) #6
  %47 = extractvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %46, 0
  %48 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %30, align 8
  %49 = load i32, i32* %31, align 8
  %50 = zext i32 %49 to i64
  %51 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %48, i64 %50
  %52 = icmp eq %"struct.WTF::KeyValuePair"* %51, %47
  br i1 %52, label %54, label %53

53:                                               ; preds = %39
  call void @_ZN3WTF9HashTableIPKN5blink16FontPlatformDataENS_12KeyValuePairIS4_NSt3__14pairI13scoped_refptrINS1_14SimpleFontDataEEjEEEENS_24KeyValuePairKeyExtractorENS1_20FontDataCacheKeyHashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSG_ISB_EEEESH_NS_18PartitionAllocatorEE5eraseEPKSC_(%"class.WTF::HashTable"* %29, %"struct.WTF::KeyValuePair"* %47) #6
  br label %54

54:                                               ; preds = %39, %53
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #6
  %55 = load i32, i32* %12, align 4
  %56 = load i32, i32* %11, align 8
  %57 = icmp eq i32 %55, %56
  br i1 %57, label %69, label %58, !prof !14

58:                                               ; preds = %54
  %59 = load %class.scoped_refptr*, %class.scoped_refptr** %32, align 8
  %60 = zext i32 %55 to i64
  %61 = load %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %43, align 8
  %62 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %59, i64 %60, i32 0
  store %"class.blink::SimpleFontData"* %61, %"class.blink::SimpleFontData"** %62, align 8
  %63 = icmp eq %"class.blink::SimpleFontData"* %61, null
  br i1 %63, label %66, label %64

64:                                               ; preds = %58
  %65 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %61, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %65) #6
  br label %66

66:                                               ; preds = %64, %58
  %67 = load i32, i32* %12, align 4
  %68 = add i32 %67, 1
  store i32 %68, i32* %12, align 4
  br label %70

69:                                               ; preds = %54
  call void @_ZN3WTF6VectorI13scoped_refptrIN5blink14SimpleFontDataEELj20ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS4_EEvOT_(%"class.WTF::Vector.22"* nonnull %3, %class.scoped_refptr* dereferenceable(8) %42) #6
  br label %70

70:                                               ; preds = %66, %69
  %71 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %41, i64 0, i32 1
  %72 = load i32, i32* %71, align 4
  %73 = call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeI13scoped_refptrIN5blink14SimpleFontDataEENS_18PartitionAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector"* %15, i32 %72) #6
  %74 = add nuw nsw i32 %40, 1
  %75 = icmp slt i32 %74, %1
  %76 = icmp ne %"class.WTF::VectorBackedLinkedListNode"* %73, %16
  %77 = and i1 %76, %75
  br i1 %77, label %39, label %33

78:                                               ; preds = %33
  %79 = load %"struct.WTF::KeyValuePair.19"*, %"struct.WTF::KeyValuePair.19"** %18, align 8
  %80 = icmp eq %"struct.WTF::KeyValuePair.19"* %79, null
  br i1 %80, label %110, label %81

81:                                               ; preds = %78
  %82 = load i32, i32* %19, align 8
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %107, label %84

84:                                               ; preds = %81
  %85 = zext i32 %82 to i64
  br label %86

86:                                               ; preds = %104, %84
  %87 = phi i64 [ 0, %84 ], [ %105, %104 ]
  %88 = getelementptr inbounds %"struct.WTF::KeyValuePair.19", %"struct.WTF::KeyValuePair.19"* %79, i64 %87
  %89 = bitcast %"struct.WTF::KeyValuePair.19"* %88 to i8**
  %90 = load i8*, i8** %89, align 8
  %91 = ptrtoint i8* %90 to i64
  switch i64 %91, label %92 [
    i64 -1, label %104
    i64 0, label %104
  ]

92:                                               ; preds = %86
  %93 = getelementptr inbounds i8, i8* %90, i64 8
  %94 = bitcast i8* %93 to %"class.base::subtle::RefCountedBase"*
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %94) #6
  %95 = bitcast i8* %93 to i32*
  %96 = load i32, i32* %95, align 4
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %98, label %104

98:                                               ; preds = %92
  %99 = bitcast i8* %90 to %"class.blink::FontData"*
  %100 = bitcast i8* %90 to void (%"class.blink::FontData"*)***
  %101 = load void (%"class.blink::FontData"*)**, void (%"class.blink::FontData"*)*** %100, align 8
  %102 = getelementptr inbounds void (%"class.blink::FontData"*)*, void (%"class.blink::FontData"*)** %101, i64 1
  %103 = load void (%"class.blink::FontData"*)*, void (%"class.blink::FontData"*)** %102, align 8
  call void %103(%"class.blink::FontData"* nonnull %99) #6
  br label %104

104:                                              ; preds = %98, %92, %86, %86
  %105 = add nuw nsw i64 %87, 1
  %106 = icmp eq i64 %105, %85
  br i1 %106, label %107, label %86

107:                                              ; preds = %104, %81
  %108 = bitcast %"struct.WTF::KeyValuePair.19"* %79 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %108) #6
  %109 = bitcast %"class.WTF::LinkedHashSet"* %13 to i64*
  store atomic i64 0, i64* %109 monotonic, align 8
  store i32 0, i32* %19, align 8
  store i32 0, i32* %17, align 4
  br label %110

110:                                              ; preds = %78, %107
  %111 = getelementptr inbounds %"class.blink::FontDataCache", %"class.blink::FontDataCache"* %0, i64 0, i32 1, i32 1, i32 0
  call void @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeI13scoped_refptrIN5blink14SimpleFontDataEENS_18PartitionAllocatorEEELj0ES6_E14ShrinkCapacityEj(%"class.WTF::Vector"* %111, i32 1) #6
  %112 = call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeI13scoped_refptrIN5blink14SimpleFontDataEENS_18PartitionAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector"* %111, i32 0) #6
  %113 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %112, i64 0, i32 0
  store i32 0, i32* %113, align 8
  %114 = call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeI13scoped_refptrIN5blink14SimpleFontDataEENS_18PartitionAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector"* %111, i32 0) #6
  %115 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %114, i64 0, i32 1
  store i32 0, i32* %115, align 4
  %116 = getelementptr inbounds %"class.blink::FontDataCache", %"class.blink::FontDataCache"* %0, i64 0, i32 1, i32 1, i32 1
  store i32 0, i32* %116, align 8
  %117 = getelementptr inbounds %"class.blink::FontDataCache", %"class.blink::FontDataCache"* %0, i64 0, i32 1, i32 1, i32 2
  store i32 0, i32* %117, align 4
  br label %142

118:                                              ; preds = %139, %37
  %119 = phi i32 [ 0, %37 ], [ %140, %139 ]
  %120 = call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeI13scoped_refptrIN5blink14SimpleFontDataEENS_18PartitionAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector"* %15, i32 0) #6, !noalias !15
  %121 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %120, i64 0, i32 1
  %122 = load i32, i32* %121, align 4, !noalias !15
  %123 = call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeI13scoped_refptrIN5blink14SimpleFontDataEENS_18PartitionAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector"* %15, i32 %122) #6, !noalias !15
  %124 = call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeI13scoped_refptrIN5blink14SimpleFontDataEENS_18PartitionAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector"* %15, i32 0) #6, !noalias !18
  %125 = icmp eq %"class.WTF::VectorBackedLinkedListNode"* %123, %124
  br i1 %125, label %139, label %126

126:                                              ; preds = %118
  %127 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %123, i64 0, i32 2, i32 0
  %128 = load %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %127, align 8
  %129 = call { %"struct.WTF::KeyValuePair.19"*, %"struct.WTF::KeyValuePair.19"* } @_ZN3WTF9HashTableI13scoped_refptrIN5blink14SimpleFontDataEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10RefPtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS_18PartitionAllocatorEE4findENSC_17RefPtrValuePeekerE(%"class.WTF::HashTable.16"* %38, %"class.blink::SimpleFontData"* %128) #6
  %130 = extractvalue { %"struct.WTF::KeyValuePair.19"*, %"struct.WTF::KeyValuePair.19"* } %129, 0
  %131 = load %"struct.WTF::KeyValuePair.19"*, %"struct.WTF::KeyValuePair.19"** %18, align 8
  %132 = load i32, i32* %19, align 8
  %133 = zext i32 %132 to i64
  %134 = getelementptr inbounds %"struct.WTF::KeyValuePair.19", %"struct.WTF::KeyValuePair.19"* %131, i64 %133
  %135 = icmp eq %"struct.WTF::KeyValuePair.19"* %134, %130
  br i1 %135, label %137, label %136

136:                                              ; preds = %126
  call void @_ZN3WTF9HashTableI13scoped_refptrIN5blink14SimpleFontDataEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10RefPtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS_18PartitionAllocatorEE5eraseEPKS6_(%"class.WTF::HashTable.16"* %38, %"struct.WTF::KeyValuePair.19"* %130) #6
  br label %137

137:                                              ; preds = %136, %126
  %138 = call { %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"* } @_ZN3WTF22VectorBackedLinkedListI13scoped_refptrIN5blink14SimpleFontDataEENS_18PartitionAllocatorEE5eraseENS_35VectorBackedLinkedListConstIteratorIS6_EE(%"class.WTF::VectorBackedLinkedList"* %14, %"class.WTF::VectorBackedLinkedListNode"* %123, %"class.WTF::VectorBackedLinkedList"* %14) #6
  br label %139

139:                                              ; preds = %118, %137
  %140 = add nuw nsw i32 %119, 1
  %141 = icmp eq i32 %140, %1
  br i1 %141, label %142, label %118

142:                                              ; preds = %139, %36, %110
  %143 = load i32, i32* %12, align 4
  %144 = icmp ne i32 %143, 0
  %145 = load i32, i32* %11, align 8
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %188, label %147

147:                                              ; preds = %142
  %148 = icmp eq i32 %143, 0
  br i1 %148, label %176, label %149

149:                                              ; preds = %147
  %150 = getelementptr inbounds %"class.WTF::Vector.22", %"class.WTF::Vector.22"* %3, i64 0, i32 0, i32 0, i32 0
  %151 = load %class.scoped_refptr*, %class.scoped_refptr** %150, align 8
  %152 = zext i32 %143 to i64
  %153 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %151, i64 %152
  br label %154

154:                                              ; preds = %172, %149
  %155 = phi %class.scoped_refptr* [ %173, %172 ], [ %151, %149 ]
  %156 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %155, i64 0, i32 0
  %157 = load %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %156, align 8
  %158 = icmp eq %"class.blink::SimpleFontData"* %157, null
  br i1 %158, label %172, label %159

159:                                              ; preds = %154
  %160 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %157, i64 0, i32 0, i32 1, i32 0
  %161 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %160, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %161) #6
  %162 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %160, i64 0, i32 0, i32 0
  %163 = load i32, i32* %162, align 4
  %164 = icmp eq i32 %163, 0
  br i1 %164, label %165, label %172

165:                                              ; preds = %159
  %166 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %160, i64 -2
  %167 = bitcast %"class.base::RefCounted"* %166 to %"class.blink::FontData"*
  %168 = bitcast %"class.base::RefCounted"* %166 to void (%"class.blink::FontData"*)***
  %169 = load void (%"class.blink::FontData"*)**, void (%"class.blink::FontData"*)*** %168, align 8
  %170 = getelementptr inbounds void (%"class.blink::FontData"*)*, void (%"class.blink::FontData"*)** %169, i64 1
  %171 = load void (%"class.blink::FontData"*)*, void (%"class.blink::FontData"*)** %170, align 8
  call void %171(%"class.blink::FontData"* nonnull %167) #6
  br label %172

172:                                              ; preds = %165, %159, %154
  %173 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %155, i64 1
  %174 = icmp eq %class.scoped_refptr* %173, %153
  br i1 %174, label %175, label %154

175:                                              ; preds = %172
  store i32 0, i32* %12, align 4
  br label %176

176:                                              ; preds = %175, %147
  %177 = getelementptr inbounds %"class.WTF::Vector.22", %"class.WTF::Vector.22"* %3, i64 0, i32 0, i32 0, i32 0
  %178 = load %class.scoped_refptr*, %class.scoped_refptr** %177, align 8
  %179 = ptrtoint i8* %9 to i64
  %180 = bitcast %"class.WTF::Vector.22"* %3 to i64*
  store atomic i64 %179, i64* %180 monotonic, align 8
  store i32 20, i32* %11, align 8
  %181 = bitcast i8* %9 to %class.scoped_refptr*
  %182 = icmp eq %class.scoped_refptr* %178, %181
  br i1 %182, label %183, label %185, !prof !21

183:                                              ; preds = %176
  store i1 false, i1* @_ZZN5blink13FontDataCache22PurgeLeastRecentlyUsedEiE10is_purging, align 1
  %184 = getelementptr inbounds %"class.WTF::Vector.22", %"class.WTF::Vector.22"* %3, i64 0, i32 0, i32 0, i32 0
  br label %218

185:                                              ; preds = %176
  %186 = getelementptr inbounds %"class.WTF::Vector.22", %"class.WTF::Vector.22"* %3, i64 0, i32 0
  call void @_ZN3WTF12VectorBufferI13scoped_refptrIN5blink14SimpleFontDataEELj20ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS4_(%"class.WTF::VectorBuffer.23"* nonnull %186, %class.scoped_refptr* %178) #6
  %187 = load i32, i32* %12, align 4
  br label %188

188:                                              ; preds = %142, %185
  %189 = phi i32 [ %143, %142 ], [ %187, %185 ]
  store i1 false, i1* @_ZZN5blink13FontDataCache22PurgeLeastRecentlyUsedEiE10is_purging, align 1
  %190 = icmp eq i32 %189, 0
  %191 = getelementptr inbounds %"class.WTF::Vector.22", %"class.WTF::Vector.22"* %3, i64 0, i32 0, i32 0, i32 0
  br i1 %190, label %218, label %192, !prof !14

192:                                              ; preds = %188
  %193 = load %class.scoped_refptr*, %class.scoped_refptr** %191, align 8
  %194 = zext i32 %189 to i64
  %195 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %193, i64 %194
  br label %196

196:                                              ; preds = %214, %192
  %197 = phi %class.scoped_refptr* [ %215, %214 ], [ %193, %192 ]
  %198 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %197, i64 0, i32 0
  %199 = load %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %198, align 8
  %200 = icmp eq %"class.blink::SimpleFontData"* %199, null
  br i1 %200, label %214, label %201

201:                                              ; preds = %196
  %202 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %199, i64 0, i32 0, i32 1, i32 0
  %203 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %202, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %203) #6
  %204 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %202, i64 0, i32 0, i32 0
  %205 = load i32, i32* %204, align 4
  %206 = icmp eq i32 %205, 0
  br i1 %206, label %207, label %214

207:                                              ; preds = %201
  %208 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %202, i64 -2
  %209 = bitcast %"class.base::RefCounted"* %208 to %"class.blink::FontData"*
  %210 = bitcast %"class.base::RefCounted"* %208 to void (%"class.blink::FontData"*)***
  %211 = load void (%"class.blink::FontData"*)**, void (%"class.blink::FontData"*)*** %210, align 8
  %212 = getelementptr inbounds void (%"class.blink::FontData"*)*, void (%"class.blink::FontData"*)** %211, i64 1
  %213 = load void (%"class.blink::FontData"*)*, void (%"class.blink::FontData"*)** %212, align 8
  call void %213(%"class.blink::FontData"* nonnull %209) #6
  br label %214

214:                                              ; preds = %207, %201, %196
  %215 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %197, i64 1
  %216 = icmp eq %class.scoped_refptr* %215, %195
  br i1 %216, label %217, label %196

217:                                              ; preds = %214
  store i32 0, i32* %12, align 4
  br label %218

218:                                              ; preds = %183, %217, %188
  %219 = phi %class.scoped_refptr** [ %184, %183 ], [ %191, %217 ], [ %191, %188 ]
  %220 = load %class.scoped_refptr*, %class.scoped_refptr** %219, align 8
  %221 = bitcast i8* %9 to %class.scoped_refptr*
  %222 = icmp eq %class.scoped_refptr* %220, %221
  br i1 %222, label %225, label %223, !prof !21

223:                                              ; preds = %218
  %224 = getelementptr inbounds %"class.WTF::Vector.22", %"class.WTF::Vector.22"* %3, i64 0, i32 0
  call void @_ZN3WTF12VectorBufferI13scoped_refptrIN5blink14SimpleFontDataEELj20ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS4_(%"class.WTF::VectorBuffer.23"* nonnull %224, %class.scoped_refptr* %220) #6
  br label %225

225:                                              ; preds = %218, %223
  call void @llvm.lifetime.end.p0i8(i64 176, i8* nonnull %7) #6
  br label %226

226:                                              ; preds = %2, %225
  %227 = phi i1 [ %144, %225 ], [ false, %2 ]
  ret i1 %227
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN5blink14SimpleFontDataC1ERKNS_16FontPlatformDataE13scoped_refptrINS_14CustomFontDataEEbRKNS_19FontMetricsOverrideE(%"class.blink::SimpleFontData"*, %"class.blink::FontPlatformData"* dereferenceable(72), %"class.blink::CustomFontData"*, i1 zeroext, %"struct.blink::FontMetricsOverride"* dereferenceable(24)) unnamed_addr #1

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #3

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferI13scoped_refptrIN5blink14SimpleFontDataEELj20ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS4_(%"class.WTF::VectorBuffer.23"*, %class.scoped_refptr*) local_unnamed_addr #4 comdat align 2 {
  %3 = bitcast %class.scoped_refptr* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #6
  ret void
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableIPKN5blink16FontPlatformDataENS_12KeyValuePairIS4_NSt3__14pairI13scoped_refptrINS1_14SimpleFontDataEEjEEEENS_24KeyValuePairKeyExtractorENS1_20FontDataCacheKeyHashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSG_ISB_EEEESH_NS_18PartitionAllocatorEE4findERKS4_(%"class.WTF::HashTable"*, %"class.blink::FontPlatformData"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair"* %4, null
  br i1 %5, label %61, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = load %"class.blink::FontPlatformData"*, %"class.blink::FontPlatformData"** %1, align 8
  %12 = tail call i32 @_ZNK5blink16FontPlatformData7GetHashEv(%"class.blink::FontPlatformData"* %11) #6
  %13 = and i32 %12, %9
  %14 = zext i32 %13 to i64
  %15 = xor i32 %12, -1
  %16 = lshr i32 %12, 23
  %17 = add i32 %16, %15
  %18 = shl i32 %17, 12
  %19 = xor i32 %18, %17
  %20 = lshr i32 %19, 7
  %21 = xor i32 %20, %19
  %22 = shl i32 %21, 2
  %23 = xor i32 %22, %21
  %24 = lshr i32 %23, 20
  %25 = xor i32 %24, %23
  %26 = or i32 %25, 1
  %27 = zext i32 %26 to i64
  br label %28

28:                                               ; preds = %53, %6
  %29 = phi i64 [ 0, %6 ], [ %55, %53 ]
  %30 = phi i64 [ %14, %6 ], [ %57, %53 ]
  %31 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %30
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %31, i64 0, i32 0
  %33 = load %"class.blink::FontPlatformData"*, %"class.blink::FontPlatformData"** %32, align 8
  %34 = load %"class.blink::FontPlatformData"*, %"class.blink::FontPlatformData"** %1, align 8
  %35 = icmp eq %"class.blink::FontPlatformData"* %33, inttoptr (i64 -1 to %"class.blink::FontPlatformData"*)
  %36 = icmp eq %"class.blink::FontPlatformData"* %34, inttoptr (i64 -1 to %"class.blink::FontPlatformData"*)
  %37 = or i1 %35, %36
  br i1 %37, label %48, label %38

38:                                               ; preds = %28
  %39 = icmp ne %"class.blink::FontPlatformData"* %33, null
  %40 = icmp ne %"class.blink::FontPlatformData"* %34, null
  %41 = and i1 %39, %40
  br i1 %41, label %44, label %42

42:                                               ; preds = %38
  %43 = icmp eq %"class.blink::FontPlatformData"* %33, %34
  br i1 %43, label %58, label %50

44:                                               ; preds = %38
  %45 = tail call zeroext i1 @_ZNK5blink16FontPlatformDataeqERKS0_(%"class.blink::FontPlatformData"* nonnull %33, %"class.blink::FontPlatformData"* nonnull dereferenceable(72) %34) #6
  br i1 %45, label %58, label %46

46:                                               ; preds = %44
  %47 = load %"class.blink::FontPlatformData"*, %"class.blink::FontPlatformData"** %32, align 8
  br label %50

48:                                               ; preds = %28
  %49 = and i1 %35, %36
  br i1 %49, label %58, label %50

50:                                               ; preds = %48, %46, %42
  %51 = phi %"class.blink::FontPlatformData"* [ %47, %46 ], [ %33, %42 ], [ %33, %48 ]
  %52 = icmp eq %"class.blink::FontPlatformData"* %51, null
  br i1 %52, label %58, label %53

53:                                               ; preds = %50
  %54 = icmp eq i64 %29, 0
  %55 = select i1 %54, i64 %27, i64 %29
  %56 = add i64 %55, %30
  %57 = and i64 %56, %10
  br label %28

58:                                               ; preds = %50, %48, %44, %42
  %59 = phi %"struct.WTF::KeyValuePair"* [ %31, %42 ], [ %31, %44 ], [ null, %50 ], [ %31, %48 ]
  %60 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  br label %61

61:                                               ; preds = %58, %2
  %62 = phi %"struct.WTF::KeyValuePair"* [ null, %2 ], [ %60, %58 ]
  %63 = phi %"struct.WTF::KeyValuePair"* [ null, %2 ], [ %59, %58 ]
  %64 = icmp eq %"struct.WTF::KeyValuePair"* %63, null
  %65 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %66 = load i32, i32* %65, align 8
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %62, i64 %67
  %69 = select i1 %64, %"struct.WTF::KeyValuePair"* %68, %"struct.WTF::KeyValuePair"* %63
  %70 = insertvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } undef, %"struct.WTF::KeyValuePair"* %69, 0
  %71 = insertvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %70, %"struct.WTF::KeyValuePair"* %68, 1
  ret { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %71
}

declare i32 @_ZNK5blink16FontPlatformData7GetHashEv(%"class.blink::FontPlatformData"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #5

declare zeroext i1 @_ZNK5blink16FontPlatformDataeqERKS0_(%"class.blink::FontPlatformData"*, %"class.blink::FontPlatformData"* dereferenceable(72)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIPKN5blink16FontPlatformDataENS_12KeyValuePairIS4_NSt3__14pairI13scoped_refptrINS1_14SimpleFontDataEEjEEEENS_24KeyValuePairKeyExtractorENS1_20FontDataCacheKeyHashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSG_ISB_EEEESH_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISJ_SE_SK_EES4_RSB_EENS_18HashTableAddResultISL_SC_EEOT0_OT1_(%"class.WTF::HashTable"*, %"class.blink::FontPlatformData"** dereferenceable(8), %"struct.std::__1::pair"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIPKN5blink16FontPlatformDataENS_12KeyValuePairIS4_NSt3__14pairI13scoped_refptrINS1_14SimpleFontDataEEjEEEENS_24KeyValuePairKeyExtractorENS1_20FontDataCacheKeyHashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSG_ISB_EEEESH_NS_18PartitionAllocatorEE6ExpandEPSC_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* null)
  %9 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = load %"class.blink::FontPlatformData"*, %"class.blink::FontPlatformData"** %1, align 8
  %17 = tail call i32 @_ZNK5blink16FontPlatformData7GetHashEv(%"class.blink::FontPlatformData"* %16) #6
  %18 = and i32 %17, %14
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %19
  %21 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %20, i64 0, i32 0
  %22 = load %"class.blink::FontPlatformData"*, %"class.blink::FontPlatformData"** %21, align 8
  %23 = icmp eq %"class.blink::FontPlatformData"* %22, null
  br i1 %23, label %81, label %24

24:                                               ; preds = %10
  %25 = xor i32 %17, -1
  %26 = lshr i32 %17, 23
  %27 = add i32 %26, %25
  %28 = shl i32 %27, 12
  %29 = xor i32 %28, %27
  %30 = lshr i32 %29, 7
  %31 = xor i32 %30, %29
  %32 = shl i32 %31, 2
  %33 = xor i32 %32, %31
  %34 = lshr i32 %33, 20
  %35 = xor i32 %34, %33
  %36 = or i32 %35, 1
  %37 = zext i32 %36 to i64
  br label %38

38:                                               ; preds = %24, %59
  %39 = phi %"class.blink::FontPlatformData"* [ %22, %24 ], [ %69, %59 ]
  %40 = phi %"class.blink::FontPlatformData"** [ %21, %24 ], [ %68, %59 ]
  %41 = phi %"struct.WTF::KeyValuePair"* [ %20, %24 ], [ %67, %59 ]
  %42 = phi %"struct.WTF::KeyValuePair"* [ null, %24 ], [ %62, %59 ]
  %43 = phi i64 [ %19, %24 ], [ %66, %59 ]
  %44 = phi i64 [ 0, %24 ], [ %64, %59 ]
  %45 = load %"class.blink::FontPlatformData"*, %"class.blink::FontPlatformData"** %1, align 8
  %46 = icmp eq %"class.blink::FontPlatformData"* %39, inttoptr (i64 -1 to %"class.blink::FontPlatformData"*)
  %47 = icmp eq %"class.blink::FontPlatformData"* %45, inttoptr (i64 -1 to %"class.blink::FontPlatformData"*)
  %48 = or i1 %46, %47
  br i1 %48, label %57, label %49

49:                                               ; preds = %38
  %50 = icmp eq %"class.blink::FontPlatformData"* %45, null
  br i1 %50, label %51, label %53

51:                                               ; preds = %49
  %52 = icmp eq %"class.blink::FontPlatformData"* %39, null
  br i1 %52, label %126, label %59

53:                                               ; preds = %49
  %54 = tail call zeroext i1 @_ZNK5blink16FontPlatformDataeqERKS0_(%"class.blink::FontPlatformData"* nonnull %39, %"class.blink::FontPlatformData"* nonnull dereferenceable(72) %45) #6
  br i1 %54, label %126, label %55

55:                                               ; preds = %53
  %56 = load %"class.blink::FontPlatformData"*, %"class.blink::FontPlatformData"** %40, align 8
  br label %59

57:                                               ; preds = %38
  %58 = and i1 %46, %47
  br i1 %58, label %126, label %59

59:                                               ; preds = %55, %51, %57
  %60 = phi %"class.blink::FontPlatformData"* [ %56, %55 ], [ %39, %51 ], [ %39, %57 ]
  %61 = icmp eq %"class.blink::FontPlatformData"* %60, inttoptr (i64 -1 to %"class.blink::FontPlatformData"*)
  %62 = select i1 %61, %"struct.WTF::KeyValuePair"* %41, %"struct.WTF::KeyValuePair"* %42
  %63 = icmp eq i64 %44, 0
  %64 = select i1 %63, i64 %37, i64 %44
  %65 = add i64 %64, %43
  %66 = and i64 %65, %15
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %66
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %67, i64 0, i32 0
  %69 = load %"class.blink::FontPlatformData"*, %"class.blink::FontPlatformData"** %68, align 8
  %70 = icmp eq %"class.blink::FontPlatformData"* %69, null
  br i1 %70, label %71, label %38

71:                                               ; preds = %59
  %72 = icmp eq %"struct.WTF::KeyValuePair"* %62, null
  br i1 %72, label %81, label %73

73:                                               ; preds = %71
  %74 = bitcast %"struct.WTF::KeyValuePair"* %62 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %74, i8 0, i64 24, i1 false) #6
  %75 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %76 = load i32, i32* %75, align 8
  %77 = add i32 %76, 2147483647
  %78 = and i32 %77, 2147483647
  %79 = and i32 %76, -2147483648
  %80 = or i32 %78, %79
  store i32 %80, i32* %75, align 8
  br label %81

81:                                               ; preds = %10, %71, %73
  %82 = phi %"struct.WTF::KeyValuePair"* [ %62, %73 ], [ %67, %71 ], [ %20, %10 ]
  %83 = bitcast %"class.blink::FontPlatformData"** %1 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = bitcast %"struct.WTF::KeyValuePair"* %82 to i64*
  store i64 %84, i64* %85, align 8
  %86 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %82, i64 0, i32 1
  %87 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %2, i64 0, i32 0, i32 0
  %88 = load %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %87, align 8
  %89 = icmp eq %"class.blink::SimpleFontData"* %88, null
  br i1 %89, label %92, label %90

90:                                               ; preds = %81
  %91 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %88, i64 0, i32 0, i32 1, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %91) #6
  br label %92

92:                                               ; preds = %90, %81
  %93 = ptrtoint %"class.blink::SimpleFontData"* %88 to i64
  %94 = bitcast %"struct.std::__1::pair"* %86 to i64*
  %95 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %86, i64 0, i32 0, i32 0
  %96 = load %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %95, align 8
  store i64 %93, i64* %94, align 8
  %97 = icmp eq %"class.blink::SimpleFontData"* %96, null
  br i1 %97, label %111, label %98

98:                                               ; preds = %92
  %99 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %96, i64 0, i32 0, i32 1, i32 0
  %100 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %99, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %100) #6
  %101 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %99, i64 0, i32 0, i32 0
  %102 = load i32, i32* %101, align 4
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %104, label %111

104:                                              ; preds = %98
  %105 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %99, i64 -2
  %106 = bitcast %"class.base::RefCounted"* %105 to %"class.blink::FontData"*
  %107 = bitcast %"class.base::RefCounted"* %105 to void (%"class.blink::FontData"*)***
  %108 = load void (%"class.blink::FontData"*)**, void (%"class.blink::FontData"*)*** %107, align 8
  %109 = getelementptr inbounds void (%"class.blink::FontData"*)*, void (%"class.blink::FontData"*)** %108, i64 1
  %110 = load void (%"class.blink::FontData"*)*, void (%"class.blink::FontData"*)** %109, align 8
  tail call void %110(%"class.blink::FontData"* nonnull %106) #6
  br label %111

111:                                              ; preds = %92, %98, %104
  %112 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %2, i64 0, i32 1
  %113 = load i32, i32* %112, align 8
  %114 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %82, i64 0, i32 1, i32 1
  store i32 %113, i32* %114, align 8
  %115 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %116 = load i32, i32* %115, align 4
  %117 = add i32 %116, 1
  store i32 %117, i32* %115, align 4
  %118 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %119 = load i32, i32* %118, align 8
  %120 = add i32 %119, %117
  %121 = shl i32 %120, 1
  %122 = load i32, i32* %12, align 8
  %123 = icmp ult i32 %121, %122
  br i1 %123, label %126, label %124

124:                                              ; preds = %111
  %125 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIPKN5blink16FontPlatformDataENS_12KeyValuePairIS4_NSt3__14pairI13scoped_refptrINS1_14SimpleFontDataEEjEEEENS_24KeyValuePairKeyExtractorENS1_20FontDataCacheKeyHashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSG_ISB_EEEESH_NS_18PartitionAllocatorEE6ExpandEPSC_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %82)
  br label %126

126:                                              ; preds = %57, %53, %51, %111, %124
  %127 = phi i8 [ 1, %111 ], [ 1, %124 ], [ 0, %51 ], [ 0, %53 ], [ 0, %57 ]
  %128 = phi %"struct.WTF::KeyValuePair"* [ %82, %111 ], [ %125, %124 ], [ %41, %51 ], [ %41, %53 ], [ %41, %57 ]
  %129 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %128, 0
  %130 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %129, i8 %127, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %130
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIPKN5blink16FontPlatformDataENS_12KeyValuePairIS4_NSt3__14pairI13scoped_refptrINS1_14SimpleFontDataEEjEEEENS_24KeyValuePairKeyExtractorENS1_20FontDataCacheKeyHashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSG_ISB_EEEESH_NS_18PartitionAllocatorEE6ExpandEPSC_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #6
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #6
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #6
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* %22, i8* %23) #6
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #6
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.3, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #6
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #6
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #6
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = mul nuw nsw i64 %33, 24
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([167 x i8], [167 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIPKN5blink16FontPlatformDataENSt3__14pairI13scoped_refptrINS2_14SimpleFontDataEEjEEEEEEPKcv, i64 0, i64 0)) #6
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #6
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair"*
  %37 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIPKN5blink16FontPlatformDataENS_12KeyValuePairIS4_NSt3__14pairI13scoped_refptrINS1_14SimpleFontDataEEjEEEENS_24KeyValuePairKeyExtractorENS1_20FontDataCacheKeyHashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSG_ISB_EEEESH_NS_18PartitionAllocatorEE8RehashToEPSC_jSM_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %36, i32 %32, %"struct.WTF::KeyValuePair"* %1) #6
  ret %"struct.WTF::KeyValuePair"* %37
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIPKN5blink16FontPlatformDataENS_12KeyValuePairIS4_NSt3__14pairI13scoped_refptrINS1_14SimpleFontDataEEjEEEENS_24KeyValuePairKeyExtractorENS1_20FontDataCacheKeyHashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSG_ISB_EEEESH_NS_18PartitionAllocatorEE8RehashToEPSC_jSM_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*, i32, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable", align 8
  %6 = bitcast %"class.WTF::HashTable"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #6
  %7 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair"* %1, %"struct.WTF::KeyValuePair"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.WTF::KeyValuePair"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %15, align 8
  %23 = ptrtoint %"struct.WTF::KeyValuePair"* %22 to i64
  br label %72

24:                                               ; preds = %120
  %25 = bitcast %"class.WTF::HashTable"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %121, %24 ]
  %33 = phi %"struct.WTF::KeyValuePair"* [ null, %16 ], [ %124, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %122, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = inttoptr i64 %32 to %"struct.WTF::KeyValuePair"*
  %36 = icmp eq i64 %32, 0
  br i1 %36, label %68, label %37

37:                                               ; preds = %28
  %38 = icmp eq i32 %34, 0
  br i1 %38, label %66, label %39

39:                                               ; preds = %37
  %40 = zext i32 %34 to i64
  br label %41

41:                                               ; preds = %63, %39
  %42 = phi i64 [ 0, %39 ], [ %64, %63 ]
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %35, i64 %42, i32 0
  %44 = load %"class.blink::FontPlatformData"*, %"class.blink::FontPlatformData"** %43, align 8
  %45 = icmp eq %"class.blink::FontPlatformData"* %44, inttoptr (i64 -1 to %"class.blink::FontPlatformData"*)
  br i1 %45, label %63, label %46

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %35, i64 %42, i32 1, i32 0, i32 0
  %48 = load %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %47, align 8
  %49 = icmp eq %"class.blink::SimpleFontData"* %48, null
  br i1 %49, label %63, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %48, i64 0, i32 0, i32 1, i32 0
  %52 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %51, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %52) #6
  %53 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %51, i64 0, i32 0, i32 0
  %54 = load i32, i32* %53, align 4
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %63

56:                                               ; preds = %50
  %57 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %51, i64 -2
  %58 = bitcast %"class.base::RefCounted"* %57 to %"class.blink::FontData"*
  %59 = bitcast %"class.base::RefCounted"* %57 to void (%"class.blink::FontData"*)***
  %60 = load void (%"class.blink::FontData"*)**, void (%"class.blink::FontData"*)*** %59, align 8
  %61 = getelementptr inbounds void (%"class.blink::FontData"*)*, void (%"class.blink::FontData"*)** %60, i64 1
  %62 = load void (%"class.blink::FontData"*)*, void (%"class.blink::FontData"*)** %61, align 8
  call void %62(%"class.blink::FontData"* nonnull %58) #6
  br label %63

63:                                               ; preds = %56, %50, %46, %41
  %64 = add nuw nsw i64 %42, 1
  %65 = icmp eq i64 %64, %40
  br i1 %65, label %66, label %41

66:                                               ; preds = %63, %37
  %67 = inttoptr i64 %32 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %67) #6
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %68

68:                                               ; preds = %28, %66
  %69 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %70 = load i32, i32* %69, align 8
  %71 = and i32 %70, -2147483648
  store i32 %71, i32* %69, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #6
  ret %"struct.WTF::KeyValuePair"* %33

72:                                               ; preds = %21, %120
  %73 = phi i64 [ %121, %120 ], [ %23, %21 ]
  %74 = phi i32 [ %122, %120 ], [ %13, %21 ]
  %75 = phi %"struct.WTF::KeyValuePair"* [ %123, %120 ], [ %22, %21 ]
  %76 = phi %"struct.WTF::KeyValuePair"* [ %124, %120 ], [ null, %21 ]
  %77 = phi i32 [ %125, %120 ], [ 0, %21 ]
  %78 = zext i32 %77 to i64
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %75, i64 %78
  %80 = bitcast %"struct.WTF::KeyValuePair"* %79 to i64*
  %81 = load i64, i64* %80, align 8
  switch i64 %81, label %82 [
    i64 -1, label %120
    i64 0, label %120
  ]

82:                                               ; preds = %72
  %83 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %79, i64 0, i32 0
  %84 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIPKN5blink16FontPlatformDataENS_12KeyValuePairIS4_NSt3__14pairI13scoped_refptrINS1_14SimpleFontDataEEjEEEENS_24KeyValuePairKeyExtractorENS1_20FontDataCacheKeyHashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSG_ISB_EEEESH_NS_18PartitionAllocatorEE16LookupForWritingERKS4_(%"class.WTF::HashTable"* nonnull %5, %"class.blink::FontPlatformData"** dereferenceable(8) %83) #6
  %85 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %84, 0
  %86 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %85, i64 0, i32 1, i32 0, i32 0
  %87 = load %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %86, align 8
  %88 = icmp eq %"class.blink::SimpleFontData"* %87, null
  br i1 %88, label %102, label %89

89:                                               ; preds = %82
  %90 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %87, i64 0, i32 0, i32 1, i32 0
  %91 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %90, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %91) #6
  %92 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %90, i64 0, i32 0, i32 0
  %93 = load i32, i32* %92, align 4
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %95, label %102

95:                                               ; preds = %89
  %96 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %90, i64 -2
  %97 = bitcast %"class.base::RefCounted"* %96 to %"class.blink::FontData"*
  %98 = bitcast %"class.base::RefCounted"* %96 to void (%"class.blink::FontData"*)***
  %99 = load void (%"class.blink::FontData"*)**, void (%"class.blink::FontData"*)*** %98, align 8
  %100 = getelementptr inbounds void (%"class.blink::FontData"*)*, void (%"class.blink::FontData"*)** %99, i64 1
  %101 = load void (%"class.blink::FontData"*)*, void (%"class.blink::FontData"*)** %100, align 8
  call void %101(%"class.blink::FontData"* nonnull %97) #6
  br label %102

102:                                              ; preds = %82, %89, %95
  %103 = load i64, i64* %80, align 8
  %104 = bitcast %"struct.WTF::KeyValuePair"* %85 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %85, i64 0, i32 1
  %106 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %75, i64 %78, i32 1
  %107 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %106, i64 0, i32 0, i32 0
  %108 = bitcast %"struct.std::__1::pair"* %106 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %"struct.std::__1::pair"* %105 to i64*
  store i64 %109, i64* %110, align 8
  store %"class.blink::SimpleFontData"* null, %"class.blink::SimpleFontData"** %107, align 8
  %111 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %85, i64 0, i32 1, i32 1
  %112 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %75, i64 %78, i32 1, i32 1
  %113 = load i32, i32* %112, align 8
  store i32 %113, i32* %111, align 8
  %114 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %15, align 8
  %115 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %114, i64 %78
  %116 = icmp eq %"struct.WTF::KeyValuePair"* %115, %3
  %117 = select i1 %116, %"struct.WTF::KeyValuePair"* %85, %"struct.WTF::KeyValuePair"* %76
  %118 = load i32, i32* %12, align 8
  %119 = ptrtoint %"struct.WTF::KeyValuePair"* %114 to i64
  br label %120

120:                                              ; preds = %72, %72, %102
  %121 = phi i64 [ %73, %72 ], [ %119, %102 ], [ %73, %72 ]
  %122 = phi i32 [ %74, %72 ], [ %118, %102 ], [ %74, %72 ]
  %123 = phi %"struct.WTF::KeyValuePair"* [ %75, %72 ], [ %114, %102 ], [ %75, %72 ]
  %124 = phi %"struct.WTF::KeyValuePair"* [ %76, %72 ], [ %117, %102 ], [ %76, %72 ]
  %125 = add i32 %77, 1
  %126 = icmp eq i32 %125, %122
  br i1 %126, label %24, label %72
}

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIPKN5blink16FontPlatformDataENS_12KeyValuePairIS4_NSt3__14pairI13scoped_refptrINS1_14SimpleFontDataEEjEEEENS_24KeyValuePairKeyExtractorENS1_20FontDataCacheKeyHashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSG_ISB_EEEESH_NS_18PartitionAllocatorEE16LookupForWritingERKS4_(%"class.WTF::HashTable"*, %"class.blink::FontPlatformData"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = load %"class.blink::FontPlatformData"*, %"class.blink::FontPlatformData"** %1, align 8
  %10 = tail call i32 @_ZNK5blink16FontPlatformData7GetHashEv(%"class.blink::FontPlatformData"* %9) #6
  %11 = and i32 %10, %7
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %12
  %14 = ptrtoint %"struct.WTF::KeyValuePair"* %13 to i64
  %15 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %13, i64 0, i32 0
  %16 = load %"class.blink::FontPlatformData"*, %"class.blink::FontPlatformData"** %15, align 8
  %17 = icmp eq %"class.blink::FontPlatformData"* %16, null
  br i1 %17, label %35, label %18

18:                                               ; preds = %2
  %19 = xor i32 %10, -1
  %20 = lshr i32 %10, 23
  %21 = add i32 %20, %19
  %22 = shl i32 %21, 12
  %23 = xor i32 %22, %21
  %24 = lshr i32 %23, 7
  %25 = xor i32 %24, %23
  %26 = shl i32 %25, 2
  %27 = xor i32 %26, %25
  %28 = lshr i32 %27, 20
  %29 = xor i32 %28, %27
  %30 = or i32 %29, 1
  %31 = zext i32 %30 to i64
  br label %41

32:                                               ; preds = %62
  %33 = ptrtoint %"struct.WTF::KeyValuePair"* %70 to i64
  %34 = inttoptr i64 %65 to %"struct.WTF::KeyValuePair"*
  br label %35

35:                                               ; preds = %32, %2
  %36 = phi i64 [ %33, %32 ], [ %14, %2 ]
  %37 = phi %"struct.WTF::KeyValuePair"* [ %34, %32 ], [ null, %2 ]
  %38 = icmp eq %"struct.WTF::KeyValuePair"* %37, null
  %39 = ptrtoint %"struct.WTF::KeyValuePair"* %37 to i64
  %40 = select i1 %38, i64 %36, i64 %39
  br label %75

41:                                               ; preds = %62, %18
  %42 = phi i64 [ 0, %18 ], [ %65, %62 ]
  %43 = phi %"class.blink::FontPlatformData"* [ %16, %18 ], [ %73, %62 ]
  %44 = phi %"class.blink::FontPlatformData"** [ %15, %18 ], [ %72, %62 ]
  %45 = phi i64 [ %14, %18 ], [ %71, %62 ]
  %46 = phi i64 [ %12, %18 ], [ %69, %62 ]
  %47 = phi i64 [ 0, %18 ], [ %67, %62 ]
  %48 = load %"class.blink::FontPlatformData"*, %"class.blink::FontPlatformData"** %1, align 8
  %49 = icmp eq %"class.blink::FontPlatformData"* %43, inttoptr (i64 -1 to %"class.blink::FontPlatformData"*)
  %50 = icmp eq %"class.blink::FontPlatformData"* %48, inttoptr (i64 -1 to %"class.blink::FontPlatformData"*)
  %51 = or i1 %49, %50
  br i1 %51, label %60, label %52

52:                                               ; preds = %41
  %53 = icmp eq %"class.blink::FontPlatformData"* %48, null
  br i1 %53, label %54, label %56

54:                                               ; preds = %52
  %55 = icmp eq %"class.blink::FontPlatformData"* %43, null
  br i1 %55, label %75, label %62

56:                                               ; preds = %52
  %57 = tail call zeroext i1 @_ZNK5blink16FontPlatformDataeqERKS0_(%"class.blink::FontPlatformData"* nonnull %43, %"class.blink::FontPlatformData"* nonnull dereferenceable(72) %48) #6
  br i1 %57, label %75, label %58

58:                                               ; preds = %56
  %59 = load %"class.blink::FontPlatformData"*, %"class.blink::FontPlatformData"** %44, align 8
  br label %62

60:                                               ; preds = %41
  %61 = and i1 %49, %50
  br i1 %61, label %75, label %62

62:                                               ; preds = %60, %58, %54
  %63 = phi %"class.blink::FontPlatformData"* [ %59, %58 ], [ %43, %54 ], [ %43, %60 ]
  %64 = icmp eq %"class.blink::FontPlatformData"* %63, inttoptr (i64 -1 to %"class.blink::FontPlatformData"*)
  %65 = select i1 %64, i64 %45, i64 %42
  %66 = icmp eq i64 %47, 0
  %67 = select i1 %66, i64 %31, i64 %47
  %68 = add i64 %67, %46
  %69 = and i64 %68, %8
  %70 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %69
  %71 = ptrtoint %"struct.WTF::KeyValuePair"* %70 to i64
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %70, i64 0, i32 0
  %73 = load %"class.blink::FontPlatformData"*, %"class.blink::FontPlatformData"** %72, align 8
  %74 = icmp eq %"class.blink::FontPlatformData"* %73, null
  br i1 %74, label %32, label %41

75:                                               ; preds = %54, %56, %60, %35
  %76 = phi i64 [ %40, %35 ], [ %45, %60 ], [ %45, %56 ], [ %45, %54 ]
  %77 = phi i8 [ 0, %35 ], [ 1, %60 ], [ 1, %56 ], [ 1, %54 ]
  %78 = inttoptr i64 %76 to %"struct.WTF::KeyValuePair"*
  %79 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %78, 0
  %80 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %79, i8 %77, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %80
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"* } @_ZN3WTF22VectorBackedLinkedListI13scoped_refptrIN5blink14SimpleFontDataEENS_18PartitionAllocatorEE6insertIRS4_EENS_30VectorBackedLinkedListIteratorIS6_EENS_35VectorBackedLinkedListConstIteratorIS6_EEOT_(%"class.WTF::VectorBackedLinkedList"*, %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"*, %class.scoped_refptr* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::VectorBackedLinkedListNode", align 8
  %6 = ptrtoint %"class.WTF::VectorBackedLinkedListNode"* %1 to i64
  %7 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %2, i64 0, i32 0
  %8 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeI13scoped_refptrIN5blink14SimpleFontDataEENS_18PartitionAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector"* %7, i32 0) #6
  %9 = ptrtoint %"class.WTF::VectorBackedLinkedListNode"* %8 to i64
  %10 = sub i64 %6, %9
  %11 = lshr exact i64 %10, 4
  %12 = trunc i64 %11 to i32
  %13 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %0, i64 0, i32 0
  %14 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeI13scoped_refptrIN5blink14SimpleFontDataEENS_18PartitionAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector"* %13, i32 %12) #6
  %15 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %14, i64 0, i32 0
  %16 = load i32, i32* %15, align 8
  %17 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %0, i64 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %71

20:                                               ; preds = %4
  %21 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = bitcast %"class.WTF::VectorBackedLinkedListNode"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23) #6
  %24 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %5, i64 0, i32 0
  store i32 %16, i32* %24, align 8
  %25 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %5, i64 0, i32 1
  store i32 %12, i32* %25, align 4
  %26 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %3, i64 0, i32 0
  %27 = load %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %26, align 8
  %28 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %5, i64 0, i32 2, i32 0
  store %"class.blink::SimpleFontData"* %27, %"class.blink::SimpleFontData"** %28, align 8
  %29 = icmp eq %"class.blink::SimpleFontData"* %27, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %20
  %31 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %27, i64 0, i32 0, i32 1, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %31) #6
  %32 = load i32, i32* %21, align 4
  br label %33

33:                                               ; preds = %20, %30
  %34 = phi i32 [ %22, %20 ], [ %32, %30 ]
  %35 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %36 = load i32, i32* %35, align 8
  %37 = icmp eq i32 %34, %36
  br i1 %37, label %54, label %38, !prof !14

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %40 = load %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedListNode"** %39, align 8
  %41 = zext i32 %34 to i64
  %42 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %40, i64 %41
  %43 = bitcast %"class.WTF::VectorBackedLinkedListNode"* %5 to i64*
  %44 = bitcast %"class.WTF::VectorBackedLinkedListNode"* %42 to i64*
  %45 = load i64, i64* %43, align 8
  store i64 %45, i64* %44, align 8
  %46 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %40, i64 %41, i32 2
  %47 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %5, i64 0, i32 2
  %48 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %47, i64 0, i32 0
  %49 = bitcast %class.scoped_refptr* %47 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = bitcast %class.scoped_refptr* %46 to i64*
  store i64 %50, i64* %51, align 8
  store %"class.blink::SimpleFontData"* null, %"class.blink::SimpleFontData"** %48, align 8
  %52 = load i32, i32* %21, align 4
  %53 = add i32 %52, 1
  store i32 %53, i32* %21, align 4
  br label %70

54:                                               ; preds = %33
  call void @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeI13scoped_refptrIN5blink14SimpleFontDataEENS_18PartitionAllocatorEEELj0ES6_E14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector"* %13, %"class.WTF::VectorBackedLinkedListNode"* nonnull dereferenceable(16) %5) #6
  %55 = load %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %28, align 8
  %56 = icmp eq %"class.blink::SimpleFontData"* %55, null
  br i1 %56, label %70, label %57

57:                                               ; preds = %54
  %58 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %55, i64 0, i32 0, i32 1, i32 0
  %59 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %58, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %59) #6
  %60 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %58, i64 0, i32 0, i32 0
  %61 = load i32, i32* %60, align 4
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %70

63:                                               ; preds = %57
  %64 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %58, i64 -2
  %65 = bitcast %"class.base::RefCounted"* %64 to %"class.blink::FontData"*
  %66 = bitcast %"class.base::RefCounted"* %64 to void (%"class.blink::FontData"*)***
  %67 = load void (%"class.blink::FontData"*)**, void (%"class.blink::FontData"*)*** %66, align 8
  %68 = getelementptr inbounds void (%"class.blink::FontData"*)*, void (%"class.blink::FontData"*)** %67, i64 1
  %69 = load void (%"class.blink::FontData"*)*, void (%"class.blink::FontData"*)** %68, align 8
  call void %69(%"class.blink::FontData"* nonnull %65) #6
  br label %70

70:                                               ; preds = %38, %54, %57, %63
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #6
  br label %104

71:                                               ; preds = %4
  %72 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeI13scoped_refptrIN5blink14SimpleFontDataEENS_18PartitionAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector"* %13, i32 %18) #6
  %73 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %72, i64 0, i32 1
  %74 = load i32, i32* %73, align 4
  store i32 %74, i32* %17, align 8
  %75 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %3, i64 0, i32 0
  %76 = load %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %75, align 8
  %77 = ptrtoint %"class.blink::SimpleFontData"* %76 to i64
  %78 = icmp eq %"class.blink::SimpleFontData"* %76, null
  br i1 %78, label %81, label %79

79:                                               ; preds = %71
  %80 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %76, i64 0, i32 0, i32 1, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %80) #6
  br label %81

81:                                               ; preds = %71, %79
  %82 = bitcast %"class.WTF::VectorBackedLinkedListNode"* %72 to i64*
  %83 = shl i64 %10, 28
  %84 = zext i32 %16 to i64
  %85 = or i64 %83, %84
  store i64 %85, i64* %82, align 8
  %86 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %72, i64 0, i32 2
  %87 = bitcast %class.scoped_refptr* %86 to i64*
  %88 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %86, i64 0, i32 0
  %89 = load %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %88, align 8
  store i64 %77, i64* %87, align 8
  %90 = icmp eq %"class.blink::SimpleFontData"* %89, null
  br i1 %90, label %104, label %91

91:                                               ; preds = %81
  %92 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %89, i64 0, i32 0, i32 1, i32 0
  %93 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %92, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %93) #6
  %94 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %92, i64 0, i32 0, i32 0
  %95 = load i32, i32* %94, align 4
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %97, label %104

97:                                               ; preds = %91
  %98 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %92, i64 -2
  %99 = bitcast %"class.base::RefCounted"* %98 to %"class.blink::FontData"*
  %100 = bitcast %"class.base::RefCounted"* %98 to void (%"class.blink::FontData"*)***
  %101 = load void (%"class.blink::FontData"*)**, void (%"class.blink::FontData"*)*** %100, align 8
  %102 = getelementptr inbounds void (%"class.blink::FontData"*)*, void (%"class.blink::FontData"*)** %101, i64 1
  %103 = load void (%"class.blink::FontData"*)*, void (%"class.blink::FontData"*)** %102, align 8
  tail call void %103(%"class.blink::FontData"* nonnull %99) #6
  br label %104

104:                                              ; preds = %81, %91, %97, %70
  %105 = phi i32 [ %22, %70 ], [ %18, %97 ], [ %18, %91 ], [ %18, %81 ]
  %106 = call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeI13scoped_refptrIN5blink14SimpleFontDataEENS_18PartitionAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector"* %13, i32 %16) #6
  %107 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %106, i64 0, i32 1
  store i32 %105, i32* %107, align 4
  %108 = call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeI13scoped_refptrIN5blink14SimpleFontDataEENS_18PartitionAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector"* %13, i32 %12) #6
  %109 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %108, i64 0, i32 0
  store i32 %105, i32* %109, align 8
  %110 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %0, i64 0, i32 2
  %111 = load i32, i32* %110, align 4
  %112 = add i32 %111, 1
  store i32 %112, i32* %110, align 4
  %113 = call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeI13scoped_refptrIN5blink14SimpleFontDataEENS_18PartitionAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector"* %13, i32 %105) #6
  %114 = insertvalue { %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"* } undef, %"class.WTF::VectorBackedLinkedListNode"* %113, 0
  %115 = insertvalue { %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"* } %114, %"class.WTF::VectorBackedLinkedList"* %0, 1
  ret { %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"* } %115
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.19"*, i8 } @_ZN3WTF9HashTableI13scoped_refptrIN5blink14SimpleFontDataEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10RefPtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERS4_RKjEENS_18HashTableAddResultISG_S6_EEOT0_OT1_(%"class.WTF::HashTable.16"*, %class.scoped_refptr* dereferenceable(8), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.16", %"class.WTF::HashTable.16"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.19"*, %"struct.WTF::KeyValuePair.19"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.19"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.19"* @_ZN3WTF9HashTableI13scoped_refptrIN5blink14SimpleFontDataEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10RefPtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS_18PartitionAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.16"* %0, %"struct.WTF::KeyValuePair.19"* null)
  %9 = load %"struct.WTF::KeyValuePair.19"*, %"struct.WTF::KeyValuePair.19"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.19"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.16", %"class.WTF::HashTable.16"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %class.scoped_refptr* %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair.19", %"struct.WTF::KeyValuePair.19"* %11, i64 %38
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.19", %"struct.WTF::KeyValuePair.19"* %39, i64 0, i32 0, i32 0
  %41 = load %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %40, align 8
  %42 = icmp eq %"class.blink::SimpleFontData"* %41, null
  %43 = inttoptr i64 %17 to %"class.blink::SimpleFontData"*
  br i1 %42, label %90, label %44

44:                                               ; preds = %10
  %45 = xor i32 %36, -1
  %46 = lshr i32 %36, 23
  %47 = add i32 %46, %45
  %48 = shl i32 %47, 12
  %49 = xor i32 %48, %47
  %50 = lshr i32 %49, 7
  %51 = xor i32 %50, %49
  %52 = shl i32 %51, 2
  %53 = xor i32 %52, %51
  %54 = lshr i32 %53, 20
  %55 = xor i32 %54, %53
  %56 = or i32 %55, 1
  %57 = zext i32 %56 to i64
  br label %58

58:                                               ; preds = %44, %65
  %59 = phi %"class.blink::SimpleFontData"* [ %41, %44 ], [ %76, %65 ]
  %60 = phi %"struct.WTF::KeyValuePair.19"* [ %39, %44 ], [ %74, %65 ]
  %61 = phi %"struct.WTF::KeyValuePair.19"* [ null, %44 ], [ %69, %65 ]
  %62 = phi i64 [ %38, %44 ], [ %73, %65 ]
  %63 = phi i64 [ 0, %44 ], [ %71, %65 ]
  %64 = icmp eq %"class.blink::SimpleFontData"* %59, %43
  br i1 %64, label %129, label %65

65:                                               ; preds = %58
  %66 = bitcast %"struct.WTF::KeyValuePair.19"* %60 to i8**
  %67 = load i8*, i8** %66, align 8
  %68 = icmp eq i8* %67, inttoptr (i64 -1 to i8*)
  %69 = select i1 %68, %"struct.WTF::KeyValuePair.19"* %60, %"struct.WTF::KeyValuePair.19"* %61
  %70 = icmp eq i64 %63, 0
  %71 = select i1 %70, i64 %57, i64 %63
  %72 = add i64 %71, %62
  %73 = and i64 %72, %15
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair.19", %"struct.WTF::KeyValuePair.19"* %11, i64 %73
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair.19", %"struct.WTF::KeyValuePair.19"* %74, i64 0, i32 0, i32 0
  %76 = load %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %75, align 8
  %77 = icmp eq %"class.blink::SimpleFontData"* %76, null
  br i1 %77, label %78, label %58

78:                                               ; preds = %65
  %79 = icmp eq %"struct.WTF::KeyValuePair.19"* %69, null
  br i1 %79, label %90, label %80

80:                                               ; preds = %78
  %81 = bitcast %"struct.WTF::KeyValuePair.19"* %69 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %81, i8 0, i64 16, i1 false) #6
  %82 = getelementptr inbounds %"class.WTF::HashTable.16", %"class.WTF::HashTable.16"* %0, i64 0, i32 3
  %83 = load i32, i32* %82, align 8
  %84 = add i32 %83, 2147483647
  %85 = and i32 %84, 2147483647
  %86 = and i32 %83, -2147483648
  %87 = or i32 %85, %86
  store i32 %87, i32* %82, align 8
  %88 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %1, i64 0, i32 0
  %89 = load %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %88, align 8
  br label %90

90:                                               ; preds = %10, %78, %80
  %91 = phi %"class.blink::SimpleFontData"* [ %89, %80 ], [ %43, %78 ], [ %43, %10 ]
  %92 = phi %"struct.WTF::KeyValuePair.19"* [ %69, %80 ], [ %74, %78 ], [ %39, %10 ]
  %93 = icmp eq %"class.blink::SimpleFontData"* %91, null
  br i1 %93, label %96, label %94

94:                                               ; preds = %90
  %95 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %91, i64 0, i32 0, i32 1, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %95) #6
  br label %96

96:                                               ; preds = %94, %90
  %97 = ptrtoint %"class.blink::SimpleFontData"* %91 to i64
  %98 = bitcast %"struct.WTF::KeyValuePair.19"* %92 to i64*
  %99 = getelementptr inbounds %"struct.WTF::KeyValuePair.19", %"struct.WTF::KeyValuePair.19"* %92, i64 0, i32 0, i32 0
  %100 = load %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %99, align 8
  store i64 %97, i64* %98, align 8
  %101 = icmp eq %"class.blink::SimpleFontData"* %100, null
  br i1 %101, label %115, label %102

102:                                              ; preds = %96
  %103 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %100, i64 0, i32 0, i32 1, i32 0
  %104 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %103, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %104) #6
  %105 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %103, i64 0, i32 0, i32 0
  %106 = load i32, i32* %105, align 4
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %108, label %115

108:                                              ; preds = %102
  %109 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %103, i64 -2
  %110 = bitcast %"class.base::RefCounted"* %109 to %"class.blink::FontData"*
  %111 = bitcast %"class.base::RefCounted"* %109 to void (%"class.blink::FontData"*)***
  %112 = load void (%"class.blink::FontData"*)**, void (%"class.blink::FontData"*)*** %111, align 8
  %113 = getelementptr inbounds void (%"class.blink::FontData"*)*, void (%"class.blink::FontData"*)** %112, i64 1
  %114 = load void (%"class.blink::FontData"*)*, void (%"class.blink::FontData"*)** %113, align 8
  tail call void %114(%"class.blink::FontData"* nonnull %110) #6
  br label %115

115:                                              ; preds = %96, %102, %108
  %116 = getelementptr inbounds %"struct.WTF::KeyValuePair.19", %"struct.WTF::KeyValuePair.19"* %92, i64 0, i32 1
  %117 = load i32, i32* %2, align 4
  store i32 %117, i32* %116, align 4
  %118 = getelementptr inbounds %"class.WTF::HashTable.16", %"class.WTF::HashTable.16"* %0, i64 0, i32 2
  %119 = load i32, i32* %118, align 4
  %120 = add i32 %119, 1
  store i32 %120, i32* %118, align 4
  %121 = getelementptr inbounds %"class.WTF::HashTable.16", %"class.WTF::HashTable.16"* %0, i64 0, i32 3
  %122 = load i32, i32* %121, align 8
  %123 = add i32 %122, %120
  %124 = shl i32 %123, 1
  %125 = load i32, i32* %12, align 8
  %126 = icmp ult i32 %124, %125
  br i1 %126, label %129, label %127

127:                                              ; preds = %115
  %128 = tail call %"struct.WTF::KeyValuePair.19"* @_ZN3WTF9HashTableI13scoped_refptrIN5blink14SimpleFontDataEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10RefPtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS_18PartitionAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.16"* %0, %"struct.WTF::KeyValuePair.19"* %92)
  br label %129

129:                                              ; preds = %58, %115, %127
  %130 = phi i8 [ 1, %115 ], [ 1, %127 ], [ 0, %58 ]
  %131 = phi %"struct.WTF::KeyValuePair.19"* [ %92, %115 ], [ %128, %127 ], [ %60, %58 ]
  %132 = insertvalue { %"struct.WTF::KeyValuePair.19"*, i8 } undef, %"struct.WTF::KeyValuePair.19"* %131, 0
  %133 = insertvalue { %"struct.WTF::KeyValuePair.19"*, i8 } %132, i8 %130, 1
  ret { %"struct.WTF::KeyValuePair.19"*, i8 } %133
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.19"* @_ZN3WTF9HashTableI13scoped_refptrIN5blink14SimpleFontDataEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10RefPtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS_18PartitionAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.16"*, %"struct.WTF::KeyValuePair.19"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.16", %"class.WTF::HashTable.16"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.16", %"class.WTF::HashTable.16"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #6
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #6
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #6
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* %22, i8* %23) #6
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #6
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.3, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #6
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #6
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #6
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 4
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([117 x i8], [117 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairI13scoped_refptrIN5blink14SimpleFontDataEEjEEEEPKcv, i64 0, i64 0)) #6
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #6
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair.19"*
  %37 = call %"struct.WTF::KeyValuePair.19"* @_ZN3WTF9HashTableI13scoped_refptrIN5blink14SimpleFontDataEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10RefPtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS_18PartitionAllocatorEE8RehashToEPS6_jSH_(%"class.WTF::HashTable.16"* %0, %"struct.WTF::KeyValuePair.19"* %36, i32 %32, %"struct.WTF::KeyValuePair.19"* %1) #6
  ret %"struct.WTF::KeyValuePair.19"* %37
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.19"* @_ZN3WTF9HashTableI13scoped_refptrIN5blink14SimpleFontDataEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10RefPtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS_18PartitionAllocatorEE8RehashToEPS6_jSH_(%"class.WTF::HashTable.16"*, %"struct.WTF::KeyValuePair.19"*, i32, %"struct.WTF::KeyValuePair.19"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.16", align 8
  %6 = bitcast %"class.WTF::HashTable.16"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #6
  %7 = getelementptr inbounds %"class.WTF::HashTable.16", %"class.WTF::HashTable.16"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.16", %"class.WTF::HashTable.16"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.16", %"class.WTF::HashTable.16"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.16", %"class.WTF::HashTable.16"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.16"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.19"* %1, %"struct.WTF::KeyValuePair.19"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.16", %"class.WTF::HashTable.16"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable.16", %"class.WTF::HashTable.16"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.WTF::KeyValuePair.19"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable.16"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable.16"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"struct.WTF::KeyValuePair.19"*, %"struct.WTF::KeyValuePair.19"** %15, align 8
  %23 = ptrtoint %"struct.WTF::KeyValuePair.19"* %22 to i64
  br label %68

24:                                               ; preds = %111
  %25 = bitcast %"class.WTF::HashTable.16"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable.16"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %112, %24 ]
  %33 = phi %"struct.WTF::KeyValuePair.19"* [ null, %16 ], [ %115, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %113, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = inttoptr i64 %32 to %"struct.WTF::KeyValuePair.19"*
  %36 = icmp eq i64 %32, 0
  br i1 %36, label %64, label %37

37:                                               ; preds = %28
  %38 = icmp eq i32 %34, 0
  br i1 %38, label %62, label %39

39:                                               ; preds = %37
  %40 = zext i32 %34 to i64
  br label %41

41:                                               ; preds = %59, %39
  %42 = phi i64 [ 0, %39 ], [ %60, %59 ]
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair.19", %"struct.WTF::KeyValuePair.19"* %35, i64 %42
  %44 = bitcast %"struct.WTF::KeyValuePair.19"* %43 to i8**
  %45 = load i8*, i8** %44, align 8
  %46 = ptrtoint i8* %45 to i64
  switch i64 %46, label %47 [
    i64 -1, label %59
    i64 0, label %59
  ]

47:                                               ; preds = %41
  %48 = getelementptr inbounds i8, i8* %45, i64 8
  %49 = bitcast i8* %48 to %"class.base::subtle::RefCountedBase"*
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %49) #6
  %50 = bitcast i8* %48 to i32*
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %59

53:                                               ; preds = %47
  %54 = bitcast i8* %45 to %"class.blink::FontData"*
  %55 = bitcast i8* %45 to void (%"class.blink::FontData"*)***
  %56 = load void (%"class.blink::FontData"*)**, void (%"class.blink::FontData"*)*** %55, align 8
  %57 = getelementptr inbounds void (%"class.blink::FontData"*)*, void (%"class.blink::FontData"*)** %56, i64 1
  %58 = load void (%"class.blink::FontData"*)*, void (%"class.blink::FontData"*)** %57, align 8
  call void %58(%"class.blink::FontData"* nonnull %54) #6
  br label %59

59:                                               ; preds = %53, %47, %41, %41
  %60 = add nuw nsw i64 %42, 1
  %61 = icmp eq i64 %60, %40
  br i1 %61, label %62, label %41

62:                                               ; preds = %59, %37
  %63 = inttoptr i64 %32 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %63) #6
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %64

64:                                               ; preds = %28, %62
  %65 = getelementptr inbounds %"class.WTF::HashTable.16", %"class.WTF::HashTable.16"* %0, i64 0, i32 3
  %66 = load i32, i32* %65, align 8
  %67 = and i32 %66, -2147483648
  store i32 %67, i32* %65, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #6
  ret %"struct.WTF::KeyValuePair.19"* %33

68:                                               ; preds = %21, %111
  %69 = phi i64 [ %112, %111 ], [ %23, %21 ]
  %70 = phi i32 [ %113, %111 ], [ %13, %21 ]
  %71 = phi %"struct.WTF::KeyValuePair.19"* [ %114, %111 ], [ %22, %21 ]
  %72 = phi %"struct.WTF::KeyValuePair.19"* [ %115, %111 ], [ null, %21 ]
  %73 = phi i32 [ %116, %111 ], [ 0, %21 ]
  %74 = zext i32 %73 to i64
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair.19", %"struct.WTF::KeyValuePair.19"* %71, i64 %74
  %76 = getelementptr inbounds %"struct.WTF::KeyValuePair.19", %"struct.WTF::KeyValuePair.19"* %75, i64 0, i32 0, i32 0
  %77 = bitcast %"struct.WTF::KeyValuePair.19"* %75 to i64*
  %78 = load i64, i64* %77, align 8
  switch i64 %78, label %79 [
    i64 -1, label %111
    i64 0, label %111
  ]

79:                                               ; preds = %68
  %80 = getelementptr inbounds %"struct.WTF::KeyValuePair.19", %"struct.WTF::KeyValuePair.19"* %75, i64 0, i32 0
  %81 = call { %"struct.WTF::KeyValuePair.19"*, i8 } @_ZN3WTF9HashTableI13scoped_refptrIN5blink14SimpleFontDataEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10RefPtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS_18PartitionAllocatorEE16LookupForWritingERKS4_(%"class.WTF::HashTable.16"* nonnull %5, %class.scoped_refptr* dereferenceable(8) %80) #6
  %82 = extractvalue { %"struct.WTF::KeyValuePair.19"*, i8 } %81, 0
  %83 = getelementptr inbounds %"struct.WTF::KeyValuePair.19", %"struct.WTF::KeyValuePair.19"* %82, i64 0, i32 0, i32 0
  %84 = load %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %83, align 8
  %85 = icmp eq %"class.blink::SimpleFontData"* %84, null
  br i1 %85, label %99, label %86

86:                                               ; preds = %79
  %87 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %84, i64 0, i32 0, i32 1, i32 0
  %88 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %87, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %88) #6
  %89 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %87, i64 0, i32 0, i32 0
  %90 = load i32, i32* %89, align 4
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %99

92:                                               ; preds = %86
  %93 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %87, i64 -2
  %94 = bitcast %"class.base::RefCounted"* %93 to %"class.blink::FontData"*
  %95 = bitcast %"class.base::RefCounted"* %93 to void (%"class.blink::FontData"*)***
  %96 = load void (%"class.blink::FontData"*)**, void (%"class.blink::FontData"*)*** %95, align 8
  %97 = getelementptr inbounds void (%"class.blink::FontData"*)*, void (%"class.blink::FontData"*)** %96, i64 1
  %98 = load void (%"class.blink::FontData"*)*, void (%"class.blink::FontData"*)** %97, align 8
  call void %98(%"class.blink::FontData"* nonnull %94) #6
  br label %99

99:                                               ; preds = %79, %86, %92
  %100 = load i64, i64* %77, align 8
  %101 = bitcast %"struct.WTF::KeyValuePair.19"* %82 to i64*
  store i64 %100, i64* %101, align 8
  store %"class.blink::SimpleFontData"* null, %"class.blink::SimpleFontData"** %76, align 8
  %102 = getelementptr inbounds %"struct.WTF::KeyValuePair.19", %"struct.WTF::KeyValuePair.19"* %82, i64 0, i32 1
  %103 = getelementptr inbounds %"struct.WTF::KeyValuePair.19", %"struct.WTF::KeyValuePair.19"* %71, i64 %74, i32 1
  %104 = load i32, i32* %103, align 8
  store i32 %104, i32* %102, align 8
  %105 = load %"struct.WTF::KeyValuePair.19"*, %"struct.WTF::KeyValuePair.19"** %15, align 8
  %106 = getelementptr inbounds %"struct.WTF::KeyValuePair.19", %"struct.WTF::KeyValuePair.19"* %105, i64 %74
  %107 = icmp eq %"struct.WTF::KeyValuePair.19"* %106, %3
  %108 = select i1 %107, %"struct.WTF::KeyValuePair.19"* %82, %"struct.WTF::KeyValuePair.19"* %72
  %109 = load i32, i32* %12, align 8
  %110 = ptrtoint %"struct.WTF::KeyValuePair.19"* %105 to i64
  br label %111

111:                                              ; preds = %68, %68, %99
  %112 = phi i64 [ %69, %68 ], [ %110, %99 ], [ %69, %68 ]
  %113 = phi i32 [ %70, %68 ], [ %109, %99 ], [ %70, %68 ]
  %114 = phi %"struct.WTF::KeyValuePair.19"* [ %71, %68 ], [ %105, %99 ], [ %71, %68 ]
  %115 = phi %"struct.WTF::KeyValuePair.19"* [ %72, %68 ], [ %108, %99 ], [ %72, %68 ]
  %116 = add i32 %73, 1
  %117 = icmp eq i32 %116, %113
  br i1 %117, label %24, label %68
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.19"*, i8 } @_ZN3WTF9HashTableI13scoped_refptrIN5blink14SimpleFontDataEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10RefPtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS_18PartitionAllocatorEE16LookupForWritingERKS4_(%"class.WTF::HashTable.16"*, %class.scoped_refptr* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.16", %"class.WTF::HashTable.16"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.19"*, %"struct.WTF::KeyValuePair.19"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.16", %"class.WTF::HashTable.16"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = bitcast %class.scoped_refptr* %1 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = shl i64 %10, 32
  %12 = xor i64 %11, -1
  %13 = add i64 %10, %12
  %14 = lshr i64 %13, 22
  %15 = xor i64 %14, %13
  %16 = shl i64 %15, 13
  %17 = xor i64 %16, -1
  %18 = add i64 %15, %17
  %19 = lshr i64 %18, 8
  %20 = xor i64 %19, %18
  %21 = mul i64 %20, 9
  %22 = lshr i64 %21, 15
  %23 = xor i64 %22, %21
  %24 = shl i64 %23, 27
  %25 = xor i64 %24, -1
  %26 = add i64 %23, %25
  %27 = lshr i64 %26, 31
  %28 = xor i64 %27, %26
  %29 = trunc i64 %28 to i32
  %30 = and i32 %7, %29
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair.19", %"struct.WTF::KeyValuePair.19"* %4, i64 %31
  %33 = ptrtoint %"struct.WTF::KeyValuePair.19"* %32 to i64
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.19", %"struct.WTF::KeyValuePair.19"* %32, i64 0, i32 0, i32 0
  %35 = load %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %34, align 8
  %36 = icmp eq %"class.blink::SimpleFontData"* %35, null
  %37 = inttoptr i64 %10 to %"class.blink::SimpleFontData"*
  br i1 %36, label %55, label %38

38:                                               ; preds = %2
  %39 = xor i32 %29, -1
  %40 = lshr i32 %29, 23
  %41 = add i32 %40, %39
  %42 = shl i32 %41, 12
  %43 = xor i32 %42, %41
  %44 = lshr i32 %43, 7
  %45 = xor i32 %44, %43
  %46 = shl i32 %45, 2
  %47 = xor i32 %46, %45
  %48 = lshr i32 %47, 20
  %49 = xor i32 %48, %47
  %50 = or i32 %49, 1
  %51 = zext i32 %50 to i64
  br label %61

52:                                               ; preds = %69
  %53 = ptrtoint %"struct.WTF::KeyValuePair.19"* %78 to i64
  %54 = inttoptr i64 %73 to %"struct.WTF::KeyValuePair.19"*
  br label %55

55:                                               ; preds = %52, %2
  %56 = phi i64 [ %53, %52 ], [ %33, %2 ]
  %57 = phi %"struct.WTF::KeyValuePair.19"* [ %54, %52 ], [ null, %2 ]
  %58 = icmp eq %"struct.WTF::KeyValuePair.19"* %57, null
  %59 = ptrtoint %"struct.WTF::KeyValuePair.19"* %57 to i64
  %60 = select i1 %58, i64 %56, i64 %59
  br label %83

61:                                               ; preds = %69, %38
  %62 = phi %"class.blink::SimpleFontData"* [ %35, %38 ], [ %81, %69 ]
  %63 = phi i64 [ 0, %38 ], [ %73, %69 ]
  %64 = phi i64 [ %33, %38 ], [ %79, %69 ]
  %65 = phi %"struct.WTF::KeyValuePair.19"* [ %32, %38 ], [ %78, %69 ]
  %66 = phi i64 [ %31, %38 ], [ %77, %69 ]
  %67 = phi i64 [ 0, %38 ], [ %75, %69 ]
  %68 = icmp eq %"class.blink::SimpleFontData"* %62, %37
  br i1 %68, label %83, label %69

69:                                               ; preds = %61
  %70 = bitcast %"struct.WTF::KeyValuePair.19"* %65 to i8**
  %71 = load i8*, i8** %70, align 8
  %72 = icmp eq i8* %71, inttoptr (i64 -1 to i8*)
  %73 = select i1 %72, i64 %64, i64 %63
  %74 = icmp eq i64 %67, 0
  %75 = select i1 %74, i64 %51, i64 %67
  %76 = add i64 %75, %66
  %77 = and i64 %76, %8
  %78 = getelementptr inbounds %"struct.WTF::KeyValuePair.19", %"struct.WTF::KeyValuePair.19"* %4, i64 %77
  %79 = ptrtoint %"struct.WTF::KeyValuePair.19"* %78 to i64
  %80 = getelementptr inbounds %"struct.WTF::KeyValuePair.19", %"struct.WTF::KeyValuePair.19"* %78, i64 0, i32 0, i32 0
  %81 = load %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %80, align 8
  %82 = icmp eq %"class.blink::SimpleFontData"* %81, null
  br i1 %82, label %52, label %61

83:                                               ; preds = %61, %55
  %84 = phi i64 [ %60, %55 ], [ %64, %61 ]
  %85 = phi i8 [ 0, %55 ], [ 1, %61 ]
  %86 = inttoptr i64 %84 to %"struct.WTF::KeyValuePair.19"*
  %87 = insertvalue { %"struct.WTF::KeyValuePair.19"*, i8 } undef, %"struct.WTF::KeyValuePair.19"* %86, 0
  %88 = insertvalue { %"struct.WTF::KeyValuePair.19"*, i8 } %87, i8 %85, 1
  ret { %"struct.WTF::KeyValuePair.19"*, i8 } %88
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeI13scoped_refptrIN5blink14SimpleFontDataEENS_18PartitionAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #6
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #6
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #6
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i8* %14, i8* %15) #6
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #6
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.5, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #6
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #6
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #6
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedListNode"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %24, i64 %25
  ret %"class.WTF::VectorBackedLinkedListNode"* %26
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeI13scoped_refptrIN5blink14SimpleFontDataEENS_18PartitionAllocatorEEELj0ES6_E14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector"*, %"class.WTF::VectorBackedLinkedListNode"* dereferenceable(16)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedListNode"** %6, align 8
  %8 = icmp ugt %"class.WTF::VectorBackedLinkedListNode"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %7, i64 %10
  %12 = icmp ugt %"class.WTF::VectorBackedLinkedListNode"* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !21

24:                                               ; preds = %13
  %25 = icmp eq %"class.WTF::VectorBackedLinkedListNode"* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_26VectorBackedLinkedListNodeI13scoped_refptrIN5blink14SimpleFontDataEES0_EEEEmm(i64 %26) #6
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([142 x i8], [142 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_26VectorBackedLinkedListNodeI13scoped_refptrIN5blink14SimpleFontDataEENS_18PartitionAllocatorEEEEEPKcv, i64 0, i64 0)) #6
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 4
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"class.WTF::VectorBackedLinkedListNode"*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 4
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedListNode"** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"class.WTF::VectorBackedLinkedListNode"* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"class.WTF::VectorBackedLinkedListNode"* %38 to i8*
  br i1 %41, label %43, label %49, !prof !21

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %42, i64 %46, i1 false) #6
  %47 = bitcast %"class.WTF::Vector"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #6
  %51 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"class.WTF::VectorBackedLinkedListNode"*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"class.WTF::VectorBackedLinkedListNode"* %1 to i64
  %56 = ptrtoint %"class.WTF::VectorBackedLinkedListNode"* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 4
  %59 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !21

69:                                               ; preds = %54
  %70 = icmp eq %"class.WTF::VectorBackedLinkedListNode"* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_26VectorBackedLinkedListNodeI13scoped_refptrIN5blink14SimpleFontDataEES0_EEEEmm(i64 %71) #6
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([142 x i8], [142 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_26VectorBackedLinkedListNodeI13scoped_refptrIN5blink14SimpleFontDataEENS_18PartitionAllocatorEEEEEPKcv, i64 0, i64 0)) #6
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedListNode"** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"class.WTF::VectorBackedLinkedListNode"* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"class.WTF::VectorBackedLinkedListNode"* %78 to i8*
  br i1 %81, label %83, label %89, !prof !21

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* nonnull align 8 %82, i64 %86, i1 false) #6
  %87 = bitcast %"class.WTF::Vector"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #6
  %91 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 4
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"class.WTF::VectorBackedLinkedListNode"*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"class.WTF::VectorBackedLinkedListNode"* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"class.WTF::VectorBackedLinkedListNode"* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"class.WTF::VectorBackedLinkedListNode"* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %100, i64 %103
  %105 = bitcast %"class.WTF::VectorBackedLinkedListNode"* %101 to i64*
  %106 = bitcast %"class.WTF::VectorBackedLinkedListNode"* %104 to i64*
  %107 = load i64, i64* %105, align 8
  store i64 %107, i64* %106, align 8
  %108 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %100, i64 %103, i32 2
  %109 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %101, i64 0, i32 2
  %110 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %109, i64 0, i32 0
  %111 = bitcast %class.scoped_refptr* %109 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = bitcast %class.scoped_refptr* %108 to i64*
  store i64 %112, i64* %113, align 8
  store %"class.blink::SimpleFontData"* null, %"class.blink::SimpleFontData"** %110, align 8
  %114 = load i32, i32* %3, align 4
  %115 = add i32 %114, 1
  store i32 %115, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_26VectorBackedLinkedListNodeI13scoped_refptrIN5blink14SimpleFontDataEES0_EEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #6
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 134086656
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #6
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 134086656) #6
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.7, i64 0, i64 0), i8* %11, i8* %12) #6
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #6
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.8, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #6
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #6
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #6
  %20 = shl i64 %0, 4
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #6
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeI13scoped_refptrIN5blink14SimpleFontDataEENS_18PartitionAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #6
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #6
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #6
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i8* %14, i8* %15) #6
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #6
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.5, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #6
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #6
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #6
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedListNode"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %24, i64 %25
  ret %"class.WTF::VectorBackedLinkedListNode"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF13LinkedHashSetI13scoped_refptrIN5blink14SimpleFontDataEENS_10HashTraitsIS4_EENS_18PartitionAllocatorEE4findENS6_17RefPtrValuePeekerE(%"class.WTF::LinkedHashSet<scoped_refptr<blink::SimpleFontData>, WTF::HashTraits<scoped_refptr<blink::SimpleFontData> >, WTF::PartitionAllocator>::IteratorWrapper"* noalias sret, %"class.WTF::LinkedHashSet"*, %"class.blink::SimpleFontData"*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::LinkedHashSet", %"class.WTF::LinkedHashSet"* %1, i64 0, i32 0, i32 0
  %5 = tail call { %"struct.WTF::KeyValuePair.19"*, %"struct.WTF::KeyValuePair.19"* } @_ZN3WTF9HashTableI13scoped_refptrIN5blink14SimpleFontDataEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10RefPtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS_18PartitionAllocatorEE4findENSC_17RefPtrValuePeekerE(%"class.WTF::HashTable.16"* %4, %"class.blink::SimpleFontData"* %2) #6
  %6 = extractvalue { %"struct.WTF::KeyValuePair.19"*, %"struct.WTF::KeyValuePair.19"* } %5, 0
  %7 = getelementptr inbounds %"class.WTF::LinkedHashSet", %"class.WTF::LinkedHashSet"* %1, i64 0, i32 0, i32 0, i32 0
  %8 = load %"struct.WTF::KeyValuePair.19"*, %"struct.WTF::KeyValuePair.19"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::LinkedHashSet", %"class.WTF::LinkedHashSet"* %1, i64 0, i32 0, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds %"struct.WTF::KeyValuePair.19", %"struct.WTF::KeyValuePair.19"* %8, i64 %11
  %13 = icmp eq %"struct.WTF::KeyValuePair.19"* %6, %12
  %14 = getelementptr inbounds %"class.WTF::LinkedHashSet", %"class.WTF::LinkedHashSet"* %1, i64 0, i32 1
  br i1 %13, label %15, label %36

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %14, i64 0, i32 0
  %17 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeI13scoped_refptrIN5blink14SimpleFontDataEENS_18PartitionAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector"* %16, i32 0) #6, !noalias !22
  %18 = getelementptr inbounds %"class.WTF::LinkedHashSet<scoped_refptr<blink::SimpleFontData>, WTF::HashTraits<scoped_refptr<blink::SimpleFontData> >, WTF::PartitionAllocator>::IteratorWrapper", %"class.WTF::LinkedHashSet<scoped_refptr<blink::SimpleFontData>, WTF::HashTraits<scoped_refptr<blink::SimpleFontData> >, WTF::PartitionAllocator>::IteratorWrapper"* %0, i64 0, i32 0, i32 0
  store %"class.WTF::VectorBackedLinkedListNode"* %17, %"class.WTF::VectorBackedLinkedListNode"** %18, align 8, !alias.scope !22
  %19 = getelementptr inbounds %"class.WTF::LinkedHashSet<scoped_refptr<blink::SimpleFontData>, WTF::HashTraits<scoped_refptr<blink::SimpleFontData> >, WTF::PartitionAllocator>::IteratorWrapper", %"class.WTF::LinkedHashSet<scoped_refptr<blink::SimpleFontData>, WTF::HashTraits<scoped_refptr<blink::SimpleFontData> >, WTF::PartitionAllocator>::IteratorWrapper"* %0, i64 0, i32 0, i32 1
  store %"class.WTF::VectorBackedLinkedList"* %14, %"class.WTF::VectorBackedLinkedList"** %19, align 8, !alias.scope !22
  %20 = getelementptr inbounds %"class.WTF::LinkedHashSet", %"class.WTF::LinkedHashSet"* %1, i64 0, i32 0, i32 0, i32 2
  %21 = load i32, i32* %20, align 4, !noalias !25
  %22 = icmp eq i32 %21, 0
  %23 = load %"struct.WTF::KeyValuePair.19"*, %"struct.WTF::KeyValuePair.19"** %7, align 8, !noalias !25
  %24 = load i32, i32* %9, align 8, !noalias !25
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds %"struct.WTF::KeyValuePair.19", %"struct.WTF::KeyValuePair.19"* %23, i64 %25
  br i1 %22, label %59, label %27

27:                                               ; preds = %15
  %28 = icmp eq i32 %24, 0
  br i1 %28, label %59, label %29

29:                                               ; preds = %27, %33
  %30 = phi %"struct.WTF::KeyValuePair.19"* [ %34, %33 ], [ %23, %27 ]
  %31 = bitcast %"struct.WTF::KeyValuePair.19"* %30 to i64*
  %32 = load i64, i64* %31, align 8, !noalias !25
  switch i64 %32, label %59 [
    i64 -1, label %33
    i64 0, label %33
  ]

33:                                               ; preds = %29, %29
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.19", %"struct.WTF::KeyValuePair.19"* %30, i64 1
  %35 = icmp eq %"struct.WTF::KeyValuePair.19"* %34, %26
  br i1 %35, label %59, label %29

36:                                               ; preds = %3
  %37 = getelementptr inbounds %"struct.WTF::KeyValuePair.19", %"struct.WTF::KeyValuePair.19"* %6, i64 0, i32 1
  %38 = load i32, i32* %37, align 8
  %39 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %14, i64 0, i32 0
  %40 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeI13scoped_refptrIN5blink14SimpleFontDataEENS_18PartitionAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector"* %39, i32 %38) #6
  %41 = getelementptr inbounds %"class.WTF::LinkedHashSet<scoped_refptr<blink::SimpleFontData>, WTF::HashTraits<scoped_refptr<blink::SimpleFontData> >, WTF::PartitionAllocator>::IteratorWrapper", %"class.WTF::LinkedHashSet<scoped_refptr<blink::SimpleFontData>, WTF::HashTraits<scoped_refptr<blink::SimpleFontData> >, WTF::PartitionAllocator>::IteratorWrapper"* %0, i64 0, i32 0, i32 0
  store %"class.WTF::VectorBackedLinkedListNode"* %40, %"class.WTF::VectorBackedLinkedListNode"** %41, align 8
  %42 = getelementptr inbounds %"class.WTF::LinkedHashSet<scoped_refptr<blink::SimpleFontData>, WTF::HashTraits<scoped_refptr<blink::SimpleFontData> >, WTF::PartitionAllocator>::IteratorWrapper", %"class.WTF::LinkedHashSet<scoped_refptr<blink::SimpleFontData>, WTF::HashTraits<scoped_refptr<blink::SimpleFontData> >, WTF::PartitionAllocator>::IteratorWrapper"* %0, i64 0, i32 0, i32 1
  store %"class.WTF::VectorBackedLinkedList"* %14, %"class.WTF::VectorBackedLinkedList"** %42, align 8
  %43 = getelementptr inbounds %"class.WTF::LinkedHashSet", %"class.WTF::LinkedHashSet"* %1, i64 0, i32 0, i32 0, i32 2
  %44 = load i32, i32* %43, align 4, !noalias !28
  %45 = icmp eq i32 %44, 0
  %46 = load %"struct.WTF::KeyValuePair.19"*, %"struct.WTF::KeyValuePair.19"** %7, align 8, !noalias !28
  %47 = load i32, i32* %9, align 8, !noalias !28
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair.19", %"struct.WTF::KeyValuePair.19"* %46, i64 %48
  br i1 %45, label %59, label %50

50:                                               ; preds = %36
  %51 = icmp eq i32 %47, 0
  br i1 %51, label %59, label %52

52:                                               ; preds = %50, %56
  %53 = phi %"struct.WTF::KeyValuePair.19"* [ %57, %56 ], [ %46, %50 ]
  %54 = bitcast %"struct.WTF::KeyValuePair.19"* %53 to i64*
  %55 = load i64, i64* %54, align 8, !noalias !28
  switch i64 %55, label %59 [
    i64 -1, label %56
    i64 0, label %56
  ]

56:                                               ; preds = %52, %52
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair.19", %"struct.WTF::KeyValuePair.19"* %53, i64 1
  %58 = icmp eq %"struct.WTF::KeyValuePair.19"* %57, %49
  br i1 %58, label %59, label %52

59:                                               ; preds = %56, %52, %33, %29, %50, %36, %27, %15
  %60 = phi %"struct.WTF::KeyValuePair.19"* [ %26, %15 ], [ %23, %27 ], [ %49, %36 ], [ %46, %50 ], [ %26, %33 ], [ %30, %29 ], [ %53, %52 ], [ %49, %56 ]
  %61 = phi %"struct.WTF::KeyValuePair.19"* [ %26, %15 ], [ %26, %27 ], [ %49, %36 ], [ %49, %50 ], [ %26, %29 ], [ %26, %33 ], [ %49, %52 ], [ %49, %56 ]
  %62 = getelementptr inbounds %"class.WTF::LinkedHashSet<scoped_refptr<blink::SimpleFontData>, WTF::HashTraits<scoped_refptr<blink::SimpleFontData> >, WTF::PartitionAllocator>::IteratorWrapper", %"class.WTF::LinkedHashSet<scoped_refptr<blink::SimpleFontData>, WTF::HashTraits<scoped_refptr<blink::SimpleFontData> >, WTF::PartitionAllocator>::IteratorWrapper"* %0, i64 0, i32 1, i32 0, i32 0
  store %"struct.WTF::KeyValuePair.19"* %60, %"struct.WTF::KeyValuePair.19"** %62, align 8, !alias.scope !31
  %63 = getelementptr inbounds %"class.WTF::LinkedHashSet<scoped_refptr<blink::SimpleFontData>, WTF::HashTraits<scoped_refptr<blink::SimpleFontData> >, WTF::PartitionAllocator>::IteratorWrapper", %"class.WTF::LinkedHashSet<scoped_refptr<blink::SimpleFontData>, WTF::HashTraits<scoped_refptr<blink::SimpleFontData> >, WTF::PartitionAllocator>::IteratorWrapper"* %0, i64 0, i32 1, i32 0, i32 1
  store %"struct.WTF::KeyValuePair.19"* %61, %"struct.WTF::KeyValuePair.19"** %63, align 8, !alias.scope !31
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.19"*, %"struct.WTF::KeyValuePair.19"* } @_ZN3WTF9HashTableI13scoped_refptrIN5blink14SimpleFontDataEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10RefPtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS_18PartitionAllocatorEE4findENSC_17RefPtrValuePeekerE(%"class.WTF::HashTable.16"*, %"class.blink::SimpleFontData"*) local_unnamed_addr #0 comdat align 2 {
  %3 = ptrtoint %"class.blink::SimpleFontData"* %1 to i64
  %4 = getelementptr inbounds %"class.WTF::HashTable.16", %"class.WTF::HashTable.16"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.19"*, %"struct.WTF::KeyValuePair.19"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.19"* %5, null
  %7 = getelementptr inbounds %"class.WTF::HashTable.16", %"class.WTF::HashTable.16"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  br i1 %6, label %69, label %9

9:                                                ; preds = %2
  %10 = add i32 %8, -1
  %11 = zext i32 %10 to i64
  %12 = shl i64 %3, 32
  %13 = xor i64 %12, -1
  %14 = add i64 %13, %3
  %15 = lshr i64 %14, 22
  %16 = xor i64 %15, %14
  %17 = shl i64 %16, 13
  %18 = xor i64 %17, -1
  %19 = add i64 %16, %18
  %20 = lshr i64 %19, 8
  %21 = xor i64 %20, %19
  %22 = mul i64 %21, 9
  %23 = lshr i64 %22, 15
  %24 = xor i64 %23, %22
  %25 = shl i64 %24, 27
  %26 = xor i64 %25, -1
  %27 = add i64 %24, %26
  %28 = lshr i64 %27, 31
  %29 = xor i64 %28, %27
  %30 = trunc i64 %29 to i32
  %31 = and i32 %10, %30
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair.19", %"struct.WTF::KeyValuePair.19"* %5, i64 %32
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.19", %"struct.WTF::KeyValuePair.19"* %33, i64 0, i32 0, i32 0
  %35 = load %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %34, align 8
  %36 = icmp eq %"class.blink::SimpleFontData"* %35, %1
  br i1 %36, label %66, label %37

37:                                               ; preds = %9
  %38 = xor i32 %30, -1
  %39 = lshr i32 %30, 23
  %40 = add i32 %39, %38
  %41 = shl i32 %40, 12
  %42 = xor i32 %41, %40
  %43 = lshr i32 %42, 7
  %44 = xor i32 %43, %42
  %45 = shl i32 %44, 2
  %46 = xor i32 %45, %44
  %47 = lshr i32 %46, 20
  %48 = xor i32 %47, %46
  %49 = or i32 %48, 1
  %50 = zext i32 %49 to i64
  br label %51

51:                                               ; preds = %57, %37
  %52 = phi i64 [ %32, %37 ], [ %61, %57 ]
  %53 = phi i64 [ 0, %37 ], [ %59, %57 ]
  %54 = getelementptr inbounds %"struct.WTF::KeyValuePair.19", %"struct.WTF::KeyValuePair.19"* %5, i64 %52, i32 0, i32 0
  %55 = load %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %54, align 8
  %56 = icmp eq %"class.blink::SimpleFontData"* %55, null
  br i1 %56, label %69, label %57

57:                                               ; preds = %51
  %58 = icmp eq i64 %53, 0
  %59 = select i1 %58, i64 %50, i64 %53
  %60 = add i64 %59, %52
  %61 = and i64 %60, %11
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair.19", %"struct.WTF::KeyValuePair.19"* %5, i64 %61
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair.19", %"struct.WTF::KeyValuePair.19"* %62, i64 0, i32 0, i32 0
  %64 = load %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %63, align 8
  %65 = icmp eq %"class.blink::SimpleFontData"* %64, %1
  br i1 %65, label %66, label %51

66:                                               ; preds = %57, %9
  %67 = phi %"struct.WTF::KeyValuePair.19"* [ %33, %9 ], [ %62, %57 ]
  %68 = icmp eq %"struct.WTF::KeyValuePair.19"* %67, null
  br i1 %68, label %69, label %72

69:                                               ; preds = %51, %66, %2
  %70 = zext i32 %8 to i64
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair.19", %"struct.WTF::KeyValuePair.19"* %5, i64 %70
  br label %75

72:                                               ; preds = %66
  %73 = zext i32 %8 to i64
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair.19", %"struct.WTF::KeyValuePair.19"* %5, i64 %73
  br label %75

75:                                               ; preds = %69, %72
  %76 = phi %"struct.WTF::KeyValuePair.19"* [ %67, %72 ], [ %71, %69 ]
  %77 = phi %"struct.WTF::KeyValuePair.19"* [ %74, %72 ], [ %71, %69 ]
  %78 = insertvalue { %"struct.WTF::KeyValuePair.19"*, %"struct.WTF::KeyValuePair.19"* } undef, %"struct.WTF::KeyValuePair.19"* %76, 0
  %79 = insertvalue { %"struct.WTF::KeyValuePair.19"*, %"struct.WTF::KeyValuePair.19"* } %78, %"struct.WTF::KeyValuePair.19"* %77, 1
  ret { %"struct.WTF::KeyValuePair.19"*, %"struct.WTF::KeyValuePair.19"* } %79
}

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK3WTF9HashTableIPKN5blink16FontPlatformDataENS_12KeyValuePairIS4_NSt3__14pairI13scoped_refptrINS1_14SimpleFontDataEEjEEEENS_24KeyValuePairKeyExtractorENS1_20FontDataCacheKeyHashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSG_ISB_EEEESH_NS_18PartitionAllocatorEE8ContainsINS_22IdentityHashTranslatorISE_SJ_SK_EES4_EEbRKT0_(%"class.WTF::HashTable"*, %"class.blink::FontPlatformData"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair"* %4, null
  br i1 %5, label %58, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = load %"class.blink::FontPlatformData"*, %"class.blink::FontPlatformData"** %1, align 8
  %12 = tail call i32 @_ZNK5blink16FontPlatformData7GetHashEv(%"class.blink::FontPlatformData"* %11) #6
  %13 = and i32 %12, %9
  %14 = zext i32 %13 to i64
  %15 = xor i32 %12, -1
  %16 = lshr i32 %12, 23
  %17 = add i32 %16, %15
  %18 = shl i32 %17, 12
  %19 = xor i32 %18, %17
  %20 = lshr i32 %19, 7
  %21 = xor i32 %20, %19
  %22 = shl i32 %21, 2
  %23 = xor i32 %22, %21
  %24 = lshr i32 %23, 20
  %25 = xor i32 %24, %23
  %26 = or i32 %25, 1
  %27 = zext i32 %26 to i64
  br label %28

28:                                               ; preds = %53, %6
  %29 = phi i64 [ 0, %6 ], [ %55, %53 ]
  %30 = phi i64 [ %14, %6 ], [ %57, %53 ]
  %31 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %30
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %31, i64 0, i32 0
  %33 = load %"class.blink::FontPlatformData"*, %"class.blink::FontPlatformData"** %32, align 8
  %34 = load %"class.blink::FontPlatformData"*, %"class.blink::FontPlatformData"** %1, align 8
  %35 = icmp eq %"class.blink::FontPlatformData"* %33, inttoptr (i64 -1 to %"class.blink::FontPlatformData"*)
  %36 = icmp eq %"class.blink::FontPlatformData"* %34, inttoptr (i64 -1 to %"class.blink::FontPlatformData"*)
  %37 = or i1 %35, %36
  br i1 %37, label %48, label %38

38:                                               ; preds = %28
  %39 = icmp ne %"class.blink::FontPlatformData"* %33, null
  %40 = icmp ne %"class.blink::FontPlatformData"* %34, null
  %41 = and i1 %39, %40
  br i1 %41, label %44, label %42

42:                                               ; preds = %38
  %43 = icmp eq %"class.blink::FontPlatformData"* %33, %34
  br i1 %43, label %58, label %50

44:                                               ; preds = %38
  %45 = tail call zeroext i1 @_ZNK5blink16FontPlatformDataeqERKS0_(%"class.blink::FontPlatformData"* nonnull %33, %"class.blink::FontPlatformData"* nonnull dereferenceable(72) %34) #6
  br i1 %45, label %58, label %46

46:                                               ; preds = %44
  %47 = load %"class.blink::FontPlatformData"*, %"class.blink::FontPlatformData"** %32, align 8
  br label %50

48:                                               ; preds = %28
  %49 = and i1 %35, %36
  br i1 %49, label %58, label %50

50:                                               ; preds = %48, %46, %42
  %51 = phi %"class.blink::FontPlatformData"* [ %47, %46 ], [ %33, %42 ], [ %33, %48 ]
  %52 = icmp eq %"class.blink::FontPlatformData"* %51, null
  br i1 %52, label %58, label %53

53:                                               ; preds = %50
  %54 = icmp eq i64 %29, 0
  %55 = select i1 %54, i64 %27, i64 %29
  %56 = add i64 %55, %30
  %57 = and i64 %56, %10
  br label %28

58:                                               ; preds = %42, %44, %48, %50, %2
  %59 = phi %"struct.WTF::KeyValuePair"* [ null, %2 ], [ %31, %42 ], [ %31, %44 ], [ null, %50 ], [ %31, %48 ]
  %60 = icmp ne %"struct.WTF::KeyValuePair"* %59, null
  ret i1 %60
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableIPKN5blink16FontPlatformDataENS_12KeyValuePairIS4_NSt3__14pairI13scoped_refptrINS1_14SimpleFontDataEEjEEEENS_24KeyValuePairKeyExtractorENS1_20FontDataCacheKeyHashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSG_ISB_EEEESH_NS_18PartitionAllocatorEE5eraseEPKSC_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 1, i32 0, i32 0
  %4 = load %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %3, align 8
  %5 = icmp eq %"class.blink::SimpleFontData"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %4, i64 0, i32 0, i32 1, i32 0
  %8 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %7, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %8) #6
  %9 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %7, i64 0, i32 0, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %19

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %7, i64 -2
  %14 = bitcast %"class.base::RefCounted"* %13 to %"class.blink::FontData"*
  %15 = bitcast %"class.base::RefCounted"* %13 to void (%"class.blink::FontData"*)***
  %16 = load void (%"class.blink::FontData"*)**, void (%"class.blink::FontData"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.blink::FontData"*)*, void (%"class.blink::FontData"*)** %16, i64 1
  %18 = load void (%"class.blink::FontData"*)*, void (%"class.blink::FontData"*)** %17, align 8
  tail call void %18(%"class.blink::FontData"* nonnull %14) #6
  br label %19

19:                                               ; preds = %2, %6, %12
  %20 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 0
  store %"class.blink::FontPlatformData"* inttoptr (i64 -1 to %"class.blink::FontPlatformData"*), %"class.blink::FontPlatformData"** %20, align 8
  %21 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %22 = load i32, i32* %21, align 8
  %23 = add i32 %22, 1
  %24 = and i32 %23, 2147483647
  %25 = and i32 %22, -2147483648
  %26 = or i32 %24, %25
  store i32 %26, i32* %21, align 8
  %27 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %28 = load i32, i32* %27, align 4
  %29 = add i32 %28, -1
  store i32 %29, i32* %27, align 4
  %30 = mul i32 %29, 6
  %31 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %32 = load i32, i32* %31, align 8
  %33 = icmp ult i32 %30, %32
  %34 = icmp ugt i32 %32, 8
  %35 = and i1 %33, %34
  br i1 %35, label %36, label %43

36:                                               ; preds = %19
  %37 = lshr i32 %32, 1
  %38 = zext i32 %37 to i64
  %39 = mul nuw nsw i64 %38, 24
  %40 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %39, i8* getelementptr inbounds ([167 x i8], [167 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIPKN5blink16FontPlatformDataENSt3__14pairI13scoped_refptrINS2_14SimpleFontDataEEjEEEEEEPKcv, i64 0, i64 0)) #6
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %40, i8 0, i64 %39, i1 false) #6
  %41 = bitcast i8* %40 to %"struct.WTF::KeyValuePair"*
  %42 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIPKN5blink16FontPlatformDataENS_12KeyValuePairIS4_NSt3__14pairI13scoped_refptrINS1_14SimpleFontDataEEjEEEENS_24KeyValuePairKeyExtractorENS1_20FontDataCacheKeyHashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSG_ISB_EEEESH_NS_18PartitionAllocatorEE8RehashToEPSC_jSM_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %41, i32 %37, %"struct.WTF::KeyValuePair"* null) #6
  br label %43

43:                                               ; preds = %36, %19
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorI13scoped_refptrIN5blink14SimpleFontDataEELj20ENS_18PartitionAllocatorEE14AppendSlowCaseIRKS4_EEvOT_(%"class.WTF::Vector.22"*, %class.scoped_refptr* dereferenceable(8)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.22", %"class.WTF::Vector.22"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.22", %"class.WTF::Vector.22"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %class.scoped_refptr*, %class.scoped_refptr** %6, align 8
  %8 = icmp ugt %class.scoped_refptr* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %7, i64 %10
  %12 = icmp ugt %class.scoped_refptr* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorI13scoped_refptrIN5blink14SimpleFontDataEELj20ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.22"* %0, i32 %5) #6
  %14 = load %class.scoped_refptr*, %class.scoped_refptr** %6, align 8
  br label %22

15:                                               ; preds = %9
  %16 = ptrtoint %class.scoped_refptr* %1 to i64
  %17 = ptrtoint %class.scoped_refptr* %7 to i64
  %18 = sub i64 %16, %17
  %19 = ashr exact i64 %18, 3
  tail call void @_ZN3WTF6VectorI13scoped_refptrIN5blink14SimpleFontDataEELj20ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.22"* %0, i32 %5) #6
  %20 = load %class.scoped_refptr*, %class.scoped_refptr** %6, align 8
  %21 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %20, i64 %19
  br label %22

22:                                               ; preds = %13, %15
  %23 = phi %class.scoped_refptr* [ %14, %13 ], [ %20, %15 ]
  %24 = phi %class.scoped_refptr* [ %1, %13 ], [ %21, %15 ]
  %25 = load i32, i32* %3, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %24, i64 0, i32 0
  %28 = load %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %27, align 8
  %29 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %23, i64 %26, i32 0
  store %"class.blink::SimpleFontData"* %28, %"class.blink::SimpleFontData"** %29, align 8
  %30 = icmp eq %"class.blink::SimpleFontData"* %28, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %22
  %32 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %28, i64 0, i32 0, i32 1, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %32) #6
  br label %33

33:                                               ; preds = %22, %31
  %34 = load i32, i32* %3, align 4
  %35 = add i32 %34, 1
  store i32 %35, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorI13scoped_refptrIN5blink14SimpleFontDataEELj20ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.22"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.22", %"class.WTF::Vector.22"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #6
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #6
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #6
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.9, i64 0, i64 0), i8* %15, i8* %16) #6
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #6
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.5, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #6
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #6
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #6
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %51, !prof !21

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.22", %"class.WTF::Vector.22"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load %class.scoped_refptr*, %class.scoped_refptr** %31, align 8
  %33 = icmp eq %class.scoped_refptr* %32, null
  br i1 %33, label %34, label %50

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 20
  br i1 %35, label %36, label %44

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIN5blink14SimpleFontDataEEEEmm(i64 %37) #6
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([84 x i8], [84 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI13scoped_refptrIN5blink14SimpleFontDataEEEEPKcv, i64 0, i64 0)) #6
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.22"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = lshr i64 %38, 3
  %43 = trunc i64 %42 to i32
  br label %48

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"class.WTF::Vector.22", %"class.WTF::Vector.22"* %0, i64 0, i32 0, i32 1, i64 0
  %46 = ptrtoint i8* %45 to i64
  %47 = bitcast %"class.WTF::Vector.22"* %0 to i64*
  store atomic i64 %46, i64* %47 monotonic, align 8
  br label %48

48:                                               ; preds = %44, %36
  %49 = phi i32 [ 20, %44 ], [ %43, %36 ]
  store i32 %49, i32* %6, align 8
  br label %51

50:                                               ; preds = %30
  call void @_ZN3WTF6VectorI13scoped_refptrIN5blink14SimpleFontDataEELj20ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.22"* %0, i32 %27) #6
  br label %51

51:                                               ; preds = %23, %48, %50
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorI13scoped_refptrIN5blink14SimpleFontDataEELj20ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.22"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 21
  br i1 %3, label %4, label %29

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.22", %"class.WTF::Vector.22"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %class.scoped_refptr*, %class.scoped_refptr** %5, align 8
  %7 = icmp eq %class.scoped_refptr* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.22", %"class.WTF::Vector.22"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to %class.scoped_refptr*
  %10 = icmp eq %class.scoped_refptr* %6, %9
  %11 = or i1 %10, %7
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %"class.WTF::Vector.22"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.22", %"class.WTF::Vector.22"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 20, i32* %15, align 8
  br label %58

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector.22", %"class.WTF::Vector.22"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::Vector.22", %"class.WTF::Vector.22"* %0, i64 0, i32 0
  %20 = ptrtoint i8* %8 to i64
  %21 = bitcast %"class.WTF::Vector.22"* %0 to i64*
  store atomic i64 %20, i64* %21 monotonic, align 8
  %22 = getelementptr inbounds %"class.WTF::Vector.22", %"class.WTF::Vector.22"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 20, i32* %22, align 8
  %23 = icmp eq i8* %8, null
  br i1 %23, label %28, label %24, !prof !14

24:                                               ; preds = %16
  %25 = zext i32 %18 to i64
  %26 = bitcast %class.scoped_refptr* %6 to i8*
  %27 = shl nuw nsw i64 %25, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %8, i8* nonnull align 8 %26, i64 %27, i1 false) #6
  br label %28

28:                                               ; preds = %24, %16
  tail call void @_ZN3WTF12VectorBufferI13scoped_refptrIN5blink14SimpleFontDataEELj20ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS4_(%"class.WTF::VectorBuffer.23"* %19, %class.scoped_refptr* nonnull %6) #6
  br label %58

29:                                               ; preds = %2
  %30 = zext i32 %1 to i64
  %31 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIN5blink14SimpleFontDataEEEEmm(i64 %30) #6
  %32 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %31, i8* getelementptr inbounds ([84 x i8], [84 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI13scoped_refptrIN5blink14SimpleFontDataEEEEPKcv, i64 0, i64 0)) #6
  %33 = lshr i64 %31, 3
  %34 = ptrtoint i8* %32 to i64
  %35 = getelementptr inbounds %"class.WTF::Vector.22", %"class.WTF::Vector.22"* %0, i64 0, i32 0, i32 0, i32 0
  %36 = load %class.scoped_refptr*, %class.scoped_refptr** %35, align 8
  %37 = icmp ne i8* %32, null
  %38 = icmp ne %class.scoped_refptr* %36, null
  %39 = and i1 %37, %38
  br i1 %39, label %40, label %47, !prof !21

40:                                               ; preds = %29
  %41 = getelementptr inbounds %"class.WTF::Vector.22", %"class.WTF::Vector.22"* %0, i64 0, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i64
  %44 = bitcast %class.scoped_refptr* %36 to i8*
  %45 = shl nuw nsw i64 %43, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %32, i8* nonnull align 8 %44, i64 %45, i1 false) #6
  %46 = load %class.scoped_refptr*, %class.scoped_refptr** %35, align 8
  br label %47

47:                                               ; preds = %29, %40
  %48 = phi %class.scoped_refptr* [ %36, %29 ], [ %46, %40 ]
  %49 = getelementptr inbounds %"class.WTF::Vector.22", %"class.WTF::Vector.22"* %0, i64 0, i32 0, i32 1, i64 0
  %50 = bitcast i8* %49 to %class.scoped_refptr*
  %51 = icmp eq %class.scoped_refptr* %48, %50
  br i1 %51, label %54, label %52, !prof !21

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::Vector.22", %"class.WTF::Vector.22"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferI13scoped_refptrIN5blink14SimpleFontDataEELj20ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS4_(%"class.WTF::VectorBuffer.23"* %53, %class.scoped_refptr* %48) #6
  br label %54

54:                                               ; preds = %47, %52
  %55 = bitcast %"class.WTF::Vector.22"* %0 to i64*
  store atomic i64 %34, i64* %55 monotonic, align 8
  %56 = trunc i64 %33 to i32
  %57 = getelementptr inbounds %"class.WTF::Vector.22", %"class.WTF::Vector.22"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %56, i32* %57, align 8
  br label %58

58:                                               ; preds = %28, %54, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIN5blink14SimpleFontDataEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #6
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #6
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #6
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.7, i64 0, i64 0), i8* %11, i8* %12) #6
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #6
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.8, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #6
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #6
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #6
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #6
  ret i64 %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeI13scoped_refptrIN5blink14SimpleFontDataEENS_18PartitionAllocatorEEELj0ES6_E14ShrinkCapacityEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = icmp ugt i32 %4, %1
  br i1 %5, label %6, label %76

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp ugt i32 %8, %1
  br i1 %9, label %10, label %39

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedListNode"** %11, align 8
  %13 = zext i32 %8 to i64
  %14 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %12, i64 %13
  %15 = zext i32 %1 to i64
  %16 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %12, i64 %15
  br label %17

17:                                               ; preds = %35, %10
  %18 = phi %"class.WTF::VectorBackedLinkedListNode"* [ %36, %35 ], [ %16, %10 ]
  %19 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %18, i64 0, i32 2, i32 0
  %20 = load %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %19, align 8
  %21 = icmp eq %"class.blink::SimpleFontData"* %20, null
  br i1 %21, label %35, label %22

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %20, i64 0, i32 0, i32 1, i32 0
  %24 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %23, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %24) #6
  %25 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %23, i64 0, i32 0, i32 0
  %26 = load i32, i32* %25, align 4
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %35

28:                                               ; preds = %22
  %29 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %23, i64 -2
  %30 = bitcast %"class.base::RefCounted"* %29 to %"class.blink::FontData"*
  %31 = bitcast %"class.base::RefCounted"* %29 to void (%"class.blink::FontData"*)***
  %32 = load void (%"class.blink::FontData"*)**, void (%"class.blink::FontData"*)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.blink::FontData"*)*, void (%"class.blink::FontData"*)** %32, i64 1
  %34 = load void (%"class.blink::FontData"*)*, void (%"class.blink::FontData"*)** %33, align 8
  tail call void %34(%"class.blink::FontData"* nonnull %30) #6
  br label %35

35:                                               ; preds = %28, %22, %17
  %36 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %18, i64 1
  %37 = icmp eq %"class.WTF::VectorBackedLinkedListNode"* %36, %14
  br i1 %37, label %38, label %17

38:                                               ; preds = %35
  store i32 %1, i32* %7, align 4
  br label %39

39:                                               ; preds = %38, %6
  %40 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %41 = icmp eq i32 %1, 0
  br i1 %41, label %72, label %42

42:                                               ; preds = %39
  %43 = zext i32 %1 to i64
  %44 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_26VectorBackedLinkedListNodeI13scoped_refptrIN5blink14SimpleFontDataEES0_EEEEmm(i64 %43) #6
  %45 = load i32, i32* %3, align 8
  %46 = zext i32 %45 to i64
  %47 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_26VectorBackedLinkedListNodeI13scoped_refptrIN5blink14SimpleFontDataEES0_EEEEmm(i64 %46) #6
  %48 = icmp eq i64 %47, %44
  br i1 %48, label %49, label %52

49:                                               ; preds = %42
  %50 = lshr i64 %44, 4
  %51 = trunc i64 %50 to i32
  store i32 %51, i32* %3, align 8
  br label %76

52:                                               ; preds = %42
  %53 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_26VectorBackedLinkedListNodeI13scoped_refptrIN5blink14SimpleFontDataEES0_EEEEmm(i64 %43) #6
  %54 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %53, i8* getelementptr inbounds ([142 x i8], [142 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_26VectorBackedLinkedListNodeI13scoped_refptrIN5blink14SimpleFontDataEENS_18PartitionAllocatorEEEEEPKcv, i64 0, i64 0)) #6
  %55 = lshr i64 %53, 4
  %56 = ptrtoint i8* %54 to i64
  %57 = load %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedListNode"** %40, align 8
  %58 = icmp ne i8* %54, null
  %59 = icmp ne %"class.WTF::VectorBackedLinkedListNode"* %57, null
  %60 = and i1 %58, %59
  %61 = bitcast %"class.WTF::VectorBackedLinkedListNode"* %57 to i8*
  br i1 %60, label %62, label %68, !prof !21

62:                                               ; preds = %52
  %63 = load i32, i32* %7, align 4
  %64 = zext i32 %63 to i64
  %65 = shl nuw nsw i64 %64, 4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %54, i8* nonnull align 8 %61, i64 %65, i1 false) #6
  %66 = bitcast %"class.WTF::Vector"* %0 to i8**
  %67 = load i8*, i8** %66, align 8
  br label %68

68:                                               ; preds = %52, %62
  %69 = phi i8* [ %67, %62 ], [ %61, %52 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %69) #6
  %70 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %56, i64* %70 monotonic, align 8
  %71 = trunc i64 %55 to i32
  store i32 %71, i32* %3, align 8
  br label %76

72:                                               ; preds = %39
  %73 = bitcast %"class.WTF::Vector"* %0 to i8**
  %74 = load i8*, i8** %73, align 8
  %75 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 0, i64* %75 monotonic, align 8
  store i32 0, i32* %3, align 8
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %74) #6
  br label %76

76:                                               ; preds = %49, %68, %72, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"* } @_ZN3WTF22VectorBackedLinkedListI13scoped_refptrIN5blink14SimpleFontDataEENS_18PartitionAllocatorEE5eraseENS_35VectorBackedLinkedListConstIteratorIS6_EE(%"class.WTF::VectorBackedLinkedList"*, %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"class.WTF::VectorBackedLinkedListNode"* %1 to i64
  %5 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %2, i64 0, i32 0
  %6 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeI13scoped_refptrIN5blink14SimpleFontDataEENS_18PartitionAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector"* %5, i32 0) #6
  %7 = ptrtoint %"class.WTF::VectorBackedLinkedListNode"* %6 to i64
  %8 = sub i64 %4, %7
  %9 = lshr exact i64 %8, 4
  %10 = trunc i64 %9 to i32
  %11 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %0, i64 0, i32 0
  %12 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeI13scoped_refptrIN5blink14SimpleFontDataEENS_18PartitionAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector"* %11, i32 %10) #6
  %13 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %12, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %12, i64 0, i32 0
  %16 = load i32, i32* %15, align 8
  %17 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeI13scoped_refptrIN5blink14SimpleFontDataEENS_18PartitionAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector"* %11, i32 %16) #6
  %18 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeI13scoped_refptrIN5blink14SimpleFontDataEENS_18PartitionAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector"* %11, i32 %14) #6
  %19 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %17, i64 0, i32 1
  store i32 %14, i32* %19, align 4
  %20 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %18, i64 0, i32 0
  store i32 %16, i32* %20, align 8
  %21 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %12, i64 0, i32 2
  %22 = bitcast %class.scoped_refptr* %21 to i64*
  %23 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %21, i64 0, i32 0
  %24 = load %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %23, align 8
  store i64 0, i64* %22, align 8
  %25 = icmp eq %"class.blink::SimpleFontData"* %24, null
  br i1 %25, label %39, label %26

26:                                               ; preds = %3
  %27 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %24, i64 0, i32 0, i32 1, i32 0
  %28 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %27, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %28) #6
  %29 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %27, i64 0, i32 0, i32 0
  %30 = load i32, i32* %29, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %39

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %27, i64 -2
  %34 = bitcast %"class.base::RefCounted"* %33 to %"class.blink::FontData"*
  %35 = bitcast %"class.base::RefCounted"* %33 to void (%"class.blink::FontData"*)***
  %36 = load void (%"class.blink::FontData"*)**, void (%"class.blink::FontData"*)*** %35, align 8
  %37 = getelementptr inbounds void (%"class.blink::FontData"*)*, void (%"class.blink::FontData"*)** %36, i64 1
  %38 = load void (%"class.blink::FontData"*)*, void (%"class.blink::FontData"*)** %37, align 8
  tail call void %38(%"class.blink::FontData"* nonnull %34) #6
  br label %39

39:                                               ; preds = %3, %26, %32
  %40 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %0, i64 0, i32 1
  %41 = load i32, i32* %40, align 8
  store i32 %41, i32* %13, align 4
  store i32 -1, i32* %15, align 8
  store i32 %10, i32* %40, align 8
  %42 = getelementptr inbounds %"class.WTF::VectorBackedLinkedList", %"class.WTF::VectorBackedLinkedList"* %0, i64 0, i32 2
  %43 = load i32, i32* %42, align 4
  %44 = add i32 %43, -1
  store i32 %44, i32* %42, align 4
  %45 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZN3WTF6VectorINS_26VectorBackedLinkedListNodeI13scoped_refptrIN5blink14SimpleFontDataEENS_18PartitionAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector"* %11, i32 %14) #6
  %46 = insertvalue { %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"* } undef, %"class.WTF::VectorBackedLinkedListNode"* %45, 0
  %47 = insertvalue { %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"* } %46, %"class.WTF::VectorBackedLinkedList"* %0, 1
  ret { %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedList"* } %47
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableI13scoped_refptrIN5blink14SimpleFontDataEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10RefPtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS_18PartitionAllocatorEE5eraseEPKS6_(%"class.WTF::HashTable.16"*, %"struct.WTF::KeyValuePair.19"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.WTF::KeyValuePair.19", %"struct.WTF::KeyValuePair.19"* %1, i64 0, i32 0, i32 0
  %4 = load %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %3, align 8
  %5 = icmp eq %"class.blink::SimpleFontData"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %4, i64 0, i32 0, i32 1, i32 0
  %8 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %7, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %8) #6
  %9 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %7, i64 0, i32 0, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %19

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %7, i64 -2
  %14 = bitcast %"class.base::RefCounted"* %13 to %"class.blink::FontData"*
  %15 = bitcast %"class.base::RefCounted"* %13 to void (%"class.blink::FontData"*)***
  %16 = load void (%"class.blink::FontData"*)**, void (%"class.blink::FontData"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.blink::FontData"*)*, void (%"class.blink::FontData"*)** %16, i64 1
  %18 = load void (%"class.blink::FontData"*)*, void (%"class.blink::FontData"*)** %17, align 8
  tail call void %18(%"class.blink::FontData"* nonnull %14) #6
  br label %19

19:                                               ; preds = %2, %6, %12
  %20 = bitcast %"struct.WTF::KeyValuePair.19"* %1 to i8**
  store i8* inttoptr (i64 -1 to i8*), i8** %20, align 8
  %21 = getelementptr inbounds %"class.WTF::HashTable.16", %"class.WTF::HashTable.16"* %0, i64 0, i32 3
  %22 = load i32, i32* %21, align 8
  %23 = add i32 %22, 1
  %24 = and i32 %23, 2147483647
  %25 = and i32 %22, -2147483648
  %26 = or i32 %24, %25
  store i32 %26, i32* %21, align 8
  %27 = getelementptr inbounds %"class.WTF::HashTable.16", %"class.WTF::HashTable.16"* %0, i64 0, i32 2
  %28 = load i32, i32* %27, align 4
  %29 = add i32 %28, -1
  store i32 %29, i32* %27, align 4
  %30 = mul i32 %29, 6
  %31 = getelementptr inbounds %"class.WTF::HashTable.16", %"class.WTF::HashTable.16"* %0, i64 0, i32 1
  %32 = load i32, i32* %31, align 8
  %33 = icmp ult i32 %30, %32
  %34 = icmp ugt i32 %32, 8
  %35 = and i1 %33, %34
  br i1 %35, label %36, label %43

36:                                               ; preds = %19
  %37 = lshr i32 %32, 1
  %38 = zext i32 %37 to i64
  %39 = shl nuw nsw i64 %38, 4
  %40 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %39, i8* getelementptr inbounds ([117 x i8], [117 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairI13scoped_refptrIN5blink14SimpleFontDataEEjEEEEPKcv, i64 0, i64 0)) #6
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %40, i8 0, i64 %39, i1 false) #6
  %41 = bitcast i8* %40 to %"struct.WTF::KeyValuePair.19"*
  %42 = tail call %"struct.WTF::KeyValuePair.19"* @_ZN3WTF9HashTableI13scoped_refptrIN5blink14SimpleFontDataEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_10RefPtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS_18PartitionAllocatorEE8RehashToEPS6_jSH_(%"class.WTF::HashTable.16"* %0, %"struct.WTF::KeyValuePair.19"* %41, i32 %37, %"struct.WTF::KeyValuePair.19"* null) #6
  br label %43

43:                                               ; preds = %36, %19
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN3WTF13LinkedHashSetI13scoped_refptrIN5blink14SimpleFontDataEENS_10HashTraitsIS4_EENS_18PartitionAllocatorEE3endEv: argument 0"}
!4 = distinct !{!4, !"_ZN3WTF13LinkedHashSetI13scoped_refptrIN5blink14SimpleFontDataEENS_10HashTraitsIS4_EENS_18PartitionAllocatorEE3endEv"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN3WTF13LinkedHashSetI13scoped_refptrIN5blink14SimpleFontDataEENS_10HashTraitsIS4_EENS_18PartitionAllocatorEE3endEv: argument 0"}
!7 = distinct !{!7, !"_ZN3WTF13LinkedHashSetI13scoped_refptrIN5blink14SimpleFontDataEENS_10HashTraitsIS4_EENS_18PartitionAllocatorEE3endEv"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZN3WTF13LinkedHashSetI13scoped_refptrIN5blink14SimpleFontDataEENS_10HashTraitsIS4_EENS_18PartitionAllocatorEE3endEv: argument 0"}
!10 = distinct !{!10, !"_ZN3WTF13LinkedHashSetI13scoped_refptrIN5blink14SimpleFontDataEENS_10HashTraitsIS4_EENS_18PartitionAllocatorEE3endEv"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZN3WTF13LinkedHashSetI13scoped_refptrIN5blink14SimpleFontDataEENS_10HashTraitsIS4_EENS_18PartitionAllocatorEE5beginEv: argument 0"}
!13 = distinct !{!13, !"_ZN3WTF13LinkedHashSetI13scoped_refptrIN5blink14SimpleFontDataEENS_10HashTraitsIS4_EENS_18PartitionAllocatorEE5beginEv"}
!14 = !{!"branch_weights", i32 1, i32 2000}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZN3WTF13LinkedHashSetI13scoped_refptrIN5blink14SimpleFontDataEENS_10HashTraitsIS4_EENS_18PartitionAllocatorEE5beginEv: argument 0"}
!17 = distinct !{!17, !"_ZN3WTF13LinkedHashSetI13scoped_refptrIN5blink14SimpleFontDataEENS_10HashTraitsIS4_EENS_18PartitionAllocatorEE5beginEv"}
!18 = !{!19}
!19 = distinct !{!19, !20, !"_ZN3WTF13LinkedHashSetI13scoped_refptrIN5blink14SimpleFontDataEENS_10HashTraitsIS4_EENS_18PartitionAllocatorEE3endEv: argument 0"}
!20 = distinct !{!20, !"_ZN3WTF13LinkedHashSetI13scoped_refptrIN5blink14SimpleFontDataEENS_10HashTraitsIS4_EENS_18PartitionAllocatorEE3endEv"}
!21 = !{!"branch_weights", i32 2000, i32 1}
!22 = !{!23}
!23 = distinct !{!23, !24, !"_ZN3WTF13LinkedHashSetI13scoped_refptrIN5blink14SimpleFontDataEENS_10HashTraitsIS4_EENS_18PartitionAllocatorEE3endEv: argument 0"}
!24 = distinct !{!24, !"_ZN3WTF13LinkedHashSetI13scoped_refptrIN5blink14SimpleFontDataEENS_10HashTraitsIS4_EENS_18PartitionAllocatorEE3endEv"}
!25 = !{!26, !23}
!26 = distinct !{!26, !27, !"_ZNK3WTF13LinkedHashSetI13scoped_refptrIN5blink14SimpleFontDataEENS_10HashTraitsIS4_EENS_18PartitionAllocatorEE12MakeIteratorERKNS_35VectorBackedLinkedListConstIteratorINS_22VectorBackedLinkedListIS4_S7_EEEE: argument 0"}
!27 = distinct !{!27, !"_ZNK3WTF13LinkedHashSetI13scoped_refptrIN5blink14SimpleFontDataEENS_10HashTraitsIS4_EENS_18PartitionAllocatorEE12MakeIteratorERKNS_35VectorBackedLinkedListConstIteratorINS_22VectorBackedLinkedListIS4_S7_EEEE"}
!28 = !{!29}
!29 = distinct !{!29, !30, !"_ZNK3WTF13LinkedHashSetI13scoped_refptrIN5blink14SimpleFontDataEENS_10HashTraitsIS4_EENS_18PartitionAllocatorEE12MakeIteratorERKNS_35VectorBackedLinkedListConstIteratorINS_22VectorBackedLinkedListIS4_S7_EEEE: argument 0"}
!30 = distinct !{!30, !"_ZNK3WTF13LinkedHashSetI13scoped_refptrIN5blink14SimpleFontDataEENS_10HashTraitsIS4_EENS_18PartitionAllocatorEE12MakeIteratorERKNS_35VectorBackedLinkedListConstIteratorINS_22VectorBackedLinkedListIS4_S7_EEEE"}
!31 = !{!26, !23, !29}
