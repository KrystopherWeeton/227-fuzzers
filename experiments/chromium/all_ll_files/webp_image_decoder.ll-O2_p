; ModuleID = '../../third_party/blink/renderer/platform/image-decoders/webp/webp_image_decoder.cc'
source_filename = "../../third_party/blink/renderer/platform/image-decoders/webp/webp_image_decoder.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::WEBPImageDecoder" = type { %"class.blink::ImageDecoder", %struct.WebPIDecoder*, %struct.WebPDecBuffer, i32, i8, %struct.WebPDemuxer*, i32, i8, i32, i32, void (%"class.blink::ImageFrame"*, %"class.blink::ImageFrame"*, i32, i32, i32)*, %class.sk_sp.28, %"class.WTF::Vector.30" }
%"class.blink::ImageDecoder" = type { i32 (...)**, %class.scoped_refptr, %"class.WTF::Vector", i8, i32, %"class.blink::ColorBehavior", %"class.blink::ImageOrientation", %"class.blink::IntSize", i64, i8, %"class.std::__1::unique_ptr", i8, %"class.blink::IntSize", i8, i8, i8, %"class.std::__1::unique_ptr.9", %class.sk_sp.1, i8, %"class.std::__1::unique_ptr.22" }
%class.scoped_refptr = type { %"class.blink::SegmentReader"* }
%"class.blink::SegmentReader" = type <{ i32 (...)**, %"class.WTF::ThreadSafeRefCounted", [4 x i8] }>
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [128 x i8] }
%"class.WTF::VectorBufferBase" = type { %"class.blink::ImageFrame"*, i32, i32 }
%"class.blink::ImageFrame" = type { %class.SkBitmap, %"class.SkBitmap::Allocator"*, i8, i32, %"class.blink::IntRect", i32, %"class.base::TimeDelta", i32, i32, i8, i8, i64 }
%class.SkBitmap = type { %class.sk_sp, %class.SkPixmap, %class.sk_sp.7 }
%class.sk_sp = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.1, i32, i32 }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.7 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%"class.SkBitmap::Allocator" = type { %class.SkRefCnt.base, [4 x i8] }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntPoint" = type { i32, i32 }
%"class.base::TimeDelta" = type { i64 }
%"class.blink::ColorBehavior" = type { i32 }
%"class.blink::ImageOrientation" = type { i8 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ImagePlanes"* }
%"class.blink::ImagePlanes" = type <{ [3 x i8*], [3 x i64], i32, i8, [3 x i8] }>
%"class.blink::IntSize" = type { i32, i32 }
%"class.std::__1::unique_ptr.9" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"class.blink::ColorProfile"* }
%"class.blink::ColorProfile" = type { %struct.skcms_ICCProfile, %"class.std::__1::unique_ptr.13" }
%struct.skcms_ICCProfile = type { i8*, i32, i32, i32, i32, i8, [3 x %union.skcms_Curve], i8, %struct.skcms_Matrix3x3, i8, %struct.skcms_A2B, i8, %struct.skcms_B2A }
%union.skcms_Curve = type { %struct.anon.12, [8 x i8] }
%struct.anon.12 = type { i32, i8*, i8* }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%struct.skcms_A2B = type { i32, [4 x %union.skcms_Curve], [4 x i8], i8*, i8*, i32, [3 x %union.skcms_Curve], %struct.skcms_Matrix3x4, i32, [3 x %union.skcms_Curve] }
%struct.skcms_Matrix3x4 = type { [3 x [4 x float]] }
%struct.skcms_B2A = type { i32, [3 x %union.skcms_Curve], i32, %struct.skcms_Matrix3x4, [3 x %union.skcms_Curve], i32, [4 x i8], i8*, i8*, [4 x %union.skcms_Curve] }
%"class.std::__1::unique_ptr.13" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { i8* }
%class.sk_sp.1 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%class.SkOnce = type { %"struct.std::__1::atomic.2" }
%"struct.std::__1::atomic.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl.5" }
%"struct.std::__1::__cxx_atomic_impl.5" = type { %"struct.std::__1::__cxx_atomic_base_impl.6" }
%"struct.std::__1::__cxx_atomic_base_impl.6" = type { i8 }
%"class.std::__1::unique_ptr.22" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"class.blink::ColorProfileTransform"* }
%"class.blink::ColorProfileTransform" = type { %struct.skcms_ICCProfile*, %struct.skcms_ICCProfile }
%struct.WebPIDecoder = type opaque
%struct.WebPDecBuffer = type { i32, i32, i32, i32, %union.anon, [4 x i32], i8* }
%union.anon = type { %struct.WebPYUVABuffer }
%struct.WebPYUVABuffer = type { i8*, i8*, i8*, i8*, i32, i32, i32, i32, i64, i64, i64, i64 }
%struct.WebPDemuxer = type opaque
%class.sk_sp.28 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt.29, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt.29 = type { %"struct.std::__1::atomic" }
%"class.WTF::Vector.30" = type { %"class.WTF::VectorBuffer.31" }
%"class.WTF::VectorBuffer.31" = type { %"class.WTF::VectorBufferBase.32" }
%"class.WTF::VectorBufferBase.32" = type { i8*, i32, i32 }
%struct.WebPBitstreamFeatures = type { i32, i32, i32, i32, i32, [5 x i32] }
%struct.WebPData = type { i8*, i64 }
%"class.base::HistogramBase" = type <{ i32 (...)**, i8*, %"struct.std::__1::atomic.51", [4 x i8] }>
%"struct.std::__1::atomic.51" = type { %"struct.std::__1::__atomic_base.52" }
%"struct.std::__1::__atomic_base.52" = type { %"struct.std::__1::__atomic_base.53" }
%"struct.std::__1::__atomic_base.53" = type { %"struct.std::__1::__cxx_atomic_impl.54" }
%"struct.std::__1::__cxx_atomic_impl.54" = type { %"struct.std::__1::__cxx_atomic_base_impl.55" }
%"struct.std::__1::__cxx_atomic_base_impl.55" = type { i32 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.68 }
%union.anon.68 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%struct.WebPChunkIterator = type { i32, i32, %struct.WebPData, [6 x i32], i8* }
%struct.WebPIterator = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.WebPData, i32, i32, [2 x i32], i8* }
%"class.WTF::Vector.39" = type { %"class.WTF::VectorBuffer.40" }
%"class.WTF::VectorBuffer.40" = type { %"class.WTF::VectorBufferBase.41" }
%"class.WTF::VectorBufferBase.41" = type { i64*, i32, i32 }
%"struct.cc::ImageHeaderMetadata" = type <{ i32, i32, %"class.gfx::Size", %"class.absl::optional", i8, i8, %"class.absl::optional.45", %"class.absl::optional.45", [2 x i8] }>
%"class.gfx::Size" = type { i32, i32 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.44 }
%union.anon.44 = type { %"class.gfx::Size" }
%"class.absl::optional.45" = type { %"class.absl::optional_internal::optional_data.46" }
%"class.absl::optional_internal::optional_data.46" = type { %"class.absl::optional_internal::optional_data_base.47" }
%"class.absl::optional_internal::optional_data_base.47" = type { %"class.absl::optional_internal::optional_data_dtor_base.48" }
%"class.absl::optional_internal::optional_data_dtor_base.48" = type { i8, %union.anon.49 }
%union.anon.49 = type { i8 }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.51" }
%"class.WTF::String" = type { %class.scoped_refptr.50 }
%class.scoped_refptr.50 = type { %"class.WTF::StringImpl"* }
%"class.WTF::Vector.56" = type { %"class.WTF::VectorBuffer.57" }
%"class.WTF::VectorBuffer.57" = type { %"class.WTF::VectorBufferBase.58" }
%"class.WTF::VectorBufferBase.58" = type { %struct.SkISize*, i32, i32 }

$_ZN5blink12ImageDecoderD2Ev = comdat any

$_ZN5blink12ImageDecoder9SetFailedEv = comdat any

$_ZN3WTF6VectorIcLj0ENS_18PartitionAllocatorEE6AppendIcEEvPKT_j = comdat any

$_ZN5blink12ImageDecoder7SetSizeEjj = comdat any

$_ZNK5blink12ImageDecoder4SizeEv = comdat any

$_ZNK5blink16WEBPImageDecoder17FilenameExtensionEv = comdat any

$_ZN5blink12ImageDecoder19ImageIsHighBitDepthEv = comdat any

$_ZNK5blink12ImageDecoder23GetSupportedDecodeSizesEv = comdat any

$_ZNK5blink12ImageDecoder11DecodedSizeEv = comdat any

$_ZNK5blink12ImageDecoder14GetYUVBitDepthEv = comdat any

$_ZNK5blink12ImageDecoder16FrameSizeAtIndexEm = comdat any

$_ZNK5blink12ImageDecoder7HotSpotERNS_8IntPointE = comdat any

$_ZN5blink12ImageDecoder18SetMemoryAllocatorEPN8SkBitmap9AllocatorE = comdat any

$_ZNK5blink12ImageDecoder37ImageHasBothStillAndAnimatedSubImagesEv = comdat any

$_ZN5blink16WEBPImageDecoder10DecodeSizeEv = comdat any

$_ZN5blink16WEBPImageDecoder34FrameStatusSufficientForSuccessorsEj = comdat any

$_ZN3WTF12VectorBufferIN5blink10ImageFrameELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_ = comdat any

$_ZN3WTF6VectorIN5blink10ImageFrameELj1ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZNK3WTF6VectorIN5blink10ImageFrameELj1ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIcEEmm = comdat any

@_ZTVN5blink16WEBPImageDecoderE = hidden unnamed_addr constant { [37 x i8*] } { [37 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::WEBPImageDecoder"*)* @_ZN5blink16WEBPImageDecoderD2Ev to i8*), i8* bitcast (void (%"class.blink::WEBPImageDecoder"*)* @_ZN5blink16WEBPImageDecoderD0Ev to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::WEBPImageDecoder"*)* @_ZNK5blink16WEBPImageDecoder17FilenameExtensionEv to i8*), i8* bitcast (i1 (%"class.blink::ImageDecoder"*)* @_ZN5blink12ImageDecoder19ImageIsHighBitDepthEv to i8*), i8* bitcast (void (%"class.blink::WEBPImageDecoder"*, %"class.blink::SegmentReader"*)* @_ZN5blink16WEBPImageDecoder9OnSetDataEPNS_13SegmentReaderE to i8*), i8* bitcast (i64 (%"class.blink::ImageDecoder"*)* @_ZNK5blink12ImageDecoder4SizeEv to i8*), i8* bitcast (void (%"class.WTF::Vector.56"*, %"class.blink::ImageDecoder"*)* @_ZNK5blink12ImageDecoder23GetSupportedDecodeSizesEv to i8*), i8* bitcast (i64 (%"class.blink::ImageDecoder"*)* @_ZNK5blink12ImageDecoder11DecodedSizeEv to i8*), i8* bitcast (i32 (%"class.blink::WEBPImageDecoder"*)* @_ZNK5blink16WEBPImageDecoder17GetYUVSubsamplingEv to i8*), i8* bitcast (i64 (%"class.blink::WEBPImageDecoder"*, i32)* @_ZNK5blink16WEBPImageDecoder14DecodedYUVSizeEN2cc8YUVIndexE to i8*), i8* bitcast (i64 (%"class.blink::WEBPImageDecoder"*, i32)* @_ZNK5blink16WEBPImageDecoder20DecodedYUVWidthBytesEN2cc8YUVIndexE to i8*), i8* bitcast (i32 (%"class.blink::WEBPImageDecoder"*)* @_ZNK5blink16WEBPImageDecoder16GetYUVColorSpaceEv to i8*), i8* bitcast (i8 (%"class.blink::ImageDecoder"*)* @_ZNK5blink12ImageDecoder14GetYUVBitDepthEv to i8*), i8* bitcast (void (%"struct.cc::ImageHeaderMetadata"*, %"class.blink::WEBPImageDecoder"*)* @_ZNK5blink16WEBPImageDecoder33MakeMetadataForDecodeAccelerationEv to i8*), i8* bitcast (i64 (%"class.blink::ImageDecoder"*, i64)* @_ZNK5blink12ImageDecoder16FrameSizeAtIndexEm to i8*), i8* bitcast (i1 (%"class.blink::ImageDecoder"*, i32, i32)* @_ZN5blink12ImageDecoder7SetSizeEjj to i8*), i8* bitcast (i32 (%"class.blink::WEBPImageDecoder"*)* @_ZNK5blink16WEBPImageDecoder15RepetitionCountEv to i8*), i8* bitcast (i1 (%"class.blink::ImageDecoder"*, i64)* @_ZNK5blink12ImageDecoder20FrameHasAlphaAtIndexEm to i8*), i8* bitcast (i1 (%"class.blink::WEBPImageDecoder"*, i64)* @_ZNK5blink16WEBPImageDecoder22FrameIsReceivedAtIndexEm to i8*), i8* bitcast (i64 (%"class.blink::WEBPImageDecoder"*, i64)* @_ZNK5blink16WEBPImageDecoder20FrameDurationAtIndexEm to i8*), i8* bitcast (i64 (%"class.blink::ImageDecoder"*, i64)* @_ZNK5blink12ImageDecoder17FrameBytesAtIndexEm to i8*), i8* bitcast (i1 (%"class.blink::ImageDecoder"*)* @_ZN5blink12ImageDecoder9SetFailedEv to i8*), i8* bitcast (i64 (%"class.blink::ImageDecoder"*, i64)* @_ZN5blink12ImageDecoder21ClearCacheExceptFrameEm to i8*), i8* bitcast (i1 (%"class.blink::ImageDecoder"*, %"class.blink::IntPoint"*)* @_ZNK5blink12ImageDecoder7HotSpotERNS_8IntPointE to i8*), i8* bitcast (void (%"class.blink::ImageDecoder"*, %"class.SkBitmap::Allocator"*)* @_ZN5blink12ImageDecoder18SetMemoryAllocatorEPN8SkBitmap9AllocatorE to i8*), i8* bitcast (void (%"class.blink::WEBPImageDecoder"*)* @_ZN5blink16WEBPImageDecoder11DecodeToYUVEv to i8*), i8* bitcast (i1 (%"class.blink::ImageDecoder"*)* @_ZNK5blink12ImageDecoder37ImageHasBothStillAndAnimatedSubImagesEv to i8*), i8* bitcast (void (%"class.blink::WEBPImageDecoder"*, i64)* @_ZN5blink16WEBPImageDecoder16ClearFrameBufferEm to i8*), i8* bitcast (void (%"class.blink::WEBPImageDecoder"*)* @_ZN5blink16WEBPImageDecoder10DecodeSizeEv to i8*), i8* bitcast (i64 (%"class.blink::WEBPImageDecoder"*)* @_ZN5blink16WEBPImageDecoder16DecodeFrameCountEv to i8*), i8* bitcast (void (%"class.blink::WEBPImageDecoder"*, i64)* @_ZN5blink16WEBPImageDecoder18InitializeNewFrameEm to i8*), i8* bitcast (void (%"class.blink::WEBPImageDecoder"*, i64)* @_ZN5blink16WEBPImageDecoder6DecodeEm to i8*), i8* bitcast (i1 (%"class.blink::WEBPImageDecoder"*, i32)* @_ZN5blink16WEBPImageDecoder34FrameStatusSufficientForSuccessorsEj to i8*), i8* bitcast (void (%"class.blink::WEBPImageDecoder"*, i64)* @_ZN5blink16WEBPImageDecoder17OnInitFrameBufferEm to i8*), i8* bitcast (i1 (%"class.blink::WEBPImageDecoder"*, i64)* @_ZNK5blink16WEBPImageDecoder27CanReusePreviousFrameBufferEm to i8*)] }, align 8
@.str = private unnamed_addr constant [5 x i8] c"ICCP\00", align 1
@_ZTVN5blink12ImageDecoderE = external unnamed_addr constant { [37 x i8*] }, align 8
@_ZN5blink26RuntimeEnabledFeaturesBase44is_decode_lossy_web_p_images_to_yuv_enabled_E = external local_unnamed_addr global i8, align 1
@.str.1 = private unnamed_addr constant [34 x i8] c"Blink.DecodedImage.WebPFileFormat\00", align 1
@.str.2 = private unnamed_addr constant [5 x i8] c"RIFF\00", align 1
@.str.3 = private unnamed_addr constant [9 x i8] c"WEBPVP8 \00", align 1
@.str.4 = private unnamed_addr constant [5 x i8] c"webp\00", align 1
@.str.5 = private unnamed_addr constant [18 x i8] c"new_size >= size_\00", align 1
@.str.6 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.7 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.9 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.10 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@_ZZN12_GLOBAL__N_123UpdateWebPFileFormatUMAERK5sk_spI6SkDataEE24atomic_histogram_pointer.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8

@_ZN5blink16WEBPImageDecoderC1ENS_12ImageDecoder11AlphaOptionERKNS_13ColorBehaviorEm = hidden unnamed_addr alias void (%"class.blink::WEBPImageDecoder"*, i32, %"class.blink::ColorBehavior"*, i64), void (%"class.blink::WEBPImageDecoder"*, i32, %"class.blink::ColorBehavior"*, i64)* @_ZN5blink16WEBPImageDecoderC2ENS_12ImageDecoder11AlphaOptionERKNS_13ColorBehaviorEm
@_ZN5blink16WEBPImageDecoderD1Ev = hidden unnamed_addr alias void (%"class.blink::WEBPImageDecoder"*), void (%"class.blink::WEBPImageDecoder"*)* @_ZN5blink16WEBPImageDecoderD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16WEBPImageDecoderC2ENS_12ImageDecoder11AlphaOptionERKNS_13ColorBehaviorEm(%"class.blink::WEBPImageDecoder"*, i32, %"class.blink::ColorBehavior"* nocapture readonly dereferenceable(4), i64) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [37 x i8*] }, { [37 x i8*] }* @_ZTVN5blink12ImageDecoderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 0, i32 1, i32 0
  store %"class.blink::SegmentReader"* null, %"class.blink::SegmentReader"** %6, align 8
  %7 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 0, i32 2
  %8 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 0, i32 2, i32 0, i32 1, i64 0
  %9 = bitcast %"class.WTF::Vector"* %7 to i8**
  store i8* %8, i8** %9, align 8
  %10 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 0, i32 2, i32 0, i32 0, i32 1
  store i32 1, i32* %10, align 8
  %11 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 0, i32 2, i32 0, i32 0, i32 2
  store i32 0, i32* %11, align 4
  %12 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 0, i32 3
  %13 = icmp eq i32 %1, 0
  %14 = zext i1 %13 to i8
  store i8 %14, i8* %12, align 8
  %15 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 0, i32 4
  store i32 0, i32* %15, align 4
  %16 = getelementptr inbounds %"class.blink::ColorBehavior", %"class.blink::ColorBehavior"* %2, i64 0, i32 0
  %17 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 0, i32 5, i32 0
  %18 = load i32, i32* %16, align 4
  store i32 %18, i32* %17, align 8
  %19 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 0, i32 6, i32 0
  store i8 1, i8* %19, align 1
  %20 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 0, i32 7, i32 0
  store i32 0, i32* %20, align 4
  %21 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 0, i32 7, i32 1
  store i32 0, i32* %21, align 4
  %22 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 0, i32 8
  store i64 %3, i64* %22, align 8
  %23 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 0, i32 9
  store i8 0, i8* %23, align 8
  %24 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 0, i32 10
  %25 = bitcast %"class.std::__1::unique_ptr"* %24 to i64*
  store i64 0, i64* %25, align 8
  %26 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 0, i32 11
  store i8 0, i8* %26, align 8
  %27 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 0, i32 12, i32 0
  %28 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 0, i32 16
  %29 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 0, i32 19
  %30 = bitcast %"class.std::__1::unique_ptr.22"* %29 to i64*
  store i64 0, i64* %30, align 8
  %31 = bitcast i32* %27 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %31, i8 0, i64 11, i1 false) #13
  %32 = bitcast %"class.std::__1::unique_ptr.9"* %28 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %32, i8 0, i64 17, i1 false) #13
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [37 x i8*] }, { [37 x i8*] }* @_ZTVN5blink16WEBPImageDecoderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %33 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 1
  store %struct.WebPIDecoder* null, %struct.WebPIDecoder** %33, align 8
  %34 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 3
  store i32 0, i32* %34, align 8
  %35 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 4
  store i8 0, i8* %35, align 4
  %36 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 5
  store %struct.WebPDemuxer* null, %struct.WebPDemuxer** %36, align 8
  %37 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 6
  store i32 0, i32* %37, align 8
  %38 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 7
  store i8 0, i8* %38, align 4
  %39 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 8
  store i32 0, i32* %39, align 8
  %40 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 9
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 11, i32 0
  %42 = select i1 %13, void (%"class.blink::ImageFrame"*, %"class.blink::ImageFrame"*, i32, i32, i32)* @_ZN12_GLOBAL__N_123alphaBlendPremultipliedERN5blink10ImageFrameES2_iii, void (%"class.blink::ImageFrame"*, %"class.blink::ImageFrame"*, i32, i32, i32)* @_ZN12_GLOBAL__N_126alphaBlendNonPremultipliedERN5blink10ImageFrameES2_iii
  %43 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 10
  %44 = bitcast %class.SkData** %41 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %44, i8 0, i64 24, i1 false)
  store void (%"class.blink::ImageFrame"*, %"class.blink::ImageFrame"*, i32, i32, i32)* %42, void (%"class.blink::ImageFrame"*, %"class.blink::ImageFrame"*, i32, i32, i32)** %43, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_123alphaBlendPremultipliedERN5blink10ImageFrameES2_iii(%"class.blink::ImageFrame"* nocapture readonly dereferenceable(128), %"class.blink::ImageFrame"* nocapture readonly dereferenceable(128), i32, i32, i32) #1 {
  %6 = icmp sgt i32 %4, 0
  br i1 %6, label %7, label %14

7:                                                ; preds = %5
  %8 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %0, i64 0, i32 0, i32 1, i32 0
  %9 = sext i32 %2 to i64
  %10 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %0, i64 0, i32 0, i32 1, i32 1
  %11 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %1, i64 0, i32 0, i32 1, i32 0
  %12 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %1, i64 0, i32 0, i32 1, i32 1
  %13 = zext i32 %4 to i64
  br label %15

14:                                               ; preds = %49, %5
  ret void

15:                                               ; preds = %49, %7
  %16 = phi i64 [ 0, %7 ], [ %50, %49 ]
  %17 = load i8*, i8** %8, align 8
  %18 = load i64, i64* %10, align 8
  %19 = mul i64 %18, %9
  %20 = getelementptr inbounds i8, i8* %17, i64 %19
  %21 = trunc i64 %16 to i32
  %22 = add i32 %21, %3
  %23 = shl i32 %22, 2
  %24 = sext i32 %23 to i64
  %25 = getelementptr inbounds i8, i8* %20, i64 %24
  %26 = bitcast i8* %25 to i32*
  %27 = load i32, i32* %26, align 4
  %28 = icmp ult i32 %27, -16777216
  br i1 %28, label %29, label %49

29:                                               ; preds = %15
  %30 = load i8*, i8** %11, align 8
  %31 = load i64, i64* %12, align 8
  %32 = mul i64 %31, %9
  %33 = getelementptr inbounds i8, i8* %30, i64 %32
  %34 = getelementptr inbounds i8, i8* %33, i64 %24
  %35 = bitcast i8* %34 to i32*
  %36 = load i32, i32* %35, align 4
  %37 = lshr i32 %27, 24
  %38 = sub nuw nsw i32 256, %37
  %39 = and i32 %36, 16711935
  %40 = mul i32 %39, %38
  %41 = lshr i32 %40, 8
  %42 = lshr i32 %36, 8
  %43 = and i32 %42, 16711935
  %44 = mul i32 %43, %38
  %45 = and i32 %41, 16711935
  %46 = and i32 %44, -16711936
  %47 = or i32 %45, %46
  %48 = add i32 %47, %27
  store i32 %48, i32* %26, align 4
  br label %49

49:                                               ; preds = %29, %15
  %50 = add nuw nsw i64 %16, 1
  %51 = icmp eq i64 %50, %13
  br i1 %51, label %14, label %15
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_126alphaBlendNonPremultipliedERN5blink10ImageFrameES2_iii(%"class.blink::ImageFrame"* nocapture readonly dereferenceable(128), %"class.blink::ImageFrame"* nocapture readonly dereferenceable(128), i32, i32, i32) #0 {
  %6 = icmp sgt i32 %4, 0
  br i1 %6, label %7, label %14

7:                                                ; preds = %5
  %8 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %0, i64 0, i32 0, i32 1, i32 0
  %9 = sext i32 %2 to i64
  %10 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %0, i64 0, i32 0, i32 1, i32 1
  %11 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %1, i64 0, i32 0, i32 1, i32 0
  %12 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %1, i64 0, i32 0, i32 1, i32 1
  %13 = zext i32 %4 to i64
  br label %15

14:                                               ; preds = %37, %5
  ret void

15:                                               ; preds = %37, %7
  %16 = phi i64 [ 0, %7 ], [ %38, %37 ]
  %17 = load i8*, i8** %8, align 8
  %18 = load i64, i64* %10, align 8
  %19 = mul i64 %18, %9
  %20 = getelementptr inbounds i8, i8* %17, i64 %19
  %21 = trunc i64 %16 to i32
  %22 = add i32 %21, %3
  %23 = shl i32 %22, 2
  %24 = sext i32 %23 to i64
  %25 = getelementptr inbounds i8, i8* %20, i64 %24
  %26 = bitcast i8* %25 to i32*
  %27 = load i32, i32* %26, align 4
  %28 = icmp ult i32 %27, -16777216
  br i1 %28, label %29, label %37

29:                                               ; preds = %15
  %30 = load i8*, i8** %11, align 8
  %31 = load i64, i64* %12, align 8
  %32 = mul i64 %31, %9
  %33 = getelementptr inbounds i8, i8* %30, i64 %32
  %34 = getelementptr inbounds i8, i8* %33, i64 %24
  %35 = bitcast i8* %34 to i32*
  %36 = load i32, i32* %35, align 4
  tail call void @_ZN5blink10ImageFrame18BlendSrcOverDstRawEPjj(i32* %26, i32 %36) #13
  br label %37

37:                                               ; preds = %29, %15
  %38 = add nuw nsw i64 %16, 1
  %39 = icmp eq i64 %38, %13
  br i1 %39, label %14, label %15
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16WEBPImageDecoderD2Ev(%"class.blink::WEBPImageDecoder"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [37 x i8*] }, { [37 x i8*] }* @_ZTVN5blink16WEBPImageDecoderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 5
  %4 = load %struct.WebPDemuxer*, %struct.WebPDemuxer** %3, align 8
  tail call void @WebPDemuxDelete(%struct.WebPDemuxer* %4) #13
  store %struct.WebPDemuxer* null, %struct.WebPDemuxer** %3, align 8
  %5 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 11, i32 0
  %6 = load %class.SkData*, %class.SkData** %5, align 8
  store %class.SkData* null, %class.SkData** %5, align 8
  %7 = icmp eq %class.SkData* %6, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %class.SkData, %class.SkData* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = atomicrmw add i32* %9, i32 -1 acq_rel
  %11 = icmp eq i32 %10, 1
  br i1 %11, label %12, label %14

12:                                               ; preds = %8
  tail call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %6) #13
  %13 = bitcast %class.SkData* %6 to i8*
  tail call void @_ZN6SkDatadlEPv(i8* nonnull %13) #13
  br label %14

14:                                               ; preds = %1, %8, %12
  %15 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 1
  %16 = load %struct.WebPIDecoder*, %struct.WebPIDecoder** %15, align 8
  tail call void @WebPIDelete(%struct.WebPIDecoder* %16) #13
  store %struct.WebPIDecoder* null, %struct.WebPIDecoder** %15, align 8
  %17 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 9
  store i32 0, i32* %17, align 4
  %18 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 4
  store i8 0, i8* %18, align 4
  %19 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 12, i32 0, i32 0, i32 0
  %20 = load i8*, i8** %19, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %28, label %22, !prof !2

22:                                               ; preds = %14
  %23 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 12, i32 0, i32 0, i32 2
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %27, label %26, !prof !3

26:                                               ; preds = %22
  store i32 0, i32* %23, align 4
  br label %27

27:                                               ; preds = %26, %22
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %20) #13
  store i8* null, i8** %19, align 8
  br label %28

28:                                               ; preds = %14, %27
  %29 = load %class.SkData*, %class.SkData** %5, align 8
  %30 = icmp eq %class.SkData* %29, null
  br i1 %30, label %37, label %31

31:                                               ; preds = %28
  %32 = getelementptr inbounds %class.SkData, %class.SkData* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = atomicrmw add i32* %32, i32 -1 acq_rel
  %34 = icmp eq i32 %33, 1
  br i1 %34, label %35, label %37

35:                                               ; preds = %31
  tail call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %29) #13
  %36 = bitcast %class.SkData* %29 to i8*
  tail call void @_ZN6SkDatadlEPv(i8* nonnull %36) #13
  br label %37

37:                                               ; preds = %28, %31, %35
  %38 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 0
  tail call void @_ZN5blink12ImageDecoderD2Ev(%"class.blink::ImageDecoder"* %38) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16WEBPImageDecoder5ClearEv(%"class.blink::WEBPImageDecoder"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 5
  %3 = load %struct.WebPDemuxer*, %struct.WebPDemuxer** %2, align 8
  tail call void @WebPDemuxDelete(%struct.WebPDemuxer* %3) #13
  store %struct.WebPDemuxer* null, %struct.WebPDemuxer** %2, align 8
  %4 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 11, i32 0
  %5 = load %class.SkData*, %class.SkData** %4, align 8
  store %class.SkData* null, %class.SkData** %4, align 8
  %6 = icmp eq %class.SkData* %5, null
  br i1 %6, label %13, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %class.SkData, %class.SkData* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw add i32* %8, i32 -1 acq_rel
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  tail call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %5) #13
  %12 = bitcast %class.SkData* %5 to i8*
  tail call void @_ZN6SkDatadlEPv(i8* nonnull %12) #13
  br label %13

13:                                               ; preds = %1, %7, %11
  %14 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 1
  %15 = load %struct.WebPIDecoder*, %struct.WebPIDecoder** %14, align 8
  tail call void @WebPIDelete(%struct.WebPIDecoder* %15) #13
  store %struct.WebPIDecoder* null, %struct.WebPIDecoder** %14, align 8
  %16 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 9
  store i32 0, i32* %16, align 4
  %17 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 4
  store i8 0, i8* %17, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12ImageDecoderD2Ev(%"class.blink::ImageDecoder"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ImageDecoder", %"class.blink::ImageDecoder"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [37 x i8*] }, { [37 x i8*] }* @_ZTVN5blink12ImageDecoderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::ImageDecoder", %"class.blink::ImageDecoder"* %0, i64 0, i32 19, i32 0, i32 0, i32 0
  %4 = load %"class.blink::ColorProfileTransform"*, %"class.blink::ColorProfileTransform"** %3, align 8
  store %"class.blink::ColorProfileTransform"* null, %"class.blink::ColorProfileTransform"** %3, align 8
  %5 = icmp eq %"class.blink::ColorProfileTransform"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.blink::ColorProfileTransform"* %4 to i8*
  tail call void @free(i8* %7) #13
  br label %8

8:                                                ; preds = %1, %6
  %9 = getelementptr inbounds %"class.blink::ImageDecoder", %"class.blink::ImageDecoder"* %0, i64 0, i32 17, i32 0
  %10 = load %class.SkColorSpace*, %class.SkColorSpace** %9, align 8
  %11 = icmp eq %class.SkColorSpace* %10, null
  br i1 %11, label %18, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = atomicrmw add i32* %13, i32 -1 acq_rel
  %15 = icmp eq i32 %14, 1
  br i1 %15, label %16, label %18

16:                                               ; preds = %12
  %17 = bitcast %class.SkColorSpace* %10 to i8*
  tail call void @_ZdlPv(i8* %17) #14
  br label %18

18:                                               ; preds = %8, %12, %16
  %19 = getelementptr inbounds %"class.blink::ImageDecoder", %"class.blink::ImageDecoder"* %0, i64 0, i32 16, i32 0, i32 0, i32 0
  %20 = load %"class.blink::ColorProfile"*, %"class.blink::ColorProfile"** %19, align 8
  store %"class.blink::ColorProfile"* null, %"class.blink::ColorProfile"** %19, align 8
  %21 = icmp eq %"class.blink::ColorProfile"* %20, null
  br i1 %21, label %29, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.blink::ColorProfile", %"class.blink::ColorProfile"* %20, i64 0, i32 1, i32 0, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8
  store i8* null, i8** %23, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %27, label %26

26:                                               ; preds = %22
  tail call void @_ZdaPv(i8* nonnull %24) #14
  br label %27

27:                                               ; preds = %26, %22
  %28 = bitcast %"class.blink::ColorProfile"* %20 to i8*
  tail call void @free(i8* %28) #13
  br label %29

29:                                               ; preds = %18, %27
  %30 = getelementptr inbounds %"class.blink::ImageDecoder", %"class.blink::ImageDecoder"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %31 = load %"class.blink::ImagePlanes"*, %"class.blink::ImagePlanes"** %30, align 8
  store %"class.blink::ImagePlanes"* null, %"class.blink::ImagePlanes"** %30, align 8
  %32 = icmp eq %"class.blink::ImagePlanes"* %31, null
  br i1 %32, label %35, label %33

33:                                               ; preds = %29
  %34 = bitcast %"class.blink::ImagePlanes"* %31 to i8*
  tail call void @free(i8* %34) #13
  br label %35

35:                                               ; preds = %29, %33
  %36 = getelementptr inbounds %"class.blink::ImageDecoder", %"class.blink::ImageDecoder"* %0, i64 0, i32 2
  %37 = getelementptr inbounds %"class.blink::ImageDecoder", %"class.blink::ImageDecoder"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %38 = load i32, i32* %37, align 4
  %39 = icmp eq i32 %38, 0
  %40 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %36, i64 0, i32 0, i32 0, i32 0
  br i1 %39, label %51, label %41, !prof !3

41:                                               ; preds = %35
  %42 = load %"class.blink::ImageFrame"*, %"class.blink::ImageFrame"** %40, align 8
  %43 = zext i32 %38 to i64
  %44 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %42, i64 %43
  br label %45

45:                                               ; preds = %45, %41
  %46 = phi %"class.blink::ImageFrame"* [ %48, %45 ], [ %42, %41 ]
  %47 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %46, i64 0, i32 0
  tail call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* %47) #13
  %48 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %46, i64 1
  %49 = icmp eq %"class.blink::ImageFrame"* %48, %44
  br i1 %49, label %50, label %45

50:                                               ; preds = %45
  store i32 0, i32* %37, align 4
  br label %51

51:                                               ; preds = %50, %35
  %52 = load %"class.blink::ImageFrame"*, %"class.blink::ImageFrame"** %40, align 8
  %53 = getelementptr inbounds %"class.blink::ImageDecoder", %"class.blink::ImageDecoder"* %0, i64 0, i32 2, i32 0, i32 1, i64 0
  %54 = bitcast i8* %53 to %"class.blink::ImageFrame"*
  %55 = icmp eq %"class.blink::ImageFrame"* %52, %54
  br i1 %55, label %58, label %56, !prof !2

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %36, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink10ImageFrameELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer"* %57, %"class.blink::ImageFrame"* %52) #13
  br label %58

58:                                               ; preds = %51, %56
  store %"class.blink::ImageFrame"* null, %"class.blink::ImageFrame"** %40, align 8
  %59 = getelementptr inbounds %"class.blink::ImageDecoder", %"class.blink::ImageDecoder"* %0, i64 0, i32 1, i32 0
  %60 = load %"class.blink::SegmentReader"*, %"class.blink::SegmentReader"** %59, align 8
  %61 = icmp eq %"class.blink::SegmentReader"* %60, null
  br i1 %61, label %74, label %62

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.blink::SegmentReader", %"class.blink::SegmentReader"* %60, i64 0, i32 1, i32 0
  %64 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %63, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = atomicrmw sub i32* %64, i32 1 acq_rel
  %66 = icmp eq i32 %65, 1
  br i1 %66, label %67, label %74

67:                                               ; preds = %62
  %68 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %63, i64 -2
  %69 = bitcast %"class.base::RefCountedThreadSafe"* %68 to %"class.blink::SegmentReader"*
  %70 = bitcast %"class.base::RefCountedThreadSafe"* %68 to void (%"class.blink::SegmentReader"*)***
  %71 = load void (%"class.blink::SegmentReader"*)**, void (%"class.blink::SegmentReader"*)*** %70, align 8
  %72 = getelementptr inbounds void (%"class.blink::SegmentReader"*)*, void (%"class.blink::SegmentReader"*)** %71, i64 1
  %73 = load void (%"class.blink::SegmentReader"*)*, void (%"class.blink::SegmentReader"*)** %72, align 8
  tail call void %73(%"class.blink::SegmentReader"* nonnull %69) #13
  br label %74

74:                                               ; preds = %58, %62, %67
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16WEBPImageDecoderD0Ev(%"class.blink::WEBPImageDecoder"*) unnamed_addr #0 align 2 {
  tail call void @_ZN5blink16WEBPImageDecoderD2Ev(%"class.blink::WEBPImageDecoder"* %0) #13
  %2 = bitcast %"class.blink::WEBPImageDecoder"* %0 to i8*
  tail call void @free(i8* %2) #13
  ret void
}

declare void @WebPDemuxDelete(%struct.WebPDemuxer*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16WEBPImageDecoder12ClearDecoderEv(%"class.blink::WEBPImageDecoder"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 1
  %3 = load %struct.WebPIDecoder*, %struct.WebPIDecoder** %2, align 8
  tail call void @WebPIDelete(%struct.WebPIDecoder* %3) #13
  store %struct.WebPIDecoder* null, %struct.WebPIDecoder** %2, align 8
  %4 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 9
  store i32 0, i32* %4, align 4
  %5 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 4
  store i8 0, i8* %5, align 4
  ret void
}

declare void @WebPIDelete(%struct.WebPIDecoder*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink16WEBPImageDecoder13RGBOutputModeEv(%"class.blink::WEBPImageDecoder"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 0
  %3 = tail call %"class.blink::ColorProfileTransform"* @_ZN5blink12ImageDecoder14ColorTransformEv(%"class.blink::ImageDecoder"* %2) #13
  %4 = icmp eq %"class.blink::ColorProfileTransform"* %3, null
  br i1 %4, label %5, label %15

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 3
  %7 = load i32, i32* %6, align 8
  %8 = and i32 %7, 16
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %15, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !4
  %13 = icmp eq i8 %12, 0
  %14 = select i1 %13, i32 3, i32 8
  br label %15

15:                                               ; preds = %10, %5, %1
  %16 = phi i32 [ 3, %1 ], [ 3, %5 ], [ %14, %10 ]
  ret i32 %16
}

declare %"class.blink::ColorProfileTransform"* @_ZN5blink12ImageDecoder14ColorTransformEv(%"class.blink::ImageDecoder"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink16WEBPImageDecoder26CanAllowYUVDecodingForWebPEv(%"class.blink::WEBPImageDecoder"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %struct.WebPBitstreamFeatures, align 4
  %3 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 11, i32 0
  %4 = load %class.SkData*, %class.SkData** %3, align 8
  %5 = icmp eq %class.SkData* %4, null
  br i1 %5, label %39, label %6

6:                                                ; preds = %1
  %7 = bitcast %struct.WebPBitstreamFeatures* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %7) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %7, i8 -86, i64 40, i1 false)
  %8 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase44is_decode_lossy_web_p_images_to_yuv_enabled_E, align 1, !range !4
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %37, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 6
  %12 = load i32, i32* %11, align 8
  %13 = add i32 %12, -1
  %14 = icmp ult i32 %13, 2
  br i1 %14, label %15, label %37

15:                                               ; preds = %10
  %16 = getelementptr inbounds %class.SkData, %class.SkData* %4, i64 0, i32 3
  %17 = load i8*, i8** %16, align 8
  %18 = getelementptr inbounds %class.SkData, %class.SkData* %4, i64 0, i32 4
  %19 = load i64, i64* %18, align 8
  %20 = call i32 @WebPGetFeaturesInternal(i8* %17, i64 %19, %struct.WebPBitstreamFeatures* nonnull %2, i32 521) #13
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %37

22:                                               ; preds = %15
  %23 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 3
  %24 = load i32, i32* %23, align 8
  %25 = getelementptr inbounds %struct.WebPBitstreamFeatures, %struct.WebPBitstreamFeatures* %2, i64 0, i32 4
  %26 = load i32, i32* %25, align 4
  %27 = icmp eq i32 %26, 1
  br i1 %27, label %28, label %37

28:                                               ; preds = %22
  %29 = and i32 %24, 2
  %30 = getelementptr inbounds %struct.WebPBitstreamFeatures, %struct.WebPBitstreamFeatures* %2, i64 0, i32 2
  %31 = load i32, i32* %30, align 4
  %32 = or i32 %31, %29
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %37

34:                                               ; preds = %28
  %35 = and i32 %24, 32
  %36 = icmp eq i32 %35, 0
  br label %37

37:                                               ; preds = %28, %6, %10, %15, %34, %22
  %38 = phi i1 [ %36, %34 ], [ false, %28 ], [ false, %22 ], [ false, %10 ], [ false, %15 ], [ false, %6 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %7) #13
  br label %39

39:                                               ; preds = %1, %37
  %40 = phi i1 [ %38, %37 ], [ false, %1 ]
  ret i1 %40
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16WEBPImageDecoder9OnSetDataEPNS_13SegmentReaderE(%"class.blink::WEBPImageDecoder"*, %"class.blink::SegmentReader"* nocapture readnone) unnamed_addr #0 align 2 {
  %3 = alloca %struct.WebPBitstreamFeatures, align 4
  %4 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 7
  store i8 0, i8* %4, align 4
  %5 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 0, i32 14
  %6 = load i8, i8* %5, align 1, !range !4
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %52, label %8

8:                                                ; preds = %2
  %9 = tail call zeroext i1 @_ZN5blink16WEBPImageDecoder13UpdateDemuxerEv(%"class.blink::WEBPImageDecoder"* %0)
  %10 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase44is_decode_lossy_web_p_images_to_yuv_enabled_E, align 1, !range !4
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %49, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 11, i32 0
  %14 = load %class.SkData*, %class.SkData** %13, align 8
  %15 = icmp eq %class.SkData* %14, null
  br i1 %15, label %46, label %16

16:                                               ; preds = %12
  %17 = bitcast %struct.WebPBitstreamFeatures* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %17) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %17, i8 -86, i64 40, i1 false) #13
  %18 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 6
  %19 = load i32, i32* %18, align 8
  %20 = add i32 %19, -1
  %21 = icmp ult i32 %20, 2
  br i1 %21, label %22, label %44

22:                                               ; preds = %16
  %23 = getelementptr inbounds %class.SkData, %class.SkData* %14, i64 0, i32 3
  %24 = load i8*, i8** %23, align 8
  %25 = getelementptr inbounds %class.SkData, %class.SkData* %14, i64 0, i32 4
  %26 = load i64, i64* %25, align 8
  %27 = call i32 @WebPGetFeaturesInternal(i8* %24, i64 %26, %struct.WebPBitstreamFeatures* nonnull %3, i32 521) #13
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %44

29:                                               ; preds = %22
  %30 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 3
  %31 = load i32, i32* %30, align 8
  %32 = getelementptr inbounds %struct.WebPBitstreamFeatures, %struct.WebPBitstreamFeatures* %3, i64 0, i32 4
  %33 = load i32, i32* %32, align 4
  %34 = icmp eq i32 %33, 1
  br i1 %34, label %35, label %44

35:                                               ; preds = %29
  %36 = and i32 %31, 2
  %37 = getelementptr inbounds %struct.WebPBitstreamFeatures, %struct.WebPBitstreamFeatures* %3, i64 0, i32 2
  %38 = load i32, i32* %37, align 4
  %39 = or i32 %38, %36
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %44

41:                                               ; preds = %35
  %42 = and i32 %31, 32
  %43 = icmp eq i32 %42, 0
  br label %44

44:                                               ; preds = %41, %35, %29, %22, %16
  %45 = phi i1 [ %43, %41 ], [ false, %35 ], [ false, %29 ], [ false, %16 ], [ false, %22 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %17) #13
  br label %46

46:                                               ; preds = %12, %44
  %47 = phi i1 [ %45, %44 ], [ false, %12 ]
  %48 = zext i1 %47 to i8
  br label %49

49:                                               ; preds = %8, %46
  %50 = phi i8 [ 0, %8 ], [ %48, %46 ]
  %51 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 0, i32 9
  store i8 %50, i8* %51, align 8
  br label %52

52:                                               ; preds = %2, %49
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink16WEBPImageDecoder13UpdateDemuxerEv(%"class.blink::WEBPImageDecoder"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %struct.WebPBitstreamFeatures, align 4
  %3 = alloca %class.sk_sp.28, align 8
  %4 = alloca i8*, align 8
  %5 = alloca %class.sk_sp.28, align 8
  %6 = alloca <2 x i64>, align 16
  %7 = bitcast <2 x i64>* %6 to %struct.WebPData*
  %8 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 0
  %9 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 0, i32 15
  %10 = load i8, i8* %9, align 2, !range !4
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %12, label %350

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 0, i32 1, i32 0
  %14 = load %"class.blink::SegmentReader"*, %"class.blink::SegmentReader"** %13, align 8
  %15 = bitcast %"class.blink::SegmentReader"* %14 to i64 (%"class.blink::SegmentReader"*)***
  %16 = load i64 (%"class.blink::SegmentReader"*)**, i64 (%"class.blink::SegmentReader"*)*** %15, align 8
  %17 = getelementptr inbounds i64 (%"class.blink::SegmentReader"*)*, i64 (%"class.blink::SegmentReader"*)** %16, i64 2
  %18 = load i64 (%"class.blink::SegmentReader"*)*, i64 (%"class.blink::SegmentReader"*)** %17, align 8
  %19 = tail call i64 %18(%"class.blink::SegmentReader"* %14) #13
  %20 = icmp ult i64 %19, 20
  br i1 %20, label %21, label %26

21:                                               ; preds = %12
  %22 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 0, i32 14
  %23 = load i8, i8* %22, align 1, !range !4
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %350, label %25

25:                                               ; preds = %21
  store i8 1, i8* %9, align 2
  br label %350

26:                                               ; preds = %12
  %27 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 7
  %28 = load i8, i8* %27, align 4, !range !4
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %30, label %350

30:                                               ; preds = %26
  store i8 1, i8* %27, align 4
  %31 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 11
  %32 = getelementptr inbounds %class.sk_sp.28, %class.sk_sp.28* %31, i64 0, i32 0
  %33 = load %class.SkData*, %class.SkData** %32, align 8
  %34 = icmp eq %class.SkData* %33, null
  br i1 %34, label %45, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %class.SkData, %class.SkData* %33, i64 0, i32 4
  %37 = load i64, i64* %36, align 8
  %38 = load %"class.blink::SegmentReader"*, %"class.blink::SegmentReader"** %13, align 8
  %39 = bitcast %"class.blink::SegmentReader"* %38 to i64 (%"class.blink::SegmentReader"*)***
  %40 = load i64 (%"class.blink::SegmentReader"*)**, i64 (%"class.blink::SegmentReader"*)*** %39, align 8
  %41 = getelementptr inbounds i64 (%"class.blink::SegmentReader"*)*, i64 (%"class.blink::SegmentReader"*)** %40, i64 2
  %42 = load i64 (%"class.blink::SegmentReader"*)*, i64 (%"class.blink::SegmentReader"*)** %41, align 8
  %43 = tail call i64 %42(%"class.blink::SegmentReader"* %38) #13
  %44 = icmp ult i64 %37, %43
  br i1 %44, label %45, label %350

45:                                               ; preds = %30, %35
  %46 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 0, i32 14
  %47 = load i8, i8* %46, align 1, !range !4
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %80, label %49

49:                                               ; preds = %45
  %50 = load %class.SkData*, %class.SkData** %32, align 8
  %51 = icmp eq %class.SkData* %50, null
  br i1 %51, label %52, label %80

52:                                               ; preds = %49
  %53 = bitcast %class.sk_sp.28* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %53) #13
  %54 = load %"class.blink::SegmentReader"*, %"class.blink::SegmentReader"** %13, align 8
  %55 = bitcast %"class.blink::SegmentReader"* %54 to void (%class.sk_sp.28*, %"class.blink::SegmentReader"*)***
  %56 = load void (%class.sk_sp.28*, %"class.blink::SegmentReader"*)**, void (%class.sk_sp.28*, %"class.blink::SegmentReader"*)*** %55, align 8
  %57 = getelementptr inbounds void (%class.sk_sp.28*, %"class.blink::SegmentReader"*)*, void (%class.sk_sp.28*, %"class.blink::SegmentReader"*)** %56, i64 4
  %58 = load void (%class.sk_sp.28*, %"class.blink::SegmentReader"*)*, void (%class.sk_sp.28*, %"class.blink::SegmentReader"*)** %57, align 8
  call void %58(%class.sk_sp.28* nonnull sret %3, %"class.blink::SegmentReader"* %54) #13
  %59 = getelementptr inbounds %class.sk_sp.28, %class.sk_sp.28* %3, i64 0, i32 0
  %60 = bitcast %class.sk_sp.28* %3 to i64*
  %61 = load i64, i64* %60, align 8
  store %class.SkData* null, %class.SkData** %59, align 8
  %62 = load %class.SkData*, %class.SkData** %32, align 8
  %63 = bitcast %class.sk_sp.28* %31 to i64*
  store i64 %61, i64* %63, align 8
  %64 = icmp eq %class.SkData* %62, null
  br i1 %64, label %175, label %65

65:                                               ; preds = %52
  %66 = getelementptr inbounds %class.SkData, %class.SkData* %62, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = atomicrmw add i32* %66, i32 -1 acq_rel
  %68 = icmp eq i32 %67, 1
  br i1 %68, label %69, label %71

69:                                               ; preds = %65
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %62) #13
  %70 = bitcast %class.SkData* %62 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %70) #13
  br label %71

71:                                               ; preds = %65, %69
  %72 = load %class.SkData*, %class.SkData** %59, align 8
  %73 = icmp eq %class.SkData* %72, null
  br i1 %73, label %175, label %74

74:                                               ; preds = %71
  %75 = getelementptr inbounds %class.SkData, %class.SkData* %72, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = atomicrmw add i32* %75, i32 -1 acq_rel
  %77 = icmp eq i32 %76, 1
  br i1 %77, label %78, label %175

78:                                               ; preds = %74
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %72) #13
  %79 = bitcast %class.SkData* %72 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %79) #13
  br label %175

80:                                               ; preds = %49, %45
  %81 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 12
  %82 = load %"class.blink::SegmentReader"*, %"class.blink::SegmentReader"** %13, align 8
  %83 = bitcast %"class.blink::SegmentReader"* %82 to i64 (%"class.blink::SegmentReader"*)***
  %84 = load i64 (%"class.blink::SegmentReader"*)**, i64 (%"class.blink::SegmentReader"*)*** %83, align 8
  %85 = getelementptr inbounds i64 (%"class.blink::SegmentReader"*)*, i64 (%"class.blink::SegmentReader"*)** %84, i64 2
  %86 = load i64 (%"class.blink::SegmentReader"*)*, i64 (%"class.blink::SegmentReader"*)** %85, align 8
  %87 = tail call i64 %86(%"class.blink::SegmentReader"* %82) #13
  %88 = trunc i64 %87 to i32
  %89 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 12, i32 0, i32 0, i32 1
  %90 = load i32, i32* %89, align 8
  %91 = icmp ult i32 %90, %88
  br i1 %91, label %92, label %115, !prof !2

92:                                               ; preds = %80
  %93 = getelementptr inbounds %"class.WTF::Vector.30", %"class.WTF::Vector.30"* %81, i64 0, i32 0, i32 0, i32 0
  %94 = load i8*, i8** %93, align 8
  %95 = icmp eq i8* %94, null
  %96 = and i64 %87, 4294967295
  %97 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIcEEmm(i64 %96) #13
  %98 = tail call i8* @_ZN3WTF18PartitionAllocator21AllocateVectorBackingIcEEPT_m(i64 %97) #13
  %99 = ptrtoint i8* %98 to i64
  br i1 %95, label %112, label %100

100:                                              ; preds = %92
  %101 = load i8*, i8** %93, align 8
  %102 = icmp ne i8* %98, null
  %103 = icmp ne i8* %101, null
  %104 = and i1 %102, %103
  br i1 %104, label %105, label %110, !prof !2

105:                                              ; preds = %100
  %106 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 12, i32 0, i32 0, i32 2
  %107 = load i32, i32* %106, align 4
  %108 = zext i32 %107 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %98, i8* nonnull align 1 %101, i64 %108, i1 false) #13
  %109 = load i8*, i8** %93, align 8
  br label %110

110:                                              ; preds = %105, %100
  %111 = phi i8* [ %101, %100 ], [ %109, %105 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %111) #13
  br label %112

112:                                              ; preds = %92, %110
  %113 = bitcast %"class.WTF::Vector.30"* %81 to i64*
  store atomic i64 %99, i64* %113 monotonic, align 8
  %114 = trunc i64 %97 to i32
  store i32 %114, i32* %89, align 8
  br label %115

115:                                              ; preds = %112, %80
  %116 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 12, i32 0, i32 0, i32 2
  %117 = load i32, i32* %116, align 4
  %118 = zext i32 %117 to i64
  %119 = load %"class.blink::SegmentReader"*, %"class.blink::SegmentReader"** %13, align 8
  %120 = bitcast %"class.blink::SegmentReader"* %119 to i64 (%"class.blink::SegmentReader"*)***
  %121 = load i64 (%"class.blink::SegmentReader"*)**, i64 (%"class.blink::SegmentReader"*)*** %120, align 8
  %122 = getelementptr inbounds i64 (%"class.blink::SegmentReader"*)*, i64 (%"class.blink::SegmentReader"*)** %121, i64 2
  %123 = load i64 (%"class.blink::SegmentReader"*)*, i64 (%"class.blink::SegmentReader"*)** %122, align 8
  %124 = call i64 %123(%"class.blink::SegmentReader"* %119) #13
  %125 = icmp ugt i64 %124, %118
  br i1 %125, label %126, label %148

126:                                              ; preds = %115
  %127 = bitcast i8** %4 to i8*
  br label %128

128:                                              ; preds = %126, %128
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %127) #13
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %4, align 8
  %129 = load %"class.blink::SegmentReader"*, %"class.blink::SegmentReader"** %13, align 8
  %130 = load i32, i32* %116, align 4
  %131 = zext i32 %130 to i64
  %132 = bitcast %"class.blink::SegmentReader"* %129 to i64 (%"class.blink::SegmentReader"*, i8**, i64)***
  %133 = load i64 (%"class.blink::SegmentReader"*, i8**, i64)**, i64 (%"class.blink::SegmentReader"*, i8**, i64)*** %132, align 8
  %134 = getelementptr inbounds i64 (%"class.blink::SegmentReader"*, i8**, i64)*, i64 (%"class.blink::SegmentReader"*, i8**, i64)** %133, i64 3
  %135 = load i64 (%"class.blink::SegmentReader"*, i8**, i64)*, i64 (%"class.blink::SegmentReader"*, i8**, i64)** %134, align 8
  %136 = call i64 %135(%"class.blink::SegmentReader"* %129, i8** nonnull dereferenceable(8) %4, i64 %131) #13
  %137 = load i8*, i8** %4, align 8
  %138 = trunc i64 %136 to i32
  call void @_ZN3WTF6VectorIcLj0ENS_18PartitionAllocatorEE6AppendIcEEvPKT_j(%"class.WTF::Vector.30"* %81, i8* %137, i32 %138)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %127) #13
  %139 = load i32, i32* %116, align 4
  %140 = zext i32 %139 to i64
  %141 = load %"class.blink::SegmentReader"*, %"class.blink::SegmentReader"** %13, align 8
  %142 = bitcast %"class.blink::SegmentReader"* %141 to i64 (%"class.blink::SegmentReader"*)***
  %143 = load i64 (%"class.blink::SegmentReader"*)**, i64 (%"class.blink::SegmentReader"*)*** %142, align 8
  %144 = getelementptr inbounds i64 (%"class.blink::SegmentReader"*)*, i64 (%"class.blink::SegmentReader"*)** %143, i64 2
  %145 = load i64 (%"class.blink::SegmentReader"*)*, i64 (%"class.blink::SegmentReader"*)** %144, align 8
  %146 = call i64 %145(%"class.blink::SegmentReader"* %141) #13
  %147 = icmp ugt i64 %146, %140
  br i1 %147, label %128, label %148

148:                                              ; preds = %128, %115
  %149 = bitcast %class.sk_sp.28* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %149) #13
  %150 = getelementptr inbounds %"class.WTF::Vector.30", %"class.WTF::Vector.30"* %81, i64 0, i32 0, i32 0, i32 0
  %151 = load i8*, i8** %150, align 8
  %152 = load i32, i32* %116, align 4
  %153 = zext i32 %152 to i64
  call void @_ZN6SkData12MakeWithProcEPKvmPFvS1_PvES2_(%class.sk_sp.28* nonnull sret %5, i8* %151, i64 %153, void (i8*, i8*)* nonnull @_ZN6SkData16DummyReleaseProcEPKvPv, i8* null) #13
  %154 = getelementptr inbounds %class.sk_sp.28, %class.sk_sp.28* %5, i64 0, i32 0
  %155 = bitcast %class.sk_sp.28* %5 to i64*
  %156 = load i64, i64* %155, align 8
  store %class.SkData* null, %class.SkData** %154, align 8
  %157 = load %class.SkData*, %class.SkData** %32, align 8
  %158 = bitcast %class.sk_sp.28* %31 to i64*
  store i64 %156, i64* %158, align 8
  %159 = icmp eq %class.SkData* %157, null
  br i1 %159, label %175, label %160

160:                                              ; preds = %148
  %161 = getelementptr inbounds %class.SkData, %class.SkData* %157, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %162 = atomicrmw add i32* %161, i32 -1 acq_rel
  %163 = icmp eq i32 %162, 1
  br i1 %163, label %164, label %166

164:                                              ; preds = %160
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %157) #13
  %165 = bitcast %class.SkData* %157 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %165) #13
  br label %166

166:                                              ; preds = %160, %164
  %167 = load %class.SkData*, %class.SkData** %154, align 8
  %168 = icmp eq %class.SkData* %167, null
  br i1 %168, label %175, label %169

169:                                              ; preds = %166
  %170 = getelementptr inbounds %class.SkData, %class.SkData* %167, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %171 = atomicrmw add i32* %170, i32 -1 acq_rel
  %172 = icmp eq i32 %171, 1
  br i1 %172, label %173, label %175

173:                                              ; preds = %169
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %167) #13
  %174 = bitcast %class.SkData* %167 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %174) #13
  br label %175

175:                                              ; preds = %173, %169, %166, %148, %78, %74, %71, %52
  %176 = phi i8* [ %53, %52 ], [ %53, %71 ], [ %53, %74 ], [ %53, %78 ], [ %149, %148 ], [ %149, %166 ], [ %149, %169 ], [ %149, %173 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %176) #13
  %177 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 5
  %178 = load %struct.WebPDemuxer*, %struct.WebPDemuxer** %177, align 8
  call void @WebPDemuxDelete(%struct.WebPDemuxer* %178) #13
  %179 = bitcast <2 x i64>* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %179) #13
  %180 = load %class.SkData*, %class.SkData** %32, align 8
  %181 = getelementptr inbounds %class.SkData, %class.SkData* %180, i64 0, i32 3
  %182 = bitcast i8** %181 to <2 x i64>*
  %183 = load <2 x i64>, <2 x i64>* %182, align 8
  store <2 x i64> %183, <2 x i64>* %6, align 16
  %184 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 6
  %185 = call %struct.WebPDemuxer* @WebPDemuxInternal(%struct.WebPData* nonnull %7, i32 1, i32* %184, i32 263) #13
  store %struct.WebPDemuxer* %185, %struct.WebPDemuxer** %177, align 8
  %186 = load i8, i8* %46, align 1, !range !4
  %187 = icmp eq i8 %186, 0
  br i1 %187, label %191, label %188

188:                                              ; preds = %175
  %189 = load i32, i32* %184, align 8
  %190 = icmp ne i32 %189, 2
  br label %191

191:                                              ; preds = %175, %188
  %192 = phi i1 [ false, %175 ], [ %190, %188 ]
  %193 = icmp eq %struct.WebPDemuxer* %185, null
  br i1 %193, label %198, label %194

194:                                              ; preds = %191
  %195 = load i32, i32* %184, align 8
  %196 = icmp slt i32 %195, 1
  %197 = or i1 %192, %196
  br i1 %197, label %207, label %210

198:                                              ; preds = %191
  %199 = load %class.SkData*, %class.SkData** %32, align 8
  store %class.SkData* null, %class.SkData** %32, align 8
  %200 = icmp eq %class.SkData* %199, null
  br i1 %200, label %208, label %201

201:                                              ; preds = %198
  %202 = getelementptr inbounds %class.SkData, %class.SkData* %199, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %203 = atomicrmw add i32* %202, i32 -1 acq_rel
  %204 = icmp eq i32 %203, 1
  br i1 %204, label %205, label %208

205:                                              ; preds = %201
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %199) #13
  %206 = bitcast %class.SkData* %199 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %206) #13
  br label %208

207:                                              ; preds = %194
  call void @WebPDemuxDelete(%struct.WebPDemuxer* nonnull %185) #13
  store %struct.WebPDemuxer* null, %struct.WebPDemuxer** %177, align 8
  br label %208

208:                                              ; preds = %205, %201, %198, %207
  br i1 %192, label %209, label %348

209:                                              ; preds = %208
  store i8 1, i8* %9, align 2
  br label %348

210:                                              ; preds = %194
  %211 = call i32 @WebPDemuxGetI(%struct.WebPDemuxer* nonnull %185, i32 5) #13
  %212 = icmp eq i32 %211, 0
  br i1 %212, label %348, label %213

213:                                              ; preds = %210
  %214 = load i8, i8* %9, align 2, !range !4
  %215 = icmp eq i8 %214, 0
  br i1 %215, label %216, label %220

216:                                              ; preds = %213
  %217 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 0, i32 13
  %218 = load i8, i8* %217, align 4, !range !4
  %219 = icmp eq i8 %218, 0
  br i1 %219, label %220, label %344

220:                                              ; preds = %216, %213
  %221 = load %struct.WebPDemuxer*, %struct.WebPDemuxer** %177, align 8
  %222 = call i32 @WebPDemuxGetI(%struct.WebPDemuxer* %221, i32 1) #13
  %223 = load %struct.WebPDemuxer*, %struct.WebPDemuxer** %177, align 8
  %224 = call i32 @WebPDemuxGetI(%struct.WebPDemuxer* %223, i32 2) #13
  %225 = bitcast %"class.blink::WEBPImageDecoder"* %0 to i1 (%"class.blink::ImageDecoder"*)***
  %226 = load i1 (%"class.blink::ImageDecoder"*)**, i1 (%"class.blink::ImageDecoder"*)*** %225, align 8
  %227 = getelementptr inbounds i1 (%"class.blink::ImageDecoder"*)*, i1 (%"class.blink::ImageDecoder"*)** %226, i64 3
  %228 = load i1 (%"class.blink::ImageDecoder"*)*, i1 (%"class.blink::ImageDecoder"*)** %227, align 8
  %229 = call zeroext i1 %228(%"class.blink::ImageDecoder"* %8) #13
  br i1 %229, label %230, label %235

230:                                              ; preds = %220
  %231 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 0, i32 4
  %232 = load i32, i32* %231, align 4
  %233 = icmp eq i32 %232, 1
  %234 = select i1 %233, i32 8, i32 4
  br label %235

235:                                              ; preds = %230, %220
  %236 = phi i32 [ 4, %220 ], [ %234, %230 ]
  %237 = lshr i32 %222, 31
  %238 = icmp eq i32 %237, 1
  br i1 %238, label %270, label %239

239:                                              ; preds = %235
  %240 = icmp slt i32 %222, 0
  %241 = sub i32 0, %222
  %242 = select i1 %240, i32 %241, i32 %222
  %243 = call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %242, i32 %224) #13
  %244 = extractvalue { i32, i1 } %243, 1
  %245 = extractvalue { i32, i1 } %243, 0
  %246 = add nuw nsw i32 %237, 2147483647
  %247 = icmp ugt i32 %245, %246
  %248 = or i1 %244, %247
  %249 = sub i32 0, %245
  %250 = select i1 %240, i32 %249, i32 %245
  br i1 %248, label %270, label %251

251:                                              ; preds = %239
  %252 = icmp slt i32 %250, 0
  %253 = sub i32 0, %250
  %254 = select i1 %252, i32 %253, i32 %250
  %255 = call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %254, i32 %236) #13
  %256 = extractvalue { i32, i1 } %255, 1
  %257 = extractvalue { i32, i1 } %255, 0
  %258 = lshr i32 %250, 31
  %259 = add nuw i32 %258, 2147483647
  %260 = icmp ugt i32 %257, %259
  %261 = or i1 %256, %260
  br i1 %261, label %270, label %262

262:                                              ; preds = %251
  %263 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 0, i32 12
  %264 = bitcast %"class.blink::IntSize"* %263 to i64*
  %265 = zext i32 %224 to i64
  %266 = shl nuw i64 %265, 32
  %267 = zext i32 %222 to i64
  %268 = or i64 %266, %267
  store i64 %268, i64* %264, align 4
  %269 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 0, i32 13
  store i8 1, i8* %269, align 4
  br label %275

270:                                              ; preds = %235, %239, %251
  %271 = load i1 (%"class.blink::ImageDecoder"*)**, i1 (%"class.blink::ImageDecoder"*)*** %225, align 8
  %272 = getelementptr inbounds i1 (%"class.blink::ImageDecoder"*)*, i1 (%"class.blink::ImageDecoder"*)** %271, i64 21
  %273 = load i1 (%"class.blink::ImageDecoder"*)*, i1 (%"class.blink::ImageDecoder"*)** %272, align 8
  %274 = call zeroext i1 %273(%"class.blink::ImageDecoder"* %8) #13
  br i1 %274, label %275, label %343

275:                                              ; preds = %262, %270
  %276 = call zeroext i1 @_ZN3WTF12IsMainThreadEv() #13
  br i1 %276, label %277, label %318

277:                                              ; preds = %275
  %278 = bitcast %struct.WebPBitstreamFeatures* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %278) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %278, i8 0, i64 40, i1 false) #13
  %279 = load %class.SkData*, %class.SkData** %32, align 8
  %280 = getelementptr inbounds %class.SkData, %class.SkData* %279, i64 0, i32 3
  %281 = load i8*, i8** %280, align 8
  %282 = getelementptr inbounds %class.SkData, %class.SkData* %279, i64 0, i32 4
  %283 = load i64, i64* %282, align 8
  %284 = call i32 @WebPGetFeaturesInternal(i8* %281, i64 %283, %struct.WebPBitstreamFeatures* nonnull %2, i32 521) #13
  %285 = icmp eq i32 %284, 0
  br i1 %285, label %286, label %317

286:                                              ; preds = %277
  %287 = getelementptr inbounds %struct.WebPBitstreamFeatures, %struct.WebPBitstreamFeatures* %2, i64 0, i32 2
  %288 = load i32, i32* %287, align 4
  %289 = icmp eq i32 %288, 0
  %290 = getelementptr inbounds %struct.WebPBitstreamFeatures, %struct.WebPBitstreamFeatures* %2, i64 0, i32 3
  %291 = load i32, i32* %290, align 4
  %292 = icmp eq i32 %291, 0
  br i1 %289, label %295, label %293

293:                                              ; preds = %286
  %294 = select i1 %292, i32 2, i32 4
  br label %303

295:                                              ; preds = %286
  br i1 %292, label %296, label %303

296:                                              ; preds = %295
  %297 = getelementptr inbounds %struct.WebPBitstreamFeatures, %struct.WebPBitstreamFeatures* %2, i64 0, i32 4
  %298 = load i32, i32* %297, align 4
  %299 = icmp eq i32 %298, 2
  %300 = select i1 %299, i32 1, i32 5
  %301 = icmp eq i32 %298, 1
  %302 = select i1 %301, i32 0, i32 %300
  br label %303

303:                                              ; preds = %295, %296, %293
  %304 = phi i32 [ %302, %296 ], [ 3, %295 ], [ %294, %293 ]
  %305 = load atomic i64, i64* @_ZZN12_GLOBAL__N_123UpdateWebPFileFormatUMAERK5sk_spI6SkDataEE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %306 = inttoptr i64 %305 to %"class.base::HistogramBase"*
  %307 = icmp eq i64 %305, 0
  br i1 %307, label %308, label %311

308:                                              ; preds = %303
  %309 = call %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.1, i64 0, i64 0), i32 1, i32 6, i32 7, i32 1) #13
  %310 = ptrtoint %"class.base::HistogramBase"* %309 to i64
  store atomic i64 %310, i64* @_ZZN12_GLOBAL__N_123UpdateWebPFileFormatUMAERK5sk_spI6SkDataEE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %311

311:                                              ; preds = %308, %303
  %312 = phi %"class.base::HistogramBase"* [ %306, %303 ], [ %309, %308 ]
  %313 = bitcast %"class.base::HistogramBase"* %312 to void (%"class.base::HistogramBase"*, i32)***
  %314 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %313, align 8
  %315 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %314, i64 6
  %316 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %315, align 8
  call void %316(%"class.base::HistogramBase"* %312, i32 %304) #13
  br label %317

317:                                              ; preds = %311, %277
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %278) #13
  br label %318

318:                                              ; preds = %275, %317
  %319 = load %struct.WebPDemuxer*, %struct.WebPDemuxer** %177, align 8
  %320 = call i32 @WebPDemuxGetI(%struct.WebPDemuxer* %319, i32 0) #13
  %321 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 3
  store i32 %320, i32* %321, align 8
  %322 = and i32 %320, 2
  %323 = icmp eq i32 %322, 0
  br i1 %323, label %332, label %324

324:                                              ; preds = %318
  %325 = load %struct.WebPDemuxer*, %struct.WebPDemuxer** %177, align 8
  %326 = call i32 @WebPDemuxGetI(%struct.WebPDemuxer* %325, i32 3) #13
  %327 = icmp eq i32 %326, 0
  %328 = add nsw i32 %326, -1
  %329 = select i1 %327, i32 -1, i32 %328
  %330 = load i32, i32* %321, align 8
  %331 = and i32 %330, -33
  store i32 %331, i32* %321, align 8
  br label %332

332:                                              ; preds = %318, %324
  %333 = phi i32 [ %331, %324 ], [ %320, %318 ]
  %334 = phi i32 [ %329, %324 ], [ -2, %318 ]
  %335 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 8
  store i32 %334, i32* %335, align 8
  %336 = and i32 %333, 32
  %337 = icmp eq i32 %336, 0
  br i1 %337, label %344, label %338

338:                                              ; preds = %332
  %339 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 0, i32 5, i32 0
  %340 = load i32, i32* %339, align 4
  %341 = icmp eq i32 %340, 0
  br i1 %341, label %344, label %342

342:                                              ; preds = %338
  call void @_ZN5blink16WEBPImageDecoder16ReadColorProfileEv(%"class.blink::WEBPImageDecoder"* %0)
  br label %344

343:                                              ; preds = %270
  store i8 1, i8* %9, align 2
  br label %348

344:                                              ; preds = %216, %338, %342, %332
  %345 = load %struct.WebPDemuxer*, %struct.WebPDemuxer** %177, align 8
  %346 = call i32 @WebPDemuxGetI(%struct.WebPDemuxer* %345, i32 5) #13
  %347 = zext i32 %346 to i64
  call void @_ZN5blink12ImageDecoder23UpdateAggressivePurgingEm(%"class.blink::ImageDecoder"* %8, i64 %347) #13
  br label %348

348:                                              ; preds = %343, %210, %209, %208, %344
  %349 = phi i1 [ true, %344 ], [ false, %343 ], [ false, %209 ], [ false, %208 ], [ false, %210 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %179) #13
  br label %350

350:                                              ; preds = %21, %1, %348, %25, %26, %35
  %351 = phi i1 [ false, %1 ], [ %349, %348 ], [ false, %25 ], [ false, %21 ], [ true, %26 ], [ true, %35 ]
  ret i1 %351
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK5blink16WEBPImageDecoder15RepetitionCountEv(%"class.blink::WEBPImageDecoder"* nocapture readonly) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 0, i32 15
  %3 = load i8, i8* %2, align 2, !range !4
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %8

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 8
  %7 = load i32, i32* %6, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi i32 [ %7, %5 ], [ 0, %1 ]
  ret i32 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink16WEBPImageDecoder22FrameIsReceivedAtIndexEm(%"class.blink::WEBPImageDecoder"*, i64) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 5
  %4 = load %struct.WebPDemuxer*, %struct.WebPDemuxer** %3, align 8
  %5 = icmp eq %struct.WebPDemuxer* %4, null
  br i1 %5, label %23, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 6
  %8 = load i32, i32* %7, align 8
  %9 = icmp slt i32 %8, 1
  br i1 %9, label %23, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 3
  %12 = load i32, i32* %11, align 8
  %13 = and i32 %12, 2
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 0
  %17 = tail call zeroext i1 @_ZNK5blink12ImageDecoder22FrameIsReceivedAtIndexEm(%"class.blink::ImageDecoder"* %16, i64 %1) #13
  br label %23

18:                                               ; preds = %10
  %19 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 0, i32 2, i32 0, i32 0, i32 2
  %20 = load i32, i32* %19, align 4
  %21 = zext i32 %20 to i64
  %22 = icmp ugt i64 %21, %1
  br label %23

23:                                               ; preds = %6, %2, %18, %15
  %24 = phi i1 [ %22, %18 ], [ %17, %15 ], [ false, %2 ], [ false, %6 ]
  ret i1 %24
}

declare zeroext i1 @_ZNK5blink12ImageDecoder22FrameIsReceivedAtIndexEm(%"class.blink::ImageDecoder"*, i64) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink16WEBPImageDecoder20FrameDurationAtIndexEm(%"class.blink::WEBPImageDecoder"*, i64) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 0, i32 2, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = zext i32 %4 to i64
  %6 = icmp ugt i64 %5, %1
  br i1 %6, label %7, label %13

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 0, i32 2
  %9 = trunc i64 %1 to i32
  %10 = tail call dereferenceable(128) %"class.blink::ImageFrame"* @_ZNK3WTF6VectorIN5blink10ImageFrameELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %8, i32 %9) #13
  %11 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %10, i64 0, i32 6, i32 0
  %12 = load i64, i64* %11, align 8
  br label %13

13:                                               ; preds = %2, %7
  %14 = phi i64 [ %12, %7 ], [ 0, %2 ]
  ret i64 %14
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink12ImageDecoder9SetFailedEv(%"class.blink::ImageDecoder"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ImageDecoder", %"class.blink::ImageDecoder"* %0, i64 0, i32 15
  store i8 1, i8* %2, align 2
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIcLj0ENS_18PartitionAllocatorEE6AppendIcEEvPKT_j(%"class.WTF::Vector.30"*, i8*, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.30", %"class.WTF::Vector.30"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = add i32 %8, %2
  %10 = getelementptr inbounds %"class.WTF::Vector.30", %"class.WTF::Vector.30"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = icmp ugt i32 %9, %11
  br i1 %12, label %13, label %87

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.WTF::Vector.30", %"class.WTF::Vector.30"* %0, i64 0, i32 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  %16 = icmp ugt i8* %15, %1
  br i1 %16, label %21, label %17

17:                                               ; preds = %13
  %18 = zext i32 %8 to i64
  %19 = getelementptr inbounds i8, i8* %15, i64 %18
  %20 = icmp ugt i8* %19, %1
  br i1 %20, label %52, label %21

21:                                               ; preds = %17, %13
  %22 = lshr i32 %11, 2
  %23 = add nuw i32 %11, 1
  %24 = add i32 %23, %22
  %25 = icmp ugt i32 %24, 4
  %26 = select i1 %25, i32 %24, i32 4
  %27 = icmp ugt i32 %26, %9
  %28 = select i1 %27, i32 %26, i32 %9
  %29 = icmp ult i32 %11, %28
  br i1 %29, label %30, label %87, !prof !2

30:                                               ; preds = %21
  %31 = icmp eq i8* %15, null
  %32 = zext i32 %28 to i64
  %33 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIcEEmm(i64 %32) #13
  %34 = tail call i8* @_ZN3WTF18PartitionAllocator21AllocateVectorBackingIcEEPT_m(i64 %33) #13
  %35 = ptrtoint i8* %34 to i64
  br i1 %31, label %36, label %39

36:                                               ; preds = %30
  %37 = bitcast %"class.WTF::Vector.30"* %0 to i64*
  store atomic i64 %35, i64* %37 monotonic, align 8
  %38 = trunc i64 %33 to i32
  store i32 %38, i32* %10, align 8
  br label %87

39:                                               ; preds = %30
  %40 = load i8*, i8** %14, align 8
  %41 = icmp ne i8* %34, null
  %42 = icmp ne i8* %40, null
  %43 = and i1 %41, %42
  br i1 %43, label %44, label %48, !prof !2

44:                                               ; preds = %39
  %45 = load i32, i32* %7, align 4
  %46 = zext i32 %45 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %34, i8* nonnull align 1 %40, i64 %46, i1 false) #13
  %47 = load i8*, i8** %14, align 8
  br label %48

48:                                               ; preds = %44, %39
  %49 = phi i8* [ %40, %39 ], [ %47, %44 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %49) #13
  %50 = bitcast %"class.WTF::Vector.30"* %0 to i64*
  store atomic i64 %35, i64* %50 monotonic, align 8
  %51 = trunc i64 %33 to i32
  store i32 %51, i32* %10, align 8
  br label %87

52:                                               ; preds = %17
  %53 = ptrtoint i8* %1 to i64
  %54 = ptrtoint i8* %15 to i64
  %55 = sub i64 %53, %54
  %56 = lshr i32 %11, 2
  %57 = add nuw i32 %11, 1
  %58 = add i32 %57, %56
  %59 = icmp ugt i32 %58, 4
  %60 = select i1 %59, i32 %58, i32 4
  %61 = icmp ugt i32 %60, %9
  %62 = select i1 %61, i32 %60, i32 %9
  %63 = icmp ult i32 %11, %62
  br i1 %63, label %64, label %84, !prof !2

64:                                               ; preds = %52
  %65 = icmp eq i8* %15, null
  %66 = zext i32 %62 to i64
  %67 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIcEEmm(i64 %66) #13
  %68 = tail call i8* @_ZN3WTF18PartitionAllocator21AllocateVectorBackingIcEEPT_m(i64 %67) #13
  %69 = ptrtoint i8* %68 to i64
  br i1 %65, label %81, label %70

70:                                               ; preds = %64
  %71 = load i8*, i8** %14, align 8
  %72 = icmp ne i8* %68, null
  %73 = icmp ne i8* %71, null
  %74 = and i1 %72, %73
  br i1 %74, label %75, label %79, !prof !2

75:                                               ; preds = %70
  %76 = load i32, i32* %7, align 4
  %77 = zext i32 %76 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %68, i8* nonnull align 1 %71, i64 %77, i1 false) #13
  %78 = load i8*, i8** %14, align 8
  br label %79

79:                                               ; preds = %75, %70
  %80 = phi i8* [ %71, %70 ], [ %78, %75 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %80) #13
  br label %81

81:                                               ; preds = %64, %79
  %82 = bitcast %"class.WTF::Vector.30"* %0 to i64*
  store atomic i64 %69, i64* %82 monotonic, align 8
  %83 = trunc i64 %67 to i32
  store i32 %83, i32* %10, align 8
  br label %84

84:                                               ; preds = %81, %52
  %85 = phi i8* [ %15, %52 ], [ %68, %81 ]
  %86 = getelementptr inbounds i8, i8* %85, i64 %55
  br label %87

87:                                               ; preds = %84, %21, %36, %48, %3
  %88 = phi i8* [ %1, %3 ], [ %86, %84 ], [ %1, %21 ], [ %1, %36 ], [ %1, %48 ]
  %89 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %89) #13
  %90 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %90, align 8
  %91 = load i32, i32* %7, align 4
  %92 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %92)
  %93 = icmp ult i32 %9, %91
  br i1 %93, label %95, label %94

94:                                               ; preds = %87
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %92)
  store i8* null, i8** %90, align 8
  br label %104

95:                                               ; preds = %87
  %96 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #13
  %97 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %91) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.5, i64 0, i64 0), i8* %96, i8* %97) #13
  %98 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %99 = load i8*, i8** %98, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %92)
  store i8* %99, i8** %90, align 8
  %100 = icmp eq i8* %99, null
  br i1 %100, label %104, label %101

101:                                              ; preds = %95
  %102 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %102) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.6, i64 0, i64 0), i32 1907, %"class.logging::CheckOpResult"* nonnull %5) #13
  %103 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %102) #13
  br label %104

104:                                              ; preds = %94, %95, %101
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %89) #13
  %105 = getelementptr inbounds %"class.WTF::Vector.30", %"class.WTF::Vector.30"* %0, i64 0, i32 0, i32 0, i32 0
  %106 = load i8*, i8** %105, align 8
  %107 = load i32, i32* %7, align 4
  %108 = zext i32 %107 to i64
  %109 = getelementptr inbounds i8, i8* %106, i64 %108
  %110 = icmp ne i8* %109, null
  %111 = icmp ne i8* %88, null
  %112 = and i1 %111, %110
  br i1 %112, label %113, label %115, !prof !2

113:                                              ; preds = %104
  %114 = zext i32 %2 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %109, i8* nonnull align 1 %88, i64 %114, i1 false) #13
  br label %115

115:                                              ; preds = %104, %113
  store i32 %9, i32* %7, align 4
  ret void
}

declare i32 @WebPDemuxGetI(%struct.WebPDemuxer*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink12ImageDecoder7SetSizeEjj(%"class.blink::ImageDecoder"*, i32, i32) unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"class.blink::ImageDecoder"* %0 to i1 (%"class.blink::ImageDecoder"*)***
  %5 = load i1 (%"class.blink::ImageDecoder"*)**, i1 (%"class.blink::ImageDecoder"*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.blink::ImageDecoder"*)*, i1 (%"class.blink::ImageDecoder"*)** %5, i64 3
  %7 = load i1 (%"class.blink::ImageDecoder"*)*, i1 (%"class.blink::ImageDecoder"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.blink::ImageDecoder"* %0) #13
  br i1 %8, label %9, label %14

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.blink::ImageDecoder", %"class.blink::ImageDecoder"* %0, i64 0, i32 4
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 1
  %13 = select i1 %12, i32 8, i32 4
  br label %14

14:                                               ; preds = %9, %3
  %15 = phi i32 [ 4, %3 ], [ %13, %9 ]
  %16 = lshr i32 %1, 31
  %17 = icmp eq i32 %16, 1
  br i1 %17, label %41, label %18

18:                                               ; preds = %14
  %19 = icmp slt i32 %1, 0
  %20 = sub i32 0, %1
  %21 = select i1 %19, i32 %20, i32 %1
  %22 = tail call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %21, i32 %2) #13
  %23 = extractvalue { i32, i1 } %22, 1
  %24 = extractvalue { i32, i1 } %22, 0
  %25 = add nuw nsw i32 %16, 2147483647
  %26 = icmp ugt i32 %24, %25
  %27 = or i1 %23, %26
  %28 = sub i32 0, %24
  %29 = select i1 %19, i32 %28, i32 %24
  br i1 %27, label %41, label %30

30:                                               ; preds = %18
  %31 = icmp slt i32 %29, 0
  %32 = sub i32 0, %29
  %33 = select i1 %31, i32 %32, i32 %29
  %34 = tail call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %33, i32 %15) #13
  %35 = extractvalue { i32, i1 } %34, 1
  %36 = extractvalue { i32, i1 } %34, 0
  %37 = lshr i32 %29, 31
  %38 = add nuw i32 %37, 2147483647
  %39 = icmp ugt i32 %36, %38
  %40 = or i1 %35, %39
  br i1 %40, label %41, label %46

41:                                               ; preds = %14, %18, %30
  %42 = load i1 (%"class.blink::ImageDecoder"*)**, i1 (%"class.blink::ImageDecoder"*)*** %4, align 8
  %43 = getelementptr inbounds i1 (%"class.blink::ImageDecoder"*)*, i1 (%"class.blink::ImageDecoder"*)** %42, i64 21
  %44 = load i1 (%"class.blink::ImageDecoder"*)*, i1 (%"class.blink::ImageDecoder"*)** %43, align 8
  %45 = tail call zeroext i1 %44(%"class.blink::ImageDecoder"* %0) #13
  br label %54

46:                                               ; preds = %30
  %47 = getelementptr inbounds %"class.blink::ImageDecoder", %"class.blink::ImageDecoder"* %0, i64 0, i32 12
  %48 = bitcast %"class.blink::IntSize"* %47 to i64*
  %49 = zext i32 %2 to i64
  %50 = shl nuw i64 %49, 32
  %51 = zext i32 %1 to i64
  %52 = or i64 %50, %51
  store i64 %52, i64* %48, align 4
  %53 = getelementptr inbounds %"class.blink::ImageDecoder", %"class.blink::ImageDecoder"* %0, i64 0, i32 13
  store i8 1, i8* %53, align 4
  br label %54

54:                                               ; preds = %46, %41
  %55 = phi i1 [ %45, %41 ], [ true, %46 ]
  ret i1 %55
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16WEBPImageDecoder16ReadColorProfileEv(%"class.blink::WEBPImageDecoder"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %struct.WebPChunkIterator, align 8
  %3 = bitcast %struct.WebPChunkIterator* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %3) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %3, i8 -86, i64 56, i1 false)
  %4 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 5
  %5 = load %struct.WebPDemuxer*, %struct.WebPDemuxer** %4, align 8
  %6 = call i32 @WebPDemuxGetChunk(%struct.WebPDemuxer* %5, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i32 1, %struct.WebPChunkIterator* nonnull %2) #13
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %28, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %struct.WebPChunkIterator, %struct.WebPChunkIterator* %2, i64 0, i32 2, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds %struct.WebPChunkIterator, %struct.WebPChunkIterator* %2, i64 0, i32 2, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = call %"class.blink::ColorProfile"* @_ZN5blink12ColorProfile6CreateEPKvm(i8* %10, i64 %12) #13
  %14 = icmp eq %"class.blink::ColorProfile"* %13, null
  br i1 %14, label %28, label %15

15:                                               ; preds = %8
  %16 = getelementptr inbounds %"class.blink::ColorProfile", %"class.blink::ColorProfile"* %13, i64 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %17, 1380401696
  br i1 %18, label %19, label %21

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 0
  call void @_ZN5blink12ImageDecoder23SetEmbeddedColorProfileENSt3__110unique_ptrINS_12ColorProfileENS1_14default_deleteIS3_EEEE(%"class.blink::ImageDecoder"* %20, %"class.blink::ColorProfile"* nonnull %13) #13
  br label %28

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.blink::ColorProfile", %"class.blink::ColorProfile"* %13, i64 0, i32 1, i32 0, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8
  store i8* null, i8** %22, align 8
  %24 = icmp eq i8* %23, null
  br i1 %24, label %26, label %25

25:                                               ; preds = %21
  call void @_ZdaPv(i8* nonnull %23) #14
  br label %26

26:                                               ; preds = %25, %21
  %27 = bitcast %"class.blink::ColorProfile"* %13 to i8*
  call void @free(i8* %27) #13
  br label %28

28:                                               ; preds = %26, %19, %8, %1
  call void @WebPDemuxReleaseChunkIterator(%struct.WebPChunkIterator* nonnull %2) #13
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %3) #13
  ret void
}

declare void @_ZN5blink12ImageDecoder23UpdateAggressivePurgingEm(%"class.blink::ImageDecoder"*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16WEBPImageDecoder17OnInitFrameBufferEm(%"class.blink::WEBPImageDecoder"*, i64) unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::IntRect", align 8
  %4 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 0, i32 2
  %5 = trunc i64 %1 to i32
  %6 = tail call dereferenceable(128) %"class.blink::ImageFrame"* @_ZN3WTF6VectorIN5blink10ImageFrameELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %4, i32 %5) #13
  %7 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %6, i64 0, i32 11
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, 4294967295
  br i1 %9, label %10, label %23

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %6, i64 0, i32 4
  %12 = bitcast %"class.blink::IntRect"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #13
  %13 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 0, i32 12
  %14 = bitcast %"class.blink::IntSize"* %13 to i64*
  %15 = load i64, i64* %14, align 4
  %16 = bitcast %"class.blink::IntRect"* %3 to i64*
  store i64 0, i64* %16, align 8
  %17 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %3, i64 0, i32 1
  %18 = bitcast %"class.blink::IntSize"* %17 to i64*
  store i64 %15, i64* %18, align 8
  %19 = call zeroext i1 @_ZNK5blink7IntRect8ContainsERKS0_(%"class.blink::IntRect"* %11, %"class.blink::IntRect"* nonnull dereferenceable(16) %3) #13
  %20 = xor i1 %19, true
  %21 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 4
  %22 = zext i1 %20 to i8
  store i8 %22, i8* %21, align 4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #13
  br label %37

23:                                               ; preds = %2
  %24 = trunc i64 %8 to i32
  %25 = tail call dereferenceable(128) %"class.blink::ImageFrame"* @_ZN3WTF6VectorIN5blink10ImageFrameELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %4, i32 %24) #13
  %26 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %25, i64 0, i32 2
  %27 = load i8, i8* %26, align 8, !range !4
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %29, label %34

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %25, i64 0, i32 7
  %31 = load i32, i32* %30, align 8
  %32 = icmp eq i32 %31, 2
  %33 = zext i1 %32 to i8
  br label %34

34:                                               ; preds = %23, %29
  %35 = phi i8 [ 1, %23 ], [ %33, %29 ]
  %36 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 4
  store i8 %35, i8* %36, align 4
  br label %37

37:                                               ; preds = %34, %10
  call void @_ZN5blink10ImageFrame11SetHasAlphaEb(%"class.blink::ImageFrame"* %6, i1 zeroext true) #13
  ret void
}

declare zeroext i1 @_ZNK5blink7IntRect8ContainsERKS0_(%"class.blink::IntRect"*, %"class.blink::IntRect"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK5blink12ImageDecoder4SizeEv(%"class.blink::ImageDecoder"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ImageDecoder", %"class.blink::ImageDecoder"* %0, i64 0, i32 12
  %3 = bitcast %"class.blink::IntSize"* %2 to i64*
  %4 = load i64, i64* %3, align 4
  ret i64 %4
}

declare void @_ZN5blink10ImageFrame11SetHasAlphaEb(%"class.blink::ImageFrame"*, i1 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16WEBPImageDecoder11DecodeToYUVEv(%"class.blink::WEBPImageDecoder"*) unnamed_addr #0 align 2 {
  %2 = alloca %struct.WebPIterator, align 8
  %3 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 0, i32 15
  %4 = load i8, i8* %3, align 2, !range !4
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %20

6:                                                ; preds = %1
  %7 = bitcast %struct.WebPIterator* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %7) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 80, i1 false)
  %8 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 5
  %9 = load %struct.WebPDemuxer*, %struct.WebPDemuxer** %8, align 8
  %10 = call i32 @WebPDemuxGetFrame(%struct.WebPDemuxer* %9, i32 1, %struct.WebPIterator* nonnull %2) #13
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %13

12:                                               ; preds = %6
  store i8 1, i8* %3, align 2
  br label %19

13:                                               ; preds = %6
  %14 = getelementptr inbounds %struct.WebPIterator, %struct.WebPIterator* %2, i64 0, i32 9, i32 0
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr inbounds %struct.WebPIterator, %struct.WebPIterator* %2, i64 0, i32 9, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = call zeroext i1 @_ZN5blink16WEBPImageDecoder22DecodeSingleFrameToYUVEPKhm(%"class.blink::WEBPImageDecoder"* %0, i8* %15, i64 %17)
  call void @WebPDemuxReleaseIterator(%struct.WebPIterator* nonnull %2) #13
  br label %19

19:                                               ; preds = %13, %12
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %7) #13
  br label %20

20:                                               ; preds = %1, %19
  ret void
}

declare i32 @WebPDemuxGetFrame(%struct.WebPDemuxer*, i32, %struct.WebPIterator*) local_unnamed_addr #2

declare void @WebPDemuxReleaseIterator(%struct.WebPIterator*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink16WEBPImageDecoder22DecodeSingleFrameToYUVEPKhm(%"class.blink::WEBPImageDecoder"*, i8*, i64) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 0
  %5 = tail call zeroext i1 @_ZN5blink12ImageDecoder15IsSizeAvailableEv(%"class.blink::ImageDecoder"* %4) #13
  %6 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 1
  %7 = load %struct.WebPIDecoder*, %struct.WebPIDecoder** %6, align 8
  %8 = icmp eq %struct.WebPIDecoder* %7, null
  br i1 %8, label %9, label %13

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 2
  %11 = tail call i32 @WebPInitDecBufferInternal(%struct.WebPDecBuffer* %10, i32 521) #13
  %12 = getelementptr inbounds %struct.WebPDecBuffer, %struct.WebPDecBuffer* %10, i64 0, i32 0
  store i32 11, i32* %12, align 8
  br label %13

13:                                               ; preds = %3, %9
  %14 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 0, i32 10, i32 0, i32 0, i32 0
  %15 = load %"class.blink::ImagePlanes"*, %"class.blink::ImagePlanes"** %14, align 8
  %16 = tail call i8* @_ZN5blink11ImagePlanes5PlaneEN2cc8YUVIndexE(%"class.blink::ImagePlanes"* %15, i32 0) #13
  %17 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 2, i32 4, i32 0, i32 0
  store i8* %16, i8** %17, align 8
  %18 = tail call i8* @_ZN5blink11ImagePlanes5PlaneEN2cc8YUVIndexE(%"class.blink::ImagePlanes"* %15, i32 1) #13
  %19 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 2, i32 4, i32 0, i32 1
  store i8* %18, i8** %19, align 8
  %20 = tail call i8* @_ZN5blink11ImagePlanes5PlaneEN2cc8YUVIndexE(%"class.blink::ImagePlanes"* %15, i32 2) #13
  %21 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 2, i32 4, i32 0, i32 2
  store i8* %20, i8** %21, align 8
  %22 = load %struct.WebPIDecoder*, %struct.WebPIDecoder** %6, align 8
  %23 = icmp eq %struct.WebPIDecoder* %22, null
  br i1 %23, label %24, label %64

24:                                               ; preds = %13
  %25 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 2
  %26 = tail call i64 @_ZNK5blink11ImagePlanes8RowBytesEN2cc8YUVIndexE(%"class.blink::ImagePlanes"* %15, i32 0) #13
  %27 = trunc i64 %26 to i32
  %28 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 2, i32 4, i32 0, i32 4
  store i32 %27, i32* %28, align 8
  %29 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 0, i32 12
  %30 = bitcast %"class.blink::IntSize"* %29 to i64*
  %31 = load i64, i64* %30, align 4
  %32 = lshr i64 %31, 32
  %33 = shl i64 %26, 32
  %34 = mul i64 %33, %32
  %35 = ashr exact i64 %34, 32
  %36 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 2, i32 4, i32 0, i32 8
  store i64 %35, i64* %36, align 8
  %37 = tail call i64 @_ZNK5blink11ImagePlanes8RowBytesEN2cc8YUVIndexE(%"class.blink::ImagePlanes"* %15, i32 1) #13
  %38 = trunc i64 %37 to i32
  %39 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 2, i32 4, i32 0, i32 5
  store i32 %38, i32* %39, align 4
  %40 = load i64, i64* %30, align 4
  %41 = lshr i64 %40, 32
  %42 = trunc i64 %41 to i32
  %43 = add nsw i32 %42, 1
  %44 = sdiv i32 %43, 2
  %45 = mul nsw i32 %44, %38
  %46 = sext i32 %45 to i64
  %47 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 2, i32 4, i32 0, i32 9
  store i64 %46, i64* %47, align 8
  %48 = tail call i64 @_ZNK5blink11ImagePlanes8RowBytesEN2cc8YUVIndexE(%"class.blink::ImagePlanes"* %15, i32 2) #13
  %49 = trunc i64 %48 to i32
  %50 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 2, i32 4, i32 0, i32 6
  store i32 %49, i32* %50, align 8
  %51 = load i64, i64* %30, align 4
  %52 = lshr i64 %51, 32
  %53 = trunc i64 %52 to i32
  %54 = add nsw i32 %53, 1
  %55 = sdiv i32 %54, 2
  %56 = mul nsw i32 %55, %49
  %57 = sext i32 %56 to i64
  %58 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 2, i32 4, i32 0, i32 10
  store i64 %57, i64* %58, align 8
  %59 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 2, i32 3
  store i32 1, i32* %59, align 4
  %60 = tail call %struct.WebPIDecoder* @WebPINewDecoder(%struct.WebPDecBuffer* %25) #13
  store %struct.WebPIDecoder* %60, %struct.WebPIDecoder** %6, align 8
  %61 = icmp eq %struct.WebPIDecoder* %60, null
  br i1 %61, label %62, label %64

62:                                               ; preds = %24
  %63 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 0, i32 15
  store i8 1, i8* %63, align 2
  br label %90

64:                                               ; preds = %24, %13
  %65 = phi %struct.WebPIDecoder* [ %60, %24 ], [ %22, %13 ]
  %66 = tail call i32 @WebPIUpdate(%struct.WebPIDecoder* nonnull %65, i8* %1, i64 %2) #13
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %85, label %68

68:                                               ; preds = %64
  %69 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 5
  %70 = load %struct.WebPDemuxer*, %struct.WebPDemuxer** %69, align 8
  tail call void @WebPDemuxDelete(%struct.WebPDemuxer* %70) #13
  store %struct.WebPDemuxer* null, %struct.WebPDemuxer** %69, align 8
  %71 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 11, i32 0
  %72 = load %class.SkData*, %class.SkData** %71, align 8
  store %class.SkData* null, %class.SkData** %71, align 8
  %73 = icmp eq %class.SkData* %72, null
  br i1 %73, label %80, label %74

74:                                               ; preds = %68
  %75 = getelementptr inbounds %class.SkData, %class.SkData* %72, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = atomicrmw add i32* %75, i32 -1 acq_rel
  %77 = icmp eq i32 %76, 1
  br i1 %77, label %78, label %80

78:                                               ; preds = %74
  tail call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %72) #13
  %79 = bitcast %class.SkData* %72 to i8*
  tail call void @_ZN6SkDatadlEPv(i8* nonnull %79) #13
  br label %80

80:                                               ; preds = %68, %74, %78
  %81 = load %struct.WebPIDecoder*, %struct.WebPIDecoder** %6, align 8
  tail call void @WebPIDelete(%struct.WebPIDecoder* %81) #13
  store %struct.WebPIDecoder* null, %struct.WebPIDecoder** %6, align 8
  %82 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 9
  store i32 0, i32* %82, align 4
  %83 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 4
  store i8 0, i8* %83, align 4
  %84 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 0, i32 15
  store i8 1, i8* %84, align 2
  br label %90

85:                                               ; preds = %64
  %86 = load %struct.WebPIDecoder*, %struct.WebPIDecoder** %6, align 8
  tail call void @WebPIDelete(%struct.WebPIDecoder* %86) #13
  store %struct.WebPIDecoder* null, %struct.WebPIDecoder** %6, align 8
  %87 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 9
  store i32 0, i32* %87, align 4
  %88 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 4
  store i8 0, i8* %88, align 4
  %89 = getelementptr inbounds %"class.blink::ImagePlanes", %"class.blink::ImagePlanes"* %15, i64 0, i32 3
  store i8 1, i8* %89, align 4
  br label %90

90:                                               ; preds = %85, %80, %62
  %91 = phi i1 [ false, %80 ], [ true, %85 ], [ false, %62 ]
  ret i1 %91
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i64 @_ZNK5blink16WEBPImageDecoder14DecodedYUVSizeEN2cc8YUVIndexE(%"class.blink::WEBPImageDecoder"* nocapture readonly, i32) unnamed_addr #5 align 2 {
  switch i32 %1, label %21 [
    i32 0, label %3
    i32 1, label %10
    i32 2, label %10
  ]

3:                                                ; preds = %2
  %4 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 0, i32 12
  %5 = bitcast %"class.blink::IntSize"* %4 to i64*
  %6 = load i64, i64* %5, align 4
  %7 = trunc i64 %6 to i32
  %8 = lshr i64 %6, 32
  %9 = trunc i64 %8 to i32
  br label %21

10:                                               ; preds = %2, %2
  %11 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 0, i32 12
  %12 = bitcast %"class.blink::IntSize"* %11 to i64*
  %13 = load i64, i64* %12, align 4
  %14 = trunc i64 %13 to i32
  %15 = lshr i64 %13, 32
  %16 = add nsw i32 %14, 1
  %17 = sdiv i32 %16, 2
  %18 = trunc i64 %15 to i32
  %19 = add nsw i32 %18, 1
  %20 = sdiv i32 %19, 2
  br label %21

21:                                               ; preds = %2, %10, %3
  %22 = phi i32 [ %17, %10 ], [ %7, %3 ], [ 0, %2 ]
  %23 = phi i32 [ %20, %10 ], [ %9, %3 ], [ 0, %2 ]
  %24 = zext i32 %23 to i64
  %25 = shl nuw i64 %24, 32
  %26 = zext i32 %22 to i64
  %27 = or i64 %25, %26
  ret i64 %27
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink16WEBPImageDecoder20DecodedYUVWidthBytesEN2cc8YUVIndexE(%"class.blink::WEBPImageDecoder"* nocapture readonly, i32) unnamed_addr #0 align 2 {
  switch i32 %1, label %24 [
    i32 0, label %3
    i32 1, label %13
    i32 2, label %13
  ]

3:                                                ; preds = %2
  %4 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 0, i32 12
  %5 = bitcast %"class.blink::IntSize"* %4 to i64*
  %6 = load i64, i64* %5, align 4
  %7 = trunc i64 %6 to i32
  %8 = icmp sgt i32 %7, -1
  br i1 %8, label %10, label %9, !prof !2

9:                                                ; preds = %3
  tail call void @llvm.trap() #13
  unreachable

10:                                               ; preds = %3
  %11 = shl i64 %6, 32
  %12 = ashr exact i64 %11, 32
  br label %24

13:                                               ; preds = %2, %2
  %14 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 0, i32 12
  %15 = bitcast %"class.blink::IntSize"* %14 to i64*
  %16 = load i64, i64* %15, align 4
  %17 = trunc i64 %16 to i32
  %18 = icmp sgt i32 %17, -3
  br i1 %18, label %20, label %19, !prof !2

19:                                               ; preds = %13
  tail call void @llvm.trap() #13
  unreachable

20:                                               ; preds = %13
  %21 = add nsw i32 %17, 1
  %22 = sdiv i32 %21, 2
  %23 = sext i32 %22 to i64
  br label %24

24:                                               ; preds = %2, %20, %10
  %25 = phi i64 [ %23, %20 ], [ %12, %10 ], [ 0, %2 ]
  ret i64 %25
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZNK5blink16WEBPImageDecoder16GetYUVColorSpaceEv(%"class.blink::WEBPImageDecoder"* nocapture readnone) unnamed_addr #6 align 2 {
  ret i32 1
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @_ZNK5blink16WEBPImageDecoder17GetYUVSubsamplingEv(%"class.blink::WEBPImageDecoder"* nocapture readonly) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 11, i32 0
  %3 = load %class.SkData*, %class.SkData** %2, align 8
  %4 = getelementptr inbounds %class.SkData, %class.SkData* %3, i64 0, i32 4
  %5 = load i64, i64* %4, align 8
  %6 = icmp ult i64 %5, 20
  br i1 %6, label %17, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %class.SkData, %class.SkData* %3, i64 0, i32 3
  %9 = load i8*, i8** %8, align 8
  %10 = tail call i32 @bcmp(i8* %9, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0), i64 4) #13
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %17

12:                                               ; preds = %7
  %13 = getelementptr inbounds i8, i8* %9, i64 8
  %14 = tail call i32 @bcmp(i8* %13, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.3, i64 0, i64 0), i64 8) #13
  %15 = icmp eq i32 %14, 0
  %16 = select i1 %15, i32 2, i32 6
  ret i32 %16

17:                                               ; preds = %7, %1
  ret i32 6
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink16WEBPImageDecoder27CanReusePreviousFrameBufferEm(%"class.blink::WEBPImageDecoder"*, i64) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 0, i32 2
  %4 = trunc i64 %1 to i32
  %5 = tail call dereferenceable(128) %"class.blink::ImageFrame"* @_ZNK3WTF6VectorIN5blink10ImageFrameELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %3, i32 %4) #13
  %6 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %5, i64 0, i32 8
  %7 = load i32, i32* %6, align 4
  %8 = icmp ne i32 %7, 0
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16WEBPImageDecoder16ClearFrameBufferEm(%"class.blink::WEBPImageDecoder"*, i64) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 5
  %4 = load %struct.WebPDemuxer*, %struct.WebPDemuxer** %3, align 8
  %5 = icmp eq %struct.WebPDemuxer* %4, null
  br i1 %5, label %22, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 6
  %8 = load i32, i32* %7, align 8
  %9 = icmp sgt i32 %8, 0
  br i1 %9, label %10, label %22

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 0, i32 2
  %12 = trunc i64 %1 to i32
  %13 = tail call dereferenceable(128) %"class.blink::ImageFrame"* @_ZN3WTF6VectorIN5blink10ImageFrameELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %11, i32 %12) #13
  %14 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %13, i64 0, i32 5
  %15 = load i32, i32* %14, align 8
  %16 = icmp eq i32 %15, 2
  br i1 %16, label %17, label %22

17:                                               ; preds = %10
  %18 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 1
  %19 = load %struct.WebPIDecoder*, %struct.WebPIDecoder** %18, align 8
  tail call void @WebPIDelete(%struct.WebPIDecoder* %19) #13
  store %struct.WebPIDecoder* null, %struct.WebPIDecoder** %18, align 8
  %20 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 9
  store i32 0, i32* %20, align 4
  %21 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 4
  store i8 0, i8* %21, align 4
  br label %22

22:                                               ; preds = %2, %17, %10, %6
  %23 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 0
  tail call void @_ZN5blink12ImageDecoder16ClearFrameBufferEm(%"class.blink::ImageDecoder"* %23, i64 %1) #13
  ret void
}

declare void @_ZN5blink12ImageDecoder16ClearFrameBufferEm(%"class.blink::ImageDecoder"*, i64) unnamed_addr #2

declare i32 @WebPDemuxGetChunk(%struct.WebPDemuxer*, i8*, i32, %struct.WebPChunkIterator*) local_unnamed_addr #2

declare void @WebPDemuxReleaseChunkIterator(%struct.WebPChunkIterator*) local_unnamed_addr #2

declare %"class.blink::ColorProfile"* @_ZN5blink12ColorProfile6CreateEPKvm(i8*, i64) local_unnamed_addr #2

declare void @_ZN5blink12ImageDecoder23SetEmbeddedColorProfileENSt3__110unique_ptrINS_12ColorProfileENS1_14default_deleteIS3_EEEE(%"class.blink::ImageDecoder"*, %"class.blink::ColorProfile"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16WEBPImageDecoder19ApplyPostProcessingEm(%"class.blink::WEBPImageDecoder"*, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 0, i32 2
  %6 = trunc i64 %1 to i32
  %7 = tail call dereferenceable(128) %"class.blink::ImageFrame"* @_ZN3WTF6VectorIN5blink10ImageFrameELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %5, i32 %6) #13
  %8 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #13
  store i32 -1431655766, i32* %3, align 4
  %9 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #13
  store i32 -1431655766, i32* %4, align 4
  %10 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 1
  %11 = load %struct.WebPIDecoder*, %struct.WebPIDecoder** %10, align 8
  %12 = call i8* @WebPIDecGetRGB(%struct.WebPIDecoder* %11, i32* nonnull %4, i32* nonnull %3, i32* null, i32* null) #13
  %13 = icmp eq i8* %12, null
  %14 = load i32, i32* %4, align 4
  %15 = icmp slt i32 %14, 1
  %16 = or i1 %13, %15
  br i1 %16, label %219, label %17

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 0
  %19 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %7, i64 0, i32 4, i32 0, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %7, i64 0, i32 4, i32 0, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = call %"class.blink::ColorProfileTransform"* @_ZN5blink12ImageDecoder14ColorTransformEv(%"class.blink::ImageDecoder"* %18) #13
  %24 = icmp eq %"class.blink::ColorProfileTransform"* %23, null
  br i1 %24, label %121, label %25

25:                                               ; preds = %17
  %26 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 9
  %27 = load i32, i32* %26, align 4
  %28 = load i32, i32* %4, align 4
  %29 = icmp slt i32 %27, %28
  br i1 %29, label %30, label %121

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %7, i64 0, i32 0, i32 1, i32 0
  %32 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %7, i64 0, i32 0, i32 1, i32 1
  %33 = shl i32 %20, 2
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %7, i64 0, i32 9
  %36 = sext i32 %27 to i64
  %37 = sext i32 %22 to i64
  br label %38

38:                                               ; preds = %30, %53
  %39 = phi i64 [ %36, %30 ], [ %54, %53 ]
  %40 = add nsw i64 %39, %37
  %41 = load i8*, i8** %31, align 8
  %42 = load i64, i64* %32, align 8
  %43 = mul i64 %42, %40
  %44 = getelementptr inbounds i8, i8* %41, i64 %34
  %45 = getelementptr inbounds i8, i8* %44, i64 %43
  %46 = call %struct.skcms_ICCProfile* @_ZNK5blink21ColorProfileTransform10SrcProfileEv(%"class.blink::ColorProfileTransform"* nonnull %23) #13
  %47 = call %struct.skcms_ICCProfile* @_ZNK5blink21ColorProfileTransform10DstProfileEv(%"class.blink::ColorProfileTransform"* nonnull %23) #13
  %48 = load i32, i32* %3, align 4
  %49 = sext i32 %48 to i64
  %50 = call zeroext i1 @skcms_Transform(i8* %45, i32 13, i32 1, %struct.skcms_ICCProfile* %46, i8* %45, i32 12, i32 1, %struct.skcms_ICCProfile* %47, i64 %49) #13
  %51 = load i32, i32* %3, align 4
  %52 = icmp sgt i32 %51, 0
  br i1 %52, label %58, label %53

53:                                               ; preds = %108, %38
  %54 = add nsw i64 %39, 1
  %55 = load i32, i32* %4, align 4
  %56 = sext i32 %55 to i64
  %57 = icmp slt i64 %54, %56
  br i1 %57, label %38, label %121

58:                                               ; preds = %38, %108
  %59 = phi i64 [ %116, %108 ], [ 0, %38 ]
  %60 = phi i8* [ %117, %108 ], [ %45, %38 ]
  %61 = load i8, i8* %60, align 1
  %62 = zext i8 %61 to i32
  %63 = getelementptr inbounds i8, i8* %60, i64 1
  %64 = load i8, i8* %63, align 1
  %65 = zext i8 %64 to i32
  %66 = getelementptr inbounds i8, i8* %60, i64 2
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i32
  %69 = getelementptr inbounds i8, i8* %60, i64 3
  %70 = load i8, i8* %69, align 1
  %71 = zext i8 %70 to i32
  %72 = load i8*, i8** %31, align 8
  %73 = load i64, i64* %32, align 8
  %74 = mul i64 %73, %40
  %75 = getelementptr inbounds i8, i8* %72, i64 %74
  %76 = trunc i64 %59 to i32
  %77 = add i32 %20, %76
  %78 = shl i32 %77, 2
  %79 = sext i32 %78 to i64
  %80 = getelementptr inbounds i8, i8* %75, i64 %79
  %81 = bitcast i8* %80 to i32*
  %82 = load i8, i8* %35, align 8, !range !4
  %83 = icmp eq i8 %82, 0
  br i1 %83, label %104, label %84

84:                                               ; preds = %58
  %85 = icmp eq i8 %70, -1
  br i1 %85, label %97, label %86

86:                                               ; preds = %84
  %87 = mul nuw nsw i32 %71, 257
  %88 = mul nuw nsw i32 %87, %62
  %89 = add nuw nsw i32 %88, 32896
  %90 = lshr i32 %89, 16
  %91 = mul nuw nsw i32 %87, %65
  %92 = add nuw nsw i32 %91, 32896
  %93 = lshr i32 %92, 16
  %94 = mul nuw nsw i32 %87, %68
  %95 = add nuw nsw i32 %94, 32896
  %96 = lshr i32 %95, 16
  br label %97

97:                                               ; preds = %84, %86
  %98 = phi i32 [ %96, %86 ], [ %68, %84 ]
  %99 = phi i32 [ %93, %86 ], [ %65, %84 ]
  %100 = phi i32 [ %90, %86 ], [ %62, %84 ]
  %101 = shl nuw i32 %71, 24
  %102 = shl nuw nsw i32 %100, 16
  %103 = shl nuw nsw i32 %99, 8
  br label %108

104:                                              ; preds = %58
  %105 = shl nuw i32 %71, 24
  %106 = shl nuw nsw i32 %62, 16
  %107 = shl nuw nsw i32 %65, 8
  br label %108

108:                                              ; preds = %97, %104
  %109 = phi i32 [ %101, %97 ], [ %106, %104 ]
  %110 = phi i32 [ %98, %97 ], [ %107, %104 ]
  %111 = phi i32 [ %103, %97 ], [ %68, %104 ]
  %112 = phi i32 [ %102, %97 ], [ %105, %104 ]
  %113 = or i32 %110, %109
  %114 = or i32 %113, %111
  %115 = or i32 %114, %112
  store i32 %115, i32* %81, align 4
  %116 = add nuw nsw i64 %59, 1
  %117 = getelementptr inbounds i8, i8* %60, i64 4
  %118 = load i32, i32* %3, align 4
  %119 = sext i32 %118 to i64
  %120 = icmp slt i64 %116, %119
  br i1 %120, label %58, label %53

121:                                              ; preds = %53, %25, %17
  %122 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 3
  %123 = load i32, i32* %122, align 8
  %124 = and i32 %123, 2
  %125 = icmp ne i32 %124, 0
  %126 = icmp ne i64 %1, 0
  %127 = and i1 %126, %125
  br i1 %127, label %128, label %215

128:                                              ; preds = %121
  %129 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %7, i64 0, i32 8
  %130 = load i32, i32* %129, align 4
  %131 = icmp eq i32 %130, 0
  br i1 %131, label %132, label %215

132:                                              ; preds = %128
  %133 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %7, i64 0, i32 11
  %134 = load i64, i64* %133, align 8
  %135 = icmp eq i64 %134, 4294967295
  br i1 %135, label %215, label %136

136:                                              ; preds = %132
  %137 = add i32 %6, -1
  %138 = call dereferenceable(128) %"class.blink::ImageFrame"* @_ZN3WTF6VectorIN5blink10ImageFrameELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %5, i32 %137) #13
  %139 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %138, i64 0, i32 7
  %140 = load i32, i32* %139, align 8
  switch i32 %140, label %215 [
    i32 1, label %141
    i32 2, label %156
  ]

141:                                              ; preds = %136
  %142 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 9
  %143 = load i32, i32* %142, align 4
  %144 = load i32, i32* %4, align 4
  %145 = icmp slt i32 %143, %144
  br i1 %145, label %146, label %215

146:                                              ; preds = %141
  %147 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 10
  br label %148

148:                                              ; preds = %146, %148
  %149 = phi i32 [ %143, %146 ], [ %153, %148 ]
  %150 = load void (%"class.blink::ImageFrame"*, %"class.blink::ImageFrame"*, i32, i32, i32)*, void (%"class.blink::ImageFrame"*, %"class.blink::ImageFrame"*, i32, i32, i32)** %147, align 8
  %151 = add nsw i32 %149, %22
  %152 = load i32, i32* %3, align 4
  call void %150(%"class.blink::ImageFrame"* dereferenceable(128) %7, %"class.blink::ImageFrame"* dereferenceable(128) %138, i32 %151, i32 %20, i32 %152) #13
  %153 = add nsw i32 %149, 1
  %154 = load i32, i32* %4, align 4
  %155 = icmp slt i32 %153, %154
  br i1 %155, label %148, label %215

156:                                              ; preds = %136
  %157 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 9
  %158 = load i32, i32* %157, align 4
  %159 = load i32, i32* %4, align 4
  %160 = icmp slt i32 %158, %159
  br i1 %160, label %161, label %215

161:                                              ; preds = %156
  %162 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %138, i64 0, i32 4, i32 0, i32 1
  %163 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %138, i64 0, i32 4, i32 1, i32 1
  %164 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %138, i64 0, i32 4, i32 0, i32 0
  %165 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %138, i64 0, i32 4, i32 1, i32 0
  %166 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %7, i64 0, i32 4, i32 1, i32 0
  %167 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 10
  br label %168

168:                                              ; preds = %161, %211
  %169 = phi i32 [ %158, %161 ], [ %212, %211 ]
  %170 = add nsw i32 %169, %22
  %171 = load i32, i32* %162, align 4
  %172 = icmp sgt i32 %171, %170
  br i1 %172, label %187, label %173

173:                                              ; preds = %168
  %174 = load i32, i32* %163, align 4
  %175 = add nsw i32 %174, %171
  %176 = icmp sgt i32 %175, %170
  br i1 %176, label %177, label %187

177:                                              ; preds = %173
  %178 = load i32, i32* %19, align 4
  %179 = load i32, i32* %164, align 4
  %180 = load i32, i32* %165, align 4
  %181 = add i32 %180, %179
  %182 = icmp slt i32 %178, %181
  br i1 %182, label %183, label %187

183:                                              ; preds = %177
  %184 = load i32, i32* %166, align 4
  %185 = add i32 %184, %178
  %186 = icmp sgt i32 %185, %179
  br i1 %186, label %190, label %187

187:                                              ; preds = %183, %177, %173, %168
  %188 = load i32, i32* %19, align 4
  %189 = load i32, i32* %166, align 4
  br label %199

190:                                              ; preds = %183
  %191 = icmp sgt i32 %179, %178
  %192 = sub nsw i32 %179, %178
  %193 = select i1 %191, i32 %178, i32 -1
  %194 = select i1 %191, i32 %192, i32 0
  %195 = icmp sgt i32 %185, %181
  %196 = sub i32 %185, %181
  %197 = select i1 %195, i32 %181, i32 -1
  %198 = select i1 %195, i32 %196, i32 0
  br label %199

199:                                              ; preds = %190, %187
  %200 = phi i32 [ %188, %187 ], [ %193, %190 ]
  %201 = phi i32 [ %189, %187 ], [ %194, %190 ]
  %202 = phi i32 [ -1, %187 ], [ %197, %190 ]
  %203 = phi i32 [ 0, %187 ], [ %198, %190 ]
  %204 = icmp sgt i32 %201, 0
  br i1 %204, label %205, label %207

205:                                              ; preds = %199
  %206 = load void (%"class.blink::ImageFrame"*, %"class.blink::ImageFrame"*, i32, i32, i32)*, void (%"class.blink::ImageFrame"*, %"class.blink::ImageFrame"*, i32, i32, i32)** %167, align 8
  call void %206(%"class.blink::ImageFrame"* dereferenceable(128) %7, %"class.blink::ImageFrame"* dereferenceable(128) %138, i32 %170, i32 %200, i32 %201) #13
  br label %207

207:                                              ; preds = %205, %199
  %208 = icmp sgt i32 %203, 0
  br i1 %208, label %209, label %211

209:                                              ; preds = %207
  %210 = load void (%"class.blink::ImageFrame"*, %"class.blink::ImageFrame"*, i32, i32, i32)*, void (%"class.blink::ImageFrame"*, %"class.blink::ImageFrame"*, i32, i32, i32)** %167, align 8
  call void %210(%"class.blink::ImageFrame"* dereferenceable(128) %7, %"class.blink::ImageFrame"* dereferenceable(128) %138, i32 %170, i32 %202, i32 %203) #13
  br label %211

211:                                              ; preds = %209, %207
  %212 = add nsw i32 %169, 1
  %213 = load i32, i32* %4, align 4
  %214 = icmp slt i32 %212, %213
  br i1 %214, label %168, label %215

215:                                              ; preds = %211, %148, %156, %141, %136, %132, %128, %121
  %216 = load i32, i32* %4, align 4
  %217 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 9
  store i32 %216, i32* %217, align 4
  %218 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %7, i64 0, i32 10
  store i8 1, i8* %218, align 1
  br label %219

219:                                              ; preds = %2, %215
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #13
  ret void
}

declare i8* @WebPIDecGetRGB(%struct.WebPIDecoder*, i32*, i32*, i32*, i32*) local_unnamed_addr #2

declare zeroext i1 @skcms_Transform(i8*, i32, i32, %struct.skcms_ICCProfile*, i8*, i32, i32, %struct.skcms_ICCProfile*, i64) local_unnamed_addr #2

declare %struct.skcms_ICCProfile* @_ZNK5blink21ColorProfileTransform10SrcProfileEv(%"class.blink::ColorProfileTransform"*) local_unnamed_addr #2

declare %struct.skcms_ICCProfile* @_ZNK5blink21ColorProfileTransform10DstProfileEv(%"class.blink::ColorProfileTransform"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN5blink16WEBPImageDecoder16DecodeFrameCountEv(%"class.blink::WEBPImageDecoder"*) unnamed_addr #0 align 2 {
  %2 = tail call zeroext i1 @_ZN5blink16WEBPImageDecoder13UpdateDemuxerEv(%"class.blink::WEBPImageDecoder"* %0)
  br i1 %2, label %3, label %7

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 5
  %5 = load %struct.WebPDemuxer*, %struct.WebPDemuxer** %4, align 8
  %6 = tail call i32 @WebPDemuxGetI(%struct.WebPDemuxer* %5, i32 5) #13
  br label %10

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 0, i32 2, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  br label %10

10:                                               ; preds = %7, %3
  %11 = phi i32 [ %6, %3 ], [ %9, %7 ]
  %12 = zext i32 %11 to i64
  ret i64 %12
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16WEBPImageDecoder18InitializeNewFrameEm(%"class.blink::WEBPImageDecoder"*, i64) unnamed_addr #0 align 2 {
  %3 = alloca <4 x i32>, align 16
  %4 = alloca %struct.WebPIterator, align 8
  %5 = alloca %"class.blink::IntRect", align 8
  %6 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 3
  %7 = load i32, i32* %6, align 8
  %8 = and i32 %7, 2
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %56, label %10

10:                                               ; preds = %2
  %11 = bitcast %struct.WebPIterator* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %11) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 80, i1 false)
  %12 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 5
  %13 = load %struct.WebPDemuxer*, %struct.WebPDemuxer** %12, align 8
  %14 = trunc i64 %1 to i32
  %15 = add i32 %14, 1
  %16 = call i32 @WebPDemuxGetFrame(%struct.WebPDemuxer* %13, i32 %15, %struct.WebPIterator* nonnull %4) #13
  %17 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 0
  %18 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 0, i32 2
  %19 = call dereferenceable(128) %"class.blink::ImageFrame"* @_ZN3WTF6VectorIN5blink10ImageFrameELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %18, i32 %14) #13
  %20 = getelementptr inbounds %struct.WebPIterator, %struct.WebPIterator* %4, i64 0, i32 2
  %21 = bitcast i32* %20 to <4 x i32>*
  %22 = load <4 x i32>, <4 x i32>* %21, align 8
  %23 = bitcast %"class.blink::IntRect"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23) #13
  %24 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 0, i32 12
  %25 = bitcast %"class.blink::IntSize"* %24 to i64*
  %26 = load i64, i64* %25, align 4
  %27 = bitcast %"class.blink::IntRect"* %5 to i64*
  store i64 0, i64* %27, align 8
  %28 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %5, i64 0, i32 1
  %29 = bitcast %"class.blink::IntSize"* %28 to i64*
  store i64 %26, i64* %29, align 8
  %30 = bitcast <4 x i32>* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %30)
  %31 = bitcast <4 x i32>* %3 to %"class.blink::IntRect"*
  store <4 x i32> %22, <4 x i32>* %3, align 16
  call void @_ZN5blink7IntRect9IntersectERKS0_(%"class.blink::IntRect"* nonnull %31, %"class.blink::IntRect"* nonnull dereferenceable(16) %5) #13
  %32 = bitcast <4 x i32>* %3 to <2 x i64>*
  %33 = load <2 x i64>, <2 x i64>* %32, align 16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %30)
  %34 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %19, i64 0, i32 4
  %35 = bitcast %"class.blink::IntRect"* %34 to <2 x i64>*
  store <2 x i64> %33, <2 x i64>* %35, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #13
  %36 = getelementptr inbounds %struct.WebPIterator, %struct.WebPIterator* %4, i64 0, i32 6
  %37 = load i32, i32* %36, align 8
  %38 = sext i32 %37 to i64
  %39 = mul nsw i64 %38, 1000
  %40 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %19, i64 0, i32 6, i32 0
  store i64 %39, i64* %40, align 8
  %41 = getelementptr inbounds %struct.WebPIterator, %struct.WebPIterator* %4, i64 0, i32 7
  %42 = load i32, i32* %41, align 4
  %43 = icmp eq i32 %42, 1
  %44 = select i1 %43, i32 2, i32 1
  %45 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %19, i64 0, i32 7
  store i32 %44, i32* %45, align 8
  %46 = getelementptr inbounds %struct.WebPIterator, %struct.WebPIterator* %4, i64 0, i32 11
  %47 = load i32, i32* %46, align 4
  %48 = icmp ne i32 %47, 0
  %49 = zext i1 %48 to i32
  %50 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %19, i64 0, i32 8
  store i32 %49, i32* %50, align 4
  %51 = getelementptr inbounds %struct.WebPIterator, %struct.WebPIterator* %4, i64 0, i32 10
  %52 = load i32, i32* %51, align 8
  %53 = icmp eq i32 %52, 0
  %54 = call i64 @_ZN5blink12ImageDecoder25FindRequiredPreviousFrameEmb(%"class.blink::ImageDecoder"* %17, i64 %1, i1 zeroext %53) #13
  %55 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %19, i64 0, i32 11
  store i64 %54, i64* %55, align 8
  call void @WebPDemuxReleaseIterator(%struct.WebPIterator* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %11) #13
  br label %56

56:                                               ; preds = %2, %10
  ret void
}

declare i64 @_ZN5blink12ImageDecoder25FindRequiredPreviousFrameEmb(%"class.blink::ImageDecoder"*, i64, i1 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16WEBPImageDecoder6DecodeEm(%"class.blink::WEBPImageDecoder"*, i64) unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::Vector.39", align 8
  %4 = alloca %struct.WebPIterator, align 8
  %5 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 0
  %6 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 0, i32 15
  %7 = load i8, i8* %6, align 2, !range !4
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %86

9:                                                ; preds = %2
  %10 = bitcast %"class.WTF::Vector.39"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #13
  %11 = getelementptr inbounds %"class.WTF::Vector.39", %"class.WTF::Vector.39"* %3, i64 0, i32 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.WTF::Vector.39", %"class.WTF::Vector.39"* %3, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 16, i1 false)
  call void @_ZNK5blink12ImageDecoder18FindFramesToDecodeEm(%"class.WTF::Vector.39"* nonnull sret %3, %"class.blink::ImageDecoder"* %5, i64 %1) #13
  %13 = load i32, i32* %12, align 4
  %14 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 3
  %15 = bitcast %struct.WebPIterator* %4 to i8*
  %16 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 5
  %17 = getelementptr inbounds %struct.WebPIterator, %struct.WebPIterator* %4, i64 0, i32 9, i32 0
  %18 = getelementptr inbounds %struct.WebPIterator, %struct.WebPIterator* %4, i64 0, i32 9, i32 1
  %19 = icmp eq i32 %13, 0
  br i1 %19, label %58, label %20

20:                                               ; preds = %9
  %21 = load i64*, i64** %11, align 8
  %22 = zext i32 %13 to i64
  %23 = getelementptr inbounds i64, i64* %21, i64 %22
  br label %24

24:                                               ; preds = %20, %50
  %25 = phi i64* [ %36, %50 ], [ %23, %20 ]
  %26 = load i32, i32* %14, align 8
  %27 = and i32 %26, 2
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %34, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds i64, i64* %25, i64 -1
  %31 = load i64, i64* %30, align 8
  %32 = call zeroext i1 @_ZN5blink12ImageDecoder15InitFrameBufferEm(%"class.blink::ImageDecoder"* %5, i64 %31) #13
  br i1 %32, label %34, label %33

33:                                               ; preds = %29
  store i8 1, i8* %6, align 2
  br label %76

34:                                               ; preds = %24, %29
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %15) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 80, i1 false)
  %35 = load %struct.WebPDemuxer*, %struct.WebPDemuxer** %16, align 8
  %36 = getelementptr inbounds i64, i64* %25, i64 -1
  %37 = load i64, i64* %36, align 8
  %38 = trunc i64 %37 to i32
  %39 = add i32 %38, 1
  %40 = call i32 @WebPDemuxGetFrame(%struct.WebPDemuxer* %35, i32 %39, %struct.WebPIterator* nonnull %4) #13
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %34
  store i8 1, i8* %6, align 2
  br label %57

43:                                               ; preds = %34
  %44 = load i8*, i8** %17, align 8
  %45 = load i64, i64* %18, align 8
  %46 = load i64, i64* %36, align 8
  %47 = call zeroext i1 @_ZN5blink16WEBPImageDecoder17DecodeSingleFrameEPKhmm(%"class.blink::WEBPImageDecoder"* %0, i8* %44, i64 %45, i64 %46)
  call void @WebPDemuxReleaseIterator(%struct.WebPIterator* nonnull %4) #13
  %48 = load i8, i8* %6, align 2
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %50, label %57

50:                                               ; preds = %43
  %51 = load i64, i64* %36, align 8
  %52 = call zeroext i1 @_ZN5blink12ImageDecoder20PostDecodeProcessingEm(%"class.blink::ImageDecoder"* %5, i64 %51) #13
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %15) #13
  %53 = xor i1 %52, true
  %54 = load i64*, i64** %11, align 8
  %55 = icmp eq i64* %36, %54
  %56 = or i1 %55, %53
  br i1 %56, label %58, label %24

57:                                               ; preds = %43, %42
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %15) #13
  br label %76

58:                                               ; preds = %50, %9
  %59 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 0, i32 2, i32 0, i32 0, i32 2
  %60 = load i32, i32* %59, align 4
  %61 = add i32 %60, -1
  %62 = zext i32 %61 to i64
  %63 = icmp ugt i64 %62, %1
  br i1 %63, label %76, label %64

64:                                               ; preds = %58
  %65 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 0, i32 14
  %66 = load i8, i8* %65, align 1, !range !4
  %67 = icmp eq i8 %66, 0
  br i1 %67, label %76, label %68

68:                                               ; preds = %64
  %69 = load %struct.WebPDemuxer*, %struct.WebPDemuxer** %16, align 8
  %70 = icmp eq %struct.WebPDemuxer* %69, null
  br i1 %70, label %76, label %71

71:                                               ; preds = %68
  %72 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 6
  %73 = load i32, i32* %72, align 8
  %74 = icmp eq i32 %73, 2
  br i1 %74, label %76, label %75

75:                                               ; preds = %71
  store i8 1, i8* %6, align 2
  br label %76

76:                                               ; preds = %64, %57, %33, %75, %58, %68, %71
  %77 = load i64*, i64** %11, align 8
  %78 = icmp eq i64* %77, null
  %79 = bitcast i64* %77 to i8*
  br i1 %78, label %85, label %80, !prof !2

80:                                               ; preds = %76
  %81 = load i32, i32* %12, align 4
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %84, label %83, !prof !3

83:                                               ; preds = %80
  store i32 0, i32* %12, align 4
  br label %84

84:                                               ; preds = %83, %80
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %79) #13
  store i64* null, i64** %11, align 8
  br label %85

85:                                               ; preds = %76, %84
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #13
  br label %86

86:                                               ; preds = %2, %85
  ret void
}

declare void @_ZNK5blink12ImageDecoder18FindFramesToDecodeEm(%"class.WTF::Vector.39"* sret, %"class.blink::ImageDecoder"*, i64) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink12ImageDecoder15InitFrameBufferEm(%"class.blink::ImageDecoder"*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink16WEBPImageDecoder17DecodeSingleFrameEPKhmm(%"class.blink::WEBPImageDecoder"*, i8*, i64, i64) local_unnamed_addr #0 align 2 {
  %5 = alloca %class.sk_sp.1, align 8
  %6 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 0
  %7 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 0, i32 15
  %8 = load i8, i8* %7, align 2, !range !4
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %154

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 0, i32 2
  %12 = trunc i64 %3 to i32
  %13 = tail call dereferenceable(128) %"class.blink::ImageFrame"* @_ZN3WTF6VectorIN5blink10ImageFrameELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %11, i32 %12) #13
  %14 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %13, i64 0, i32 5
  %15 = load i32, i32* %14, align 8
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %42

17:                                               ; preds = %10
  %18 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 0, i32 12
  %19 = bitcast %"class.blink::IntSize"* %18 to i64*
  %20 = load i64, i64* %19, align 4
  %21 = trunc i64 %20 to i32
  %22 = lshr i64 %20, 32
  %23 = trunc i64 %22 to i32
  call void @_ZN5blink12ImageDecoder21ColorSpaceForSkImagesEv(%class.sk_sp.1* nonnull sret %5, %"class.blink::ImageDecoder"* %6) #13
  %24 = call zeroext i1 @_ZN5blink10ImageFrame17AllocatePixelDataEii5sk_spI12SkColorSpaceE(%"class.blink::ImageFrame"* %13, i32 %21, i32 %23, %class.sk_sp.1* nonnull %5) #13
  %25 = getelementptr inbounds %class.sk_sp.1, %class.sk_sp.1* %5, i64 0, i32 0
  %26 = load %class.SkColorSpace*, %class.SkColorSpace** %25, align 8
  %27 = icmp eq %class.SkColorSpace* %26, null
  br i1 %27, label %34, label %28

28:                                               ; preds = %17
  %29 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = atomicrmw add i32* %29, i32 -1 acq_rel
  %31 = icmp eq i32 %30, 1
  br i1 %31, label %32, label %34

32:                                               ; preds = %28
  %33 = bitcast %class.SkColorSpace* %26 to i8*
  call void @_ZdlPv(i8* %33) #14
  br label %34

34:                                               ; preds = %17, %28, %32
  br i1 %24, label %36, label %35

35:                                               ; preds = %34
  store i8 1, i8* %7, align 2
  br label %154

36:                                               ; preds = %34
  call void @_ZN5blink10ImageFrame17ZeroFillPixelDataEv(%"class.blink::ImageFrame"* %13) #13
  call void @_ZN5blink10ImageFrame9SetStatusENS0_6StatusE(%"class.blink::ImageFrame"* %13, i32 2) #13
  call void @_ZN5blink10ImageFrame11SetHasAlphaEb(%"class.blink::ImageFrame"* %13, i1 zeroext true) #13
  %37 = load i64, i64* %19, align 4
  %38 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %13, i64 0, i32 4
  %39 = bitcast %"class.blink::IntRect"* %38 to i64*
  store i64 0, i64* %39, align 8
  %40 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %13, i64 0, i32 4, i32 1
  %41 = bitcast %"class.blink::IntSize"* %40 to i64*
  store i64 %37, i64* %41, align 8
  br label %42

42:                                               ; preds = %36, %10
  %43 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 1
  %44 = load %struct.WebPIDecoder*, %struct.WebPIDecoder** %43, align 8
  %45 = icmp eq %struct.WebPIDecoder* %44, null
  br i1 %45, label %46, label %81

46:                                               ; preds = %42
  %47 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 2
  %48 = call i32 @WebPInitDecBufferInternal(%struct.WebPDecBuffer* %47, i32 521) #13
  %49 = call %"class.blink::ColorProfileTransform"* @_ZN5blink12ImageDecoder14ColorTransformEv(%"class.blink::ImageDecoder"* %6) #13
  %50 = icmp eq %"class.blink::ColorProfileTransform"* %49, null
  br i1 %50, label %51, label %61

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 3
  %53 = load i32, i32* %52, align 8
  %54 = and i32 %53, 16
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %61, label %56

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 0, i32 3
  %58 = load i8, i8* %57, align 8, !range !4
  %59 = icmp eq i8 %58, 0
  %60 = select i1 %59, i32 3, i32 8
  br label %61

61:                                               ; preds = %46, %51, %56
  %62 = phi i32 [ 3, %46 ], [ 3, %51 ], [ %60, %56 ]
  %63 = getelementptr inbounds %struct.WebPDecBuffer, %struct.WebPDecBuffer* %47, i64 0, i32 0
  store i32 %62, i32* %63, align 8
  %64 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 0, i32 12
  %65 = bitcast %"class.blink::IntSize"* %64 to i64*
  %66 = load i64, i64* %65, align 4
  %67 = trunc i64 %66 to i32
  %68 = shl i32 %67, 2
  %69 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 2, i32 4, i32 0, i32 1
  %70 = bitcast i8** %69 to i32*
  store i32 %68, i32* %70, align 8
  %71 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %13, i64 0, i32 4, i32 1, i32 1
  %72 = load i32, i32* %71, align 4
  %73 = mul nsw i32 %68, %72
  %74 = sext i32 %73 to i64
  %75 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 2, i32 4, i32 0, i32 2
  %76 = bitcast i8** %75 to i64*
  store i64 %74, i64* %76, align 8
  %77 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 2, i32 3
  store i32 1, i32* %77, align 4
  %78 = call %struct.WebPIDecoder* @WebPINewDecoder(%struct.WebPDecBuffer* %47) #13
  store %struct.WebPIDecoder* %78, %struct.WebPIDecoder** %43, align 8
  %79 = icmp eq %struct.WebPIDecoder* %78, null
  br i1 %79, label %80, label %81

80:                                               ; preds = %61
  store i8 1, i8* %7, align 2
  br label %154

81:                                               ; preds = %61, %42
  %82 = phi %struct.WebPIDecoder* [ %78, %61 ], [ %44, %42 ]
  %83 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %13, i64 0, i32 4, i32 0, i32 0
  %84 = load i32, i32* %83, align 4
  %85 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %13, i64 0, i32 4, i32 0, i32 1
  %86 = load i32, i32* %85, align 4
  %87 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %13, i64 0, i32 0, i32 1, i32 0
  %88 = load i8*, i8** %87, align 8
  %89 = sext i32 %86 to i64
  %90 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %13, i64 0, i32 0, i32 1, i32 1
  %91 = load i64, i64* %90, align 8
  %92 = mul i64 %91, %89
  %93 = getelementptr inbounds i8, i8* %88, i64 %92
  %94 = shl i32 %84, 2
  %95 = sext i32 %94 to i64
  %96 = getelementptr inbounds i8, i8* %93, i64 %95
  %97 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 2, i32 4, i32 0, i32 0
  store i8* %96, i8** %97, align 8
  %98 = call i32 @WebPIUpdate(%struct.WebPIDecoder* nonnull %82, i8* %1, i64 %2) #13
  switch i32 %98, label %138 [
    i32 0, label %99
    i32 5, label %113
  ]

99:                                               ; preds = %81
  call void @_ZN5blink16WEBPImageDecoder19ApplyPostProcessingEm(%"class.blink::WEBPImageDecoder"* %0, i64 %3)
  %100 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 3
  %101 = load i32, i32* %100, align 8
  %102 = and i32 %101, 16
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %104, label %108

104:                                              ; preds = %99
  %105 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 4
  %106 = load i8, i8* %105, align 4, !range !4
  %107 = icmp ne i8 %106, 0
  br label %108

108:                                              ; preds = %99, %104
  %109 = phi i1 [ true, %99 ], [ %107, %104 ]
  call void @_ZN5blink10ImageFrame11SetHasAlphaEb(%"class.blink::ImageFrame"* %13, i1 zeroext %109) #13
  call void @_ZN5blink10ImageFrame9SetStatusENS0_6StatusE(%"class.blink::ImageFrame"* %13, i32 3) #13
  %110 = load %struct.WebPIDecoder*, %struct.WebPIDecoder** %43, align 8
  call void @WebPIDelete(%struct.WebPIDecoder* %110) #13
  store %struct.WebPIDecoder* null, %struct.WebPIDecoder** %43, align 8
  %111 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 9
  store i32 0, i32* %111, align 4
  %112 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 4
  store i8 0, i8* %112, align 4
  br label %154

113:                                              ; preds = %81
  %114 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 0, i32 14
  %115 = load i8, i8* %114, align 1, !range !4
  %116 = icmp eq i8 %115, 0
  br i1 %116, label %117, label %138

117:                                              ; preds = %113
  %118 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 5
  %119 = load %struct.WebPDemuxer*, %struct.WebPDemuxer** %118, align 8
  %120 = icmp eq %struct.WebPDemuxer* %119, null
  br i1 %120, label %137, label %121

121:                                              ; preds = %117
  %122 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 6
  %123 = load i32, i32* %122, align 8
  %124 = icmp slt i32 %123, 1
  br i1 %124, label %137, label %125

125:                                              ; preds = %121
  %126 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 3
  %127 = load i32, i32* %126, align 8
  %128 = and i32 %127, 2
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %135, label %130

130:                                              ; preds = %125
  %131 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 0, i32 2, i32 0, i32 0, i32 2
  %132 = load i32, i32* %131, align 4
  %133 = zext i32 %132 to i64
  %134 = icmp ugt i64 %133, %3
  br i1 %134, label %138, label %137

135:                                              ; preds = %125
  %136 = call zeroext i1 @_ZNK5blink12ImageDecoder22FrameIsReceivedAtIndexEm(%"class.blink::ImageDecoder"* %6, i64 %3) #13
  br i1 %136, label %138, label %137

137:                                              ; preds = %121, %117, %130, %135
  call void @_ZN5blink16WEBPImageDecoder19ApplyPostProcessingEm(%"class.blink::WEBPImageDecoder"* %0, i64 %3)
  br label %154

138:                                              ; preds = %113, %130, %135, %81
  %139 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 5
  %140 = load %struct.WebPDemuxer*, %struct.WebPDemuxer** %139, align 8
  call void @WebPDemuxDelete(%struct.WebPDemuxer* %140) #13
  store %struct.WebPDemuxer* null, %struct.WebPDemuxer** %139, align 8
  %141 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 11, i32 0
  %142 = load %class.SkData*, %class.SkData** %141, align 8
  store %class.SkData* null, %class.SkData** %141, align 8
  %143 = icmp eq %class.SkData* %142, null
  br i1 %143, label %150, label %144

144:                                              ; preds = %138
  %145 = getelementptr inbounds %class.SkData, %class.SkData* %142, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %146 = atomicrmw add i32* %145, i32 -1 acq_rel
  %147 = icmp eq i32 %146, 1
  br i1 %147, label %148, label %150

148:                                              ; preds = %144
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %142) #13
  %149 = bitcast %class.SkData* %142 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %149) #13
  br label %150

150:                                              ; preds = %138, %144, %148
  %151 = load %struct.WebPIDecoder*, %struct.WebPIDecoder** %43, align 8
  call void @WebPIDelete(%struct.WebPIDecoder* %151) #13
  store %struct.WebPIDecoder* null, %struct.WebPIDecoder** %43, align 8
  %152 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 9
  store i32 0, i32* %152, align 4
  %153 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 4
  store i8 0, i8* %153, align 4
  store i8 1, i8* %7, align 2
  br label %154

154:                                              ; preds = %4, %35, %150, %137, %108, %80
  %155 = phi i1 [ false, %4 ], [ false, %35 ], [ false, %150 ], [ false, %137 ], [ true, %108 ], [ false, %80 ]
  ret i1 %155
}

declare zeroext i1 @_ZN5blink12ImageDecoder20PostDecodeProcessingEm(%"class.blink::ImageDecoder"*, i64) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink12ImageDecoder15IsSizeAvailableEv(%"class.blink::ImageDecoder"*) local_unnamed_addr #2

declare i8* @_ZN5blink11ImagePlanes5PlaneEN2cc8YUVIndexE(%"class.blink::ImagePlanes"*, i32) local_unnamed_addr #2

declare i64 @_ZNK5blink11ImagePlanes8RowBytesEN2cc8YUVIndexE(%"class.blink::ImagePlanes"*, i32) local_unnamed_addr #2

declare %struct.WebPIDecoder* @WebPINewDecoder(%struct.WebPDecBuffer*) local_unnamed_addr #2

declare i32 @WebPIUpdate(%struct.WebPIDecoder*, i8*, i64) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink10ImageFrame17AllocatePixelDataEii5sk_spI12SkColorSpaceE(%"class.blink::ImageFrame"*, i32, i32, %class.sk_sp.1*) local_unnamed_addr #2

declare void @_ZN5blink12ImageDecoder21ColorSpaceForSkImagesEv(%class.sk_sp.1* sret, %"class.blink::ImageDecoder"*) local_unnamed_addr #2

declare void @_ZN5blink10ImageFrame17ZeroFillPixelDataEv(%"class.blink::ImageFrame"*) local_unnamed_addr #2

declare void @_ZN5blink10ImageFrame9SetStatusENS0_6StatusE(%"class.blink::ImageFrame"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink16WEBPImageDecoder33MakeMetadataForDecodeAccelerationEv(%"struct.cc::ImageHeaderMetadata"* noalias sret, %"class.blink::WEBPImageDecoder"*) unnamed_addr #0 align 2 {
  %3 = bitcast %"struct.cc::ImageHeaderMetadata"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %3, i8 -86, i64 36, i1 false)
  %4 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %1, i64 0, i32 0
  tail call void @_ZNK5blink12ImageDecoder33MakeMetadataForDecodeAccelerationEv(%"struct.cc::ImageHeaderMetadata"* sret %0, %"class.blink::ImageDecoder"* %4) #13
  %5 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %1, i64 0, i32 11, i32 0
  %6 = load %class.SkData*, %class.SkData** %5, align 8
  %7 = getelementptr inbounds %class.SkData, %class.SkData* %6, i64 0, i32 4
  %8 = load i64, i64* %7, align 8
  %9 = icmp ult i64 %8, 20
  br i1 %9, label %22, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %class.SkData, %class.SkData* %6, i64 0, i32 3
  %12 = load i8*, i8** %11, align 8
  %13 = tail call i32 @bcmp(i8* %12, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0), i64 4) #13
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %22

15:                                               ; preds = %10
  %16 = getelementptr inbounds i8, i8* %12, i64 8
  %17 = tail call i32 @bcmp(i8* %16, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.3, i64 0, i64 0), i64 8) #13
  %18 = icmp eq i32 %17, 0
  %19 = zext i1 %18 to i16
  %20 = shl nuw nsw i16 %19, 8
  %21 = or i16 %20, 1
  br label %22

22:                                               ; preds = %2, %10, %15
  %23 = phi i16 [ 1, %2 ], [ 1, %10 ], [ %21, %15 ]
  %24 = getelementptr inbounds %"struct.cc::ImageHeaderMetadata", %"struct.cc::ImageHeaderMetadata"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %25 = bitcast i8* %24 to i16*
  store i16 %23, i16* %25, align 4
  ret void
}

declare void @_ZNK5blink12ImageDecoder33MakeMetadataForDecodeAccelerationEv(%"struct.cc::ImageHeaderMetadata"* sret, %"class.blink::ImageDecoder"*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK5blink16WEBPImageDecoder17FilenameExtensionEv(%"class.blink::WEBPImageDecoder"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::String", align 8
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i64 4) #13
  %3 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  ret %"class.WTF::StringImpl"* %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink12ImageDecoder19ImageIsHighBitDepthEv(%"class.blink::ImageDecoder"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink12ImageDecoder23GetSupportedDecodeSizesEv(%"class.WTF::Vector.56"* noalias sret, %"class.blink::ImageDecoder"*) unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.WTF::Vector.56"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 16, i1 false) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK5blink12ImageDecoder11DecodedSizeEv(%"class.blink::ImageDecoder"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.blink::ImageDecoder"* %0 to i64 (%"class.blink::ImageDecoder"*)***
  %3 = load i64 (%"class.blink::ImageDecoder"*)**, i64 (%"class.blink::ImageDecoder"*)*** %2, align 8
  %4 = getelementptr inbounds i64 (%"class.blink::ImageDecoder"*)*, i64 (%"class.blink::ImageDecoder"*)** %3, i64 5
  %5 = load i64 (%"class.blink::ImageDecoder"*)*, i64 (%"class.blink::ImageDecoder"*)** %4, align 8
  %6 = tail call i64 %5(%"class.blink::ImageDecoder"* %0) #13
  ret i64 %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i8 @_ZNK5blink12ImageDecoder14GetYUVBitDepthEv(%"class.blink::ImageDecoder"*) unnamed_addr #0 comdat align 2 {
  ret i8 8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK5blink12ImageDecoder16FrameSizeAtIndexEm(%"class.blink::ImageDecoder"*, i64) unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.blink::ImageDecoder"* %0 to i64 (%"class.blink::ImageDecoder"*)***
  %4 = load i64 (%"class.blink::ImageDecoder"*)**, i64 (%"class.blink::ImageDecoder"*)*** %3, align 8
  %5 = getelementptr inbounds i64 (%"class.blink::ImageDecoder"*)*, i64 (%"class.blink::ImageDecoder"*)** %4, i64 5
  %6 = load i64 (%"class.blink::ImageDecoder"*)*, i64 (%"class.blink::ImageDecoder"*)** %5, align 8
  %7 = tail call i64 %6(%"class.blink::ImageDecoder"* %0) #13
  ret i64 %7
}

declare zeroext i1 @_ZNK5blink12ImageDecoder20FrameHasAlphaAtIndexEm(%"class.blink::ImageDecoder"*, i64) unnamed_addr #2

declare i64 @_ZNK5blink12ImageDecoder17FrameBytesAtIndexEm(%"class.blink::ImageDecoder"*, i64) unnamed_addr #2

declare i64 @_ZN5blink12ImageDecoder21ClearCacheExceptFrameEm(%"class.blink::ImageDecoder"*, i64) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12ImageDecoder7HotSpotERNS_8IntPointE(%"class.blink::ImageDecoder"*, %"class.blink::IntPoint"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12ImageDecoder18SetMemoryAllocatorEPN8SkBitmap9AllocatorE(%"class.blink::ImageDecoder"*, %"class.SkBitmap::Allocator"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::ImageDecoder", %"class.blink::ImageDecoder"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.blink::ImageDecoder", %"class.blink::ImageDecoder"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %2
  %8 = tail call i64 @_ZN5blink12ImageDecoder10FrameCountEv(%"class.blink::ImageDecoder"* %0) #13
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %7, %2
  %11 = tail call dereferenceable(128) %"class.blink::ImageFrame"* @_ZN3WTF6VectorIN5blink10ImageFrameELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %3, i32 0) #13
  %12 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %11, i64 0, i32 1
  store %"class.SkBitmap::Allocator"* %1, %"class.SkBitmap::Allocator"** %12, align 8
  br label %13

13:                                               ; preds = %7, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12ImageDecoder37ImageHasBothStillAndAnimatedSubImagesEv(%"class.blink::ImageDecoder"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink16WEBPImageDecoder10DecodeSizeEv(%"class.blink::WEBPImageDecoder"*) unnamed_addr #0 comdat align 2 {
  %2 = tail call zeroext i1 @_ZN5blink16WEBPImageDecoder13UpdateDemuxerEv(%"class.blink::WEBPImageDecoder"* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink16WEBPImageDecoder34FrameStatusSufficientForSuccessorsEj(%"class.blink::WEBPImageDecoder"*, i32) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::WEBPImageDecoder", %"class.blink::WEBPImageDecoder"* %0, i64 0, i32 0, i32 2
  %4 = tail call dereferenceable(128) %"class.blink::ImageFrame"* @_ZN3WTF6VectorIN5blink10ImageFrameELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %3, i32 %1) #13
  %5 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %4, i64 0, i32 5
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 3
  ret i1 %7
}

declare void @_ZN5blink10ImageFrame18BlendSrcOverDstRawEPjj(i32*, i32) local_unnamed_addr #2

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN8SkBitmapD1Ev(%class.SkBitmap*) unnamed_addr #7

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink10ImageFrameELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer"*, %"class.blink::ImageFrame"*) local_unnamed_addr #8 comdat align 2 {
  %3 = bitcast %"class.blink::ImageFrame"* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #13
  ret void
}

declare i32 @WebPGetFeaturesInternal(i8*, i64, %struct.WebPBitstreamFeatures*, i32) local_unnamed_addr #2

declare void @_ZN6SkData12MakeWithProcEPKvmPFvS1_PvES2_(%class.sk_sp.28* sret, i8*, i64, void (i8*, i8*)*, i8*) local_unnamed_addr #2

declare void @_ZN6SkData16DummyReleaseProcEPKvPv(i8*, i8*) #2

declare %struct.WebPDemuxer* @WebPDemuxInternal(%struct.WebPData*, i32, i32*, i32) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.umul.with.overflow.i32(i32, i32) #9

declare zeroext i1 @_ZN3WTF12IsMainThreadEv() local_unnamed_addr #2

declare %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8*, i32, i32, i32, i32) local_unnamed_addr #2

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #10

declare void @_ZN5blink7IntRect9IntersectERKS0_(%"class.blink::IntRect"*, %"class.blink::IntRect"* dereferenceable(16)) local_unnamed_addr #2

declare i32 @WebPInitDecBufferInternal(%struct.WebPDecBuffer*, i32) local_unnamed_addr #2

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #2

declare i64 @_ZN5blink12ImageDecoder10FrameCountEv(%"class.blink::ImageDecoder"*) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #11

; Function Attrs: nounwind
declare void @_ZN6SkDataD1Ev(%class.SkData*) unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN6SkDatadlEPv(i8*) local_unnamed_addr #7

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #7

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(128) %"class.blink::ImageFrame"* @_ZN3WTF6VectorIN5blink10ImageFrameELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #13
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0), i8* %14, i8* %15) #13
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.6, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #13
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #13
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #13
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::ImageFrame"*, %"class.blink::ImageFrame"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %24, i64 %25
  ret %"class.blink::ImageFrame"* %26
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(128) %"class.blink::ImageFrame"* @_ZNK3WTF6VectorIN5blink10ImageFrameELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #13
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0), i8* %14, i8* %15) #13
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.6, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #13
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #13
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #13
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::ImageFrame"*, %"class.blink::ImageFrame"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %24, i64 %25
  ret %"class.blink::ImageFrame"* %26
}

declare i8* @_ZN3WTF18PartitionAllocator21AllocateVectorBackingIcEEPT_m(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIcEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 2145386496
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #13
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 2145386496) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.9, i64 0, i64 0), i8* %11, i8* %12) #13
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.10, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #13
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %20 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %0) #13
  ret i64 %20
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #12

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { cold noreturn nounwind }
attributes #11 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nofree nounwind readonly }
attributes #13 = { nounwind }
attributes #14 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{i8 0, i8 2}
