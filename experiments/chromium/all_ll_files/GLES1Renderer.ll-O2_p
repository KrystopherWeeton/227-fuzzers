; ModuleID = '../../third_party/angle/src/libANGLE/GLES1Renderer.cpp'
source_filename = "../../third_party/angle/src/libANGLE/GLES1Renderer.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.gl::GLES1Renderer" = type { i8, %"class.gl::ShaderProgramManager"*, %"struct.gl::GLES1Renderer::GLES1UniformBuffers", %"struct.gl::GLES1Renderer::GLES1ProgramState", i8, [4 x float], [2 x float] }
%"class.gl::ShaderProgramManager" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.69", %"class.gl::ResourceMap.122" }
%"class.gl::ResourceManagerBase" = type { i32 (...)**, %"class.gl::HandleAllocator", i64 }
%"class.gl::HandleAllocator" = type <{ i32, i32, %"class.std::__1::vector", %"class.std::__1::vector.45", %"class.std::__1::vector", i8, [7 x i8] }>
%"class.std::__1::vector.45" = type { %"class.std::__1::__vector_base.46" }
%"class.std::__1::__vector_base.46" = type { %"struct.gl::HandleAllocator::HandleRange"*, %"struct.gl::HandleAllocator::HandleRange"*, %"class.std::__1::__compressed_pair.47" }
%"struct.gl::HandleAllocator::HandleRange" = type { i32, i32 }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"struct.gl::HandleAllocator::HandleRange"* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i32*, i32*, %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { i32* }
%"class.gl::ResourceMap.69" = type { i64, %"class.gl::Shader"**, %"class.absl::flat_hash_map.113" }
%"class.gl::Shader" = type { %"class.gl::LabeledObject", %"class.gl::ShaderState", %"class.std::__1::unique_ptr.85", %"struct.gl::Limitations", %"struct.gl::ShaderProgramID", i8, i32, i8, %"class.std::__1::basic_string", %"class.gl::BindingPointer", %"class.std::__1::unique_ptr.107", %"class.std::__1::basic_string", %"class.gl::ShaderProgramManager"*, i32, i32 }
%"class.gl::LabeledObject" = type { i32 (...)** }
%"class.gl::ShaderState" = type <{ %"class.std::__1::basic_string", i8, [3 x i8], i32, %"class.std::__1::basic_string", %"class.std::__1::vector", %"class.std::__1::basic_string", %"struct.sh::WorkGroupSize", [4 x i8], %"class.std::__1::vector.70", %"class.std::__1::vector.70", %"class.std::__1::vector.70", %"class.std::__1::vector.77", %"class.std::__1::vector.77", %"class.std::__1::vector.70", %"class.std::__1::vector.70", %"class.std::__1::vector.70", i8, [3 x i8], %"class.angle::BitSetT", i32, %struct.Optional, %struct.Optional, %struct.Optional.84, i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%"struct.sh::WorkGroupSize" = type { [3 x i32] }
%"class.std::__1::vector.77" = type { %"class.std::__1::__vector_base.78" }
%"class.std::__1::__vector_base.78" = type { %"struct.sh::InterfaceBlock"*, %"struct.sh::InterfaceBlock"*, %"class.std::__1::__compressed_pair.79" }
%"struct.sh::InterfaceBlock" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, i32, i8, i32, i8, i8, i32, %"class.std::__1::vector.70" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"struct.sh::InterfaceBlock"* }
%"class.std::__1::vector.70" = type { %"class.std::__1::__vector_base.71" }
%"class.std::__1::__vector_base.71" = type { %"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"*, %"class.std::__1::__compressed_pair.72" }
%"struct.sh::ShaderVariable" = type { i32, i32, %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::vector", i8, i8, %"class.std::__1::vector.70", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, i32, i8, i32, i32, i32, i8, i8, i8, i32, i8, i32, i8, i8, i8, i8, i32 }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.73" = type { %"struct.sh::ShaderVariable"* }
%"class.angle::BitSetT" = type { i32 }
%struct.Optional = type { i8, i8 }
%struct.Optional.84 = type { i8, i32 }
%"class.std::__1::unique_ptr.85" = type { %"class.std::__1::__compressed_pair.86" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"struct.std::__1::__compressed_pair_elem.87" = type { %"class.rx::ShaderImpl"* }
%"class.rx::ShaderImpl" = type opaque
%"struct.gl::Limitations" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"struct.gl::ShaderProgramID" = type { i32 }
%"class.gl::BindingPointer" = type { %"class.angle::BindingPointer.91" }
%"class.angle::BindingPointer.91" = type { i32 (...)**, %"class.gl::Compiler"* }
%"class.gl::Compiler" = type { %"class.angle::RefCountObject", %"class.std::__1::unique_ptr.92", i32, i32, %struct.ShBuiltInResources, %"class.angle::PackedEnumMap.98" }
%"class.angle::RefCountObject" = type { i32 (...)**, i64 }
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.rx::CompilerImpl"* }
%"class.rx::CompilerImpl" = type opaque
%struct.ShBuiltInResources = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64 (i8*, i64)*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %"struct.std::__1::array.32", %"struct.std::__1::array.32", i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"struct.std::__1::array.32" = type { [3 x i32] }
%"class.angle::PackedEnumMap.98" = type { %"struct.std::__1::array.99" }
%"struct.std::__1::array.99" = type { [6 x %"class.std::__1::vector.100"] }
%"class.std::__1::vector.100" = type { %"class.std::__1::__vector_base.101" }
%"class.std::__1::__vector_base.101" = type { %"class.gl::ShCompilerInstance"*, %"class.gl::ShCompilerInstance"*, %"class.std::__1::__compressed_pair.102" }
%"class.gl::ShCompilerInstance" = type <{ i8*, i32, i8, [3 x i8] }>
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"struct.std::__1::__compressed_pair_elem.103" = type { %"class.gl::ShCompilerInstance"* }
%"class.std::__1::unique_ptr.107" = type { %"class.std::__1::__compressed_pair.108" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.109" = type { %"struct.gl::Shader::CompilingState"* }
%"struct.gl::Shader::CompilingState" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.absl::flat_hash_map.113" = type { %"class.absl::container_internal::raw_hash_map.114" }
%"class.absl::container_internal::raw_hash_map.114" = type { %"class.absl::container_internal::raw_hash_set.115" }
%"class.absl::container_internal::raw_hash_set.115" = type { i8*, %"union.absl::container_internal::map_slot_type.116"*, i64, i64, %"class.absl::container_internal::CompressedTuple.117" }
%"union.absl::container_internal::map_slot_type.116" = type opaque
%"class.absl::container_internal::CompressedTuple.117" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.118" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.118" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"struct.absl::container_internal::internal_compressed_tuple::Storage" = type { i64 }
%"class.gl::ResourceMap.122" = type { i64, %"class.gl::Program"**, %"class.absl::flat_hash_map.241" }
%"class.gl::Program" = type { %"class.gl::LabeledObject", %"class.angle::Subject", %"class.gl::HasAttachedShaders", %"class.rx::Serial", %"class.gl::ProgramState", %"class.rx::ProgramImpl"*, i8, %"class.gl::ProgramBindings", %"class.gl::ProgramAliasedBindings", %"class.gl::ProgramAliasedBindings", i8, %"class.std::__1::unique_ptr.235", i8, i32, %"class.gl::ShaderProgramManager"*, %"struct.gl::ShaderProgramID", %"class.angle::BitSetT.201" }
%"class.angle::Subject" = type { i32 (...)**, %"class.angle::FastVector" }
%"class.angle::FastVector" = type { %"struct.std::__1::array", %"class.angle::ObserverBindingBase"**, i64, i64 }
%"struct.std::__1::array" = type { [8 x %"class.angle::ObserverBindingBase"*] }
%"class.angle::ObserverBindingBase" = type { i32 (...)**, %"class.angle::ObserverInterface"*, i64 }
%"class.angle::ObserverInterface" = type { i32 (...)** }
%"class.gl::HasAttachedShaders" = type { i32 (...)** }
%"class.rx::Serial" = type { i64 }
%"class.gl::ProgramState" = type { %"class.std::__1::basic_string", %"struct.sh::WorkGroupSize", %"class.angle::PackedEnumMap.123", i32, %"class.std::__1::vector.125", %"class.std::__1::vector.132", %"class.std::__1::vector.139", %"class.gl::Range", %"class.angle::BitSetT.147", %"class.std::__1::vector", %"class.angle::BitSetT.148", i8, i8, i8, i8, %"class.angle::BitSetT", i32, i32, i32, i32, i32, i32, %"class.gl::ProgramAliasedBindings", %"class.std::__1::shared_ptr" }
%"class.angle::PackedEnumMap.123" = type { %"struct.std::__1::array.124" }
%"struct.std::__1::array.124" = type { [6 x %"class.gl::Shader"*] }
%"class.std::__1::vector.125" = type { %"class.std::__1::__vector_base.126" }
%"class.std::__1::__vector_base.126" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.127" }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.128" }
%"struct.std::__1::__compressed_pair_elem.128" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::vector.132" = type { %"class.std::__1::__vector_base.133" }
%"class.std::__1::__vector_base.133" = type { %"struct.gl::VariableLocation"*, %"struct.gl::VariableLocation"*, %"class.std::__1::__compressed_pair.134" }
%"struct.gl::VariableLocation" = type <{ i32, i32, i8, [3 x i8] }>
%"class.std::__1::__compressed_pair.134" = type { %"struct.std::__1::__compressed_pair_elem.135" }
%"struct.std::__1::__compressed_pair_elem.135" = type { %"struct.gl::VariableLocation"* }
%"class.std::__1::vector.139" = type { %"class.std::__1::__vector_base.140" }
%"class.std::__1::__vector_base.140" = type { %"struct.gl::BufferVariable"*, %"struct.gl::BufferVariable"*, %"class.std::__1::__compressed_pair.142" }
%"struct.gl::BufferVariable" = type <{ %"struct.gl::ActiveVariable.base", [7 x i8], %"struct.sh::ShaderVariable", i32, %"struct.sh::BlockMemberInfo", i32, [4 x i8] }>
%"struct.gl::ActiveVariable.base" = type <{ i32 (...)**, %"class.angle::BitSetT.141" }>
%"class.angle::BitSetT.141" = type { i8 }
%"struct.sh::BlockMemberInfo" = type { i32, i32, i32, i8, i32 }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.143" }
%"struct.std::__1::__compressed_pair_elem.143" = type { %"struct.gl::BufferVariable"* }
%"class.gl::Range" = type { i32, i32 }
%"class.angle::BitSetT.147" = type { i8 }
%"class.angle::BitSetT.148" = type { i64 }
%"class.std::__1::shared_ptr" = type { %"class.gl::ProgramExecutable"*, %"class.std::__1::__shared_weak_count"* }
%"class.gl::ProgramExecutable" = type <{ %"class.angle::Subject", %"class.gl::InfoLog", %"class.angle::BitSetT.141", %"class.angle::BitSetT.141", [6 x i8], %"class.angle::BitSetT.166", i32, [4 x i8], %"class.angle::BitSetT.148", %"class.angle::BitSetT.166", %"class.angle::BitSetArray", %"struct.std::__1::array.169", %"struct.std::__1::array.170", %"class.angle::BitSetArray", %"struct.std::__1::array.171", %"struct.std::__1::array.172", %"class.angle::BitSetArray", %"struct.std::__1::array.172", i8, [7 x i8], %"class.std::__1::vector.70", %"class.std::__1::vector.132", %"class.std::__1::vector.132", i8, [7 x i8], %"class.std::__1::vector.70", %"class.std::__1::vector.173", %"class.std::__1::vector.180", i32, [4 x i8], %"class.std::__1::vector.187", %"class.gl::Range", %"class.gl::Range", %"class.std::__1::vector.194", %"class.angle::BitSetT.201", %"class.std::__1::vector.202", %"class.gl::Range", %"class.std::__1::vector.194", %"class.std::__1::vector.194", %"class.gl::Range", %"class.std::__1::vector.209", %"class.std::__1::vector.216", %"class.std::__1::vector.216", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [3 x i8], %"class.angle::PackedEnumMap.223", %"class.angle::PackedEnumMap.223", %"class.angle::PackedEnumMap", i8, i8, [2 x i8], i32, i32, i32, i32, i32, i32, i32, %struct.Optional.225, [6 x i8] }>
%"class.gl::InfoLog" = type { %"class.std::__1::unique_ptr.160" }
%"class.std::__1::unique_ptr.160" = type { %"class.std::__1::__compressed_pair.161" }
%"class.std::__1::__compressed_pair.161" = type { %"struct.std::__1::__compressed_pair_elem.162" }
%"struct.std::__1::__compressed_pair_elem.162" = type { %"class.std::__1::basic_stringstream"* }
%"class.std::__1::basic_stringstream" = type { %"class.std::__1::basic_iostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_iostream.base" = type { %"class.std::__1::basic_istream.base", %"class.std::__1::basic_ostream.base" }
%"class.std::__1::basic_istream.base" = type { i32 (...)**, i64 }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.angle::BitSetT.166" = type { i64 }
%"struct.std::__1::array.169" = type { [96 x i32] }
%"struct.std::__1::array.170" = type { [96 x i8] }
%"struct.std::__1::array.171" = type { [96 x i8] }
%"class.angle::BitSetArray" = type { %"struct.std::__1::array.167" }
%"struct.std::__1::array.167" = type { [2 x %"class.angle::BitSetT.168"] }
%"class.angle::BitSetT.168" = type { i64 }
%"struct.std::__1::array.172" = type { [96 x %"class.angle::BitSetT.141"] }
%"class.std::__1::vector.173" = type { %"class.std::__1::__vector_base.174" }
%"class.std::__1::__vector_base.174" = type { %"struct.gl::TransformFeedbackVarying"*, %"struct.gl::TransformFeedbackVarying"*, %"class.std::__1::__compressed_pair.175" }
%"struct.gl::TransformFeedbackVarying" = type <{ %"struct.sh::ShaderVariable", i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.175" = type { %"struct.std::__1::__compressed_pair_elem.176" }
%"struct.std::__1::__compressed_pair_elem.176" = type { %"struct.gl::TransformFeedbackVarying"* }
%"class.std::__1::vector.180" = type { %"class.std::__1::__vector_base.181" }
%"class.std::__1::__vector_base.181" = type { i32*, i32*, %"class.std::__1::__compressed_pair.182" }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.183" }
%"struct.std::__1::__compressed_pair_elem.183" = type { i32* }
%"class.std::__1::vector.187" = type { %"class.std::__1::__vector_base.188" }
%"class.std::__1::__vector_base.188" = type { %"struct.gl::LinkedUniform"*, %"struct.gl::LinkedUniform"*, %"class.std::__1::__compressed_pair.189" }
%"struct.gl::LinkedUniform" = type { %"struct.gl::ActiveVariable.base", %"struct.sh::ShaderVariable", %"struct.gl::UniformTypeInfo"*, i32, %"struct.sh::BlockMemberInfo", %"class.std::__1::vector" }
%"struct.gl::UniformTypeInfo" = type <{ i32, i32, i32, i32, i32, i8, [3 x i8], i32, i32, i32, [4 x i8], i64, i64, i64, i8, i8, i8, [5 x i8] }>
%"class.std::__1::__compressed_pair.189" = type { %"struct.std::__1::__compressed_pair_elem.190" }
%"struct.std::__1::__compressed_pair_elem.190" = type { %"struct.gl::LinkedUniform"* }
%"class.std::__1::vector.202" = type { %"class.std::__1::__vector_base.203" }
%"class.std::__1::__vector_base.203" = type { %"struct.gl::ShaderVariableBuffer"*, %"struct.gl::ShaderVariableBuffer"*, %"class.std::__1::__compressed_pair.204" }
%"struct.gl::ShaderVariableBuffer" = type { %"struct.gl::ActiveVariable.base", i32, i32, %"class.std::__1::vector" }
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.205" }
%"struct.std::__1::__compressed_pair_elem.205" = type { %"struct.gl::ShaderVariableBuffer"* }
%"class.std::__1::vector.194" = type { %"class.std::__1::__vector_base.195" }
%"class.std::__1::__vector_base.195" = type { %"struct.gl::InterfaceBlock"*, %"struct.gl::InterfaceBlock"*, %"class.std::__1::__compressed_pair.196" }
%"struct.gl::InterfaceBlock" = type <{ %"struct.gl::ShaderVariableBuffer", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, [3 x i8], i32, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.196" = type { %"struct.std::__1::__compressed_pair_elem.197" }
%"struct.std::__1::__compressed_pair_elem.197" = type { %"struct.gl::InterfaceBlock"* }
%"class.std::__1::vector.209" = type { %"class.std::__1::__vector_base.210" }
%"class.std::__1::__vector_base.210" = type { %"struct.gl::SamplerBinding"*, %"struct.gl::SamplerBinding"*, %"class.std::__1::__compressed_pair.211" }
%"struct.gl::SamplerBinding" = type { i8, i32, i8, %"class.std::__1::vector" }
%"class.std::__1::__compressed_pair.211" = type { %"struct.std::__1::__compressed_pair_elem.212" }
%"struct.std::__1::__compressed_pair_elem.212" = type { %"struct.gl::SamplerBinding"* }
%"class.std::__1::vector.216" = type { %"class.std::__1::__vector_base.217" }
%"class.std::__1::__vector_base.217" = type { %"struct.gl::ImageBinding"*, %"struct.gl::ImageBinding"*, %"class.std::__1::__compressed_pair.218" }
%"struct.gl::ImageBinding" = type { i8, %"class.std::__1::vector" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.219" }
%"struct.std::__1::__compressed_pair_elem.219" = type { %"struct.gl::ImageBinding"* }
%"class.angle::PackedEnumMap.223" = type { %"struct.std::__1::array.224" }
%"struct.std::__1::array.224" = type { [6 x %"class.std::__1::vector.70"] }
%"class.angle::PackedEnumMap" = type { %"struct.std::__1::array.29" }
%"struct.std::__1::array.29" = type { [6 x i32] }
%struct.Optional.225 = type { i8, i8 }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.rx::ProgramImpl" = type opaque
%"class.gl::ProgramBindings" = type { %"class.absl::flat_hash_map.226" }
%"class.absl::flat_hash_map.226" = type { %"class.absl::container_internal::raw_hash_map.227" }
%"class.absl::container_internal::raw_hash_map.227" = type { %"class.absl::container_internal::raw_hash_set.228" }
%"class.absl::container_internal::raw_hash_set.228" = type { i8*, %"union.absl::container_internal::map_slot_type.229"*, i64, i64, %"class.absl::container_internal::CompressedTuple.230" }
%"union.absl::container_internal::map_slot_type.229" = type opaque
%"class.absl::container_internal::CompressedTuple.230" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.231" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.231" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::ProgramAliasedBindings" = type { %"class.absl::flat_hash_map.149" }
%"class.absl::flat_hash_map.149" = type { %"class.absl::container_internal::raw_hash_map.150" }
%"class.absl::container_internal::raw_hash_map.150" = type { %"class.absl::container_internal::raw_hash_set.151" }
%"class.absl::container_internal::raw_hash_set.151" = type { i8*, %"union.absl::container_internal::map_slot_type.152"*, i64, i64, %"class.absl::container_internal::CompressedTuple.153" }
%"union.absl::container_internal::map_slot_type.152" = type opaque
%"class.absl::container_internal::CompressedTuple.153" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.154" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.154" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.std::__1::unique_ptr.235" = type { %"class.std::__1::__compressed_pair.236" }
%"class.std::__1::__compressed_pair.236" = type { %"struct.std::__1::__compressed_pair_elem.237" }
%"struct.std::__1::__compressed_pair_elem.237" = type { %"struct.gl::Program::LinkingState"* }
%"struct.gl::Program::LinkingState" = type opaque
%"class.angle::BitSetT.201" = type { i64 }
%"class.absl::flat_hash_map.241" = type { %"class.absl::container_internal::raw_hash_map.242" }
%"class.absl::container_internal::raw_hash_map.242" = type { %"class.absl::container_internal::raw_hash_set.243" }
%"class.absl::container_internal::raw_hash_set.243" = type { i8*, %"union.absl::container_internal::map_slot_type.244"*, i64, i64, %"class.absl::container_internal::CompressedTuple.245" }
%"union.absl::container_internal::map_slot_type.244" = type { %"struct.std::__1::pair.657" }
%"struct.std::__1::pair.657" = type { i32, %"class.gl::Program"* }
%"class.absl::container_internal::CompressedTuple.245" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.246" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.246" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"struct.gl::GLES1Renderer::GLES1UniformBuffers" = type { %"struct.std::__1::array.596", %"struct.std::__1::array.597", %"struct.std::__1::array.597", %"struct.std::__1::array.597", %"struct.std::__1::array.597", %"struct.std::__1::array.597", %"struct.std::__1::array.597", %"struct.std::__1::array.597", %"struct.std::__1::array.597", %"struct.std::__1::array.597", %"struct.std::__1::array.597", %"struct.std::__1::array.597", %"struct.std::__1::array.597", %"struct.std::__1::array.597", %"struct.std::__1::array.597", %"struct.std::__1::array.597", %"struct.std::__1::array.597", %"struct.std::__1::array.597", %"struct.std::__1::array.598", %"struct.std::__1::array.599", %"struct.std::__1::array.599", %"struct.std::__1::array.597", %"struct.std::__1::array.600", %"struct.std::__1::array.601", %"struct.std::__1::array.601", %"struct.std::__1::array.601", %"struct.std::__1::array.601", %"struct.std::__1::array.602", %"struct.std::__1::array.603", %"struct.std::__1::array.603", %"struct.std::__1::array.603", %"struct.std::__1::array.603", %"struct.std::__1::array.603", %"struct.std::__1::array.29", %"struct.std::__1::array.604", %"struct.std::__1::array.598" }
%"struct.std::__1::array.596" = type { [4 x [16 x float]] }
%"struct.std::__1::array.599" = type { [4 x float] }
%"struct.std::__1::array.597" = type { [4 x i32] }
%"struct.std::__1::array.600" = type { [8 x i32] }
%"struct.std::__1::array.601" = type { [8 x [4 x float]] }
%"struct.std::__1::array.602" = type { [8 x [3 x float]] }
%"struct.std::__1::array.603" = type { [8 x float] }
%"struct.std::__1::array.604" = type { [6 x [4 x float]] }
%"struct.std::__1::array.598" = type { [4 x [4 x float]] }
%"struct.gl::GLES1Renderer::GLES1ProgramState" = type { %"struct.gl::ShaderProgramID", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.std::__1::array.605", %"struct.std::__1::array.605", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation" }
%"struct.std::__1::array.605" = type { [4 x %"struct.gl::UniformLocation"] }
%"struct.gl::UniformLocation" = type { i32 }
%"class.gl::Context" = type <{ %"class.egl::LabeledObject", %"class.angle::ObserverInterface", %"class.gl::State", i8, i8, i8, i8, [4 x i8], %"class.gl::ErrorSet", %"class.angle::BitSetT.537", [4 x i8], %"class.std::__1::unique_ptr.538", i8*, %"struct.gl::Extensions", [4 x i8], %"class.gl::BindingPointer", %"struct.egl::Config"*, %"class.angle::PackedEnumMap.544", %"class.gl::ResourceMap.546", %"class.gl::HandleAllocator", %"class.gl::ResourceMap.556", %"class.gl::HandleAllocator", %"class.gl::ResourceMap.566", %"class.gl::HandleAllocator", %"class.gl::ResourceMap.576", %"class.gl::HandleAllocator", i8*, i8*, i8*, i8*, %"class.std::__1::vector.586", i8*, %"class.std::__1::vector.586", %"class.std::__1::unique_ptr.593", i8, i8, i8, i8, i32, i8, i8, i8, [5 x i8], %"class.egl::Surface"*, %"class.egl::Surface"*, %"class.egl::Display"*, i8, i8, i8, [5 x i8], %"class.gl::MemoryProgramCache"*, %"class.angle::BitSetT.536", %"class.gl::StateCache", %"class.angle::BitSetT.168", %"class.angle::BitSetT.168", %"class.angle::BitSetT.536", %"class.angle::BitSetT.168", %"class.angle::BitSetT.536", %"class.angle::BitSetT.168", %"class.angle::BitSetT.536", %"class.angle::BitSetT.168", %"class.angle::BitSetT.536", %"class.angle::BitSetT.168", %"class.angle::BitSetT.536", %"class.angle::BitSetT.168", %"class.angle::BitSetT.536", %"class.angle::ObserverBinding", %"class.angle::ObserverBinding", %"class.angle::ObserverBinding", %"class.std::__1::vector.337", %"class.std::__1::vector.337", %"class.std::__1::vector.337", %struct.Optional.617, %struct.Optional.617, %"class.std::__1::shared_ptr.618", %"class.std::__1::unique_ptr.619", %"class.std::__1::basic_string", i64, %"class.gl::MockOverlay", i8, i8, i8, [4 x i8] }>
%"class.egl::LabeledObject" = type { i32 (...)** }
%"class.gl::State" = type <{ %"struct.gl::ContextID", i32, i32, %"struct.gl::Version", [4 x i8], %"struct.gl::Caps", %"class.gl::TextureCapsMap", %"struct.gl::Extensions", %"struct.gl::Limitations", %"class.egl::ShareGroup"*, %"class.gl::BufferManager"*, %"class.gl::ShaderProgramManager"*, %"class.gl::TextureManager"*, %"class.gl::RenderbufferManager"*, %"class.gl::SamplerManager"*, %"class.gl::SyncManager"*, %"class.gl::FramebufferManager"*, %"class.gl::ProgramPipelineManager"*, %"class.gl::MemoryObjectManager"*, %"class.gl::SemaphoreManager"*, i32, i32, %"struct.angle::Color", float, i32, %"struct.gl::RasterizerState", i8, [3 x i8], %"struct.gl::Rectangle", %"struct.gl::BlendState", [4 x i8], %"class.gl::BlendStateExt", %"struct.angle::Color", i8, i8, [2 x i8], float, i8, i8, [2 x i8], i32, %"struct.std::__1::array.373", i8, [3 x i8], float, %"struct.gl::DepthStencilState", i32, i32, float, i32, i32, i32, i8, i8, [2 x i8], %"struct.gl::Rectangle", float, float, i32, i32, %"class.gl::Framebuffer"*, %"class.gl::Framebuffer"*, %"class.gl::BindingPointer.374", %"class.gl::Program"*, %"class.gl::BindingPointer.376", %"class.gl::ProgramExecutable"*, i8, [7 x i8], %"class.std::__1::vector.378", %"class.gl::VertexArray"*, %"class.angle::BitSetT.148", i64, %"class.angle::PackedEnumMap.406", %"class.gl::ActiveTexturesCache", %"class.std::__1::vector.337", %"class.angle::BitSetArray", %"class.std::__1::vector.418", %"class.std::__1::vector.427", %"class.angle::PackedEnumMap.434", %"class.angle::PackedEnumMap.438", %"class.std::__1::vector.440", %"class.std::__1::vector.440", %"class.std::__1::vector.440", %"class.angle::BitSetArray.447", %"class.angle::BitSetT.448", %"class.angle::BitSetT.168", %"class.gl::BindingPointer.449", %"struct.gl::PixelUnpackState", %"struct.gl::PixelPackState", i8, [3 x i8], %"class.gl::Debug", i8, i8, [2 x i8], i32, i8, i8, i8, i8, i32, %"class.angle::BitSetT.476", i32, %"class.gl::GLES1State", %"class.angle::BitSetT.168", %"class.angle::BitSetT.535", [4 x i8], %"class.angle::BitSetT.536", %"class.angle::BitSetT.166", %"class.angle::BitSetArray", %"class.angle::BitSetArray", %"class.angle::BitSetArray", %"class.angle::BitSetArray", %"class.gl::MockOverlay"*, %"class.angle::BitSetT.147", %"class.angle::BitSetT.147", i8, [5 x i8] }>
%"struct.gl::ContextID" = type { i32 }
%"struct.gl::Version" = type { i32, i32 }
%"struct.gl::Caps" = type <{ float, float, i32, [4 x i8], i64, i32, i32, i32, i32, float, i32, i32, float, float, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, [4 x i8], %"class.std::__1::vector", %"class.std::__1::vector", %"class.std::__1::vector", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap.30", i32, i32, i32, i32, i32, i32, i32, i32, i32, %"struct.std::__1::array.32", %"struct.std::__1::array.32", i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, float, float, i32, i32, [4 x i8] }>
%"struct.gl::TypePrecision" = type { %"struct.std::__1::array.28", i32 }
%"struct.std::__1::array.28" = type { [2 x i32] }
%"class.angle::PackedEnumMap.30" = type { %"struct.std::__1::array.31" }
%"struct.std::__1::array.31" = type { [6 x i64] }
%"class.gl::TextureCapsMap" = type { %"class.angle::PackedEnumMap.33" }
%"class.angle::PackedEnumMap.33" = type { %"struct.std::__1::array.34" }
%"struct.std::__1::array.34" = type { [227 x %"struct.gl::TextureCaps"] }
%"struct.gl::TextureCaps" = type { i8, i8, i8, i8, i8, %"class.std::__1::set.35" }
%"class.std::__1::set.35" = type { %"class.std::__1::__tree.36" }
%"class.std::__1::__tree.36" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.37", %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.egl::ShareGroup" = type opaque
%"class.gl::BufferManager" = type { %"class.gl::TypedResourceManager" }
%"class.gl::TypedResourceManager" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap" }
%"class.gl::ResourceMap" = type { i64, %"class.gl::Buffer"**, %"class.absl::flat_hash_map" }
%"class.gl::Buffer" = type { %"class.gl::RefCountObject.base.53", %"class.gl::LabeledObject", %"class.angle::ObserverInterface", %"class.angle::Subject", %"class.gl::BufferState", %"class.rx::BufferImpl"*, %"class.angle::ObserverBinding", %"class.gl::IndexRangeCache" }
%"class.gl::RefCountObject.base.53" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::BufferID" }>
%"struct.gl::BufferID" = type { i32 }
%"class.gl::BufferState" = type <{ %"class.std::__1::basic_string", i8, [7 x i8], i64, i32, i32, i8, [7 x i8], i8*, i64, i64, i32, i32, i32, i8, [3 x i8], i32, i8, [3 x i8] }>
%"class.rx::BufferImpl" = type opaque
%"class.gl::IndexRangeCache" = type { %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.54" }
%"class.std::__1::__tree.54" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.55", %"class.std::__1::__compressed_pair.59" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.absl::flat_hash_map" = type { %"class.absl::container_internal::raw_hash_map" }
%"class.absl::container_internal::raw_hash_map" = type { %"class.absl::container_internal::raw_hash_set" }
%"class.absl::container_internal::raw_hash_set" = type { i8*, %"union.absl::container_internal::map_slot_type"*, i64, i64, %"class.absl::container_internal::CompressedTuple" }
%"union.absl::container_internal::map_slot_type" = type { %"struct.std::__1::pair.655" }
%"struct.std::__1::pair.655" = type { i32, %"class.gl::Buffer"* }
%"class.absl::container_internal::CompressedTuple" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::TextureManager" = type { %"class.gl::TypedResourceManager.250" }
%"class.gl::TypedResourceManager.250" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.251" }
%"class.gl::ResourceMap.251" = type { i64, %"class.gl::Texture"**, %"class.absl::flat_hash_map.270" }
%"class.gl::Texture" = type <{ %"class.gl::RefCountObject.base.253", [4 x i8], %"class.egl::ImageSibling", %"class.gl::LabeledObject", %"class.gl::TextureState", %"class.angle::BitSetT.266", %"class.rx::TextureImpl"*, %"class.angle::ObserverBinding", %"class.angle::ObserverBinding", %"class.std::__1::basic_string", %"class.egl::Surface"*, %"class.egl::Stream"*, %"class.angle::FastVector.268", %"struct.gl::Texture::SamplerCompletenessCache", [4 x i8] }>
%"class.gl::RefCountObject.base.253" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::TextureID" }>
%"struct.gl::TextureID" = type { i32 }
%"class.egl::ImageSibling" = type { %"class.gl::FramebufferAttachmentObject", %"class.std::__1::set", %"class.angle::BindingPointer" }
%"class.gl::FramebufferAttachmentObject" = type { %"class.angle::Subject", %"class.angle::ObserverInterface" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.angle::BindingPointer" = type { i32 (...)**, %"class.egl::Image"* }
%"class.egl::Image" = type <{ %"class.angle::RefCountObject.4", %"class.egl::LabeledObject", %"struct.egl::ImageState", %"class.rx::ImageImpl"*, i8, [7 x i8] }>
%"class.angle::RefCountObject.4" = type { i32 (...)**, i64 }
%"struct.egl::ImageState" = type { i8*, i32, %"class.gl::ImageIndex", %"class.egl::ImageSibling"*, %"class.std::__1::set.5", %"struct.gl::Format", i8, %"struct.gl::Extents", i64, i32, i32 }
%"class.gl::ImageIndex" = type { i8, i32, i32, i32 }
%"class.std::__1::set.5" = type { %"class.std::__1::__tree.6" }
%"class.std::__1::__tree.6" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.7", %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.gl::Format" = type { %"struct.gl::InternalFormat"* }
%"struct.gl::InternalFormat" = type { i32, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i32, i32, i32, i32, i32, i32, i32, i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)*, i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)*, i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)*, i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)*, i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)* }
%"struct.gl::Extents" = type { i32, i32, i32 }
%"class.rx::ImageImpl" = type opaque
%"class.gl::TextureState" = type <{ i8, [3 x i8], %"struct.gl::SwizzleState", %"class.gl::SamplerState", i32, i32, i32, i32, i8, i8, [2 x i8], i32, i32, [4 x i8], %"class.std::__1::vector.257", %"struct.gl::Rectangle", i32, [4 x i8], %"class.gl::OffsetBindingPointer", i32, i8, [3 x i8], i32, i8, [3 x i8] }>
%"struct.gl::SwizzleState" = type { i32, i32, i32, i32 }
%"class.gl::SamplerState" = type { i32, i32, i32, i32, i32, float, float, float, i32, i32, i32, %"struct.angle::ColorGeneric", %"union.gl::SamplerState::Completeness" }
%"struct.angle::ColorGeneric" = type <{ %union.anon.254, i8, [3 x i8] }>
%union.anon.254 = type { %"struct.angle::Color" }
%"union.gl::SamplerState::Completeness" = type { i32 }
%"class.std::__1::vector.257" = type { %"class.std::__1::__vector_base.258" }
%"class.std::__1::__vector_base.258" = type { %"struct.gl::ImageDesc"*, %"struct.gl::ImageDesc"*, %"class.std::__1::__compressed_pair.259" }
%"struct.gl::ImageDesc" = type <{ %"struct.gl::Extents", [4 x i8], %"struct.gl::Format", i32, i8, [3 x i8], i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.259" = type { %"struct.std::__1::__compressed_pair_elem.260" }
%"struct.std::__1::__compressed_pair_elem.260" = type { %"struct.gl::ImageDesc"* }
%"class.gl::OffsetBindingPointer" = type { %"class.gl::BindingPointer.264", i64, i64 }
%"class.gl::BindingPointer.264" = type { %"class.angle::BindingPointer.265" }
%"class.angle::BindingPointer.265" = type { i32 (...)**, %"class.gl::Buffer"* }
%"class.angle::BitSetT.266" = type { i64 }
%"class.rx::TextureImpl" = type opaque
%"class.egl::Stream" = type { %"class.egl::LabeledObject", i8*, %"class.egl::Display"*, %"class.rx::StreamProducerImpl"*, %"class.gl::Context"*, i32, i64, i64, i32, i32, i32, %"struct.std::__1::array.267", i32, i32 }
%"class.rx::StreamProducerImpl" = type opaque
%"struct.std::__1::array.267" = type { [3 x %"struct.egl::Stream::PlaneTexture"] }
%"struct.egl::Stream::PlaneTexture" = type { i32, %"class.gl::Texture"* }
%"class.angle::FastVector.268" = type { %"struct.std::__1::array.269", %"class.rx::Serial"*, i64, i64 }
%"struct.std::__1::array.269" = type { [8 x %"class.rx::Serial"] }
%"struct.gl::Texture::SamplerCompletenessCache" = type <{ %"struct.gl::ContextID", %"class.gl::SamplerState", i8, [3 x i8] }>
%"class.absl::flat_hash_map.270" = type { %"class.absl::container_internal::raw_hash_map.271" }
%"class.absl::container_internal::raw_hash_map.271" = type { %"class.absl::container_internal::raw_hash_set.272" }
%"class.absl::container_internal::raw_hash_set.272" = type { i8*, %"union.absl::container_internal::map_slot_type.273"*, i64, i64, %"class.absl::container_internal::CompressedTuple.274" }
%"union.absl::container_internal::map_slot_type.273" = type { %"struct.std::__1::pair.659" }
%"struct.std::__1::pair.659" = type { i32, %"class.gl::Texture"* }
%"class.absl::container_internal::CompressedTuple.274" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.275" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.275" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::RenderbufferManager" = type { %"class.gl::TypedResourceManager.279" }
%"class.gl::TypedResourceManager.279" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.280" }
%"class.gl::ResourceMap.280" = type { i64, %"class.gl::Renderbuffer"**, %"class.absl::flat_hash_map.281" }
%"class.gl::Renderbuffer" = type { %"class.gl::RefCountObject.base", %"class.egl::ImageSibling", %"class.gl::LabeledObject", %"class.gl::RenderbufferState", %"class.std::__1::unique_ptr", %"class.std::__1::basic_string", %"class.angle::ObserverBinding" }
%"class.gl::RefCountObject.base" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::RenderbufferID" }>
%"struct.gl::RenderbufferID" = type { i32 }
%"class.gl::RenderbufferState" = type <{ i32, i32, %"struct.gl::Format", i32, i32, i32, [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.rx::RenderbufferImpl"* }
%"class.rx::RenderbufferImpl" = type { %"class.rx::FramebufferAttachmentObjectImpl", %"class.gl::RenderbufferState"* }
%"class.rx::FramebufferAttachmentObjectImpl" = type { %"class.angle::Subject" }
%"class.absl::flat_hash_map.281" = type { %"class.absl::container_internal::raw_hash_map.282" }
%"class.absl::container_internal::raw_hash_map.282" = type { %"class.absl::container_internal::raw_hash_set.283" }
%"class.absl::container_internal::raw_hash_set.283" = type { i8*, %"union.absl::container_internal::map_slot_type.284"*, i64, i64, %"class.absl::container_internal::CompressedTuple.285" }
%"union.absl::container_internal::map_slot_type.284" = type { %"struct.std::__1::pair.661" }
%"struct.std::__1::pair.661" = type { i32, %"class.gl::Renderbuffer"* }
%"class.absl::container_internal::CompressedTuple.285" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.286" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.286" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::SamplerManager" = type { %"class.gl::TypedResourceManager.290" }
%"class.gl::TypedResourceManager.290" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.291" }
%"class.gl::ResourceMap.291" = type { i64, %"class.gl::Sampler"**, %"class.absl::flat_hash_map.294" }
%"class.gl::Sampler" = type { %"class.gl::RefCountObject.base.293", %"class.gl::LabeledObject", %"class.angle::Subject", %"class.gl::SamplerState", i8, %"class.rx::SamplerImpl"*, %"class.std::__1::basic_string" }
%"class.gl::RefCountObject.base.293" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::SamplerID" }>
%"struct.gl::SamplerID" = type { i32 }
%"class.rx::SamplerImpl" = type opaque
%"class.absl::flat_hash_map.294" = type { %"class.absl::container_internal::raw_hash_map.295" }
%"class.absl::container_internal::raw_hash_map.295" = type { %"class.absl::container_internal::raw_hash_set.296" }
%"class.absl::container_internal::raw_hash_set.296" = type { i8*, %"union.absl::container_internal::map_slot_type.297"*, i64, i64, %"class.absl::container_internal::CompressedTuple.298" }
%"union.absl::container_internal::map_slot_type.297" = type { %"struct.std::__1::pair.663" }
%"struct.std::__1::pair.663" = type { i32, %"class.gl::Sampler"* }
%"class.absl::container_internal::CompressedTuple.298" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.299" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.299" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::SyncManager" = type { %"class.gl::TypedResourceManager.303" }
%"class.gl::TypedResourceManager.303" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.304" }
%"class.gl::ResourceMap.304" = type { i64, %"class.gl::Sync"**, %"class.absl::flat_hash_map.305" }
%"class.gl::Sync" = type opaque
%"class.absl::flat_hash_map.305" = type { %"class.absl::container_internal::raw_hash_map.306" }
%"class.absl::container_internal::raw_hash_map.306" = type { %"class.absl::container_internal::raw_hash_set.307" }
%"class.absl::container_internal::raw_hash_set.307" = type { i8*, %"union.absl::container_internal::map_slot_type.308"*, i64, i64, %"class.absl::container_internal::CompressedTuple.309" }
%"union.absl::container_internal::map_slot_type.308" = type opaque
%"class.absl::container_internal::CompressedTuple.309" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.310" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.310" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::FramebufferManager" = type { %"class.gl::TypedResourceManager.314" }
%"class.gl::TypedResourceManager.314" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.315" }
%"class.gl::ResourceMap.315" = type { i64, %"class.gl::Framebuffer"**, %"class.absl::flat_hash_map.316" }
%"class.absl::flat_hash_map.316" = type { %"class.absl::container_internal::raw_hash_map.317" }
%"class.absl::container_internal::raw_hash_map.317" = type { %"class.absl::container_internal::raw_hash_set.318" }
%"class.absl::container_internal::raw_hash_set.318" = type { i8*, %"union.absl::container_internal::map_slot_type.319"*, i64, i64, %"class.absl::container_internal::CompressedTuple.320" }
%"union.absl::container_internal::map_slot_type.319" = type { %"struct.std::__1::pair.665" }
%"struct.std::__1::pair.665" = type { i32, %"class.gl::Framebuffer"* }
%"class.absl::container_internal::CompressedTuple.320" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.321" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.321" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::ProgramPipelineManager" = type { %"class.gl::TypedResourceManager.325" }
%"class.gl::TypedResourceManager.325" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.326" }
%"class.gl::ResourceMap.326" = type { i64, %"class.gl::ProgramPipeline"**, %"class.absl::flat_hash_map.344" }
%"class.gl::ProgramPipeline" = type { %"class.gl::RefCountObject.base.328", %"class.gl::LabeledObject", %"class.angle::ObserverInterface", %"class.gl::HasAttachedShaders", %"class.std::__1::unique_ptr.329", %"class.gl::ProgramPipelineState", %"class.std::__1::vector.337", %"class.angle::ObserverBinding" }
%"class.gl::RefCountObject.base.328" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::ProgramPipelineID" }>
%"struct.gl::ProgramPipelineID" = type { i32 }
%"class.std::__1::unique_ptr.329" = type { %"class.std::__1::__compressed_pair.330" }
%"class.std::__1::__compressed_pair.330" = type { %"struct.std::__1::__compressed_pair_elem.331" }
%"struct.std::__1::__compressed_pair_elem.331" = type { %"class.rx::ProgramPipelineImpl"* }
%"class.rx::ProgramPipelineImpl" = type opaque
%"class.gl::ProgramPipelineState" = type <{ %"class.std::__1::basic_string", %"class.gl::Program"*, %"class.angle::PackedEnumMap.335", i8, [7 x i8], %"class.gl::ProgramExecutable"*, i8, [7 x i8] }>
%"class.angle::PackedEnumMap.335" = type { %"struct.std::__1::array.336" }
%"struct.std::__1::array.336" = type { [6 x %"class.gl::Program"*] }
%"class.absl::flat_hash_map.344" = type { %"class.absl::container_internal::raw_hash_map.345" }
%"class.absl::container_internal::raw_hash_map.345" = type { %"class.absl::container_internal::raw_hash_set.346" }
%"class.absl::container_internal::raw_hash_set.346" = type { i8*, %"union.absl::container_internal::map_slot_type.347"*, i64, i64, %"class.absl::container_internal::CompressedTuple.348" }
%"union.absl::container_internal::map_slot_type.347" = type { %"struct.std::__1::pair.667" }
%"struct.std::__1::pair.667" = type { i32, %"class.gl::ProgramPipeline"* }
%"class.absl::container_internal::CompressedTuple.348" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.349" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.349" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::MemoryObjectManager" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.353" }
%"class.gl::ResourceMap.353" = type { i64, %"class.gl::MemoryObject"**, %"class.absl::flat_hash_map.354" }
%"class.gl::MemoryObject" = type opaque
%"class.absl::flat_hash_map.354" = type { %"class.absl::container_internal::raw_hash_map.355" }
%"class.absl::container_internal::raw_hash_map.355" = type { %"class.absl::container_internal::raw_hash_set.356" }
%"class.absl::container_internal::raw_hash_set.356" = type { i8*, %"union.absl::container_internal::map_slot_type.357"*, i64, i64, %"class.absl::container_internal::CompressedTuple.358" }
%"union.absl::container_internal::map_slot_type.357" = type opaque
%"class.absl::container_internal::CompressedTuple.358" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.359" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.359" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::SemaphoreManager" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.363" }
%"class.gl::ResourceMap.363" = type { i64, %"class.gl::Semaphore"**, %"class.absl::flat_hash_map.364" }
%"class.gl::Semaphore" = type opaque
%"class.absl::flat_hash_map.364" = type { %"class.absl::container_internal::raw_hash_map.365" }
%"class.absl::container_internal::raw_hash_map.365" = type { %"class.absl::container_internal::raw_hash_set.366" }
%"class.absl::container_internal::raw_hash_set.366" = type { i8*, %"union.absl::container_internal::map_slot_type.367"*, i64, i64, %"class.absl::container_internal::CompressedTuple.368" }
%"union.absl::container_internal::map_slot_type.367" = type opaque
%"class.absl::container_internal::CompressedTuple.368" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.369" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.369" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"struct.gl::RasterizerState" = type { i8, i8, i32, i8, float, float, i8, i8, i8, i8 }
%"struct.gl::BlendState" = type { i8, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8 }
%"class.gl::BlendStateExt" = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %"class.angle::BitSetT.147", %"class.angle::BitSetT.147", i64 }
%"struct.angle::Color" = type { float, float, float, float }
%"struct.std::__1::array.373" = type { [2 x i32] }
%"struct.gl::DepthStencilState" = type { i8, i32, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"struct.gl::Rectangle" = type { i32, i32, i32, i32 }
%"class.gl::Framebuffer" = type { %"class.angle::ObserverInterface", %"class.gl::LabeledObject", %"class.angle::Subject", %"class.gl::FramebufferState", %"class.rx::FramebufferImpl"*, %struct.Optional.632, %"class.std::__1::vector.337", %"class.angle::ObserverBinding", %"class.angle::ObserverBinding", %"class.angle::BitSetT.633", %"class.angle::BitSetT.147", %struct.Optional.634 }
%"class.gl::FramebufferState" = type { %"struct.gl::FramebufferID", %"class.rx::Serial", %"class.std::__1::basic_string", %"class.std::__1::vector.625", %"class.gl::FramebufferAttachment", %"class.gl::FramebufferAttachment", %"class.angle::BitSetT.147", %"class.std::__1::vector", i32, %"class.angle::BitSetT.147", %"class.angle::BitSetT.148", i32, i32, i32, i8, i32, %"class.gl::FramebufferAttachment", %"class.gl::FramebufferAttachment", %"class.gl::FramebufferAttachment", i8, %"class.angle::BitSetT.536", i8, %"class.gl::FramebufferAttachment", i32, %"struct.gl::Offset" }
%"struct.gl::FramebufferID" = type { i32 }
%"class.std::__1::vector.625" = type { %"class.std::__1::__vector_base.626" }
%"class.std::__1::__vector_base.626" = type { %"class.gl::FramebufferAttachment"*, %"class.gl::FramebufferAttachment"*, %"class.std::__1::__compressed_pair.627" }
%"class.std::__1::__compressed_pair.627" = type { %"struct.std::__1::__compressed_pair_elem.628" }
%"struct.std::__1::__compressed_pair_elem.628" = type { %"class.gl::FramebufferAttachment"* }
%"class.gl::FramebufferAttachment" = type { i32, %"class.gl::FramebufferAttachment::Target", %"class.gl::FramebufferAttachmentObject"*, i32, i8, i32, i32 }
%"class.gl::FramebufferAttachment::Target" = type { i32, %"class.gl::ImageIndex" }
%"struct.gl::Offset" = type { i32, i32, i32 }
%"class.rx::FramebufferImpl" = type opaque
%struct.Optional.632 = type { i8, %"struct.gl::FramebufferStatus" }
%"struct.gl::FramebufferStatus" = type { i32, i8* }
%"class.angle::BitSetT.633" = type { i64 }
%struct.Optional.634 = type { i8, %"class.angle::BitSetT.633" }
%"class.gl::BindingPointer.374" = type { %"class.angle::BindingPointer.375" }
%"class.angle::BindingPointer.375" = type { i32 (...)**, %"class.gl::Renderbuffer"* }
%"class.gl::BindingPointer.376" = type { %"class.angle::BindingPointer.377" }
%"class.angle::BindingPointer.377" = type { i32 (...)**, %"class.gl::ProgramPipeline"* }
%"class.std::__1::vector.378" = type { %"class.std::__1::__vector_base.379" }
%"class.std::__1::__vector_base.379" = type { %"struct.gl::VertexAttribCurrentValueData"*, %"struct.gl::VertexAttribCurrentValueData"*, %"class.std::__1::__compressed_pair.381" }
%"struct.gl::VertexAttribCurrentValueData" = type { %union.anon.380, i32 }
%union.anon.380 = type { [4 x float] }
%"class.std::__1::__compressed_pair.381" = type { %"struct.std::__1::__compressed_pair_elem.382" }
%"struct.std::__1::__compressed_pair_elem.382" = type { %"struct.gl::VertexAttribCurrentValueData"* }
%"class.gl::VertexArray" = type <{ %"class.angle::ObserverInterface", %"class.gl::LabeledObject", %"class.angle::Subject", %"struct.gl::VertexArrayID", [4 x i8], %"class.gl::VertexArrayState", %"class.angle::BitSetT.400", %"struct.std::__1::array.401", %"struct.std::__1::array.403", %struct.Optional.405, %"class.rx::VertexArrayImpl"*, %"class.std::__1::vector.337", %"class.angle::BitSetT.166", %"class.gl::VertexArray::IndexRangeCache", i8, [7 x i8] }>
%"struct.gl::VertexArrayID" = type { i32 }
%"class.gl::VertexArrayState" = type { %"class.std::__1::basic_string", %"class.std::__1::vector.386", %"class.gl::SubjectBindingPointer", %"class.std::__1::vector.393", %"class.angle::BitSetT.166", %"class.angle::BitSetT.148", %"class.angle::BitSetT.166", %"class.angle::BitSetT.166", %"class.angle::BitSetT.166", %"class.angle::BitSetT.166", %"class.angle::BitSetT.166" }
%"class.std::__1::vector.386" = type { %"class.std::__1::__vector_base.387" }
%"class.std::__1::__vector_base.387" = type { %"struct.gl::VertexAttribute"*, %"struct.gl::VertexAttribute"*, %"class.std::__1::__compressed_pair.388" }
%"struct.gl::VertexAttribute" = type { i8, %"struct.angle::Format"*, i8*, i32, i32, i32, i64 }
%"struct.angle::Format" = type { i32, i32, i32, void (i64, i64, i64, i8*, i64, i64, i8*, i64, i64)*, void (i8*, i8*)*, void (i8*, i8*)*, %"class.rx::FastCopyFunctionMap"*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i8, i32 }
%"class.rx::FastCopyFunctionMap" = type { i64, %"struct.rx::FastCopyFunctionMap::Entry"* }
%"struct.rx::FastCopyFunctionMap::Entry" = type { i32, void (i8*, i8*)* }
%"class.std::__1::__compressed_pair.388" = type { %"struct.std::__1::__compressed_pair_elem.389" }
%"struct.std::__1::__compressed_pair_elem.389" = type { %"struct.gl::VertexAttribute"* }
%"class.gl::SubjectBindingPointer" = type { %"class.gl::BindingPointer.264", %"class.angle::ObserverBindingBase" }
%"class.std::__1::vector.393" = type { %"class.std::__1::__vector_base.394" }
%"class.std::__1::__vector_base.394" = type { %"class.gl::VertexBinding"*, %"class.gl::VertexBinding"*, %"class.std::__1::__compressed_pair.395" }
%"class.gl::VertexBinding" = type { i32, i32, i64, %"class.gl::BindingPointer.264", %"class.angle::BitSetT.166" }
%"class.std::__1::__compressed_pair.395" = type { %"struct.std::__1::__compressed_pair_elem.396" }
%"struct.std::__1::__compressed_pair_elem.396" = type { %"class.gl::VertexBinding"* }
%"class.angle::BitSetT.400" = type { i64 }
%"struct.std::__1::array.401" = type { [16 x %"class.angle::BitSetT.402"] }
%"class.angle::BitSetT.402" = type { i64 }
%"struct.std::__1::array.403" = type { [16 x %"class.angle::BitSetT.404"] }
%"class.angle::BitSetT.404" = type { i64 }
%struct.Optional.405 = type { i8, %"class.angle::BitSetT.400" }
%"class.rx::VertexArrayImpl" = type opaque
%"class.gl::VertexArray::IndexRangeCache" = type { i64, i32, i64, %"struct.gl::IndexRange" }
%"struct.gl::IndexRange" = type { i64, i64, i64 }
%"class.angle::PackedEnumMap.406" = type { %"struct.std::__1::array.407" }
%"struct.std::__1::array.407" = type { [11 x %"class.std::__1::vector.408"] }
%"class.std::__1::vector.408" = type { %"class.std::__1::__vector_base.409" }
%"class.std::__1::__vector_base.409" = type { %"class.gl::BindingPointer.410"*, %"class.gl::BindingPointer.410"*, %"class.std::__1::__compressed_pair.412" }
%"class.gl::BindingPointer.410" = type { %"class.angle::BindingPointer.411" }
%"class.angle::BindingPointer.411" = type { i32 (...)**, %"class.gl::Texture"* }
%"class.std::__1::__compressed_pair.412" = type { %"struct.std::__1::__compressed_pair_elem.413" }
%"struct.std::__1::__compressed_pair_elem.413" = type { %"class.gl::BindingPointer.410"* }
%"class.gl::ActiveTexturesCache" = type { %"struct.std::__1::array.417" }
%"struct.std::__1::array.417" = type { [96 x %"class.gl::Texture"*] }
%"class.std::__1::vector.418" = type { %"class.std::__1::__vector_base.419" }
%"class.std::__1::__vector_base.419" = type { %"class.gl::BindingPointer.420"*, %"class.gl::BindingPointer.420"*, %"class.std::__1::__compressed_pair.422" }
%"class.gl::BindingPointer.420" = type { %"class.angle::BindingPointer.421" }
%"class.angle::BindingPointer.421" = type { i32 (...)**, %"class.gl::Sampler"* }
%"class.std::__1::__compressed_pair.422" = type { %"struct.std::__1::__compressed_pair_elem.423" }
%"struct.std::__1::__compressed_pair_elem.423" = type { %"class.gl::BindingPointer.420"* }
%"class.std::__1::vector.427" = type { %"class.std::__1::__vector_base.428" }
%"class.std::__1::__vector_base.428" = type { %"struct.gl::ImageUnit"*, %"struct.gl::ImageUnit"*, %"class.std::__1::__compressed_pair.429" }
%"struct.gl::ImageUnit" = type <{ %"class.gl::BindingPointer.410", i32, i8, [3 x i8], i32, i32, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.429" = type { %"struct.std::__1::__compressed_pair_elem.430" }
%"struct.std::__1::__compressed_pair_elem.430" = type { %"struct.gl::ImageUnit"* }
%"class.angle::PackedEnumMap.434" = type { %"struct.std::__1::array.435" }
%"struct.std::__1::array.435" = type { [7 x %"class.gl::BindingPointer.436"] }
%"class.gl::BindingPointer.436" = type { %"class.angle::BindingPointer.437" }
%"class.angle::BindingPointer.437" = type { i32 (...)**, %"class.gl::Query"* }
%"class.gl::Query" = type opaque
%"class.angle::PackedEnumMap.438" = type { %"struct.std::__1::array.439" }
%"struct.std::__1::array.439" = type { [13 x %"class.gl::BindingPointer.264"] }
%"class.std::__1::vector.440" = type { %"class.std::__1::__vector_base.441" }
%"class.std::__1::__vector_base.441" = type { %"class.gl::OffsetBindingPointer"*, %"class.gl::OffsetBindingPointer"*, %"class.std::__1::__compressed_pair.442" }
%"class.std::__1::__compressed_pair.442" = type { %"struct.std::__1::__compressed_pair_elem.443" }
%"struct.std::__1::__compressed_pair_elem.443" = type { %"class.gl::OffsetBindingPointer"* }
%"class.angle::BitSetArray.447" = type { %"struct.std::__1::array.167" }
%"class.angle::BitSetT.448" = type { i64 }
%"class.gl::BindingPointer.449" = type { %"class.angle::BindingPointer.450" }
%"class.angle::BindingPointer.450" = type { i32 (...)**, %"class.gl::TransformFeedback"* }
%"class.gl::TransformFeedback" = type { %"class.gl::RefCountObject.base.452", %"class.gl::LabeledObject", %"class.gl::TransformFeedbackState", %"class.rx::TransformFeedbackImpl"* }
%"class.gl::RefCountObject.base.452" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::TransformFeedbackID" }>
%"struct.gl::TransformFeedbackID" = type { i32 }
%"class.gl::TransformFeedbackState" = type { %"class.std::__1::basic_string", i8, i8, i8, i64, i64, %"class.gl::Program"*, %"class.std::__1::vector.440" }
%"class.rx::TransformFeedbackImpl" = type opaque
%"struct.gl::PixelUnpackState" = type { %"struct.gl::PixelStoreStateBase" }
%"struct.gl::PixelStoreStateBase" = type { i32, i32, i32, i32, i32, i32 }
%"struct.gl::PixelPackState" = type <{ %"struct.gl::PixelStoreStateBase", i8, [3 x i8] }>
%"class.gl::Debug" = type { i8, void (i32, i32, i32, i32, i32, i8*, i8*)*, i8*, %"class.std::__1::deque", i32, i8, %"class.std::__1::vector.462" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.458" }
%"struct.std::__1::__split_buffer" = type { %"struct.gl::Debug::Message"**, %"struct.gl::Debug::Message"**, %"struct.gl::Debug::Message"**, %"class.std::__1::__compressed_pair.453" }
%"struct.gl::Debug::Message" = type { i32, i32, i32, i32, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.453" = type { %"struct.std::__1::__compressed_pair_elem.454" }
%"struct.std::__1::__compressed_pair_elem.454" = type { %"struct.gl::Debug::Message"** }
%"class.std::__1::__compressed_pair.458" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::vector.462" = type { %"class.std::__1::__vector_base.463" }
%"class.std::__1::__vector_base.463" = type { %"struct.gl::Debug::Group"*, %"struct.gl::Debug::Group"*, %"class.std::__1::__compressed_pair.471" }
%"struct.gl::Debug::Group" = type { i32, i32, %"class.std::__1::basic_string", %"class.std::__1::vector.464" }
%"class.std::__1::vector.464" = type { %"class.std::__1::__vector_base.465" }
%"class.std::__1::__vector_base.465" = type { %"struct.gl::Debug::Control"*, %"struct.gl::Debug::Control"*, %"class.std::__1::__compressed_pair.466" }
%"struct.gl::Debug::Control" = type <{ i32, i32, i32, [4 x i8], %"class.std::__1::vector", i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.466" = type { %"struct.std::__1::__compressed_pair_elem.467" }
%"struct.std::__1::__compressed_pair_elem.467" = type { %"struct.gl::Debug::Control"* }
%"class.std::__1::__compressed_pair.471" = type { %"struct.std::__1::__compressed_pair_elem.472" }
%"struct.std::__1::__compressed_pair_elem.472" = type { %"struct.gl::Debug::Group"* }
%"class.angle::BitSetT.476" = type { i32 }
%"class.gl::GLES1State" = type <{ %"class.gl::State"*, %"class.angle::BitSetT.166", %"class.std::__1::vector.477", i8, i8, i8, i8, [4 x i8], %"class.std::__1::vector.485", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"struct.angle::Color", %"class.angle::Vector", %"class.std::__1::vector.490", i32, i8, [3 x i8], %"class.angle::FixedVector", %"class.angle::FixedVector", %"class.std::__1::vector.505", %"class.std::__1::vector.512", %"struct.gl::MaterialParameters", %"struct.gl::LightModelParameters", %"class.std::__1::vector.519", %"struct.gl::FogParameters", i8, [3 x i8], %"struct.gl::PointParameters", i8, [3 x i8], float, i8, [7 x i8], %"class.std::__1::vector.528", i8, i8, i8, i8, [4 x i8] }>
%"class.std::__1::vector.477" = type { %"class.std::__1::__vector_base.478" }
%"class.std::__1::__vector_base.478" = type { %"class.angle::BitSetT.479"*, %"class.angle::BitSetT.479"*, %"class.std::__1::__compressed_pair.480" }
%"class.angle::BitSetT.479" = type opaque
%"class.std::__1::__compressed_pair.480" = type { %"struct.std::__1::__compressed_pair_elem.481" }
%"struct.std::__1::__compressed_pair_elem.481" = type { %"class.angle::BitSetT.479"* }
%"class.std::__1::vector.485" = type { i64*, i64, %"class.std::__1::__compressed_pair.486" }
%"class.std::__1::__compressed_pair.486" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.angle::Vector" = type { %"class.angle::VectorBase" }
%"class.angle::VectorBase" = type { [3 x float] }
%"class.std::__1::vector.490" = type { %"class.std::__1::__vector_base.491" }
%"class.std::__1::__vector_base.491" = type { %"struct.gl::TextureCoordF"*, %"struct.gl::TextureCoordF"*, %"class.std::__1::__compressed_pair.492" }
%"struct.gl::TextureCoordF" = type { float, float, float, float }
%"class.std::__1::__compressed_pair.492" = type { %"struct.std::__1::__compressed_pair_elem.493" }
%"struct.std::__1::__compressed_pair_elem.493" = type { %"struct.gl::TextureCoordF"* }
%"class.angle::FixedVector" = type { %"struct.std::__1::array.497", i64 }
%"struct.std::__1::array.497" = type { [16 x %"class.angle::Mat4"] }
%"class.angle::Mat4" = type { %"class.angle::Matrix" }
%"class.angle::Matrix" = type { %"class.std::__1::vector.498", i32, i32 }
%"class.std::__1::vector.498" = type { %"class.std::__1::__vector_base.499" }
%"class.std::__1::__vector_base.499" = type { float*, float*, %"class.std::__1::__compressed_pair.500" }
%"class.std::__1::__compressed_pair.500" = type { %"struct.std::__1::__compressed_pair_elem.501" }
%"struct.std::__1::__compressed_pair_elem.501" = type { float* }
%"class.std::__1::vector.505" = type { %"class.std::__1::__vector_base.506" }
%"class.std::__1::__vector_base.506" = type { %"class.angle::FixedVector"*, %"class.angle::FixedVector"*, %"class.std::__1::__compressed_pair.507" }
%"class.std::__1::__compressed_pair.507" = type { %"struct.std::__1::__compressed_pair_elem.508" }
%"struct.std::__1::__compressed_pair_elem.508" = type { %"class.angle::FixedVector"* }
%"class.std::__1::vector.512" = type { %"class.std::__1::__vector_base.513" }
%"class.std::__1::__vector_base.513" = type { %"struct.gl::TextureEnvironmentParameters"*, %"struct.gl::TextureEnvironmentParameters"*, %"class.std::__1::__compressed_pair.514" }
%"struct.gl::TextureEnvironmentParameters" = type <{ i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"struct.angle::Color", float, float, i8, [3 x i8] }>
%"class.std::__1::__compressed_pair.514" = type { %"struct.std::__1::__compressed_pair_elem.515" }
%"struct.std::__1::__compressed_pair_elem.515" = type { %"struct.gl::TextureEnvironmentParameters"* }
%"struct.gl::MaterialParameters" = type { %"struct.angle::Color", %"struct.angle::Color", %"struct.angle::Color", %"struct.angle::Color", float }
%"struct.gl::LightModelParameters" = type <{ %"struct.angle::Color", i8, [3 x i8] }>
%"class.std::__1::vector.519" = type { %"class.std::__1::__vector_base.520" }
%"class.std::__1::__vector_base.520" = type { %"struct.gl::LightParameters"*, %"struct.gl::LightParameters"*, %"class.std::__1::__compressed_pair.523" }
%"struct.gl::LightParameters" = type { i8, %"struct.angle::Color", %"struct.angle::Color", %"struct.angle::Color", %"class.angle::Vector.521", %"class.angle::Vector", float, float, float, float, float }
%"class.angle::Vector.521" = type { %"class.angle::VectorBase.522" }
%"class.angle::VectorBase.522" = type { [4 x float] }
%"class.std::__1::__compressed_pair.523" = type { %"struct.std::__1::__compressed_pair_elem.524" }
%"struct.std::__1::__compressed_pair_elem.524" = type { %"struct.gl::LightParameters"* }
%"struct.gl::FogParameters" = type { i8, float, float, float, %"struct.angle::Color" }
%"struct.gl::PointParameters" = type { float, float, float, %"class.angle::Vector", float }
%"class.std::__1::vector.528" = type { %"class.std::__1::__vector_base.529" }
%"class.std::__1::__vector_base.529" = type { %"struct.gl::ClipPlaneParameters"*, %"struct.gl::ClipPlaneParameters"*, %"class.std::__1::__compressed_pair.530" }
%"struct.gl::ClipPlaneParameters" = type { i8, %"class.angle::Vector.521" }
%"class.std::__1::__compressed_pair.530" = type { %"struct.std::__1::__compressed_pair_elem.531" }
%"struct.std::__1::__compressed_pair_elem.531" = type { %"struct.gl::ClipPlaneParameters"* }
%"class.angle::BitSetT.535" = type { i32 }
%"class.gl::ErrorSet" = type { %"class.gl::Context"*, %"class.std::__1::set.35" }
%"class.angle::BitSetT.537" = type { i32 }
%"class.std::__1::unique_ptr.538" = type { %"class.std::__1::__compressed_pair.539" }
%"class.std::__1::__compressed_pair.539" = type { %"struct.std::__1::__compressed_pair_elem.540" }
%"struct.std::__1::__compressed_pair_elem.540" = type { %"class.rx::ContextImpl"* }
%"class.rx::ContextImpl" = type { %"class.rx::GLImplFactory", %"class.gl::State"*, %"class.gl::MemoryProgramCache"*, %"class.gl::ErrorSet"* }
%"class.rx::GLImplFactory" = type { i32 (...)**, %"class.rx::SerialFactoryBase" }
%"class.rx::SerialFactoryBase" = type { i64 }
%"struct.gl::Extensions" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, float, i8, i8, i8, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"struct.egl::Config" = type opaque
%"class.angle::PackedEnumMap.544" = type { %"struct.std::__1::array.545" }
%"struct.std::__1::array.545" = type { [11 x %"class.gl::BindingPointer.410"] }
%"class.gl::ResourceMap.546" = type { i64, %"class.gl::FenceNV"**, %"class.absl::flat_hash_map.547" }
%"class.gl::FenceNV" = type opaque
%"class.absl::flat_hash_map.547" = type { %"class.absl::container_internal::raw_hash_map.548" }
%"class.absl::container_internal::raw_hash_map.548" = type { %"class.absl::container_internal::raw_hash_set.549" }
%"class.absl::container_internal::raw_hash_set.549" = type { i8*, %"union.absl::container_internal::map_slot_type.550"*, i64, i64, %"class.absl::container_internal::CompressedTuple.551" }
%"union.absl::container_internal::map_slot_type.550" = type opaque
%"class.absl::container_internal::CompressedTuple.551" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.552" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.552" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::ResourceMap.556" = type { i64, %"class.gl::Query"**, %"class.absl::flat_hash_map.557" }
%"class.absl::flat_hash_map.557" = type { %"class.absl::container_internal::raw_hash_map.558" }
%"class.absl::container_internal::raw_hash_map.558" = type { %"class.absl::container_internal::raw_hash_set.559" }
%"class.absl::container_internal::raw_hash_set.559" = type { i8*, %"union.absl::container_internal::map_slot_type.560"*, i64, i64, %"class.absl::container_internal::CompressedTuple.561" }
%"union.absl::container_internal::map_slot_type.560" = type opaque
%"class.absl::container_internal::CompressedTuple.561" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.562" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.562" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::ResourceMap.566" = type { i64, %"class.gl::VertexArray"**, %"class.absl::flat_hash_map.567" }
%"class.absl::flat_hash_map.567" = type { %"class.absl::container_internal::raw_hash_map.568" }
%"class.absl::container_internal::raw_hash_map.568" = type { %"class.absl::container_internal::raw_hash_set.569" }
%"class.absl::container_internal::raw_hash_set.569" = type { i8*, %"union.absl::container_internal::map_slot_type.570"*, i64, i64, %"class.absl::container_internal::CompressedTuple.571" }
%"union.absl::container_internal::map_slot_type.570" = type opaque
%"class.absl::container_internal::CompressedTuple.571" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.572" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.572" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::ResourceMap.576" = type { i64, %"class.gl::TransformFeedback"**, %"class.absl::flat_hash_map.577" }
%"class.absl::flat_hash_map.577" = type { %"class.absl::container_internal::raw_hash_map.578" }
%"class.absl::container_internal::raw_hash_map.578" = type { %"class.absl::container_internal::raw_hash_set.579" }
%"class.absl::container_internal::raw_hash_set.579" = type { i8*, %"union.absl::container_internal::map_slot_type.580"*, i64, i64, %"class.absl::container_internal::CompressedTuple.581" }
%"union.absl::container_internal::map_slot_type.580" = type opaque
%"class.absl::container_internal::CompressedTuple.581" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.582" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.582" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.std::__1::vector.586" = type { %"class.std::__1::__vector_base.587" }
%"class.std::__1::__vector_base.587" = type { i8**, i8**, %"class.std::__1::__compressed_pair.588" }
%"class.std::__1::__compressed_pair.588" = type { %"struct.std::__1::__compressed_pair_elem.589" }
%"struct.std::__1::__compressed_pair_elem.589" = type { i8** }
%"class.std::__1::unique_ptr.593" = type { %"class.std::__1::__compressed_pair.594" }
%"class.std::__1::__compressed_pair.594" = type { %"struct.std::__1::__compressed_pair_elem.595" }
%"struct.std::__1::__compressed_pair_elem.595" = type { %"class.gl::GLES1Renderer"* }
%"class.egl::Surface" = type opaque
%"class.egl::Display" = type opaque
%"class.gl::MemoryProgramCache" = type opaque
%"class.gl::StateCache" = type <{ %"class.angle::BitSetT.166", %"class.angle::BitSetT.166", %"class.angle::BitSetT.166", i8, [7 x i8], i64, i64, i64, i64, i8, [7 x i8], %"class.angle::BitSetT.168", %"class.angle::BitSetArray", %"class.angle::PackedEnumMap.609", %"class.angle::PackedEnumMap.611", %"class.angle::PackedEnumMap.613", %"class.angle::PackedEnumMap.615", %"class.angle::PackedEnumMap.615", i8, [7 x i8] }>
%"class.angle::PackedEnumMap.609" = type { %"struct.std::__1::array.610" }
%"struct.std::__1::array.610" = type { [16 x i8] }
%"class.angle::PackedEnumMap.611" = type { %"struct.std::__1::array.612" }
%"struct.std::__1::array.612" = type { [12 x i8] }
%"class.angle::PackedEnumMap.613" = type { %"struct.std::__1::array.614" }
%"struct.std::__1::array.614" = type { [4 x i8] }
%"class.angle::PackedEnumMap.615" = type { %"struct.std::__1::array.616" }
%"struct.std::__1::array.616" = type { [19 x i32] }
%"class.angle::BitSetT.536" = type { i64 }
%"class.angle::ObserverBinding" = type { %"class.angle::ObserverBindingBase", %"class.angle::Subject"* }
%"class.std::__1::vector.337" = type { %"class.std::__1::__vector_base.338" }
%"class.std::__1::__vector_base.338" = type { %"class.angle::ObserverBinding"*, %"class.angle::ObserverBinding"*, %"class.std::__1::__compressed_pair.339" }
%"class.std::__1::__compressed_pair.339" = type { %"struct.std::__1::__compressed_pair_elem.340" }
%"struct.std::__1::__compressed_pair_elem.340" = type { %"class.angle::ObserverBinding"* }
%struct.Optional.617 = type { i8, %"class.angle::ScratchBuffer" }
%"class.angle::ScratchBuffer" = type { i32, i32, %"class.angle::MemoryBuffer" }
%"class.angle::MemoryBuffer" = type { i64, i8* }
%"class.std::__1::shared_ptr.618" = type { %"class.angle::WorkerThreadPool"*, %"class.std::__1::__shared_weak_count"* }
%"class.angle::WorkerThreadPool" = type { i32 (...)** }
%"class.std::__1::unique_ptr.619" = type { %"class.std::__1::__compressed_pair.620" }
%"class.std::__1::__compressed_pair.620" = type { %"struct.std::__1::__compressed_pair_elem.621" }
%"struct.std::__1::__compressed_pair_elem.621" = type { %"class.angle::FrameCapture"* }
%"class.angle::FrameCapture" = type opaque
%"class.gl::MockOverlay" = type { %"class.gl::overlay::Mock" }
%"class.gl::overlay::Mock" = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.absl::flat_hash_map.639" = type { %"class.absl::container_internal::raw_hash_map.640" }
%"class.absl::container_internal::raw_hash_map.640" = type { %"class.absl::container_internal::raw_hash_set.641" }
%"class.absl::container_internal::raw_hash_set.641" = type { i8*, %"union.absl::container_internal::map_slot_type.642"*, i64, i64, %"class.absl::container_internal::CompressedTuple.643" }
%"union.absl::container_internal::map_slot_type.642" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i32, %"class.std::__1::basic_string" }
%"class.absl::container_internal::CompressedTuple.643" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.644" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.644" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::basic_iostream" = type { %"class.std::__1::basic_istream.base", %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32, [4 x i8] }>
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.std::__1::vector.635" = type { %"class.std::__1::__vector_base.636" }
%"class.std::__1::__vector_base.636" = type { i8*, i8*, %"class.std::__1::__compressed_pair.637" }
%"class.std::__1::__compressed_pair.637" = type { %"struct.std::__1::__compressed_pair_elem.638" }
%"struct.std::__1::__compressed_pair_elem.638" = type { i8* }
%"class.gl::LogMessage" = type { i8*, i8*, i32, i32, %"class.std::__1::basic_ostringstream" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>

$_ZNK5angle6MatrixIfE9transposeEv = comdat any

$_ZNK5angle6MatrixIfE7inverseEv = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZNK5angle6MatrixIfE11determinantEv = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIiNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEENS_13hash_internal4HashIiEENS3_8equal_toIiEENS7_INS3_4pairIKiS9_EEEEE14prepare_insertEm = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIiNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEENS_13hash_internal4HashIiEENS3_8equal_toIiEENS7_INS3_4pairIKiS9_EEEEE6resizeEm = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIiNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEENS_13hash_internal4HashIiEENS3_8equal_toIiEENS7_INS3_4pairIKiS9_EEEEE27drop_deletes_without_resizeEv = comdat any

$_ZZN4absl18container_internal10EmptyGroupEvE11empty_group = comdat any

@.ref.tmp = private unnamed_addr constant [4 x i32] [i32 6408, i32 6408, i32 6408, i32 6408], align 4
@.str = private unnamed_addr constant [22 x i8] c"Missing shader object\00", align 1
@.str.1 = private unnamed_addr constant [55 x i8] c"../../third_party/angle/src/libANGLE/GLES1Renderer.cpp\00", align 1
@__func__._ZN2gl13GLES1Renderer13compileShaderEPNS_7ContextENS_10ShaderTypeEPKcPNS_15ShaderProgramIDE = private unnamed_addr constant [14 x i8] c"compileShader\00", align 1
@.str.2 = private unnamed_addr constant [50 x i8] c"Internal GLES 1 shader compile failed. Info log: \00", align 1
@.str.3 = private unnamed_addr constant [37 x i8] c"GLES1Renderer shader compile failed.\00", align 1
@.str.4 = private unnamed_addr constant [23 x i8] c"Missing program object\00", align 1
@__func__._ZN2gl13GLES1Renderer11linkProgramEPNS_7ContextEPNS_5StateENS_15ShaderProgramIDES5_RKN4absl13flat_hash_mapIiNSt3__112basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEENS6_13hash_internal4HashIiEENS8_8equal_toIiEENSC_INS8_4pairIKiSE_EEEEEEPS5_ = private unnamed_addr constant [12 x i8] c"linkProgram\00", align 1
@.str.5 = private unnamed_addr constant [47 x i8] c"Internal GLES 1 shader link failed. Info log: \00", align 1
@.str.6 = private unnamed_addr constant [35 x i8] c"GLES1Renderer program link failed.\00", align 1
@_ZN12_GLOBAL__N_117kGLES1DrawVShaderE = internal constant [4738 x i8] c"#version 300 es\0Aprecision highp float;\0A\0A#define kMaxTexUnits 4\0A\0Ain vec4 pos;\0Ain vec3 normal;\0Ain vec4 color;\0Ain float pointsize;\0Ain vec4 texcoord0;\0Ain vec4 texcoord1;\0Ain vec4 texcoord2;\0Ain vec4 texcoord3;\0A\0Auniform mat4 projection;\0Auniform mat4 modelview;\0Auniform mat4 modelview_invtr;\0Auniform mat4 texture_matrix[kMaxTexUnits];\0A\0Auniform bool enable_rescale_normal;\0Auniform bool enable_normalize;\0A\0A// Point rasterization//////////////////////////////////////////////////////////\0A\0Auniform bool point_rasterization;\0Auniform float point_size_min;\0Auniform float point_size_max;\0Auniform vec3 point_distance_attenuation;\0A\0A// GL_OES_draw_texture uniforms/////////////////////////////////////////////////\0A\0Auniform bool enable_draw_texture;\0Auniform vec4 draw_texture_coords;\0Auniform vec2 draw_texture_dims;\0Auniform vec4 draw_texture_normalized_crop_rect[kMaxTexUnits];\0A\0A// Varyings/////////////////////////////////////////////////////////////////////\0A\0Aout vec4 pos_varying;\0Aout vec3 normal_varying;\0Aout vec4 color_varying;\0Aflat out vec4 color_varying_flat;\0Aout vec4 texcoord0_varying;\0Aout vec4 texcoord1_varying;\0Aout vec4 texcoord2_varying;\0Aout vec4 texcoord3_varying;\0A\0Aconst vec4 drawTextureVertices[6] = vec4[](\0A    vec4(0.0, 0.0, 0.0, 1.0),\0A    vec4(1.0, 0.0, 0.0, 1.0),\0A    vec4(1.0, 1.0, 0.0, 1.0),\0A    vec4(0.0, 0.0, 0.0, 1.0),\0A    vec4(1.0, 1.0, 0.0, 1.0),\0A    vec4(0.0, 1.0, 0.0, 1.0));\0A\0Avec4 drawTexturePosition(int vertexId)\0A{\0A\0A    float drawTexX = draw_texture_coords[0];\0A    float drawTexY = draw_texture_coords[1];\0A    float drawTexZ = draw_texture_coords[2];\0A    float drawTexW = draw_texture_dims[0];\0A    float drawTexH = draw_texture_dims[1];\0A\0A    return vec4(drawTexX, drawTexY, drawTexZ, 0.0) +\0A           drawTextureVertices[vertexId] *\0A           vec4(drawTexW, drawTexH, 1.0, 1.0);\0A}\0A\0Avec4 drawTextureTexCoord(int vertexId, int textureUnit)\0A{\0A    float texCropU = draw_texture_normalized_crop_rect[textureUnit].x;\0A    float texCropV = draw_texture_normalized_crop_rect[textureUnit].y;\0A    float texCropW = draw_texture_normalized_crop_rect[textureUnit].z;\0A    float texCropH = draw_texture_normalized_crop_rect[textureUnit].w;\0A\0A    return vec4(texCropU, texCropV, 0.0, 0.0) +\0A           drawTextureVertices[vertexId] *\0A           vec4(texCropW, texCropH, 0.0, 0.0);\0A}\0A\0Avec4 calcWorldPosition(vec4 posInput)\0A{\0A    return modelview * posInput;\0A}\0A\0Avec4 calcNdcFromWorldPosition(vec4 worldPos)\0A{\0A    return projection * worldPos;\0A}\0A\0Afloat calcPointSize(vec4 ndcPos)\0A{\0A    float dist         = length(ndcPos.z);\0A    float attConst     = point_distance_attenuation[0];\0A    float attLinear    = point_distance_attenuation[1];\0A    float attQuad      = point_distance_attenuation[2];\0A    float attPart      = attConst + attLinear * dist + attQuad * dist * dist;\0A    float attPointSize = pointsize / pow(attPart, 0.5);\0A\0A    return clamp(attPointSize, point_size_min, point_size_max);\0A}\0A\0Avec3 calcNormal(vec3 normalInput)\0A{\0A    mat3 mvInvTr3 = mat3(modelview_invtr);\0A    vec3 result   = mvInvTr3 * normalInput;\0A\0A    if (enable_rescale_normal)\0A    {\0A        float rescale   = 1.0;\0A        vec3 rescaleVec = vec3(mvInvTr3[2]);\0A        float len       = length(rescaleVec);\0A        if (len > 0.0)\0A        {\0A            rescale = 1.0 / len;\0A        }\0A        result *= rescale;\0A    }\0A\0A    if (enable_normalize)\0A    {\0A        result = normalize(result);\0A    }\0A\0A    return result;\0A}\0A\0Avoid main()\0A{\0A    color_varying      = color;\0A    color_varying_flat = color;\0A\0A    if (enable_draw_texture)\0A    {\0A        int vertexId        = gl_VertexID;\0A        vec4 posDrawTexture = drawTexturePosition(vertexId);\0A\0A        gl_Position = posDrawTexture;\0A        pos_varying = posDrawTexture;\0A\0A        normal_varying = normal;\0A\0A        gl_PointSize = pointsize;\0A\0A        texcoord0_varying = drawTextureTexCoord(vertexId, 0);\0A        texcoord1_varying = drawTextureTexCoord(vertexId, 1);\0A        texcoord2_varying = drawTextureTexCoord(vertexId, 2);\0A        texcoord3_varying = drawTextureTexCoord(vertexId, 3);\0A    }\0A    else\0A    {\0A        vec4 worldPos = calcWorldPosition(pos);\0A        vec4 ndcPos   = calcNdcFromWorldPosition(worldPos);\0A\0A        gl_Position = ndcPos;\0A        pos_varying = worldPos;\0A\0A        normal_varying = calcNormal(normal);\0A\0A        // Avoid calculating point size stuff\0A        // if we are not rendering points.\0A        if (point_rasterization)\0A        {\0A            gl_PointSize = calcPointSize(ndcPos);\0A        }\0A        else\0A        {\0A            gl_PointSize = pointsize;\0A        }\0A\0A        texcoord0_varying = texture_matrix[0] * texcoord0;\0A        texcoord1_varying = texture_matrix[1] * texcoord1;\0A        texcoord2_varying = texture_matrix[2] * texcoord2;\0A        texcoord3_varying = texture_matrix[3] * texcoord3;\0A    }\0A}\0A\00", align 16
@_ZN12_GLOBAL__N_123kGLES1DrawFShaderHeaderE = internal constant [2708 x i8] c"#version 300 es\0Aprecision highp float;\0A\0A// Defines for GL constants\0A#define kMaxLights                           8\0A#define kMaxTexUnits                         4\0A#define kMaxClipPlanes                       6\0A\0A#define kModulate                       0x2100\0A#define kDecal                          0x2101\0A#define kCombine                        0x8570\0A#define kReplace                        0x1E01\0A#define kBlend                          0x0BE2\0A#define kAdd                            0x0104\0A\0A#define kAddSigned                      0x8574\0A#define kInterpolate                    0x8575\0A#define kSubtract                       0x84E7\0A#define kDot3Rgb                        0x86AE\0A#define kDot3Rgba                       0x86AF\0A\0A#define kAlpha                          0x1906\0A#define kRGB                            0x1907\0A#define kRGBA                           0x1908\0A#define kLuminance                      0x1909\0A#define kLuminanceAlpha                 0x190A\0A\0A#define kTexture                        0x1702\0A#define kConstant                       0x8576\0A#define kPrimaryColor                   0x8577\0A#define kPrevious                       0x8578\0A\0A#define kSrcColor                       0x0300\0A#define kOneMinusSrcColor               0x0301\0A#define kSrcAlpha                       0x0302\0A#define kOneMinusSrcAlpha               0x0303\0A\0A#define kLinear                         0x2601\0A#define kExp                            0x0800\0A#define kExp2                           0x0801\0A\0A#define kNever                          0x0200\0A#define kLess                           0x0201\0A#define kEqual                          0x0202\0A#define kLequal                         0x0203\0A#define kGreater                        0x0204\0A#define kNotequal                       0x0205\0A#define kGequal                         0x0206\0A#define kAlways                         0x0207\0A#define kZero                              0x0\0A#define kOne                               0x1\0A\0A#define kClear                          0x1500\0A#define kAnd                            0x1501\0A#define kAnd_reverse                    0x1502\0A#define kCopy                           0x1503\0A#define kAnd_inverted                   0x1504\0A#define kNoop                           0x1505\0A#define kXor                            0x1506\0A#define kOr                             0x1507\0A#define kNor                            0x1508\0A#define kEquiv                          0x1509\0A#define kInvert                         0x150A\0A#define kOr_reverse                     0x150B\0A#define kCopy_inverted                  0x150C\0A#define kOr_inverted                    0x150D\0A#define kNand                           0x150E\0A#define kSet                            0x150F\00", align 16
@_ZN12_GLOBAL__N_128kGLES1DrawFShaderUniformDefsE = internal constant [3588 x i8] c"\0A\0A// Texture units ///////////////////////////////////////////////////////////////\0A\0Auniform bool enable_texture_2d[kMaxTexUnits];\0Auniform bool enable_texture_cube_map[kMaxTexUnits];\0A\0A// These are not arrays because hw support for arrays\0A// of samplers is rather lacking.\0A\0Auniform sampler2D tex_sampler0;\0Auniform samplerCube tex_cube_sampler0;\0A\0Auniform sampler2D tex_sampler1;\0Auniform samplerCube tex_cube_sampler1;\0A\0Auniform sampler2D tex_sampler2;\0Auniform samplerCube tex_cube_sampler2;\0A\0Auniform sampler2D tex_sampler3;\0Auniform samplerCube tex_cube_sampler3;\0A\0Auniform int texture_format[kMaxTexUnits];\0A\0Auniform int texture_env_mode[kMaxTexUnits];\0Auniform int combine_rgb[kMaxTexUnits];\0Auniform int combine_alpha[kMaxTexUnits];\0Auniform int src0_rgb[kMaxTexUnits];\0Auniform int src0_alpha[kMaxTexUnits];\0Auniform int src1_rgb[kMaxTexUnits];\0Auniform int src1_alpha[kMaxTexUnits];\0Auniform int src2_rgb[kMaxTexUnits];\0Auniform int src2_alpha[kMaxTexUnits];\0Auniform int op0_rgb[kMaxTexUnits];\0Auniform int op0_alpha[kMaxTexUnits];\0Auniform int op1_rgb[kMaxTexUnits];\0Auniform int op1_alpha[kMaxTexUnits];\0Auniform int op2_rgb[kMaxTexUnits];\0Auniform int op2_alpha[kMaxTexUnits];\0Auniform vec4 texture_env_color[kMaxTexUnits];\0Auniform float texture_env_rgb_scale[kMaxTexUnits];\0Auniform float texture_env_alpha_scale[kMaxTexUnits];\0Auniform bool point_sprite_coord_replace[kMaxTexUnits];\0A\0A// Vertex attributes////////////////////////////////////////////////////////////\0A\0Ain vec4 pos_varying;\0Ain vec3 normal_varying;\0Ain vec4 color_varying;\0Aflat in vec4 color_varying_flat;\0Ain vec4 texcoord0_varying;\0Ain vec4 texcoord1_varying;\0Ain vec4 texcoord2_varying;\0Ain vec4 texcoord3_varying;\0A\0A// Alpha test///////////////////////////////////////////////////////////////////\0A\0Auniform bool enable_alpha_test;\0Auniform int alpha_func;\0Auniform float alpha_test_ref;\0A\0A// Shading: flat shading, lighting, and materials///////////////////////////////\0A\0Auniform bool shade_model_flat;\0Auniform bool enable_lighting;\0Auniform bool enable_color_material;\0A\0Auniform vec4 material_ambient;\0Auniform vec4 material_diffuse;\0Auniform vec4 material_specular;\0Auniform vec4 material_emissive;\0Auniform float material_specular_exponent;\0A\0Auniform vec4 light_model_scene_ambient;\0Auniform bool light_model_two_sided;\0A\0Auniform bool light_enables[kMaxLights];\0Auniform vec4 light_ambients[kMaxLights];\0Auniform vec4 light_diffuses[kMaxLights];\0Auniform vec4 light_speculars[kMaxLights];\0Auniform vec4 light_positions[kMaxLights];\0Auniform vec3 light_directions[kMaxLights];\0Auniform float light_spotlight_exponents[kMaxLights];\0Auniform float light_spotlight_cutoff_angles[kMaxLights];\0Auniform float light_attenuation_consts[kMaxLights];\0Auniform float light_attenuation_linears[kMaxLights];\0Auniform float light_attenuation_quadratics[kMaxLights];\0A\0A// Fog /////////////////////////////////////////////////////////////////////////\0A\0Auniform bool enable_fog;\0Auniform int fog_mode;\0Auniform float fog_density;\0Auniform float fog_start;\0Auniform float fog_end;\0Auniform vec4 fog_color;\0A\0A// User clip plane /////////////////////////////////////////////////////////////\0A\0Auniform bool enable_clip_planes;\0Auniform bool clip_plane_enables[kMaxClipPlanes];\0Auniform vec4 clip_planes[kMaxClipPlanes];\0A\0A// Point rasterization//////////////////////////////////////////////////////////\0A\0Auniform bool point_rasterization;\0Auniform bool point_sprite_enabled;\0A\0A// GL_OES_draw_texture//////////////////////////////////////////////////////////\0A\0Auniform bool enable_draw_texture;\0A\0A// Outgoing fragment////////////////////////////////////////////////////////////\0A\0Aout vec4 frag_color;\0A\00", align 16
@_ZN12_GLOBAL__N_126kGLES1DrawFShaderFunctionsE = internal constant [5008 x i8] c"\0A\0Afloat posDot(vec3 a, vec3 b)\0A{\0A    return max(dot(a, b), 0.0);\0A}\0A\0Avec4 doLighting(vec4 currentFragment)\0A{\0A    vec4 materialAmbientActual = material_ambient;\0A    vec4 materialDiffuseActual = material_diffuse;\0A\0A    if (enable_color_material || enable_texture_2d[0] || enable_texture_cube_map[0])\0A    {\0A        materialAmbientActual = currentFragment;\0A        materialDiffuseActual = currentFragment;\0A    }\0A\0A    vec4 lightingResult = material_emissive + materialAmbientActual * light_model_scene_ambient;\0A\0A    for (int i = 0; i < kMaxLights; i++)\0A    {\0A\0A        if (!light_enables[i])\0A            continue;\0A\0A        vec4 lightAmbient  = light_ambients[i];\0A        vec4 lightDiffuse  = light_diffuses[i];\0A        vec4 lightSpecular = light_speculars[i];\0A        vec4 lightPos      = light_positions[i];\0A        vec3 lightDir      = light_directions[i];\0A        float attConst     = light_attenuation_consts[i];\0A        float attLinear    = light_attenuation_linears[i];\0A        float attQuadratic = light_attenuation_quadratics[i];\0A        float spotAngle    = light_spotlight_cutoff_angles[i];\0A        float spotExponent = light_spotlight_exponents[i];\0A\0A        vec3 toLight;\0A        if (lightPos.w == 0.0)\0A        {\0A            toLight = lightPos.xyz;\0A        }\0A        else\0A        {\0A            toLight = (lightPos.xyz / lightPos.w - pos_varying.xyz);\0A        }\0A\0A        float lightDist = length(toLight);\0A        vec3 h          = normalize(toLight) + vec3(0.0, 0.0, 1.0);\0A        float ndotL     = posDot(normal_varying, normalize(toLight));\0A        float ndoth     = posDot(normal_varying, normalize(h));\0A\0A        float specAtt;\0A\0A        if (ndotL != 0.0)\0A        {\0A            specAtt = 1.0;\0A        }\0A        else\0A        {\0A            specAtt = 0.0;\0A        }\0A\0A        float att;\0A\0A        if (lightPos.w != 0.0)\0A        {\0A            float attDenom =\0A                (attConst + attLinear * lightDist + attQuadratic * lightDist * lightDist);\0A            att = 1.0 / attDenom;\0A        }\0A        else\0A        {\0A            att = 1.0;\0A        }\0A\0A        float spot;\0A\0A        float spotAngleCos = cos(radians(spotAngle));\0A        vec3 toSurfaceDir  = -normalize(toLight);\0A        float spotDot      = posDot(toSurfaceDir, normalize(lightDir));\0A\0A        if (spotAngle == 180.0 || lightPos.w == 0.0)\0A        {\0A            spot = 1.0;\0A        }\0A        else\0A        {\0A            if (spotDot < spotAngleCos)\0A            {\0A                spot = 0.0;\0A            }\0A            else\0A            {\0A                spot = pow(spotDot, spotExponent);\0A            }\0A        }\0A\0A        vec4 contrib = materialAmbientActual * lightAmbient;\0A        contrib += ndotL * materialDiffuseActual * lightDiffuse;\0A        if (ndoth > 0.0 && material_specular_exponent > 0.0)\0A        {\0A            contrib += specAtt * pow(ndoth, material_specular_exponent) * material_specular *\0A                       lightSpecular;\0A        }\0A        else\0A        {\0A            if (ndoth > 0.0)\0A            {\0A                contrib += specAtt * material_specular * lightSpecular;\0A            }\0A        }\0A        contrib *= att * spot;\0A        lightingResult += contrib;\0A    }\0A\0A    return lightingResult;\0A}\0A\0Abool doAlphaTest(vec4 currentFragment)\0A{\0A    bool shouldPassAlpha = false;\0A    float incAlpha       = currentFragment.a;\0A\0A    switch (alpha_func)\0A    {\0A        case kNever:\0A            shouldPassAlpha = false;\0A            break;\0A        case kLess:\0A            shouldPassAlpha = incAlpha < alpha_test_ref;\0A            break;\0A        case kLequal:\0A            shouldPassAlpha = incAlpha <= alpha_test_ref;\0A            break;\0A        case kEqual:\0A            shouldPassAlpha = incAlpha == alpha_test_ref;\0A            break;\0A        case kGequal:\0A            shouldPassAlpha = incAlpha >= alpha_test_ref;\0A            break;\0A        case kGreater:\0A            shouldPassAlpha = incAlpha > alpha_test_ref;\0A            break;\0A        case kNotequal:\0A            shouldPassAlpha = incAlpha != alpha_test_ref;\0A            break;\0A        case kAlways:\0A        default:\0A            shouldPassAlpha = true;\0A            break;\0A    }\0A\0A    return shouldPassAlpha;\0A}\0A\0Abool doClipPlaneTest()\0A{\0A    bool res = true;\0A\0A    for (int i = 0; i < kMaxClipPlanes; i++)\0A    {\0A        if (clip_plane_enables[i])\0A        {\0A            float dist = dot(clip_planes[i].xyz, pos_varying.xyz) + clip_planes[i].w * pos_varying.w;\0A            res        = res && (dist >= 0.0);\0A        }\0A    }\0A\0A    return res;\0A}\0A\0Avec4 doFog(vec4 currentFragment)\0A{\0A\0A    float eyeDist = -pos_varying.z / pos_varying.w;\0A    float f       = 1.0;\0A    switch (fog_mode)\0A    {\0A        case kExp:\0A            f = exp(-fog_density * eyeDist);\0A            break;\0A        case kExp2:\0A            f = exp(-(pow(fog_density * eyeDist, 2.0)));\0A            break;\0A        case kLinear:\0A            f = (fog_end - eyeDist) / (fog_end - fog_start);\0A            break;\0A        default:\0A            break;\0A    }\0A\0A    vec4 result = f * currentFragment + (1.0 - f) * fog_color;\0A    return result;\0A}\0A\0A\00", align 16
@_ZN12_GLOBAL__N_131kGLES1DrawFShaderMultitexturingE = internal constant [13412 x i8] c"\0A\0Abool isTextureUnitEnabled(int unit)\0A{\0A    return enable_texture_2d[unit] || enable_texture_cube_map[unit];\0A}\0A\0Avec4 getTextureColor(int unit)\0A{\0A    vec4 res;\0A\0A    switch (unit)\0A    {\0A        case 0:\0A            if (enable_texture_2d[0])\0A            {\0A                res = texture(tex_sampler0, texcoord0_varying.xy);\0A            }\0A            else if (enable_texture_cube_map[0])\0A            {\0A                res = texture(tex_cube_sampler0, texcoord0_varying.xyz);\0A            }\0A            break;\0A        case 1:\0A            if (enable_texture_2d[1])\0A            {\0A                res = texture(tex_sampler1, texcoord1_varying.xy);\0A            }\0A            else if (enable_texture_cube_map[1])\0A            {\0A                res = texture(tex_cube_sampler1, texcoord1_varying.xyz);\0A            }\0A            break;\0A        case 2:\0A            if (enable_texture_2d[2])\0A            {\0A                res = texture(tex_sampler2, texcoord2_varying.xy);\0A            }\0A            else if (enable_texture_cube_map[2])\0A            {\0A                res = texture(tex_cube_sampler2, texcoord2_varying.xyz);\0A            }\0A            break;\0A        case 3:\0A            if (enable_texture_2d[3])\0A            {\0A                res = texture(tex_sampler3, texcoord3_varying.xy);\0A            }\0A            else if (enable_texture_cube_map[3])\0A            {\0A                // TODO: Weird stuff happens\0A                // res = texture(tex_cube_sampler3, texcoord3_varying.xyz);\0A            }\0A            break;\0A        default:\0A            break;\0A    }\0A\0A    return res;\0A}\0A\0Avec4 getPointSpriteTextureColor(int unit)\0A{\0A    vec4 res;\0A\0A    switch (unit)\0A    {\0A        case 0:\0A            if (enable_texture_2d[0])\0A            {\0A                res = texture(tex_sampler0, gl_PointCoord.xy);\0A            }\0A            break;\0A        case 1:\0A            if (enable_texture_2d[1])\0A            {\0A                res = texture(tex_sampler1, gl_PointCoord.xy);\0A            }\0A            break;\0A        case 2:\0A            if (enable_texture_2d[2])\0A            {\0A                res = texture(tex_sampler2, gl_PointCoord.xy);\0A            }\0A            break;\0A        case 3:\0A            if (enable_texture_2d[3])\0A            {\0A                res = texture(tex_sampler3, gl_PointCoord.xy);\0A            }\0A            break;\0A        default:\0A            break;\0A    }\0A\0A    return res;\0A}\0A\0Avec3 textureCombineSrcnOpnRgb(int srcnRgb,\0A                              int opnRgb,\0A                              vec4 textureEnvColor,\0A                              vec4 vertexColor,\0A                              vec4 texturePrevColor,\0A                              vec4 textureColor)\0A{\0A    vec3 res;\0A    vec4 op;\0A\0A    switch (srcnRgb)\0A    {\0A        case kTexture:\0A            op = textureColor;\0A            break;\0A        case kConstant:\0A            op = textureEnvColor;\0A            break;\0A        case kPrimaryColor:\0A            op = vertexColor;\0A            break;\0A        case kPrevious:\0A            op = texturePrevColor;\0A            break;\0A        default:\0A            op = texturePrevColor;\0A            break;\0A    }\0A\0A    switch (opnRgb)\0A    {\0A        case kSrcColor:\0A            res = op.rgb;\0A            break;\0A        case kOneMinusSrcColor:\0A            res = 1.0 - op.rgb;\0A            break;\0A        case kSrcAlpha:\0A            res = vec3(op.a, op.a, op.a);\0A            break;\0A        case kOneMinusSrcAlpha:\0A            res = vec3(1.0 - op.a, 1.0 - op.a, 1.0 - op.a);\0A            break;\0A        default:\0A            break;\0A    }\0A\0A    return res;\0A}\0A\0Afloat textureCombineSrcnOpnAlpha(int srcn,\0A                                 int opn,\0A                                 vec4 textureEnvColor,\0A                                 vec4 vertexColor,\0A                                 vec4 texturePrevColor,\0A                                 vec4 textureColor)\0A{\0A    float res;\0A    vec4 op;\0A\0A    switch (srcn)\0A    {\0A        case kTexture:\0A            op = textureColor;\0A            break;\0A        case kConstant:\0A            op = textureEnvColor;\0A            break;\0A        case kPrimaryColor:\0A            op = vertexColor;\0A            break;\0A        case kPrevious:\0A            op = texturePrevColor;\0A            break;\0A        default:\0A            op = texturePrevColor;\0A            break;\0A    }\0A\0A    switch (opn)\0A    {\0A        case kSrcAlpha:\0A            res = op.a;\0A            break;\0A        case kOneMinusSrcAlpha:\0A            res = 1.0 - op.a;\0A            break;\0A        default:\0A            break;\0A    }\0A\0A    return res;\0A}\0A\0Avec4 textureCombine(int combineRgb,\0A                    int combineAlpha,\0A                    int src0Rgb,\0A                    int src0Alpha,\0A                    int src1Rgb,\0A                    int src1Alpha,\0A                    int src2Rgb,\0A                    int src2Alpha,\0A                    int op0Rgb,\0A                    int op0Alpha,\0A                    int op1Rgb,\0A                    int op1Alpha,\0A                    int op2Rgb,\0A                    int op2Alpha,\0A                    vec4 textureEnvColor,\0A                    float rgbScale,\0A                    float alphaScale,\0A                    vec4 vertexColor,\0A                    vec4 texturePrevColor,\0A                    vec4 textureColor)\0A{\0A\0A    vec3 resRgb;\0A    float resAlpha;\0A\0A    vec3 arg0Rgb;\0A    float arg0Alpha;\0A    vec3 arg1Rgb;\0A    float arg1Alpha;\0A    vec3 arg2Rgb;\0A    float arg2Alpha;\0A    float dotVal;\0A\0A    arg0Rgb   = textureCombineSrcnOpnRgb(src0Rgb, op0Rgb, textureEnvColor, vertexColor,\0A                                       texturePrevColor, textureColor);\0A    arg0Alpha = textureCombineSrcnOpnAlpha(src0Alpha, op0Alpha, textureEnvColor, vertexColor,\0A                                           texturePrevColor, textureColor);\0A\0A    if (combineRgb != kReplace)\0A    {\0A        arg1Rgb = textureCombineSrcnOpnRgb(src1Rgb, op1Rgb, textureEnvColor, vertexColor,\0A                                           texturePrevColor, textureColor);\0A    }\0A\0A    if (combineAlpha != kReplace)\0A    {\0A        arg1Alpha = textureCombineSrcnOpnAlpha(src1Alpha, op1Alpha, textureEnvColor, vertexColor,\0A                                               texturePrevColor, textureColor);\0A    }\0A\0A    if (combineRgb == kInterpolate)\0A    {\0A        arg2Rgb = textureCombineSrcnOpnRgb(src2Rgb, op2Rgb, textureEnvColor, vertexColor,\0A                                           texturePrevColor, textureColor);\0A    }\0A\0A    if (combineAlpha == kInterpolate)\0A    {\0A        arg2Alpha = textureCombineSrcnOpnAlpha(src2Alpha, op2Alpha, textureEnvColor, vertexColor,\0A                                               texturePrevColor, textureColor);\0A    }\0A\0A    switch (combineRgb)\0A    {\0A        case kReplace:\0A            resRgb = arg0Rgb;\0A            break;\0A        case kModulate:\0A            resRgb = arg0Rgb * arg1Rgb;\0A            break;\0A        case kAdd:\0A            resRgb = arg0Rgb + arg1Rgb;\0A            break;\0A        case kAddSigned:\0A            resRgb = arg0Rgb + arg1Rgb - 0.5;\0A            break;\0A        case kInterpolate:\0A            resRgb = arg0Rgb * arg2Rgb + arg1Rgb * (1.0 - arg2Rgb);\0A            break;\0A        case kSubtract:\0A            resRgb = arg0Rgb - arg1Rgb;\0A            break;\0A        default:\0A            break;\0A    }\0A\0A    switch (combineAlpha)\0A    {\0A        case kReplace:\0A            resAlpha = arg0Alpha;\0A            break;\0A        case kModulate:\0A            resAlpha = arg0Alpha * arg1Alpha;\0A            break;\0A        case kAdd:\0A            resAlpha = arg0Alpha + arg1Alpha;\0A            break;\0A        case kAddSigned:\0A            resAlpha = arg0Alpha + arg1Alpha - 0.5;\0A            break;\0A        case kInterpolate:\0A            resAlpha = arg0Alpha * arg2Alpha + arg1Alpha * (1.0 - arg2Alpha);\0A            break;\0A        case kSubtract:\0A            resAlpha = arg0Alpha - arg1Alpha;\0A            break;\0A        default:\0A            break;\0A    }\0A\0A    if (combineRgb == kDot3Rgb || combineRgb == kDot3Rgba)\0A    {\0A        dotVal = 4.0 * dot(arg0Rgb - 0.5, arg1Rgb - 0.5);\0A\0A        if (combineRgb == kDot3Rgb)\0A        {\0A            return vec4(dotVal, dotVal, dotVal, resAlpha);\0A        }\0A        else\0A        {\0A            return vec4(dotVal, dotVal, dotVal, dotVal);\0A        }\0A    }\0A    else\0A    {\0A        return vec4(resRgb, resAlpha);\0A    }\0A}\0A\0Avec4 textureFunction(int unit,\0A                     int texFormat,\0A                     int envMode,\0A                     int combineRgb,\0A                     int combineAlpha,\0A                     int src0Rgb,\0A                     int src0Alpha,\0A                     int src1Rgb,\0A                     int src1Alpha,\0A                     int src2Rgb,\0A                     int src2Alpha,\0A                     int op0Rgb,\0A                     int op0Alpha,\0A                     int op1Rgb,\0A                     int op1Alpha,\0A                     int op2Rgb,\0A                     int op2Alpha,\0A                     vec4 textureEnvColor,\0A                     float rgbScale,\0A                     float alphaScale,\0A                     vec4 vertexColor,\0A                     vec4 texturePrevColor,\0A                     vec4 textureColor)\0A{\0A\0A    if (!isTextureUnitEnabled(unit))\0A    {\0A        return texturePrevColor;\0A    }\0A\0A    vec4 res;\0A\0A    switch (envMode)\0A    {\0A        case kReplace:\0A            switch (texFormat)\0A            {\0A                case kAlpha:\0A                    res.rgb = texturePrevColor.rgb;\0A                    res.a   = textureColor.a;\0A                    break;\0A                case kRGBA:\0A                case kLuminanceAlpha:\0A                    res.rgba = textureColor.rgba;\0A                    break;\0A                case kRGB:\0A                case kLuminance:\0A                default:\0A                    res.rgb = textureColor.rgb;\0A                    res.a   = texturePrevColor.a;\0A                    break;\0A            }\0A            break;\0A        case kModulate:\0A            switch (texFormat)\0A            {\0A                case kAlpha:\0A                    res.rgb = texturePrevColor.rgb;\0A                    res.a   = texturePrevColor.a * textureColor.a;\0A                    break;\0A                case kRGBA:\0A                case kLuminanceAlpha:\0A                    res.rgba = texturePrevColor.rgba * textureColor.rgba;\0A                    break;\0A                case kRGB:\0A                case kLuminance:\0A                default:\0A                    res.rgb = texturePrevColor.rgb * textureColor.rgb;\0A                    res.a   = texturePrevColor.a;\0A                    break;\0A            }\0A            break;\0A        case kDecal:\0A            switch (texFormat)\0A            {\0A                case kRGB:\0A                    res.rgb = textureColor.rgb;\0A                    res.a   = texturePrevColor.a;\0A                    break;\0A                case kRGBA:\0A                    res.rgb = texturePrevColor.rgb * (1.0 - textureColor.a) +\0A                              textureColor.rgb * textureColor.a;\0A                    res.a = texturePrevColor.a;\0A                    break;\0A                case kAlpha:\0A                case kLuminance:\0A                case kLuminanceAlpha:\0A                default:\0A                    res.rgb = texturePrevColor.rgb * textureColor.rgb;\0A                    res.a   = texturePrevColor.a;\0A                    break;\0A            }\0A            break;\0A        case kBlend:\0A            switch (texFormat)\0A            {\0A                case kAlpha:\0A                    res.rgb = texturePrevColor.rgb;\0A                    res.a   = textureColor.a * texturePrevColor.a;\0A                    break;\0A                case kLuminance:\0A                case kRGB:\0A                    res.rgb = texturePrevColor.rgb * (1.0 - textureColor.rgb) +\0A                              textureEnvColor.rgb * textureColor.rgb;\0A                    res.a = texturePrevColor.a;\0A                    break;\0A                case kLuminanceAlpha:\0A                case kRGBA:\0A                default:\0A                    res.rgb = texturePrevColor.rgb * (1.0 - textureColor.rgb) +\0A                              textureEnvColor.rgb * textureColor.rgb;\0A                    res.a = textureColor.a * texturePrevColor.a;\0A                    break;\0A            }\0A            break;\0A        case kAdd:\0A            switch (texFormat)\0A            {\0A                case kAlpha:\0A                    res.rgb = texturePrevColor.rgb;\0A                    res.a   = textureColor.a * texturePrevColor.a;\0A                    break;\0A                case kLuminance:\0A                case kRGB:\0A                    res.rgb = texturePrevColor.rgb + textureColor.rgb;\0A                    res.a   = texturePrevColor.a;\0A                    break;\0A                case kLuminanceAlpha:\0A                case kRGBA:\0A                default:\0A                    res.rgb = texturePrevColor.rgb + textureColor.rgb;\0A                    res.a   = textureColor.a * texturePrevColor.a;\0A                    break;\0A            }\0A            break;\0A        case kCombine:\0A            res = textureCombine(combineRgb, combineAlpha, src0Rgb, src0Alpha, src1Rgb, src1Alpha,\0A                                 src2Rgb, src2Alpha, op0Rgb, op0Alpha, op1Rgb, op1Alpha, op2Rgb,\0A                                 op2Alpha, textureEnvColor, rgbScale, alphaScale, vertexColor,\0A                                 texturePrevColor, textureColor);\0A            res.rgb *= rgbScale;\0A            res.a *= alphaScale;\0A            break;\0A        default:\0A            break;\0A    }\0A\0A    return clamp(res, 0.0, 1.0);\0A}\0A\00", align 16
@_ZN12_GLOBAL__N_121kGLES1DrawFShaderMainE = internal constant [1561 x i8] c"\0Avoid main()\0A{\0A    if (enable_clip_planes && !enable_draw_texture)\0A    {\0A        if (!doClipPlaneTest())\0A        {\0A            discard;\0A        }\0A    }\0A\0A    vec4 currentFragment;\0A    vec4 vertex_color;\0A\0A    if (shade_model_flat)\0A    {\0A        vertex_color = color_varying_flat;\0A    }\0A    else\0A    {\0A        vertex_color = color_varying;\0A    }\0A\0A    currentFragment = vertex_color;\0A\0A    vec4 texturePrevColor = currentFragment;\0A\0A    for (int i = 0; i < kMaxTexUnits; i++)\0A    {\0A        vec4 textureColor;\0A\0A        if (point_rasterization && point_sprite_enabled &&\0A            point_sprite_coord_replace[i]) {\0A            textureColor = getPointSpriteTextureColor(i);\0A        } else {\0A            textureColor = getTextureColor(i);\0A        }\0A\0A        currentFragment = textureFunction(\0A            i, texture_format[i], texture_env_mode[i], combine_rgb[i], combine_alpha[i],\0A            src0_rgb[i], src0_alpha[i], src1_rgb[i], src1_alpha[i], src2_rgb[i], src2_alpha[i],\0A            op0_rgb[i], op0_alpha[i], op1_rgb[i], op1_alpha[i], op2_rgb[i], op2_alpha[i],\0A            texture_env_color[i], texture_env_rgb_scale[i], texture_env_alpha_scale[i],\0A            vertex_color, texturePrevColor, textureColor);\0A\0A        texturePrevColor = currentFragment;\0A    }\0A\0A    if (enable_lighting)\0A    {\0A        currentFragment = doLighting(currentFragment);\0A    }\0A\0A    if (enable_fog)\0A    {\0A        currentFragment = doFog(currentFragment);\0A    }\0A\0A    if (enable_alpha_test && !doAlphaTest(currentFragment))\0A    {\0A        discard;\0A    }\0A\0A    frag_color = currentFragment;\0A}\0A\00", align 16
@.str.7 = private unnamed_addr constant [4 x i8] c"pos\00", align 1
@.str.8 = private unnamed_addr constant [7 x i8] c"normal\00", align 1
@.str.9 = private unnamed_addr constant [6 x i8] c"color\00", align 1
@.str.10 = private unnamed_addr constant [10 x i8] c"pointsize\00", align 1
@.str.11 = private unnamed_addr constant [9 x i8] c"texcoord\00", align 1
@.str.12 = private unnamed_addr constant [11 x i8] c"projection\00", align 1
@.str.13 = private unnamed_addr constant [10 x i8] c"modelview\00", align 1
@.str.14 = private unnamed_addr constant [15 x i8] c"texture_matrix\00", align 1
@.str.15 = private unnamed_addr constant [16 x i8] c"modelview_invtr\00", align 1
@.str.16 = private unnamed_addr constant [12 x i8] c"tex_sampler\00", align 1
@.str.17 = private unnamed_addr constant [17 x i8] c"tex_cube_sampler\00", align 1
@.str.18 = private unnamed_addr constant [18 x i8] c"enable_texture_2d\00", align 1
@.str.19 = private unnamed_addr constant [24 x i8] c"enable_texture_cube_map\00", align 1
@.str.20 = private unnamed_addr constant [15 x i8] c"texture_format\00", align 1
@.str.21 = private unnamed_addr constant [17 x i8] c"texture_env_mode\00", align 1
@.str.22 = private unnamed_addr constant [12 x i8] c"combine_rgb\00", align 1
@.str.23 = private unnamed_addr constant [14 x i8] c"combine_alpha\00", align 1
@.str.25 = private unnamed_addr constant [11 x i8] c"src0_alpha\00", align 1
@.str.27 = private unnamed_addr constant [11 x i8] c"src1_alpha\00", align 1
@.str.29 = private unnamed_addr constant [11 x i8] c"src2_alpha\00", align 1
@.str.30 = private unnamed_addr constant [8 x i8] c"op0_rgb\00", align 1
@.str.31 = private unnamed_addr constant [10 x i8] c"op0_alpha\00", align 1
@.str.32 = private unnamed_addr constant [8 x i8] c"op1_rgb\00", align 1
@.str.33 = private unnamed_addr constant [10 x i8] c"op1_alpha\00", align 1
@.str.34 = private unnamed_addr constant [8 x i8] c"op2_rgb\00", align 1
@.str.35 = private unnamed_addr constant [10 x i8] c"op2_alpha\00", align 1
@.str.36 = private unnamed_addr constant [18 x i8] c"texture_env_color\00", align 1
@.str.37 = private unnamed_addr constant [22 x i8] c"texture_env_rgb_scale\00", align 1
@.str.38 = private unnamed_addr constant [24 x i8] c"texture_env_alpha_scale\00", align 1
@.str.39 = private unnamed_addr constant [27 x i8] c"point_sprite_coord_replace\00", align 1
@.str.40 = private unnamed_addr constant [18 x i8] c"enable_alpha_test\00", align 1
@.str.41 = private unnamed_addr constant [11 x i8] c"alpha_func\00", align 1
@.str.42 = private unnamed_addr constant [15 x i8] c"alpha_test_ref\00", align 1
@.str.43 = private unnamed_addr constant [17 x i8] c"shade_model_flat\00", align 1
@.str.44 = private unnamed_addr constant [16 x i8] c"enable_lighting\00", align 1
@.str.45 = private unnamed_addr constant [22 x i8] c"enable_rescale_normal\00", align 1
@.str.46 = private unnamed_addr constant [17 x i8] c"enable_normalize\00", align 1
@.str.47 = private unnamed_addr constant [22 x i8] c"enable_color_material\00", align 1
@.str.48 = private unnamed_addr constant [17 x i8] c"material_ambient\00", align 1
@.str.49 = private unnamed_addr constant [17 x i8] c"material_diffuse\00", align 1
@.str.50 = private unnamed_addr constant [18 x i8] c"material_specular\00", align 1
@.str.51 = private unnamed_addr constant [18 x i8] c"material_emissive\00", align 1
@.str.52 = private unnamed_addr constant [27 x i8] c"material_specular_exponent\00", align 1
@.str.53 = private unnamed_addr constant [26 x i8] c"light_model_scene_ambient\00", align 1
@.str.54 = private unnamed_addr constant [22 x i8] c"light_model_two_sided\00", align 1
@.str.55 = private unnamed_addr constant [14 x i8] c"light_enables\00", align 1
@.str.56 = private unnamed_addr constant [15 x i8] c"light_ambients\00", align 1
@.str.57 = private unnamed_addr constant [15 x i8] c"light_diffuses\00", align 1
@.str.58 = private unnamed_addr constant [16 x i8] c"light_speculars\00", align 1
@.str.59 = private unnamed_addr constant [16 x i8] c"light_positions\00", align 1
@.str.60 = private unnamed_addr constant [17 x i8] c"light_directions\00", align 1
@.str.61 = private unnamed_addr constant [26 x i8] c"light_spotlight_exponents\00", align 1
@.str.62 = private unnamed_addr constant [30 x i8] c"light_spotlight_cutoff_angles\00", align 1
@.str.63 = private unnamed_addr constant [25 x i8] c"light_attenuation_consts\00", align 1
@.str.64 = private unnamed_addr constant [26 x i8] c"light_attenuation_linears\00", align 1
@.str.65 = private unnamed_addr constant [29 x i8] c"light_attenuation_quadratics\00", align 1
@.str.66 = private unnamed_addr constant [11 x i8] c"enable_fog\00", align 1
@.str.68 = private unnamed_addr constant [12 x i8] c"fog_density\00", align 1
@.str.69 = private unnamed_addr constant [10 x i8] c"fog_start\00", align 1
@.str.70 = private unnamed_addr constant [8 x i8] c"fog_end\00", align 1
@.str.71 = private unnamed_addr constant [10 x i8] c"fog_color\00", align 1
@.str.72 = private unnamed_addr constant [19 x i8] c"enable_clip_planes\00", align 1
@.str.73 = private unnamed_addr constant [19 x i8] c"clip_plane_enables\00", align 1
@.str.74 = private unnamed_addr constant [12 x i8] c"clip_planes\00", align 1
@.str.75 = private unnamed_addr constant [20 x i8] c"point_rasterization\00", align 1
@.str.76 = private unnamed_addr constant [15 x i8] c"point_size_min\00", align 1
@.str.77 = private unnamed_addr constant [15 x i8] c"point_size_max\00", align 1
@.str.78 = private unnamed_addr constant [27 x i8] c"point_distance_attenuation\00", align 1
@.str.79 = private unnamed_addr constant [21 x i8] c"point_sprite_enabled\00", align 1
@.str.80 = private unnamed_addr constant [20 x i8] c"enable_draw_texture\00", align 1
@.str.81 = private unnamed_addr constant [20 x i8] c"draw_texture_coords\00", align 1
@.str.82 = private unnamed_addr constant [18 x i8] c"draw_texture_dims\00", align 1
@.str.83 = private unnamed_addr constant [34 x i8] c"draw_texture_normalized_crop_rect\00", align 1
@_ZN2gl5State20kDirtyObjectHandlersE.const = private unnamed_addr constant [12 x { i64, i64 }] [{ i64, i64 } { i64 ptrtoint (i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)* @_ZN2gl5State18syncActiveTexturesEPKNS_7ContextENS_7CommandE to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)* @_ZN2gl5State16syncTexturesInitEPKNS_7ContextENS_7CommandE to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)* @_ZN2gl5State14syncImagesInitEPKNS_7ContextENS_7CommandE to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)* @_ZN2gl5State19syncReadAttachmentsEPKNS_7ContextENS_7CommandE to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)* @_ZN2gl5State19syncDrawAttachmentsEPKNS_7ContextENS_7CommandE to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)* @_ZN2gl5State15syncVertexArrayEPKNS_7ContextENS_7CommandE to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)* @_ZN2gl5State12syncTexturesEPKNS_7ContextENS_7CommandE to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)* @_ZN2gl5State10syncImagesEPKNS_7ContextENS_7CommandE to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)* @_ZN2gl5State12syncSamplersEPKNS_7ContextENS_7CommandE to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)* @_ZN2gl5State19syncReadFramebufferEPKNS_7ContextENS_7CommandE to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)* @_ZN2gl5State19syncDrawFramebufferEPKNS_7ContextENS_7CommandE to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)* @_ZN2gl5State11syncProgramEPKNS_7ContextENS_7CommandE to i64), i64 0 }], align 16
@_ZN4absl13hash_internal15MixingHashState5kSeedE = external local_unnamed_addr constant i8*, align 8
@_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant { [5 x i8*], [5 x i8*], [5 x i8*] }, align 8
@_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant [10 x i8*], align 8
@_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant { [16 x i8*] }, align 8
@_ZZN4absl18container_internal10EmptyGroupEvE11empty_group = linkonce_odr hidden constant [16 x i8] c"\FF\80\80\80\80\80\80\80\80\80\80\80\80\80\80\80", comdat, align 16
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8

@_ZN2gl13GLES1RendererC1Ev = hidden unnamed_addr alias void (%"class.gl::GLES1Renderer"*), void (%"class.gl::GLES1Renderer"*)* @_ZN2gl13GLES1RendererC2Ev
@_ZN2gl13GLES1RendererD1Ev = hidden unnamed_addr alias void (%"class.gl::GLES1Renderer"*), void (%"class.gl::GLES1Renderer"*)* @_ZN2gl13GLES1RendererD2Ev

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #0

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2gl13GLES1RendererC2Ev(%"class.gl::GLES1Renderer"* nocapture) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 0
  store i8 0, i8* %2, align 8
  %3 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 4
  store i8 0, i8* %3, align 4
  %4 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 5, i64 0
  %5 = bitcast float* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %5, i8 0, i64 24, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl13GLES1Renderer9onDestroyEPNS_7ContextEPNS_5StateE(%"class.gl::GLES1Renderer"* nocapture, %"class.gl::Context"*, %"class.gl::State"*) local_unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 0
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %15, label %7

7:                                                ; preds = %3
  %8 = tail call i32 @_ZN2gl5State10setProgramEPKNS_7ContextEPNS_7ProgramE(%"class.gl::State"* %2, %"class.gl::Context"* %1, %"class.gl::Program"* null) #13
  %9 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 1
  %10 = load %"class.gl::ShaderProgramManager"*, %"class.gl::ShaderProgramManager"** %9, align 8
  %11 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 0, i32 0
  %12 = load i32, i32* %11, align 8
  tail call void @_ZN2gl20ShaderProgramManager13deleteProgramEPKNS_7ContextENS_15ShaderProgramIDE(%"class.gl::ShaderProgramManager"* %10, %"class.gl::Context"* %1, i32 %12) #13
  %13 = bitcast %"class.gl::ShaderProgramManager"** %9 to %"class.gl::ResourceManagerBase"**
  %14 = load %"class.gl::ResourceManagerBase"*, %"class.gl::ResourceManagerBase"** %13, align 8
  tail call void @_ZN2gl19ResourceManagerBase7releaseEPKNS_7ContextE(%"class.gl::ResourceManagerBase"* %14, %"class.gl::Context"* %1) #13
  store %"class.gl::ShaderProgramManager"* null, %"class.gl::ShaderProgramManager"** %9, align 8
  store i8 0, i8* %4, align 8
  br label %15

15:                                               ; preds = %3, %7
  ret void
}

declare i32 @_ZN2gl5State10setProgramEPKNS_7ContextEPNS_7ProgramE(%"class.gl::State"*, %"class.gl::Context"*, %"class.gl::Program"*) local_unnamed_addr #3

declare void @_ZN2gl20ShaderProgramManager13deleteProgramEPKNS_7ContextENS_15ShaderProgramIDE(%"class.gl::ShaderProgramManager"*, %"class.gl::Context"*, i32) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

declare void @_ZN2gl19ResourceManagerBase7releaseEPKNS_7ContextE(%"class.gl::ResourceManagerBase"*, %"class.gl::Context"*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2gl13GLES1RendererD2Ev(%"class.gl::GLES1Renderer"* nocapture) unnamed_addr #5 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2gl13GLES1Renderer14prepareForDrawENS_13PrimitiveModeEPNS_7ContextEPNS_5StateE(%"class.gl::GLES1Renderer"*, i8 zeroext, %"class.gl::Context"*, %"class.gl::State"*) local_unnamed_addr #6 align 2 {
  %5 = alloca i32, align 4
  %6 = alloca float, align 4
  %7 = alloca i32, align 4
  %8 = alloca float, align 4
  %9 = alloca i32, align 4
  %10 = alloca float, align 4
  %11 = alloca float, align 4
  %12 = alloca float, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca float, align 4
  %17 = alloca float, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca %"class.angle::Mat4", align 8
  %27 = alloca %"class.angle::Mat4", align 8
  %28 = alloca %"class.angle::Mat4", align 8
  %29 = alloca %"class.angle::Matrix", align 8
  %30 = alloca %"class.angle::Matrix", align 8
  %31 = alloca %"class.angle::Mat4", align 8
  %32 = tail call i32 @_ZN2gl13GLES1Renderer25initializeRendererProgramEPNS_7ContextEPNS_5StateE(%"class.gl::GLES1Renderer"* %0, %"class.gl::Context"* %2, %"class.gl::State"* %3)
  %33 = icmp eq i32 %32, 1
  br i1 %33, label %1122, label %34

34:                                               ; preds = %4
  %35 = getelementptr inbounds %"class.gl::State", %"class.gl::State"* %3, i64 0, i32 103
  %36 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 0, i32 0
  %37 = load i32, i32* %36, align 8
  %38 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 1
  %39 = load %"class.gl::ShaderProgramManager"*, %"class.gl::ShaderProgramManager"** %38, align 8
  %40 = zext i32 %37 to i64
  %41 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %39, i64 0, i32 2, i32 0
  %42 = load i64, i64* %41, align 8
  %43 = icmp ugt i64 %42, %40
  br i1 %43, label %44, label %51

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %39, i64 0, i32 2, i32 1
  %46 = load %"class.gl::Program"**, %"class.gl::Program"*** %45, align 8
  %47 = getelementptr inbounds %"class.gl::Program"*, %"class.gl::Program"** %46, i64 %40
  %48 = load %"class.gl::Program"*, %"class.gl::Program"** %47, align 8
  %49 = icmp eq %"class.gl::Program"* %48, inttoptr (i64 -1 to %"class.gl::Program"*)
  %50 = select i1 %49, %"class.gl::Program"* null, %"class.gl::Program"* %48
  br label %114

51:                                               ; preds = %34
  %52 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %53 = add i64 %52, %40
  %54 = zext i64 %53 to i128
  %55 = mul nuw i128 %54, 11376068507788127593
  %56 = lshr i128 %55, 64
  %57 = xor i128 %56, %55
  %58 = trunc i128 %57 to i64
  %59 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %39, i64 0, i32 2, i32 2, i32 0, i32 0, i32 0
  %60 = load i8*, i8** %59, align 8
  %61 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %39, i64 0, i32 2, i32 2, i32 0, i32 0, i32 3
  %62 = load i64, i64* %61, align 8
  %63 = lshr i64 %58, 7
  %64 = ptrtoint i8* %60 to i64
  %65 = lshr i64 %64, 12
  %66 = xor i64 %63, %65
  %67 = trunc i128 %57 to i8
  %68 = and i8 %67, 127
  %69 = insertelement <16 x i8> undef, i8 %68, i32 0
  %70 = shufflevector <16 x i8> %69, <16 x i8> undef, <16 x i32> zeroinitializer
  %71 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %39, i64 0, i32 2, i32 2, i32 0, i32 0, i32 1
  br label %72

72:                                               ; preds = %102, %51
  %73 = phi i64 [ %66, %51 ], [ %104, %102 ]
  %74 = phi i64 [ 0, %51 ], [ %103, %102 ]
  %75 = and i64 %73, %62
  %76 = getelementptr inbounds i8, i8* %60, i64 %75
  %77 = bitcast i8* %76 to <16 x i8>*
  %78 = load <16 x i8>, <16 x i8>* %77, align 1
  %79 = icmp eq <16 x i8> %70, %78
  %80 = bitcast <16 x i1> %79 to i16
  %81 = icmp eq i16 %80, 0
  br i1 %81, label %98, label %82

82:                                               ; preds = %72
  %83 = zext i16 %80 to i32
  %84 = load %"union.absl::container_internal::map_slot_type.244"*, %"union.absl::container_internal::map_slot_type.244"** %71, align 8
  br label %85

85:                                               ; preds = %94, %82
  %86 = phi i32 [ %83, %82 ], [ %96, %94 ]
  %87 = tail call i32 @llvm.cttz.i32(i32 %86, i1 false) #13, !range !3
  %88 = zext i32 %87 to i64
  %89 = add i64 %75, %88
  %90 = and i64 %89, %62
  %91 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %84, i64 %90, i32 0, i32 0
  %92 = load i32, i32* %91, align 4
  %93 = icmp eq i32 %92, %37
  br i1 %93, label %105, label %94, !prof !4

94:                                               ; preds = %85
  %95 = add i32 %86, -1
  %96 = and i32 %95, %86
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %98, label %85

98:                                               ; preds = %94, %72
  %99 = icmp eq <16 x i8> %78, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %100 = bitcast <16 x i1> %99 to i16
  %101 = icmp eq i16 %100, 0
  br i1 %101, label %102, label %114, !prof !5

102:                                              ; preds = %98
  %103 = add i64 %74, 16
  %104 = add i64 %103, %75
  br label %72

105:                                              ; preds = %85
  %106 = getelementptr inbounds i8, i8* %60, i64 %90
  %107 = icmp ne i8* %106, null
  tail call void @llvm.assume(i1 %107) #13
  %108 = load i8, i8* %106, align 1
  %109 = icmp sgt i8 %108, -1
  br i1 %109, label %111, label %110, !prof !4

110:                                              ; preds = %105
  tail call void @llvm.trap() #13
  unreachable

111:                                              ; preds = %105
  %112 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %84, i64 %90, i32 0, i32 1
  %113 = load %"class.gl::Program"*, %"class.gl::Program"** %112, align 8
  br label %114

114:                                              ; preds = %98, %44, %111
  %115 = phi %"class.gl::Program"* [ %50, %44 ], [ %113, %111 ], [ null, %98 ]
  %116 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 29, i32 0
  %117 = load i32, i32* %116, align 4
  %118 = tail call zeroext i1 @_ZNK2gl5State16getEnableFeatureEj(%"class.gl::State"* %3, i32 3008) #13
  %119 = zext i1 %118 to i32
  %120 = bitcast i32* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %120)
  store i32 %119, i32* %24, align 4
  %121 = icmp eq i32 %117, -1
  br i1 %121, label %123, label %122

122:                                              ; preds = %114
  call void @_ZN2gl7Program13setUniform1ivEPNS_7ContextENS_15UniformLocationEiPKi(%"class.gl::Program"* %115, %"class.gl::Context"* %2, i32 %117, i32 1, i32* nonnull %24) #13
  br label %123

123:                                              ; preds = %114, %122
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %120)
  %124 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 33, i32 0
  %125 = load i32, i32* %124, align 4
  %126 = call zeroext i1 @_ZNK2gl5State16getEnableFeatureEj(%"class.gl::State"* %3, i32 2896) #13
  %127 = zext i1 %126 to i32
  %128 = bitcast i32* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %128)
  store i32 %127, i32* %23, align 4
  %129 = icmp eq i32 %125, -1
  br i1 %129, label %131, label %130

130:                                              ; preds = %123
  call void @_ZN2gl7Program13setUniform1ivEPNS_7ContextENS_15UniformLocationEiPKi(%"class.gl::Program"* %115, %"class.gl::Context"* %2, i32 %125, i32 1, i32* nonnull %23) #13
  br label %131

131:                                              ; preds = %123, %130
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %128)
  %132 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 34, i32 0
  %133 = load i32, i32* %132, align 8
  %134 = call zeroext i1 @_ZNK2gl5State16getEnableFeatureEj(%"class.gl::State"* %3, i32 32826) #13
  %135 = zext i1 %134 to i32
  %136 = bitcast i32* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %136)
  store i32 %135, i32* %22, align 4
  %137 = icmp eq i32 %133, -1
  br i1 %137, label %139, label %138

138:                                              ; preds = %131
  call void @_ZN2gl7Program13setUniform1ivEPNS_7ContextENS_15UniformLocationEiPKi(%"class.gl::Program"* %115, %"class.gl::Context"* %2, i32 %133, i32 1, i32* nonnull %22) #13
  br label %139

139:                                              ; preds = %131, %138
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %136)
  %140 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 35, i32 0
  %141 = load i32, i32* %140, align 4
  %142 = call zeroext i1 @_ZNK2gl5State16getEnableFeatureEj(%"class.gl::State"* %3, i32 2977) #13
  %143 = zext i1 %142 to i32
  %144 = bitcast i32* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %144)
  store i32 %143, i32* %21, align 4
  %145 = icmp eq i32 %141, -1
  br i1 %145, label %147, label %146

146:                                              ; preds = %139
  call void @_ZN2gl7Program13setUniform1ivEPNS_7ContextENS_15UniformLocationEiPKi(%"class.gl::Program"* %115, %"class.gl::Context"* %2, i32 %141, i32 1, i32* nonnull %21) #13
  br label %147

147:                                              ; preds = %139, %146
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %144)
  %148 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 36, i32 0
  %149 = load i32, i32* %148, align 8
  %150 = call zeroext i1 @_ZNK2gl5State16getEnableFeatureEj(%"class.gl::State"* %3, i32 2903) #13
  %151 = zext i1 %150 to i32
  %152 = bitcast i32* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %152)
  store i32 %151, i32* %20, align 4
  %153 = icmp eq i32 %149, -1
  br i1 %153, label %155, label %154

154:                                              ; preds = %147
  call void @_ZN2gl7Program13setUniform1ivEPNS_7ContextENS_15UniformLocationEiPKi(%"class.gl::Program"* %115, %"class.gl::Context"* %2, i32 %149, i32 1, i32* nonnull %20) #13
  br label %155

155:                                              ; preds = %147, %154
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %152)
  %156 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 55, i32 0
  %157 = load i32, i32* %156, align 4
  %158 = call zeroext i1 @_ZNK2gl5State16getEnableFeatureEj(%"class.gl::State"* %3, i32 2912) #13
  %159 = zext i1 %158 to i32
  %160 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %160)
  store i32 %159, i32* %19, align 4
  %161 = icmp eq i32 %157, -1
  br i1 %161, label %163, label %162

162:                                              ; preds = %155
  call void @_ZN2gl7Program13setUniform1ivEPNS_7ContextENS_15UniformLocationEiPKi(%"class.gl::Program"* %115, %"class.gl::Context"* %2, i32 %157, i32 1, i32* nonnull %19) #13
  br label %163

163:                                              ; preds = %155, %162
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %160)
  %164 = call zeroext i1 @_ZNK2gl5State16getEnableFeatureEj(%"class.gl::State"* %3, i32 12288) #13
  %165 = zext i1 %164 to i32
  %166 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 2, i32 33, i32 0, i64 0
  store i32 %165, i32* %166, align 4
  %167 = call zeroext i1 @_ZNK2gl5State16getEnableFeatureEj(%"class.gl::State"* %3, i32 12289) #13
  %168 = zext i1 %167 to i32
  %169 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 2, i32 33, i32 0, i64 1
  store i32 %168, i32* %169, align 4
  %170 = or i1 %164, %167
  %171 = call zeroext i1 @_ZNK2gl5State16getEnableFeatureEj(%"class.gl::State"* %3, i32 12290) #13
  %172 = zext i1 %171 to i32
  %173 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 2, i32 33, i32 0, i64 2
  store i32 %172, i32* %173, align 4
  %174 = or i1 %170, %171
  %175 = call zeroext i1 @_ZNK2gl5State16getEnableFeatureEj(%"class.gl::State"* %3, i32 12291) #13
  %176 = zext i1 %175 to i32
  %177 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 2, i32 33, i32 0, i64 3
  store i32 %176, i32* %177, align 4
  %178 = or i1 %174, %175
  %179 = call zeroext i1 @_ZNK2gl5State16getEnableFeatureEj(%"class.gl::State"* %3, i32 12292) #13
  %180 = zext i1 %179 to i32
  %181 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 2, i32 33, i32 0, i64 4
  store i32 %180, i32* %181, align 4
  %182 = or i1 %178, %179
  %183 = call zeroext i1 @_ZNK2gl5State16getEnableFeatureEj(%"class.gl::State"* %3, i32 12293) #13
  %184 = zext i1 %183 to i32
  %185 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 2, i32 33, i32 0, i64 5
  store i32 %184, i32* %185, align 4
  %186 = or i1 %182, %183
  %187 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 61, i32 0
  %188 = load i32, i32* %187, align 4
  %189 = zext i1 %186 to i32
  %190 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %190)
  store i32 %189, i32* %18, align 4
  %191 = icmp eq i32 %188, -1
  br i1 %191, label %193, label %192

192:                                              ; preds = %163
  call void @_ZN2gl7Program13setUniform1ivEPNS_7ContextENS_15UniformLocationEiPKi(%"class.gl::Program"* %115, %"class.gl::Context"* %2, i32 %188, i32 1, i32* nonnull %18) #13
  br label %193

193:                                              ; preds = %163, %192
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %190)
  %194 = call i8* @_Znwm(i64 16) #16
  %195 = bitcast i8* %194 to i32*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %194, i8* align 4 bitcast ([4 x i32]* @.ref.tmp to i8*), i64 16, i1 false) #13
  %196 = getelementptr inbounds %"class.gl::State", %"class.gl::State"* %3, i64 0, i32 72, i32 0, i32 0, i64 0, i32 0, i32 0
  br label %222

197:                                              ; preds = %275
  %198 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 5, i32 0
  %199 = load i32, i32* %198, align 4
  %200 = icmp eq i32 %199, -1
  br i1 %200, label %203, label %201

201:                                              ; preds = %197
  %202 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 2, i32 1, i32 0, i64 0
  call void @_ZN2gl7Program13setUniform1ivEPNS_7ContextENS_15UniformLocationEiPKi(%"class.gl::Program"* %115, %"class.gl::Context"* %2, i32 %199, i32 4, i32* %202) #13
  br label %203

203:                                              ; preds = %197, %201
  %204 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 6, i32 0
  %205 = load i32, i32* %204, align 8
  %206 = icmp eq i32 %205, -1
  br i1 %206, label %209, label %207

207:                                              ; preds = %203
  %208 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 2, i32 2, i32 0, i64 0
  call void @_ZN2gl7Program13setUniform1ivEPNS_7ContextENS_15UniformLocationEiPKi(%"class.gl::Program"* %115, %"class.gl::Context"* %2, i32 %205, i32 4, i32* %208) #13
  br label %209

209:                                              ; preds = %203, %207
  %210 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 9, i32 0
  %211 = load i32, i32* %210, align 4
  %212 = icmp eq i32 %211, -1
  br i1 %212, label %214, label %213

213:                                              ; preds = %209
  call void @_ZN2gl7Program13setUniform1ivEPNS_7ContextENS_15UniformLocationEiPKi(%"class.gl::Program"* %115, %"class.gl::Context"* %2, i32 %211, i32 4, i32* nonnull %195) #13
  br label %214

214:                                              ; preds = %209, %213
  %215 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 72, i32 0
  %216 = load i32, i32* %215, align 8
  %217 = icmp eq i32 %216, -1
  br i1 %217, label %220, label %218

218:                                              ; preds = %214
  %219 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 2, i32 35, i32 0, i64 0, i64 0
  call void @_ZN2gl7Program13setUniform4fvENS_15UniformLocationEiPKf(%"class.gl::Program"* %115, i32 %216, i32 4, float* %219) #13
  br label %220

220:                                              ; preds = %214, %218
  call void @_ZdlPv(i8* nonnull %194) #16
  %221 = call zeroext i1 @_ZNK2gl10GLES1State7isDirtyENS0_14DirtyGles1TypeE(%"class.gl::GLES1State"* %35, i32 1) #13
  br i1 %221, label %280, label %278

222:                                              ; preds = %275, %193
  %223 = phi i64 [ 0, %193 ], [ %276, %275 ]
  %224 = trunc i64 %223 to i32
  %225 = call zeroext i1 @_ZNK2gl10GLES1State22isTextureTargetEnabledEjNS_11TextureTypeE(%"class.gl::GLES1State"* %35, i32 %224, i8 zeroext 7) #13
  %226 = zext i1 %225 to i32
  %227 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 2, i32 2, i32 0, i64 %223
  store i32 %226, i32* %227, align 4
  br i1 %225, label %230, label %228

228:                                              ; preds = %222
  %229 = call zeroext i1 @_ZNK2gl10GLES1State22isTextureTargetEnabledEjNS_11TextureTypeE(%"class.gl::GLES1State"* %35, i32 %224, i8 zeroext 0) #13
  br label %230

230:                                              ; preds = %222, %228
  %231 = phi i1 [ false, %222 ], [ %229, %228 ]
  %232 = zext i1 %231 to i32
  %233 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 2, i32 1, i32 0, i64 %223
  store i32 %232, i32* %233, align 4
  %234 = load %"class.gl::BindingPointer.410"*, %"class.gl::BindingPointer.410"** %196, align 8
  %235 = getelementptr inbounds %"class.gl::BindingPointer.410", %"class.gl::BindingPointer.410"* %234, i64 %223, i32 0, i32 1
  %236 = load %"class.gl::Texture"*, %"class.gl::Texture"** %235, align 8
  %237 = icmp eq %"class.gl::Texture"* %236, null
  br i1 %237, label %275, label %238

238:                                              ; preds = %230
  %239 = call dereferenceable(8) %"struct.gl::Format"* @_ZNK2gl7Texture9getFormatENS_13TextureTargetEm(%"class.gl::Texture"* nonnull %236, i8 zeroext 0, i64 0) #13
  %240 = getelementptr inbounds %"struct.gl::Format", %"struct.gl::Format"* %239, i64 0, i32 0
  %241 = load %"struct.gl::InternalFormat"*, %"struct.gl::InternalFormat"** %240, align 8
  %242 = getelementptr inbounds %"struct.gl::InternalFormat", %"struct.gl::InternalFormat"* %241, i64 0, i32 0
  %243 = load i32, i32* %242, align 8
  %244 = call i32 @_ZN2gl16GetUnsizedFormatEj(i32 %243) #13
  %245 = getelementptr inbounds i32, i32* %195, i64 %223
  store i32 %244, i32* %245, align 4
  %246 = call dereferenceable(16) %"struct.gl::Rectangle"* @_ZNK2gl7Texture7getCropEv(%"class.gl::Texture"* nonnull %236) #13
  %247 = call i64 @_ZNK2gl7Texture8getWidthENS_13TextureTargetEm(%"class.gl::Texture"* nonnull %236, i8 zeroext 0, i64 0) #13
  %248 = uitofp i64 %247 to float
  %249 = call i64 @_ZNK2gl7Texture9getHeightENS_13TextureTargetEm(%"class.gl::Texture"* nonnull %236, i8 zeroext 0, i64 0) #13
  %250 = uitofp i64 %249 to float
  %251 = icmp ne i64 %247, 0
  %252 = icmp ne i64 %249, 0
  %253 = and i1 %251, %252
  br i1 %253, label %254, label %275

254:                                              ; preds = %238
  %255 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %246, i64 0, i32 0
  %256 = load i32, i32* %255, align 4
  %257 = sitofp i32 %256 to float
  %258 = fdiv float %257, %248
  %259 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 2, i32 35, i32 0, i64 %223, i64 0
  store float %258, float* %259, align 4
  %260 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %246, i64 0, i32 1
  %261 = load i32, i32* %260, align 4
  %262 = sitofp i32 %261 to float
  %263 = fdiv float %262, %250
  %264 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 2, i32 35, i32 0, i64 %223, i64 1
  store float %263, float* %264, align 4
  %265 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %246, i64 0, i32 2
  %266 = load i32, i32* %265, align 4
  %267 = sitofp i32 %266 to float
  %268 = fdiv float %267, %248
  %269 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 2, i32 35, i32 0, i64 %223, i64 2
  store float %268, float* %269, align 4
  %270 = getelementptr inbounds %"struct.gl::Rectangle", %"struct.gl::Rectangle"* %246, i64 0, i32 3
  %271 = load i32, i32* %270, align 4
  %272 = sitofp i32 %271 to float
  %273 = fdiv float %272, %250
  %274 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 2, i32 35, i32 0, i64 %223, i64 3
  store float %273, float* %274, align 4
  br label %275

275:                                              ; preds = %238, %254, %230
  %276 = add nuw nsw i64 %223, 1
  %277 = icmp eq i64 %276, 4
  br i1 %277, label %197, label %222

278:                                              ; preds = %220
  %279 = call zeroext i1 @_ZNK2gl10GLES1State7isDirtyENS0_14DirtyGles1TypeE(%"class.gl::GLES1State"* %35, i32 3) #13
  br i1 %279, label %280, label %329

280:                                              ; preds = %278, %220
  %281 = call zeroext i1 @_ZNK2gl10GLES1State20isClientStateEnabledENS_21ClientVertexArrayTypeE(%"class.gl::GLES1State"* %35, i8 zeroext 1) #13
  br i1 %281, label %290, label %282

282:                                              ; preds = %280
  %283 = call dereferenceable(12) %"class.angle::Vector"* @_ZNK2gl10GLES1State16getCurrentNormalEv(%"class.gl::GLES1State"* %35) #13
  %284 = getelementptr inbounds %"class.angle::Vector", %"class.angle::Vector"* %283, i64 0, i32 0, i32 0, i64 0
  %285 = load float, float* %284, align 4
  %286 = getelementptr inbounds %"class.angle::Vector", %"class.angle::Vector"* %283, i64 0, i32 0, i32 0, i64 1
  %287 = load float, float* %286, align 4
  %288 = getelementptr inbounds %"class.angle::Vector", %"class.angle::Vector"* %283, i64 0, i32 0, i32 0, i64 2
  %289 = load float, float* %288, align 4
  call void @_ZN2gl7Context14vertexAttrib3fEjfff(%"class.gl::Context"* %2, i32 1, float %285, float %287, float %289) #13
  br label %290

290:                                              ; preds = %282, %280
  %291 = call zeroext i1 @_ZNK2gl10GLES1State20isClientStateEnabledENS_21ClientVertexArrayTypeE(%"class.gl::GLES1State"* %35, i8 zeroext 0) #13
  br i1 %291, label %302, label %292

292:                                              ; preds = %290
  %293 = call dereferenceable(16) %"struct.angle::Color"* @_ZNK2gl10GLES1State15getCurrentColorEv(%"class.gl::GLES1State"* %35) #13
  %294 = getelementptr inbounds %"struct.angle::Color", %"struct.angle::Color"* %293, i64 0, i32 0
  %295 = load float, float* %294, align 4
  %296 = getelementptr inbounds %"struct.angle::Color", %"struct.angle::Color"* %293, i64 0, i32 1
  %297 = load float, float* %296, align 4
  %298 = getelementptr inbounds %"struct.angle::Color", %"struct.angle::Color"* %293, i64 0, i32 2
  %299 = load float, float* %298, align 4
  %300 = getelementptr inbounds %"struct.angle::Color", %"struct.angle::Color"* %293, i64 0, i32 3
  %301 = load float, float* %300, align 4
  call void @_ZN2gl7Context14vertexAttrib4fEjffff(%"class.gl::Context"* %2, i32 2, float %295, float %297, float %299, float %301) #13
  br label %302

302:                                              ; preds = %292, %290
  %303 = call zeroext i1 @_ZNK2gl10GLES1State20isClientStateEnabledENS_21ClientVertexArrayTypeE(%"class.gl::GLES1State"* %35, i8 zeroext 2) #13
  br i1 %303, label %307, label %304

304:                                              ; preds = %302
  %305 = getelementptr inbounds %"class.gl::State", %"class.gl::State"* %3, i64 0, i32 103, i32 37, i32 4
  %306 = load float, float* %305, align 4
  call void @_ZN2gl7Context14vertexAttrib1fEjf(%"class.gl::Context"* %2, i32 3, float %306) #13
  br label %307

307:                                              ; preds = %304, %302
  %308 = getelementptr inbounds %"class.gl::State", %"class.gl::State"* %3, i64 0, i32 103, i32 8, i32 0
  %309 = load i64*, i64** %308, align 8
  %310 = load i64, i64* %309, align 8
  %311 = and i64 %310, 1
  %312 = icmp eq i64 %311, 0
  br i1 %312, label %313, label %325

313:                                              ; preds = %307
  %314 = call dereferenceable(16) %"struct.gl::TextureCoordF"* @_ZNK2gl10GLES1State23getCurrentTextureCoordsEj(%"class.gl::GLES1State"* %35, i32 0) #13
  %315 = getelementptr inbounds %"struct.gl::TextureCoordF", %"struct.gl::TextureCoordF"* %314, i64 0, i32 0
  %316 = load float, float* %315, align 4
  %317 = getelementptr inbounds %"struct.gl::TextureCoordF", %"struct.gl::TextureCoordF"* %314, i64 0, i32 1
  %318 = load float, float* %317, align 4
  %319 = getelementptr inbounds %"struct.gl::TextureCoordF", %"struct.gl::TextureCoordF"* %314, i64 0, i32 2
  %320 = load float, float* %319, align 4
  %321 = getelementptr inbounds %"struct.gl::TextureCoordF", %"struct.gl::TextureCoordF"* %314, i64 0, i32 3
  %322 = load float, float* %321, align 4
  call void @_ZN2gl7Context14vertexAttrib4fEjffff(%"class.gl::Context"* %2, i32 4, float %316, float %318, float %320, float %322) #13
  %323 = load i64*, i64** %308, align 8
  %324 = load i64, i64* %323, align 8
  br label %325

325:                                              ; preds = %307, %313
  %326 = phi i64 [ %310, %307 ], [ %324, %313 ]
  %327 = and i64 %326, 2
  %328 = icmp eq i64 %327, 0
  br i1 %328, label %1124, label %1136

329:                                              ; preds = %1152, %1156, %278
  %330 = call zeroext i1 @_ZNK2gl10GLES1State7isDirtyENS0_14DirtyGles1TypeE(%"class.gl::GLES1State"* %35, i32 5) #13
  br i1 %330, label %331, label %551

331:                                              ; preds = %329
  %332 = bitcast %"class.angle::Mat4"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %332) #13
  %333 = getelementptr inbounds %"class.angle::Mat4", %"class.angle::Mat4"* %26, i64 0, i32 0, i32 0, i32 0, i32 0
  %334 = getelementptr inbounds %"class.angle::Mat4", %"class.angle::Mat4"* %26, i64 0, i32 0, i32 0, i32 0, i32 1
  %335 = getelementptr inbounds %"class.angle::Mat4", %"class.angle::Mat4"* %26, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %336 = getelementptr inbounds %"class.angle::Mat4", %"class.angle::Mat4"* %26, i64 0, i32 0, i32 1
  %337 = getelementptr inbounds %"class.gl::State", %"class.gl::State"* %3, i64 0, i32 103, i32 27, i32 1
  %338 = getelementptr inbounds %"class.angle::Mat4", %"class.angle::Mat4"* %26, i64 0, i32 0, i32 1
  %339 = bitcast i32* %338 to i64*
  store i64 -6148914691236517206, i64* %339, align 8
  %340 = load i64, i64* %337, align 8
  %341 = add i64 %340, -1
  %342 = getelementptr inbounds %"class.gl::State", %"class.gl::State"* %3, i64 0, i32 103, i32 27, i32 0, i32 0, i64 %341
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %332, i8 0, i64 24, i1 false) #13
  %343 = getelementptr inbounds %"class.gl::State", %"class.gl::State"* %3, i64 0, i32 103, i32 27, i32 0, i32 0, i64 %341, i32 0, i32 0, i32 0, i32 1
  %344 = bitcast float** %343 to i64*
  %345 = load i64, i64* %344, align 8
  %346 = bitcast %"class.angle::Mat4"* %342 to i64*
  %347 = load i64, i64* %346, align 8
  %348 = sub i64 %345, %347
  %349 = ashr exact i64 %348, 2
  %350 = icmp eq i64 %348, 0
  br i1 %350, label %371, label %351

351:                                              ; preds = %331
  %352 = icmp ugt i64 %349, 4611686018427387903
  br i1 %352, label %353, label %355

353:                                              ; preds = %351
  %354 = bitcast %"class.angle::Mat4"* %26 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %354) #17
  unreachable

355:                                              ; preds = %351
  %356 = call i8* @_Znwm(i64 %348) #16
  %357 = bitcast i8* %356 to float*
  %358 = bitcast float** %334 to i8**
  store i8* %356, i8** %358, align 8
  %359 = bitcast %"class.angle::Mat4"* %26 to i8**
  store i8* %356, i8** %359, align 8
  %360 = getelementptr inbounds float, float* %357, i64 %349
  store float* %360, float** %335, align 8
  %361 = bitcast float** %334 to i64*
  %362 = ptrtoint i8* %356 to i64
  %363 = icmp sgt i64 %348, 0
  br i1 %363, label %364, label %369

364:                                              ; preds = %355
  %365 = lshr exact i64 %348, 2
  %366 = inttoptr i64 %347 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %356, i8* align 4 %366, i64 %348, i1 false) #13
  %367 = getelementptr inbounds float, float* %357, i64 %365
  %368 = ptrtoint float* %367 to i64
  br label %369

369:                                              ; preds = %364, %355
  %370 = phi i64 [ %368, %364 ], [ %362, %355 ]
  store i64 %370, i64* %361, align 8
  br label %371

371:                                              ; preds = %331, %369
  %372 = phi float* [ null, %331 ], [ %357, %369 ]
  %373 = getelementptr inbounds %"class.gl::State", %"class.gl::State"* %3, i64 0, i32 103, i32 27, i32 0, i32 0, i64 %341, i32 0, i32 1
  %374 = bitcast i32* %373 to i64*
  %375 = bitcast i32* %336 to i64*
  %376 = load i64, i64* %374, align 8
  store i64 %376, i64* %375, align 8
  %377 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 1, i32 0
  %378 = load i32, i32* %377, align 4
  %379 = icmp eq i32 %378, -1
  br i1 %379, label %381, label %380

380:                                              ; preds = %371
  call void @_ZN2gl7Program19setUniformMatrix4fvENS_15UniformLocationEihPKf(%"class.gl::Program"* %115, i32 %378, i32 1, i8 zeroext 0, float* %372) #13
  br label %381

381:                                              ; preds = %371, %380
  %382 = bitcast %"class.angle::Mat4"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %382) #13
  %383 = getelementptr inbounds %"class.angle::Mat4", %"class.angle::Mat4"* %27, i64 0, i32 0, i32 0, i32 0, i32 0
  %384 = getelementptr inbounds %"class.angle::Mat4", %"class.angle::Mat4"* %27, i64 0, i32 0, i32 0, i32 0, i32 1
  %385 = getelementptr inbounds %"class.angle::Mat4", %"class.angle::Mat4"* %27, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %386 = getelementptr inbounds %"class.angle::Mat4", %"class.angle::Mat4"* %27, i64 0, i32 0, i32 1
  %387 = getelementptr inbounds %"class.gl::State", %"class.gl::State"* %3, i64 0, i32 103, i32 28, i32 1
  %388 = getelementptr inbounds %"class.angle::Mat4", %"class.angle::Mat4"* %27, i64 0, i32 0, i32 1
  %389 = bitcast i32* %388 to i64*
  store i64 -6148914691236517206, i64* %389, align 8
  %390 = load i64, i64* %387, align 8
  %391 = add i64 %390, -1
  %392 = getelementptr inbounds %"class.gl::State", %"class.gl::State"* %3, i64 0, i32 103, i32 28, i32 0, i32 0, i64 %391
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %382, i8 0, i64 24, i1 false) #13
  %393 = getelementptr inbounds %"class.gl::State", %"class.gl::State"* %3, i64 0, i32 103, i32 28, i32 0, i32 0, i64 %391, i32 0, i32 0, i32 0, i32 1
  %394 = bitcast float** %393 to i64*
  %395 = load i64, i64* %394, align 8
  %396 = bitcast %"class.angle::Mat4"* %392 to i64*
  %397 = load i64, i64* %396, align 8
  %398 = sub i64 %395, %397
  %399 = ashr exact i64 %398, 2
  %400 = icmp eq i64 %398, 0
  br i1 %400, label %421, label %401

401:                                              ; preds = %381
  %402 = icmp ugt i64 %399, 4611686018427387903
  br i1 %402, label %403, label %405

403:                                              ; preds = %401
  %404 = bitcast %"class.angle::Mat4"* %27 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %404) #17
  unreachable

405:                                              ; preds = %401
  %406 = call i8* @_Znwm(i64 %398) #16
  %407 = bitcast i8* %406 to float*
  %408 = bitcast float** %384 to i8**
  store i8* %406, i8** %408, align 8
  %409 = bitcast %"class.angle::Mat4"* %27 to i8**
  store i8* %406, i8** %409, align 8
  %410 = getelementptr inbounds float, float* %407, i64 %399
  store float* %410, float** %385, align 8
  %411 = bitcast float** %384 to i64*
  %412 = ptrtoint i8* %406 to i64
  %413 = icmp sgt i64 %398, 0
  br i1 %413, label %414, label %419

414:                                              ; preds = %405
  %415 = lshr exact i64 %398, 2
  %416 = inttoptr i64 %397 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %406, i8* align 4 %416, i64 %398, i1 false) #13
  %417 = getelementptr inbounds float, float* %407, i64 %415
  %418 = ptrtoint float* %417 to i64
  br label %419

419:                                              ; preds = %414, %405
  %420 = phi i64 [ %418, %414 ], [ %412, %405 ]
  store i64 %420, i64* %411, align 8
  br label %421

421:                                              ; preds = %381, %419
  %422 = phi float* [ null, %381 ], [ %407, %419 ]
  %423 = getelementptr inbounds %"class.gl::State", %"class.gl::State"* %3, i64 0, i32 103, i32 28, i32 0, i32 0, i64 %391, i32 0, i32 1
  %424 = bitcast i32* %423 to i64*
  %425 = bitcast i32* %386 to i64*
  %426 = load i64, i64* %424, align 8
  store i64 %426, i64* %425, align 8
  %427 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 2, i32 0
  %428 = load i32, i32* %427, align 8
  %429 = getelementptr inbounds %"class.angle::Mat4", %"class.angle::Mat4"* %27, i64 0, i32 0
  %430 = icmp eq i32 %428, -1
  br i1 %430, label %432, label %431

431:                                              ; preds = %421
  call void @_ZN2gl7Program19setUniformMatrix4fvENS_15UniformLocationEihPKf(%"class.gl::Program"* %115, i32 %428, i32 1, i8 zeroext 0, float* %422) #13
  br label %432

432:                                              ; preds = %421, %431
  %433 = bitcast %"class.angle::Mat4"* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %433) #13
  %434 = getelementptr inbounds %"class.angle::Mat4", %"class.angle::Mat4"* %28, i64 0, i32 0, i32 0, i32 0, i32 0
  %435 = getelementptr inbounds %"class.angle::Mat4", %"class.angle::Mat4"* %28, i64 0, i32 0, i32 0, i32 0, i32 1
  %436 = bitcast %"class.angle::Matrix"* %30 to i8*
  %437 = bitcast %"class.angle::Mat4"* %28 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %437, i8 -86, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %436) #13
  call void @_ZNK5angle6MatrixIfE9transposeEv(%"class.angle::Matrix"* nonnull sret %30, %"class.angle::Matrix"* nonnull %429)
  call void @_ZNK5angle6MatrixIfE7inverseEv(%"class.angle::Matrix"* nonnull sret %29, %"class.angle::Matrix"* nonnull %30)
  call void @_ZN5angle4Mat4C1ENS_6MatrixIfEE(%"class.angle::Mat4"* nonnull %28, %"class.angle::Matrix"* nonnull %29) #13
  %438 = getelementptr inbounds %"class.angle::Matrix", %"class.angle::Matrix"* %29, i64 0, i32 0, i32 0, i32 0
  %439 = load float*, float** %438, align 8
  %440 = icmp eq float* %439, null
  br i1 %440, label %446, label %441

441:                                              ; preds = %432
  %442 = ptrtoint float* %439 to i64
  %443 = getelementptr inbounds %"class.angle::Matrix", %"class.angle::Matrix"* %29, i64 0, i32 0, i32 0, i32 1
  %444 = bitcast float** %443 to i64*
  store i64 %442, i64* %444, align 8
  %445 = bitcast float* %439 to i8*
  call void @_ZdlPv(i8* %445) #16
  br label %446

446:                                              ; preds = %432, %441
  %447 = getelementptr inbounds %"class.angle::Matrix", %"class.angle::Matrix"* %30, i64 0, i32 0, i32 0, i32 0
  %448 = load float*, float** %447, align 8
  %449 = icmp eq float* %448, null
  br i1 %449, label %455, label %450

450:                                              ; preds = %446
  %451 = ptrtoint float* %448 to i64
  %452 = getelementptr inbounds %"class.angle::Matrix", %"class.angle::Matrix"* %30, i64 0, i32 0, i32 0, i32 1
  %453 = bitcast float** %452 to i64*
  store i64 %451, i64* %453, align 8
  %454 = bitcast float* %448 to i8*
  call void @_ZdlPv(i8* %454) #16
  br label %455

455:                                              ; preds = %446, %450
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %436) #13
  %456 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 4, i32 0
  %457 = load i32, i32* %456, align 8
  %458 = icmp eq i32 %457, -1
  br i1 %458, label %461, label %459

459:                                              ; preds = %455
  %460 = load float*, float** %434, align 8
  call void @_ZN2gl7Program19setUniformMatrix4fvENS_15UniformLocationEihPKf(%"class.gl::Program"* %115, i32 %457, i32 1, i8 zeroext 0, float* %460) #13
  br label %461

461:                                              ; preds = %455, %459
  %462 = bitcast %"class.angle::Mat4"* %31 to i8*
  %463 = getelementptr inbounds %"class.angle::Mat4", %"class.angle::Mat4"* %31, i64 0, i32 0, i32 0, i32 0, i32 1
  %464 = getelementptr inbounds %"class.angle::Mat4", %"class.angle::Mat4"* %31, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %465 = getelementptr inbounds %"class.angle::Mat4", %"class.angle::Mat4"* %31, i64 0, i32 0, i32 1
  %466 = getelementptr inbounds %"class.gl::State", %"class.gl::State"* %3, i64 0, i32 103, i32 29, i32 0, i32 0
  %467 = bitcast float** %463 to i8**
  %468 = bitcast %"class.angle::Mat4"* %31 to i8**
  %469 = bitcast float** %463 to i64*
  %470 = bitcast i32* %465 to i64*
  %471 = bitcast %"class.angle::Mat4"* %31 to i8*
  br label %500

472:                                              ; preds = %548
  %473 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 3, i32 0
  %474 = load i32, i32* %473, align 4
  %475 = icmp eq i32 %474, -1
  br i1 %475, label %478, label %476

476:                                              ; preds = %472
  %477 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 2, i32 0, i32 0, i64 0, i64 0
  call void @_ZN2gl7Program19setUniformMatrix4fvENS_15UniformLocationEihPKf(%"class.gl::Program"* %115, i32 %474, i32 4, i8 zeroext 0, float* %477) #13
  br label %478

478:                                              ; preds = %472, %476
  %479 = load float*, float** %434, align 8
  %480 = icmp eq float* %479, null
  br i1 %480, label %485, label %481

481:                                              ; preds = %478
  %482 = ptrtoint float* %479 to i64
  %483 = bitcast float** %435 to i64*
  store i64 %482, i64* %483, align 8
  %484 = bitcast float* %479 to i8*
  call void @_ZdlPv(i8* %484) #16
  br label %485

485:                                              ; preds = %478, %481
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %433) #13
  %486 = load float*, float** %383, align 8
  %487 = icmp eq float* %486, null
  br i1 %487, label %492, label %488

488:                                              ; preds = %485
  %489 = ptrtoint float* %486 to i64
  %490 = bitcast float** %384 to i64*
  store i64 %489, i64* %490, align 8
  %491 = bitcast float* %486 to i8*
  call void @_ZdlPv(i8* %491) #16
  br label %492

492:                                              ; preds = %485, %488
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %382) #13
  %493 = load float*, float** %333, align 8
  %494 = icmp eq float* %493, null
  br i1 %494, label %499, label %495

495:                                              ; preds = %492
  %496 = ptrtoint float* %493 to i64
  %497 = bitcast float** %334 to i64*
  store i64 %496, i64* %497, align 8
  %498 = bitcast float* %493 to i8*
  call void @_ZdlPv(i8* %498) #16
  br label %499

499:                                              ; preds = %492, %495
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %332) #13
  br label %551

500:                                              ; preds = %548, %461
  %501 = phi i64 [ 0, %461 ], [ %549, %548 ]
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %462) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %471, i8 -86, i64 32, i1 false)
  %502 = load %"class.angle::FixedVector"*, %"class.angle::FixedVector"** %466, align 8
  %503 = getelementptr inbounds %"class.angle::FixedVector", %"class.angle::FixedVector"* %502, i64 %501, i32 1
  %504 = load i64, i64* %503, align 8
  %505 = add i64 %504, -1
  %506 = getelementptr inbounds %"class.angle::FixedVector", %"class.angle::FixedVector"* %502, i64 %501, i32 0, i32 0, i64 %505
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %462, i8 0, i64 24, i1 false) #13
  %507 = getelementptr inbounds %"class.angle::FixedVector", %"class.angle::FixedVector"* %502, i64 %501, i32 0, i32 0, i64 %505, i32 0, i32 0, i32 0, i32 1
  %508 = bitcast float** %507 to i64*
  %509 = load i64, i64* %508, align 8
  %510 = bitcast %"class.angle::Mat4"* %506 to i64*
  %511 = load i64, i64* %510, align 8
  %512 = sub i64 %509, %511
  %513 = ashr exact i64 %512, 2
  %514 = icmp eq i64 %512, 0
  br i1 %514, label %537, label %515

515:                                              ; preds = %500
  %516 = icmp ugt i64 %513, 4611686018427387903
  br i1 %516, label %517, label %519

517:                                              ; preds = %515
  %518 = bitcast %"class.angle::Mat4"* %31 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %518) #17
  unreachable

519:                                              ; preds = %515
  %520 = call i8* @_Znwm(i64 %512) #16
  %521 = bitcast i8* %520 to float*
  store i8* %520, i8** %467, align 8
  store i8* %520, i8** %468, align 8
  %522 = getelementptr inbounds float, float* %521, i64 %513
  store float* %522, float** %464, align 8
  %523 = getelementptr inbounds %"class.angle::Mat4", %"class.angle::Mat4"* %506, i64 0, i32 0, i32 0, i32 0, i32 0
  %524 = load float*, float** %523, align 8
  %525 = load i64, i64* %508, align 8
  %526 = ptrtoint i8* %520 to i64
  %527 = ptrtoint float* %524 to i64
  %528 = sub i64 %525, %527
  %529 = icmp sgt i64 %528, 0
  br i1 %529, label %530, label %535

530:                                              ; preds = %519
  %531 = lshr exact i64 %528, 2
  %532 = bitcast float* %524 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %520, i8* align 4 %532, i64 %528, i1 false) #13
  %533 = getelementptr inbounds float, float* %521, i64 %531
  %534 = ptrtoint float* %533 to i64
  br label %535

535:                                              ; preds = %530, %519
  %536 = phi i64 [ %534, %530 ], [ %526, %519 ]
  store i64 %536, i64* %469, align 8
  br label %537

537:                                              ; preds = %500, %535
  %538 = phi i8* [ null, %500 ], [ %520, %535 ]
  %539 = phi float* [ null, %500 ], [ %521, %535 ]
  %540 = getelementptr inbounds %"class.angle::FixedVector", %"class.angle::FixedVector"* %502, i64 %501, i32 0, i32 0, i64 %505, i32 0, i32 1
  %541 = bitcast i32* %540 to i64*
  %542 = load i64, i64* %541, align 8
  store i64 %542, i64* %470, align 8
  %543 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 2, i32 0, i32 0, i64 %501
  %544 = bitcast [16 x float]* %543 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %544, i8* align 4 %538, i64 64, i1 false)
  %545 = icmp eq float* %539, null
  br i1 %545, label %548, label %546

546:                                              ; preds = %537
  %547 = ptrtoint float* %539 to i64
  store i64 %547, i64* %469, align 8
  call void @_ZdlPv(i8* %538) #16
  br label %548

548:                                              ; preds = %537, %546
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %462) #13
  %549 = add nuw nsw i64 %501, 1
  %550 = icmp eq i64 %549, 4
  br i1 %550, label %472, label %500

551:                                              ; preds = %499, %329
  %552 = call zeroext i1 @_ZNK2gl10GLES1State7isDirtyENS0_14DirtyGles1TypeE(%"class.gl::GLES1State"* %35, i32 6) #13
  br i1 %552, label %667, label %767

553:                                              ; preds = %667
  %554 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 10, i32 0
  %555 = load i32, i32* %554, align 8
  %556 = icmp eq i32 %555, -1
  br i1 %556, label %559, label %557

557:                                              ; preds = %553
  %558 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 2, i32 3, i32 0, i64 0
  call void @_ZN2gl7Program13setUniform1ivEPNS_7ContextENS_15UniformLocationEiPKi(%"class.gl::Program"* %115, %"class.gl::Context"* %2, i32 %555, i32 4, i32* %558) #13
  br label %559

559:                                              ; preds = %553, %557
  %560 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 11, i32 0
  %561 = load i32, i32* %560, align 4
  %562 = icmp eq i32 %561, -1
  br i1 %562, label %565, label %563

563:                                              ; preds = %559
  %564 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 2, i32 4, i32 0, i64 0
  call void @_ZN2gl7Program13setUniform1ivEPNS_7ContextENS_15UniformLocationEiPKi(%"class.gl::Program"* %115, %"class.gl::Context"* %2, i32 %561, i32 4, i32* %564) #13
  br label %565

565:                                              ; preds = %559, %563
  %566 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 12, i32 0
  %567 = load i32, i32* %566, align 8
  %568 = icmp eq i32 %567, -1
  br i1 %568, label %571, label %569

569:                                              ; preds = %565
  %570 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 2, i32 5, i32 0, i64 0
  call void @_ZN2gl7Program13setUniform1ivEPNS_7ContextENS_15UniformLocationEiPKi(%"class.gl::Program"* %115, %"class.gl::Context"* %2, i32 %567, i32 4, i32* %570) #13
  br label %571

571:                                              ; preds = %565, %569
  %572 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 13, i32 0
  %573 = load i32, i32* %572, align 4
  %574 = icmp eq i32 %573, -1
  br i1 %574, label %577, label %575

575:                                              ; preds = %571
  %576 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 2, i32 6, i32 0, i64 0
  call void @_ZN2gl7Program13setUniform1ivEPNS_7ContextENS_15UniformLocationEiPKi(%"class.gl::Program"* %115, %"class.gl::Context"* %2, i32 %573, i32 4, i32* %576) #13
  br label %577

577:                                              ; preds = %571, %575
  %578 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 14, i32 0
  %579 = load i32, i32* %578, align 8
  %580 = icmp eq i32 %579, -1
  br i1 %580, label %583, label %581

581:                                              ; preds = %577
  %582 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 2, i32 7, i32 0, i64 0
  call void @_ZN2gl7Program13setUniform1ivEPNS_7ContextENS_15UniformLocationEiPKi(%"class.gl::Program"* %115, %"class.gl::Context"* %2, i32 %579, i32 4, i32* %582) #13
  br label %583

583:                                              ; preds = %577, %581
  %584 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 15, i32 0
  %585 = load i32, i32* %584, align 4
  %586 = icmp eq i32 %585, -1
  br i1 %586, label %589, label %587

587:                                              ; preds = %583
  %588 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 2, i32 8, i32 0, i64 0
  call void @_ZN2gl7Program13setUniform1ivEPNS_7ContextENS_15UniformLocationEiPKi(%"class.gl::Program"* %115, %"class.gl::Context"* %2, i32 %585, i32 4, i32* %588) #13
  br label %589

589:                                              ; preds = %583, %587
  %590 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 16, i32 0
  %591 = load i32, i32* %590, align 8
  %592 = icmp eq i32 %591, -1
  br i1 %592, label %595, label %593

593:                                              ; preds = %589
  %594 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 2, i32 9, i32 0, i64 0
  call void @_ZN2gl7Program13setUniform1ivEPNS_7ContextENS_15UniformLocationEiPKi(%"class.gl::Program"* %115, %"class.gl::Context"* %2, i32 %591, i32 4, i32* %594) #13
  br label %595

595:                                              ; preds = %589, %593
  %596 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 17, i32 0
  %597 = load i32, i32* %596, align 4
  %598 = icmp eq i32 %597, -1
  br i1 %598, label %601, label %599

599:                                              ; preds = %595
  %600 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 2, i32 10, i32 0, i64 0
  call void @_ZN2gl7Program13setUniform1ivEPNS_7ContextENS_15UniformLocationEiPKi(%"class.gl::Program"* %115, %"class.gl::Context"* %2, i32 %597, i32 4, i32* %600) #13
  br label %601

601:                                              ; preds = %595, %599
  %602 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 18, i32 0
  %603 = load i32, i32* %602, align 8
  %604 = icmp eq i32 %603, -1
  br i1 %604, label %607, label %605

605:                                              ; preds = %601
  %606 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 2, i32 11, i32 0, i64 0
  call void @_ZN2gl7Program13setUniform1ivEPNS_7ContextENS_15UniformLocationEiPKi(%"class.gl::Program"* %115, %"class.gl::Context"* %2, i32 %603, i32 4, i32* %606) #13
  br label %607

607:                                              ; preds = %601, %605
  %608 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 19, i32 0
  %609 = load i32, i32* %608, align 4
  %610 = icmp eq i32 %609, -1
  br i1 %610, label %613, label %611

611:                                              ; preds = %607
  %612 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 2, i32 12, i32 0, i64 0
  call void @_ZN2gl7Program13setUniform1ivEPNS_7ContextENS_15UniformLocationEiPKi(%"class.gl::Program"* %115, %"class.gl::Context"* %2, i32 %609, i32 4, i32* %612) #13
  br label %613

613:                                              ; preds = %607, %611
  %614 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 20, i32 0
  %615 = load i32, i32* %614, align 8
  %616 = icmp eq i32 %615, -1
  br i1 %616, label %619, label %617

617:                                              ; preds = %613
  %618 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 2, i32 13, i32 0, i64 0
  call void @_ZN2gl7Program13setUniform1ivEPNS_7ContextENS_15UniformLocationEiPKi(%"class.gl::Program"* %115, %"class.gl::Context"* %2, i32 %615, i32 4, i32* %618) #13
  br label %619

619:                                              ; preds = %613, %617
  %620 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 21, i32 0
  %621 = load i32, i32* %620, align 4
  %622 = icmp eq i32 %621, -1
  br i1 %622, label %625, label %623

623:                                              ; preds = %619
  %624 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 2, i32 14, i32 0, i64 0
  call void @_ZN2gl7Program13setUniform1ivEPNS_7ContextENS_15UniformLocationEiPKi(%"class.gl::Program"* %115, %"class.gl::Context"* %2, i32 %621, i32 4, i32* %624) #13
  br label %625

625:                                              ; preds = %619, %623
  %626 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 22, i32 0
  %627 = load i32, i32* %626, align 8
  %628 = icmp eq i32 %627, -1
  br i1 %628, label %631, label %629

629:                                              ; preds = %625
  %630 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 2, i32 15, i32 0, i64 0
  call void @_ZN2gl7Program13setUniform1ivEPNS_7ContextENS_15UniformLocationEiPKi(%"class.gl::Program"* %115, %"class.gl::Context"* %2, i32 %627, i32 4, i32* %630) #13
  br label %631

631:                                              ; preds = %625, %629
  %632 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 23, i32 0
  %633 = load i32, i32* %632, align 4
  %634 = icmp eq i32 %633, -1
  br i1 %634, label %637, label %635

635:                                              ; preds = %631
  %636 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 2, i32 16, i32 0, i64 0
  call void @_ZN2gl7Program13setUniform1ivEPNS_7ContextENS_15UniformLocationEiPKi(%"class.gl::Program"* %115, %"class.gl::Context"* %2, i32 %633, i32 4, i32* %636) #13
  br label %637

637:                                              ; preds = %631, %635
  %638 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 24, i32 0
  %639 = load i32, i32* %638, align 8
  %640 = icmp eq i32 %639, -1
  br i1 %640, label %643, label %641

641:                                              ; preds = %637
  %642 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 2, i32 17, i32 0, i64 0
  call void @_ZN2gl7Program13setUniform1ivEPNS_7ContextENS_15UniformLocationEiPKi(%"class.gl::Program"* %115, %"class.gl::Context"* %2, i32 %639, i32 4, i32* %642) #13
  br label %643

643:                                              ; preds = %637, %641
  %644 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 25, i32 0
  %645 = load i32, i32* %644, align 4
  %646 = icmp eq i32 %645, -1
  br i1 %646, label %649, label %647

647:                                              ; preds = %643
  %648 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 2, i32 18, i32 0, i64 0, i64 0
  call void @_ZN2gl7Program13setUniform4fvENS_15UniformLocationEiPKf(%"class.gl::Program"* %115, i32 %645, i32 4, float* %648) #13
  br label %649

649:                                              ; preds = %643, %647
  %650 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 26, i32 0
  %651 = load i32, i32* %650, align 8
  %652 = icmp eq i32 %651, -1
  br i1 %652, label %655, label %653

653:                                              ; preds = %649
  %654 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 2, i32 19, i32 0, i64 0
  call void @_ZN2gl7Program13setUniform1fvENS_15UniformLocationEiPKf(%"class.gl::Program"* %115, i32 %651, i32 4, float* %654) #13
  br label %655

655:                                              ; preds = %649, %653
  %656 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 27, i32 0
  %657 = load i32, i32* %656, align 4
  %658 = icmp eq i32 %657, -1
  br i1 %658, label %661, label %659

659:                                              ; preds = %655
  %660 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 2, i32 20, i32 0, i64 0
  call void @_ZN2gl7Program13setUniform1fvENS_15UniformLocationEiPKf(%"class.gl::Program"* %115, i32 %657, i32 4, float* %660) #13
  br label %661

661:                                              ; preds = %655, %659
  %662 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 28, i32 0
  %663 = load i32, i32* %662, align 8
  %664 = icmp eq i32 %663, -1
  br i1 %664, label %767, label %665

665:                                              ; preds = %661
  %666 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 2, i32 21, i32 0, i64 0
  call void @_ZN2gl7Program13setUniform1ivEPNS_7ContextENS_15UniformLocationEiPKi(%"class.gl::Program"* %115, %"class.gl::Context"* %2, i32 %663, i32 4, i32* %666) #13
  br label %767

667:                                              ; preds = %551, %667
  %668 = phi i64 [ %765, %667 ], [ 0, %551 ]
  %669 = trunc i64 %668 to i32
  %670 = call dereferenceable(44) %"struct.gl::TextureEnvironmentParameters"* @_ZN2gl10GLES1State18textureEnvironmentEj(%"class.gl::GLES1State"* %35, i32 %669) #13
  %671 = getelementptr inbounds %"struct.gl::TextureEnvironmentParameters", %"struct.gl::TextureEnvironmentParameters"* %670, i64 0, i32 0
  %672 = load i8, i8* %671, align 4
  %673 = call i32 @_ZN2gl8ToGLenumENS_14TextureEnvModeE(i8 zeroext %672) #13
  %674 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 2, i32 3, i32 0, i64 %668
  store i32 %673, i32* %674, align 4
  %675 = getelementptr inbounds %"struct.gl::TextureEnvironmentParameters", %"struct.gl::TextureEnvironmentParameters"* %670, i64 0, i32 1
  %676 = load i8, i8* %675, align 1
  %677 = call i32 @_ZN2gl8ToGLenumENS_14TextureCombineE(i8 zeroext %676) #13
  %678 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 2, i32 4, i32 0, i64 %668
  store i32 %677, i32* %678, align 4
  %679 = getelementptr inbounds %"struct.gl::TextureEnvironmentParameters", %"struct.gl::TextureEnvironmentParameters"* %670, i64 0, i32 2
  %680 = load i8, i8* %679, align 2
  %681 = call i32 @_ZN2gl8ToGLenumENS_14TextureCombineE(i8 zeroext %680) #13
  %682 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 2, i32 5, i32 0, i64 %668
  store i32 %681, i32* %682, align 4
  %683 = getelementptr inbounds %"struct.gl::TextureEnvironmentParameters", %"struct.gl::TextureEnvironmentParameters"* %670, i64 0, i32 3
  %684 = load i8, i8* %683, align 1
  %685 = call i32 @_ZN2gl8ToGLenumENS_10TextureSrcE(i8 zeroext %684) #13
  %686 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 2, i32 6, i32 0, i64 %668
  store i32 %685, i32* %686, align 4
  %687 = getelementptr inbounds %"struct.gl::TextureEnvironmentParameters", %"struct.gl::TextureEnvironmentParameters"* %670, i64 0, i32 4
  %688 = load i8, i8* %687, align 4
  %689 = call i32 @_ZN2gl8ToGLenumENS_10TextureSrcE(i8 zeroext %688) #13
  %690 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 2, i32 7, i32 0, i64 %668
  store i32 %689, i32* %690, align 4
  %691 = getelementptr inbounds %"struct.gl::TextureEnvironmentParameters", %"struct.gl::TextureEnvironmentParameters"* %670, i64 0, i32 5
  %692 = load i8, i8* %691, align 1
  %693 = call i32 @_ZN2gl8ToGLenumENS_10TextureSrcE(i8 zeroext %692) #13
  %694 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 2, i32 8, i32 0, i64 %668
  store i32 %693, i32* %694, align 4
  %695 = getelementptr inbounds %"struct.gl::TextureEnvironmentParameters", %"struct.gl::TextureEnvironmentParameters"* %670, i64 0, i32 6
  %696 = load i8, i8* %695, align 2
  %697 = call i32 @_ZN2gl8ToGLenumENS_10TextureSrcE(i8 zeroext %696) #13
  %698 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 2, i32 9, i32 0, i64 %668
  store i32 %697, i32* %698, align 4
  %699 = getelementptr inbounds %"struct.gl::TextureEnvironmentParameters", %"struct.gl::TextureEnvironmentParameters"* %670, i64 0, i32 7
  %700 = load i8, i8* %699, align 1
  %701 = call i32 @_ZN2gl8ToGLenumENS_10TextureSrcE(i8 zeroext %700) #13
  %702 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 2, i32 10, i32 0, i64 %668
  store i32 %701, i32* %702, align 4
  %703 = getelementptr inbounds %"struct.gl::TextureEnvironmentParameters", %"struct.gl::TextureEnvironmentParameters"* %670, i64 0, i32 8
  %704 = load i8, i8* %703, align 4
  %705 = call i32 @_ZN2gl8ToGLenumENS_10TextureSrcE(i8 zeroext %704) #13
  %706 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 2, i32 11, i32 0, i64 %668
  store i32 %705, i32* %706, align 4
  %707 = getelementptr inbounds %"struct.gl::TextureEnvironmentParameters", %"struct.gl::TextureEnvironmentParameters"* %670, i64 0, i32 9
  %708 = load i8, i8* %707, align 1
  %709 = call i32 @_ZN2gl8ToGLenumENS_9TextureOpE(i8 zeroext %708) #13
  %710 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 2, i32 12, i32 0, i64 %668
  store i32 %709, i32* %710, align 4
  %711 = getelementptr inbounds %"struct.gl::TextureEnvironmentParameters", %"struct.gl::TextureEnvironmentParameters"* %670, i64 0, i32 10
  %712 = load i8, i8* %711, align 2
  %713 = call i32 @_ZN2gl8ToGLenumENS_9TextureOpE(i8 zeroext %712) #13
  %714 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 2, i32 13, i32 0, i64 %668
  store i32 %713, i32* %714, align 4
  %715 = getelementptr inbounds %"struct.gl::TextureEnvironmentParameters", %"struct.gl::TextureEnvironmentParameters"* %670, i64 0, i32 11
  %716 = load i8, i8* %715, align 1
  %717 = call i32 @_ZN2gl8ToGLenumENS_9TextureOpE(i8 zeroext %716) #13
  %718 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 2, i32 14, i32 0, i64 %668
  store i32 %717, i32* %718, align 4
  %719 = getelementptr inbounds %"struct.gl::TextureEnvironmentParameters", %"struct.gl::TextureEnvironmentParameters"* %670, i64 0, i32 12
  %720 = load i8, i8* %719, align 4
  %721 = call i32 @_ZN2gl8ToGLenumENS_9TextureOpE(i8 zeroext %720) #13
  %722 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 2, i32 15, i32 0, i64 %668
  store i32 %721, i32* %722, align 4
  %723 = getelementptr inbounds %"struct.gl::TextureEnvironmentParameters", %"struct.gl::TextureEnvironmentParameters"* %670, i64 0, i32 13
  %724 = load i8, i8* %723, align 1
  %725 = call i32 @_ZN2gl8ToGLenumENS_9TextureOpE(i8 zeroext %724) #13
  %726 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 2, i32 16, i32 0, i64 %668
  store i32 %725, i32* %726, align 4
  %727 = getelementptr inbounds %"struct.gl::TextureEnvironmentParameters", %"struct.gl::TextureEnvironmentParameters"* %670, i64 0, i32 14
  %728 = load i8, i8* %727, align 2
  %729 = call i32 @_ZN2gl8ToGLenumENS_9TextureOpE(i8 zeroext %728) #13
  %730 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 2, i32 17, i32 0, i64 %668
  store i32 %729, i32* %730, align 4
  %731 = getelementptr inbounds %"struct.gl::TextureEnvironmentParameters", %"struct.gl::TextureEnvironmentParameters"* %670, i64 0, i32 16
  %732 = bitcast %"struct.angle::Color"* %731 to i32*
  %733 = load i32, i32* %732, align 4
  %734 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 2, i32 18, i32 0, i64 %668
  %735 = bitcast [4 x float]* %734 to i32*
  store i32 %733, i32* %735, align 4
  %736 = getelementptr inbounds %"struct.gl::TextureEnvironmentParameters", %"struct.gl::TextureEnvironmentParameters"* %670, i64 0, i32 16, i32 1
  %737 = bitcast float* %736 to i32*
  %738 = load i32, i32* %737, align 4
  %739 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 2, i32 18, i32 0, i64 %668, i64 1
  %740 = bitcast float* %739 to i32*
  store i32 %738, i32* %740, align 4
  %741 = getelementptr inbounds %"struct.gl::TextureEnvironmentParameters", %"struct.gl::TextureEnvironmentParameters"* %670, i64 0, i32 16, i32 2
  %742 = bitcast float* %741 to i32*
  %743 = load i32, i32* %742, align 4
  %744 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 2, i32 18, i32 0, i64 %668, i64 2
  %745 = bitcast float* %744 to i32*
  store i32 %743, i32* %745, align 4
  %746 = getelementptr inbounds %"struct.gl::TextureEnvironmentParameters", %"struct.gl::TextureEnvironmentParameters"* %670, i64 0, i32 16, i32 3
  %747 = bitcast float* %746 to i32*
  %748 = load i32, i32* %747, align 4
  %749 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 2, i32 18, i32 0, i64 %668, i64 3
  %750 = bitcast float* %749 to i32*
  store i32 %748, i32* %750, align 4
  %751 = getelementptr inbounds %"struct.gl::TextureEnvironmentParameters", %"struct.gl::TextureEnvironmentParameters"* %670, i64 0, i32 17
  %752 = bitcast float* %751 to i32*
  %753 = load i32, i32* %752, align 4
  %754 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 2, i32 19, i32 0, i64 %668
  %755 = bitcast float* %754 to i32*
  store i32 %753, i32* %755, align 4
  %756 = getelementptr inbounds %"struct.gl::TextureEnvironmentParameters", %"struct.gl::TextureEnvironmentParameters"* %670, i64 0, i32 18
  %757 = bitcast float* %756 to i32*
  %758 = load i32, i32* %757, align 4
  %759 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 2, i32 20, i32 0, i64 %668
  %760 = bitcast float* %759 to i32*
  store i32 %758, i32* %760, align 4
  %761 = getelementptr inbounds %"struct.gl::TextureEnvironmentParameters", %"struct.gl::TextureEnvironmentParameters"* %670, i64 0, i32 19
  %762 = load i8, i8* %761, align 4, !range !2
  %763 = zext i8 %762 to i32
  %764 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 2, i32 21, i32 0, i64 %668
  store i32 %763, i32* %764, align 4
  %765 = add nuw nsw i64 %668, 1
  %766 = icmp eq i64 %765, 4
  br i1 %766, label %553, label %667

767:                                              ; preds = %665, %661, %551
  %768 = call zeroext i1 @_ZNK2gl10GLES1State7isDirtyENS0_14DirtyGles1TypeE(%"class.gl::GLES1State"* %35, i32 12) #13
  br i1 %768, label %769, label %789

769:                                              ; preds = %767
  %770 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 30, i32 0
  %771 = load i32, i32* %770, align 8
  %772 = getelementptr inbounds %"class.gl::State", %"class.gl::State"* %3, i64 0, i32 103, i32 38
  %773 = load i8, i8* %772, align 8
  %774 = call i32 @_ZN2gl8ToGLenumENS_13AlphaTestFuncE(i8 zeroext %773) #13
  %775 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %775)
  store i32 %774, i32* %5, align 4
  %776 = icmp eq i32 %771, -1
  br i1 %776, label %778, label %777

777:                                              ; preds = %769
  call void @_ZN2gl7Program13setUniform1ivEPNS_7ContextENS_15UniformLocationEiPKi(%"class.gl::Program"* %115, %"class.gl::Context"* %2, i32 %771, i32 1, i32* nonnull %5) #13
  br label %778

778:                                              ; preds = %769, %777
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %775)
  %779 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 31, i32 0
  %780 = load i32, i32* %779, align 4
  %781 = getelementptr inbounds %"class.gl::State", %"class.gl::State"* %3, i64 0, i32 103, i32 40
  %782 = bitcast float* %781 to i32*
  %783 = load i32, i32* %782, align 4
  %784 = bitcast float* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %784)
  %785 = bitcast float* %6 to i32*
  store i32 %783, i32* %785, align 4
  %786 = icmp eq i32 %780, -1
  br i1 %786, label %788, label %787

787:                                              ; preds = %778
  call void @_ZN2gl7Program13setUniform1fvENS_15UniformLocationEiPKf(%"class.gl::Program"* %115, i32 %780, i32 1, float* nonnull %6) #13
  br label %788

788:                                              ; preds = %778, %787
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %784)
  br label %789

789:                                              ; preds = %788, %767
  %790 = call zeroext i1 @_ZNK2gl10GLES1State7isDirtyENS0_14DirtyGles1TypeE(%"class.gl::GLES1State"* %35, i32 10) #13
  br i1 %790, label %791, label %802

791:                                              ; preds = %789
  %792 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 32, i32 0
  %793 = load i32, i32* %792, align 8
  %794 = getelementptr inbounds %"class.gl::State", %"class.gl::State"* %3, i64 0, i32 103, i32 35
  %795 = load i8, i8* %794, align 8
  %796 = icmp eq i8 %795, 0
  %797 = zext i1 %796 to i32
  %798 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %798)
  store i32 %797, i32* %7, align 4
  %799 = icmp eq i32 %793, -1
  br i1 %799, label %801, label %800

800:                                              ; preds = %791
  call void @_ZN2gl7Program13setUniform1ivEPNS_7ContextENS_15UniformLocationEiPKi(%"class.gl::Program"* %115, %"class.gl::Context"* %2, i32 %793, i32 1, i32* nonnull %7) #13
  br label %801

801:                                              ; preds = %791, %800
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %798)
  br label %802

802:                                              ; preds = %801, %789
  %803 = call zeroext i1 @_ZNK2gl10GLES1State7isDirtyENS0_14DirtyGles1TypeE(%"class.gl::GLES1State"* %35, i32 7) #13
  br i1 %803, label %804, label %839

804:                                              ; preds = %802
  %805 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 37, i32 0
  %806 = load i32, i32* %805, align 4
  %807 = icmp eq i32 %806, -1
  br i1 %807, label %810, label %808

808:                                              ; preds = %804
  %809 = getelementptr inbounds %"class.gl::State", %"class.gl::State"* %3, i64 0, i32 103, i32 31, i32 0, i32 0
  call void @_ZN2gl7Program13setUniform4fvENS_15UniformLocationEiPKf(%"class.gl::Program"* %115, i32 %806, i32 1, float* %809) #13
  br label %810

810:                                              ; preds = %804, %808
  %811 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 38, i32 0
  %812 = load i32, i32* %811, align 8
  %813 = icmp eq i32 %812, -1
  br i1 %813, label %816, label %814

814:                                              ; preds = %810
  %815 = getelementptr inbounds %"class.gl::State", %"class.gl::State"* %3, i64 0, i32 103, i32 31, i32 1, i32 0
  call void @_ZN2gl7Program13setUniform4fvENS_15UniformLocationEiPKf(%"class.gl::Program"* %115, i32 %812, i32 1, float* %815) #13
  br label %816

816:                                              ; preds = %810, %814
  %817 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 39, i32 0
  %818 = load i32, i32* %817, align 4
  %819 = icmp eq i32 %818, -1
  br i1 %819, label %822, label %820

820:                                              ; preds = %816
  %821 = getelementptr inbounds %"class.gl::State", %"class.gl::State"* %3, i64 0, i32 103, i32 31, i32 2, i32 0
  call void @_ZN2gl7Program13setUniform4fvENS_15UniformLocationEiPKf(%"class.gl::Program"* %115, i32 %818, i32 1, float* %821) #13
  br label %822

822:                                              ; preds = %816, %820
  %823 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 40, i32 0
  %824 = load i32, i32* %823, align 8
  %825 = icmp eq i32 %824, -1
  br i1 %825, label %828, label %826

826:                                              ; preds = %822
  %827 = getelementptr inbounds %"class.gl::State", %"class.gl::State"* %3, i64 0, i32 103, i32 31, i32 3, i32 0
  call void @_ZN2gl7Program13setUniform4fvENS_15UniformLocationEiPKf(%"class.gl::Program"* %115, i32 %824, i32 1, float* %827) #13
  br label %828

828:                                              ; preds = %822, %826
  %829 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 41, i32 0
  %830 = load i32, i32* %829, align 4
  %831 = getelementptr inbounds %"class.gl::State", %"class.gl::State"* %3, i64 0, i32 103, i32 31, i32 4
  %832 = bitcast float* %831 to i32*
  %833 = load i32, i32* %832, align 4
  %834 = bitcast float* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %834)
  %835 = bitcast float* %8 to i32*
  store i32 %833, i32* %835, align 4
  %836 = icmp eq i32 %830, -1
  br i1 %836, label %838, label %837

837:                                              ; preds = %828
  call void @_ZN2gl7Program13setUniform1fvENS_15UniformLocationEiPKf(%"class.gl::Program"* %115, i32 %830, i32 1, float* nonnull %8) #13
  br label %838

838:                                              ; preds = %828, %837
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %834)
  br label %839

839:                                              ; preds = %838, %802
  %840 = call zeroext i1 @_ZNK2gl10GLES1State7isDirtyENS0_14DirtyGles1TypeE(%"class.gl::GLES1State"* %35, i32 8) #13
  br i1 %840, label %841, label %969

841:                                              ; preds = %839
  %842 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 42, i32 0
  %843 = load i32, i32* %842, align 8
  %844 = icmp eq i32 %843, -1
  br i1 %844, label %847, label %845

845:                                              ; preds = %841
  %846 = getelementptr inbounds %"class.gl::State", %"class.gl::State"* %3, i64 0, i32 103, i32 32, i32 0, i32 0
  call void @_ZN2gl7Program13setUniform4fvENS_15UniformLocationEiPKf(%"class.gl::Program"* %115, i32 %843, i32 1, float* %846) #13
  br label %847

847:                                              ; preds = %841, %845
  %848 = getelementptr inbounds %"class.gl::State", %"class.gl::State"* %3, i64 0, i32 103, i32 33, i32 0, i32 0
  br label %915

849:                                              ; preds = %915
  %850 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 44, i32 0
  %851 = load i32, i32* %850, align 8
  %852 = icmp eq i32 %851, -1
  br i1 %852, label %855, label %853

853:                                              ; preds = %849
  %854 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 2, i32 22, i32 0, i64 0
  call void @_ZN2gl7Program13setUniform1ivEPNS_7ContextENS_15UniformLocationEiPKi(%"class.gl::Program"* %115, %"class.gl::Context"* %2, i32 %851, i32 8, i32* %854) #13
  br label %855

855:                                              ; preds = %849, %853
  %856 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 45, i32 0
  %857 = load i32, i32* %856, align 4
  %858 = icmp eq i32 %857, -1
  br i1 %858, label %861, label %859

859:                                              ; preds = %855
  %860 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 2, i32 23, i32 0, i64 0, i64 0
  call void @_ZN2gl7Program13setUniform4fvENS_15UniformLocationEiPKf(%"class.gl::Program"* %115, i32 %857, i32 8, float* %860) #13
  br label %861

861:                                              ; preds = %855, %859
  %862 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 46, i32 0
  %863 = load i32, i32* %862, align 8
  %864 = icmp eq i32 %863, -1
  br i1 %864, label %867, label %865

865:                                              ; preds = %861
  %866 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 2, i32 24, i32 0, i64 0, i64 0
  call void @_ZN2gl7Program13setUniform4fvENS_15UniformLocationEiPKf(%"class.gl::Program"* %115, i32 %863, i32 8, float* %866) #13
  br label %867

867:                                              ; preds = %861, %865
  %868 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 47, i32 0
  %869 = load i32, i32* %868, align 4
  %870 = icmp eq i32 %869, -1
  br i1 %870, label %873, label %871

871:                                              ; preds = %867
  %872 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 2, i32 25, i32 0, i64 0, i64 0
  call void @_ZN2gl7Program13setUniform4fvENS_15UniformLocationEiPKf(%"class.gl::Program"* %115, i32 %869, i32 8, float* %872) #13
  br label %873

873:                                              ; preds = %867, %871
  %874 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 48, i32 0
  %875 = load i32, i32* %874, align 8
  %876 = icmp eq i32 %875, -1
  br i1 %876, label %879, label %877

877:                                              ; preds = %873
  %878 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 2, i32 26, i32 0, i64 0, i64 0
  call void @_ZN2gl7Program13setUniform4fvENS_15UniformLocationEiPKf(%"class.gl::Program"* %115, i32 %875, i32 8, float* %878) #13
  br label %879

879:                                              ; preds = %873, %877
  %880 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 49, i32 0
  %881 = load i32, i32* %880, align 4
  %882 = icmp eq i32 %881, -1
  br i1 %882, label %885, label %883

883:                                              ; preds = %879
  %884 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 2, i32 27, i32 0, i64 0, i64 0
  call void @_ZN2gl7Program13setUniform3fvENS_15UniformLocationEiPKf(%"class.gl::Program"* %115, i32 %881, i32 8, float* %884) #13
  br label %885

885:                                              ; preds = %879, %883
  %886 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 50, i32 0
  %887 = load i32, i32* %886, align 8
  %888 = icmp eq i32 %887, -1
  br i1 %888, label %891, label %889

889:                                              ; preds = %885
  %890 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 2, i32 28, i32 0, i64 0
  call void @_ZN2gl7Program13setUniform1fvENS_15UniformLocationEiPKf(%"class.gl::Program"* %115, i32 %887, i32 8, float* %890) #13
  br label %891

891:                                              ; preds = %885, %889
  %892 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 51, i32 0
  %893 = load i32, i32* %892, align 4
  %894 = icmp eq i32 %893, -1
  br i1 %894, label %897, label %895

895:                                              ; preds = %891
  %896 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 2, i32 29, i32 0, i64 0
  call void @_ZN2gl7Program13setUniform1fvENS_15UniformLocationEiPKf(%"class.gl::Program"* %115, i32 %893, i32 8, float* %896) #13
  br label %897

897:                                              ; preds = %891, %895
  %898 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 52, i32 0
  %899 = load i32, i32* %898, align 8
  %900 = icmp eq i32 %899, -1
  br i1 %900, label %903, label %901

901:                                              ; preds = %897
  %902 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 2, i32 30, i32 0, i64 0
  call void @_ZN2gl7Program13setUniform1fvENS_15UniformLocationEiPKf(%"class.gl::Program"* %115, i32 %899, i32 8, float* %902) #13
  br label %903

903:                                              ; preds = %897, %901
  %904 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 53, i32 0
  %905 = load i32, i32* %904, align 4
  %906 = icmp eq i32 %905, -1
  br i1 %906, label %909, label %907

907:                                              ; preds = %903
  %908 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 2, i32 31, i32 0, i64 0
  call void @_ZN2gl7Program13setUniform1fvENS_15UniformLocationEiPKf(%"class.gl::Program"* %115, i32 %905, i32 8, float* %908) #13
  br label %909

909:                                              ; preds = %903, %907
  %910 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 54, i32 0
  %911 = load i32, i32* %910, align 8
  %912 = icmp eq i32 %911, -1
  br i1 %912, label %969, label %913

913:                                              ; preds = %909
  %914 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 2, i32 32, i32 0, i64 0
  call void @_ZN2gl7Program13setUniform1fvENS_15UniformLocationEiPKf(%"class.gl::Program"* %115, i32 %911, i32 8, float* %914) #13
  br label %969

915:                                              ; preds = %915, %847
  %916 = phi i64 [ 0, %847 ], [ %967, %915 ]
  %917 = load %"struct.gl::LightParameters"*, %"struct.gl::LightParameters"** %848, align 8
  %918 = getelementptr inbounds %"struct.gl::LightParameters", %"struct.gl::LightParameters"* %917, i64 %916, i32 0
  %919 = load i8, i8* %918, align 4, !range !2
  %920 = zext i8 %919 to i32
  %921 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 2, i32 22, i32 0, i64 %916
  store i32 %920, i32* %921, align 4
  %922 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 2, i32 23, i32 0, i64 %916
  %923 = bitcast [4 x float]* %922 to i8*
  %924 = getelementptr inbounds %"struct.gl::LightParameters", %"struct.gl::LightParameters"* %917, i64 %916, i32 1, i32 0
  %925 = bitcast float* %924 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %923, i8* align 4 %925, i64 16, i1 false)
  %926 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 2, i32 24, i32 0, i64 %916
  %927 = bitcast [4 x float]* %926 to i8*
  %928 = getelementptr inbounds %"struct.gl::LightParameters", %"struct.gl::LightParameters"* %917, i64 %916, i32 2, i32 0
  %929 = bitcast float* %928 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %927, i8* align 4 %929, i64 16, i1 false)
  %930 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 2, i32 25, i32 0, i64 %916
  %931 = bitcast [4 x float]* %930 to i8*
  %932 = getelementptr inbounds %"struct.gl::LightParameters", %"struct.gl::LightParameters"* %917, i64 %916, i32 3, i32 0
  %933 = bitcast float* %932 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %931, i8* align 4 %933, i64 16, i1 false)
  %934 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 2, i32 26, i32 0, i64 %916
  %935 = bitcast [4 x float]* %934 to i8*
  %936 = getelementptr inbounds %"struct.gl::LightParameters", %"struct.gl::LightParameters"* %917, i64 %916, i32 4, i32 0, i32 0, i64 0
  %937 = bitcast float* %936 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %935, i8* align 4 %937, i64 16, i1 false)
  %938 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 2, i32 27, i32 0, i64 %916
  %939 = bitcast [3 x float]* %938 to i8*
  %940 = getelementptr inbounds %"struct.gl::LightParameters", %"struct.gl::LightParameters"* %917, i64 %916, i32 5, i32 0, i32 0, i64 0
  %941 = bitcast float* %940 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %939, i8* align 4 %941, i64 12, i1 false)
  %942 = getelementptr inbounds %"struct.gl::LightParameters", %"struct.gl::LightParameters"* %917, i64 %916, i32 6
  %943 = bitcast float* %942 to i32*
  %944 = load i32, i32* %943, align 4
  %945 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 2, i32 28, i32 0, i64 %916
  %946 = bitcast float* %945 to i32*
  store i32 %944, i32* %946, align 4
  %947 = getelementptr inbounds %"struct.gl::LightParameters", %"struct.gl::LightParameters"* %917, i64 %916, i32 7
  %948 = bitcast float* %947 to i32*
  %949 = load i32, i32* %948, align 4
  %950 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 2, i32 29, i32 0, i64 %916
  %951 = bitcast float* %950 to i32*
  store i32 %949, i32* %951, align 4
  %952 = getelementptr inbounds %"struct.gl::LightParameters", %"struct.gl::LightParameters"* %917, i64 %916, i32 8
  %953 = bitcast float* %952 to i32*
  %954 = load i32, i32* %953, align 4
  %955 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 2, i32 30, i32 0, i64 %916
  %956 = bitcast float* %955 to i32*
  store i32 %954, i32* %956, align 4
  %957 = getelementptr inbounds %"struct.gl::LightParameters", %"struct.gl::LightParameters"* %917, i64 %916, i32 9
  %958 = bitcast float* %957 to i32*
  %959 = load i32, i32* %958, align 4
  %960 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 2, i32 31, i32 0, i64 %916
  %961 = bitcast float* %960 to i32*
  store i32 %959, i32* %961, align 4
  %962 = getelementptr inbounds %"struct.gl::LightParameters", %"struct.gl::LightParameters"* %917, i64 %916, i32 10
  %963 = bitcast float* %962 to i32*
  %964 = load i32, i32* %963, align 4
  %965 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 2, i32 32, i32 0, i64 %916
  %966 = bitcast float* %965 to i32*
  store i32 %964, i32* %966, align 4
  %967 = add nuw nsw i64 %916, 1
  %968 = icmp eq i64 %967, 8
  br i1 %968, label %849, label %915

969:                                              ; preds = %913, %909, %839
  %970 = call zeroext i1 @_ZNK2gl10GLES1State7isDirtyENS0_14DirtyGles1TypeE(%"class.gl::GLES1State"* %35, i32 9) #13
  br i1 %970, label %971, label %1017

971:                                              ; preds = %969
  %972 = call dereferenceable(32) %"struct.gl::FogParameters"* @_ZN2gl10GLES1State13fogParametersEv(%"class.gl::GLES1State"* %35) #13
  %973 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 56, i32 0
  %974 = load i32, i32* %973, align 8
  %975 = getelementptr inbounds %"struct.gl::FogParameters", %"struct.gl::FogParameters"* %972, i64 0, i32 0
  %976 = load i8, i8* %975, align 4
  %977 = call i32 @_ZN2gl8ToGLenumENS_7FogModeE(i8 zeroext %976) #13
  %978 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %978)
  store i32 %977, i32* %9, align 4
  %979 = icmp eq i32 %974, -1
  br i1 %979, label %981, label %980

980:                                              ; preds = %971
  call void @_ZN2gl7Program13setUniform1ivEPNS_7ContextENS_15UniformLocationEiPKi(%"class.gl::Program"* %115, %"class.gl::Context"* %2, i32 %974, i32 1, i32* nonnull %9) #13
  br label %981

981:                                              ; preds = %971, %980
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %978)
  %982 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 57, i32 0
  %983 = load i32, i32* %982, align 4
  %984 = getelementptr inbounds %"struct.gl::FogParameters", %"struct.gl::FogParameters"* %972, i64 0, i32 1
  %985 = bitcast float* %984 to i32*
  %986 = load i32, i32* %985, align 4
  %987 = bitcast float* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %987)
  %988 = bitcast float* %10 to i32*
  store i32 %986, i32* %988, align 4
  %989 = icmp eq i32 %983, -1
  br i1 %989, label %991, label %990

990:                                              ; preds = %981
  call void @_ZN2gl7Program13setUniform1fvENS_15UniformLocationEiPKf(%"class.gl::Program"* %115, i32 %983, i32 1, float* nonnull %10) #13
  br label %991

991:                                              ; preds = %981, %990
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %987)
  %992 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 58, i32 0
  %993 = load i32, i32* %992, align 8
  %994 = getelementptr inbounds %"struct.gl::FogParameters", %"struct.gl::FogParameters"* %972, i64 0, i32 2
  %995 = bitcast float* %994 to i32*
  %996 = load i32, i32* %995, align 4
  %997 = bitcast float* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %997)
  %998 = bitcast float* %11 to i32*
  store i32 %996, i32* %998, align 4
  %999 = icmp eq i32 %993, -1
  br i1 %999, label %1001, label %1000

1000:                                             ; preds = %991
  call void @_ZN2gl7Program13setUniform1fvENS_15UniformLocationEiPKf(%"class.gl::Program"* %115, i32 %993, i32 1, float* nonnull %11) #13
  br label %1001

1001:                                             ; preds = %991, %1000
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %997)
  %1002 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 59, i32 0
  %1003 = load i32, i32* %1002, align 4
  %1004 = getelementptr inbounds %"struct.gl::FogParameters", %"struct.gl::FogParameters"* %972, i64 0, i32 3
  %1005 = bitcast float* %1004 to i32*
  %1006 = load i32, i32* %1005, align 4
  %1007 = bitcast float* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1007)
  %1008 = bitcast float* %12 to i32*
  store i32 %1006, i32* %1008, align 4
  %1009 = icmp eq i32 %1003, -1
  br i1 %1009, label %1011, label %1010

1010:                                             ; preds = %1001
  call void @_ZN2gl7Program13setUniform1fvENS_15UniformLocationEiPKf(%"class.gl::Program"* %115, i32 %1003, i32 1, float* nonnull %12) #13
  br label %1011

1011:                                             ; preds = %1001, %1010
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1007)
  %1012 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 60, i32 0
  %1013 = load i32, i32* %1012, align 8
  %1014 = icmp eq i32 %1013, -1
  br i1 %1014, label %1017, label %1015

1015:                                             ; preds = %1011
  %1016 = getelementptr inbounds %"struct.gl::FogParameters", %"struct.gl::FogParameters"* %972, i64 0, i32 4, i32 0
  call void @_ZN2gl7Program13setUniform4fvENS_15UniformLocationEiPKf(%"class.gl::Program"* %115, i32 %1013, i32 1, float* %1016) #13
  br label %1017

1017:                                             ; preds = %1015, %1011, %969
  %1018 = call zeroext i1 @_ZNK2gl10GLES1State7isDirtyENS0_14DirtyGles1TypeE(%"class.gl::GLES1State"* %35, i32 14) #13
  br i1 %1018, label %1019, label %1058

1019:                                             ; preds = %1017
  %1020 = call zeroext i1 @_ZNK2gl5State16getEnableFeatureEj(%"class.gl::State"* %3, i32 12288) #13
  %1021 = zext i1 %1020 to i32
  store i32 %1021, i32* %166, align 4
  %1022 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 2, i32 34, i32 0, i64 0, i64 0
  call void @_ZNK2gl10GLES1State12getClipPlaneEjPf(%"class.gl::GLES1State"* %35, i32 0, float* %1022) #13
  %1023 = call zeroext i1 @_ZNK2gl5State16getEnableFeatureEj(%"class.gl::State"* %3, i32 12289) #13
  %1024 = zext i1 %1023 to i32
  store i32 %1024, i32* %169, align 4
  %1025 = or i1 %1020, %1023
  %1026 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 2, i32 34, i32 0, i64 1, i64 0
  call void @_ZNK2gl10GLES1State12getClipPlaneEjPf(%"class.gl::GLES1State"* %35, i32 1, float* %1026) #13
  %1027 = call zeroext i1 @_ZNK2gl5State16getEnableFeatureEj(%"class.gl::State"* %3, i32 12290) #13
  %1028 = zext i1 %1027 to i32
  store i32 %1028, i32* %173, align 4
  %1029 = or i1 %1025, %1027
  %1030 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 2, i32 34, i32 0, i64 2, i64 0
  call void @_ZNK2gl10GLES1State12getClipPlaneEjPf(%"class.gl::GLES1State"* %35, i32 2, float* %1030) #13
  %1031 = call zeroext i1 @_ZNK2gl5State16getEnableFeatureEj(%"class.gl::State"* %3, i32 12291) #13
  %1032 = zext i1 %1031 to i32
  store i32 %1032, i32* %177, align 4
  %1033 = or i1 %1029, %1031
  %1034 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 2, i32 34, i32 0, i64 3, i64 0
  call void @_ZNK2gl10GLES1State12getClipPlaneEjPf(%"class.gl::GLES1State"* %35, i32 3, float* %1034) #13
  %1035 = call zeroext i1 @_ZNK2gl5State16getEnableFeatureEj(%"class.gl::State"* %3, i32 12292) #13
  %1036 = zext i1 %1035 to i32
  store i32 %1036, i32* %181, align 4
  %1037 = or i1 %1033, %1035
  %1038 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 2, i32 34, i32 0, i64 4, i64 0
  call void @_ZNK2gl10GLES1State12getClipPlaneEjPf(%"class.gl::GLES1State"* %35, i32 4, float* %1038) #13
  %1039 = call zeroext i1 @_ZNK2gl5State16getEnableFeatureEj(%"class.gl::State"* %3, i32 12293) #13
  %1040 = zext i1 %1039 to i32
  store i32 %1040, i32* %185, align 4
  %1041 = or i1 %1037, %1039
  %1042 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 2, i32 34, i32 0, i64 5, i64 0
  call void @_ZNK2gl10GLES1State12getClipPlaneEjPf(%"class.gl::GLES1State"* %35, i32 5, float* %1042) #13
  %1043 = load i32, i32* %187, align 4
  %1044 = zext i1 %1041 to i32
  %1045 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1045)
  store i32 %1044, i32* %13, align 4
  %1046 = icmp eq i32 %1043, -1
  br i1 %1046, label %1048, label %1047

1047:                                             ; preds = %1019
  call void @_ZN2gl7Program13setUniform1ivEPNS_7ContextENS_15UniformLocationEiPKi(%"class.gl::Program"* %115, %"class.gl::Context"* %2, i32 %1043, i32 1, i32* nonnull %13) #13
  br label %1048

1048:                                             ; preds = %1019, %1047
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1045)
  %1049 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 62, i32 0
  %1050 = load i32, i32* %1049, align 8
  %1051 = icmp eq i32 %1050, -1
  br i1 %1051, label %1053, label %1052

1052:                                             ; preds = %1048
  call void @_ZN2gl7Program13setUniform1ivEPNS_7ContextENS_15UniformLocationEiPKi(%"class.gl::Program"* %115, %"class.gl::Context"* %2, i32 %1050, i32 6, i32* %166) #13
  br label %1053

1053:                                             ; preds = %1048, %1052
  %1054 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 63, i32 0
  %1055 = load i32, i32* %1054, align 4
  %1056 = icmp eq i32 %1055, -1
  br i1 %1056, label %1058, label %1057

1057:                                             ; preds = %1053
  call void @_ZN2gl7Program13setUniform4fvENS_15UniformLocationEiPKf(%"class.gl::Program"* %115, i32 %1055, i32 6, float* %1022) #13
  br label %1058

1058:                                             ; preds = %1057, %1053, %1017
  %1059 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 64, i32 0
  %1060 = load i32, i32* %1059, align 8
  %1061 = icmp eq i8 %1, 0
  %1062 = zext i1 %1061 to i32
  %1063 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1063)
  store i32 %1062, i32* %14, align 4
  %1064 = icmp eq i32 %1060, -1
  br i1 %1064, label %1066, label %1065

1065:                                             ; preds = %1058
  call void @_ZN2gl7Program13setUniform1ivEPNS_7ContextENS_15UniformLocationEiPKi(%"class.gl::Program"* %115, %"class.gl::Context"* %2, i32 %1060, i32 1, i32* nonnull %14) #13
  br label %1066

1066:                                             ; preds = %1058, %1065
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1063)
  %1067 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 68, i32 0
  %1068 = load i32, i32* %1067, align 8
  %1069 = call zeroext i1 @_ZNK2gl5State16getEnableFeatureEj(%"class.gl::State"* %3, i32 34913) #13
  %1070 = zext i1 %1069 to i32
  %1071 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1071)
  store i32 %1070, i32* %15, align 4
  %1072 = icmp eq i32 %1068, -1
  br i1 %1072, label %1074, label %1073

1073:                                             ; preds = %1066
  call void @_ZN2gl7Program13setUniform1ivEPNS_7ContextENS_15UniformLocationEiPKi(%"class.gl::Program"* %115, %"class.gl::Context"* %2, i32 %1068, i32 1, i32* nonnull %15) #13
  br label %1074

1074:                                             ; preds = %1066, %1073
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1071)
  %1075 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 65, i32 0
  %1076 = load i32, i32* %1075, align 4
  %1077 = getelementptr inbounds %"class.gl::State", %"class.gl::State"* %3, i64 0, i32 103, i32 37, i32 0
  %1078 = bitcast float* %1077 to i32*
  %1079 = load i32, i32* %1078, align 4
  %1080 = bitcast float* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1080)
  %1081 = bitcast float* %16 to i32*
  store i32 %1079, i32* %1081, align 4
  %1082 = icmp eq i32 %1076, -1
  br i1 %1082, label %1084, label %1083

1083:                                             ; preds = %1074
  call void @_ZN2gl7Program13setUniform1fvENS_15UniformLocationEiPKf(%"class.gl::Program"* %115, i32 %1076, i32 1, float* nonnull %16) #13
  br label %1084

1084:                                             ; preds = %1074, %1083
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1080)
  %1085 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 66, i32 0
  %1086 = load i32, i32* %1085, align 8
  %1087 = getelementptr inbounds %"class.gl::State", %"class.gl::State"* %3, i64 0, i32 103, i32 37, i32 1
  %1088 = bitcast float* %1087 to i32*
  %1089 = load i32, i32* %1088, align 4
  %1090 = bitcast float* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1090)
  %1091 = bitcast float* %17 to i32*
  store i32 %1089, i32* %1091, align 4
  %1092 = icmp eq i32 %1086, -1
  br i1 %1092, label %1094, label %1093

1093:                                             ; preds = %1084
  call void @_ZN2gl7Program13setUniform1fvENS_15UniformLocationEiPKf(%"class.gl::Program"* %115, i32 %1086, i32 1, float* nonnull %17) #13
  br label %1094

1094:                                             ; preds = %1084, %1093
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1090)
  %1095 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 67, i32 0
  %1096 = load i32, i32* %1095, align 4
  %1097 = icmp eq i32 %1096, -1
  br i1 %1097, label %1100, label %1098

1098:                                             ; preds = %1094
  %1099 = getelementptr inbounds %"class.gl::State", %"class.gl::State"* %3, i64 0, i32 103, i32 37, i32 3, i32 0, i32 0, i64 0
  call void @_ZN2gl7Program13setUniform3fvENS_15UniformLocationEiPKf(%"class.gl::Program"* %115, i32 %1096, i32 1, float* %1099) #13
  br label %1100

1100:                                             ; preds = %1094, %1098
  %1101 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 69, i32 0
  %1102 = load i32, i32* %1101, align 4
  %1103 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 4
  %1104 = load i8, i8* %1103, align 4, !range !2
  %1105 = zext i8 %1104 to i32
  %1106 = bitcast i32* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1106)
  store i32 %1105, i32* %25, align 4
  %1107 = icmp eq i32 %1102, -1
  br i1 %1107, label %1109, label %1108

1108:                                             ; preds = %1100
  call void @_ZN2gl7Program13setUniform1ivEPNS_7ContextENS_15UniformLocationEiPKi(%"class.gl::Program"* %115, %"class.gl::Context"* %2, i32 %1102, i32 1, i32* nonnull %25) #13
  br label %1109

1109:                                             ; preds = %1100, %1108
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1106)
  %1110 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 70, i32 0
  %1111 = load i32, i32* %1110, align 8
  %1112 = icmp eq i32 %1111, -1
  br i1 %1112, label %1115, label %1113

1113:                                             ; preds = %1109
  %1114 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 5, i64 0
  call void @_ZN2gl7Program13setUniform4fvENS_15UniformLocationEiPKf(%"class.gl::Program"* %115, i32 %1111, i32 1, float* %1114) #13
  br label %1115

1115:                                             ; preds = %1109, %1113
  %1116 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 71, i32 0
  %1117 = load i32, i32* %1116, align 4
  %1118 = icmp eq i32 %1117, -1
  br i1 %1118, label %1121, label %1119

1119:                                             ; preds = %1115
  %1120 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 6, i64 0
  call void @_ZN2gl7Program13setUniform2fvENS_15UniformLocationEiPKf(%"class.gl::Program"* %115, i32 %1117, i32 1, float* %1120) #13
  br label %1121

1121:                                             ; preds = %1115, %1119
  call void @_ZN2gl10GLES1State10clearDirtyEv(%"class.gl::GLES1State"* %35) #13
  br label %1122

1122:                                             ; preds = %4, %1121
  %1123 = phi i32 [ 0, %1121 ], [ 1, %4 ]
  ret i32 %1123

1124:                                             ; preds = %325
  %1125 = call dereferenceable(16) %"struct.gl::TextureCoordF"* @_ZNK2gl10GLES1State23getCurrentTextureCoordsEj(%"class.gl::GLES1State"* %35, i32 1) #13
  %1126 = getelementptr inbounds %"struct.gl::TextureCoordF", %"struct.gl::TextureCoordF"* %1125, i64 0, i32 0
  %1127 = load float, float* %1126, align 4
  %1128 = getelementptr inbounds %"struct.gl::TextureCoordF", %"struct.gl::TextureCoordF"* %1125, i64 0, i32 1
  %1129 = load float, float* %1128, align 4
  %1130 = getelementptr inbounds %"struct.gl::TextureCoordF", %"struct.gl::TextureCoordF"* %1125, i64 0, i32 2
  %1131 = load float, float* %1130, align 4
  %1132 = getelementptr inbounds %"struct.gl::TextureCoordF", %"struct.gl::TextureCoordF"* %1125, i64 0, i32 3
  %1133 = load float, float* %1132, align 4
  call void @_ZN2gl7Context14vertexAttrib4fEjffff(%"class.gl::Context"* %2, i32 5, float %1127, float %1129, float %1131, float %1133) #13
  %1134 = load i64*, i64** %308, align 8
  %1135 = load i64, i64* %1134, align 8
  br label %1136

1136:                                             ; preds = %1124, %325
  %1137 = phi i64 [ %1135, %1124 ], [ %326, %325 ]
  %1138 = and i64 %1137, 4
  %1139 = icmp eq i64 %1138, 0
  br i1 %1139, label %1140, label %1152

1140:                                             ; preds = %1136
  %1141 = call dereferenceable(16) %"struct.gl::TextureCoordF"* @_ZNK2gl10GLES1State23getCurrentTextureCoordsEj(%"class.gl::GLES1State"* %35, i32 2) #13
  %1142 = getelementptr inbounds %"struct.gl::TextureCoordF", %"struct.gl::TextureCoordF"* %1141, i64 0, i32 0
  %1143 = load float, float* %1142, align 4
  %1144 = getelementptr inbounds %"struct.gl::TextureCoordF", %"struct.gl::TextureCoordF"* %1141, i64 0, i32 1
  %1145 = load float, float* %1144, align 4
  %1146 = getelementptr inbounds %"struct.gl::TextureCoordF", %"struct.gl::TextureCoordF"* %1141, i64 0, i32 2
  %1147 = load float, float* %1146, align 4
  %1148 = getelementptr inbounds %"struct.gl::TextureCoordF", %"struct.gl::TextureCoordF"* %1141, i64 0, i32 3
  %1149 = load float, float* %1148, align 4
  call void @_ZN2gl7Context14vertexAttrib4fEjffff(%"class.gl::Context"* %2, i32 6, float %1143, float %1145, float %1147, float %1149) #13
  %1150 = load i64*, i64** %308, align 8
  %1151 = load i64, i64* %1150, align 8
  br label %1152

1152:                                             ; preds = %1140, %1136
  %1153 = phi i64 [ %1151, %1140 ], [ %1137, %1136 ]
  %1154 = and i64 %1153, 8
  %1155 = icmp eq i64 %1154, 0
  br i1 %1155, label %1156, label %329

1156:                                             ; preds = %1152
  %1157 = call dereferenceable(16) %"struct.gl::TextureCoordF"* @_ZNK2gl10GLES1State23getCurrentTextureCoordsEj(%"class.gl::GLES1State"* %35, i32 3) #13
  %1158 = getelementptr inbounds %"struct.gl::TextureCoordF", %"struct.gl::TextureCoordF"* %1157, i64 0, i32 0
  %1159 = load float, float* %1158, align 4
  %1160 = getelementptr inbounds %"struct.gl::TextureCoordF", %"struct.gl::TextureCoordF"* %1157, i64 0, i32 1
  %1161 = load float, float* %1160, align 4
  %1162 = getelementptr inbounds %"struct.gl::TextureCoordF", %"struct.gl::TextureCoordF"* %1157, i64 0, i32 2
  %1163 = load float, float* %1162, align 4
  %1164 = getelementptr inbounds %"struct.gl::TextureCoordF", %"struct.gl::TextureCoordF"* %1157, i64 0, i32 3
  %1165 = load float, float* %1164, align 4
  call void @_ZN2gl7Context14vertexAttrib4fEjffff(%"class.gl::Context"* %2, i32 7, float %1159, float %1161, float %1163, float %1165) #13
  br label %329
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2gl13GLES1Renderer25initializeRendererProgramEPNS_7ContextEPNS_5StateE(%"class.gl::GLES1Renderer"*, %"class.gl::Context"*, %"class.gl::State"*) local_unnamed_addr #6 align 2 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca %"struct.gl::ShaderProgramID", align 4
  %7 = alloca %"struct.gl::ShaderProgramID", align 4
  %8 = alloca %"class.std::__1::basic_stringstream", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %"class.absl::flat_hash_map.639", align 8
  %11 = alloca %"class.std::__1::basic_stringstream", align 8
  %12 = alloca %"class.std::__1::basic_string", align 8
  %13 = alloca %"class.std::__1::basic_string", align 8
  %14 = alloca %"class.std::__1::basic_string", align 8
  %15 = alloca %"class.std::__1::basic_string", align 8
  %16 = alloca %"class.std::__1::basic_string", align 8
  %17 = alloca %"class.std::__1::basic_stringstream", align 8
  %18 = alloca %"class.std::__1::basic_stringstream", align 8
  %19 = alloca %"class.std::__1::basic_string", align 8
  %20 = alloca %"class.std::__1::basic_string", align 8
  %21 = alloca %"class.std::__1::basic_string", align 8
  %22 = alloca %"class.std::__1::basic_string", align 8
  %23 = alloca %"class.std::__1::basic_string", align 8
  %24 = alloca %"class.std::__1::basic_string", align 8
  %25 = alloca %"class.std::__1::basic_string", align 8
  %26 = alloca %"class.std::__1::basic_string", align 8
  %27 = alloca %"class.std::__1::basic_string", align 8
  %28 = alloca %"class.std::__1::basic_string", align 8
  %29 = alloca %"class.std::__1::basic_string", align 8
  %30 = alloca %"class.std::__1::basic_string", align 8
  %31 = alloca %"class.std::__1::basic_string", align 8
  %32 = alloca %"class.std::__1::basic_string", align 8
  %33 = alloca %"class.std::__1::basic_string", align 8
  %34 = alloca %"class.std::__1::basic_string", align 8
  %35 = alloca %"class.std::__1::basic_string", align 8
  %36 = alloca %"class.std::__1::basic_string", align 8
  %37 = alloca %"class.std::__1::basic_string", align 8
  %38 = alloca %"class.std::__1::basic_string", align 8
  %39 = alloca %"class.std::__1::basic_string", align 8
  %40 = alloca %"class.std::__1::basic_string", align 8
  %41 = alloca %"class.std::__1::basic_string", align 8
  %42 = alloca %"class.std::__1::basic_string", align 8
  %43 = alloca %"class.std::__1::basic_string", align 8
  %44 = alloca %"class.std::__1::basic_string", align 8
  %45 = alloca %"class.std::__1::basic_string", align 8
  %46 = alloca %"class.std::__1::basic_string", align 8
  %47 = alloca %"class.std::__1::basic_string", align 8
  %48 = alloca %"class.std::__1::basic_string", align 8
  %49 = alloca %"class.std::__1::basic_string", align 8
  %50 = alloca %"class.std::__1::basic_string", align 8
  %51 = alloca %"class.std::__1::basic_string", align 8
  %52 = alloca %"class.std::__1::basic_string", align 8
  %53 = alloca %"class.std::__1::basic_string", align 8
  %54 = alloca %"class.std::__1::basic_string", align 8
  %55 = alloca %"class.std::__1::basic_string", align 8
  %56 = alloca %"class.std::__1::basic_string", align 8
  %57 = alloca %"class.std::__1::basic_string", align 8
  %58 = alloca %"class.std::__1::basic_string", align 8
  %59 = alloca %"class.std::__1::basic_string", align 8
  %60 = alloca %"class.std::__1::basic_string", align 8
  %61 = alloca %"class.std::__1::basic_string", align 8
  %62 = alloca %"class.std::__1::basic_string", align 8
  %63 = alloca %"class.std::__1::basic_string", align 8
  %64 = alloca %"class.std::__1::basic_string", align 8
  %65 = alloca %"class.std::__1::basic_string", align 8
  %66 = alloca %"class.std::__1::basic_string", align 8
  %67 = alloca %"class.std::__1::basic_string", align 8
  %68 = alloca %"class.std::__1::basic_string", align 8
  %69 = alloca %"class.std::__1::basic_string", align 8
  %70 = alloca %"class.std::__1::basic_string", align 8
  %71 = alloca %"class.std::__1::basic_string", align 8
  %72 = alloca %"class.std::__1::basic_string", align 8
  %73 = alloca %"class.std::__1::basic_string", align 8
  %74 = alloca %"class.std::__1::basic_string", align 8
  %75 = alloca %"class.std::__1::basic_string", align 8
  %76 = alloca %"class.std::__1::basic_string", align 8
  %77 = alloca %"class.std::__1::basic_string", align 8
  %78 = alloca %"class.std::__1::basic_string", align 8
  %79 = alloca %"class.std::__1::basic_string", align 8
  %80 = alloca %"class.std::__1::basic_string", align 8
  %81 = alloca %"class.std::__1::basic_string", align 8
  %82 = alloca %"class.std::__1::basic_string", align 8
  %83 = alloca %"class.std::__1::basic_string", align 8
  %84 = alloca %"class.std::__1::basic_string", align 8
  %85 = alloca %"class.std::__1::basic_string", align 8
  %86 = alloca %"class.std::__1::basic_string", align 8
  %87 = alloca %"class.std::__1::basic_string", align 8
  %88 = alloca %"class.std::__1::basic_string", align 8
  %89 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 0
  %90 = load i8, i8* %89, align 8, !range !2
  %91 = icmp eq i8 %90, 0
  br i1 %91, label %92, label %1889

92:                                               ; preds = %3
  %93 = tail call i8* @_Znwm(i64 216) #16
  %94 = bitcast i8* %93 to %"class.gl::ShaderProgramManager"*
  tail call void @_ZN2gl20ShaderProgramManagerC1Ev(%"class.gl::ShaderProgramManager"* nonnull %94) #13
  %95 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 1
  %96 = bitcast %"class.gl::ShaderProgramManager"** %95 to i8**
  store i8* %93, i8** %96, align 8
  %97 = bitcast %"struct.gl::ShaderProgramID"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %97) #13
  %98 = getelementptr inbounds %"struct.gl::ShaderProgramID", %"struct.gl::ShaderProgramID"* %6, i64 0, i32 0
  store i32 -1431655766, i32* %98, align 4
  %99 = bitcast %"struct.gl::ShaderProgramID"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %99) #13
  %100 = getelementptr inbounds %"struct.gl::ShaderProgramID", %"struct.gl::ShaderProgramID"* %7, i64 0, i32 0
  store i32 -1431655766, i32* %100, align 4
  %101 = call i32 @_ZN2gl13GLES1Renderer13compileShaderEPNS_7ContextENS_10ShaderTypeEPKcPNS_15ShaderProgramIDE(%"class.gl::GLES1Renderer"* %0, %"class.gl::Context"* %1, i8 zeroext 0, i8* getelementptr inbounds ([4738 x i8], [4738 x i8]* @_ZN12_GLOBAL__N_117kGLES1DrawVShaderE, i64 0, i64 0), %"struct.gl::ShaderProgramID"* nonnull %6)
  %102 = icmp eq i32 %101, 1
  br i1 %102, label %1887, label %103

103:                                              ; preds = %92
  %104 = bitcast %"class.std::__1::basic_stringstream"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 280, i8* nonnull %104) #13
  %105 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %8, i64 0, i32 0, i32 0, i32 1
  %106 = bitcast i64* %105 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %106, i8 -86, i64 272, i1 false)
  %107 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %8, i64 0, i32 2, i32 0, i32 0
  %108 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %8, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 2, i64 3) to i32 (...)**), i32 (...)*** %107, align 8
  %109 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %8, i64 0, i32 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %109, align 8
  %110 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %8, i64 0, i32 1
  %111 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %110, i64 0, i32 0
  %112 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 2) to i64*), align 8
  %113 = bitcast %"class.std::__1::basic_stringstream"* %8 to i64*
  store i64 %112, i64* %113, align 8
  %114 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 3) to i64*), align 8
  %115 = bitcast %"class.std::__1::basic_stringstream"* %8 to i8**
  %116 = inttoptr i64 %112 to i8*
  %117 = getelementptr i8, i8* %116, i64 -24
  %118 = bitcast i8* %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = getelementptr inbounds i8, i8* %104, i64 %119
  %121 = bitcast i8* %120 to i64*
  store i64 %114, i64* %121, align 8
  %122 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %8, i64 0, i32 0, i32 0, i32 1
  store i64 0, i64* %122, align 8
  %123 = load i8*, i8** %115, align 8
  %124 = getelementptr i8, i8* %123, i64 -24
  %125 = bitcast i8* %124 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = getelementptr inbounds i8, i8* %104, i64 %126
  %128 = bitcast i8* %127 to %"class.std::__1::ios_base"*
  %129 = bitcast %"class.std::__1::basic_stringbuf"* %110 to i8*
  call void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"* %128, i8* %129) #13
  %130 = getelementptr inbounds i8, i8* %127, i64 136
  %131 = bitcast i8* %130 to %"class.std::__1::basic_ostream"**
  store %"class.std::__1::basic_ostream"* null, %"class.std::__1::basic_ostream"** %131, align 8
  %132 = getelementptr inbounds i8, i8* %127, i64 144
  %133 = bitcast i8* %132 to i32*
  store i32 -1, i32* %133, align 8
  %134 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %8, i64 0, i32 0, i32 1
  %135 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 4) to i64*), align 8
  %136 = bitcast %"class.std::__1::basic_ostream.base"* %134 to i64*
  store i64 %135, i64* %136, align 8
  %137 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 5) to i64*), align 8
  %138 = inttoptr i64 %135 to i8*
  %139 = getelementptr i8, i8* %138, i64 -24
  %140 = bitcast i8* %139 to i64*
  %141 = load i64, i64* %140, align 8
  %142 = bitcast %"class.std::__1::basic_ostream.base"* %134 to i8*
  %143 = getelementptr inbounds i8, i8* %142, i64 %141
  %144 = bitcast i8* %143 to i64*
  store i64 %137, i64* %144, align 8
  %145 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1) to i64*), align 8
  store i64 %145, i64* %113, align 8
  %146 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 6) to i64*), align 8
  %147 = inttoptr i64 %145 to i8*
  %148 = getelementptr i8, i8* %147, i64 -24
  %149 = bitcast i8* %148 to i64*
  %150 = load i64, i64* %149, align 8
  %151 = getelementptr inbounds i8, i8* %104, i64 %150
  %152 = bitcast i8* %151 to i64*
  store i64 %146, i64* %152, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %108, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 2, i64 3) to i32 (...)**), i32 (...)*** %107, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %109, align 8
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"* %111) #13
  %153 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %110, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %153, align 8
  %154 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %8, i64 0, i32 1, i32 1
  %155 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %8, i64 0, i32 1, i32 3
  %156 = bitcast %"class.std::__1::basic_string"* %154 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %156, i8 0, i64 32, i1 false) #13
  store i32 24, i32* %155, align 8
  %157 = bitcast %"class.std::__1::basic_ostream.base"* %134 to %"class.std::__1::basic_ostream"*
  %158 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %157, i8* getelementptr inbounds ([2708 x i8], [2708 x i8]* @_ZN12_GLOBAL__N_123kGLES1DrawFShaderHeaderE, i64 0, i64 0), i64 2707) #13
  %159 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %157, i8* getelementptr inbounds ([3588 x i8], [3588 x i8]* @_ZN12_GLOBAL__N_128kGLES1DrawFShaderUniformDefsE, i64 0, i64 0), i64 3587) #13
  %160 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %157, i8* getelementptr inbounds ([5008 x i8], [5008 x i8]* @_ZN12_GLOBAL__N_126kGLES1DrawFShaderFunctionsE, i64 0, i64 0), i64 5007) #13
  %161 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %157, i8* getelementptr inbounds ([13412 x i8], [13412 x i8]* @_ZN12_GLOBAL__N_131kGLES1DrawFShaderMultitexturingE, i64 0, i64 0), i64 13411) #13
  %162 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %157, i8* getelementptr inbounds ([1561 x i8], [1561 x i8]* @_ZN12_GLOBAL__N_121kGLES1DrawFShaderMainE, i64 0, i64 0), i64 1560) #13
  %163 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %163) #13
  call void @_ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv(%"class.std::__1::basic_string"* nonnull sret %9, %"class.std::__1::basic_stringbuf"* %110) #13
  %164 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %165 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %164, i64 0, i32 1, i32 0
  %166 = load i8, i8* %165, align 1
  %167 = icmp slt i8 %166, 0
  %168 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %169 = load i8*, i8** %168, align 8
  %170 = select i1 %167, i8* %169, i8* %163
  %171 = call i32 @_ZN2gl13GLES1Renderer13compileShaderEPNS_7ContextENS_10ShaderTypeEPKcPNS_15ShaderProgramIDE(%"class.gl::GLES1Renderer"* %0, %"class.gl::Context"* %1, i8 zeroext 4, i8* %170, %"struct.gl::ShaderProgramID"* nonnull %7)
  %172 = load i8, i8* %165, align 1
  %173 = icmp slt i8 %172, 0
  br i1 %173, label %174, label %176

174:                                              ; preds = %103
  %175 = load i8*, i8** %168, align 8
  call void @_ZdlPv(i8* %175) #16
  br label %176

176:                                              ; preds = %103, %174
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %163) #13
  %177 = icmp eq i32 %171, 1
  br i1 %177, label %178, label %183

178:                                              ; preds = %176
  %179 = load i64, i64* bitcast ([10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE to i64*), align 8
  %180 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 8) to i64*), align 8
  %181 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 9) to i64*), align 8
  %182 = inttoptr i64 %179 to i8*
  br label %1865

183:                                              ; preds = %176
  %184 = bitcast %"class.absl::flat_hash_map.639"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %184) #13
  %185 = getelementptr inbounds %"class.absl::flat_hash_map.639", %"class.absl::flat_hash_map.639"* %10, i64 0, i32 0, i32 0, i32 0
  %186 = getelementptr inbounds %"class.absl::flat_hash_map.639", %"class.absl::flat_hash_map.639"* %10, i64 0, i32 0, i32 0, i32 1
  %187 = getelementptr inbounds %"class.absl::flat_hash_map.639", %"class.absl::flat_hash_map.639"* %10, i64 0, i32 0, i32 0, i32 3
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %185, align 8
  %188 = bitcast %"union.absl::container_internal::map_slot_type.642"** %186 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %188, i8 0, i64 32, i1 false) #13
  %189 = getelementptr inbounds %"class.absl::flat_hash_map.639", %"class.absl::flat_hash_map.639"* %10, i64 0, i32 0, i32 0
  %190 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8, !noalias !6
  %191 = zext i64 %190 to i128
  %192 = mul nuw i128 %191, 11376068507788127593
  %193 = lshr i128 %192, 64
  %194 = xor i128 %193, %192
  %195 = trunc i128 %194 to i64
  %196 = trunc i128 %194 to i8
  %197 = and i8 %196, 127
  %198 = insertelement <16 x i8> undef, i8 %197, i32 0
  %199 = shufflevector <16 x i8> %198, <16 x i8> undef, <16 x i32> zeroinitializer
  %200 = icmp eq <16 x i8> %199, <i8 -1, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %201 = bitcast <16 x i1> %200 to i16
  %202 = icmp eq i16 %201, 0
  br i1 %202, label %213, label %203

203:                                              ; preds = %183
  %204 = zext i16 %201 to i32
  %205 = load i32, i32* null, align 536870912, !noalias !6
  %206 = icmp eq i32 %205, 0
  br label %207

207:                                              ; preds = %209, %203
  %208 = phi i32 [ %204, %203 ], [ %211, %209 ]
  br i1 %206, label %221, label %209, !prof !4

209:                                              ; preds = %207
  %210 = add i32 %208, -1
  %211 = and i32 %210, %208
  %212 = icmp eq i32 %211, 0
  br i1 %212, label %213, label %207

213:                                              ; preds = %209, %183
  %214 = call i64 @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIiNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEENS_13hash_internal4HashIiEENS3_8equal_toIiEENS7_INS3_4pairIKiS9_EEEEE14prepare_insertEm(%"class.absl::container_internal::raw_hash_set.641"* nonnull %189, i64 %195) #13, !noalias !6
  %215 = load %"union.absl::container_internal::map_slot_type.642"*, %"union.absl::container_internal::map_slot_type.642"** %186, align 8, !noalias !6
  %216 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.642", %"union.absl::container_internal::map_slot_type.642"* %215, i64 %214, i32 0, i32 0
  store i32 0, i32* %216, align 8, !noalias !6
  %217 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.642", %"union.absl::container_internal::map_slot_type.642"* %215, i64 %214, i32 0, i32 1
  %218 = bitcast %"class.std::__1::basic_string"* %217 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %218, i8 0, i64 24, i1 false) #13, !noalias !6
  %219 = load i8*, i8** %185, align 8, !noalias !6
  %220 = load %"union.absl::container_internal::map_slot_type.642"*, %"union.absl::container_internal::map_slot_type.642"** %186, align 8, !noalias !6
  br label %221

221:                                              ; preds = %207, %213
  %222 = phi %"union.absl::container_internal::map_slot_type.642"* [ %220, %213 ], [ null, %207 ]
  %223 = phi i8* [ %219, %213 ], [ getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), %207 ]
  %224 = phi i64 [ %214, %213 ], [ 0, %207 ]
  %225 = getelementptr inbounds i8, i8* %223, i64 %224
  %226 = icmp ne i8* %225, null
  call void @llvm.assume(i1 %226) #13, !noalias !6
  %227 = load i8, i8* %225, align 1
  %228 = icmp sgt i8 %227, -1
  br i1 %228, label %230, label %229, !prof !4

229:                                              ; preds = %221
  call void @llvm.trap() #13
  unreachable

230:                                              ; preds = %221
  %231 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.642", %"union.absl::container_internal::map_slot_type.642"* %222, i64 %224, i32 0, i32 1
  %232 = bitcast %"class.std::__1::basic_string"* %231 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %233 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %232, i64 0, i32 1, i32 0
  %234 = load i8, i8* %233, align 1
  %235 = icmp slt i8 %234, 0
  br i1 %235, label %236, label %240

236:                                              ; preds = %230
  %237 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.642", %"union.absl::container_internal::map_slot_type.642"* %222, i64 %224, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 3, i64* %237, align 8
  %238 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %231, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %239 = load i8*, i8** %238, align 8
  br label %242

240:                                              ; preds = %230
  store i8 3, i8* %233, align 1
  %241 = bitcast %"class.std::__1::basic_string"* %231 to i8*
  br label %242

242:                                              ; preds = %236, %240
  %243 = phi i8* [ %239, %236 ], [ %241, %240 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %243, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @.str.7, i64 0, i64 0), i64 3, i1 false) #13
  %244 = getelementptr inbounds i8, i8* %243, i64 3
  store i8 0, i8* %244, align 1
  %245 = add i64 %190, 1
  %246 = zext i64 %245 to i128
  %247 = mul nuw i128 %246, 11376068507788127593
  %248 = lshr i128 %247, 64
  %249 = xor i128 %248, %247
  %250 = trunc i128 %249 to i64
  %251 = load i8*, i8** %185, align 8, !noalias !9
  %252 = load i64, i64* %187, align 8, !noalias !9
  %253 = lshr i64 %250, 7
  %254 = ptrtoint i8* %251 to i64
  %255 = lshr i64 %254, 12
  %256 = xor i64 %255, %253
  %257 = trunc i128 %249 to i8
  %258 = and i8 %257, 127
  %259 = insertelement <16 x i8> undef, i8 %258, i32 0
  %260 = shufflevector <16 x i8> %259, <16 x i8> undef, <16 x i32> zeroinitializer
  %261 = load %"union.absl::container_internal::map_slot_type.642"*, %"union.absl::container_internal::map_slot_type.642"** %186, align 8
  br label %262

262:                                              ; preds = %291, %242
  %263 = phi i64 [ %256, %242 ], [ %293, %291 ]
  %264 = phi i64 [ 0, %242 ], [ %292, %291 ]
  %265 = and i64 %263, %252
  %266 = getelementptr inbounds i8, i8* %251, i64 %265
  %267 = bitcast i8* %266 to <16 x i8>*
  %268 = load <16 x i8>, <16 x i8>* %267, align 1, !noalias !9
  %269 = icmp eq <16 x i8> %260, %268
  %270 = bitcast <16 x i1> %269 to i16
  %271 = icmp eq i16 %270, 0
  br i1 %271, label %287, label %272

272:                                              ; preds = %262
  %273 = zext i16 %270 to i32
  br label %274

274:                                              ; preds = %283, %272
  %275 = phi i32 [ %273, %272 ], [ %285, %283 ]
  %276 = call i32 @llvm.cttz.i32(i32 %275, i1 false) #13, !range !3
  %277 = zext i32 %276 to i64
  %278 = add i64 %265, %277
  %279 = and i64 %278, %252
  %280 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.642", %"union.absl::container_internal::map_slot_type.642"* %261, i64 %279, i32 0, i32 0
  %281 = load i32, i32* %280, align 4, !noalias !9
  %282 = icmp eq i32 %281, 1
  br i1 %282, label %302, label %283, !prof !4

283:                                              ; preds = %274
  %284 = add i32 %275, -1
  %285 = and i32 %284, %275
  %286 = icmp eq i32 %285, 0
  br i1 %286, label %287, label %274

287:                                              ; preds = %283, %262
  %288 = icmp eq <16 x i8> %268, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %289 = bitcast <16 x i1> %288 to i16
  %290 = icmp eq i16 %289, 0
  br i1 %290, label %291, label %294, !prof !5

291:                                              ; preds = %287
  %292 = add i64 %264, 16
  %293 = add i64 %292, %265
  br label %262

294:                                              ; preds = %287
  %295 = call i64 @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIiNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEENS_13hash_internal4HashIiEENS3_8equal_toIiEENS7_INS3_4pairIKiS9_EEEEE14prepare_insertEm(%"class.absl::container_internal::raw_hash_set.641"* nonnull %189, i64 %250) #13, !noalias !9
  %296 = load %"union.absl::container_internal::map_slot_type.642"*, %"union.absl::container_internal::map_slot_type.642"** %186, align 8, !noalias !9
  %297 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.642", %"union.absl::container_internal::map_slot_type.642"* %296, i64 %295, i32 0, i32 0
  store i32 1, i32* %297, align 8, !noalias !9
  %298 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.642", %"union.absl::container_internal::map_slot_type.642"* %296, i64 %295, i32 0, i32 1
  %299 = bitcast %"class.std::__1::basic_string"* %298 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %299, i8 0, i64 24, i1 false) #13, !noalias !9
  %300 = load i8*, i8** %185, align 8, !noalias !9
  %301 = load %"union.absl::container_internal::map_slot_type.642"*, %"union.absl::container_internal::map_slot_type.642"** %186, align 8, !noalias !9
  br label %302

302:                                              ; preds = %274, %294
  %303 = phi %"union.absl::container_internal::map_slot_type.642"* [ %301, %294 ], [ %261, %274 ]
  %304 = phi i8* [ %300, %294 ], [ %251, %274 ]
  %305 = phi i64 [ %295, %294 ], [ %279, %274 ]
  %306 = getelementptr inbounds i8, i8* %304, i64 %305
  %307 = icmp ne i8* %306, null
  call void @llvm.assume(i1 %307) #13, !noalias !9
  %308 = load i8, i8* %306, align 1
  %309 = icmp sgt i8 %308, -1
  br i1 %309, label %311, label %310, !prof !4

310:                                              ; preds = %302
  call void @llvm.trap() #13
  unreachable

311:                                              ; preds = %302
  %312 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.642", %"union.absl::container_internal::map_slot_type.642"* %303, i64 %305, i32 0, i32 1
  %313 = bitcast %"class.std::__1::basic_string"* %312 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %314 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %313, i64 0, i32 1, i32 0
  %315 = load i8, i8* %314, align 1
  %316 = icmp slt i8 %315, 0
  br i1 %316, label %317, label %321

317:                                              ; preds = %311
  %318 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.642", %"union.absl::container_internal::map_slot_type.642"* %303, i64 %305, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 6, i64* %318, align 8
  %319 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %312, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %320 = load i8*, i8** %319, align 8
  br label %323

321:                                              ; preds = %311
  store i8 6, i8* %314, align 1
  %322 = bitcast %"class.std::__1::basic_string"* %312 to i8*
  br label %323

323:                                              ; preds = %317, %321
  %324 = phi i8* [ %320, %317 ], [ %322, %321 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %324, i8* align 1 getelementptr inbounds ([7 x i8], [7 x i8]* @.str.8, i64 0, i64 0), i64 6, i1 false) #13
  %325 = getelementptr inbounds i8, i8* %324, i64 6
  store i8 0, i8* %325, align 1
  %326 = add i64 %190, 2
  %327 = zext i64 %326 to i128
  %328 = mul nuw i128 %327, 11376068507788127593
  %329 = lshr i128 %328, 64
  %330 = xor i128 %329, %328
  %331 = trunc i128 %330 to i64
  %332 = load i8*, i8** %185, align 8, !noalias !12
  %333 = load i64, i64* %187, align 8, !noalias !12
  %334 = lshr i64 %331, 7
  %335 = ptrtoint i8* %332 to i64
  %336 = lshr i64 %335, 12
  %337 = xor i64 %336, %334
  %338 = trunc i128 %330 to i8
  %339 = and i8 %338, 127
  %340 = insertelement <16 x i8> undef, i8 %339, i32 0
  %341 = shufflevector <16 x i8> %340, <16 x i8> undef, <16 x i32> zeroinitializer
  %342 = load %"union.absl::container_internal::map_slot_type.642"*, %"union.absl::container_internal::map_slot_type.642"** %186, align 8
  br label %343

343:                                              ; preds = %372, %323
  %344 = phi i64 [ %337, %323 ], [ %374, %372 ]
  %345 = phi i64 [ 0, %323 ], [ %373, %372 ]
  %346 = and i64 %344, %333
  %347 = getelementptr inbounds i8, i8* %332, i64 %346
  %348 = bitcast i8* %347 to <16 x i8>*
  %349 = load <16 x i8>, <16 x i8>* %348, align 1, !noalias !12
  %350 = icmp eq <16 x i8> %341, %349
  %351 = bitcast <16 x i1> %350 to i16
  %352 = icmp eq i16 %351, 0
  br i1 %352, label %368, label %353

353:                                              ; preds = %343
  %354 = zext i16 %351 to i32
  br label %355

355:                                              ; preds = %364, %353
  %356 = phi i32 [ %354, %353 ], [ %366, %364 ]
  %357 = call i32 @llvm.cttz.i32(i32 %356, i1 false) #13, !range !3
  %358 = zext i32 %357 to i64
  %359 = add i64 %346, %358
  %360 = and i64 %359, %333
  %361 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.642", %"union.absl::container_internal::map_slot_type.642"* %342, i64 %360, i32 0, i32 0
  %362 = load i32, i32* %361, align 4, !noalias !12
  %363 = icmp eq i32 %362, 2
  br i1 %363, label %383, label %364, !prof !4

364:                                              ; preds = %355
  %365 = add i32 %356, -1
  %366 = and i32 %365, %356
  %367 = icmp eq i32 %366, 0
  br i1 %367, label %368, label %355

368:                                              ; preds = %364, %343
  %369 = icmp eq <16 x i8> %349, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %370 = bitcast <16 x i1> %369 to i16
  %371 = icmp eq i16 %370, 0
  br i1 %371, label %372, label %375, !prof !5

372:                                              ; preds = %368
  %373 = add i64 %345, 16
  %374 = add i64 %373, %346
  br label %343

375:                                              ; preds = %368
  %376 = call i64 @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIiNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEENS_13hash_internal4HashIiEENS3_8equal_toIiEENS7_INS3_4pairIKiS9_EEEEE14prepare_insertEm(%"class.absl::container_internal::raw_hash_set.641"* nonnull %189, i64 %331) #13, !noalias !12
  %377 = load %"union.absl::container_internal::map_slot_type.642"*, %"union.absl::container_internal::map_slot_type.642"** %186, align 8, !noalias !12
  %378 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.642", %"union.absl::container_internal::map_slot_type.642"* %377, i64 %376, i32 0, i32 0
  store i32 2, i32* %378, align 8, !noalias !12
  %379 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.642", %"union.absl::container_internal::map_slot_type.642"* %377, i64 %376, i32 0, i32 1
  %380 = bitcast %"class.std::__1::basic_string"* %379 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %380, i8 0, i64 24, i1 false) #13, !noalias !12
  %381 = load i8*, i8** %185, align 8, !noalias !12
  %382 = load %"union.absl::container_internal::map_slot_type.642"*, %"union.absl::container_internal::map_slot_type.642"** %186, align 8, !noalias !12
  br label %383

383:                                              ; preds = %355, %375
  %384 = phi %"union.absl::container_internal::map_slot_type.642"* [ %382, %375 ], [ %342, %355 ]
  %385 = phi i8* [ %381, %375 ], [ %332, %355 ]
  %386 = phi i64 [ %376, %375 ], [ %360, %355 ]
  %387 = getelementptr inbounds i8, i8* %385, i64 %386
  %388 = icmp ne i8* %387, null
  call void @llvm.assume(i1 %388) #13, !noalias !12
  %389 = load i8, i8* %387, align 1
  %390 = icmp sgt i8 %389, -1
  br i1 %390, label %392, label %391, !prof !4

391:                                              ; preds = %383
  call void @llvm.trap() #13
  unreachable

392:                                              ; preds = %383
  %393 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.642", %"union.absl::container_internal::map_slot_type.642"* %384, i64 %386, i32 0, i32 1
  %394 = bitcast %"class.std::__1::basic_string"* %393 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %395 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %394, i64 0, i32 1, i32 0
  %396 = load i8, i8* %395, align 1
  %397 = icmp slt i8 %396, 0
  br i1 %397, label %398, label %402

398:                                              ; preds = %392
  %399 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.642", %"union.absl::container_internal::map_slot_type.642"* %384, i64 %386, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 5, i64* %399, align 8
  %400 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %393, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %401 = load i8*, i8** %400, align 8
  br label %404

402:                                              ; preds = %392
  store i8 5, i8* %395, align 1
  %403 = bitcast %"class.std::__1::basic_string"* %393 to i8*
  br label %404

404:                                              ; preds = %398, %402
  %405 = phi i8* [ %401, %398 ], [ %403, %402 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %405, i8* align 1 getelementptr inbounds ([6 x i8], [6 x i8]* @.str.9, i64 0, i64 0), i64 5, i1 false) #13
  %406 = getelementptr inbounds i8, i8* %405, i64 5
  store i8 0, i8* %406, align 1
  %407 = add i64 %190, 3
  %408 = zext i64 %407 to i128
  %409 = mul nuw i128 %408, 11376068507788127593
  %410 = lshr i128 %409, 64
  %411 = xor i128 %410, %409
  %412 = trunc i128 %411 to i64
  %413 = load i8*, i8** %185, align 8, !noalias !15
  %414 = load i64, i64* %187, align 8, !noalias !15
  %415 = lshr i64 %412, 7
  %416 = ptrtoint i8* %413 to i64
  %417 = lshr i64 %416, 12
  %418 = xor i64 %417, %415
  %419 = trunc i128 %411 to i8
  %420 = and i8 %419, 127
  %421 = insertelement <16 x i8> undef, i8 %420, i32 0
  %422 = shufflevector <16 x i8> %421, <16 x i8> undef, <16 x i32> zeroinitializer
  %423 = load %"union.absl::container_internal::map_slot_type.642"*, %"union.absl::container_internal::map_slot_type.642"** %186, align 8
  br label %424

424:                                              ; preds = %453, %404
  %425 = phi i64 [ %418, %404 ], [ %455, %453 ]
  %426 = phi i64 [ 0, %404 ], [ %454, %453 ]
  %427 = and i64 %425, %414
  %428 = getelementptr inbounds i8, i8* %413, i64 %427
  %429 = bitcast i8* %428 to <16 x i8>*
  %430 = load <16 x i8>, <16 x i8>* %429, align 1, !noalias !15
  %431 = icmp eq <16 x i8> %422, %430
  %432 = bitcast <16 x i1> %431 to i16
  %433 = icmp eq i16 %432, 0
  br i1 %433, label %449, label %434

434:                                              ; preds = %424
  %435 = zext i16 %432 to i32
  br label %436

436:                                              ; preds = %445, %434
  %437 = phi i32 [ %435, %434 ], [ %447, %445 ]
  %438 = call i32 @llvm.cttz.i32(i32 %437, i1 false) #13, !range !3
  %439 = zext i32 %438 to i64
  %440 = add i64 %427, %439
  %441 = and i64 %440, %414
  %442 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.642", %"union.absl::container_internal::map_slot_type.642"* %423, i64 %441, i32 0, i32 0
  %443 = load i32, i32* %442, align 4, !noalias !15
  %444 = icmp eq i32 %443, 3
  br i1 %444, label %464, label %445, !prof !4

445:                                              ; preds = %436
  %446 = add i32 %437, -1
  %447 = and i32 %446, %437
  %448 = icmp eq i32 %447, 0
  br i1 %448, label %449, label %436

449:                                              ; preds = %445, %424
  %450 = icmp eq <16 x i8> %430, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %451 = bitcast <16 x i1> %450 to i16
  %452 = icmp eq i16 %451, 0
  br i1 %452, label %453, label %456, !prof !5

453:                                              ; preds = %449
  %454 = add i64 %426, 16
  %455 = add i64 %454, %427
  br label %424

456:                                              ; preds = %449
  %457 = call i64 @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIiNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEENS_13hash_internal4HashIiEENS3_8equal_toIiEENS7_INS3_4pairIKiS9_EEEEE14prepare_insertEm(%"class.absl::container_internal::raw_hash_set.641"* nonnull %189, i64 %412) #13, !noalias !15
  %458 = load %"union.absl::container_internal::map_slot_type.642"*, %"union.absl::container_internal::map_slot_type.642"** %186, align 8, !noalias !15
  %459 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.642", %"union.absl::container_internal::map_slot_type.642"* %458, i64 %457, i32 0, i32 0
  store i32 3, i32* %459, align 8, !noalias !15
  %460 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.642", %"union.absl::container_internal::map_slot_type.642"* %458, i64 %457, i32 0, i32 1
  %461 = bitcast %"class.std::__1::basic_string"* %460 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %461, i8 0, i64 24, i1 false) #13, !noalias !15
  %462 = load i8*, i8** %185, align 8, !noalias !15
  %463 = load %"union.absl::container_internal::map_slot_type.642"*, %"union.absl::container_internal::map_slot_type.642"** %186, align 8, !noalias !15
  br label %464

464:                                              ; preds = %436, %456
  %465 = phi %"union.absl::container_internal::map_slot_type.642"* [ %463, %456 ], [ %423, %436 ]
  %466 = phi i8* [ %462, %456 ], [ %413, %436 ]
  %467 = phi i64 [ %457, %456 ], [ %441, %436 ]
  %468 = getelementptr inbounds i8, i8* %466, i64 %467
  %469 = icmp ne i8* %468, null
  call void @llvm.assume(i1 %469) #13, !noalias !15
  %470 = load i8, i8* %468, align 1
  %471 = icmp sgt i8 %470, -1
  br i1 %471, label %473, label %472, !prof !4

472:                                              ; preds = %464
  call void @llvm.trap() #13
  unreachable

473:                                              ; preds = %464
  %474 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.642", %"union.absl::container_internal::map_slot_type.642"* %465, i64 %467, i32 0, i32 1
  %475 = bitcast %"class.std::__1::basic_string"* %474 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %476 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %475, i64 0, i32 1, i32 0
  %477 = load i8, i8* %476, align 1
  %478 = icmp slt i8 %477, 0
  br i1 %478, label %479, label %483

479:                                              ; preds = %473
  %480 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.642", %"union.absl::container_internal::map_slot_type.642"* %465, i64 %467, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 9, i64* %480, align 8
  %481 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %474, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %482 = load i8*, i8** %481, align 8
  br label %485

483:                                              ; preds = %473
  store i8 9, i8* %476, align 1
  %484 = bitcast %"class.std::__1::basic_string"* %474 to i8*
  br label %485

485:                                              ; preds = %479, %483
  %486 = phi i8* [ %482, %479 ], [ %484, %483 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %486, i8* align 1 getelementptr inbounds ([10 x i8], [10 x i8]* @.str.10, i64 0, i64 0), i64 9, i1 false) #13
  %487 = getelementptr inbounds i8, i8* %486, i64 9
  store i8 0, i8* %487, align 1
  %488 = bitcast %"class.std::__1::basic_stringstream"* %11 to i8*
  %489 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %11, i64 0, i32 2, i32 0, i32 0
  %490 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %11, i64 0, i32 0, i32 0, i32 0
  %491 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %11, i64 0, i32 0, i32 1, i32 0
  %492 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %11, i64 0, i32 1
  %493 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %492, i64 0, i32 0
  %494 = bitcast %"class.std::__1::basic_stringstream"* %11 to i64*
  %495 = bitcast %"class.std::__1::basic_stringstream"* %11 to i8**
  %496 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %11, i64 0, i32 0, i32 0, i32 1
  %497 = bitcast %"class.std::__1::basic_stringbuf"* %492 to i8*
  %498 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %11, i64 0, i32 0, i32 1
  %499 = bitcast %"class.std::__1::basic_ostream.base"* %498 to i64*
  %500 = bitcast %"class.std::__1::basic_ostream.base"* %498 to i8*
  %501 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %492, i64 0, i32 0, i32 0
  %502 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %11, i64 0, i32 1, i32 1
  %503 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %11, i64 0, i32 1, i32 3
  %504 = bitcast %"class.std::__1::basic_string"* %502 to i8*
  %505 = bitcast %"class.std::__1::basic_ostream.base"* %498 to %"class.std::__1::basic_ostream"*
  %506 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  %507 = load i64, i64* bitcast ([10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE to i64*), align 8
  %508 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 8) to i64*), align 8
  %509 = inttoptr i64 %507 to i8*
  %510 = getelementptr i8, i8* %509, i64 -24
  %511 = bitcast i8* %510 to i64*
  %512 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 9) to i64*), align 8
  %513 = bitcast %"class.std::__1::basic_string"* %502 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %514 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %513, i64 0, i32 1, i32 0
  %515 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %502, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %516 = bitcast %"class.std::__1::basic_stringstream"* %11 to %"class.std::__1::basic_iostream"*
  %517 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %11, i64 0, i32 2
  %518 = bitcast %"class.std::__1::basic_ios.base"* %517 to %"class.std::__1::basic_ios"*
  %519 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %11, i64 0, i32 0, i32 0, i32 1
  %520 = bitcast i64* %519 to i8*
  br label %527

521:                                              ; preds = %638
  %522 = load i32, i32* %98, align 4
  %523 = load i32, i32* %100, align 4
  %524 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 0
  %525 = call i32 @_ZN2gl13GLES1Renderer11linkProgramEPNS_7ContextEPNS_5StateENS_15ShaderProgramIDES5_RKN4absl13flat_hash_mapIiNSt3__112basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEENS6_13hash_internal4HashIiEENS8_8equal_toIiEENSC_INS8_4pairIKiSE_EEEEEEPS5_(%"class.gl::GLES1Renderer"* %0, %"class.gl::Context"* %1, %"class.gl::State"* %2, i32 %522, i32 %523, %"class.absl::flat_hash_map.639"* nonnull dereferenceable(40) %10, %"struct.gl::ShaderProgramID"* %524)
  %526 = icmp eq i32 %525, 1
  br i1 %526, label %1836, label %641

527:                                              ; preds = %638, %485
  %528 = phi i64 [ 0, %485 ], [ %639, %638 ]
  call void @llvm.lifetime.start.p0i8(i64 280, i8* nonnull %488) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %520, i8 -86, i64 272, i1 false)
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 2, i64 3) to i32 (...)**), i32 (...)*** %489, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %491, align 8
  store i64 %112, i64* %494, align 8
  %529 = load i64, i64* %118, align 8
  %530 = getelementptr inbounds i8, i8* %488, i64 %529
  %531 = bitcast i8* %530 to i64*
  store i64 %114, i64* %531, align 8
  store i64 0, i64* %496, align 8
  %532 = load i8*, i8** %495, align 8
  %533 = getelementptr i8, i8* %532, i64 -24
  %534 = bitcast i8* %533 to i64*
  %535 = load i64, i64* %534, align 8
  %536 = getelementptr inbounds i8, i8* %488, i64 %535
  %537 = bitcast i8* %536 to %"class.std::__1::ios_base"*
  call void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"* %537, i8* %497) #13
  %538 = getelementptr inbounds i8, i8* %536, i64 136
  %539 = bitcast i8* %538 to %"class.std::__1::basic_ostream"**
  store %"class.std::__1::basic_ostream"* null, %"class.std::__1::basic_ostream"** %539, align 8
  %540 = getelementptr inbounds i8, i8* %536, i64 144
  %541 = bitcast i8* %540 to i32*
  store i32 -1, i32* %541, align 8
  store i64 %135, i64* %499, align 8
  %542 = load i64, i64* %140, align 8
  %543 = getelementptr inbounds i8, i8* %500, i64 %542
  %544 = bitcast i8* %543 to i64*
  store i64 %137, i64* %544, align 8
  store i64 %145, i64* %494, align 8
  %545 = load i64, i64* %149, align 8
  %546 = getelementptr inbounds i8, i8* %488, i64 %545
  %547 = bitcast i8* %546 to i64*
  store i64 %146, i64* %547, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %490, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 2, i64 3) to i32 (...)**), i32 (...)*** %489, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %491, align 8
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"* %493) #13
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %501, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %504, i8 0, i64 32, i1 false) #13
  store i32 24, i32* %503, align 8
  %548 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %505, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.11, i64 0, i64 0), i64 8) #13
  %549 = trunc i64 %528 to i32
  %550 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %548, i32 %549) #13
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %506) #13
  call void @_ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv(%"class.std::__1::basic_string"* nonnull sret %12, %"class.std::__1::basic_stringbuf"* %492) #13
  %551 = add nuw nsw i64 %528, 4
  %552 = add i64 %190, %551
  %553 = zext i64 %552 to i128
  %554 = mul nuw i128 %553, 11376068507788127593
  %555 = lshr i128 %554, 64
  %556 = xor i128 %555, %554
  %557 = trunc i128 %556 to i64
  %558 = load i8*, i8** %185, align 8, !noalias !18
  %559 = load i64, i64* %187, align 8, !noalias !18
  %560 = lshr i64 %557, 7
  %561 = ptrtoint i8* %558 to i64
  %562 = lshr i64 %561, 12
  %563 = xor i64 %562, %560
  %564 = trunc i128 %556 to i8
  %565 = and i8 %564, 127
  %566 = insertelement <16 x i8> undef, i8 %565, i32 0
  %567 = shufflevector <16 x i8> %566, <16 x i8> undef, <16 x i32> zeroinitializer
  %568 = load %"union.absl::container_internal::map_slot_type.642"*, %"union.absl::container_internal::map_slot_type.642"** %186, align 8
  br label %569

569:                                              ; preds = %599, %527
  %570 = phi i64 [ %563, %527 ], [ %601, %599 ]
  %571 = phi i64 [ 0, %527 ], [ %600, %599 ]
  %572 = and i64 %570, %559
  %573 = getelementptr inbounds i8, i8* %558, i64 %572
  %574 = bitcast i8* %573 to <16 x i8>*
  %575 = load <16 x i8>, <16 x i8>* %574, align 1, !noalias !18
  %576 = icmp eq <16 x i8> %567, %575
  %577 = bitcast <16 x i1> %576 to i16
  %578 = icmp eq i16 %577, 0
  br i1 %578, label %595, label %579

579:                                              ; preds = %569
  %580 = zext i16 %577 to i32
  br label %581

581:                                              ; preds = %591, %579
  %582 = phi i32 [ %580, %579 ], [ %593, %591 ]
  %583 = call i32 @llvm.cttz.i32(i32 %582, i1 false) #13, !range !3
  %584 = zext i32 %583 to i64
  %585 = add i64 %572, %584
  %586 = and i64 %585, %559
  %587 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.642", %"union.absl::container_internal::map_slot_type.642"* %568, i64 %586, i32 0, i32 0
  %588 = load i32, i32* %587, align 4, !noalias !18
  %589 = zext i32 %588 to i64
  %590 = icmp eq i64 %551, %589
  br i1 %590, label %611, label %591, !prof !4

591:                                              ; preds = %581
  %592 = add i32 %582, -1
  %593 = and i32 %592, %582
  %594 = icmp eq i32 %593, 0
  br i1 %594, label %595, label %581

595:                                              ; preds = %591, %569
  %596 = icmp eq <16 x i8> %575, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %597 = bitcast <16 x i1> %596 to i16
  %598 = icmp eq i16 %597, 0
  br i1 %598, label %599, label %602, !prof !5

599:                                              ; preds = %595
  %600 = add i64 %571, 16
  %601 = add i64 %600, %572
  br label %569

602:                                              ; preds = %595
  %603 = call i64 @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIiNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEENS_13hash_internal4HashIiEENS3_8equal_toIiEENS7_INS3_4pairIKiS9_EEEEE14prepare_insertEm(%"class.absl::container_internal::raw_hash_set.641"* nonnull %189, i64 %557) #13, !noalias !18
  %604 = load %"union.absl::container_internal::map_slot_type.642"*, %"union.absl::container_internal::map_slot_type.642"** %186, align 8, !noalias !18
  %605 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.642", %"union.absl::container_internal::map_slot_type.642"* %604, i64 %603, i32 0, i32 0
  %606 = trunc i64 %551 to i32
  store i32 %606, i32* %605, align 8, !noalias !18
  %607 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.642", %"union.absl::container_internal::map_slot_type.642"* %604, i64 %603, i32 0, i32 1
  %608 = bitcast %"class.std::__1::basic_string"* %607 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %608, i8 0, i64 24, i1 false) #13, !noalias !18
  %609 = load i8*, i8** %185, align 8, !noalias !18
  %610 = load %"union.absl::container_internal::map_slot_type.642"*, %"union.absl::container_internal::map_slot_type.642"** %186, align 8, !noalias !18
  br label %611

611:                                              ; preds = %581, %602
  %612 = phi %"union.absl::container_internal::map_slot_type.642"* [ %610, %602 ], [ %568, %581 ]
  %613 = phi i8* [ %609, %602 ], [ %558, %581 ]
  %614 = phi i64 [ %603, %602 ], [ %586, %581 ]
  %615 = getelementptr inbounds i8, i8* %613, i64 %614
  %616 = icmp ne i8* %615, null
  call void @llvm.assume(i1 %616) #13, !noalias !18
  %617 = load i8, i8* %615, align 1
  %618 = icmp sgt i8 %617, -1
  br i1 %618, label %620, label %619, !prof !4

619:                                              ; preds = %611
  call void @llvm.trap() #13
  unreachable

620:                                              ; preds = %611
  %621 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.642", %"union.absl::container_internal::map_slot_type.642"* %612, i64 %614, i32 0, i32 1
  %622 = bitcast %"class.std::__1::basic_string"* %621 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %623 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %622, i64 0, i32 1, i32 0
  %624 = load i8, i8* %623, align 1
  %625 = icmp slt i8 %624, 0
  br i1 %625, label %626, label %629

626:                                              ; preds = %620
  %627 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %621, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %628 = load i8*, i8** %627, align 8
  call void @_ZdlPv(i8* %628) #16
  br label %629

629:                                              ; preds = %626, %620
  %630 = bitcast %"class.std::__1::basic_string"* %621 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %630, i8* nonnull align 8 %506, i64 24, i1 false) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %506) #13
  store i64 %507, i64* %494, align 8
  %631 = load i64, i64* %511, align 8
  %632 = getelementptr inbounds i8, i8* %488, i64 %631
  %633 = bitcast i8* %632 to i64*
  store i64 %508, i64* %633, align 8
  store i64 %512, i64* %499, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %501, align 8
  %634 = load i8, i8* %514, align 1
  %635 = icmp slt i8 %634, 0
  br i1 %635, label %636, label %638

636:                                              ; preds = %629
  %637 = load i8*, i8** %515, align 8
  call void @_ZdlPv(i8* %637) #16
  br label %638

638:                                              ; preds = %629, %636
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %493) #13
  call void @_ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_iostream"* nonnull %516, i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1)) #13
  call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %518) #13
  call void @llvm.lifetime.end.p0i8(i64 280, i8* nonnull %488) #13
  %639 = add nuw nsw i64 %528, 1
  %640 = icmp eq i64 %639, 4
  br i1 %640, label %521, label %527

641:                                              ; preds = %521
  %642 = load %"class.gl::ShaderProgramManager"*, %"class.gl::ShaderProgramManager"** %95, align 8
  call void @_ZN2gl20ShaderProgramManager12deleteShaderEPKNS_7ContextENS_15ShaderProgramIDE(%"class.gl::ShaderProgramManager"* %642, %"class.gl::Context"* %1, i32 %522) #13
  %643 = load %"class.gl::ShaderProgramManager"*, %"class.gl::ShaderProgramManager"** %95, align 8
  call void @_ZN2gl20ShaderProgramManager12deleteShaderEPKNS_7ContextENS_15ShaderProgramIDE(%"class.gl::ShaderProgramManager"* %643, %"class.gl::Context"* %1, i32 %523) #13
  %644 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 0, i32 0
  %645 = load i32, i32* %644, align 8
  %646 = load %"class.gl::ShaderProgramManager"*, %"class.gl::ShaderProgramManager"** %95, align 8
  %647 = zext i32 %645 to i64
  %648 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %646, i64 0, i32 2, i32 0
  %649 = load i64, i64* %648, align 8
  %650 = icmp ugt i64 %649, %647
  br i1 %650, label %651, label %658

651:                                              ; preds = %641
  %652 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %646, i64 0, i32 2, i32 1
  %653 = load %"class.gl::Program"**, %"class.gl::Program"*** %652, align 8
  %654 = getelementptr inbounds %"class.gl::Program"*, %"class.gl::Program"** %653, i64 %647
  %655 = load %"class.gl::Program"*, %"class.gl::Program"** %654, align 8
  %656 = icmp eq %"class.gl::Program"* %655, inttoptr (i64 -1 to %"class.gl::Program"*)
  %657 = select i1 %656, %"class.gl::Program"* null, %"class.gl::Program"* %655
  br label %720

658:                                              ; preds = %641
  %659 = add i64 %190, %647
  %660 = zext i64 %659 to i128
  %661 = mul nuw i128 %660, 11376068507788127593
  %662 = lshr i128 %661, 64
  %663 = xor i128 %662, %661
  %664 = trunc i128 %663 to i64
  %665 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %646, i64 0, i32 2, i32 2, i32 0, i32 0, i32 0
  %666 = load i8*, i8** %665, align 8
  %667 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %646, i64 0, i32 2, i32 2, i32 0, i32 0, i32 3
  %668 = load i64, i64* %667, align 8
  %669 = lshr i64 %664, 7
  %670 = ptrtoint i8* %666 to i64
  %671 = lshr i64 %670, 12
  %672 = xor i64 %671, %669
  %673 = trunc i128 %663 to i8
  %674 = and i8 %673, 127
  %675 = insertelement <16 x i8> undef, i8 %674, i32 0
  %676 = shufflevector <16 x i8> %675, <16 x i8> undef, <16 x i32> zeroinitializer
  %677 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %646, i64 0, i32 2, i32 2, i32 0, i32 0, i32 1
  br label %678

678:                                              ; preds = %708, %658
  %679 = phi i64 [ %672, %658 ], [ %710, %708 ]
  %680 = phi i64 [ 0, %658 ], [ %709, %708 ]
  %681 = and i64 %679, %668
  %682 = getelementptr inbounds i8, i8* %666, i64 %681
  %683 = bitcast i8* %682 to <16 x i8>*
  %684 = load <16 x i8>, <16 x i8>* %683, align 1
  %685 = icmp eq <16 x i8> %676, %684
  %686 = bitcast <16 x i1> %685 to i16
  %687 = icmp eq i16 %686, 0
  br i1 %687, label %704, label %688

688:                                              ; preds = %678
  %689 = zext i16 %686 to i32
  %690 = load %"union.absl::container_internal::map_slot_type.244"*, %"union.absl::container_internal::map_slot_type.244"** %677, align 8
  br label %691

691:                                              ; preds = %700, %688
  %692 = phi i32 [ %689, %688 ], [ %702, %700 ]
  %693 = call i32 @llvm.cttz.i32(i32 %692, i1 false) #13, !range !3
  %694 = zext i32 %693 to i64
  %695 = add i64 %681, %694
  %696 = and i64 %695, %668
  %697 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %690, i64 %696, i32 0, i32 0
  %698 = load i32, i32* %697, align 4
  %699 = icmp eq i32 %698, %645
  br i1 %699, label %711, label %700, !prof !4

700:                                              ; preds = %691
  %701 = add i32 %692, -1
  %702 = and i32 %701, %692
  %703 = icmp eq i32 %702, 0
  br i1 %703, label %704, label %691

704:                                              ; preds = %700, %678
  %705 = icmp eq <16 x i8> %684, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %706 = bitcast <16 x i1> %705 to i16
  %707 = icmp eq i16 %706, 0
  br i1 %707, label %708, label %720, !prof !5

708:                                              ; preds = %704
  %709 = add i64 %680, 16
  %710 = add i64 %709, %681
  br label %678

711:                                              ; preds = %691
  %712 = getelementptr inbounds i8, i8* %666, i64 %696
  %713 = icmp ne i8* %712, null
  call void @llvm.assume(i1 %713) #13
  %714 = load i8, i8* %712, align 1
  %715 = icmp sgt i8 %714, -1
  br i1 %715, label %717, label %716, !prof !4

716:                                              ; preds = %711
  call void @llvm.trap() #13
  unreachable

717:                                              ; preds = %711
  %718 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %690, i64 %696, i32 0, i32 1
  %719 = load %"class.gl::Program"*, %"class.gl::Program"** %718, align 8
  br label %720

720:                                              ; preds = %704, %651, %717
  %721 = phi %"class.gl::Program"* [ %657, %651 ], [ %719, %717 ], [ null, %704 ]
  %722 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %722) #13
  %723 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %724 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %723, i64 0, i32 1, i32 0
  store i8 10, i8* %724, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %722, i8* align 1 getelementptr inbounds ([11 x i8], [11 x i8]* @.str.12, i64 0, i64 0), i64 10, i1 false) #13
  %725 = getelementptr inbounds i8, i8* %722, i64 10
  store i8 0, i8* %725, align 2
  %726 = call i32 @_ZNK2gl7Program18getUniformLocationERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.gl::Program"* %721, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %13) #13
  %727 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 1, i32 0
  store i32 %726, i32* %727, align 4
  %728 = load i8, i8* %724, align 1
  %729 = icmp slt i8 %728, 0
  br i1 %729, label %730, label %733

730:                                              ; preds = %720
  %731 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %732 = load i8*, i8** %731, align 8
  call void @_ZdlPv(i8* %732) #16
  br label %733

733:                                              ; preds = %720, %730
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %722) #13
  %734 = bitcast %"class.std::__1::basic_string"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %734) #13
  %735 = bitcast %"class.std::__1::basic_string"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %736 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %735, i64 0, i32 1, i32 0
  store i8 9, i8* %736, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %734, i8* align 1 getelementptr inbounds ([10 x i8], [10 x i8]* @.str.13, i64 0, i64 0), i64 9, i1 false) #13
  %737 = getelementptr inbounds i8, i8* %734, i64 9
  store i8 0, i8* %737, align 1
  %738 = call i32 @_ZNK2gl7Program18getUniformLocationERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.gl::Program"* %721, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %14) #13
  %739 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 2, i32 0
  store i32 %738, i32* %739, align 8
  %740 = load i8, i8* %736, align 1
  %741 = icmp slt i8 %740, 0
  br i1 %741, label %742, label %745

742:                                              ; preds = %733
  %743 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %744 = load i8*, i8** %743, align 8
  call void @_ZdlPv(i8* %744) #16
  br label %745

745:                                              ; preds = %733, %742
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %734) #13
  %746 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %746) #13
  %747 = bitcast %"class.std::__1::basic_string"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %748 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %747, i64 0, i32 1, i32 0
  store i8 14, i8* %748, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %746, i8* align 1 getelementptr inbounds ([15 x i8], [15 x i8]* @.str.14, i64 0, i64 0), i64 14, i1 false) #13
  %749 = getelementptr inbounds i8, i8* %746, i64 14
  store i8 0, i8* %749, align 2
  %750 = call i32 @_ZNK2gl7Program18getUniformLocationERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.gl::Program"* %721, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %15) #13
  %751 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 3, i32 0
  store i32 %750, i32* %751, align 4
  %752 = load i8, i8* %748, align 1
  %753 = icmp slt i8 %752, 0
  br i1 %753, label %754, label %757

754:                                              ; preds = %745
  %755 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %756 = load i8*, i8** %755, align 8
  call void @_ZdlPv(i8* %756) #16
  br label %757

757:                                              ; preds = %745, %754
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %746) #13
  %758 = bitcast %"class.std::__1::basic_string"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %758) #13
  %759 = bitcast %"class.std::__1::basic_string"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %760 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %759, i64 0, i32 1, i32 0
  store i8 15, i8* %760, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %758, i8* align 1 getelementptr inbounds ([16 x i8], [16 x i8]* @.str.15, i64 0, i64 0), i64 15, i1 false) #13
  %761 = getelementptr inbounds i8, i8* %758, i64 15
  store i8 0, i8* %761, align 1
  %762 = call i32 @_ZNK2gl7Program18getUniformLocationERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.gl::Program"* %721, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %16) #13
  %763 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 4, i32 0
  store i32 %762, i32* %763, align 8
  %764 = load i8, i8* %760, align 1
  %765 = icmp slt i8 %764, 0
  br i1 %765, label %766, label %769

766:                                              ; preds = %757
  %767 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %768 = load i8*, i8** %767, align 8
  call void @_ZdlPv(i8* %768) #16
  br label %769

769:                                              ; preds = %757, %766
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %758) #13
  %770 = bitcast %"class.std::__1::basic_stringstream"* %17 to i8*
  %771 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %17, i64 0, i32 2, i32 0, i32 0
  %772 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %17, i64 0, i32 0, i32 0, i32 0
  %773 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %17, i64 0, i32 0, i32 1, i32 0
  %774 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %17, i64 0, i32 1
  %775 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %774, i64 0, i32 0
  %776 = bitcast %"class.std::__1::basic_stringstream"* %17 to i64*
  %777 = bitcast %"class.std::__1::basic_stringstream"* %17 to i8**
  %778 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %17, i64 0, i32 0, i32 0, i32 1
  %779 = bitcast %"class.std::__1::basic_stringbuf"* %774 to i8*
  %780 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %17, i64 0, i32 0, i32 1
  %781 = bitcast %"class.std::__1::basic_ostream.base"* %780 to i64*
  %782 = bitcast %"class.std::__1::basic_ostream.base"* %780 to i8*
  %783 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %774, i64 0, i32 0, i32 0
  %784 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %17, i64 0, i32 1, i32 1
  %785 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %17, i64 0, i32 1, i32 3
  %786 = bitcast %"class.std::__1::basic_string"* %784 to i8*
  %787 = bitcast %"class.std::__1::basic_stringstream"* %18 to i8*
  %788 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %18, i64 0, i32 2, i32 0, i32 0
  %789 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %18, i64 0, i32 0, i32 0, i32 0
  %790 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %18, i64 0, i32 0, i32 1, i32 0
  %791 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %18, i64 0, i32 1
  %792 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %791, i64 0, i32 0
  %793 = bitcast %"class.std::__1::basic_stringstream"* %18 to i64*
  %794 = bitcast %"class.std::__1::basic_stringstream"* %18 to i8**
  %795 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %18, i64 0, i32 0, i32 0, i32 1
  %796 = bitcast %"class.std::__1::basic_stringbuf"* %791 to i8*
  %797 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %18, i64 0, i32 0, i32 1
  %798 = bitcast %"class.std::__1::basic_ostream.base"* %797 to i64*
  %799 = bitcast %"class.std::__1::basic_ostream.base"* %797 to i8*
  %800 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %791, i64 0, i32 0, i32 0
  %801 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %18, i64 0, i32 1, i32 1
  %802 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %18, i64 0, i32 1, i32 3
  %803 = bitcast %"class.std::__1::basic_string"* %801 to i8*
  %804 = bitcast %"class.std::__1::basic_ostream.base"* %780 to %"class.std::__1::basic_ostream"*
  %805 = bitcast %"class.std::__1::basic_ostream.base"* %797 to %"class.std::__1::basic_ostream"*
  %806 = bitcast %"class.std::__1::basic_string"* %19 to i8*
  %807 = bitcast %"class.std::__1::basic_string"* %20 to i8*
  %808 = bitcast %"class.std::__1::basic_string"* %20 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %809 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %808, i64 0, i32 1, i32 0
  %810 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %811 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %812 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %813 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %814 = bitcast %"class.std::__1::basic_string"* %19 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %815 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %814, i64 0, i32 1, i32 0
  %816 = bitcast %"class.std::__1::basic_string"* %21 to i8*
  %817 = bitcast %"class.std::__1::basic_string"* %22 to i8*
  %818 = bitcast %"class.std::__1::basic_string"* %22 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %819 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %818, i64 0, i32 1, i32 0
  %820 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %821 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %822 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %823 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %824 = bitcast %"class.std::__1::basic_string"* %21 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %825 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %824, i64 0, i32 1, i32 0
  %826 = bitcast %"class.std::__1::basic_string"* %801 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %827 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %826, i64 0, i32 1, i32 0
  %828 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %801, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %829 = bitcast %"class.std::__1::basic_stringstream"* %18 to %"class.std::__1::basic_iostream"*
  %830 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %18, i64 0, i32 2
  %831 = bitcast %"class.std::__1::basic_ios.base"* %830 to %"class.std::__1::basic_ios"*
  %832 = bitcast %"class.std::__1::basic_string"* %784 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %833 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %832, i64 0, i32 1, i32 0
  %834 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %784, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %835 = bitcast %"class.std::__1::basic_stringstream"* %17 to %"class.std::__1::basic_iostream"*
  %836 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %17, i64 0, i32 2
  %837 = bitcast %"class.std::__1::basic_ios.base"* %836 to %"class.std::__1::basic_ios"*
  %838 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %17, i64 0, i32 0, i32 0, i32 1
  %839 = bitcast i64* %838 to i8*
  %840 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %18, i64 0, i32 0, i32 0, i32 1
  %841 = bitcast i64* %840 to i8*
  br label %1693

842:                                              ; preds = %1823
  %843 = bitcast %"class.std::__1::basic_string"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %843) #13
  %844 = bitcast %"class.std::__1::basic_string"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %845 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %844, i64 0, i32 1, i32 0
  store i8 17, i8* %845, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %843, i8* align 1 getelementptr inbounds ([18 x i8], [18 x i8]* @.str.18, i64 0, i64 0), i64 17, i1 false) #13
  %846 = getelementptr inbounds i8, i8* %843, i64 17
  store i8 0, i8* %846, align 1
  %847 = call i32 @_ZNK2gl7Program18getUniformLocationERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.gl::Program"* %721, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %23) #13
  %848 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 5, i32 0
  store i32 %847, i32* %848, align 4
  %849 = load i8, i8* %845, align 1
  %850 = icmp slt i8 %849, 0
  br i1 %850, label %851, label %854

851:                                              ; preds = %842
  %852 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %853 = load i8*, i8** %852, align 8
  call void @_ZdlPv(i8* %853) #16
  br label %854

854:                                              ; preds = %842, %851
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %843) #13
  %855 = bitcast %"class.std::__1::basic_string"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %855) #13
  %856 = call i8* @_Znwm(i64 32) #16
  %857 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %856, i8** %857, align 8
  %858 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %859 = bitcast i64* %858 to <2 x i64>*
  store <2 x i64> <i64 23, i64 -9223372036854775776>, <2 x i64>* %859, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %856, i8* align 1 getelementptr inbounds ([24 x i8], [24 x i8]* @.str.19, i64 0, i64 0), i64 23, i1 false) #13
  %860 = getelementptr inbounds i8, i8* %856, i64 23
  store i8 0, i8* %860, align 1
  %861 = call i32 @_ZNK2gl7Program18getUniformLocationERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.gl::Program"* %721, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %24) #13
  %862 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 6, i32 0
  store i32 %861, i32* %862, align 8
  %863 = bitcast %"class.std::__1::basic_string"* %24 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %864 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %863, i64 0, i32 1, i32 0
  %865 = load i8, i8* %864, align 1
  %866 = icmp slt i8 %865, 0
  br i1 %866, label %867, label %869

867:                                              ; preds = %854
  %868 = load i8*, i8** %857, align 8
  call void @_ZdlPv(i8* %868) #16
  br label %869

869:                                              ; preds = %854, %867
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %855) #13
  %870 = bitcast %"class.std::__1::basic_string"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %870) #13
  %871 = bitcast %"class.std::__1::basic_string"* %25 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %872 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %871, i64 0, i32 1, i32 0
  store i8 14, i8* %872, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %870, i8* align 1 getelementptr inbounds ([15 x i8], [15 x i8]* @.str.20, i64 0, i64 0), i64 14, i1 false) #13
  %873 = getelementptr inbounds i8, i8* %870, i64 14
  store i8 0, i8* %873, align 2
  %874 = call i32 @_ZNK2gl7Program18getUniformLocationERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.gl::Program"* %721, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %25) #13
  %875 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 9, i32 0
  store i32 %874, i32* %875, align 4
  %876 = load i8, i8* %872, align 1
  %877 = icmp slt i8 %876, 0
  br i1 %877, label %878, label %881

878:                                              ; preds = %869
  %879 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %880 = load i8*, i8** %879, align 8
  call void @_ZdlPv(i8* %880) #16
  br label %881

881:                                              ; preds = %869, %878
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %870) #13
  %882 = bitcast %"class.std::__1::basic_string"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %882) #13
  %883 = bitcast %"class.std::__1::basic_string"* %26 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %884 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %883, i64 0, i32 1, i32 0
  store i8 16, i8* %884, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %882, i8* align 1 getelementptr inbounds ([17 x i8], [17 x i8]* @.str.21, i64 0, i64 0), i64 16, i1 false) #13
  %885 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %886 = bitcast i64* %885 to i8*
  store i8 0, i8* %886, align 8
  %887 = call i32 @_ZNK2gl7Program18getUniformLocationERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.gl::Program"* %721, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %26) #13
  %888 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 10, i32 0
  store i32 %887, i32* %888, align 8
  %889 = load i8, i8* %884, align 1
  %890 = icmp slt i8 %889, 0
  br i1 %890, label %891, label %894

891:                                              ; preds = %881
  %892 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %893 = load i8*, i8** %892, align 8
  call void @_ZdlPv(i8* %893) #16
  br label %894

894:                                              ; preds = %881, %891
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %882) #13
  %895 = bitcast %"class.std::__1::basic_string"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %895) #13
  %896 = bitcast %"class.std::__1::basic_string"* %27 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %897 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %896, i64 0, i32 1, i32 0
  store i8 11, i8* %897, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %895, i8* align 1 getelementptr inbounds ([12 x i8], [12 x i8]* @.str.22, i64 0, i64 0), i64 11, i1 false) #13
  %898 = getelementptr inbounds i8, i8* %895, i64 11
  store i8 0, i8* %898, align 1
  %899 = call i32 @_ZNK2gl7Program18getUniformLocationERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.gl::Program"* %721, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %27) #13
  %900 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 11, i32 0
  store i32 %899, i32* %900, align 4
  %901 = load i8, i8* %897, align 1
  %902 = icmp slt i8 %901, 0
  br i1 %902, label %903, label %906

903:                                              ; preds = %894
  %904 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %905 = load i8*, i8** %904, align 8
  call void @_ZdlPv(i8* %905) #16
  br label %906

906:                                              ; preds = %894, %903
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %895) #13
  %907 = bitcast %"class.std::__1::basic_string"* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %907) #13
  %908 = bitcast %"class.std::__1::basic_string"* %28 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %909 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %908, i64 0, i32 1, i32 0
  store i8 13, i8* %909, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %907, i8* align 1 getelementptr inbounds ([14 x i8], [14 x i8]* @.str.23, i64 0, i64 0), i64 13, i1 false) #13
  %910 = getelementptr inbounds i8, i8* %907, i64 13
  store i8 0, i8* %910, align 1
  %911 = call i32 @_ZNK2gl7Program18getUniformLocationERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.gl::Program"* %721, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %28) #13
  %912 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 12, i32 0
  store i32 %911, i32* %912, align 8
  %913 = load i8, i8* %909, align 1
  %914 = icmp slt i8 %913, 0
  br i1 %914, label %915, label %918

915:                                              ; preds = %906
  %916 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %917 = load i8*, i8** %916, align 8
  call void @_ZdlPv(i8* %917) #16
  br label %918

918:                                              ; preds = %906, %915
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %907) #13
  %919 = bitcast %"class.std::__1::basic_string"* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %919) #13
  %920 = bitcast %"class.std::__1::basic_string"* %29 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %921 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %920, i64 0, i32 1, i32 0
  store i8 8, i8* %921, align 1
  %922 = bitcast %"class.std::__1::basic_string"* %29 to i64*
  store i64 7090761891477418611, i64* %922, align 8
  %923 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %924 = bitcast i64* %923 to i8*
  store i8 0, i8* %924, align 8
  %925 = call i32 @_ZNK2gl7Program18getUniformLocationERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.gl::Program"* %721, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %29) #13
  %926 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 13, i32 0
  store i32 %925, i32* %926, align 4
  %927 = load i8, i8* %921, align 1
  %928 = icmp slt i8 %927, 0
  br i1 %928, label %929, label %932

929:                                              ; preds = %918
  %930 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %931 = load i8*, i8** %930, align 8
  call void @_ZdlPv(i8* %931) #16
  br label %932

932:                                              ; preds = %918, %929
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %919) #13
  %933 = bitcast %"class.std::__1::basic_string"* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %933) #13
  %934 = bitcast %"class.std::__1::basic_string"* %30 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %935 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %934, i64 0, i32 1, i32 0
  store i8 10, i8* %935, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %933, i8* align 1 getelementptr inbounds ([11 x i8], [11 x i8]* @.str.25, i64 0, i64 0), i64 10, i1 false) #13
  %936 = getelementptr inbounds i8, i8* %933, i64 10
  store i8 0, i8* %936, align 2
  %937 = call i32 @_ZNK2gl7Program18getUniformLocationERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.gl::Program"* %721, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %30) #13
  %938 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 14, i32 0
  store i32 %937, i32* %938, align 8
  %939 = load i8, i8* %935, align 1
  %940 = icmp slt i8 %939, 0
  br i1 %940, label %941, label %944

941:                                              ; preds = %932
  %942 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %943 = load i8*, i8** %942, align 8
  call void @_ZdlPv(i8* %943) #16
  br label %944

944:                                              ; preds = %932, %941
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %933) #13
  %945 = bitcast %"class.std::__1::basic_string"* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %945) #13
  %946 = bitcast %"class.std::__1::basic_string"* %31 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %947 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %946, i64 0, i32 1, i32 0
  store i8 8, i8* %947, align 1
  %948 = bitcast %"class.std::__1::basic_string"* %31 to i64*
  store i64 7090761891494195827, i64* %948, align 8
  %949 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %950 = bitcast i64* %949 to i8*
  store i8 0, i8* %950, align 8
  %951 = call i32 @_ZNK2gl7Program18getUniformLocationERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.gl::Program"* %721, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %31) #13
  %952 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 15, i32 0
  store i32 %951, i32* %952, align 4
  %953 = load i8, i8* %947, align 1
  %954 = icmp slt i8 %953, 0
  br i1 %954, label %955, label %958

955:                                              ; preds = %944
  %956 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %957 = load i8*, i8** %956, align 8
  call void @_ZdlPv(i8* %957) #16
  br label %958

958:                                              ; preds = %944, %955
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %945) #13
  %959 = bitcast %"class.std::__1::basic_string"* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %959) #13
  %960 = bitcast %"class.std::__1::basic_string"* %32 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %961 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %960, i64 0, i32 1, i32 0
  store i8 10, i8* %961, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %959, i8* align 1 getelementptr inbounds ([11 x i8], [11 x i8]* @.str.27, i64 0, i64 0), i64 10, i1 false) #13
  %962 = getelementptr inbounds i8, i8* %959, i64 10
  store i8 0, i8* %962, align 2
  %963 = call i32 @_ZNK2gl7Program18getUniformLocationERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.gl::Program"* %721, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %32) #13
  %964 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 16, i32 0
  store i32 %963, i32* %964, align 8
  %965 = load i8, i8* %961, align 1
  %966 = icmp slt i8 %965, 0
  br i1 %966, label %967, label %970

967:                                              ; preds = %958
  %968 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %969 = load i8*, i8** %968, align 8
  call void @_ZdlPv(i8* %969) #16
  br label %970

970:                                              ; preds = %958, %967
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %959) #13
  %971 = bitcast %"class.std::__1::basic_string"* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %971) #13
  %972 = bitcast %"class.std::__1::basic_string"* %33 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %973 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %972, i64 0, i32 1, i32 0
  store i8 8, i8* %973, align 1
  %974 = bitcast %"class.std::__1::basic_string"* %33 to i64*
  store i64 7090761891510973043, i64* %974, align 8
  %975 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %976 = bitcast i64* %975 to i8*
  store i8 0, i8* %976, align 8
  %977 = call i32 @_ZNK2gl7Program18getUniformLocationERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.gl::Program"* %721, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %33) #13
  %978 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 17, i32 0
  store i32 %977, i32* %978, align 4
  %979 = load i8, i8* %973, align 1
  %980 = icmp slt i8 %979, 0
  br i1 %980, label %981, label %984

981:                                              ; preds = %970
  %982 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %983 = load i8*, i8** %982, align 8
  call void @_ZdlPv(i8* %983) #16
  br label %984

984:                                              ; preds = %970, %981
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %971) #13
  %985 = bitcast %"class.std::__1::basic_string"* %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %985) #13
  %986 = bitcast %"class.std::__1::basic_string"* %34 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %987 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %986, i64 0, i32 1, i32 0
  store i8 10, i8* %987, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %985, i8* align 1 getelementptr inbounds ([11 x i8], [11 x i8]* @.str.29, i64 0, i64 0), i64 10, i1 false) #13
  %988 = getelementptr inbounds i8, i8* %985, i64 10
  store i8 0, i8* %988, align 2
  %989 = call i32 @_ZNK2gl7Program18getUniformLocationERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.gl::Program"* %721, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %34) #13
  %990 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 18, i32 0
  store i32 %989, i32* %990, align 8
  %991 = load i8, i8* %987, align 1
  %992 = icmp slt i8 %991, 0
  br i1 %992, label %993, label %996

993:                                              ; preds = %984
  %994 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %995 = load i8*, i8** %994, align 8
  call void @_ZdlPv(i8* %995) #16
  br label %996

996:                                              ; preds = %984, %993
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %985) #13
  %997 = bitcast %"class.std::__1::basic_string"* %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %997) #13
  %998 = bitcast %"class.std::__1::basic_string"* %35 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %999 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %998, i64 0, i32 1, i32 0
  store i8 7, i8* %999, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %997, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @.str.30, i64 0, i64 0), i64 7, i1 false) #13
  %1000 = getelementptr inbounds i8, i8* %997, i64 7
  store i8 0, i8* %1000, align 1
  %1001 = call i32 @_ZNK2gl7Program18getUniformLocationERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.gl::Program"* %721, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %35) #13
  %1002 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 19, i32 0
  store i32 %1001, i32* %1002, align 4
  %1003 = load i8, i8* %999, align 1
  %1004 = icmp slt i8 %1003, 0
  br i1 %1004, label %1005, label %1008

1005:                                             ; preds = %996
  %1006 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1007 = load i8*, i8** %1006, align 8
  call void @_ZdlPv(i8* %1007) #16
  br label %1008

1008:                                             ; preds = %996, %1005
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %997) #13
  %1009 = bitcast %"class.std::__1::basic_string"* %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1009) #13
  %1010 = bitcast %"class.std::__1::basic_string"* %36 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1011 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1010, i64 0, i32 1, i32 0
  store i8 9, i8* %1011, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1009, i8* align 1 getelementptr inbounds ([10 x i8], [10 x i8]* @.str.31, i64 0, i64 0), i64 9, i1 false) #13
  %1012 = getelementptr inbounds i8, i8* %1009, i64 9
  store i8 0, i8* %1012, align 1
  %1013 = call i32 @_ZNK2gl7Program18getUniformLocationERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.gl::Program"* %721, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %36) #13
  %1014 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 20, i32 0
  store i32 %1013, i32* %1014, align 8
  %1015 = load i8, i8* %1011, align 1
  %1016 = icmp slt i8 %1015, 0
  br i1 %1016, label %1017, label %1020

1017:                                             ; preds = %1008
  %1018 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1019 = load i8*, i8** %1018, align 8
  call void @_ZdlPv(i8* %1019) #16
  br label %1020

1020:                                             ; preds = %1008, %1017
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1009) #13
  %1021 = bitcast %"class.std::__1::basic_string"* %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1021) #13
  %1022 = bitcast %"class.std::__1::basic_string"* %37 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1023 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1022, i64 0, i32 1, i32 0
  store i8 7, i8* %1023, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1021, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @.str.32, i64 0, i64 0), i64 7, i1 false) #13
  %1024 = getelementptr inbounds i8, i8* %1021, i64 7
  store i8 0, i8* %1024, align 1
  %1025 = call i32 @_ZNK2gl7Program18getUniformLocationERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.gl::Program"* %721, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %37) #13
  %1026 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 21, i32 0
  store i32 %1025, i32* %1026, align 4
  %1027 = load i8, i8* %1023, align 1
  %1028 = icmp slt i8 %1027, 0
  br i1 %1028, label %1029, label %1032

1029:                                             ; preds = %1020
  %1030 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1031 = load i8*, i8** %1030, align 8
  call void @_ZdlPv(i8* %1031) #16
  br label %1032

1032:                                             ; preds = %1020, %1029
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1021) #13
  %1033 = bitcast %"class.std::__1::basic_string"* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1033) #13
  %1034 = bitcast %"class.std::__1::basic_string"* %38 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1035 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1034, i64 0, i32 1, i32 0
  store i8 9, i8* %1035, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1033, i8* align 1 getelementptr inbounds ([10 x i8], [10 x i8]* @.str.33, i64 0, i64 0), i64 9, i1 false) #13
  %1036 = getelementptr inbounds i8, i8* %1033, i64 9
  store i8 0, i8* %1036, align 1
  %1037 = call i32 @_ZNK2gl7Program18getUniformLocationERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.gl::Program"* %721, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %38) #13
  %1038 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 22, i32 0
  store i32 %1037, i32* %1038, align 8
  %1039 = load i8, i8* %1035, align 1
  %1040 = icmp slt i8 %1039, 0
  br i1 %1040, label %1041, label %1044

1041:                                             ; preds = %1032
  %1042 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1043 = load i8*, i8** %1042, align 8
  call void @_ZdlPv(i8* %1043) #16
  br label %1044

1044:                                             ; preds = %1032, %1041
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1033) #13
  %1045 = bitcast %"class.std::__1::basic_string"* %39 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1045) #13
  %1046 = bitcast %"class.std::__1::basic_string"* %39 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1047 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1046, i64 0, i32 1, i32 0
  store i8 7, i8* %1047, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1045, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @.str.34, i64 0, i64 0), i64 7, i1 false) #13
  %1048 = getelementptr inbounds i8, i8* %1045, i64 7
  store i8 0, i8* %1048, align 1
  %1049 = call i32 @_ZNK2gl7Program18getUniformLocationERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.gl::Program"* %721, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %39) #13
  %1050 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 23, i32 0
  store i32 %1049, i32* %1050, align 4
  %1051 = load i8, i8* %1047, align 1
  %1052 = icmp slt i8 %1051, 0
  br i1 %1052, label %1053, label %1056

1053:                                             ; preds = %1044
  %1054 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %39, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1055 = load i8*, i8** %1054, align 8
  call void @_ZdlPv(i8* %1055) #16
  br label %1056

1056:                                             ; preds = %1044, %1053
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1045) #13
  %1057 = bitcast %"class.std::__1::basic_string"* %40 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1057) #13
  %1058 = bitcast %"class.std::__1::basic_string"* %40 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1059 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1058, i64 0, i32 1, i32 0
  store i8 9, i8* %1059, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1057, i8* align 1 getelementptr inbounds ([10 x i8], [10 x i8]* @.str.35, i64 0, i64 0), i64 9, i1 false) #13
  %1060 = getelementptr inbounds i8, i8* %1057, i64 9
  store i8 0, i8* %1060, align 1
  %1061 = call i32 @_ZNK2gl7Program18getUniformLocationERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.gl::Program"* %721, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %40) #13
  %1062 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 24, i32 0
  store i32 %1061, i32* %1062, align 8
  %1063 = load i8, i8* %1059, align 1
  %1064 = icmp slt i8 %1063, 0
  br i1 %1064, label %1065, label %1068

1065:                                             ; preds = %1056
  %1066 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1067 = load i8*, i8** %1066, align 8
  call void @_ZdlPv(i8* %1067) #16
  br label %1068

1068:                                             ; preds = %1056, %1065
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1057) #13
  %1069 = bitcast %"class.std::__1::basic_string"* %41 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1069) #13
  %1070 = bitcast %"class.std::__1::basic_string"* %41 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1071 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1070, i64 0, i32 1, i32 0
  store i8 17, i8* %1071, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1069, i8* align 1 getelementptr inbounds ([18 x i8], [18 x i8]* @.str.36, i64 0, i64 0), i64 17, i1 false) #13
  %1072 = getelementptr inbounds i8, i8* %1069, i64 17
  store i8 0, i8* %1072, align 1
  %1073 = call i32 @_ZNK2gl7Program18getUniformLocationERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.gl::Program"* %721, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %41) #13
  %1074 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 25, i32 0
  store i32 %1073, i32* %1074, align 4
  %1075 = load i8, i8* %1071, align 1
  %1076 = icmp slt i8 %1075, 0
  br i1 %1076, label %1077, label %1080

1077:                                             ; preds = %1068
  %1078 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %41, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1079 = load i8*, i8** %1078, align 8
  call void @_ZdlPv(i8* %1079) #16
  br label %1080

1080:                                             ; preds = %1068, %1077
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1069) #13
  %1081 = bitcast %"class.std::__1::basic_string"* %42 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1081) #13
  %1082 = bitcast %"class.std::__1::basic_string"* %42 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1083 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1082, i64 0, i32 1, i32 0
  store i8 21, i8* %1083, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1081, i8* align 1 getelementptr inbounds ([22 x i8], [22 x i8]* @.str.37, i64 0, i64 0), i64 21, i1 false) #13
  %1084 = getelementptr inbounds i8, i8* %1081, i64 21
  store i8 0, i8* %1084, align 1
  %1085 = call i32 @_ZNK2gl7Program18getUniformLocationERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.gl::Program"* %721, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %42) #13
  %1086 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 26, i32 0
  store i32 %1085, i32* %1086, align 8
  %1087 = load i8, i8* %1083, align 1
  %1088 = icmp slt i8 %1087, 0
  br i1 %1088, label %1089, label %1092

1089:                                             ; preds = %1080
  %1090 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %42, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1091 = load i8*, i8** %1090, align 8
  call void @_ZdlPv(i8* %1091) #16
  br label %1092

1092:                                             ; preds = %1080, %1089
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1081) #13
  %1093 = bitcast %"class.std::__1::basic_string"* %43 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1093) #13
  %1094 = call i8* @_Znwm(i64 32) #16
  %1095 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %1094, i8** %1095, align 8
  %1096 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1097 = bitcast i64* %1096 to <2 x i64>*
  store <2 x i64> <i64 23, i64 -9223372036854775776>, <2 x i64>* %1097, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %1094, i8* align 1 getelementptr inbounds ([24 x i8], [24 x i8]* @.str.38, i64 0, i64 0), i64 23, i1 false) #13
  %1098 = getelementptr inbounds i8, i8* %1094, i64 23
  store i8 0, i8* %1098, align 1
  %1099 = call i32 @_ZNK2gl7Program18getUniformLocationERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.gl::Program"* %721, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %43) #13
  %1100 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 27, i32 0
  store i32 %1099, i32* %1100, align 4
  %1101 = bitcast %"class.std::__1::basic_string"* %43 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1102 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1101, i64 0, i32 1, i32 0
  %1103 = load i8, i8* %1102, align 1
  %1104 = icmp slt i8 %1103, 0
  br i1 %1104, label %1105, label %1107

1105:                                             ; preds = %1092
  %1106 = load i8*, i8** %1095, align 8
  call void @_ZdlPv(i8* %1106) #16
  br label %1107

1107:                                             ; preds = %1092, %1105
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1093) #13
  %1108 = bitcast %"class.std::__1::basic_string"* %44 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1108) #13
  %1109 = call i8* @_Znwm(i64 32) #16
  %1110 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %44, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %1109, i8** %1110, align 8
  %1111 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %44, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1112 = bitcast i64* %1111 to <2 x i64>*
  store <2 x i64> <i64 26, i64 -9223372036854775776>, <2 x i64>* %1112, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %1109, i8* align 1 getelementptr inbounds ([27 x i8], [27 x i8]* @.str.39, i64 0, i64 0), i64 26, i1 false) #13
  %1113 = getelementptr inbounds i8, i8* %1109, i64 26
  store i8 0, i8* %1113, align 1
  %1114 = call i32 @_ZNK2gl7Program18getUniformLocationERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.gl::Program"* %721, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %44) #13
  %1115 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 28, i32 0
  store i32 %1114, i32* %1115, align 8
  %1116 = bitcast %"class.std::__1::basic_string"* %44 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1117 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1116, i64 0, i32 1, i32 0
  %1118 = load i8, i8* %1117, align 1
  %1119 = icmp slt i8 %1118, 0
  br i1 %1119, label %1120, label %1122

1120:                                             ; preds = %1107
  %1121 = load i8*, i8** %1110, align 8
  call void @_ZdlPv(i8* %1121) #16
  br label %1122

1122:                                             ; preds = %1107, %1120
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1108) #13
  %1123 = bitcast %"class.std::__1::basic_string"* %45 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1123) #13
  %1124 = bitcast %"class.std::__1::basic_string"* %45 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1125 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1124, i64 0, i32 1, i32 0
  store i8 17, i8* %1125, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1123, i8* align 1 getelementptr inbounds ([18 x i8], [18 x i8]* @.str.40, i64 0, i64 0), i64 17, i1 false) #13
  %1126 = getelementptr inbounds i8, i8* %1123, i64 17
  store i8 0, i8* %1126, align 1
  %1127 = call i32 @_ZNK2gl7Program18getUniformLocationERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.gl::Program"* %721, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %45) #13
  %1128 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 29, i32 0
  store i32 %1127, i32* %1128, align 4
  %1129 = load i8, i8* %1125, align 1
  %1130 = icmp slt i8 %1129, 0
  br i1 %1130, label %1131, label %1134

1131:                                             ; preds = %1122
  %1132 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %45, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1133 = load i8*, i8** %1132, align 8
  call void @_ZdlPv(i8* %1133) #16
  br label %1134

1134:                                             ; preds = %1122, %1131
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1123) #13
  %1135 = bitcast %"class.std::__1::basic_string"* %46 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1135) #13
  %1136 = bitcast %"class.std::__1::basic_string"* %46 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1137 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1136, i64 0, i32 1, i32 0
  store i8 10, i8* %1137, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1135, i8* align 1 getelementptr inbounds ([11 x i8], [11 x i8]* @.str.41, i64 0, i64 0), i64 10, i1 false) #13
  %1138 = getelementptr inbounds i8, i8* %1135, i64 10
  store i8 0, i8* %1138, align 2
  %1139 = call i32 @_ZNK2gl7Program18getUniformLocationERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.gl::Program"* %721, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %46) #13
  %1140 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 30, i32 0
  store i32 %1139, i32* %1140, align 8
  %1141 = load i8, i8* %1137, align 1
  %1142 = icmp slt i8 %1141, 0
  br i1 %1142, label %1143, label %1146

1143:                                             ; preds = %1134
  %1144 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %46, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1145 = load i8*, i8** %1144, align 8
  call void @_ZdlPv(i8* %1145) #16
  br label %1146

1146:                                             ; preds = %1134, %1143
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1135) #13
  %1147 = bitcast %"class.std::__1::basic_string"* %47 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1147) #13
  %1148 = bitcast %"class.std::__1::basic_string"* %47 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1149 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1148, i64 0, i32 1, i32 0
  store i8 14, i8* %1149, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1147, i8* align 1 getelementptr inbounds ([15 x i8], [15 x i8]* @.str.42, i64 0, i64 0), i64 14, i1 false) #13
  %1150 = getelementptr inbounds i8, i8* %1147, i64 14
  store i8 0, i8* %1150, align 2
  %1151 = call i32 @_ZNK2gl7Program18getUniformLocationERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.gl::Program"* %721, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %47) #13
  %1152 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 31, i32 0
  store i32 %1151, i32* %1152, align 4
  %1153 = load i8, i8* %1149, align 1
  %1154 = icmp slt i8 %1153, 0
  br i1 %1154, label %1155, label %1158

1155:                                             ; preds = %1146
  %1156 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %47, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1157 = load i8*, i8** %1156, align 8
  call void @_ZdlPv(i8* %1157) #16
  br label %1158

1158:                                             ; preds = %1146, %1155
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1147) #13
  %1159 = bitcast %"class.std::__1::basic_string"* %48 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1159) #13
  %1160 = bitcast %"class.std::__1::basic_string"* %48 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1161 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1160, i64 0, i32 1, i32 0
  store i8 16, i8* %1161, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1159, i8* align 1 getelementptr inbounds ([17 x i8], [17 x i8]* @.str.43, i64 0, i64 0), i64 16, i1 false) #13
  %1162 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %48, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %1163 = bitcast i64* %1162 to i8*
  store i8 0, i8* %1163, align 8
  %1164 = call i32 @_ZNK2gl7Program18getUniformLocationERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.gl::Program"* %721, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %48) #13
  %1165 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 32, i32 0
  store i32 %1164, i32* %1165, align 8
  %1166 = load i8, i8* %1161, align 1
  %1167 = icmp slt i8 %1166, 0
  br i1 %1167, label %1168, label %1171

1168:                                             ; preds = %1158
  %1169 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %48, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1170 = load i8*, i8** %1169, align 8
  call void @_ZdlPv(i8* %1170) #16
  br label %1171

1171:                                             ; preds = %1158, %1168
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1159) #13
  %1172 = bitcast %"class.std::__1::basic_string"* %49 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1172) #13
  %1173 = bitcast %"class.std::__1::basic_string"* %49 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1174 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1173, i64 0, i32 1, i32 0
  store i8 15, i8* %1174, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1172, i8* align 1 getelementptr inbounds ([16 x i8], [16 x i8]* @.str.44, i64 0, i64 0), i64 15, i1 false) #13
  %1175 = getelementptr inbounds i8, i8* %1172, i64 15
  store i8 0, i8* %1175, align 1
  %1176 = call i32 @_ZNK2gl7Program18getUniformLocationERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.gl::Program"* %721, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %49) #13
  %1177 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 33, i32 0
  store i32 %1176, i32* %1177, align 4
  %1178 = load i8, i8* %1174, align 1
  %1179 = icmp slt i8 %1178, 0
  br i1 %1179, label %1180, label %1183

1180:                                             ; preds = %1171
  %1181 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %49, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1182 = load i8*, i8** %1181, align 8
  call void @_ZdlPv(i8* %1182) #16
  br label %1183

1183:                                             ; preds = %1171, %1180
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1172) #13
  %1184 = bitcast %"class.std::__1::basic_string"* %50 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1184) #13
  %1185 = bitcast %"class.std::__1::basic_string"* %50 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1186 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1185, i64 0, i32 1, i32 0
  store i8 21, i8* %1186, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1184, i8* align 1 getelementptr inbounds ([22 x i8], [22 x i8]* @.str.45, i64 0, i64 0), i64 21, i1 false) #13
  %1187 = getelementptr inbounds i8, i8* %1184, i64 21
  store i8 0, i8* %1187, align 1
  %1188 = call i32 @_ZNK2gl7Program18getUniformLocationERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.gl::Program"* %721, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %50) #13
  %1189 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 34, i32 0
  store i32 %1188, i32* %1189, align 8
  %1190 = load i8, i8* %1186, align 1
  %1191 = icmp slt i8 %1190, 0
  br i1 %1191, label %1192, label %1195

1192:                                             ; preds = %1183
  %1193 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %50, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1194 = load i8*, i8** %1193, align 8
  call void @_ZdlPv(i8* %1194) #16
  br label %1195

1195:                                             ; preds = %1183, %1192
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1184) #13
  %1196 = bitcast %"class.std::__1::basic_string"* %51 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1196) #13
  %1197 = bitcast %"class.std::__1::basic_string"* %51 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1198 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1197, i64 0, i32 1, i32 0
  store i8 16, i8* %1198, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1196, i8* align 1 getelementptr inbounds ([17 x i8], [17 x i8]* @.str.46, i64 0, i64 0), i64 16, i1 false) #13
  %1199 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %51, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %1200 = bitcast i64* %1199 to i8*
  store i8 0, i8* %1200, align 8
  %1201 = call i32 @_ZNK2gl7Program18getUniformLocationERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.gl::Program"* %721, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %51) #13
  %1202 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 35, i32 0
  store i32 %1201, i32* %1202, align 4
  %1203 = load i8, i8* %1198, align 1
  %1204 = icmp slt i8 %1203, 0
  br i1 %1204, label %1205, label %1208

1205:                                             ; preds = %1195
  %1206 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %51, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1207 = load i8*, i8** %1206, align 8
  call void @_ZdlPv(i8* %1207) #16
  br label %1208

1208:                                             ; preds = %1195, %1205
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1196) #13
  %1209 = bitcast %"class.std::__1::basic_string"* %52 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1209) #13
  %1210 = bitcast %"class.std::__1::basic_string"* %52 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1211 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1210, i64 0, i32 1, i32 0
  store i8 21, i8* %1211, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1209, i8* align 1 getelementptr inbounds ([22 x i8], [22 x i8]* @.str.47, i64 0, i64 0), i64 21, i1 false) #13
  %1212 = getelementptr inbounds i8, i8* %1209, i64 21
  store i8 0, i8* %1212, align 1
  %1213 = call i32 @_ZNK2gl7Program18getUniformLocationERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.gl::Program"* %721, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %52) #13
  %1214 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 36, i32 0
  store i32 %1213, i32* %1214, align 8
  %1215 = load i8, i8* %1211, align 1
  %1216 = icmp slt i8 %1215, 0
  br i1 %1216, label %1217, label %1220

1217:                                             ; preds = %1208
  %1218 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %52, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1219 = load i8*, i8** %1218, align 8
  call void @_ZdlPv(i8* %1219) #16
  br label %1220

1220:                                             ; preds = %1208, %1217
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1209) #13
  %1221 = bitcast %"class.std::__1::basic_string"* %53 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1221) #13
  %1222 = bitcast %"class.std::__1::basic_string"* %53 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1223 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1222, i64 0, i32 1, i32 0
  store i8 16, i8* %1223, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1221, i8* align 1 getelementptr inbounds ([17 x i8], [17 x i8]* @.str.48, i64 0, i64 0), i64 16, i1 false) #13
  %1224 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %53, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %1225 = bitcast i64* %1224 to i8*
  store i8 0, i8* %1225, align 8
  %1226 = call i32 @_ZNK2gl7Program18getUniformLocationERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.gl::Program"* %721, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %53) #13
  %1227 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 37, i32 0
  store i32 %1226, i32* %1227, align 4
  %1228 = load i8, i8* %1223, align 1
  %1229 = icmp slt i8 %1228, 0
  br i1 %1229, label %1230, label %1233

1230:                                             ; preds = %1220
  %1231 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %53, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1232 = load i8*, i8** %1231, align 8
  call void @_ZdlPv(i8* %1232) #16
  br label %1233

1233:                                             ; preds = %1220, %1230
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1221) #13
  %1234 = bitcast %"class.std::__1::basic_string"* %54 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1234) #13
  %1235 = bitcast %"class.std::__1::basic_string"* %54 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1236 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1235, i64 0, i32 1, i32 0
  store i8 16, i8* %1236, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1234, i8* align 1 getelementptr inbounds ([17 x i8], [17 x i8]* @.str.49, i64 0, i64 0), i64 16, i1 false) #13
  %1237 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %54, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %1238 = bitcast i64* %1237 to i8*
  store i8 0, i8* %1238, align 8
  %1239 = call i32 @_ZNK2gl7Program18getUniformLocationERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.gl::Program"* %721, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %54) #13
  %1240 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 38, i32 0
  store i32 %1239, i32* %1240, align 8
  %1241 = load i8, i8* %1236, align 1
  %1242 = icmp slt i8 %1241, 0
  br i1 %1242, label %1243, label %1246

1243:                                             ; preds = %1233
  %1244 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %54, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1245 = load i8*, i8** %1244, align 8
  call void @_ZdlPv(i8* %1245) #16
  br label %1246

1246:                                             ; preds = %1233, %1243
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1234) #13
  %1247 = bitcast %"class.std::__1::basic_string"* %55 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1247) #13
  %1248 = bitcast %"class.std::__1::basic_string"* %55 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1249 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1248, i64 0, i32 1, i32 0
  store i8 17, i8* %1249, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1247, i8* align 1 getelementptr inbounds ([18 x i8], [18 x i8]* @.str.50, i64 0, i64 0), i64 17, i1 false) #13
  %1250 = getelementptr inbounds i8, i8* %1247, i64 17
  store i8 0, i8* %1250, align 1
  %1251 = call i32 @_ZNK2gl7Program18getUniformLocationERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.gl::Program"* %721, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %55) #13
  %1252 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 39, i32 0
  store i32 %1251, i32* %1252, align 4
  %1253 = load i8, i8* %1249, align 1
  %1254 = icmp slt i8 %1253, 0
  br i1 %1254, label %1255, label %1258

1255:                                             ; preds = %1246
  %1256 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %55, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1257 = load i8*, i8** %1256, align 8
  call void @_ZdlPv(i8* %1257) #16
  br label %1258

1258:                                             ; preds = %1246, %1255
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1247) #13
  %1259 = bitcast %"class.std::__1::basic_string"* %56 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1259) #13
  %1260 = bitcast %"class.std::__1::basic_string"* %56 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1261 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1260, i64 0, i32 1, i32 0
  store i8 17, i8* %1261, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1259, i8* align 1 getelementptr inbounds ([18 x i8], [18 x i8]* @.str.51, i64 0, i64 0), i64 17, i1 false) #13
  %1262 = getelementptr inbounds i8, i8* %1259, i64 17
  store i8 0, i8* %1262, align 1
  %1263 = call i32 @_ZNK2gl7Program18getUniformLocationERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.gl::Program"* %721, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %56) #13
  %1264 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 40, i32 0
  store i32 %1263, i32* %1264, align 8
  %1265 = load i8, i8* %1261, align 1
  %1266 = icmp slt i8 %1265, 0
  br i1 %1266, label %1267, label %1270

1267:                                             ; preds = %1258
  %1268 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %56, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1269 = load i8*, i8** %1268, align 8
  call void @_ZdlPv(i8* %1269) #16
  br label %1270

1270:                                             ; preds = %1258, %1267
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1259) #13
  %1271 = bitcast %"class.std::__1::basic_string"* %57 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1271) #13
  %1272 = call i8* @_Znwm(i64 32) #16
  %1273 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %57, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %1272, i8** %1273, align 8
  %1274 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %57, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1275 = bitcast i64* %1274 to <2 x i64>*
  store <2 x i64> <i64 26, i64 -9223372036854775776>, <2 x i64>* %1275, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %1272, i8* align 1 getelementptr inbounds ([27 x i8], [27 x i8]* @.str.52, i64 0, i64 0), i64 26, i1 false) #13
  %1276 = getelementptr inbounds i8, i8* %1272, i64 26
  store i8 0, i8* %1276, align 1
  %1277 = call i32 @_ZNK2gl7Program18getUniformLocationERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.gl::Program"* %721, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %57) #13
  %1278 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 41, i32 0
  store i32 %1277, i32* %1278, align 4
  %1279 = bitcast %"class.std::__1::basic_string"* %57 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1280 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1279, i64 0, i32 1, i32 0
  %1281 = load i8, i8* %1280, align 1
  %1282 = icmp slt i8 %1281, 0
  br i1 %1282, label %1283, label %1285

1283:                                             ; preds = %1270
  %1284 = load i8*, i8** %1273, align 8
  call void @_ZdlPv(i8* %1284) #16
  br label %1285

1285:                                             ; preds = %1270, %1283
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1271) #13
  %1286 = bitcast %"class.std::__1::basic_string"* %58 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1286) #13
  %1287 = call i8* @_Znwm(i64 32) #16
  %1288 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %58, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %1287, i8** %1288, align 8
  %1289 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %58, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1290 = bitcast i64* %1289 to <2 x i64>*
  store <2 x i64> <i64 25, i64 -9223372036854775776>, <2 x i64>* %1290, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %1287, i8* align 1 getelementptr inbounds ([26 x i8], [26 x i8]* @.str.53, i64 0, i64 0), i64 25, i1 false) #13
  %1291 = getelementptr inbounds i8, i8* %1287, i64 25
  store i8 0, i8* %1291, align 1
  %1292 = call i32 @_ZNK2gl7Program18getUniformLocationERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.gl::Program"* %721, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %58) #13
  %1293 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 42, i32 0
  store i32 %1292, i32* %1293, align 8
  %1294 = bitcast %"class.std::__1::basic_string"* %58 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1295 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1294, i64 0, i32 1, i32 0
  %1296 = load i8, i8* %1295, align 1
  %1297 = icmp slt i8 %1296, 0
  br i1 %1297, label %1298, label %1300

1298:                                             ; preds = %1285
  %1299 = load i8*, i8** %1288, align 8
  call void @_ZdlPv(i8* %1299) #16
  br label %1300

1300:                                             ; preds = %1285, %1298
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1286) #13
  %1301 = bitcast %"class.std::__1::basic_string"* %59 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1301) #13
  %1302 = bitcast %"class.std::__1::basic_string"* %59 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1303 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1302, i64 0, i32 1, i32 0
  store i8 21, i8* %1303, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1301, i8* align 1 getelementptr inbounds ([22 x i8], [22 x i8]* @.str.54, i64 0, i64 0), i64 21, i1 false) #13
  %1304 = getelementptr inbounds i8, i8* %1301, i64 21
  store i8 0, i8* %1304, align 1
  %1305 = call i32 @_ZNK2gl7Program18getUniformLocationERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.gl::Program"* %721, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %59) #13
  %1306 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 43, i32 0
  store i32 %1305, i32* %1306, align 4
  %1307 = load i8, i8* %1303, align 1
  %1308 = icmp slt i8 %1307, 0
  br i1 %1308, label %1309, label %1312

1309:                                             ; preds = %1300
  %1310 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %59, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1311 = load i8*, i8** %1310, align 8
  call void @_ZdlPv(i8* %1311) #16
  br label %1312

1312:                                             ; preds = %1300, %1309
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1301) #13
  %1313 = bitcast %"class.std::__1::basic_string"* %60 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1313) #13
  %1314 = bitcast %"class.std::__1::basic_string"* %60 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1315 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1314, i64 0, i32 1, i32 0
  store i8 13, i8* %1315, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1313, i8* align 1 getelementptr inbounds ([14 x i8], [14 x i8]* @.str.55, i64 0, i64 0), i64 13, i1 false) #13
  %1316 = getelementptr inbounds i8, i8* %1313, i64 13
  store i8 0, i8* %1316, align 1
  %1317 = call i32 @_ZNK2gl7Program18getUniformLocationERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.gl::Program"* %721, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %60) #13
  %1318 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 44, i32 0
  store i32 %1317, i32* %1318, align 8
  %1319 = load i8, i8* %1315, align 1
  %1320 = icmp slt i8 %1319, 0
  br i1 %1320, label %1321, label %1324

1321:                                             ; preds = %1312
  %1322 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %60, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1323 = load i8*, i8** %1322, align 8
  call void @_ZdlPv(i8* %1323) #16
  br label %1324

1324:                                             ; preds = %1312, %1321
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1313) #13
  %1325 = bitcast %"class.std::__1::basic_string"* %61 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1325) #13
  %1326 = bitcast %"class.std::__1::basic_string"* %61 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1327 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1326, i64 0, i32 1, i32 0
  store i8 14, i8* %1327, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1325, i8* align 1 getelementptr inbounds ([15 x i8], [15 x i8]* @.str.56, i64 0, i64 0), i64 14, i1 false) #13
  %1328 = getelementptr inbounds i8, i8* %1325, i64 14
  store i8 0, i8* %1328, align 2
  %1329 = call i32 @_ZNK2gl7Program18getUniformLocationERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.gl::Program"* %721, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %61) #13
  %1330 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 45, i32 0
  store i32 %1329, i32* %1330, align 4
  %1331 = load i8, i8* %1327, align 1
  %1332 = icmp slt i8 %1331, 0
  br i1 %1332, label %1333, label %1336

1333:                                             ; preds = %1324
  %1334 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %61, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1335 = load i8*, i8** %1334, align 8
  call void @_ZdlPv(i8* %1335) #16
  br label %1336

1336:                                             ; preds = %1324, %1333
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1325) #13
  %1337 = bitcast %"class.std::__1::basic_string"* %62 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1337) #13
  %1338 = bitcast %"class.std::__1::basic_string"* %62 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1339 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1338, i64 0, i32 1, i32 0
  store i8 14, i8* %1339, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1337, i8* align 1 getelementptr inbounds ([15 x i8], [15 x i8]* @.str.57, i64 0, i64 0), i64 14, i1 false) #13
  %1340 = getelementptr inbounds i8, i8* %1337, i64 14
  store i8 0, i8* %1340, align 2
  %1341 = call i32 @_ZNK2gl7Program18getUniformLocationERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.gl::Program"* %721, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %62) #13
  %1342 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 46, i32 0
  store i32 %1341, i32* %1342, align 8
  %1343 = load i8, i8* %1339, align 1
  %1344 = icmp slt i8 %1343, 0
  br i1 %1344, label %1345, label %1348

1345:                                             ; preds = %1336
  %1346 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %62, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1347 = load i8*, i8** %1346, align 8
  call void @_ZdlPv(i8* %1347) #16
  br label %1348

1348:                                             ; preds = %1336, %1345
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1337) #13
  %1349 = bitcast %"class.std::__1::basic_string"* %63 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1349) #13
  %1350 = bitcast %"class.std::__1::basic_string"* %63 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1351 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1350, i64 0, i32 1, i32 0
  store i8 15, i8* %1351, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1349, i8* align 1 getelementptr inbounds ([16 x i8], [16 x i8]* @.str.58, i64 0, i64 0), i64 15, i1 false) #13
  %1352 = getelementptr inbounds i8, i8* %1349, i64 15
  store i8 0, i8* %1352, align 1
  %1353 = call i32 @_ZNK2gl7Program18getUniformLocationERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.gl::Program"* %721, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %63) #13
  %1354 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 47, i32 0
  store i32 %1353, i32* %1354, align 4
  %1355 = load i8, i8* %1351, align 1
  %1356 = icmp slt i8 %1355, 0
  br i1 %1356, label %1357, label %1360

1357:                                             ; preds = %1348
  %1358 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %63, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1359 = load i8*, i8** %1358, align 8
  call void @_ZdlPv(i8* %1359) #16
  br label %1360

1360:                                             ; preds = %1348, %1357
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1349) #13
  %1361 = bitcast %"class.std::__1::basic_string"* %64 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1361) #13
  %1362 = bitcast %"class.std::__1::basic_string"* %64 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1363 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1362, i64 0, i32 1, i32 0
  store i8 15, i8* %1363, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1361, i8* align 1 getelementptr inbounds ([16 x i8], [16 x i8]* @.str.59, i64 0, i64 0), i64 15, i1 false) #13
  %1364 = getelementptr inbounds i8, i8* %1361, i64 15
  store i8 0, i8* %1364, align 1
  %1365 = call i32 @_ZNK2gl7Program18getUniformLocationERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.gl::Program"* %721, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %64) #13
  %1366 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 48, i32 0
  store i32 %1365, i32* %1366, align 8
  %1367 = load i8, i8* %1363, align 1
  %1368 = icmp slt i8 %1367, 0
  br i1 %1368, label %1369, label %1372

1369:                                             ; preds = %1360
  %1370 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %64, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1371 = load i8*, i8** %1370, align 8
  call void @_ZdlPv(i8* %1371) #16
  br label %1372

1372:                                             ; preds = %1360, %1369
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1361) #13
  %1373 = bitcast %"class.std::__1::basic_string"* %65 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1373) #13
  %1374 = bitcast %"class.std::__1::basic_string"* %65 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1375 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1374, i64 0, i32 1, i32 0
  store i8 16, i8* %1375, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1373, i8* align 1 getelementptr inbounds ([17 x i8], [17 x i8]* @.str.60, i64 0, i64 0), i64 16, i1 false) #13
  %1376 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %65, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %1377 = bitcast i64* %1376 to i8*
  store i8 0, i8* %1377, align 8
  %1378 = call i32 @_ZNK2gl7Program18getUniformLocationERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.gl::Program"* %721, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %65) #13
  %1379 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 49, i32 0
  store i32 %1378, i32* %1379, align 4
  %1380 = load i8, i8* %1375, align 1
  %1381 = icmp slt i8 %1380, 0
  br i1 %1381, label %1382, label %1385

1382:                                             ; preds = %1372
  %1383 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %65, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1384 = load i8*, i8** %1383, align 8
  call void @_ZdlPv(i8* %1384) #16
  br label %1385

1385:                                             ; preds = %1372, %1382
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1373) #13
  %1386 = bitcast %"class.std::__1::basic_string"* %66 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1386) #13
  %1387 = call i8* @_Znwm(i64 32) #16
  %1388 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %66, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %1387, i8** %1388, align 8
  %1389 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %66, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1390 = bitcast i64* %1389 to <2 x i64>*
  store <2 x i64> <i64 25, i64 -9223372036854775776>, <2 x i64>* %1390, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %1387, i8* align 1 getelementptr inbounds ([26 x i8], [26 x i8]* @.str.61, i64 0, i64 0), i64 25, i1 false) #13
  %1391 = getelementptr inbounds i8, i8* %1387, i64 25
  store i8 0, i8* %1391, align 1
  %1392 = call i32 @_ZNK2gl7Program18getUniformLocationERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.gl::Program"* %721, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %66) #13
  %1393 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 50, i32 0
  store i32 %1392, i32* %1393, align 8
  %1394 = bitcast %"class.std::__1::basic_string"* %66 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1395 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1394, i64 0, i32 1, i32 0
  %1396 = load i8, i8* %1395, align 1
  %1397 = icmp slt i8 %1396, 0
  br i1 %1397, label %1398, label %1400

1398:                                             ; preds = %1385
  %1399 = load i8*, i8** %1388, align 8
  call void @_ZdlPv(i8* %1399) #16
  br label %1400

1400:                                             ; preds = %1385, %1398
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1386) #13
  %1401 = bitcast %"class.std::__1::basic_string"* %67 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1401) #13
  %1402 = call i8* @_Znwm(i64 32) #16
  %1403 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %67, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %1402, i8** %1403, align 8
  %1404 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %67, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1405 = bitcast i64* %1404 to <2 x i64>*
  store <2 x i64> <i64 29, i64 -9223372036854775776>, <2 x i64>* %1405, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %1402, i8* align 1 getelementptr inbounds ([30 x i8], [30 x i8]* @.str.62, i64 0, i64 0), i64 29, i1 false) #13
  %1406 = getelementptr inbounds i8, i8* %1402, i64 29
  store i8 0, i8* %1406, align 1
  %1407 = call i32 @_ZNK2gl7Program18getUniformLocationERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.gl::Program"* %721, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %67) #13
  %1408 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 51, i32 0
  store i32 %1407, i32* %1408, align 4
  %1409 = bitcast %"class.std::__1::basic_string"* %67 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1410 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1409, i64 0, i32 1, i32 0
  %1411 = load i8, i8* %1410, align 1
  %1412 = icmp slt i8 %1411, 0
  br i1 %1412, label %1413, label %1415

1413:                                             ; preds = %1400
  %1414 = load i8*, i8** %1403, align 8
  call void @_ZdlPv(i8* %1414) #16
  br label %1415

1415:                                             ; preds = %1400, %1413
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1401) #13
  %1416 = bitcast %"class.std::__1::basic_string"* %68 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1416) #13
  %1417 = call i8* @_Znwm(i64 32) #16
  %1418 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %68, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %1417, i8** %1418, align 8
  %1419 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %68, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1420 = bitcast i64* %1419 to <2 x i64>*
  store <2 x i64> <i64 24, i64 -9223372036854775776>, <2 x i64>* %1420, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %1417, i8* align 1 getelementptr inbounds ([25 x i8], [25 x i8]* @.str.63, i64 0, i64 0), i64 24, i1 false) #13
  %1421 = getelementptr inbounds i8, i8* %1417, i64 24
  store i8 0, i8* %1421, align 1
  %1422 = call i32 @_ZNK2gl7Program18getUniformLocationERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.gl::Program"* %721, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %68) #13
  %1423 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 52, i32 0
  store i32 %1422, i32* %1423, align 8
  %1424 = bitcast %"class.std::__1::basic_string"* %68 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1425 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1424, i64 0, i32 1, i32 0
  %1426 = load i8, i8* %1425, align 1
  %1427 = icmp slt i8 %1426, 0
  br i1 %1427, label %1428, label %1430

1428:                                             ; preds = %1415
  %1429 = load i8*, i8** %1418, align 8
  call void @_ZdlPv(i8* %1429) #16
  br label %1430

1430:                                             ; preds = %1415, %1428
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1416) #13
  %1431 = bitcast %"class.std::__1::basic_string"* %69 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1431) #13
  %1432 = call i8* @_Znwm(i64 32) #16
  %1433 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %69, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %1432, i8** %1433, align 8
  %1434 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %69, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1435 = bitcast i64* %1434 to <2 x i64>*
  store <2 x i64> <i64 25, i64 -9223372036854775776>, <2 x i64>* %1435, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %1432, i8* align 1 getelementptr inbounds ([26 x i8], [26 x i8]* @.str.64, i64 0, i64 0), i64 25, i1 false) #13
  %1436 = getelementptr inbounds i8, i8* %1432, i64 25
  store i8 0, i8* %1436, align 1
  %1437 = call i32 @_ZNK2gl7Program18getUniformLocationERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.gl::Program"* %721, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %69) #13
  %1438 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 53, i32 0
  store i32 %1437, i32* %1438, align 4
  %1439 = bitcast %"class.std::__1::basic_string"* %69 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1440 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1439, i64 0, i32 1, i32 0
  %1441 = load i8, i8* %1440, align 1
  %1442 = icmp slt i8 %1441, 0
  br i1 %1442, label %1443, label %1445

1443:                                             ; preds = %1430
  %1444 = load i8*, i8** %1433, align 8
  call void @_ZdlPv(i8* %1444) #16
  br label %1445

1445:                                             ; preds = %1430, %1443
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1431) #13
  %1446 = bitcast %"class.std::__1::basic_string"* %70 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1446) #13
  %1447 = call i8* @_Znwm(i64 32) #16
  %1448 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %70, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %1447, i8** %1448, align 8
  %1449 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %70, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1450 = bitcast i64* %1449 to <2 x i64>*
  store <2 x i64> <i64 28, i64 -9223372036854775776>, <2 x i64>* %1450, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %1447, i8* align 1 getelementptr inbounds ([29 x i8], [29 x i8]* @.str.65, i64 0, i64 0), i64 28, i1 false) #13
  %1451 = getelementptr inbounds i8, i8* %1447, i64 28
  store i8 0, i8* %1451, align 1
  %1452 = call i32 @_ZNK2gl7Program18getUniformLocationERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.gl::Program"* %721, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %70) #13
  %1453 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 54, i32 0
  store i32 %1452, i32* %1453, align 8
  %1454 = bitcast %"class.std::__1::basic_string"* %70 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1455 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1454, i64 0, i32 1, i32 0
  %1456 = load i8, i8* %1455, align 1
  %1457 = icmp slt i8 %1456, 0
  br i1 %1457, label %1458, label %1460

1458:                                             ; preds = %1445
  %1459 = load i8*, i8** %1448, align 8
  call void @_ZdlPv(i8* %1459) #16
  br label %1460

1460:                                             ; preds = %1445, %1458
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1446) #13
  %1461 = bitcast %"class.std::__1::basic_string"* %71 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1461) #13
  %1462 = bitcast %"class.std::__1::basic_string"* %71 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1463 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1462, i64 0, i32 1, i32 0
  store i8 10, i8* %1463, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1461, i8* align 1 getelementptr inbounds ([11 x i8], [11 x i8]* @.str.66, i64 0, i64 0), i64 10, i1 false) #13
  %1464 = getelementptr inbounds i8, i8* %1461, i64 10
  store i8 0, i8* %1464, align 2
  %1465 = call i32 @_ZNK2gl7Program18getUniformLocationERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.gl::Program"* %721, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %71) #13
  %1466 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 55, i32 0
  store i32 %1465, i32* %1466, align 4
  %1467 = load i8, i8* %1463, align 1
  %1468 = icmp slt i8 %1467, 0
  br i1 %1468, label %1469, label %1472

1469:                                             ; preds = %1460
  %1470 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %71, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1471 = load i8*, i8** %1470, align 8
  call void @_ZdlPv(i8* %1471) #16
  br label %1472

1472:                                             ; preds = %1460, %1469
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1461) #13
  %1473 = bitcast %"class.std::__1::basic_string"* %72 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1473) #13
  %1474 = bitcast %"class.std::__1::basic_string"* %72 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1475 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1474, i64 0, i32 1, i32 0
  store i8 8, i8* %1475, align 1
  %1476 = bitcast %"class.std::__1::basic_string"* %72 to i64*
  store i64 7306087011044519782, i64* %1476, align 8
  %1477 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %72, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1478 = bitcast i64* %1477 to i8*
  store i8 0, i8* %1478, align 8
  %1479 = call i32 @_ZNK2gl7Program18getUniformLocationERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.gl::Program"* %721, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %72) #13
  %1480 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 56, i32 0
  store i32 %1479, i32* %1480, align 8
  %1481 = load i8, i8* %1475, align 1
  %1482 = icmp slt i8 %1481, 0
  br i1 %1482, label %1483, label %1486

1483:                                             ; preds = %1472
  %1484 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %72, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1485 = load i8*, i8** %1484, align 8
  call void @_ZdlPv(i8* %1485) #16
  br label %1486

1486:                                             ; preds = %1472, %1483
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1473) #13
  %1487 = bitcast %"class.std::__1::basic_string"* %73 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1487) #13
  %1488 = bitcast %"class.std::__1::basic_string"* %73 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1489 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1488, i64 0, i32 1, i32 0
  store i8 11, i8* %1489, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1487, i8* align 1 getelementptr inbounds ([12 x i8], [12 x i8]* @.str.68, i64 0, i64 0), i64 11, i1 false) #13
  %1490 = getelementptr inbounds i8, i8* %1487, i64 11
  store i8 0, i8* %1490, align 1
  %1491 = call i32 @_ZNK2gl7Program18getUniformLocationERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.gl::Program"* %721, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %73) #13
  %1492 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 57, i32 0
  store i32 %1491, i32* %1492, align 4
  %1493 = load i8, i8* %1489, align 1
  %1494 = icmp slt i8 %1493, 0
  br i1 %1494, label %1495, label %1498

1495:                                             ; preds = %1486
  %1496 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %73, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1497 = load i8*, i8** %1496, align 8
  call void @_ZdlPv(i8* %1497) #16
  br label %1498

1498:                                             ; preds = %1486, %1495
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1487) #13
  %1499 = bitcast %"class.std::__1::basic_string"* %74 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1499) #13
  %1500 = bitcast %"class.std::__1::basic_string"* %74 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1501 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1500, i64 0, i32 1, i32 0
  store i8 9, i8* %1501, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1499, i8* align 1 getelementptr inbounds ([10 x i8], [10 x i8]* @.str.69, i64 0, i64 0), i64 9, i1 false) #13
  %1502 = getelementptr inbounds i8, i8* %1499, i64 9
  store i8 0, i8* %1502, align 1
  %1503 = call i32 @_ZNK2gl7Program18getUniformLocationERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.gl::Program"* %721, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %74) #13
  %1504 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 58, i32 0
  store i32 %1503, i32* %1504, align 8
  %1505 = load i8, i8* %1501, align 1
  %1506 = icmp slt i8 %1505, 0
  br i1 %1506, label %1507, label %1510

1507:                                             ; preds = %1498
  %1508 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %74, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1509 = load i8*, i8** %1508, align 8
  call void @_ZdlPv(i8* %1509) #16
  br label %1510

1510:                                             ; preds = %1498, %1507
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1499) #13
  %1511 = bitcast %"class.std::__1::basic_string"* %75 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1511) #13
  %1512 = bitcast %"class.std::__1::basic_string"* %75 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1513 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1512, i64 0, i32 1, i32 0
  store i8 7, i8* %1513, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1511, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @.str.70, i64 0, i64 0), i64 7, i1 false) #13
  %1514 = getelementptr inbounds i8, i8* %1511, i64 7
  store i8 0, i8* %1514, align 1
  %1515 = call i32 @_ZNK2gl7Program18getUniformLocationERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.gl::Program"* %721, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %75) #13
  %1516 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 59, i32 0
  store i32 %1515, i32* %1516, align 4
  %1517 = load i8, i8* %1513, align 1
  %1518 = icmp slt i8 %1517, 0
  br i1 %1518, label %1519, label %1522

1519:                                             ; preds = %1510
  %1520 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %75, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1521 = load i8*, i8** %1520, align 8
  call void @_ZdlPv(i8* %1521) #16
  br label %1522

1522:                                             ; preds = %1510, %1519
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1511) #13
  %1523 = bitcast %"class.std::__1::basic_string"* %76 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1523) #13
  %1524 = bitcast %"class.std::__1::basic_string"* %76 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1525 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1524, i64 0, i32 1, i32 0
  store i8 9, i8* %1525, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1523, i8* align 1 getelementptr inbounds ([10 x i8], [10 x i8]* @.str.71, i64 0, i64 0), i64 9, i1 false) #13
  %1526 = getelementptr inbounds i8, i8* %1523, i64 9
  store i8 0, i8* %1526, align 1
  %1527 = call i32 @_ZNK2gl7Program18getUniformLocationERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.gl::Program"* %721, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %76) #13
  %1528 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 60, i32 0
  store i32 %1527, i32* %1528, align 8
  %1529 = load i8, i8* %1525, align 1
  %1530 = icmp slt i8 %1529, 0
  br i1 %1530, label %1531, label %1534

1531:                                             ; preds = %1522
  %1532 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %76, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1533 = load i8*, i8** %1532, align 8
  call void @_ZdlPv(i8* %1533) #16
  br label %1534

1534:                                             ; preds = %1522, %1531
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1523) #13
  %1535 = bitcast %"class.std::__1::basic_string"* %77 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1535) #13
  %1536 = bitcast %"class.std::__1::basic_string"* %77 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1537 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1536, i64 0, i32 1, i32 0
  store i8 18, i8* %1537, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1535, i8* align 1 getelementptr inbounds ([19 x i8], [19 x i8]* @.str.72, i64 0, i64 0), i64 18, i1 false) #13
  %1538 = getelementptr inbounds i8, i8* %1535, i64 18
  store i8 0, i8* %1538, align 2
  %1539 = call i32 @_ZNK2gl7Program18getUniformLocationERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.gl::Program"* %721, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %77) #13
  %1540 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 61, i32 0
  store i32 %1539, i32* %1540, align 4
  %1541 = load i8, i8* %1537, align 1
  %1542 = icmp slt i8 %1541, 0
  br i1 %1542, label %1543, label %1546

1543:                                             ; preds = %1534
  %1544 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %77, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1545 = load i8*, i8** %1544, align 8
  call void @_ZdlPv(i8* %1545) #16
  br label %1546

1546:                                             ; preds = %1534, %1543
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1535) #13
  %1547 = bitcast %"class.std::__1::basic_string"* %78 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1547) #13
  %1548 = bitcast %"class.std::__1::basic_string"* %78 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1549 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1548, i64 0, i32 1, i32 0
  store i8 18, i8* %1549, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1547, i8* align 1 getelementptr inbounds ([19 x i8], [19 x i8]* @.str.73, i64 0, i64 0), i64 18, i1 false) #13
  %1550 = getelementptr inbounds i8, i8* %1547, i64 18
  store i8 0, i8* %1550, align 2
  %1551 = call i32 @_ZNK2gl7Program18getUniformLocationERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.gl::Program"* %721, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %78) #13
  %1552 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 62, i32 0
  store i32 %1551, i32* %1552, align 8
  %1553 = load i8, i8* %1549, align 1
  %1554 = icmp slt i8 %1553, 0
  br i1 %1554, label %1555, label %1558

1555:                                             ; preds = %1546
  %1556 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %78, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1557 = load i8*, i8** %1556, align 8
  call void @_ZdlPv(i8* %1557) #16
  br label %1558

1558:                                             ; preds = %1546, %1555
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1547) #13
  %1559 = bitcast %"class.std::__1::basic_string"* %79 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1559) #13
  %1560 = bitcast %"class.std::__1::basic_string"* %79 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1561 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1560, i64 0, i32 1, i32 0
  store i8 11, i8* %1561, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1559, i8* align 1 getelementptr inbounds ([12 x i8], [12 x i8]* @.str.74, i64 0, i64 0), i64 11, i1 false) #13
  %1562 = getelementptr inbounds i8, i8* %1559, i64 11
  store i8 0, i8* %1562, align 1
  %1563 = call i32 @_ZNK2gl7Program18getUniformLocationERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.gl::Program"* %721, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %79) #13
  %1564 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 63, i32 0
  store i32 %1563, i32* %1564, align 4
  %1565 = load i8, i8* %1561, align 1
  %1566 = icmp slt i8 %1565, 0
  br i1 %1566, label %1567, label %1570

1567:                                             ; preds = %1558
  %1568 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %79, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1569 = load i8*, i8** %1568, align 8
  call void @_ZdlPv(i8* %1569) #16
  br label %1570

1570:                                             ; preds = %1558, %1567
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1559) #13
  %1571 = bitcast %"class.std::__1::basic_string"* %80 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1571) #13
  %1572 = bitcast %"class.std::__1::basic_string"* %80 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1573 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1572, i64 0, i32 1, i32 0
  store i8 19, i8* %1573, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1571, i8* align 1 getelementptr inbounds ([20 x i8], [20 x i8]* @.str.75, i64 0, i64 0), i64 19, i1 false) #13
  %1574 = getelementptr inbounds i8, i8* %1571, i64 19
  store i8 0, i8* %1574, align 1
  %1575 = call i32 @_ZNK2gl7Program18getUniformLocationERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.gl::Program"* %721, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %80) #13
  %1576 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 64, i32 0
  store i32 %1575, i32* %1576, align 8
  %1577 = load i8, i8* %1573, align 1
  %1578 = icmp slt i8 %1577, 0
  br i1 %1578, label %1579, label %1582

1579:                                             ; preds = %1570
  %1580 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %80, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1581 = load i8*, i8** %1580, align 8
  call void @_ZdlPv(i8* %1581) #16
  br label %1582

1582:                                             ; preds = %1570, %1579
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1571) #13
  %1583 = bitcast %"class.std::__1::basic_string"* %81 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1583) #13
  %1584 = bitcast %"class.std::__1::basic_string"* %81 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1585 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1584, i64 0, i32 1, i32 0
  store i8 14, i8* %1585, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1583, i8* align 1 getelementptr inbounds ([15 x i8], [15 x i8]* @.str.76, i64 0, i64 0), i64 14, i1 false) #13
  %1586 = getelementptr inbounds i8, i8* %1583, i64 14
  store i8 0, i8* %1586, align 2
  %1587 = call i32 @_ZNK2gl7Program18getUniformLocationERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.gl::Program"* %721, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %81) #13
  %1588 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 65, i32 0
  store i32 %1587, i32* %1588, align 4
  %1589 = load i8, i8* %1585, align 1
  %1590 = icmp slt i8 %1589, 0
  br i1 %1590, label %1591, label %1594

1591:                                             ; preds = %1582
  %1592 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %81, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1593 = load i8*, i8** %1592, align 8
  call void @_ZdlPv(i8* %1593) #16
  br label %1594

1594:                                             ; preds = %1582, %1591
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1583) #13
  %1595 = bitcast %"class.std::__1::basic_string"* %82 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1595) #13
  %1596 = bitcast %"class.std::__1::basic_string"* %82 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1597 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1596, i64 0, i32 1, i32 0
  store i8 14, i8* %1597, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1595, i8* align 1 getelementptr inbounds ([15 x i8], [15 x i8]* @.str.77, i64 0, i64 0), i64 14, i1 false) #13
  %1598 = getelementptr inbounds i8, i8* %1595, i64 14
  store i8 0, i8* %1598, align 2
  %1599 = call i32 @_ZNK2gl7Program18getUniformLocationERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.gl::Program"* %721, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %82) #13
  %1600 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 66, i32 0
  store i32 %1599, i32* %1600, align 8
  %1601 = load i8, i8* %1597, align 1
  %1602 = icmp slt i8 %1601, 0
  br i1 %1602, label %1603, label %1606

1603:                                             ; preds = %1594
  %1604 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %82, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1605 = load i8*, i8** %1604, align 8
  call void @_ZdlPv(i8* %1605) #16
  br label %1606

1606:                                             ; preds = %1594, %1603
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1595) #13
  %1607 = bitcast %"class.std::__1::basic_string"* %83 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1607) #13
  %1608 = call i8* @_Znwm(i64 32) #16
  %1609 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %83, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %1608, i8** %1609, align 8
  %1610 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %83, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1611 = bitcast i64* %1610 to <2 x i64>*
  store <2 x i64> <i64 26, i64 -9223372036854775776>, <2 x i64>* %1611, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %1608, i8* align 1 getelementptr inbounds ([27 x i8], [27 x i8]* @.str.78, i64 0, i64 0), i64 26, i1 false) #13
  %1612 = getelementptr inbounds i8, i8* %1608, i64 26
  store i8 0, i8* %1612, align 1
  %1613 = call i32 @_ZNK2gl7Program18getUniformLocationERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.gl::Program"* %721, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %83) #13
  %1614 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 67, i32 0
  store i32 %1613, i32* %1614, align 4
  %1615 = bitcast %"class.std::__1::basic_string"* %83 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1616 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1615, i64 0, i32 1, i32 0
  %1617 = load i8, i8* %1616, align 1
  %1618 = icmp slt i8 %1617, 0
  br i1 %1618, label %1619, label %1621

1619:                                             ; preds = %1606
  %1620 = load i8*, i8** %1609, align 8
  call void @_ZdlPv(i8* %1620) #16
  br label %1621

1621:                                             ; preds = %1606, %1619
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1607) #13
  %1622 = bitcast %"class.std::__1::basic_string"* %84 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1622) #13
  %1623 = bitcast %"class.std::__1::basic_string"* %84 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1624 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1623, i64 0, i32 1, i32 0
  store i8 20, i8* %1624, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1622, i8* align 1 getelementptr inbounds ([21 x i8], [21 x i8]* @.str.79, i64 0, i64 0), i64 20, i1 false) #13
  %1625 = getelementptr inbounds i8, i8* %1622, i64 20
  store i8 0, i8* %1625, align 4
  %1626 = call i32 @_ZNK2gl7Program18getUniformLocationERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.gl::Program"* %721, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %84) #13
  %1627 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 68, i32 0
  store i32 %1626, i32* %1627, align 8
  %1628 = load i8, i8* %1624, align 1
  %1629 = icmp slt i8 %1628, 0
  br i1 %1629, label %1630, label %1633

1630:                                             ; preds = %1621
  %1631 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %84, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1632 = load i8*, i8** %1631, align 8
  call void @_ZdlPv(i8* %1632) #16
  br label %1633

1633:                                             ; preds = %1621, %1630
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1622) #13
  %1634 = bitcast %"class.std::__1::basic_string"* %85 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1634) #13
  %1635 = bitcast %"class.std::__1::basic_string"* %85 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1636 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1635, i64 0, i32 1, i32 0
  store i8 19, i8* %1636, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1634, i8* align 1 getelementptr inbounds ([20 x i8], [20 x i8]* @.str.80, i64 0, i64 0), i64 19, i1 false) #13
  %1637 = getelementptr inbounds i8, i8* %1634, i64 19
  store i8 0, i8* %1637, align 1
  %1638 = call i32 @_ZNK2gl7Program18getUniformLocationERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.gl::Program"* %721, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %85) #13
  %1639 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 69, i32 0
  store i32 %1638, i32* %1639, align 4
  %1640 = load i8, i8* %1636, align 1
  %1641 = icmp slt i8 %1640, 0
  br i1 %1641, label %1642, label %1645

1642:                                             ; preds = %1633
  %1643 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %85, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1644 = load i8*, i8** %1643, align 8
  call void @_ZdlPv(i8* %1644) #16
  br label %1645

1645:                                             ; preds = %1633, %1642
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1634) #13
  %1646 = bitcast %"class.std::__1::basic_string"* %86 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1646) #13
  %1647 = bitcast %"class.std::__1::basic_string"* %86 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1648 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1647, i64 0, i32 1, i32 0
  store i8 19, i8* %1648, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1646, i8* align 1 getelementptr inbounds ([20 x i8], [20 x i8]* @.str.81, i64 0, i64 0), i64 19, i1 false) #13
  %1649 = getelementptr inbounds i8, i8* %1646, i64 19
  store i8 0, i8* %1649, align 1
  %1650 = call i32 @_ZNK2gl7Program18getUniformLocationERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.gl::Program"* %721, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %86) #13
  %1651 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 70, i32 0
  store i32 %1650, i32* %1651, align 8
  %1652 = load i8, i8* %1648, align 1
  %1653 = icmp slt i8 %1652, 0
  br i1 %1653, label %1654, label %1657

1654:                                             ; preds = %1645
  %1655 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %86, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1656 = load i8*, i8** %1655, align 8
  call void @_ZdlPv(i8* %1656) #16
  br label %1657

1657:                                             ; preds = %1645, %1654
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1646) #13
  %1658 = bitcast %"class.std::__1::basic_string"* %87 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1658) #13
  %1659 = bitcast %"class.std::__1::basic_string"* %87 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1660 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1659, i64 0, i32 1, i32 0
  store i8 17, i8* %1660, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1658, i8* align 1 getelementptr inbounds ([18 x i8], [18 x i8]* @.str.82, i64 0, i64 0), i64 17, i1 false) #13
  %1661 = getelementptr inbounds i8, i8* %1658, i64 17
  store i8 0, i8* %1661, align 1
  %1662 = call i32 @_ZNK2gl7Program18getUniformLocationERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.gl::Program"* %721, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %87) #13
  %1663 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 71, i32 0
  store i32 %1662, i32* %1663, align 4
  %1664 = load i8, i8* %1660, align 1
  %1665 = icmp slt i8 %1664, 0
  br i1 %1665, label %1666, label %1669

1666:                                             ; preds = %1657
  %1667 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %87, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1668 = load i8*, i8** %1667, align 8
  call void @_ZdlPv(i8* %1668) #16
  br label %1669

1669:                                             ; preds = %1657, %1666
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1658) #13
  %1670 = bitcast %"class.std::__1::basic_string"* %88 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1670) #13
  %1671 = call i8* @_Znwm(i64 48) #16
  %1672 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %88, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %1671, i8** %1672, align 8
  %1673 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %88, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1674 = bitcast i64* %1673 to <2 x i64>*
  store <2 x i64> <i64 33, i64 -9223372036854775760>, <2 x i64>* %1674, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %1671, i8* align 1 getelementptr inbounds ([34 x i8], [34 x i8]* @.str.83, i64 0, i64 0), i64 33, i1 false) #13
  %1675 = getelementptr inbounds i8, i8* %1671, i64 33
  store i8 0, i8* %1675, align 1
  %1676 = call i32 @_ZNK2gl7Program18getUniformLocationERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.gl::Program"* %721, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %88) #13
  %1677 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 72, i32 0
  store i32 %1676, i32* %1677, align 8
  %1678 = bitcast %"class.std::__1::basic_string"* %88 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1679 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1678, i64 0, i32 1, i32 0
  %1680 = load i8, i8* %1679, align 1
  %1681 = icmp slt i8 %1680, 0
  br i1 %1681, label %1682, label %1684

1682:                                             ; preds = %1669
  %1683 = load i8*, i8** %1672, align 8
  call void @_ZdlPv(i8* %1683) #16
  br label %1684

1684:                                             ; preds = %1669, %1682
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1670) #13
  %1685 = call i32 @_ZN2gl5State10setProgramEPKNS_7ContextEPNS_7ProgramE(%"class.gl::State"* %2, %"class.gl::Context"* %1, %"class.gl::Program"* %721) #13
  %1686 = icmp eq i32 %1685, 1
  br i1 %1686, label %1836, label %1687

1687:                                             ; preds = %1684
  %1688 = bitcast i32* %5 to i8*
  %1689 = bitcast i32* %4 to i8*
  %1690 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 7, i32 0, i64 0, i32 0
  %1691 = load i32, i32* %1690, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1688)
  store i32 0, i32* %5, align 4
  %1692 = icmp eq i32 %1691, -1
  br i1 %1692, label %1827, label %1826

1693:                                             ; preds = %1823, %769
  %1694 = phi i64 [ 0, %769 ], [ %1824, %1823 ]
  call void @llvm.lifetime.start.p0i8(i64 280, i8* nonnull %770) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %839, i8 -86, i64 272, i1 false)
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 2, i64 3) to i32 (...)**), i32 (...)*** %771, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %773, align 8
  store i64 %112, i64* %776, align 8
  %1695 = load i64, i64* %118, align 8
  %1696 = getelementptr inbounds i8, i8* %770, i64 %1695
  %1697 = bitcast i8* %1696 to i64*
  store i64 %114, i64* %1697, align 8
  store i64 0, i64* %778, align 8
  %1698 = load i8*, i8** %777, align 8
  %1699 = getelementptr i8, i8* %1698, i64 -24
  %1700 = bitcast i8* %1699 to i64*
  %1701 = load i64, i64* %1700, align 8
  %1702 = getelementptr inbounds i8, i8* %770, i64 %1701
  %1703 = bitcast i8* %1702 to %"class.std::__1::ios_base"*
  call void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"* %1703, i8* %779) #13
  %1704 = getelementptr inbounds i8, i8* %1702, i64 136
  %1705 = bitcast i8* %1704 to %"class.std::__1::basic_ostream"**
  store %"class.std::__1::basic_ostream"* null, %"class.std::__1::basic_ostream"** %1705, align 8
  %1706 = getelementptr inbounds i8, i8* %1702, i64 144
  %1707 = bitcast i8* %1706 to i32*
  store i32 -1, i32* %1707, align 8
  store i64 %135, i64* %781, align 8
  %1708 = load i64, i64* %140, align 8
  %1709 = getelementptr inbounds i8, i8* %782, i64 %1708
  %1710 = bitcast i8* %1709 to i64*
  store i64 %137, i64* %1710, align 8
  store i64 %145, i64* %776, align 8
  %1711 = load i64, i64* %149, align 8
  %1712 = getelementptr inbounds i8, i8* %770, i64 %1711
  %1713 = bitcast i8* %1712 to i64*
  store i64 %146, i64* %1713, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %772, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 2, i64 3) to i32 (...)**), i32 (...)*** %771, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %773, align 8
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"* %775) #13
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %783, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %786, i8 0, i64 32, i1 false) #13
  store i32 24, i32* %785, align 8
  call void @llvm.lifetime.start.p0i8(i64 280, i8* nonnull %787) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %841, i8 -86, i64 272, i1 false)
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 2, i64 3) to i32 (...)**), i32 (...)*** %788, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %790, align 8
  store i64 %112, i64* %793, align 8
  %1714 = load i64, i64* %118, align 8
  %1715 = getelementptr inbounds i8, i8* %787, i64 %1714
  %1716 = bitcast i8* %1715 to i64*
  store i64 %114, i64* %1716, align 8
  store i64 0, i64* %795, align 8
  %1717 = load i8*, i8** %794, align 8
  %1718 = getelementptr i8, i8* %1717, i64 -24
  %1719 = bitcast i8* %1718 to i64*
  %1720 = load i64, i64* %1719, align 8
  %1721 = getelementptr inbounds i8, i8* %787, i64 %1720
  %1722 = bitcast i8* %1721 to %"class.std::__1::ios_base"*
  call void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"* %1722, i8* %796) #13
  %1723 = getelementptr inbounds i8, i8* %1721, i64 136
  %1724 = bitcast i8* %1723 to %"class.std::__1::basic_ostream"**
  store %"class.std::__1::basic_ostream"* null, %"class.std::__1::basic_ostream"** %1724, align 8
  %1725 = getelementptr inbounds i8, i8* %1721, i64 144
  %1726 = bitcast i8* %1725 to i32*
  store i32 -1, i32* %1726, align 8
  store i64 %135, i64* %798, align 8
  %1727 = load i64, i64* %140, align 8
  %1728 = getelementptr inbounds i8, i8* %799, i64 %1727
  %1729 = bitcast i8* %1728 to i64*
  store i64 %137, i64* %1729, align 8
  store i64 %145, i64* %793, align 8
  %1730 = load i64, i64* %149, align 8
  %1731 = getelementptr inbounds i8, i8* %787, i64 %1730
  %1732 = bitcast i8* %1731 to i64*
  store i64 %146, i64* %1732, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %789, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 2, i64 3) to i32 (...)**), i32 (...)*** %788, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %790, align 8
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"* %792) #13
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %800, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %803, i8 0, i64 32, i1 false) #13
  store i32 24, i32* %802, align 8
  %1733 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %804, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.16, i64 0, i64 0), i64 11) #13
  %1734 = trunc i64 %1694 to i32
  %1735 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %1733, i32 %1734) #13
  %1736 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %805, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.17, i64 0, i64 0), i64 16) #13
  %1737 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %1736, i32 %1734) #13
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %806) #13
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %807) #13
  call void @_ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv(%"class.std::__1::basic_string"* nonnull sret %20, %"class.std::__1::basic_stringbuf"* %774) #13
  %1738 = load i8, i8* %809, align 1
  %1739 = icmp slt i8 %1738, 0
  %1740 = load i8*, i8** %810, align 8
  %1741 = select i1 %1739, i8* %1740, i8* %807
  %1742 = call i64 @strlen(i8* %1741) #13
  %1743 = icmp ugt i64 %1742, -17
  br i1 %1743, label %1744, label %1746

1744:                                             ; preds = %1693
  %1745 = bitcast %"class.std::__1::basic_string"* %19 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %1745) #17
  unreachable

1746:                                             ; preds = %1693
  %1747 = icmp ult i64 %1742, 23
  br i1 %1747, label %1753, label %1748

1748:                                             ; preds = %1746
  %1749 = add nuw i64 %1742, 16
  %1750 = and i64 %1749, -16
  %1751 = call i8* @_Znwm(i64 %1750) #16
  store i8* %1751, i8** %811, align 8
  %1752 = or i64 %1750, -9223372036854775808
  store i64 %1752, i64* %812, align 8
  store i64 %1742, i64* %813, align 8
  br label %1756

1753:                                             ; preds = %1746
  %1754 = trunc i64 %1742 to i8
  store i8 %1754, i8* %815, align 1
  %1755 = icmp eq i64 %1742, 0
  br i1 %1755, label %1758, label %1756

1756:                                             ; preds = %1753, %1748
  %1757 = phi i8* [ %1751, %1748 ], [ %806, %1753 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %1757, i8* align 1 %1741, i64 %1742, i1 false) #13
  br label %1758

1758:                                             ; preds = %1753, %1756
  %1759 = phi i8* [ %806, %1753 ], [ %1757, %1756 ]
  %1760 = getelementptr inbounds i8, i8* %1759, i64 %1742
  store i8 0, i8* %1760, align 1
  %1761 = call i32 @_ZNK2gl7Program18getUniformLocationERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.gl::Program"* %721, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %19) #13
  %1762 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 7, i32 0, i64 %1694, i32 0
  store i32 %1761, i32* %1762, align 4
  %1763 = load i8, i8* %815, align 1
  %1764 = icmp slt i8 %1763, 0
  br i1 %1764, label %1765, label %1767

1765:                                             ; preds = %1758
  %1766 = load i8*, i8** %811, align 8
  call void @_ZdlPv(i8* %1766) #16
  br label %1767

1767:                                             ; preds = %1758, %1765
  %1768 = load i8, i8* %809, align 1
  %1769 = icmp slt i8 %1768, 0
  br i1 %1769, label %1770, label %1772

1770:                                             ; preds = %1767
  %1771 = load i8*, i8** %810, align 8
  call void @_ZdlPv(i8* %1771) #16
  br label %1772

1772:                                             ; preds = %1767, %1770
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %807) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %806) #13
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %816) #13
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %817) #13
  call void @_ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv(%"class.std::__1::basic_string"* nonnull sret %22, %"class.std::__1::basic_stringbuf"* %791) #13
  %1773 = load i8, i8* %819, align 1
  %1774 = icmp slt i8 %1773, 0
  %1775 = load i8*, i8** %820, align 8
  %1776 = select i1 %1774, i8* %1775, i8* %817
  %1777 = call i64 @strlen(i8* %1776) #13
  %1778 = icmp ugt i64 %1777, -17
  br i1 %1778, label %1779, label %1781

1779:                                             ; preds = %1772
  %1780 = bitcast %"class.std::__1::basic_string"* %21 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %1780) #17
  unreachable

1781:                                             ; preds = %1772
  %1782 = icmp ult i64 %1777, 23
  br i1 %1782, label %1788, label %1783

1783:                                             ; preds = %1781
  %1784 = add nuw i64 %1777, 16
  %1785 = and i64 %1784, -16
  %1786 = call i8* @_Znwm(i64 %1785) #16
  store i8* %1786, i8** %821, align 8
  %1787 = or i64 %1785, -9223372036854775808
  store i64 %1787, i64* %822, align 8
  store i64 %1777, i64* %823, align 8
  br label %1791

1788:                                             ; preds = %1781
  %1789 = trunc i64 %1777 to i8
  store i8 %1789, i8* %825, align 1
  %1790 = icmp eq i64 %1777, 0
  br i1 %1790, label %1793, label %1791

1791:                                             ; preds = %1788, %1783
  %1792 = phi i8* [ %1786, %1783 ], [ %816, %1788 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %1792, i8* align 1 %1776, i64 %1777, i1 false) #13
  br label %1793

1793:                                             ; preds = %1788, %1791
  %1794 = phi i8* [ %816, %1788 ], [ %1792, %1791 ]
  %1795 = getelementptr inbounds i8, i8* %1794, i64 %1777
  store i8 0, i8* %1795, align 1
  %1796 = call i32 @_ZNK2gl7Program18getUniformLocationERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.gl::Program"* %721, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %21) #13
  %1797 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 8, i32 0, i64 %1694, i32 0
  store i32 %1796, i32* %1797, align 4
  %1798 = load i8, i8* %825, align 1
  %1799 = icmp slt i8 %1798, 0
  br i1 %1799, label %1800, label %1802

1800:                                             ; preds = %1793
  %1801 = load i8*, i8** %821, align 8
  call void @_ZdlPv(i8* %1801) #16
  br label %1802

1802:                                             ; preds = %1793, %1800
  %1803 = load i8, i8* %819, align 1
  %1804 = icmp slt i8 %1803, 0
  br i1 %1804, label %1805, label %1807

1805:                                             ; preds = %1802
  %1806 = load i8*, i8** %820, align 8
  call void @_ZdlPv(i8* %1806) #16
  br label %1807

1807:                                             ; preds = %1802, %1805
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %817) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %816) #13
  store i64 %507, i64* %793, align 8
  %1808 = load i64, i64* %511, align 8
  %1809 = getelementptr inbounds i8, i8* %787, i64 %1808
  %1810 = bitcast i8* %1809 to i64*
  store i64 %508, i64* %1810, align 8
  store i64 %512, i64* %798, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %800, align 8
  %1811 = load i8, i8* %827, align 1
  %1812 = icmp slt i8 %1811, 0
  br i1 %1812, label %1813, label %1815

1813:                                             ; preds = %1807
  %1814 = load i8*, i8** %828, align 8
  call void @_ZdlPv(i8* %1814) #16
  br label %1815

1815:                                             ; preds = %1807, %1813
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %792) #13
  call void @_ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_iostream"* nonnull %829, i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1)) #13
  call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %831) #13
  call void @llvm.lifetime.end.p0i8(i64 280, i8* nonnull %787) #13
  store i64 %507, i64* %776, align 8
  %1816 = load i64, i64* %511, align 8
  %1817 = getelementptr inbounds i8, i8* %770, i64 %1816
  %1818 = bitcast i8* %1817 to i64*
  store i64 %508, i64* %1818, align 8
  store i64 %512, i64* %781, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %783, align 8
  %1819 = load i8, i8* %833, align 1
  %1820 = icmp slt i8 %1819, 0
  br i1 %1820, label %1821, label %1823

1821:                                             ; preds = %1815
  %1822 = load i8*, i8** %834, align 8
  call void @_ZdlPv(i8* %1822) #16
  br label %1823

1823:                                             ; preds = %1815, %1821
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %775) #13
  call void @_ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_iostream"* nonnull %835, i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1)) #13
  call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %837) #13
  call void @llvm.lifetime.end.p0i8(i64 280, i8* nonnull %770) #13
  %1824 = add nuw nsw i64 %1694, 1
  %1825 = icmp eq i64 %1824, 4
  br i1 %1825, label %842, label %1693

1826:                                             ; preds = %1687
  call void @_ZN2gl7Program13setUniform1ivEPNS_7ContextENS_15UniformLocationEiPKi(%"class.gl::Program"* %721, %"class.gl::Context"* %1, i32 %1691, i32 1, i32* nonnull %5) #13
  br label %1827

1827:                                             ; preds = %1687, %1826
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1688)
  %1828 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 8, i32 0, i64 0, i32 0
  %1829 = load i32, i32* %1828, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1689)
  store i32 4, i32* %4, align 4
  %1830 = icmp eq i32 %1829, -1
  br i1 %1830, label %1832, label %1831

1831:                                             ; preds = %1827
  call void @_ZN2gl7Program13setUniform1ivEPNS_7ContextENS_15UniformLocationEiPKi(%"class.gl::Program"* %721, %"class.gl::Context"* %1, i32 %1829, i32 1, i32* nonnull %4) #13
  br label %1832

1832:                                             ; preds = %1827, %1831
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1689)
  %1833 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 7, i32 0, i64 1, i32 0
  %1834 = load i32, i32* %1833, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1688)
  store i32 1, i32* %5, align 4
  %1835 = icmp eq i32 %1834, -1
  br i1 %1835, label %1892, label %1891

1836:                                             ; preds = %1684, %521, %1917
  %1837 = phi i32 [ 1, %521 ], [ 0, %1917 ], [ 1, %1684 ]
  %1838 = load i64, i64* %187, align 8
  %1839 = icmp eq i64 %1838, 0
  br i1 %1839, label %1864, label %1842

1840:                                             ; preds = %1860
  %1841 = load i8*, i8** %185, align 8
  call void @_ZdlPv(i8* %1841) #16
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %185, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %188, i8 0, i64 32, i1 false) #13
  br label %1864

1842:                                             ; preds = %1836, %1860
  %1843 = phi i64 [ %1861, %1860 ], [ %1838, %1836 ]
  %1844 = phi i64 [ %1862, %1860 ], [ 0, %1836 ]
  %1845 = load i8*, i8** %185, align 8
  %1846 = getelementptr inbounds i8, i8* %1845, i64 %1844
  %1847 = load i8, i8* %1846, align 1
  %1848 = icmp sgt i8 %1847, -1
  br i1 %1848, label %1849, label %1860

1849:                                             ; preds = %1842
  %1850 = load %"union.absl::container_internal::map_slot_type.642"*, %"union.absl::container_internal::map_slot_type.642"** %186, align 8
  %1851 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.642", %"union.absl::container_internal::map_slot_type.642"* %1850, i64 %1844, i32 0, i32 1
  %1852 = bitcast %"class.std::__1::basic_string"* %1851 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1853 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1852, i64 0, i32 1, i32 0
  %1854 = load i8, i8* %1853, align 1
  %1855 = icmp slt i8 %1854, 0
  br i1 %1855, label %1856, label %1860

1856:                                             ; preds = %1849
  %1857 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1851, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1858 = load i8*, i8** %1857, align 8
  call void @_ZdlPv(i8* %1858) #16
  %1859 = load i64, i64* %187, align 8
  br label %1860

1860:                                             ; preds = %1856, %1849, %1842
  %1861 = phi i64 [ %1859, %1856 ], [ %1843, %1849 ], [ %1843, %1842 ]
  %1862 = add i64 %1844, 1
  %1863 = icmp eq i64 %1862, %1861
  br i1 %1863, label %1840, label %1842

1864:                                             ; preds = %1836, %1840
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %184) #13
  br label %1865

1865:                                             ; preds = %178, %1864
  %1866 = phi i8* [ %182, %178 ], [ %509, %1864 ]
  %1867 = phi i64 [ %181, %178 ], [ %512, %1864 ]
  %1868 = phi i64 [ %180, %178 ], [ %508, %1864 ]
  %1869 = phi i64 [ %179, %178 ], [ %507, %1864 ]
  %1870 = phi i32 [ 1, %178 ], [ %1837, %1864 ]
  store i64 %1869, i64* %113, align 8
  %1871 = getelementptr i8, i8* %1866, i64 -24
  %1872 = bitcast i8* %1871 to i64*
  %1873 = load i64, i64* %1872, align 8
  %1874 = getelementptr inbounds i8, i8* %104, i64 %1873
  %1875 = bitcast i8* %1874 to i64*
  store i64 %1868, i64* %1875, align 8
  store i64 %1867, i64* %136, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %153, align 8
  %1876 = bitcast %"class.std::__1::basic_string"* %154 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1877 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1876, i64 0, i32 1, i32 0
  %1878 = load i8, i8* %1877, align 1
  %1879 = icmp slt i8 %1878, 0
  br i1 %1879, label %1880, label %1883

1880:                                             ; preds = %1865
  %1881 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %154, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1882 = load i8*, i8** %1881, align 8
  call void @_ZdlPv(i8* %1882) #16
  br label %1883

1883:                                             ; preds = %1865, %1880
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %111) #13
  %1884 = bitcast %"class.std::__1::basic_stringstream"* %8 to %"class.std::__1::basic_iostream"*
  call void @_ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_iostream"* nonnull %1884, i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1)) #13
  %1885 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %8, i64 0, i32 2
  %1886 = bitcast %"class.std::__1::basic_ios.base"* %1885 to %"class.std::__1::basic_ios"*
  call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %1886) #13
  call void @llvm.lifetime.end.p0i8(i64 280, i8* nonnull %104) #13
  br label %1887

1887:                                             ; preds = %92, %1883
  %1888 = phi i32 [ %1870, %1883 ], [ 1, %92 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %99) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %97) #13
  br label %1889

1889:                                             ; preds = %3, %1887
  %1890 = phi i32 [ %1888, %1887 ], [ 0, %3 ]
  ret i32 %1890

1891:                                             ; preds = %1832
  call void @_ZN2gl7Program13setUniform1ivEPNS_7ContextENS_15UniformLocationEiPKi(%"class.gl::Program"* %721, %"class.gl::Context"* %1, i32 %1834, i32 1, i32* nonnull %5) #13
  br label %1892

1892:                                             ; preds = %1891, %1832
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1688)
  %1893 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 8, i32 0, i64 1, i32 0
  %1894 = load i32, i32* %1893, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1689)
  store i32 5, i32* %4, align 4
  %1895 = icmp eq i32 %1894, -1
  br i1 %1895, label %1897, label %1896

1896:                                             ; preds = %1892
  call void @_ZN2gl7Program13setUniform1ivEPNS_7ContextENS_15UniformLocationEiPKi(%"class.gl::Program"* %721, %"class.gl::Context"* %1, i32 %1894, i32 1, i32* nonnull %4) #13
  br label %1897

1897:                                             ; preds = %1896, %1892
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1689)
  %1898 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 7, i32 0, i64 2, i32 0
  %1899 = load i32, i32* %1898, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1688)
  store i32 2, i32* %5, align 4
  %1900 = icmp eq i32 %1899, -1
  br i1 %1900, label %1902, label %1901

1901:                                             ; preds = %1897
  call void @_ZN2gl7Program13setUniform1ivEPNS_7ContextENS_15UniformLocationEiPKi(%"class.gl::Program"* %721, %"class.gl::Context"* %1, i32 %1899, i32 1, i32* nonnull %5) #13
  br label %1902

1902:                                             ; preds = %1901, %1897
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1688)
  %1903 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 8, i32 0, i64 2, i32 0
  %1904 = load i32, i32* %1903, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1689)
  store i32 6, i32* %4, align 4
  %1905 = icmp eq i32 %1904, -1
  br i1 %1905, label %1907, label %1906

1906:                                             ; preds = %1902
  call void @_ZN2gl7Program13setUniform1ivEPNS_7ContextENS_15UniformLocationEiPKi(%"class.gl::Program"* %721, %"class.gl::Context"* %1, i32 %1904, i32 1, i32* nonnull %4) #13
  br label %1907

1907:                                             ; preds = %1906, %1902
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1689)
  %1908 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 7, i32 0, i64 3, i32 0
  %1909 = load i32, i32* %1908, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1688)
  store i32 3, i32* %5, align 4
  %1910 = icmp eq i32 %1909, -1
  br i1 %1910, label %1912, label %1911

1911:                                             ; preds = %1907
  call void @_ZN2gl7Program13setUniform1ivEPNS_7ContextENS_15UniformLocationEiPKi(%"class.gl::Program"* %721, %"class.gl::Context"* %1, i32 %1909, i32 1, i32* nonnull %5) #13
  br label %1912

1912:                                             ; preds = %1911, %1907
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1688)
  %1913 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 3, i32 8, i32 0, i64 3, i32 0
  %1914 = load i32, i32* %1913, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1689)
  store i32 7, i32* %4, align 4
  %1915 = icmp eq i32 %1914, -1
  br i1 %1915, label %1917, label %1916

1916:                                             ; preds = %1912
  call void @_ZN2gl7Program13setUniform1ivEPNS_7ContextENS_15UniformLocationEiPKi(%"class.gl::Program"* %721, %"class.gl::Context"* %1, i32 %1914, i32 1, i32* nonnull %4) #13
  br label %1917

1917:                                             ; preds = %1916, %1912
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1689)
  call void @_ZN2gl5State14setObjectDirtyEj(%"class.gl::State"* %2, i32 33506) #13
  store i8 1, i8* %89, align 8
  br label %1836
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind ssp uwtable
define hidden %"class.gl::Program"* @_ZNK2gl13GLES1Renderer10getProgramENS_15ShaderProgramIDE(%"class.gl::GLES1Renderer"* nocapture readonly, i32) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 1
  %4 = load %"class.gl::ShaderProgramManager"*, %"class.gl::ShaderProgramManager"** %3, align 8
  %5 = zext i32 %1 to i64
  %6 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %4, i64 0, i32 2, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp ugt i64 %7, %5
  br i1 %8, label %9, label %16

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %4, i64 0, i32 2, i32 1
  %11 = load %"class.gl::Program"**, %"class.gl::Program"*** %10, align 8
  %12 = getelementptr inbounds %"class.gl::Program"*, %"class.gl::Program"** %11, i64 %5
  %13 = load %"class.gl::Program"*, %"class.gl::Program"** %12, align 8
  %14 = icmp eq %"class.gl::Program"* %13, inttoptr (i64 -1 to %"class.gl::Program"*)
  %15 = select i1 %14, %"class.gl::Program"* null, %"class.gl::Program"* %13
  br label %79

16:                                               ; preds = %2
  %17 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %18 = add i64 %17, %5
  %19 = zext i64 %18 to i128
  %20 = mul nuw i128 %19, 11376068507788127593
  %21 = lshr i128 %20, 64
  %22 = xor i128 %21, %20
  %23 = trunc i128 %22 to i64
  %24 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %4, i64 0, i32 2, i32 2, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %4, i64 0, i32 2, i32 2, i32 0, i32 0, i32 3
  %27 = load i64, i64* %26, align 8
  %28 = lshr i64 %23, 7
  %29 = ptrtoint i8* %25 to i64
  %30 = lshr i64 %29, 12
  %31 = xor i64 %28, %30
  %32 = trunc i128 %22 to i8
  %33 = and i8 %32, 127
  %34 = insertelement <16 x i8> undef, i8 %33, i32 0
  %35 = shufflevector <16 x i8> %34, <16 x i8> undef, <16 x i32> zeroinitializer
  %36 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %4, i64 0, i32 2, i32 2, i32 0, i32 0, i32 1
  br label %37

37:                                               ; preds = %67, %16
  %38 = phi i64 [ %31, %16 ], [ %69, %67 ]
  %39 = phi i64 [ 0, %16 ], [ %68, %67 ]
  %40 = and i64 %38, %27
  %41 = getelementptr inbounds i8, i8* %25, i64 %40
  %42 = bitcast i8* %41 to <16 x i8>*
  %43 = load <16 x i8>, <16 x i8>* %42, align 1
  %44 = icmp eq <16 x i8> %35, %43
  %45 = bitcast <16 x i1> %44 to i16
  %46 = icmp eq i16 %45, 0
  br i1 %46, label %63, label %47

47:                                               ; preds = %37
  %48 = zext i16 %45 to i32
  %49 = load %"union.absl::container_internal::map_slot_type.244"*, %"union.absl::container_internal::map_slot_type.244"** %36, align 8
  br label %50

50:                                               ; preds = %59, %47
  %51 = phi i32 [ %48, %47 ], [ %61, %59 ]
  %52 = tail call i32 @llvm.cttz.i32(i32 %51, i1 false) #13, !range !3
  %53 = zext i32 %52 to i64
  %54 = add i64 %40, %53
  %55 = and i64 %54, %27
  %56 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %49, i64 %55, i32 0, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq i32 %57, %1
  br i1 %58, label %70, label %59, !prof !4

59:                                               ; preds = %50
  %60 = add i32 %51, -1
  %61 = and i32 %60, %51
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %50

63:                                               ; preds = %59, %37
  %64 = icmp eq <16 x i8> %43, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %65 = bitcast <16 x i1> %64 to i16
  %66 = icmp eq i16 %65, 0
  br i1 %66, label %67, label %79, !prof !5

67:                                               ; preds = %63
  %68 = add i64 %39, 16
  %69 = add i64 %68, %40
  br label %37

70:                                               ; preds = %50
  %71 = getelementptr inbounds i8, i8* %25, i64 %55
  %72 = icmp ne i8* %71, null
  tail call void @llvm.assume(i1 %72) #13
  %73 = load i8, i8* %71, align 1
  %74 = icmp sgt i8 %73, -1
  br i1 %74, label %76, label %75, !prof !4

75:                                               ; preds = %70
  tail call void @llvm.trap() #13
  unreachable

76:                                               ; preds = %70
  %77 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %49, i64 %55, i32 0, i32 1
  %78 = load %"class.gl::Program"*, %"class.gl::Program"** %77, align 8
  br label %79

79:                                               ; preds = %63, %9, %76
  %80 = phi %"class.gl::Program"* [ %15, %9 ], [ %78, %76 ], [ null, %63 ]
  ret %"class.gl::Program"* %80
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl13GLES1Renderer12setUniform1iEPNS_7ContextEPNS_7ProgramENS_15UniformLocationEi(%"class.gl::GLES1Renderer"* nocapture readnone, %"class.gl::Context"*, %"class.gl::Program"*, i32, i32) local_unnamed_addr #2 align 2 {
  %6 = alloca i32, align 4
  store i32 %4, i32* %6, align 4
  %7 = icmp eq i32 %3, -1
  br i1 %7, label %9, label %8

8:                                                ; preds = %5
  call void @_ZN2gl7Program13setUniform1ivEPNS_7ContextENS_15UniformLocationEiPKi(%"class.gl::Program"* %2, %"class.gl::Context"* %1, i32 %3, i32 1, i32* nonnull %6) #13
  br label %9

9:                                                ; preds = %5, %8
  ret void
}

declare zeroext i1 @_ZNK2gl5State16getEnableFeatureEj(%"class.gl::State"*, i32) local_unnamed_addr #3

declare zeroext i1 @_ZNK2gl10GLES1State22isTextureTargetEnabledEjNS_11TextureTypeE(%"class.gl::GLES1State"*, i32, i8 zeroext) local_unnamed_addr #3

declare i32 @_ZN2gl16GetUnsizedFormatEj(i32) local_unnamed_addr #3

declare dereferenceable(8) %"struct.gl::Format"* @_ZNK2gl7Texture9getFormatENS_13TextureTargetEm(%"class.gl::Texture"*, i8 zeroext, i64) local_unnamed_addr #3

declare dereferenceable(16) %"struct.gl::Rectangle"* @_ZNK2gl7Texture7getCropEv(%"class.gl::Texture"*) local_unnamed_addr #3

declare i64 @_ZNK2gl7Texture8getWidthENS_13TextureTargetEm(%"class.gl::Texture"*, i8 zeroext, i64) local_unnamed_addr #3

declare i64 @_ZNK2gl7Texture9getHeightENS_13TextureTargetEm(%"class.gl::Texture"*, i8 zeroext, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl13GLES1Renderer13setUniform1ivEPNS_7ContextEPNS_7ProgramENS_15UniformLocationEiPKi(%"class.gl::GLES1Renderer"* nocapture readnone, %"class.gl::Context"*, %"class.gl::Program"*, i32, i32, i32*) local_unnamed_addr #2 align 2 {
  %7 = icmp eq i32 %3, -1
  br i1 %7, label %9, label %8

8:                                                ; preds = %6
  tail call void @_ZN2gl7Program13setUniform1ivEPNS_7ContextENS_15UniformLocationEiPKi(%"class.gl::Program"* %2, %"class.gl::Context"* %1, i32 %3, i32 %4, i32* %5) #13
  br label %9

9:                                                ; preds = %6, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl13GLES1Renderer13setUniform4fvEPNS_7ProgramENS_15UniformLocationEiPKf(%"class.gl::GLES1Renderer"* nocapture readnone, %"class.gl::Program"*, i32, i32, float*) local_unnamed_addr #2 align 2 {
  %6 = icmp eq i32 %2, -1
  br i1 %6, label %8, label %7

7:                                                ; preds = %5
  tail call void @_ZN2gl7Program13setUniform4fvENS_15UniformLocationEiPKf(%"class.gl::Program"* %1, i32 %2, i32 %3, float* %4) #13
  br label %8

8:                                                ; preds = %5, %7
  ret void
}

declare zeroext i1 @_ZNK2gl10GLES1State7isDirtyENS0_14DirtyGles1TypeE(%"class.gl::GLES1State"*, i32) local_unnamed_addr #3

declare zeroext i1 @_ZNK2gl10GLES1State20isClientStateEnabledENS_21ClientVertexArrayTypeE(%"class.gl::GLES1State"*, i8 zeroext) local_unnamed_addr #3

declare dereferenceable(12) %"class.angle::Vector"* @_ZNK2gl10GLES1State16getCurrentNormalEv(%"class.gl::GLES1State"*) local_unnamed_addr #3

declare void @_ZN2gl7Context14vertexAttrib3fEjfff(%"class.gl::Context"*, i32, float, float, float) local_unnamed_addr #3

declare dereferenceable(16) %"struct.angle::Color"* @_ZNK2gl10GLES1State15getCurrentColorEv(%"class.gl::GLES1State"*) local_unnamed_addr #3

declare void @_ZN2gl7Context14vertexAttrib4fEjffff(%"class.gl::Context"*, i32, float, float, float, float) local_unnamed_addr #3

declare void @_ZN2gl7Context14vertexAttrib1fEjf(%"class.gl::Context"*, i32, float) local_unnamed_addr #3

declare dereferenceable(16) %"struct.gl::TextureCoordF"* @_ZNK2gl10GLES1State23getCurrentTextureCoordsEj(%"class.gl::GLES1State"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl13GLES1Renderer19setUniformMatrix4fvEPNS_7ProgramENS_15UniformLocationEihPKf(%"class.gl::GLES1Renderer"* nocapture readnone, %"class.gl::Program"*, i32, i32, i8 zeroext, float*) local_unnamed_addr #2 align 2 {
  %7 = icmp eq i32 %2, -1
  br i1 %7, label %9, label %8

8:                                                ; preds = %6
  tail call void @_ZN2gl7Program19setUniformMatrix4fvENS_15UniformLocationEihPKf(%"class.gl::Program"* %1, i32 %2, i32 %3, i8 zeroext %4, float* %5) #13
  br label %9

9:                                                ; preds = %6, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5angle6MatrixIfE9transposeEv(%"class.angle::Matrix"* noalias sret, %"class.angle::Matrix"*) local_unnamed_addr #2 comdat align 2 {
  %3 = alloca %"class.std::__1::vector.498", align 8
  %4 = getelementptr inbounds %"class.angle::Matrix", %"class.angle::Matrix"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.angle::Matrix", %"class.angle::Matrix"* %0, i64 0, i32 0, i32 0, i32 1
  %6 = getelementptr inbounds %"class.angle::Matrix", %"class.angle::Matrix"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %7 = getelementptr inbounds %"class.angle::Matrix", %"class.angle::Matrix"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.angle::Matrix", %"class.angle::Matrix"* %0, i64 0, i32 2
  %9 = bitcast %"class.std::__1::vector.498"* %3 to i8*
  %10 = bitcast %"class.angle::Matrix"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 -86, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #13
  %11 = getelementptr inbounds %"class.angle::Matrix", %"class.angle::Matrix"* %1, i64 0, i32 0, i32 0, i32 1
  %12 = bitcast float** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.angle::Matrix"* %1 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = sub i64 %13, %15
  %17 = ashr exact i64 %16, 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 24, i1 false) #13
  %18 = icmp eq i64 %16, 0
  br i1 %18, label %40, label %19

19:                                               ; preds = %2
  %20 = icmp ugt i64 %17, 4611686018427387903
  br i1 %20, label %21, label %23

21:                                               ; preds = %19
  %22 = bitcast %"class.std::__1::vector.498"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %22) #17
  unreachable

23:                                               ; preds = %19
  %24 = tail call i8* @_Znwm(i64 %16) #16
  %25 = bitcast i8* %24 to float*
  %26 = getelementptr inbounds %"class.std::__1::vector.498", %"class.std::__1::vector.498"* %3, i64 0, i32 0, i32 1
  %27 = bitcast %"class.std::__1::vector.498"* %3 to i8**
  store i8* %24, i8** %27, align 8
  %28 = getelementptr inbounds float, float* %25, i64 %17
  %29 = getelementptr inbounds %"class.std::__1::vector.498", %"class.std::__1::vector.498"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  store float* %28, float** %29, align 8
  %30 = bitcast float** %26 to i64*
  %31 = ptrtoint i8* %24 to i64
  %32 = add nsw i64 %17, -1
  %33 = getelementptr float, float* %25, i64 %32
  %34 = ptrtoint float* %33 to i64
  %35 = sub i64 4, %31
  %36 = add i64 %35, %34
  %37 = and i64 %36, -4
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %24, i8 0, i64 %37, i1 false) #13
  %38 = ptrtoint float* %28 to i64
  store i64 %38, i64* %30, align 8
  %39 = ptrtoint i8* %24 to i64
  br label %40

40:                                               ; preds = %2, %23
  %41 = phi i8* [ %24, %23 ], [ null, %2 ]
  %42 = phi float* [ %25, %23 ], [ null, %2 ]
  %43 = phi i64 [ %39, %23 ], [ 0, %2 ]
  %44 = phi i64 [ %31, %23 ], [ 0, %2 ]
  %45 = phi i64 [ %38, %23 ], [ 0, %2 ]
  %46 = getelementptr inbounds %"class.angle::Matrix", %"class.angle::Matrix"* %1, i64 0, i32 2
  %47 = load i32, i32* %46, align 4
  %48 = getelementptr inbounds %"class.angle::Matrix", %"class.angle::Matrix"* %1, i64 0, i32 1
  %49 = load i32, i32* %48, align 8
  %50 = bitcast %"class.angle::Matrix"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %50, i8 0, i64 24, i1 false) #13
  %51 = getelementptr inbounds %"class.std::__1::vector.498", %"class.std::__1::vector.498"* %3, i64 0, i32 0, i32 1
  %52 = bitcast float** %51 to i64*
  %53 = sub i64 %45, %44
  %54 = ashr exact i64 %53, 2
  %55 = icmp eq i64 %53, 0
  br i1 %55, label %76, label %56

56:                                               ; preds = %40
  %57 = icmp ugt i64 %54, 4611686018427387903
  br i1 %57, label %58, label %60

58:                                               ; preds = %56
  %59 = bitcast %"class.angle::Matrix"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %59) #17
  unreachable

60:                                               ; preds = %56
  %61 = tail call i8* @_Znwm(i64 %53) #16
  %62 = bitcast i8* %61 to float*
  %63 = bitcast float** %5 to i8**
  store i8* %61, i8** %63, align 8
  %64 = bitcast %"class.angle::Matrix"* %0 to i8**
  store i8* %61, i8** %64, align 8
  %65 = getelementptr inbounds float, float* %62, i64 %54
  store float* %65, float** %6, align 8
  %66 = bitcast float** %5 to i64*
  %67 = ptrtoint i8* %61 to i64
  %68 = sub i64 %45, %43
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %74

70:                                               ; preds = %60
  %71 = lshr exact i64 %68, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %61, i8* align 4 %41, i64 %68, i1 false) #13
  %72 = getelementptr inbounds float, float* %62, i64 %71
  %73 = ptrtoint float* %72 to i64
  br label %74

74:                                               ; preds = %70, %60
  %75 = phi i64 [ %73, %70 ], [ %67, %60 ]
  store i64 %75, i64* %66, align 8
  br label %76

76:                                               ; preds = %40, %74
  store i32 %47, i32* %7, align 8
  store i32 %49, i32* %8, align 4
  %77 = icmp eq float* %42, null
  br i1 %77, label %81, label %78

78:                                               ; preds = %76
  %79 = ptrtoint float* %42 to i64
  store i64 %79, i64* %52, align 8
  tail call void @_ZdlPv(i8* %41) #16
  %80 = load i32, i32* %46, align 4
  br label %81

81:                                               ; preds = %76, %78
  %82 = phi i32 [ %47, %76 ], [ %80, %78 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #13
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %134, label %84

84:                                               ; preds = %81
  %85 = getelementptr inbounds %"class.angle::Matrix", %"class.angle::Matrix"* %1, i64 0, i32 0, i32 0, i32 0
  %86 = load i32, i32* %48, align 8
  br label %87

87:                                               ; preds = %84, %109
  %88 = phi i32 [ %82, %84 ], [ %110, %109 ]
  %89 = phi i32 [ %86, %84 ], [ %111, %109 ]
  %90 = phi i32 [ 0, %84 ], [ %112, %109 ]
  %91 = icmp eq i32 %89, 0
  br i1 %91, label %109, label %92

92:                                               ; preds = %87
  %93 = zext i32 %90 to i64
  %94 = load float*, float** %85, align 8
  %95 = getelementptr inbounds float, float* %94, i64 %93
  %96 = bitcast float* %95 to i32*
  %97 = load i32, i32* %96, align 4
  %98 = load i32, i32* %8, align 4
  %99 = mul i32 %98, %90
  %100 = zext i32 %99 to i64
  %101 = load float*, float** %4, align 8
  %102 = getelementptr inbounds float, float* %101, i64 %100
  %103 = bitcast float* %102 to i32*
  store i32 %97, i32* %103, align 4
  %104 = load i32, i32* %48, align 8
  %105 = icmp ugt i32 %104, 1
  br i1 %105, label %114, label %106

106:                                              ; preds = %114, %92
  %107 = phi i32 [ %104, %92 ], [ %132, %114 ]
  %108 = load i32, i32* %46, align 4
  br label %109

109:                                              ; preds = %106, %87
  %110 = phi i32 [ %108, %106 ], [ %88, %87 ]
  %111 = phi i32 [ %107, %106 ], [ 0, %87 ]
  %112 = add nuw i32 %90, 1
  %113 = icmp ult i32 %112, %110
  br i1 %113, label %87, label %134

114:                                              ; preds = %92, %114
  %115 = phi i32 [ %131, %114 ], [ 1, %92 ]
  %116 = load i32, i32* %46, align 4
  %117 = mul i32 %116, %115
  %118 = add i32 %117, %90
  %119 = zext i32 %118 to i64
  %120 = load float*, float** %85, align 8
  %121 = getelementptr inbounds float, float* %120, i64 %119
  %122 = bitcast float* %121 to i32*
  %123 = load i32, i32* %122, align 4
  %124 = load i32, i32* %8, align 4
  %125 = mul i32 %124, %90
  %126 = add i32 %125, %115
  %127 = zext i32 %126 to i64
  %128 = load float*, float** %4, align 8
  %129 = getelementptr inbounds float, float* %128, i64 %127
  %130 = bitcast float* %129 to i32*
  store i32 %123, i32* %130, align 4
  %131 = add nuw i32 %115, 1
  %132 = load i32, i32* %48, align 8
  %133 = icmp ult i32 %131, %132
  br i1 %133, label %114, label %106

134:                                              ; preds = %109, %81
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5angle6MatrixIfE7inverseEv(%"class.angle::Matrix"* noalias sret, %"class.angle::Matrix"*) local_unnamed_addr #2 comdat align 2 {
  %3 = alloca %"class.angle::Matrix", align 8
  %4 = alloca %"class.std::__1::vector.498", align 8
  %5 = alloca %"class.angle::Matrix", align 8
  %6 = alloca %"class.std::__1::vector.498", align 8
  %7 = bitcast %"class.angle::Matrix"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #13
  %8 = getelementptr inbounds %"class.angle::Matrix", %"class.angle::Matrix"* %3, i64 0, i32 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.angle::Matrix", %"class.angle::Matrix"* %3, i64 0, i32 0, i32 0, i32 1
  %10 = getelementptr inbounds %"class.angle::Matrix", %"class.angle::Matrix"* %3, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %11 = getelementptr inbounds %"class.angle::Matrix", %"class.angle::Matrix"* %3, i64 0, i32 1
  %12 = getelementptr inbounds %"class.angle::Matrix", %"class.angle::Matrix"* %3, i64 0, i32 2
  %13 = bitcast %"class.std::__1::vector.498"* %4 to i8*
  %14 = bitcast %"class.angle::Matrix"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #13
  %15 = getelementptr inbounds %"class.angle::Matrix", %"class.angle::Matrix"* %1, i64 0, i32 0, i32 0, i32 1
  %16 = bitcast float** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast %"class.angle::Matrix"* %1 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = sub i64 %17, %19
  %21 = ashr exact i64 %20, 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 0, i64 24, i1 false) #13
  %22 = icmp eq i64 %20, 0
  br i1 %22, label %44, label %23

23:                                               ; preds = %2
  %24 = icmp ugt i64 %21, 4611686018427387903
  br i1 %24, label %25, label %27

25:                                               ; preds = %23
  %26 = bitcast %"class.std::__1::vector.498"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %26) #17
  unreachable

27:                                               ; preds = %23
  %28 = tail call i8* @_Znwm(i64 %20) #16
  %29 = bitcast i8* %28 to float*
  %30 = getelementptr inbounds %"class.std::__1::vector.498", %"class.std::__1::vector.498"* %4, i64 0, i32 0, i32 1
  %31 = bitcast %"class.std::__1::vector.498"* %4 to i8**
  store i8* %28, i8** %31, align 8
  %32 = getelementptr inbounds float, float* %29, i64 %21
  %33 = getelementptr inbounds %"class.std::__1::vector.498", %"class.std::__1::vector.498"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  store float* %32, float** %33, align 8
  %34 = bitcast float** %30 to i64*
  %35 = ptrtoint i8* %28 to i64
  %36 = add nsw i64 %21, -1
  %37 = getelementptr float, float* %29, i64 %36
  %38 = ptrtoint float* %37 to i64
  %39 = sub i64 4, %35
  %40 = add i64 %39, %38
  %41 = and i64 %40, -4
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %28, i8 0, i64 %41, i1 false) #13
  %42 = ptrtoint float* %32 to i64
  store i64 %42, i64* %34, align 8
  %43 = ptrtoint i8* %28 to i64
  br label %44

44:                                               ; preds = %2, %27
  %45 = phi i8* [ %28, %27 ], [ null, %2 ]
  %46 = phi float* [ %29, %27 ], [ null, %2 ]
  %47 = phi i64 [ %43, %27 ], [ 0, %2 ]
  %48 = phi i64 [ %35, %27 ], [ 0, %2 ]
  %49 = phi i64 [ %42, %27 ], [ 0, %2 ]
  %50 = getelementptr inbounds %"class.angle::Matrix", %"class.angle::Matrix"* %1, i64 0, i32 1
  %51 = load i32, i32* %50, align 8
  %52 = getelementptr inbounds %"class.angle::Matrix", %"class.angle::Matrix"* %1, i64 0, i32 2
  %53 = load i32, i32* %52, align 4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 24, i1 false) #13
  %54 = getelementptr inbounds %"class.std::__1::vector.498", %"class.std::__1::vector.498"* %4, i64 0, i32 0, i32 1
  %55 = bitcast float** %54 to i64*
  %56 = sub i64 %49, %48
  %57 = ashr exact i64 %56, 2
  %58 = icmp eq i64 %56, 0
  br i1 %58, label %80, label %59

59:                                               ; preds = %44
  %60 = icmp ugt i64 %57, 4611686018427387903
  br i1 %60, label %61, label %63

61:                                               ; preds = %59
  %62 = bitcast %"class.angle::Matrix"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %62) #17
  unreachable

63:                                               ; preds = %59
  %64 = tail call i8* @_Znwm(i64 %56) #16
  %65 = bitcast i8* %64 to float*
  %66 = bitcast float** %9 to i8**
  store i8* %64, i8** %66, align 8
  %67 = bitcast %"class.angle::Matrix"* %3 to i8**
  store i8* %64, i8** %67, align 8
  %68 = getelementptr inbounds float, float* %65, i64 %57
  store float* %68, float** %10, align 8
  %69 = bitcast float** %9 to i64*
  %70 = ptrtoint i8* %64 to i64
  %71 = sub i64 %49, %47
  %72 = icmp sgt i64 %71, 0
  %73 = bitcast i8* %64 to i32*
  br i1 %72, label %74, label %78

74:                                               ; preds = %63
  %75 = lshr exact i64 %71, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %64, i8* align 4 %45, i64 %71, i1 false) #13
  %76 = getelementptr inbounds float, float* %65, i64 %75
  %77 = ptrtoint float* %76 to i64
  br label %78

78:                                               ; preds = %74, %63
  %79 = phi i64 [ %77, %74 ], [ %70, %63 ]
  store i64 %79, i64* %69, align 8
  br label %80

80:                                               ; preds = %44, %78
  %81 = phi float* [ null, %44 ], [ %65, %78 ]
  %82 = phi i32* [ null, %44 ], [ %73, %78 ]
  store i32 %51, i32* %11, align 8
  store i32 %53, i32* %12, align 4
  %83 = icmp eq float* %46, null
  br i1 %83, label %87, label %84

84:                                               ; preds = %80
  %85 = ptrtoint float* %46 to i64
  store i64 %85, i64* %55, align 8
  tail call void @_ZdlPv(i8* %45) #16
  %86 = load i32, i32* %50, align 8
  br label %87

87:                                               ; preds = %80, %84
  %88 = phi i32 [ %51, %80 ], [ %86, %84 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #13
  switch i32 %88, label %1189 [
    i32 2, label %89
    i32 3, label %118
    i32 4, label %314
  ]

89:                                               ; preds = %87
  %90 = load i32, i32* %52, align 4
  %91 = add i32 %90, 1
  %92 = zext i32 %91 to i64
  %93 = getelementptr inbounds %"class.angle::Matrix", %"class.angle::Matrix"* %1, i64 0, i32 0, i32 0, i32 0
  %94 = load float*, float** %93, align 8
  %95 = getelementptr inbounds float, float* %94, i64 %92
  %96 = bitcast float* %95 to i32*
  %97 = load i32, i32* %96, align 4
  store i32 %97, i32* %82, align 4
  %98 = load i32, i32* %52, align 4
  %99 = zext i32 %98 to i64
  %100 = load float*, float** %93, align 8
  %101 = getelementptr inbounds float, float* %100, i64 %99
  %102 = load float, float* %101, align 4
  %103 = fsub float -0.000000e+00, %102
  %104 = getelementptr inbounds float, float* %81, i64 1
  store float %103, float* %104, align 4
  %105 = load float*, float** %93, align 8
  %106 = getelementptr inbounds float, float* %105, i64 1
  %107 = load float, float* %106, align 4
  %108 = fsub float -0.000000e+00, %107
  %109 = zext i32 %53 to i64
  %110 = getelementptr inbounds float, float* %81, i64 %109
  store float %108, float* %110, align 4
  %111 = bitcast %"class.angle::Matrix"* %1 to i32**
  %112 = load i32*, i32** %111, align 8
  %113 = load i32, i32* %112, align 4
  %114 = add i32 %53, 1
  %115 = zext i32 %114 to i64
  %116 = getelementptr inbounds float, float* %81, i64 %115
  %117 = bitcast float* %116 to i32*
  store i32 %113, i32* %117, align 4
  br label %1189

118:                                              ; preds = %87
  %119 = load i32, i32* %52, align 4
  %120 = add i32 %119, 1
  %121 = zext i32 %120 to i64
  %122 = getelementptr inbounds %"class.angle::Matrix", %"class.angle::Matrix"* %1, i64 0, i32 0, i32 0, i32 0
  %123 = load float*, float** %122, align 8
  %124 = getelementptr inbounds float, float* %123, i64 %121
  %125 = load float, float* %124, align 4
  %126 = shl i32 %119, 1
  %127 = add i32 %126, 2
  %128 = zext i32 %127 to i64
  %129 = getelementptr inbounds float, float* %123, i64 %128
  %130 = load float, float* %129, align 4
  %131 = fmul float %125, %130
  %132 = or i32 %126, 1
  %133 = zext i32 %132 to i64
  %134 = getelementptr inbounds float, float* %123, i64 %133
  %135 = load float, float* %134, align 4
  %136 = add i32 %119, 2
  %137 = zext i32 %136 to i64
  %138 = getelementptr inbounds float, float* %123, i64 %137
  %139 = load float, float* %138, align 4
  %140 = fmul float %135, %139
  %141 = fsub float %131, %140
  store float %141, float* %81, align 4
  %142 = load i32, i32* %52, align 4
  %143 = zext i32 %142 to i64
  %144 = load float*, float** %122, align 8
  %145 = getelementptr inbounds float, float* %144, i64 %143
  %146 = load float, float* %145, align 4
  %147 = shl i32 %142, 1
  %148 = add i32 %147, 2
  %149 = zext i32 %148 to i64
  %150 = getelementptr inbounds float, float* %144, i64 %149
  %151 = load float, float* %150, align 4
  %152 = fmul float %146, %151
  %153 = zext i32 %147 to i64
  %154 = getelementptr inbounds float, float* %144, i64 %153
  %155 = load float, float* %154, align 4
  %156 = add i32 %142, 2
  %157 = zext i32 %156 to i64
  %158 = getelementptr inbounds float, float* %144, i64 %157
  %159 = load float, float* %158, align 4
  %160 = fmul float %155, %159
  %161 = fsub float %152, %160
  %162 = fsub float -0.000000e+00, %161
  %163 = getelementptr inbounds float, float* %81, i64 1
  store float %162, float* %163, align 4
  %164 = load i32, i32* %52, align 4
  %165 = zext i32 %164 to i64
  %166 = load float*, float** %122, align 8
  %167 = getelementptr inbounds float, float* %166, i64 %165
  %168 = load float, float* %167, align 4
  %169 = shl i32 %164, 1
  %170 = or i32 %169, 1
  %171 = zext i32 %170 to i64
  %172 = getelementptr inbounds float, float* %166, i64 %171
  %173 = load float, float* %172, align 4
  %174 = fmul float %168, %173
  %175 = zext i32 %169 to i64
  %176 = getelementptr inbounds float, float* %166, i64 %175
  %177 = load float, float* %176, align 4
  %178 = add i32 %164, 1
  %179 = zext i32 %178 to i64
  %180 = getelementptr inbounds float, float* %166, i64 %179
  %181 = load float, float* %180, align 4
  %182 = fmul float %177, %181
  %183 = fsub float %174, %182
  %184 = getelementptr inbounds float, float* %81, i64 2
  store float %183, float* %184, align 4
  %185 = load float*, float** %122, align 8
  %186 = getelementptr inbounds float, float* %185, i64 1
  %187 = load float, float* %186, align 4
  %188 = load i32, i32* %52, align 4
  %189 = shl i32 %188, 1
  %190 = add i32 %189, 2
  %191 = zext i32 %190 to i64
  %192 = getelementptr inbounds float, float* %185, i64 %191
  %193 = load float, float* %192, align 4
  %194 = fmul float %187, %193
  %195 = or i32 %189, 1
  %196 = zext i32 %195 to i64
  %197 = getelementptr inbounds float, float* %185, i64 %196
  %198 = load float, float* %197, align 4
  %199 = getelementptr inbounds float, float* %185, i64 2
  %200 = load float, float* %199, align 4
  %201 = fmul float %198, %200
  %202 = fsub float %194, %201
  %203 = fsub float -0.000000e+00, %202
  %204 = zext i32 %53 to i64
  %205 = getelementptr inbounds float, float* %81, i64 %204
  store float %203, float* %205, align 4
  %206 = load float*, float** %122, align 8
  %207 = load float, float* %206, align 4
  %208 = load i32, i32* %52, align 4
  %209 = shl i32 %208, 1
  %210 = add i32 %209, 2
  %211 = zext i32 %210 to i64
  %212 = getelementptr inbounds float, float* %206, i64 %211
  %213 = load float, float* %212, align 4
  %214 = fmul float %207, %213
  %215 = zext i32 %209 to i64
  %216 = getelementptr inbounds float, float* %206, i64 %215
  %217 = load float, float* %216, align 4
  %218 = getelementptr inbounds float, float* %206, i64 2
  %219 = load float, float* %218, align 4
  %220 = fmul float %217, %219
  %221 = fsub float %214, %220
  %222 = load i32, i32* %12, align 4
  %223 = add i32 %222, 1
  %224 = zext i32 %223 to i64
  %225 = load float*, float** %8, align 8
  %226 = getelementptr inbounds float, float* %225, i64 %224
  store float %221, float* %226, align 4
  %227 = load float*, float** %122, align 8
  %228 = load float, float* %227, align 4
  %229 = load i32, i32* %52, align 4
  %230 = shl i32 %229, 1
  %231 = or i32 %230, 1
  %232 = zext i32 %231 to i64
  %233 = getelementptr inbounds float, float* %227, i64 %232
  %234 = load float, float* %233, align 4
  %235 = fmul float %228, %234
  %236 = zext i32 %230 to i64
  %237 = getelementptr inbounds float, float* %227, i64 %236
  %238 = load float, float* %237, align 4
  %239 = getelementptr inbounds float, float* %227, i64 1
  %240 = load float, float* %239, align 4
  %241 = fmul float %238, %240
  %242 = fsub float %235, %241
  %243 = fsub float -0.000000e+00, %242
  %244 = load i32, i32* %12, align 4
  %245 = add i32 %244, 2
  %246 = zext i32 %245 to i64
  %247 = load float*, float** %8, align 8
  %248 = getelementptr inbounds float, float* %247, i64 %246
  store float %243, float* %248, align 4
  %249 = load float*, float** %122, align 8
  %250 = getelementptr inbounds float, float* %249, i64 1
  %251 = load float, float* %250, align 4
  %252 = load i32, i32* %52, align 4
  %253 = add i32 %252, 2
  %254 = zext i32 %253 to i64
  %255 = getelementptr inbounds float, float* %249, i64 %254
  %256 = load float, float* %255, align 4
  %257 = fmul float %251, %256
  %258 = add i32 %252, 1
  %259 = zext i32 %258 to i64
  %260 = getelementptr inbounds float, float* %249, i64 %259
  %261 = load float, float* %260, align 4
  %262 = getelementptr inbounds float, float* %249, i64 2
  %263 = load float, float* %262, align 4
  %264 = fmul float %261, %263
  %265 = fsub float %257, %264
  %266 = load i32, i32* %12, align 4
  %267 = shl i32 %266, 1
  %268 = zext i32 %267 to i64
  %269 = load float*, float** %8, align 8
  %270 = getelementptr inbounds float, float* %269, i64 %268
  store float %265, float* %270, align 4
  %271 = load float*, float** %122, align 8
  %272 = load float, float* %271, align 4
  %273 = load i32, i32* %52, align 4
  %274 = add i32 %273, 2
  %275 = zext i32 %274 to i64
  %276 = getelementptr inbounds float, float* %271, i64 %275
  %277 = load float, float* %276, align 4
  %278 = fmul float %272, %277
  %279 = zext i32 %273 to i64
  %280 = getelementptr inbounds float, float* %271, i64 %279
  %281 = load float, float* %280, align 4
  %282 = getelementptr inbounds float, float* %271, i64 2
  %283 = load float, float* %282, align 4
  %284 = fmul float %281, %283
  %285 = fsub float %278, %284
  %286 = fsub float -0.000000e+00, %285
  %287 = load i32, i32* %12, align 4
  %288 = shl i32 %287, 1
  %289 = or i32 %288, 1
  %290 = zext i32 %289 to i64
  %291 = load float*, float** %8, align 8
  %292 = getelementptr inbounds float, float* %291, i64 %290
  store float %286, float* %292, align 4
  %293 = load float*, float** %122, align 8
  %294 = load float, float* %293, align 4
  %295 = load i32, i32* %52, align 4
  %296 = add i32 %295, 1
  %297 = zext i32 %296 to i64
  %298 = getelementptr inbounds float, float* %293, i64 %297
  %299 = load float, float* %298, align 4
  %300 = fmul float %294, %299
  %301 = zext i32 %295 to i64
  %302 = getelementptr inbounds float, float* %293, i64 %301
  %303 = load float, float* %302, align 4
  %304 = getelementptr inbounds float, float* %293, i64 1
  %305 = load float, float* %304, align 4
  %306 = fmul float %303, %305
  %307 = fsub float %300, %306
  %308 = load i32, i32* %12, align 4
  %309 = shl i32 %308, 1
  %310 = add i32 %309, 2
  %311 = zext i32 %310 to i64
  %312 = load float*, float** %8, align 8
  %313 = getelementptr inbounds float, float* %312, i64 %311
  store float %307, float* %313, align 4
  br label %1189

314:                                              ; preds = %87
  %315 = load i32, i32* %52, align 4
  %316 = add i32 %315, 1
  %317 = zext i32 %316 to i64
  %318 = getelementptr inbounds %"class.angle::Matrix", %"class.angle::Matrix"* %1, i64 0, i32 0, i32 0, i32 0
  %319 = load float*, float** %318, align 8
  %320 = getelementptr inbounds float, float* %319, i64 %317
  %321 = load float, float* %320, align 4
  %322 = shl i32 %315, 1
  %323 = add i32 %322, 2
  %324 = zext i32 %323 to i64
  %325 = getelementptr inbounds float, float* %319, i64 %324
  %326 = load float, float* %325, align 4
  %327 = fmul float %321, %326
  %328 = mul i32 %315, 3
  %329 = add i32 %328, 3
  %330 = zext i32 %329 to i64
  %331 = getelementptr inbounds float, float* %319, i64 %330
  %332 = load float, float* %331, align 4
  %333 = fmul float %327, %332
  %334 = or i32 %322, 1
  %335 = zext i32 %334 to i64
  %336 = getelementptr inbounds float, float* %319, i64 %335
  %337 = load float, float* %336, align 4
  %338 = add i32 %328, 2
  %339 = zext i32 %338 to i64
  %340 = getelementptr inbounds float, float* %319, i64 %339
  %341 = load float, float* %340, align 4
  %342 = fmul float %337, %341
  %343 = add i32 %315, 3
  %344 = zext i32 %343 to i64
  %345 = getelementptr inbounds float, float* %319, i64 %344
  %346 = load float, float* %345, align 4
  %347 = fmul float %342, %346
  %348 = fadd float %333, %347
  %349 = add i32 %328, 1
  %350 = zext i32 %349 to i64
  %351 = getelementptr inbounds float, float* %319, i64 %350
  %352 = load float, float* %351, align 4
  %353 = add i32 %315, 2
  %354 = zext i32 %353 to i64
  %355 = getelementptr inbounds float, float* %319, i64 %354
  %356 = load float, float* %355, align 4
  %357 = fmul float %352, %356
  %358 = add i32 %322, 3
  %359 = zext i32 %358 to i64
  %360 = getelementptr inbounds float, float* %319, i64 %359
  %361 = load float, float* %360, align 4
  %362 = fmul float %357, %361
  %363 = fadd float %348, %362
  %364 = fmul float %321, %341
  %365 = fmul float %364, %361
  %366 = fsub float %363, %365
  %367 = fmul float %337, %356
  %368 = fmul float %332, %367
  %369 = fsub float %366, %368
  %370 = fmul float %326, %352
  %371 = fmul float %346, %370
  %372 = fsub float %369, %371
  store float %372, float* %81, align 4
  %373 = load i32, i32* %52, align 4
  %374 = zext i32 %373 to i64
  %375 = load float*, float** %318, align 8
  %376 = getelementptr inbounds float, float* %375, i64 %374
  %377 = load float, float* %376, align 4
  %378 = shl i32 %373, 1
  %379 = add i32 %378, 2
  %380 = zext i32 %379 to i64
  %381 = getelementptr inbounds float, float* %375, i64 %380
  %382 = load float, float* %381, align 4
  %383 = fmul float %377, %382
  %384 = mul i32 %373, 3
  %385 = add i32 %384, 3
  %386 = zext i32 %385 to i64
  %387 = getelementptr inbounds float, float* %375, i64 %386
  %388 = load float, float* %387, align 4
  %389 = fmul float %383, %388
  %390 = zext i32 %378 to i64
  %391 = getelementptr inbounds float, float* %375, i64 %390
  %392 = load float, float* %391, align 4
  %393 = add i32 %384, 2
  %394 = zext i32 %393 to i64
  %395 = getelementptr inbounds float, float* %375, i64 %394
  %396 = load float, float* %395, align 4
  %397 = fmul float %392, %396
  %398 = add i32 %373, 3
  %399 = zext i32 %398 to i64
  %400 = getelementptr inbounds float, float* %375, i64 %399
  %401 = load float, float* %400, align 4
  %402 = fmul float %397, %401
  %403 = fadd float %389, %402
  %404 = zext i32 %384 to i64
  %405 = getelementptr inbounds float, float* %375, i64 %404
  %406 = load float, float* %405, align 4
  %407 = add i32 %373, 2
  %408 = zext i32 %407 to i64
  %409 = getelementptr inbounds float, float* %375, i64 %408
  %410 = load float, float* %409, align 4
  %411 = fmul float %406, %410
  %412 = add i32 %378, 3
  %413 = zext i32 %412 to i64
  %414 = getelementptr inbounds float, float* %375, i64 %413
  %415 = load float, float* %414, align 4
  %416 = fmul float %411, %415
  %417 = fadd float %403, %416
  %418 = fmul float %377, %396
  %419 = fmul float %418, %415
  %420 = fsub float %417, %419
  %421 = fmul float %392, %410
  %422 = fmul float %388, %421
  %423 = fsub float %420, %422
  %424 = fmul float %382, %406
  %425 = fmul float %401, %424
  %426 = fsub float %423, %425
  %427 = fsub float -0.000000e+00, %426
  %428 = load float*, float** %8, align 8
  %429 = getelementptr inbounds float, float* %428, i64 1
  store float %427, float* %429, align 4
  %430 = load i32, i32* %52, align 4
  %431 = zext i32 %430 to i64
  %432 = load float*, float** %318, align 8
  %433 = getelementptr inbounds float, float* %432, i64 %431
  %434 = load float, float* %433, align 4
  %435 = shl i32 %430, 1
  %436 = or i32 %435, 1
  %437 = zext i32 %436 to i64
  %438 = getelementptr inbounds float, float* %432, i64 %437
  %439 = load float, float* %438, align 4
  %440 = fmul float %434, %439
  %441 = mul i32 %430, 3
  %442 = add i32 %441, 3
  %443 = zext i32 %442 to i64
  %444 = getelementptr inbounds float, float* %432, i64 %443
  %445 = load float, float* %444, align 4
  %446 = fmul float %440, %445
  %447 = zext i32 %435 to i64
  %448 = getelementptr inbounds float, float* %432, i64 %447
  %449 = load float, float* %448, align 4
  %450 = add i32 %441, 1
  %451 = zext i32 %450 to i64
  %452 = getelementptr inbounds float, float* %432, i64 %451
  %453 = load float, float* %452, align 4
  %454 = fmul float %449, %453
  %455 = add i32 %430, 3
  %456 = zext i32 %455 to i64
  %457 = getelementptr inbounds float, float* %432, i64 %456
  %458 = load float, float* %457, align 4
  %459 = fmul float %454, %458
  %460 = fadd float %446, %459
  %461 = zext i32 %441 to i64
  %462 = getelementptr inbounds float, float* %432, i64 %461
  %463 = load float, float* %462, align 4
  %464 = add i32 %430, 1
  %465 = zext i32 %464 to i64
  %466 = getelementptr inbounds float, float* %432, i64 %465
  %467 = load float, float* %466, align 4
  %468 = fmul float %463, %467
  %469 = add i32 %435, 3
  %470 = zext i32 %469 to i64
  %471 = getelementptr inbounds float, float* %432, i64 %470
  %472 = load float, float* %471, align 4
  %473 = fmul float %468, %472
  %474 = fadd float %460, %473
  %475 = fmul float %434, %453
  %476 = fmul float %475, %472
  %477 = fsub float %474, %476
  %478 = fmul float %449, %467
  %479 = fmul float %445, %478
  %480 = fsub float %477, %479
  %481 = fmul float %439, %463
  %482 = fmul float %458, %481
  %483 = fsub float %480, %482
  %484 = load float*, float** %8, align 8
  %485 = getelementptr inbounds float, float* %484, i64 2
  store float %483, float* %485, align 4
  %486 = load i32, i32* %52, align 4
  %487 = zext i32 %486 to i64
  %488 = load float*, float** %318, align 8
  %489 = getelementptr inbounds float, float* %488, i64 %487
  %490 = load float, float* %489, align 4
  %491 = shl i32 %486, 1
  %492 = or i32 %491, 1
  %493 = zext i32 %492 to i64
  %494 = getelementptr inbounds float, float* %488, i64 %493
  %495 = load float, float* %494, align 4
  %496 = fmul float %490, %495
  %497 = mul i32 %486, 3
  %498 = add i32 %497, 2
  %499 = zext i32 %498 to i64
  %500 = getelementptr inbounds float, float* %488, i64 %499
  %501 = load float, float* %500, align 4
  %502 = fmul float %496, %501
  %503 = zext i32 %491 to i64
  %504 = getelementptr inbounds float, float* %488, i64 %503
  %505 = load float, float* %504, align 4
  %506 = add i32 %497, 1
  %507 = zext i32 %506 to i64
  %508 = getelementptr inbounds float, float* %488, i64 %507
  %509 = load float, float* %508, align 4
  %510 = fmul float %505, %509
  %511 = add i32 %486, 2
  %512 = zext i32 %511 to i64
  %513 = getelementptr inbounds float, float* %488, i64 %512
  %514 = load float, float* %513, align 4
  %515 = fmul float %510, %514
  %516 = fadd float %502, %515
  %517 = zext i32 %497 to i64
  %518 = getelementptr inbounds float, float* %488, i64 %517
  %519 = load float, float* %518, align 4
  %520 = add i32 %486, 1
  %521 = zext i32 %520 to i64
  %522 = getelementptr inbounds float, float* %488, i64 %521
  %523 = load float, float* %522, align 4
  %524 = fmul float %519, %523
  %525 = add i32 %491, 2
  %526 = zext i32 %525 to i64
  %527 = getelementptr inbounds float, float* %488, i64 %526
  %528 = load float, float* %527, align 4
  %529 = fmul float %524, %528
  %530 = fadd float %516, %529
  %531 = fmul float %490, %509
  %532 = fmul float %531, %528
  %533 = fsub float %530, %532
  %534 = fmul float %505, %523
  %535 = fmul float %501, %534
  %536 = fsub float %533, %535
  %537 = fmul float %495, %519
  %538 = fmul float %514, %537
  %539 = fsub float %536, %538
  %540 = fsub float -0.000000e+00, %539
  %541 = getelementptr inbounds float, float* %484, i64 3
  store float %540, float* %541, align 4
  %542 = load float*, float** %318, align 8
  %543 = getelementptr inbounds float, float* %542, i64 1
  %544 = load float, float* %543, align 4
  %545 = load i32, i32* %52, align 4
  %546 = shl i32 %545, 1
  %547 = add i32 %546, 2
  %548 = zext i32 %547 to i64
  %549 = getelementptr inbounds float, float* %542, i64 %548
  %550 = load float, float* %549, align 4
  %551 = fmul float %544, %550
  %552 = mul i32 %545, 3
  %553 = add i32 %552, 3
  %554 = zext i32 %553 to i64
  %555 = getelementptr inbounds float, float* %542, i64 %554
  %556 = load float, float* %555, align 4
  %557 = fmul float %551, %556
  %558 = or i32 %546, 1
  %559 = zext i32 %558 to i64
  %560 = getelementptr inbounds float, float* %542, i64 %559
  %561 = load float, float* %560, align 4
  %562 = add i32 %552, 2
  %563 = zext i32 %562 to i64
  %564 = getelementptr inbounds float, float* %542, i64 %563
  %565 = load float, float* %564, align 4
  %566 = fmul float %561, %565
  %567 = getelementptr inbounds float, float* %542, i64 3
  %568 = load float, float* %567, align 4
  %569 = fmul float %566, %568
  %570 = fadd float %557, %569
  %571 = add i32 %552, 1
  %572 = zext i32 %571 to i64
  %573 = getelementptr inbounds float, float* %542, i64 %572
  %574 = load float, float* %573, align 4
  %575 = getelementptr inbounds float, float* %542, i64 2
  %576 = load float, float* %575, align 4
  %577 = fmul float %574, %576
  %578 = add i32 %546, 3
  %579 = zext i32 %578 to i64
  %580 = getelementptr inbounds float, float* %542, i64 %579
  %581 = load float, float* %580, align 4
  %582 = fmul float %577, %581
  %583 = fadd float %570, %582
  %584 = fmul float %544, %565
  %585 = fmul float %584, %581
  %586 = fsub float %583, %585
  %587 = fmul float %561, %576
  %588 = fmul float %556, %587
  %589 = fsub float %586, %588
  %590 = fmul float %550, %574
  %591 = fmul float %568, %590
  %592 = fsub float %589, %591
  %593 = fsub float -0.000000e+00, %592
  %594 = load i32, i32* %12, align 4
  %595 = zext i32 %594 to i64
  %596 = getelementptr inbounds float, float* %484, i64 %595
  store float %593, float* %596, align 4
  %597 = load float*, float** %318, align 8
  %598 = load float, float* %597, align 4
  %599 = load i32, i32* %52, align 4
  %600 = shl i32 %599, 1
  %601 = add i32 %600, 2
  %602 = zext i32 %601 to i64
  %603 = getelementptr inbounds float, float* %597, i64 %602
  %604 = load float, float* %603, align 4
  %605 = fmul float %598, %604
  %606 = mul i32 %599, 3
  %607 = add i32 %606, 3
  %608 = zext i32 %607 to i64
  %609 = getelementptr inbounds float, float* %597, i64 %608
  %610 = load float, float* %609, align 4
  %611 = fmul float %605, %610
  %612 = zext i32 %600 to i64
  %613 = getelementptr inbounds float, float* %597, i64 %612
  %614 = load float, float* %613, align 4
  %615 = add i32 %606, 2
  %616 = zext i32 %615 to i64
  %617 = getelementptr inbounds float, float* %597, i64 %616
  %618 = load float, float* %617, align 4
  %619 = fmul float %614, %618
  %620 = getelementptr inbounds float, float* %597, i64 3
  %621 = load float, float* %620, align 4
  %622 = fmul float %619, %621
  %623 = fadd float %611, %622
  %624 = zext i32 %606 to i64
  %625 = getelementptr inbounds float, float* %597, i64 %624
  %626 = load float, float* %625, align 4
  %627 = getelementptr inbounds float, float* %597, i64 2
  %628 = load float, float* %627, align 4
  %629 = fmul float %626, %628
  %630 = add i32 %600, 3
  %631 = zext i32 %630 to i64
  %632 = getelementptr inbounds float, float* %597, i64 %631
  %633 = load float, float* %632, align 4
  %634 = fmul float %629, %633
  %635 = fadd float %623, %634
  %636 = fmul float %598, %618
  %637 = fmul float %636, %633
  %638 = fsub float %635, %637
  %639 = fmul float %614, %628
  %640 = fmul float %610, %639
  %641 = fsub float %638, %640
  %642 = fmul float %604, %626
  %643 = fmul float %621, %642
  %644 = fsub float %641, %643
  %645 = load i32, i32* %12, align 4
  %646 = add i32 %645, 1
  %647 = zext i32 %646 to i64
  %648 = load float*, float** %8, align 8
  %649 = getelementptr inbounds float, float* %648, i64 %647
  store float %644, float* %649, align 4
  %650 = load float*, float** %318, align 8
  %651 = load float, float* %650, align 4
  %652 = load i32, i32* %52, align 4
  %653 = shl i32 %652, 1
  %654 = or i32 %653, 1
  %655 = zext i32 %654 to i64
  %656 = getelementptr inbounds float, float* %650, i64 %655
  %657 = load float, float* %656, align 4
  %658 = fmul float %651, %657
  %659 = mul i32 %652, 3
  %660 = add i32 %659, 3
  %661 = zext i32 %660 to i64
  %662 = getelementptr inbounds float, float* %650, i64 %661
  %663 = load float, float* %662, align 4
  %664 = fmul float %658, %663
  %665 = zext i32 %653 to i64
  %666 = getelementptr inbounds float, float* %650, i64 %665
  %667 = load float, float* %666, align 4
  %668 = add i32 %659, 1
  %669 = zext i32 %668 to i64
  %670 = getelementptr inbounds float, float* %650, i64 %669
  %671 = load float, float* %670, align 4
  %672 = fmul float %667, %671
  %673 = getelementptr inbounds float, float* %650, i64 3
  %674 = load float, float* %673, align 4
  %675 = fmul float %672, %674
  %676 = fadd float %664, %675
  %677 = zext i32 %659 to i64
  %678 = getelementptr inbounds float, float* %650, i64 %677
  %679 = load float, float* %678, align 4
  %680 = getelementptr inbounds float, float* %650, i64 1
  %681 = load float, float* %680, align 4
  %682 = fmul float %679, %681
  %683 = add i32 %653, 3
  %684 = zext i32 %683 to i64
  %685 = getelementptr inbounds float, float* %650, i64 %684
  %686 = load float, float* %685, align 4
  %687 = fmul float %682, %686
  %688 = fadd float %676, %687
  %689 = fmul float %651, %671
  %690 = fmul float %689, %686
  %691 = fsub float %688, %690
  %692 = fmul float %667, %681
  %693 = fmul float %663, %692
  %694 = fsub float %691, %693
  %695 = fmul float %657, %679
  %696 = fmul float %674, %695
  %697 = fsub float %694, %696
  %698 = fsub float -0.000000e+00, %697
  %699 = load i32, i32* %12, align 4
  %700 = add i32 %699, 2
  %701 = zext i32 %700 to i64
  %702 = load float*, float** %8, align 8
  %703 = getelementptr inbounds float, float* %702, i64 %701
  store float %698, float* %703, align 4
  %704 = load float*, float** %318, align 8
  %705 = load float, float* %704, align 4
  %706 = load i32, i32* %52, align 4
  %707 = shl i32 %706, 1
  %708 = or i32 %707, 1
  %709 = zext i32 %708 to i64
  %710 = getelementptr inbounds float, float* %704, i64 %709
  %711 = load float, float* %710, align 4
  %712 = fmul float %705, %711
  %713 = mul i32 %706, 3
  %714 = add i32 %713, 2
  %715 = zext i32 %714 to i64
  %716 = getelementptr inbounds float, float* %704, i64 %715
  %717 = load float, float* %716, align 4
  %718 = fmul float %712, %717
  %719 = zext i32 %707 to i64
  %720 = getelementptr inbounds float, float* %704, i64 %719
  %721 = load float, float* %720, align 4
  %722 = add i32 %713, 1
  %723 = zext i32 %722 to i64
  %724 = getelementptr inbounds float, float* %704, i64 %723
  %725 = load float, float* %724, align 4
  %726 = fmul float %721, %725
  %727 = getelementptr inbounds float, float* %704, i64 2
  %728 = load float, float* %727, align 4
  %729 = fmul float %726, %728
  %730 = fadd float %718, %729
  %731 = zext i32 %713 to i64
  %732 = getelementptr inbounds float, float* %704, i64 %731
  %733 = load float, float* %732, align 4
  %734 = getelementptr inbounds float, float* %704, i64 1
  %735 = load float, float* %734, align 4
  %736 = fmul float %733, %735
  %737 = add i32 %707, 2
  %738 = zext i32 %737 to i64
  %739 = getelementptr inbounds float, float* %704, i64 %738
  %740 = load float, float* %739, align 4
  %741 = fmul float %736, %740
  %742 = fadd float %730, %741
  %743 = fmul float %705, %725
  %744 = fmul float %743, %740
  %745 = fsub float %742, %744
  %746 = fmul float %721, %735
  %747 = fmul float %717, %746
  %748 = fsub float %745, %747
  %749 = fmul float %711, %733
  %750 = fmul float %728, %749
  %751 = fsub float %748, %750
  %752 = load i32, i32* %12, align 4
  %753 = add i32 %752, 3
  %754 = zext i32 %753 to i64
  %755 = load float*, float** %8, align 8
  %756 = getelementptr inbounds float, float* %755, i64 %754
  store float %751, float* %756, align 4
  %757 = load float*, float** %318, align 8
  %758 = getelementptr inbounds float, float* %757, i64 1
  %759 = load float, float* %758, align 4
  %760 = load i32, i32* %52, align 4
  %761 = add i32 %760, 2
  %762 = zext i32 %761 to i64
  %763 = getelementptr inbounds float, float* %757, i64 %762
  %764 = load float, float* %763, align 4
  %765 = fmul float %759, %764
  %766 = mul i32 %760, 3
  %767 = add i32 %766, 3
  %768 = zext i32 %767 to i64
  %769 = getelementptr inbounds float, float* %757, i64 %768
  %770 = load float, float* %769, align 4
  %771 = fmul float %765, %770
  %772 = add i32 %760, 1
  %773 = zext i32 %772 to i64
  %774 = getelementptr inbounds float, float* %757, i64 %773
  %775 = load float, float* %774, align 4
  %776 = add i32 %766, 2
  %777 = zext i32 %776 to i64
  %778 = getelementptr inbounds float, float* %757, i64 %777
  %779 = load float, float* %778, align 4
  %780 = fmul float %775, %779
  %781 = getelementptr inbounds float, float* %757, i64 3
  %782 = load float, float* %781, align 4
  %783 = fmul float %780, %782
  %784 = fadd float %771, %783
  %785 = add i32 %766, 1
  %786 = zext i32 %785 to i64
  %787 = getelementptr inbounds float, float* %757, i64 %786
  %788 = load float, float* %787, align 4
  %789 = getelementptr inbounds float, float* %757, i64 2
  %790 = load float, float* %789, align 4
  %791 = fmul float %788, %790
  %792 = add i32 %760, 3
  %793 = zext i32 %792 to i64
  %794 = getelementptr inbounds float, float* %757, i64 %793
  %795 = load float, float* %794, align 4
  %796 = fmul float %791, %795
  %797 = fadd float %784, %796
  %798 = fmul float %759, %779
  %799 = fmul float %798, %795
  %800 = fsub float %797, %799
  %801 = fmul float %775, %790
  %802 = fmul float %770, %801
  %803 = fsub float %800, %802
  %804 = fmul float %764, %788
  %805 = fmul float %782, %804
  %806 = fsub float %803, %805
  %807 = load i32, i32* %12, align 4
  %808 = shl i32 %807, 1
  %809 = zext i32 %808 to i64
  %810 = load float*, float** %8, align 8
  %811 = getelementptr inbounds float, float* %810, i64 %809
  store float %806, float* %811, align 4
  %812 = load float*, float** %318, align 8
  %813 = load float, float* %812, align 4
  %814 = load i32, i32* %52, align 4
  %815 = add i32 %814, 2
  %816 = zext i32 %815 to i64
  %817 = getelementptr inbounds float, float* %812, i64 %816
  %818 = load float, float* %817, align 4
  %819 = fmul float %813, %818
  %820 = mul i32 %814, 3
  %821 = add i32 %820, 3
  %822 = zext i32 %821 to i64
  %823 = getelementptr inbounds float, float* %812, i64 %822
  %824 = load float, float* %823, align 4
  %825 = fmul float %819, %824
  %826 = zext i32 %814 to i64
  %827 = getelementptr inbounds float, float* %812, i64 %826
  %828 = load float, float* %827, align 4
  %829 = add i32 %820, 2
  %830 = zext i32 %829 to i64
  %831 = getelementptr inbounds float, float* %812, i64 %830
  %832 = load float, float* %831, align 4
  %833 = fmul float %828, %832
  %834 = getelementptr inbounds float, float* %812, i64 3
  %835 = load float, float* %834, align 4
  %836 = fmul float %833, %835
  %837 = fadd float %825, %836
  %838 = zext i32 %820 to i64
  %839 = getelementptr inbounds float, float* %812, i64 %838
  %840 = load float, float* %839, align 4
  %841 = getelementptr inbounds float, float* %812, i64 2
  %842 = load float, float* %841, align 4
  %843 = fmul float %840, %842
  %844 = add i32 %814, 3
  %845 = zext i32 %844 to i64
  %846 = getelementptr inbounds float, float* %812, i64 %845
  %847 = load float, float* %846, align 4
  %848 = fmul float %843, %847
  %849 = fadd float %837, %848
  %850 = fmul float %813, %832
  %851 = fmul float %850, %847
  %852 = fsub float %849, %851
  %853 = fmul float %828, %842
  %854 = fmul float %824, %853
  %855 = fsub float %852, %854
  %856 = fmul float %818, %840
  %857 = fmul float %835, %856
  %858 = fsub float %855, %857
  %859 = fsub float -0.000000e+00, %858
  %860 = load i32, i32* %12, align 4
  %861 = shl i32 %860, 1
  %862 = or i32 %861, 1
  %863 = zext i32 %862 to i64
  %864 = load float*, float** %8, align 8
  %865 = getelementptr inbounds float, float* %864, i64 %863
  store float %859, float* %865, align 4
  %866 = load float*, float** %318, align 8
  %867 = load float, float* %866, align 4
  %868 = load i32, i32* %52, align 4
  %869 = add i32 %868, 1
  %870 = zext i32 %869 to i64
  %871 = getelementptr inbounds float, float* %866, i64 %870
  %872 = load float, float* %871, align 4
  %873 = fmul float %867, %872
  %874 = mul i32 %868, 3
  %875 = add i32 %874, 3
  %876 = zext i32 %875 to i64
  %877 = getelementptr inbounds float, float* %866, i64 %876
  %878 = load float, float* %877, align 4
  %879 = fmul float %873, %878
  %880 = zext i32 %868 to i64
  %881 = getelementptr inbounds float, float* %866, i64 %880
  %882 = load float, float* %881, align 4
  %883 = add i32 %874, 1
  %884 = zext i32 %883 to i64
  %885 = getelementptr inbounds float, float* %866, i64 %884
  %886 = load float, float* %885, align 4
  %887 = fmul float %882, %886
  %888 = getelementptr inbounds float, float* %866, i64 3
  %889 = load float, float* %888, align 4
  %890 = fmul float %887, %889
  %891 = fadd float %879, %890
  %892 = zext i32 %874 to i64
  %893 = getelementptr inbounds float, float* %866, i64 %892
  %894 = load float, float* %893, align 4
  %895 = getelementptr inbounds float, float* %866, i64 1
  %896 = load float, float* %895, align 4
  %897 = fmul float %894, %896
  %898 = add i32 %868, 3
  %899 = zext i32 %898 to i64
  %900 = getelementptr inbounds float, float* %866, i64 %899
  %901 = load float, float* %900, align 4
  %902 = fmul float %897, %901
  %903 = fadd float %891, %902
  %904 = fmul float %867, %886
  %905 = fmul float %904, %901
  %906 = fsub float %903, %905
  %907 = fmul float %882, %896
  %908 = fmul float %878, %907
  %909 = fsub float %906, %908
  %910 = fmul float %872, %894
  %911 = fmul float %889, %910
  %912 = fsub float %909, %911
  %913 = load i32, i32* %12, align 4
  %914 = shl i32 %913, 1
  %915 = add i32 %914, 2
  %916 = zext i32 %915 to i64
  %917 = load float*, float** %8, align 8
  %918 = getelementptr inbounds float, float* %917, i64 %916
  store float %912, float* %918, align 4
  %919 = load float*, float** %318, align 8
  %920 = load float, float* %919, align 4
  %921 = load i32, i32* %52, align 4
  %922 = add i32 %921, 1
  %923 = zext i32 %922 to i64
  %924 = getelementptr inbounds float, float* %919, i64 %923
  %925 = load float, float* %924, align 4
  %926 = fmul float %920, %925
  %927 = mul i32 %921, 3
  %928 = add i32 %927, 2
  %929 = zext i32 %928 to i64
  %930 = getelementptr inbounds float, float* %919, i64 %929
  %931 = load float, float* %930, align 4
  %932 = fmul float %926, %931
  %933 = zext i32 %921 to i64
  %934 = getelementptr inbounds float, float* %919, i64 %933
  %935 = load float, float* %934, align 4
  %936 = add i32 %927, 1
  %937 = zext i32 %936 to i64
  %938 = getelementptr inbounds float, float* %919, i64 %937
  %939 = load float, float* %938, align 4
  %940 = fmul float %935, %939
  %941 = getelementptr inbounds float, float* %919, i64 2
  %942 = load float, float* %941, align 4
  %943 = fmul float %940, %942
  %944 = fadd float %932, %943
  %945 = zext i32 %927 to i64
  %946 = getelementptr inbounds float, float* %919, i64 %945
  %947 = load float, float* %946, align 4
  %948 = getelementptr inbounds float, float* %919, i64 1
  %949 = load float, float* %948, align 4
  %950 = fmul float %947, %949
  %951 = add i32 %921, 2
  %952 = zext i32 %951 to i64
  %953 = getelementptr inbounds float, float* %919, i64 %952
  %954 = load float, float* %953, align 4
  %955 = fmul float %950, %954
  %956 = fadd float %944, %955
  %957 = fmul float %920, %939
  %958 = fmul float %957, %954
  %959 = fsub float %956, %958
  %960 = fmul float %935, %949
  %961 = fmul float %931, %960
  %962 = fsub float %959, %961
  %963 = fmul float %925, %947
  %964 = fmul float %942, %963
  %965 = fsub float %962, %964
  %966 = fsub float -0.000000e+00, %965
  %967 = load i32, i32* %12, align 4
  %968 = shl i32 %967, 1
  %969 = add i32 %968, 3
  %970 = zext i32 %969 to i64
  %971 = load float*, float** %8, align 8
  %972 = getelementptr inbounds float, float* %971, i64 %970
  store float %966, float* %972, align 4
  %973 = load float*, float** %318, align 8
  %974 = getelementptr inbounds float, float* %973, i64 1
  %975 = load float, float* %974, align 4
  %976 = load i32, i32* %52, align 4
  %977 = add i32 %976, 2
  %978 = zext i32 %977 to i64
  %979 = getelementptr inbounds float, float* %973, i64 %978
  %980 = load float, float* %979, align 4
  %981 = fmul float %975, %980
  %982 = shl i32 %976, 1
  %983 = add i32 %982, 3
  %984 = zext i32 %983 to i64
  %985 = getelementptr inbounds float, float* %973, i64 %984
  %986 = load float, float* %985, align 4
  %987 = fmul float %981, %986
  %988 = add i32 %976, 1
  %989 = zext i32 %988 to i64
  %990 = getelementptr inbounds float, float* %973, i64 %989
  %991 = load float, float* %990, align 4
  %992 = add i32 %982, 2
  %993 = zext i32 %992 to i64
  %994 = getelementptr inbounds float, float* %973, i64 %993
  %995 = load float, float* %994, align 4
  %996 = fmul float %991, %995
  %997 = getelementptr inbounds float, float* %973, i64 3
  %998 = load float, float* %997, align 4
  %999 = fmul float %996, %998
  %1000 = fadd float %987, %999
  %1001 = or i32 %982, 1
  %1002 = zext i32 %1001 to i64
  %1003 = getelementptr inbounds float, float* %973, i64 %1002
  %1004 = load float, float* %1003, align 4
  %1005 = getelementptr inbounds float, float* %973, i64 2
  %1006 = load float, float* %1005, align 4
  %1007 = fmul float %1004, %1006
  %1008 = add i32 %976, 3
  %1009 = zext i32 %1008 to i64
  %1010 = getelementptr inbounds float, float* %973, i64 %1009
  %1011 = load float, float* %1010, align 4
  %1012 = fmul float %1007, %1011
  %1013 = fadd float %1000, %1012
  %1014 = fmul float %975, %995
  %1015 = fmul float %1014, %1011
  %1016 = fsub float %1013, %1015
  %1017 = fmul float %991, %1006
  %1018 = fmul float %986, %1017
  %1019 = fsub float %1016, %1018
  %1020 = fmul float %980, %1004
  %1021 = fmul float %998, %1020
  %1022 = fsub float %1019, %1021
  %1023 = fsub float -0.000000e+00, %1022
  %1024 = load i32, i32* %12, align 4
  %1025 = mul i32 %1024, 3
  %1026 = zext i32 %1025 to i64
  %1027 = load float*, float** %8, align 8
  %1028 = getelementptr inbounds float, float* %1027, i64 %1026
  store float %1023, float* %1028, align 4
  %1029 = load float*, float** %318, align 8
  %1030 = load float, float* %1029, align 4
  %1031 = load i32, i32* %52, align 4
  %1032 = add i32 %1031, 2
  %1033 = zext i32 %1032 to i64
  %1034 = getelementptr inbounds float, float* %1029, i64 %1033
  %1035 = load float, float* %1034, align 4
  %1036 = fmul float %1030, %1035
  %1037 = shl i32 %1031, 1
  %1038 = add i32 %1037, 3
  %1039 = zext i32 %1038 to i64
  %1040 = getelementptr inbounds float, float* %1029, i64 %1039
  %1041 = load float, float* %1040, align 4
  %1042 = fmul float %1036, %1041
  %1043 = zext i32 %1031 to i64
  %1044 = getelementptr inbounds float, float* %1029, i64 %1043
  %1045 = load float, float* %1044, align 4
  %1046 = add i32 %1037, 2
  %1047 = zext i32 %1046 to i64
  %1048 = getelementptr inbounds float, float* %1029, i64 %1047
  %1049 = load float, float* %1048, align 4
  %1050 = fmul float %1045, %1049
  %1051 = getelementptr inbounds float, float* %1029, i64 3
  %1052 = load float, float* %1051, align 4
  %1053 = fmul float %1050, %1052
  %1054 = fadd float %1042, %1053
  %1055 = zext i32 %1037 to i64
  %1056 = getelementptr inbounds float, float* %1029, i64 %1055
  %1057 = load float, float* %1056, align 4
  %1058 = getelementptr inbounds float, float* %1029, i64 2
  %1059 = load float, float* %1058, align 4
  %1060 = fmul float %1057, %1059
  %1061 = add i32 %1031, 3
  %1062 = zext i32 %1061 to i64
  %1063 = getelementptr inbounds float, float* %1029, i64 %1062
  %1064 = load float, float* %1063, align 4
  %1065 = fmul float %1060, %1064
  %1066 = fadd float %1054, %1065
  %1067 = fmul float %1030, %1049
  %1068 = fmul float %1067, %1064
  %1069 = fsub float %1066, %1068
  %1070 = fmul float %1045, %1059
  %1071 = fmul float %1041, %1070
  %1072 = fsub float %1069, %1071
  %1073 = fmul float %1035, %1057
  %1074 = fmul float %1052, %1073
  %1075 = fsub float %1072, %1074
  %1076 = load i32, i32* %12, align 4
  %1077 = mul i32 %1076, 3
  %1078 = add i32 %1077, 1
  %1079 = zext i32 %1078 to i64
  %1080 = load float*, float** %8, align 8
  %1081 = getelementptr inbounds float, float* %1080, i64 %1079
  store float %1075, float* %1081, align 4
  %1082 = load float*, float** %318, align 8
  %1083 = load float, float* %1082, align 4
  %1084 = load i32, i32* %52, align 4
  %1085 = add i32 %1084, 1
  %1086 = zext i32 %1085 to i64
  %1087 = getelementptr inbounds float, float* %1082, i64 %1086
  %1088 = load float, float* %1087, align 4
  %1089 = fmul float %1083, %1088
  %1090 = shl i32 %1084, 1
  %1091 = add i32 %1090, 3
  %1092 = zext i32 %1091 to i64
  %1093 = getelementptr inbounds float, float* %1082, i64 %1092
  %1094 = load float, float* %1093, align 4
  %1095 = fmul float %1089, %1094
  %1096 = zext i32 %1084 to i64
  %1097 = getelementptr inbounds float, float* %1082, i64 %1096
  %1098 = load float, float* %1097, align 4
  %1099 = or i32 %1090, 1
  %1100 = zext i32 %1099 to i64
  %1101 = getelementptr inbounds float, float* %1082, i64 %1100
  %1102 = load float, float* %1101, align 4
  %1103 = fmul float %1098, %1102
  %1104 = getelementptr inbounds float, float* %1082, i64 3
  %1105 = load float, float* %1104, align 4
  %1106 = fmul float %1103, %1105
  %1107 = fadd float %1095, %1106
  %1108 = zext i32 %1090 to i64
  %1109 = getelementptr inbounds float, float* %1082, i64 %1108
  %1110 = load float, float* %1109, align 4
  %1111 = getelementptr inbounds float, float* %1082, i64 1
  %1112 = load float, float* %1111, align 4
  %1113 = fmul float %1110, %1112
  %1114 = add i32 %1084, 3
  %1115 = zext i32 %1114 to i64
  %1116 = getelementptr inbounds float, float* %1082, i64 %1115
  %1117 = load float, float* %1116, align 4
  %1118 = fmul float %1113, %1117
  %1119 = fadd float %1107, %1118
  %1120 = fmul float %1083, %1102
  %1121 = fmul float %1120, %1117
  %1122 = fsub float %1119, %1121
  %1123 = fmul float %1098, %1112
  %1124 = fmul float %1094, %1123
  %1125 = fsub float %1122, %1124
  %1126 = fmul float %1088, %1110
  %1127 = fmul float %1105, %1126
  %1128 = fsub float %1125, %1127
  %1129 = fsub float -0.000000e+00, %1128
  %1130 = load i32, i32* %12, align 4
  %1131 = mul i32 %1130, 3
  %1132 = add i32 %1131, 2
  %1133 = zext i32 %1132 to i64
  %1134 = load float*, float** %8, align 8
  %1135 = getelementptr inbounds float, float* %1134, i64 %1133
  store float %1129, float* %1135, align 4
  %1136 = load float*, float** %318, align 8
  %1137 = load float, float* %1136, align 4
  %1138 = load i32, i32* %52, align 4
  %1139 = add i32 %1138, 1
  %1140 = zext i32 %1139 to i64
  %1141 = getelementptr inbounds float, float* %1136, i64 %1140
  %1142 = load float, float* %1141, align 4
  %1143 = fmul float %1137, %1142
  %1144 = shl i32 %1138, 1
  %1145 = add i32 %1144, 2
  %1146 = zext i32 %1145 to i64
  %1147 = getelementptr inbounds float, float* %1136, i64 %1146
  %1148 = load float, float* %1147, align 4
  %1149 = fmul float %1143, %1148
  %1150 = zext i32 %1138 to i64
  %1151 = getelementptr inbounds float, float* %1136, i64 %1150
  %1152 = load float, float* %1151, align 4
  %1153 = or i32 %1144, 1
  %1154 = zext i32 %1153 to i64
  %1155 = getelementptr inbounds float, float* %1136, i64 %1154
  %1156 = load float, float* %1155, align 4
  %1157 = fmul float %1152, %1156
  %1158 = getelementptr inbounds float, float* %1136, i64 2
  %1159 = load float, float* %1158, align 4
  %1160 = fmul float %1157, %1159
  %1161 = fadd float %1149, %1160
  %1162 = zext i32 %1144 to i64
  %1163 = getelementptr inbounds float, float* %1136, i64 %1162
  %1164 = load float, float* %1163, align 4
  %1165 = getelementptr inbounds float, float* %1136, i64 1
  %1166 = load float, float* %1165, align 4
  %1167 = fmul float %1164, %1166
  %1168 = add i32 %1138, 2
  %1169 = zext i32 %1168 to i64
  %1170 = getelementptr inbounds float, float* %1136, i64 %1169
  %1171 = load float, float* %1170, align 4
  %1172 = fmul float %1167, %1171
  %1173 = fadd float %1161, %1172
  %1174 = fmul float %1137, %1156
  %1175 = fmul float %1174, %1171
  %1176 = fsub float %1173, %1175
  %1177 = fmul float %1152, %1166
  %1178 = fmul float %1148, %1177
  %1179 = fsub float %1176, %1178
  %1180 = fmul float %1142, %1164
  %1181 = fmul float %1159, %1180
  %1182 = fsub float %1179, %1181
  %1183 = load i32, i32* %12, align 4
  %1184 = mul i32 %1183, 3
  %1185 = add i32 %1184, 3
  %1186 = zext i32 %1185 to i64
  %1187 = load float*, float** %8, align 8
  %1188 = getelementptr inbounds float, float* %1187, i64 %1186
  store float %1182, float* %1188, align 4
  br label %1189

1189:                                             ; preds = %87, %314, %118, %89
  %1190 = bitcast %"class.angle::Matrix"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1190) #13
  %1191 = getelementptr inbounds %"class.angle::Matrix", %"class.angle::Matrix"* %5, i64 0, i32 0, i32 0, i32 0
  %1192 = getelementptr inbounds %"class.angle::Matrix", %"class.angle::Matrix"* %5, i64 0, i32 0, i32 0, i32 1
  %1193 = getelementptr inbounds %"class.angle::Matrix", %"class.angle::Matrix"* %5, i64 0, i32 2
  %1194 = bitcast %"class.angle::Matrix"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1194, i8 -86, i64 32, i1 false)
  call void @_ZNK5angle6MatrixIfE9transposeEv(%"class.angle::Matrix"* nonnull sret %5, %"class.angle::Matrix"* nonnull %3)
  %1195 = call float @_ZNK5angle6MatrixIfE11determinantEv(%"class.angle::Matrix"* %1)
  %1196 = getelementptr inbounds %"class.angle::Matrix", %"class.angle::Matrix"* %0, i64 0, i32 0, i32 0, i32 0
  %1197 = getelementptr inbounds %"class.angle::Matrix", %"class.angle::Matrix"* %0, i64 0, i32 0, i32 0, i32 1
  %1198 = getelementptr inbounds %"class.angle::Matrix", %"class.angle::Matrix"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %1199 = getelementptr inbounds %"class.angle::Matrix", %"class.angle::Matrix"* %0, i64 0, i32 1
  %1200 = getelementptr inbounds %"class.angle::Matrix", %"class.angle::Matrix"* %0, i64 0, i32 2
  %1201 = bitcast %"class.std::__1::vector.498"* %6 to i8*
  %1202 = bitcast %"class.angle::Matrix"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1202, i8 -86, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1201) #13
  %1203 = load i64, i64* %16, align 8
  %1204 = load i64, i64* %18, align 8
  %1205 = sub i64 %1203, %1204
  %1206 = ashr exact i64 %1205, 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1201, i8 0, i64 24, i1 false) #13
  %1207 = icmp eq i64 %1205, 0
  br i1 %1207, label %1229, label %1208

1208:                                             ; preds = %1189
  %1209 = icmp ugt i64 %1206, 4611686018427387903
  br i1 %1209, label %1210, label %1212

1210:                                             ; preds = %1208
  %1211 = bitcast %"class.std::__1::vector.498"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %1211) #17
  unreachable

1212:                                             ; preds = %1208
  %1213 = call i8* @_Znwm(i64 %1205) #16
  %1214 = bitcast i8* %1213 to float*
  %1215 = getelementptr inbounds %"class.std::__1::vector.498", %"class.std::__1::vector.498"* %6, i64 0, i32 0, i32 1
  %1216 = bitcast %"class.std::__1::vector.498"* %6 to i8**
  store i8* %1213, i8** %1216, align 8
  %1217 = getelementptr inbounds float, float* %1214, i64 %1206
  %1218 = getelementptr inbounds %"class.std::__1::vector.498", %"class.std::__1::vector.498"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  store float* %1217, float** %1218, align 8
  %1219 = bitcast float** %1215 to i64*
  %1220 = ptrtoint i8* %1213 to i64
  %1221 = add nsw i64 %1206, -1
  %1222 = getelementptr float, float* %1214, i64 %1221
  %1223 = ptrtoint float* %1222 to i64
  %1224 = sub i64 4, %1220
  %1225 = add i64 %1224, %1223
  %1226 = and i64 %1225, -4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %1213, i8 0, i64 %1226, i1 false) #13
  %1227 = ptrtoint float* %1217 to i64
  store i64 %1227, i64* %1219, align 8
  %1228 = ptrtoint i8* %1213 to i64
  br label %1229

1229:                                             ; preds = %1189, %1212
  %1230 = phi i8* [ %1213, %1212 ], [ null, %1189 ]
  %1231 = phi float* [ %1214, %1212 ], [ null, %1189 ]
  %1232 = phi i64 [ %1228, %1212 ], [ 0, %1189 ]
  %1233 = phi i64 [ %1220, %1212 ], [ 0, %1189 ]
  %1234 = phi i64 [ %1227, %1212 ], [ 0, %1189 ]
  %1235 = load i32, i32* %50, align 8
  %1236 = load i32, i32* %52, align 4
  %1237 = bitcast %"class.angle::Matrix"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1237, i8 0, i64 24, i1 false) #13
  %1238 = getelementptr inbounds %"class.std::__1::vector.498", %"class.std::__1::vector.498"* %6, i64 0, i32 0, i32 1
  %1239 = bitcast float** %1238 to i64*
  %1240 = sub i64 %1234, %1233
  %1241 = ashr exact i64 %1240, 2
  %1242 = icmp eq i64 %1240, 0
  br i1 %1242, label %1263, label %1243

1243:                                             ; preds = %1229
  %1244 = icmp ugt i64 %1241, 4611686018427387903
  br i1 %1244, label %1245, label %1247

1245:                                             ; preds = %1243
  %1246 = bitcast %"class.angle::Matrix"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %1246) #17
  unreachable

1247:                                             ; preds = %1243
  %1248 = call i8* @_Znwm(i64 %1240) #16
  %1249 = bitcast i8* %1248 to float*
  %1250 = bitcast float** %1197 to i8**
  store i8* %1248, i8** %1250, align 8
  %1251 = bitcast %"class.angle::Matrix"* %0 to i8**
  store i8* %1248, i8** %1251, align 8
  %1252 = getelementptr inbounds float, float* %1249, i64 %1241
  store float* %1252, float** %1198, align 8
  %1253 = bitcast float** %1197 to i64*
  %1254 = ptrtoint i8* %1248 to i64
  %1255 = sub i64 %1234, %1232
  %1256 = icmp sgt i64 %1255, 0
  br i1 %1256, label %1257, label %1261

1257:                                             ; preds = %1247
  %1258 = lshr exact i64 %1255, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %1248, i8* align 4 %1230, i64 %1255, i1 false) #13
  %1259 = getelementptr inbounds float, float* %1249, i64 %1258
  %1260 = ptrtoint float* %1259 to i64
  br label %1261

1261:                                             ; preds = %1257, %1247
  %1262 = phi i64 [ %1260, %1257 ], [ %1254, %1247 ]
  store i64 %1262, i64* %1253, align 8
  br label %1263

1263:                                             ; preds = %1229, %1261
  store i32 %1235, i32* %1199, align 8
  store i32 %1236, i32* %1200, align 4
  %1264 = icmp eq float* %1231, null
  br i1 %1264, label %1268, label %1265

1265:                                             ; preds = %1263
  %1266 = ptrtoint float* %1231 to i64
  store i64 %1266, i64* %1239, align 8
  call void @_ZdlPv(i8* %1230) #16
  %1267 = load i32, i32* %50, align 8
  br label %1268

1268:                                             ; preds = %1263, %1265
  %1269 = phi i32 [ %1235, %1263 ], [ %1267, %1265 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1201) #13
  %1270 = icmp eq i32 %1269, 0
  br i1 %1270, label %1308, label %1271

1271:                                             ; preds = %1268
  %1272 = fcmp une float %1195, 0.000000e+00
  %1273 = load i32, i32* %52, align 4
  br label %1274

1274:                                             ; preds = %1271, %1281
  %1275 = phi i32 [ %1269, %1271 ], [ %1282, %1281 ]
  %1276 = phi i32 [ %1273, %1271 ], [ %1283, %1281 ]
  %1277 = phi i32 [ 0, %1271 ], [ %1284, %1281 ]
  %1278 = icmp eq i32 %1276, 0
  br i1 %1278, label %1281, label %1286

1279:                                             ; preds = %1297
  %1280 = load i32, i32* %50, align 8
  br label %1281

1281:                                             ; preds = %1279, %1274
  %1282 = phi i32 [ %1280, %1279 ], [ %1275, %1274 ]
  %1283 = phi i32 [ %1306, %1279 ], [ 0, %1274 ]
  %1284 = add nuw i32 %1277, 1
  %1285 = icmp ult i32 %1284, %1282
  br i1 %1285, label %1274, label %1308

1286:                                             ; preds = %1274, %1297
  %1287 = phi i32 [ %1305, %1297 ], [ 0, %1274 ]
  br i1 %1272, label %1288, label %1297

1288:                                             ; preds = %1286
  %1289 = load i32, i32* %1193, align 4
  %1290 = mul i32 %1289, %1277
  %1291 = add i32 %1290, %1287
  %1292 = zext i32 %1291 to i64
  %1293 = load float*, float** %1191, align 8
  %1294 = getelementptr inbounds float, float* %1293, i64 %1292
  %1295 = load float, float* %1294, align 4
  %1296 = fdiv float %1295, %1195
  br label %1297

1297:                                             ; preds = %1286, %1288
  %1298 = phi float [ %1296, %1288 ], [ 0.000000e+00, %1286 ]
  %1299 = load i32, i32* %1200, align 4
  %1300 = mul i32 %1299, %1277
  %1301 = add i32 %1300, %1287
  %1302 = zext i32 %1301 to i64
  %1303 = load float*, float** %1196, align 8
  %1304 = getelementptr inbounds float, float* %1303, i64 %1302
  store float %1298, float* %1304, align 4
  %1305 = add nuw i32 %1287, 1
  %1306 = load i32, i32* %52, align 4
  %1307 = icmp ult i32 %1305, %1306
  br i1 %1307, label %1286, label %1279

1308:                                             ; preds = %1281, %1268
  %1309 = load float*, float** %1191, align 8
  %1310 = icmp eq float* %1309, null
  br i1 %1310, label %1315, label %1311

1311:                                             ; preds = %1308
  %1312 = ptrtoint float* %1309 to i64
  %1313 = bitcast float** %1192 to i64*
  store i64 %1312, i64* %1313, align 8
  %1314 = bitcast float* %1309 to i8*
  call void @_ZdlPv(i8* %1314) #16
  br label %1315

1315:                                             ; preds = %1308, %1311
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1190) #13
  %1316 = load float*, float** %8, align 8
  %1317 = icmp eq float* %1316, null
  br i1 %1317, label %1322, label %1318

1318:                                             ; preds = %1315
  %1319 = ptrtoint float* %1316 to i64
  %1320 = bitcast float** %9 to i64*
  store i64 %1319, i64* %1320, align 8
  %1321 = bitcast float* %1316 to i8*
  call void @_ZdlPv(i8* %1321) #16
  br label %1322

1322:                                             ; preds = %1315, %1318
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #13
  ret void
}

declare void @_ZN5angle4Mat4C1ENS_6MatrixIfEE(%"class.angle::Mat4"*, %"class.angle::Matrix"*) unnamed_addr #3

declare dereferenceable(44) %"struct.gl::TextureEnvironmentParameters"* @_ZN2gl10GLES1State18textureEnvironmentEj(%"class.gl::GLES1State"*, i32) local_unnamed_addr #3

declare i32 @_ZN2gl8ToGLenumENS_14TextureEnvModeE(i8 zeroext) local_unnamed_addr #3

declare i32 @_ZN2gl8ToGLenumENS_14TextureCombineE(i8 zeroext) local_unnamed_addr #3

declare i32 @_ZN2gl8ToGLenumENS_10TextureSrcE(i8 zeroext) local_unnamed_addr #3

declare i32 @_ZN2gl8ToGLenumENS_9TextureOpE(i8 zeroext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl13GLES1Renderer13setUniform1fvEPNS_7ProgramENS_15UniformLocationEiPKf(%"class.gl::GLES1Renderer"* nocapture readnone, %"class.gl::Program"*, i32, i32, float*) local_unnamed_addr #2 align 2 {
  %6 = icmp eq i32 %2, -1
  br i1 %6, label %8, label %7

7:                                                ; preds = %5
  tail call void @_ZN2gl7Program13setUniform1fvENS_15UniformLocationEiPKf(%"class.gl::Program"* %1, i32 %2, i32 %3, float* %4) #13
  br label %8

8:                                                ; preds = %5, %7
  ret void
}

declare i32 @_ZN2gl8ToGLenumENS_13AlphaTestFuncE(i8 zeroext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl13GLES1Renderer12setUniform1fEPNS_7ProgramENS_15UniformLocationEf(%"class.gl::GLES1Renderer"* nocapture readnone, %"class.gl::Program"*, i32, float) local_unnamed_addr #2 align 2 {
  %5 = alloca float, align 4
  store float %3, float* %5, align 4
  %6 = icmp eq i32 %2, -1
  br i1 %6, label %8, label %7

7:                                                ; preds = %4
  call void @_ZN2gl7Program13setUniform1fvENS_15UniformLocationEiPKf(%"class.gl::Program"* %1, i32 %2, i32 1, float* nonnull %5) #13
  br label %8

8:                                                ; preds = %4, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl13GLES1Renderer13setUniform3fvEPNS_7ProgramENS_15UniformLocationEiPKf(%"class.gl::GLES1Renderer"* nocapture readnone, %"class.gl::Program"*, i32, i32, float*) local_unnamed_addr #2 align 2 {
  %6 = icmp eq i32 %2, -1
  br i1 %6, label %8, label %7

7:                                                ; preds = %5
  tail call void @_ZN2gl7Program13setUniform3fvENS_15UniformLocationEiPKf(%"class.gl::Program"* %1, i32 %2, i32 %3, float* %4) #13
  br label %8

8:                                                ; preds = %5, %7
  ret void
}

declare dereferenceable(32) %"struct.gl::FogParameters"* @_ZN2gl10GLES1State13fogParametersEv(%"class.gl::GLES1State"*) local_unnamed_addr #3

declare i32 @_ZN2gl8ToGLenumENS_7FogModeE(i8 zeroext) local_unnamed_addr #3

declare void @_ZNK2gl10GLES1State12getClipPlaneEjPf(%"class.gl::GLES1State"*, i32, float*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl13GLES1Renderer13setUniform2fvEPNS_7ProgramENS_15UniformLocationEiPKf(%"class.gl::GLES1Renderer"* nocapture readnone, %"class.gl::Program"*, i32, i32, float*) local_unnamed_addr #2 align 2 {
  %6 = icmp eq i32 %2, -1
  br i1 %6, label %8, label %7

7:                                                ; preds = %5
  tail call void @_ZN2gl7Program13setUniform2fvENS_15UniformLocationEiPKf(%"class.gl::Program"* %1, i32 %2, i32 %3, float* %4) #13
  br label %8

8:                                                ; preds = %5, %7
  ret void
}

declare void @_ZN2gl10GLES1State10clearDirtyEv(%"class.gl::GLES1State"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2gl13GLES1Renderer16VertexArrayIndexENS_21ClientVertexArrayTypeERKNS_10GLES1StateE(i8 zeroext, %"class.gl::GLES1State"* dereferenceable(1456)) local_unnamed_addr #2 align 2 {
  switch i8 %0, label %9 [
    i8 3, label %6
    i8 1, label %3
    i8 0, label %4
    i8 2, label %5
  ]

3:                                                ; preds = %2
  br label %9

4:                                                ; preds = %2
  br label %9

5:                                                ; preds = %2
  br label %9

6:                                                ; preds = %2
  %7 = tail call i32 @_ZNK2gl10GLES1State20getClientTextureUnitEv(%"class.gl::GLES1State"* %1) #13
  %8 = add i32 %7, 4
  br label %9

9:                                                ; preds = %2, %6, %5, %4, %3
  %10 = phi i32 [ %8, %6 ], [ 3, %5 ], [ 2, %4 ], [ 1, %3 ], [ 0, %2 ]
  ret i32 %10
}

declare i32 @_ZNK2gl10GLES1State20getClientTextureUnitEv(%"class.gl::GLES1State"*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i8 @_ZN2gl13GLES1Renderer15VertexArrayTypeEi(i32) local_unnamed_addr #5 align 2 {
  %2 = icmp ult i32 %0, 4
  br i1 %2, label %6, label %3

3:                                                ; preds = %1
  %4 = icmp slt i32 %0, 8
  %5 = select i1 %4, i8 3, i8 5
  ret i8 %5

6:                                                ; preds = %1
  %7 = shl i32 %0, 3
  %8 = lshr i32 33554692, %7
  %9 = trunc i32 %8 to i8
  ret i8 %9
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN2gl13GLES1Renderer18TexCoordArrayIndexEj(i32) local_unnamed_addr #5 align 2 {
  %2 = add i32 %0, 4
  ret i32 %2
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl13GLES1Renderer11drawTextureEPNS_7ContextEPNS_5StateEfffff(%"class.gl::GLES1Renderer"* nocapture, %"class.gl::Context"*, %"class.gl::State"*, float, float, float, float, float) local_unnamed_addr #2 align 2 {
  %9 = alloca %"class.angle::BitSetT.166", align 8
  %10 = alloca %"class.angle::BitSetT.166", align 8
  %11 = alloca %"class.angle::BitSetT.166", align 8
  %12 = getelementptr inbounds %"class.gl::State", %"class.gl::State"* %2, i64 0, i32 55, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = sitofp i32 %13 to float
  %15 = fdiv float %3, %14
  %16 = fadd float %15, -5.000000e-01
  %17 = fmul float %16, 2.000000e+00
  %18 = getelementptr inbounds %"class.gl::State", %"class.gl::State"* %2, i64 0, i32 55, i32 3
  %19 = load i32, i32* %18, align 4
  %20 = sitofp i32 %19 to float
  %21 = fdiv float %4, %20
  %22 = fadd float %21, -5.000000e-01
  %23 = fmul float %22, 2.000000e+00
  %24 = fmul float %6, 2.000000e+00
  %25 = fdiv float %24, %14
  %26 = fmul float %7, 2.000000e+00
  %27 = fdiv float %26, %20
  %28 = fcmp ogt float %5, 0.000000e+00
  %29 = fcmp ogt float %5, 1.000000e+00
  %30 = select i1 %29, float 1.000000e+00, float %5
  %31 = fmul float %30, 2.000000e+00
  %32 = fadd float %31, -1.000000e+00
  %33 = select i1 %28, float %32, float -1.000000e+00
  %34 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 5, i64 0
  store float %17, float* %34, align 8
  %35 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 5, i64 1
  store float %23, float* %35, align 4
  %36 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 5, i64 2
  store float %33, float* %36, align 8
  %37 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 6, i64 0
  store float %25, float* %37, align 8
  %38 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 6, i64 1
  store float %27, float* %38, align 4
  %39 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 4
  store i8 1, i8* %39, align 4
  %40 = bitcast %"class.angle::BitSetT.166"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #13
  %41 = getelementptr inbounds %"class.angle::BitSetT.166", %"class.angle::BitSetT.166"* %9, i64 0, i32 0
  store i64 -6148914691236517206, i64* %41, align 8
  %42 = getelementptr inbounds %"class.gl::State", %"class.gl::State"* %2, i64 0, i32 103
  call void @_ZNK2gl10GLES1State28getVertexArraysAttributeMaskEv(%"class.angle::BitSetT.166"* nonnull sret %9, %"class.gl::GLES1State"* %42) #13
  %43 = getelementptr inbounds %"class.angle::BitSetT.166", %"class.angle::BitSetT.166"* %10, i64 0, i32 0
  store i64 0, i64* %43, align 8
  call void @_ZN2gl13GLES1Renderer20setAttributesEnabledEPNS_7ContextEPNS_5StateEN5angle7BitSetTILm16EmmEE(%"class.gl::GLES1Renderer"* undef, %"class.gl::Context"* %1, %"class.gl::State"* %2, %"class.angle::BitSetT.166"* nonnull %10)
  call void @_ZN2gl10GLES1State11setAllDirtyEv(%"class.gl::GLES1State"* %42) #13
  %44 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 52, i32 18
  %45 = load i8, i8* %44, align 8, !range !2
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %8
  %48 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 33, i32 0, i32 0, i32 0
  %49 = load %"class.gl::GLES1Renderer"*, %"class.gl::GLES1Renderer"** %48, align 8
  %50 = icmp eq %"class.gl::GLES1Renderer"* %49, null
  br i1 %50, label %63, label %59

51:                                               ; preds = %8
  %52 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 11, i32 0, i32 0, i32 0
  %53 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %52, align 8
  %54 = bitcast %"class.rx::ContextImpl"* %53 to i32 (%"class.rx::ContextImpl"*)***
  %55 = load i32 (%"class.rx::ContextImpl"*)**, i32 (%"class.rx::ContextImpl"*)*** %54, align 8
  %56 = getelementptr inbounds i32 (%"class.rx::ContextImpl"*)*, i32 (%"class.rx::ContextImpl"*)** %55, i64 47
  %57 = load i32 (%"class.rx::ContextImpl"*)*, i32 (%"class.rx::ContextImpl"*)** %56, align 8
  %58 = call i32 %57(%"class.rx::ContextImpl"* %53) #13
  br label %125

59:                                               ; preds = %47
  %60 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2
  %61 = call i32 @_ZN2gl13GLES1Renderer14prepareForDrawENS_13PrimitiveModeEPNS_7ContextEPNS_5StateE(%"class.gl::GLES1Renderer"* nonnull %49, i8 zeroext 4, %"class.gl::Context"* %1, %"class.gl::State"* %60) #13
  %62 = icmp eq i32 %61, 1
  br i1 %62, label %125, label %63

63:                                               ; preds = %59, %47
  %64 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 107, i32 0
  %65 = load i64, i64* %64, align 8, !noalias !21
  %66 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 51, i32 0
  %67 = load i64, i64* %66, align 8, !noalias !21
  %68 = and i64 %67, %65
  %69 = icmp eq i64 %68, 0
  br i1 %69, label %94, label %70

70:                                               ; preds = %63
  %71 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2
  %72 = call i64 @llvm.cttz.i64(i64 %68, i1 true) #13, !range !24
  %73 = bitcast %"class.gl::State"* %71 to i8*
  br label %74

74:                                               ; preds = %86, %70
  %75 = phi i64 [ %72, %70 ], [ %91, %86 ]
  %76 = phi i64 [ %68, %70 ], [ %89, %86 ]
  %77 = getelementptr inbounds [12 x { i64, i64 }], [12 x { i64, i64 }]* @_ZN2gl5State20kDirtyObjectHandlersE.const, i64 0, i64 %75, i32 1
  %78 = load i64, i64* %77, align 8
  %79 = getelementptr inbounds i8, i8* %73, i64 %78
  %80 = bitcast i8* %79 to %"class.gl::State"*
  %81 = getelementptr inbounds [12 x { i64, i64 }], [12 x { i64, i64 }]* @_ZN2gl5State20kDirtyObjectHandlersE.const, i64 0, i64 %75, i32 0
  %82 = bitcast i64* %81 to i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)**
  %83 = load i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)*, i32 (%"class.gl::State"*, %"class.gl::Context"*, i32)** %82, align 16
  %84 = call i32 %83(%"class.gl::State"* %80, %"class.gl::Context"* %1, i32 4) #13
  %85 = icmp eq i32 %84, 1
  br i1 %85, label %125, label %86

86:                                               ; preds = %74
  %87 = shl i64 1, %75
  %88 = xor i64 %87, -1
  %89 = and i64 %76, %88
  %90 = icmp eq i64 %89, 0
  %91 = call i64 @llvm.cttz.i64(i64 %89, i1 true) #13, !range !24
  br i1 %90, label %92, label %74

92:                                               ; preds = %86
  %93 = load i64, i64* %64, align 8
  br label %94

94:                                               ; preds = %92, %63
  %95 = phi i64 [ %93, %92 ], [ %65, %63 ]
  %96 = and i64 %68, 4095
  %97 = xor i64 %96, 4095
  %98 = and i64 %95, %97
  store i64 %98, i64* %64, align 8
  %99 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 104
  %100 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 11, i32 0, i32 0, i32 0
  %101 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %100, align 8
  %102 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 53
  %103 = bitcast %"class.rx::ContextImpl"* %101 to i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)***
  %104 = load i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)**, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)*** %103, align 8
  %105 = getelementptr inbounds i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)*, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)** %104, i64 51
  %106 = load i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)*, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)** %105, align 8
  %107 = call i32 %106(%"class.rx::ContextImpl"* %101, %"class.gl::Context"* %1, %"class.angle::BitSetT.168"* dereferenceable(8) %99, %"class.angle::BitSetT.168"* dereferenceable(8) %102) #13
  %108 = icmp eq i32 %107, 1
  br i1 %108, label %125, label %109

109:                                              ; preds = %94
  %110 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 104, i32 0
  store i64 0, i64* %110, align 8
  %111 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %100, align 8
  %112 = bitcast %"class.rx::ContextImpl"* %111 to i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i8, i32, i32)***
  %113 = load i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i8, i32, i32)**, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i8, i32, i32)*** %112, align 8
  %114 = getelementptr inbounds i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i8, i32, i32)*, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i8, i32, i32)** %113, i64 23
  %115 = load i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i8, i32, i32)*, i32 (%"class.rx::ContextImpl"*, %"class.gl::Context"*, i8, i32, i32)** %114, align 8
  %116 = call i32 %115(%"class.rx::ContextImpl"* %111, %"class.gl::Context"* %1, i8 zeroext 4, i32 0, i32 6) #13
  %117 = icmp eq i32 %116, 1
  br i1 %117, label %125, label %118

118:                                              ; preds = %109
  %119 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 52, i32 9
  %120 = load i8, i8* %119, align 8, !range !2
  %121 = icmp eq i8 %120, 0
  br i1 %121, label %125, label %122

122:                                              ; preds = %118
  %123 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 86, i32 0, i32 1
  %124 = load %"class.gl::TransformFeedback"*, %"class.gl::TransformFeedback"** %123, align 8
  call void @_ZN2gl17TransformFeedback15onVerticesDrawnEPKNS_7ContextEii(%"class.gl::TransformFeedback"* %124, %"class.gl::Context"* %1, i32 6, i32 1) #13
  br label %125

125:                                              ; preds = %74, %51, %59, %94, %109, %118, %122
  %126 = getelementptr inbounds %"class.angle::BitSetT.166", %"class.angle::BitSetT.166"* %11, i64 0, i32 0
  %127 = load i64, i64* %41, align 8
  store i64 %127, i64* %126, align 8
  call void @_ZN2gl13GLES1Renderer20setAttributesEnabledEPNS_7ContextEPNS_5StateEN5angle7BitSetTILm16EmmEE(%"class.gl::GLES1Renderer"* undef, %"class.gl::Context"* %1, %"class.gl::State"* %2, %"class.angle::BitSetT.166"* nonnull %11)
  store i8 0, i8* %39, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #13
  ret void
}

declare void @_ZNK2gl10GLES1State28getVertexArraysAttributeMaskEv(%"class.angle::BitSetT.166"* sret, %"class.gl::GLES1State"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl13GLES1Renderer20setAttributesEnabledEPNS_7ContextEPNS_5StateEN5angle7BitSetTILm16EmmEE(%"class.gl::GLES1Renderer"* nocapture readnone, %"class.gl::Context"*, %"class.gl::State"*, %"class.angle::BitSetT.166"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %5 = getelementptr inbounds %"class.gl::State", %"class.gl::State"* %2, i64 0, i32 103
  %6 = getelementptr inbounds %"class.angle::BitSetT.166", %"class.angle::BitSetT.166"* %3, i64 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = and i64 %7, 1
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %11, label %10

10:                                               ; preds = %4
  call void @_ZN2gl10GLES1State21setClientStateEnabledENS_21ClientVertexArrayTypeEb(%"class.gl::GLES1State"* %5, i8 zeroext 4, i1 zeroext true) #13
  call void @_ZN2gl7Context23enableVertexAttribArrayEj(%"class.gl::Context"* %1, i32 0) #13
  br label %33

11:                                               ; preds = %4
  call void @_ZN2gl10GLES1State21setClientStateEnabledENS_21ClientVertexArrayTypeEb(%"class.gl::GLES1State"* %5, i8 zeroext 4, i1 zeroext false) #13
  call void @_ZN2gl7Context24disableVertexAttribArrayEj(%"class.gl::Context"* %1, i32 0) #13
  br label %33

12:                                               ; preds = %51
  call void @_ZN2gl10GLES1State23setTexCoordArrayEnabledEjb(%"class.gl::GLES1State"* %5, i32 0, i1 zeroext true) #13
  call void @_ZN2gl7Context23enableVertexAttribArrayEj(%"class.gl::Context"* %1, i32 4) #13
  br label %14

13:                                               ; preds = %51
  call void @_ZN2gl10GLES1State23setTexCoordArrayEnabledEjb(%"class.gl::GLES1State"* %5, i32 0, i1 zeroext false) #13
  call void @_ZN2gl7Context24disableVertexAttribArrayEj(%"class.gl::Context"* %1, i32 4) #13
  br label %14

14:                                               ; preds = %13, %12
  %15 = load i64, i64* %6, align 8
  %16 = and i64 %15, 32
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %19, label %18

18:                                               ; preds = %14
  call void @_ZN2gl10GLES1State23setTexCoordArrayEnabledEjb(%"class.gl::GLES1State"* %5, i32 1, i1 zeroext true) #13
  call void @_ZN2gl7Context23enableVertexAttribArrayEj(%"class.gl::Context"* %1, i32 5) #13
  br label %20

19:                                               ; preds = %14
  call void @_ZN2gl10GLES1State23setTexCoordArrayEnabledEjb(%"class.gl::GLES1State"* %5, i32 1, i1 zeroext false) #13
  call void @_ZN2gl7Context24disableVertexAttribArrayEj(%"class.gl::Context"* %1, i32 5) #13
  br label %20

20:                                               ; preds = %19, %18
  %21 = load i64, i64* %6, align 8
  %22 = and i64 %21, 64
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %25, label %24

24:                                               ; preds = %20
  call void @_ZN2gl10GLES1State23setTexCoordArrayEnabledEjb(%"class.gl::GLES1State"* %5, i32 2, i1 zeroext true) #13
  call void @_ZN2gl7Context23enableVertexAttribArrayEj(%"class.gl::Context"* %1, i32 6) #13
  br label %26

25:                                               ; preds = %20
  call void @_ZN2gl10GLES1State23setTexCoordArrayEnabledEjb(%"class.gl::GLES1State"* %5, i32 2, i1 zeroext false) #13
  call void @_ZN2gl7Context24disableVertexAttribArrayEj(%"class.gl::Context"* %1, i32 6) #13
  br label %26

26:                                               ; preds = %25, %24
  %27 = load i64, i64* %6, align 8
  %28 = trunc i64 %27 to i8
  %29 = icmp sgt i8 %28, -1
  br i1 %29, label %31, label %30

30:                                               ; preds = %26
  call void @_ZN2gl10GLES1State23setTexCoordArrayEnabledEjb(%"class.gl::GLES1State"* %5, i32 3, i1 zeroext true) #13
  call void @_ZN2gl7Context23enableVertexAttribArrayEj(%"class.gl::Context"* %1, i32 7) #13
  br label %32

31:                                               ; preds = %26
  call void @_ZN2gl10GLES1State23setTexCoordArrayEnabledEjb(%"class.gl::GLES1State"* %5, i32 3, i1 zeroext false) #13
  call void @_ZN2gl7Context24disableVertexAttribArrayEj(%"class.gl::Context"* %1, i32 7) #13
  br label %32

32:                                               ; preds = %31, %30
  ret void

33:                                               ; preds = %11, %10
  %34 = load i64, i64* %6, align 8
  %35 = and i64 %34, 2
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %38, label %37

37:                                               ; preds = %33
  call void @_ZN2gl10GLES1State21setClientStateEnabledENS_21ClientVertexArrayTypeEb(%"class.gl::GLES1State"* %5, i8 zeroext 1, i1 zeroext true) #13
  call void @_ZN2gl7Context23enableVertexAttribArrayEj(%"class.gl::Context"* %1, i32 1) #13
  br label %39

38:                                               ; preds = %33
  call void @_ZN2gl10GLES1State21setClientStateEnabledENS_21ClientVertexArrayTypeEb(%"class.gl::GLES1State"* %5, i8 zeroext 1, i1 zeroext false) #13
  call void @_ZN2gl7Context24disableVertexAttribArrayEj(%"class.gl::Context"* %1, i32 1) #13
  br label %39

39:                                               ; preds = %38, %37
  %40 = load i64, i64* %6, align 8
  %41 = and i64 %40, 4
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %44, label %43

43:                                               ; preds = %39
  call void @_ZN2gl10GLES1State21setClientStateEnabledENS_21ClientVertexArrayTypeEb(%"class.gl::GLES1State"* %5, i8 zeroext 0, i1 zeroext true) #13
  call void @_ZN2gl7Context23enableVertexAttribArrayEj(%"class.gl::Context"* %1, i32 2) #13
  br label %45

44:                                               ; preds = %39
  call void @_ZN2gl10GLES1State21setClientStateEnabledENS_21ClientVertexArrayTypeEb(%"class.gl::GLES1State"* %5, i8 zeroext 0, i1 zeroext false) #13
  call void @_ZN2gl7Context24disableVertexAttribArrayEj(%"class.gl::Context"* %1, i32 2) #13
  br label %45

45:                                               ; preds = %44, %43
  %46 = load i64, i64* %6, align 8
  %47 = and i64 %46, 8
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %50, label %49

49:                                               ; preds = %45
  call void @_ZN2gl10GLES1State21setClientStateEnabledENS_21ClientVertexArrayTypeEb(%"class.gl::GLES1State"* %5, i8 zeroext 2, i1 zeroext true) #13
  call void @_ZN2gl7Context23enableVertexAttribArrayEj(%"class.gl::Context"* %1, i32 3) #13
  br label %51

50:                                               ; preds = %45
  call void @_ZN2gl10GLES1State21setClientStateEnabledENS_21ClientVertexArrayTypeEb(%"class.gl::GLES1State"* %5, i8 zeroext 2, i1 zeroext false) #13
  call void @_ZN2gl7Context24disableVertexAttribArrayEj(%"class.gl::Context"* %1, i32 3) #13
  br label %51

51:                                               ; preds = %50, %49
  %52 = load i64, i64* %6, align 8
  %53 = and i64 %52, 16
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %13, label %12
}

declare void @_ZN2gl10GLES1State11setAllDirtyEv(%"class.gl::GLES1State"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.gl::Shader"* @_ZNK2gl13GLES1Renderer9getShaderENS_15ShaderProgramIDE(%"class.gl::GLES1Renderer"* nocapture readonly, i32) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 1
  %4 = load %"class.gl::ShaderProgramManager"*, %"class.gl::ShaderProgramManager"** %3, align 8
  %5 = tail call %"class.gl::Shader"* @_ZNK2gl20ShaderProgramManager9getShaderENS_15ShaderProgramIDE(%"class.gl::ShaderProgramManager"* %4, i32 %1) #13
  ret %"class.gl::Shader"* %5
}

declare %"class.gl::Shader"* @_ZNK2gl20ShaderProgramManager9getShaderENS_15ShaderProgramIDE(%"class.gl::ShaderProgramManager"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2gl13GLES1Renderer13compileShaderEPNS_7ContextENS_10ShaderTypeEPKcPNS_15ShaderProgramIDE(%"class.gl::GLES1Renderer"* nocapture readonly, %"class.gl::Context"*, i8 zeroext, i8*, %"struct.gl::ShaderProgramID"* nocapture) local_unnamed_addr #2 align 2 {
  %6 = alloca i8*, align 8
  %7 = alloca %"class.std::__1::vector.635", align 8
  %8 = alloca %"class.gl::LogMessage", align 8
  store i8* %3, i8** %6, align 8
  %9 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 11, i32 0, i32 0, i32 0
  %10 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %9, align 8
  %11 = bitcast %"class.rx::ContextImpl"* %10 to %"struct.gl::Limitations"* (%"class.rx::ContextImpl"*)***
  %12 = load %"struct.gl::Limitations"* (%"class.rx::ContextImpl"*)**, %"struct.gl::Limitations"* (%"class.rx::ContextImpl"*)*** %11, align 8
  %13 = getelementptr inbounds %"struct.gl::Limitations"* (%"class.rx::ContextImpl"*)*, %"struct.gl::Limitations"* (%"class.rx::ContextImpl"*)** %12, i64 59
  %14 = load %"struct.gl::Limitations"* (%"class.rx::ContextImpl"*)*, %"struct.gl::Limitations"* (%"class.rx::ContextImpl"*)** %13, align 8
  %15 = tail call dereferenceable(12) %"struct.gl::Limitations"* %14(%"class.rx::ContextImpl"* %10) #13
  %16 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 1
  %17 = load %"class.gl::ShaderProgramManager"*, %"class.gl::ShaderProgramManager"** %16, align 8
  %18 = getelementptr inbounds %"class.rx::ContextImpl", %"class.rx::ContextImpl"* %10, i64 0, i32 0
  %19 = tail call i32 @_ZN2gl20ShaderProgramManager12createShaderEPN2rx13GLImplFactoryERKNS_11LimitationsENS_10ShaderTypeE(%"class.gl::ShaderProgramManager"* %17, %"class.rx::GLImplFactory"* %18, %"struct.gl::Limitations"* dereferenceable(12) %15, i8 zeroext %2) #13
  %20 = load %"class.gl::ShaderProgramManager"*, %"class.gl::ShaderProgramManager"** %16, align 8
  %21 = tail call %"class.gl::Shader"* @_ZNK2gl20ShaderProgramManager9getShaderENS_15ShaderProgramIDE(%"class.gl::ShaderProgramManager"* %20, i32 %19) #13
  %22 = icmp eq %"class.gl::Shader"* %21, null
  br i1 %22, label %23, label %24, !prof !5

23:                                               ; preds = %5
  tail call void @_ZN2gl7Context11handleErrorEjPKcS2_S2_j(%"class.gl::Context"* %1, i32 1282, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__func__._ZN2gl13GLES1Renderer13compileShaderEPNS_7ContextENS_10ShaderTypeEPKcPNS_15ShaderProgramIDE, i64 0, i64 0), i32 550) #13
  br label %63

24:                                               ; preds = %5
  call void @_ZN2gl6Shader9setSourceEiPKPKcPKi(%"class.gl::Shader"* nonnull %21, i32 1, i8** nonnull %6, i32* null) #13
  call void @_ZN2gl6Shader7compileEPKNS_7ContextE(%"class.gl::Shader"* nonnull %21, %"class.gl::Context"* %1) #13
  %25 = getelementptr inbounds %"struct.gl::ShaderProgramID", %"struct.gl::ShaderProgramID"* %4, i64 0, i32 0
  store i32 %19, i32* %25, align 4
  %26 = call zeroext i1 @_ZN2gl6Shader10isCompiledEv(%"class.gl::Shader"* nonnull %21) #13
  br i1 %26, label %63, label %27

27:                                               ; preds = %24
  %28 = call i32 @_ZN2gl6Shader16getInfoLogLengthEv(%"class.gl::Shader"* nonnull %21) #13
  %29 = bitcast %"class.std::__1::vector.635"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #13
  %30 = getelementptr inbounds %"class.std::__1::vector.635", %"class.std::__1::vector.635"* %7, i64 0, i32 0, i32 0
  %31 = getelementptr inbounds %"class.std::__1::vector.635", %"class.std::__1::vector.635"* %7, i64 0, i32 0, i32 1
  %32 = getelementptr inbounds %"class.std::__1::vector.635", %"class.std::__1::vector.635"* %7, i64 0, i32 0, i32 2, i32 0, i32 0
  %33 = sext i32 %28 to i64
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 0, i64 24, i1 false) #13
  %34 = icmp eq i32 %28, 0
  br i1 %34, label %44, label %35

35:                                               ; preds = %27
  %36 = icmp slt i32 %28, 0
  br i1 %36, label %37, label %39

37:                                               ; preds = %35
  %38 = bitcast %"class.std::__1::vector.635"* %7 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %38) #17
  unreachable

39:                                               ; preds = %35
  %40 = call i8* @_Znwm(i64 %33) #16
  store i8* %40, i8** %30, align 8
  %41 = getelementptr inbounds i8, i8* %40, i64 %33
  store i8* %41, i8** %32, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %40, i8 0, i64 %33, i1 false)
  %42 = bitcast i8** %31 to i64*
  %43 = ptrtoint i8* %41 to i64
  store i64 %43, i64* %42, align 8
  br label %44

44:                                               ; preds = %27, %39
  %45 = phi i8* [ null, %27 ], [ %40, %39 ]
  %46 = add nsw i32 %28, -1
  call void @_ZN2gl6Shader10getInfoLogEiPiPc(%"class.gl::Shader"* nonnull %21, i32 %46, i32* null, i8* %45) #13
  %47 = call zeroext i1 @_ZN2gl4priv30ShouldCreatePlatformLogMessageEi(i32 3) #13
  br i1 %47, label %48, label %56

48:                                               ; preds = %44
  %49 = bitcast %"class.gl::LogMessage"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 288, i8* nonnull %49) #13
  call void @_ZN2gl10LogMessageC1EPKcS2_ii(%"class.gl::LogMessage"* nonnull %8, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__func__._ZN2gl13GLES1Renderer13compileShaderEPNS_7ContextENS_10ShaderTypeEPKcPNS_15ShaderProgramIDE, i64 0, i64 0), i32 563, i32 3) #13
  %50 = getelementptr inbounds %"class.gl::LogMessage", %"class.gl::LogMessage"* %8, i64 0, i32 4
  %51 = bitcast %"class.std::__1::basic_ostringstream"* %50 to %"class.std::__1::basic_ostream"*
  %52 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %51, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.2, i64 0, i64 0), i64 49) #13
  %53 = load i8*, i8** %30, align 8
  %54 = call i64 @strlen(i8* %53) #13
  %55 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %52, i8* %53, i64 %54) #13
  call void @_ZN2gl10LogMessageD1Ev(%"class.gl::LogMessage"* nonnull %8) #13
  call void @llvm.lifetime.end.p0i8(i64 288, i8* nonnull %49) #13
  br label %56

56:                                               ; preds = %44, %48
  call void @_ZN2gl7Context11handleErrorEjPKcS2_S2_j(%"class.gl::Context"* %1, i32 1282, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__func__._ZN2gl13GLES1Renderer13compileShaderEPNS_7ContextENS_10ShaderTypeEPKcPNS_15ShaderProgramIDE, i64 0, i64 0), i32 564) #13
  %57 = load i8*, i8** %30, align 8
  %58 = icmp eq i8* %57, null
  br i1 %58, label %62, label %59

59:                                               ; preds = %56
  %60 = ptrtoint i8* %57 to i64
  %61 = bitcast i8** %31 to i64*
  store i64 %60, i64* %61, align 8
  call void @_ZdlPv(i8* nonnull %57) #16
  br label %62

62:                                               ; preds = %56, %59
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #13
  br label %63

63:                                               ; preds = %24, %62, %23
  %64 = phi i32 [ 1, %23 ], [ 1, %62 ], [ 0, %24 ]
  ret i32 %64
}

declare i32 @_ZN2gl20ShaderProgramManager12createShaderEPN2rx13GLImplFactoryERKNS_11LimitationsENS_10ShaderTypeE(%"class.gl::ShaderProgramManager"*, %"class.rx::GLImplFactory"*, %"struct.gl::Limitations"* dereferenceable(12), i8 zeroext) local_unnamed_addr #3

declare void @_ZN2gl7Context11handleErrorEjPKcS2_S2_j(%"class.gl::Context"*, i32, i8*, i8*, i8*, i32) local_unnamed_addr #3

declare void @_ZN2gl6Shader9setSourceEiPKPKcPKi(%"class.gl::Shader"*, i32, i8**, i32*) local_unnamed_addr #3

declare void @_ZN2gl6Shader7compileEPKNS_7ContextE(%"class.gl::Shader"*, %"class.gl::Context"*) local_unnamed_addr #3

declare zeroext i1 @_ZN2gl6Shader10isCompiledEv(%"class.gl::Shader"*) local_unnamed_addr #3

declare i32 @_ZN2gl6Shader16getInfoLogLengthEv(%"class.gl::Shader"*) local_unnamed_addr #3

declare void @_ZN2gl6Shader10getInfoLogEiPiPc(%"class.gl::Shader"*, i32, i32*, i8*) local_unnamed_addr #3

declare zeroext i1 @_ZN2gl4priv30ShouldCreatePlatformLogMessageEi(i32) local_unnamed_addr #3

declare void @_ZN2gl10LogMessageC1EPKcS2_ii(%"class.gl::LogMessage"*, i8*, i8*, i32, i32) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN2gl10LogMessageD1Ev(%"class.gl::LogMessage"*) unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2gl13GLES1Renderer11linkProgramEPNS_7ContextEPNS_5StateENS_15ShaderProgramIDES5_RKN4absl13flat_hash_mapIiNSt3__112basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEENS6_13hash_internal4HashIiEENS8_8equal_toIiEENSC_INS8_4pairIKiSE_EEEEEEPS5_(%"class.gl::GLES1Renderer"* nocapture readonly, %"class.gl::Context"*, %"class.gl::State"*, i32, i32, %"class.absl::flat_hash_map.639"* nocapture readonly dereferenceable(40), %"struct.gl::ShaderProgramID"* nocapture) local_unnamed_addr #6 align 2 {
  %8 = alloca %"struct.std::__1::pair", align 8
  %9 = alloca %"class.std::__1::vector.635", align 8
  %10 = alloca %"class.gl::LogMessage", align 8
  %11 = getelementptr inbounds %"class.gl::GLES1Renderer", %"class.gl::GLES1Renderer"* %0, i64 0, i32 1
  %12 = load %"class.gl::ShaderProgramManager"*, %"class.gl::ShaderProgramManager"** %11, align 8
  %13 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 11, i32 0, i32 0, i32 0
  %14 = load %"class.rx::ContextImpl"*, %"class.rx::ContextImpl"** %13, align 8
  %15 = getelementptr inbounds %"class.rx::ContextImpl", %"class.rx::ContextImpl"* %14, i64 0, i32 0
  %16 = tail call i32 @_ZN2gl20ShaderProgramManager13createProgramEPN2rx13GLImplFactoryE(%"class.gl::ShaderProgramManager"* %12, %"class.rx::GLImplFactory"* %15) #13
  %17 = load %"class.gl::ShaderProgramManager"*, %"class.gl::ShaderProgramManager"** %11, align 8
  %18 = zext i32 %16 to i64
  %19 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %17, i64 0, i32 2, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = icmp ugt i64 %20, %18
  br i1 %21, label %22, label %28

22:                                               ; preds = %7
  %23 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %17, i64 0, i32 2, i32 1
  %24 = load %"class.gl::Program"**, %"class.gl::Program"*** %23, align 8
  %25 = getelementptr inbounds %"class.gl::Program"*, %"class.gl::Program"** %24, i64 %18
  %26 = load %"class.gl::Program"*, %"class.gl::Program"** %25, align 8
  %27 = icmp eq %"class.gl::Program"* %26, inttoptr (i64 -1 to %"class.gl::Program"*)
  br i1 %27, label %94, label %91

28:                                               ; preds = %7
  %29 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %30 = add i64 %29, %18
  %31 = zext i64 %30 to i128
  %32 = mul nuw i128 %31, 11376068507788127593
  %33 = lshr i128 %32, 64
  %34 = xor i128 %33, %32
  %35 = trunc i128 %34 to i64
  %36 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %17, i64 0, i32 2, i32 2, i32 0, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %17, i64 0, i32 2, i32 2, i32 0, i32 0, i32 3
  %39 = load i64, i64* %38, align 8
  %40 = lshr i64 %35, 7
  %41 = ptrtoint i8* %37 to i64
  %42 = lshr i64 %41, 12
  %43 = xor i64 %40, %42
  %44 = trunc i128 %34 to i8
  %45 = and i8 %44, 127
  %46 = insertelement <16 x i8> undef, i8 %45, i32 0
  %47 = shufflevector <16 x i8> %46, <16 x i8> undef, <16 x i32> zeroinitializer
  %48 = getelementptr inbounds %"class.gl::ShaderProgramManager", %"class.gl::ShaderProgramManager"* %17, i64 0, i32 2, i32 2, i32 0, i32 0, i32 1
  br label %49

49:                                               ; preds = %79, %28
  %50 = phi i64 [ %43, %28 ], [ %81, %79 ]
  %51 = phi i64 [ 0, %28 ], [ %80, %79 ]
  %52 = and i64 %50, %39
  %53 = getelementptr inbounds i8, i8* %37, i64 %52
  %54 = bitcast i8* %53 to <16 x i8>*
  %55 = load <16 x i8>, <16 x i8>* %54, align 1
  %56 = icmp eq <16 x i8> %47, %55
  %57 = bitcast <16 x i1> %56 to i16
  %58 = icmp eq i16 %57, 0
  br i1 %58, label %75, label %59

59:                                               ; preds = %49
  %60 = zext i16 %57 to i32
  %61 = load %"union.absl::container_internal::map_slot_type.244"*, %"union.absl::container_internal::map_slot_type.244"** %48, align 8
  br label %62

62:                                               ; preds = %71, %59
  %63 = phi i32 [ %60, %59 ], [ %73, %71 ]
  %64 = tail call i32 @llvm.cttz.i32(i32 %63, i1 false) #13, !range !3
  %65 = zext i32 %64 to i64
  %66 = add i64 %52, %65
  %67 = and i64 %66, %39
  %68 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %61, i64 %67, i32 0, i32 0
  %69 = load i32, i32* %68, align 4
  %70 = icmp eq i32 %69, %16
  br i1 %70, label %82, label %71, !prof !4

71:                                               ; preds = %62
  %72 = add i32 %63, -1
  %73 = and i32 %72, %63
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %62

75:                                               ; preds = %71, %49
  %76 = icmp eq <16 x i8> %55, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %77 = bitcast <16 x i1> %76 to i16
  %78 = icmp eq i16 %77, 0
  br i1 %78, label %79, label %94, !prof !5

79:                                               ; preds = %75
  %80 = add i64 %51, 16
  %81 = add i64 %80, %52
  br label %49

82:                                               ; preds = %62
  %83 = getelementptr inbounds i8, i8* %37, i64 %67
  %84 = icmp ne i8* %83, null
  tail call void @llvm.assume(i1 %84) #13
  %85 = load i8, i8* %83, align 1
  %86 = icmp sgt i8 %85, -1
  br i1 %86, label %88, label %87, !prof !4

87:                                               ; preds = %82
  tail call void @llvm.trap() #13
  unreachable

88:                                               ; preds = %82
  %89 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.244", %"union.absl::container_internal::map_slot_type.244"* %61, i64 %67, i32 0, i32 1
  %90 = load %"class.gl::Program"*, %"class.gl::Program"** %89, align 8
  br label %91

91:                                               ; preds = %22, %88
  %92 = phi %"class.gl::Program"* [ %26, %22 ], [ %90, %88 ]
  %93 = icmp eq %"class.gl::Program"* %92, null
  br i1 %93, label %94, label %95, !prof !5

94:                                               ; preds = %75, %22, %91
  tail call void @_ZN2gl7Context11handleErrorEjPKcS2_S2_j(%"class.gl::Context"* %1, i32 1282, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__func__._ZN2gl13GLES1Renderer11linkProgramEPNS_7ContextEPNS_5StateENS_15ShaderProgramIDES5_RKN4absl13flat_hash_mapIiNSt3__112basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEENS6_13hash_internal4HashIiEENS8_8equal_toIiEENSC_INS8_4pairIKiSE_EEEEEEPS5_, i64 0, i64 0), i32 581) #13
  br label %264

95:                                               ; preds = %91
  %96 = getelementptr inbounds %"struct.gl::ShaderProgramID", %"struct.gl::ShaderProgramID"* %6, i64 0, i32 0
  store i32 %16, i32* %96, align 4
  %97 = load %"class.gl::ShaderProgramManager"*, %"class.gl::ShaderProgramManager"** %11, align 8
  %98 = tail call %"class.gl::Shader"* @_ZNK2gl20ShaderProgramManager9getShaderENS_15ShaderProgramIDE(%"class.gl::ShaderProgramManager"* %97, i32 %3) #13
  tail call void @_ZN2gl7Program12attachShaderEPNS_6ShaderE(%"class.gl::Program"* nonnull %92, %"class.gl::Shader"* %98) #13
  %99 = load %"class.gl::ShaderProgramManager"*, %"class.gl::ShaderProgramManager"** %11, align 8
  %100 = tail call %"class.gl::Shader"* @_ZNK2gl20ShaderProgramManager9getShaderENS_15ShaderProgramIDE(%"class.gl::ShaderProgramManager"* %99, i32 %4) #13
  tail call void @_ZN2gl7Program12attachShaderEPNS_6ShaderE(%"class.gl::Program"* nonnull %92, %"class.gl::Shader"* %100) #13
  %101 = getelementptr inbounds %"class.absl::flat_hash_map.639", %"class.absl::flat_hash_map.639"* %5, i64 0, i32 0, i32 0, i32 0
  %102 = load i8*, i8** %101, align 8, !nonnull !25
  %103 = getelementptr inbounds %"class.absl::flat_hash_map.639", %"class.absl::flat_hash_map.639"* %5, i64 0, i32 0, i32 0, i32 1
  %104 = load %"union.absl::container_internal::map_slot_type.642"*, %"union.absl::container_internal::map_slot_type.642"** %103, align 8
  %105 = load i8, i8* %102, align 1
  %106 = icmp slt i8 %105, -1
  br i1 %106, label %107, label %122

107:                                              ; preds = %95, %107
  %108 = phi %"union.absl::container_internal::map_slot_type.642"* [ %119, %107 ], [ %104, %95 ]
  %109 = phi i8* [ %118, %107 ], [ %102, %95 ]
  %110 = bitcast i8* %109 to <16 x i8>*
  %111 = load <16 x i8>, <16 x i8>* %110, align 1
  %112 = icmp slt <16 x i8> %111, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %113 = bitcast <16 x i1> %112 to i16
  %114 = zext i16 %113 to i32
  %115 = add nuw nsw i32 %114, 1
  %116 = tail call i32 @llvm.cttz.i32(i32 %115, i1 true) #13, !range !3
  %117 = zext i32 %116 to i64
  %118 = getelementptr inbounds i8, i8* %109, i64 %117
  %119 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.642", %"union.absl::container_internal::map_slot_type.642"* %108, i64 %117
  %120 = load i8, i8* %118, align 1
  %121 = icmp slt i8 %120, -1
  br i1 %121, label %107, label %122

122:                                              ; preds = %107, %95
  %123 = phi %"union.absl::container_internal::map_slot_type.642"* [ %104, %95 ], [ %119, %107 ]
  %124 = phi i8* [ %102, %95 ], [ %118, %107 ]
  %125 = phi i8 [ %105, %95 ], [ %120, %107 ]
  %126 = icmp eq i8 %125, -1
  %127 = icmp eq i8* %124, null
  %128 = or i1 %126, %127
  br i1 %128, label %139, label %129

129:                                              ; preds = %122
  %130 = bitcast %"struct.std::__1::pair"* %8 to i8*
  %131 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %8, i64 0, i32 0
  %132 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %8, i64 0, i32 1
  %133 = bitcast %"class.std::__1::basic_string"* %132 to i8*
  %134 = bitcast %"class.std::__1::basic_string"* %132 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %135 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %134, i64 0, i32 1, i32 0
  %136 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %132, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %137 = icmp sgt i8 %125, -1
  br i1 %137, label %142, label %138, !prof !4

138:                                              ; preds = %205, %129
  call void @llvm.trap() #13
  unreachable

139:                                              ; preds = %198, %122
  %140 = call i32 @_ZN2gl7Program4linkEPKNS_7ContextE(%"class.gl::Program"* nonnull %92, %"class.gl::Context"* %1) #13
  %141 = icmp eq i32 %140, 1
  br i1 %141, label %264, label %208

142:                                              ; preds = %129, %205
  %143 = phi i8* [ %203, %205 ], [ %124, %129 ]
  %144 = phi %"union.absl::container_internal::map_slot_type.642"* [ %200, %205 ], [ %123, %129 ]
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %130) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %130, i8 -86, i64 32, i1 false)
  %145 = load i8, i8* %143, align 1
  %146 = icmp sgt i8 %145, -1
  br i1 %146, label %148, label %147, !prof !4

147:                                              ; preds = %142
  call void @llvm.trap() #13
  unreachable

148:                                              ; preds = %142
  %149 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.642", %"union.absl::container_internal::map_slot_type.642"* %144, i64 0, i32 0, i32 0
  %150 = load i32, i32* %149, align 8
  store i32 %150, i32* %131, align 8
  %151 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.642", %"union.absl::container_internal::map_slot_type.642"* %144, i64 0, i32 0, i32 1
  %152 = bitcast %"class.std::__1::basic_string"* %151 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %153 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %152, i64 0, i32 1, i32 0
  %154 = load i8, i8* %153, align 1
  %155 = icmp slt i8 %154, 0
  br i1 %155, label %158, label %156

156:                                              ; preds = %148
  %157 = bitcast %"class.std::__1::basic_string"* %151 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %133, i8* align 8 %157, i64 24, i1 false) #13
  br label %164

158:                                              ; preds = %148
  %159 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %151, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %160 = load i8*, i8** %159, align 8
  %161 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.642", %"union.absl::container_internal::map_slot_type.642"* %144, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %162 = load i64, i64* %161, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %132, i8* %160, i64 %162) #13
  %163 = load i32, i32* %131, align 8
  br label %164

164:                                              ; preds = %156, %158
  %165 = phi i32 [ %150, %156 ], [ %163, %158 ]
  %166 = load i8, i8* %135, align 1
  %167 = icmp slt i8 %166, 0
  %168 = load i8*, i8** %136, align 8
  %169 = select i1 %167, i8* %168, i8* %133
  call void @_ZN2gl7Program21bindAttributeLocationEjPKc(%"class.gl::Program"* nonnull %92, i32 %165, i8* %169) #13
  %170 = load i8, i8* %135, align 1
  %171 = icmp slt i8 %170, 0
  br i1 %171, label %172, label %174

172:                                              ; preds = %164
  %173 = load i8*, i8** %136, align 8
  call void @_ZdlPv(i8* %173) #16
  br label %174

174:                                              ; preds = %172, %164
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %130) #13
  %175 = load i8, i8* %143, align 1
  %176 = icmp sgt i8 %175, -1
  br i1 %176, label %178, label %177, !prof !4

177:                                              ; preds = %174
  call void @llvm.trap() #13
  unreachable

178:                                              ; preds = %174
  %179 = getelementptr inbounds i8, i8* %143, i64 1
  %180 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.642", %"union.absl::container_internal::map_slot_type.642"* %144, i64 1
  %181 = load i8, i8* %179, align 1
  %182 = icmp slt i8 %181, -1
  br i1 %182, label %183, label %198

183:                                              ; preds = %178, %183
  %184 = phi %"union.absl::container_internal::map_slot_type.642"* [ %195, %183 ], [ %180, %178 ]
  %185 = phi i8* [ %194, %183 ], [ %179, %178 ]
  %186 = bitcast i8* %185 to <16 x i8>*
  %187 = load <16 x i8>, <16 x i8>* %186, align 1
  %188 = icmp slt <16 x i8> %187, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %189 = bitcast <16 x i1> %188 to i16
  %190 = zext i16 %189 to i32
  %191 = add nuw nsw i32 %190, 1
  %192 = call i32 @llvm.cttz.i32(i32 %191, i1 true) #13, !range !3
  %193 = zext i32 %192 to i64
  %194 = getelementptr inbounds i8, i8* %185, i64 %193
  %195 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.642", %"union.absl::container_internal::map_slot_type.642"* %184, i64 %193
  %196 = load i8, i8* %194, align 1
  %197 = icmp slt i8 %196, -1
  br i1 %197, label %183, label %198

198:                                              ; preds = %183, %178
  %199 = phi i8* [ %179, %178 ], [ %194, %183 ]
  %200 = phi %"union.absl::container_internal::map_slot_type.642"* [ %180, %178 ], [ %195, %183 ]
  %201 = phi i8 [ %181, %178 ], [ %196, %183 ]
  %202 = icmp eq i8 %201, -1
  %203 = select i1 %202, i8* null, i8* %199, !prof !5
  %204 = icmp eq i8* %203, null
  br i1 %204, label %139, label %205

205:                                              ; preds = %198
  %206 = load i8, i8* %203, align 1
  %207 = icmp sgt i8 %206, -1
  br i1 %207, label %142, label %138, !prof !4

208:                                              ; preds = %139
  %209 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %92, i64 0, i32 11, i32 0, i32 0, i32 0
  %210 = load %"struct.gl::Program::LinkingState"*, %"struct.gl::Program::LinkingState"** %209, align 8
  %211 = icmp eq %"struct.gl::Program::LinkingState"* %210, null
  br i1 %211, label %213, label %212

212:                                              ; preds = %208
  call void @_ZN2gl7Program15resolveLinkImplEPKNS_7ContextE(%"class.gl::Program"* nonnull %92, %"class.gl::Context"* %1) #13
  br label %213

213:                                              ; preds = %208, %212
  %214 = call i32 @_ZN2gl5State25onProgramExecutableChangeEPKNS_7ContextEPNS_7ProgramE(%"class.gl::State"* %2, %"class.gl::Context"* %1, %"class.gl::Program"* nonnull %92) #13
  %215 = icmp eq i32 %214, 1
  br i1 %215, label %264, label %216

216:                                              ; preds = %213
  %217 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %92, i64 0, i32 10
  %218 = load i8, i8* %217, align 8, !range !2
  %219 = icmp eq i8 %218, 0
  br i1 %219, label %220, label %259

220:                                              ; preds = %216
  %221 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %92, i64 0, i32 4, i32 23, i32 0
  %222 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %221, align 8
  %223 = call i32 @_ZNK2gl17ProgramExecutable16getInfoLogLengthEv(%"class.gl::ProgramExecutable"* %222) #13
  %224 = bitcast %"class.std::__1::vector.635"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %224) #13
  %225 = getelementptr inbounds %"class.std::__1::vector.635", %"class.std::__1::vector.635"* %9, i64 0, i32 0, i32 0
  %226 = getelementptr inbounds %"class.std::__1::vector.635", %"class.std::__1::vector.635"* %9, i64 0, i32 0, i32 1
  %227 = getelementptr inbounds %"class.std::__1::vector.635", %"class.std::__1::vector.635"* %9, i64 0, i32 0, i32 2, i32 0, i32 0
  %228 = sext i32 %223 to i64
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %224, i8 0, i64 24, i1 false) #13
  %229 = icmp eq i32 %223, 0
  br i1 %229, label %239, label %230

230:                                              ; preds = %220
  %231 = icmp slt i32 %223, 0
  br i1 %231, label %232, label %234

232:                                              ; preds = %230
  %233 = bitcast %"class.std::__1::vector.635"* %9 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %233) #17
  unreachable

234:                                              ; preds = %230
  %235 = call i8* @_Znwm(i64 %228) #16
  store i8* %235, i8** %225, align 8
  %236 = getelementptr inbounds i8, i8* %235, i64 %228
  store i8* %236, i8** %227, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %235, i8 0, i64 %228, i1 false)
  %237 = bitcast i8** %226 to i64*
  %238 = ptrtoint i8* %236 to i64
  store i64 %238, i64* %237, align 8
  br label %239

239:                                              ; preds = %220, %234
  %240 = phi i8* [ null, %220 ], [ %235, %234 ]
  %241 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %221, align 8
  %242 = add nsw i32 %223, -1
  call void @_ZNK2gl17ProgramExecutable10getInfoLogEiPiPc(%"class.gl::ProgramExecutable"* %241, i32 %242, i32* null, i8* %240) #13
  %243 = call zeroext i1 @_ZN2gl4priv30ShouldCreatePlatformLogMessageEi(i32 3) #13
  br i1 %243, label %244, label %252

244:                                              ; preds = %239
  %245 = bitcast %"class.gl::LogMessage"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 288, i8* nonnull %245) #13
  call void @_ZN2gl10LogMessageC1EPKcS2_ii(%"class.gl::LogMessage"* nonnull %10, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__func__._ZN2gl13GLES1Renderer11linkProgramEPNS_7ContextEPNS_5StateENS_15ShaderProgramIDES5_RKN4absl13flat_hash_mapIiNSt3__112basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEENS6_13hash_internal4HashIiEENS8_8equal_toIiEENSC_INS8_4pairIKiSE_EEEEEEPS5_, i64 0, i64 0), i32 606, i32 3) #13
  %246 = getelementptr inbounds %"class.gl::LogMessage", %"class.gl::LogMessage"* %10, i64 0, i32 4
  %247 = bitcast %"class.std::__1::basic_ostringstream"* %246 to %"class.std::__1::basic_ostream"*
  %248 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %247, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.5, i64 0, i64 0), i64 46) #13
  %249 = load i8*, i8** %225, align 8
  %250 = call i64 @strlen(i8* %249) #13
  %251 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %248, i8* %249, i64 %250) #13
  call void @_ZN2gl10LogMessageD1Ev(%"class.gl::LogMessage"* nonnull %10) #13
  call void @llvm.lifetime.end.p0i8(i64 288, i8* nonnull %245) #13
  br label %252

252:                                              ; preds = %239, %244
  call void @_ZN2gl7Context11handleErrorEjPKcS2_S2_j(%"class.gl::Context"* %1, i32 1282, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__func__._ZN2gl13GLES1Renderer11linkProgramEPNS_7ContextEPNS_5StateENS_15ShaderProgramIDES5_RKN4absl13flat_hash_mapIiNSt3__112basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEENS6_13hash_internal4HashIiEENS8_8equal_toIiEENSC_INS8_4pairIKiSE_EEEEEEPS5_, i64 0, i64 0), i32 607) #13
  %253 = load i8*, i8** %225, align 8
  %254 = icmp eq i8* %253, null
  br i1 %254, label %258, label %255

255:                                              ; preds = %252
  %256 = ptrtoint i8* %253 to i64
  %257 = bitcast i8** %226 to i64*
  store i64 %256, i64* %257, align 8
  call void @_ZdlPv(i8* nonnull %253) #16
  br label %258

258:                                              ; preds = %252, %255
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %224) #13
  br label %264

259:                                              ; preds = %216
  %260 = load %"class.gl::ShaderProgramManager"*, %"class.gl::ShaderProgramManager"** %11, align 8
  %261 = call %"class.gl::Shader"* @_ZNK2gl20ShaderProgramManager9getShaderENS_15ShaderProgramIDE(%"class.gl::ShaderProgramManager"* %260, i32 %3) #13
  call void @_ZN2gl7Program12detachShaderEPKNS_7ContextEPNS_6ShaderE(%"class.gl::Program"* nonnull %92, %"class.gl::Context"* %1, %"class.gl::Shader"* %261) #13
  %262 = load %"class.gl::ShaderProgramManager"*, %"class.gl::ShaderProgramManager"** %11, align 8
  %263 = call %"class.gl::Shader"* @_ZNK2gl20ShaderProgramManager9getShaderENS_15ShaderProgramIDE(%"class.gl::ShaderProgramManager"* %262, i32 %4) #13
  call void @_ZN2gl7Program12detachShaderEPKNS_7ContextEPNS_6ShaderE(%"class.gl::Program"* nonnull %92, %"class.gl::Context"* %1, %"class.gl::Shader"* %263) #13
  br label %264

264:                                              ; preds = %213, %139, %259, %258, %94
  %265 = phi i32 [ 1, %94 ], [ 0, %259 ], [ 1, %258 ], [ 1, %213 ], [ 1, %139 ]
  ret i32 %265
}

declare i32 @_ZN2gl20ShaderProgramManager13createProgramEPN2rx13GLImplFactoryE(%"class.gl::ShaderProgramManager"*, %"class.rx::GLImplFactory"*) local_unnamed_addr #3

declare void @_ZN2gl7Program12attachShaderEPNS_6ShaderE(%"class.gl::Program"*, %"class.gl::Shader"*) local_unnamed_addr #3

declare void @_ZN2gl7Program21bindAttributeLocationEjPKc(%"class.gl::Program"*, i32, i8*) local_unnamed_addr #3

declare i32 @_ZN2gl7Program4linkEPKNS_7ContextE(%"class.gl::Program"*, %"class.gl::Context"*) local_unnamed_addr #3

declare i32 @_ZN2gl5State25onProgramExecutableChangeEPKNS_7ContextEPNS_7ProgramE(%"class.gl::State"*, %"class.gl::Context"*, %"class.gl::Program"*) local_unnamed_addr #3

declare i32 @_ZNK2gl17ProgramExecutable16getInfoLogLengthEv(%"class.gl::ProgramExecutable"*) local_unnamed_addr #3

declare void @_ZNK2gl17ProgramExecutable10getInfoLogEiPiPc(%"class.gl::ProgramExecutable"*, i32, i32*, i8*) local_unnamed_addr #3

declare void @_ZN2gl7Program12detachShaderEPKNS_7ContextEPNS_6ShaderE(%"class.gl::Program"*, %"class.gl::Context"*, %"class.gl::Shader"*) local_unnamed_addr #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

declare void @_ZN2gl20ShaderProgramManagerC1Ev(%"class.gl::ShaderProgramManager"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"*, i32) local_unnamed_addr #3

declare void @_ZN2gl20ShaderProgramManager12deleteShaderEPKNS_7ContextENS_15ShaderProgramIDE(%"class.gl::ShaderProgramManager"*, %"class.gl::Context"*, i32) local_unnamed_addr #3

declare i32 @_ZNK2gl7Program18getUniformLocationERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.gl::Program"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #3

declare void @_ZN2gl5State14setObjectDirtyEj(%"class.gl::State"*, i32) local_unnamed_addr #3

declare void @_ZN2gl7Program13setUniform1ivEPNS_7ContextENS_15UniformLocationEiPKi(%"class.gl::Program"*, %"class.gl::Context"*, i32, i32, i32*) local_unnamed_addr #3

declare void @_ZN2gl7Program19setUniformMatrix4fvENS_15UniformLocationEihPKf(%"class.gl::Program"*, i32, i32, i8 zeroext, float*) local_unnamed_addr #3

declare void @_ZN2gl7Program13setUniform4fvENS_15UniformLocationEiPKf(%"class.gl::Program"*, i32, i32, float*) local_unnamed_addr #3

declare void @_ZN2gl7Program13setUniform3fvENS_15UniformLocationEiPKf(%"class.gl::Program"*, i32, i32, float*) local_unnamed_addr #3

declare void @_ZN2gl7Program13setUniform2fvENS_15UniformLocationEiPKf(%"class.gl::Program"*, i32, i32, float*) local_unnamed_addr #3

declare void @_ZN2gl7Program13setUniform1fvENS_15UniformLocationEiPKf(%"class.gl::Program"*, i32, i32, float*) local_unnamed_addr #3

declare void @_ZN2gl10GLES1State21setClientStateEnabledENS_21ClientVertexArrayTypeEb(%"class.gl::GLES1State"*, i8 zeroext, i1 zeroext) local_unnamed_addr #3

declare void @_ZN2gl7Context23enableVertexAttribArrayEj(%"class.gl::Context"*, i32) local_unnamed_addr #3

declare void @_ZN2gl7Context24disableVertexAttribArrayEj(%"class.gl::Context"*, i32) local_unnamed_addr #3

declare void @_ZN2gl10GLES1State23setTexCoordArrayEnabledEjb(%"class.gl::GLES1State"*, i32, i1 zeroext) local_unnamed_addr #3

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #9

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #10

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #11

declare i32 @_ZN2gl5State18syncActiveTexturesEPKNS_7ContextENS_7CommandE(%"class.gl::State"*, %"class.gl::Context"*, i32) #3

declare i32 @_ZN2gl5State16syncTexturesInitEPKNS_7ContextENS_7CommandE(%"class.gl::State"*, %"class.gl::Context"*, i32) #3

declare i32 @_ZN2gl5State14syncImagesInitEPKNS_7ContextENS_7CommandE(%"class.gl::State"*, %"class.gl::Context"*, i32) #3

declare i32 @_ZN2gl5State19syncReadAttachmentsEPKNS_7ContextENS_7CommandE(%"class.gl::State"*, %"class.gl::Context"*, i32) #3

declare i32 @_ZN2gl5State19syncDrawAttachmentsEPKNS_7ContextENS_7CommandE(%"class.gl::State"*, %"class.gl::Context"*, i32) #3

declare i32 @_ZN2gl5State15syncVertexArrayEPKNS_7ContextENS_7CommandE(%"class.gl::State"*, %"class.gl::Context"*, i32) #3

declare i32 @_ZN2gl5State12syncTexturesEPKNS_7ContextENS_7CommandE(%"class.gl::State"*, %"class.gl::Context"*, i32) #3

declare i32 @_ZN2gl5State10syncImagesEPKNS_7ContextENS_7CommandE(%"class.gl::State"*, %"class.gl::Context"*, i32) #3

declare i32 @_ZN2gl5State12syncSamplersEPKNS_7ContextENS_7CommandE(%"class.gl::State"*, %"class.gl::Context"*, i32) #3

declare i32 @_ZN2gl5State19syncReadFramebufferEPKNS_7ContextENS_7CommandE(%"class.gl::State"*, %"class.gl::Context"*, i32) #3

declare i32 @_ZN2gl5State19syncDrawFramebufferEPKNS_7ContextENS_7CommandE(%"class.gl::State"*, %"class.gl::Context"*, i32) #3

declare i32 @_ZN2gl5State11syncProgramEPKNS_7ContextENS_7CommandE(%"class.gl::State"*, %"class.gl::Context"*, i32) #3

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.cttz.i64(i64, i1 immarg) #12

declare void @_ZN2gl17TransformFeedback15onVerticesDrawnEPKNS_7ContextEii(%"class.gl::TransformFeedback"*, %"class.gl::Context"*, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @llvm.assume(i1) #13

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.cttz.i32(i32, i1 immarg) #12

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #3

declare void @_ZN2gl7Program15resolveLinkImplEPKNS_7ContextE(%"class.gl::Program"*, %"class.gl::Context"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"*) unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_iostream"*, i8**) unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"*) unnamed_addr #7

declare void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"*, i8*) local_unnamed_addr #3

declare void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"*) unnamed_addr #3

declare void @_ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv(%"class.std::__1::basic_string"* sret, %"class.std::__1::basic_stringbuf"*) local_unnamed_addr #3

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #9

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #14

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #2 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #13
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #13
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #13
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #13
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #13
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #13
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #13
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #13
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #2 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #13
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #13
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #16
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #13
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #13
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #16
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #13
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #13
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #7

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #7

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #3

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden float @_ZNK5angle6MatrixIfE11determinantEv(%"class.angle::Matrix"*) local_unnamed_addr #2 comdat align 2 {
  %2 = alloca [4 x [9 x float]], align 16
  %3 = alloca %"class.angle::Matrix", align 8
  %4 = alloca %"class.angle::Matrix", align 8
  %5 = alloca %"class.angle::Matrix", align 8
  %6 = alloca %"class.angle::Matrix", align 8
  %7 = getelementptr inbounds %"class.angle::Matrix", %"class.angle::Matrix"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  switch i32 %8, label %594 [
    i32 2, label %9
    i32 3, label %27
    i32 4, label %77
  ]

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.angle::Matrix", %"class.angle::Matrix"* %0, i64 0, i32 2
  %11 = getelementptr inbounds %"class.angle::Matrix", %"class.angle::Matrix"* %0, i64 0, i32 0, i32 0, i32 0
  %12 = load float*, float** %11, align 8
  %13 = load float, float* %12, align 4
  %14 = load i32, i32* %10, align 4
  %15 = add i32 %14, 1
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds float, float* %12, i64 %16
  %18 = load float, float* %17, align 4
  %19 = fmul float %13, %18
  %20 = getelementptr inbounds float, float* %12, i64 1
  %21 = load float, float* %20, align 4
  %22 = zext i32 %14 to i64
  %23 = getelementptr inbounds float, float* %12, i64 %22
  %24 = load float, float* %23, align 4
  %25 = fmul float %21, %24
  %26 = fsub float %19, %25
  br label %594

27:                                               ; preds = %1
  %28 = getelementptr inbounds %"class.angle::Matrix", %"class.angle::Matrix"* %0, i64 0, i32 2
  %29 = getelementptr inbounds %"class.angle::Matrix", %"class.angle::Matrix"* %0, i64 0, i32 0, i32 0, i32 0
  %30 = load float*, float** %29, align 8
  %31 = load float, float* %30, align 4
  %32 = load i32, i32* %28, align 4
  %33 = add i32 %32, 1
  %34 = zext i32 %33 to i64
  %35 = getelementptr inbounds float, float* %30, i64 %34
  %36 = load float, float* %35, align 4
  %37 = fmul float %31, %36
  %38 = shl i32 %32, 1
  %39 = add i32 %38, 2
  %40 = zext i32 %39 to i64
  %41 = getelementptr inbounds float, float* %30, i64 %40
  %42 = load float, float* %41, align 4
  %43 = fmul float %37, %42
  %44 = getelementptr inbounds float, float* %30, i64 1
  %45 = load float, float* %44, align 4
  %46 = add i32 %32, 2
  %47 = zext i32 %46 to i64
  %48 = getelementptr inbounds float, float* %30, i64 %47
  %49 = load float, float* %48, align 4
  %50 = fmul float %45, %49
  %51 = zext i32 %38 to i64
  %52 = getelementptr inbounds float, float* %30, i64 %51
  %53 = load float, float* %52, align 4
  %54 = fmul float %50, %53
  %55 = fadd float %43, %54
  %56 = getelementptr inbounds float, float* %30, i64 2
  %57 = load float, float* %56, align 4
  %58 = zext i32 %32 to i64
  %59 = getelementptr inbounds float, float* %30, i64 %58
  %60 = load float, float* %59, align 4
  %61 = fmul float %57, %60
  %62 = or i32 %38, 1
  %63 = zext i32 %62 to i64
  %64 = getelementptr inbounds float, float* %30, i64 %63
  %65 = load float, float* %64, align 4
  %66 = fmul float %61, %65
  %67 = fadd float %55, %66
  %68 = fmul float %36, %57
  %69 = fmul float %53, %68
  %70 = fsub float %67, %69
  %71 = fmul float %45, %60
  %72 = fmul float %42, %71
  %73 = fsub float %70, %72
  %74 = fmul float %31, %49
  %75 = fmul float %74, %65
  %76 = fsub float %73, %75
  br label %594

77:                                               ; preds = %1
  %78 = bitcast [4 x [9 x float]]* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %78) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %78, i8 -1, i64 144, i1 false)
  %79 = getelementptr inbounds %"class.angle::Matrix", %"class.angle::Matrix"* %0, i64 0, i32 2
  %80 = load i32, i32* %79, align 4
  %81 = add i32 %80, 1
  %82 = zext i32 %81 to i64
  %83 = getelementptr inbounds %"class.angle::Matrix", %"class.angle::Matrix"* %0, i64 0, i32 0, i32 0, i32 0
  %84 = load float*, float** %83, align 8
  %85 = getelementptr inbounds float, float* %84, i64 %82
  %86 = bitcast float* %85 to i32*
  %87 = load i32, i32* %86, align 4
  %88 = bitcast [4 x [9 x float]]* %2 to i32*
  store i32 %87, i32* %88, align 16
  %89 = getelementptr inbounds [4 x [9 x float]], [4 x [9 x float]]* %2, i64 0, i64 0, i64 1
  %90 = shl i32 %80, 1
  %91 = or i32 %90, 1
  %92 = zext i32 %91 to i64
  %93 = getelementptr inbounds float, float* %84, i64 %92
  %94 = bitcast float* %93 to i32*
  %95 = load i32, i32* %94, align 4
  %96 = bitcast float* %89 to i32*
  store i32 %95, i32* %96, align 4
  %97 = getelementptr inbounds [4 x [9 x float]], [4 x [9 x float]]* %2, i64 0, i64 0, i64 2
  %98 = mul i32 %80, 3
  %99 = add i32 %98, 1
  %100 = zext i32 %99 to i64
  %101 = getelementptr inbounds float, float* %84, i64 %100
  %102 = bitcast float* %101 to i32*
  %103 = load i32, i32* %102, align 4
  %104 = bitcast float* %97 to i32*
  store i32 %103, i32* %104, align 8
  %105 = getelementptr inbounds [4 x [9 x float]], [4 x [9 x float]]* %2, i64 0, i64 0, i64 3
  %106 = add i32 %80, 2
  %107 = zext i32 %106 to i64
  %108 = getelementptr inbounds float, float* %84, i64 %107
  %109 = bitcast float* %108 to i32*
  %110 = load i32, i32* %109, align 4
  %111 = bitcast float* %105 to i32*
  store i32 %110, i32* %111, align 4
  %112 = getelementptr inbounds [4 x [9 x float]], [4 x [9 x float]]* %2, i64 0, i64 0, i64 4
  %113 = add i32 %90, 2
  %114 = zext i32 %113 to i64
  %115 = getelementptr inbounds float, float* %84, i64 %114
  %116 = bitcast float* %115 to i32*
  %117 = load i32, i32* %116, align 4
  %118 = bitcast float* %112 to i32*
  store i32 %117, i32* %118, align 16
  %119 = getelementptr inbounds [4 x [9 x float]], [4 x [9 x float]]* %2, i64 0, i64 0, i64 5
  %120 = add i32 %98, 2
  %121 = zext i32 %120 to i64
  %122 = getelementptr inbounds float, float* %84, i64 %121
  %123 = bitcast float* %122 to i32*
  %124 = load i32, i32* %123, align 4
  %125 = bitcast float* %119 to i32*
  store i32 %124, i32* %125, align 4
  %126 = getelementptr inbounds [4 x [9 x float]], [4 x [9 x float]]* %2, i64 0, i64 0, i64 6
  %127 = add i32 %80, 3
  %128 = zext i32 %127 to i64
  %129 = getelementptr inbounds float, float* %84, i64 %128
  %130 = bitcast float* %129 to i32*
  %131 = load i32, i32* %130, align 4
  %132 = bitcast float* %126 to i32*
  store i32 %131, i32* %132, align 8
  %133 = getelementptr inbounds [4 x [9 x float]], [4 x [9 x float]]* %2, i64 0, i64 0, i64 7
  %134 = add i32 %90, 3
  %135 = zext i32 %134 to i64
  %136 = getelementptr inbounds float, float* %84, i64 %135
  %137 = bitcast float* %136 to i32*
  %138 = load i32, i32* %137, align 4
  %139 = bitcast float* %133 to i32*
  store i32 %138, i32* %139, align 4
  %140 = getelementptr inbounds [4 x [9 x float]], [4 x [9 x float]]* %2, i64 0, i64 0, i64 8
  %141 = add i32 %98, 3
  %142 = zext i32 %141 to i64
  %143 = getelementptr inbounds float, float* %84, i64 %142
  %144 = bitcast float* %143 to i32*
  %145 = load i32, i32* %144, align 4
  %146 = bitcast float* %140 to i32*
  store i32 %145, i32* %146, align 16
  %147 = getelementptr inbounds [4 x [9 x float]], [4 x [9 x float]]* %2, i64 0, i64 1
  %148 = zext i32 %80 to i64
  %149 = getelementptr inbounds float, float* %84, i64 %148
  %150 = bitcast float* %149 to i32*
  %151 = load i32, i32* %150, align 4
  %152 = bitcast [9 x float]* %147 to i32*
  store i32 %151, i32* %152, align 4
  %153 = getelementptr inbounds [4 x [9 x float]], [4 x [9 x float]]* %2, i64 0, i64 1, i64 1
  %154 = zext i32 %90 to i64
  %155 = getelementptr inbounds float, float* %84, i64 %154
  %156 = bitcast float* %155 to i32*
  %157 = load i32, i32* %156, align 4
  %158 = bitcast float* %153 to i32*
  store i32 %157, i32* %158, align 4
  %159 = getelementptr inbounds [4 x [9 x float]], [4 x [9 x float]]* %2, i64 0, i64 1, i64 2
  %160 = zext i32 %98 to i64
  %161 = getelementptr inbounds float, float* %84, i64 %160
  %162 = bitcast float* %161 to i32*
  %163 = load i32, i32* %162, align 4
  %164 = bitcast float* %159 to i32*
  store i32 %163, i32* %164, align 4
  %165 = getelementptr inbounds [4 x [9 x float]], [4 x [9 x float]]* %2, i64 0, i64 1, i64 3
  %166 = load i32, i32* %109, align 4
  %167 = bitcast float* %165 to i32*
  store i32 %166, i32* %167, align 4
  %168 = getelementptr inbounds [4 x [9 x float]], [4 x [9 x float]]* %2, i64 0, i64 1, i64 4
  %169 = load i32, i32* %116, align 4
  %170 = bitcast float* %168 to i32*
  store i32 %169, i32* %170, align 4
  %171 = getelementptr inbounds [4 x [9 x float]], [4 x [9 x float]]* %2, i64 0, i64 1, i64 5
  %172 = load i32, i32* %123, align 4
  %173 = bitcast float* %171 to i32*
  store i32 %172, i32* %173, align 4
  %174 = getelementptr inbounds [4 x [9 x float]], [4 x [9 x float]]* %2, i64 0, i64 1, i64 6
  %175 = load i32, i32* %130, align 4
  %176 = bitcast float* %174 to i32*
  store i32 %175, i32* %176, align 4
  %177 = getelementptr inbounds [4 x [9 x float]], [4 x [9 x float]]* %2, i64 0, i64 1, i64 7
  %178 = load i32, i32* %137, align 4
  %179 = bitcast float* %177 to i32*
  store i32 %178, i32* %179, align 4
  %180 = getelementptr inbounds [4 x [9 x float]], [4 x [9 x float]]* %2, i64 0, i64 1, i64 8
  %181 = load i32, i32* %144, align 4
  %182 = bitcast float* %180 to i32*
  store i32 %181, i32* %182, align 4
  %183 = getelementptr inbounds [4 x [9 x float]], [4 x [9 x float]]* %2, i64 0, i64 2
  %184 = load i32, i32* %150, align 4
  %185 = bitcast [9 x float]* %183 to i32*
  store i32 %184, i32* %185, align 8
  %186 = getelementptr inbounds [4 x [9 x float]], [4 x [9 x float]]* %2, i64 0, i64 2, i64 1
  %187 = load i32, i32* %156, align 4
  %188 = bitcast float* %186 to i32*
  store i32 %187, i32* %188, align 4
  %189 = getelementptr inbounds [4 x [9 x float]], [4 x [9 x float]]* %2, i64 0, i64 2, i64 2
  %190 = load i32, i32* %162, align 4
  %191 = bitcast float* %189 to i32*
  store i32 %190, i32* %191, align 8
  %192 = getelementptr inbounds [4 x [9 x float]], [4 x [9 x float]]* %2, i64 0, i64 2, i64 3
  %193 = load i32, i32* %86, align 4
  %194 = bitcast float* %192 to i32*
  store i32 %193, i32* %194, align 4
  %195 = getelementptr inbounds [4 x [9 x float]], [4 x [9 x float]]* %2, i64 0, i64 2, i64 4
  %196 = load i32, i32* %94, align 4
  %197 = bitcast float* %195 to i32*
  store i32 %196, i32* %197, align 8
  %198 = getelementptr inbounds [4 x [9 x float]], [4 x [9 x float]]* %2, i64 0, i64 2, i64 5
  %199 = load i32, i32* %102, align 4
  %200 = bitcast float* %198 to i32*
  store i32 %199, i32* %200, align 4
  %201 = getelementptr inbounds [4 x [9 x float]], [4 x [9 x float]]* %2, i64 0, i64 2, i64 6
  %202 = load i32, i32* %130, align 4
  %203 = bitcast float* %201 to i32*
  store i32 %202, i32* %203, align 8
  %204 = getelementptr inbounds [4 x [9 x float]], [4 x [9 x float]]* %2, i64 0, i64 2, i64 7
  %205 = load i32, i32* %137, align 4
  %206 = bitcast float* %204 to i32*
  store i32 %205, i32* %206, align 4
  %207 = getelementptr inbounds [4 x [9 x float]], [4 x [9 x float]]* %2, i64 0, i64 2, i64 8
  %208 = load i32, i32* %144, align 4
  %209 = bitcast float* %207 to i32*
  store i32 %208, i32* %209, align 8
  %210 = getelementptr inbounds [4 x [9 x float]], [4 x [9 x float]]* %2, i64 0, i64 3, i64 0
  %211 = load i32, i32* %150, align 4
  %212 = bitcast float* %210 to i32*
  store i32 %211, i32* %212, align 4
  %213 = getelementptr inbounds [4 x [9 x float]], [4 x [9 x float]]* %2, i64 0, i64 3, i64 1
  %214 = load i32, i32* %156, align 4
  %215 = bitcast float* %213 to i32*
  store i32 %214, i32* %215, align 4
  %216 = getelementptr inbounds [4 x [9 x float]], [4 x [9 x float]]* %2, i64 0, i64 3, i64 2
  %217 = load i32, i32* %162, align 4
  %218 = bitcast float* %216 to i32*
  store i32 %217, i32* %218, align 4
  %219 = getelementptr inbounds [4 x [9 x float]], [4 x [9 x float]]* %2, i64 0, i64 3, i64 3
  %220 = load i32, i32* %86, align 4
  %221 = bitcast float* %219 to i32*
  store i32 %220, i32* %221, align 4
  %222 = getelementptr inbounds [4 x [9 x float]], [4 x [9 x float]]* %2, i64 0, i64 3, i64 4
  %223 = load i32, i32* %94, align 4
  %224 = bitcast float* %222 to i32*
  store i32 %223, i32* %224, align 4
  %225 = getelementptr inbounds [4 x [9 x float]], [4 x [9 x float]]* %2, i64 0, i64 3, i64 5
  %226 = load i32, i32* %102, align 4
  %227 = bitcast float* %225 to i32*
  store i32 %226, i32* %227, align 4
  %228 = getelementptr inbounds [4 x [9 x float]], [4 x [9 x float]]* %2, i64 0, i64 3, i64 6
  %229 = load i32, i32* %109, align 4
  %230 = bitcast float* %228 to i32*
  store i32 %229, i32* %230, align 4
  %231 = getelementptr inbounds [4 x [9 x float]], [4 x [9 x float]]* %2, i64 0, i64 3, i64 7
  %232 = load i32, i32* %116, align 4
  %233 = bitcast float* %231 to i32*
  store i32 %232, i32* %233, align 4
  %234 = getelementptr inbounds [4 x [9 x float]], [4 x [9 x float]]* %2, i64 0, i64 3, i64 8
  %235 = load i32, i32* %123, align 4
  %236 = bitcast float* %234 to i32*
  store i32 %235, i32* %236, align 4
  %237 = load float, float* %84, align 4
  %238 = bitcast %"class.angle::Matrix"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %238) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %238, i8 0, i64 24, i1 false) #13
  %239 = getelementptr inbounds %"class.angle::Matrix", %"class.angle::Matrix"* %3, i64 0, i32 1
  store i32 3, i32* %239, align 8
  %240 = getelementptr inbounds %"class.angle::Matrix", %"class.angle::Matrix"* %3, i64 0, i32 2
  store i32 3, i32* %240, align 4
  %241 = getelementptr inbounds %"class.angle::Matrix", %"class.angle::Matrix"* %3, i64 0, i32 0, i32 0, i32 1
  %242 = getelementptr inbounds %"class.angle::Matrix", %"class.angle::Matrix"* %3, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %243 = bitcast float** %241 to i64*
  %244 = bitcast %"class.angle::Matrix"* %3 to i64*
  %245 = bitcast float** %242 to i64*
  %246 = getelementptr inbounds %"class.angle::Matrix", %"class.angle::Matrix"* %3, i64 0, i32 0, i32 0, i32 0
  br label %247

247:                                              ; preds = %313, %77
  %248 = phi i64 [ %309, %313 ], [ 0, %77 ]
  %249 = phi float* [ %314, %313 ], [ null, %77 ]
  %250 = phi float* [ %310, %313 ], [ null, %77 ]
  %251 = phi i64 [ %311, %313 ], [ 0, %77 ]
  %252 = getelementptr inbounds [4 x [9 x float]], [4 x [9 x float]]* %2, i64 0, i64 0, i64 %251
  %253 = icmp eq float* %250, %249
  br i1 %253, label %260, label %254

254:                                              ; preds = %247
  %255 = bitcast float* %252 to i32*
  %256 = load i32, i32* %255, align 4
  %257 = bitcast float* %250 to i32*
  store i32 %256, i32* %257, align 4
  %258 = getelementptr inbounds float, float* %250, i64 1
  %259 = ptrtoint float* %258 to i64
  store i64 %259, i64* %243, align 8
  br label %308

260:                                              ; preds = %247
  %261 = ptrtoint float* %249 to i64
  %262 = load i64, i64* %244, align 8
  %263 = sub i64 %261, %262
  %264 = ashr exact i64 %263, 2
  %265 = add nsw i64 %264, 1
  %266 = icmp ugt i64 %265, 4611686018427387903
  br i1 %266, label %267, label %269

267:                                              ; preds = %260
  %268 = bitcast %"class.angle::Matrix"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %268) #17
  unreachable

269:                                              ; preds = %260
  %270 = icmp ult i64 %264, 2305843009213693951
  br i1 %270, label %271, label %279

271:                                              ; preds = %269
  %272 = ashr exact i64 %263, 1
  %273 = icmp ult i64 %272, %265
  %274 = select i1 %273, i64 %265, i64 %272
  %275 = icmp eq i64 %274, 0
  br i1 %275, label %284, label %276

276:                                              ; preds = %271
  %277 = icmp ugt i64 %274, 4611686018427387903
  br i1 %277, label %278, label %279

278:                                              ; preds = %276
  tail call void @abort() #17
  unreachable

279:                                              ; preds = %276, %269
  %280 = phi i64 [ %274, %276 ], [ 4611686018427387903, %269 ]
  %281 = shl i64 %280, 2
  %282 = tail call i8* @_Znwm(i64 %281) #16
  %283 = bitcast i8* %282 to float*
  br label %284

284:                                              ; preds = %279, %271
  %285 = phi i64 [ %280, %279 ], [ 0, %271 ]
  %286 = phi float* [ %283, %279 ], [ null, %271 ]
  %287 = getelementptr inbounds float, float* %286, i64 %264
  %288 = getelementptr inbounds float, float* %286, i64 %285
  %289 = ptrtoint float* %288 to i64
  %290 = bitcast float* %252 to i32*
  %291 = load i32, i32* %290, align 4
  %292 = bitcast float* %287 to i32*
  store i32 %291, i32* %292, align 4
  %293 = getelementptr inbounds float, float* %287, i64 1
  %294 = ptrtoint float* %293 to i64
  %295 = sub i64 %248, %262
  %296 = ashr exact i64 %295, 2
  %297 = sub nsw i64 0, %296
  %298 = getelementptr inbounds float, float* %287, i64 %297
  %299 = ptrtoint float* %298 to i64
  %300 = icmp sgt i64 %295, 0
  br i1 %300, label %301, label %304

301:                                              ; preds = %284
  %302 = bitcast float* %298 to i8*
  %303 = inttoptr i64 %262 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %302, i8* align 4 %303, i64 %295, i1 false) #13
  br label %304

304:                                              ; preds = %301, %284
  store i64 %299, i64* %244, align 8
  store i64 %294, i64* %243, align 8
  store i64 %289, i64* %245, align 8
  %305 = icmp eq i64 %262, 0
  br i1 %305, label %308, label %306

306:                                              ; preds = %304
  %307 = inttoptr i64 %262 to i8*
  tail call void @_ZdlPv(i8* %307) #16
  br label %308

308:                                              ; preds = %254, %304, %306
  %309 = phi i64 [ %259, %254 ], [ %294, %304 ], [ %294, %306 ]
  %310 = phi float* [ %258, %254 ], [ %293, %304 ], [ %293, %306 ]
  %311 = add nuw nsw i64 %251, 1
  %312 = icmp eq i64 %311, 9
  br i1 %312, label %315, label %313

313:                                              ; preds = %308
  %314 = load float*, float** %242, align 8
  br label %247

315:                                              ; preds = %308
  %316 = call float @_ZNK5angle6MatrixIfE11determinantEv(%"class.angle::Matrix"* nonnull %3)
  %317 = fmul float %237, %316
  %318 = load float*, float** %83, align 8
  %319 = getelementptr inbounds float, float* %318, i64 1
  %320 = load float, float* %319, align 4
  %321 = bitcast %"class.angle::Matrix"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %321) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %321, i8 0, i64 24, i1 false) #13
  %322 = getelementptr inbounds %"class.angle::Matrix", %"class.angle::Matrix"* %4, i64 0, i32 1
  store i32 3, i32* %322, align 8
  %323 = getelementptr inbounds %"class.angle::Matrix", %"class.angle::Matrix"* %4, i64 0, i32 2
  store i32 3, i32* %323, align 4
  %324 = getelementptr inbounds %"class.angle::Matrix", %"class.angle::Matrix"* %4, i64 0, i32 0, i32 0, i32 1
  %325 = getelementptr inbounds %"class.angle::Matrix", %"class.angle::Matrix"* %4, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %326 = bitcast float** %324 to i64*
  %327 = bitcast %"class.angle::Matrix"* %4 to i64*
  %328 = bitcast float** %325 to i64*
  %329 = getelementptr inbounds %"class.angle::Matrix", %"class.angle::Matrix"* %4, i64 0, i32 0, i32 0, i32 0
  br label %330

330:                                              ; preds = %394, %315
  %331 = phi i64 [ %397, %394 ], [ 0, %315 ]
  %332 = phi float* [ %396, %394 ], [ null, %315 ]
  %333 = phi float* [ %395, %394 ], [ null, %315 ]
  %334 = phi i64 [ %392, %394 ], [ 0, %315 ]
  %335 = getelementptr inbounds [4 x [9 x float]], [4 x [9 x float]]* %2, i64 0, i64 1, i64 %334
  %336 = icmp eq float* %333, %332
  br i1 %336, label %343, label %337

337:                                              ; preds = %330
  %338 = bitcast float* %335 to i32*
  %339 = load i32, i32* %338, align 4
  %340 = bitcast float* %333 to i32*
  store i32 %339, i32* %340, align 4
  %341 = getelementptr inbounds float, float* %333, i64 1
  %342 = ptrtoint float* %341 to i64
  store i64 %342, i64* %326, align 8
  br label %391

343:                                              ; preds = %330
  %344 = ptrtoint float* %332 to i64
  %345 = load i64, i64* %327, align 8
  %346 = sub i64 %344, %345
  %347 = ashr exact i64 %346, 2
  %348 = add nsw i64 %347, 1
  %349 = icmp ugt i64 %348, 4611686018427387903
  br i1 %349, label %350, label %352

350:                                              ; preds = %343
  %351 = bitcast %"class.angle::Matrix"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %351) #17
  unreachable

352:                                              ; preds = %343
  %353 = icmp ult i64 %347, 2305843009213693951
  br i1 %353, label %354, label %362

354:                                              ; preds = %352
  %355 = ashr exact i64 %346, 1
  %356 = icmp ult i64 %355, %348
  %357 = select i1 %356, i64 %348, i64 %355
  %358 = icmp eq i64 %357, 0
  br i1 %358, label %367, label %359

359:                                              ; preds = %354
  %360 = icmp ugt i64 %357, 4611686018427387903
  br i1 %360, label %361, label %362

361:                                              ; preds = %359
  call void @abort() #17
  unreachable

362:                                              ; preds = %359, %352
  %363 = phi i64 [ %357, %359 ], [ 4611686018427387903, %352 ]
  %364 = shl i64 %363, 2
  %365 = call i8* @_Znwm(i64 %364) #16
  %366 = bitcast i8* %365 to float*
  br label %367

367:                                              ; preds = %362, %354
  %368 = phi i64 [ %363, %362 ], [ 0, %354 ]
  %369 = phi float* [ %366, %362 ], [ null, %354 ]
  %370 = getelementptr inbounds float, float* %369, i64 %347
  %371 = getelementptr inbounds float, float* %369, i64 %368
  %372 = ptrtoint float* %371 to i64
  %373 = bitcast float* %335 to i32*
  %374 = load i32, i32* %373, align 4
  %375 = bitcast float* %370 to i32*
  store i32 %374, i32* %375, align 4
  %376 = getelementptr inbounds float, float* %370, i64 1
  %377 = ptrtoint float* %376 to i64
  %378 = sub i64 %331, %345
  %379 = ashr exact i64 %378, 2
  %380 = sub nsw i64 0, %379
  %381 = getelementptr inbounds float, float* %370, i64 %380
  %382 = ptrtoint float* %381 to i64
  %383 = icmp sgt i64 %378, 0
  br i1 %383, label %384, label %387

384:                                              ; preds = %367
  %385 = bitcast float* %381 to i8*
  %386 = inttoptr i64 %345 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %385, i8* align 4 %386, i64 %378, i1 false) #13
  br label %387

387:                                              ; preds = %384, %367
  store i64 %382, i64* %327, align 8
  store i64 %377, i64* %326, align 8
  store i64 %372, i64* %328, align 8
  %388 = icmp eq i64 %345, 0
  br i1 %388, label %391, label %389

389:                                              ; preds = %387
  %390 = inttoptr i64 %345 to i8*
  call void @_ZdlPv(i8* %390) #16
  br label %391

391:                                              ; preds = %337, %387, %389
  %392 = add nuw nsw i64 %334, 1
  %393 = icmp eq i64 %392, 9
  br i1 %393, label %398, label %394

394:                                              ; preds = %391
  %395 = load float*, float** %324, align 8
  %396 = load float*, float** %325, align 8
  %397 = ptrtoint float* %395 to i64
  br label %330

398:                                              ; preds = %391
  %399 = call float @_ZNK5angle6MatrixIfE11determinantEv(%"class.angle::Matrix"* nonnull %4)
  %400 = fmul float %320, %399
  %401 = fsub float %317, %400
  %402 = load float*, float** %83, align 8
  %403 = getelementptr inbounds float, float* %402, i64 2
  %404 = load float, float* %403, align 4
  %405 = bitcast %"class.angle::Matrix"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %405) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %405, i8 0, i64 24, i1 false) #13
  %406 = getelementptr inbounds %"class.angle::Matrix", %"class.angle::Matrix"* %5, i64 0, i32 1
  store i32 3, i32* %406, align 8
  %407 = getelementptr inbounds %"class.angle::Matrix", %"class.angle::Matrix"* %5, i64 0, i32 2
  store i32 3, i32* %407, align 4
  %408 = getelementptr inbounds %"class.angle::Matrix", %"class.angle::Matrix"* %5, i64 0, i32 0, i32 0, i32 1
  %409 = getelementptr inbounds %"class.angle::Matrix", %"class.angle::Matrix"* %5, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %410 = bitcast float** %408 to i64*
  %411 = bitcast %"class.angle::Matrix"* %5 to i64*
  %412 = bitcast float** %409 to i64*
  %413 = getelementptr inbounds %"class.angle::Matrix", %"class.angle::Matrix"* %5, i64 0, i32 0, i32 0, i32 0
  br label %414

414:                                              ; preds = %478, %398
  %415 = phi i64 [ %481, %478 ], [ 0, %398 ]
  %416 = phi float* [ %480, %478 ], [ null, %398 ]
  %417 = phi float* [ %479, %478 ], [ null, %398 ]
  %418 = phi i64 [ %476, %478 ], [ 0, %398 ]
  %419 = getelementptr inbounds [4 x [9 x float]], [4 x [9 x float]]* %2, i64 0, i64 2, i64 %418
  %420 = icmp eq float* %417, %416
  br i1 %420, label %427, label %421

421:                                              ; preds = %414
  %422 = bitcast float* %419 to i32*
  %423 = load i32, i32* %422, align 4
  %424 = bitcast float* %417 to i32*
  store i32 %423, i32* %424, align 4
  %425 = getelementptr inbounds float, float* %417, i64 1
  %426 = ptrtoint float* %425 to i64
  store i64 %426, i64* %410, align 8
  br label %475

427:                                              ; preds = %414
  %428 = ptrtoint float* %416 to i64
  %429 = load i64, i64* %411, align 8
  %430 = sub i64 %428, %429
  %431 = ashr exact i64 %430, 2
  %432 = add nsw i64 %431, 1
  %433 = icmp ugt i64 %432, 4611686018427387903
  br i1 %433, label %434, label %436

434:                                              ; preds = %427
  %435 = bitcast %"class.angle::Matrix"* %5 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %435) #17
  unreachable

436:                                              ; preds = %427
  %437 = icmp ult i64 %431, 2305843009213693951
  br i1 %437, label %438, label %446

438:                                              ; preds = %436
  %439 = ashr exact i64 %430, 1
  %440 = icmp ult i64 %439, %432
  %441 = select i1 %440, i64 %432, i64 %439
  %442 = icmp eq i64 %441, 0
  br i1 %442, label %451, label %443

443:                                              ; preds = %438
  %444 = icmp ugt i64 %441, 4611686018427387903
  br i1 %444, label %445, label %446

445:                                              ; preds = %443
  call void @abort() #17
  unreachable

446:                                              ; preds = %443, %436
  %447 = phi i64 [ %441, %443 ], [ 4611686018427387903, %436 ]
  %448 = shl i64 %447, 2
  %449 = call i8* @_Znwm(i64 %448) #16
  %450 = bitcast i8* %449 to float*
  br label %451

451:                                              ; preds = %446, %438
  %452 = phi i64 [ %447, %446 ], [ 0, %438 ]
  %453 = phi float* [ %450, %446 ], [ null, %438 ]
  %454 = getelementptr inbounds float, float* %453, i64 %431
  %455 = getelementptr inbounds float, float* %453, i64 %452
  %456 = ptrtoint float* %455 to i64
  %457 = bitcast float* %419 to i32*
  %458 = load i32, i32* %457, align 4
  %459 = bitcast float* %454 to i32*
  store i32 %458, i32* %459, align 4
  %460 = getelementptr inbounds float, float* %454, i64 1
  %461 = ptrtoint float* %460 to i64
  %462 = sub i64 %415, %429
  %463 = ashr exact i64 %462, 2
  %464 = sub nsw i64 0, %463
  %465 = getelementptr inbounds float, float* %454, i64 %464
  %466 = ptrtoint float* %465 to i64
  %467 = icmp sgt i64 %462, 0
  br i1 %467, label %468, label %471

468:                                              ; preds = %451
  %469 = bitcast float* %465 to i8*
  %470 = inttoptr i64 %429 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %469, i8* align 4 %470, i64 %462, i1 false) #13
  br label %471

471:                                              ; preds = %468, %451
  store i64 %466, i64* %411, align 8
  store i64 %461, i64* %410, align 8
  store i64 %456, i64* %412, align 8
  %472 = icmp eq i64 %429, 0
  br i1 %472, label %475, label %473

473:                                              ; preds = %471
  %474 = inttoptr i64 %429 to i8*
  call void @_ZdlPv(i8* %474) #16
  br label %475

475:                                              ; preds = %421, %471, %473
  %476 = add nuw nsw i64 %418, 1
  %477 = icmp eq i64 %476, 9
  br i1 %477, label %482, label %478

478:                                              ; preds = %475
  %479 = load float*, float** %408, align 8
  %480 = load float*, float** %409, align 8
  %481 = ptrtoint float* %479 to i64
  br label %414

482:                                              ; preds = %475
  %483 = call float @_ZNK5angle6MatrixIfE11determinantEv(%"class.angle::Matrix"* nonnull %5)
  %484 = fmul float %404, %483
  %485 = fadd float %401, %484
  %486 = load float*, float** %83, align 8
  %487 = getelementptr inbounds float, float* %486, i64 3
  %488 = load float, float* %487, align 4
  %489 = bitcast %"class.angle::Matrix"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %489) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %489, i8 0, i64 24, i1 false) #13
  %490 = getelementptr inbounds %"class.angle::Matrix", %"class.angle::Matrix"* %6, i64 0, i32 1
  store i32 3, i32* %490, align 8
  %491 = getelementptr inbounds %"class.angle::Matrix", %"class.angle::Matrix"* %6, i64 0, i32 2
  store i32 3, i32* %491, align 4
  %492 = getelementptr inbounds %"class.angle::Matrix", %"class.angle::Matrix"* %6, i64 0, i32 0, i32 0, i32 1
  %493 = getelementptr inbounds %"class.angle::Matrix", %"class.angle::Matrix"* %6, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %494 = bitcast float** %492 to i64*
  %495 = bitcast %"class.angle::Matrix"* %6 to i64*
  %496 = bitcast float** %493 to i64*
  %497 = getelementptr inbounds %"class.angle::Matrix", %"class.angle::Matrix"* %6, i64 0, i32 0, i32 0, i32 0
  br label %498

498:                                              ; preds = %562, %482
  %499 = phi i64 [ %565, %562 ], [ 0, %482 ]
  %500 = phi float* [ %564, %562 ], [ null, %482 ]
  %501 = phi float* [ %563, %562 ], [ null, %482 ]
  %502 = phi i64 [ %560, %562 ], [ 0, %482 ]
  %503 = getelementptr inbounds [4 x [9 x float]], [4 x [9 x float]]* %2, i64 0, i64 3, i64 %502
  %504 = icmp eq float* %501, %500
  br i1 %504, label %511, label %505

505:                                              ; preds = %498
  %506 = bitcast float* %503 to i32*
  %507 = load i32, i32* %506, align 4
  %508 = bitcast float* %501 to i32*
  store i32 %507, i32* %508, align 4
  %509 = getelementptr inbounds float, float* %501, i64 1
  %510 = ptrtoint float* %509 to i64
  store i64 %510, i64* %494, align 8
  br label %559

511:                                              ; preds = %498
  %512 = ptrtoint float* %500 to i64
  %513 = load i64, i64* %495, align 8
  %514 = sub i64 %512, %513
  %515 = ashr exact i64 %514, 2
  %516 = add nsw i64 %515, 1
  %517 = icmp ugt i64 %516, 4611686018427387903
  br i1 %517, label %518, label %520

518:                                              ; preds = %511
  %519 = bitcast %"class.angle::Matrix"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %519) #17
  unreachable

520:                                              ; preds = %511
  %521 = icmp ult i64 %515, 2305843009213693951
  br i1 %521, label %522, label %530

522:                                              ; preds = %520
  %523 = ashr exact i64 %514, 1
  %524 = icmp ult i64 %523, %516
  %525 = select i1 %524, i64 %516, i64 %523
  %526 = icmp eq i64 %525, 0
  br i1 %526, label %535, label %527

527:                                              ; preds = %522
  %528 = icmp ugt i64 %525, 4611686018427387903
  br i1 %528, label %529, label %530

529:                                              ; preds = %527
  call void @abort() #17
  unreachable

530:                                              ; preds = %527, %520
  %531 = phi i64 [ %525, %527 ], [ 4611686018427387903, %520 ]
  %532 = shl i64 %531, 2
  %533 = call i8* @_Znwm(i64 %532) #16
  %534 = bitcast i8* %533 to float*
  br label %535

535:                                              ; preds = %530, %522
  %536 = phi i64 [ %531, %530 ], [ 0, %522 ]
  %537 = phi float* [ %534, %530 ], [ null, %522 ]
  %538 = getelementptr inbounds float, float* %537, i64 %515
  %539 = getelementptr inbounds float, float* %537, i64 %536
  %540 = ptrtoint float* %539 to i64
  %541 = bitcast float* %503 to i32*
  %542 = load i32, i32* %541, align 4
  %543 = bitcast float* %538 to i32*
  store i32 %542, i32* %543, align 4
  %544 = getelementptr inbounds float, float* %538, i64 1
  %545 = ptrtoint float* %544 to i64
  %546 = sub i64 %499, %513
  %547 = ashr exact i64 %546, 2
  %548 = sub nsw i64 0, %547
  %549 = getelementptr inbounds float, float* %538, i64 %548
  %550 = ptrtoint float* %549 to i64
  %551 = icmp sgt i64 %546, 0
  br i1 %551, label %552, label %555

552:                                              ; preds = %535
  %553 = bitcast float* %549 to i8*
  %554 = inttoptr i64 %513 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %553, i8* align 4 %554, i64 %546, i1 false) #13
  br label %555

555:                                              ; preds = %552, %535
  store i64 %550, i64* %495, align 8
  store i64 %545, i64* %494, align 8
  store i64 %540, i64* %496, align 8
  %556 = icmp eq i64 %513, 0
  br i1 %556, label %559, label %557

557:                                              ; preds = %555
  %558 = inttoptr i64 %513 to i8*
  call void @_ZdlPv(i8* %558) #16
  br label %559

559:                                              ; preds = %505, %555, %557
  %560 = add nuw nsw i64 %502, 1
  %561 = icmp eq i64 %560, 9
  br i1 %561, label %566, label %562

562:                                              ; preds = %559
  %563 = load float*, float** %492, align 8
  %564 = load float*, float** %493, align 8
  %565 = ptrtoint float* %563 to i64
  br label %498

566:                                              ; preds = %559
  %567 = call float @_ZNK5angle6MatrixIfE11determinantEv(%"class.angle::Matrix"* nonnull %6)
  %568 = fmul float %488, %567
  %569 = fsub float %485, %568
  %570 = load float*, float** %497, align 8
  %571 = icmp eq float* %570, null
  br i1 %571, label %575, label %572

572:                                              ; preds = %566
  %573 = ptrtoint float* %570 to i64
  store i64 %573, i64* %494, align 8
  %574 = bitcast float* %570 to i8*
  call void @_ZdlPv(i8* %574) #16
  br label %575

575:                                              ; preds = %566, %572
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %489) #13
  %576 = load float*, float** %413, align 8
  %577 = icmp eq float* %576, null
  br i1 %577, label %581, label %578

578:                                              ; preds = %575
  %579 = ptrtoint float* %576 to i64
  store i64 %579, i64* %410, align 8
  %580 = bitcast float* %576 to i8*
  call void @_ZdlPv(i8* %580) #16
  br label %581

581:                                              ; preds = %575, %578
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %405) #13
  %582 = load float*, float** %329, align 8
  %583 = icmp eq float* %582, null
  br i1 %583, label %587, label %584

584:                                              ; preds = %581
  %585 = ptrtoint float* %582 to i64
  store i64 %585, i64* %326, align 8
  %586 = bitcast float* %582 to i8*
  call void @_ZdlPv(i8* %586) #16
  br label %587

587:                                              ; preds = %581, %584
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %321) #13
  %588 = load float*, float** %246, align 8
  %589 = icmp eq float* %588, null
  br i1 %589, label %593, label %590

590:                                              ; preds = %587
  %591 = ptrtoint float* %588 to i64
  store i64 %591, i64* %243, align 8
  %592 = bitcast float* %588 to i8*
  call void @_ZdlPv(i8* %592) #16
  br label %593

593:                                              ; preds = %587, %590
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %238) #13
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %78) #13
  br label %594

594:                                              ; preds = %1, %593, %27, %9
  %595 = phi float [ %569, %593 ], [ %76, %27 ], [ %26, %9 ], [ 0.000000e+00, %1 ]
  ret float %595
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIiNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEENS_13hash_internal4HashIiEENS3_8equal_toIiEENS7_INS3_4pairIKiS9_EEEEE14prepare_insertEm(%"class.absl::container_internal::raw_hash_set.641"*, i64) local_unnamed_addr #15 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.641", %"class.absl::container_internal::raw_hash_set.641"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.641", %"class.absl::container_internal::raw_hash_set.641"* %0, i64 0, i32 3
  %6 = load i64, i64* %5, align 8
  %7 = lshr i64 %1, 7
  %8 = ptrtoint i8* %4 to i64
  %9 = lshr i64 %8, 12
  %10 = xor i64 %9, %7
  %11 = and i64 %10, %6
  %12 = getelementptr inbounds i8, i8* %4, i64 %11
  %13 = bitcast i8* %12 to <16 x i8>*
  %14 = load <16 x i8>, <16 x i8>* %13, align 1
  %15 = icmp slt <16 x i8> %14, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %16 = bitcast <16 x i1> %15 to i16
  %17 = icmp eq i16 %16, 0
  br i1 %17, label %18, label %30

18:                                               ; preds = %2, %18
  %19 = phi i64 [ %23, %18 ], [ %11, %2 ]
  %20 = phi i64 [ %21, %18 ], [ 0, %2 ]
  %21 = add i64 %20, 16
  %22 = add i64 %21, %19
  %23 = and i64 %22, %6
  %24 = getelementptr inbounds i8, i8* %4, i64 %23
  %25 = bitcast i8* %24 to <16 x i8>*
  %26 = load <16 x i8>, <16 x i8>* %25, align 1
  %27 = icmp slt <16 x i8> %26, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %28 = bitcast <16 x i1> %27 to i16
  %29 = icmp eq i16 %28, 0
  br i1 %29, label %18, label %30

30:                                               ; preds = %18, %2
  %31 = phi i64 [ %11, %2 ], [ %23, %18 ]
  %32 = phi i16 [ %16, %2 ], [ %28, %18 ]
  %33 = zext i16 %32 to i32
  %34 = tail call i32 @llvm.cttz.i32(i32 %33, i1 false) #13, !range !3
  %35 = zext i32 %34 to i64
  %36 = add i64 %31, %35
  %37 = and i64 %36, %6
  %38 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.641", %"class.absl::container_internal::raw_hash_set.641"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %41, label %93

41:                                               ; preds = %30
  %42 = getelementptr inbounds i8, i8* %4, i64 %37
  %43 = load i8, i8* %42, align 1
  %44 = icmp eq i8 %43, -2
  br i1 %44, label %93, label %45, !prof !4

45:                                               ; preds = %41
  %46 = icmp eq i64 %6, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %45
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIiNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEENS_13hash_internal4HashIiEENS3_8equal_toIiEENS7_INS3_4pairIKiS9_EEEEE6resizeEm(%"class.absl::container_internal::raw_hash_set.641"* %0, i64 1) #13
  br label %59

48:                                               ; preds = %45
  %49 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.641", %"class.absl::container_internal::raw_hash_set.641"* %0, i64 0, i32 2
  %50 = load i64, i64* %49, align 8
  %51 = lshr i64 %6, 3
  %52 = sub i64 %6, %51
  %53 = lshr i64 %52, 1
  %54 = icmp ugt i64 %50, %53
  br i1 %54, label %56, label %55

55:                                               ; preds = %48
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIiNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEENS_13hash_internal4HashIiEENS3_8equal_toIiEENS7_INS3_4pairIKiS9_EEEEE27drop_deletes_without_resizeEv(%"class.absl::container_internal::raw_hash_set.641"* %0) #13
  br label %59

56:                                               ; preds = %48
  %57 = shl i64 %6, 1
  %58 = or i64 %57, 1
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIiNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEENS_13hash_internal4HashIiEENS3_8equal_toIiEENS7_INS3_4pairIKiS9_EEEEE6resizeEm(%"class.absl::container_internal::raw_hash_set.641"* %0, i64 %58) #13
  br label %59

59:                                               ; preds = %47, %55, %56
  %60 = load i8*, i8** %3, align 8
  %61 = load i64, i64* %5, align 8
  %62 = ptrtoint i8* %60 to i64
  %63 = lshr i64 %62, 12
  %64 = xor i64 %63, %7
  %65 = and i64 %64, %61
  %66 = getelementptr inbounds i8, i8* %60, i64 %65
  %67 = bitcast i8* %66 to <16 x i8>*
  %68 = load <16 x i8>, <16 x i8>* %67, align 1
  %69 = icmp slt <16 x i8> %68, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %70 = bitcast <16 x i1> %69 to i16
  %71 = icmp eq i16 %70, 0
  br i1 %71, label %72, label %84

72:                                               ; preds = %59, %72
  %73 = phi i64 [ %77, %72 ], [ %65, %59 ]
  %74 = phi i64 [ %75, %72 ], [ 0, %59 ]
  %75 = add i64 %74, 16
  %76 = add i64 %75, %73
  %77 = and i64 %76, %61
  %78 = getelementptr inbounds i8, i8* %60, i64 %77
  %79 = bitcast i8* %78 to <16 x i8>*
  %80 = load <16 x i8>, <16 x i8>* %79, align 1
  %81 = icmp slt <16 x i8> %80, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %82 = bitcast <16 x i1> %81 to i16
  %83 = icmp eq i16 %82, 0
  br i1 %83, label %72, label %84

84:                                               ; preds = %72, %59
  %85 = phi i64 [ %65, %59 ], [ %77, %72 ]
  %86 = phi i16 [ %70, %59 ], [ %82, %72 ]
  %87 = zext i16 %86 to i32
  %88 = tail call i32 @llvm.cttz.i32(i32 %87, i1 false) #13, !range !3
  %89 = zext i32 %88 to i64
  %90 = add i64 %85, %89
  %91 = and i64 %90, %61
  %92 = load i64, i64* %38, align 8
  br label %93

93:                                               ; preds = %41, %30, %84
  %94 = phi i64 [ %92, %84 ], [ 0, %41 ], [ %39, %30 ]
  %95 = phi i8* [ %60, %84 ], [ %4, %41 ], [ %4, %30 ]
  %96 = phi i64 [ %91, %84 ], [ %37, %41 ], [ %37, %30 ]
  %97 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.641", %"class.absl::container_internal::raw_hash_set.641"* %0, i64 0, i32 2
  %98 = load i64, i64* %97, align 8
  %99 = add i64 %98, 1
  store i64 %99, i64* %97, align 8
  %100 = getelementptr inbounds i8, i8* %95, i64 %96
  %101 = load i8, i8* %100, align 1
  %102 = icmp eq i8 %101, -128
  %103 = zext i1 %102 to i64
  %104 = sub i64 %94, %103
  store i64 %104, i64* %38, align 8
  %105 = trunc i64 %1 to i8
  %106 = and i8 %105, 127
  store i8 %106, i8* %100, align 1
  %107 = load i8*, i8** %3, align 8
  %108 = add i64 %96, -15
  %109 = load i64, i64* %5, align 8
  %110 = and i64 %109, %108
  %111 = and i64 %109, 15
  %112 = add i64 %110, %111
  %113 = getelementptr inbounds i8, i8* %107, i64 %112
  store i8 %106, i8* %113, align 1
  ret i64 %96
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIiNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEENS_13hash_internal4HashIiEENS3_8equal_toIiEENS7_INS3_4pairIKiS9_EEEEE6resizeEm(%"class.absl::container_internal::raw_hash_set.641"*, i64) local_unnamed_addr #6 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.641", %"class.absl::container_internal::raw_hash_set.641"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.641", %"class.absl::container_internal::raw_hash_set.641"* %0, i64 0, i32 1
  %6 = load %"union.absl::container_internal::map_slot_type.642"*, %"union.absl::container_internal::map_slot_type.642"** %5, align 8
  %7 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.641", %"class.absl::container_internal::raw_hash_set.641"* %0, i64 0, i32 3
  %8 = load i64, i64* %7, align 8
  store i64 %1, i64* %7, align 8
  %9 = add i64 %1, 16
  %10 = add i64 %1, 23
  %11 = and i64 %10, -8
  %12 = shl i64 %1, 5
  %13 = add i64 %11, %12
  %14 = tail call i8* @_Znwm(i64 %13) #16
  store i8* %14, i8** %3, align 8
  %15 = getelementptr inbounds i8, i8* %14, i64 %11
  %16 = bitcast %"union.absl::container_internal::map_slot_type.642"** %5 to i8**
  store i8* %15, i8** %16, align 8
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %14, i8 -128, i64 %9, i1 false) #13
  %17 = getelementptr inbounds i8, i8* %14, i64 %1
  store i8 -1, i8* %17, align 1
  %18 = lshr i64 %1, 3
  %19 = sub i64 %1, %18
  %20 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.641", %"class.absl::container_internal::raw_hash_set.641"* %0, i64 0, i32 2
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %19, %21
  %23 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.641", %"class.absl::container_internal::raw_hash_set.641"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  store i64 %22, i64* %23, align 8
  %24 = icmp eq i64 %8, 0
  br i1 %24, label %97, label %25

25:                                               ; preds = %2
  %26 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  br label %28

27:                                               ; preds = %93
  br i1 %24, label %97, label %96

28:                                               ; preds = %25, %93
  %29 = phi i64 [ 0, %25 ], [ %94, %93 ]
  %30 = getelementptr inbounds i8, i8* %4, i64 %29
  %31 = load i8, i8* %30, align 1
  %32 = icmp sgt i8 %31, -1
  br i1 %32, label %33, label %93

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.642", %"union.absl::container_internal::map_slot_type.642"* %6, i64 %29, i32 0, i32 0
  %35 = load i32, i32* %34, align 4
  %36 = sext i32 %35 to i64
  %37 = add i64 %26, %36
  %38 = zext i64 %37 to i128
  %39 = mul nuw i128 %38, 11376068507788127593
  %40 = lshr i128 %39, 64
  %41 = xor i128 %40, %39
  %42 = trunc i128 %41 to i64
  %43 = load i8*, i8** %3, align 8
  %44 = load i64, i64* %7, align 8
  %45 = lshr i64 %42, 7
  %46 = ptrtoint i8* %43 to i64
  %47 = lshr i64 %46, 12
  %48 = xor i64 %45, %47
  %49 = and i64 %48, %44
  %50 = getelementptr inbounds i8, i8* %43, i64 %49
  %51 = bitcast i8* %50 to <16 x i8>*
  %52 = load <16 x i8>, <16 x i8>* %51, align 1
  %53 = icmp slt <16 x i8> %52, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %54 = bitcast <16 x i1> %53 to i16
  %55 = icmp eq i16 %54, 0
  br i1 %55, label %56, label %68

56:                                               ; preds = %33, %56
  %57 = phi i64 [ %61, %56 ], [ %49, %33 ]
  %58 = phi i64 [ %59, %56 ], [ 0, %33 ]
  %59 = add i64 %58, 16
  %60 = add i64 %59, %57
  %61 = and i64 %60, %44
  %62 = getelementptr inbounds i8, i8* %43, i64 %61
  %63 = bitcast i8* %62 to <16 x i8>*
  %64 = load <16 x i8>, <16 x i8>* %63, align 1
  %65 = icmp slt <16 x i8> %64, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %66 = bitcast <16 x i1> %65 to i16
  %67 = icmp eq i16 %66, 0
  br i1 %67, label %56, label %68

68:                                               ; preds = %56, %33
  %69 = phi i64 [ %49, %33 ], [ %61, %56 ]
  %70 = phi i16 [ %54, %33 ], [ %66, %56 ]
  %71 = zext i16 %70 to i32
  %72 = tail call i32 @llvm.cttz.i32(i32 %71, i1 false) #13, !range !3
  %73 = zext i32 %72 to i64
  %74 = add i64 %69, %73
  %75 = and i64 %74, %44
  %76 = trunc i128 %41 to i8
  %77 = and i8 %76, 127
  %78 = getelementptr inbounds i8, i8* %43, i64 %75
  store i8 %77, i8* %78, align 1
  %79 = load i8*, i8** %3, align 8
  %80 = add i64 %75, -15
  %81 = load i64, i64* %7, align 8
  %82 = and i64 %80, %81
  %83 = and i64 %81, 15
  %84 = add i64 %82, %83
  %85 = getelementptr inbounds i8, i8* %79, i64 %84
  store i8 %77, i8* %85, align 1
  %86 = load %"union.absl::container_internal::map_slot_type.642"*, %"union.absl::container_internal::map_slot_type.642"** %5, align 8
  %87 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.642", %"union.absl::container_internal::map_slot_type.642"* %86, i64 %75, i32 0, i32 0
  %88 = load i32, i32* %34, align 8
  store i32 %88, i32* %87, align 8
  %89 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.642", %"union.absl::container_internal::map_slot_type.642"* %86, i64 %75, i32 0, i32 1
  %90 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.642", %"union.absl::container_internal::map_slot_type.642"* %6, i64 %29, i32 0, i32 1
  %91 = bitcast %"class.std::__1::basic_string"* %89 to i8*
  %92 = bitcast %"class.std::__1::basic_string"* %90 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %91, i8* align 8 %92, i64 24, i1 false) #13
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %92, i8 0, i64 24, i1 false) #13
  br label %93

93:                                               ; preds = %28, %68
  %94 = add nuw i64 %29, 1
  %95 = icmp eq i64 %94, %8
  br i1 %95, label %27, label %28

96:                                               ; preds = %27
  tail call void @_ZdlPv(i8* %4) #16
  br label %97

97:                                               ; preds = %2, %27, %96
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIiNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEENS_13hash_internal4HashIiEENS3_8equal_toIiEENS7_INS3_4pairIKiS9_EEEEE27drop_deletes_without_resizeEv(%"class.absl::container_internal::raw_hash_set.641"*) local_unnamed_addr #15 comdat align 2 {
  %2 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.641", %"class.absl::container_internal::raw_hash_set.641"* %0, i64 0, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.641", %"class.absl::container_internal::raw_hash_set.641"* %0, i64 0, i32 3
  %5 = load i64, i64* %4, align 8
  tail call void @_ZN4absl18container_internal37ConvertDeletedToEmptyAndFullToDeletedEPam(i8* %3, i64 %5) #13
  %6 = load i64, i64* %4, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.641", %"class.absl::container_internal::raw_hash_set.641"* %0, i64 0, i32 1
  %10 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  br label %19

11:                                               ; preds = %210, %1
  %12 = phi i64 [ 0, %1 ], [ %212, %210 ]
  %13 = lshr i64 %12, 3
  %14 = sub i64 %12, %13
  %15 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.641", %"class.absl::container_internal::raw_hash_set.641"* %0, i64 0, i32 2
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %14, %16
  %18 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.641", %"class.absl::container_internal::raw_hash_set.641"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  store i64 %17, i64* %18, align 8
  ret void

19:                                               ; preds = %8, %210
  %20 = phi i64 [ %6, %8 ], [ %213, %210 ]
  %21 = phi i64 [ 0, %8 ], [ %212, %210 ]
  %22 = load i8*, i8** %2, align 8
  %23 = getelementptr inbounds i8, i8* %22, i64 %21
  %24 = load i8, i8* %23, align 1
  %25 = icmp eq i8 %24, -2
  br i1 %25, label %26, label %210

26:                                               ; preds = %19
  %27 = ptrtoint i8* %22 to i64
  %28 = load %"union.absl::container_internal::map_slot_type.642"*, %"union.absl::container_internal::map_slot_type.642"** %9, align 8
  %29 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.642", %"union.absl::container_internal::map_slot_type.642"* %28, i64 %21, i32 0, i32 0
  %30 = load i32, i32* %29, align 4
  %31 = sext i32 %30 to i64
  %32 = add i64 %10, %31
  %33 = zext i64 %32 to i128
  %34 = mul nuw i128 %33, 11376068507788127593
  %35 = lshr i128 %34, 64
  %36 = xor i128 %35, %34
  %37 = trunc i128 %36 to i64
  %38 = lshr i64 %37, 7
  %39 = lshr i64 %27, 12
  %40 = xor i64 %38, %39
  %41 = and i64 %40, %20
  %42 = getelementptr inbounds i8, i8* %22, i64 %41
  %43 = bitcast i8* %42 to <16 x i8>*
  %44 = load <16 x i8>, <16 x i8>* %43, align 1
  %45 = icmp slt <16 x i8> %44, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %46 = bitcast <16 x i1> %45 to i16
  %47 = icmp eq i16 %46, 0
  br i1 %47, label %48, label %60

48:                                               ; preds = %26, %48
  %49 = phi i64 [ %53, %48 ], [ %41, %26 ]
  %50 = phi i64 [ %51, %48 ], [ 0, %26 ]
  %51 = add i64 %50, 16
  %52 = add i64 %51, %49
  %53 = and i64 %52, %20
  %54 = getelementptr inbounds i8, i8* %22, i64 %53
  %55 = bitcast i8* %54 to <16 x i8>*
  %56 = load <16 x i8>, <16 x i8>* %55, align 1
  %57 = icmp slt <16 x i8> %56, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %58 = bitcast <16 x i1> %57 to i16
  %59 = icmp eq i16 %58, 0
  br i1 %59, label %48, label %60

60:                                               ; preds = %48, %26
  %61 = phi i64 [ %41, %26 ], [ %53, %48 ]
  %62 = phi i16 [ %46, %26 ], [ %58, %48 ]
  %63 = zext i16 %62 to i32
  %64 = tail call i32 @llvm.cttz.i32(i32 %63, i1 false) #13, !range !3
  %65 = zext i32 %64 to i64
  %66 = add i64 %61, %65
  %67 = and i64 %66, %20
  %68 = sub i64 %67, %41
  %69 = sub i64 %21, %41
  %70 = xor i64 %68, %69
  %71 = and i64 %70, %20
  %72 = icmp ult i64 %71, 16
  br i1 %72, label %73, label %83, !prof !4

73:                                               ; preds = %60
  %74 = trunc i128 %36 to i8
  %75 = and i8 %74, 127
  store i8 %75, i8* %23, align 1
  %76 = load i8*, i8** %2, align 8
  %77 = add i64 %21, -15
  %78 = load i64, i64* %4, align 8
  %79 = and i64 %78, %77
  %80 = and i64 %78, 15
  %81 = add i64 %79, %80
  %82 = getelementptr inbounds i8, i8* %76, i64 %81
  store i8 %75, i8* %82, align 1
  br label %210

83:                                               ; preds = %60
  %84 = getelementptr inbounds i8, i8* %22, i64 %67
  %85 = load i8, i8* %84, align 1
  %86 = icmp eq i8 %85, -128
  %87 = trunc i128 %36 to i8
  %88 = and i8 %87, 127
  store i8 %88, i8* %84, align 1
  %89 = load i8*, i8** %2, align 8
  %90 = add i64 %67, -15
  %91 = load i64, i64* %4, align 8
  %92 = and i64 %91, %90
  %93 = and i64 %91, 15
  %94 = add i64 %92, %93
  %95 = getelementptr inbounds i8, i8* %89, i64 %94
  store i8 %88, i8* %95, align 1
  %96 = load %"union.absl::container_internal::map_slot_type.642"*, %"union.absl::container_internal::map_slot_type.642"** %9, align 8
  br i1 %86, label %97, label %114

97:                                               ; preds = %83
  %98 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.642", %"union.absl::container_internal::map_slot_type.642"* %96, i64 %67, i32 0, i32 0
  %99 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.642", %"union.absl::container_internal::map_slot_type.642"* %96, i64 %21, i32 0, i32 0
  %100 = load i32, i32* %99, align 8
  store i32 %100, i32* %98, align 8
  %101 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.642", %"union.absl::container_internal::map_slot_type.642"* %96, i64 %67, i32 0, i32 1
  %102 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.642", %"union.absl::container_internal::map_slot_type.642"* %96, i64 %21, i32 0, i32 1
  %103 = bitcast %"class.std::__1::basic_string"* %101 to i8*
  %104 = bitcast %"class.std::__1::basic_string"* %102 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %103, i8* align 8 %104, i64 24, i1 false) #13
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %104, i8 0, i64 24, i1 false) #13
  %105 = load i8*, i8** %2, align 8
  %106 = getelementptr inbounds i8, i8* %105, i64 %21
  store i8 -128, i8* %106, align 1
  %107 = load i8*, i8** %2, align 8
  %108 = add i64 %21, -15
  %109 = load i64, i64* %4, align 8
  %110 = and i64 %109, %108
  %111 = and i64 %109, 15
  %112 = add i64 %110, %111
  %113 = getelementptr inbounds i8, i8* %107, i64 %112
  store i8 -128, i8* %113, align 1
  br label %210

114:                                              ; preds = %83
  %115 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.642", %"union.absl::container_internal::map_slot_type.642"* %96, i64 %21
  %116 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.642", %"union.absl::container_internal::map_slot_type.642"* %115, i64 0, i32 0, i32 0
  %117 = load i32, i32* %116, align 8
  %118 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.642", %"union.absl::container_internal::map_slot_type.642"* %96, i64 %21, i32 0, i32 1
  %119 = bitcast %"class.std::__1::basic_string"* %118 to i8*
  %120 = load i8, i8* %119, align 8
  %121 = bitcast %"union.absl::container_internal::map_slot_type.642"* %115 to i8*
  %122 = getelementptr inbounds i8, i8* %121, i64 9
  %123 = load i8, i8* %122, align 1
  %124 = getelementptr inbounds i8, i8* %121, i64 10
  %125 = load i8, i8* %124, align 2
  %126 = getelementptr inbounds i8, i8* %121, i64 11
  %127 = load i8, i8* %126, align 1
  %128 = getelementptr inbounds i8, i8* %121, i64 12
  %129 = load i8, i8* %128, align 4
  %130 = getelementptr inbounds i8, i8* %121, i64 13
  %131 = load i8, i8* %130, align 1
  %132 = getelementptr inbounds i8, i8* %121, i64 14
  %133 = load i8, i8* %132, align 2
  %134 = getelementptr inbounds i8, i8* %121, i64 15
  %135 = load i8, i8* %134, align 1
  %136 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.642", %"union.absl::container_internal::map_slot_type.642"* %96, i64 %21, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %137 = bitcast i64* %136 to i8*
  %138 = load i8, i8* %137, align 8
  %139 = getelementptr inbounds i8, i8* %121, i64 17
  %140 = load i8, i8* %139, align 1
  %141 = getelementptr inbounds i8, i8* %121, i64 18
  %142 = load i8, i8* %141, align 2
  %143 = getelementptr inbounds i8, i8* %121, i64 19
  %144 = load i8, i8* %143, align 1
  %145 = getelementptr inbounds i8, i8* %121, i64 20
  %146 = load i8, i8* %145, align 4
  %147 = getelementptr inbounds i8, i8* %121, i64 21
  %148 = load i8, i8* %147, align 1
  %149 = getelementptr inbounds i8, i8* %121, i64 22
  %150 = load i8, i8* %149, align 2
  %151 = getelementptr inbounds i8, i8* %121, i64 23
  %152 = load i8, i8* %151, align 1
  %153 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.642", %"union.absl::container_internal::map_slot_type.642"* %96, i64 %21, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %154 = bitcast i64* %153 to i8*
  %155 = load i8, i8* %154, align 8
  %156 = getelementptr inbounds i8, i8* %121, i64 25
  %157 = load i8, i8* %156, align 1
  %158 = getelementptr inbounds i8, i8* %121, i64 26
  %159 = load i8, i8* %158, align 2
  %160 = getelementptr inbounds i8, i8* %121, i64 27
  %161 = load i8, i8* %160, align 1
  %162 = getelementptr inbounds i8, i8* %121, i64 28
  %163 = load i8, i8* %162, align 4
  %164 = getelementptr inbounds i8, i8* %121, i64 29
  %165 = load i8, i8* %164, align 1
  %166 = getelementptr inbounds i8, i8* %121, i64 30
  %167 = load i8, i8* %166, align 2
  %168 = getelementptr inbounds i8, i8* %121, i64 31
  %169 = load i8, i8* %168, align 1
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %119, i8 0, i64 24, i1 false) #13
  %170 = load %"union.absl::container_internal::map_slot_type.642"*, %"union.absl::container_internal::map_slot_type.642"** %9, align 8
  %171 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.642", %"union.absl::container_internal::map_slot_type.642"* %170, i64 %21, i32 0, i32 0
  %172 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.642", %"union.absl::container_internal::map_slot_type.642"* %170, i64 %67, i32 0, i32 0
  %173 = load i32, i32* %172, align 8
  store i32 %173, i32* %171, align 8
  %174 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.642", %"union.absl::container_internal::map_slot_type.642"* %170, i64 %21, i32 0, i32 1
  %175 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.642", %"union.absl::container_internal::map_slot_type.642"* %170, i64 %67, i32 0, i32 1
  %176 = bitcast %"class.std::__1::basic_string"* %174 to i8*
  %177 = bitcast %"class.std::__1::basic_string"* %175 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %176, i8* align 8 %177, i64 24, i1 false) #13
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %177, i8 0, i64 24, i1 false) #13
  %178 = load %"union.absl::container_internal::map_slot_type.642"*, %"union.absl::container_internal::map_slot_type.642"** %9, align 8
  %179 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.642", %"union.absl::container_internal::map_slot_type.642"* %178, i64 %67
  %180 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.642", %"union.absl::container_internal::map_slot_type.642"* %179, i64 0, i32 0, i32 0
  store i32 %117, i32* %180, align 8
  %181 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.642", %"union.absl::container_internal::map_slot_type.642"* %178, i64 %67, i32 0, i32 1
  %182 = bitcast %"class.std::__1::basic_string"* %181 to i8*
  store i8 %120, i8* %182, align 8
  %183 = bitcast %"union.absl::container_internal::map_slot_type.642"* %179 to i8*
  %184 = getelementptr inbounds i8, i8* %183, i64 9
  store i8 %123, i8* %184, align 1
  %185 = getelementptr inbounds i8, i8* %183, i64 10
  store i8 %125, i8* %185, align 2
  %186 = getelementptr inbounds i8, i8* %183, i64 11
  store i8 %127, i8* %186, align 1
  %187 = getelementptr inbounds i8, i8* %183, i64 12
  store i8 %129, i8* %187, align 4
  %188 = getelementptr inbounds i8, i8* %183, i64 13
  store i8 %131, i8* %188, align 1
  %189 = getelementptr inbounds i8, i8* %183, i64 14
  store i8 %133, i8* %189, align 2
  %190 = getelementptr inbounds i8, i8* %183, i64 15
  store i8 %135, i8* %190, align 1
  %191 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.642", %"union.absl::container_internal::map_slot_type.642"* %178, i64 %67, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %192 = bitcast i64* %191 to i8*
  store i8 %138, i8* %192, align 8
  %193 = getelementptr inbounds i8, i8* %183, i64 17
  store i8 %140, i8* %193, align 1
  %194 = getelementptr inbounds i8, i8* %183, i64 18
  store i8 %142, i8* %194, align 2
  %195 = getelementptr inbounds i8, i8* %183, i64 19
  store i8 %144, i8* %195, align 1
  %196 = getelementptr inbounds i8, i8* %183, i64 20
  store i8 %146, i8* %196, align 4
  %197 = getelementptr inbounds i8, i8* %183, i64 21
  store i8 %148, i8* %197, align 1
  %198 = getelementptr inbounds i8, i8* %183, i64 22
  store i8 %150, i8* %198, align 2
  %199 = getelementptr inbounds i8, i8* %183, i64 23
  store i8 %152, i8* %199, align 1
  %200 = getelementptr inbounds %"union.absl::container_internal::map_slot_type.642", %"union.absl::container_internal::map_slot_type.642"* %178, i64 %67, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %201 = bitcast i64* %200 to i8*
  store i8 %155, i8* %201, align 8
  %202 = getelementptr inbounds i8, i8* %183, i64 25
  store i8 %157, i8* %202, align 1
  %203 = getelementptr inbounds i8, i8* %183, i64 26
  store i8 %159, i8* %203, align 2
  %204 = getelementptr inbounds i8, i8* %183, i64 27
  store i8 %161, i8* %204, align 1
  %205 = getelementptr inbounds i8, i8* %183, i64 28
  store i8 %163, i8* %205, align 4
  %206 = getelementptr inbounds i8, i8* %183, i64 29
  store i8 %165, i8* %206, align 1
  %207 = getelementptr inbounds i8, i8* %183, i64 30
  store i8 %167, i8* %207, align 2
  %208 = getelementptr inbounds i8, i8* %183, i64 31
  store i8 %169, i8* %208, align 1
  %209 = add i64 %21, -1
  br label %210

210:                                              ; preds = %73, %114, %97, %19
  %211 = phi i64 [ %21, %19 ], [ %21, %73 ], [ %21, %97 ], [ %209, %114 ]
  %212 = add i64 %211, 1
  %213 = load i64, i64* %4, align 8
  %214 = icmp eq i64 %212, %213
  br i1 %214, label %11, label %19
}

declare void @_ZN4absl18container_internal37ConvertDeletedToEmptyAndFullToDeletedEPam(i8*, i64) local_unnamed_addr #3

attributes #0 = { cold noreturn nounwind }
attributes #1 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="128" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind readnone speculatable }
attributes #13 = { nounwind }
attributes #14 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="128" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { builtin nounwind }
attributes #17 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{i32 0, i32 33}
!4 = !{!"branch_weights", i32 2000, i32 1}
!5 = !{!"branch_weights", i32 1, i32 2000}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyIiNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEENS_13hash_internal4HashIiEENS3_8equal_toIiEENS7_INS3_4pairIKiS9_EEEEE16try_emplace_implIiJEEENSG_INS0_12raw_hash_setISA_SD_SF_SJ_E8iteratorEbEEOT_DpOT0_: argument 0"}
!8 = distinct !{!8, !"_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyIiNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEENS_13hash_internal4HashIiEENS3_8equal_toIiEENS7_INS3_4pairIKiS9_EEEEE16try_emplace_implIiJEEENSG_INS0_12raw_hash_setISA_SD_SF_SJ_E8iteratorEbEEOT_DpOT0_"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyIiNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEENS_13hash_internal4HashIiEENS3_8equal_toIiEENS7_INS3_4pairIKiS9_EEEEE16try_emplace_implIiJEEENSG_INS0_12raw_hash_setISA_SD_SF_SJ_E8iteratorEbEEOT_DpOT0_: argument 0"}
!11 = distinct !{!11, !"_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyIiNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEENS_13hash_internal4HashIiEENS3_8equal_toIiEENS7_INS3_4pairIKiS9_EEEEE16try_emplace_implIiJEEENSG_INS0_12raw_hash_setISA_SD_SF_SJ_E8iteratorEbEEOT_DpOT0_"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyIiNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEENS_13hash_internal4HashIiEENS3_8equal_toIiEENS7_INS3_4pairIKiS9_EEEEE16try_emplace_implIiJEEENSG_INS0_12raw_hash_setISA_SD_SF_SJ_E8iteratorEbEEOT_DpOT0_: argument 0"}
!14 = distinct !{!14, !"_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyIiNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEENS_13hash_internal4HashIiEENS3_8equal_toIiEENS7_INS3_4pairIKiS9_EEEEE16try_emplace_implIiJEEENSG_INS0_12raw_hash_setISA_SD_SF_SJ_E8iteratorEbEEOT_DpOT0_"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyIiNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEENS_13hash_internal4HashIiEENS3_8equal_toIiEENS7_INS3_4pairIKiS9_EEEEE16try_emplace_implIiJEEENSG_INS0_12raw_hash_setISA_SD_SF_SJ_E8iteratorEbEEOT_DpOT0_: argument 0"}
!17 = distinct !{!17, !"_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyIiNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEENS_13hash_internal4HashIiEENS3_8equal_toIiEENS7_INS3_4pairIKiS9_EEEEE16try_emplace_implIiJEEENSG_INS0_12raw_hash_setISA_SD_SF_SJ_E8iteratorEbEEOT_DpOT0_"}
!18 = !{!19}
!19 = distinct !{!19, !20, !"_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyIiNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEENS_13hash_internal4HashIiEENS3_8equal_toIiEENS7_INS3_4pairIKiS9_EEEEE16try_emplace_implIiJEEENSG_INS0_12raw_hash_setISA_SD_SF_SJ_E8iteratorEbEEOT_DpOT0_: argument 0"}
!20 = distinct !{!20, !"_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyIiNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEENS_13hash_internal4HashIiEENS3_8equal_toIiEENS7_INS3_4pairIKiS9_EEEEE16try_emplace_implIiJEEENSG_INS0_12raw_hash_setISA_SD_SF_SJ_E8iteratorEbEEOT_DpOT0_"}
!21 = !{!22}
!22 = distinct !{!22, !23, !"_ZanILm12EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_: argument 0"}
!23 = distinct !{!23, !"_ZanILm12EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_"}
!24 = !{i64 0, i64 65}
!25 = !{}
