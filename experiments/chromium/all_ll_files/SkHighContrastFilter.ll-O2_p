; ModuleID = '../../third_party/skia/src/effects/SkHighContrastFilter.cpp'
source_filename = "../../third_party/skia/src/effects/SkHighContrastFilter.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%class.sk_sp = type { %class.SkColorFilter* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%struct.SkHighContrastConfig = type { i8, i32, float }
%class.SkString = type { %class.sk_sp.1 }
%class.sk_sp.1 = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%class.sk_sp.2 = type { %class.SkRuntimeEffect* }
%class.SkRuntimeEffect = type <{ %class.SkRefCnt.base, i32, %class.SkString, %"class.std::__1::unique_ptr", %"class.SkSL::FunctionDefinition"*, %"class.std::__1::vector", %"class.std::__1::vector.7", %"class.std::__1::vector.14", %"class.std::__1::unique_ptr.21", i32, [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.SkSL::Program"* }
%"struct.SkSL::Program" = type opaque
%"class.SkSL::FunctionDefinition" = type opaque
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.SkRuntimeEffect::Uniform"*, %"struct.SkRuntimeEffect::Uniform"*, %"class.std::__1::__compressed_pair.4" }
%"struct.SkRuntimeEffect::Uniform" = type <{ %class.SkString, i64, i32, i32, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.SkRuntimeEffect::Uniform"* }
%"class.std::__1::vector.7" = type { %"class.std::__1::__vector_base.8" }
%"class.std::__1::__vector_base.8" = type { %"struct.SkRuntimeEffect::Child"*, %"struct.SkRuntimeEffect::Child"*, %"class.std::__1::__compressed_pair.9" }
%"struct.SkRuntimeEffect::Child" = type { %class.SkString, i32, i32 }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"struct.SkRuntimeEffect::Child"* }
%"class.std::__1::vector.14" = type { %"class.std::__1::__vector_base.15" }
%"class.std::__1::__vector_base.15" = type { %"struct.SkSL::SampleUsage"*, %"struct.SkSL::SampleUsage"*, %"class.std::__1::__compressed_pair.16" }
%"struct.SkSL::SampleUsage" = type <{ i32, i8, [3 x i8] }>
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"struct.SkSL::SampleUsage"* }
%"class.std::__1::unique_ptr.21" = type { %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %class.SkFilterColorProgram* }
%class.SkFilterColorProgram = type <{ %"class.skvm::Program", %"class.std::__1::vector.30", i8, [7 x i8] }>
%"class.skvm::Program" = type { %"class.std::__1::unique_ptr.24" }
%"class.std::__1::unique_ptr.24" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"struct.skvm::Program::Impl"* }
%"struct.skvm::Program::Impl" = type opaque
%"class.std::__1::vector.30" = type { %"class.std::__1::__vector_base.31" }
%"class.std::__1::__vector_base.31" = type { %"struct.SkFilterColorProgram::SampleCall"*, %"struct.SkFilterColorProgram::SampleCall"*, %"class.std::__1::__compressed_pair.32" }
%"struct.SkFilterColorProgram::SampleCall" = type { i32, i32, %union.anon }
%union.anon = type { %struct.SkRGBA4f }
%struct.SkRGBA4f = type { float, float, float, float }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"struct.SkFilterColorProgram::SampleCall"* }
%struct.Uniforms = type { float, float, float }
%class.sk_sp.40 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%"struct.SkRuntimeEffect::Result" = type { %class.sk_sp.2, %class.SkString }
%"struct.SkRuntimeEffect::Options" = type { i8, i8 }

$_ZN15SkRuntimeEffect18MakeForColorFilterE8SkString = comdat any

@.str = private unnamed_addr constant [61 x i8] c"\0A        uniform half grayscale, invertStyle, contrast;\0A    \00", align 1
@_ZL16kRGB_to_HSL_sksl = internal constant [600 x i8] c"half3 rgb_to_hsl(half3 c) {half mx = max(max(c.r,c.g),c.b),     mn = min(min(c.r,c.g),c.b),      d = mx-mn,                   invd = 1.0 / d,               g_lt_b = c.g < c.b ? 6.0 : 0.0;half h = (1/6.0) * (mx == mn                 ? 0.0 :     /*mx==c.r*/    c.r >= c.g && c.r >= c.b ? invd * (c.g - c.b) + g_lt_b :     /*mx==c.g*/    c.g >= c.b               ? invd * (c.b - c.r) + 2.0       /*mx==c.b*/                             : invd * (c.r - c.g) + 4.0);half sum = mx+mn,       l = sum * 0.5,       s = mx == mn ? 0.0                    : d / (l > 0.5 ? 2.0 - sum : sum);return half3(h,s,l);}\00", align 16
@_ZL16kHSL_to_RGB_sksl = internal constant [192 x i8] c"half3 hsl_to_rgb(half3 hsl) {half  C = (1 - abs(2 * hsl.z - 1)) * hsl.y;half3 p = hsl.xxx + half3(0, 2/3.0, 1/3.0);half3 q = saturate(abs(fract(p) * 6 - 3) - 1);return (q - 0.5) * C + hsl.z;}\00", align 16
@.str.1 = private unnamed_addr constant [615 x i8] c"\0A        half4 main(half4 inColor) {\0A            half4 c = inColor;  // linear unpremul RGBA in dst gamut.\0A            if (grayscale == 1) {\0A                c.rgb = dot(half3(0.2126, 0.7152, 0.0722), c.rgb).rrr;\0A            }\0A            if (invertStyle == 1/*brightness*/) {\0A                c.rgb = 1 - c.rgb;\0A            } else if (invertStyle == 2/*lightness*/) {\0A                c.rgb = rgb_to_hsl(c.rgb);\0A                c.b = 1 - c.b;\0A                c.rgb = hsl_to_rgb(c.rgb);\0A            }\0A            c.rgb = mix(half3(0.5), c.rgb, contrast);\0A            return half4(saturate(c.rgb), c.a);\0A        }\0A    \00", align 1
@__const._ZN20SkHighContrastFilter4MakeERK20SkHighContrastConfig.linear = private unnamed_addr constant %struct.skcms_TransferFunction { float 1.000000e+00, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00 }, align 4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN20SkHighContrastFilter4MakeERK20SkHighContrastConfig(%class.sk_sp* noalias sret, %struct.SkHighContrastConfig* nocapture readonly dereferenceable(12)) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.SkString, align 8
  %4 = alloca %class.sk_sp.2, align 8
  %5 = alloca %class.SkString, align 8
  %6 = alloca %struct.Uniforms, align 4
  %7 = alloca %struct.skcms_TransferFunction, align 4
  %8 = alloca i32, align 4
  %9 = alloca %class.sk_sp, align 8
  %10 = alloca %class.sk_sp.40, align 8
  %11 = getelementptr inbounds %struct.SkHighContrastConfig, %struct.SkHighContrastConfig* %1, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = icmp ult i32 %12, 3
  br i1 %13, label %14, label %20

14:                                               ; preds = %2
  %15 = getelementptr inbounds %struct.SkHighContrastConfig, %struct.SkHighContrastConfig* %1, i64 0, i32 2
  %16 = load float, float* %15, align 4
  %17 = fcmp oge float %16, -1.000000e+00
  %18 = fcmp ole float %16, 1.000000e+00
  %19 = and i1 %17, %18
  br i1 %19, label %22, label %20

20:                                               ; preds = %14, %2
  %21 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  store %class.SkColorFilter* null, %class.SkColorFilter** %21, align 8
  br label %85

22:                                               ; preds = %14
  %23 = bitcast %class.SkString* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #4
  %24 = getelementptr inbounds %class.SkString, %class.SkString* %3, i64 0, i32 0, i32 0
  store %"struct.SkString::Rec"* inttoptr (i64 -6148914691236517206 to %"struct.SkString::Rec"*), %"struct.SkString::Rec"** %24, align 8
  call void @_ZN8SkStringC1EPKc(%class.SkString* nonnull %3, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str, i64 0, i64 0)) #4
  call void @_ZN8SkString6insertEmPKc(%class.SkString* nonnull %3, i64 -1, i8* getelementptr inbounds ([600 x i8], [600 x i8]* @_ZL16kRGB_to_HSL_sksl, i64 0, i64 0)) #4
  call void @_ZN8SkString6insertEmPKc(%class.SkString* nonnull %3, i64 -1, i8* getelementptr inbounds ([192 x i8], [192 x i8]* @_ZL16kHSL_to_RGB_sksl, i64 0, i64 0)) #4
  call void @_ZN8SkString6insertEmPKc(%class.SkString* nonnull %3, i64 -1, i8* getelementptr inbounds ([615 x i8], [615 x i8]* @.str.1, i64 0, i64 0)) #4
  %25 = bitcast %class.sk_sp.2* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #4
  %26 = getelementptr inbounds %class.sk_sp.2, %class.sk_sp.2* %4, i64 0, i32 0
  store %class.SkRuntimeEffect* inttoptr (i64 -6148914691236517206 to %class.SkRuntimeEffect*), %class.SkRuntimeEffect** %26, align 8
  call void @_ZN8SkStringC1EOS_(%class.SkString* nonnull %5, %class.SkString* nonnull dereferenceable(8) %3) #4
  call void @_Z25SkMakeCachedRuntimeEffectPFN15SkRuntimeEffect6ResultE8SkStringES1_(%class.sk_sp.2* nonnull sret %4, void (%"struct.SkRuntimeEffect::Result"*, %class.SkString*)* nonnull @_ZN15SkRuntimeEffect18MakeForColorFilterE8SkString, %class.SkString* nonnull %5) #4
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %5) #4
  %27 = load float, float* %15, align 4
  %28 = fcmp ogt float %27, 0x3FEFFFFFC0000000
  %29 = select i1 %28, float 0x3FEFFFFFC0000000, float %27
  %30 = fcmp ogt float %29, 0xBFEFFFFFC0000000
  %31 = select i1 %30, float %29, float 0xBFEFFFFFC0000000
  %32 = bitcast %struct.Uniforms* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %32) #4
  %33 = getelementptr inbounds %struct.Uniforms, %struct.Uniforms* %6, i64 0, i32 0
  %34 = getelementptr inbounds %struct.Uniforms, %struct.Uniforms* %6, i64 0, i32 1
  %35 = getelementptr inbounds %struct.Uniforms, %struct.Uniforms* %6, i64 0, i32 2
  %36 = getelementptr inbounds %struct.SkHighContrastConfig, %struct.SkHighContrastConfig* %1, i64 0, i32 0
  %37 = load i8, i8* %36, align 4, !range !2
  %38 = icmp eq i8 %37, 0
  %39 = select i1 %38, float 0.000000e+00, float 1.000000e+00
  store float %39, float* %33, align 4
  %40 = load i32, i32* %11, align 4
  %41 = sitofp i32 %40 to float
  store float %41, float* %34, align 4
  %42 = fadd float %31, 1.000000e+00
  %43 = fsub float 1.000000e+00, %31
  %44 = fdiv float %42, %43
  store float %44, float* %35, align 4
  %45 = bitcast %struct.skcms_TransferFunction* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 28, i8* nonnull %45) #4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %45, i8* align 4 bitcast (%struct.skcms_TransferFunction* @__const._ZN20SkHighContrastFilter4MakeERK20SkHighContrastConfig.linear to i8*), i64 28, i1 false)
  %46 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %46) #4
  store i32 3, i32* %8, align 4
  %47 = load %class.SkRuntimeEffect*, %class.SkRuntimeEffect** %26, align 8
  call void @_ZN6SkData12MakeWithCopyEPKvm(%class.sk_sp.40* nonnull sret %10, i8* nonnull %32, i64 12) #4
  call void @_ZNK15SkRuntimeEffect15makeColorFilterE5sk_spI6SkDataE(%class.sk_sp* nonnull sret %9, %class.SkRuntimeEffect* %47, %class.sk_sp.40* nonnull %10) #4
  call void @_ZN14SkColorFilters17WithWorkingFormatE5sk_spI13SkColorFilterEPK22skcms_TransferFunctionPK15skcms_Matrix3x3PK11SkAlphaType(%class.sk_sp* sret %0, %class.sk_sp* nonnull %9, %struct.skcms_TransferFunction* nonnull %7, %struct.skcms_Matrix3x3* null, i32* nonnull %8) #4
  %48 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %9, i64 0, i32 0
  %49 = load %class.SkColorFilter*, %class.SkColorFilter** %48, align 8
  %50 = icmp eq %class.SkColorFilter* %49, null
  br i1 %50, label %61, label %51

51:                                               ; preds = %22
  %52 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %49, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = atomicrmw add i32* %52, i32 -1 acq_rel
  %54 = icmp eq i32 %53, 1
  br i1 %54, label %55, label %61

55:                                               ; preds = %51
  %56 = bitcast %class.SkColorFilter* %49 to %class.SkRefCntBase*
  %57 = bitcast %class.SkColorFilter* %49 to void (%class.SkRefCntBase*)***
  %58 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %57, align 8
  %59 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %58, i64 2
  %60 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %59, align 8
  call void %60(%class.SkRefCntBase* nonnull %56) #4
  br label %61

61:                                               ; preds = %22, %51, %55
  %62 = getelementptr inbounds %class.sk_sp.40, %class.sk_sp.40* %10, i64 0, i32 0
  %63 = load %class.SkData*, %class.SkData** %62, align 8
  %64 = icmp eq %class.SkData* %63, null
  br i1 %64, label %71, label %65

65:                                               ; preds = %61
  %66 = getelementptr inbounds %class.SkData, %class.SkData* %63, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = atomicrmw add i32* %66, i32 -1 acq_rel
  %68 = icmp eq i32 %67, 1
  br i1 %68, label %69, label %71

69:                                               ; preds = %65
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %63) #4
  %70 = bitcast %class.SkData* %63 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %70) #4
  br label %71

71:                                               ; preds = %61, %65, %69
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %46) #4
  call void @llvm.lifetime.end.p0i8(i64 28, i8* nonnull %45) #4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %32) #4
  %72 = load %class.SkRuntimeEffect*, %class.SkRuntimeEffect** %26, align 8
  %73 = icmp eq %class.SkRuntimeEffect* %72, null
  br i1 %73, label %84, label %74

74:                                               ; preds = %71
  %75 = getelementptr inbounds %class.SkRuntimeEffect, %class.SkRuntimeEffect* %72, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = atomicrmw add i32* %75, i32 -1 acq_rel
  %77 = icmp eq i32 %76, 1
  br i1 %77, label %78, label %84

78:                                               ; preds = %74
  %79 = bitcast %class.SkRuntimeEffect* %72 to %class.SkRefCntBase*
  %80 = bitcast %class.SkRuntimeEffect* %72 to void (%class.SkRefCntBase*)***
  %81 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %80, align 8
  %82 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %81, i64 2
  %83 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %82, align 8
  call void %83(%class.SkRefCntBase* nonnull %79) #4
  br label %84

84:                                               ; preds = %71, %74, %78
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #4
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %3) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #4
  br label %85

85:                                               ; preds = %84, %20
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN8SkStringC1EPKc(%class.SkString*, i8*) unnamed_addr #2

declare void @_Z25SkMakeCachedRuntimeEffectPFN15SkRuntimeEffect6ResultE8SkStringES1_(%class.sk_sp.2* sret, void (%"struct.SkRuntimeEffect::Result"*, %class.SkString*)*, %class.SkString*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN15SkRuntimeEffect18MakeForColorFilterE8SkString(%"struct.SkRuntimeEffect::Result"* noalias sret, %class.SkString*) #0 comdat align 2 {
  %3 = alloca %class.SkString, align 8
  %4 = alloca %"struct.SkRuntimeEffect::Options", align 1
  call void @_ZN8SkStringC1EOS_(%class.SkString* nonnull %3, %class.SkString* dereferenceable(8) %1) #4
  %5 = getelementptr inbounds %"struct.SkRuntimeEffect::Options", %"struct.SkRuntimeEffect::Options"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %5) #4
  store i8 0, i8* %5, align 1
  %6 = getelementptr inbounds %"struct.SkRuntimeEffect::Options", %"struct.SkRuntimeEffect::Options"* %4, i64 0, i32 1
  store i8 1, i8* %6, align 1
  call void @_ZN15SkRuntimeEffect18MakeForColorFilterE8SkStringRKNS_7OptionsE(%"struct.SkRuntimeEffect::Result"* sret %0, %class.SkString* nonnull %3, %"struct.SkRuntimeEffect::Options"* nonnull dereferenceable(2) %4) #4
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %5) #4
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %3) #4
  ret void
}

declare void @_ZN8SkStringC1EOS_(%class.SkString*, %class.SkString* dereferenceable(8)) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN8SkStringD1Ev(%class.SkString*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN14SkColorFilters17WithWorkingFormatE5sk_spI13SkColorFilterEPK22skcms_TransferFunctionPK15skcms_Matrix3x3PK11SkAlphaType(%class.sk_sp* sret, %class.sk_sp*, %struct.skcms_TransferFunction*, %struct.skcms_Matrix3x3*, i32*) local_unnamed_addr #2

declare void @_ZNK15SkRuntimeEffect15makeColorFilterE5sk_spI6SkDataE(%class.sk_sp* sret, %class.SkRuntimeEffect*, %class.sk_sp.40*) local_unnamed_addr #2

declare void @_ZN6SkData12MakeWithCopyEPKvm(%class.sk_sp.40* sret, i8*, i64) local_unnamed_addr #2

declare void @_ZN8SkString6insertEmPKc(%class.SkString*, i64, i8*) local_unnamed_addr #2

declare void @_ZN15SkRuntimeEffect18MakeForColorFilterE8SkStringRKNS_7OptionsE(%"struct.SkRuntimeEffect::Result"* sret, %class.SkString*, %"struct.SkRuntimeEffect::Options"* dereferenceable(2)) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN6SkDataD1Ev(%class.SkData*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN6SkDatadlEPv(i8*) local_unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
