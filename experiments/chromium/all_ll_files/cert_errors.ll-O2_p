; ModuleID = '../../net/cert/internal/cert_errors.cc'
source_filename = "../../net/cert/internal/cert_errors.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.net::CertError" = type { i32, i8*, %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.net::CertErrorParams"* }
%"class.net::CertErrorParams" = type { i32 (...)** }
%"class.net::CertErrors" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.net::CertError"*, %"struct.net::CertError"*, %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.net::CertError"* }
%"class.net::CertPathErrors" = type { %"class.std::__1::vector.9", %"class.net::CertErrors" }
%"class.std::__1::vector.9" = type { %"class.std::__1::__vector_base.10" }
%"class.std::__1::__vector_base.10" = type { %"class.net::CertErrors"*, %"class.net::CertErrors"*, %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.net::CertErrors"* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector.49" = type { %"class.std::__1::__vector_base.50" }
%"class.std::__1::__vector_base.50" = type { %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"*, %"class.std::__1::__compressed_pair.51" }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %"class.base::BasicStringPiece"* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::vector.17" = type { %"class.std::__1::__vector_base.18" }
%"class.std::__1::__vector_base.18" = type { %class.scoped_refptr*, %class.scoped_refptr*, %"class.std::__1::__compressed_pair.81" }
%class.scoped_refptr = type { %"class.net::ParsedCertificate"* }
%"class.net::ParsedCertificate" = type { %"class.base::RefCountedThreadSafe", %"class.std::__1::unique_ptr.20", %"class.net::der::Input", %"class.net::der::Input", %"class.net::der::Input", %"class.net::der::BitString", %"struct.net::ParsedTbsCertificate", %"class.std::__1::unique_ptr.24", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, %"struct.net::ParsedBasicConstraints", i8, [3 x i8], %"class.net::der::BitString", i8, %"class.std::__1::vector.30", %"struct.net::ParsedExtension", %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.43", i8, [7 x i8], %"struct.net::ParsedExtension", %"class.std::__1::vector.49", %"class.std::__1::vector.49", i8, %"class.std::__1::vector.30", i8, %"struct.net::ParsedPolicyConstraints", i8, %"class.std::__1::vector.56", i8, i8, %"class.absl::optional", %"class.absl::optional.64", %"class.std::__1::map" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.19" }
%"struct.std::__1::__atomic_base.19" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::unique_ptr.20" = type { %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %struct.crypto_buffer_st* }
%struct.crypto_buffer_st = type opaque
%"class.net::der::Input" = type { i8*, i64 }
%"struct.net::ParsedTbsCertificate" = type { i32, %"class.net::der::Input", %"class.net::der::Input", %"class.net::der::Input", %"struct.net::der::GeneralizedTime", %"struct.net::der::GeneralizedTime", %"class.net::der::Input", %"class.net::der::Input", i8, [7 x i8], %"class.net::der::BitString", i8, [7 x i8], %"class.net::der::BitString", i8, %"class.net::der::Input" }
%"struct.net::der::GeneralizedTime" = type { i16, i8, i8, i8, i8, i8 }
%"class.std::__1::unique_ptr.24" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"class.net::SignatureAlgorithm"* }
%"class.net::SignatureAlgorithm" = type opaque
%"struct.net::ParsedBasicConstraints" = type { i8, i8, i8 }
%"class.net::der::BitString" = type <{ %"class.net::der::Input", i8, [7 x i8] }>
%"class.std::__1::unique_ptr.37" = type { %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"struct.net::GeneralNames"* }
%"struct.net::GeneralNames" = type opaque
%"class.std::__1::unique_ptr.43" = type { %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %"class.net::NameConstraints"* }
%"class.net::NameConstraints" = type opaque
%"struct.net::ParsedExtension" = type <{ %"class.net::der::Input", %"class.net::der::Input", i8, [7 x i8] }>
%"class.std::__1::vector.30" = type { %"class.std::__1::__vector_base.31" }
%"class.std::__1::__vector_base.31" = type { %"class.net::der::Input"*, %"class.net::der::Input"*, %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.net::der::Input"* }
%"struct.net::ParsedPolicyConstraints" = type { i8, i8, i8, i8 }
%"class.std::__1::vector.56" = type { %"class.std::__1::__vector_base.57" }
%"class.std::__1::__vector_base.57" = type { %"struct.net::ParsedPolicyMapping"*, %"struct.net::ParsedPolicyMapping"*, %"class.std::__1::__compressed_pair.58" }
%"struct.net::ParsedPolicyMapping" = type { %"class.net::der::Input", %"class.net::der::Input" }
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"struct.std::__1::__compressed_pair_elem.59" = type { %"struct.net::ParsedPolicyMapping"* }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.63 }
%union.anon.63 = type { %"struct.net::ParsedAuthorityKeyIdentifier" }
%"struct.net::ParsedAuthorityKeyIdentifier" = type { %"class.absl::optional.64", %"class.absl::optional.64", %"class.absl::optional.64" }
%"class.absl::optional.64" = type { %"class.absl::optional_internal::optional_data.65" }
%"class.absl::optional_internal::optional_data.65" = type { %"class.absl::optional_internal::optional_data_base.66" }
%"class.absl::optional_internal::optional_data_base.66" = type { %"class.absl::optional_internal::optional_data_dtor_base.67" }
%"class.absl::optional_internal::optional_data_dtor_base.67" = type { i8, %union.anon.68 }
%union.anon.68 = type { %"class.net::der::Input" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.73", %"class.std::__1::__compressed_pair.78" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.std::__1::__compressed_pair_elem.74" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.79" }
%"struct.std::__1::__compressed_pair_elem.79" = type { i64 }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %class.scoped_refptr* }
%"class.std::__1::vector.86" = type { %"class.std::__1::__vector_base.87" }
%"class.std::__1::__vector_base.87" = type { %"class.std::__1::vector.88"*, %"class.std::__1::vector.88"*, %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::vector.88" = type { %"class.std::__1::__vector_base.89" }
%"class.std::__1::__vector_base.89" = type { %"struct.net::X509NameAttribute"*, %"struct.net::X509NameAttribute"*, %"class.std::__1::__compressed_pair.90" }
%"struct.net::X509NameAttribute" = type { %"class.net::der::Input", i32, %"class.net::der::Input" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"struct.std::__1::__compressed_pair_elem.91" = type { %"struct.net::X509NameAttribute"* }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { %"class.std::__1::vector.88"* }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__16vectorIN3net9CertErrorENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_ = comdat any

$_ZNSt3__16vectorIN3net10CertErrorsENS_9allocatorIS2_EEE8__appendEm = comdat any

@.str = private unnamed_addr constant [10 x i8] c"WARNING: \00", align 1
@.str.1 = private unnamed_addr constant [8 x i8] c"ERROR: \00", align 1
@.str.2 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.4 = private unnamed_addr constant [3 x i8] c" (\00", align 1
@.str.5 = private unnamed_addr constant [2 x i8] c")\00", align 1
@.str.6 = private unnamed_addr constant [32 x i8] c"----- Certificate i=%d%s -----\0A\00", align 1
@.str.7 = private unnamed_addr constant [53 x i8] c"----- Other errors (not certificate specific) -----\0A\00", align 1

@_ZN3net9CertErrorC1Ev = hidden unnamed_addr alias void (%"struct.net::CertError"*), void (%"struct.net::CertError"*)* @_ZN3net9CertErrorC2Ev
@_ZN3net9CertErrorC1ENS0_8SeverityEPKvNSt3__110unique_ptrINS_15CertErrorParamsENS4_14default_deleteIS6_EEEE = hidden unnamed_addr alias void (%"struct.net::CertError"*, i32, i8*, %"class.net::CertErrorParams"*), void (%"struct.net::CertError"*, i32, i8*, %"class.net::CertErrorParams"*)* @_ZN3net9CertErrorC2ENS0_8SeverityEPKvNSt3__110unique_ptrINS_15CertErrorParamsENS4_14default_deleteIS6_EEEE
@_ZN3net9CertErrorC1EOS0_ = hidden unnamed_addr alias void (%"struct.net::CertError"*, %"struct.net::CertError"*), void (%"struct.net::CertError"*, %"struct.net::CertError"*)* @_ZN3net9CertErrorC2EOS0_
@_ZN3net9CertErrorD1Ev = hidden unnamed_addr alias void (%"struct.net::CertError"*), void (%"struct.net::CertError"*)* @_ZN3net9CertErrorD2Ev
@_ZN3net10CertErrorsC1Ev = hidden unnamed_addr alias void (%"class.net::CertErrors"*), void (%"class.net::CertErrors"*)* @_ZN3net10CertErrorsC2Ev
@_ZN3net10CertErrorsC1EOS0_ = hidden unnamed_addr alias void (%"class.net::CertErrors"*, %"class.net::CertErrors"*), void (%"class.net::CertErrors"*, %"class.net::CertErrors"*)* @_ZN3net10CertErrorsC2EOS0_
@_ZN3net10CertErrorsD1Ev = hidden unnamed_addr alias void (%"class.net::CertErrors"*), void (%"class.net::CertErrors"*)* @_ZN3net10CertErrorsD2Ev
@_ZN3net14CertPathErrorsC1Ev = hidden unnamed_addr alias void (%"class.net::CertPathErrors"*), void (%"class.net::CertPathErrors"*)* @_ZN3net14CertPathErrorsC2Ev
@_ZN3net14CertPathErrorsC1EOS0_ = hidden unnamed_addr alias void (%"class.net::CertPathErrors"*, %"class.net::CertPathErrors"*), void (%"class.net::CertPathErrors"*, %"class.net::CertPathErrors"*)* @_ZN3net14CertPathErrorsC2EOS0_
@_ZN3net14CertPathErrorsD1Ev = hidden unnamed_addr alias void (%"class.net::CertPathErrors"*), void (%"class.net::CertPathErrors"*)* @_ZN3net14CertPathErrorsD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3net9CertErrorC2Ev(%"struct.net::CertError"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.net::CertError", %"struct.net::CertError"* %0, i64 0, i32 2
  %3 = bitcast %"class.std::__1::unique_ptr"* %2 to i64*
  store i64 0, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net9CertErrorC2ENS0_8SeverityEPKvNSt3__110unique_ptrINS_15CertErrorParamsENS4_14default_deleteIS6_EEEE(%"struct.net::CertError"* nocapture, i32, i8*, %"class.net::CertErrorParams"*) unnamed_addr #1 align 2 {
  %5 = ptrtoint %"class.net::CertErrorParams"* %3 to i64
  %6 = getelementptr inbounds %"struct.net::CertError", %"struct.net::CertError"* %0, i64 0, i32 0
  store i32 %1, i32* %6, align 8
  %7 = getelementptr inbounds %"struct.net::CertError", %"struct.net::CertError"* %0, i64 0, i32 1
  store i8* %2, i8** %7, align 8
  %8 = getelementptr inbounds %"struct.net::CertError", %"struct.net::CertError"* %0, i64 0, i32 2
  %9 = bitcast %"class.std::__1::unique_ptr"* %8 to i64*
  store i64 %5, i64* %9, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net9CertErrorC2EOS0_(%"struct.net::CertError"* nocapture, %"struct.net::CertError"* nocapture dereferenceable(24)) unnamed_addr #1 align 2 {
  %3 = bitcast %"struct.net::CertError"* %0 to i8*
  %4 = bitcast %"struct.net::CertError"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 16, i1 false)
  %5 = getelementptr inbounds %"struct.net::CertError", %"struct.net::CertError"* %0, i64 0, i32 2
  %6 = getelementptr inbounds %"struct.net::CertError", %"struct.net::CertError"* %1, i64 0, i32 2
  %7 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %6, i64 0, i32 0, i32 0, i32 0
  %8 = bitcast %"class.std::__1::unique_ptr"* %6 to i64*
  %9 = load i64, i64* %8, align 8
  store %"class.net::CertErrorParams"* null, %"class.net::CertErrorParams"** %7, align 8
  %10 = bitcast %"class.std::__1::unique_ptr"* %5 to i64*
  store i64 %9, i64* %10, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(24) %"struct.net::CertError"* @_ZN3net9CertErroraSEOS0_(%"struct.net::CertError"* returned, %"struct.net::CertError"* nocapture dereferenceable(24)) local_unnamed_addr #1 align 2 {
  %3 = bitcast %"struct.net::CertError"* %0 to i8*
  %4 = bitcast %"struct.net::CertError"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 16, i1 false)
  %5 = getelementptr inbounds %"struct.net::CertError", %"struct.net::CertError"* %0, i64 0, i32 2
  %6 = getelementptr inbounds %"struct.net::CertError", %"struct.net::CertError"* %1, i64 0, i32 2
  %7 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %6, i64 0, i32 0, i32 0, i32 0
  %8 = bitcast %"class.std::__1::unique_ptr"* %6 to i64*
  %9 = load i64, i64* %8, align 8
  store %"class.net::CertErrorParams"* null, %"class.net::CertErrorParams"** %7, align 8
  %10 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %5, i64 0, i32 0, i32 0, i32 0
  %11 = load %"class.net::CertErrorParams"*, %"class.net::CertErrorParams"** %10, align 8
  %12 = bitcast %"class.std::__1::unique_ptr"* %5 to i64*
  store i64 %9, i64* %12, align 8
  %13 = icmp eq %"class.net::CertErrorParams"* %11, null
  br i1 %13, label %19, label %14

14:                                               ; preds = %2
  %15 = bitcast %"class.net::CertErrorParams"* %11 to void (%"class.net::CertErrorParams"*)***
  %16 = load void (%"class.net::CertErrorParams"*)**, void (%"class.net::CertErrorParams"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.net::CertErrorParams"*)*, void (%"class.net::CertErrorParams"*)** %16, i64 1
  %18 = load void (%"class.net::CertErrorParams"*)*, void (%"class.net::CertErrorParams"*)** %17, align 8
  tail call void %18(%"class.net::CertErrorParams"* nonnull %11) #11
  br label %19

19:                                               ; preds = %2, %14
  ret %"struct.net::CertError"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net9CertErrorD2Ev(%"struct.net::CertError"* nocapture) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"struct.net::CertError", %"struct.net::CertError"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %3 = load %"class.net::CertErrorParams"*, %"class.net::CertErrorParams"** %2, align 8
  store %"class.net::CertErrorParams"* null, %"class.net::CertErrorParams"** %2, align 8
  %4 = icmp eq %"class.net::CertErrorParams"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.net::CertErrorParams"* %3 to void (%"class.net::CertErrorParams"*)***
  %7 = load void (%"class.net::CertErrorParams"*)**, void (%"class.net::CertErrorParams"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.net::CertErrorParams"*)*, void (%"class.net::CertErrorParams"*)** %7, i64 1
  %9 = load void (%"class.net::CertErrorParams"*)*, void (%"class.net::CertErrorParams"*)** %8, align 8
  tail call void %9(%"class.net::CertErrorParams"* nonnull %3) #11
  br label %10

10:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3net9CertError13ToDebugStringEv(%"class.std::__1::basic_string"* noalias sret, %"struct.net::CertError"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.std::__1::vector.49", align 8
  %4 = alloca [3 x %"class.base::BasicStringPiece"], align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false) #11
  %8 = getelementptr inbounds %"struct.net::CertError", %"struct.net::CertError"* %1, i64 0, i32 0
  %9 = load i32, i32* %8, align 8
  switch i32 %9, label %14 [
    i32 1, label %11
    i32 0, label %10
  ]

10:                                               ; preds = %2
  br label %11

11:                                               ; preds = %2, %10
  %12 = phi i8* [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i64 0, i64 0), %10 ], [ getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), %2 ]
  %13 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %0, i8* %12) #11
  br label %14

14:                                               ; preds = %11, %2
  %15 = getelementptr inbounds %"struct.net::CertError", %"struct.net::CertError"* %1, i64 0, i32 1
  %16 = load i8*, i8** %15, align 8
  %17 = tail call i8* @_ZN3net24CertErrorIdToDebugStringEPKv(i8* %16) #11
  %18 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %0, i8* %17) #11
  %19 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #11
  %20 = getelementptr inbounds %"struct.net::CertError", %"struct.net::CertError"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %21 = load %"class.net::CertErrorParams"*, %"class.net::CertErrorParams"** %20, align 8
  %22 = icmp eq %"class.net::CertErrorParams"* %21, null
  br i1 %22, label %98, label %23

23:                                               ; preds = %14
  %24 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #11
  %25 = bitcast %"class.net::CertErrorParams"* %21 to void (%"class.std::__1::basic_string"*, %"class.net::CertErrorParams"*)***
  %26 = load void (%"class.std::__1::basic_string"*, %"class.net::CertErrorParams"*)**, void (%"class.std::__1::basic_string"*, %"class.net::CertErrorParams"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.std::__1::basic_string"*, %"class.net::CertErrorParams"*)*, void (%"class.std::__1::basic_string"*, %"class.net::CertErrorParams"*)** %26, i64 2
  %28 = load void (%"class.std::__1::basic_string"*, %"class.net::CertErrorParams"*)*, void (%"class.std::__1::basic_string"*, %"class.net::CertErrorParams"*)** %27, align 8
  call void %28(%"class.std::__1::basic_string"* nonnull sret %5, %"class.net::CertErrorParams"* nonnull %21) #11
  %29 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #11
  %30 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  store i8 2, i8* %31, align 1
  %32 = bitcast %"class.std::__1::basic_string"* %6 to i16*
  store i16 8224, i16* %32, align 8
  %33 = getelementptr inbounds i8, i8* %29, i64 2
  store i8 0, i8* %33, align 2
  %34 = bitcast %"class.std::__1::vector.49"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %34) #11
  %35 = getelementptr inbounds %"class.std::__1::vector.49", %"class.std::__1::vector.49"* %3, i64 0, i32 0, i32 0
  %36 = getelementptr inbounds %"class.std::__1::vector.49", %"class.std::__1::vector.49"* %3, i64 0, i32 0, i32 1
  %37 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false) #11
  %39 = load i8, i8* %38, align 1
  %40 = icmp slt i8 %39, 0
  %41 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load i8*, i8** %41, align 8
  %43 = select i1 %40, i8* %42, i8* %24
  %44 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %45 = load i64, i64* %44, align 8
  %46 = zext i8 %39 to i64
  %47 = select i1 %40, i64 %45, i64 %46
  call void @_ZN4base27SplitStringPieceUsingSubstrENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_18WhitespaceHandlingENS_11SplitResultE(%"class.std::__1::vector.49"* nonnull sret %3, i8* %43, i64 %47, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0), i64 1, i32 0, i32 0) #11
  %48 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %35, align 8
  %49 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %36, align 8
  %50 = icmp eq %"class.base::BasicStringPiece"* %48, %49
  br i1 %50, label %64, label %51

51:                                               ; preds = %23
  %52 = bitcast [3 x %"class.base::BasicStringPiece"]* %4 to i8*
  %53 = getelementptr inbounds [3 x %"class.base::BasicStringPiece"], [3 x %"class.base::BasicStringPiece"]* %4, i64 0, i64 0
  %54 = getelementptr inbounds [3 x %"class.base::BasicStringPiece"], [3 x %"class.base::BasicStringPiece"]* %4, i64 0, i64 0, i32 0
  %55 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = getelementptr inbounds [3 x %"class.base::BasicStringPiece"], [3 x %"class.base::BasicStringPiece"]* %4, i64 0, i64 0, i32 1
  %57 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %58 = getelementptr inbounds [3 x %"class.base::BasicStringPiece"], [3 x %"class.base::BasicStringPiece"]* %4, i64 0, i64 1
  %59 = bitcast %"class.base::BasicStringPiece"* %58 to i8*
  %60 = getelementptr inbounds [3 x %"class.base::BasicStringPiece"], [3 x %"class.base::BasicStringPiece"]* %4, i64 0, i64 2, i32 0
  %61 = getelementptr inbounds [3 x %"class.base::BasicStringPiece"], [3 x %"class.base::BasicStringPiece"]* %4, i64 0, i64 2, i32 1
  br label %71

62:                                               ; preds = %71
  %63 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %35, align 8
  br label %64

64:                                               ; preds = %62, %23
  %65 = phi %"class.base::BasicStringPiece"* [ %63, %62 ], [ %48, %23 ]
  %66 = icmp eq %"class.base::BasicStringPiece"* %65, null
  br i1 %66, label %86, label %67

67:                                               ; preds = %64
  %68 = ptrtoint %"class.base::BasicStringPiece"* %65 to i64
  %69 = bitcast %"class.base::BasicStringPiece"** %36 to i64*
  store i64 %68, i64* %69, align 8
  %70 = bitcast %"class.base::BasicStringPiece"* %65 to i8*
  call void @_ZdlPv(i8* %70) #12
  br label %86

71:                                               ; preds = %83, %51
  %72 = phi i64 [ undef, %51 ], [ %85, %83 ]
  %73 = phi i8 [ 2, %51 ], [ %84, %83 ]
  %74 = phi %"class.base::BasicStringPiece"* [ %48, %51 ], [ %81, %83 ]
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %52) #11
  %75 = icmp slt i8 %73, 0
  %76 = load i8*, i8** %55, align 8
  %77 = select i1 %75, i8* %76, i8* %29
  store i8* %77, i8** %54, align 8
  %78 = zext i8 %73 to i64
  %79 = select i1 %75, i64 %72, i64 %78
  store i64 %79, i64* %56, align 8
  %80 = bitcast %"class.base::BasicStringPiece"* %74 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %59, i8* align 8 %80, i64 16, i1 false) #11
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0), i8** %60, align 8
  store i64 1, i64* %61, align 8
  call void @_ZN4base9StrAppendEPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEENS_4spanIKNS_16BasicStringPieceIcS3_EELm18446744073709551615EEE(%"class.std::__1::basic_string"* %0, i64 3, %"class.base::BasicStringPiece"* nonnull %53) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %52) #11
  %81 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %74, i64 1
  %82 = icmp eq %"class.base::BasicStringPiece"* %81, %49
  br i1 %82, label %62, label %83

83:                                               ; preds = %71
  %84 = load i8, i8* %31, align 1
  %85 = load i64, i64* %57, align 8
  br label %71

86:                                               ; preds = %64, %67
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %34) #11
  %87 = load i8, i8* %31, align 1
  %88 = icmp slt i8 %87, 0
  br i1 %88, label %89, label %92

89:                                               ; preds = %86
  %90 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = load i8*, i8** %90, align 8
  call void @_ZdlPv(i8* %91) #12
  br label %92

92:                                               ; preds = %86, %89
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #11
  %93 = load i8, i8* %38, align 1
  %94 = icmp slt i8 %93, 0
  br i1 %94, label %95, label %97

95:                                               ; preds = %92
  %96 = load i8*, i8** %41, align 8
  call void @_ZdlPv(i8* %96) #12
  br label %97

97:                                               ; preds = %92, %95
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #11
  br label %98

98:                                               ; preds = %14, %97
  ret void
}

declare i8* @_ZN3net24CertErrorIdToDebugStringEPKv(i8*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net10CertErrorsC2Ev(%"class.net::CertErrors"* nocapture) unnamed_addr #1 align 2 {
  %2 = bitcast %"class.net::CertErrors"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 24, i1 false) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net10CertErrorsC2EOS0_(%"class.net::CertErrors"* nocapture, %"class.net::CertErrors"* nocapture dereferenceable(24)) unnamed_addr #1 align 2 {
  %3 = bitcast %"class.net::CertErrors"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false) #11
  %4 = bitcast %"class.net::CertErrors"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.net::CertErrors"* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"class.net::CertErrors", %"class.net::CertErrors"* %1, i64 0, i32 0, i32 0, i32 1
  %8 = bitcast %"struct.net::CertError"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.net::CertErrors", %"class.net::CertErrors"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = bitcast %"struct.net::CertError"** %10 to i64*
  store i64 %9, i64* %11, align 8
  %12 = getelementptr inbounds %"class.net::CertErrors", %"class.net::CertErrors"* %1, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %13 = bitcast %"struct.net::CertError"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.net::CertErrors", %"class.net::CertErrors"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.net::CertError"** %15 to i64*
  store i64 %14, i64* %16, align 8
  %17 = bitcast %"class.net::CertErrors"* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 24, i1 false) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(24) %"class.net::CertErrors"* @_ZN3net10CertErrorsaSEOS0_(%"class.net::CertErrors"* returned, %"class.net::CertErrors"* nocapture dereferenceable(24)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.net::CertErrors", %"class.net::CertErrors"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"struct.net::CertError"*, %"struct.net::CertError"** %3, align 8
  %5 = icmp eq %"struct.net::CertError"* %4, null
  br i1 %5, label %30, label %6

6:                                                ; preds = %2
  %7 = bitcast %"struct.net::CertError"* %4 to i8*
  %8 = getelementptr inbounds %"class.net::CertErrors", %"class.net::CertErrors"* %0, i64 0, i32 0, i32 0, i32 1
  %9 = load %"struct.net::CertError"*, %"struct.net::CertError"** %8, align 8
  %10 = icmp eq %"struct.net::CertError"* %9, %4
  br i1 %10, label %27, label %11

11:                                               ; preds = %6, %22
  %12 = phi %"struct.net::CertError"* [ %13, %22 ], [ %9, %6 ]
  %13 = getelementptr inbounds %"struct.net::CertError", %"struct.net::CertError"* %12, i64 -1
  %14 = getelementptr inbounds %"struct.net::CertError", %"struct.net::CertError"* %12, i64 -1, i32 2, i32 0, i32 0, i32 0
  %15 = load %"class.net::CertErrorParams"*, %"class.net::CertErrorParams"** %14, align 8
  store %"class.net::CertErrorParams"* null, %"class.net::CertErrorParams"** %14, align 8
  %16 = icmp eq %"class.net::CertErrorParams"* %15, null
  br i1 %16, label %22, label %17

17:                                               ; preds = %11
  %18 = bitcast %"class.net::CertErrorParams"* %15 to void (%"class.net::CertErrorParams"*)***
  %19 = load void (%"class.net::CertErrorParams"*)**, void (%"class.net::CertErrorParams"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.net::CertErrorParams"*)*, void (%"class.net::CertErrorParams"*)** %19, i64 1
  %21 = load void (%"class.net::CertErrorParams"*)*, void (%"class.net::CertErrorParams"*)** %20, align 8
  tail call void %21(%"class.net::CertErrorParams"* nonnull %15) #11
  br label %22

22:                                               ; preds = %17, %11
  %23 = icmp eq %"struct.net::CertError"* %13, %4
  br i1 %23, label %24, label %11

24:                                               ; preds = %22
  %25 = bitcast %"class.net::CertErrors"* %0 to i8**
  %26 = load i8*, i8** %25, align 8
  br label %27

27:                                               ; preds = %24, %6
  %28 = phi i8* [ %26, %24 ], [ %7, %6 ]
  store %"struct.net::CertError"* %4, %"struct.net::CertError"** %8, align 8
  tail call void @_ZdlPv(i8* %28) #12
  %29 = bitcast %"class.net::CertErrors"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 24, i1 false) #11
  br label %30

30:                                               ; preds = %2, %27
  %31 = bitcast %"class.net::CertErrors"* %1 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast %"class.net::CertErrors"* %0 to i64*
  store i64 %32, i64* %33, align 8
  %34 = getelementptr inbounds %"class.net::CertErrors", %"class.net::CertErrors"* %1, i64 0, i32 0, i32 0, i32 1
  %35 = bitcast %"struct.net::CertError"** %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = getelementptr inbounds %"class.net::CertErrors", %"class.net::CertErrors"* %0, i64 0, i32 0, i32 0, i32 1
  %38 = bitcast %"struct.net::CertError"** %37 to i64*
  store i64 %36, i64* %38, align 8
  %39 = getelementptr inbounds %"class.net::CertErrors", %"class.net::CertErrors"* %1, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %40 = bitcast %"struct.net::CertError"** %39 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = getelementptr inbounds %"class.net::CertErrors", %"class.net::CertErrors"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %43 = bitcast %"struct.net::CertError"** %42 to i64*
  store i64 %41, i64* %43, align 8
  %44 = bitcast %"class.net::CertErrors"* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %44, i8 0, i64 24, i1 false) #11
  ret %"class.net::CertErrors"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net10CertErrorsD2Ev(%"class.net::CertErrors"* nocapture) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.net::CertErrors", %"class.net::CertErrors"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load %"struct.net::CertError"*, %"struct.net::CertError"** %2, align 8
  %4 = icmp eq %"struct.net::CertError"* %3, null
  br i1 %4, label %28, label %5

5:                                                ; preds = %1
  %6 = bitcast %"struct.net::CertError"* %3 to i8*
  %7 = getelementptr inbounds %"class.net::CertErrors", %"class.net::CertErrors"* %0, i64 0, i32 0, i32 0, i32 1
  %8 = load %"struct.net::CertError"*, %"struct.net::CertError"** %7, align 8
  %9 = icmp eq %"struct.net::CertError"* %8, %3
  br i1 %9, label %26, label %10

10:                                               ; preds = %5, %21
  %11 = phi %"struct.net::CertError"* [ %12, %21 ], [ %8, %5 ]
  %12 = getelementptr inbounds %"struct.net::CertError", %"struct.net::CertError"* %11, i64 -1
  %13 = getelementptr inbounds %"struct.net::CertError", %"struct.net::CertError"* %11, i64 -1, i32 2, i32 0, i32 0, i32 0
  %14 = load %"class.net::CertErrorParams"*, %"class.net::CertErrorParams"** %13, align 8
  store %"class.net::CertErrorParams"* null, %"class.net::CertErrorParams"** %13, align 8
  %15 = icmp eq %"class.net::CertErrorParams"* %14, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.net::CertErrorParams"* %14 to void (%"class.net::CertErrorParams"*)***
  %18 = load void (%"class.net::CertErrorParams"*)**, void (%"class.net::CertErrorParams"*)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.net::CertErrorParams"*)*, void (%"class.net::CertErrorParams"*)** %18, i64 1
  %20 = load void (%"class.net::CertErrorParams"*)*, void (%"class.net::CertErrorParams"*)** %19, align 8
  tail call void %20(%"class.net::CertErrorParams"* nonnull %14) #11
  br label %21

21:                                               ; preds = %16, %10
  %22 = icmp eq %"struct.net::CertError"* %12, %3
  br i1 %22, label %23, label %10

23:                                               ; preds = %21
  %24 = bitcast %"class.net::CertErrors"* %0 to i8**
  %25 = load i8*, i8** %24, align 8
  br label %26

26:                                               ; preds = %23, %5
  %27 = phi i8* [ %25, %23 ], [ %6, %5 ]
  store %"struct.net::CertError"* %3, %"struct.net::CertError"** %7, align 8
  tail call void @_ZdlPv(i8* %27) #12
  br label %28

28:                                               ; preds = %1, %26
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net10CertErrors3AddENS_9CertError8SeverityEPKvNSt3__110unique_ptrINS_15CertErrorParamsENS5_14default_deleteIS7_EEEE(%"class.net::CertErrors"*, i32, i8*, %"class.net::CertErrorParams"*) local_unnamed_addr #1 align 2 {
  %5 = alloca %"struct.net::CertError", align 8
  %6 = ptrtoint %"class.net::CertErrorParams"* %3 to i64
  %7 = bitcast %"struct.net::CertError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #11
  %8 = getelementptr inbounds %"struct.net::CertError", %"struct.net::CertError"* %5, i64 0, i32 0
  store i32 %1, i32* %8, align 8
  %9 = getelementptr inbounds %"struct.net::CertError", %"struct.net::CertError"* %5, i64 0, i32 1
  store i8* %2, i8** %9, align 8
  %10 = getelementptr inbounds %"struct.net::CertError", %"struct.net::CertError"* %5, i64 0, i32 2
  %11 = bitcast %"class.std::__1::unique_ptr"* %10 to i64*
  store i64 %6, i64* %11, align 8
  %12 = getelementptr inbounds %"class.net::CertErrors", %"class.net::CertErrors"* %0, i64 0, i32 0, i32 0, i32 1
  %13 = load %"struct.net::CertError"*, %"struct.net::CertError"** %12, align 8
  %14 = getelementptr inbounds %"class.net::CertErrors", %"class.net::CertErrors"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %15 = load %"struct.net::CertError"*, %"struct.net::CertError"** %14, align 8
  %16 = icmp ult %"struct.net::CertError"* %13, %15
  br i1 %16, label %17, label %26

17:                                               ; preds = %4
  %18 = bitcast %"struct.net::CertError"* %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* nonnull align 8 %7, i64 16, i1 false) #11
  %19 = getelementptr inbounds %"struct.net::CertError", %"struct.net::CertError"* %13, i64 0, i32 2
  %20 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %10, i64 0, i32 0, i32 0, i32 0
  %21 = load i64, i64* %11, align 8
  store %"class.net::CertErrorParams"* null, %"class.net::CertErrorParams"** %20, align 8
  %22 = bitcast %"class.std::__1::unique_ptr"* %19 to i64*
  store i64 %21, i64* %22, align 8
  %23 = getelementptr inbounds %"struct.net::CertError", %"struct.net::CertError"* %13, i64 1
  %24 = ptrtoint %"struct.net::CertError"* %23 to i64
  %25 = bitcast %"struct.net::CertError"** %12 to i64*
  store i64 %24, i64* %25, align 8
  br label %28

26:                                               ; preds = %4
  %27 = getelementptr inbounds %"class.net::CertErrors", %"class.net::CertErrors"* %0, i64 0, i32 0
  call void @_ZNSt3__16vectorIN3net9CertErrorENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector"* %27, %"struct.net::CertError"* nonnull dereferenceable(24) %5) #11
  br label %28

28:                                               ; preds = %17, %26
  %29 = getelementptr inbounds %"struct.net::CertError", %"struct.net::CertError"* %5, i64 0, i32 2, i32 0, i32 0, i32 0
  %30 = load %"class.net::CertErrorParams"*, %"class.net::CertErrorParams"** %29, align 8
  store %"class.net::CertErrorParams"* null, %"class.net::CertErrorParams"** %29, align 8
  %31 = icmp eq %"class.net::CertErrorParams"* %30, null
  br i1 %31, label %37, label %32

32:                                               ; preds = %28
  %33 = bitcast %"class.net::CertErrorParams"* %30 to void (%"class.net::CertErrorParams"*)***
  %34 = load void (%"class.net::CertErrorParams"*)**, void (%"class.net::CertErrorParams"*)*** %33, align 8
  %35 = getelementptr inbounds void (%"class.net::CertErrorParams"*)*, void (%"class.net::CertErrorParams"*)** %34, i64 1
  %36 = load void (%"class.net::CertErrorParams"*)*, void (%"class.net::CertErrorParams"*)** %35, align 8
  call void %36(%"class.net::CertErrorParams"* nonnull %30) #11
  br label %37

37:                                               ; preds = %32, %28
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net10CertErrors8AddErrorEPKvNSt3__110unique_ptrINS_15CertErrorParamsENS3_14default_deleteIS5_EEEE(%"class.net::CertErrors"*, i8*, %"class.net::CertErrorParams"*) local_unnamed_addr #1 align 2 {
  %4 = alloca %"struct.net::CertError", align 8
  %5 = ptrtoint %"class.net::CertErrorParams"* %2 to i64
  %6 = bitcast %"struct.net::CertError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"struct.net::CertError", %"struct.net::CertError"* %4, i64 0, i32 0
  store i32 0, i32* %7, align 8
  %8 = getelementptr inbounds %"struct.net::CertError", %"struct.net::CertError"* %4, i64 0, i32 1
  store i8* %1, i8** %8, align 8
  %9 = getelementptr inbounds %"struct.net::CertError", %"struct.net::CertError"* %4, i64 0, i32 2
  %10 = bitcast %"class.std::__1::unique_ptr"* %9 to i64*
  store i64 %5, i64* %10, align 8
  %11 = getelementptr inbounds %"class.net::CertErrors", %"class.net::CertErrors"* %0, i64 0, i32 0, i32 0, i32 1
  %12 = load %"struct.net::CertError"*, %"struct.net::CertError"** %11, align 8
  %13 = getelementptr inbounds %"class.net::CertErrors", %"class.net::CertErrors"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %14 = load %"struct.net::CertError"*, %"struct.net::CertError"** %13, align 8
  %15 = icmp ult %"struct.net::CertError"* %12, %14
  br i1 %15, label %16, label %25

16:                                               ; preds = %3
  %17 = bitcast %"struct.net::CertError"* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* nonnull align 8 %6, i64 16, i1 false) #11
  %18 = getelementptr inbounds %"struct.net::CertError", %"struct.net::CertError"* %12, i64 0, i32 2
  %19 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %9, i64 0, i32 0, i32 0, i32 0
  %20 = load i64, i64* %10, align 8
  store %"class.net::CertErrorParams"* null, %"class.net::CertErrorParams"** %19, align 8
  %21 = bitcast %"class.std::__1::unique_ptr"* %18 to i64*
  store i64 %20, i64* %21, align 8
  %22 = getelementptr inbounds %"struct.net::CertError", %"struct.net::CertError"* %12, i64 1
  %23 = ptrtoint %"struct.net::CertError"* %22 to i64
  %24 = bitcast %"struct.net::CertError"** %11 to i64*
  store i64 %23, i64* %24, align 8
  br label %27

25:                                               ; preds = %3
  %26 = getelementptr inbounds %"class.net::CertErrors", %"class.net::CertErrors"* %0, i64 0, i32 0
  call void @_ZNSt3__16vectorIN3net9CertErrorENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector"* %26, %"struct.net::CertError"* nonnull dereferenceable(24) %4) #11
  br label %27

27:                                               ; preds = %25, %16
  %28 = getelementptr inbounds %"struct.net::CertError", %"struct.net::CertError"* %4, i64 0, i32 2, i32 0, i32 0, i32 0
  %29 = load %"class.net::CertErrorParams"*, %"class.net::CertErrorParams"** %28, align 8
  store %"class.net::CertErrorParams"* null, %"class.net::CertErrorParams"** %28, align 8
  %30 = icmp eq %"class.net::CertErrorParams"* %29, null
  br i1 %30, label %36, label %31

31:                                               ; preds = %27
  %32 = bitcast %"class.net::CertErrorParams"* %29 to void (%"class.net::CertErrorParams"*)***
  %33 = load void (%"class.net::CertErrorParams"*)**, void (%"class.net::CertErrorParams"*)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.net::CertErrorParams"*)*, void (%"class.net::CertErrorParams"*)** %33, i64 1
  %35 = load void (%"class.net::CertErrorParams"*)*, void (%"class.net::CertErrorParams"*)** %34, align 8
  call void %35(%"class.net::CertErrorParams"* nonnull %29) #11
  br label %36

36:                                               ; preds = %31, %27
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net10CertErrors8AddErrorEPKv(%"class.net::CertErrors"*, i8*) local_unnamed_addr #1 align 2 {
  %3 = alloca %"struct.net::CertError", align 8
  %4 = bitcast %"struct.net::CertError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #11
  %5 = getelementptr inbounds %"struct.net::CertError", %"struct.net::CertError"* %3, i64 0, i32 0
  store i32 0, i32* %5, align 8
  %6 = getelementptr inbounds %"struct.net::CertError", %"struct.net::CertError"* %3, i64 0, i32 1
  store i8* %1, i8** %6, align 8
  %7 = getelementptr inbounds %"struct.net::CertError", %"struct.net::CertError"* %3, i64 0, i32 2
  %8 = bitcast %"class.std::__1::unique_ptr"* %7 to i64*
  store i64 0, i64* %8, align 8
  %9 = getelementptr inbounds %"class.net::CertErrors", %"class.net::CertErrors"* %0, i64 0, i32 0, i32 0, i32 1
  %10 = load %"struct.net::CertError"*, %"struct.net::CertError"** %9, align 8
  %11 = getelementptr inbounds %"class.net::CertErrors", %"class.net::CertErrors"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %12 = load %"struct.net::CertError"*, %"struct.net::CertError"** %11, align 8
  %13 = icmp ult %"struct.net::CertError"* %10, %12
  br i1 %13, label %14, label %23

14:                                               ; preds = %2
  %15 = bitcast %"struct.net::CertError"* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* nonnull align 8 %4, i64 16, i1 false) #11
  %16 = getelementptr inbounds %"struct.net::CertError", %"struct.net::CertError"* %10, i64 0, i32 2
  %17 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %7, i64 0, i32 0, i32 0, i32 0
  %18 = load i64, i64* %8, align 8
  store %"class.net::CertErrorParams"* null, %"class.net::CertErrorParams"** %17, align 8
  %19 = bitcast %"class.std::__1::unique_ptr"* %16 to i64*
  store i64 %18, i64* %19, align 8
  %20 = getelementptr inbounds %"struct.net::CertError", %"struct.net::CertError"* %10, i64 1
  %21 = ptrtoint %"struct.net::CertError"* %20 to i64
  %22 = bitcast %"struct.net::CertError"** %9 to i64*
  store i64 %21, i64* %22, align 8
  br label %25

23:                                               ; preds = %2
  %24 = getelementptr inbounds %"class.net::CertErrors", %"class.net::CertErrors"* %0, i64 0, i32 0
  call void @_ZNSt3__16vectorIN3net9CertErrorENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector"* %24, %"struct.net::CertError"* nonnull dereferenceable(24) %3) #11
  br label %25

25:                                               ; preds = %23, %14
  %26 = getelementptr inbounds %"struct.net::CertError", %"struct.net::CertError"* %3, i64 0, i32 2, i32 0, i32 0, i32 0
  %27 = load %"class.net::CertErrorParams"*, %"class.net::CertErrorParams"** %26, align 8
  store %"class.net::CertErrorParams"* null, %"class.net::CertErrorParams"** %26, align 8
  %28 = icmp eq %"class.net::CertErrorParams"* %27, null
  br i1 %28, label %34, label %29

29:                                               ; preds = %25
  %30 = bitcast %"class.net::CertErrorParams"* %27 to void (%"class.net::CertErrorParams"*)***
  %31 = load void (%"class.net::CertErrorParams"*)**, void (%"class.net::CertErrorParams"*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.net::CertErrorParams"*)*, void (%"class.net::CertErrorParams"*)** %31, i64 1
  %33 = load void (%"class.net::CertErrorParams"*)*, void (%"class.net::CertErrorParams"*)** %32, align 8
  call void %33(%"class.net::CertErrorParams"* nonnull %27) #11
  br label %34

34:                                               ; preds = %25, %29
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net10CertErrors10AddWarningEPKvNSt3__110unique_ptrINS_15CertErrorParamsENS3_14default_deleteIS5_EEEE(%"class.net::CertErrors"*, i8*, %"class.net::CertErrorParams"*) local_unnamed_addr #1 align 2 {
  %4 = alloca %"struct.net::CertError", align 8
  %5 = ptrtoint %"class.net::CertErrorParams"* %2 to i64
  %6 = bitcast %"struct.net::CertError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"struct.net::CertError", %"struct.net::CertError"* %4, i64 0, i32 0
  store i32 1, i32* %7, align 8
  %8 = getelementptr inbounds %"struct.net::CertError", %"struct.net::CertError"* %4, i64 0, i32 1
  store i8* %1, i8** %8, align 8
  %9 = getelementptr inbounds %"struct.net::CertError", %"struct.net::CertError"* %4, i64 0, i32 2
  %10 = bitcast %"class.std::__1::unique_ptr"* %9 to i64*
  store i64 %5, i64* %10, align 8
  %11 = getelementptr inbounds %"class.net::CertErrors", %"class.net::CertErrors"* %0, i64 0, i32 0, i32 0, i32 1
  %12 = load %"struct.net::CertError"*, %"struct.net::CertError"** %11, align 8
  %13 = getelementptr inbounds %"class.net::CertErrors", %"class.net::CertErrors"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %14 = load %"struct.net::CertError"*, %"struct.net::CertError"** %13, align 8
  %15 = icmp ult %"struct.net::CertError"* %12, %14
  br i1 %15, label %16, label %25

16:                                               ; preds = %3
  %17 = bitcast %"struct.net::CertError"* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* nonnull align 8 %6, i64 16, i1 false) #11
  %18 = getelementptr inbounds %"struct.net::CertError", %"struct.net::CertError"* %12, i64 0, i32 2
  %19 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %9, i64 0, i32 0, i32 0, i32 0
  %20 = load i64, i64* %10, align 8
  store %"class.net::CertErrorParams"* null, %"class.net::CertErrorParams"** %19, align 8
  %21 = bitcast %"class.std::__1::unique_ptr"* %18 to i64*
  store i64 %20, i64* %21, align 8
  %22 = getelementptr inbounds %"struct.net::CertError", %"struct.net::CertError"* %12, i64 1
  %23 = ptrtoint %"struct.net::CertError"* %22 to i64
  %24 = bitcast %"struct.net::CertError"** %11 to i64*
  store i64 %23, i64* %24, align 8
  br label %27

25:                                               ; preds = %3
  %26 = getelementptr inbounds %"class.net::CertErrors", %"class.net::CertErrors"* %0, i64 0, i32 0
  call void @_ZNSt3__16vectorIN3net9CertErrorENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector"* %26, %"struct.net::CertError"* nonnull dereferenceable(24) %4) #11
  br label %27

27:                                               ; preds = %25, %16
  %28 = getelementptr inbounds %"struct.net::CertError", %"struct.net::CertError"* %4, i64 0, i32 2, i32 0, i32 0, i32 0
  %29 = load %"class.net::CertErrorParams"*, %"class.net::CertErrorParams"** %28, align 8
  store %"class.net::CertErrorParams"* null, %"class.net::CertErrorParams"** %28, align 8
  %30 = icmp eq %"class.net::CertErrorParams"* %29, null
  br i1 %30, label %36, label %31

31:                                               ; preds = %27
  %32 = bitcast %"class.net::CertErrorParams"* %29 to void (%"class.net::CertErrorParams"*)***
  %33 = load void (%"class.net::CertErrorParams"*)**, void (%"class.net::CertErrorParams"*)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.net::CertErrorParams"*)*, void (%"class.net::CertErrorParams"*)** %33, i64 1
  %35 = load void (%"class.net::CertErrorParams"*)*, void (%"class.net::CertErrorParams"*)** %34, align 8
  call void %35(%"class.net::CertErrorParams"* nonnull %29) #11
  br label %36

36:                                               ; preds = %31, %27
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net10CertErrors10AddWarningEPKv(%"class.net::CertErrors"*, i8*) local_unnamed_addr #1 align 2 {
  %3 = alloca %"struct.net::CertError", align 8
  %4 = bitcast %"struct.net::CertError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #11
  %5 = getelementptr inbounds %"struct.net::CertError", %"struct.net::CertError"* %3, i64 0, i32 0
  store i32 1, i32* %5, align 8
  %6 = getelementptr inbounds %"struct.net::CertError", %"struct.net::CertError"* %3, i64 0, i32 1
  store i8* %1, i8** %6, align 8
  %7 = getelementptr inbounds %"struct.net::CertError", %"struct.net::CertError"* %3, i64 0, i32 2
  %8 = bitcast %"class.std::__1::unique_ptr"* %7 to i64*
  store i64 0, i64* %8, align 8
  %9 = getelementptr inbounds %"class.net::CertErrors", %"class.net::CertErrors"* %0, i64 0, i32 0, i32 0, i32 1
  %10 = load %"struct.net::CertError"*, %"struct.net::CertError"** %9, align 8
  %11 = getelementptr inbounds %"class.net::CertErrors", %"class.net::CertErrors"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %12 = load %"struct.net::CertError"*, %"struct.net::CertError"** %11, align 8
  %13 = icmp ult %"struct.net::CertError"* %10, %12
  br i1 %13, label %14, label %23

14:                                               ; preds = %2
  %15 = bitcast %"struct.net::CertError"* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* nonnull align 8 %4, i64 16, i1 false) #11
  %16 = getelementptr inbounds %"struct.net::CertError", %"struct.net::CertError"* %10, i64 0, i32 2
  %17 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %7, i64 0, i32 0, i32 0, i32 0
  %18 = load i64, i64* %8, align 8
  store %"class.net::CertErrorParams"* null, %"class.net::CertErrorParams"** %17, align 8
  %19 = bitcast %"class.std::__1::unique_ptr"* %16 to i64*
  store i64 %18, i64* %19, align 8
  %20 = getelementptr inbounds %"struct.net::CertError", %"struct.net::CertError"* %10, i64 1
  %21 = ptrtoint %"struct.net::CertError"* %20 to i64
  %22 = bitcast %"struct.net::CertError"** %9 to i64*
  store i64 %21, i64* %22, align 8
  br label %25

23:                                               ; preds = %2
  %24 = getelementptr inbounds %"class.net::CertErrors", %"class.net::CertErrors"* %0, i64 0, i32 0
  call void @_ZNSt3__16vectorIN3net9CertErrorENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector"* %24, %"struct.net::CertError"* nonnull dereferenceable(24) %3) #11
  br label %25

25:                                               ; preds = %23, %14
  %26 = getelementptr inbounds %"struct.net::CertError", %"struct.net::CertError"* %3, i64 0, i32 2, i32 0, i32 0, i32 0
  %27 = load %"class.net::CertErrorParams"*, %"class.net::CertErrorParams"** %26, align 8
  store %"class.net::CertErrorParams"* null, %"class.net::CertErrorParams"** %26, align 8
  %28 = icmp eq %"class.net::CertErrorParams"* %27, null
  br i1 %28, label %34, label %29

29:                                               ; preds = %25
  %30 = bitcast %"class.net::CertErrorParams"* %27 to void (%"class.net::CertErrorParams"*)***
  %31 = load void (%"class.net::CertErrorParams"*)**, void (%"class.net::CertErrorParams"*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.net::CertErrorParams"*)*, void (%"class.net::CertErrorParams"*)** %31, i64 1
  %33 = load void (%"class.net::CertErrorParams"*)*, void (%"class.net::CertErrorParams"*)** %32, align 8
  call void %33(%"class.net::CertErrorParams"* nonnull %27) #11
  br label %34

34:                                               ; preds = %25, %29
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3net10CertErrors13ToDebugStringEv(%"class.std::__1::basic_string"* noalias sret, %"class.net::CertErrors"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 24, i1 false) #11
  %5 = getelementptr inbounds %"class.net::CertErrors", %"class.net::CertErrors"* %1, i64 0, i32 0, i32 0, i32 0
  %6 = load %"struct.net::CertError"*, %"struct.net::CertError"** %5, align 8
  %7 = getelementptr inbounds %"class.net::CertErrors", %"class.net::CertErrors"* %1, i64 0, i32 0, i32 0, i32 1
  %8 = load %"struct.net::CertError"*, %"struct.net::CertError"** %7, align 8
  %9 = icmp eq %"struct.net::CertError"* %6, %8
  br i1 %9, label %16, label %10

10:                                               ; preds = %2
  %11 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  %12 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  br label %17

16:                                               ; preds = %31, %2
  ret void

17:                                               ; preds = %10, %31
  %18 = phi %"struct.net::CertError"* [ %6, %10 ], [ %32, %31 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #11
  call void @_ZNK3net9CertError13ToDebugStringEv(%"class.std::__1::basic_string"* nonnull sret %3, %"struct.net::CertError"* %18)
  %19 = load i8, i8* %13, align 1
  %20 = icmp slt i8 %19, 0
  %21 = load i8*, i8** %14, align 8
  %22 = load i64, i64* %15, align 8
  %23 = zext i8 %19 to i64
  %24 = select i1 %20, i8* %21, i8* %11
  %25 = select i1 %20, i64 %22, i64 %23
  %26 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %0, i8* %24, i64 %25) #11
  %27 = load i8, i8* %13, align 1
  %28 = icmp slt i8 %27, 0
  br i1 %28, label %29, label %31

29:                                               ; preds = %17
  %30 = load i8*, i8** %14, align 8
  call void @_ZdlPv(i8* %30) #12
  br label %31

31:                                               ; preds = %17, %29
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #11
  %32 = getelementptr inbounds %"struct.net::CertError", %"struct.net::CertError"* %18, i64 1
  %33 = icmp eq %"struct.net::CertError"* %32, %8
  br i1 %33, label %16, label %17
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK3net10CertErrors13ContainsErrorEPKv(%"class.net::CertErrors"* nocapture readonly, i8* readnone) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.net::CertErrors", %"class.net::CertErrors"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"struct.net::CertError"*, %"struct.net::CertError"** %3, align 8
  %5 = getelementptr inbounds %"class.net::CertErrors", %"class.net::CertErrors"* %0, i64 0, i32 0, i32 0, i32 1
  %6 = load %"struct.net::CertError"*, %"struct.net::CertError"** %5, align 8
  %7 = icmp eq %"struct.net::CertError"* %4, %6
  br i1 %7, label %16, label %10

8:                                                ; preds = %10
  %9 = icmp eq %"struct.net::CertError"* %15, %6
  br i1 %9, label %16, label %10

10:                                               ; preds = %2, %8
  %11 = phi %"struct.net::CertError"* [ %15, %8 ], [ %4, %2 ]
  %12 = getelementptr inbounds %"struct.net::CertError", %"struct.net::CertError"* %11, i64 0, i32 1
  %13 = load i8*, i8** %12, align 8
  %14 = icmp eq i8* %13, %1
  %15 = getelementptr inbounds %"struct.net::CertError", %"struct.net::CertError"* %11, i64 1
  br i1 %14, label %16, label %8

16:                                               ; preds = %8, %10, %2
  %17 = phi i1 [ false, %2 ], [ true, %10 ], [ false, %8 ]
  ret i1 %17
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK3net10CertErrors28ContainsAnyErrorWithSeverityENS_9CertError8SeverityE(%"class.net::CertErrors"* nocapture readonly, i32) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.net::CertErrors", %"class.net::CertErrors"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"struct.net::CertError"*, %"struct.net::CertError"** %3, align 8
  %5 = getelementptr inbounds %"class.net::CertErrors", %"class.net::CertErrors"* %0, i64 0, i32 0, i32 0, i32 1
  %6 = load %"struct.net::CertError"*, %"struct.net::CertError"** %5, align 8
  %7 = icmp eq %"struct.net::CertError"* %4, %6
  br i1 %7, label %16, label %10

8:                                                ; preds = %10
  %9 = icmp eq %"struct.net::CertError"* %15, %6
  br i1 %9, label %16, label %10

10:                                               ; preds = %2, %8
  %11 = phi %"struct.net::CertError"* [ %15, %8 ], [ %4, %2 ]
  %12 = getelementptr inbounds %"struct.net::CertError", %"struct.net::CertError"* %11, i64 0, i32 0
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, %1
  %15 = getelementptr inbounds %"struct.net::CertError", %"struct.net::CertError"* %11, i64 1
  br i1 %14, label %16, label %8

16:                                               ; preds = %8, %10, %2
  %17 = phi i1 [ false, %2 ], [ true, %10 ], [ false, %8 ]
  ret i1 %17
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14CertPathErrorsC2Ev(%"class.net::CertPathErrors"* nocapture) unnamed_addr #1 align 2 {
  %2 = bitcast %"class.net::CertPathErrors"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 48, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14CertPathErrorsC2EOS0_(%"class.net::CertPathErrors"* nocapture, %"class.net::CertPathErrors"* nocapture dereferenceable(48)) unnamed_addr #1 align 2 {
  %3 = bitcast %"class.net::CertPathErrors"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false) #11
  %4 = bitcast %"class.net::CertPathErrors"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.net::CertPathErrors"* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"class.net::CertPathErrors", %"class.net::CertPathErrors"* %1, i64 0, i32 0, i32 0, i32 1
  %8 = bitcast %"class.net::CertErrors"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.net::CertPathErrors", %"class.net::CertPathErrors"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = bitcast %"class.net::CertErrors"** %10 to i64*
  store i64 %9, i64* %11, align 8
  %12 = getelementptr inbounds %"class.net::CertPathErrors", %"class.net::CertPathErrors"* %1, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %13 = bitcast %"class.net::CertErrors"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.net::CertPathErrors", %"class.net::CertPathErrors"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.net::CertErrors"** %15 to i64*
  store i64 %14, i64* %16, align 8
  %17 = bitcast %"class.net::CertPathErrors"* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 24, i1 false) #11
  %18 = getelementptr inbounds %"class.net::CertPathErrors", %"class.net::CertPathErrors"* %0, i64 0, i32 1
  %19 = getelementptr inbounds %"class.net::CertPathErrors", %"class.net::CertPathErrors"* %1, i64 0, i32 1
  %20 = bitcast %"class.net::CertErrors"* %18 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 24, i1 false) #11
  %21 = bitcast %"class.net::CertErrors"* %19 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"class.net::CertErrors"* %18 to i64*
  store i64 %22, i64* %23, align 8
  %24 = getelementptr inbounds %"class.net::CertPathErrors", %"class.net::CertPathErrors"* %1, i64 0, i32 1, i32 0, i32 0, i32 1
  %25 = bitcast %"struct.net::CertError"** %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds %"class.net::CertPathErrors", %"class.net::CertPathErrors"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %28 = bitcast %"struct.net::CertError"** %27 to i64*
  store i64 %26, i64* %28, align 8
  %29 = getelementptr inbounds %"class.net::CertPathErrors", %"class.net::CertPathErrors"* %1, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %30 = bitcast %"struct.net::CertError"** %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = getelementptr inbounds %"class.net::CertPathErrors", %"class.net::CertPathErrors"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %33 = bitcast %"struct.net::CertError"** %32 to i64*
  store i64 %31, i64* %33, align 8
  %34 = bitcast %"class.net::CertErrors"* %19 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 24, i1 false) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(48) %"class.net::CertPathErrors"* @_ZN3net14CertPathErrorsaSEOS0_(%"class.net::CertPathErrors"* returned, %"class.net::CertPathErrors"* nocapture dereferenceable(48)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.net::CertPathErrors", %"class.net::CertPathErrors"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.net::CertErrors"*, %"class.net::CertErrors"** %3, align 8
  %5 = icmp eq %"class.net::CertErrors"* %4, null
  br i1 %5, label %48, label %6

6:                                                ; preds = %2
  %7 = bitcast %"class.net::CertErrors"* %4 to i8*
  %8 = getelementptr inbounds %"class.net::CertPathErrors", %"class.net::CertPathErrors"* %0, i64 0, i32 0, i32 0, i32 1
  %9 = load %"class.net::CertErrors"*, %"class.net::CertErrors"** %8, align 8
  %10 = icmp eq %"class.net::CertErrors"* %9, %4
  br i1 %10, label %45, label %11

11:                                               ; preds = %6, %40
  %12 = phi %"class.net::CertErrors"* [ %13, %40 ], [ %9, %6 ]
  %13 = getelementptr inbounds %"class.net::CertErrors", %"class.net::CertErrors"* %12, i64 -1
  %14 = getelementptr inbounds %"class.net::CertErrors", %"class.net::CertErrors"* %13, i64 0, i32 0, i32 0, i32 0
  %15 = load %"struct.net::CertError"*, %"struct.net::CertError"** %14, align 8
  %16 = icmp eq %"struct.net::CertError"* %15, null
  br i1 %16, label %40, label %17

17:                                               ; preds = %11
  %18 = bitcast %"struct.net::CertError"* %15 to i8*
  %19 = getelementptr inbounds %"class.net::CertErrors", %"class.net::CertErrors"* %12, i64 -1, i32 0, i32 0, i32 1
  %20 = load %"struct.net::CertError"*, %"struct.net::CertError"** %19, align 8
  %21 = icmp eq %"struct.net::CertError"* %20, %15
  br i1 %21, label %38, label %22

22:                                               ; preds = %17, %33
  %23 = phi %"struct.net::CertError"* [ %24, %33 ], [ %20, %17 ]
  %24 = getelementptr inbounds %"struct.net::CertError", %"struct.net::CertError"* %23, i64 -1
  %25 = getelementptr inbounds %"struct.net::CertError", %"struct.net::CertError"* %23, i64 -1, i32 2, i32 0, i32 0, i32 0
  %26 = load %"class.net::CertErrorParams"*, %"class.net::CertErrorParams"** %25, align 8
  store %"class.net::CertErrorParams"* null, %"class.net::CertErrorParams"** %25, align 8
  %27 = icmp eq %"class.net::CertErrorParams"* %26, null
  br i1 %27, label %33, label %28

28:                                               ; preds = %22
  %29 = bitcast %"class.net::CertErrorParams"* %26 to void (%"class.net::CertErrorParams"*)***
  %30 = load void (%"class.net::CertErrorParams"*)**, void (%"class.net::CertErrorParams"*)*** %29, align 8
  %31 = getelementptr inbounds void (%"class.net::CertErrorParams"*)*, void (%"class.net::CertErrorParams"*)** %30, i64 1
  %32 = load void (%"class.net::CertErrorParams"*)*, void (%"class.net::CertErrorParams"*)** %31, align 8
  tail call void %32(%"class.net::CertErrorParams"* nonnull %26) #11
  br label %33

33:                                               ; preds = %28, %22
  %34 = icmp eq %"struct.net::CertError"* %24, %15
  br i1 %34, label %35, label %22

35:                                               ; preds = %33
  %36 = bitcast %"class.net::CertErrors"* %13 to i8**
  %37 = load i8*, i8** %36, align 8
  br label %38

38:                                               ; preds = %35, %17
  %39 = phi i8* [ %37, %35 ], [ %18, %17 ]
  store %"struct.net::CertError"* %15, %"struct.net::CertError"** %19, align 8
  tail call void @_ZdlPv(i8* %39) #12
  br label %40

40:                                               ; preds = %38, %11
  %41 = icmp eq %"class.net::CertErrors"* %13, %4
  br i1 %41, label %42, label %11

42:                                               ; preds = %40
  %43 = bitcast %"class.net::CertPathErrors"* %0 to i8**
  %44 = load i8*, i8** %43, align 8
  br label %45

45:                                               ; preds = %42, %6
  %46 = phi i8* [ %44, %42 ], [ %7, %6 ]
  store %"class.net::CertErrors"* %4, %"class.net::CertErrors"** %8, align 8
  tail call void @_ZdlPv(i8* %46) #12
  %47 = bitcast %"class.net::CertPathErrors"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %47, i8 0, i64 24, i1 false) #11
  br label %48

48:                                               ; preds = %2, %45
  %49 = bitcast %"class.net::CertPathErrors"* %1 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = bitcast %"class.net::CertPathErrors"* %0 to i64*
  store i64 %50, i64* %51, align 8
  %52 = getelementptr inbounds %"class.net::CertPathErrors", %"class.net::CertPathErrors"* %1, i64 0, i32 0, i32 0, i32 1
  %53 = bitcast %"class.net::CertErrors"** %52 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = getelementptr inbounds %"class.net::CertPathErrors", %"class.net::CertPathErrors"* %0, i64 0, i32 0, i32 0, i32 1
  %56 = bitcast %"class.net::CertErrors"** %55 to i64*
  store i64 %54, i64* %56, align 8
  %57 = getelementptr inbounds %"class.net::CertPathErrors", %"class.net::CertPathErrors"* %1, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %58 = bitcast %"class.net::CertErrors"** %57 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = getelementptr inbounds %"class.net::CertPathErrors", %"class.net::CertPathErrors"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %61 = bitcast %"class.net::CertErrors"** %60 to i64*
  store i64 %59, i64* %61, align 8
  %62 = bitcast %"class.net::CertPathErrors"* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %62, i8 0, i64 24, i1 false) #11
  %63 = getelementptr inbounds %"class.net::CertPathErrors", %"class.net::CertPathErrors"* %0, i64 0, i32 1
  %64 = getelementptr inbounds %"class.net::CertPathErrors", %"class.net::CertPathErrors"* %1, i64 0, i32 1
  %65 = getelementptr inbounds %"class.net::CertErrors", %"class.net::CertErrors"* %63, i64 0, i32 0, i32 0, i32 0
  %66 = load %"struct.net::CertError"*, %"struct.net::CertError"** %65, align 8
  %67 = icmp eq %"struct.net::CertError"* %66, null
  br i1 %67, label %92, label %68

68:                                               ; preds = %48
  %69 = bitcast %"struct.net::CertError"* %66 to i8*
  %70 = getelementptr inbounds %"class.net::CertPathErrors", %"class.net::CertPathErrors"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %71 = load %"struct.net::CertError"*, %"struct.net::CertError"** %70, align 8
  %72 = icmp eq %"struct.net::CertError"* %71, %66
  br i1 %72, label %89, label %73

73:                                               ; preds = %68, %84
  %74 = phi %"struct.net::CertError"* [ %75, %84 ], [ %71, %68 ]
  %75 = getelementptr inbounds %"struct.net::CertError", %"struct.net::CertError"* %74, i64 -1
  %76 = getelementptr inbounds %"struct.net::CertError", %"struct.net::CertError"* %74, i64 -1, i32 2, i32 0, i32 0, i32 0
  %77 = load %"class.net::CertErrorParams"*, %"class.net::CertErrorParams"** %76, align 8
  store %"class.net::CertErrorParams"* null, %"class.net::CertErrorParams"** %76, align 8
  %78 = icmp eq %"class.net::CertErrorParams"* %77, null
  br i1 %78, label %84, label %79

79:                                               ; preds = %73
  %80 = bitcast %"class.net::CertErrorParams"* %77 to void (%"class.net::CertErrorParams"*)***
  %81 = load void (%"class.net::CertErrorParams"*)**, void (%"class.net::CertErrorParams"*)*** %80, align 8
  %82 = getelementptr inbounds void (%"class.net::CertErrorParams"*)*, void (%"class.net::CertErrorParams"*)** %81, i64 1
  %83 = load void (%"class.net::CertErrorParams"*)*, void (%"class.net::CertErrorParams"*)** %82, align 8
  tail call void %83(%"class.net::CertErrorParams"* nonnull %77) #11
  br label %84

84:                                               ; preds = %79, %73
  %85 = icmp eq %"struct.net::CertError"* %75, %66
  br i1 %85, label %86, label %73

86:                                               ; preds = %84
  %87 = bitcast %"class.net::CertErrors"* %63 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %86, %68
  %90 = phi i8* [ %88, %86 ], [ %69, %68 ]
  store %"struct.net::CertError"* %66, %"struct.net::CertError"** %70, align 8
  tail call void @_ZdlPv(i8* %90) #12
  %91 = bitcast %"class.net::CertErrors"* %63 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %91, i8 0, i64 24, i1 false) #11
  br label %92

92:                                               ; preds = %48, %89
  %93 = bitcast %"class.net::CertErrors"* %64 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = bitcast %"class.net::CertErrors"* %63 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds %"class.net::CertPathErrors", %"class.net::CertPathErrors"* %1, i64 0, i32 1, i32 0, i32 0, i32 1
  %97 = bitcast %"struct.net::CertError"** %96 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = getelementptr inbounds %"class.net::CertPathErrors", %"class.net::CertPathErrors"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %100 = bitcast %"struct.net::CertError"** %99 to i64*
  store i64 %98, i64* %100, align 8
  %101 = getelementptr inbounds %"class.net::CertPathErrors", %"class.net::CertPathErrors"* %1, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %102 = bitcast %"struct.net::CertError"** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = getelementptr inbounds %"class.net::CertPathErrors", %"class.net::CertPathErrors"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %105 = bitcast %"struct.net::CertError"** %104 to i64*
  store i64 %103, i64* %105, align 8
  %106 = bitcast %"class.net::CertErrors"* %64 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %106, i8 0, i64 24, i1 false) #11
  ret %"class.net::CertPathErrors"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14CertPathErrorsD2Ev(%"class.net::CertPathErrors"* nocapture) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.net::CertPathErrors", %"class.net::CertPathErrors"* %0, i64 0, i32 1
  %3 = getelementptr inbounds %"class.net::CertErrors", %"class.net::CertErrors"* %2, i64 0, i32 0, i32 0, i32 0
  %4 = load %"struct.net::CertError"*, %"struct.net::CertError"** %3, align 8
  %5 = icmp eq %"struct.net::CertError"* %4, null
  br i1 %5, label %29, label %6

6:                                                ; preds = %1
  %7 = bitcast %"struct.net::CertError"* %4 to i8*
  %8 = getelementptr inbounds %"class.net::CertPathErrors", %"class.net::CertPathErrors"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %9 = load %"struct.net::CertError"*, %"struct.net::CertError"** %8, align 8
  %10 = icmp eq %"struct.net::CertError"* %9, %4
  br i1 %10, label %27, label %11

11:                                               ; preds = %6, %22
  %12 = phi %"struct.net::CertError"* [ %13, %22 ], [ %9, %6 ]
  %13 = getelementptr inbounds %"struct.net::CertError", %"struct.net::CertError"* %12, i64 -1
  %14 = getelementptr inbounds %"struct.net::CertError", %"struct.net::CertError"* %12, i64 -1, i32 2, i32 0, i32 0, i32 0
  %15 = load %"class.net::CertErrorParams"*, %"class.net::CertErrorParams"** %14, align 8
  store %"class.net::CertErrorParams"* null, %"class.net::CertErrorParams"** %14, align 8
  %16 = icmp eq %"class.net::CertErrorParams"* %15, null
  br i1 %16, label %22, label %17

17:                                               ; preds = %11
  %18 = bitcast %"class.net::CertErrorParams"* %15 to void (%"class.net::CertErrorParams"*)***
  %19 = load void (%"class.net::CertErrorParams"*)**, void (%"class.net::CertErrorParams"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.net::CertErrorParams"*)*, void (%"class.net::CertErrorParams"*)** %19, i64 1
  %21 = load void (%"class.net::CertErrorParams"*)*, void (%"class.net::CertErrorParams"*)** %20, align 8
  tail call void %21(%"class.net::CertErrorParams"* nonnull %15) #11
  br label %22

22:                                               ; preds = %17, %11
  %23 = icmp eq %"struct.net::CertError"* %13, %4
  br i1 %23, label %24, label %11

24:                                               ; preds = %22
  %25 = bitcast %"class.net::CertErrors"* %2 to i8**
  %26 = load i8*, i8** %25, align 8
  br label %27

27:                                               ; preds = %24, %6
  %28 = phi i8* [ %26, %24 ], [ %7, %6 ]
  store %"struct.net::CertError"* %4, %"struct.net::CertError"** %8, align 8
  tail call void @_ZdlPv(i8* %28) #12
  br label %29

29:                                               ; preds = %1, %27
  %30 = getelementptr inbounds %"class.net::CertPathErrors", %"class.net::CertPathErrors"* %0, i64 0, i32 0, i32 0, i32 0
  %31 = load %"class.net::CertErrors"*, %"class.net::CertErrors"** %30, align 8
  %32 = icmp eq %"class.net::CertErrors"* %31, null
  br i1 %32, label %74, label %33

33:                                               ; preds = %29
  %34 = bitcast %"class.net::CertErrors"* %31 to i8*
  %35 = getelementptr inbounds %"class.net::CertPathErrors", %"class.net::CertPathErrors"* %0, i64 0, i32 0, i32 0, i32 1
  %36 = load %"class.net::CertErrors"*, %"class.net::CertErrors"** %35, align 8
  %37 = icmp eq %"class.net::CertErrors"* %36, %31
  br i1 %37, label %72, label %38

38:                                               ; preds = %33, %67
  %39 = phi %"class.net::CertErrors"* [ %40, %67 ], [ %36, %33 ]
  %40 = getelementptr inbounds %"class.net::CertErrors", %"class.net::CertErrors"* %39, i64 -1
  %41 = getelementptr inbounds %"class.net::CertErrors", %"class.net::CertErrors"* %40, i64 0, i32 0, i32 0, i32 0
  %42 = load %"struct.net::CertError"*, %"struct.net::CertError"** %41, align 8
  %43 = icmp eq %"struct.net::CertError"* %42, null
  br i1 %43, label %67, label %44

44:                                               ; preds = %38
  %45 = bitcast %"struct.net::CertError"* %42 to i8*
  %46 = getelementptr inbounds %"class.net::CertErrors", %"class.net::CertErrors"* %39, i64 -1, i32 0, i32 0, i32 1
  %47 = load %"struct.net::CertError"*, %"struct.net::CertError"** %46, align 8
  %48 = icmp eq %"struct.net::CertError"* %47, %42
  br i1 %48, label %65, label %49

49:                                               ; preds = %44, %60
  %50 = phi %"struct.net::CertError"* [ %51, %60 ], [ %47, %44 ]
  %51 = getelementptr inbounds %"struct.net::CertError", %"struct.net::CertError"* %50, i64 -1
  %52 = getelementptr inbounds %"struct.net::CertError", %"struct.net::CertError"* %50, i64 -1, i32 2, i32 0, i32 0, i32 0
  %53 = load %"class.net::CertErrorParams"*, %"class.net::CertErrorParams"** %52, align 8
  store %"class.net::CertErrorParams"* null, %"class.net::CertErrorParams"** %52, align 8
  %54 = icmp eq %"class.net::CertErrorParams"* %53, null
  br i1 %54, label %60, label %55

55:                                               ; preds = %49
  %56 = bitcast %"class.net::CertErrorParams"* %53 to void (%"class.net::CertErrorParams"*)***
  %57 = load void (%"class.net::CertErrorParams"*)**, void (%"class.net::CertErrorParams"*)*** %56, align 8
  %58 = getelementptr inbounds void (%"class.net::CertErrorParams"*)*, void (%"class.net::CertErrorParams"*)** %57, i64 1
  %59 = load void (%"class.net::CertErrorParams"*)*, void (%"class.net::CertErrorParams"*)** %58, align 8
  tail call void %59(%"class.net::CertErrorParams"* nonnull %53) #11
  br label %60

60:                                               ; preds = %55, %49
  %61 = icmp eq %"struct.net::CertError"* %51, %42
  br i1 %61, label %62, label %49

62:                                               ; preds = %60
  %63 = bitcast %"class.net::CertErrors"* %40 to i8**
  %64 = load i8*, i8** %63, align 8
  br label %65

65:                                               ; preds = %62, %44
  %66 = phi i8* [ %64, %62 ], [ %45, %44 ]
  store %"struct.net::CertError"* %42, %"struct.net::CertError"** %46, align 8
  tail call void @_ZdlPv(i8* %66) #12
  br label %67

67:                                               ; preds = %65, %38
  %68 = icmp eq %"class.net::CertErrors"* %40, %31
  br i1 %68, label %69, label %38

69:                                               ; preds = %67
  %70 = bitcast %"class.net::CertPathErrors"* %0 to i8**
  %71 = load i8*, i8** %70, align 8
  br label %72

72:                                               ; preds = %69, %33
  %73 = phi i8* [ %71, %69 ], [ %34, %33 ]
  store %"class.net::CertErrors"* %31, %"class.net::CertErrors"** %35, align 8
  tail call void @_ZdlPv(i8* %73) #12
  br label %74

74:                                               ; preds = %29, %72
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.net::CertErrors"* @_ZN3net14CertPathErrors16GetErrorsForCertEm(%"class.net::CertPathErrors"*, i64) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.net::CertPathErrors", %"class.net::CertPathErrors"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.net::CertPathErrors", %"class.net::CertPathErrors"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = bitcast %"class.net::CertErrors"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.net::CertPathErrors"* %0 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = sdiv exact i64 %9, 24
  %11 = icmp ugt i64 %10, %1
  br i1 %11, label %56, label %12

12:                                               ; preds = %2
  %13 = add i64 %1, 1
  %14 = icmp ugt i64 %13, %10
  %15 = inttoptr i64 %8 to %"class.net::CertErrors"*
  %16 = inttoptr i64 %6 to %"class.net::CertErrors"*
  br i1 %14, label %17, label %19

17:                                               ; preds = %12
  %18 = sub i64 %13, %10
  tail call void @_ZNSt3__16vectorIN3net10CertErrorsENS_9allocatorIS2_EEE8__appendEm(%"class.std::__1::vector.9"* %3, i64 %18) #11
  br label %56

19:                                               ; preds = %12
  %20 = icmp ult i64 %13, %10
  br i1 %20, label %21, label %56

21:                                               ; preds = %19
  %22 = getelementptr inbounds %"class.net::CertErrors", %"class.net::CertErrors"* %15, i64 %13
  %23 = icmp eq %"class.net::CertErrors"* %22, %16
  br i1 %23, label %55, label %24

24:                                               ; preds = %21, %53
  %25 = phi %"class.net::CertErrors"* [ %26, %53 ], [ %16, %21 ]
  %26 = getelementptr inbounds %"class.net::CertErrors", %"class.net::CertErrors"* %25, i64 -1
  %27 = getelementptr inbounds %"class.net::CertErrors", %"class.net::CertErrors"* %26, i64 0, i32 0, i32 0, i32 0
  %28 = load %"struct.net::CertError"*, %"struct.net::CertError"** %27, align 8
  %29 = icmp eq %"struct.net::CertError"* %28, null
  br i1 %29, label %53, label %30

30:                                               ; preds = %24
  %31 = bitcast %"struct.net::CertError"* %28 to i8*
  %32 = getelementptr inbounds %"class.net::CertErrors", %"class.net::CertErrors"* %25, i64 -1, i32 0, i32 0, i32 1
  %33 = load %"struct.net::CertError"*, %"struct.net::CertError"** %32, align 8
  %34 = icmp eq %"struct.net::CertError"* %33, %28
  br i1 %34, label %51, label %35

35:                                               ; preds = %30, %46
  %36 = phi %"struct.net::CertError"* [ %37, %46 ], [ %33, %30 ]
  %37 = getelementptr inbounds %"struct.net::CertError", %"struct.net::CertError"* %36, i64 -1
  %38 = getelementptr inbounds %"struct.net::CertError", %"struct.net::CertError"* %36, i64 -1, i32 2, i32 0, i32 0, i32 0
  %39 = load %"class.net::CertErrorParams"*, %"class.net::CertErrorParams"** %38, align 8
  store %"class.net::CertErrorParams"* null, %"class.net::CertErrorParams"** %38, align 8
  %40 = icmp eq %"class.net::CertErrorParams"* %39, null
  br i1 %40, label %46, label %41

41:                                               ; preds = %35
  %42 = bitcast %"class.net::CertErrorParams"* %39 to void (%"class.net::CertErrorParams"*)***
  %43 = load void (%"class.net::CertErrorParams"*)**, void (%"class.net::CertErrorParams"*)*** %42, align 8
  %44 = getelementptr inbounds void (%"class.net::CertErrorParams"*)*, void (%"class.net::CertErrorParams"*)** %43, i64 1
  %45 = load void (%"class.net::CertErrorParams"*)*, void (%"class.net::CertErrorParams"*)** %44, align 8
  tail call void %45(%"class.net::CertErrorParams"* nonnull %39) #11
  br label %46

46:                                               ; preds = %41, %35
  %47 = icmp eq %"struct.net::CertError"* %37, %28
  br i1 %47, label %48, label %35

48:                                               ; preds = %46
  %49 = bitcast %"class.net::CertErrors"* %26 to i8**
  %50 = load i8*, i8** %49, align 8
  br label %51

51:                                               ; preds = %48, %30
  %52 = phi i8* [ %50, %48 ], [ %31, %30 ]
  store %"struct.net::CertError"* %28, %"struct.net::CertError"** %32, align 8
  tail call void @_ZdlPv(i8* %52) #12
  br label %53

53:                                               ; preds = %51, %24
  %54 = icmp eq %"class.net::CertErrors"* %26, %22
  br i1 %54, label %55, label %24

55:                                               ; preds = %53, %21
  store %"class.net::CertErrors"* %22, %"class.net::CertErrors"** %4, align 8
  br label %56

56:                                               ; preds = %55, %19, %17, %2
  %57 = getelementptr inbounds %"class.net::CertPathErrors", %"class.net::CertPathErrors"* %0, i64 0, i32 0, i32 0, i32 0
  %58 = load %"class.net::CertErrors"*, %"class.net::CertErrors"** %57, align 8
  %59 = getelementptr inbounds %"class.net::CertErrors", %"class.net::CertErrors"* %58, i64 %1
  ret %"class.net::CertErrors"* %59
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.net::CertErrors"* @_ZNK3net14CertPathErrors16GetErrorsForCertEm(%"class.net::CertPathErrors"* nocapture readonly, i64) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.net::CertPathErrors", %"class.net::CertPathErrors"* %0, i64 0, i32 0, i32 0, i32 1
  %4 = bitcast %"class.net::CertErrors"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.net::CertPathErrors"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 24
  %10 = icmp ugt i64 %9, %1
  %11 = inttoptr i64 %7 to %"class.net::CertErrors"*
  %12 = getelementptr inbounds %"class.net::CertErrors", %"class.net::CertErrors"* %11, i64 %1
  %13 = select i1 %10, %"class.net::CertErrors"* %12, %"class.net::CertErrors"* null
  ret %"class.net::CertErrors"* %13
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %"class.net::CertErrors"* @_ZN3net14CertPathErrors14GetOtherErrorsEv(%"class.net::CertPathErrors"* readnone) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.net::CertPathErrors", %"class.net::CertPathErrors"* %0, i64 0, i32 1
  ret %"class.net::CertErrors"* %2
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK3net14CertPathErrors13ContainsErrorEPKv(%"class.net::CertPathErrors"* nocapture readonly, i8* readnone) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.net::CertPathErrors", %"class.net::CertPathErrors"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.net::CertErrors"*, %"class.net::CertErrors"** %3, align 8
  %5 = getelementptr inbounds %"class.net::CertPathErrors", %"class.net::CertPathErrors"* %0, i64 0, i32 0, i32 0, i32 1
  %6 = load %"class.net::CertErrors"*, %"class.net::CertErrors"** %5, align 8
  %7 = icmp eq %"class.net::CertErrors"* %4, %6
  br i1 %7, label %26, label %8

8:                                                ; preds = %2, %23
  %9 = phi %"class.net::CertErrors"* [ %24, %23 ], [ %4, %2 ]
  %10 = getelementptr inbounds %"class.net::CertErrors", %"class.net::CertErrors"* %9, i64 0, i32 0, i32 0, i32 0
  %11 = load %"struct.net::CertError"*, %"struct.net::CertError"** %10, align 8
  %12 = getelementptr inbounds %"class.net::CertErrors", %"class.net::CertErrors"* %9, i64 0, i32 0, i32 0, i32 1
  %13 = load %"struct.net::CertError"*, %"struct.net::CertError"** %12, align 8
  %14 = icmp eq %"struct.net::CertError"* %11, %13
  br i1 %14, label %23, label %17

15:                                               ; preds = %17
  %16 = icmp eq %"struct.net::CertError"* %22, %13
  br i1 %16, label %23, label %17

17:                                               ; preds = %8, %15
  %18 = phi %"struct.net::CertError"* [ %22, %15 ], [ %11, %8 ]
  %19 = getelementptr inbounds %"struct.net::CertError", %"struct.net::CertError"* %18, i64 0, i32 1
  %20 = load i8*, i8** %19, align 8
  %21 = icmp eq i8* %20, %1
  %22 = getelementptr inbounds %"struct.net::CertError", %"struct.net::CertError"* %18, i64 1
  br i1 %21, label %40, label %15

23:                                               ; preds = %15, %8
  %24 = getelementptr inbounds %"class.net::CertErrors", %"class.net::CertErrors"* %9, i64 1
  %25 = icmp eq %"class.net::CertErrors"* %24, %6
  br i1 %25, label %26, label %8

26:                                               ; preds = %23, %2
  %27 = getelementptr inbounds %"class.net::CertPathErrors", %"class.net::CertPathErrors"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %28 = load %"struct.net::CertError"*, %"struct.net::CertError"** %27, align 8
  %29 = getelementptr inbounds %"class.net::CertPathErrors", %"class.net::CertPathErrors"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %30 = load %"struct.net::CertError"*, %"struct.net::CertError"** %29, align 8
  %31 = icmp eq %"struct.net::CertError"* %28, %30
  br i1 %31, label %40, label %34

32:                                               ; preds = %34
  %33 = icmp eq %"struct.net::CertError"* %39, %30
  br i1 %33, label %40, label %34

34:                                               ; preds = %26, %32
  %35 = phi %"struct.net::CertError"* [ %39, %32 ], [ %28, %26 ]
  %36 = getelementptr inbounds %"struct.net::CertError", %"struct.net::CertError"* %35, i64 0, i32 1
  %37 = load i8*, i8** %36, align 8
  %38 = icmp eq i8* %37, %1
  %39 = getelementptr inbounds %"struct.net::CertError", %"struct.net::CertError"* %35, i64 1
  br i1 %38, label %40, label %32

40:                                               ; preds = %17, %32, %34, %26
  %41 = phi i1 [ false, %26 ], [ false, %32 ], [ true, %34 ], [ true, %17 ]
  ret i1 %41
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK3net14CertPathErrors28ContainsAnyErrorWithSeverityENS_9CertError8SeverityE(%"class.net::CertPathErrors"* nocapture readonly, i32) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.net::CertPathErrors", %"class.net::CertPathErrors"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.net::CertErrors"*, %"class.net::CertErrors"** %3, align 8
  %5 = getelementptr inbounds %"class.net::CertPathErrors", %"class.net::CertPathErrors"* %0, i64 0, i32 0, i32 0, i32 1
  %6 = load %"class.net::CertErrors"*, %"class.net::CertErrors"** %5, align 8
  %7 = icmp eq %"class.net::CertErrors"* %4, %6
  br i1 %7, label %26, label %8

8:                                                ; preds = %2, %23
  %9 = phi %"class.net::CertErrors"* [ %24, %23 ], [ %4, %2 ]
  %10 = getelementptr inbounds %"class.net::CertErrors", %"class.net::CertErrors"* %9, i64 0, i32 0, i32 0, i32 0
  %11 = load %"struct.net::CertError"*, %"struct.net::CertError"** %10, align 8
  %12 = getelementptr inbounds %"class.net::CertErrors", %"class.net::CertErrors"* %9, i64 0, i32 0, i32 0, i32 1
  %13 = load %"struct.net::CertError"*, %"struct.net::CertError"** %12, align 8
  %14 = icmp eq %"struct.net::CertError"* %11, %13
  br i1 %14, label %23, label %17

15:                                               ; preds = %17
  %16 = icmp eq %"struct.net::CertError"* %22, %13
  br i1 %16, label %23, label %17

17:                                               ; preds = %8, %15
  %18 = phi %"struct.net::CertError"* [ %22, %15 ], [ %11, %8 ]
  %19 = getelementptr inbounds %"struct.net::CertError", %"struct.net::CertError"* %18, i64 0, i32 0
  %20 = load i32, i32* %19, align 8
  %21 = icmp eq i32 %20, %1
  %22 = getelementptr inbounds %"struct.net::CertError", %"struct.net::CertError"* %18, i64 1
  br i1 %21, label %40, label %15

23:                                               ; preds = %15, %8
  %24 = getelementptr inbounds %"class.net::CertErrors", %"class.net::CertErrors"* %9, i64 1
  %25 = icmp eq %"class.net::CertErrors"* %24, %6
  br i1 %25, label %26, label %8

26:                                               ; preds = %23, %2
  %27 = getelementptr inbounds %"class.net::CertPathErrors", %"class.net::CertPathErrors"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %28 = load %"struct.net::CertError"*, %"struct.net::CertError"** %27, align 8
  %29 = getelementptr inbounds %"class.net::CertPathErrors", %"class.net::CertPathErrors"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %30 = load %"struct.net::CertError"*, %"struct.net::CertError"** %29, align 8
  %31 = icmp eq %"struct.net::CertError"* %28, %30
  br i1 %31, label %40, label %34

32:                                               ; preds = %34
  %33 = icmp eq %"struct.net::CertError"* %39, %30
  br i1 %33, label %40, label %34

34:                                               ; preds = %26, %32
  %35 = phi %"struct.net::CertError"* [ %39, %32 ], [ %28, %26 ]
  %36 = getelementptr inbounds %"struct.net::CertError", %"struct.net::CertError"* %35, i64 0, i32 0
  %37 = load i32, i32* %36, align 8
  %38 = icmp eq i32 %37, %1
  %39 = getelementptr inbounds %"struct.net::CertError", %"struct.net::CertError"* %35, i64 1
  br i1 %38, label %40, label %32

40:                                               ; preds = %17, %32, %34, %26
  %41 = phi i1 [ false, %26 ], [ false, %32 ], [ true, %34 ], [ true, %17 ]
  ret i1 %41
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3net14CertPathErrors13ToDebugStringERKNSt3__16vectorI13scoped_refptrINS_17ParsedCertificateEENS1_9allocatorIS5_EEEE(%"class.std::__1::basic_string"* noalias sret, %"class.net::CertPathErrors"* nocapture readonly, %"class.std::__1::vector.17"* nocapture readonly dereferenceable(24)) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.std::__1::vector.86", align 8
  %9 = alloca [15 x i8], align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = alloca %"class.std::__1::basic_string", align 8
  %12 = alloca %"class.std::__1::basic_string", align 8
  %13 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 24, i1 false) #11
  %14 = getelementptr inbounds %"class.net::CertPathErrors", %"class.net::CertPathErrors"* %1, i64 0, i32 0, i32 0, i32 1
  %15 = bitcast %"class.net::CertErrors"** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"class.net::CertPathErrors"* %1 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = icmp eq i64 %16, %18
  br i1 %19, label %56, label %20

20:                                               ; preds = %3
  %21 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %24 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %25 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %25, i64 0, i32 1, i32 0
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %29 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %29, i64 0, i32 1, i32 0
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %34 = getelementptr inbounds %"class.std::__1::vector.17", %"class.std::__1::vector.17"* %2, i64 0, i32 0, i32 1
  %35 = bitcast %class.scoped_refptr** %34 to i64*
  %36 = bitcast %"class.std::__1::vector.17"* %2 to i64*
  %37 = bitcast %"class.std::__1::vector.86"* %8 to i8*
  %38 = getelementptr inbounds %"class.std::__1::vector.86", %"class.std::__1::vector.86"* %8, i64 0, i32 0, i32 0
  %39 = getelementptr inbounds %"class.std::__1::vector.86", %"class.std::__1::vector.86"* %8, i64 0, i32 0, i32 1
  %40 = getelementptr inbounds [15 x i8], [15 x i8]* %9, i64 0, i64 0
  %41 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %43 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %42, i64 0, i32 1, i32 0
  %44 = bitcast %"class.std::__1::basic_string"* %7 to i64*
  %45 = bitcast i64* %33 to i8*
  %46 = getelementptr inbounds i8, i8* %31, i64 23
  %47 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %48 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %47, i64 0, i32 1, i32 0
  %49 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = bitcast %"class.std::__1::vector.86"* %8 to i8**
  %51 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  %52 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %53 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %52, i64 0, i32 1, i32 0
  %54 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  br label %101

56:                                               ; preds = %236, %3
  %57 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %57) #11
  %58 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %57, i8 0, i64 24, i1 false) #11, !alias.scope !2
  %60 = getelementptr inbounds %"class.net::CertPathErrors", %"class.net::CertPathErrors"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %61 = load %"struct.net::CertError"*, %"struct.net::CertError"** %60, align 8, !noalias !2
  %62 = getelementptr inbounds %"class.net::CertPathErrors", %"class.net::CertPathErrors"* %1, i64 0, i32 1, i32 0, i32 0, i32 1
  %63 = load %"struct.net::CertError"*, %"struct.net::CertError"** %62, align 8, !noalias !2
  %64 = icmp eq %"struct.net::CertError"* %61, %63
  br i1 %64, label %65, label %68

65:                                               ; preds = %56
  %66 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %67 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %66, i64 0, i32 1, i32 0
  br label %254

68:                                               ; preds = %56
  %69 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  %70 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %71 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %70, i64 0, i32 1, i32 0
  %72 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  br label %74

74:                                               ; preds = %88, %68
  %75 = phi %"struct.net::CertError"* [ %61, %68 ], [ %89, %88 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %69) #11, !noalias !2
  call void @_ZNK3net9CertError13ToDebugStringEv(%"class.std::__1::basic_string"* nonnull sret %5, %"struct.net::CertError"* %75) #11
  %76 = load i8, i8* %71, align 1, !noalias !2
  %77 = icmp slt i8 %76, 0
  %78 = load i8*, i8** %72, align 8, !noalias !2
  %79 = load i64, i64* %73, align 8, !noalias !2
  %80 = zext i8 %76 to i64
  %81 = select i1 %77, i8* %78, i8* %69
  %82 = select i1 %77, i64 %79, i64 %80
  %83 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %12, i8* %81, i64 %82) #11
  %84 = load i8, i8* %71, align 1, !noalias !2
  %85 = icmp slt i8 %84, 0
  br i1 %85, label %86, label %88

86:                                               ; preds = %74
  %87 = load i8*, i8** %72, align 8, !noalias !2
  call void @_ZdlPv(i8* %87) #12
  br label %88

88:                                               ; preds = %86, %74
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %69) #11, !noalias !2
  %89 = getelementptr inbounds %"struct.net::CertError", %"struct.net::CertError"* %75, i64 1
  %90 = icmp eq %"struct.net::CertError"* %89, %63
  br i1 %90, label %91, label %74

91:                                               ; preds = %88
  %92 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %93 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %92, i64 0, i32 1, i32 0
  %94 = load i8, i8* %93, align 1
  %95 = load i64, i64* %59, align 8
  %96 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %92, i64 0, i32 1, i32 0
  %97 = icmp slt i8 %94, 0
  %98 = zext i8 %94 to i64
  %99 = select i1 %97, i64 %95, i64 %98
  %100 = icmp eq i64 %99, 0
  br i1 %100, label %254, label %243

101:                                              ; preds = %20, %236
  %102 = phi i64 [ %18, %20 ], [ %239, %236 ]
  %103 = phi i64 [ 0, %20 ], [ %237, %236 ]
  %104 = inttoptr i64 %102 to %"class.net::CertErrors"*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 0, i64 24, i1 false) #11, !alias.scope !5
  %105 = getelementptr inbounds %"class.net::CertErrors", %"class.net::CertErrors"* %104, i64 %103, i32 0, i32 0, i32 0
  %106 = load %"struct.net::CertError"*, %"struct.net::CertError"** %105, align 8, !noalias !5
  %107 = getelementptr inbounds %"class.net::CertErrors", %"class.net::CertErrors"* %104, i64 %103, i32 0, i32 0, i32 1
  %108 = load %"struct.net::CertError"*, %"struct.net::CertError"** %107, align 8, !noalias !5
  %109 = icmp eq %"struct.net::CertError"* %106, %108
  br i1 %109, label %236, label %110

110:                                              ; preds = %101, %124
  %111 = phi %"struct.net::CertError"* [ %125, %124 ], [ %106, %101 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #11, !noalias !5
  call void @_ZNK3net9CertError13ToDebugStringEv(%"class.std::__1::basic_string"* nonnull sret %4, %"struct.net::CertError"* %111) #11
  %112 = load i8, i8* %26, align 1, !noalias !5
  %113 = icmp slt i8 %112, 0
  %114 = load i8*, i8** %27, align 8, !noalias !5
  %115 = load i64, i64* %28, align 8, !noalias !5
  %116 = zext i8 %112 to i64
  %117 = select i1 %113, i8* %114, i8* %24
  %118 = select i1 %113, i64 %115, i64 %116
  %119 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %6, i8* %117, i64 %118) #11
  %120 = load i8, i8* %26, align 1, !noalias !5
  %121 = icmp slt i8 %120, 0
  br i1 %121, label %122, label %124

122:                                              ; preds = %110
  %123 = load i8*, i8** %27, align 8, !noalias !5
  call void @_ZdlPv(i8* %123) #12
  br label %124

124:                                              ; preds = %122, %110
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #11, !noalias !5
  %125 = getelementptr inbounds %"struct.net::CertError", %"struct.net::CertError"* %111, i64 1
  %126 = icmp eq %"struct.net::CertError"* %125, %108
  br i1 %126, label %127, label %110

127:                                              ; preds = %124
  %128 = load i8, i8* %30, align 1
  %129 = load i64, i64* %23, align 8
  %130 = icmp slt i8 %128, 0
  %131 = zext i8 %128 to i64
  %132 = select i1 %130, i64 %129, i64 %131
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %231, label %134

134:                                              ; preds = %127
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 0, i64 24, i1 false) #11
  %135 = load i64, i64* %35, align 8
  %136 = load i64, i64* %36, align 8
  %137 = sub i64 %135, %136
  %138 = ashr exact i64 %137, 3
  %139 = icmp ult i64 %103, %138
  br i1 %139, label %140, label %194

140:                                              ; preds = %134
  %141 = inttoptr i64 %136 to %class.scoped_refptr*
  %142 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %141, i64 %103, i32 0
  %143 = load %"class.net::ParsedCertificate"*, %"class.net::ParsedCertificate"** %142, align 8
  %144 = icmp eq %"class.net::ParsedCertificate"* %143, null
  br i1 %144, label %194, label %145

145:                                              ; preds = %140
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %37) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %37, i8 0, i64 24, i1 false) #11
  %146 = load %"class.net::ParsedCertificate"*, %"class.net::ParsedCertificate"** %142, align 8
  %147 = getelementptr inbounds %"class.net::ParsedCertificate", %"class.net::ParsedCertificate"* %146, i64 0, i32 6, i32 6
  %148 = call zeroext i1 @_ZN3net9ParseNameERKNS_3der5InputEPNSt3__16vectorINS5_INS_17X509NameAttributeENS4_9allocatorIS6_EEEENS7_IS9_EEEE(%"class.net::der::Input"* dereferenceable(16) %147, %"class.std::__1::vector.86"* nonnull %8) #11
  br i1 %148, label %149, label %170

149:                                              ; preds = %145
  %150 = call zeroext i1 @_ZN3net16ConvertToRFC2253ERKNSt3__16vectorINS1_INS_17X509NameAttributeENS0_9allocatorIS2_EEEENS3_IS5_EEEEPNS0_12basic_stringIcNS0_11char_traitsIcEENS3_IcEEEE(%"class.std::__1::vector.86"* nonnull dereferenceable(24) %8, %"class.std::__1::basic_string"* nonnull %7) #11
  br i1 %150, label %151, label %170

151:                                              ; preds = %149
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %40)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %41) #11
  call void @_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_RKS9_(%"class.std::__1::basic_string"* nonnull sret %10, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4, i64 0, i64 0), %"class.std::__1::basic_string"* nonnull dereferenceable(24) %7) #11
  %152 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %10, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0)) #11, !noalias !8
  %153 = bitcast %"class.std::__1::basic_string"* %152 to i8*
  %154 = bitcast %"class.std::__1::basic_string"* %152 to i64*
  %155 = load i64, i64* %154, align 8
  %156 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %152, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %157 = bitcast i64* %156 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %40, i8* align 8 %157, i64 15, i1 false)
  %158 = getelementptr inbounds i8, i8* %153, i64 23
  %159 = load i8, i8* %158, align 1
  call void @llvm.memset.p0i8.i64(i8* align 8 %153, i8 0, i64 24, i1 false) #11, !noalias !8
  %160 = load i8, i8* %43, align 1
  %161 = icmp slt i8 %160, 0
  br i1 %161, label %162, label %164

162:                                              ; preds = %151
  %163 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %163) #12
  br label %164

164:                                              ; preds = %162, %151
  store i64 %155, i64* %44, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %45, i8* nonnull align 8 %40, i64 15, i1 false)
  store i8 %159, i8* %46, align 1
  %165 = load i8, i8* %48, align 1
  %166 = icmp slt i8 %165, 0
  br i1 %166, label %167, label %169

167:                                              ; preds = %164
  %168 = load i8*, i8** %49, align 8
  call void @_ZdlPv(i8* %168) #12
  br label %169

169:                                              ; preds = %164, %167
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %41) #11
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %40)
  br label %170

170:                                              ; preds = %169, %149, %145
  %171 = load %"class.std::__1::vector.88"*, %"class.std::__1::vector.88"** %38, align 8
  %172 = icmp eq %"class.std::__1::vector.88"* %171, null
  br i1 %172, label %195, label %173

173:                                              ; preds = %170
  %174 = bitcast %"class.std::__1::vector.88"* %171 to i8*
  %175 = load %"class.std::__1::vector.88"*, %"class.std::__1::vector.88"** %39, align 8
  %176 = icmp eq %"class.std::__1::vector.88"* %175, %171
  br i1 %176, label %192, label %177

177:                                              ; preds = %173, %188
  %178 = phi %"class.std::__1::vector.88"* [ %179, %188 ], [ %175, %173 ]
  %179 = getelementptr inbounds %"class.std::__1::vector.88", %"class.std::__1::vector.88"* %178, i64 -1
  %180 = getelementptr inbounds %"class.std::__1::vector.88", %"class.std::__1::vector.88"* %179, i64 0, i32 0, i32 0
  %181 = load %"struct.net::X509NameAttribute"*, %"struct.net::X509NameAttribute"** %180, align 8
  %182 = icmp eq %"struct.net::X509NameAttribute"* %181, null
  br i1 %182, label %188, label %183

183:                                              ; preds = %177
  %184 = ptrtoint %"struct.net::X509NameAttribute"* %181 to i64
  %185 = getelementptr inbounds %"class.std::__1::vector.88", %"class.std::__1::vector.88"* %178, i64 -1, i32 0, i32 1
  %186 = bitcast %"struct.net::X509NameAttribute"** %185 to i64*
  store i64 %184, i64* %186, align 8
  %187 = bitcast %"struct.net::X509NameAttribute"* %181 to i8*
  call void @_ZdlPv(i8* %187) #12
  br label %188

188:                                              ; preds = %183, %177
  %189 = icmp eq %"class.std::__1::vector.88"* %179, %171
  br i1 %189, label %190, label %177

190:                                              ; preds = %188
  %191 = load i8*, i8** %50, align 8
  br label %192

192:                                              ; preds = %190, %173
  %193 = phi i8* [ %191, %190 ], [ %174, %173 ]
  store %"class.std::__1::vector.88"* %171, %"class.std::__1::vector.88"** %39, align 8
  call void @_ZdlPv(i8* %193) #12
  br label %195

194:                                              ; preds = %140, %134
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %51) #11
  br label %200

195:                                              ; preds = %192, %170
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37) #11
  %196 = load i8, i8* %43, align 1
  %197 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %51) #11
  %198 = icmp slt i8 %196, 0
  %199 = select i1 %198, i8* %197, i8* %31
  br label %200

200:                                              ; preds = %195, %194
  %201 = phi i8* [ %31, %194 ], [ %199, %195 ]
  %202 = trunc i64 %103 to i32
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* nonnull sret %11, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.6, i64 0, i64 0), i32 %202, i8* %201) #11
  %203 = load i8, i8* %53, align 1
  %204 = icmp slt i8 %203, 0
  %205 = load i8*, i8** %54, align 8
  %206 = load i64, i64* %55, align 8
  %207 = zext i8 %203 to i64
  %208 = select i1 %204, i8* %205, i8* %51
  %209 = select i1 %204, i64 %206, i64 %207
  %210 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %0, i8* %208, i64 %209) #11
  %211 = load i8, i8* %53, align 1
  %212 = icmp slt i8 %211, 0
  br i1 %212, label %213, label %215

213:                                              ; preds = %200
  %214 = load i8*, i8** %54, align 8
  call void @_ZdlPv(i8* %214) #12
  br label %215

215:                                              ; preds = %200, %213
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %51) #11
  %216 = load i8, i8* %30, align 1
  %217 = icmp slt i8 %216, 0
  %218 = load i8*, i8** %22, align 8
  %219 = load i64, i64* %23, align 8
  %220 = zext i8 %216 to i64
  %221 = select i1 %217, i8* %218, i8* %21
  %222 = select i1 %217, i64 %219, i64 %220
  %223 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %0, i8* %221, i64 %222) #11
  %224 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #11
  %225 = load i8, i8* %43, align 1
  %226 = icmp slt i8 %225, 0
  br i1 %226, label %227, label %229

227:                                              ; preds = %215
  %228 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %228) #12
  br label %229

229:                                              ; preds = %215, %227
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #11
  %230 = load i8, i8* %30, align 1
  br label %231

231:                                              ; preds = %127, %229
  %232 = phi i8 [ %128, %127 ], [ %230, %229 ]
  %233 = icmp slt i8 %232, 0
  br i1 %233, label %234, label %236

234:                                              ; preds = %231
  %235 = load i8*, i8** %22, align 8
  call void @_ZdlPv(i8* %235) #12
  br label %236

236:                                              ; preds = %101, %231, %234
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #11
  %237 = add nuw i64 %103, 1
  %238 = load i64, i64* %15, align 8
  %239 = load i64, i64* %17, align 8
  %240 = sub i64 %238, %239
  %241 = sdiv exact i64 %240, 24
  %242 = icmp ult i64 %237, %241
  br i1 %242, label %101, label %56

243:                                              ; preds = %91
  %244 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %0, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.7, i64 0, i64 0)) #11
  %245 = load i8, i8* %96, align 1
  %246 = icmp slt i8 %245, 0
  %247 = load i8*, i8** %58, align 8
  %248 = load i64, i64* %59, align 8
  %249 = zext i8 %245 to i64
  %250 = select i1 %246, i8* %247, i8* %57
  %251 = select i1 %246, i64 %248, i64 %249
  %252 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %0, i8* %250, i64 %251) #11
  %253 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #11
  br label %254

254:                                              ; preds = %65, %243, %91
  %255 = phi i8* [ %67, %65 ], [ %96, %243 ], [ %96, %91 ]
  %256 = load i8, i8* %255, align 1
  %257 = icmp slt i8 %256, 0
  br i1 %257, label %258, label %260

258:                                              ; preds = %254
  %259 = load i8*, i8** %58, align 8
  call void @_ZdlPv(i8* %259) #12
  br label %260

260:                                              ; preds = %254, %258
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %57) #11
  ret void
}

declare zeroext i1 @_ZN3net9ParseNameERKNS_3der5InputEPNSt3__16vectorINS5_INS_17X509NameAttributeENS4_9allocatorIS6_EEEENS7_IS9_EEEE(%"class.net::der::Input"* dereferenceable(16), %"class.std::__1::vector.86"*) local_unnamed_addr #3

declare zeroext i1 @_ZN3net16ConvertToRFC2253ERKNSt3__16vectorINS1_INS_17X509NameAttributeENS0_9allocatorIS2_EEEENS3_IS5_EEEEPNS0_12basic_stringIcNS0_11char_traitsIcEENS3_IcEEEE(%"class.std::__1::vector.86"* dereferenceable(24), %"class.std::__1::basic_string"*) local_unnamed_addr #3

declare void @_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_RKS9_(%"class.std::__1::basic_string"* sret, i8*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #3

declare void @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* sret, i8*, ...) local_unnamed_addr #3

declare void @_ZN4base27SplitStringPieceUsingSubstrENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_18WhitespaceHandlingENS_11SplitResultE(%"class.std::__1::vector.49"* sret, i8*, i64, i8*, i64, i32, i32) local_unnamed_addr #3

declare void @_ZN4base9StrAppendEPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEENS_4spanIKNS_16BasicStringPieceIcS3_EELm18446744073709551615EEE(%"class.std::__1::basic_string"*, i64, %"class.base::BasicStringPiece"*) local_unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"*, i8*) local_unnamed_addr #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3net9CertErrorENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector"*, %"struct.net::CertError"* dereferenceable(24)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.net::CertError"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 24
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 768614336404564650
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #13
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.net::CertError"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 24
  %20 = icmp ult i64 %19, 384307168202282325
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 768614336404564650, %14 ]
  %28 = mul i64 %27, 24
  %29 = tail call i8* @_Znwm(i64 %28) #12
  %30 = bitcast i8* %29 to %"struct.net::CertError"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"struct.net::CertError"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"struct.net::CertError", %"struct.net::CertError"* %33, i64 %9
  %35 = getelementptr inbounds %"struct.net::CertError", %"struct.net::CertError"* %33, i64 %32
  %36 = ptrtoint %"struct.net::CertError"* %35 to i64
  %37 = bitcast %"struct.net::CertError"* %34 to i8*
  %38 = bitcast %"struct.net::CertError"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 8 %38, i64 16, i1 false) #11
  %39 = getelementptr inbounds %"struct.net::CertError", %"struct.net::CertError"* %33, i64 %9, i32 2
  %40 = getelementptr inbounds %"struct.net::CertError", %"struct.net::CertError"* %1, i64 0, i32 2
  %41 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %40, i64 0, i32 0, i32 0, i32 0
  %42 = bitcast %"class.std::__1::unique_ptr"* %40 to i64*
  %43 = load i64, i64* %42, align 8
  store %"class.net::CertErrorParams"* null, %"class.net::CertErrorParams"** %41, align 8
  %44 = bitcast %"class.std::__1::unique_ptr"* %39 to i64*
  store i64 %43, i64* %44, align 8
  %45 = getelementptr inbounds %"struct.net::CertError", %"struct.net::CertError"* %34, i64 1
  %46 = ptrtoint %"struct.net::CertError"* %45 to i64
  %47 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %48 = load %"struct.net::CertError"*, %"struct.net::CertError"** %47, align 8
  %49 = load %"struct.net::CertError"*, %"struct.net::CertError"** %3, align 8
  %50 = icmp eq %"struct.net::CertError"* %49, %48
  br i1 %50, label %51, label %53

51:                                               ; preds = %31
  %52 = ptrtoint %"struct.net::CertError"* %48 to i64
  br label %70

53:                                               ; preds = %31, %53
  %54 = phi %"struct.net::CertError"* [ %56, %53 ], [ %34, %31 ]
  %55 = phi %"struct.net::CertError"* [ %57, %53 ], [ %49, %31 ]
  %56 = getelementptr inbounds %"struct.net::CertError", %"struct.net::CertError"* %54, i64 -1
  %57 = getelementptr inbounds %"struct.net::CertError", %"struct.net::CertError"* %55, i64 -1
  %58 = bitcast %"struct.net::CertError"* %56 to i8*
  %59 = bitcast %"struct.net::CertError"* %57 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %58, i8* align 8 %59, i64 16, i1 false) #11
  %60 = getelementptr inbounds %"struct.net::CertError", %"struct.net::CertError"* %54, i64 -1, i32 2
  %61 = getelementptr inbounds %"struct.net::CertError", %"struct.net::CertError"* %55, i64 -1, i32 2
  %62 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %61, i64 0, i32 0, i32 0, i32 0
  %63 = bitcast %"class.std::__1::unique_ptr"* %61 to i64*
  %64 = load i64, i64* %63, align 8
  store %"class.net::CertErrorParams"* null, %"class.net::CertErrorParams"** %62, align 8
  %65 = bitcast %"class.std::__1::unique_ptr"* %60 to i64*
  store i64 %64, i64* %65, align 8
  %66 = icmp eq %"struct.net::CertError"* %57, %48
  br i1 %66, label %67, label %53

67:                                               ; preds = %53
  %68 = load i64, i64* %6, align 8
  %69 = load %"struct.net::CertError"*, %"struct.net::CertError"** %3, align 8
  br label %70

70:                                               ; preds = %51, %67
  %71 = phi %"struct.net::CertError"* [ %48, %51 ], [ %69, %67 ]
  %72 = phi %"struct.net::CertError"* [ %34, %51 ], [ %56, %67 ]
  %73 = phi i64 [ %52, %51 ], [ %68, %67 ]
  %74 = ptrtoint %"struct.net::CertError"* %72 to i64
  store i64 %74, i64* %6, align 8
  store i64 %46, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %75 = inttoptr i64 %73 to %"struct.net::CertError"*
  %76 = icmp eq %"struct.net::CertError"* %71, %75
  br i1 %76, label %90, label %77

77:                                               ; preds = %70, %88
  %78 = phi %"struct.net::CertError"* [ %79, %88 ], [ %71, %70 ]
  %79 = getelementptr inbounds %"struct.net::CertError", %"struct.net::CertError"* %78, i64 -1
  %80 = getelementptr inbounds %"struct.net::CertError", %"struct.net::CertError"* %78, i64 -1, i32 2, i32 0, i32 0, i32 0
  %81 = load %"class.net::CertErrorParams"*, %"class.net::CertErrorParams"** %80, align 8
  store %"class.net::CertErrorParams"* null, %"class.net::CertErrorParams"** %80, align 8
  %82 = icmp eq %"class.net::CertErrorParams"* %81, null
  br i1 %82, label %88, label %83

83:                                               ; preds = %77
  %84 = bitcast %"class.net::CertErrorParams"* %81 to void (%"class.net::CertErrorParams"*)***
  %85 = load void (%"class.net::CertErrorParams"*)**, void (%"class.net::CertErrorParams"*)*** %84, align 8
  %86 = getelementptr inbounds void (%"class.net::CertErrorParams"*)*, void (%"class.net::CertErrorParams"*)** %85, i64 1
  %87 = load void (%"class.net::CertErrorParams"*)*, void (%"class.net::CertErrorParams"*)** %86, align 8
  tail call void %87(%"class.net::CertErrorParams"* nonnull %81) #11
  br label %88

88:                                               ; preds = %83, %77
  %89 = icmp eq %"struct.net::CertError"* %79, %75
  br i1 %89, label %90, label %77

90:                                               ; preds = %88, %70
  %91 = icmp eq i64 %73, 0
  br i1 %91, label %94, label %92

92:                                               ; preds = %90
  %93 = inttoptr i64 %73 to i8*
  tail call void @_ZdlPv(i8* %93) #12
  br label %94

94:                                               ; preds = %90, %92
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #10

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3net10CertErrorsENS_9allocatorIS2_EEE8__appendEm(%"class.std::__1::vector.9"*, i64) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.9", %"class.std::__1::vector.9"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"class.net::CertErrors"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.9", %"class.std::__1::vector.9"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %"class.net::CertErrors"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = sdiv exact i64 %9, 24
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %30, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to %"class.net::CertErrors"*
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %28, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %"class.net::CertErrors", %"class.net::CertErrors"* %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr %"class.net::CertErrors", %"class.net::CertErrors"* %13, i64 %18, i32 0, i32 0, i32 0
  %20 = bitcast %"struct.net::CertError"** %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = urem i64 %23, 24
  %25 = add i64 %23, 24
  %26 = sub i64 %25, %24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 %26, i1 false) #11
  %27 = ptrtoint %"class.net::CertErrors"* %16 to i64
  br label %28

28:                                               ; preds = %12, %15
  %29 = phi i64 [ %27, %15 ], [ %8, %12 ]
  store i64 %29, i64* %7, align 8
  br label %142

30:                                               ; preds = %2
  %31 = bitcast %"class.std::__1::vector.9"* %0 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = sub i64 %8, %32
  %34 = sdiv exact i64 %33, 24
  %35 = add i64 %34, %1
  %36 = icmp ugt i64 %35, 768614336404564650
  br i1 %36, label %37, label %39

37:                                               ; preds = %30
  %38 = bitcast %"class.std::__1::vector.9"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %38) #13
  unreachable

39:                                               ; preds = %30
  %40 = sub i64 %5, %32
  %41 = sdiv exact i64 %40, 24
  %42 = icmp ult i64 %41, 384307168202282325
  br i1 %42, label %43, label %48

43:                                               ; preds = %39
  %44 = shl nsw i64 %41, 1
  %45 = icmp ult i64 %44, %35
  %46 = select i1 %45, i64 %35, i64 %44
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %53, label %48

48:                                               ; preds = %39, %43
  %49 = phi i64 [ %46, %43 ], [ 768614336404564650, %39 ]
  %50 = mul i64 %49, 24
  %51 = tail call i8* @_Znwm(i64 %50) #12
  %52 = bitcast i8* %51 to %"class.net::CertErrors"*
  br label %53

53:                                               ; preds = %43, %48
  %54 = phi i64 [ %49, %48 ], [ 0, %43 ]
  %55 = phi %"class.net::CertErrors"* [ %52, %48 ], [ null, %43 ]
  %56 = getelementptr inbounds %"class.net::CertErrors", %"class.net::CertErrors"* %55, i64 %34
  %57 = ptrtoint %"class.net::CertErrors"* %56 to i64
  %58 = getelementptr inbounds %"class.net::CertErrors", %"class.net::CertErrors"* %55, i64 %54
  %59 = getelementptr inbounds %"class.net::CertErrors", %"class.net::CertErrors"* %56, i64 %1
  br label %60

60:                                               ; preds = %53, %60
  %61 = phi %"class.net::CertErrors"* [ %64, %60 ], [ %56, %53 ]
  %62 = phi i64 [ %65, %60 ], [ %57, %53 ]
  %63 = inttoptr i64 %62 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %63, i8 0, i64 24, i1 false) #11
  %64 = getelementptr inbounds %"class.net::CertErrors", %"class.net::CertErrors"* %61, i64 1
  %65 = ptrtoint %"class.net::CertErrors"* %64 to i64
  %66 = icmp eq %"class.net::CertErrors"* %59, %64
  br i1 %66, label %67, label %60

67:                                               ; preds = %60
  %68 = ptrtoint %"class.net::CertErrors"* %58 to i64
  %69 = ptrtoint %"class.net::CertErrors"* %59 to i64
  %70 = getelementptr inbounds %"class.std::__1::vector.9", %"class.std::__1::vector.9"* %0, i64 0, i32 0, i32 0
  %71 = load %"class.net::CertErrors"*, %"class.net::CertErrors"** %70, align 8
  %72 = load %"class.net::CertErrors"*, %"class.net::CertErrors"** %6, align 8
  %73 = icmp eq %"class.net::CertErrors"* %72, %71
  br i1 %73, label %74, label %76

74:                                               ; preds = %67
  %75 = ptrtoint %"class.net::CertErrors"* %71 to i64
  br label %101

76:                                               ; preds = %67, %76
  %77 = phi %"class.net::CertErrors"* [ %79, %76 ], [ %56, %67 ]
  %78 = phi %"class.net::CertErrors"* [ %80, %76 ], [ %72, %67 ]
  %79 = getelementptr inbounds %"class.net::CertErrors", %"class.net::CertErrors"* %77, i64 -1
  %80 = getelementptr inbounds %"class.net::CertErrors", %"class.net::CertErrors"* %78, i64 -1
  %81 = bitcast %"class.net::CertErrors"* %79 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %81, i8 0, i64 24, i1 false) #11
  %82 = bitcast %"class.net::CertErrors"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = bitcast %"class.net::CertErrors"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.net::CertErrors", %"class.net::CertErrors"* %78, i64 -1, i32 0, i32 0, i32 1
  %86 = bitcast %"struct.net::CertError"** %85 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = getelementptr inbounds %"class.net::CertErrors", %"class.net::CertErrors"* %77, i64 -1, i32 0, i32 0, i32 1
  %89 = bitcast %"struct.net::CertError"** %88 to i64*
  store i64 %87, i64* %89, align 8
  %90 = getelementptr inbounds %"class.net::CertErrors", %"class.net::CertErrors"* %78, i64 -1, i32 0, i32 0, i32 2, i32 0, i32 0
  %91 = bitcast %"struct.net::CertError"** %90 to i64*
  %92 = load i64, i64* %91, align 8
  %93 = getelementptr inbounds %"class.net::CertErrors", %"class.net::CertErrors"* %77, i64 -1, i32 0, i32 0, i32 2, i32 0, i32 0
  %94 = bitcast %"struct.net::CertError"** %93 to i64*
  store i64 %92, i64* %94, align 8
  %95 = bitcast %"class.net::CertErrors"* %80 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %95, i8 0, i64 24, i1 false) #11
  %96 = icmp eq %"class.net::CertErrors"* %80, %71
  br i1 %96, label %97, label %76

97:                                               ; preds = %76
  %98 = ptrtoint %"class.net::CertErrors"* %79 to i64
  %99 = load i64, i64* %31, align 8
  %100 = load %"class.net::CertErrors"*, %"class.net::CertErrors"** %6, align 8
  br label %101

101:                                              ; preds = %74, %97
  %102 = phi %"class.net::CertErrors"* [ %71, %74 ], [ %100, %97 ]
  %103 = phi i64 [ %57, %74 ], [ %98, %97 ]
  %104 = phi i64 [ %75, %74 ], [ %99, %97 ]
  store i64 %103, i64* %31, align 8
  store i64 %69, i64* %7, align 8
  store i64 %68, i64* %4, align 8
  %105 = inttoptr i64 %104 to %"class.net::CertErrors"*
  %106 = icmp eq %"class.net::CertErrors"* %102, %105
  br i1 %106, label %138, label %107

107:                                              ; preds = %101, %136
  %108 = phi %"class.net::CertErrors"* [ %109, %136 ], [ %102, %101 ]
  %109 = getelementptr inbounds %"class.net::CertErrors", %"class.net::CertErrors"* %108, i64 -1
  %110 = getelementptr inbounds %"class.net::CertErrors", %"class.net::CertErrors"* %109, i64 0, i32 0, i32 0, i32 0
  %111 = load %"struct.net::CertError"*, %"struct.net::CertError"** %110, align 8
  %112 = icmp eq %"struct.net::CertError"* %111, null
  br i1 %112, label %136, label %113

113:                                              ; preds = %107
  %114 = bitcast %"struct.net::CertError"* %111 to i8*
  %115 = getelementptr inbounds %"class.net::CertErrors", %"class.net::CertErrors"* %108, i64 -1, i32 0, i32 0, i32 1
  %116 = load %"struct.net::CertError"*, %"struct.net::CertError"** %115, align 8
  %117 = icmp eq %"struct.net::CertError"* %116, %111
  br i1 %117, label %134, label %118

118:                                              ; preds = %113, %129
  %119 = phi %"struct.net::CertError"* [ %120, %129 ], [ %116, %113 ]
  %120 = getelementptr inbounds %"struct.net::CertError", %"struct.net::CertError"* %119, i64 -1
  %121 = getelementptr inbounds %"struct.net::CertError", %"struct.net::CertError"* %119, i64 -1, i32 2, i32 0, i32 0, i32 0
  %122 = load %"class.net::CertErrorParams"*, %"class.net::CertErrorParams"** %121, align 8
  store %"class.net::CertErrorParams"* null, %"class.net::CertErrorParams"** %121, align 8
  %123 = icmp eq %"class.net::CertErrorParams"* %122, null
  br i1 %123, label %129, label %124

124:                                              ; preds = %118
  %125 = bitcast %"class.net::CertErrorParams"* %122 to void (%"class.net::CertErrorParams"*)***
  %126 = load void (%"class.net::CertErrorParams"*)**, void (%"class.net::CertErrorParams"*)*** %125, align 8
  %127 = getelementptr inbounds void (%"class.net::CertErrorParams"*)*, void (%"class.net::CertErrorParams"*)** %126, i64 1
  %128 = load void (%"class.net::CertErrorParams"*)*, void (%"class.net::CertErrorParams"*)** %127, align 8
  tail call void %128(%"class.net::CertErrorParams"* nonnull %122) #11
  br label %129

129:                                              ; preds = %124, %118
  %130 = icmp eq %"struct.net::CertError"* %120, %111
  br i1 %130, label %131, label %118

131:                                              ; preds = %129
  %132 = bitcast %"class.net::CertErrors"* %109 to i8**
  %133 = load i8*, i8** %132, align 8
  br label %134

134:                                              ; preds = %131, %113
  %135 = phi i8* [ %133, %131 ], [ %114, %113 ]
  store %"struct.net::CertError"* %111, %"struct.net::CertError"** %115, align 8
  tail call void @_ZdlPv(i8* %135) #12
  br label %136

136:                                              ; preds = %134, %107
  %137 = icmp eq %"class.net::CertErrors"* %109, %105
  br i1 %137, label %138, label %107

138:                                              ; preds = %136, %101
  %139 = icmp eq i64 %104, 0
  br i1 %139, label %142, label %140

140:                                              ; preds = %138
  %141 = inttoptr i64 %104 to i8*
  tail call void @_ZdlPv(i8* %141) #12
  br label %142

142:                                              ; preds = %140, %138, %28
  ret void
}

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK3net10CertErrors13ToDebugStringEv: argument 0"}
!4 = distinct !{!4, !"_ZNK3net10CertErrors13ToDebugStringEv"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNK3net10CertErrors13ToDebugStringEv: argument 0"}
!7 = distinct !{!7, !"_ZNK3net10CertErrors13ToDebugStringEv"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_: argument 0"}
!10 = distinct !{!10, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_"}
