; ModuleID = '../../components/omnibox/browser/in_memory_url_index_types.cc'
source_filename = "../../components/omnibox/browser/in_memory_url_index_types.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.std::nothrow_t" = type { i8 }
%struct.HistoryInfoMapValue = type { %"class.history::URLRow", %"class.std::__1::vector.41" }
%"class.history::URLRow" = type <{ i32 (...)**, i64, %class.GURL, %"class.std::__1::basic_string", i32, i32, %"class.base::Time", i8, [7 x i8] }>
%class.GURL = type { %"class.std::__1::basic_string.29", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr" }
%"class.std::__1::basic_string.29" = type { %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.32 }
%union.anon.32 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %class.GURL* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::vector.41" = type { %"class.std::__1::__vector_base.42" }
%"class.std::__1::__vector_base.42" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.43" }
%"struct.std::__1::pair" = type <{ %"class.base::Time", i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"struct.std::__1::pair"* }
%struct.RowWordStarts = type { %"class.std::__1::vector.14", %"class.std::__1::vector.14" }
%"class.std::__1::vector.14" = type { %"class.std::__1::__vector_base.15" }
%"class.std::__1::__vector_base.15" = type { i64*, i64*, %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { i64* }
%"class.std::__1::vector.6" = type { %"class.std::__1::__vector_base.7" }
%"class.std::__1::__vector_base.7" = type { %struct.TermMatch*, %struct.TermMatch*, %"class.std::__1::__compressed_pair.8" }
%struct.TermMatch = type { i32, i64, i64 }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %struct.TermMatch* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::basic_string"* }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon }
%struct.anon = type { %"struct.std::__1::__padding", i8 }
%"struct.std::__1::__padding" = type { [1 x i8] }
%"class.std::__1::allocator" = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::back_insert_iterator" = type { %"class.std::__1::vector.6"* }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector" }
%class.TailoredWordBreakIterator = type { %"class.base::i18n::BreakIterator", i64, i64, %"class.base::BasicStringPiece" }
%"class.base::i18n::BreakIterator" = type { i8*, %"class.base::BasicStringPiece", %"class.std::__1::basic_string", i32, i64, i64 }
%"class.base::BasicStringPiece" = type { i16*, i64 }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.base::internal::flat_tree.23" = type { %"class.std::__1::vector.24" }
%"class.std::__1::vector.24" = type { %"class.std::__1::__vector_base.25" }
%"class.std::__1::__vector_base.25" = type { i16*, i16*, %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { i16* }
%"struct.base::internal::flat_tree<char16_t, base::identity, std::__1::less<void>, std::__1::vector<char16_t, std::__1::allocator<char16_t> > >::value_compare" = type { i8 }
%"struct.base::internal::flat_tree<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >, base::identity, std::__1::less<void>, std::__1::vector<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >, std::__1::allocator<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> > > > >::value_compare" = type { i8 }
%"class.std::__1::reverse_iterator.66" = type { %"class.std::__1::__wrap_iter.22", %"class.std::__1::__wrap_iter.22" }
%"class.std::__1::__wrap_iter.22" = type { %"class.std::__1::basic_string"* }

$_ZNSt3__16vectorI9TermMatchNS_9allocatorIS1_EEE6insertINS_11__wrap_iterIPS1_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS1_NS_15iterator_traitsISA_E9referenceEEE5valueES8_E4typeENS6_IPKS1_EESA_SA_ = comdat any

$_ZNSt3__16vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS4_IS6_EEE21__push_back_slow_pathIRKS6_EEvOT_ = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEC2ERKS5_mmRKS4_ = comdat any

$_ZNSt3__16__sortIRPFbRK9TermMatchS3_EPS1_EEvT0_S8_T_ = comdat any

$_ZNSt3__17__sort4IRPFbRK9TermMatchS3_EPS1_EEjT0_S8_S8_S8_T_ = comdat any

$_ZNSt3__118__insertion_sort_3IRPFbRK9TermMatchS3_EPS1_EEvT0_S8_T_ = comdat any

$_ZNSt3__127__insertion_sort_incompleteIRPFbRK9TermMatchS3_EPS1_EEbT0_S8_T_ = comdat any

$_ZNSt3__120back_insert_iteratorINS_6vectorI9TermMatchNS_9allocatorIS2_EEEEEaSERKS2_ = comdat any

$_ZN4base8internal9flat_treeINSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEENS_8identityENS2_4lessIvEENS2_6vectorIS8_NS6_IS8_EEEEE15sort_and_uniqueENS2_11__wrap_iterIPS8_EESI_ = comdat any

$_ZNSt3__16uniqueINS_11__wrap_iterIPNS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEEN4base8internal9NotFnImplINSB_9flat_treeIS7_NSA_8identityENS_4lessIvEENS_6vectorIS7_NS5_IS7_EEEEE13value_compareEEEEET_SN_SN_T0_ = comdat any

$_ZNSt3__113__stable_sortIRN4base8internal9flat_treeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS1_8identityENS_4lessIvEENS_6vectorIS9_NS7_IS9_EEEEE13value_compareENS_11__wrap_iterIPS9_EEEEvT0_SM_T_NS_15iterator_traitsISM_E15difference_typeEPNSP_10value_typeEl = comdat any

$_ZNSt3__116__insertion_sortIRN4base8internal9flat_treeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS1_8identityENS_4lessIvEENS_6vectorIS9_NS7_IS9_EEEEE13value_compareENS_11__wrap_iterIPS9_EEEEvT0_SM_T_ = comdat any

$_ZNSt3__118__stable_sort_moveIRN4base8internal9flat_treeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS1_8identityENS_4lessIvEENS_6vectorIS9_NS7_IS9_EEEEE13value_compareENS_11__wrap_iterIPS9_EEEEvT0_SM_T_NS_15iterator_traitsISM_E15difference_typeEPNSP_10value_typeE = comdat any

$_ZNSt3__119__merge_move_assignIRN4base8internal9flat_treeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS1_8identityENS_4lessIvEENS_6vectorIS9_NS7_IS9_EEEEE13value_compareEPS9_SJ_NS_11__wrap_iterISJ_EEEEvT0_SM_T1_SN_T2_T_ = comdat any

$_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS1_8identityENS_4lessIvEENS_6vectorIS9_NS7_IS9_EEEEE13value_compareENS_11__wrap_iterIPS9_EEEEvT0_SM_SM_T_NS_15iterator_traitsISM_E15difference_typeESQ_PNSP_10value_typeEl = comdat any

$_ZNSt3__121__insertion_sort_moveIRN4base8internal9flat_treeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS1_8identityENS_4lessIvEENS_6vectorIS9_NS7_IS9_EEEEE13value_compareENS_11__wrap_iterIPS9_EEEEvT0_SM_PNS_15iterator_traitsISM_E10value_typeET_ = comdat any

$_ZNSt3__124__buffered_inplace_mergeIRN4base8internal9flat_treeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS1_8identityENS_4lessIvEENS_6vectorIS9_NS7_IS9_EEEEE13value_compareENS_11__wrap_iterIPS9_EEEEvT0_SM_SM_T_NS_15iterator_traitsISM_E15difference_typeESQ_PNSP_10value_typeE = comdat any

$_ZNSt3__120__half_inplace_mergeIRN4base8internal9flat_treeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS1_8identityENS_4lessIvEENS_6vectorIS9_NS7_IS9_EEEEE13value_compareEPS9_NS_11__wrap_iterISJ_EESL_EEvT0_SM_T1_SN_T2_T_ = comdat any

$_ZNSt3__120__half_inplace_mergeINS_8__invertIRN4base8internal9flat_treeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS2_8identityENS_4lessIvEENS_6vectorISA_NS8_ISA_EEEEE13value_compareEEENS_16reverse_iteratorIPSA_EENSL_INS_11__wrap_iterISM_EEEESQ_EEvT0_SR_T1_SS_T2_T_ = comdat any

$_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIDsNS1_8identityENS_4lessIvEENS_6vectorIDsNS_9allocatorIDsEEEEE13value_compareENS_11__wrap_iterIPDsEEEEvT0_SH_T_NS_15iterator_traitsISH_E15difference_typeEPNSK_10value_typeEl = comdat any

$_ZNSt3__118__stable_sort_moveIRN4base8internal9flat_treeIDsNS1_8identityENS_4lessIvEENS_6vectorIDsNS_9allocatorIDsEEEEE13value_compareENS_11__wrap_iterIPDsEEEEvT0_SH_T_NS_15iterator_traitsISH_E15difference_typeEPNSK_10value_typeE = comdat any

$_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeIDsNS1_8identityENS_4lessIvEENS_6vectorIDsNS_9allocatorIDsEEEEE13value_compareENS_11__wrap_iterIPDsEEEEvT0_SH_SH_T_NS_15iterator_traitsISH_E15difference_typeESL_PNSK_10value_typeEl = comdat any

$_ZNSt3__16vectorINS_4pairIN4base4TimeEN2ui14PageTransitionEEENS_9allocatorIS6_EEE6assignIPS6_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISD_E9referenceEEE5valueEvE4typeESD_SD_ = comdat any

$_ZNSt3__16vectorImNS_9allocatorImEEE6assignIPmEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleImNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_ = comdat any

@_ZSt7nothrow = external global %"struct.std::nothrow_t", align 1

@_ZN19HistoryInfoMapValueC1Ev = hidden unnamed_addr alias void (%struct.HistoryInfoMapValue*), void (%struct.HistoryInfoMapValue*)* @_ZN19HistoryInfoMapValueC2Ev
@_ZN19HistoryInfoMapValueC1ERKS_ = hidden unnamed_addr alias void (%struct.HistoryInfoMapValue*, %struct.HistoryInfoMapValue*), void (%struct.HistoryInfoMapValue*, %struct.HistoryInfoMapValue*)* @_ZN19HistoryInfoMapValueC2ERKS_
@_ZN19HistoryInfoMapValueC1EOS_ = hidden unnamed_addr alias void (%struct.HistoryInfoMapValue*, %struct.HistoryInfoMapValue*), void (%struct.HistoryInfoMapValue*, %struct.HistoryInfoMapValue*)* @_ZN19HistoryInfoMapValueC2EOS_
@_ZN19HistoryInfoMapValueD1Ev = hidden unnamed_addr alias void (%struct.HistoryInfoMapValue*), void (%struct.HistoryInfoMapValue*)* @_ZN19HistoryInfoMapValueD2Ev
@_ZN13RowWordStartsC1Ev = hidden unnamed_addr alias void (%struct.RowWordStarts*), void (%struct.RowWordStarts*)* @_ZN13RowWordStartsC2Ev
@_ZN13RowWordStartsC1ERKS_ = hidden unnamed_addr alias void (%struct.RowWordStarts*, %struct.RowWordStarts*), void (%struct.RowWordStarts*, %struct.RowWordStarts*)* @_ZN13RowWordStartsC2ERKS_
@_ZN13RowWordStartsC1EOS_ = hidden unnamed_addr alias void (%struct.RowWordStarts*, %struct.RowWordStarts*), void (%struct.RowWordStarts*, %struct.RowWordStarts*)* @_ZN13RowWordStartsC2EOS_
@_ZN13RowWordStartsD1Ev = hidden unnamed_addr alias void (%struct.RowWordStarts*), void (%struct.RowWordStarts*)* @_ZN13RowWordStartsD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_Z18MatchTermsInStringRKNSt3__16vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS4_IS6_EEEERKS6_(%"class.std::__1::vector.6"* noalias sret, %"class.std::__1::vector"* nocapture readonly dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 {
  %4 = alloca %"class.std::__1::vector.6", align 8
  %5 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %0, i64 0, i32 0, i32 1
  %6 = bitcast %"class.std::__1::vector.6"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 24, i1 false) #12
  %7 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::basic_string"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector"* %1 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %9, %11
  br i1 %12, label %41, label %13

13:                                               ; preds = %3
  %14 = bitcast %"class.std::__1::vector.6"* %4 to i8*
  %15 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %4, i64 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %4, i64 0, i32 0, i32 1
  %17 = bitcast %struct.TermMatch** %16 to i64*
  %18 = bitcast %"class.std::__1::vector.6"* %4 to i8*
  br label %19

19:                                               ; preds = %13, %34
  %20 = phi i64 [ %11, %13 ], [ %37, %34 ]
  %21 = phi i64 [ 0, %13 ], [ %35, %34 ]
  %22 = inttoptr i64 %20 to %"class.std::__1::basic_string"*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #12
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %22, i64 %21
  %24 = trunc i64 %21 to i32
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 -86, i64 24, i1 false)
  call void @_Z17MatchTermInStringRKNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEES7_i(%"class.std::__1::vector.6"* nonnull sret %4, %"class.std::__1::basic_string"* dereferenceable(24) %23, %"class.std::__1::basic_string"* dereferenceable(24) %2, i32 %24)
  %25 = load %struct.TermMatch*, %struct.TermMatch** %5, align 8
  %26 = load %struct.TermMatch*, %struct.TermMatch** %15, align 8
  %27 = load %struct.TermMatch*, %struct.TermMatch** %16, align 8
  %28 = call %struct.TermMatch* @_ZNSt3__16vectorI9TermMatchNS_9allocatorIS1_EEE6insertINS_11__wrap_iterIPS1_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS1_NS_15iterator_traitsISA_E9referenceEEE5valueES8_E4typeENS6_IPKS1_EESA_SA_(%"class.std::__1::vector.6"* %0, %struct.TermMatch* %25, %struct.TermMatch* %26, %struct.TermMatch* %27)
  %29 = load %struct.TermMatch*, %struct.TermMatch** %15, align 8
  %30 = icmp eq %struct.TermMatch* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %19
  %32 = ptrtoint %struct.TermMatch* %29 to i64
  store i64 %32, i64* %17, align 8
  %33 = bitcast %struct.TermMatch* %29 to i8*
  call void @_ZdlPv(i8* %33) #13
  br label %34

34:                                               ; preds = %19, %31
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #12
  %35 = add nuw i64 %21, 1
  %36 = load i64, i64* %8, align 8
  %37 = load i64, i64* %10, align 8
  %38 = sub i64 %36, %37
  %39 = sdiv exact i64 %38, 24
  %40 = icmp ult i64 %35, %39
  br i1 %40, label %19, label %41

41:                                               ; preds = %34, %3
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_Z17MatchTermInStringRKNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEES7_i(%"class.std::__1::vector.6"* noalias sret, %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24), i32) local_unnamed_addr #0 {
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #12
  %7 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %7, i64 0, i32 1, i32 1
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  br i1 %10, label %11, label %17

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = icmp ugt i64 %13, 2048
  br i1 %14, label %15, label %19

15:                                               ; preds = %11
  %16 = bitcast %"class.std::__1::basic_string"* %2 to %"class.std::__1::allocator"*
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEC2ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %5, %"class.std::__1::basic_string"* dereferenceable(24) %2, i64 0, i64 2048, %"class.std::__1::allocator"* dereferenceable(1) %16) #12
  br label %188

17:                                               ; preds = %4
  %18 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %6, i8* align 8 %18, i64 24, i1 false) #12
  br label %188

19:                                               ; preds = %11
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i16*, i16** %20, align 8
  %22 = icmp ult i64 %13, 11
  br i1 %22, label %23, label %28

23:                                               ; preds = %19
  %24 = bitcast %"class.std::__1::basic_string"* %5 to i16*
  %25 = trunc i64 %13 to i8
  %26 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %26, i64 0, i32 1, i32 1
  store i8 %25, i8* %27, align 1
  br label %41

28:                                               ; preds = %19
  %29 = add nuw nsw i64 %13, 8
  %30 = and i64 %29, -8
  %31 = icmp slt i64 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %28
  tail call void @abort() #14
  unreachable

33:                                               ; preds = %28
  %34 = shl i64 %30, 1
  %35 = tail call i8* @_Znwm(i64 %34) #13
  %36 = bitcast i8* %35 to i16*
  %37 = bitcast %"class.std::__1::basic_string"* %5 to i8**
  store i8* %35, i8** %37, align 8
  %38 = or i64 %30, -9223372036854775808
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %38, i64* %39, align 8
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %13, i64* %40, align 8
  br label %41

41:                                               ; preds = %33, %23
  %42 = phi i16* [ %24, %23 ], [ %36, %33 ]
  %43 = add nuw nsw i64 %13, 1
  %44 = add i64 %13, 1
  %45 = icmp ult i64 %44, 16
  br i1 %45, label %135, label %46

46:                                               ; preds = %41
  %47 = add i64 %13, 1
  %48 = getelementptr i16, i16* %42, i64 %47
  %49 = getelementptr i16, i16* %21, i64 %47
  %50 = icmp ult i16* %42, %49
  %51 = icmp ult i16* %21, %48
  %52 = and i1 %50, %51
  br i1 %52, label %135, label %53

53:                                               ; preds = %46
  %54 = and i64 %44, -16
  %55 = sub i64 %43, %54
  %56 = getelementptr i16, i16* %21, i64 %54
  %57 = getelementptr i16, i16* %42, i64 %54
  %58 = add i64 %54, -16
  %59 = lshr exact i64 %58, 4
  %60 = add nuw nsw i64 %59, 1
  %61 = and i64 %60, 3
  %62 = icmp ult i64 %58, 48
  br i1 %62, label %114, label %63

63:                                               ; preds = %53
  %64 = sub nsw i64 %60, %61
  br label %65

65:                                               ; preds = %65, %63
  %66 = phi i64 [ 0, %63 ], [ %111, %65 ]
  %67 = phi i64 [ %64, %63 ], [ %112, %65 ]
  %68 = getelementptr i16, i16* %21, i64 %66
  %69 = getelementptr i16, i16* %42, i64 %66
  %70 = bitcast i16* %68 to <8 x i16>*
  %71 = load <8 x i16>, <8 x i16>* %70, align 2, !alias.scope !2
  %72 = getelementptr i16, i16* %68, i64 8
  %73 = bitcast i16* %72 to <8 x i16>*
  %74 = load <8 x i16>, <8 x i16>* %73, align 2, !alias.scope !2
  %75 = bitcast i16* %69 to <8 x i16>*
  store <8 x i16> %71, <8 x i16>* %75, align 2, !alias.scope !5, !noalias !2
  %76 = getelementptr i16, i16* %69, i64 8
  %77 = bitcast i16* %76 to <8 x i16>*
  store <8 x i16> %74, <8 x i16>* %77, align 2, !alias.scope !5, !noalias !2
  %78 = or i64 %66, 16
  %79 = getelementptr i16, i16* %21, i64 %78
  %80 = getelementptr i16, i16* %42, i64 %78
  %81 = bitcast i16* %79 to <8 x i16>*
  %82 = load <8 x i16>, <8 x i16>* %81, align 2, !alias.scope !2
  %83 = getelementptr i16, i16* %79, i64 8
  %84 = bitcast i16* %83 to <8 x i16>*
  %85 = load <8 x i16>, <8 x i16>* %84, align 2, !alias.scope !2
  %86 = bitcast i16* %80 to <8 x i16>*
  store <8 x i16> %82, <8 x i16>* %86, align 2, !alias.scope !5, !noalias !2
  %87 = getelementptr i16, i16* %80, i64 8
  %88 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %85, <8 x i16>* %88, align 2, !alias.scope !5, !noalias !2
  %89 = or i64 %66, 32
  %90 = getelementptr i16, i16* %21, i64 %89
  %91 = getelementptr i16, i16* %42, i64 %89
  %92 = bitcast i16* %90 to <8 x i16>*
  %93 = load <8 x i16>, <8 x i16>* %92, align 2, !alias.scope !2
  %94 = getelementptr i16, i16* %90, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  %96 = load <8 x i16>, <8 x i16>* %95, align 2, !alias.scope !2
  %97 = bitcast i16* %91 to <8 x i16>*
  store <8 x i16> %93, <8 x i16>* %97, align 2, !alias.scope !5, !noalias !2
  %98 = getelementptr i16, i16* %91, i64 8
  %99 = bitcast i16* %98 to <8 x i16>*
  store <8 x i16> %96, <8 x i16>* %99, align 2, !alias.scope !5, !noalias !2
  %100 = or i64 %66, 48
  %101 = getelementptr i16, i16* %21, i64 %100
  %102 = getelementptr i16, i16* %42, i64 %100
  %103 = bitcast i16* %101 to <8 x i16>*
  %104 = load <8 x i16>, <8 x i16>* %103, align 2, !alias.scope !2
  %105 = getelementptr i16, i16* %101, i64 8
  %106 = bitcast i16* %105 to <8 x i16>*
  %107 = load <8 x i16>, <8 x i16>* %106, align 2, !alias.scope !2
  %108 = bitcast i16* %102 to <8 x i16>*
  store <8 x i16> %104, <8 x i16>* %108, align 2, !alias.scope !5, !noalias !2
  %109 = getelementptr i16, i16* %102, i64 8
  %110 = bitcast i16* %109 to <8 x i16>*
  store <8 x i16> %107, <8 x i16>* %110, align 2, !alias.scope !5, !noalias !2
  %111 = add i64 %66, 64
  %112 = add i64 %67, -4
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %114, label %65, !llvm.loop !7

114:                                              ; preds = %65, %53
  %115 = phi i64 [ 0, %53 ], [ %111, %65 ]
  %116 = icmp eq i64 %61, 0
  br i1 %116, label %133, label %117

117:                                              ; preds = %114, %117
  %118 = phi i64 [ %130, %117 ], [ %115, %114 ]
  %119 = phi i64 [ %131, %117 ], [ %61, %114 ]
  %120 = getelementptr i16, i16* %21, i64 %118
  %121 = getelementptr i16, i16* %42, i64 %118
  %122 = bitcast i16* %120 to <8 x i16>*
  %123 = load <8 x i16>, <8 x i16>* %122, align 2, !alias.scope !2
  %124 = getelementptr i16, i16* %120, i64 8
  %125 = bitcast i16* %124 to <8 x i16>*
  %126 = load <8 x i16>, <8 x i16>* %125, align 2, !alias.scope !2
  %127 = bitcast i16* %121 to <8 x i16>*
  store <8 x i16> %123, <8 x i16>* %127, align 2, !alias.scope !5, !noalias !2
  %128 = getelementptr i16, i16* %121, i64 8
  %129 = bitcast i16* %128 to <8 x i16>*
  store <8 x i16> %126, <8 x i16>* %129, align 2, !alias.scope !5, !noalias !2
  %130 = add i64 %118, 16
  %131 = add i64 %119, -1
  %132 = icmp eq i64 %131, 0
  br i1 %132, label %133, label %117, !llvm.loop !9

133:                                              ; preds = %117, %114
  %134 = icmp eq i64 %44, %54
  br i1 %134, label %188, label %135

135:                                              ; preds = %133, %46, %41
  %136 = phi i64 [ %43, %46 ], [ %43, %41 ], [ %55, %133 ]
  %137 = phi i16* [ %21, %46 ], [ %21, %41 ], [ %56, %133 ]
  %138 = phi i16* [ %42, %46 ], [ %42, %41 ], [ %57, %133 ]
  %139 = add i64 %136, -1
  %140 = and i64 %136, 7
  %141 = icmp eq i64 %140, 0
  br i1 %141, label %153, label %142

142:                                              ; preds = %135, %142
  %143 = phi i64 [ %148, %142 ], [ %136, %135 ]
  %144 = phi i16* [ %150, %142 ], [ %137, %135 ]
  %145 = phi i16* [ %149, %142 ], [ %138, %135 ]
  %146 = phi i64 [ %151, %142 ], [ %140, %135 ]
  %147 = load i16, i16* %144, align 2
  store i16 %147, i16* %145, align 2
  %148 = add i64 %143, -1
  %149 = getelementptr inbounds i16, i16* %145, i64 1
  %150 = getelementptr inbounds i16, i16* %144, i64 1
  %151 = add i64 %146, -1
  %152 = icmp eq i64 %151, 0
  br i1 %152, label %153, label %142, !llvm.loop !11

153:                                              ; preds = %142, %135
  %154 = phi i64 [ %136, %135 ], [ %148, %142 ]
  %155 = phi i16* [ %137, %135 ], [ %150, %142 ]
  %156 = phi i16* [ %138, %135 ], [ %149, %142 ]
  %157 = icmp ult i64 %139, 7
  br i1 %157, label %188, label %158

158:                                              ; preds = %153, %158
  %159 = phi i64 [ %184, %158 ], [ %154, %153 ]
  %160 = phi i16* [ %186, %158 ], [ %155, %153 ]
  %161 = phi i16* [ %185, %158 ], [ %156, %153 ]
  %162 = load i16, i16* %160, align 2
  store i16 %162, i16* %161, align 2
  %163 = getelementptr inbounds i16, i16* %161, i64 1
  %164 = getelementptr inbounds i16, i16* %160, i64 1
  %165 = load i16, i16* %164, align 2
  store i16 %165, i16* %163, align 2
  %166 = getelementptr inbounds i16, i16* %161, i64 2
  %167 = getelementptr inbounds i16, i16* %160, i64 2
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = getelementptr inbounds i16, i16* %161, i64 3
  %170 = getelementptr inbounds i16, i16* %160, i64 3
  %171 = load i16, i16* %170, align 2
  store i16 %171, i16* %169, align 2
  %172 = getelementptr inbounds i16, i16* %161, i64 4
  %173 = getelementptr inbounds i16, i16* %160, i64 4
  %174 = load i16, i16* %173, align 2
  store i16 %174, i16* %172, align 2
  %175 = getelementptr inbounds i16, i16* %161, i64 5
  %176 = getelementptr inbounds i16, i16* %160, i64 5
  %177 = load i16, i16* %176, align 2
  store i16 %177, i16* %175, align 2
  %178 = getelementptr inbounds i16, i16* %161, i64 6
  %179 = getelementptr inbounds i16, i16* %160, i64 6
  %180 = load i16, i16* %179, align 2
  store i16 %180, i16* %178, align 2
  %181 = getelementptr inbounds i16, i16* %161, i64 7
  %182 = getelementptr inbounds i16, i16* %160, i64 7
  %183 = load i16, i16* %182, align 2
  store i16 %183, i16* %181, align 2
  %184 = add i64 %159, -8
  %185 = getelementptr inbounds i16, i16* %161, i64 8
  %186 = getelementptr inbounds i16, i16* %160, i64 8
  %187 = icmp eq i64 %184, 0
  br i1 %187, label %188, label %158, !llvm.loop !12

188:                                              ; preds = %153, %158, %133, %17, %15
  %189 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %0, i64 0, i32 0, i32 1
  %190 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %191 = bitcast %"class.std::__1::vector.6"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %191, i8 0, i64 24, i1 false) #12
  %192 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %193 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %192, i64 0, i32 1, i32 1
  %194 = load i8, i8* %193, align 1
  %195 = icmp slt i8 %194, 0
  %196 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %197 = load i16*, i16** %196, align 8
  %198 = bitcast %"class.std::__1::basic_string"* %5 to i16*
  %199 = select i1 %195, i16* %197, i16* %198
  %200 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %201 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %200, i64 0, i32 1, i32 1
  %202 = load i8, i8* %201, align 1
  %203 = icmp slt i8 %202, 0
  %204 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %205 = load i16*, i16** %204, align 8
  %206 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %207 = load i64, i64* %206, align 8
  %208 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %209 = zext i8 %202 to i64
  %210 = select i1 %203, i16* %205, i16* %208
  %211 = select i1 %203, i64 %207, i64 %209
  %212 = icmp eq i64 %211, 0
  br i1 %212, label %270, label %213

213:                                              ; preds = %188
  %214 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %215 = load i64, i64* %214, align 8
  %216 = zext i8 %194 to i64
  %217 = select i1 %195, i64 %215, i64 %216
  %218 = getelementptr inbounds i16, i16* %199, i64 %217
  %219 = shl nuw i64 %211, 1
  %220 = ashr exact i64 %219, 1
  %221 = ptrtoint i16* %218 to i64
  %222 = ptrtoint i16* %199 to i64
  %223 = shl nuw i64 %217, 1
  %224 = ashr exact i64 %223, 1
  %225 = icmp slt i64 %224, %220
  br i1 %225, label %419, label %226

226:                                              ; preds = %213
  %227 = load i16, i16* %210, align 2
  br label %228

228:                                              ; preds = %257, %226
  %229 = phi i64 [ %224, %226 ], [ %261, %257 ]
  %230 = phi i16* [ %199, %226 ], [ %258, %257 ]
  %231 = sub nsw i64 %229, %220
  %232 = add nsw i64 %231, 1
  %233 = icmp eq i64 %232, 0
  br i1 %233, label %419, label %234

234:                                              ; preds = %228, %239
  %235 = phi i64 [ %241, %239 ], [ %232, %228 ]
  %236 = phi i16* [ %240, %239 ], [ %230, %228 ]
  %237 = load i16, i16* %236, align 2
  %238 = icmp eq i16 %237, %227
  br i1 %238, label %243, label %239

239:                                              ; preds = %234
  %240 = getelementptr inbounds i16, i16* %236, i64 1
  %241 = add i64 %235, -1
  %242 = icmp eq i64 %241, 0
  br i1 %242, label %419, label %234

243:                                              ; preds = %234
  %244 = icmp eq i16* %236, null
  br i1 %244, label %419, label %245

245:                                              ; preds = %243, %252
  %246 = phi i16* [ %250, %252 ], [ %236, %243 ]
  %247 = phi i16* [ %253, %252 ], [ %210, %243 ]
  %248 = phi i64 [ %249, %252 ], [ %220, %243 ]
  %249 = add i64 %248, -1
  %250 = getelementptr inbounds i16, i16* %246, i64 1
  %251 = icmp eq i64 %249, 0
  br i1 %251, label %263, label %252

252:                                              ; preds = %245
  %253 = getelementptr inbounds i16, i16* %247, i64 1
  %254 = load i16, i16* %250, align 2
  %255 = load i16, i16* %253, align 2
  %256 = icmp eq i16 %255, %254
  br i1 %256, label %245, label %257

257:                                              ; preds = %252
  %258 = getelementptr inbounds i16, i16* %236, i64 1
  %259 = ptrtoint i16* %258 to i64
  %260 = sub i64 %221, %259
  %261 = ashr exact i64 %260, 1
  %262 = icmp slt i64 %261, %220
  br i1 %262, label %419, label %228

263:                                              ; preds = %245
  %264 = ptrtoint i16* %236 to i64
  %265 = icmp eq i16* %236, %218
  %266 = sub i64 %264, %222
  %267 = ashr exact i64 %266, 1
  %268 = icmp eq i64 %266, -2
  %269 = or i1 %265, %268
  br i1 %269, label %419, label %270

270:                                              ; preds = %263, %188
  %271 = phi i64 [ 0, %188 ], [ %267, %263 ]
  %272 = bitcast %struct.TermMatch** %189 to i64*
  %273 = bitcast %"class.std::__1::vector.6"* %0 to i64*
  %274 = bitcast %struct.TermMatch** %190 to i64*
  %275 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  br label %276

276:                                              ; preds = %415, %270
  %277 = phi i64 [ 0, %270 ], [ %418, %415 ]
  %278 = phi %struct.TermMatch* [ null, %270 ], [ %417, %415 ]
  %279 = phi %struct.TermMatch* [ null, %270 ], [ %416, %415 ]
  %280 = phi i64 [ %207, %270 ], [ %352, %415 ]
  %281 = phi i8 [ %202, %270 ], [ %349, %415 ]
  %282 = phi i64 [ %271, %270 ], [ %413, %415 ]
  %283 = icmp slt i8 %281, 0
  %284 = zext i8 %281 to i64
  %285 = select i1 %283, i64 %280, i64 %284
  %286 = icmp ult %struct.TermMatch* %279, %278
  %287 = ptrtoint %struct.TermMatch* %278 to i64
  br i1 %286, label %288, label %294

288:                                              ; preds = %276
  %289 = getelementptr inbounds %struct.TermMatch, %struct.TermMatch* %279, i64 0, i32 0
  store i32 %3, i32* %289, align 8
  %290 = getelementptr inbounds %struct.TermMatch, %struct.TermMatch* %279, i64 0, i32 1
  store i64 %282, i64* %290, align 8
  %291 = getelementptr inbounds %struct.TermMatch, %struct.TermMatch* %279, i64 0, i32 2
  store i64 %285, i64* %291, align 8
  %292 = getelementptr inbounds %struct.TermMatch, %struct.TermMatch* %279, i64 1
  %293 = ptrtoint %struct.TermMatch* %292 to i64
  store i64 %293, i64* %272, align 8
  br label %340

294:                                              ; preds = %276
  %295 = ptrtoint %struct.TermMatch* %279 to i64
  %296 = load i64, i64* %273, align 8
  %297 = sub i64 %295, %296
  %298 = sdiv exact i64 %297, 24
  %299 = add nsw i64 %298, 1
  %300 = icmp ugt i64 %299, 768614336404564650
  br i1 %300, label %301, label %303

301:                                              ; preds = %294
  %302 = bitcast %"class.std::__1::vector.6"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %302) #14
  unreachable

303:                                              ; preds = %294
  %304 = sub i64 %287, %296
  %305 = sdiv exact i64 %304, 24
  %306 = icmp ult i64 %305, 384307168202282325
  br i1 %306, label %307, label %312

307:                                              ; preds = %303
  %308 = shl nsw i64 %305, 1
  %309 = icmp ult i64 %308, %299
  %310 = select i1 %309, i64 %299, i64 %308
  %311 = icmp eq i64 %310, 0
  br i1 %311, label %317, label %312

312:                                              ; preds = %307, %303
  %313 = phi i64 [ %310, %307 ], [ 768614336404564650, %303 ]
  %314 = mul i64 %313, 24
  %315 = call i8* @_Znwm(i64 %314) #13
  %316 = bitcast i8* %315 to %struct.TermMatch*
  br label %317

317:                                              ; preds = %312, %307
  %318 = phi i64 [ %313, %312 ], [ 0, %307 ]
  %319 = phi %struct.TermMatch* [ %316, %312 ], [ null, %307 ]
  %320 = getelementptr inbounds %struct.TermMatch, %struct.TermMatch* %319, i64 %298
  %321 = getelementptr inbounds %struct.TermMatch, %struct.TermMatch* %319, i64 %318
  %322 = ptrtoint %struct.TermMatch* %321 to i64
  %323 = getelementptr inbounds %struct.TermMatch, %struct.TermMatch* %320, i64 0, i32 0
  store i32 %3, i32* %323, align 8
  %324 = getelementptr inbounds %struct.TermMatch, %struct.TermMatch* %319, i64 %298, i32 1
  store i64 %282, i64* %324, align 8
  %325 = getelementptr inbounds %struct.TermMatch, %struct.TermMatch* %319, i64 %298, i32 2
  store i64 %285, i64* %325, align 8
  %326 = getelementptr inbounds %struct.TermMatch, %struct.TermMatch* %320, i64 1
  %327 = ptrtoint %struct.TermMatch* %326 to i64
  %328 = sub i64 %277, %296
  %329 = sdiv exact i64 %328, -24
  %330 = getelementptr inbounds %struct.TermMatch, %struct.TermMatch* %320, i64 %329
  %331 = ptrtoint %struct.TermMatch* %330 to i64
  %332 = icmp sgt i64 %328, 0
  br i1 %332, label %333, label %336

333:                                              ; preds = %317
  %334 = bitcast %struct.TermMatch* %330 to i8*
  %335 = inttoptr i64 %296 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %334, i8* align 8 %335, i64 %328, i1 false) #12
  br label %336

336:                                              ; preds = %333, %317
  store i64 %331, i64* %273, align 8
  store i64 %327, i64* %272, align 8
  store i64 %322, i64* %274, align 8
  %337 = icmp eq i64 %296, 0
  br i1 %337, label %340, label %338

338:                                              ; preds = %336
  %339 = inttoptr i64 %296 to i8*
  call void @_ZdlPv(i8* %339) #13
  br label %340

340:                                              ; preds = %288, %336, %338
  %341 = add nuw i64 %282, 1
  %342 = load i8, i8* %193, align 1
  %343 = icmp slt i8 %342, 0
  %344 = load i16*, i16** %196, align 8
  %345 = load i64, i64* %275, align 8
  %346 = zext i8 %342 to i64
  %347 = select i1 %343, i16* %344, i16* %198
  %348 = select i1 %343, i64 %345, i64 %346
  %349 = load i8, i8* %201, align 1
  %350 = icmp slt i8 %349, 0
  %351 = load i16*, i16** %204, align 8
  %352 = load i64, i64* %206, align 8
  %353 = zext i8 %349 to i64
  %354 = select i1 %350, i16* %351, i16* %208
  %355 = select i1 %350, i64 %352, i64 %353
  %356 = icmp ugt i64 %348, %282
  br i1 %356, label %357, label %419

357:                                              ; preds = %340
  %358 = icmp eq i64 %355, 0
  br i1 %358, label %412, label %359

359:                                              ; preds = %357
  %360 = getelementptr inbounds i16, i16* %347, i64 %341
  %361 = getelementptr inbounds i16, i16* %347, i64 %348
  %362 = shl nuw i64 %355, 1
  %363 = ashr exact i64 %362, 1
  %364 = ptrtoint i16* %361 to i64
  %365 = ptrtoint i16* %360 to i64
  %366 = sub i64 %364, %365
  %367 = ashr exact i64 %366, 1
  %368 = icmp slt i64 %367, %363
  br i1 %368, label %419, label %369

369:                                              ; preds = %359
  %370 = load i16, i16* %354, align 2
  br label %371

371:                                              ; preds = %400, %369
  %372 = phi i64 [ %367, %369 ], [ %404, %400 ]
  %373 = phi i16* [ %360, %369 ], [ %401, %400 ]
  %374 = sub nsw i64 %372, %363
  %375 = add nsw i64 %374, 1
  %376 = icmp eq i64 %375, 0
  br i1 %376, label %419, label %377

377:                                              ; preds = %371, %382
  %378 = phi i64 [ %384, %382 ], [ %375, %371 ]
  %379 = phi i16* [ %383, %382 ], [ %373, %371 ]
  %380 = load i16, i16* %379, align 2
  %381 = icmp eq i16 %380, %370
  br i1 %381, label %386, label %382

382:                                              ; preds = %377
  %383 = getelementptr inbounds i16, i16* %379, i64 1
  %384 = add i64 %378, -1
  %385 = icmp eq i64 %384, 0
  br i1 %385, label %419, label %377

386:                                              ; preds = %377
  %387 = icmp eq i16* %379, null
  br i1 %387, label %419, label %388

388:                                              ; preds = %386, %395
  %389 = phi i16* [ %393, %395 ], [ %379, %386 ]
  %390 = phi i16* [ %396, %395 ], [ %354, %386 ]
  %391 = phi i64 [ %392, %395 ], [ %363, %386 ]
  %392 = add i64 %391, -1
  %393 = getelementptr inbounds i16, i16* %389, i64 1
  %394 = icmp eq i64 %392, 0
  br i1 %394, label %406, label %395

395:                                              ; preds = %388
  %396 = getelementptr inbounds i16, i16* %390, i64 1
  %397 = load i16, i16* %393, align 2
  %398 = load i16, i16* %396, align 2
  %399 = icmp eq i16 %398, %397
  br i1 %399, label %388, label %400

400:                                              ; preds = %395
  %401 = getelementptr inbounds i16, i16* %379, i64 1
  %402 = ptrtoint i16* %401 to i64
  %403 = sub i64 %364, %402
  %404 = ashr exact i64 %403, 1
  %405 = icmp slt i64 %404, %363
  br i1 %405, label %419, label %371

406:                                              ; preds = %388
  %407 = ptrtoint i16* %379 to i64
  %408 = icmp eq i16* %379, %361
  %409 = ptrtoint i16* %347 to i64
  %410 = sub i64 %407, %409
  %411 = ashr exact i64 %410, 1
  br i1 %408, label %419, label %412

412:                                              ; preds = %406, %357
  %413 = phi i64 [ %341, %357 ], [ %411, %406 ]
  %414 = icmp eq i64 %413, -1
  br i1 %414, label %419, label %415

415:                                              ; preds = %412
  %416 = load %struct.TermMatch*, %struct.TermMatch** %189, align 8
  %417 = load %struct.TermMatch*, %struct.TermMatch** %190, align 8
  %418 = ptrtoint %struct.TermMatch* %416 to i64
  br label %276

419:                                              ; preds = %257, %243, %228, %239, %359, %406, %340, %412, %400, %386, %371, %382, %213, %263
  %420 = phi i16* [ %197, %263 ], [ %197, %213 ], [ %344, %382 ], [ %344, %371 ], [ %344, %386 ], [ %344, %400 ], [ %344, %412 ], [ %344, %340 ], [ %344, %406 ], [ %344, %359 ], [ %197, %239 ], [ %197, %228 ], [ %197, %243 ], [ %197, %257 ]
  %421 = phi i8 [ %194, %263 ], [ %194, %213 ], [ %342, %382 ], [ %342, %371 ], [ %342, %386 ], [ %342, %400 ], [ %342, %412 ], [ %342, %340 ], [ %342, %406 ], [ %342, %359 ], [ %194, %239 ], [ %194, %228 ], [ %194, %243 ], [ %194, %257 ]
  %422 = icmp slt i8 %421, 0
  br i1 %422, label %423, label %425

423:                                              ; preds = %419
  %424 = bitcast i16* %420 to i8*
  call void @_ZdlPv(i8* %424) #13
  br label %425

425:                                              ; preds = %419, %423
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %struct.TermMatch* @_ZNSt3__16vectorI9TermMatchNS_9allocatorIS1_EEE6insertINS_11__wrap_iterIPS1_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS1_NS_15iterator_traitsISA_E9referenceEEE5valueES8_E4typeENS6_IPKS1_EESA_SA_(%"class.std::__1::vector.6"*, %struct.TermMatch*, %struct.TermMatch*, %struct.TermMatch*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %struct.TermMatch* %1 to i64
  %6 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %0, i64 0, i32 0, i32 0
  %7 = ptrtoint %struct.TermMatch* %2 to i64
  %8 = ptrtoint %struct.TermMatch* %3 to i64
  %9 = sub i64 %8, %7
  %10 = sdiv exact i64 %9, 24
  %11 = icmp sgt i64 %9, 0
  br i1 %11, label %12, label %154

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %14 = bitcast %struct.TermMatch** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %0, i64 0, i32 0, i32 1
  %17 = load %struct.TermMatch*, %struct.TermMatch** %16, align 8
  %18 = ptrtoint %struct.TermMatch* %17 to i64
  %19 = sub i64 %15, %18
  %20 = sdiv exact i64 %19, 24
  %21 = icmp sgt i64 %10, %20
  %22 = bitcast %struct.TermMatch** %16 to i64*
  br i1 %21, label %80, label %23

23:                                               ; preds = %12
  %24 = sub i64 %18, %5
  %25 = sdiv exact i64 %24, 24
  %26 = icmp sgt i64 %10, %25
  br i1 %26, label %27, label %45

27:                                               ; preds = %23
  %28 = getelementptr inbounds %struct.TermMatch, %struct.TermMatch* %2, i64 %25
  %29 = icmp eq %struct.TermMatch* %28, %3
  br i1 %29, label %40, label %30

30:                                               ; preds = %27, %30
  %31 = phi %struct.TermMatch* [ %36, %30 ], [ %17, %27 ]
  %32 = phi %struct.TermMatch* [ %35, %30 ], [ %28, %27 ]
  %33 = bitcast %struct.TermMatch* %31 to i8*
  %34 = bitcast %struct.TermMatch* %32 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %33, i8* align 8 %34, i64 24, i1 false) #12
  %35 = getelementptr inbounds %struct.TermMatch, %struct.TermMatch* %32, i64 1
  %36 = getelementptr inbounds %struct.TermMatch, %struct.TermMatch* %31, i64 1
  %37 = icmp eq %struct.TermMatch* %35, %3
  br i1 %37, label %38, label %30

38:                                               ; preds = %30
  %39 = ptrtoint %struct.TermMatch* %36 to i64
  br label %40

40:                                               ; preds = %38, %27
  %41 = phi i64 [ %18, %27 ], [ %39, %38 ]
  store i64 %41, i64* %22, align 8
  %42 = icmp sgt i64 %24, 0
  br i1 %42, label %43, label %154

43:                                               ; preds = %40
  %44 = inttoptr i64 %41 to %struct.TermMatch*
  br label %45

45:                                               ; preds = %43, %23
  %46 = phi i64 [ %41, %43 ], [ %18, %23 ]
  %47 = phi %struct.TermMatch* [ %44, %43 ], [ %17, %23 ]
  %48 = phi %struct.TermMatch* [ %28, %43 ], [ %3, %23 ]
  %49 = getelementptr inbounds %struct.TermMatch, %struct.TermMatch* %1, i64 %10
  %50 = ptrtoint %struct.TermMatch* %49 to i64
  %51 = sub i64 %46, %50
  %52 = sdiv exact i64 %51, 24
  %53 = getelementptr inbounds %struct.TermMatch, %struct.TermMatch* %1, i64 %52
  %54 = icmp ult %struct.TermMatch* %53, %17
  br i1 %54, label %65, label %57

55:                                               ; preds = %65
  %56 = ptrtoint %struct.TermMatch* %71 to i64
  br label %57

57:                                               ; preds = %55, %45
  %58 = phi i64 [ %56, %55 ], [ %46, %45 ]
  store i64 %58, i64* %22, align 8
  %59 = icmp eq i64 %51, 0
  br i1 %59, label %73, label %60

60:                                               ; preds = %57
  %61 = sdiv exact i64 %51, -24
  %62 = getelementptr inbounds %struct.TermMatch, %struct.TermMatch* %47, i64 %61
  %63 = bitcast %struct.TermMatch* %62 to i8*
  %64 = bitcast %struct.TermMatch* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %63, i8* align 8 %64, i64 %51, i1 false) #12
  br label %73

65:                                               ; preds = %45, %65
  %66 = phi %struct.TermMatch* [ %71, %65 ], [ %47, %45 ]
  %67 = phi %struct.TermMatch* [ %70, %65 ], [ %53, %45 ]
  %68 = bitcast %struct.TermMatch* %66 to i8*
  %69 = bitcast %struct.TermMatch* %67 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %68, i8* align 8 %69, i64 24, i1 false) #12
  %70 = getelementptr inbounds %struct.TermMatch, %struct.TermMatch* %67, i64 1
  %71 = getelementptr inbounds %struct.TermMatch, %struct.TermMatch* %66, i64 1
  %72 = icmp ult %struct.TermMatch* %70, %17
  br i1 %72, label %65, label %55

73:                                               ; preds = %57, %60
  %74 = ptrtoint %struct.TermMatch* %48 to i64
  %75 = sub i64 %74, %7
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %154, label %77

77:                                               ; preds = %73
  %78 = bitcast %struct.TermMatch* %1 to i8*
  %79 = bitcast %struct.TermMatch* %2 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %78, i8* align 8 %79, i64 %75, i1 false) #12
  br label %154

80:                                               ; preds = %12
  %81 = bitcast %"class.std::__1::vector.6"* %0 to i64*
  %82 = load i64, i64* %81, align 8
  %83 = sub i64 %18, %82
  %84 = sdiv exact i64 %83, 24
  %85 = add nsw i64 %84, %10
  %86 = icmp ugt i64 %85, 768614336404564650
  br i1 %86, label %87, label %89

87:                                               ; preds = %80
  %88 = bitcast %"class.std::__1::vector.6"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %88) #14
  unreachable

89:                                               ; preds = %80
  %90 = sub i64 %15, %82
  %91 = sdiv exact i64 %90, 24
  %92 = icmp ult i64 %91, 384307168202282325
  br i1 %92, label %96, label %93

93:                                               ; preds = %89
  %94 = sub i64 %5, %82
  %95 = sdiv exact i64 %94, 24
  br label %103

96:                                               ; preds = %89
  %97 = shl nsw i64 %91, 1
  %98 = icmp ult i64 %97, %85
  %99 = select i1 %98, i64 %85, i64 %97
  %100 = sub i64 %5, %82
  %101 = sdiv exact i64 %100, 24
  %102 = icmp eq i64 %99, 0
  br i1 %102, label %109, label %103

103:                                              ; preds = %96, %93
  %104 = phi i64 [ %95, %93 ], [ %101, %96 ]
  %105 = phi i64 [ 768614336404564650, %93 ], [ %99, %96 ]
  %106 = mul i64 %105, 24
  %107 = tail call i8* @_Znwm(i64 %106) #13
  %108 = bitcast i8* %107 to %struct.TermMatch*
  br label %109

109:                                              ; preds = %103, %96
  %110 = phi i64 [ %104, %103 ], [ %101, %96 ]
  %111 = phi i64 [ %105, %103 ], [ 0, %96 ]
  %112 = phi %struct.TermMatch* [ %108, %103 ], [ null, %96 ]
  %113 = getelementptr inbounds %struct.TermMatch, %struct.TermMatch* %112, i64 %110
  %114 = getelementptr inbounds %struct.TermMatch, %struct.TermMatch* %112, i64 %111
  %115 = ptrtoint %struct.TermMatch* %114 to i64
  %116 = getelementptr inbounds %struct.TermMatch, %struct.TermMatch* %113, i64 %10
  br label %117

117:                                              ; preds = %109, %117
  %118 = phi %struct.TermMatch* [ %122, %117 ], [ %113, %109 ]
  %119 = phi %struct.TermMatch* [ %123, %117 ], [ %2, %109 ]
  %120 = bitcast %struct.TermMatch* %118 to i8*
  %121 = bitcast %struct.TermMatch* %119 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %120, i8* align 8 %121, i64 24, i1 false) #12
  %122 = getelementptr inbounds %struct.TermMatch, %struct.TermMatch* %118, i64 1
  %123 = getelementptr inbounds %struct.TermMatch, %struct.TermMatch* %119, i64 1
  %124 = icmp eq %struct.TermMatch* %116, %122
  br i1 %124, label %125, label %117

125:                                              ; preds = %117
  %126 = load %struct.TermMatch*, %struct.TermMatch** %6, align 8
  %127 = ptrtoint %struct.TermMatch* %126 to i64
  %128 = sub i64 %5, %127
  %129 = sdiv exact i64 %128, -24
  %130 = getelementptr inbounds %struct.TermMatch, %struct.TermMatch* %113, i64 %129
  %131 = ptrtoint %struct.TermMatch* %130 to i64
  %132 = icmp sgt i64 %128, 0
  br i1 %132, label %133, label %136

133:                                              ; preds = %125
  %134 = bitcast %struct.TermMatch* %130 to i8*
  %135 = bitcast %struct.TermMatch* %126 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %134, i8* align 8 %135, i64 %128, i1 false) #12
  br label %136

136:                                              ; preds = %133, %125
  %137 = load %struct.TermMatch*, %struct.TermMatch** %16, align 8
  %138 = icmp eq %struct.TermMatch* %137, %1
  br i1 %138, label %147, label %139

139:                                              ; preds = %136, %139
  %140 = phi %struct.TermMatch* [ %145, %139 ], [ %116, %136 ]
  %141 = phi %struct.TermMatch* [ %144, %139 ], [ %1, %136 ]
  %142 = bitcast %struct.TermMatch* %140 to i8*
  %143 = bitcast %struct.TermMatch* %141 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %142, i8* align 8 %143, i64 24, i1 false) #12
  %144 = getelementptr inbounds %struct.TermMatch, %struct.TermMatch* %141, i64 1
  %145 = getelementptr inbounds %struct.TermMatch, %struct.TermMatch* %140, i64 1
  %146 = icmp eq %struct.TermMatch* %144, %137
  br i1 %146, label %147, label %139

147:                                              ; preds = %139, %136
  %148 = phi %struct.TermMatch* [ %116, %136 ], [ %145, %139 ]
  %149 = ptrtoint %struct.TermMatch* %148 to i64
  %150 = load %struct.TermMatch*, %struct.TermMatch** %6, align 8
  store i64 %131, i64* %81, align 8
  store i64 %149, i64* %22, align 8
  store i64 %115, i64* %14, align 8
  %151 = icmp eq %struct.TermMatch* %150, null
  br i1 %151, label %154, label %152

152:                                              ; preds = %147
  %153 = bitcast %struct.TermMatch* %150 to i8*
  tail call void @_ZdlPv(i8* %153) #13
  br label %154

154:                                              ; preds = %152, %147, %40, %73, %77, %4
  %155 = phi %struct.TermMatch* [ %1, %4 ], [ %1, %77 ], [ %1, %73 ], [ %1, %40 ], [ %113, %147 ], [ %113, %152 ]
  ret %struct.TermMatch* %155
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_Z19SortMatchComparatorRK9TermMatchS1_(%struct.TermMatch* nocapture readonly dereferenceable(24), %struct.TermMatch* nocapture readonly dereferenceable(24)) #2 {
  %3 = getelementptr inbounds %struct.TermMatch, %struct.TermMatch* %0, i64 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %struct.TermMatch, %struct.TermMatch* %1, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %4, %6
  br i1 %7, label %8, label %14

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.TermMatch, %struct.TermMatch* %0, i64 0, i32 2
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %struct.TermMatch, %struct.TermMatch* %1, i64 0, i32 2
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br label %16

14:                                               ; preds = %2
  %15 = icmp ult i64 %4, %6
  br label %16

16:                                               ; preds = %14, %8
  %17 = phi i1 [ %13, %8 ], [ %15, %14 ]
  ret i1 %17
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_Z11SortMatchesRKNSt3__16vectorI9TermMatchNS_9allocatorIS1_EEEE(%"class.std::__1::vector.6"* noalias sret, %"class.std::__1::vector.6"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 {
  %3 = alloca i1 (%struct.TermMatch*, %struct.TermMatch*)*, align 8
  %4 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %0, i64 0, i32 0, i32 1
  %5 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %6 = bitcast %"class.std::__1::vector.6"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 24, i1 false) #12
  %7 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %struct.TermMatch** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector.6"* %1 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %9, %11
  %13 = sdiv exact i64 %12, 24
  %14 = icmp eq i64 %12, 0
  br i1 %14, label %36, label %15

15:                                               ; preds = %2
  %16 = icmp ugt i64 %13, 768614336404564650
  br i1 %16, label %17, label %19

17:                                               ; preds = %15
  %18 = bitcast %"class.std::__1::vector.6"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %18) #14
  unreachable

19:                                               ; preds = %15
  %20 = tail call i8* @_Znwm(i64 %12) #13
  %21 = bitcast i8* %20 to %struct.TermMatch*
  %22 = bitcast %struct.TermMatch** %4 to i8**
  store i8* %20, i8** %22, align 8
  %23 = bitcast %"class.std::__1::vector.6"* %0 to i8**
  store i8* %20, i8** %23, align 8
  %24 = getelementptr inbounds %struct.TermMatch, %struct.TermMatch* %21, i64 %13
  store %struct.TermMatch* %24, %struct.TermMatch** %5, align 8
  %25 = bitcast %struct.TermMatch** %4 to i64*
  %26 = ptrtoint i8* %20 to i64
  %27 = icmp sgt i64 %12, 0
  br i1 %27, label %28, label %33

28:                                               ; preds = %19
  %29 = udiv exact i64 %12, 24
  %30 = inttoptr i64 %11 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %20, i8* align 8 %30, i64 %12, i1 false) #12
  %31 = getelementptr inbounds %struct.TermMatch, %struct.TermMatch* %21, i64 %29
  %32 = ptrtoint %struct.TermMatch* %31 to i64
  br label %33

33:                                               ; preds = %28, %19
  %34 = phi i64 [ %32, %28 ], [ %26, %19 ]
  store i64 %34, i64* %25, align 8
  %35 = inttoptr i64 %34 to %struct.TermMatch*
  br label %36

36:                                               ; preds = %2, %33
  %37 = phi %struct.TermMatch* [ null, %2 ], [ %35, %33 ]
  %38 = phi %struct.TermMatch* [ null, %2 ], [ %21, %33 ]
  %39 = bitcast i1 (%struct.TermMatch*, %struct.TermMatch*)** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39)
  store i1 (%struct.TermMatch*, %struct.TermMatch*)* @_Z19SortMatchComparatorRK9TermMatchS1_, i1 (%struct.TermMatch*, %struct.TermMatch*)** %3, align 8
  call void @_ZNSt3__16__sortIRPFbRK9TermMatchS3_EPS1_EEvT0_S8_T_(%struct.TermMatch* %38, %struct.TermMatch* %37, i1 (%struct.TermMatch*, %struct.TermMatch*)** nonnull dereferenceable(8) %3) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_Z16DeoverlapMatchesRKNSt3__16vectorI9TermMatchNS_9allocatorIS1_EEEE(%"class.std::__1::vector.6"* noalias sret, %"class.std::__1::vector.6"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 {
  %3 = alloca %"class.std::__1::back_insert_iterator", align 8
  %4 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %0, i64 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %0, i64 0, i32 0, i32 1
  %6 = bitcast %"class.std::__1::vector.6"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 24, i1 false) #12
  %7 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %1, i64 0, i32 0, i32 0
  %8 = load %struct.TermMatch*, %struct.TermMatch** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %1, i64 0, i32 0, i32 1
  %10 = load %struct.TermMatch*, %struct.TermMatch** %9, align 8
  %11 = bitcast %"class.std::__1::back_insert_iterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %3, i64 0, i32 0
  store %"class.std::__1::vector.6"* %0, %"class.std::__1::vector.6"** %12, align 8
  %13 = icmp eq %struct.TermMatch* %8, %10
  br i1 %13, label %36, label %14

14:                                               ; preds = %2, %33
  %15 = phi %struct.TermMatch* [ %35, %33 ], [ null, %2 ]
  %16 = phi %struct.TermMatch* [ %34, %33 ], [ null, %2 ]
  %17 = phi %struct.TermMatch* [ %31, %33 ], [ %8, %2 ]
  %18 = icmp eq %struct.TermMatch* %16, %15
  br i1 %18, label %28, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %struct.TermMatch, %struct.TermMatch* %17, i64 0, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = getelementptr inbounds %struct.TermMatch, %struct.TermMatch* %15, i64 -1, i32 1
  %23 = load i64, i64* %22, align 8
  %24 = getelementptr inbounds %struct.TermMatch, %struct.TermMatch* %15, i64 -1, i32 2
  %25 = load i64, i64* %24, align 8
  %26 = add i64 %25, %23
  %27 = icmp ult i64 %21, %26
  br i1 %27, label %30, label %28

28:                                               ; preds = %19, %14
  %29 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorI9TermMatchNS_9allocatorIS2_EEEEEaSERKS2_(%"class.std::__1::back_insert_iterator"* nonnull %3, %struct.TermMatch* dereferenceable(24) %17) #12
  br label %30

30:                                               ; preds = %28, %19
  %31 = getelementptr inbounds %struct.TermMatch, %struct.TermMatch* %17, i64 1
  %32 = icmp eq %struct.TermMatch* %31, %10
  br i1 %32, label %36, label %33

33:                                               ; preds = %30
  %34 = load %struct.TermMatch*, %struct.TermMatch** %4, align 8
  %35 = load %struct.TermMatch*, %struct.TermMatch** %5, align 8
  br label %14

36:                                               ; preds = %30, %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_Z22OffsetsFromTermMatchesRKNSt3__16vectorI9TermMatchNS_9allocatorIS1_EEEE(%"class.std::__1::vector.14"* noalias sret, %"class.std::__1::vector.6"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %0, i64 0, i32 0, i32 1
  %4 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %5 = bitcast %"class.std::__1::vector.14"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 24, i1 false) #12
  %6 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %1, i64 0, i32 0, i32 0
  %7 = load %struct.TermMatch*, %struct.TermMatch** %6, align 8
  %8 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %1, i64 0, i32 0, i32 1
  %9 = load %struct.TermMatch*, %struct.TermMatch** %8, align 8
  %10 = icmp eq %struct.TermMatch* %7, %9
  br i1 %10, label %15, label %11

11:                                               ; preds = %2
  %12 = bitcast i64** %3 to i64*
  %13 = bitcast %"class.std::__1::vector.14"* %0 to i64*
  %14 = bitcast i64** %4 to i64*
  br label %16

15:                                               ; preds = %135, %2
  ret void

16:                                               ; preds = %138, %11
  %17 = phi i64 [ 0, %11 ], [ %141, %138 ]
  %18 = phi i64* [ null, %11 ], [ %140, %138 ]
  %19 = phi i64* [ null, %11 ], [ %139, %138 ]
  %20 = phi %struct.TermMatch* [ %7, %11 ], [ %136, %138 ]
  %21 = getelementptr inbounds %struct.TermMatch, %struct.TermMatch* %20, i64 0, i32 1
  %22 = icmp eq i64* %19, %18
  br i1 %22, label %27, label %23

23:                                               ; preds = %16
  %24 = load i64, i64* %21, align 8
  store i64 %24, i64* %19, align 8
  %25 = getelementptr inbounds i64, i64* %19, i64 1
  %26 = ptrtoint i64* %25 to i64
  store i64 %26, i64* %12, align 8
  br label %75

27:                                               ; preds = %16
  %28 = ptrtoint i64* %18 to i64
  %29 = load i64, i64* %13, align 8
  %30 = sub i64 %28, %29
  %31 = ashr exact i64 %30, 3
  %32 = add nsw i64 %31, 1
  %33 = icmp ugt i64 %32, 2305843009213693951
  br i1 %33, label %34, label %36

34:                                               ; preds = %27
  %35 = bitcast %"class.std::__1::vector.14"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %35) #14
  unreachable

36:                                               ; preds = %27
  %37 = icmp ult i64 %31, 1152921504606846975
  br i1 %37, label %38, label %46

38:                                               ; preds = %36
  %39 = ashr exact i64 %30, 2
  %40 = icmp ult i64 %39, %32
  %41 = select i1 %40, i64 %32, i64 %39
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %51, label %43

43:                                               ; preds = %38
  %44 = icmp ugt i64 %41, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %43
  tail call void @abort() #14
  unreachable

46:                                               ; preds = %43, %36
  %47 = phi i64 [ %41, %43 ], [ 2305843009213693951, %36 ]
  %48 = shl i64 %47, 3
  %49 = tail call i8* @_Znwm(i64 %48) #13
  %50 = bitcast i8* %49 to i64*
  br label %51

51:                                               ; preds = %46, %38
  %52 = phi i64 [ %47, %46 ], [ 0, %38 ]
  %53 = phi i64* [ %50, %46 ], [ null, %38 ]
  %54 = getelementptr inbounds i64, i64* %53, i64 %31
  %55 = getelementptr inbounds i64, i64* %53, i64 %52
  %56 = ptrtoint i64* %55 to i64
  %57 = load i64, i64* %21, align 8
  store i64 %57, i64* %54, align 8
  %58 = getelementptr inbounds i64, i64* %54, i64 1
  %59 = ptrtoint i64* %58 to i64
  %60 = sub i64 %17, %29
  %61 = ashr exact i64 %60, 3
  %62 = sub nsw i64 0, %61
  %63 = getelementptr inbounds i64, i64* %54, i64 %62
  %64 = ptrtoint i64* %63 to i64
  %65 = icmp sgt i64 %60, 0
  br i1 %65, label %66, label %69

66:                                               ; preds = %51
  %67 = bitcast i64* %63 to i8*
  %68 = inttoptr i64 %29 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %67, i8* align 8 %68, i64 %60, i1 false) #12
  br label %69

69:                                               ; preds = %66, %51
  store i64 %64, i64* %13, align 8
  store i64 %59, i64* %12, align 8
  store i64 %56, i64* %14, align 8
  %70 = icmp eq i64 %29, 0
  br i1 %70, label %75, label %71

71:                                               ; preds = %69
  %72 = inttoptr i64 %29 to i8*
  tail call void @_ZdlPv(i8* %72) #13
  %73 = load i64*, i64** %3, align 8
  %74 = ptrtoint i64* %73 to i64
  br label %75

75:                                               ; preds = %23, %69, %71
  %76 = phi i64 [ %26, %23 ], [ %59, %69 ], [ %74, %71 ]
  %77 = phi i64* [ %25, %23 ], [ %58, %69 ], [ %73, %71 ]
  %78 = load i64, i64* %21, align 8
  %79 = getelementptr inbounds %struct.TermMatch, %struct.TermMatch* %20, i64 0, i32 2
  %80 = load i64, i64* %79, align 8
  %81 = add i64 %80, %78
  %82 = load i64*, i64** %4, align 8
  %83 = icmp ult i64* %77, %82
  %84 = ptrtoint i64* %82 to i64
  br i1 %83, label %85, label %88

85:                                               ; preds = %75
  store i64 %81, i64* %77, align 8
  %86 = getelementptr inbounds i64, i64* %77, i64 1
  %87 = ptrtoint i64* %86 to i64
  store i64 %87, i64* %12, align 8
  br label %135

88:                                               ; preds = %75
  %89 = ptrtoint i64* %77 to i64
  %90 = load i64, i64* %13, align 8
  %91 = sub i64 %89, %90
  %92 = ashr exact i64 %91, 3
  %93 = add nsw i64 %92, 1
  %94 = icmp ugt i64 %93, 2305843009213693951
  br i1 %94, label %95, label %97

95:                                               ; preds = %88
  %96 = bitcast %"class.std::__1::vector.14"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %96) #14
  unreachable

97:                                               ; preds = %88
  %98 = sub i64 %84, %90
  %99 = ashr exact i64 %98, 3
  %100 = icmp ult i64 %99, 1152921504606846975
  br i1 %100, label %101, label %109

101:                                              ; preds = %97
  %102 = ashr exact i64 %98, 2
  %103 = icmp ult i64 %102, %93
  %104 = select i1 %103, i64 %93, i64 %102
  %105 = icmp eq i64 %104, 0
  br i1 %105, label %114, label %106

106:                                              ; preds = %101
  %107 = icmp ugt i64 %104, 2305843009213693951
  br i1 %107, label %108, label %109

108:                                              ; preds = %106
  tail call void @abort() #14
  unreachable

109:                                              ; preds = %106, %97
  %110 = phi i64 [ %104, %106 ], [ 2305843009213693951, %97 ]
  %111 = shl i64 %110, 3
  %112 = tail call i8* @_Znwm(i64 %111) #13
  %113 = bitcast i8* %112 to i64*
  br label %114

114:                                              ; preds = %109, %101
  %115 = phi i64 [ %110, %109 ], [ 0, %101 ]
  %116 = phi i64* [ %113, %109 ], [ null, %101 ]
  %117 = getelementptr inbounds i64, i64* %116, i64 %92
  %118 = getelementptr inbounds i64, i64* %116, i64 %115
  %119 = ptrtoint i64* %118 to i64
  store i64 %81, i64* %117, align 8
  %120 = getelementptr inbounds i64, i64* %117, i64 1
  %121 = ptrtoint i64* %120 to i64
  %122 = sub i64 %76, %90
  %123 = ashr exact i64 %122, 3
  %124 = sub nsw i64 0, %123
  %125 = getelementptr inbounds i64, i64* %117, i64 %124
  %126 = ptrtoint i64* %125 to i64
  %127 = icmp sgt i64 %122, 0
  br i1 %127, label %128, label %131

128:                                              ; preds = %114
  %129 = bitcast i64* %125 to i8*
  %130 = inttoptr i64 %90 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %129, i8* align 8 %130, i64 %122, i1 false) #12
  br label %131

131:                                              ; preds = %128, %114
  store i64 %126, i64* %13, align 8
  store i64 %121, i64* %12, align 8
  store i64 %119, i64* %14, align 8
  %132 = icmp eq i64 %90, 0
  br i1 %132, label %135, label %133

133:                                              ; preds = %131
  %134 = inttoptr i64 %90 to i8*
  tail call void @_ZdlPv(i8* %134) #13
  br label %135

135:                                              ; preds = %85, %131, %133
  %136 = getelementptr inbounds %struct.TermMatch, %struct.TermMatch* %20, i64 1
  %137 = icmp eq %struct.TermMatch* %136, %9
  br i1 %137, label %15, label %138

138:                                              ; preds = %135
  %139 = load i64*, i64** %3, align 8
  %140 = load i64*, i64** %4, align 8
  %141 = ptrtoint i64* %139 to i64
  br label %16
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_Z27ReplaceOffsetsInTermMatchesRKNSt3__16vectorI9TermMatchNS_9allocatorIS1_EEEERKNS0_ImNS2_ImEEEE(%"class.std::__1::vector.6"* noalias sret, %"class.std::__1::vector.6"* nocapture readonly dereferenceable(24), %"class.std::__1::vector.14"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %0, i64 0, i32 0, i32 1
  %5 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %6 = bitcast %"class.std::__1::vector.6"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 24, i1 false) #12
  %7 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %1, i64 0, i32 0, i32 0
  %8 = load %struct.TermMatch*, %struct.TermMatch** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %1, i64 0, i32 0, i32 1
  %10 = load %struct.TermMatch*, %struct.TermMatch** %9, align 8
  %11 = icmp eq %struct.TermMatch* %8, %10
  br i1 %11, label %18, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %2, i64 0, i32 0, i32 0
  %14 = load i64*, i64** %13, align 8
  %15 = bitcast %struct.TermMatch** %4 to i64*
  %16 = bitcast %"class.std::__1::vector.6"* %0 to i64*
  %17 = bitcast %struct.TermMatch** %5 to i64*
  br label %19

18:                                               ; preds = %89, %3
  ret void

19:                                               ; preds = %12, %89
  %20 = phi i64* [ %14, %12 ], [ %91, %89 ]
  %21 = phi %struct.TermMatch* [ %8, %12 ], [ %90, %89 ]
  %22 = load i64, i64* %20, align 8
  %23 = getelementptr inbounds i64, i64* %20, i64 1
  %24 = load i64, i64* %23, align 8
  %25 = icmp eq i64 %22, -1
  %26 = icmp eq i64 %24, -1
  %27 = or i1 %25, %26
  %28 = icmp eq i64 %24, %22
  %29 = or i1 %28, %27
  br i1 %29, label %89, label %30

30:                                               ; preds = %19
  %31 = bitcast %struct.TermMatch* %21 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = sub i64 %24, %22
  %34 = load %struct.TermMatch*, %struct.TermMatch** %4, align 8
  %35 = load %struct.TermMatch*, %struct.TermMatch** %5, align 8
  %36 = icmp eq %struct.TermMatch* %34, %35
  %37 = ptrtoint %struct.TermMatch* %35 to i64
  br i1 %36, label %44, label %38

38:                                               ; preds = %30
  %39 = bitcast %struct.TermMatch* %34 to i64*
  store i64 %32, i64* %39, align 8
  %40 = getelementptr inbounds %struct.TermMatch, %struct.TermMatch* %34, i64 0, i32 1
  store i64 %22, i64* %40, align 8
  %41 = getelementptr inbounds %struct.TermMatch, %struct.TermMatch* %34, i64 0, i32 2
  store i64 %33, i64* %41, align 8
  %42 = getelementptr inbounds %struct.TermMatch, %struct.TermMatch* %34, i64 1
  %43 = ptrtoint %struct.TermMatch* %42 to i64
  store i64 %43, i64* %15, align 8
  br label %89

44:                                               ; preds = %30
  %45 = ptrtoint %struct.TermMatch* %34 to i64
  %46 = load i64, i64* %16, align 8
  %47 = sub i64 %45, %46
  %48 = sdiv exact i64 %47, 24
  %49 = add nsw i64 %48, 1
  %50 = icmp ugt i64 %49, 768614336404564650
  br i1 %50, label %51, label %53

51:                                               ; preds = %44
  %52 = bitcast %"class.std::__1::vector.6"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %52) #14
  unreachable

53:                                               ; preds = %44
  %54 = sub i64 %37, %46
  %55 = sdiv exact i64 %54, 24
  %56 = icmp ult i64 %55, 384307168202282325
  br i1 %56, label %57, label %62

57:                                               ; preds = %53
  %58 = shl nsw i64 %55, 1
  %59 = icmp ult i64 %58, %49
  %60 = select i1 %59, i64 %49, i64 %58
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %67, label %62

62:                                               ; preds = %57, %53
  %63 = phi i64 [ %60, %57 ], [ 768614336404564650, %53 ]
  %64 = mul i64 %63, 24
  %65 = tail call i8* @_Znwm(i64 %64) #13
  %66 = bitcast i8* %65 to %struct.TermMatch*
  br label %67

67:                                               ; preds = %62, %57
  %68 = phi i64 [ %63, %62 ], [ 0, %57 ]
  %69 = phi %struct.TermMatch* [ %66, %62 ], [ null, %57 ]
  %70 = getelementptr inbounds %struct.TermMatch, %struct.TermMatch* %69, i64 %48
  %71 = getelementptr inbounds %struct.TermMatch, %struct.TermMatch* %69, i64 %68
  %72 = ptrtoint %struct.TermMatch* %71 to i64
  %73 = bitcast %struct.TermMatch* %70 to i64*
  store i64 %32, i64* %73, align 8
  %74 = getelementptr inbounds %struct.TermMatch, %struct.TermMatch* %69, i64 %48, i32 1
  store i64 %22, i64* %74, align 8
  %75 = getelementptr inbounds %struct.TermMatch, %struct.TermMatch* %69, i64 %48, i32 2
  store i64 %33, i64* %75, align 8
  %76 = getelementptr inbounds %struct.TermMatch, %struct.TermMatch* %70, i64 1
  %77 = ptrtoint %struct.TermMatch* %76 to i64
  %78 = sdiv exact i64 %47, -24
  %79 = getelementptr inbounds %struct.TermMatch, %struct.TermMatch* %70, i64 %78
  %80 = ptrtoint %struct.TermMatch* %79 to i64
  %81 = icmp sgt i64 %47, 0
  br i1 %81, label %82, label %85

82:                                               ; preds = %67
  %83 = bitcast %struct.TermMatch* %79 to i8*
  %84 = inttoptr i64 %46 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %83, i8* align 8 %84, i64 %47, i1 false) #12
  br label %85

85:                                               ; preds = %82, %67
  store i64 %80, i64* %16, align 8
  store i64 %77, i64* %15, align 8
  store i64 %72, i64* %17, align 8
  %86 = icmp eq i64 %46, 0
  br i1 %86, label %89, label %87

87:                                               ; preds = %85
  %88 = inttoptr i64 %46 to i8*
  tail call void @_ZdlPv(i8* %88) #13
  br label %89

89:                                               ; preds = %87, %85, %38, %19
  %90 = getelementptr inbounds %struct.TermMatch, %struct.TermMatch* %21, i64 1
  %91 = getelementptr inbounds i64, i64* %20, i64 2
  %92 = load %struct.TermMatch*, %struct.TermMatch** %9, align 8
  %93 = icmp eq %struct.TermMatch* %90, %92
  br i1 %93, label %18, label %19
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_Z23String16SetFromString16RKNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEPNS_6vectorImNS3_ImEEEE(%"class.base::internal::flat_tree"* noalias sret, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::vector.14"*) local_unnamed_addr #0 {
  %4 = alloca %"class.std::__1::vector", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = bitcast %"class.std::__1::vector"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #12
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 1
  %10 = bitcast %"class.std::__1::vector"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 24, i1 false)
  call void @_Z26String16VectorFromString16RKNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEbPNS_6vectorImNS3_ImEEEE(%"class.std::__1::vector"* nonnull sret %4, %"class.std::__1::basic_string"* dereferenceable(24) %1, i1 zeroext false, %"class.std::__1::vector.14"* %2)
  %11 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %8, align 8
  %12 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %9, align 8
  %13 = icmp eq %"class.std::__1::basic_string"* %11, %12
  br i1 %13, label %27, label %14

14:                                               ; preds = %3
  %15 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  %16 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  %17 = bitcast %"class.std::__1::basic_string"* %6 to %"class.std::__1::allocator"*
  %18 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %19 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %18, i64 0, i32 1, i32 1
  %20 = bitcast %"class.std::__1::basic_string"* %5 to i16*
  %21 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %21, i64 0, i32 1, i32 1
  %23 = bitcast %"class.std::__1::basic_string"* %6 to i8**
  br label %94

24:                                               ; preds = %119
  %25 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %8, align 8
  %26 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %9, align 8
  br label %27

27:                                               ; preds = %24, %3
  %28 = phi %"class.std::__1::basic_string"* [ %26, %24 ], [ %11, %3 ]
  %29 = phi %"class.std::__1::basic_string"* [ %25, %24 ], [ %11, %3 ]
  %30 = bitcast %"class.base::internal::flat_tree"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 24, i1 false) #12
  %31 = ptrtoint %"class.std::__1::basic_string"* %29 to i64
  %32 = ptrtoint %"class.std::__1::basic_string"* %28 to i64
  %33 = sub i64 %32, %31
  %34 = sdiv exact i64 %33, 24
  %35 = icmp eq i64 %33, 0
  br i1 %35, label %67, label %36

36:                                               ; preds = %27
  %37 = icmp ugt i64 %34, 768614336404564650
  br i1 %37, label %38, label %40

38:                                               ; preds = %36
  %39 = bitcast %"class.base::internal::flat_tree"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %39) #14
  unreachable

40:                                               ; preds = %36
  %41 = call i8* @_Znwm(i64 %33) #13
  %42 = bitcast i8* %41 to %"class.std::__1::basic_string"*
  %43 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %0, i64 0, i32 0, i32 0, i32 1
  %44 = bitcast %"class.std::__1::basic_string"** %43 to i8**
  store i8* %41, i8** %44, align 8
  %45 = bitcast %"class.base::internal::flat_tree"* %0 to i8**
  store i8* %41, i8** %45, align 8
  %46 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %42, i64 %34
  %47 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  store %"class.std::__1::basic_string"* %46, %"class.std::__1::basic_string"** %47, align 8
  %48 = bitcast %"class.std::__1::basic_string"** %43 to i64*
  %49 = ptrtoint i8* %41 to i64
  %50 = icmp eq %"class.std::__1::basic_string"* %29, %28
  br i1 %50, label %63, label %51

51:                                               ; preds = %40, %51
  %52 = phi %"class.std::__1::basic_string"* [ %57, %51 ], [ %42, %40 ]
  %53 = phi %"class.std::__1::basic_string"* [ %56, %51 ], [ %29, %40 ]
  %54 = bitcast %"class.std::__1::basic_string"* %52 to i8*
  %55 = bitcast %"class.std::__1::basic_string"* %53 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %54, i8* align 8 %55, i64 24, i1 false) #12
  call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 24, i1 false) #12
  %56 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %53, i64 1
  %57 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %52, i64 1
  %58 = icmp eq %"class.std::__1::basic_string"* %56, %28
  br i1 %58, label %59, label %51

59:                                               ; preds = %51
  %60 = ptrtoint %"class.std::__1::basic_string"* %57 to i64
  %61 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %0, i64 0, i32 0, i32 0, i32 0
  %62 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %61, align 8
  br label %63

63:                                               ; preds = %59, %40
  %64 = phi %"class.std::__1::basic_string"* [ %42, %40 ], [ %62, %59 ]
  %65 = phi i64 [ %49, %40 ], [ %60, %59 ]
  store i64 %65, i64* %48, align 8
  %66 = inttoptr i64 %65 to %"class.std::__1::basic_string"*
  br label %67

67:                                               ; preds = %27, %63
  %68 = phi %"class.std::__1::basic_string"* [ null, %27 ], [ %66, %63 ]
  %69 = phi %"class.std::__1::basic_string"* [ null, %27 ], [ %64, %63 ]
  call void @_ZN4base8internal9flat_treeINSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEENS_8identityENS2_4lessIvEENS2_6vectorIS8_NS6_IS8_EEEEE15sort_and_uniqueENS2_11__wrap_iterIPS8_EESI_(%"class.base::internal::flat_tree"* %0, %"class.std::__1::basic_string"* %69, %"class.std::__1::basic_string"* %68) #12
  %70 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %8, align 8
  %71 = icmp eq %"class.std::__1::basic_string"* %70, null
  br i1 %71, label %93, label %72

72:                                               ; preds = %67
  %73 = bitcast %"class.std::__1::basic_string"* %70 to i8*
  %74 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %9, align 8
  %75 = icmp eq %"class.std::__1::basic_string"* %74, %70
  br i1 %75, label %91, label %76

76:                                               ; preds = %72, %86
  %77 = phi %"class.std::__1::basic_string"* [ %78, %86 ], [ %74, %72 ]
  %78 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %77, i64 -1
  %79 = bitcast %"class.std::__1::basic_string"* %78 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %80 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %79, i64 0, i32 1, i32 1
  %81 = load i8, i8* %80, align 1
  %82 = icmp slt i8 %81, 0
  br i1 %82, label %83, label %86

83:                                               ; preds = %76
  %84 = bitcast %"class.std::__1::basic_string"* %78 to i8**
  %85 = load i8*, i8** %84, align 8
  call void @_ZdlPv(i8* %85) #13
  br label %86

86:                                               ; preds = %83, %76
  %87 = icmp eq %"class.std::__1::basic_string"* %78, %70
  br i1 %87, label %88, label %76

88:                                               ; preds = %86
  %89 = bitcast %"class.std::__1::vector"* %4 to i8**
  %90 = load i8*, i8** %89, align 8
  br label %91

91:                                               ; preds = %88, %72
  %92 = phi i8* [ %90, %88 ], [ %73, %72 ]
  store %"class.std::__1::basic_string"* %70, %"class.std::__1::basic_string"** %9, align 8
  call void @_ZdlPv(i8* %92) #13
  br label %93

93:                                               ; preds = %67, %91
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #12
  ret void

94:                                               ; preds = %14, %119
  %95 = phi %"class.std::__1::basic_string"* [ %11, %14 ], [ %120, %119 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #12
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #12
  %96 = bitcast %"class.std::__1::basic_string"* %95 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %97 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %96, i64 0, i32 1, i32 1
  %98 = load i8, i8* %97, align 1
  %99 = icmp slt i8 %98, 0
  %100 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %95, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %101 = load i16*, i16** %100, align 8
  %102 = bitcast %"class.std::__1::basic_string"* %95 to i16*
  %103 = select i1 %99, i16* %101, i16* %102
  %104 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %95, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %105 = load i64, i64* %104, align 8
  %106 = zext i8 %98 to i64
  %107 = select i1 %99, i64 %105, i64 %106
  call void @_ZN4base4i18n7ToLowerENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string"* nonnull sret %6, i16* %103, i64 %107) #12
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEC2ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %5, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %6, i64 0, i64 200, %"class.std::__1::allocator"* nonnull dereferenceable(1) %17) #12
  %108 = load i8, i8* %97, align 1
  %109 = icmp slt i8 %108, 0
  br i1 %109, label %110, label %113

110:                                              ; preds = %94
  %111 = bitcast %"class.std::__1::basic_string"* %95 to i8**
  %112 = load i8*, i8** %111, align 8
  call void @_ZdlPv(i8* %112) #13
  br label %113

113:                                              ; preds = %110, %94
  %114 = bitcast %"class.std::__1::basic_string"* %95 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %114, i8* nonnull align 8 %15, i64 24, i1 false) #12
  store i8 0, i8* %19, align 1
  store i16 0, i16* %20, align 8
  %115 = load i8, i8* %22, align 1
  %116 = icmp slt i8 %115, 0
  br i1 %116, label %117, label %119

117:                                              ; preds = %113
  %118 = load i8*, i8** %23, align 8
  call void @_ZdlPv(i8* %118) #13
  br label %119

119:                                              ; preds = %113, %117
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #12
  %120 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %95, i64 1
  %121 = icmp eq %"class.std::__1::basic_string"* %120, %12
  br i1 %121, label %24, label %94
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_Z26String16VectorFromString16RKNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEbPNS_6vectorImNS3_ImEEEE(%"class.std::__1::vector"* noalias sret, %"class.std::__1::basic_string"* dereferenceable(24), i1 zeroext, %"class.std::__1::vector.14"*) local_unnamed_addr #0 {
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %class.TailoredWordBreakIterator, align 8
  %7 = alloca %"class.base::BasicStringPiece", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.base::i18n::BreakIterator", align 8
  %10 = alloca %"class.base::BasicStringPiece", align 8
  %11 = alloca %"class.std::__1::basic_string", align 8
  %12 = icmp eq %"class.std::__1::vector.14"* %3, null
  br i1 %12, label %18, label %13

13:                                               ; preds = %4
  %14 = bitcast %"class.std::__1::vector.14"* %3 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %3, i64 0, i32 0, i32 1
  %17 = bitcast i64** %16 to i64*
  store i64 %15, i64* %17, align 8
  br label %18

18:                                               ; preds = %4, %13
  %19 = zext i1 %2 to i32
  %20 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %21 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %22 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 24, i1 false) #12
  br i1 %2, label %325, label %23

23:                                               ; preds = %18
  %24 = bitcast %class.TailoredWordBreakIterator* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %24) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 -86, i64 104, i1 false)
  %25 = bitcast %"class.base::BasicStringPiece"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %25) #12
  %26 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %7, i64 0, i32 0
  %27 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %28 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %27, i64 0, i32 1, i32 1
  %29 = load i8, i8* %28, align 1
  %30 = icmp slt i8 %29, 0
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i16*, i16** %31, align 8
  %33 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %34 = select i1 %30, i16* %32, i16* %33
  store i16* %34, i16** %26, align 8
  %35 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %7, i64 0, i32 1
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %37 = load i64, i64* %36, align 8
  %38 = zext i8 %29 to i64
  %39 = select i1 %30, i64 %37, i64 %38
  store i64 %39, i64* %35, align 8
  call void @_ZN25TailoredWordBreakIteratorC1ERKN4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEEENS0_4i18n13BreakIterator9BreakTypeE(%class.TailoredWordBreakIterator* nonnull %6, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %7, i32 %19) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %25) #12
  %40 = getelementptr inbounds %class.TailoredWordBreakIterator, %class.TailoredWordBreakIterator* %6, i64 0, i32 0
  %41 = call zeroext i1 @_ZN4base4i18n13BreakIterator4InitEv(%"class.base::i18n::BreakIterator"* nonnull %40) #12
  br i1 %41, label %42, label %324

42:                                               ; preds = %23
  %43 = call zeroext i1 @_ZN25TailoredWordBreakIterator7AdvanceEv(%class.TailoredWordBreakIterator* nonnull %6) #12
  br i1 %43, label %44, label %59

44:                                               ; preds = %42
  %45 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %45, i64 0, i32 1, i32 1
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %48 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  %49 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = bitcast %"class.std::__1::basic_string"** %20 to i64*
  %51 = xor i1 %12, true
  %52 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %3, i64 0, i32 0, i32 1
  %53 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %54 = bitcast i64** %52 to i64*
  %55 = bitcast %"class.std::__1::vector.14"* %3 to i64*
  %56 = bitcast i64** %53 to i64*
  %57 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %3, i64 0, i32 0, i32 0
  %58 = bitcast %"class.std::__1::basic_string"* %8 to i8**
  br label %60

59:                                               ; preds = %322, %42
  call void @_ZN25TailoredWordBreakIteratorD1Ev(%class.TailoredWordBreakIterator* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %24) #12
  br label %660

60:                                               ; preds = %44, %322
  %61 = call zeroext i1 @_ZNK25TailoredWordBreakIterator6IsWordEv(%class.TailoredWordBreakIterator* nonnull %6) #12
  br i1 %61, label %62, label %322

62:                                               ; preds = %60
  call void @_ZNK25TailoredWordBreakIterator9GetStringEv(%"class.std::__1::basic_string"* nonnull sret %8, %class.TailoredWordBreakIterator* nonnull %6) #12
  %63 = call i64 @_ZNK25TailoredWordBreakIterator4prevEv(%class.TailoredWordBreakIterator* nonnull %6) #12
  %64 = load i8, i8* %46, align 1
  %65 = icmp slt i8 %64, 0
  %66 = load i64, i64* %47, align 8
  %67 = zext i8 %64 to i64
  %68 = select i1 %65, i64 %66, i64 %67
  %69 = icmp eq i64 %68, 0
  br i1 %69, label %317, label %70

70:                                               ; preds = %62
  %71 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %20, align 8
  %72 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %21, align 8
  %73 = icmp eq %"class.std::__1::basic_string"* %71, %72
  br i1 %73, label %253, label %74

74:                                               ; preds = %70
  br i1 %65, label %77, label %75

75:                                               ; preds = %74
  %76 = bitcast %"class.std::__1::basic_string"* %71 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %76, i8* nonnull align 8 %48, i64 24, i1 false) #12
  br label %250

77:                                               ; preds = %74
  %78 = load i16*, i16** %49, align 8
  %79 = icmp ult i64 %66, 11
  br i1 %79, label %80, label %85

80:                                               ; preds = %77
  %81 = bitcast %"class.std::__1::basic_string"* %71 to i16*
  %82 = trunc i64 %66 to i8
  %83 = bitcast %"class.std::__1::basic_string"* %71 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %84 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %83, i64 0, i32 1, i32 1
  store i8 %82, i8* %84, align 1
  br label %102

85:                                               ; preds = %77
  %86 = icmp ugt i64 %66, 9223372036854775791
  br i1 %86, label %87, label %89

87:                                               ; preds = %85
  %88 = bitcast %"class.std::__1::basic_string"* %71 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %88) #14
  unreachable

89:                                               ; preds = %85
  %90 = add nuw nsw i64 %66, 8
  %91 = and i64 %90, -8
  %92 = icmp slt i64 %91, 0
  br i1 %92, label %93, label %94

93:                                               ; preds = %89
  call void @abort() #14
  unreachable

94:                                               ; preds = %89
  %95 = shl i64 %91, 1
  %96 = call i8* @_Znwm(i64 %95) #13
  %97 = bitcast i8* %96 to i16*
  %98 = bitcast %"class.std::__1::basic_string"* %71 to i8**
  store i8* %96, i8** %98, align 8
  %99 = or i64 %91, -9223372036854775808
  %100 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %71, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %71, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %66, i64* %101, align 8
  br label %102

102:                                              ; preds = %94, %80
  %103 = phi i16* [ %81, %80 ], [ %97, %94 ]
  %104 = add nuw nsw i64 %66, 1
  %105 = add i64 %66, 1
  %106 = icmp ult i64 %105, 16
  br i1 %106, label %197, label %107

107:                                              ; preds = %102
  %108 = getelementptr i16, i16* %103, i64 1
  %109 = getelementptr i16, i16* %108, i64 %66
  %110 = getelementptr i16, i16* %78, i64 1
  %111 = getelementptr i16, i16* %110, i64 %66
  %112 = icmp ult i16* %103, %111
  %113 = icmp ult i16* %78, %109
  %114 = and i1 %112, %113
  br i1 %114, label %197, label %115

115:                                              ; preds = %107
  %116 = and i64 %105, -16
  %117 = sub i64 %104, %116
  %118 = getelementptr i16, i16* %78, i64 %116
  %119 = getelementptr i16, i16* %103, i64 %116
  %120 = add i64 %116, -16
  %121 = lshr exact i64 %120, 4
  %122 = add nuw nsw i64 %121, 1
  %123 = and i64 %122, 3
  %124 = icmp ult i64 %120, 48
  br i1 %124, label %176, label %125

125:                                              ; preds = %115
  %126 = sub nsw i64 %122, %123
  br label %127

127:                                              ; preds = %127, %125
  %128 = phi i64 [ 0, %125 ], [ %173, %127 ]
  %129 = phi i64 [ %126, %125 ], [ %174, %127 ]
  %130 = getelementptr i16, i16* %78, i64 %128
  %131 = getelementptr i16, i16* %103, i64 %128
  %132 = bitcast i16* %130 to <8 x i16>*
  %133 = load <8 x i16>, <8 x i16>* %132, align 2, !alias.scope !13
  %134 = getelementptr i16, i16* %130, i64 8
  %135 = bitcast i16* %134 to <8 x i16>*
  %136 = load <8 x i16>, <8 x i16>* %135, align 2, !alias.scope !13
  %137 = bitcast i16* %131 to <8 x i16>*
  store <8 x i16> %133, <8 x i16>* %137, align 2, !alias.scope !16, !noalias !13
  %138 = getelementptr i16, i16* %131, i64 8
  %139 = bitcast i16* %138 to <8 x i16>*
  store <8 x i16> %136, <8 x i16>* %139, align 2, !alias.scope !16, !noalias !13
  %140 = or i64 %128, 16
  %141 = getelementptr i16, i16* %78, i64 %140
  %142 = getelementptr i16, i16* %103, i64 %140
  %143 = bitcast i16* %141 to <8 x i16>*
  %144 = load <8 x i16>, <8 x i16>* %143, align 2, !alias.scope !13
  %145 = getelementptr i16, i16* %141, i64 8
  %146 = bitcast i16* %145 to <8 x i16>*
  %147 = load <8 x i16>, <8 x i16>* %146, align 2, !alias.scope !13
  %148 = bitcast i16* %142 to <8 x i16>*
  store <8 x i16> %144, <8 x i16>* %148, align 2, !alias.scope !16, !noalias !13
  %149 = getelementptr i16, i16* %142, i64 8
  %150 = bitcast i16* %149 to <8 x i16>*
  store <8 x i16> %147, <8 x i16>* %150, align 2, !alias.scope !16, !noalias !13
  %151 = or i64 %128, 32
  %152 = getelementptr i16, i16* %78, i64 %151
  %153 = getelementptr i16, i16* %103, i64 %151
  %154 = bitcast i16* %152 to <8 x i16>*
  %155 = load <8 x i16>, <8 x i16>* %154, align 2, !alias.scope !13
  %156 = getelementptr i16, i16* %152, i64 8
  %157 = bitcast i16* %156 to <8 x i16>*
  %158 = load <8 x i16>, <8 x i16>* %157, align 2, !alias.scope !13
  %159 = bitcast i16* %153 to <8 x i16>*
  store <8 x i16> %155, <8 x i16>* %159, align 2, !alias.scope !16, !noalias !13
  %160 = getelementptr i16, i16* %153, i64 8
  %161 = bitcast i16* %160 to <8 x i16>*
  store <8 x i16> %158, <8 x i16>* %161, align 2, !alias.scope !16, !noalias !13
  %162 = or i64 %128, 48
  %163 = getelementptr i16, i16* %78, i64 %162
  %164 = getelementptr i16, i16* %103, i64 %162
  %165 = bitcast i16* %163 to <8 x i16>*
  %166 = load <8 x i16>, <8 x i16>* %165, align 2, !alias.scope !13
  %167 = getelementptr i16, i16* %163, i64 8
  %168 = bitcast i16* %167 to <8 x i16>*
  %169 = load <8 x i16>, <8 x i16>* %168, align 2, !alias.scope !13
  %170 = bitcast i16* %164 to <8 x i16>*
  store <8 x i16> %166, <8 x i16>* %170, align 2, !alias.scope !16, !noalias !13
  %171 = getelementptr i16, i16* %164, i64 8
  %172 = bitcast i16* %171 to <8 x i16>*
  store <8 x i16> %169, <8 x i16>* %172, align 2, !alias.scope !16, !noalias !13
  %173 = add i64 %128, 64
  %174 = add i64 %129, -4
  %175 = icmp eq i64 %174, 0
  br i1 %175, label %176, label %127, !llvm.loop !18

176:                                              ; preds = %127, %115
  %177 = phi i64 [ 0, %115 ], [ %173, %127 ]
  %178 = icmp eq i64 %123, 0
  br i1 %178, label %195, label %179

179:                                              ; preds = %176, %179
  %180 = phi i64 [ %192, %179 ], [ %177, %176 ]
  %181 = phi i64 [ %193, %179 ], [ %123, %176 ]
  %182 = getelementptr i16, i16* %78, i64 %180
  %183 = getelementptr i16, i16* %103, i64 %180
  %184 = bitcast i16* %182 to <8 x i16>*
  %185 = load <8 x i16>, <8 x i16>* %184, align 2, !alias.scope !13
  %186 = getelementptr i16, i16* %182, i64 8
  %187 = bitcast i16* %186 to <8 x i16>*
  %188 = load <8 x i16>, <8 x i16>* %187, align 2, !alias.scope !13
  %189 = bitcast i16* %183 to <8 x i16>*
  store <8 x i16> %185, <8 x i16>* %189, align 2, !alias.scope !16, !noalias !13
  %190 = getelementptr i16, i16* %183, i64 8
  %191 = bitcast i16* %190 to <8 x i16>*
  store <8 x i16> %188, <8 x i16>* %191, align 2, !alias.scope !16, !noalias !13
  %192 = add i64 %180, 16
  %193 = add i64 %181, -1
  %194 = icmp eq i64 %193, 0
  br i1 %194, label %195, label %179, !llvm.loop !19

195:                                              ; preds = %179, %176
  %196 = icmp eq i64 %105, %116
  br i1 %196, label %250, label %197

197:                                              ; preds = %195, %107, %102
  %198 = phi i64 [ %104, %107 ], [ %104, %102 ], [ %117, %195 ]
  %199 = phi i16* [ %78, %107 ], [ %78, %102 ], [ %118, %195 ]
  %200 = phi i16* [ %103, %107 ], [ %103, %102 ], [ %119, %195 ]
  %201 = add i64 %198, -1
  %202 = and i64 %198, 7
  %203 = icmp eq i64 %202, 0
  br i1 %203, label %215, label %204

204:                                              ; preds = %197, %204
  %205 = phi i64 [ %210, %204 ], [ %198, %197 ]
  %206 = phi i16* [ %212, %204 ], [ %199, %197 ]
  %207 = phi i16* [ %211, %204 ], [ %200, %197 ]
  %208 = phi i64 [ %213, %204 ], [ %202, %197 ]
  %209 = load i16, i16* %206, align 2
  store i16 %209, i16* %207, align 2
  %210 = add i64 %205, -1
  %211 = getelementptr inbounds i16, i16* %207, i64 1
  %212 = getelementptr inbounds i16, i16* %206, i64 1
  %213 = add i64 %208, -1
  %214 = icmp eq i64 %213, 0
  br i1 %214, label %215, label %204, !llvm.loop !20

215:                                              ; preds = %204, %197
  %216 = phi i64 [ %198, %197 ], [ %210, %204 ]
  %217 = phi i16* [ %199, %197 ], [ %212, %204 ]
  %218 = phi i16* [ %200, %197 ], [ %211, %204 ]
  %219 = icmp ult i64 %201, 7
  br i1 %219, label %250, label %220

220:                                              ; preds = %215, %220
  %221 = phi i64 [ %246, %220 ], [ %216, %215 ]
  %222 = phi i16* [ %248, %220 ], [ %217, %215 ]
  %223 = phi i16* [ %247, %220 ], [ %218, %215 ]
  %224 = load i16, i16* %222, align 2
  store i16 %224, i16* %223, align 2
  %225 = getelementptr inbounds i16, i16* %223, i64 1
  %226 = getelementptr inbounds i16, i16* %222, i64 1
  %227 = load i16, i16* %226, align 2
  store i16 %227, i16* %225, align 2
  %228 = getelementptr inbounds i16, i16* %223, i64 2
  %229 = getelementptr inbounds i16, i16* %222, i64 2
  %230 = load i16, i16* %229, align 2
  store i16 %230, i16* %228, align 2
  %231 = getelementptr inbounds i16, i16* %223, i64 3
  %232 = getelementptr inbounds i16, i16* %222, i64 3
  %233 = load i16, i16* %232, align 2
  store i16 %233, i16* %231, align 2
  %234 = getelementptr inbounds i16, i16* %223, i64 4
  %235 = getelementptr inbounds i16, i16* %222, i64 4
  %236 = load i16, i16* %235, align 2
  store i16 %236, i16* %234, align 2
  %237 = getelementptr inbounds i16, i16* %223, i64 5
  %238 = getelementptr inbounds i16, i16* %222, i64 5
  %239 = load i16, i16* %238, align 2
  store i16 %239, i16* %237, align 2
  %240 = getelementptr inbounds i16, i16* %223, i64 6
  %241 = getelementptr inbounds i16, i16* %222, i64 6
  %242 = load i16, i16* %241, align 2
  store i16 %242, i16* %240, align 2
  %243 = getelementptr inbounds i16, i16* %223, i64 7
  %244 = getelementptr inbounds i16, i16* %222, i64 7
  %245 = load i16, i16* %244, align 2
  store i16 %245, i16* %243, align 2
  %246 = add i64 %221, -8
  %247 = getelementptr inbounds i16, i16* %223, i64 8
  %248 = getelementptr inbounds i16, i16* %222, i64 8
  %249 = icmp eq i64 %246, 0
  br i1 %249, label %250, label %220, !llvm.loop !21

250:                                              ; preds = %215, %220, %195, %75
  %251 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %71, i64 1
  %252 = ptrtoint %"class.std::__1::basic_string"* %251 to i64
  store i64 %252, i64* %50, align 8
  br label %254

253:                                              ; preds = %70
  call void @_ZNSt3__16vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS4_IS6_EEE21__push_back_slow_pathIRKS6_EEvOT_(%"class.std::__1::vector"* %0, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %8) #12
  br label %254

254:                                              ; preds = %250, %253
  %255 = icmp ult i64 %63, 200
  %256 = and i1 %255, %51
  br i1 %256, label %257, label %317

257:                                              ; preds = %254
  %258 = load i64*, i64** %52, align 8
  %259 = load i64*, i64** %53, align 8
  %260 = icmp eq i64* %258, %259
  %261 = ptrtoint i64* %259 to i64
  br i1 %260, label %265, label %262

262:                                              ; preds = %257
  store i64 %63, i64* %258, align 8
  %263 = getelementptr inbounds i64, i64* %258, i64 1
  %264 = ptrtoint i64* %263 to i64
  store i64 %264, i64* %54, align 8
  br label %317

265:                                              ; preds = %257
  %266 = ptrtoint i64* %258 to i64
  %267 = load i64, i64* %55, align 8
  %268 = sub i64 %266, %267
  %269 = ashr exact i64 %268, 3
  %270 = add nsw i64 %269, 1
  %271 = icmp ugt i64 %270, 2305843009213693951
  br i1 %271, label %272, label %274

272:                                              ; preds = %265
  %273 = bitcast %"class.std::__1::vector.14"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %273) #14
  unreachable

274:                                              ; preds = %265
  %275 = sub i64 %261, %267
  %276 = ashr exact i64 %275, 3
  %277 = icmp ult i64 %276, 1152921504606846975
  br i1 %277, label %278, label %286

278:                                              ; preds = %274
  %279 = ashr exact i64 %275, 2
  %280 = icmp ult i64 %279, %270
  %281 = select i1 %280, i64 %270, i64 %279
  %282 = icmp eq i64 %281, 0
  br i1 %282, label %291, label %283

283:                                              ; preds = %278
  %284 = icmp ugt i64 %281, 2305843009213693951
  br i1 %284, label %285, label %286

285:                                              ; preds = %283
  call void @abort() #14
  unreachable

286:                                              ; preds = %283, %274
  %287 = phi i64 [ %281, %283 ], [ 2305843009213693951, %274 ]
  %288 = shl i64 %287, 3
  %289 = call i8* @_Znwm(i64 %288) #13
  %290 = bitcast i8* %289 to i64*
  br label %291

291:                                              ; preds = %286, %278
  %292 = phi i64 [ %287, %286 ], [ 0, %278 ]
  %293 = phi i64* [ %290, %286 ], [ null, %278 ]
  %294 = getelementptr inbounds i64, i64* %293, i64 %269
  %295 = getelementptr inbounds i64, i64* %293, i64 %292
  %296 = ptrtoint i64* %295 to i64
  store i64 %63, i64* %294, align 8
  %297 = getelementptr inbounds i64, i64* %294, i64 1
  %298 = ptrtoint i64* %297 to i64
  %299 = load i64*, i64** %57, align 8
  %300 = load i64, i64* %54, align 8
  %301 = ptrtoint i64* %299 to i64
  %302 = sub i64 %300, %301
  %303 = ashr exact i64 %302, 3
  %304 = sub nsw i64 0, %303
  %305 = getelementptr inbounds i64, i64* %294, i64 %304
  %306 = ptrtoint i64* %305 to i64
  %307 = icmp sgt i64 %302, 0
  br i1 %307, label %308, label %312

308:                                              ; preds = %291
  %309 = bitcast i64* %305 to i8*
  %310 = bitcast i64* %299 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %309, i8* align 8 %310, i64 %302, i1 false) #12
  %311 = load i64*, i64** %57, align 8
  br label %312

312:                                              ; preds = %308, %291
  %313 = phi i64* [ %299, %291 ], [ %311, %308 ]
  store i64 %306, i64* %55, align 8
  store i64 %298, i64* %54, align 8
  store i64 %296, i64* %56, align 8
  %314 = icmp eq i64* %313, null
  br i1 %314, label %317, label %315

315:                                              ; preds = %312
  %316 = bitcast i64* %313 to i8*
  call void @_ZdlPv(i8* %316) #13
  br label %317

317:                                              ; preds = %254, %262, %312, %315, %62
  %318 = load i8, i8* %46, align 1
  %319 = icmp slt i8 %318, 0
  br i1 %319, label %320, label %322

320:                                              ; preds = %317
  %321 = load i8*, i8** %58, align 8
  call void @_ZdlPv(i8* %321) #13
  br label %322

322:                                              ; preds = %320, %317, %60
  %323 = call zeroext i1 @_ZN25TailoredWordBreakIterator7AdvanceEv(%class.TailoredWordBreakIterator* nonnull %6) #12
  br i1 %323, label %60, label %59

324:                                              ; preds = %23
  call void @_ZN25TailoredWordBreakIteratorD1Ev(%class.TailoredWordBreakIterator* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %24) #12
  br label %660

325:                                              ; preds = %18
  %326 = bitcast %"class.base::i18n::BreakIterator"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %326) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %326, i8 -86, i64 72, i1 false)
  %327 = bitcast %"class.base::BasicStringPiece"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %327) #12
  %328 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %10, i64 0, i32 0
  %329 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %330 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %329, i64 0, i32 1, i32 1
  %331 = load i8, i8* %330, align 1
  %332 = icmp slt i8 %331, 0
  %333 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %334 = load i16*, i16** %333, align 8
  %335 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %336 = select i1 %332, i16* %334, i16* %335
  store i16* %336, i16** %328, align 8
  %337 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %10, i64 0, i32 1
  %338 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %339 = load i64, i64* %338, align 8
  %340 = zext i8 %331 to i64
  %341 = select i1 %332, i64 %339, i64 %340
  store i64 %341, i64* %337, align 8
  call void @_ZN4base4i18n13BreakIteratorC1ERKNS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEENS1_9BreakTypeE(%"class.base::i18n::BreakIterator"* nonnull %9, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %10, i32 %19) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %327) #12
  %342 = call zeroext i1 @_ZN4base4i18n13BreakIterator4InitEv(%"class.base::i18n::BreakIterator"* nonnull %9) #12
  br i1 %342, label %343, label %659

343:                                              ; preds = %325
  %344 = call zeroext i1 @_ZN4base4i18n13BreakIterator7AdvanceEv(%"class.base::i18n::BreakIterator"* nonnull %9) #12
  br i1 %344, label %345, label %368

345:                                              ; preds = %343
  %346 = getelementptr inbounds %"class.base::i18n::BreakIterator", %"class.base::i18n::BreakIterator"* %9, i64 0, i32 4
  %347 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  %348 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %349 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %350 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %351 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %350, i64 0, i32 1, i32 1
  %352 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %353 = bitcast %"class.std::__1::basic_string"* %11 to i16*
  %354 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %355 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %356 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %355, i64 0, i32 1, i32 1
  %357 = bitcast %"class.std::__1::basic_string"* %5 to i16*
  %358 = bitcast %"class.std::__1::basic_string"* %5 to i8**
  %359 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  %360 = bitcast %"class.std::__1::basic_string"** %20 to i64*
  %361 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %3, i64 0, i32 0, i32 1
  %362 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %363 = bitcast i64** %361 to i64*
  %364 = bitcast %"class.std::__1::vector.14"* %3 to i64*
  %365 = bitcast i64** %362 to i64*
  %366 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %3, i64 0, i32 0, i32 0
  %367 = bitcast %"class.std::__1::basic_string"* %11 to i8**
  br label %369

368:                                              ; preds = %657, %343
  call void @_ZN4base4i18n13BreakIteratorD1Ev(%"class.base::i18n::BreakIterator"* nonnull %9) #12
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %326) #12
  br label %660

369:                                              ; preds = %345, %657
  call void @_ZNK4base4i18n13BreakIterator9GetStringEv(%"class.std::__1::basic_string"* nonnull sret %11, %"class.base::i18n::BreakIterator"* nonnull %9) #12
  %370 = load i64, i64* %346, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %347) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %347, i8 0, i64 24, i1 false) #12
  %371 = load i8, i8* %351, align 1
  %372 = icmp slt i8 %371, 0
  %373 = load i16*, i16** %352, align 8
  %374 = select i1 %372, i16* %373, i16* %353
  %375 = load i64, i64* %354, align 8
  %376 = zext i8 %371 to i64
  %377 = select i1 %372, i64 %375, i64 %376
  %378 = call i32 @_ZN4base14TrimWhitespaceENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEENS_13TrimPositionsEPNS1_12basic_stringIDsS3_NS1_9allocatorIDsEEEE(i16* %374, i64 %377, i32 1, %"class.std::__1::basic_string"* nonnull %5) #12
  %379 = load i8, i8* %351, align 1
  %380 = icmp slt i8 %379, 0
  %381 = load i64, i64* %354, align 8
  %382 = zext i8 %379 to i64
  %383 = select i1 %380, i64 %381, i64 %382
  %384 = load i8, i8* %356, align 1
  %385 = icmp slt i8 %384, 0
  %386 = load i64, i64* %349, align 8
  %387 = zext i8 %384 to i64
  %388 = select i1 %385, i64 %386, i64 %387
  %389 = sub i64 %383, %388
  %390 = load i16*, i16** %348, align 8
  %391 = select i1 %385, i16* %390, i16* %357
  %392 = call i32 @_ZN4base14TrimWhitespaceENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEENS_13TrimPositionsEPNS1_12basic_stringIDsS3_NS1_9allocatorIDsEEEE(i16* %391, i64 %388, i32 2, %"class.std::__1::basic_string"* nonnull %11) #12
  %393 = load i8, i8* %356, align 1
  %394 = icmp slt i8 %393, 0
  br i1 %394, label %395, label %397

395:                                              ; preds = %369
  %396 = load i8*, i8** %358, align 8
  call void @_ZdlPv(i8* %396) #13
  br label %397

397:                                              ; preds = %395, %369
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %347) #12
  %398 = load i8, i8* %351, align 1
  %399 = icmp slt i8 %398, 0
  %400 = load i64, i64* %354, align 8
  %401 = zext i8 %398 to i64
  %402 = select i1 %399, i64 %400, i64 %401
  %403 = icmp eq i64 %402, 0
  br i1 %403, label %652, label %404

404:                                              ; preds = %397
  %405 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %20, align 8
  %406 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %21, align 8
  %407 = icmp eq %"class.std::__1::basic_string"* %405, %406
  br i1 %407, label %587, label %408

408:                                              ; preds = %404
  br i1 %399, label %411, label %409

409:                                              ; preds = %408
  %410 = bitcast %"class.std::__1::basic_string"* %405 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %410, i8* nonnull align 8 %359, i64 24, i1 false) #12
  br label %584

411:                                              ; preds = %408
  %412 = load i16*, i16** %352, align 8
  %413 = icmp ult i64 %400, 11
  br i1 %413, label %414, label %419

414:                                              ; preds = %411
  %415 = bitcast %"class.std::__1::basic_string"* %405 to i16*
  %416 = trunc i64 %400 to i8
  %417 = bitcast %"class.std::__1::basic_string"* %405 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %418 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %417, i64 0, i32 1, i32 1
  store i8 %416, i8* %418, align 1
  br label %436

419:                                              ; preds = %411
  %420 = icmp ugt i64 %400, 9223372036854775791
  br i1 %420, label %421, label %423

421:                                              ; preds = %419
  %422 = bitcast %"class.std::__1::basic_string"* %405 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %422) #14
  unreachable

423:                                              ; preds = %419
  %424 = add nuw nsw i64 %400, 8
  %425 = and i64 %424, -8
  %426 = icmp slt i64 %425, 0
  br i1 %426, label %427, label %428

427:                                              ; preds = %423
  call void @abort() #14
  unreachable

428:                                              ; preds = %423
  %429 = shl i64 %425, 1
  %430 = call i8* @_Znwm(i64 %429) #13
  %431 = bitcast i8* %430 to i16*
  %432 = bitcast %"class.std::__1::basic_string"* %405 to i8**
  store i8* %430, i8** %432, align 8
  %433 = or i64 %425, -9223372036854775808
  %434 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %405, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %433, i64* %434, align 8
  %435 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %405, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %400, i64* %435, align 8
  br label %436

436:                                              ; preds = %428, %414
  %437 = phi i16* [ %415, %414 ], [ %431, %428 ]
  %438 = add nuw nsw i64 %400, 1
  %439 = add i64 %400, 1
  %440 = icmp ult i64 %439, 16
  br i1 %440, label %531, label %441

441:                                              ; preds = %436
  %442 = getelementptr i16, i16* %437, i64 1
  %443 = getelementptr i16, i16* %442, i64 %400
  %444 = getelementptr i16, i16* %412, i64 1
  %445 = getelementptr i16, i16* %444, i64 %400
  %446 = icmp ult i16* %437, %445
  %447 = icmp ult i16* %412, %443
  %448 = and i1 %446, %447
  br i1 %448, label %531, label %449

449:                                              ; preds = %441
  %450 = and i64 %439, -16
  %451 = sub i64 %438, %450
  %452 = getelementptr i16, i16* %412, i64 %450
  %453 = getelementptr i16, i16* %437, i64 %450
  %454 = add i64 %450, -16
  %455 = lshr exact i64 %454, 4
  %456 = add nuw nsw i64 %455, 1
  %457 = and i64 %456, 3
  %458 = icmp ult i64 %454, 48
  br i1 %458, label %510, label %459

459:                                              ; preds = %449
  %460 = sub nsw i64 %456, %457
  br label %461

461:                                              ; preds = %461, %459
  %462 = phi i64 [ 0, %459 ], [ %507, %461 ]
  %463 = phi i64 [ %460, %459 ], [ %508, %461 ]
  %464 = getelementptr i16, i16* %412, i64 %462
  %465 = getelementptr i16, i16* %437, i64 %462
  %466 = bitcast i16* %464 to <8 x i16>*
  %467 = load <8 x i16>, <8 x i16>* %466, align 2, !alias.scope !22
  %468 = getelementptr i16, i16* %464, i64 8
  %469 = bitcast i16* %468 to <8 x i16>*
  %470 = load <8 x i16>, <8 x i16>* %469, align 2, !alias.scope !22
  %471 = bitcast i16* %465 to <8 x i16>*
  store <8 x i16> %467, <8 x i16>* %471, align 2, !alias.scope !25, !noalias !22
  %472 = getelementptr i16, i16* %465, i64 8
  %473 = bitcast i16* %472 to <8 x i16>*
  store <8 x i16> %470, <8 x i16>* %473, align 2, !alias.scope !25, !noalias !22
  %474 = or i64 %462, 16
  %475 = getelementptr i16, i16* %412, i64 %474
  %476 = getelementptr i16, i16* %437, i64 %474
  %477 = bitcast i16* %475 to <8 x i16>*
  %478 = load <8 x i16>, <8 x i16>* %477, align 2, !alias.scope !22
  %479 = getelementptr i16, i16* %475, i64 8
  %480 = bitcast i16* %479 to <8 x i16>*
  %481 = load <8 x i16>, <8 x i16>* %480, align 2, !alias.scope !22
  %482 = bitcast i16* %476 to <8 x i16>*
  store <8 x i16> %478, <8 x i16>* %482, align 2, !alias.scope !25, !noalias !22
  %483 = getelementptr i16, i16* %476, i64 8
  %484 = bitcast i16* %483 to <8 x i16>*
  store <8 x i16> %481, <8 x i16>* %484, align 2, !alias.scope !25, !noalias !22
  %485 = or i64 %462, 32
  %486 = getelementptr i16, i16* %412, i64 %485
  %487 = getelementptr i16, i16* %437, i64 %485
  %488 = bitcast i16* %486 to <8 x i16>*
  %489 = load <8 x i16>, <8 x i16>* %488, align 2, !alias.scope !22
  %490 = getelementptr i16, i16* %486, i64 8
  %491 = bitcast i16* %490 to <8 x i16>*
  %492 = load <8 x i16>, <8 x i16>* %491, align 2, !alias.scope !22
  %493 = bitcast i16* %487 to <8 x i16>*
  store <8 x i16> %489, <8 x i16>* %493, align 2, !alias.scope !25, !noalias !22
  %494 = getelementptr i16, i16* %487, i64 8
  %495 = bitcast i16* %494 to <8 x i16>*
  store <8 x i16> %492, <8 x i16>* %495, align 2, !alias.scope !25, !noalias !22
  %496 = or i64 %462, 48
  %497 = getelementptr i16, i16* %412, i64 %496
  %498 = getelementptr i16, i16* %437, i64 %496
  %499 = bitcast i16* %497 to <8 x i16>*
  %500 = load <8 x i16>, <8 x i16>* %499, align 2, !alias.scope !22
  %501 = getelementptr i16, i16* %497, i64 8
  %502 = bitcast i16* %501 to <8 x i16>*
  %503 = load <8 x i16>, <8 x i16>* %502, align 2, !alias.scope !22
  %504 = bitcast i16* %498 to <8 x i16>*
  store <8 x i16> %500, <8 x i16>* %504, align 2, !alias.scope !25, !noalias !22
  %505 = getelementptr i16, i16* %498, i64 8
  %506 = bitcast i16* %505 to <8 x i16>*
  store <8 x i16> %503, <8 x i16>* %506, align 2, !alias.scope !25, !noalias !22
  %507 = add i64 %462, 64
  %508 = add i64 %463, -4
  %509 = icmp eq i64 %508, 0
  br i1 %509, label %510, label %461, !llvm.loop !27

510:                                              ; preds = %461, %449
  %511 = phi i64 [ 0, %449 ], [ %507, %461 ]
  %512 = icmp eq i64 %457, 0
  br i1 %512, label %529, label %513

513:                                              ; preds = %510, %513
  %514 = phi i64 [ %526, %513 ], [ %511, %510 ]
  %515 = phi i64 [ %527, %513 ], [ %457, %510 ]
  %516 = getelementptr i16, i16* %412, i64 %514
  %517 = getelementptr i16, i16* %437, i64 %514
  %518 = bitcast i16* %516 to <8 x i16>*
  %519 = load <8 x i16>, <8 x i16>* %518, align 2, !alias.scope !22
  %520 = getelementptr i16, i16* %516, i64 8
  %521 = bitcast i16* %520 to <8 x i16>*
  %522 = load <8 x i16>, <8 x i16>* %521, align 2, !alias.scope !22
  %523 = bitcast i16* %517 to <8 x i16>*
  store <8 x i16> %519, <8 x i16>* %523, align 2, !alias.scope !25, !noalias !22
  %524 = getelementptr i16, i16* %517, i64 8
  %525 = bitcast i16* %524 to <8 x i16>*
  store <8 x i16> %522, <8 x i16>* %525, align 2, !alias.scope !25, !noalias !22
  %526 = add i64 %514, 16
  %527 = add i64 %515, -1
  %528 = icmp eq i64 %527, 0
  br i1 %528, label %529, label %513, !llvm.loop !28

529:                                              ; preds = %513, %510
  %530 = icmp eq i64 %439, %450
  br i1 %530, label %584, label %531

531:                                              ; preds = %529, %441, %436
  %532 = phi i64 [ %438, %441 ], [ %438, %436 ], [ %451, %529 ]
  %533 = phi i16* [ %412, %441 ], [ %412, %436 ], [ %452, %529 ]
  %534 = phi i16* [ %437, %441 ], [ %437, %436 ], [ %453, %529 ]
  %535 = add i64 %532, -1
  %536 = and i64 %532, 7
  %537 = icmp eq i64 %536, 0
  br i1 %537, label %549, label %538

538:                                              ; preds = %531, %538
  %539 = phi i64 [ %544, %538 ], [ %532, %531 ]
  %540 = phi i16* [ %546, %538 ], [ %533, %531 ]
  %541 = phi i16* [ %545, %538 ], [ %534, %531 ]
  %542 = phi i64 [ %547, %538 ], [ %536, %531 ]
  %543 = load i16, i16* %540, align 2
  store i16 %543, i16* %541, align 2
  %544 = add i64 %539, -1
  %545 = getelementptr inbounds i16, i16* %541, i64 1
  %546 = getelementptr inbounds i16, i16* %540, i64 1
  %547 = add i64 %542, -1
  %548 = icmp eq i64 %547, 0
  br i1 %548, label %549, label %538, !llvm.loop !29

549:                                              ; preds = %538, %531
  %550 = phi i64 [ %532, %531 ], [ %544, %538 ]
  %551 = phi i16* [ %533, %531 ], [ %546, %538 ]
  %552 = phi i16* [ %534, %531 ], [ %545, %538 ]
  %553 = icmp ult i64 %535, 7
  br i1 %553, label %584, label %554

554:                                              ; preds = %549, %554
  %555 = phi i64 [ %580, %554 ], [ %550, %549 ]
  %556 = phi i16* [ %582, %554 ], [ %551, %549 ]
  %557 = phi i16* [ %581, %554 ], [ %552, %549 ]
  %558 = load i16, i16* %556, align 2
  store i16 %558, i16* %557, align 2
  %559 = getelementptr inbounds i16, i16* %557, i64 1
  %560 = getelementptr inbounds i16, i16* %556, i64 1
  %561 = load i16, i16* %560, align 2
  store i16 %561, i16* %559, align 2
  %562 = getelementptr inbounds i16, i16* %557, i64 2
  %563 = getelementptr inbounds i16, i16* %556, i64 2
  %564 = load i16, i16* %563, align 2
  store i16 %564, i16* %562, align 2
  %565 = getelementptr inbounds i16, i16* %557, i64 3
  %566 = getelementptr inbounds i16, i16* %556, i64 3
  %567 = load i16, i16* %566, align 2
  store i16 %567, i16* %565, align 2
  %568 = getelementptr inbounds i16, i16* %557, i64 4
  %569 = getelementptr inbounds i16, i16* %556, i64 4
  %570 = load i16, i16* %569, align 2
  store i16 %570, i16* %568, align 2
  %571 = getelementptr inbounds i16, i16* %557, i64 5
  %572 = getelementptr inbounds i16, i16* %556, i64 5
  %573 = load i16, i16* %572, align 2
  store i16 %573, i16* %571, align 2
  %574 = getelementptr inbounds i16, i16* %557, i64 6
  %575 = getelementptr inbounds i16, i16* %556, i64 6
  %576 = load i16, i16* %575, align 2
  store i16 %576, i16* %574, align 2
  %577 = getelementptr inbounds i16, i16* %557, i64 7
  %578 = getelementptr inbounds i16, i16* %556, i64 7
  %579 = load i16, i16* %578, align 2
  store i16 %579, i16* %577, align 2
  %580 = add i64 %555, -8
  %581 = getelementptr inbounds i16, i16* %557, i64 8
  %582 = getelementptr inbounds i16, i16* %556, i64 8
  %583 = icmp eq i64 %580, 0
  br i1 %583, label %584, label %554, !llvm.loop !30

584:                                              ; preds = %549, %554, %529, %409
  %585 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %405, i64 1
  %586 = ptrtoint %"class.std::__1::basic_string"* %585 to i64
  store i64 %586, i64* %360, align 8
  br label %588

587:                                              ; preds = %404
  call void @_ZNSt3__16vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS4_IS6_EEE21__push_back_slow_pathIRKS6_EEvOT_(%"class.std::__1::vector"* %0, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %11) #12
  br label %588

588:                                              ; preds = %584, %587
  br i1 %12, label %652, label %589

589:                                              ; preds = %588
  %590 = add i64 %389, %370
  %591 = icmp ult i64 %590, 200
  br i1 %591, label %592, label %652

592:                                              ; preds = %589
  %593 = load i64*, i64** %361, align 8
  %594 = load i64*, i64** %362, align 8
  %595 = icmp eq i64* %593, %594
  %596 = ptrtoint i64* %594 to i64
  br i1 %595, label %600, label %597

597:                                              ; preds = %592
  store i64 %590, i64* %593, align 8
  %598 = getelementptr inbounds i64, i64* %593, i64 1
  %599 = ptrtoint i64* %598 to i64
  store i64 %599, i64* %363, align 8
  br label %652

600:                                              ; preds = %592
  %601 = ptrtoint i64* %593 to i64
  %602 = load i64, i64* %364, align 8
  %603 = sub i64 %601, %602
  %604 = ashr exact i64 %603, 3
  %605 = add nsw i64 %604, 1
  %606 = icmp ugt i64 %605, 2305843009213693951
  br i1 %606, label %607, label %609

607:                                              ; preds = %600
  %608 = bitcast %"class.std::__1::vector.14"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %608) #14
  unreachable

609:                                              ; preds = %600
  %610 = sub i64 %596, %602
  %611 = ashr exact i64 %610, 3
  %612 = icmp ult i64 %611, 1152921504606846975
  br i1 %612, label %613, label %621

613:                                              ; preds = %609
  %614 = ashr exact i64 %610, 2
  %615 = icmp ult i64 %614, %605
  %616 = select i1 %615, i64 %605, i64 %614
  %617 = icmp eq i64 %616, 0
  br i1 %617, label %626, label %618

618:                                              ; preds = %613
  %619 = icmp ugt i64 %616, 2305843009213693951
  br i1 %619, label %620, label %621

620:                                              ; preds = %618
  call void @abort() #14
  unreachable

621:                                              ; preds = %618, %609
  %622 = phi i64 [ %616, %618 ], [ 2305843009213693951, %609 ]
  %623 = shl i64 %622, 3
  %624 = call i8* @_Znwm(i64 %623) #13
  %625 = bitcast i8* %624 to i64*
  br label %626

626:                                              ; preds = %621, %613
  %627 = phi i64 [ %622, %621 ], [ 0, %613 ]
  %628 = phi i64* [ %625, %621 ], [ null, %613 ]
  %629 = getelementptr inbounds i64, i64* %628, i64 %604
  %630 = getelementptr inbounds i64, i64* %628, i64 %627
  %631 = ptrtoint i64* %630 to i64
  store i64 %590, i64* %629, align 8
  %632 = getelementptr inbounds i64, i64* %629, i64 1
  %633 = ptrtoint i64* %632 to i64
  %634 = load i64*, i64** %366, align 8
  %635 = load i64, i64* %363, align 8
  %636 = ptrtoint i64* %634 to i64
  %637 = sub i64 %635, %636
  %638 = ashr exact i64 %637, 3
  %639 = sub nsw i64 0, %638
  %640 = getelementptr inbounds i64, i64* %629, i64 %639
  %641 = ptrtoint i64* %640 to i64
  %642 = icmp sgt i64 %637, 0
  br i1 %642, label %643, label %647

643:                                              ; preds = %626
  %644 = bitcast i64* %640 to i8*
  %645 = bitcast i64* %634 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %644, i8* align 8 %645, i64 %637, i1 false) #12
  %646 = load i64*, i64** %366, align 8
  br label %647

647:                                              ; preds = %643, %626
  %648 = phi i64* [ %634, %626 ], [ %646, %643 ]
  store i64 %641, i64* %364, align 8
  store i64 %633, i64* %363, align 8
  store i64 %631, i64* %365, align 8
  %649 = icmp eq i64* %648, null
  br i1 %649, label %652, label %650

650:                                              ; preds = %647
  %651 = bitcast i64* %648 to i8*
  call void @_ZdlPv(i8* %651) #13
  br label %652

652:                                              ; preds = %589, %597, %647, %650, %397, %588
  %653 = load i8, i8* %351, align 1
  %654 = icmp slt i8 %653, 0
  br i1 %654, label %655, label %657

655:                                              ; preds = %652
  %656 = load i8*, i8** %367, align 8
  call void @_ZdlPv(i8* %656) #13
  br label %657

657:                                              ; preds = %652, %655
  %658 = call zeroext i1 @_ZN4base4i18n13BreakIterator7AdvanceEv(%"class.base::i18n::BreakIterator"* nonnull %9) #12
  br i1 %658, label %369, label %368

659:                                              ; preds = %325
  call void @_ZN4base4i18n13BreakIteratorD1Ev(%"class.base::i18n::BreakIterator"* nonnull %9) #12
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %326) #12
  br label %660

660:                                              ; preds = %324, %659, %368, %59
  ret void
}

declare void @_ZN4base4i18n7ToLowerENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string"* sret, i16*, i64) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN25TailoredWordBreakIteratorC1ERKN4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEEENS0_4i18n13BreakIterator9BreakTypeE(%class.TailoredWordBreakIterator*, %"class.base::BasicStringPiece"* dereferenceable(16), i32) unnamed_addr #3

declare zeroext i1 @_ZN4base4i18n13BreakIterator4InitEv(%"class.base::i18n::BreakIterator"*) local_unnamed_addr #3

declare zeroext i1 @_ZN25TailoredWordBreakIterator7AdvanceEv(%class.TailoredWordBreakIterator*) local_unnamed_addr #3

declare zeroext i1 @_ZNK25TailoredWordBreakIterator6IsWordEv(%class.TailoredWordBreakIterator*) local_unnamed_addr #3

declare void @_ZNK25TailoredWordBreakIterator9GetStringEv(%"class.std::__1::basic_string"* sret, %class.TailoredWordBreakIterator*) local_unnamed_addr #3

declare i64 @_ZNK25TailoredWordBreakIterator4prevEv(%class.TailoredWordBreakIterator*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN25TailoredWordBreakIteratorD1Ev(%class.TailoredWordBreakIterator*) unnamed_addr #4

declare void @_ZN4base4i18n13BreakIteratorC1ERKNS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEENS1_9BreakTypeE(%"class.base::i18n::BreakIterator"*, %"class.base::BasicStringPiece"* dereferenceable(16), i32) unnamed_addr #3

declare zeroext i1 @_ZN4base4i18n13BreakIterator7AdvanceEv(%"class.base::i18n::BreakIterator"*) local_unnamed_addr #3

declare void @_ZNK4base4i18n13BreakIterator9GetStringEv(%"class.std::__1::basic_string"* sret, %"class.base::i18n::BreakIterator"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4base4i18n13BreakIteratorD1Ev(%"class.base::i18n::BreakIterator"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_Z21Char16SetFromString16RKNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEE(%"class.base::internal::flat_tree.23"* noalias sret, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 {
  %3 = alloca %"struct.base::internal::flat_tree<char16_t, base::identity, std::__1::less<void>, std::__1::vector<char16_t, std::__1::allocator<char16_t> > >::value_compare", align 1
  %4 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %4, i64 0, i32 1, i32 1
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i16*, i16** %8, align 8
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %13 = zext i8 %6 to i64
  %14 = select i1 %7, i16* %9, i16* %12
  %15 = bitcast i16* %14 to i8*
  %16 = select i1 %7, i64 %11, i64 %13
  %17 = getelementptr inbounds i16, i16* %14, i64 %16
  %18 = bitcast %"class.base::internal::flat_tree.23"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 24, i1 false) #12
  %19 = shl nuw i64 %16, 1
  %20 = ashr exact i64 %19, 1
  %21 = icmp eq i64 %16, 0
  br i1 %21, label %191, label %22

22:                                               ; preds = %2
  %23 = icmp slt i64 %19, 0
  br i1 %23, label %24, label %26

24:                                               ; preds = %22
  %25 = bitcast %"class.base::internal::flat_tree.23"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %25) #14
  unreachable

26:                                               ; preds = %22
  %27 = tail call i8* @_Znwm(i64 %19) #13
  %28 = bitcast i8* %27 to i16*
  %29 = getelementptr inbounds %"class.base::internal::flat_tree.23", %"class.base::internal::flat_tree.23"* %0, i64 0, i32 0, i32 0, i32 1
  %30 = bitcast i16** %29 to i8**
  store i8* %27, i8** %30, align 8
  %31 = bitcast %"class.base::internal::flat_tree.23"* %0 to i8**
  store i8* %27, i8** %31, align 8
  %32 = getelementptr inbounds i16, i16* %28, i64 %20
  %33 = getelementptr inbounds %"class.base::internal::flat_tree.23", %"class.base::internal::flat_tree.23"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  store i16* %32, i16** %33, align 8
  %34 = bitcast i16** %29 to i64*
  %35 = shl nsw i64 %16, 1
  %36 = add i64 %35, -2
  %37 = lshr exact i64 %36, 1
  %38 = add nuw i64 %37, 1
  %39 = icmp ult i64 %38, 16
  br i1 %39, label %132, label %40

40:                                               ; preds = %26
  %41 = shl nsw i64 %16, 1
  %42 = add i64 %41, -2
  %43 = lshr exact i64 %42, 1
  %44 = getelementptr i8, i8* %27, i64 %41
  %45 = add nuw i64 %43, 1
  %46 = getelementptr i16, i16* %14, i64 %45
  %47 = bitcast i16* %46 to i8*
  %48 = icmp ult i8* %27, %47
  %49 = icmp ugt i8* %44, %15
  %50 = and i1 %48, %49
  br i1 %50, label %132, label %51

51:                                               ; preds = %40
  %52 = and i64 %38, -16
  %53 = getelementptr i16, i16* %28, i64 %52
  %54 = getelementptr i16, i16* %14, i64 %52
  %55 = add i64 %52, -16
  %56 = lshr exact i64 %55, 4
  %57 = add nuw nsw i64 %56, 1
  %58 = and i64 %57, 3
  %59 = icmp ult i64 %55, 48
  br i1 %59, label %111, label %60

60:                                               ; preds = %51
  %61 = sub nsw i64 %57, %58
  br label %62

62:                                               ; preds = %62, %60
  %63 = phi i64 [ 0, %60 ], [ %108, %62 ]
  %64 = phi i64 [ %61, %60 ], [ %109, %62 ]
  %65 = getelementptr i16, i16* %28, i64 %63
  %66 = getelementptr i16, i16* %14, i64 %63
  %67 = bitcast i16* %66 to <8 x i16>*
  %68 = load <8 x i16>, <8 x i16>* %67, align 2, !alias.scope !31
  %69 = getelementptr i16, i16* %66, i64 8
  %70 = bitcast i16* %69 to <8 x i16>*
  %71 = load <8 x i16>, <8 x i16>* %70, align 2, !alias.scope !31
  %72 = bitcast i16* %65 to <8 x i16>*
  store <8 x i16> %68, <8 x i16>* %72, align 2, !alias.scope !34, !noalias !31
  %73 = getelementptr i16, i16* %65, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  store <8 x i16> %71, <8 x i16>* %74, align 2, !alias.scope !34, !noalias !31
  %75 = or i64 %63, 16
  %76 = getelementptr i16, i16* %28, i64 %75
  %77 = getelementptr i16, i16* %14, i64 %75
  %78 = bitcast i16* %77 to <8 x i16>*
  %79 = load <8 x i16>, <8 x i16>* %78, align 2, !alias.scope !31
  %80 = getelementptr i16, i16* %77, i64 8
  %81 = bitcast i16* %80 to <8 x i16>*
  %82 = load <8 x i16>, <8 x i16>* %81, align 2, !alias.scope !31
  %83 = bitcast i16* %76 to <8 x i16>*
  store <8 x i16> %79, <8 x i16>* %83, align 2, !alias.scope !34, !noalias !31
  %84 = getelementptr i16, i16* %76, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  store <8 x i16> %82, <8 x i16>* %85, align 2, !alias.scope !34, !noalias !31
  %86 = or i64 %63, 32
  %87 = getelementptr i16, i16* %28, i64 %86
  %88 = getelementptr i16, i16* %14, i64 %86
  %89 = bitcast i16* %88 to <8 x i16>*
  %90 = load <8 x i16>, <8 x i16>* %89, align 2, !alias.scope !31
  %91 = getelementptr i16, i16* %88, i64 8
  %92 = bitcast i16* %91 to <8 x i16>*
  %93 = load <8 x i16>, <8 x i16>* %92, align 2, !alias.scope !31
  %94 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %90, <8 x i16>* %94, align 2, !alias.scope !34, !noalias !31
  %95 = getelementptr i16, i16* %87, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  store <8 x i16> %93, <8 x i16>* %96, align 2, !alias.scope !34, !noalias !31
  %97 = or i64 %63, 48
  %98 = getelementptr i16, i16* %28, i64 %97
  %99 = getelementptr i16, i16* %14, i64 %97
  %100 = bitcast i16* %99 to <8 x i16>*
  %101 = load <8 x i16>, <8 x i16>* %100, align 2, !alias.scope !31
  %102 = getelementptr i16, i16* %99, i64 8
  %103 = bitcast i16* %102 to <8 x i16>*
  %104 = load <8 x i16>, <8 x i16>* %103, align 2, !alias.scope !31
  %105 = bitcast i16* %98 to <8 x i16>*
  store <8 x i16> %101, <8 x i16>* %105, align 2, !alias.scope !34, !noalias !31
  %106 = getelementptr i16, i16* %98, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  store <8 x i16> %104, <8 x i16>* %107, align 2, !alias.scope !34, !noalias !31
  %108 = add i64 %63, 64
  %109 = add i64 %64, -4
  %110 = icmp eq i64 %109, 0
  br i1 %110, label %111, label %62, !llvm.loop !36

111:                                              ; preds = %62, %51
  %112 = phi i64 [ 0, %51 ], [ %108, %62 ]
  %113 = icmp eq i64 %58, 0
  br i1 %113, label %130, label %114

114:                                              ; preds = %111, %114
  %115 = phi i64 [ %127, %114 ], [ %112, %111 ]
  %116 = phi i64 [ %128, %114 ], [ %58, %111 ]
  %117 = getelementptr i16, i16* %28, i64 %115
  %118 = getelementptr i16, i16* %14, i64 %115
  %119 = bitcast i16* %118 to <8 x i16>*
  %120 = load <8 x i16>, <8 x i16>* %119, align 2, !alias.scope !31
  %121 = getelementptr i16, i16* %118, i64 8
  %122 = bitcast i16* %121 to <8 x i16>*
  %123 = load <8 x i16>, <8 x i16>* %122, align 2, !alias.scope !31
  %124 = bitcast i16* %117 to <8 x i16>*
  store <8 x i16> %120, <8 x i16>* %124, align 2, !alias.scope !34, !noalias !31
  %125 = getelementptr i16, i16* %117, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  store <8 x i16> %123, <8 x i16>* %126, align 2, !alias.scope !34, !noalias !31
  %127 = add i64 %115, 16
  %128 = add i64 %116, -1
  %129 = icmp eq i64 %128, 0
  br i1 %129, label %130, label %114, !llvm.loop !37

130:                                              ; preds = %114, %111
  %131 = icmp eq i64 %38, %52
  br i1 %131, label %186, label %132

132:                                              ; preds = %130, %40, %26
  %133 = phi i16* [ %28, %40 ], [ %28, %26 ], [ %53, %130 ]
  %134 = phi i16* [ %14, %40 ], [ %14, %26 ], [ %54, %130 ]
  %135 = ptrtoint i16* %134 to i64
  %136 = add i64 %16, -1
  %137 = getelementptr i16, i16* %14, i64 %136
  %138 = ptrtoint i16* %137 to i64
  %139 = sub i64 %138, %135
  %140 = lshr i64 %139, 1
  %141 = add nuw i64 %140, 1
  %142 = and i64 %141, 7
  %143 = icmp eq i64 %142, 0
  br i1 %143, label %153, label %144

144:                                              ; preds = %132, %144
  %145 = phi i16* [ %150, %144 ], [ %133, %132 ]
  %146 = phi i16* [ %149, %144 ], [ %134, %132 ]
  %147 = phi i64 [ %151, %144 ], [ %142, %132 ]
  %148 = load i16, i16* %146, align 2
  store i16 %148, i16* %145, align 2
  %149 = getelementptr inbounds i16, i16* %146, i64 1
  %150 = getelementptr inbounds i16, i16* %145, i64 1
  %151 = add i64 %147, -1
  %152 = icmp eq i64 %151, 0
  br i1 %152, label %153, label %144, !llvm.loop !38

153:                                              ; preds = %144, %132
  %154 = phi i16* [ undef, %132 ], [ %150, %144 ]
  %155 = phi i16* [ %133, %132 ], [ %150, %144 ]
  %156 = phi i16* [ %134, %132 ], [ %149, %144 ]
  %157 = icmp ult i64 %139, 14
  br i1 %157, label %186, label %158

158:                                              ; preds = %153, %158
  %159 = phi i16* [ %184, %158 ], [ %155, %153 ]
  %160 = phi i16* [ %183, %158 ], [ %156, %153 ]
  %161 = load i16, i16* %160, align 2
  store i16 %161, i16* %159, align 2
  %162 = getelementptr inbounds i16, i16* %160, i64 1
  %163 = getelementptr inbounds i16, i16* %159, i64 1
  %164 = load i16, i16* %162, align 2
  store i16 %164, i16* %163, align 2
  %165 = getelementptr inbounds i16, i16* %160, i64 2
  %166 = getelementptr inbounds i16, i16* %159, i64 2
  %167 = load i16, i16* %165, align 2
  store i16 %167, i16* %166, align 2
  %168 = getelementptr inbounds i16, i16* %160, i64 3
  %169 = getelementptr inbounds i16, i16* %159, i64 3
  %170 = load i16, i16* %168, align 2
  store i16 %170, i16* %169, align 2
  %171 = getelementptr inbounds i16, i16* %160, i64 4
  %172 = getelementptr inbounds i16, i16* %159, i64 4
  %173 = load i16, i16* %171, align 2
  store i16 %173, i16* %172, align 2
  %174 = getelementptr inbounds i16, i16* %160, i64 5
  %175 = getelementptr inbounds i16, i16* %159, i64 5
  %176 = load i16, i16* %174, align 2
  store i16 %176, i16* %175, align 2
  %177 = getelementptr inbounds i16, i16* %160, i64 6
  %178 = getelementptr inbounds i16, i16* %159, i64 6
  %179 = load i16, i16* %177, align 2
  store i16 %179, i16* %178, align 2
  %180 = getelementptr inbounds i16, i16* %160, i64 7
  %181 = getelementptr inbounds i16, i16* %159, i64 7
  %182 = load i16, i16* %180, align 2
  store i16 %182, i16* %181, align 2
  %183 = getelementptr inbounds i16, i16* %160, i64 8
  %184 = getelementptr inbounds i16, i16* %159, i64 8
  %185 = icmp eq i16* %183, %17
  br i1 %185, label %186, label %158, !llvm.loop !39

186:                                              ; preds = %153, %158, %130
  %187 = phi i16* [ %53, %130 ], [ %154, %153 ], [ %184, %158 ]
  %188 = ptrtoint i16* %187 to i64
  %189 = getelementptr inbounds %"class.base::internal::flat_tree.23", %"class.base::internal::flat_tree.23"* %0, i64 0, i32 0, i32 0, i32 0
  %190 = load i16*, i16** %189, align 8
  store i64 %188, i64* %34, align 8
  br label %191

191:                                              ; preds = %2, %186
  %192 = phi i16* [ null, %2 ], [ %187, %186 ]
  %193 = phi i16* [ null, %2 ], [ %190, %186 ]
  %194 = getelementptr inbounds %"class.base::internal::flat_tree.23", %"class.base::internal::flat_tree.23"* %0, i64 0, i32 0, i32 0, i32 1
  %195 = ptrtoint i16* %192 to i64
  %196 = getelementptr inbounds %"struct.base::internal::flat_tree<char16_t, base::identity, std::__1::less<void>, std::__1::vector<char16_t, std::__1::allocator<char16_t> > >::value_compare", %"struct.base::internal::flat_tree<char16_t, base::identity, std::__1::less<void>, std::__1::vector<char16_t, std::__1::allocator<char16_t> > >::value_compare"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %196)
  %197 = ptrtoint i16* %193 to i64
  %198 = sub i64 %195, %197
  %199 = ashr exact i64 %198, 1
  %200 = icmp sgt i64 %198, 256
  br i1 %200, label %201, label %212

201:                                              ; preds = %191
  %202 = icmp slt i64 %199, 4611686018427387903
  %203 = select i1 %202, i64 %199, i64 4611686018427387903
  br label %204

204:                                              ; preds = %209, %201
  %205 = phi i64 [ %210, %209 ], [ %203, %201 ]
  %206 = shl i64 %205, 1
  %207 = tail call noalias i8* @_ZnwmRKSt9nothrow_t(i64 %206, %"struct.std::nothrow_t"* nonnull dereferenceable(1) @_ZSt7nothrow) #12
  %208 = icmp eq i8* %207, null
  br i1 %208, label %209, label %213

209:                                              ; preds = %204
  %210 = lshr i64 %205, 1
  %211 = icmp eq i64 %210, 0
  br i1 %211, label %212, label %204

212:                                              ; preds = %209, %191
  call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIDsNS1_8identityENS_4lessIvEENS_6vectorIDsNS_9allocatorIDsEEEEE13value_compareENS_11__wrap_iterIPDsEEEEvT0_SH_T_NS_15iterator_traitsISH_E15difference_typeEPNSK_10value_typeEl(i16* %193, i16* %192, %"struct.base::internal::flat_tree<char16_t, base::identity, std::__1::less<void>, std::__1::vector<char16_t, std::__1::allocator<char16_t> > >::value_compare"* nonnull dereferenceable(1) %3, i64 %199, i16* null, i64 0) #12
  br label %215

213:                                              ; preds = %204
  %214 = bitcast i8* %207 to i16*
  call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIDsNS1_8identityENS_4lessIvEENS_6vectorIDsNS_9allocatorIDsEEEEE13value_compareENS_11__wrap_iterIPDsEEEEvT0_SH_T_NS_15iterator_traitsISH_E15difference_typeEPNSK_10value_typeEl(i16* %193, i16* %192, %"struct.base::internal::flat_tree<char16_t, base::identity, std::__1::less<void>, std::__1::vector<char16_t, std::__1::allocator<char16_t> > >::value_compare"* nonnull dereferenceable(1) %3, i64 %199, i16* nonnull %214, i64 %205) #12
  call void @_ZdlPv(i8* nonnull %207) #13
  br label %215

215:                                              ; preds = %212, %213
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %196)
  %216 = icmp eq i16* %193, %192
  br i1 %216, label %266, label %217

217:                                              ; preds = %215, %221
  %218 = phi i16* [ %219, %221 ], [ %193, %215 ]
  %219 = getelementptr inbounds i16, i16* %218, i64 1
  %220 = icmp eq i16* %219, %192
  br i1 %220, label %266, label %221

221:                                              ; preds = %217
  %222 = load i16, i16* %218, align 2
  %223 = load i16, i16* %219, align 2
  %224 = icmp ult i16 %222, %223
  br i1 %224, label %217, label %225

225:                                              ; preds = %221
  %226 = icmp eq i16* %218, %192
  br i1 %226, label %266, label %227

227:                                              ; preds = %225
  %228 = getelementptr inbounds i16, i16* %218, i64 2
  %229 = icmp eq i16* %228, %192
  br i1 %229, label %251, label %230

230:                                              ; preds = %227
  %231 = ptrtoint i16* %218 to i64
  br label %232

232:                                              ; preds = %247, %230
  %233 = phi i16 [ %248, %247 ], [ %222, %230 ]
  %234 = phi i16* [ %246, %247 ], [ %218, %230 ]
  %235 = phi i16* [ %244, %247 ], [ %228, %230 ]
  %236 = phi i64 [ %243, %247 ], [ %231, %230 ]
  %237 = load i16, i16* %235, align 2
  %238 = icmp ult i16 %233, %237
  br i1 %238, label %239, label %242

239:                                              ; preds = %232
  %240 = getelementptr inbounds i16, i16* %234, i64 1
  %241 = ptrtoint i16* %240 to i64
  store i16 %237, i16* %240, align 2
  br label %242

242:                                              ; preds = %239, %232
  %243 = phi i64 [ %236, %232 ], [ %241, %239 ]
  %244 = getelementptr inbounds i16, i16* %235, i64 1
  %245 = icmp eq i16* %244, %192
  %246 = inttoptr i64 %243 to i16*
  br i1 %245, label %249, label %247

247:                                              ; preds = %242
  %248 = load i16, i16* %246, align 2
  br label %232

249:                                              ; preds = %242
  %250 = inttoptr i64 %243 to i16*
  br label %251

251:                                              ; preds = %249, %227
  %252 = phi i16* [ %218, %227 ], [ %250, %249 ]
  %253 = getelementptr inbounds i16, i16* %252, i64 1
  %254 = icmp eq i16* %253, %192
  br i1 %254, label %266, label %255

255:                                              ; preds = %251
  %256 = bitcast i16** %194 to i64*
  %257 = load i64, i64* %256, align 8
  %258 = sub i64 %257, %195
  %259 = ashr exact i64 %258, 1
  %260 = icmp eq i64 %258, 0
  br i1 %260, label %264, label %261

261:                                              ; preds = %255
  %262 = bitcast i16* %253 to i8*
  %263 = bitcast i16* %192 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %262, i8* align 2 %263, i64 %258, i1 false) #12
  br label %264

264:                                              ; preds = %261, %255
  %265 = getelementptr inbounds i16, i16* %253, i64 %259
  store i16* %265, i16** %194, align 8
  br label %266

266:                                              ; preds = %217, %215, %225, %251, %264
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19HistoryInfoMapValueC2Ev(%struct.HistoryInfoMapValue*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %struct.HistoryInfoMapValue, %struct.HistoryInfoMapValue* %0, i64 0, i32 0
  tail call void @_ZN7history6URLRowC1Ev(%"class.history::URLRow"* %2) #12
  %3 = getelementptr inbounds %struct.HistoryInfoMapValue, %struct.HistoryInfoMapValue* %0, i64 0, i32 1
  %4 = bitcast %"class.std::__1::vector.41"* %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 24, i1 false) #12
  ret void
}

declare void @_ZN7history6URLRowC1Ev(%"class.history::URLRow"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19HistoryInfoMapValueC2ERKS_(%struct.HistoryInfoMapValue*, %struct.HistoryInfoMapValue* dereferenceable(208)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %struct.HistoryInfoMapValue, %struct.HistoryInfoMapValue* %0, i64 0, i32 0
  %4 = getelementptr inbounds %struct.HistoryInfoMapValue, %struct.HistoryInfoMapValue* %1, i64 0, i32 0
  tail call void @_ZN7history6URLRowC1ERKS0_(%"class.history::URLRow"* %3, %"class.history::URLRow"* dereferenceable(184) %4) #12
  %5 = getelementptr inbounds %struct.HistoryInfoMapValue, %struct.HistoryInfoMapValue* %0, i64 0, i32 1
  %6 = getelementptr inbounds %struct.HistoryInfoMapValue, %struct.HistoryInfoMapValue* %1, i64 0, i32 1
  %7 = bitcast %"class.std::__1::vector.41"* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false) #12
  %8 = getelementptr inbounds %struct.HistoryInfoMapValue, %struct.HistoryInfoMapValue* %1, i64 0, i32 1, i32 0, i32 1
  %9 = bitcast %"struct.std::__1::pair"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.41"* %6 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 4
  %15 = icmp eq i64 %13, 0
  br i1 %15, label %43, label %16

16:                                               ; preds = %2
  %17 = icmp ugt i64 %14, 1152921504606846975
  br i1 %17, label %18, label %20

18:                                               ; preds = %16
  %19 = bitcast %"class.std::__1::vector.41"* %5 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %19) #14
  unreachable

20:                                               ; preds = %16
  %21 = tail call i8* @_Znwm(i64 %13) #13
  %22 = bitcast i8* %21 to %"struct.std::__1::pair"*
  %23 = getelementptr inbounds %struct.HistoryInfoMapValue, %struct.HistoryInfoMapValue* %0, i64 0, i32 1, i32 0, i32 1
  %24 = bitcast %"struct.std::__1::pair"** %23 to i8**
  store i8* %21, i8** %24, align 8
  %25 = bitcast %"class.std::__1::vector.41"* %5 to i8**
  store i8* %21, i8** %25, align 8
  %26 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %22, i64 %14
  %27 = getelementptr inbounds %struct.HistoryInfoMapValue, %struct.HistoryInfoMapValue* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  store %"struct.std::__1::pair"* %26, %"struct.std::__1::pair"** %27, align 8
  %28 = getelementptr inbounds %"class.std::__1::vector.41", %"class.std::__1::vector.41"* %6, i64 0, i32 0, i32 0
  %29 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %28, align 8
  %30 = load i64, i64* %9, align 8
  %31 = bitcast %"struct.std::__1::pair"** %23 to i64*
  %32 = ptrtoint i8* %21 to i64
  %33 = ptrtoint %"struct.std::__1::pair"* %29 to i64
  %34 = sub i64 %30, %33
  %35 = icmp sgt i64 %34, 0
  br i1 %35, label %36, label %41

36:                                               ; preds = %20
  %37 = lshr exact i64 %34, 4
  %38 = bitcast %"struct.std::__1::pair"* %29 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %21, i8* align 8 %38, i64 %34, i1 false) #12
  %39 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %22, i64 %37
  %40 = ptrtoint %"struct.std::__1::pair"* %39 to i64
  br label %41

41:                                               ; preds = %36, %20
  %42 = phi i64 [ %40, %36 ], [ %32, %20 ]
  store i64 %42, i64* %31, align 8
  br label %43

43:                                               ; preds = %2, %41
  ret void
}

declare void @_ZN7history6URLRowC1ERKS0_(%"class.history::URLRow"*, %"class.history::URLRow"* dereferenceable(184)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19HistoryInfoMapValueC2EOS_(%struct.HistoryInfoMapValue*, %struct.HistoryInfoMapValue* dereferenceable(208)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %struct.HistoryInfoMapValue, %struct.HistoryInfoMapValue* %0, i64 0, i32 0
  %4 = getelementptr inbounds %struct.HistoryInfoMapValue, %struct.HistoryInfoMapValue* %1, i64 0, i32 0
  tail call void @_ZN7history6URLRowC1EOS0_(%"class.history::URLRow"* %3, %"class.history::URLRow"* dereferenceable(184) %4) #12
  %5 = getelementptr inbounds %struct.HistoryInfoMapValue, %struct.HistoryInfoMapValue* %0, i64 0, i32 1
  %6 = getelementptr inbounds %struct.HistoryInfoMapValue, %struct.HistoryInfoMapValue* %1, i64 0, i32 1
  %7 = bitcast %"class.std::__1::vector.41"* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false) #12
  %8 = bitcast %"class.std::__1::vector.41"* %6 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector.41"* %5 to i64*
  store i64 %9, i64* %10, align 8
  %11 = getelementptr inbounds %struct.HistoryInfoMapValue, %struct.HistoryInfoMapValue* %1, i64 0, i32 1, i32 0, i32 1
  %12 = bitcast %"struct.std::__1::pair"** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %struct.HistoryInfoMapValue, %struct.HistoryInfoMapValue* %0, i64 0, i32 1, i32 0, i32 1
  %15 = bitcast %"struct.std::__1::pair"** %14 to i64*
  store i64 %13, i64* %15, align 8
  %16 = getelementptr inbounds %struct.HistoryInfoMapValue, %struct.HistoryInfoMapValue* %1, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %17 = bitcast %"struct.std::__1::pair"** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %struct.HistoryInfoMapValue, %struct.HistoryInfoMapValue* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %20 = bitcast %"struct.std::__1::pair"** %19 to i64*
  store i64 %18, i64* %20, align 8
  %21 = bitcast %"class.std::__1::vector.41"* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 24, i1 false) #12
  ret void
}

; Function Attrs: nounwind
declare void @_ZN7history6URLRowC1EOS0_(%"class.history::URLRow"*, %"class.history::URLRow"* dereferenceable(184)) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(208) %struct.HistoryInfoMapValue* @_ZN19HistoryInfoMapValueaSERKS_(%struct.HistoryInfoMapValue* returned, %struct.HistoryInfoMapValue* dereferenceable(208)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %struct.HistoryInfoMapValue, %struct.HistoryInfoMapValue* %0, i64 0, i32 0
  %4 = getelementptr inbounds %struct.HistoryInfoMapValue, %struct.HistoryInfoMapValue* %1, i64 0, i32 0
  %5 = tail call dereferenceable(184) %"class.history::URLRow"* @_ZN7history6URLRowaSERKS0_(%"class.history::URLRow"* %3, %"class.history::URLRow"* dereferenceable(184) %4) #12
  %6 = icmp eq %struct.HistoryInfoMapValue* %0, %1
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.HistoryInfoMapValue, %struct.HistoryInfoMapValue* %0, i64 0, i32 1
  %9 = getelementptr inbounds %struct.HistoryInfoMapValue, %struct.HistoryInfoMapValue* %1, i64 0, i32 1, i32 0, i32 0
  %10 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %9, align 8
  %11 = getelementptr inbounds %struct.HistoryInfoMapValue, %struct.HistoryInfoMapValue* %1, i64 0, i32 1, i32 0, i32 1
  %12 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %11, align 8
  tail call void @_ZNSt3__16vectorINS_4pairIN4base4TimeEN2ui14PageTransitionEEENS_9allocatorIS6_EEE6assignIPS6_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISD_E9referenceEEE5valueEvE4typeESD_SD_(%"class.std::__1::vector.41"* %8, %"struct.std::__1::pair"* %10, %"struct.std::__1::pair"* %12) #12
  br label %13

13:                                               ; preds = %2, %7
  ret %struct.HistoryInfoMapValue* %0
}

declare dereferenceable(184) %"class.history::URLRow"* @_ZN7history6URLRowaSERKS0_(%"class.history::URLRow"*, %"class.history::URLRow"* dereferenceable(184)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(208) %struct.HistoryInfoMapValue* @_ZN19HistoryInfoMapValueaSEOS_(%struct.HistoryInfoMapValue* returned, %struct.HistoryInfoMapValue* dereferenceable(208)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %struct.HistoryInfoMapValue, %struct.HistoryInfoMapValue* %0, i64 0, i32 0
  %4 = getelementptr inbounds %struct.HistoryInfoMapValue, %struct.HistoryInfoMapValue* %1, i64 0, i32 0
  %5 = tail call dereferenceable(184) %"class.history::URLRow"* @_ZN7history6URLRowaSEOS0_(%"class.history::URLRow"* %3, %"class.history::URLRow"* dereferenceable(184) %4) #12
  %6 = getelementptr inbounds %struct.HistoryInfoMapValue, %struct.HistoryInfoMapValue* %0, i64 0, i32 1
  %7 = getelementptr inbounds %struct.HistoryInfoMapValue, %struct.HistoryInfoMapValue* %1, i64 0, i32 1
  %8 = getelementptr inbounds %"class.std::__1::vector.41", %"class.std::__1::vector.41"* %6, i64 0, i32 0, i32 0
  %9 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %8, align 8
  %10 = icmp eq %"struct.std::__1::pair"* %9, null
  br i1 %10, label %17, label %11

11:                                               ; preds = %2
  %12 = ptrtoint %"struct.std::__1::pair"* %9 to i64
  %13 = getelementptr inbounds %struct.HistoryInfoMapValue, %struct.HistoryInfoMapValue* %0, i64 0, i32 1, i32 0, i32 1
  %14 = bitcast %"struct.std::__1::pair"** %13 to i64*
  store i64 %12, i64* %14, align 8
  %15 = bitcast %"struct.std::__1::pair"* %9 to i8*
  tail call void @_ZdlPv(i8* %15) #13
  %16 = bitcast %"class.std::__1::vector.41"* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 24, i1 false) #12
  br label %17

17:                                               ; preds = %2, %11
  %18 = bitcast %"class.std::__1::vector.41"* %7 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.std::__1::vector.41"* %6 to i64*
  store i64 %19, i64* %20, align 8
  %21 = getelementptr inbounds %struct.HistoryInfoMapValue, %struct.HistoryInfoMapValue* %1, i64 0, i32 1, i32 0, i32 1
  %22 = bitcast %"struct.std::__1::pair"** %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = getelementptr inbounds %struct.HistoryInfoMapValue, %struct.HistoryInfoMapValue* %0, i64 0, i32 1, i32 0, i32 1
  %25 = bitcast %"struct.std::__1::pair"** %24 to i64*
  store i64 %23, i64* %25, align 8
  %26 = getelementptr inbounds %struct.HistoryInfoMapValue, %struct.HistoryInfoMapValue* %1, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %27 = bitcast %"struct.std::__1::pair"** %26 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = getelementptr inbounds %struct.HistoryInfoMapValue, %struct.HistoryInfoMapValue* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %30 = bitcast %"struct.std::__1::pair"** %29 to i64*
  store i64 %28, i64* %30, align 8
  %31 = bitcast %"class.std::__1::vector.41"* %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 24, i1 false) #12
  ret %struct.HistoryInfoMapValue* %0
}

; Function Attrs: nounwind
declare dereferenceable(184) %"class.history::URLRow"* @_ZN7history6URLRowaSEOS0_(%"class.history::URLRow"*, %"class.history::URLRow"* dereferenceable(184)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19HistoryInfoMapValueD2Ev(%struct.HistoryInfoMapValue*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %struct.HistoryInfoMapValue, %struct.HistoryInfoMapValue* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %2, align 8
  %4 = icmp eq %"struct.std::__1::pair"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = ptrtoint %"struct.std::__1::pair"* %3 to i64
  %7 = getelementptr inbounds %struct.HistoryInfoMapValue, %struct.HistoryInfoMapValue* %0, i64 0, i32 1, i32 0, i32 1
  %8 = bitcast %"struct.std::__1::pair"** %7 to i64*
  store i64 %6, i64* %8, align 8
  %9 = bitcast %"struct.std::__1::pair"* %3 to i8*
  tail call void @_ZdlPv(i8* %9) #13
  br label %10

10:                                               ; preds = %1, %5
  %11 = getelementptr inbounds %struct.HistoryInfoMapValue, %struct.HistoryInfoMapValue* %0, i64 0, i32 0
  tail call void @_ZN7history6URLRowD1Ev(%"class.history::URLRow"* %11) #12
  ret void
}

; Function Attrs: nounwind
declare void @_ZN7history6URLRowD1Ev(%"class.history::URLRow"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK19HistoryInfoMapValue19EstimateMemoryUsageEv(%struct.HistoryInfoMapValue*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %struct.HistoryInfoMapValue, %struct.HistoryInfoMapValue* %0, i64 0, i32 0
  %3 = tail call i64 @_ZNK7history6URLRow19EstimateMemoryUsageEv(%"class.history::URLRow"* %2) #12
  %4 = getelementptr inbounds %struct.HistoryInfoMapValue, %struct.HistoryInfoMapValue* %0, i64 0, i32 1
  %5 = getelementptr inbounds %struct.HistoryInfoMapValue, %struct.HistoryInfoMapValue* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %6 = bitcast %"struct.std::__1::pair"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.std::__1::vector.41"* %4 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = add i64 %7, %3
  %11 = sub i64 %10, %9
  ret i64 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13RowWordStartsC2Ev(%struct.RowWordStarts* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %struct.RowWordStarts* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 48, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13RowWordStartsC2ERKS_(%struct.RowWordStarts*, %struct.RowWordStarts* nocapture readonly dereferenceable(48)) unnamed_addr #0 align 2 {
  %3 = bitcast %struct.RowWordStarts* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false) #12
  %4 = getelementptr inbounds %struct.RowWordStarts, %struct.RowWordStarts* %1, i64 0, i32 0, i32 0, i32 1
  %5 = bitcast i64** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %struct.RowWordStarts* %1 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = ashr exact i64 %9, 3
  %11 = icmp eq i64 %9, 0
  br i1 %11, label %39, label %12

12:                                               ; preds = %2
  %13 = icmp ugt i64 %10, 2305843009213693951
  br i1 %13, label %14, label %16

14:                                               ; preds = %12
  %15 = bitcast %struct.RowWordStarts* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %15) #14
  unreachable

16:                                               ; preds = %12
  %17 = tail call i8* @_Znwm(i64 %9) #13
  %18 = bitcast i8* %17 to i64*
  %19 = getelementptr inbounds %struct.RowWordStarts, %struct.RowWordStarts* %0, i64 0, i32 0, i32 0, i32 1
  %20 = bitcast i64** %19 to i8**
  store i8* %17, i8** %20, align 8
  %21 = bitcast %struct.RowWordStarts* %0 to i8**
  store i8* %17, i8** %21, align 8
  %22 = getelementptr inbounds i64, i64* %18, i64 %10
  %23 = getelementptr inbounds %struct.RowWordStarts, %struct.RowWordStarts* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  store i64* %22, i64** %23, align 8
  %24 = getelementptr inbounds %struct.RowWordStarts, %struct.RowWordStarts* %1, i64 0, i32 0, i32 0, i32 0
  %25 = load i64*, i64** %24, align 8
  %26 = load i64, i64* %5, align 8
  %27 = bitcast i64** %19 to i64*
  %28 = ptrtoint i8* %17 to i64
  %29 = ptrtoint i64* %25 to i64
  %30 = sub i64 %26, %29
  %31 = icmp sgt i64 %30, 0
  br i1 %31, label %32, label %37

32:                                               ; preds = %16
  %33 = lshr exact i64 %30, 3
  %34 = bitcast i64* %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %17, i8* align 8 %34, i64 %30, i1 false) #12
  %35 = getelementptr inbounds i64, i64* %18, i64 %33
  %36 = ptrtoint i64* %35 to i64
  br label %37

37:                                               ; preds = %32, %16
  %38 = phi i64 [ %36, %32 ], [ %28, %16 ]
  store i64 %38, i64* %27, align 8
  br label %39

39:                                               ; preds = %2, %37
  %40 = getelementptr inbounds %struct.RowWordStarts, %struct.RowWordStarts* %0, i64 0, i32 1
  %41 = getelementptr inbounds %struct.RowWordStarts, %struct.RowWordStarts* %1, i64 0, i32 1
  %42 = bitcast %"class.std::__1::vector.14"* %40 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %42, i8 0, i64 24, i1 false) #12
  %43 = getelementptr inbounds %struct.RowWordStarts, %struct.RowWordStarts* %1, i64 0, i32 1, i32 0, i32 1
  %44 = bitcast i64** %43 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = bitcast %"class.std::__1::vector.14"* %41 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = sub i64 %45, %47
  %49 = ashr exact i64 %48, 3
  %50 = icmp eq i64 %48, 0
  br i1 %50, label %78, label %51

51:                                               ; preds = %39
  %52 = icmp ugt i64 %49, 2305843009213693951
  br i1 %52, label %53, label %55

53:                                               ; preds = %51
  %54 = bitcast %"class.std::__1::vector.14"* %40 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %54) #14
  unreachable

55:                                               ; preds = %51
  %56 = tail call i8* @_Znwm(i64 %48) #13
  %57 = bitcast i8* %56 to i64*
  %58 = getelementptr inbounds %struct.RowWordStarts, %struct.RowWordStarts* %0, i64 0, i32 1, i32 0, i32 1
  %59 = bitcast i64** %58 to i8**
  store i8* %56, i8** %59, align 8
  %60 = bitcast %"class.std::__1::vector.14"* %40 to i8**
  store i8* %56, i8** %60, align 8
  %61 = getelementptr inbounds i64, i64* %57, i64 %49
  %62 = getelementptr inbounds %struct.RowWordStarts, %struct.RowWordStarts* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  store i64* %61, i64** %62, align 8
  %63 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %41, i64 0, i32 0, i32 0
  %64 = load i64*, i64** %63, align 8
  %65 = load i64, i64* %44, align 8
  %66 = bitcast i64** %58 to i64*
  %67 = ptrtoint i8* %56 to i64
  %68 = ptrtoint i64* %64 to i64
  %69 = sub i64 %65, %68
  %70 = icmp sgt i64 %69, 0
  br i1 %70, label %71, label %76

71:                                               ; preds = %55
  %72 = lshr exact i64 %69, 3
  %73 = bitcast i64* %64 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %56, i8* align 8 %73, i64 %69, i1 false) #12
  %74 = getelementptr inbounds i64, i64* %57, i64 %72
  %75 = ptrtoint i64* %74 to i64
  br label %76

76:                                               ; preds = %71, %55
  %77 = phi i64 [ %75, %71 ], [ %67, %55 ]
  store i64 %77, i64* %66, align 8
  br label %78

78:                                               ; preds = %39, %76
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13RowWordStartsC2EOS_(%struct.RowWordStarts* nocapture, %struct.RowWordStarts* nocapture dereferenceable(48)) unnamed_addr #0 align 2 {
  %3 = bitcast %struct.RowWordStarts* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false) #12
  %4 = bitcast %struct.RowWordStarts* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %struct.RowWordStarts* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %struct.RowWordStarts, %struct.RowWordStarts* %1, i64 0, i32 0, i32 0, i32 1
  %8 = bitcast i64** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %struct.RowWordStarts, %struct.RowWordStarts* %0, i64 0, i32 0, i32 0, i32 1
  %11 = bitcast i64** %10 to i64*
  store i64 %9, i64* %11, align 8
  %12 = getelementptr inbounds %struct.RowWordStarts, %struct.RowWordStarts* %1, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %13 = bitcast i64** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %struct.RowWordStarts, %struct.RowWordStarts* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast i64** %15 to i64*
  store i64 %14, i64* %16, align 8
  %17 = bitcast %struct.RowWordStarts* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 24, i1 false) #12
  %18 = getelementptr inbounds %struct.RowWordStarts, %struct.RowWordStarts* %0, i64 0, i32 1
  %19 = getelementptr inbounds %struct.RowWordStarts, %struct.RowWordStarts* %1, i64 0, i32 1
  %20 = bitcast %"class.std::__1::vector.14"* %18 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 24, i1 false) #12
  %21 = bitcast %"class.std::__1::vector.14"* %19 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"class.std::__1::vector.14"* %18 to i64*
  store i64 %22, i64* %23, align 8
  %24 = getelementptr inbounds %struct.RowWordStarts, %struct.RowWordStarts* %1, i64 0, i32 1, i32 0, i32 1
  %25 = bitcast i64** %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds %struct.RowWordStarts, %struct.RowWordStarts* %0, i64 0, i32 1, i32 0, i32 1
  %28 = bitcast i64** %27 to i64*
  store i64 %26, i64* %28, align 8
  %29 = getelementptr inbounds %struct.RowWordStarts, %struct.RowWordStarts* %1, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %30 = bitcast i64** %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = getelementptr inbounds %struct.RowWordStarts, %struct.RowWordStarts* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %33 = bitcast i64** %32 to i64*
  store i64 %31, i64* %33, align 8
  %34 = bitcast %"class.std::__1::vector.14"* %19 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 24, i1 false) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(48) %struct.RowWordStarts* @_ZN13RowWordStartsaSERKS_(%struct.RowWordStarts* returned, %struct.RowWordStarts* readonly dereferenceable(48)) local_unnamed_addr #0 align 2 {
  %3 = icmp eq %struct.RowWordStarts* %0, %1
  br i1 %3, label %15, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.RowWordStarts, %struct.RowWordStarts* %0, i64 0, i32 0
  %6 = getelementptr inbounds %struct.RowWordStarts, %struct.RowWordStarts* %1, i64 0, i32 0, i32 0, i32 0
  %7 = load i64*, i64** %6, align 8
  %8 = getelementptr inbounds %struct.RowWordStarts, %struct.RowWordStarts* %1, i64 0, i32 0, i32 0, i32 1
  %9 = load i64*, i64** %8, align 8
  tail call void @_ZNSt3__16vectorImNS_9allocatorImEEE6assignIPmEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleImNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector.14"* %5, i64* %7, i64* %9) #12
  %10 = getelementptr inbounds %struct.RowWordStarts, %struct.RowWordStarts* %0, i64 0, i32 1
  %11 = getelementptr inbounds %struct.RowWordStarts, %struct.RowWordStarts* %1, i64 0, i32 1, i32 0, i32 0
  %12 = load i64*, i64** %11, align 8
  %13 = getelementptr inbounds %struct.RowWordStarts, %struct.RowWordStarts* %1, i64 0, i32 1, i32 0, i32 1
  %14 = load i64*, i64** %13, align 8
  tail call void @_ZNSt3__16vectorImNS_9allocatorImEEE6assignIPmEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleImNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector.14"* %10, i64* %12, i64* %14) #12
  br label %15

15:                                               ; preds = %2, %4
  ret %struct.RowWordStarts* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(48) %struct.RowWordStarts* @_ZN13RowWordStartsaSEOS_(%struct.RowWordStarts* returned, %struct.RowWordStarts* nocapture dereferenceable(48)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %struct.RowWordStarts, %struct.RowWordStarts* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load i64*, i64** %3, align 8
  %5 = icmp eq i64* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %2
  %7 = ptrtoint i64* %4 to i64
  %8 = getelementptr inbounds %struct.RowWordStarts, %struct.RowWordStarts* %0, i64 0, i32 0, i32 0, i32 1
  %9 = bitcast i64** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast i64* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #13
  %11 = bitcast %struct.RowWordStarts* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 24, i1 false) #12
  br label %12

12:                                               ; preds = %2, %6
  %13 = bitcast %struct.RowWordStarts* %1 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %struct.RowWordStarts* %0 to i64*
  store i64 %14, i64* %15, align 8
  %16 = getelementptr inbounds %struct.RowWordStarts, %struct.RowWordStarts* %1, i64 0, i32 0, i32 0, i32 1
  %17 = bitcast i64** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %struct.RowWordStarts, %struct.RowWordStarts* %0, i64 0, i32 0, i32 0, i32 1
  %20 = bitcast i64** %19 to i64*
  store i64 %18, i64* %20, align 8
  %21 = getelementptr inbounds %struct.RowWordStarts, %struct.RowWordStarts* %1, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %22 = bitcast i64** %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = getelementptr inbounds %struct.RowWordStarts, %struct.RowWordStarts* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %25 = bitcast i64** %24 to i64*
  store i64 %23, i64* %25, align 8
  %26 = bitcast %struct.RowWordStarts* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 24, i1 false) #12
  %27 = getelementptr inbounds %struct.RowWordStarts, %struct.RowWordStarts* %0, i64 0, i32 1
  %28 = getelementptr inbounds %struct.RowWordStarts, %struct.RowWordStarts* %1, i64 0, i32 1
  %29 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %27, i64 0, i32 0, i32 0
  %30 = load i64*, i64** %29, align 8
  %31 = icmp eq i64* %30, null
  br i1 %31, label %38, label %32

32:                                               ; preds = %12
  %33 = ptrtoint i64* %30 to i64
  %34 = getelementptr inbounds %struct.RowWordStarts, %struct.RowWordStarts* %0, i64 0, i32 1, i32 0, i32 1
  %35 = bitcast i64** %34 to i64*
  store i64 %33, i64* %35, align 8
  %36 = bitcast i64* %30 to i8*
  tail call void @_ZdlPv(i8* %36) #13
  %37 = bitcast %"class.std::__1::vector.14"* %27 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 24, i1 false) #12
  br label %38

38:                                               ; preds = %12, %32
  %39 = bitcast %"class.std::__1::vector.14"* %28 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = bitcast %"class.std::__1::vector.14"* %27 to i64*
  store i64 %40, i64* %41, align 8
  %42 = getelementptr inbounds %struct.RowWordStarts, %struct.RowWordStarts* %1, i64 0, i32 1, i32 0, i32 1
  %43 = bitcast i64** %42 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = getelementptr inbounds %struct.RowWordStarts, %struct.RowWordStarts* %0, i64 0, i32 1, i32 0, i32 1
  %46 = bitcast i64** %45 to i64*
  store i64 %44, i64* %46, align 8
  %47 = getelementptr inbounds %struct.RowWordStarts, %struct.RowWordStarts* %1, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %48 = bitcast i64** %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = getelementptr inbounds %struct.RowWordStarts, %struct.RowWordStarts* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %51 = bitcast i64** %50 to i64*
  store i64 %49, i64* %51, align 8
  %52 = bitcast %"class.std::__1::vector.14"* %28 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %52, i8 0, i64 24, i1 false) #12
  ret %struct.RowWordStarts* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13RowWordStartsD2Ev(%struct.RowWordStarts* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %struct.RowWordStarts, %struct.RowWordStarts* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load i64*, i64** %2, align 8
  %4 = icmp eq i64* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = ptrtoint i64* %3 to i64
  %7 = getelementptr inbounds %struct.RowWordStarts, %struct.RowWordStarts* %0, i64 0, i32 1, i32 0, i32 1
  %8 = bitcast i64** %7 to i64*
  store i64 %6, i64* %8, align 8
  %9 = bitcast i64* %3 to i8*
  tail call void @_ZdlPv(i8* %9) #13
  br label %10

10:                                               ; preds = %1, %5
  %11 = getelementptr inbounds %struct.RowWordStarts, %struct.RowWordStarts* %0, i64 0, i32 0, i32 0, i32 0
  %12 = load i64*, i64** %11, align 8
  %13 = icmp eq i64* %12, null
  br i1 %13, label %19, label %14

14:                                               ; preds = %10
  %15 = ptrtoint i64* %12 to i64
  %16 = getelementptr inbounds %struct.RowWordStarts, %struct.RowWordStarts* %0, i64 0, i32 0, i32 0, i32 1
  %17 = bitcast i64** %16 to i64*
  store i64 %15, i64* %17, align 8
  %18 = bitcast i64* %12 to i8*
  tail call void @_ZdlPv(i8* %18) #13
  br label %19

19:                                               ; preds = %10, %14
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK13RowWordStarts19EstimateMemoryUsageEv(%struct.RowWordStarts* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %struct.RowWordStarts, %struct.RowWordStarts* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %3 = bitcast i64** %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = bitcast %struct.RowWordStarts* %0 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %struct.RowWordStarts, %struct.RowWordStarts* %0, i64 0, i32 1
  %8 = getelementptr inbounds %struct.RowWordStarts, %struct.RowWordStarts* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast i64** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.14"* %7 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %4, %6
  %14 = add i64 %13, %10
  %15 = sub i64 %14, %12
  ret i64 %15
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN13RowWordStarts5ClearEv(%struct.RowWordStarts* nocapture) local_unnamed_addr #5 align 2 {
  %2 = bitcast %struct.RowWordStarts* %0 to i64*
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds %struct.RowWordStarts, %struct.RowWordStarts* %0, i64 0, i32 0, i32 0, i32 1
  %5 = bitcast i64** %4 to i64*
  store i64 %3, i64* %5, align 8
  %6 = getelementptr inbounds %struct.RowWordStarts, %struct.RowWordStarts* %0, i64 0, i32 1
  %7 = bitcast %"class.std::__1::vector.14"* %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.RowWordStarts, %struct.RowWordStarts* %0, i64 0, i32 1, i32 0, i32 1
  %10 = bitcast i64** %9 to i64*
  store i64 %8, i64* %10, align 8
  ret void
}

declare i32 @_ZN4base14TrimWhitespaceENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEENS_13TrimPositionsEPNS1_12basic_stringIDsS3_NS1_9allocatorIDsEEEE(i16*, i64, i32, %"class.std::__1::basic_string"*) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS4_IS6_EEE21__push_back_slow_pathIRKS6_EEvOT_(%"class.std::__1::vector"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #6 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 24
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 768614336404564650
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #14
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::basic_string"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 24
  %20 = icmp ult i64 %19, 384307168202282325
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 768614336404564650, %14 ]
  %28 = mul i64 %27, 24
  %29 = tail call i8* @_Znwm(i64 %28) #13
  %30 = bitcast i8* %29 to %"class.std::__1::basic_string"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"class.std::__1::basic_string"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %9
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %32
  %36 = ptrtoint %"class.std::__1::basic_string"* %35 to i64
  %37 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %37, i64 0, i32 1, i32 1
  %39 = load i8, i8* %38, align 1
  %40 = icmp slt i8 %39, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %31
  %42 = bitcast %"class.std::__1::basic_string"* %34 to i8*
  %43 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 24, i1 false) #12
  br label %219

44:                                               ; preds = %31
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load i16*, i16** %45, align 8
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %48 = load i64, i64* %47, align 8
  %49 = icmp ult i64 %48, 11
  br i1 %49, label %50, label %55

50:                                               ; preds = %44
  %51 = bitcast %"class.std::__1::basic_string"* %34 to i16*
  %52 = trunc i64 %48 to i8
  %53 = bitcast %"class.std::__1::basic_string"* %34 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %54 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %53, i64 0, i32 1, i32 1
  store i8 %52, i8* %54, align 1
  br label %72

55:                                               ; preds = %44
  %56 = icmp ugt i64 %48, 9223372036854775791
  br i1 %56, label %57, label %59

57:                                               ; preds = %55
  %58 = bitcast %"class.std::__1::basic_string"* %34 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %58) #14
  unreachable

59:                                               ; preds = %55
  %60 = add nuw nsw i64 %48, 8
  %61 = and i64 %60, -8
  %62 = icmp slt i64 %61, 0
  br i1 %62, label %63, label %64

63:                                               ; preds = %59
  tail call void @abort() #14
  unreachable

64:                                               ; preds = %59
  %65 = shl i64 %61, 1
  %66 = tail call i8* @_Znwm(i64 %65) #13
  %67 = bitcast i8* %66 to i16*
  %68 = bitcast %"class.std::__1::basic_string"* %34 to i8**
  store i8* %66, i8** %68, align 8
  %69 = or i64 %61, -9223372036854775808
  %70 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %9, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %69, i64* %70, align 8
  %71 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %9, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %48, i64* %71, align 8
  br label %72

72:                                               ; preds = %64, %50
  %73 = phi i16* [ %51, %50 ], [ %67, %64 ]
  %74 = add nuw nsw i64 %48, 1
  %75 = add i64 %48, 1
  %76 = icmp ult i64 %75, 16
  br i1 %76, label %166, label %77

77:                                               ; preds = %72
  %78 = add i64 %48, 1
  %79 = getelementptr i16, i16* %73, i64 %78
  %80 = getelementptr i16, i16* %46, i64 %78
  %81 = icmp ult i16* %73, %80
  %82 = icmp ult i16* %46, %79
  %83 = and i1 %81, %82
  br i1 %83, label %166, label %84

84:                                               ; preds = %77
  %85 = and i64 %75, -16
  %86 = sub i64 %74, %85
  %87 = getelementptr i16, i16* %46, i64 %85
  %88 = getelementptr i16, i16* %73, i64 %85
  %89 = add i64 %85, -16
  %90 = lshr exact i64 %89, 4
  %91 = add nuw nsw i64 %90, 1
  %92 = and i64 %91, 3
  %93 = icmp ult i64 %89, 48
  br i1 %93, label %145, label %94

94:                                               ; preds = %84
  %95 = sub nsw i64 %91, %92
  br label %96

96:                                               ; preds = %96, %94
  %97 = phi i64 [ 0, %94 ], [ %142, %96 ]
  %98 = phi i64 [ %95, %94 ], [ %143, %96 ]
  %99 = getelementptr i16, i16* %46, i64 %97
  %100 = getelementptr i16, i16* %73, i64 %97
  %101 = bitcast i16* %99 to <8 x i16>*
  %102 = load <8 x i16>, <8 x i16>* %101, align 2, !alias.scope !40
  %103 = getelementptr i16, i16* %99, i64 8
  %104 = bitcast i16* %103 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !40
  %106 = bitcast i16* %100 to <8 x i16>*
  store <8 x i16> %102, <8 x i16>* %106, align 2, !alias.scope !43, !noalias !40
  %107 = getelementptr i16, i16* %100, i64 8
  %108 = bitcast i16* %107 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %108, align 2, !alias.scope !43, !noalias !40
  %109 = or i64 %97, 16
  %110 = getelementptr i16, i16* %46, i64 %109
  %111 = getelementptr i16, i16* %73, i64 %109
  %112 = bitcast i16* %110 to <8 x i16>*
  %113 = load <8 x i16>, <8 x i16>* %112, align 2, !alias.scope !40
  %114 = getelementptr i16, i16* %110, i64 8
  %115 = bitcast i16* %114 to <8 x i16>*
  %116 = load <8 x i16>, <8 x i16>* %115, align 2, !alias.scope !40
  %117 = bitcast i16* %111 to <8 x i16>*
  store <8 x i16> %113, <8 x i16>* %117, align 2, !alias.scope !43, !noalias !40
  %118 = getelementptr i16, i16* %111, i64 8
  %119 = bitcast i16* %118 to <8 x i16>*
  store <8 x i16> %116, <8 x i16>* %119, align 2, !alias.scope !43, !noalias !40
  %120 = or i64 %97, 32
  %121 = getelementptr i16, i16* %46, i64 %120
  %122 = getelementptr i16, i16* %73, i64 %120
  %123 = bitcast i16* %121 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !40
  %125 = getelementptr i16, i16* %121, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  %127 = load <8 x i16>, <8 x i16>* %126, align 2, !alias.scope !40
  %128 = bitcast i16* %122 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %128, align 2, !alias.scope !43, !noalias !40
  %129 = getelementptr i16, i16* %122, i64 8
  %130 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %130, align 2, !alias.scope !43, !noalias !40
  %131 = or i64 %97, 48
  %132 = getelementptr i16, i16* %46, i64 %131
  %133 = getelementptr i16, i16* %73, i64 %131
  %134 = bitcast i16* %132 to <8 x i16>*
  %135 = load <8 x i16>, <8 x i16>* %134, align 2, !alias.scope !40
  %136 = getelementptr i16, i16* %132, i64 8
  %137 = bitcast i16* %136 to <8 x i16>*
  %138 = load <8 x i16>, <8 x i16>* %137, align 2, !alias.scope !40
  %139 = bitcast i16* %133 to <8 x i16>*
  store <8 x i16> %135, <8 x i16>* %139, align 2, !alias.scope !43, !noalias !40
  %140 = getelementptr i16, i16* %133, i64 8
  %141 = bitcast i16* %140 to <8 x i16>*
  store <8 x i16> %138, <8 x i16>* %141, align 2, !alias.scope !43, !noalias !40
  %142 = add i64 %97, 64
  %143 = add i64 %98, -4
  %144 = icmp eq i64 %143, 0
  br i1 %144, label %145, label %96, !llvm.loop !45

145:                                              ; preds = %96, %84
  %146 = phi i64 [ 0, %84 ], [ %142, %96 ]
  %147 = icmp eq i64 %92, 0
  br i1 %147, label %164, label %148

148:                                              ; preds = %145, %148
  %149 = phi i64 [ %161, %148 ], [ %146, %145 ]
  %150 = phi i64 [ %162, %148 ], [ %92, %145 ]
  %151 = getelementptr i16, i16* %46, i64 %149
  %152 = getelementptr i16, i16* %73, i64 %149
  %153 = bitcast i16* %151 to <8 x i16>*
  %154 = load <8 x i16>, <8 x i16>* %153, align 2, !alias.scope !40
  %155 = getelementptr i16, i16* %151, i64 8
  %156 = bitcast i16* %155 to <8 x i16>*
  %157 = load <8 x i16>, <8 x i16>* %156, align 2, !alias.scope !40
  %158 = bitcast i16* %152 to <8 x i16>*
  store <8 x i16> %154, <8 x i16>* %158, align 2, !alias.scope !43, !noalias !40
  %159 = getelementptr i16, i16* %152, i64 8
  %160 = bitcast i16* %159 to <8 x i16>*
  store <8 x i16> %157, <8 x i16>* %160, align 2, !alias.scope !43, !noalias !40
  %161 = add i64 %149, 16
  %162 = add i64 %150, -1
  %163 = icmp eq i64 %162, 0
  br i1 %163, label %164, label %148, !llvm.loop !46

164:                                              ; preds = %148, %145
  %165 = icmp eq i64 %75, %85
  br i1 %165, label %219, label %166

166:                                              ; preds = %164, %77, %72
  %167 = phi i64 [ %74, %77 ], [ %74, %72 ], [ %86, %164 ]
  %168 = phi i16* [ %46, %77 ], [ %46, %72 ], [ %87, %164 ]
  %169 = phi i16* [ %73, %77 ], [ %73, %72 ], [ %88, %164 ]
  %170 = add i64 %167, -1
  %171 = and i64 %167, 7
  %172 = icmp eq i64 %171, 0
  br i1 %172, label %184, label %173

173:                                              ; preds = %166, %173
  %174 = phi i64 [ %179, %173 ], [ %167, %166 ]
  %175 = phi i16* [ %181, %173 ], [ %168, %166 ]
  %176 = phi i16* [ %180, %173 ], [ %169, %166 ]
  %177 = phi i64 [ %182, %173 ], [ %171, %166 ]
  %178 = load i16, i16* %175, align 2
  store i16 %178, i16* %176, align 2
  %179 = add i64 %174, -1
  %180 = getelementptr inbounds i16, i16* %176, i64 1
  %181 = getelementptr inbounds i16, i16* %175, i64 1
  %182 = add i64 %177, -1
  %183 = icmp eq i64 %182, 0
  br i1 %183, label %184, label %173, !llvm.loop !47

184:                                              ; preds = %173, %166
  %185 = phi i64 [ %167, %166 ], [ %179, %173 ]
  %186 = phi i16* [ %168, %166 ], [ %181, %173 ]
  %187 = phi i16* [ %169, %166 ], [ %180, %173 ]
  %188 = icmp ult i64 %170, 7
  br i1 %188, label %219, label %189

189:                                              ; preds = %184, %189
  %190 = phi i64 [ %215, %189 ], [ %185, %184 ]
  %191 = phi i16* [ %217, %189 ], [ %186, %184 ]
  %192 = phi i16* [ %216, %189 ], [ %187, %184 ]
  %193 = load i16, i16* %191, align 2
  store i16 %193, i16* %192, align 2
  %194 = getelementptr inbounds i16, i16* %192, i64 1
  %195 = getelementptr inbounds i16, i16* %191, i64 1
  %196 = load i16, i16* %195, align 2
  store i16 %196, i16* %194, align 2
  %197 = getelementptr inbounds i16, i16* %192, i64 2
  %198 = getelementptr inbounds i16, i16* %191, i64 2
  %199 = load i16, i16* %198, align 2
  store i16 %199, i16* %197, align 2
  %200 = getelementptr inbounds i16, i16* %192, i64 3
  %201 = getelementptr inbounds i16, i16* %191, i64 3
  %202 = load i16, i16* %201, align 2
  store i16 %202, i16* %200, align 2
  %203 = getelementptr inbounds i16, i16* %192, i64 4
  %204 = getelementptr inbounds i16, i16* %191, i64 4
  %205 = load i16, i16* %204, align 2
  store i16 %205, i16* %203, align 2
  %206 = getelementptr inbounds i16, i16* %192, i64 5
  %207 = getelementptr inbounds i16, i16* %191, i64 5
  %208 = load i16, i16* %207, align 2
  store i16 %208, i16* %206, align 2
  %209 = getelementptr inbounds i16, i16* %192, i64 6
  %210 = getelementptr inbounds i16, i16* %191, i64 6
  %211 = load i16, i16* %210, align 2
  store i16 %211, i16* %209, align 2
  %212 = getelementptr inbounds i16, i16* %192, i64 7
  %213 = getelementptr inbounds i16, i16* %191, i64 7
  %214 = load i16, i16* %213, align 2
  store i16 %214, i16* %212, align 2
  %215 = add i64 %190, -8
  %216 = getelementptr inbounds i16, i16* %192, i64 8
  %217 = getelementptr inbounds i16, i16* %191, i64 8
  %218 = icmp eq i64 %215, 0
  br i1 %218, label %219, label %189, !llvm.loop !48

219:                                              ; preds = %184, %189, %164, %41
  %220 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 1
  %221 = ptrtoint %"class.std::__1::basic_string"* %220 to i64
  %222 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %223 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %222, align 8
  %224 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  %225 = icmp eq %"class.std::__1::basic_string"* %224, %223
  br i1 %225, label %226, label %228

226:                                              ; preds = %219
  %227 = ptrtoint %"class.std::__1::basic_string"* %223 to i64
  br label %239

228:                                              ; preds = %219, %228
  %229 = phi %"class.std::__1::basic_string"* [ %231, %228 ], [ %34, %219 ]
  %230 = phi %"class.std::__1::basic_string"* [ %232, %228 ], [ %224, %219 ]
  %231 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %229, i64 -1
  %232 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %230, i64 -1
  %233 = bitcast %"class.std::__1::basic_string"* %231 to i8*
  %234 = bitcast %"class.std::__1::basic_string"* %232 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %233, i8* align 8 %234, i64 24, i1 false) #12
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %234, i8 0, i64 24, i1 false) #12
  %235 = icmp eq %"class.std::__1::basic_string"* %232, %223
  br i1 %235, label %236, label %228

236:                                              ; preds = %228
  %237 = load i64, i64* %6, align 8
  %238 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  br label %239

239:                                              ; preds = %226, %236
  %240 = phi %"class.std::__1::basic_string"* [ %223, %226 ], [ %238, %236 ]
  %241 = phi %"class.std::__1::basic_string"* [ %34, %226 ], [ %231, %236 ]
  %242 = phi i64 [ %227, %226 ], [ %237, %236 ]
  %243 = ptrtoint %"class.std::__1::basic_string"* %241 to i64
  store i64 %243, i64* %6, align 8
  store i64 %221, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %244 = inttoptr i64 %242 to %"class.std::__1::basic_string"*
  %245 = icmp eq %"class.std::__1::basic_string"* %240, %244
  br i1 %245, label %258, label %246

246:                                              ; preds = %239, %256
  %247 = phi %"class.std::__1::basic_string"* [ %248, %256 ], [ %240, %239 ]
  %248 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %247, i64 -1
  %249 = bitcast %"class.std::__1::basic_string"* %248 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %250 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %249, i64 0, i32 1, i32 1
  %251 = load i8, i8* %250, align 1
  %252 = icmp slt i8 %251, 0
  br i1 %252, label %253, label %256

253:                                              ; preds = %246
  %254 = bitcast %"class.std::__1::basic_string"* %248 to i8**
  %255 = load i8*, i8** %254, align 8
  tail call void @_ZdlPv(i8* %255) #13
  br label %256

256:                                              ; preds = %253, %246
  %257 = icmp eq %"class.std::__1::basic_string"* %248, %244
  br i1 %257, label %258, label %246

258:                                              ; preds = %256, %239
  %259 = icmp eq i64 %242, 0
  br i1 %259, label %262, label %260

260:                                              ; preds = %258
  %261 = inttoptr i64 %242 to i8*
  tail call void @_ZdlPv(i8* %261) #13
  br label %262

262:                                              ; preds = %258, %260
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #10

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEC2ERKS5_mmRKS4_(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* dereferenceable(24), i64, i64, %"class.std::__1::allocator"* dereferenceable(1)) unnamed_addr #0 comdat align 2 {
  %6 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %6, i64 0, i32 1, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = zext i8 %8 to i64
  %13 = select i1 %9, i64 %11, i64 %12
  %14 = icmp ult i64 %13, %2
  br i1 %14, label %15, label %17

15:                                               ; preds = %5
  %16 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__basic_string_common"* %16) #14
  unreachable

17:                                               ; preds = %5
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i16*, i16** %18, align 8
  %20 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %21 = select i1 %9, i16* %19, i16* %20
  %22 = getelementptr inbounds i16, i16* %21, i64 %2
  %23 = sub i64 %13, %2
  %24 = icmp ult i64 %23, %3
  %25 = select i1 %24, i64 %23, i64 %3
  %26 = icmp ugt i64 %25, 9223372036854775791
  br i1 %26, label %27, label %29

27:                                               ; preds = %17
  %28 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %28) #14
  unreachable

29:                                               ; preds = %17
  %30 = icmp ult i64 %25, 11
  br i1 %30, label %44, label %31

31:                                               ; preds = %29
  %32 = add nuw nsw i64 %25, 8
  %33 = and i64 %32, -8
  %34 = icmp slt i64 %33, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %31
  tail call void @abort() #14
  unreachable

36:                                               ; preds = %31
  %37 = shl i64 %33, 1
  %38 = tail call i8* @_Znwm(i64 %37) #13
  %39 = bitcast i8* %38 to i16*
  %40 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %38, i8** %40, align 8
  %41 = or i64 %33, -9223372036854775808
  %42 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %41, i64* %42, align 8
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %25, i64* %43, align 8
  br label %50

44:                                               ; preds = %29
  %45 = trunc i64 %25 to i8
  %46 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %47 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %46, i64 0, i32 1, i32 1
  store i8 %45, i8* %47, align 1
  %48 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %49 = icmp eq i64 %25, 0
  br i1 %49, label %195, label %50

50:                                               ; preds = %44, %36
  %51 = phi i16* [ %39, %36 ], [ %48, %44 ]
  %52 = icmp ult i64 %25, 16
  br i1 %52, label %142, label %53

53:                                               ; preds = %50
  %54 = getelementptr i16, i16* %51, i64 %25
  %55 = add i64 %25, %2
  %56 = getelementptr i16, i16* %21, i64 %55
  %57 = icmp ult i16* %51, %56
  %58 = icmp ult i16* %22, %54
  %59 = and i1 %57, %58
  br i1 %59, label %142, label %60

60:                                               ; preds = %53
  %61 = and i64 %25, -16
  %62 = sub i64 %25, %61
  %63 = getelementptr i16, i16* %22, i64 %61
  %64 = getelementptr i16, i16* %51, i64 %61
  %65 = add i64 %61, -16
  %66 = lshr exact i64 %65, 4
  %67 = add nuw nsw i64 %66, 1
  %68 = and i64 %67, 3
  %69 = icmp ult i64 %65, 48
  br i1 %69, label %121, label %70

70:                                               ; preds = %60
  %71 = sub nsw i64 %67, %68
  br label %72

72:                                               ; preds = %72, %70
  %73 = phi i64 [ 0, %70 ], [ %118, %72 ]
  %74 = phi i64 [ %71, %70 ], [ %119, %72 ]
  %75 = getelementptr i16, i16* %22, i64 %73
  %76 = getelementptr i16, i16* %51, i64 %73
  %77 = bitcast i16* %75 to <8 x i16>*
  %78 = load <8 x i16>, <8 x i16>* %77, align 2, !alias.scope !49
  %79 = getelementptr i16, i16* %75, i64 8
  %80 = bitcast i16* %79 to <8 x i16>*
  %81 = load <8 x i16>, <8 x i16>* %80, align 2, !alias.scope !49
  %82 = bitcast i16* %76 to <8 x i16>*
  store <8 x i16> %78, <8 x i16>* %82, align 2, !alias.scope !52, !noalias !49
  %83 = getelementptr i16, i16* %76, i64 8
  %84 = bitcast i16* %83 to <8 x i16>*
  store <8 x i16> %81, <8 x i16>* %84, align 2, !alias.scope !52, !noalias !49
  %85 = or i64 %73, 16
  %86 = getelementptr i16, i16* %22, i64 %85
  %87 = getelementptr i16, i16* %51, i64 %85
  %88 = bitcast i16* %86 to <8 x i16>*
  %89 = load <8 x i16>, <8 x i16>* %88, align 2, !alias.scope !49
  %90 = getelementptr i16, i16* %86, i64 8
  %91 = bitcast i16* %90 to <8 x i16>*
  %92 = load <8 x i16>, <8 x i16>* %91, align 2, !alias.scope !49
  %93 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %89, <8 x i16>* %93, align 2, !alias.scope !52, !noalias !49
  %94 = getelementptr i16, i16* %87, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  store <8 x i16> %92, <8 x i16>* %95, align 2, !alias.scope !52, !noalias !49
  %96 = or i64 %73, 32
  %97 = getelementptr i16, i16* %22, i64 %96
  %98 = getelementptr i16, i16* %51, i64 %96
  %99 = bitcast i16* %97 to <8 x i16>*
  %100 = load <8 x i16>, <8 x i16>* %99, align 2, !alias.scope !49
  %101 = getelementptr i16, i16* %97, i64 8
  %102 = bitcast i16* %101 to <8 x i16>*
  %103 = load <8 x i16>, <8 x i16>* %102, align 2, !alias.scope !49
  %104 = bitcast i16* %98 to <8 x i16>*
  store <8 x i16> %100, <8 x i16>* %104, align 2, !alias.scope !52, !noalias !49
  %105 = getelementptr i16, i16* %98, i64 8
  %106 = bitcast i16* %105 to <8 x i16>*
  store <8 x i16> %103, <8 x i16>* %106, align 2, !alias.scope !52, !noalias !49
  %107 = or i64 %73, 48
  %108 = getelementptr i16, i16* %22, i64 %107
  %109 = getelementptr i16, i16* %51, i64 %107
  %110 = bitcast i16* %108 to <8 x i16>*
  %111 = load <8 x i16>, <8 x i16>* %110, align 2, !alias.scope !49
  %112 = getelementptr i16, i16* %108, i64 8
  %113 = bitcast i16* %112 to <8 x i16>*
  %114 = load <8 x i16>, <8 x i16>* %113, align 2, !alias.scope !49
  %115 = bitcast i16* %109 to <8 x i16>*
  store <8 x i16> %111, <8 x i16>* %115, align 2, !alias.scope !52, !noalias !49
  %116 = getelementptr i16, i16* %109, i64 8
  %117 = bitcast i16* %116 to <8 x i16>*
  store <8 x i16> %114, <8 x i16>* %117, align 2, !alias.scope !52, !noalias !49
  %118 = add i64 %73, 64
  %119 = add i64 %74, -4
  %120 = icmp eq i64 %119, 0
  br i1 %120, label %121, label %72, !llvm.loop !54

121:                                              ; preds = %72, %60
  %122 = phi i64 [ 0, %60 ], [ %118, %72 ]
  %123 = icmp eq i64 %68, 0
  br i1 %123, label %140, label %124

124:                                              ; preds = %121, %124
  %125 = phi i64 [ %137, %124 ], [ %122, %121 ]
  %126 = phi i64 [ %138, %124 ], [ %68, %121 ]
  %127 = getelementptr i16, i16* %22, i64 %125
  %128 = getelementptr i16, i16* %51, i64 %125
  %129 = bitcast i16* %127 to <8 x i16>*
  %130 = load <8 x i16>, <8 x i16>* %129, align 2, !alias.scope !49
  %131 = getelementptr i16, i16* %127, i64 8
  %132 = bitcast i16* %131 to <8 x i16>*
  %133 = load <8 x i16>, <8 x i16>* %132, align 2, !alias.scope !49
  %134 = bitcast i16* %128 to <8 x i16>*
  store <8 x i16> %130, <8 x i16>* %134, align 2, !alias.scope !52, !noalias !49
  %135 = getelementptr i16, i16* %128, i64 8
  %136 = bitcast i16* %135 to <8 x i16>*
  store <8 x i16> %133, <8 x i16>* %136, align 2, !alias.scope !52, !noalias !49
  %137 = add i64 %125, 16
  %138 = add i64 %126, -1
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %140, label %124, !llvm.loop !55

140:                                              ; preds = %124, %121
  %141 = icmp eq i64 %25, %61
  br i1 %141, label %195, label %142

142:                                              ; preds = %140, %53, %50
  %143 = phi i64 [ %25, %53 ], [ %25, %50 ], [ %62, %140 ]
  %144 = phi i16* [ %22, %53 ], [ %22, %50 ], [ %63, %140 ]
  %145 = phi i16* [ %51, %53 ], [ %51, %50 ], [ %64, %140 ]
  %146 = add i64 %143, -1
  %147 = and i64 %143, 7
  %148 = icmp eq i64 %147, 0
  br i1 %148, label %160, label %149

149:                                              ; preds = %142, %149
  %150 = phi i64 [ %155, %149 ], [ %143, %142 ]
  %151 = phi i16* [ %157, %149 ], [ %144, %142 ]
  %152 = phi i16* [ %156, %149 ], [ %145, %142 ]
  %153 = phi i64 [ %158, %149 ], [ %147, %142 ]
  %154 = load i16, i16* %151, align 2
  store i16 %154, i16* %152, align 2
  %155 = add i64 %150, -1
  %156 = getelementptr inbounds i16, i16* %152, i64 1
  %157 = getelementptr inbounds i16, i16* %151, i64 1
  %158 = add i64 %153, -1
  %159 = icmp eq i64 %158, 0
  br i1 %159, label %160, label %149, !llvm.loop !56

160:                                              ; preds = %149, %142
  %161 = phi i64 [ %143, %142 ], [ %155, %149 ]
  %162 = phi i16* [ %144, %142 ], [ %157, %149 ]
  %163 = phi i16* [ %145, %142 ], [ %156, %149 ]
  %164 = icmp ult i64 %146, 7
  br i1 %164, label %195, label %165

165:                                              ; preds = %160, %165
  %166 = phi i64 [ %191, %165 ], [ %161, %160 ]
  %167 = phi i16* [ %193, %165 ], [ %162, %160 ]
  %168 = phi i16* [ %192, %165 ], [ %163, %160 ]
  %169 = load i16, i16* %167, align 2
  store i16 %169, i16* %168, align 2
  %170 = getelementptr inbounds i16, i16* %168, i64 1
  %171 = getelementptr inbounds i16, i16* %167, i64 1
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %168, i64 2
  %174 = getelementptr inbounds i16, i16* %167, i64 2
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %168, i64 3
  %177 = getelementptr inbounds i16, i16* %167, i64 3
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %168, i64 4
  %180 = getelementptr inbounds i16, i16* %167, i64 4
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %168, i64 5
  %183 = getelementptr inbounds i16, i16* %167, i64 5
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = getelementptr inbounds i16, i16* %168, i64 6
  %186 = getelementptr inbounds i16, i16* %167, i64 6
  %187 = load i16, i16* %186, align 2
  store i16 %187, i16* %185, align 2
  %188 = getelementptr inbounds i16, i16* %168, i64 7
  %189 = getelementptr inbounds i16, i16* %167, i64 7
  %190 = load i16, i16* %189, align 2
  store i16 %190, i16* %188, align 2
  %191 = add i64 %166, -8
  %192 = getelementptr inbounds i16, i16* %168, i64 8
  %193 = getelementptr inbounds i16, i16* %167, i64 8
  %194 = icmp eq i64 %191, 0
  br i1 %194, label %195, label %165, !llvm.loop !57

195:                                              ; preds = %160, %165, %140, %44
  %196 = phi i16* [ %48, %44 ], [ %51, %140 ], [ %51, %165 ], [ %51, %160 ]
  %197 = getelementptr inbounds i16, i16* %196, i64 %25
  store i16 0, i16* %197, align 2
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #7

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__sortIRPFbRK9TermMatchS3_EPS1_EEvT0_S8_T_(%struct.TermMatch*, %struct.TermMatch*, i1 (%struct.TermMatch*, %struct.TermMatch*)** dereferenceable(8)) local_unnamed_addr #0 comdat {
  %4 = alloca %struct.TermMatch, align 8
  %5 = alloca %struct.TermMatch, align 8
  %6 = alloca %struct.TermMatch, align 8
  %7 = alloca %struct.TermMatch, align 8
  %8 = alloca %struct.TermMatch, align 8
  %9 = alloca %struct.TermMatch, align 8
  %10 = alloca %struct.TermMatch, align 8
  %11 = alloca %struct.TermMatch, align 8
  %12 = alloca %struct.TermMatch, align 8
  %13 = alloca %struct.TermMatch, align 8
  %14 = alloca %struct.TermMatch, align 8
  %15 = alloca %struct.TermMatch, align 8
  %16 = alloca %struct.TermMatch, align 8
  %17 = alloca %struct.TermMatch, align 8
  %18 = alloca %struct.TermMatch, align 8
  %19 = alloca %struct.TermMatch, align 8
  %20 = alloca %struct.TermMatch, align 8
  %21 = alloca %struct.TermMatch, align 8
  %22 = alloca %struct.TermMatch, align 8
  %23 = alloca %struct.TermMatch, align 8
  %24 = alloca %struct.TermMatch, align 8
  %25 = alloca %struct.TermMatch, align 8
  %26 = alloca %struct.TermMatch, align 8
  %27 = alloca %struct.TermMatch, align 8
  %28 = bitcast %struct.TermMatch* %13 to i8*
  %29 = bitcast %struct.TermMatch* %11 to i8*
  %30 = bitcast %struct.TermMatch* %10 to i8*
  %31 = bitcast %struct.TermMatch* %12 to i8*
  %32 = bitcast %struct.TermMatch* %9 to i8*
  %33 = bitcast %struct.TermMatch* %17 to i8*
  %34 = bitcast %struct.TermMatch* %15 to i8*
  %35 = bitcast %struct.TermMatch* %14 to i8*
  %36 = bitcast %struct.TermMatch* %16 to i8*
  %37 = bitcast %struct.TermMatch* %6 to i8*
  %38 = bitcast %struct.TermMatch* %8 to i8*
  %39 = bitcast %struct.TermMatch* %7 to i8*
  %40 = bitcast %struct.TermMatch* %5 to i8*
  %41 = bitcast %struct.TermMatch* %4 to i8*
  br label %42

42:                                               ; preds = %285, %3
  %43 = phi %struct.TermMatch* [ %1, %3 ], [ %268, %285 ]
  %44 = phi %struct.TermMatch* [ %0, %3 ], [ %56, %285 ]
  %45 = ptrtoint %struct.TermMatch* %43 to i64
  %46 = getelementptr inbounds %struct.TermMatch, %struct.TermMatch* %43, i64 -1
  %47 = bitcast %struct.TermMatch* %46 to i8*
  %48 = bitcast %struct.TermMatch* %46 to i8*
  %49 = bitcast %struct.TermMatch* %46 to i8*
  %50 = bitcast %struct.TermMatch* %46 to i8*
  %51 = bitcast %struct.TermMatch* %46 to i8*
  %52 = ptrtoint %struct.TermMatch* %43 to i64
  br label %53

53:                                               ; preds = %296, %42
  %54 = phi %struct.TermMatch* [ %44, %42 ], [ %297, %296 ]
  br label %55

55:                                               ; preds = %224, %53
  %56 = phi %struct.TermMatch* [ %54, %53 ], [ %215, %224 ]
  %57 = ptrtoint %struct.TermMatch* %56 to i64
  %58 = sub i64 %45, %57
  %59 = sdiv exact i64 %58, 24
  switch i64 %59, label %131 [
    i64 0, label %300
    i64 1, label %300
    i64 2, label %60
    i64 3, label %68
    i64 4, label %99
    i64 5, label %104
  ]

60:                                               ; preds = %55
  %61 = load i1 (%struct.TermMatch*, %struct.TermMatch*)*, i1 (%struct.TermMatch*, %struct.TermMatch*)** %2, align 8
  %62 = getelementptr inbounds %struct.TermMatch, %struct.TermMatch* %43, i64 -1
  %63 = tail call zeroext i1 %61(%struct.TermMatch* dereferenceable(24) %62, %struct.TermMatch* dereferenceable(24) %56) #12
  br i1 %63, label %64, label %300

64:                                               ; preds = %60
  %65 = bitcast %struct.TermMatch* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %65)
  %66 = bitcast %struct.TermMatch* %56 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %65, i8* align 8 %66, i64 24, i1 false) #12
  %67 = bitcast %struct.TermMatch* %62 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %66, i8* align 8 %67, i64 24, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %67, i8* nonnull align 8 %65, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %65)
  br label %300

68:                                               ; preds = %55
  %69 = getelementptr inbounds %struct.TermMatch, %struct.TermMatch* %56, i64 1
  %70 = getelementptr inbounds %struct.TermMatch, %struct.TermMatch* %43, i64 -1
  %71 = load i1 (%struct.TermMatch*, %struct.TermMatch*)*, i1 (%struct.TermMatch*, %struct.TermMatch*)** %2, align 8
  %72 = tail call zeroext i1 %71(%struct.TermMatch* dereferenceable(24) %69, %struct.TermMatch* dereferenceable(24) %56) #12
  %73 = load i1 (%struct.TermMatch*, %struct.TermMatch*)*, i1 (%struct.TermMatch*, %struct.TermMatch*)** %2, align 8
  %74 = tail call zeroext i1 %73(%struct.TermMatch* dereferenceable(24) %70, %struct.TermMatch* dereferenceable(24) %69) #12
  br i1 %72, label %85, label %75

75:                                               ; preds = %68
  br i1 %74, label %76, label %300

76:                                               ; preds = %75
  %77 = bitcast %struct.TermMatch* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %77)
  %78 = bitcast %struct.TermMatch* %69 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %77, i8* align 8 %78, i64 24, i1 false) #12
  %79 = bitcast %struct.TermMatch* %70 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %78, i8* align 8 %79, i64 24, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %79, i8* nonnull align 8 %77, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %77)
  %80 = load i1 (%struct.TermMatch*, %struct.TermMatch*)*, i1 (%struct.TermMatch*, %struct.TermMatch*)** %2, align 8
  %81 = tail call zeroext i1 %80(%struct.TermMatch* dereferenceable(24) %69, %struct.TermMatch* dereferenceable(24) %56) #12
  br i1 %81, label %82, label %300

82:                                               ; preds = %76
  %83 = bitcast %struct.TermMatch* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %83)
  %84 = bitcast %struct.TermMatch* %56 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %83, i8* align 8 %84, i64 24, i1 false) #12
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %84, i8* align 8 %78, i64 24, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %78, i8* nonnull align 8 %83, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %83)
  br label %300

85:                                               ; preds = %68
  br i1 %74, label %86, label %90

86:                                               ; preds = %85
  %87 = bitcast %struct.TermMatch* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %87)
  %88 = bitcast %struct.TermMatch* %56 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %87, i8* align 8 %88, i64 24, i1 false) #12
  %89 = bitcast %struct.TermMatch* %70 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %88, i8* align 8 %89, i64 24, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %89, i8* nonnull align 8 %87, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %87)
  br label %300

90:                                               ; preds = %85
  %91 = bitcast %struct.TermMatch* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %91)
  %92 = bitcast %struct.TermMatch* %56 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %91, i8* align 8 %92, i64 24, i1 false) #12
  %93 = bitcast %struct.TermMatch* %69 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %92, i8* align 8 %93, i64 24, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %93, i8* nonnull align 8 %91, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %91)
  %94 = load i1 (%struct.TermMatch*, %struct.TermMatch*)*, i1 (%struct.TermMatch*, %struct.TermMatch*)** %2, align 8
  %95 = tail call zeroext i1 %94(%struct.TermMatch* dereferenceable(24) %70, %struct.TermMatch* dereferenceable(24) %69) #12
  br i1 %95, label %96, label %300

96:                                               ; preds = %90
  %97 = bitcast %struct.TermMatch* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %97)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %97, i8* align 8 %93, i64 24, i1 false) #12
  %98 = bitcast %struct.TermMatch* %70 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %93, i8* align 8 %98, i64 24, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %98, i8* nonnull align 8 %97, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %97)
  br label %300

99:                                               ; preds = %55
  %100 = getelementptr inbounds %struct.TermMatch, %struct.TermMatch* %56, i64 1
  %101 = getelementptr inbounds %struct.TermMatch, %struct.TermMatch* %56, i64 2
  %102 = getelementptr inbounds %struct.TermMatch, %struct.TermMatch* %43, i64 -1
  %103 = tail call i32 @_ZNSt3__17__sort4IRPFbRK9TermMatchS3_EPS1_EEjT0_S8_S8_S8_T_(%struct.TermMatch* %56, %struct.TermMatch* %100, %struct.TermMatch* %101, %struct.TermMatch* %102, i1 (%struct.TermMatch*, %struct.TermMatch*)** dereferenceable(8) %2)
  br label %300

104:                                              ; preds = %55
  %105 = getelementptr inbounds %struct.TermMatch, %struct.TermMatch* %56, i64 1
  %106 = getelementptr inbounds %struct.TermMatch, %struct.TermMatch* %56, i64 2
  %107 = getelementptr inbounds %struct.TermMatch, %struct.TermMatch* %56, i64 3
  %108 = getelementptr inbounds %struct.TermMatch, %struct.TermMatch* %43, i64 -1
  %109 = tail call i32 @_ZNSt3__17__sort4IRPFbRK9TermMatchS3_EPS1_EEjT0_S8_S8_S8_T_(%struct.TermMatch* %56, %struct.TermMatch* %105, %struct.TermMatch* %106, %struct.TermMatch* %107, i1 (%struct.TermMatch*, %struct.TermMatch*)** dereferenceable(8) %2) #12
  %110 = load i1 (%struct.TermMatch*, %struct.TermMatch*)*, i1 (%struct.TermMatch*, %struct.TermMatch*)** %2, align 8
  %111 = tail call zeroext i1 %110(%struct.TermMatch* dereferenceable(24) %108, %struct.TermMatch* dereferenceable(24) %107) #12
  br i1 %111, label %112, label %300

112:                                              ; preds = %104
  %113 = bitcast %struct.TermMatch* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %113)
  %114 = bitcast %struct.TermMatch* %107 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %113, i8* align 8 %114, i64 24, i1 false) #12
  %115 = bitcast %struct.TermMatch* %108 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %114, i8* align 8 %115, i64 24, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %115, i8* nonnull align 8 %113, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %113)
  %116 = load i1 (%struct.TermMatch*, %struct.TermMatch*)*, i1 (%struct.TermMatch*, %struct.TermMatch*)** %2, align 8
  %117 = tail call zeroext i1 %116(%struct.TermMatch* dereferenceable(24) %107, %struct.TermMatch* dereferenceable(24) %106) #12
  br i1 %117, label %118, label %300

118:                                              ; preds = %112
  %119 = bitcast %struct.TermMatch* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %119)
  %120 = bitcast %struct.TermMatch* %106 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %119, i8* align 8 %120, i64 24, i1 false) #12
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %120, i8* align 8 %114, i64 24, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %114, i8* nonnull align 8 %119, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %119)
  %121 = load i1 (%struct.TermMatch*, %struct.TermMatch*)*, i1 (%struct.TermMatch*, %struct.TermMatch*)** %2, align 8
  %122 = tail call zeroext i1 %121(%struct.TermMatch* dereferenceable(24) %106, %struct.TermMatch* dereferenceable(24) %105) #12
  br i1 %122, label %123, label %300

123:                                              ; preds = %118
  %124 = bitcast %struct.TermMatch* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %124)
  %125 = bitcast %struct.TermMatch* %105 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %124, i8* align 8 %125, i64 24, i1 false) #12
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %125, i8* align 8 %120, i64 24, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %120, i8* nonnull align 8 %124, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %124)
  %126 = load i1 (%struct.TermMatch*, %struct.TermMatch*)*, i1 (%struct.TermMatch*, %struct.TermMatch*)** %2, align 8
  %127 = tail call zeroext i1 %126(%struct.TermMatch* dereferenceable(24) %105, %struct.TermMatch* dereferenceable(24) %56) #12
  br i1 %127, label %128, label %300

128:                                              ; preds = %123
  %129 = bitcast %struct.TermMatch* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %129)
  %130 = bitcast %struct.TermMatch* %56 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %129, i8* align 8 %130, i64 24, i1 false) #12
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %130, i8* align 8 %125, i64 24, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %125, i8* nonnull align 8 %129, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %129)
  br label %300

131:                                              ; preds = %55
  %132 = icmp slt i64 %58, 744
  br i1 %132, label %133, label %134

133:                                              ; preds = %131
  tail call void @_ZNSt3__118__insertion_sort_3IRPFbRK9TermMatchS3_EPS1_EEvT0_S8_T_(%struct.TermMatch* %56, %struct.TermMatch* %43, i1 (%struct.TermMatch*, %struct.TermMatch*)** dereferenceable(8) %2)
  br label %300

134:                                              ; preds = %131
  %135 = icmp sgt i64 %58, 23976
  %136 = udiv i64 %58, 48
  %137 = getelementptr inbounds %struct.TermMatch, %struct.TermMatch* %56, i64 %136
  br i1 %135, label %138, label %163

138:                                              ; preds = %134
  %139 = udiv i64 %58, 96
  %140 = getelementptr inbounds %struct.TermMatch, %struct.TermMatch* %56, i64 %139
  %141 = getelementptr inbounds %struct.TermMatch, %struct.TermMatch* %137, i64 %139
  %142 = tail call i32 @_ZNSt3__17__sort4IRPFbRK9TermMatchS3_EPS1_EEjT0_S8_S8_S8_T_(%struct.TermMatch* %56, %struct.TermMatch* %140, %struct.TermMatch* %137, %struct.TermMatch* %141, i1 (%struct.TermMatch*, %struct.TermMatch*)** dereferenceable(8) %2) #12
  %143 = load i1 (%struct.TermMatch*, %struct.TermMatch*)*, i1 (%struct.TermMatch*, %struct.TermMatch*)** %2, align 8
  %144 = tail call zeroext i1 %143(%struct.TermMatch* dereferenceable(24) %46, %struct.TermMatch* dereferenceable(24) %141) #12
  br i1 %144, label %145, label %184

145:                                              ; preds = %138
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %33)
  %146 = bitcast %struct.TermMatch* %141 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %33, i8* align 8 %146, i64 24, i1 false) #12
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %146, i8* align 8 %50, i64 24, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %50, i8* nonnull align 8 %33, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %33)
  %147 = add i32 %142, 1
  %148 = load i1 (%struct.TermMatch*, %struct.TermMatch*)*, i1 (%struct.TermMatch*, %struct.TermMatch*)** %2, align 8
  %149 = tail call zeroext i1 %148(%struct.TermMatch* dereferenceable(24) %141, %struct.TermMatch* dereferenceable(24) %137) #12
  br i1 %149, label %150, label %184

150:                                              ; preds = %145
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %34)
  %151 = bitcast %struct.TermMatch* %137 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %34, i8* align 8 %151, i64 24, i1 false) #12
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %151, i8* align 8 %146, i64 24, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %146, i8* nonnull align 8 %34, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %34)
  %152 = add i32 %142, 2
  %153 = load i1 (%struct.TermMatch*, %struct.TermMatch*)*, i1 (%struct.TermMatch*, %struct.TermMatch*)** %2, align 8
  %154 = tail call zeroext i1 %153(%struct.TermMatch* dereferenceable(24) %137, %struct.TermMatch* dereferenceable(24) %140) #12
  br i1 %154, label %155, label %184

155:                                              ; preds = %150
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %35)
  %156 = bitcast %struct.TermMatch* %140 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %35, i8* align 8 %156, i64 24, i1 false) #12
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %156, i8* align 8 %151, i64 24, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %151, i8* nonnull align 8 %35, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %35)
  %157 = add i32 %142, 3
  %158 = load i1 (%struct.TermMatch*, %struct.TermMatch*)*, i1 (%struct.TermMatch*, %struct.TermMatch*)** %2, align 8
  %159 = tail call zeroext i1 %158(%struct.TermMatch* dereferenceable(24) %140, %struct.TermMatch* dereferenceable(24) %56) #12
  br i1 %159, label %160, label %184

160:                                              ; preds = %155
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %36)
  %161 = bitcast %struct.TermMatch* %56 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %36, i8* align 8 %161, i64 24, i1 false) #12
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %161, i8* align 8 %156, i64 24, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %156, i8* nonnull align 8 %36, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %36)
  %162 = add i32 %142, 4
  br label %184

163:                                              ; preds = %134
  %164 = load i1 (%struct.TermMatch*, %struct.TermMatch*)*, i1 (%struct.TermMatch*, %struct.TermMatch*)** %2, align 8
  %165 = tail call zeroext i1 %164(%struct.TermMatch* dereferenceable(24) %137, %struct.TermMatch* dereferenceable(24) %56) #12
  %166 = load i1 (%struct.TermMatch*, %struct.TermMatch*)*, i1 (%struct.TermMatch*, %struct.TermMatch*)** %2, align 8
  %167 = tail call zeroext i1 %166(%struct.TermMatch* dereferenceable(24) %46, %struct.TermMatch* dereferenceable(24) %137) #12
  br i1 %165, label %175, label %168

168:                                              ; preds = %163
  br i1 %167, label %169, label %184

169:                                              ; preds = %168
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28)
  %170 = bitcast %struct.TermMatch* %137 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* align 8 %170, i64 24, i1 false) #12
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %170, i8* align 8 %47, i64 24, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %47, i8* nonnull align 8 %28, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28)
  %171 = load i1 (%struct.TermMatch*, %struct.TermMatch*)*, i1 (%struct.TermMatch*, %struct.TermMatch*)** %2, align 8
  %172 = tail call zeroext i1 %171(%struct.TermMatch* dereferenceable(24) %137, %struct.TermMatch* dereferenceable(24) %56) #12
  br i1 %172, label %173, label %184

173:                                              ; preds = %169
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29)
  %174 = bitcast %struct.TermMatch* %56 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %29, i8* align 8 %174, i64 24, i1 false) #12
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %174, i8* align 8 %170, i64 24, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %170, i8* nonnull align 8 %29, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29)
  br label %184

175:                                              ; preds = %163
  br i1 %167, label %176, label %178

176:                                              ; preds = %175
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %32)
  %177 = bitcast %struct.TermMatch* %56 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %32, i8* align 8 %177, i64 24, i1 false) #12
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %177, i8* align 8 %49, i64 24, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %49, i8* nonnull align 8 %32, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %32)
  br label %184

178:                                              ; preds = %175
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %30)
  %179 = bitcast %struct.TermMatch* %56 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %30, i8* align 8 %179, i64 24, i1 false) #12
  %180 = bitcast %struct.TermMatch* %137 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %179, i8* align 8 %180, i64 24, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %180, i8* nonnull align 8 %30, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %30)
  %181 = load i1 (%struct.TermMatch*, %struct.TermMatch*)*, i1 (%struct.TermMatch*, %struct.TermMatch*)** %2, align 8
  %182 = tail call zeroext i1 %181(%struct.TermMatch* dereferenceable(24) %46, %struct.TermMatch* dereferenceable(24) %137) #12
  br i1 %182, label %183, label %184

183:                                              ; preds = %178
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %31, i8* align 8 %180, i64 24, i1 false) #12
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %180, i8* align 8 %48, i64 24, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %48, i8* nonnull align 8 %31, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31)
  br label %184

184:                                              ; preds = %183, %178, %176, %173, %169, %168, %160, %155, %150, %145, %138
  %185 = phi i32 [ %162, %160 ], [ %157, %155 ], [ %152, %150 ], [ %147, %145 ], [ %142, %138 ], [ 1, %176 ], [ 0, %168 ], [ 2, %173 ], [ 1, %169 ], [ 2, %183 ], [ 1, %178 ]
  %186 = load i1 (%struct.TermMatch*, %struct.TermMatch*)*, i1 (%struct.TermMatch*, %struct.TermMatch*)** %2, align 8
  %187 = tail call zeroext i1 %186(%struct.TermMatch* dereferenceable(24) %56, %struct.TermMatch* dereferenceable(24) %137) #12
  br i1 %187, label %236, label %188

188:                                              ; preds = %184, %229
  %189 = phi %struct.TermMatch* [ %190, %229 ], [ %46, %184 ]
  %190 = getelementptr inbounds %struct.TermMatch, %struct.TermMatch* %189, i64 -1
  %191 = icmp eq %struct.TermMatch* %56, %190
  br i1 %191, label %192, label %229

192:                                              ; preds = %188
  %193 = getelementptr inbounds %struct.TermMatch, %struct.TermMatch* %56, i64 1
  %194 = load i1 (%struct.TermMatch*, %struct.TermMatch*)*, i1 (%struct.TermMatch*, %struct.TermMatch*)** %2, align 8
  %195 = tail call zeroext i1 %194(%struct.TermMatch* dereferenceable(24) %56, %struct.TermMatch* dereferenceable(24) %46) #12
  br i1 %195, label %208, label %196

196:                                              ; preds = %192
  %197 = icmp eq %struct.TermMatch* %193, %46
  br i1 %197, label %300, label %198

198:                                              ; preds = %196, %205
  %199 = phi %struct.TermMatch* [ %206, %205 ], [ %193, %196 ]
  %200 = load i1 (%struct.TermMatch*, %struct.TermMatch*)*, i1 (%struct.TermMatch*, %struct.TermMatch*)** %2, align 8
  %201 = tail call zeroext i1 %200(%struct.TermMatch* dereferenceable(24) %56, %struct.TermMatch* dereferenceable(24) %199) #12
  br i1 %201, label %202, label %205

202:                                              ; preds = %198
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %38)
  %203 = bitcast %struct.TermMatch* %199 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %38, i8* align 8 %203, i64 24, i1 false) #12
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %203, i8* align 8 %51, i64 24, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %51, i8* nonnull align 8 %38, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %38)
  %204 = getelementptr inbounds %struct.TermMatch, %struct.TermMatch* %199, i64 1
  br label %208

205:                                              ; preds = %198
  %206 = getelementptr inbounds %struct.TermMatch, %struct.TermMatch* %199, i64 1
  %207 = icmp eq %struct.TermMatch* %206, %46
  br i1 %207, label %300, label %198

208:                                              ; preds = %202, %192
  %209 = phi %struct.TermMatch* [ %193, %192 ], [ %204, %202 ]
  %210 = icmp eq %struct.TermMatch* %209, %46
  br i1 %210, label %300, label %211

211:                                              ; preds = %208, %226
  %212 = phi %struct.TermMatch* [ %218, %226 ], [ %209, %208 ]
  %213 = phi %struct.TermMatch* [ %222, %226 ], [ %46, %208 ]
  br label %214

214:                                              ; preds = %214, %211
  %215 = phi %struct.TermMatch* [ %212, %211 ], [ %218, %214 ]
  %216 = load i1 (%struct.TermMatch*, %struct.TermMatch*)*, i1 (%struct.TermMatch*, %struct.TermMatch*)** %2, align 8
  %217 = tail call zeroext i1 %216(%struct.TermMatch* dereferenceable(24) %56, %struct.TermMatch* dereferenceable(24) %215) #12
  %218 = getelementptr inbounds %struct.TermMatch, %struct.TermMatch* %215, i64 1
  br i1 %217, label %219, label %214

219:                                              ; preds = %214, %219
  %220 = phi %struct.TermMatch* [ %222, %219 ], [ %213, %214 ]
  %221 = load i1 (%struct.TermMatch*, %struct.TermMatch*)*, i1 (%struct.TermMatch*, %struct.TermMatch*)** %2, align 8
  %222 = getelementptr inbounds %struct.TermMatch, %struct.TermMatch* %220, i64 -1
  %223 = tail call zeroext i1 %221(%struct.TermMatch* dereferenceable(24) %56, %struct.TermMatch* dereferenceable(24) %222) #12
  br i1 %223, label %219, label %224

224:                                              ; preds = %219
  %225 = icmp ult %struct.TermMatch* %215, %222
  br i1 %225, label %226, label %55

226:                                              ; preds = %224
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %39)
  %227 = bitcast %struct.TermMatch* %215 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %39, i8* align 8 %227, i64 24, i1 false) #12
  %228 = bitcast %struct.TermMatch* %222 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %227, i8* align 8 %228, i64 24, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %228, i8* nonnull align 8 %39, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %39)
  br label %211

229:                                              ; preds = %188
  %230 = load i1 (%struct.TermMatch*, %struct.TermMatch*)*, i1 (%struct.TermMatch*, %struct.TermMatch*)** %2, align 8
  %231 = tail call zeroext i1 %230(%struct.TermMatch* dereferenceable(24) %190, %struct.TermMatch* dereferenceable(24) %137) #12
  br i1 %231, label %232, label %188

232:                                              ; preds = %229
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %37)
  %233 = bitcast %struct.TermMatch* %56 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %37, i8* align 8 %233, i64 24, i1 false) #12
  %234 = bitcast %struct.TermMatch* %190 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %233, i8* align 8 %234, i64 24, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %234, i8* nonnull align 8 %37, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37)
  %235 = add i32 %185, 1
  br label %236

236:                                              ; preds = %184, %232
  %237 = phi i32 [ %235, %232 ], [ %185, %184 ]
  %238 = phi %struct.TermMatch* [ %190, %232 ], [ %46, %184 ]
  %239 = ptrtoint %struct.TermMatch* %56 to i64
  %240 = getelementptr inbounds %struct.TermMatch, %struct.TermMatch* %56, i64 1
  %241 = icmp ult %struct.TermMatch* %240, %238
  br i1 %241, label %242, label %265

242:                                              ; preds = %236, %259
  %243 = phi %struct.TermMatch* [ %264, %259 ], [ %137, %236 ]
  %244 = phi i32 [ %262, %259 ], [ %237, %236 ]
  %245 = phi %struct.TermMatch* [ %251, %259 ], [ %240, %236 ]
  %246 = phi %struct.TermMatch* [ %255, %259 ], [ %238, %236 ]
  br label %247

247:                                              ; preds = %247, %242
  %248 = phi %struct.TermMatch* [ %245, %242 ], [ %251, %247 ]
  %249 = load i1 (%struct.TermMatch*, %struct.TermMatch*)*, i1 (%struct.TermMatch*, %struct.TermMatch*)** %2, align 8
  %250 = tail call zeroext i1 %249(%struct.TermMatch* dereferenceable(24) %248, %struct.TermMatch* dereferenceable(24) %243) #12
  %251 = getelementptr inbounds %struct.TermMatch, %struct.TermMatch* %248, i64 1
  br i1 %250, label %247, label %252

252:                                              ; preds = %247, %252
  %253 = phi %struct.TermMatch* [ %255, %252 ], [ %246, %247 ]
  %254 = load i1 (%struct.TermMatch*, %struct.TermMatch*)*, i1 (%struct.TermMatch*, %struct.TermMatch*)** %2, align 8
  %255 = getelementptr inbounds %struct.TermMatch, %struct.TermMatch* %253, i64 -1
  %256 = tail call zeroext i1 %254(%struct.TermMatch* dereferenceable(24) %255, %struct.TermMatch* dereferenceable(24) %243) #12
  br i1 %256, label %257, label %252

257:                                              ; preds = %252
  %258 = icmp ugt %struct.TermMatch* %248, %255
  br i1 %258, label %265, label %259

259:                                              ; preds = %257
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %40)
  %260 = bitcast %struct.TermMatch* %248 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %40, i8* align 8 %260, i64 24, i1 false) #12
  %261 = bitcast %struct.TermMatch* %255 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %260, i8* align 8 %261, i64 24, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %261, i8* nonnull align 8 %40, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %40)
  %262 = add i32 %244, 1
  %263 = icmp eq %struct.TermMatch* %243, %248
  %264 = select i1 %263, %struct.TermMatch* %255, %struct.TermMatch* %243
  br label %242

265:                                              ; preds = %257, %236
  %266 = phi %struct.TermMatch* [ %137, %236 ], [ %243, %257 ]
  %267 = phi i32 [ %237, %236 ], [ %244, %257 ]
  %268 = phi %struct.TermMatch* [ %240, %236 ], [ %248, %257 ]
  %269 = icmp eq %struct.TermMatch* %268, %266
  br i1 %269, label %277, label %270

270:                                              ; preds = %265
  %271 = load i1 (%struct.TermMatch*, %struct.TermMatch*)*, i1 (%struct.TermMatch*, %struct.TermMatch*)** %2, align 8
  %272 = tail call zeroext i1 %271(%struct.TermMatch* dereferenceable(24) %266, %struct.TermMatch* dereferenceable(24) %268) #12
  br i1 %272, label %273, label %277

273:                                              ; preds = %270
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %41)
  %274 = bitcast %struct.TermMatch* %268 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %41, i8* align 8 %274, i64 24, i1 false) #12
  %275 = bitcast %struct.TermMatch* %266 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %274, i8* align 8 %275, i64 24, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %275, i8* nonnull align 8 %41, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %41)
  %276 = add i32 %267, 1
  br label %277

277:                                              ; preds = %265, %273, %270
  %278 = phi i32 [ %276, %273 ], [ %267, %270 ], [ %267, %265 ]
  %279 = icmp eq i32 %278, 0
  br i1 %279, label %280, label %287

280:                                              ; preds = %277
  %281 = tail call zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRPFbRK9TermMatchS3_EPS1_EEbT0_S8_T_(%struct.TermMatch* %56, %struct.TermMatch* %268, i1 (%struct.TermMatch*, %struct.TermMatch*)** dereferenceable(8) %2)
  %282 = getelementptr inbounds %struct.TermMatch, %struct.TermMatch* %268, i64 1
  %283 = tail call zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRPFbRK9TermMatchS3_EPS1_EEbT0_S8_T_(%struct.TermMatch* %282, %struct.TermMatch* %43, i1 (%struct.TermMatch*, %struct.TermMatch*)** dereferenceable(8) %2)
  br i1 %283, label %284, label %286

284:                                              ; preds = %280
  br i1 %281, label %300, label %285

285:                                              ; preds = %284, %298
  br label %42

286:                                              ; preds = %280
  br i1 %281, label %296, label %287

287:                                              ; preds = %286, %277
  %288 = ptrtoint %struct.TermMatch* %268 to i64
  %289 = sub i64 %288, %239
  %290 = sdiv exact i64 %289, 24
  %291 = sub i64 %52, %288
  %292 = sdiv exact i64 %291, 24
  %293 = icmp slt i64 %290, %292
  br i1 %293, label %294, label %298

294:                                              ; preds = %287
  tail call void @_ZNSt3__16__sortIRPFbRK9TermMatchS3_EPS1_EEvT0_S8_T_(%struct.TermMatch* %56, %struct.TermMatch* %268, i1 (%struct.TermMatch*, %struct.TermMatch*)** dereferenceable(8) %2)
  %295 = getelementptr inbounds %struct.TermMatch, %struct.TermMatch* %268, i64 1
  br label %296

296:                                              ; preds = %294, %286
  %297 = phi %struct.TermMatch* [ %282, %286 ], [ %295, %294 ]
  br label %53

298:                                              ; preds = %287
  %299 = getelementptr inbounds %struct.TermMatch, %struct.TermMatch* %268, i64 1
  tail call void @_ZNSt3__16__sortIRPFbRK9TermMatchS3_EPS1_EEvT0_S8_T_(%struct.TermMatch* %299, %struct.TermMatch* %43, i1 (%struct.TermMatch*, %struct.TermMatch*)** dereferenceable(8) %2)
  br label %285

300:                                              ; preds = %284, %208, %55, %55, %196, %205, %128, %123, %118, %112, %104, %96, %90, %86, %82, %76, %75, %60, %64, %99, %133
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNSt3__17__sort4IRPFbRK9TermMatchS3_EPS1_EEjT0_S8_S8_S8_T_(%struct.TermMatch*, %struct.TermMatch*, %struct.TermMatch*, %struct.TermMatch*, i1 (%struct.TermMatch*, %struct.TermMatch*)** dereferenceable(8)) local_unnamed_addr #0 comdat {
  %6 = alloca %struct.TermMatch, align 8
  %7 = alloca %struct.TermMatch, align 8
  %8 = alloca %struct.TermMatch, align 8
  %9 = alloca %struct.TermMatch, align 8
  %10 = alloca %struct.TermMatch, align 8
  %11 = alloca %struct.TermMatch, align 8
  %12 = alloca %struct.TermMatch, align 8
  %13 = alloca %struct.TermMatch, align 8
  %14 = load i1 (%struct.TermMatch*, %struct.TermMatch*)*, i1 (%struct.TermMatch*, %struct.TermMatch*)** %4, align 8
  %15 = tail call zeroext i1 %14(%struct.TermMatch* dereferenceable(24) %1, %struct.TermMatch* dereferenceable(24) %0) #12
  %16 = load i1 (%struct.TermMatch*, %struct.TermMatch*)*, i1 (%struct.TermMatch*, %struct.TermMatch*)** %4, align 8
  %17 = tail call zeroext i1 %16(%struct.TermMatch* dereferenceable(24) %2, %struct.TermMatch* dereferenceable(24) %1) #12
  br i1 %15, label %28, label %18

18:                                               ; preds = %5
  br i1 %17, label %19, label %42

19:                                               ; preds = %18
  %20 = bitcast %struct.TermMatch* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20)
  %21 = bitcast %struct.TermMatch* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %20, i8* align 8 %21, i64 24, i1 false) #12
  %22 = bitcast %struct.TermMatch* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* align 8 %22, i64 24, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %22, i8* nonnull align 8 %20, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20)
  %23 = load i1 (%struct.TermMatch*, %struct.TermMatch*)*, i1 (%struct.TermMatch*, %struct.TermMatch*)** %4, align 8
  %24 = tail call zeroext i1 %23(%struct.TermMatch* dereferenceable(24) %1, %struct.TermMatch* dereferenceable(24) %0) #12
  br i1 %24, label %25, label %42

25:                                               ; preds = %19
  %26 = bitcast %struct.TermMatch* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26)
  %27 = bitcast %struct.TermMatch* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %26, i8* align 8 %27, i64 24, i1 false) #12
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %27, i8* align 8 %21, i64 24, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* nonnull align 8 %26, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26)
  br label %42

28:                                               ; preds = %5
  br i1 %17, label %29, label %33

29:                                               ; preds = %28
  %30 = bitcast %struct.TermMatch* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %30)
  %31 = bitcast %struct.TermMatch* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %30, i8* align 8 %31, i64 24, i1 false) #12
  %32 = bitcast %struct.TermMatch* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 24, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %32, i8* nonnull align 8 %30, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %30)
  br label %42

33:                                               ; preds = %28
  %34 = bitcast %struct.TermMatch* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %34)
  %35 = bitcast %struct.TermMatch* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %34, i8* align 8 %35, i64 24, i1 false) #12
  %36 = bitcast %struct.TermMatch* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %35, i8* align 8 %36, i64 24, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %36, i8* nonnull align 8 %34, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %34)
  %37 = load i1 (%struct.TermMatch*, %struct.TermMatch*)*, i1 (%struct.TermMatch*, %struct.TermMatch*)** %4, align 8
  %38 = tail call zeroext i1 %37(%struct.TermMatch* dereferenceable(24) %2, %struct.TermMatch* dereferenceable(24) %1) #12
  br i1 %38, label %39, label %42

39:                                               ; preds = %33
  %40 = bitcast %struct.TermMatch* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %40)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %40, i8* align 8 %36, i64 24, i1 false) #12
  %41 = bitcast %struct.TermMatch* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %36, i8* align 8 %41, i64 24, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %41, i8* nonnull align 8 %40, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %40)
  br label %42

42:                                               ; preds = %18, %19, %25, %29, %33, %39
  %43 = phi i32 [ 1, %29 ], [ 0, %18 ], [ 2, %25 ], [ 1, %19 ], [ 2, %39 ], [ 1, %33 ]
  %44 = load i1 (%struct.TermMatch*, %struct.TermMatch*)*, i1 (%struct.TermMatch*, %struct.TermMatch*)** %4, align 8
  %45 = tail call zeroext i1 %44(%struct.TermMatch* dereferenceable(24) %3, %struct.TermMatch* dereferenceable(24) %2) #12
  br i1 %45, label %46, label %63

46:                                               ; preds = %42
  %47 = bitcast %struct.TermMatch* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %47)
  %48 = bitcast %struct.TermMatch* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %47, i8* align 8 %48, i64 24, i1 false) #12
  %49 = bitcast %struct.TermMatch* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %48, i8* align 8 %49, i64 24, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %49, i8* nonnull align 8 %47, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %47)
  %50 = add nuw nsw i32 %43, 1
  %51 = load i1 (%struct.TermMatch*, %struct.TermMatch*)*, i1 (%struct.TermMatch*, %struct.TermMatch*)** %4, align 8
  %52 = tail call zeroext i1 %51(%struct.TermMatch* dereferenceable(24) %2, %struct.TermMatch* dereferenceable(24) %1) #12
  br i1 %52, label %53, label %63

53:                                               ; preds = %46
  %54 = bitcast %struct.TermMatch* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %54)
  %55 = bitcast %struct.TermMatch* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %54, i8* align 8 %55, i64 24, i1 false) #12
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %55, i8* align 8 %48, i64 24, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %48, i8* nonnull align 8 %54, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %54)
  %56 = add nuw nsw i32 %43, 2
  %57 = load i1 (%struct.TermMatch*, %struct.TermMatch*)*, i1 (%struct.TermMatch*, %struct.TermMatch*)** %4, align 8
  %58 = tail call zeroext i1 %57(%struct.TermMatch* dereferenceable(24) %1, %struct.TermMatch* dereferenceable(24) %0) #12
  br i1 %58, label %59, label %63

59:                                               ; preds = %53
  %60 = bitcast %struct.TermMatch* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %60)
  %61 = bitcast %struct.TermMatch* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %60, i8* align 8 %61, i64 24, i1 false) #12
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %61, i8* align 8 %55, i64 24, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %55, i8* nonnull align 8 %60, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %60)
  %62 = add nuw nsw i32 %43, 3
  br label %63

63:                                               ; preds = %46, %59, %53, %42
  %64 = phi i32 [ %62, %59 ], [ %56, %53 ], [ %50, %46 ], [ %43, %42 ]
  ret i32 %64
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__118__insertion_sort_3IRPFbRK9TermMatchS3_EPS1_EEvT0_S8_T_(%struct.TermMatch*, %struct.TermMatch*, i1 (%struct.TermMatch*, %struct.TermMatch*)** dereferenceable(8)) local_unnamed_addr #0 comdat {
  %4 = alloca %struct.TermMatch, align 8
  %5 = alloca %struct.TermMatch, align 8
  %6 = alloca %struct.TermMatch, align 8
  %7 = alloca %struct.TermMatch, align 8
  %8 = alloca %struct.TermMatch, align 8
  %9 = alloca %struct.TermMatch, align 8
  %10 = getelementptr inbounds %struct.TermMatch, %struct.TermMatch* %0, i64 2
  %11 = getelementptr inbounds %struct.TermMatch, %struct.TermMatch* %0, i64 1
  %12 = load i1 (%struct.TermMatch*, %struct.TermMatch*)*, i1 (%struct.TermMatch*, %struct.TermMatch*)** %2, align 8
  %13 = tail call zeroext i1 %12(%struct.TermMatch* dereferenceable(24) %11, %struct.TermMatch* dereferenceable(24) %0) #12
  %14 = load i1 (%struct.TermMatch*, %struct.TermMatch*)*, i1 (%struct.TermMatch*, %struct.TermMatch*)** %2, align 8
  %15 = tail call zeroext i1 %14(%struct.TermMatch* dereferenceable(24) %10, %struct.TermMatch* dereferenceable(24) %11) #12
  br i1 %13, label %26, label %16

16:                                               ; preds = %3
  br i1 %15, label %17, label %40

17:                                               ; preds = %16
  %18 = bitcast %struct.TermMatch* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18)
  %19 = bitcast %struct.TermMatch* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %18, i8* align 8 %19, i64 24, i1 false) #12
  %20 = bitcast %struct.TermMatch* %10 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 8 %20, i64 24, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %20, i8* nonnull align 8 %18, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18)
  %21 = load i1 (%struct.TermMatch*, %struct.TermMatch*)*, i1 (%struct.TermMatch*, %struct.TermMatch*)** %2, align 8
  %22 = tail call zeroext i1 %21(%struct.TermMatch* dereferenceable(24) %11, %struct.TermMatch* dereferenceable(24) %0) #12
  br i1 %22, label %23, label %40

23:                                               ; preds = %17
  %24 = bitcast %struct.TermMatch* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24)
  %25 = bitcast %struct.TermMatch* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %24, i8* align 8 %25, i64 24, i1 false) #12
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 8 %19, i64 24, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* nonnull align 8 %24, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24)
  br label %40

26:                                               ; preds = %3
  br i1 %15, label %27, label %31

27:                                               ; preds = %26
  %28 = bitcast %struct.TermMatch* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28)
  %29 = bitcast %struct.TermMatch* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* align 8 %29, i64 24, i1 false) #12
  %30 = bitcast %struct.TermMatch* %10 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 24, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %30, i8* nonnull align 8 %28, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28)
  br label %40

31:                                               ; preds = %26
  %32 = bitcast %struct.TermMatch* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %32)
  %33 = bitcast %struct.TermMatch* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %32, i8* align 8 %33, i64 24, i1 false) #12
  %34 = bitcast %struct.TermMatch* %11 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %33, i8* align 8 %34, i64 24, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %34, i8* nonnull align 8 %32, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %32)
  %35 = load i1 (%struct.TermMatch*, %struct.TermMatch*)*, i1 (%struct.TermMatch*, %struct.TermMatch*)** %2, align 8
  %36 = tail call zeroext i1 %35(%struct.TermMatch* dereferenceable(24) %10, %struct.TermMatch* dereferenceable(24) %11) #12
  br i1 %36, label %37, label %40

37:                                               ; preds = %31
  %38 = bitcast %struct.TermMatch* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %38)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %38, i8* align 8 %34, i64 24, i1 false) #12
  %39 = bitcast %struct.TermMatch* %10 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %34, i8* align 8 %39, i64 24, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %39, i8* nonnull align 8 %38, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %38)
  br label %40

40:                                               ; preds = %16, %17, %23, %27, %31, %37
  %41 = getelementptr inbounds %struct.TermMatch, %struct.TermMatch* %0, i64 3
  %42 = icmp eq %struct.TermMatch* %41, %1
  br i1 %42, label %45, label %43

43:                                               ; preds = %40
  %44 = bitcast %struct.TermMatch* %9 to i8*
  br label %46

45:                                               ; preds = %66, %40
  ret void

46:                                               ; preds = %43, %66
  %47 = phi %struct.TermMatch* [ %41, %43 ], [ %67, %66 ]
  %48 = phi %struct.TermMatch* [ %10, %43 ], [ %47, %66 ]
  %49 = load i1 (%struct.TermMatch*, %struct.TermMatch*)*, i1 (%struct.TermMatch*, %struct.TermMatch*)** %2, align 8
  %50 = call zeroext i1 %49(%struct.TermMatch* dereferenceable(24) %47, %struct.TermMatch* dereferenceable(24) %48) #12
  br i1 %50, label %51, label %66

51:                                               ; preds = %46
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %44) #12
  %52 = bitcast %struct.TermMatch* %47 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %44, i8* align 8 %52, i64 24, i1 false)
  br label %53

53:                                               ; preds = %59, %51
  %54 = phi %struct.TermMatch* [ %47, %51 ], [ %55, %59 ]
  %55 = phi %struct.TermMatch* [ %48, %51 ], [ %61, %59 ]
  %56 = bitcast %struct.TermMatch* %54 to i8*
  %57 = bitcast %struct.TermMatch* %55 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %56, i8* align 8 %57, i64 24, i1 false)
  %58 = icmp eq %struct.TermMatch* %55, %0
  br i1 %58, label %63, label %59

59:                                               ; preds = %53
  %60 = load i1 (%struct.TermMatch*, %struct.TermMatch*)*, i1 (%struct.TermMatch*, %struct.TermMatch*)** %2, align 8
  %61 = getelementptr inbounds %struct.TermMatch, %struct.TermMatch* %55, i64 -1
  %62 = call zeroext i1 %60(%struct.TermMatch* nonnull dereferenceable(24) %9, %struct.TermMatch* dereferenceable(24) %61) #12
  br i1 %62, label %53, label %63

63:                                               ; preds = %53, %59
  %64 = phi %struct.TermMatch* [ %55, %59 ], [ %0, %53 ]
  %65 = bitcast %struct.TermMatch* %64 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %65, i8* nonnull align 8 %44, i64 24, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %44) #12
  br label %66

66:                                               ; preds = %63, %46
  %67 = getelementptr inbounds %struct.TermMatch, %struct.TermMatch* %47, i64 1
  %68 = icmp eq %struct.TermMatch* %67, %1
  br i1 %68, label %45, label %46
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRPFbRK9TermMatchS3_EPS1_EEbT0_S8_T_(%struct.TermMatch*, %struct.TermMatch*, i1 (%struct.TermMatch*, %struct.TermMatch*)** dereferenceable(8)) local_unnamed_addr #0 comdat {
  %4 = alloca %struct.TermMatch, align 8
  %5 = alloca %struct.TermMatch, align 8
  %6 = alloca %struct.TermMatch, align 8
  %7 = alloca %struct.TermMatch, align 8
  %8 = alloca %struct.TermMatch, align 8
  %9 = alloca %struct.TermMatch, align 8
  %10 = alloca %struct.TermMatch, align 8
  %11 = alloca %struct.TermMatch, align 8
  %12 = alloca %struct.TermMatch, align 8
  %13 = alloca %struct.TermMatch, align 8
  %14 = alloca %struct.TermMatch, align 8
  %15 = alloca %struct.TermMatch, align 8
  %16 = alloca %struct.TermMatch, align 8
  %17 = alloca %struct.TermMatch, align 8
  %18 = alloca %struct.TermMatch, align 8
  %19 = alloca %struct.TermMatch, align 8
  %20 = ptrtoint %struct.TermMatch* %1 to i64
  %21 = ptrtoint %struct.TermMatch* %0 to i64
  %22 = sub i64 %20, %21
  %23 = sdiv exact i64 %22, 24
  switch i64 %23, label %95 [
    i64 0, label %161
    i64 1, label %161
    i64 2, label %24
    i64 3, label %32
    i64 4, label %63
    i64 5, label %68
  ]

24:                                               ; preds = %3
  %25 = load i1 (%struct.TermMatch*, %struct.TermMatch*)*, i1 (%struct.TermMatch*, %struct.TermMatch*)** %2, align 8
  %26 = getelementptr inbounds %struct.TermMatch, %struct.TermMatch* %1, i64 -1
  %27 = tail call zeroext i1 %25(%struct.TermMatch* dereferenceable(24) %26, %struct.TermMatch* dereferenceable(24) %0) #12
  br i1 %27, label %28, label %161

28:                                               ; preds = %24
  %29 = bitcast %struct.TermMatch* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29)
  %30 = bitcast %struct.TermMatch* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %29, i8* align 8 %30, i64 24, i1 false) #12
  %31 = bitcast %struct.TermMatch* %26 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %30, i8* align 8 %31, i64 24, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %31, i8* nonnull align 8 %29, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29)
  br label %161

32:                                               ; preds = %3
  %33 = getelementptr inbounds %struct.TermMatch, %struct.TermMatch* %0, i64 1
  %34 = getelementptr inbounds %struct.TermMatch, %struct.TermMatch* %1, i64 -1
  %35 = load i1 (%struct.TermMatch*, %struct.TermMatch*)*, i1 (%struct.TermMatch*, %struct.TermMatch*)** %2, align 8
  %36 = tail call zeroext i1 %35(%struct.TermMatch* dereferenceable(24) %33, %struct.TermMatch* dereferenceable(24) %0) #12
  %37 = load i1 (%struct.TermMatch*, %struct.TermMatch*)*, i1 (%struct.TermMatch*, %struct.TermMatch*)** %2, align 8
  %38 = tail call zeroext i1 %37(%struct.TermMatch* dereferenceable(24) %34, %struct.TermMatch* dereferenceable(24) %33) #12
  br i1 %36, label %49, label %39

39:                                               ; preds = %32
  br i1 %38, label %40, label %161

40:                                               ; preds = %39
  %41 = bitcast %struct.TermMatch* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %41)
  %42 = bitcast %struct.TermMatch* %33 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %41, i8* align 8 %42, i64 24, i1 false) #12
  %43 = bitcast %struct.TermMatch* %34 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 24, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %43, i8* nonnull align 8 %41, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %41)
  %44 = load i1 (%struct.TermMatch*, %struct.TermMatch*)*, i1 (%struct.TermMatch*, %struct.TermMatch*)** %2, align 8
  %45 = tail call zeroext i1 %44(%struct.TermMatch* dereferenceable(24) %33, %struct.TermMatch* dereferenceable(24) %0) #12
  br i1 %45, label %46, label %161

46:                                               ; preds = %40
  %47 = bitcast %struct.TermMatch* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %47)
  %48 = bitcast %struct.TermMatch* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %47, i8* align 8 %48, i64 24, i1 false) #12
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %48, i8* align 8 %42, i64 24, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* nonnull align 8 %47, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %47)
  br label %161

49:                                               ; preds = %32
  br i1 %38, label %50, label %54

50:                                               ; preds = %49
  %51 = bitcast %struct.TermMatch* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %51)
  %52 = bitcast %struct.TermMatch* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %51, i8* align 8 %52, i64 24, i1 false) #12
  %53 = bitcast %struct.TermMatch* %34 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %52, i8* align 8 %53, i64 24, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %53, i8* nonnull align 8 %51, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %51)
  br label %161

54:                                               ; preds = %49
  %55 = bitcast %struct.TermMatch* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %55)
  %56 = bitcast %struct.TermMatch* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %55, i8* align 8 %56, i64 24, i1 false) #12
  %57 = bitcast %struct.TermMatch* %33 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %56, i8* align 8 %57, i64 24, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %57, i8* nonnull align 8 %55, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %55)
  %58 = load i1 (%struct.TermMatch*, %struct.TermMatch*)*, i1 (%struct.TermMatch*, %struct.TermMatch*)** %2, align 8
  %59 = tail call zeroext i1 %58(%struct.TermMatch* dereferenceable(24) %34, %struct.TermMatch* dereferenceable(24) %33) #12
  br i1 %59, label %60, label %161

60:                                               ; preds = %54
  %61 = bitcast %struct.TermMatch* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %61)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %61, i8* align 8 %57, i64 24, i1 false) #12
  %62 = bitcast %struct.TermMatch* %34 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %57, i8* align 8 %62, i64 24, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %62, i8* nonnull align 8 %61, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %61)
  br label %161

63:                                               ; preds = %3
  %64 = getelementptr inbounds %struct.TermMatch, %struct.TermMatch* %0, i64 1
  %65 = getelementptr inbounds %struct.TermMatch, %struct.TermMatch* %0, i64 2
  %66 = getelementptr inbounds %struct.TermMatch, %struct.TermMatch* %1, i64 -1
  %67 = tail call i32 @_ZNSt3__17__sort4IRPFbRK9TermMatchS3_EPS1_EEjT0_S8_S8_S8_T_(%struct.TermMatch* %0, %struct.TermMatch* %64, %struct.TermMatch* %65, %struct.TermMatch* %66, i1 (%struct.TermMatch*, %struct.TermMatch*)** dereferenceable(8) %2)
  br label %161

68:                                               ; preds = %3
  %69 = getelementptr inbounds %struct.TermMatch, %struct.TermMatch* %0, i64 1
  %70 = getelementptr inbounds %struct.TermMatch, %struct.TermMatch* %0, i64 2
  %71 = getelementptr inbounds %struct.TermMatch, %struct.TermMatch* %0, i64 3
  %72 = getelementptr inbounds %struct.TermMatch, %struct.TermMatch* %1, i64 -1
  %73 = tail call i32 @_ZNSt3__17__sort4IRPFbRK9TermMatchS3_EPS1_EEjT0_S8_S8_S8_T_(%struct.TermMatch* %0, %struct.TermMatch* %69, %struct.TermMatch* %70, %struct.TermMatch* %71, i1 (%struct.TermMatch*, %struct.TermMatch*)** dereferenceable(8) %2) #12
  %74 = load i1 (%struct.TermMatch*, %struct.TermMatch*)*, i1 (%struct.TermMatch*, %struct.TermMatch*)** %2, align 8
  %75 = tail call zeroext i1 %74(%struct.TermMatch* dereferenceable(24) %72, %struct.TermMatch* dereferenceable(24) %71) #12
  br i1 %75, label %76, label %161

76:                                               ; preds = %68
  %77 = bitcast %struct.TermMatch* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %77)
  %78 = bitcast %struct.TermMatch* %71 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %77, i8* align 8 %78, i64 24, i1 false) #12
  %79 = bitcast %struct.TermMatch* %72 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %78, i8* align 8 %79, i64 24, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %79, i8* nonnull align 8 %77, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %77)
  %80 = load i1 (%struct.TermMatch*, %struct.TermMatch*)*, i1 (%struct.TermMatch*, %struct.TermMatch*)** %2, align 8
  %81 = tail call zeroext i1 %80(%struct.TermMatch* dereferenceable(24) %71, %struct.TermMatch* dereferenceable(24) %70) #12
  br i1 %81, label %82, label %161

82:                                               ; preds = %76
  %83 = bitcast %struct.TermMatch* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %83)
  %84 = bitcast %struct.TermMatch* %70 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %83, i8* align 8 %84, i64 24, i1 false) #12
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %84, i8* align 8 %78, i64 24, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %78, i8* nonnull align 8 %83, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %83)
  %85 = load i1 (%struct.TermMatch*, %struct.TermMatch*)*, i1 (%struct.TermMatch*, %struct.TermMatch*)** %2, align 8
  %86 = tail call zeroext i1 %85(%struct.TermMatch* dereferenceable(24) %70, %struct.TermMatch* dereferenceable(24) %69) #12
  br i1 %86, label %87, label %161

87:                                               ; preds = %82
  %88 = bitcast %struct.TermMatch* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %88)
  %89 = bitcast %struct.TermMatch* %69 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %88, i8* align 8 %89, i64 24, i1 false) #12
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %89, i8* align 8 %84, i64 24, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %84, i8* nonnull align 8 %88, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %88)
  %90 = load i1 (%struct.TermMatch*, %struct.TermMatch*)*, i1 (%struct.TermMatch*, %struct.TermMatch*)** %2, align 8
  %91 = tail call zeroext i1 %90(%struct.TermMatch* dereferenceable(24) %69, %struct.TermMatch* dereferenceable(24) %0) #12
  br i1 %91, label %92, label %161

92:                                               ; preds = %87
  %93 = bitcast %struct.TermMatch* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %93)
  %94 = bitcast %struct.TermMatch* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %93, i8* align 8 %94, i64 24, i1 false) #12
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %94, i8* align 8 %89, i64 24, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %89, i8* nonnull align 8 %93, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %93)
  br label %161

95:                                               ; preds = %3
  %96 = getelementptr inbounds %struct.TermMatch, %struct.TermMatch* %0, i64 2
  %97 = getelementptr inbounds %struct.TermMatch, %struct.TermMatch* %0, i64 1
  %98 = load i1 (%struct.TermMatch*, %struct.TermMatch*)*, i1 (%struct.TermMatch*, %struct.TermMatch*)** %2, align 8
  %99 = tail call zeroext i1 %98(%struct.TermMatch* dereferenceable(24) %97, %struct.TermMatch* dereferenceable(24) %0) #12
  %100 = load i1 (%struct.TermMatch*, %struct.TermMatch*)*, i1 (%struct.TermMatch*, %struct.TermMatch*)** %2, align 8
  %101 = tail call zeroext i1 %100(%struct.TermMatch* dereferenceable(24) %96, %struct.TermMatch* dereferenceable(24) %97) #12
  br i1 %99, label %112, label %102

102:                                              ; preds = %95
  br i1 %101, label %103, label %126

103:                                              ; preds = %102
  %104 = bitcast %struct.TermMatch* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %104)
  %105 = bitcast %struct.TermMatch* %97 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %104, i8* align 8 %105, i64 24, i1 false) #12
  %106 = bitcast %struct.TermMatch* %96 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %105, i8* align 8 %106, i64 24, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %106, i8* nonnull align 8 %104, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %104)
  %107 = load i1 (%struct.TermMatch*, %struct.TermMatch*)*, i1 (%struct.TermMatch*, %struct.TermMatch*)** %2, align 8
  %108 = tail call zeroext i1 %107(%struct.TermMatch* dereferenceable(24) %97, %struct.TermMatch* dereferenceable(24) %0) #12
  br i1 %108, label %109, label %126

109:                                              ; preds = %103
  %110 = bitcast %struct.TermMatch* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %110)
  %111 = bitcast %struct.TermMatch* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %110, i8* align 8 %111, i64 24, i1 false) #12
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %111, i8* align 8 %105, i64 24, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %105, i8* nonnull align 8 %110, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %110)
  br label %126

112:                                              ; preds = %95
  br i1 %101, label %113, label %117

113:                                              ; preds = %112
  %114 = bitcast %struct.TermMatch* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %114)
  %115 = bitcast %struct.TermMatch* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %114, i8* align 8 %115, i64 24, i1 false) #12
  %116 = bitcast %struct.TermMatch* %96 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %115, i8* align 8 %116, i64 24, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %116, i8* nonnull align 8 %114, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %114)
  br label %126

117:                                              ; preds = %112
  %118 = bitcast %struct.TermMatch* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %118)
  %119 = bitcast %struct.TermMatch* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %118, i8* align 8 %119, i64 24, i1 false) #12
  %120 = bitcast %struct.TermMatch* %97 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %119, i8* align 8 %120, i64 24, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %120, i8* nonnull align 8 %118, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %118)
  %121 = load i1 (%struct.TermMatch*, %struct.TermMatch*)*, i1 (%struct.TermMatch*, %struct.TermMatch*)** %2, align 8
  %122 = tail call zeroext i1 %121(%struct.TermMatch* dereferenceable(24) %96, %struct.TermMatch* dereferenceable(24) %97) #12
  br i1 %122, label %123, label %126

123:                                              ; preds = %117
  %124 = bitcast %struct.TermMatch* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %124)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %124, i8* align 8 %120, i64 24, i1 false) #12
  %125 = bitcast %struct.TermMatch* %96 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %120, i8* align 8 %125, i64 24, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %125, i8* nonnull align 8 %124, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %124)
  br label %126

126:                                              ; preds = %102, %103, %109, %113, %117, %123
  %127 = getelementptr inbounds %struct.TermMatch, %struct.TermMatch* %0, i64 3
  %128 = icmp eq %struct.TermMatch* %127, %1
  br i1 %128, label %161, label %129

129:                                              ; preds = %126
  %130 = bitcast %struct.TermMatch* %19 to i8*
  br label %131

131:                                              ; preds = %129, %154
  %132 = phi %struct.TermMatch* [ %127, %129 ], [ %156, %154 ]
  %133 = phi i32 [ 0, %129 ], [ %155, %154 ]
  %134 = phi %struct.TermMatch* [ %96, %129 ], [ %132, %154 ]
  %135 = load i1 (%struct.TermMatch*, %struct.TermMatch*)*, i1 (%struct.TermMatch*, %struct.TermMatch*)** %2, align 8
  %136 = call zeroext i1 %135(%struct.TermMatch* dereferenceable(24) %132, %struct.TermMatch* dereferenceable(24) %134) #12
  br i1 %136, label %137, label %154

137:                                              ; preds = %131
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %130) #12
  %138 = bitcast %struct.TermMatch* %132 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %130, i8* align 8 %138, i64 24, i1 false)
  br label %139

139:                                              ; preds = %145, %137
  %140 = phi %struct.TermMatch* [ %132, %137 ], [ %141, %145 ]
  %141 = phi %struct.TermMatch* [ %134, %137 ], [ %147, %145 ]
  %142 = bitcast %struct.TermMatch* %140 to i8*
  %143 = bitcast %struct.TermMatch* %141 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %142, i8* align 8 %143, i64 24, i1 false)
  %144 = icmp eq %struct.TermMatch* %141, %0
  br i1 %144, label %149, label %145

145:                                              ; preds = %139
  %146 = load i1 (%struct.TermMatch*, %struct.TermMatch*)*, i1 (%struct.TermMatch*, %struct.TermMatch*)** %2, align 8
  %147 = getelementptr inbounds %struct.TermMatch, %struct.TermMatch* %141, i64 -1
  %148 = call zeroext i1 %146(%struct.TermMatch* nonnull dereferenceable(24) %19, %struct.TermMatch* dereferenceable(24) %147) #12
  br i1 %148, label %139, label %149

149:                                              ; preds = %139, %145
  %150 = phi %struct.TermMatch* [ %141, %145 ], [ %0, %139 ]
  %151 = bitcast %struct.TermMatch* %150 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %151, i8* nonnull align 8 %130, i64 24, i1 false)
  %152 = add i32 %133, 1
  %153 = icmp eq i32 %152, 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %130) #12
  br i1 %153, label %158, label %154

154:                                              ; preds = %149, %131
  %155 = phi i32 [ %152, %149 ], [ %133, %131 ]
  %156 = getelementptr inbounds %struct.TermMatch, %struct.TermMatch* %132, i64 1
  %157 = icmp eq %struct.TermMatch* %156, %1
  br i1 %157, label %161, label %131

158:                                              ; preds = %149
  %159 = getelementptr inbounds %struct.TermMatch, %struct.TermMatch* %132, i64 1
  %160 = icmp eq %struct.TermMatch* %159, %1
  br label %161

161:                                              ; preds = %154, %158, %126, %92, %87, %82, %76, %68, %60, %54, %50, %46, %40, %39, %24, %28, %3, %3, %63
  %162 = phi i1 [ true, %63 ], [ true, %3 ], [ true, %3 ], [ true, %28 ], [ true, %24 ], [ true, %39 ], [ true, %40 ], [ true, %46 ], [ true, %50 ], [ true, %54 ], [ true, %60 ], [ true, %68 ], [ true, %76 ], [ true, %82 ], [ true, %87 ], [ true, %92 ], [ true, %126 ], [ %160, %158 ], [ true, %154 ]
  ret i1 %162
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorI9TermMatchNS_9allocatorIS2_EEEEEaSERKS2_(%"class.std::__1::back_insert_iterator"*, %struct.TermMatch* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %0, i64 0, i32 0
  %4 = load %"class.std::__1::vector.6"*, %"class.std::__1::vector.6"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %4, i64 0, i32 0, i32 1
  %6 = load %struct.TermMatch*, %struct.TermMatch** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %8 = load %struct.TermMatch*, %struct.TermMatch** %7, align 8
  %9 = icmp eq %struct.TermMatch* %6, %8
  %10 = ptrtoint %struct.TermMatch* %8 to i64
  br i1 %9, label %17, label %11

11:                                               ; preds = %2
  %12 = bitcast %struct.TermMatch* %6 to i8*
  %13 = bitcast %struct.TermMatch* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 24, i1 false) #12
  %14 = getelementptr inbounds %struct.TermMatch, %struct.TermMatch* %6, i64 1
  %15 = ptrtoint %struct.TermMatch* %14 to i64
  %16 = bitcast %struct.TermMatch** %5 to i64*
  store i64 %15, i64* %16, align 8
  br label %71

17:                                               ; preds = %2
  %18 = ptrtoint %struct.TermMatch* %6 to i64
  %19 = bitcast %struct.TermMatch** %5 to i64*
  %20 = bitcast %"class.std::__1::vector.6"* %4 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %18, %21
  %23 = sdiv exact i64 %22, 24
  %24 = add nsw i64 %23, 1
  %25 = icmp ugt i64 %24, 768614336404564650
  br i1 %25, label %26, label %28

26:                                               ; preds = %17
  %27 = bitcast %"class.std::__1::vector.6"* %4 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %27) #14
  unreachable

28:                                               ; preds = %17
  %29 = bitcast %struct.TermMatch** %7 to i64*
  %30 = sub i64 %10, %21
  %31 = sdiv exact i64 %30, 24
  %32 = icmp ult i64 %31, 384307168202282325
  br i1 %32, label %33, label %38

33:                                               ; preds = %28
  %34 = shl nsw i64 %31, 1
  %35 = icmp ult i64 %34, %24
  %36 = select i1 %35, i64 %24, i64 %34
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %43, label %38

38:                                               ; preds = %33, %28
  %39 = phi i64 [ %36, %33 ], [ 768614336404564650, %28 ]
  %40 = mul i64 %39, 24
  %41 = tail call i8* @_Znwm(i64 %40) #13
  %42 = bitcast i8* %41 to %struct.TermMatch*
  br label %43

43:                                               ; preds = %38, %33
  %44 = phi i64 [ %39, %38 ], [ 0, %33 ]
  %45 = phi %struct.TermMatch* [ %42, %38 ], [ null, %33 ]
  %46 = getelementptr inbounds %struct.TermMatch, %struct.TermMatch* %45, i64 %23
  %47 = getelementptr inbounds %struct.TermMatch, %struct.TermMatch* %45, i64 %44
  %48 = ptrtoint %struct.TermMatch* %47 to i64
  %49 = bitcast %struct.TermMatch* %46 to i8*
  %50 = bitcast %struct.TermMatch* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %49, i8* align 8 %50, i64 24, i1 false) #12
  %51 = getelementptr inbounds %struct.TermMatch, %struct.TermMatch* %46, i64 1
  %52 = ptrtoint %struct.TermMatch* %51 to i64
  %53 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %4, i64 0, i32 0, i32 0
  %54 = load %struct.TermMatch*, %struct.TermMatch** %53, align 8
  %55 = load i64, i64* %19, align 8
  %56 = ptrtoint %struct.TermMatch* %54 to i64
  %57 = sub i64 %55, %56
  %58 = sdiv exact i64 %57, -24
  %59 = getelementptr inbounds %struct.TermMatch, %struct.TermMatch* %46, i64 %58
  %60 = ptrtoint %struct.TermMatch* %59 to i64
  %61 = icmp sgt i64 %57, 0
  br i1 %61, label %62, label %66

62:                                               ; preds = %43
  %63 = bitcast %struct.TermMatch* %59 to i8*
  %64 = bitcast %struct.TermMatch* %54 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %63, i8* align 8 %64, i64 %57, i1 false) #12
  %65 = load %struct.TermMatch*, %struct.TermMatch** %53, align 8
  br label %66

66:                                               ; preds = %62, %43
  %67 = phi %struct.TermMatch* [ %54, %43 ], [ %65, %62 ]
  store i64 %60, i64* %20, align 8
  store i64 %52, i64* %19, align 8
  store i64 %48, i64* %29, align 8
  %68 = icmp eq %struct.TermMatch* %67, null
  br i1 %68, label %71, label %69

69:                                               ; preds = %66
  %70 = bitcast %struct.TermMatch* %67 to i8*
  tail call void @_ZdlPv(i8* %70) #13
  br label %71

71:                                               ; preds = %11, %66, %69
  ret %"class.std::__1::back_insert_iterator"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9flat_treeINSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEENS_8identityENS2_4lessIvEENS2_6vectorIS8_NS6_IS8_EEEEE15sort_and_uniqueENS2_11__wrap_iterIPS8_EESI_(%"class.base::internal::flat_tree"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"struct.base::internal::flat_tree<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >, base::identity, std::__1::less<void>, std::__1::vector<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >, std::__1::allocator<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> > > > >::value_compare", align 1
  %5 = ptrtoint %"class.std::__1::basic_string"* %2 to i64
  %6 = getelementptr inbounds %"struct.base::internal::flat_tree<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >, base::identity, std::__1::less<void>, std::__1::vector<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >, std::__1::allocator<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> > > > >::value_compare", %"struct.base::internal::flat_tree<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >, base::identity, std::__1::less<void>, std::__1::vector<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >, std::__1::allocator<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> > > > >::value_compare"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6)
  %7 = ptrtoint %"class.std::__1::basic_string"* %1 to i64
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 24
  %10 = icmp sgt i64 %8, 0
  br i1 %10, label %11, label %22

11:                                               ; preds = %3
  %12 = icmp slt i64 %9, 384307168202282325
  %13 = select i1 %12, i64 %9, i64 384307168202282325
  br label %14

14:                                               ; preds = %19, %11
  %15 = phi i64 [ %20, %19 ], [ %13, %11 ]
  %16 = mul i64 %15, 24
  %17 = tail call noalias i8* @_ZnwmRKSt9nothrow_t(i64 %16, %"struct.std::nothrow_t"* nonnull dereferenceable(1) @_ZSt7nothrow) #12
  %18 = icmp eq i8* %17, null
  br i1 %18, label %19, label %23

19:                                               ; preds = %14
  %20 = lshr i64 %15, 1
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %22, label %14

22:                                               ; preds = %19, %3
  call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS1_8identityENS_4lessIvEENS_6vectorIS9_NS7_IS9_EEEEE13value_compareENS_11__wrap_iterIPS9_EEEEvT0_SM_T_NS_15iterator_traitsISM_E15difference_typeEPNSP_10value_typeEl(%"class.std::__1::basic_string"* %1, %"class.std::__1::basic_string"* %2, %"struct.base::internal::flat_tree<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >, base::identity, std::__1::less<void>, std::__1::vector<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >, std::__1::allocator<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> > > > >::value_compare"* nonnull dereferenceable(1) %4, i64 %9, %"class.std::__1::basic_string"* null, i64 0) #12
  br label %25

23:                                               ; preds = %14
  %24 = bitcast i8* %17 to %"class.std::__1::basic_string"*
  call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS1_8identityENS_4lessIvEENS_6vectorIS9_NS7_IS9_EEEEE13value_compareENS_11__wrap_iterIPS9_EEEEvT0_SM_T_NS_15iterator_traitsISM_E15difference_typeEPNSP_10value_typeEl(%"class.std::__1::basic_string"* %1, %"class.std::__1::basic_string"* %2, %"struct.base::internal::flat_tree<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >, base::identity, std::__1::less<void>, std::__1::vector<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >, std::__1::allocator<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> > > > >::value_compare"* nonnull dereferenceable(1) %4, i64 %9, %"class.std::__1::basic_string"* nonnull %24, i64 %15) #12
  call void @_ZdlPv(i8* nonnull %17) #13
  br label %25

25:                                               ; preds = %22, %23
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6)
  %26 = call %"class.std::__1::basic_string"* @_ZNSt3__16uniqueINS_11__wrap_iterIPNS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEEN4base8internal9NotFnImplINSB_9flat_treeIS7_NSA_8identityENS_4lessIvEENS_6vectorIS7_NS5_IS7_EEEEE13value_compareEEEEET_SN_SN_T0_(%"class.std::__1::basic_string"* %1, %"class.std::__1::basic_string"* %2)
  %27 = icmp eq %"class.std::__1::basic_string"* %26, %2
  br i1 %27, label %70, label %28

28:                                               ; preds = %25
  %29 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %0, i64 0, i32 0, i32 0, i32 1
  %30 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %29, align 8
  %31 = icmp eq %"class.std::__1::basic_string"* %30, %2
  br i1 %31, label %53, label %32

32:                                               ; preds = %28, %42
  %33 = phi %"class.std::__1::basic_string"* [ %49, %42 ], [ %26, %28 ]
  %34 = phi %"class.std::__1::basic_string"* [ %48, %42 ], [ %2, %28 ]
  %35 = bitcast %"class.std::__1::basic_string"* %33 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %36 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %35, i64 0, i32 1, i32 1
  %37 = load i8, i8* %36, align 1
  %38 = icmp slt i8 %37, 0
  br i1 %38, label %39, label %42

39:                                               ; preds = %32
  %40 = bitcast %"class.std::__1::basic_string"* %33 to i8**
  %41 = load i8*, i8** %40, align 8
  call void @_ZdlPv(i8* %41) #13
  br label %42

42:                                               ; preds = %39, %32
  %43 = bitcast %"class.std::__1::basic_string"* %33 to i8*
  %44 = bitcast %"class.std::__1::basic_string"* %34 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %43, i8* align 8 %44, i64 24, i1 false) #12
  %45 = bitcast %"class.std::__1::basic_string"* %34 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %45, i64 0, i32 1, i32 1
  store i8 0, i8* %46, align 1
  %47 = bitcast %"class.std::__1::basic_string"* %34 to i16*
  store i16 0, i16* %47, align 2
  %48 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 1
  %49 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 1
  %50 = icmp eq %"class.std::__1::basic_string"* %48, %30
  br i1 %50, label %51, label %32

51:                                               ; preds = %42
  %52 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %29, align 8
  br label %53

53:                                               ; preds = %51, %28
  %54 = phi %"class.std::__1::basic_string"* [ %2, %28 ], [ %52, %51 ]
  %55 = phi %"class.std::__1::basic_string"* [ %26, %28 ], [ %49, %51 ]
  %56 = icmp eq %"class.std::__1::basic_string"* %54, %55
  br i1 %56, label %69, label %57

57:                                               ; preds = %53, %67
  %58 = phi %"class.std::__1::basic_string"* [ %59, %67 ], [ %54, %53 ]
  %59 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %58, i64 -1
  %60 = bitcast %"class.std::__1::basic_string"* %59 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %61 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %60, i64 0, i32 1, i32 1
  %62 = load i8, i8* %61, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %67

64:                                               ; preds = %57
  %65 = bitcast %"class.std::__1::basic_string"* %59 to i8**
  %66 = load i8*, i8** %65, align 8
  call void @_ZdlPv(i8* %66) #13
  br label %67

67:                                               ; preds = %64, %57
  %68 = icmp eq %"class.std::__1::basic_string"* %59, %55
  br i1 %68, label %69, label %57

69:                                               ; preds = %67, %53
  store %"class.std::__1::basic_string"* %55, %"class.std::__1::basic_string"** %29, align 8
  br label %70

70:                                               ; preds = %25, %69
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_string"* @_ZNSt3__16uniqueINS_11__wrap_iterIPNS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEEN4base8internal9NotFnImplINSB_9flat_treeIS7_NSA_8identityENS_4lessIvEENS_6vectorIS7_NS5_IS7_EEEEE13value_compareEEEEET_SN_SN_T0_(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::basic_string"* %0, %1
  br i1 %3, label %61, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 1
  %6 = icmp eq %"class.std::__1::basic_string"* %5, %1
  br i1 %6, label %59, label %7

7:                                                ; preds = %4
  %8 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %8, i64 0, i32 1, i32 1
  %10 = load i8, i8* %9, align 1
  br label %11

11:                                               ; preds = %56, %7
  %12 = phi i8 [ %17, %56 ], [ %10, %7 ]
  %13 = phi %"class.std::__1::basic_string"* [ %57, %56 ], [ %5, %7 ]
  %14 = phi %"class.std::__1::basic_string"* [ %13, %56 ], [ %0, %7 ]
  %15 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %15, i64 0, i32 1, i32 1
  %17 = load i8, i8* %16, align 1
  %18 = icmp slt i8 %17, 0
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = zext i8 %17 to i64
  %22 = select i1 %18, i64 %20, i64 %21
  %23 = icmp slt i8 %12, 0
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %25 = load i64, i64* %24, align 8
  %26 = zext i8 %12 to i64
  %27 = select i1 %23, i64 %25, i64 %26
  %28 = icmp ult i64 %22, %27
  %29 = select i1 %28, i64 %22, i64 %27
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %54, label %31

31:                                               ; preds = %11
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load i16*, i16** %32, align 8
  %34 = bitcast %"class.std::__1::basic_string"* %14 to i16*
  %35 = select i1 %23, i16* %33, i16* %34
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i16*, i16** %36, align 8
  %38 = bitcast %"class.std::__1::basic_string"* %13 to i16*
  %39 = select i1 %18, i16* %37, i16* %38
  br label %40

40:                                               ; preds = %49, %31
  %41 = phi i64 [ %50, %49 ], [ %29, %31 ]
  %42 = phi i16* [ %52, %49 ], [ %39, %31 ]
  %43 = phi i16* [ %51, %49 ], [ %35, %31 ]
  %44 = load i16, i16* %43, align 2
  %45 = load i16, i16* %42, align 2
  %46 = icmp ult i16 %44, %45
  br i1 %46, label %56, label %47

47:                                               ; preds = %40
  %48 = icmp ult i16 %45, %44
  br i1 %48, label %61, label %49

49:                                               ; preds = %47
  %50 = add i64 %41, -1
  %51 = getelementptr inbounds i16, i16* %43, i64 1
  %52 = getelementptr inbounds i16, i16* %42, i64 1
  %53 = icmp eq i64 %50, 0
  br i1 %53, label %54, label %40

54:                                               ; preds = %49, %11
  %55 = icmp ult i64 %27, %22
  br i1 %55, label %56, label %61

56:                                               ; preds = %40, %54
  %57 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 1
  %58 = icmp eq %"class.std::__1::basic_string"* %57, %1
  br i1 %58, label %59, label %11

59:                                               ; preds = %56, %4
  %60 = ptrtoint %"class.std::__1::basic_string"* %1 to i64
  br label %144

61:                                               ; preds = %54, %47, %2
  %62 = phi %"class.std::__1::basic_string"* [ %0, %2 ], [ %14, %47 ], [ %14, %54 ]
  %63 = ptrtoint %"class.std::__1::basic_string"* %62 to i64
  %64 = icmp eq %"class.std::__1::basic_string"* %62, %1
  br i1 %64, label %144, label %65

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %62, i64 2
  %67 = icmp eq %"class.std::__1::basic_string"* %66, %1
  br i1 %67, label %140, label %68

68:                                               ; preds = %65
  %69 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %62, i64 1
  br label %70

70:                                               ; preds = %68, %133
  %71 = phi %"class.std::__1::basic_string"* [ %137, %133 ], [ %62, %68 ]
  %72 = phi %"class.std::__1::basic_string"* [ %135, %133 ], [ %66, %68 ]
  %73 = phi %"class.std::__1::basic_string"* [ %72, %133 ], [ %69, %68 ]
  %74 = phi i64 [ %134, %133 ], [ %63, %68 ]
  %75 = bitcast %"class.std::__1::basic_string"* %72 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %76 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %75, i64 0, i32 1, i32 1
  %77 = load i8, i8* %76, align 1
  %78 = icmp slt i8 %77, 0
  %79 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %73, i64 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %80 = load i64, i64* %79, align 8
  %81 = zext i8 %77 to i64
  %82 = select i1 %78, i64 %80, i64 %81
  %83 = inttoptr i64 %74 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %84 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %83, i64 0, i32 1, i32 1
  %85 = load i8, i8* %84, align 1
  %86 = icmp slt i8 %85, 0
  %87 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %71, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %88 = load i64, i64* %87, align 8
  %89 = zext i8 %85 to i64
  %90 = select i1 %86, i64 %88, i64 %89
  %91 = icmp ult i64 %82, %90
  %92 = select i1 %91, i64 %82, i64 %90
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %117, label %94

94:                                               ; preds = %70
  %95 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %71, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %96 = load i16*, i16** %95, align 8
  %97 = inttoptr i64 %74 to i16*
  %98 = select i1 %86, i16* %96, i16* %97
  %99 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %72, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %100 = load i16*, i16** %99, align 8
  %101 = bitcast %"class.std::__1::basic_string"* %72 to i16*
  %102 = select i1 %78, i16* %100, i16* %101
  br label %103

103:                                              ; preds = %112, %94
  %104 = phi i64 [ %113, %112 ], [ %92, %94 ]
  %105 = phi i16* [ %115, %112 ], [ %102, %94 ]
  %106 = phi i16* [ %114, %112 ], [ %98, %94 ]
  %107 = load i16, i16* %106, align 2
  %108 = load i16, i16* %105, align 2
  %109 = icmp ult i16 %107, %108
  br i1 %109, label %119, label %110

110:                                              ; preds = %103
  %111 = icmp ult i16 %108, %107
  br i1 %111, label %133, label %112

112:                                              ; preds = %110
  %113 = add i64 %104, -1
  %114 = getelementptr inbounds i16, i16* %106, i64 1
  %115 = getelementptr inbounds i16, i16* %105, i64 1
  %116 = icmp eq i64 %113, 0
  br i1 %116, label %117, label %103

117:                                              ; preds = %112, %70
  %118 = icmp ult i64 %90, %82
  br i1 %118, label %119, label %133

119:                                              ; preds = %103, %117
  %120 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %71, i64 1
  %121 = ptrtoint %"class.std::__1::basic_string"* %120 to i64
  %122 = bitcast %"class.std::__1::basic_string"* %120 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %123 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %122, i64 0, i32 1, i32 1
  %124 = load i8, i8* %123, align 1
  %125 = icmp slt i8 %124, 0
  br i1 %125, label %126, label %129

126:                                              ; preds = %119
  %127 = bitcast %"class.std::__1::basic_string"* %120 to i8**
  %128 = load i8*, i8** %127, align 8
  tail call void @_ZdlPv(i8* %128) #13
  br label %129

129:                                              ; preds = %119, %126
  %130 = bitcast %"class.std::__1::basic_string"* %120 to i8*
  %131 = bitcast %"class.std::__1::basic_string"* %72 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %130, i8* align 8 %131, i64 24, i1 false) #12
  store i8 0, i8* %76, align 1
  %132 = bitcast %"class.std::__1::basic_string"* %72 to i16*
  store i16 0, i16* %132, align 2
  br label %133

133:                                              ; preds = %110, %117, %129
  %134 = phi i64 [ %74, %117 ], [ %121, %129 ], [ %74, %110 ]
  %135 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %72, i64 1
  %136 = icmp eq %"class.std::__1::basic_string"* %135, %1
  %137 = inttoptr i64 %134 to %"class.std::__1::basic_string"*
  br i1 %136, label %138, label %70

138:                                              ; preds = %133
  %139 = inttoptr i64 %134 to %"class.std::__1::basic_string"*
  br label %140

140:                                              ; preds = %138, %65
  %141 = phi %"class.std::__1::basic_string"* [ %62, %65 ], [ %139, %138 ]
  %142 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %141, i64 1
  %143 = ptrtoint %"class.std::__1::basic_string"* %142 to i64
  br label %144

144:                                              ; preds = %61, %59, %140
  %145 = phi i64 [ %143, %140 ], [ %63, %61 ], [ %60, %59 ]
  %146 = inttoptr i64 %145 to %"class.std::__1::basic_string"*
  ret %"class.std::__1::basic_string"* %146
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS1_8identityENS_4lessIvEENS_6vectorIS9_NS7_IS9_EEEEE13value_compareENS_11__wrap_iterIPS9_EEEEvT0_SM_T_NS_15iterator_traitsISM_E15difference_typeEPNSP_10value_typeEl(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"struct.base::internal::flat_tree<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >, base::identity, std::__1::less<void>, std::__1::vector<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >, std::__1::allocator<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> > > > >::value_compare"* dereferenceable(1), i64, %"class.std::__1::basic_string"*, i64) local_unnamed_addr #0 comdat {
  switch i64 %3, label %65 [
    i64 0, label %93
    i64 1, label %93
    i64 2, label %7
  ]

7:                                                ; preds = %6
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 -1
  %9 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %9, i64 0, i32 1, i32 1
  %11 = load i8, i8* %10, align 1
  %12 = icmp slt i8 %11, 0
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = zext i8 %11 to i64
  %16 = select i1 %12, i64 %14, i64 %15
  %17 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %17, i64 0, i32 1, i32 1
  %19 = load i8, i8* %18, align 1
  %20 = icmp slt i8 %19, 0
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = zext i8 %19 to i64
  %24 = select i1 %20, i64 %22, i64 %23
  %25 = icmp ult i64 %16, %24
  %26 = select i1 %25, i64 %16, i64 %24
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %52, label %28

28:                                               ; preds = %7
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load i16*, i16** %29, align 8
  %31 = bitcast %"class.std::__1::basic_string"* %8 to i16*
  %32 = select i1 %20, i16* %30, i16* %31
  %33 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load i16*, i16** %33, align 8
  %35 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %36 = select i1 %12, i16* %34, i16* %35
  %37 = ptrtoint i16* %34 to i64
  br label %38

38:                                               ; preds = %47, %28
  %39 = phi i64 [ %48, %47 ], [ %26, %28 ]
  %40 = phi i16* [ %50, %47 ], [ %36, %28 ]
  %41 = phi i16* [ %49, %47 ], [ %32, %28 ]
  %42 = load i16, i16* %41, align 2
  %43 = load i16, i16* %40, align 2
  %44 = icmp ult i16 %42, %43
  br i1 %44, label %57, label %45

45:                                               ; preds = %38
  %46 = icmp ult i16 %43, %42
  br i1 %46, label %93, label %47

47:                                               ; preds = %45
  %48 = add i64 %39, -1
  %49 = getelementptr inbounds i16, i16* %41, i64 1
  %50 = getelementptr inbounds i16, i16* %40, i64 1
  %51 = icmp eq i64 %48, 0
  br i1 %51, label %52, label %38

52:                                               ; preds = %47, %7
  %53 = icmp ult i64 %24, %16
  br i1 %53, label %54, label %93

54:                                               ; preds = %52
  %55 = bitcast %"class.std::__1::basic_string"* %0 to i64*
  %56 = load i64, i64* %55, align 8
  br label %57

57:                                               ; preds = %38, %54
  %58 = phi i64 [ %56, %54 ], [ %37, %38 ]
  %59 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %60 = load i64, i64* %59, align 8
  %61 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %62 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %61, i8* align 8 %62, i64 24, i1 false) #12
  %63 = bitcast %"class.std::__1::basic_string"* %8 to i64*
  store i64 %58, i64* %63, align 8
  store i64 %14, i64* %21, align 8
  %64 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %60, i64* %64, align 8
  br label %93

65:                                               ; preds = %6
  %66 = icmp slt i64 %3, 1
  br i1 %66, label %67, label %68

67:                                               ; preds = %65
  tail call void @_ZNSt3__116__insertion_sortIRN4base8internal9flat_treeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS1_8identityENS_4lessIvEENS_6vectorIS9_NS7_IS9_EEEEE13value_compareENS_11__wrap_iterIPS9_EEEEvT0_SM_T_(%"class.std::__1::basic_string"* %0, %"class.std::__1::basic_string"* %1, %"struct.base::internal::flat_tree<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >, base::identity, std::__1::less<void>, std::__1::vector<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >, std::__1::allocator<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> > > > >::value_compare"* dereferenceable(1) %2)
  br label %93

68:                                               ; preds = %65
  %69 = lshr i64 %3, 1
  %70 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 %69
  %71 = icmp sgt i64 %3, %5
  br i1 %71, label %91, label %72

72:                                               ; preds = %68
  tail call void @_ZNSt3__118__stable_sort_moveIRN4base8internal9flat_treeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS1_8identityENS_4lessIvEENS_6vectorIS9_NS7_IS9_EEEEE13value_compareENS_11__wrap_iterIPS9_EEEEvT0_SM_T_NS_15iterator_traitsISM_E15difference_typeEPNSP_10value_typeE(%"class.std::__1::basic_string"* %0, %"class.std::__1::basic_string"* %70, %"struct.base::internal::flat_tree<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >, base::identity, std::__1::less<void>, std::__1::vector<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >, std::__1::allocator<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> > > > >::value_compare"* dereferenceable(1) %2, i64 %69, %"class.std::__1::basic_string"* %4)
  %73 = sub nsw i64 %3, %69
  %74 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 %69
  tail call void @_ZNSt3__118__stable_sort_moveIRN4base8internal9flat_treeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS1_8identityENS_4lessIvEENS_6vectorIS9_NS7_IS9_EEEEE13value_compareENS_11__wrap_iterIPS9_EEEEvT0_SM_T_NS_15iterator_traitsISM_E15difference_typeEPNSP_10value_typeE(%"class.std::__1::basic_string"* %70, %"class.std::__1::basic_string"* %1, %"struct.base::internal::flat_tree<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >, base::identity, std::__1::less<void>, std::__1::vector<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >, std::__1::allocator<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> > > > >::value_compare"* dereferenceable(1) %2, i64 %73, %"class.std::__1::basic_string"* %74)
  %75 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 %3
  tail call void @_ZNSt3__119__merge_move_assignIRN4base8internal9flat_treeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS1_8identityENS_4lessIvEENS_6vectorIS9_NS7_IS9_EEEEE13value_compareEPS9_SJ_NS_11__wrap_iterISJ_EEEEvT0_SM_T1_SN_T2_T_(%"class.std::__1::basic_string"* %4, %"class.std::__1::basic_string"* %74, %"class.std::__1::basic_string"* %74, %"class.std::__1::basic_string"* %75, %"class.std::__1::basic_string"* %0, %"struct.base::internal::flat_tree<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >, base::identity, std::__1::less<void>, std::__1::vector<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >, std::__1::allocator<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> > > > >::value_compare"* dereferenceable(1) %2)
  %76 = icmp eq %"class.std::__1::basic_string"* %4, null
  br i1 %76, label %93, label %77

77:                                               ; preds = %72, %87
  %78 = phi i64 [ %88, %87 ], [ 0, %72 ]
  %79 = phi %"class.std::__1::basic_string"* [ %89, %87 ], [ %4, %72 ]
  %80 = bitcast %"class.std::__1::basic_string"* %79 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %81 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %80, i64 0, i32 1, i32 1
  %82 = load i8, i8* %81, align 1
  %83 = icmp slt i8 %82, 0
  br i1 %83, label %84, label %87

84:                                               ; preds = %77
  %85 = bitcast %"class.std::__1::basic_string"* %79 to i8**
  %86 = load i8*, i8** %85, align 8
  tail call void @_ZdlPv(i8* %86) #13
  br label %87

87:                                               ; preds = %84, %77
  %88 = add nuw i64 %78, 1
  %89 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %79, i64 1
  %90 = icmp eq i64 %88, %3
  br i1 %90, label %93, label %77

91:                                               ; preds = %68
  tail call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS1_8identityENS_4lessIvEENS_6vectorIS9_NS7_IS9_EEEEE13value_compareENS_11__wrap_iterIPS9_EEEEvT0_SM_T_NS_15iterator_traitsISM_E15difference_typeEPNSP_10value_typeEl(%"class.std::__1::basic_string"* %0, %"class.std::__1::basic_string"* %70, %"struct.base::internal::flat_tree<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >, base::identity, std::__1::less<void>, std::__1::vector<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >, std::__1::allocator<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> > > > >::value_compare"* dereferenceable(1) %2, i64 %69, %"class.std::__1::basic_string"* %4, i64 %5)
  %92 = sub nsw i64 %3, %69
  tail call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS1_8identityENS_4lessIvEENS_6vectorIS9_NS7_IS9_EEEEE13value_compareENS_11__wrap_iterIPS9_EEEEvT0_SM_T_NS_15iterator_traitsISM_E15difference_typeEPNSP_10value_typeEl(%"class.std::__1::basic_string"* %70, %"class.std::__1::basic_string"* %1, %"struct.base::internal::flat_tree<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >, base::identity, std::__1::less<void>, std::__1::vector<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >, std::__1::allocator<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> > > > >::value_compare"* dereferenceable(1) %2, i64 %92, %"class.std::__1::basic_string"* %4, i64 %5)
  tail call void @_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS1_8identityENS_4lessIvEENS_6vectorIS9_NS7_IS9_EEEEE13value_compareENS_11__wrap_iterIPS9_EEEEvT0_SM_SM_T_NS_15iterator_traitsISM_E15difference_typeESQ_PNSP_10value_typeEl(%"class.std::__1::basic_string"* %0, %"class.std::__1::basic_string"* %70, %"class.std::__1::basic_string"* %1, %"struct.base::internal::flat_tree<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >, base::identity, std::__1::less<void>, std::__1::vector<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >, std::__1::allocator<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> > > > >::value_compare"* dereferenceable(1) %2, i64 %69, i64 %92, %"class.std::__1::basic_string"* %4, i64 %5)
  ret void

93:                                               ; preds = %45, %87, %72, %52, %57, %6, %6, %67
  ret void
}

; Function Attrs: nobuiltin nofree nounwind
declare noalias i8* @_ZnwmRKSt9nothrow_t(i64, %"struct.std::nothrow_t"* dereferenceable(1)) local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__116__insertion_sortIRN4base8internal9flat_treeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS1_8identityENS_4lessIvEENS_6vectorIS9_NS7_IS9_EEEEE13value_compareENS_11__wrap_iterIPS9_EEEEvT0_SM_T_(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"struct.base::internal::flat_tree<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >, base::identity, std::__1::less<void>, std::__1::vector<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >, std::__1::allocator<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> > > > >::value_compare"* dereferenceable(1)) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = icmp eq %"class.std::__1::basic_string"* %0, %1
  br i1 %5, label %88, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 1
  %8 = icmp eq %"class.std::__1::basic_string"* %7, %1
  br i1 %8, label %88, label %9

9:                                                ; preds = %6
  %10 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %13, i64 0, i32 1, i32 1
  %15 = bitcast %"class.std::__1::basic_string"* %4 to i16*
  br label %16

16:                                               ; preds = %9, %71
  %17 = phi %"class.std::__1::basic_string"* [ %7, %9 ], [ %73, %71 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #12
  %18 = bitcast %"class.std::__1::basic_string"* %17 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %10, i8* align 8 %18, i64 24, i1 false) #12
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 24, i1 false) #12
  %19 = icmp eq %"class.std::__1::basic_string"* %17, %0
  br i1 %19, label %62, label %20

20:                                               ; preds = %16, %83
  %21 = phi %"class.std::__1::basic_string"* [ %22, %83 ], [ %17, %16 ]
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %21, i64 -1
  %23 = bitcast %"class.std::__1::basic_string"* %22 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %23, i64 0, i32 1, i32 1
  %25 = load i8, i8* %24, align 1
  %26 = icmp slt i8 %25, 0
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %21, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %28 = load i64, i64* %27, align 8
  %29 = zext i8 %25 to i64
  %30 = select i1 %26, i64 %28, i64 %29
  %31 = load i8, i8* %14, align 1
  %32 = icmp slt i8 %31, 0
  %33 = load i64, i64* %12, align 8
  %34 = zext i8 %31 to i64
  %35 = select i1 %32, i64 %33, i64 %34
  %36 = icmp ult i64 %30, %35
  %37 = select i1 %36, i64 %30, i64 %35
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %60, label %39

39:                                               ; preds = %20
  %40 = load i16*, i16** %11, align 8
  %41 = select i1 %32, i16* %40, i16* %15
  %42 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load i16*, i16** %42, align 8
  %44 = bitcast %"class.std::__1::basic_string"* %22 to i16*
  %45 = select i1 %26, i16* %43, i16* %44
  br label %46

46:                                               ; preds = %55, %39
  %47 = phi i64 [ %56, %55 ], [ %37, %39 ]
  %48 = phi i16* [ %58, %55 ], [ %45, %39 ]
  %49 = phi i16* [ %57, %55 ], [ %41, %39 ]
  %50 = load i16, i16* %49, align 2
  %51 = load i16, i16* %48, align 2
  %52 = icmp ult i16 %50, %51
  br i1 %52, label %75, label %53

53:                                               ; preds = %46
  %54 = icmp ult i16 %51, %50
  br i1 %54, label %62, label %55

55:                                               ; preds = %53
  %56 = add i64 %47, -1
  %57 = getelementptr inbounds i16, i16* %49, i64 1
  %58 = getelementptr inbounds i16, i16* %48, i64 1
  %59 = icmp eq i64 %56, 0
  br i1 %59, label %60, label %46

60:                                               ; preds = %55, %20
  %61 = icmp ult i64 %35, %30
  br i1 %61, label %75, label %62

62:                                               ; preds = %60, %83, %53, %16
  %63 = phi %"class.std::__1::basic_string"* [ %0, %16 ], [ %21, %53 ], [ %21, %60 ], [ %0, %83 ]
  %64 = bitcast %"class.std::__1::basic_string"* %63 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %65 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %64, i64 0, i32 1, i32 1
  %66 = load i8, i8* %65, align 1
  %67 = icmp slt i8 %66, 0
  br i1 %67, label %68, label %71

68:                                               ; preds = %62
  %69 = bitcast %"class.std::__1::basic_string"* %63 to i8**
  %70 = load i8*, i8** %69, align 8
  tail call void @_ZdlPv(i8* %70) #13
  br label %71

71:                                               ; preds = %68, %62
  %72 = bitcast %"class.std::__1::basic_string"* %63 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %72, i8* nonnull align 8 %10, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #12
  %73 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 1
  %74 = icmp eq %"class.std::__1::basic_string"* %73, %1
  br i1 %74, label %88, label %16

75:                                               ; preds = %46, %60
  %76 = bitcast %"class.std::__1::basic_string"* %21 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %77 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %76, i64 0, i32 1, i32 1
  %78 = load i8, i8* %77, align 1
  %79 = icmp slt i8 %78, 0
  br i1 %79, label %80, label %83

80:                                               ; preds = %75
  %81 = bitcast %"class.std::__1::basic_string"* %21 to i8**
  %82 = load i8*, i8** %81, align 8
  tail call void @_ZdlPv(i8* %82) #13
  br label %83

83:                                               ; preds = %75, %80
  %84 = bitcast %"class.std::__1::basic_string"* %21 to i8*
  %85 = bitcast %"class.std::__1::basic_string"* %22 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %84, i8* align 8 %85, i64 24, i1 false) #12
  store i8 0, i8* %24, align 1
  %86 = bitcast %"class.std::__1::basic_string"* %22 to i16*
  store i16 0, i16* %86, align 2
  %87 = icmp eq %"class.std::__1::basic_string"* %22, %0
  br i1 %87, label %62, label %20

88:                                               ; preds = %71, %6, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__118__stable_sort_moveIRN4base8internal9flat_treeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS1_8identityENS_4lessIvEENS_6vectorIS9_NS7_IS9_EEEEE13value_compareENS_11__wrap_iterIPS9_EEEEvT0_SM_T_NS_15iterator_traitsISM_E15difference_typeEPNSP_10value_typeE(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"struct.base::internal::flat_tree<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >, base::identity, std::__1::less<void>, std::__1::vector<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >, std::__1::allocator<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> > > > >::value_compare"* dereferenceable(1), i64, %"class.std::__1::basic_string"*) local_unnamed_addr #0 comdat {
  switch i64 %3, label %67 [
    i64 0, label %161
    i64 1, label %6
    i64 2, label %9
  ]

6:                                                ; preds = %5
  %7 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %8 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 24, i1 false) #12
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 24, i1 false) #12
  br label %161

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 -1
  %11 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %11, i64 0, i32 1, i32 1
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = zext i8 %13 to i64
  %18 = select i1 %14, i64 %16, i64 %17
  %19 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %19, i64 0, i32 1, i32 1
  %21 = load i8, i8* %20, align 1
  %22 = icmp slt i8 %21, 0
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %24 = load i64, i64* %23, align 8
  %25 = zext i8 %21 to i64
  %26 = select i1 %22, i64 %24, i64 %25
  %27 = icmp ult i64 %18, %26
  %28 = select i1 %27, i64 %18, i64 %26
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %53, label %30

30:                                               ; preds = %9
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i16*, i16** %31, align 8
  %33 = bitcast %"class.std::__1::basic_string"* %10 to i16*
  %34 = select i1 %22, i16* %32, i16* %33
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load i16*, i16** %35, align 8
  %37 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %38 = select i1 %14, i16* %36, i16* %37
  br label %39

39:                                               ; preds = %48, %30
  %40 = phi i64 [ %49, %48 ], [ %28, %30 ]
  %41 = phi i16* [ %51, %48 ], [ %38, %30 ]
  %42 = phi i16* [ %50, %48 ], [ %34, %30 ]
  %43 = load i16, i16* %42, align 2
  %44 = load i16, i16* %41, align 2
  %45 = icmp ult i16 %43, %44
  br i1 %45, label %55, label %46

46:                                               ; preds = %39
  %47 = icmp ult i16 %44, %43
  br i1 %47, label %61, label %48

48:                                               ; preds = %46
  %49 = add i64 %40, -1
  %50 = getelementptr inbounds i16, i16* %42, i64 1
  %51 = getelementptr inbounds i16, i16* %41, i64 1
  %52 = icmp eq i64 %49, 0
  br i1 %52, label %53, label %39

53:                                               ; preds = %48, %9
  %54 = icmp ult i64 %26, %18
  br i1 %54, label %55, label %61

55:                                               ; preds = %39, %53
  %56 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %57 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %56, i8* align 8 %57, i64 24, i1 false) #12
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %57, i8 0, i64 24, i1 false) #12
  %58 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 1
  %59 = bitcast %"class.std::__1::basic_string"* %58 to i8*
  %60 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %59, i8* align 8 %60, i64 24, i1 false) #12
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 24, i1 false) #12
  br label %161

61:                                               ; preds = %46, %53
  %62 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %63 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %62, i8* align 8 %63, i64 24, i1 false) #12
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %63, i8 0, i64 24, i1 false) #12
  %64 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 1
  %65 = bitcast %"class.std::__1::basic_string"* %64 to i8*
  %66 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %65, i8* align 8 %66, i64 24, i1 false) #12
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %66, i8 0, i64 24, i1 false) #12
  br label %161

67:                                               ; preds = %5
  %68 = icmp slt i64 %3, 9
  br i1 %68, label %69, label %70

69:                                               ; preds = %67
  tail call void @_ZNSt3__121__insertion_sort_moveIRN4base8internal9flat_treeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS1_8identityENS_4lessIvEENS_6vectorIS9_NS7_IS9_EEEEE13value_compareENS_11__wrap_iterIPS9_EEEEvT0_SM_PNS_15iterator_traitsISM_E10value_typeET_(%"class.std::__1::basic_string"* %0, %"class.std::__1::basic_string"* %1, %"class.std::__1::basic_string"* %4, %"struct.base::internal::flat_tree<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >, base::identity, std::__1::less<void>, std::__1::vector<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >, std::__1::allocator<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> > > > >::value_compare"* dereferenceable(1) %2)
  br label %161

70:                                               ; preds = %67
  %71 = lshr i64 %3, 1
  %72 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 %71
  tail call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS1_8identityENS_4lessIvEENS_6vectorIS9_NS7_IS9_EEEEE13value_compareENS_11__wrap_iterIPS9_EEEEvT0_SM_T_NS_15iterator_traitsISM_E15difference_typeEPNSP_10value_typeEl(%"class.std::__1::basic_string"* %0, %"class.std::__1::basic_string"* %72, %"struct.base::internal::flat_tree<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >, base::identity, std::__1::less<void>, std::__1::vector<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >, std::__1::allocator<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> > > > >::value_compare"* dereferenceable(1) %2, i64 %71, %"class.std::__1::basic_string"* %4, i64 %71)
  %73 = sub nsw i64 %3, %71
  %74 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 %71
  tail call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS1_8identityENS_4lessIvEENS_6vectorIS9_NS7_IS9_EEEEE13value_compareENS_11__wrap_iterIPS9_EEEEvT0_SM_T_NS_15iterator_traitsISM_E15difference_typeEPNSP_10value_typeEl(%"class.std::__1::basic_string"* %72, %"class.std::__1::basic_string"* %1, %"struct.base::internal::flat_tree<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >, base::identity, std::__1::less<void>, std::__1::vector<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >, std::__1::allocator<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> > > > >::value_compare"* dereferenceable(1) %2, i64 %73, %"class.std::__1::basic_string"* %74, i64 %73)
  %75 = icmp eq i64 %71, 0
  br i1 %75, label %76, label %88

76:                                               ; preds = %156, %70
  %77 = phi %"class.std::__1::basic_string"* [ %72, %70 ], [ %157, %156 ]
  %78 = phi %"class.std::__1::basic_string"* [ %4, %70 ], [ %159, %156 ]
  %79 = icmp eq %"class.std::__1::basic_string"* %77, %1
  br i1 %79, label %161, label %80

80:                                               ; preds = %76, %80
  %81 = phi %"class.std::__1::basic_string"* [ %86, %80 ], [ %78, %76 ]
  %82 = phi %"class.std::__1::basic_string"* [ %85, %80 ], [ %77, %76 ]
  %83 = bitcast %"class.std::__1::basic_string"* %81 to i8*
  %84 = bitcast %"class.std::__1::basic_string"* %82 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %83, i8* align 8 %84, i64 24, i1 false) #12
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %84, i8 0, i64 24, i1 false) #12
  %85 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %82, i64 1
  %86 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %81, i64 1
  %87 = icmp eq %"class.std::__1::basic_string"* %85, %1
  br i1 %87, label %161, label %80

88:                                               ; preds = %70, %156
  %89 = phi %"class.std::__1::basic_string"* [ %159, %156 ], [ %4, %70 ]
  %90 = phi %"class.std::__1::basic_string"* [ %158, %156 ], [ %0, %70 ]
  %91 = phi %"class.std::__1::basic_string"* [ %157, %156 ], [ %72, %70 ]
  %92 = icmp eq %"class.std::__1::basic_string"* %91, %1
  br i1 %92, label %93, label %103

93:                                               ; preds = %88
  %94 = icmp eq %"class.std::__1::basic_string"* %90, %72
  br i1 %94, label %161, label %95

95:                                               ; preds = %93, %95
  %96 = phi %"class.std::__1::basic_string"* [ %101, %95 ], [ %89, %93 ]
  %97 = phi %"class.std::__1::basic_string"* [ %100, %95 ], [ %90, %93 ]
  %98 = bitcast %"class.std::__1::basic_string"* %96 to i8*
  %99 = bitcast %"class.std::__1::basic_string"* %97 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %98, i8* align 8 %99, i64 24, i1 false) #12
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %99, i8 0, i64 24, i1 false) #12
  %100 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %97, i64 1
  %101 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %96, i64 1
  %102 = icmp eq %"class.std::__1::basic_string"* %100, %72
  br i1 %102, label %161, label %95

103:                                              ; preds = %88
  %104 = bitcast %"class.std::__1::basic_string"* %90 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %105 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %104, i64 0, i32 1, i32 1
  %106 = load i8, i8* %105, align 1
  %107 = icmp slt i8 %106, 0
  %108 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %90, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %109 = load i64, i64* %108, align 8
  %110 = zext i8 %106 to i64
  %111 = select i1 %107, i64 %109, i64 %110
  %112 = bitcast %"class.std::__1::basic_string"* %91 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %113 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %112, i64 0, i32 1, i32 1
  %114 = load i8, i8* %113, align 1
  %115 = icmp slt i8 %114, 0
  %116 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %91, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %117 = load i64, i64* %116, align 8
  %118 = zext i8 %114 to i64
  %119 = select i1 %115, i64 %117, i64 %118
  %120 = icmp ult i64 %111, %119
  %121 = select i1 %120, i64 %111, i64 %119
  %122 = icmp eq i64 %121, 0
  br i1 %122, label %146, label %123

123:                                              ; preds = %103
  %124 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %91, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %125 = load i16*, i16** %124, align 8
  %126 = bitcast %"class.std::__1::basic_string"* %91 to i16*
  %127 = select i1 %115, i16* %125, i16* %126
  %128 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %90, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %129 = load i16*, i16** %128, align 8
  %130 = bitcast %"class.std::__1::basic_string"* %90 to i16*
  %131 = select i1 %107, i16* %129, i16* %130
  br label %132

132:                                              ; preds = %141, %123
  %133 = phi i64 [ %142, %141 ], [ %121, %123 ]
  %134 = phi i16* [ %144, %141 ], [ %131, %123 ]
  %135 = phi i16* [ %143, %141 ], [ %127, %123 ]
  %136 = load i16, i16* %135, align 2
  %137 = load i16, i16* %134, align 2
  %138 = icmp ult i16 %136, %137
  br i1 %138, label %148, label %139

139:                                              ; preds = %132
  %140 = icmp ult i16 %137, %136
  br i1 %140, label %152, label %141

141:                                              ; preds = %139
  %142 = add i64 %133, -1
  %143 = getelementptr inbounds i16, i16* %135, i64 1
  %144 = getelementptr inbounds i16, i16* %134, i64 1
  %145 = icmp eq i64 %142, 0
  br i1 %145, label %146, label %132

146:                                              ; preds = %141, %103
  %147 = icmp ult i64 %119, %111
  br i1 %147, label %148, label %152

148:                                              ; preds = %132, %146
  %149 = bitcast %"class.std::__1::basic_string"* %89 to i8*
  %150 = bitcast %"class.std::__1::basic_string"* %91 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %149, i8* align 8 %150, i64 24, i1 false) #12
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %150, i8 0, i64 24, i1 false) #12
  %151 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %91, i64 1
  br label %156

152:                                              ; preds = %139, %146
  %153 = bitcast %"class.std::__1::basic_string"* %89 to i8*
  %154 = bitcast %"class.std::__1::basic_string"* %90 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %153, i8* align 8 %154, i64 24, i1 false) #12
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %154, i8 0, i64 24, i1 false) #12
  %155 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %90, i64 1
  br label %156

156:                                              ; preds = %152, %148
  %157 = phi %"class.std::__1::basic_string"* [ %151, %148 ], [ %91, %152 ]
  %158 = phi %"class.std::__1::basic_string"* [ %90, %148 ], [ %155, %152 ]
  %159 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %89, i64 1
  %160 = icmp eq %"class.std::__1::basic_string"* %158, %72
  br i1 %160, label %76, label %88

161:                                              ; preds = %95, %80, %93, %76, %61, %55, %5, %69, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__119__merge_move_assignIRN4base8internal9flat_treeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS1_8identityENS_4lessIvEENS_6vectorIS9_NS7_IS9_EEEEE13value_compareEPS9_SJ_NS_11__wrap_iterISJ_EEEEvT0_SM_T1_SN_T2_T_(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"struct.base::internal::flat_tree<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >, base::identity, std::__1::less<void>, std::__1::vector<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >, std::__1::allocator<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> > > > >::value_compare"* dereferenceable(1)) local_unnamed_addr #0 comdat {
  %7 = icmp eq %"class.std::__1::basic_string"* %0, %1
  br i1 %7, label %8, label %12

8:                                                ; preds = %109, %6
  %9 = phi %"class.std::__1::basic_string"* [ %4, %6 ], [ %112, %109 ]
  %10 = phi %"class.std::__1::basic_string"* [ %2, %6 ], [ %110, %109 ]
  %11 = icmp eq %"class.std::__1::basic_string"* %10, %3
  br i1 %11, label %133, label %114

12:                                               ; preds = %6, %109
  %13 = phi %"class.std::__1::basic_string"* [ %111, %109 ], [ %0, %6 ]
  %14 = phi %"class.std::__1::basic_string"* [ %110, %109 ], [ %2, %6 ]
  %15 = phi %"class.std::__1::basic_string"* [ %112, %109 ], [ %4, %6 ]
  %16 = icmp eq %"class.std::__1::basic_string"* %14, %3
  br i1 %16, label %17, label %38

17:                                               ; preds = %12
  %18 = icmp eq %"class.std::__1::basic_string"* %13, %1
  br i1 %18, label %133, label %19

19:                                               ; preds = %17, %29
  %20 = phi %"class.std::__1::basic_string"* [ %35, %29 ], [ %13, %17 ]
  %21 = phi %"class.std::__1::basic_string"* [ %36, %29 ], [ %15, %17 ]
  %22 = bitcast %"class.std::__1::basic_string"* %21 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %22, i64 0, i32 1, i32 1
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  br i1 %25, label %26, label %29

26:                                               ; preds = %19
  %27 = bitcast %"class.std::__1::basic_string"* %21 to i8**
  %28 = load i8*, i8** %27, align 8
  tail call void @_ZdlPv(i8* %28) #13
  br label %29

29:                                               ; preds = %19, %26
  %30 = bitcast %"class.std::__1::basic_string"* %21 to i8*
  %31 = bitcast %"class.std::__1::basic_string"* %20 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %30, i8* align 8 %31, i64 24, i1 false) #12
  %32 = bitcast %"class.std::__1::basic_string"* %20 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %32, i64 0, i32 1, i32 1
  store i8 0, i8* %33, align 1
  %34 = bitcast %"class.std::__1::basic_string"* %20 to i16*
  store i16 0, i16* %34, align 2
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 1
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %21, i64 1
  %37 = icmp eq %"class.std::__1::basic_string"* %35, %1
  br i1 %37, label %133, label %19

38:                                               ; preds = %12
  %39 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %39, i64 0, i32 1, i32 1
  %41 = load i8, i8* %40, align 1
  %42 = icmp slt i8 %41, 0
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %44 = load i64, i64* %43, align 8
  %45 = zext i8 %41 to i64
  %46 = select i1 %42, i64 %44, i64 %45
  %47 = bitcast %"class.std::__1::basic_string"* %14 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %48 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %47, i64 0, i32 1, i32 1
  %49 = load i8, i8* %48, align 1
  %50 = icmp slt i8 %49, 0
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %52 = load i64, i64* %51, align 8
  %53 = zext i8 %49 to i64
  %54 = select i1 %50, i64 %52, i64 %53
  %55 = icmp ult i64 %46, %54
  %56 = select i1 %55, i64 %46, i64 %54
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %81, label %58

58:                                               ; preds = %38
  %59 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load i16*, i16** %59, align 8
  %61 = bitcast %"class.std::__1::basic_string"* %14 to i16*
  %62 = select i1 %50, i16* %60, i16* %61
  %63 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load i16*, i16** %63, align 8
  %65 = bitcast %"class.std::__1::basic_string"* %13 to i16*
  %66 = select i1 %42, i16* %64, i16* %65
  br label %67

67:                                               ; preds = %76, %58
  %68 = phi i64 [ %77, %76 ], [ %56, %58 ]
  %69 = phi i16* [ %79, %76 ], [ %66, %58 ]
  %70 = phi i16* [ %78, %76 ], [ %62, %58 ]
  %71 = load i16, i16* %70, align 2
  %72 = load i16, i16* %69, align 2
  %73 = icmp ult i16 %71, %72
  br i1 %73, label %83, label %74

74:                                               ; preds = %67
  %75 = icmp ult i16 %72, %71
  br i1 %75, label %96, label %76

76:                                               ; preds = %74
  %77 = add i64 %68, -1
  %78 = getelementptr inbounds i16, i16* %70, i64 1
  %79 = getelementptr inbounds i16, i16* %69, i64 1
  %80 = icmp eq i64 %77, 0
  br i1 %80, label %81, label %67

81:                                               ; preds = %76, %38
  %82 = icmp ult i64 %54, %46
  br i1 %82, label %83, label %96

83:                                               ; preds = %67, %81
  %84 = bitcast %"class.std::__1::basic_string"* %15 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %85 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %84, i64 0, i32 1, i32 1
  %86 = load i8, i8* %85, align 1
  %87 = icmp slt i8 %86, 0
  br i1 %87, label %88, label %91

88:                                               ; preds = %83
  %89 = bitcast %"class.std::__1::basic_string"* %15 to i8**
  %90 = load i8*, i8** %89, align 8
  tail call void @_ZdlPv(i8* %90) #13
  br label %91

91:                                               ; preds = %83, %88
  %92 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  %93 = bitcast %"class.std::__1::basic_string"* %14 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %92, i8* align 8 %93, i64 24, i1 false) #12
  store i8 0, i8* %48, align 1
  %94 = bitcast %"class.std::__1::basic_string"* %14 to i16*
  store i16 0, i16* %94, align 2
  %95 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 1
  br label %109

96:                                               ; preds = %74, %81
  %97 = bitcast %"class.std::__1::basic_string"* %15 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %98 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %97, i64 0, i32 1, i32 1
  %99 = load i8, i8* %98, align 1
  %100 = icmp slt i8 %99, 0
  br i1 %100, label %101, label %104

101:                                              ; preds = %96
  %102 = bitcast %"class.std::__1::basic_string"* %15 to i8**
  %103 = load i8*, i8** %102, align 8
  tail call void @_ZdlPv(i8* %103) #13
  br label %104

104:                                              ; preds = %96, %101
  %105 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  %106 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %105, i8* align 8 %106, i64 24, i1 false) #12
  store i8 0, i8* %40, align 1
  %107 = bitcast %"class.std::__1::basic_string"* %13 to i16*
  store i16 0, i16* %107, align 2
  %108 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 1
  br label %109

109:                                              ; preds = %91, %104
  %110 = phi %"class.std::__1::basic_string"* [ %95, %91 ], [ %14, %104 ]
  %111 = phi %"class.std::__1::basic_string"* [ %13, %91 ], [ %108, %104 ]
  %112 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 1
  %113 = icmp eq %"class.std::__1::basic_string"* %111, %1
  br i1 %113, label %8, label %12

114:                                              ; preds = %8, %124
  %115 = phi %"class.std::__1::basic_string"* [ %130, %124 ], [ %10, %8 ]
  %116 = phi %"class.std::__1::basic_string"* [ %131, %124 ], [ %9, %8 ]
  %117 = bitcast %"class.std::__1::basic_string"* %116 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %118 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %117, i64 0, i32 1, i32 1
  %119 = load i8, i8* %118, align 1
  %120 = icmp slt i8 %119, 0
  br i1 %120, label %121, label %124

121:                                              ; preds = %114
  %122 = bitcast %"class.std::__1::basic_string"* %116 to i8**
  %123 = load i8*, i8** %122, align 8
  tail call void @_ZdlPv(i8* %123) #13
  br label %124

124:                                              ; preds = %114, %121
  %125 = bitcast %"class.std::__1::basic_string"* %116 to i8*
  %126 = bitcast %"class.std::__1::basic_string"* %115 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %125, i8* align 8 %126, i64 24, i1 false) #12
  %127 = bitcast %"class.std::__1::basic_string"* %115 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %128 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %127, i64 0, i32 1, i32 1
  store i8 0, i8* %128, align 1
  %129 = bitcast %"class.std::__1::basic_string"* %115 to i16*
  store i16 0, i16* %129, align 2
  %130 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %115, i64 1
  %131 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %116, i64 1
  %132 = icmp eq %"class.std::__1::basic_string"* %130, %3
  br i1 %132, label %133, label %114

133:                                              ; preds = %29, %124, %17, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS1_8identityENS_4lessIvEENS_6vectorIS9_NS7_IS9_EEEEE13value_compareENS_11__wrap_iterIPS9_EEEEvT0_SM_SM_T_NS_15iterator_traitsISM_E15difference_typeESQ_PNSP_10value_typeEl(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"struct.base::internal::flat_tree<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >, base::identity, std::__1::less<void>, std::__1::vector<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >, std::__1::allocator<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> > > > >::value_compare"* dereferenceable(1), i64, i64, %"class.std::__1::basic_string"*, i64) local_unnamed_addr #0 comdat {
  %9 = icmp eq i64 %5, 0
  br i1 %9, label %338, label %10

10:                                               ; preds = %8
  %11 = ptrtoint %"class.std::__1::basic_string"* %1 to i64
  %12 = ptrtoint %"class.std::__1::basic_string"* %0 to i64
  br label %13

13:                                               ; preds = %10, %331
  %14 = phi %"class.std::__1::basic_string"* [ %336, %331 ], [ %2, %10 ]
  %15 = phi i64 [ %335, %331 ], [ %4, %10 ]
  %16 = phi i64 [ %334, %331 ], [ %5, %10 ]
  %17 = phi i64 [ %333, %331 ], [ %11, %10 ]
  %18 = phi i64 [ %332, %331 ], [ %12, %10 ]
  %19 = icmp sgt i64 %15, %7
  %20 = icmp sgt i64 %16, %7
  %21 = and i1 %20, %19
  br i1 %21, label %22, label %36

22:                                               ; preds = %13
  %23 = icmp eq i64 %15, 0
  br i1 %23, label %338, label %24

24:                                               ; preds = %22
  %25 = inttoptr i64 %17 to %"class.std::__1::basic_string"*
  %26 = inttoptr i64 %17 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %26, i64 0, i32 1, i32 1
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = zext i8 %28 to i64
  %33 = select i1 %29, i64 %31, i64 %32
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = inttoptr i64 %17 to i16*
  br label %39

36:                                               ; preds = %13
  %37 = inttoptr i64 %18 to %"class.std::__1::basic_string"*
  %38 = inttoptr i64 %17 to %"class.std::__1::basic_string"*
  tail call void @_ZNSt3__124__buffered_inplace_mergeIRN4base8internal9flat_treeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS1_8identityENS_4lessIvEENS_6vectorIS9_NS7_IS9_EEEEE13value_compareENS_11__wrap_iterIPS9_EEEEvT0_SM_SM_T_NS_15iterator_traitsISM_E15difference_typeESQ_PNSP_10value_typeE(%"class.std::__1::basic_string"* %37, %"class.std::__1::basic_string"* %38, %"class.std::__1::basic_string"* %14, %"struct.base::internal::flat_tree<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >, base::identity, std::__1::less<void>, std::__1::vector<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >, std::__1::allocator<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> > > > >::value_compare"* dereferenceable(1) %3, i64 %15, i64 %16, %"class.std::__1::basic_string"* %6)
  br label %338

39:                                               ; preds = %24, %77
  %40 = phi i64 [ %15, %24 ], [ %80, %77 ]
  %41 = phi i64 [ %18, %24 ], [ %79, %77 ]
  %42 = inttoptr i64 %41 to %"class.std::__1::basic_string"*
  %43 = inttoptr i64 %41 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %44 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %43, i64 0, i32 1, i32 1
  %45 = load i8, i8* %44, align 1
  %46 = icmp slt i8 %45, 0
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %42, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %48 = load i64, i64* %47, align 8
  %49 = zext i8 %45 to i64
  %50 = select i1 %46, i64 %48, i64 %49
  %51 = icmp ult i64 %50, %33
  %52 = select i1 %51, i64 %50, i64 %33
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %75, label %54

54:                                               ; preds = %39
  %55 = load i16*, i16** %34, align 8
  %56 = select i1 %29, i16* %55, i16* %35
  %57 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %42, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load i16*, i16** %57, align 8
  %59 = inttoptr i64 %41 to i16*
  %60 = select i1 %46, i16* %58, i16* %59
  br label %61

61:                                               ; preds = %70, %54
  %62 = phi i64 [ %71, %70 ], [ %52, %54 ]
  %63 = phi i16* [ %73, %70 ], [ %60, %54 ]
  %64 = phi i16* [ %72, %70 ], [ %56, %54 ]
  %65 = load i16, i16* %64, align 2
  %66 = load i16, i16* %63, align 2
  %67 = icmp ult i16 %65, %66
  br i1 %67, label %82, label %68

68:                                               ; preds = %61
  %69 = icmp ult i16 %66, %65
  br i1 %69, label %77, label %70

70:                                               ; preds = %68
  %71 = add i64 %62, -1
  %72 = getelementptr inbounds i16, i16* %64, i64 1
  %73 = getelementptr inbounds i16, i16* %63, i64 1
  %74 = icmp eq i64 %71, 0
  br i1 %74, label %75, label %61

75:                                               ; preds = %70, %39
  %76 = icmp ult i64 %33, %50
  br i1 %76, label %82, label %77

77:                                               ; preds = %68, %75
  %78 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %42, i64 1
  %79 = ptrtoint %"class.std::__1::basic_string"* %78 to i64
  %80 = add nsw i64 %40, -1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %338, label %39

82:                                               ; preds = %75, %61
  %83 = inttoptr i64 %41 to %"class.std::__1::basic_string"*
  %84 = icmp slt i64 %40, %16
  br i1 %84, label %85, label %155

85:                                               ; preds = %82
  %86 = sdiv i64 %16, 2
  %87 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %25, i64 %86
  %88 = sub i64 %17, %41
  %89 = icmp eq i64 %88, 0
  br i1 %89, label %149, label %90

90:                                               ; preds = %85
  %91 = sdiv exact i64 %88, 24
  %92 = bitcast %"class.std::__1::basic_string"* %87 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %93 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %92, i64 0, i32 1, i32 1
  %94 = load i8, i8* %93, align 1
  %95 = icmp slt i8 %94, 0
  %96 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %25, i64 %86, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %97 = load i64, i64* %96, align 8
  %98 = zext i8 %94 to i64
  %99 = select i1 %95, i64 %97, i64 %98
  %100 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %87, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %101 = load i16*, i16** %100, align 8
  %102 = bitcast %"class.std::__1::basic_string"* %87 to i16*
  %103 = select i1 %95, i16* %101, i16* %102
  br label %104

104:                                              ; preds = %145, %90
  %105 = phi %"class.std::__1::basic_string"* [ %83, %90 ], [ %147, %145 ]
  %106 = phi i64 [ %91, %90 ], [ %146, %145 ]
  %107 = lshr i64 %106, 1
  %108 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %105, i64 %107
  %109 = bitcast %"class.std::__1::basic_string"* %108 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %110 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %109, i64 0, i32 1, i32 1
  %111 = load i8, i8* %110, align 1
  %112 = icmp slt i8 %111, 0
  %113 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %105, i64 %107, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %114 = load i64, i64* %113, align 8
  %115 = zext i8 %111 to i64
  %116 = select i1 %112, i64 %114, i64 %115
  %117 = icmp ult i64 %116, %99
  %118 = select i1 %117, i64 %116, i64 %99
  %119 = icmp eq i64 %118, 0
  br i1 %119, label %139, label %120

120:                                              ; preds = %104
  %121 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %108, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %122 = load i16*, i16** %121, align 8
  %123 = bitcast %"class.std::__1::basic_string"* %108 to i16*
  %124 = select i1 %112, i16* %122, i16* %123
  br label %125

125:                                              ; preds = %134, %120
  %126 = phi i64 [ %135, %134 ], [ %118, %120 ]
  %127 = phi i16* [ %137, %134 ], [ %124, %120 ]
  %128 = phi i16* [ %136, %134 ], [ %103, %120 ]
  %129 = load i16, i16* %128, align 2
  %130 = load i16, i16* %127, align 2
  %131 = icmp ult i16 %129, %130
  br i1 %131, label %145, label %132

132:                                              ; preds = %125
  %133 = icmp ult i16 %130, %129
  br i1 %133, label %141, label %134

134:                                              ; preds = %132
  %135 = add i64 %126, -1
  %136 = getelementptr inbounds i16, i16* %128, i64 1
  %137 = getelementptr inbounds i16, i16* %127, i64 1
  %138 = icmp eq i64 %135, 0
  br i1 %138, label %139, label %125

139:                                              ; preds = %134, %104
  %140 = icmp ult i64 %99, %116
  br i1 %140, label %145, label %141

141:                                              ; preds = %132, %139
  %142 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %108, i64 1
  %143 = xor i64 %107, -1
  %144 = add i64 %106, %143
  br label %145

145:                                              ; preds = %125, %141, %139
  %146 = phi i64 [ %144, %141 ], [ %107, %139 ], [ %107, %125 ]
  %147 = phi %"class.std::__1::basic_string"* [ %142, %141 ], [ %105, %139 ], [ %105, %125 ]
  %148 = icmp eq i64 %146, 0
  br i1 %148, label %149, label %104

149:                                              ; preds = %145, %85
  %150 = phi %"class.std::__1::basic_string"* [ %83, %85 ], [ %147, %145 ]
  %151 = ptrtoint %"class.std::__1::basic_string"* %150 to i64
  %152 = sub i64 %151, %41
  %153 = sdiv exact i64 %152, 24
  %154 = ptrtoint %"class.std::__1::basic_string"* %87 to i64
  br label %242

155:                                              ; preds = %82
  %156 = icmp eq i64 %40, 1
  br i1 %156, label %157, label %168

157:                                              ; preds = %155
  %158 = inttoptr i64 %41 to %"class.std::__1::basic_string"*
  %159 = inttoptr i64 %17 to %"class.std::__1::basic_string"*
  %160 = inttoptr i64 %41 to i64*
  %161 = load i64, i64* %160, align 8
  %162 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %158, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %163 = load i64, i64* %162, align 8
  %164 = inttoptr i64 %41 to i8*
  %165 = inttoptr i64 %17 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %164, i8* align 8 %165, i64 24, i1 false) #12
  %166 = inttoptr i64 %17 to i64*
  store i64 %161, i64* %166, align 8
  store i64 %48, i64* %30, align 8
  %167 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %159, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %163, i64* %167, align 8
  br label %338

168:                                              ; preds = %155
  %169 = sdiv i64 %40, 2
  %170 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %83, i64 %169
  %171 = ptrtoint %"class.std::__1::basic_string"* %170 to i64
  %172 = ptrtoint %"class.std::__1::basic_string"* %14 to i64
  %173 = sub i64 %172, %17
  %174 = icmp eq i64 %173, 0
  br i1 %174, label %236, label %175

175:                                              ; preds = %168
  %176 = sdiv exact i64 %173, 24
  %177 = bitcast %"class.std::__1::basic_string"* %170 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %178 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %177, i64 0, i32 1, i32 1
  %179 = load i8, i8* %178, align 1
  %180 = icmp slt i8 %179, 0
  %181 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %83, i64 %169, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %182 = load i64, i64* %181, align 8
  %183 = zext i8 %179 to i64
  %184 = select i1 %180, i64 %182, i64 %183
  %185 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %170, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %186 = load i16*, i16** %185, align 8
  %187 = bitcast %"class.std::__1::basic_string"* %170 to i16*
  %188 = select i1 %180, i16* %186, i16* %187
  br label %189

189:                                              ; preds = %232, %175
  %190 = phi i64 [ 0, %175 ], [ %234, %232 ]
  %191 = phi i64 [ %176, %175 ], [ %233, %232 ]
  %192 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %25, i64 %190
  %193 = lshr i64 %191, 1
  %194 = add nsw i64 %193, %190
  %195 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %25, i64 %194
  %196 = bitcast %"class.std::__1::basic_string"* %195 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %197 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %196, i64 0, i32 1, i32 1
  %198 = load i8, i8* %197, align 1
  %199 = icmp slt i8 %198, 0
  %200 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %192, i64 %193, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %201 = load i64, i64* %200, align 8
  %202 = zext i8 %198 to i64
  %203 = select i1 %199, i64 %201, i64 %202
  %204 = icmp ult i64 %184, %203
  %205 = select i1 %204, i64 %184, i64 %203
  %206 = icmp eq i64 %205, 0
  br i1 %206, label %226, label %207

207:                                              ; preds = %189
  %208 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %195, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %209 = load i16*, i16** %208, align 8
  %210 = bitcast %"class.std::__1::basic_string"* %195 to i16*
  %211 = select i1 %199, i16* %209, i16* %210
  br label %212

212:                                              ; preds = %221, %207
  %213 = phi i64 [ %222, %221 ], [ %205, %207 ]
  %214 = phi i16* [ %224, %221 ], [ %188, %207 ]
  %215 = phi i16* [ %223, %221 ], [ %211, %207 ]
  %216 = load i16, i16* %215, align 2
  %217 = load i16, i16* %214, align 2
  %218 = icmp ult i16 %216, %217
  br i1 %218, label %228, label %219

219:                                              ; preds = %212
  %220 = icmp ult i16 %217, %216
  br i1 %220, label %232, label %221

221:                                              ; preds = %219
  %222 = add i64 %213, -1
  %223 = getelementptr inbounds i16, i16* %215, i64 1
  %224 = getelementptr inbounds i16, i16* %214, i64 1
  %225 = icmp eq i64 %222, 0
  br i1 %225, label %226, label %212

226:                                              ; preds = %221, %189
  %227 = icmp ult i64 %203, %184
  br i1 %227, label %228, label %232

228:                                              ; preds = %212, %226
  %229 = add nsw i64 %194, 1
  %230 = xor i64 %193, -1
  %231 = add i64 %191, %230
  br label %232

232:                                              ; preds = %219, %228, %226
  %233 = phi i64 [ %231, %228 ], [ %193, %226 ], [ %193, %219 ]
  %234 = phi i64 [ %229, %228 ], [ %190, %226 ], [ %190, %219 ]
  %235 = icmp eq i64 %233, 0
  br i1 %235, label %236, label %189

236:                                              ; preds = %232, %168
  %237 = phi i64 [ 0, %168 ], [ %234, %232 ]
  %238 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %25, i64 %237
  %239 = ptrtoint %"class.std::__1::basic_string"* %238 to i64
  %240 = sub i64 %239, %17
  %241 = sdiv exact i64 %240, 24
  br label %242

242:                                              ; preds = %236, %149
  %243 = phi i64 [ %239, %236 ], [ %154, %149 ]
  %244 = phi i64 [ %171, %236 ], [ %151, %149 ]
  %245 = phi i64 [ %237, %236 ], [ %86, %149 ]
  %246 = phi i64 [ %241, %236 ], [ %86, %149 ]
  %247 = phi i64 [ %169, %236 ], [ %153, %149 ]
  %248 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %25, i64 %245
  %249 = sub nsw i64 %40, %247
  %250 = sub nsw i64 %16, %246
  %251 = inttoptr i64 %244 to %"class.std::__1::basic_string"*
  %252 = icmp eq %"class.std::__1::basic_string"* %25, %251
  br i1 %252, label %323, label %253

253:                                              ; preds = %242
  %254 = icmp eq i64 %245, 0
  br i1 %254, label %323, label %255

255:                                              ; preds = %253
  %256 = inttoptr i64 %244 to i64*
  %257 = load i64, i64* %256, align 8
  %258 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %251, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %259 = bitcast i64* %258 to <2 x i64>*
  %260 = load <2 x i64>, <2 x i64>* %259, align 8
  %261 = inttoptr i64 %244 to i8*
  %262 = inttoptr i64 %17 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %261, i8* align 8 %262, i64 24, i1 false) #12
  %263 = inttoptr i64 %17 to i64*
  store i64 %257, i64* %263, align 8
  %264 = bitcast i64* %30 to <2 x i64>*
  store <2 x i64> %260, <2 x i64>* %264, align 8
  %265 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %251, i64 1
  %266 = icmp eq i64 %245, 1
  br i1 %266, label %291, label %267

267:                                              ; preds = %255
  %268 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %25, i64 1
  br label %269

269:                                              ; preds = %267, %269
  %270 = phi %"class.std::__1::basic_string"* [ %288, %269 ], [ %25, %267 ]
  %271 = phi %"class.std::__1::basic_string"* [ %286, %269 ], [ %268, %267 ]
  %272 = phi %"class.std::__1::basic_string"* [ %285, %269 ], [ %265, %267 ]
  %273 = phi i64 [ %276, %269 ], [ %17, %267 ]
  %274 = ptrtoint %"class.std::__1::basic_string"* %271 to i64
  %275 = icmp eq %"class.std::__1::basic_string"* %272, %270
  %276 = select i1 %275, i64 %274, i64 %273
  %277 = bitcast %"class.std::__1::basic_string"* %272 to <2 x i64>*
  %278 = load <2 x i64>, <2 x i64>* %277, align 8
  %279 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %272, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %280 = load i64, i64* %279, align 8
  %281 = bitcast %"class.std::__1::basic_string"* %272 to i8*
  %282 = bitcast %"class.std::__1::basic_string"* %271 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %281, i8* align 8 %282, i64 24, i1 false) #12
  %283 = bitcast %"class.std::__1::basic_string"* %271 to <2 x i64>*
  store <2 x i64> %278, <2 x i64>* %283, align 8
  %284 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %271, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %280, i64* %284, align 8
  %285 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %272, i64 1
  %286 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %271, i64 1
  %287 = icmp eq %"class.std::__1::basic_string"* %286, %248
  %288 = inttoptr i64 %276 to %"class.std::__1::basic_string"*
  br i1 %287, label %289, label %269

289:                                              ; preds = %269
  %290 = inttoptr i64 %276 to %"class.std::__1::basic_string"*
  br label %291

291:                                              ; preds = %289, %255
  %292 = phi i64 [ %17, %255 ], [ %276, %289 ]
  %293 = phi %"class.std::__1::basic_string"* [ %265, %255 ], [ %285, %289 ]
  %294 = phi %"class.std::__1::basic_string"* [ %25, %255 ], [ %290, %289 ]
  %295 = icmp eq %"class.std::__1::basic_string"* %293, %294
  br i1 %295, label %323, label %296

296:                                              ; preds = %291, %320
  %297 = phi i64 [ %322, %320 ], [ %292, %291 ]
  %298 = phi %"class.std::__1::basic_string"* [ %315, %320 ], [ %293, %291 ]
  %299 = phi i64 [ %321, %320 ], [ %292, %291 ]
  %300 = inttoptr i64 %297 to %"class.std::__1::basic_string"*
  br label %301

301:                                              ; preds = %296, %319
  %302 = phi %"class.std::__1::basic_string"* [ %315, %319 ], [ %298, %296 ]
  %303 = phi i64 [ %297, %319 ], [ %299, %296 ]
  %304 = inttoptr i64 %303 to %"class.std::__1::basic_string"*
  %305 = bitcast %"class.std::__1::basic_string"* %302 to i64*
  %306 = load i64, i64* %305, align 8
  %307 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %302, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %308 = bitcast i64* %307 to <2 x i64>*
  %309 = load <2 x i64>, <2 x i64>* %308, align 8
  %310 = bitcast %"class.std::__1::basic_string"* %302 to i8*
  %311 = inttoptr i64 %303 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %310, i8* align 8 %311, i64 24, i1 false) #12
  %312 = inttoptr i64 %303 to i64*
  store i64 %306, i64* %312, align 8
  %313 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %304, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %314 = bitcast i64* %313 to <2 x i64>*
  store <2 x i64> %309, <2 x i64>* %314, align 8
  %315 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %302, i64 1
  %316 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %304, i64 1
  %317 = icmp eq %"class.std::__1::basic_string"* %316, %248
  %318 = icmp eq %"class.std::__1::basic_string"* %315, %300
  br i1 %317, label %319, label %320

319:                                              ; preds = %301
  br i1 %318, label %323, label %301

320:                                              ; preds = %301
  %321 = ptrtoint %"class.std::__1::basic_string"* %316 to i64
  %322 = select i1 %318, i64 %321, i64 %297
  br label %296

323:                                              ; preds = %319, %242, %253, %291
  %324 = phi %"class.std::__1::basic_string"* [ %251, %253 ], [ %248, %242 ], [ %293, %291 ], [ %293, %319 ]
  %325 = add nsw i64 %247, %246
  %326 = add nsw i64 %249, %250
  %327 = icmp slt i64 %325, %326
  br i1 %327, label %328, label %330

328:                                              ; preds = %323
  %329 = ptrtoint %"class.std::__1::basic_string"* %324 to i64
  tail call void @_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS1_8identityENS_4lessIvEENS_6vectorIS9_NS7_IS9_EEEEE13value_compareENS_11__wrap_iterIPS9_EEEEvT0_SM_SM_T_NS_15iterator_traitsISM_E15difference_typeESQ_PNSP_10value_typeEl(%"class.std::__1::basic_string"* %83, %"class.std::__1::basic_string"* %251, %"class.std::__1::basic_string"* %324, %"struct.base::internal::flat_tree<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >, base::identity, std::__1::less<void>, std::__1::vector<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >, std::__1::allocator<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> > > > >::value_compare"* dereferenceable(1) %3, i64 %247, i64 %246, %"class.std::__1::basic_string"* %6, i64 %7)
  br label %331

330:                                              ; preds = %323
  tail call void @_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS1_8identityENS_4lessIvEENS_6vectorIS9_NS7_IS9_EEEEE13value_compareENS_11__wrap_iterIPS9_EEEEvT0_SM_SM_T_NS_15iterator_traitsISM_E15difference_typeESQ_PNSP_10value_typeEl(%"class.std::__1::basic_string"* %324, %"class.std::__1::basic_string"* %248, %"class.std::__1::basic_string"* %14, %"struct.base::internal::flat_tree<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >, base::identity, std::__1::less<void>, std::__1::vector<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >, std::__1::allocator<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> > > > >::value_compare"* dereferenceable(1) %3, i64 %249, i64 %250, %"class.std::__1::basic_string"* %6, i64 %7)
  br label %331

331:                                              ; preds = %328, %330
  %332 = phi i64 [ %329, %328 ], [ %41, %330 ]
  %333 = phi i64 [ %243, %328 ], [ %244, %330 ]
  %334 = phi i64 [ %250, %328 ], [ %246, %330 ]
  %335 = phi i64 [ %249, %328 ], [ %247, %330 ]
  %336 = phi %"class.std::__1::basic_string"* [ %14, %328 ], [ %324, %330 ]
  %337 = icmp eq i64 %334, 0
  br i1 %337, label %338, label %13

338:                                              ; preds = %331, %22, %77, %8, %157, %36
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__121__insertion_sort_moveIRN4base8internal9flat_treeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS1_8identityENS_4lessIvEENS_6vectorIS9_NS7_IS9_EEEEE13value_compareENS_11__wrap_iterIPS9_EEEEvT0_SM_PNS_15iterator_traitsISM_E10value_typeET_(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"struct.base::internal::flat_tree<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >, base::identity, std::__1::less<void>, std::__1::vector<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >, std::__1::allocator<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> > > > >::value_compare"* dereferenceable(1)) local_unnamed_addr #0 comdat {
  %5 = icmp eq %"class.std::__1::basic_string"* %0, %1
  br i1 %5, label %133, label %6

6:                                                ; preds = %4
  %7 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %8 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 24, i1 false) #12
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 24, i1 false) #12
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 1
  %10 = icmp eq %"class.std::__1::basic_string"* %9, %1
  br i1 %10, label %133, label %11

11:                                               ; preds = %6, %130
  %12 = phi %"class.std::__1::basic_string"* [ %131, %130 ], [ %9, %6 ]
  %13 = phi %"class.std::__1::basic_string"* [ %15, %130 ], [ %2, %6 ]
  %14 = phi %"class.std::__1::basic_string"* [ %12, %130 ], [ %0, %6 ]
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 1
  %16 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %16, i64 0, i32 1, i32 1
  %18 = load i8, i8* %17, align 1
  %19 = icmp slt i8 %18, 0
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = zext i8 %18 to i64
  %23 = select i1 %19, i64 %21, i64 %22
  %24 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %24, i64 0, i32 1, i32 1
  %26 = load i8, i8* %25, align 1
  %27 = icmp slt i8 %26, 0
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = zext i8 %26 to i64
  %31 = select i1 %27, i64 %29, i64 %30
  %32 = icmp ult i64 %23, %31
  %33 = select i1 %32, i64 %23, i64 %31
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %58, label %35

35:                                               ; preds = %11
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i16*, i16** %36, align 8
  %38 = bitcast %"class.std::__1::basic_string"* %12 to i16*
  %39 = select i1 %27, i16* %37, i16* %38
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load i16*, i16** %40, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %13 to i16*
  %43 = select i1 %19, i16* %41, i16* %42
  br label %44

44:                                               ; preds = %53, %35
  %45 = phi i64 [ %54, %53 ], [ %33, %35 ]
  %46 = phi i16* [ %56, %53 ], [ %43, %35 ]
  %47 = phi i16* [ %55, %53 ], [ %39, %35 ]
  %48 = load i16, i16* %47, align 2
  %49 = load i16, i16* %46, align 2
  %50 = icmp ult i16 %48, %49
  br i1 %50, label %60, label %51

51:                                               ; preds = %44
  %52 = icmp ult i16 %49, %48
  br i1 %52, label %127, label %53

53:                                               ; preds = %51
  %54 = add i64 %45, -1
  %55 = getelementptr inbounds i16, i16* %47, i64 1
  %56 = getelementptr inbounds i16, i16* %46, i64 1
  %57 = icmp eq i64 %54, 0
  br i1 %57, label %58, label %44

58:                                               ; preds = %53, %11
  %59 = icmp ult i64 %31, %23
  br i1 %59, label %60, label %127

60:                                               ; preds = %44, %58
  %61 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  %62 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %61, i8* align 8 %62, i64 24, i1 false) #12
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %62, i8 0, i64 24, i1 false) #12
  %63 = icmp eq %"class.std::__1::basic_string"* %13, %2
  br i1 %63, label %114, label %64

64:                                               ; preds = %60
  %65 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::basic_string"* %12 to i16*
  br label %67

67:                                               ; preds = %64, %109
  %68 = phi %"class.std::__1::basic_string"* [ %13, %64 ], [ %69, %109 ]
  %69 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %68, i64 -1
  %70 = bitcast %"class.std::__1::basic_string"* %69 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %71 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %70, i64 0, i32 1, i32 1
  %72 = load i8, i8* %71, align 1
  %73 = icmp slt i8 %72, 0
  %74 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %68, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %75 = load i64, i64* %74, align 8
  %76 = zext i8 %72 to i64
  %77 = select i1 %73, i64 %75, i64 %76
  %78 = load i8, i8* %25, align 1
  %79 = icmp slt i8 %78, 0
  %80 = load i64, i64* %28, align 8
  %81 = zext i8 %78 to i64
  %82 = select i1 %79, i64 %80, i64 %81
  %83 = icmp ult i64 %77, %82
  %84 = select i1 %83, i64 %77, i64 %82
  %85 = icmp eq i64 %84, 0
  br i1 %85, label %107, label %86

86:                                               ; preds = %67
  %87 = load i16*, i16** %65, align 8
  %88 = select i1 %79, i16* %87, i16* %66
  %89 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %69, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %90 = load i16*, i16** %89, align 8
  %91 = bitcast %"class.std::__1::basic_string"* %69 to i16*
  %92 = select i1 %73, i16* %90, i16* %91
  br label %93

93:                                               ; preds = %102, %86
  %94 = phi i64 [ %103, %102 ], [ %84, %86 ]
  %95 = phi i16* [ %105, %102 ], [ %92, %86 ]
  %96 = phi i16* [ %104, %102 ], [ %88, %86 ]
  %97 = load i16, i16* %96, align 2
  %98 = load i16, i16* %95, align 2
  %99 = icmp ult i16 %97, %98
  br i1 %99, label %109, label %100

100:                                              ; preds = %93
  %101 = icmp ult i16 %98, %97
  br i1 %101, label %114, label %102

102:                                              ; preds = %100
  %103 = add i64 %94, -1
  %104 = getelementptr inbounds i16, i16* %96, i64 1
  %105 = getelementptr inbounds i16, i16* %95, i64 1
  %106 = icmp eq i64 %103, 0
  br i1 %106, label %107, label %93

107:                                              ; preds = %102, %67
  %108 = icmp ult i64 %82, %77
  br i1 %108, label %109, label %114

109:                                              ; preds = %93, %107
  %110 = bitcast %"class.std::__1::basic_string"* %68 to i8*
  %111 = bitcast %"class.std::__1::basic_string"* %69 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %110, i8* align 8 %111, i64 24, i1 false) #12
  store i8 0, i8* %71, align 1
  %112 = bitcast %"class.std::__1::basic_string"* %69 to i16*
  store i16 0, i16* %112, align 2
  %113 = icmp eq %"class.std::__1::basic_string"* %69, %2
  br i1 %113, label %114, label %67

114:                                              ; preds = %107, %109, %100, %60
  %115 = phi %"class.std::__1::basic_string"* [ %2, %60 ], [ %68, %100 ], [ %68, %107 ], [ %2, %109 ]
  %116 = bitcast %"class.std::__1::basic_string"* %115 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %117 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %116, i64 0, i32 1, i32 1
  %118 = load i8, i8* %117, align 1
  %119 = icmp slt i8 %118, 0
  br i1 %119, label %120, label %123

120:                                              ; preds = %114
  %121 = bitcast %"class.std::__1::basic_string"* %115 to i8**
  %122 = load i8*, i8** %121, align 8
  tail call void @_ZdlPv(i8* %122) #13
  br label %123

123:                                              ; preds = %114, %120
  %124 = bitcast %"class.std::__1::basic_string"* %115 to i8*
  %125 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %124, i8* align 8 %125, i64 24, i1 false) #12
  store i8 0, i8* %25, align 1
  %126 = bitcast %"class.std::__1::basic_string"* %12 to i16*
  store i16 0, i16* %126, align 2
  br label %130

127:                                              ; preds = %51, %58
  %128 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  %129 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %128, i8* align 8 %129, i64 24, i1 false) #12
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %129, i8 0, i64 24, i1 false) #12
  br label %130

130:                                              ; preds = %127, %123
  %131 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 1
  %132 = icmp eq %"class.std::__1::basic_string"* %131, %1
  br i1 %132, label %133, label %11

133:                                              ; preds = %130, %6, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__124__buffered_inplace_mergeIRN4base8internal9flat_treeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS1_8identityENS_4lessIvEENS_6vectorIS9_NS7_IS9_EEEEE13value_compareENS_11__wrap_iterIPS9_EEEEvT0_SM_SM_T_NS_15iterator_traitsISM_E15difference_typeESQ_PNSP_10value_typeE(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"struct.base::internal::flat_tree<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >, base::identity, std::__1::less<void>, std::__1::vector<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >, std::__1::allocator<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> > > > >::value_compare"* dereferenceable(1), i64, i64, %"class.std::__1::basic_string"*) local_unnamed_addr #0 comdat {
  %8 = alloca %"class.std::__1::reverse_iterator.66", align 8
  %9 = alloca %"class.std::__1::reverse_iterator.66", align 8
  %10 = icmp sgt i64 %4, %5
  br i1 %10, label %13, label %11

11:                                               ; preds = %7
  %12 = icmp eq %"class.std::__1::basic_string"* %0, %1
  br i1 %12, label %15, label %18

13:                                               ; preds = %7
  %14 = icmp eq %"class.std::__1::basic_string"* %1, %2
  br i1 %14, label %28, label %36

15:                                               ; preds = %18, %11
  %16 = phi i64 [ 0, %11 ], [ %24, %18 ]
  %17 = phi %"class.std::__1::basic_string"* [ %6, %11 ], [ %26, %18 ]
  tail call void @_ZNSt3__120__half_inplace_mergeIRN4base8internal9flat_treeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS1_8identityENS_4lessIvEENS_6vectorIS9_NS7_IS9_EEEEE13value_compareEPS9_NS_11__wrap_iterISJ_EESL_EEvT0_SM_T1_SN_T2_T_(%"class.std::__1::basic_string"* %6, %"class.std::__1::basic_string"* %17, %"class.std::__1::basic_string"* %1, %"class.std::__1::basic_string"* %2, %"class.std::__1::basic_string"* %0, %"struct.base::internal::flat_tree<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >, base::identity, std::__1::less<void>, std::__1::vector<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >, std::__1::allocator<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> > > > >::value_compare"* dereferenceable(1) %3)
  br label %46

18:                                               ; preds = %11, %18
  %19 = phi %"class.std::__1::basic_string"* [ %26, %18 ], [ %6, %11 ]
  %20 = phi %"class.std::__1::basic_string"* [ %25, %18 ], [ %0, %11 ]
  %21 = phi i64 [ %24, %18 ], [ 0, %11 ]
  %22 = bitcast %"class.std::__1::basic_string"* %19 to i8*
  %23 = bitcast %"class.std::__1::basic_string"* %20 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %22, i8* align 8 %23, i64 24, i1 false) #12
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 24, i1 false) #12
  %24 = add nuw nsw i64 %21, 1
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 1
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %19, i64 1
  %27 = icmp eq %"class.std::__1::basic_string"* %25, %1
  br i1 %27, label %15, label %18

28:                                               ; preds = %36, %13
  %29 = phi i64 [ 0, %13 ], [ %42, %36 ]
  %30 = phi %"class.std::__1::basic_string"* [ %6, %13 ], [ %44, %36 ]
  %31 = getelementptr inbounds %"class.std::__1::reverse_iterator.66", %"class.std::__1::reverse_iterator.66"* %8, i64 0, i32 0, i32 0
  store %"class.std::__1::basic_string"* %0, %"class.std::__1::basic_string"** %31, align 8
  %32 = getelementptr inbounds %"class.std::__1::reverse_iterator.66", %"class.std::__1::reverse_iterator.66"* %8, i64 0, i32 1, i32 0
  store %"class.std::__1::basic_string"* %0, %"class.std::__1::basic_string"** %32, align 8
  %33 = getelementptr inbounds %"class.std::__1::reverse_iterator.66", %"class.std::__1::reverse_iterator.66"* %9, i64 0, i32 0, i32 0
  store %"class.std::__1::basic_string"* %2, %"class.std::__1::basic_string"** %33, align 8
  %34 = getelementptr inbounds %"class.std::__1::reverse_iterator.66", %"class.std::__1::reverse_iterator.66"* %9, i64 0, i32 1, i32 0
  store %"class.std::__1::basic_string"* %2, %"class.std::__1::basic_string"** %34, align 8
  %35 = ptrtoint %"struct.base::internal::flat_tree<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >, base::identity, std::__1::less<void>, std::__1::vector<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >, std::__1::allocator<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> > > > >::value_compare"* %3 to i64
  tail call void @_ZNSt3__120__half_inplace_mergeINS_8__invertIRN4base8internal9flat_treeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS2_8identityENS_4lessIvEENS_6vectorISA_NS8_ISA_EEEEE13value_compareEEENS_16reverse_iteratorIPSA_EENSL_INS_11__wrap_iterISM_EEEESQ_EEvT0_SR_T1_SS_T2_T_(%"class.std::__1::basic_string"* %30, %"class.std::__1::basic_string"* %30, %"class.std::__1::basic_string"* %6, %"class.std::__1::basic_string"* %6, %"class.std::__1::basic_string"* %1, %"class.std::__1::basic_string"* %1, %"class.std::__1::reverse_iterator.66"* nonnull byval(%"class.std::__1::reverse_iterator.66") align 8 %8, %"class.std::__1::reverse_iterator.66"* nonnull byval(%"class.std::__1::reverse_iterator.66") align 8 %9, i64 %35)
  br label %46

36:                                               ; preds = %13, %36
  %37 = phi %"class.std::__1::basic_string"* [ %44, %36 ], [ %6, %13 ]
  %38 = phi %"class.std::__1::basic_string"* [ %43, %36 ], [ %1, %13 ]
  %39 = phi i64 [ %42, %36 ], [ 0, %13 ]
  %40 = bitcast %"class.std::__1::basic_string"* %37 to i8*
  %41 = bitcast %"class.std::__1::basic_string"* %38 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* align 8 %41, i64 24, i1 false) #12
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %41, i8 0, i64 24, i1 false) #12
  %42 = add nuw nsw i64 %39, 1
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %38, i64 1
  %44 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %37, i64 1
  %45 = icmp eq %"class.std::__1::basic_string"* %43, %2
  br i1 %45, label %28, label %36

46:                                               ; preds = %28, %15
  %47 = phi i64 [ %29, %28 ], [ %16, %15 ]
  %48 = icmp eq %"class.std::__1::basic_string"* %6, null
  %49 = icmp eq i64 %47, 0
  %50 = or i1 %48, %49
  br i1 %50, label %67, label %51

51:                                               ; preds = %46, %62
  %52 = phi i64 [ %63, %62 ], [ %47, %46 ]
  %53 = phi i64 [ %64, %62 ], [ 0, %46 ]
  %54 = phi %"class.std::__1::basic_string"* [ %65, %62 ], [ %6, %46 ]
  %55 = bitcast %"class.std::__1::basic_string"* %54 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %56 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %55, i64 0, i32 1, i32 1
  %57 = load i8, i8* %56, align 1
  %58 = icmp slt i8 %57, 0
  br i1 %58, label %59, label %62

59:                                               ; preds = %51
  %60 = bitcast %"class.std::__1::basic_string"* %54 to i8**
  %61 = load i8*, i8** %60, align 8
  tail call void @_ZdlPv(i8* %61) #13
  br label %62

62:                                               ; preds = %59, %51
  %63 = phi i64 [ %52, %51 ], [ %47, %59 ]
  %64 = add nuw i64 %53, 1
  %65 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %54, i64 1
  %66 = icmp ult i64 %64, %63
  br i1 %66, label %51, label %67

67:                                               ; preds = %62, %46
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__120__half_inplace_mergeIRN4base8internal9flat_treeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS1_8identityENS_4lessIvEENS_6vectorIS9_NS7_IS9_EEEEE13value_compareEPS9_NS_11__wrap_iterISJ_EESL_EEvT0_SM_T1_SN_T2_T_(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"struct.base::internal::flat_tree<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >, base::identity, std::__1::less<void>, std::__1::vector<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >, std::__1::allocator<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> > > > >::value_compare"* dereferenceable(1)) local_unnamed_addr #0 comdat {
  %7 = icmp eq %"class.std::__1::basic_string"* %0, %1
  br i1 %7, label %108, label %8

8:                                                ; preds = %6, %103
  %9 = phi %"class.std::__1::basic_string"* [ %105, %103 ], [ %0, %6 ]
  %10 = phi %"class.std::__1::basic_string"* [ %106, %103 ], [ %4, %6 ]
  %11 = phi %"class.std::__1::basic_string"* [ %104, %103 ], [ %2, %6 ]
  %12 = icmp eq %"class.std::__1::basic_string"* %11, %3
  br i1 %12, label %13, label %32

13:                                               ; preds = %8, %23
  %14 = phi %"class.std::__1::basic_string"* [ %30, %23 ], [ %10, %8 ]
  %15 = phi %"class.std::__1::basic_string"* [ %29, %23 ], [ %9, %8 ]
  %16 = bitcast %"class.std::__1::basic_string"* %14 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %16, i64 0, i32 1, i32 1
  %18 = load i8, i8* %17, align 1
  %19 = icmp slt i8 %18, 0
  br i1 %19, label %20, label %23

20:                                               ; preds = %13
  %21 = bitcast %"class.std::__1::basic_string"* %14 to i8**
  %22 = load i8*, i8** %21, align 8
  tail call void @_ZdlPv(i8* %22) #13
  br label %23

23:                                               ; preds = %20, %13
  %24 = bitcast %"class.std::__1::basic_string"* %14 to i8*
  %25 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %24, i8* align 8 %25, i64 24, i1 false) #12
  %26 = bitcast %"class.std::__1::basic_string"* %15 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %26, i64 0, i32 1, i32 1
  store i8 0, i8* %27, align 1
  %28 = bitcast %"class.std::__1::basic_string"* %15 to i16*
  store i16 0, i16* %28, align 2
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 1
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 1
  %31 = icmp eq %"class.std::__1::basic_string"* %29, %1
  br i1 %31, label %108, label %13

32:                                               ; preds = %8
  %33 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %33, i64 0, i32 1, i32 1
  %35 = load i8, i8* %34, align 1
  %36 = icmp slt i8 %35, 0
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = load i64, i64* %37, align 8
  %39 = zext i8 %35 to i64
  %40 = select i1 %36, i64 %38, i64 %39
  %41 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %42 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %41, i64 0, i32 1, i32 1
  %43 = load i8, i8* %42, align 1
  %44 = icmp slt i8 %43, 0
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %46 = load i64, i64* %45, align 8
  %47 = zext i8 %43 to i64
  %48 = select i1 %44, i64 %46, i64 %47
  %49 = icmp ult i64 %40, %48
  %50 = select i1 %49, i64 %40, i64 %48
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %75, label %52

52:                                               ; preds = %32
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load i16*, i16** %53, align 8
  %55 = bitcast %"class.std::__1::basic_string"* %11 to i16*
  %56 = select i1 %44, i16* %54, i16* %55
  %57 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load i16*, i16** %57, align 8
  %59 = bitcast %"class.std::__1::basic_string"* %9 to i16*
  %60 = select i1 %36, i16* %58, i16* %59
  br label %61

61:                                               ; preds = %70, %52
  %62 = phi i64 [ %71, %70 ], [ %50, %52 ]
  %63 = phi i16* [ %73, %70 ], [ %60, %52 ]
  %64 = phi i16* [ %72, %70 ], [ %56, %52 ]
  %65 = load i16, i16* %64, align 2
  %66 = load i16, i16* %63, align 2
  %67 = icmp ult i16 %65, %66
  br i1 %67, label %77, label %68

68:                                               ; preds = %61
  %69 = icmp ult i16 %66, %65
  br i1 %69, label %90, label %70

70:                                               ; preds = %68
  %71 = add i64 %62, -1
  %72 = getelementptr inbounds i16, i16* %64, i64 1
  %73 = getelementptr inbounds i16, i16* %63, i64 1
  %74 = icmp eq i64 %71, 0
  br i1 %74, label %75, label %61

75:                                               ; preds = %70, %32
  %76 = icmp ult i64 %48, %40
  br i1 %76, label %77, label %90

77:                                               ; preds = %61, %75
  %78 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %79 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %78, i64 0, i32 1, i32 1
  %80 = load i8, i8* %79, align 1
  %81 = icmp slt i8 %80, 0
  br i1 %81, label %82, label %85

82:                                               ; preds = %77
  %83 = bitcast %"class.std::__1::basic_string"* %10 to i8**
  %84 = load i8*, i8** %83, align 8
  tail call void @_ZdlPv(i8* %84) #13
  br label %85

85:                                               ; preds = %77, %82
  %86 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  %87 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %86, i8* align 8 %87, i64 24, i1 false) #12
  store i8 0, i8* %42, align 1
  %88 = bitcast %"class.std::__1::basic_string"* %11 to i16*
  store i16 0, i16* %88, align 2
  %89 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 1
  br label %103

90:                                               ; preds = %68, %75
  %91 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %92 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %91, i64 0, i32 1, i32 1
  %93 = load i8, i8* %92, align 1
  %94 = icmp slt i8 %93, 0
  br i1 %94, label %95, label %98

95:                                               ; preds = %90
  %96 = bitcast %"class.std::__1::basic_string"* %10 to i8**
  %97 = load i8*, i8** %96, align 8
  tail call void @_ZdlPv(i8* %97) #13
  br label %98

98:                                               ; preds = %90, %95
  %99 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  %100 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %99, i8* align 8 %100, i64 24, i1 false) #12
  store i8 0, i8* %34, align 1
  %101 = bitcast %"class.std::__1::basic_string"* %9 to i16*
  store i16 0, i16* %101, align 2
  %102 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 1
  br label %103

103:                                              ; preds = %85, %98
  %104 = phi %"class.std::__1::basic_string"* [ %89, %85 ], [ %11, %98 ]
  %105 = phi %"class.std::__1::basic_string"* [ %9, %85 ], [ %102, %98 ]
  %106 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 1
  %107 = icmp eq %"class.std::__1::basic_string"* %105, %1
  br i1 %107, label %108, label %8

108:                                              ; preds = %103, %23, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__120__half_inplace_mergeINS_8__invertIRN4base8internal9flat_treeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS2_8identityENS_4lessIvEENS_6vectorISA_NS8_ISA_EEEEE13value_compareEEENS_16reverse_iteratorIPSA_EENSL_INS_11__wrap_iterISM_EEEESQ_EEvT0_SR_T1_SS_T2_T_(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::reverse_iterator.66"* byval(%"class.std::__1::reverse_iterator.66") align 8, %"class.std::__1::reverse_iterator.66"* byval(%"class.std::__1::reverse_iterator.66") align 8, i64) local_unnamed_addr #0 comdat {
  %10 = icmp eq %"class.std::__1::basic_string"* %1, %3
  br i1 %10, label %119, label %11

11:                                               ; preds = %9
  %12 = getelementptr inbounds %"class.std::__1::reverse_iterator.66", %"class.std::__1::reverse_iterator.66"* %6, i64 0, i32 1, i32 0
  %13 = getelementptr inbounds %"class.std::__1::reverse_iterator.66", %"class.std::__1::reverse_iterator.66"* %7, i64 0, i32 1, i32 0
  br label %14

14:                                               ; preds = %11, %107
  %15 = phi %"class.std::__1::basic_string"* [ %1, %11 ], [ %112, %107 ]
  %16 = phi %"class.std::__1::basic_string"* [ %5, %11 ], [ %111, %107 ]
  %17 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %12, align 8
  %18 = icmp eq %"class.std::__1::basic_string"* %16, %17
  br i1 %18, label %19, label %40

19:                                               ; preds = %14
  %20 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %13, align 8
  br label %21

21:                                               ; preds = %19, %33
  %22 = phi %"class.std::__1::basic_string"* [ %24, %33 ], [ %15, %19 ]
  %23 = phi %"class.std::__1::basic_string"* [ %25, %33 ], [ %20, %19 ]
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %22, i64 -1
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %23, i64 -1
  %26 = bitcast %"class.std::__1::basic_string"* %25 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %26, i64 0, i32 1, i32 1
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  br i1 %29, label %30, label %33

30:                                               ; preds = %21
  %31 = bitcast %"class.std::__1::basic_string"* %25 to i8**
  %32 = load i8*, i8** %31, align 8
  tail call void @_ZdlPv(i8* %32) #13
  br label %33

33:                                               ; preds = %30, %21
  %34 = bitcast %"class.std::__1::basic_string"* %25 to i8*
  %35 = bitcast %"class.std::__1::basic_string"* %24 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %34, i8* align 8 %35, i64 24, i1 false) #12
  %36 = bitcast %"class.std::__1::basic_string"* %24 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %37 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %36, i64 0, i32 1, i32 1
  store i8 0, i8* %37, align 1
  %38 = bitcast %"class.std::__1::basic_string"* %24 to i16*
  store i16 0, i16* %38, align 2
  %39 = icmp eq %"class.std::__1::basic_string"* %24, %3
  br i1 %39, label %119, label %21

40:                                               ; preds = %14
  %41 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 -1
  %42 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 -1
  %43 = bitcast %"class.std::__1::basic_string"* %41 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %44 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %43, i64 0, i32 1, i32 1
  %45 = load i8, i8* %44, align 1
  %46 = icmp slt i8 %45, 0
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %48 = load i64, i64* %47, align 8
  %49 = zext i8 %45 to i64
  %50 = select i1 %46, i64 %48, i64 %49
  %51 = bitcast %"class.std::__1::basic_string"* %42 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %52 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %51, i64 0, i32 1, i32 1
  %53 = load i8, i8* %52, align 1
  %54 = icmp slt i8 %53, 0
  %55 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %56 = load i64, i64* %55, align 8
  %57 = zext i8 %53 to i64
  %58 = select i1 %54, i64 %56, i64 %57
  %59 = icmp ult i64 %50, %58
  %60 = select i1 %59, i64 %50, i64 %58
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %85, label %62

62:                                               ; preds = %40
  %63 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %42, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load i16*, i16** %63, align 8
  %65 = bitcast %"class.std::__1::basic_string"* %42 to i16*
  %66 = select i1 %54, i16* %64, i16* %65
  %67 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %41, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load i16*, i16** %67, align 8
  %69 = bitcast %"class.std::__1::basic_string"* %41 to i16*
  %70 = select i1 %46, i16* %68, i16* %69
  br label %71

71:                                               ; preds = %80, %62
  %72 = phi i64 [ %81, %80 ], [ %60, %62 ]
  %73 = phi i16* [ %83, %80 ], [ %70, %62 ]
  %74 = phi i16* [ %82, %80 ], [ %66, %62 ]
  %75 = load i16, i16* %74, align 2
  %76 = load i16, i16* %73, align 2
  %77 = icmp ult i16 %75, %76
  br i1 %77, label %87, label %78

78:                                               ; preds = %71
  %79 = icmp ult i16 %76, %75
  br i1 %79, label %97, label %80

80:                                               ; preds = %78
  %81 = add i64 %72, -1
  %82 = getelementptr inbounds i16, i16* %74, i64 1
  %83 = getelementptr inbounds i16, i16* %73, i64 1
  %84 = icmp eq i64 %81, 0
  br i1 %84, label %85, label %71

85:                                               ; preds = %80, %40
  %86 = icmp ult i64 %58, %50
  br i1 %86, label %87, label %97

87:                                               ; preds = %71, %85
  %88 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %13, align 8
  %89 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %88, i64 -1
  %90 = bitcast %"class.std::__1::basic_string"* %89 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %91 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %90, i64 0, i32 1, i32 1
  %92 = load i8, i8* %91, align 1
  %93 = icmp slt i8 %92, 0
  br i1 %93, label %94, label %107

94:                                               ; preds = %87
  %95 = bitcast %"class.std::__1::basic_string"* %89 to i8**
  %96 = load i8*, i8** %95, align 8
  tail call void @_ZdlPv(i8* %96) #13
  br label %107

97:                                               ; preds = %78, %85
  %98 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %13, align 8
  %99 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %98, i64 -1
  %100 = bitcast %"class.std::__1::basic_string"* %99 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %101 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %100, i64 0, i32 1, i32 1
  %102 = load i8, i8* %101, align 1
  %103 = icmp slt i8 %102, 0
  br i1 %103, label %104, label %107

104:                                              ; preds = %97
  %105 = bitcast %"class.std::__1::basic_string"* %99 to i8**
  %106 = load i8*, i8** %105, align 8
  tail call void @_ZdlPv(i8* %106) #13
  br label %107

107:                                              ; preds = %104, %97, %94, %87
  %108 = phi %"class.std::__1::basic_string"* [ %89, %87 ], [ %89, %94 ], [ %99, %97 ], [ %99, %104 ]
  %109 = phi %"class.std::__1::basic_string"* [ %41, %87 ], [ %41, %94 ], [ %42, %97 ], [ %42, %104 ]
  %110 = phi i8* [ %44, %87 ], [ %44, %94 ], [ %52, %97 ], [ %52, %104 ]
  %111 = phi %"class.std::__1::basic_string"* [ %41, %87 ], [ %41, %94 ], [ %16, %97 ], [ %16, %104 ]
  %112 = phi %"class.std::__1::basic_string"* [ %15, %87 ], [ %15, %94 ], [ %42, %97 ], [ %42, %104 ]
  %113 = bitcast %"class.std::__1::basic_string"* %108 to i8*
  %114 = bitcast %"class.std::__1::basic_string"* %109 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %113, i8* align 8 %114, i64 24, i1 false) #12
  store i8 0, i8* %110, align 1
  %115 = bitcast %"class.std::__1::basic_string"* %109 to i16*
  store i16 0, i16* %115, align 2
  %116 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %13, align 8
  %117 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %116, i64 -1
  store %"class.std::__1::basic_string"* %117, %"class.std::__1::basic_string"** %13, align 8
  %118 = icmp eq %"class.std::__1::basic_string"* %112, %3
  br i1 %118, label %119, label %14

119:                                              ; preds = %107, %33, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIDsNS1_8identityENS_4lessIvEENS_6vectorIDsNS_9allocatorIDsEEEEE13value_compareENS_11__wrap_iterIPDsEEEEvT0_SH_T_NS_15iterator_traitsISH_E15difference_typeEPNSK_10value_typeEl(i16*, i16*, %"struct.base::internal::flat_tree<char16_t, base::identity, std::__1::less<void>, std::__1::vector<char16_t, std::__1::allocator<char16_t> > >::value_compare"* dereferenceable(1), i64, i16*, i64) local_unnamed_addr #0 comdat {
  %7 = ptrtoint i16* %0 to i64
  switch i64 %3, label %14 [
    i64 0, label %400
    i64 1, label %400
    i64 2, label %8
  ]

8:                                                ; preds = %6
  %9 = getelementptr inbounds i16, i16* %1, i64 -1
  %10 = load i16, i16* %9, align 2
  %11 = load i16, i16* %0, align 2
  %12 = icmp ult i16 %10, %11
  br i1 %12, label %13, label %400

13:                                               ; preds = %8
  store i16 %10, i16* %0, align 2
  store i16 %11, i16* %9, align 2
  br label %400

14:                                               ; preds = %6
  %15 = icmp slt i64 %3, 129
  br i1 %15, label %16, label %58

16:                                               ; preds = %14
  %17 = icmp eq i16* %0, %1
  br i1 %17, label %400, label %18

18:                                               ; preds = %16
  %19 = getelementptr inbounds i16, i16* %0, i64 1
  %20 = icmp eq i16* %19, %1
  br i1 %20, label %400, label %21

21:                                               ; preds = %18
  %22 = getelementptr i16, i16* %1, i64 -2
  %23 = ptrtoint i16* %22 to i64
  %24 = sub i64 %23, %7
  %25 = and i64 %24, 2
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %27, label %39

27:                                               ; preds = %21
  %28 = load i16, i16* %19, align 2
  br label %29

29:                                               ; preds = %34, %27
  %30 = phi i16* [ %31, %34 ], [ %19, %27 ]
  %31 = getelementptr inbounds i16, i16* %30, i64 -1
  %32 = load i16, i16* %31, align 2
  %33 = icmp ult i16 %28, %32
  br i1 %33, label %34, label %36

34:                                               ; preds = %29
  store i16 %32, i16* %30, align 2
  %35 = icmp eq i16* %31, %0
  br i1 %35, label %36, label %29

36:                                               ; preds = %29, %34
  %37 = phi i16* [ %30, %29 ], [ %0, %34 ]
  store i16 %28, i16* %37, align 2
  %38 = getelementptr inbounds i16, i16* %0, i64 2
  br label %39

39:                                               ; preds = %36, %21
  %40 = phi i16* [ %19, %21 ], [ %38, %36 ]
  %41 = icmp ult i64 %24, 2
  br i1 %41, label %400, label %42

42:                                               ; preds = %39, %408
  %43 = phi i16* [ %410, %408 ], [ %40, %39 ]
  %44 = load i16, i16* %43, align 2
  %45 = icmp eq i16* %43, %0
  br i1 %45, label %51, label %46

46:                                               ; preds = %42, %56
  %47 = phi i16* [ %48, %56 ], [ %43, %42 ]
  %48 = getelementptr inbounds i16, i16* %47, i64 -1
  %49 = load i16, i16* %48, align 2
  %50 = icmp ult i16 %44, %49
  br i1 %50, label %56, label %51

51:                                               ; preds = %56, %46, %42
  %52 = phi i16* [ %0, %42 ], [ %47, %46 ], [ %0, %56 ]
  store i16 %44, i16* %52, align 2
  %53 = getelementptr inbounds i16, i16* %43, i64 1
  %54 = load i16, i16* %53, align 2
  %55 = icmp eq i16* %53, %0
  br i1 %55, label %408, label %401

56:                                               ; preds = %46
  store i16 %49, i16* %47, align 2
  %57 = icmp eq i16* %48, %0
  br i1 %57, label %51, label %46

58:                                               ; preds = %14
  %59 = lshr i64 %3, 1
  %60 = getelementptr inbounds i16, i16* %0, i64 %59
  %61 = icmp sgt i64 %3, %5
  br i1 %61, label %398, label %62

62:                                               ; preds = %58
  tail call void @_ZNSt3__118__stable_sort_moveIRN4base8internal9flat_treeIDsNS1_8identityENS_4lessIvEENS_6vectorIDsNS_9allocatorIDsEEEEE13value_compareENS_11__wrap_iterIPDsEEEEvT0_SH_T_NS_15iterator_traitsISH_E15difference_typeEPNSK_10value_typeE(i16* %0, i16* %60, %"struct.base::internal::flat_tree<char16_t, base::identity, std::__1::less<void>, std::__1::vector<char16_t, std::__1::allocator<char16_t> > >::value_compare"* dereferenceable(1) %2, i64 %59, i16* %4)
  %63 = sub nsw i64 %3, %59
  %64 = getelementptr inbounds i16, i16* %4, i64 %59
  tail call void @_ZNSt3__118__stable_sort_moveIRN4base8internal9flat_treeIDsNS1_8identityENS_4lessIvEENS_6vectorIDsNS_9allocatorIDsEEEEE13value_compareENS_11__wrap_iterIPDsEEEEvT0_SH_T_NS_15iterator_traitsISH_E15difference_typeEPNSK_10value_typeE(i16* %60, i16* %1, %"struct.base::internal::flat_tree<char16_t, base::identity, std::__1::less<void>, std::__1::vector<char16_t, std::__1::allocator<char16_t> > >::value_compare"* dereferenceable(1) %2, i64 %63, i16* %64)
  %65 = getelementptr inbounds i16, i16* %4, i64 %3
  br label %195

66:                                               ; preds = %365
  %67 = ptrtoint i16* %366 to i64
  %68 = icmp eq i16* %366, %65
  br i1 %68, label %400, label %69

69:                                               ; preds = %66
  %70 = add i64 %3, -1
  %71 = getelementptr i16, i16* %4, i64 %70
  %72 = ptrtoint i16* %71 to i64
  %73 = sub i64 %72, %67
  %74 = lshr i64 %73, 1
  %75 = add nuw i64 %74, 1
  %76 = icmp ult i64 %75, 16
  br i1 %76, label %77, label %102

77:                                               ; preds = %193, %102, %69
  %78 = phi i16* [ %366, %102 ], [ %366, %69 ], [ %116, %193 ]
  %79 = phi i16* [ %368, %102 ], [ %368, %69 ], [ %117, %193 ]
  %80 = ptrtoint i16* %78 to i64
  %81 = add i64 %3, -1
  %82 = getelementptr i16, i16* %4, i64 %81
  %83 = ptrtoint i16* %82 to i64
  %84 = sub i64 %83, %80
  %85 = lshr i64 %84, 1
  %86 = add nuw i64 %85, 1
  %87 = and i64 %86, 7
  %88 = icmp eq i64 %87, 0
  br i1 %88, label %98, label %89

89:                                               ; preds = %77, %89
  %90 = phi i16* [ %94, %89 ], [ %78, %77 ]
  %91 = phi i16* [ %95, %89 ], [ %79, %77 ]
  %92 = phi i64 [ %96, %89 ], [ %87, %77 ]
  %93 = load i16, i16* %90, align 2
  store i16 %93, i16* %91, align 2
  %94 = getelementptr inbounds i16, i16* %90, i64 1
  %95 = getelementptr inbounds i16, i16* %91, i64 1
  %96 = add i64 %92, -1
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %98, label %89, !llvm.loop !58

98:                                               ; preds = %89, %77
  %99 = phi i16* [ %78, %77 ], [ %94, %89 ]
  %100 = phi i16* [ %79, %77 ], [ %95, %89 ]
  %101 = icmp ult i64 %84, 14
  br i1 %101, label %400, label %370

102:                                              ; preds = %69
  %103 = add i64 %3, -1
  %104 = getelementptr i16, i16* %4, i64 %103
  %105 = ptrtoint i16* %104 to i64
  %106 = sub i64 %105, %67
  %107 = lshr i64 %106, 1
  %108 = add nuw i64 %107, 1
  %109 = getelementptr i16, i16* %368, i64 %108
  %110 = getelementptr i16, i16* %366, i64 %108
  %111 = icmp ult i16* %368, %110
  %112 = icmp ult i16* %366, %109
  %113 = and i1 %111, %112
  br i1 %113, label %77, label %114

114:                                              ; preds = %102
  %115 = and i64 %75, -16
  %116 = getelementptr i16, i16* %366, i64 %115
  %117 = getelementptr i16, i16* %368, i64 %115
  %118 = add i64 %115, -16
  %119 = lshr exact i64 %118, 4
  %120 = add nuw nsw i64 %119, 1
  %121 = and i64 %120, 3
  %122 = icmp ult i64 %118, 48
  br i1 %122, label %174, label %123

123:                                              ; preds = %114
  %124 = sub nsw i64 %120, %121
  br label %125

125:                                              ; preds = %125, %123
  %126 = phi i64 [ 0, %123 ], [ %171, %125 ]
  %127 = phi i64 [ %124, %123 ], [ %172, %125 ]
  %128 = getelementptr i16, i16* %366, i64 %126
  %129 = getelementptr i16, i16* %368, i64 %126
  %130 = bitcast i16* %128 to <8 x i16>*
  %131 = load <8 x i16>, <8 x i16>* %130, align 2, !alias.scope !59
  %132 = getelementptr i16, i16* %128, i64 8
  %133 = bitcast i16* %132 to <8 x i16>*
  %134 = load <8 x i16>, <8 x i16>* %133, align 2, !alias.scope !59
  %135 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %131, <8 x i16>* %135, align 2, !alias.scope !62, !noalias !59
  %136 = getelementptr i16, i16* %129, i64 8
  %137 = bitcast i16* %136 to <8 x i16>*
  store <8 x i16> %134, <8 x i16>* %137, align 2, !alias.scope !62, !noalias !59
  %138 = or i64 %126, 16
  %139 = getelementptr i16, i16* %366, i64 %138
  %140 = getelementptr i16, i16* %368, i64 %138
  %141 = bitcast i16* %139 to <8 x i16>*
  %142 = load <8 x i16>, <8 x i16>* %141, align 2, !alias.scope !59
  %143 = getelementptr i16, i16* %139, i64 8
  %144 = bitcast i16* %143 to <8 x i16>*
  %145 = load <8 x i16>, <8 x i16>* %144, align 2, !alias.scope !59
  %146 = bitcast i16* %140 to <8 x i16>*
  store <8 x i16> %142, <8 x i16>* %146, align 2, !alias.scope !62, !noalias !59
  %147 = getelementptr i16, i16* %140, i64 8
  %148 = bitcast i16* %147 to <8 x i16>*
  store <8 x i16> %145, <8 x i16>* %148, align 2, !alias.scope !62, !noalias !59
  %149 = or i64 %126, 32
  %150 = getelementptr i16, i16* %366, i64 %149
  %151 = getelementptr i16, i16* %368, i64 %149
  %152 = bitcast i16* %150 to <8 x i16>*
  %153 = load <8 x i16>, <8 x i16>* %152, align 2, !alias.scope !59
  %154 = getelementptr i16, i16* %150, i64 8
  %155 = bitcast i16* %154 to <8 x i16>*
  %156 = load <8 x i16>, <8 x i16>* %155, align 2, !alias.scope !59
  %157 = bitcast i16* %151 to <8 x i16>*
  store <8 x i16> %153, <8 x i16>* %157, align 2, !alias.scope !62, !noalias !59
  %158 = getelementptr i16, i16* %151, i64 8
  %159 = bitcast i16* %158 to <8 x i16>*
  store <8 x i16> %156, <8 x i16>* %159, align 2, !alias.scope !62, !noalias !59
  %160 = or i64 %126, 48
  %161 = getelementptr i16, i16* %366, i64 %160
  %162 = getelementptr i16, i16* %368, i64 %160
  %163 = bitcast i16* %161 to <8 x i16>*
  %164 = load <8 x i16>, <8 x i16>* %163, align 2, !alias.scope !59
  %165 = getelementptr i16, i16* %161, i64 8
  %166 = bitcast i16* %165 to <8 x i16>*
  %167 = load <8 x i16>, <8 x i16>* %166, align 2, !alias.scope !59
  %168 = bitcast i16* %162 to <8 x i16>*
  store <8 x i16> %164, <8 x i16>* %168, align 2, !alias.scope !62, !noalias !59
  %169 = getelementptr i16, i16* %162, i64 8
  %170 = bitcast i16* %169 to <8 x i16>*
  store <8 x i16> %167, <8 x i16>* %170, align 2, !alias.scope !62, !noalias !59
  %171 = add i64 %126, 64
  %172 = add i64 %127, -4
  %173 = icmp eq i64 %172, 0
  br i1 %173, label %174, label %125, !llvm.loop !64

174:                                              ; preds = %125, %114
  %175 = phi i64 [ 0, %114 ], [ %171, %125 ]
  %176 = icmp eq i64 %121, 0
  br i1 %176, label %193, label %177

177:                                              ; preds = %174, %177
  %178 = phi i64 [ %190, %177 ], [ %175, %174 ]
  %179 = phi i64 [ %191, %177 ], [ %121, %174 ]
  %180 = getelementptr i16, i16* %366, i64 %178
  %181 = getelementptr i16, i16* %368, i64 %178
  %182 = bitcast i16* %180 to <8 x i16>*
  %183 = load <8 x i16>, <8 x i16>* %182, align 2, !alias.scope !59
  %184 = getelementptr i16, i16* %180, i64 8
  %185 = bitcast i16* %184 to <8 x i16>*
  %186 = load <8 x i16>, <8 x i16>* %185, align 2, !alias.scope !59
  %187 = bitcast i16* %181 to <8 x i16>*
  store <8 x i16> %183, <8 x i16>* %187, align 2, !alias.scope !62, !noalias !59
  %188 = getelementptr i16, i16* %181, i64 8
  %189 = bitcast i16* %188 to <8 x i16>*
  store <8 x i16> %186, <8 x i16>* %189, align 2, !alias.scope !62, !noalias !59
  %190 = add i64 %178, 16
  %191 = add i64 %179, -1
  %192 = icmp eq i64 %191, 0
  br i1 %192, label %193, label %177, !llvm.loop !65

193:                                              ; preds = %177, %174
  %194 = icmp eq i64 %75, %115
  br i1 %194, label %400, label %77

195:                                              ; preds = %62, %365
  %196 = phi i16* [ %367, %365 ], [ %4, %62 ]
  %197 = phi i16* [ %366, %365 ], [ %64, %62 ]
  %198 = phi i16* [ %368, %365 ], [ %0, %62 ]
  %199 = icmp eq i16* %197, %65
  br i1 %199, label %200, label %357

200:                                              ; preds = %195
  %201 = ptrtoint i16* %196 to i64
  %202 = icmp eq i16* %196, %64
  br i1 %202, label %400, label %203

203:                                              ; preds = %200
  %204 = add nsw i64 %59, -1
  %205 = getelementptr i16, i16* %4, i64 %204
  %206 = ptrtoint i16* %205 to i64
  %207 = sub i64 %206, %201
  %208 = lshr i64 %207, 1
  %209 = add nuw i64 %208, 1
  %210 = icmp ult i64 %209, 16
  br i1 %210, label %304, label %211

211:                                              ; preds = %203
  %212 = add nsw i64 %59, -1
  %213 = getelementptr i16, i16* %4, i64 %212
  %214 = ptrtoint i16* %213 to i64
  %215 = sub i64 %214, %201
  %216 = lshr i64 %215, 1
  %217 = add nuw i64 %216, 1
  %218 = getelementptr i16, i16* %198, i64 %217
  %219 = getelementptr i16, i16* %196, i64 %217
  %220 = icmp ult i16* %198, %219
  %221 = icmp ult i16* %196, %218
  %222 = and i1 %220, %221
  br i1 %222, label %304, label %223

223:                                              ; preds = %211
  %224 = and i64 %209, -16
  %225 = getelementptr i16, i16* %196, i64 %224
  %226 = getelementptr i16, i16* %198, i64 %224
  %227 = add i64 %224, -16
  %228 = lshr exact i64 %227, 4
  %229 = add nuw nsw i64 %228, 1
  %230 = and i64 %229, 3
  %231 = icmp ult i64 %227, 48
  br i1 %231, label %283, label %232

232:                                              ; preds = %223
  %233 = sub nsw i64 %229, %230
  br label %234

234:                                              ; preds = %234, %232
  %235 = phi i64 [ 0, %232 ], [ %280, %234 ]
  %236 = phi i64 [ %233, %232 ], [ %281, %234 ]
  %237 = getelementptr i16, i16* %196, i64 %235
  %238 = getelementptr i16, i16* %198, i64 %235
  %239 = bitcast i16* %237 to <8 x i16>*
  %240 = load <8 x i16>, <8 x i16>* %239, align 2, !alias.scope !66
  %241 = getelementptr i16, i16* %237, i64 8
  %242 = bitcast i16* %241 to <8 x i16>*
  %243 = load <8 x i16>, <8 x i16>* %242, align 2, !alias.scope !66
  %244 = bitcast i16* %238 to <8 x i16>*
  store <8 x i16> %240, <8 x i16>* %244, align 2, !alias.scope !69, !noalias !66
  %245 = getelementptr i16, i16* %238, i64 8
  %246 = bitcast i16* %245 to <8 x i16>*
  store <8 x i16> %243, <8 x i16>* %246, align 2, !alias.scope !69, !noalias !66
  %247 = or i64 %235, 16
  %248 = getelementptr i16, i16* %196, i64 %247
  %249 = getelementptr i16, i16* %198, i64 %247
  %250 = bitcast i16* %248 to <8 x i16>*
  %251 = load <8 x i16>, <8 x i16>* %250, align 2, !alias.scope !66
  %252 = getelementptr i16, i16* %248, i64 8
  %253 = bitcast i16* %252 to <8 x i16>*
  %254 = load <8 x i16>, <8 x i16>* %253, align 2, !alias.scope !66
  %255 = bitcast i16* %249 to <8 x i16>*
  store <8 x i16> %251, <8 x i16>* %255, align 2, !alias.scope !69, !noalias !66
  %256 = getelementptr i16, i16* %249, i64 8
  %257 = bitcast i16* %256 to <8 x i16>*
  store <8 x i16> %254, <8 x i16>* %257, align 2, !alias.scope !69, !noalias !66
  %258 = or i64 %235, 32
  %259 = getelementptr i16, i16* %196, i64 %258
  %260 = getelementptr i16, i16* %198, i64 %258
  %261 = bitcast i16* %259 to <8 x i16>*
  %262 = load <8 x i16>, <8 x i16>* %261, align 2, !alias.scope !66
  %263 = getelementptr i16, i16* %259, i64 8
  %264 = bitcast i16* %263 to <8 x i16>*
  %265 = load <8 x i16>, <8 x i16>* %264, align 2, !alias.scope !66
  %266 = bitcast i16* %260 to <8 x i16>*
  store <8 x i16> %262, <8 x i16>* %266, align 2, !alias.scope !69, !noalias !66
  %267 = getelementptr i16, i16* %260, i64 8
  %268 = bitcast i16* %267 to <8 x i16>*
  store <8 x i16> %265, <8 x i16>* %268, align 2, !alias.scope !69, !noalias !66
  %269 = or i64 %235, 48
  %270 = getelementptr i16, i16* %196, i64 %269
  %271 = getelementptr i16, i16* %198, i64 %269
  %272 = bitcast i16* %270 to <8 x i16>*
  %273 = load <8 x i16>, <8 x i16>* %272, align 2, !alias.scope !66
  %274 = getelementptr i16, i16* %270, i64 8
  %275 = bitcast i16* %274 to <8 x i16>*
  %276 = load <8 x i16>, <8 x i16>* %275, align 2, !alias.scope !66
  %277 = bitcast i16* %271 to <8 x i16>*
  store <8 x i16> %273, <8 x i16>* %277, align 2, !alias.scope !69, !noalias !66
  %278 = getelementptr i16, i16* %271, i64 8
  %279 = bitcast i16* %278 to <8 x i16>*
  store <8 x i16> %276, <8 x i16>* %279, align 2, !alias.scope !69, !noalias !66
  %280 = add i64 %235, 64
  %281 = add i64 %236, -4
  %282 = icmp eq i64 %281, 0
  br i1 %282, label %283, label %234, !llvm.loop !71

283:                                              ; preds = %234, %223
  %284 = phi i64 [ 0, %223 ], [ %280, %234 ]
  %285 = icmp eq i64 %230, 0
  br i1 %285, label %302, label %286

286:                                              ; preds = %283, %286
  %287 = phi i64 [ %299, %286 ], [ %284, %283 ]
  %288 = phi i64 [ %300, %286 ], [ %230, %283 ]
  %289 = getelementptr i16, i16* %196, i64 %287
  %290 = getelementptr i16, i16* %198, i64 %287
  %291 = bitcast i16* %289 to <8 x i16>*
  %292 = load <8 x i16>, <8 x i16>* %291, align 2, !alias.scope !66
  %293 = getelementptr i16, i16* %289, i64 8
  %294 = bitcast i16* %293 to <8 x i16>*
  %295 = load <8 x i16>, <8 x i16>* %294, align 2, !alias.scope !66
  %296 = bitcast i16* %290 to <8 x i16>*
  store <8 x i16> %292, <8 x i16>* %296, align 2, !alias.scope !69, !noalias !66
  %297 = getelementptr i16, i16* %290, i64 8
  %298 = bitcast i16* %297 to <8 x i16>*
  store <8 x i16> %295, <8 x i16>* %298, align 2, !alias.scope !69, !noalias !66
  %299 = add i64 %287, 16
  %300 = add i64 %288, -1
  %301 = icmp eq i64 %300, 0
  br i1 %301, label %302, label %286, !llvm.loop !72

302:                                              ; preds = %286, %283
  %303 = icmp eq i64 %209, %224
  br i1 %303, label %400, label %304

304:                                              ; preds = %302, %211, %203
  %305 = phi i16* [ %196, %211 ], [ %196, %203 ], [ %225, %302 ]
  %306 = phi i16* [ %198, %211 ], [ %198, %203 ], [ %226, %302 ]
  %307 = ptrtoint i16* %305 to i64
  %308 = add nsw i64 %59, -1
  %309 = getelementptr i16, i16* %4, i64 %308
  %310 = ptrtoint i16* %309 to i64
  %311 = sub i64 %310, %307
  %312 = lshr i64 %311, 1
  %313 = add nuw i64 %312, 1
  %314 = and i64 %313, 7
  %315 = icmp eq i64 %314, 0
  br i1 %315, label %325, label %316

316:                                              ; preds = %304, %316
  %317 = phi i16* [ %321, %316 ], [ %305, %304 ]
  %318 = phi i16* [ %322, %316 ], [ %306, %304 ]
  %319 = phi i64 [ %323, %316 ], [ %314, %304 ]
  %320 = load i16, i16* %317, align 2
  store i16 %320, i16* %318, align 2
  %321 = getelementptr inbounds i16, i16* %317, i64 1
  %322 = getelementptr inbounds i16, i16* %318, i64 1
  %323 = add i64 %319, -1
  %324 = icmp eq i64 %323, 0
  br i1 %324, label %325, label %316, !llvm.loop !73

325:                                              ; preds = %316, %304
  %326 = phi i16* [ %305, %304 ], [ %321, %316 ]
  %327 = phi i16* [ %306, %304 ], [ %322, %316 ]
  %328 = icmp ult i64 %311, 14
  br i1 %328, label %400, label %329

329:                                              ; preds = %325, %329
  %330 = phi i16* [ %354, %329 ], [ %326, %325 ]
  %331 = phi i16* [ %355, %329 ], [ %327, %325 ]
  %332 = load i16, i16* %330, align 2
  store i16 %332, i16* %331, align 2
  %333 = getelementptr inbounds i16, i16* %330, i64 1
  %334 = getelementptr inbounds i16, i16* %331, i64 1
  %335 = load i16, i16* %333, align 2
  store i16 %335, i16* %334, align 2
  %336 = getelementptr inbounds i16, i16* %330, i64 2
  %337 = getelementptr inbounds i16, i16* %331, i64 2
  %338 = load i16, i16* %336, align 2
  store i16 %338, i16* %337, align 2
  %339 = getelementptr inbounds i16, i16* %330, i64 3
  %340 = getelementptr inbounds i16, i16* %331, i64 3
  %341 = load i16, i16* %339, align 2
  store i16 %341, i16* %340, align 2
  %342 = getelementptr inbounds i16, i16* %330, i64 4
  %343 = getelementptr inbounds i16, i16* %331, i64 4
  %344 = load i16, i16* %342, align 2
  store i16 %344, i16* %343, align 2
  %345 = getelementptr inbounds i16, i16* %330, i64 5
  %346 = getelementptr inbounds i16, i16* %331, i64 5
  %347 = load i16, i16* %345, align 2
  store i16 %347, i16* %346, align 2
  %348 = getelementptr inbounds i16, i16* %330, i64 6
  %349 = getelementptr inbounds i16, i16* %331, i64 6
  %350 = load i16, i16* %348, align 2
  store i16 %350, i16* %349, align 2
  %351 = getelementptr inbounds i16, i16* %330, i64 7
  %352 = getelementptr inbounds i16, i16* %331, i64 7
  %353 = load i16, i16* %351, align 2
  store i16 %353, i16* %352, align 2
  %354 = getelementptr inbounds i16, i16* %330, i64 8
  %355 = getelementptr inbounds i16, i16* %331, i64 8
  %356 = icmp eq i16* %354, %64
  br i1 %356, label %400, label %329, !llvm.loop !74

357:                                              ; preds = %195
  %358 = load i16, i16* %197, align 2
  %359 = load i16, i16* %196, align 2
  %360 = icmp ult i16 %358, %359
  br i1 %360, label %361, label %363

361:                                              ; preds = %357
  store i16 %358, i16* %198, align 2
  %362 = getelementptr inbounds i16, i16* %197, i64 1
  br label %365

363:                                              ; preds = %357
  store i16 %359, i16* %198, align 2
  %364 = getelementptr inbounds i16, i16* %196, i64 1
  br label %365

365:                                              ; preds = %363, %361
  %366 = phi i16* [ %362, %361 ], [ %197, %363 ]
  %367 = phi i16* [ %196, %361 ], [ %364, %363 ]
  %368 = getelementptr inbounds i16, i16* %198, i64 1
  %369 = icmp eq i16* %367, %64
  br i1 %369, label %66, label %195

370:                                              ; preds = %98, %370
  %371 = phi i16* [ %395, %370 ], [ %99, %98 ]
  %372 = phi i16* [ %396, %370 ], [ %100, %98 ]
  %373 = load i16, i16* %371, align 2
  store i16 %373, i16* %372, align 2
  %374 = getelementptr inbounds i16, i16* %371, i64 1
  %375 = getelementptr inbounds i16, i16* %372, i64 1
  %376 = load i16, i16* %374, align 2
  store i16 %376, i16* %375, align 2
  %377 = getelementptr inbounds i16, i16* %371, i64 2
  %378 = getelementptr inbounds i16, i16* %372, i64 2
  %379 = load i16, i16* %377, align 2
  store i16 %379, i16* %378, align 2
  %380 = getelementptr inbounds i16, i16* %371, i64 3
  %381 = getelementptr inbounds i16, i16* %372, i64 3
  %382 = load i16, i16* %380, align 2
  store i16 %382, i16* %381, align 2
  %383 = getelementptr inbounds i16, i16* %371, i64 4
  %384 = getelementptr inbounds i16, i16* %372, i64 4
  %385 = load i16, i16* %383, align 2
  store i16 %385, i16* %384, align 2
  %386 = getelementptr inbounds i16, i16* %371, i64 5
  %387 = getelementptr inbounds i16, i16* %372, i64 5
  %388 = load i16, i16* %386, align 2
  store i16 %388, i16* %387, align 2
  %389 = getelementptr inbounds i16, i16* %371, i64 6
  %390 = getelementptr inbounds i16, i16* %372, i64 6
  %391 = load i16, i16* %389, align 2
  store i16 %391, i16* %390, align 2
  %392 = getelementptr inbounds i16, i16* %371, i64 7
  %393 = getelementptr inbounds i16, i16* %372, i64 7
  %394 = load i16, i16* %392, align 2
  store i16 %394, i16* %393, align 2
  %395 = getelementptr inbounds i16, i16* %371, i64 8
  %396 = getelementptr inbounds i16, i16* %372, i64 8
  %397 = icmp eq i16* %395, %65
  br i1 %397, label %400, label %370, !llvm.loop !75

398:                                              ; preds = %58
  tail call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIDsNS1_8identityENS_4lessIvEENS_6vectorIDsNS_9allocatorIDsEEEEE13value_compareENS_11__wrap_iterIPDsEEEEvT0_SH_T_NS_15iterator_traitsISH_E15difference_typeEPNSK_10value_typeEl(i16* %0, i16* %60, %"struct.base::internal::flat_tree<char16_t, base::identity, std::__1::less<void>, std::__1::vector<char16_t, std::__1::allocator<char16_t> > >::value_compare"* dereferenceable(1) %2, i64 %59, i16* %4, i64 %5)
  %399 = sub nsw i64 %3, %59
  tail call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIDsNS1_8identityENS_4lessIvEENS_6vectorIDsNS_9allocatorIDsEEEEE13value_compareENS_11__wrap_iterIPDsEEEEvT0_SH_T_NS_15iterator_traitsISH_E15difference_typeEPNSK_10value_typeEl(i16* %60, i16* %1, %"struct.base::internal::flat_tree<char16_t, base::identity, std::__1::less<void>, std::__1::vector<char16_t, std::__1::allocator<char16_t> > >::value_compare"* dereferenceable(1) %2, i64 %399, i16* %4, i64 %5)
  tail call void @_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeIDsNS1_8identityENS_4lessIvEENS_6vectorIDsNS_9allocatorIDsEEEEE13value_compareENS_11__wrap_iterIPDsEEEEvT0_SH_SH_T_NS_15iterator_traitsISH_E15difference_typeESL_PNSK_10value_typeEl(i16* %0, i16* %60, i16* %1, %"struct.base::internal::flat_tree<char16_t, base::identity, std::__1::less<void>, std::__1::vector<char16_t, std::__1::allocator<char16_t> > >::value_compare"* dereferenceable(1) %2, i64 %59, i64 %399, i16* %4, i64 %5)
  ret void

400:                                              ; preds = %98, %370, %325, %329, %39, %408, %193, %302, %200, %66, %18, %16, %8, %13, %6, %6
  ret void

401:                                              ; preds = %51, %406
  %402 = phi i16* [ %403, %406 ], [ %53, %51 ]
  %403 = getelementptr inbounds i16, i16* %402, i64 -1
  %404 = load i16, i16* %403, align 2
  %405 = icmp ult i16 %54, %404
  br i1 %405, label %406, label %408

406:                                              ; preds = %401
  store i16 %404, i16* %402, align 2
  %407 = icmp eq i16* %403, %0
  br i1 %407, label %408, label %401

408:                                              ; preds = %401, %406, %51
  %409 = phi i16* [ %0, %51 ], [ %402, %401 ], [ %0, %406 ]
  store i16 %54, i16* %409, align 2
  %410 = getelementptr inbounds i16, i16* %43, i64 2
  %411 = icmp eq i16* %410, %1
  br i1 %411, label %400, label %42
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__118__stable_sort_moveIRN4base8internal9flat_treeIDsNS1_8identityENS_4lessIvEENS_6vectorIDsNS_9allocatorIDsEEEEE13value_compareENS_11__wrap_iterIPDsEEEEvT0_SH_T_NS_15iterator_traitsISH_E15difference_typeEPNSK_10value_typeE(i16*, i16*, %"struct.base::internal::flat_tree<char16_t, base::identity, std::__1::less<void>, std::__1::vector<char16_t, std::__1::allocator<char16_t> > >::value_compare"* dereferenceable(1), i64, i16*) local_unnamed_addr #0 comdat {
  switch i64 %3, label %19 [
    i64 0, label %390
    i64 1, label %6
    i64 2, label %8
  ]

6:                                                ; preds = %5
  %7 = load i16, i16* %0, align 2
  store i16 %7, i16* %4, align 2
  br label %390

8:                                                ; preds = %5
  %9 = getelementptr inbounds i16, i16* %1, i64 -1
  %10 = load i16, i16* %9, align 2
  %11 = load i16, i16* %0, align 2
  %12 = icmp ult i16 %10, %11
  br i1 %12, label %13, label %16

13:                                               ; preds = %8
  store i16 %10, i16* %4, align 2
  %14 = getelementptr inbounds i16, i16* %4, i64 1
  %15 = load i16, i16* %0, align 2
  store i16 %15, i16* %14, align 2
  br label %390

16:                                               ; preds = %8
  store i16 %11, i16* %4, align 2
  %17 = getelementptr inbounds i16, i16* %4, i64 1
  %18 = load i16, i16* %9, align 2
  store i16 %18, i16* %17, align 2
  br label %390

19:                                               ; preds = %5
  %20 = icmp slt i64 %3, 9
  br i1 %20, label %21, label %53

21:                                               ; preds = %19
  %22 = icmp eq i16* %0, %1
  br i1 %22, label %390, label %23

23:                                               ; preds = %21
  %24 = load i16, i16* %0, align 2
  store i16 %24, i16* %4, align 2
  %25 = getelementptr inbounds i16, i16* %0, i64 1
  %26 = icmp eq i16* %25, %1
  br i1 %26, label %390, label %27

27:                                               ; preds = %23, %51
  %28 = phi i16 [ %52, %51 ], [ %24, %23 ]
  %29 = phi i16* [ %49, %51 ], [ %25, %23 ]
  %30 = phi i16* [ %31, %51 ], [ %4, %23 ]
  %31 = getelementptr inbounds i16, i16* %30, i64 1
  %32 = load i16, i16* %29, align 2
  %33 = icmp ult i16 %32, %28
  br i1 %33, label %34, label %47

34:                                               ; preds = %27
  store i16 %28, i16* %31, align 2
  %35 = icmp eq i16* %30, %4
  br i1 %35, label %44, label %36

36:                                               ; preds = %34, %42
  %37 = phi i16* [ %38, %42 ], [ %30, %34 ]
  %38 = getelementptr inbounds i16, i16* %37, i64 -1
  %39 = load i16, i16* %29, align 2
  %40 = load i16, i16* %38, align 2
  %41 = icmp ult i16 %39, %40
  br i1 %41, label %42, label %44

42:                                               ; preds = %36
  store i16 %40, i16* %37, align 2
  %43 = icmp eq i16* %38, %4
  br i1 %43, label %44, label %36

44:                                               ; preds = %42, %36, %34
  %45 = phi i16* [ %4, %34 ], [ %37, %36 ], [ %4, %42 ]
  %46 = load i16, i16* %29, align 2
  store i16 %46, i16* %45, align 2
  br label %48

47:                                               ; preds = %27
  store i16 %32, i16* %31, align 2
  br label %48

48:                                               ; preds = %47, %44
  %49 = getelementptr inbounds i16, i16* %29, i64 1
  %50 = icmp eq i16* %49, %1
  br i1 %50, label %390, label %51

51:                                               ; preds = %48
  %52 = load i16, i16* %31, align 2
  br label %27

53:                                               ; preds = %19
  %54 = lshr i64 %3, 1
  %55 = getelementptr inbounds i16, i16* %0, i64 %54
  tail call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIDsNS1_8identityENS_4lessIvEENS_6vectorIDsNS_9allocatorIDsEEEEE13value_compareENS_11__wrap_iterIPDsEEEEvT0_SH_T_NS_15iterator_traitsISH_E15difference_typeEPNSK_10value_typeEl(i16* %0, i16* %55, %"struct.base::internal::flat_tree<char16_t, base::identity, std::__1::less<void>, std::__1::vector<char16_t, std::__1::allocator<char16_t> > >::value_compare"* dereferenceable(1) %2, i64 %54, i16* %4, i64 %54)
  %56 = sub nsw i64 %3, %54
  %57 = getelementptr inbounds i16, i16* %4, i64 %54
  tail call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIDsNS1_8identityENS_4lessIvEENS_6vectorIDsNS_9allocatorIDsEEEEE13value_compareENS_11__wrap_iterIPDsEEEEvT0_SH_T_NS_15iterator_traitsISH_E15difference_typeEPNSK_10value_typeEl(i16* %55, i16* %1, %"struct.base::internal::flat_tree<char16_t, base::identity, std::__1::less<void>, std::__1::vector<char16_t, std::__1::allocator<char16_t> > >::value_compare"* dereferenceable(1) %2, i64 %56, i16* %57, i64 %56)
  %58 = icmp eq i64 %54, 0
  br i1 %58, label %59, label %215

59:                                               ; preds = %385, %53
  %60 = phi i16* [ %55, %53 ], [ %386, %385 ]
  %61 = phi i16* [ %4, %53 ], [ %388, %385 ]
  %62 = ptrtoint i16* %60 to i64
  %63 = icmp eq i16* %60, %1
  br i1 %63, label %390, label %64

64:                                               ; preds = %59
  %65 = getelementptr i16, i16* %1, i64 -1
  %66 = ptrtoint i16* %65 to i64
  %67 = sub i64 %66, %62
  %68 = lshr i64 %67, 1
  %69 = add nuw i64 %68, 1
  %70 = icmp ult i64 %69, 16
  br i1 %70, label %163, label %71

71:                                               ; preds = %64
  %72 = getelementptr i16, i16* %1, i64 -1
  %73 = ptrtoint i16* %72 to i64
  %74 = sub i64 %73, %62
  %75 = lshr i64 %74, 1
  %76 = add nuw i64 %75, 1
  %77 = getelementptr i16, i16* %61, i64 %76
  %78 = getelementptr i16, i16* %60, i64 %76
  %79 = icmp ult i16* %61, %78
  %80 = icmp ult i16* %60, %77
  %81 = and i1 %79, %80
  br i1 %81, label %163, label %82

82:                                               ; preds = %71
  %83 = and i64 %69, -16
  %84 = getelementptr i16, i16* %61, i64 %83
  %85 = getelementptr i16, i16* %60, i64 %83
  %86 = add i64 %83, -16
  %87 = lshr exact i64 %86, 4
  %88 = add nuw nsw i64 %87, 1
  %89 = and i64 %88, 3
  %90 = icmp ult i64 %86, 48
  br i1 %90, label %142, label %91

91:                                               ; preds = %82
  %92 = sub nsw i64 %88, %89
  br label %93

93:                                               ; preds = %93, %91
  %94 = phi i64 [ 0, %91 ], [ %139, %93 ]
  %95 = phi i64 [ %92, %91 ], [ %140, %93 ]
  %96 = getelementptr i16, i16* %61, i64 %94
  %97 = getelementptr i16, i16* %60, i64 %94
  %98 = bitcast i16* %97 to <8 x i16>*
  %99 = load <8 x i16>, <8 x i16>* %98, align 2, !alias.scope !76
  %100 = getelementptr i16, i16* %97, i64 8
  %101 = bitcast i16* %100 to <8 x i16>*
  %102 = load <8 x i16>, <8 x i16>* %101, align 2, !alias.scope !76
  %103 = bitcast i16* %96 to <8 x i16>*
  store <8 x i16> %99, <8 x i16>* %103, align 2, !alias.scope !79, !noalias !76
  %104 = getelementptr i16, i16* %96, i64 8
  %105 = bitcast i16* %104 to <8 x i16>*
  store <8 x i16> %102, <8 x i16>* %105, align 2, !alias.scope !79, !noalias !76
  %106 = or i64 %94, 16
  %107 = getelementptr i16, i16* %61, i64 %106
  %108 = getelementptr i16, i16* %60, i64 %106
  %109 = bitcast i16* %108 to <8 x i16>*
  %110 = load <8 x i16>, <8 x i16>* %109, align 2, !alias.scope !76
  %111 = getelementptr i16, i16* %108, i64 8
  %112 = bitcast i16* %111 to <8 x i16>*
  %113 = load <8 x i16>, <8 x i16>* %112, align 2, !alias.scope !76
  %114 = bitcast i16* %107 to <8 x i16>*
  store <8 x i16> %110, <8 x i16>* %114, align 2, !alias.scope !79, !noalias !76
  %115 = getelementptr i16, i16* %107, i64 8
  %116 = bitcast i16* %115 to <8 x i16>*
  store <8 x i16> %113, <8 x i16>* %116, align 2, !alias.scope !79, !noalias !76
  %117 = or i64 %94, 32
  %118 = getelementptr i16, i16* %61, i64 %117
  %119 = getelementptr i16, i16* %60, i64 %117
  %120 = bitcast i16* %119 to <8 x i16>*
  %121 = load <8 x i16>, <8 x i16>* %120, align 2, !alias.scope !76
  %122 = getelementptr i16, i16* %119, i64 8
  %123 = bitcast i16* %122 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !76
  %125 = bitcast i16* %118 to <8 x i16>*
  store <8 x i16> %121, <8 x i16>* %125, align 2, !alias.scope !79, !noalias !76
  %126 = getelementptr i16, i16* %118, i64 8
  %127 = bitcast i16* %126 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %127, align 2, !alias.scope !79, !noalias !76
  %128 = or i64 %94, 48
  %129 = getelementptr i16, i16* %61, i64 %128
  %130 = getelementptr i16, i16* %60, i64 %128
  %131 = bitcast i16* %130 to <8 x i16>*
  %132 = load <8 x i16>, <8 x i16>* %131, align 2, !alias.scope !76
  %133 = getelementptr i16, i16* %130, i64 8
  %134 = bitcast i16* %133 to <8 x i16>*
  %135 = load <8 x i16>, <8 x i16>* %134, align 2, !alias.scope !76
  %136 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %132, <8 x i16>* %136, align 2, !alias.scope !79, !noalias !76
  %137 = getelementptr i16, i16* %129, i64 8
  %138 = bitcast i16* %137 to <8 x i16>*
  store <8 x i16> %135, <8 x i16>* %138, align 2, !alias.scope !79, !noalias !76
  %139 = add i64 %94, 64
  %140 = add i64 %95, -4
  %141 = icmp eq i64 %140, 0
  br i1 %141, label %142, label %93, !llvm.loop !81

142:                                              ; preds = %93, %82
  %143 = phi i64 [ 0, %82 ], [ %139, %93 ]
  %144 = icmp eq i64 %89, 0
  br i1 %144, label %161, label %145

145:                                              ; preds = %142, %145
  %146 = phi i64 [ %158, %145 ], [ %143, %142 ]
  %147 = phi i64 [ %159, %145 ], [ %89, %142 ]
  %148 = getelementptr i16, i16* %61, i64 %146
  %149 = getelementptr i16, i16* %60, i64 %146
  %150 = bitcast i16* %149 to <8 x i16>*
  %151 = load <8 x i16>, <8 x i16>* %150, align 2, !alias.scope !76
  %152 = getelementptr i16, i16* %149, i64 8
  %153 = bitcast i16* %152 to <8 x i16>*
  %154 = load <8 x i16>, <8 x i16>* %153, align 2, !alias.scope !76
  %155 = bitcast i16* %148 to <8 x i16>*
  store <8 x i16> %151, <8 x i16>* %155, align 2, !alias.scope !79, !noalias !76
  %156 = getelementptr i16, i16* %148, i64 8
  %157 = bitcast i16* %156 to <8 x i16>*
  store <8 x i16> %154, <8 x i16>* %157, align 2, !alias.scope !79, !noalias !76
  %158 = add i64 %146, 16
  %159 = add i64 %147, -1
  %160 = icmp eq i64 %159, 0
  br i1 %160, label %161, label %145, !llvm.loop !82

161:                                              ; preds = %145, %142
  %162 = icmp eq i64 %69, %83
  br i1 %162, label %390, label %163

163:                                              ; preds = %161, %71, %64
  %164 = phi i16* [ %61, %71 ], [ %61, %64 ], [ %84, %161 ]
  %165 = phi i16* [ %60, %71 ], [ %60, %64 ], [ %85, %161 ]
  %166 = ptrtoint i16* %165 to i64
  %167 = getelementptr i16, i16* %1, i64 -1
  %168 = ptrtoint i16* %167 to i64
  %169 = sub i64 %168, %166
  %170 = lshr i64 %169, 1
  %171 = add nuw i64 %170, 1
  %172 = and i64 %171, 7
  %173 = icmp eq i64 %172, 0
  br i1 %173, label %183, label %174

174:                                              ; preds = %163, %174
  %175 = phi i16* [ %180, %174 ], [ %164, %163 ]
  %176 = phi i16* [ %179, %174 ], [ %165, %163 ]
  %177 = phi i64 [ %181, %174 ], [ %172, %163 ]
  %178 = load i16, i16* %176, align 2
  store i16 %178, i16* %175, align 2
  %179 = getelementptr inbounds i16, i16* %176, i64 1
  %180 = getelementptr inbounds i16, i16* %175, i64 1
  %181 = add i64 %177, -1
  %182 = icmp eq i64 %181, 0
  br i1 %182, label %183, label %174, !llvm.loop !83

183:                                              ; preds = %174, %163
  %184 = phi i16* [ %164, %163 ], [ %180, %174 ]
  %185 = phi i16* [ %165, %163 ], [ %179, %174 ]
  %186 = icmp ult i64 %169, 14
  br i1 %186, label %390, label %187

187:                                              ; preds = %183, %187
  %188 = phi i16* [ %213, %187 ], [ %184, %183 ]
  %189 = phi i16* [ %212, %187 ], [ %185, %183 ]
  %190 = load i16, i16* %189, align 2
  store i16 %190, i16* %188, align 2
  %191 = getelementptr inbounds i16, i16* %189, i64 1
  %192 = getelementptr inbounds i16, i16* %188, i64 1
  %193 = load i16, i16* %191, align 2
  store i16 %193, i16* %192, align 2
  %194 = getelementptr inbounds i16, i16* %189, i64 2
  %195 = getelementptr inbounds i16, i16* %188, i64 2
  %196 = load i16, i16* %194, align 2
  store i16 %196, i16* %195, align 2
  %197 = getelementptr inbounds i16, i16* %189, i64 3
  %198 = getelementptr inbounds i16, i16* %188, i64 3
  %199 = load i16, i16* %197, align 2
  store i16 %199, i16* %198, align 2
  %200 = getelementptr inbounds i16, i16* %189, i64 4
  %201 = getelementptr inbounds i16, i16* %188, i64 4
  %202 = load i16, i16* %200, align 2
  store i16 %202, i16* %201, align 2
  %203 = getelementptr inbounds i16, i16* %189, i64 5
  %204 = getelementptr inbounds i16, i16* %188, i64 5
  %205 = load i16, i16* %203, align 2
  store i16 %205, i16* %204, align 2
  %206 = getelementptr inbounds i16, i16* %189, i64 6
  %207 = getelementptr inbounds i16, i16* %188, i64 6
  %208 = load i16, i16* %206, align 2
  store i16 %208, i16* %207, align 2
  %209 = getelementptr inbounds i16, i16* %189, i64 7
  %210 = getelementptr inbounds i16, i16* %188, i64 7
  %211 = load i16, i16* %209, align 2
  store i16 %211, i16* %210, align 2
  %212 = getelementptr inbounds i16, i16* %189, i64 8
  %213 = getelementptr inbounds i16, i16* %188, i64 8
  %214 = icmp eq i16* %212, %1
  br i1 %214, label %390, label %187, !llvm.loop !84

215:                                              ; preds = %53, %385
  %216 = phi i16* [ %388, %385 ], [ %4, %53 ]
  %217 = phi i16* [ %387, %385 ], [ %0, %53 ]
  %218 = phi i16* [ %386, %385 ], [ %55, %53 ]
  %219 = icmp eq i16* %218, %1
  br i1 %219, label %220, label %377

220:                                              ; preds = %215
  %221 = ptrtoint i16* %217 to i64
  %222 = icmp eq i16* %217, %55
  br i1 %222, label %390, label %223

223:                                              ; preds = %220
  %224 = add nsw i64 %54, -1
  %225 = getelementptr i16, i16* %0, i64 %224
  %226 = ptrtoint i16* %225 to i64
  %227 = sub i64 %226, %221
  %228 = lshr i64 %227, 1
  %229 = add nuw i64 %228, 1
  %230 = icmp ult i64 %229, 16
  br i1 %230, label %324, label %231

231:                                              ; preds = %223
  %232 = add nsw i64 %54, -1
  %233 = getelementptr i16, i16* %0, i64 %232
  %234 = ptrtoint i16* %233 to i64
  %235 = sub i64 %234, %221
  %236 = lshr i64 %235, 1
  %237 = add nuw i64 %236, 1
  %238 = getelementptr i16, i16* %216, i64 %237
  %239 = getelementptr i16, i16* %217, i64 %237
  %240 = icmp ult i16* %216, %239
  %241 = icmp ult i16* %217, %238
  %242 = and i1 %240, %241
  br i1 %242, label %324, label %243

243:                                              ; preds = %231
  %244 = and i64 %229, -16
  %245 = getelementptr i16, i16* %216, i64 %244
  %246 = getelementptr i16, i16* %217, i64 %244
  %247 = add i64 %244, -16
  %248 = lshr exact i64 %247, 4
  %249 = add nuw nsw i64 %248, 1
  %250 = and i64 %249, 3
  %251 = icmp ult i64 %247, 48
  br i1 %251, label %303, label %252

252:                                              ; preds = %243
  %253 = sub nsw i64 %249, %250
  br label %254

254:                                              ; preds = %254, %252
  %255 = phi i64 [ 0, %252 ], [ %300, %254 ]
  %256 = phi i64 [ %253, %252 ], [ %301, %254 ]
  %257 = getelementptr i16, i16* %216, i64 %255
  %258 = getelementptr i16, i16* %217, i64 %255
  %259 = bitcast i16* %258 to <8 x i16>*
  %260 = load <8 x i16>, <8 x i16>* %259, align 2, !alias.scope !85
  %261 = getelementptr i16, i16* %258, i64 8
  %262 = bitcast i16* %261 to <8 x i16>*
  %263 = load <8 x i16>, <8 x i16>* %262, align 2, !alias.scope !85
  %264 = bitcast i16* %257 to <8 x i16>*
  store <8 x i16> %260, <8 x i16>* %264, align 2, !alias.scope !88, !noalias !85
  %265 = getelementptr i16, i16* %257, i64 8
  %266 = bitcast i16* %265 to <8 x i16>*
  store <8 x i16> %263, <8 x i16>* %266, align 2, !alias.scope !88, !noalias !85
  %267 = or i64 %255, 16
  %268 = getelementptr i16, i16* %216, i64 %267
  %269 = getelementptr i16, i16* %217, i64 %267
  %270 = bitcast i16* %269 to <8 x i16>*
  %271 = load <8 x i16>, <8 x i16>* %270, align 2, !alias.scope !85
  %272 = getelementptr i16, i16* %269, i64 8
  %273 = bitcast i16* %272 to <8 x i16>*
  %274 = load <8 x i16>, <8 x i16>* %273, align 2, !alias.scope !85
  %275 = bitcast i16* %268 to <8 x i16>*
  store <8 x i16> %271, <8 x i16>* %275, align 2, !alias.scope !88, !noalias !85
  %276 = getelementptr i16, i16* %268, i64 8
  %277 = bitcast i16* %276 to <8 x i16>*
  store <8 x i16> %274, <8 x i16>* %277, align 2, !alias.scope !88, !noalias !85
  %278 = or i64 %255, 32
  %279 = getelementptr i16, i16* %216, i64 %278
  %280 = getelementptr i16, i16* %217, i64 %278
  %281 = bitcast i16* %280 to <8 x i16>*
  %282 = load <8 x i16>, <8 x i16>* %281, align 2, !alias.scope !85
  %283 = getelementptr i16, i16* %280, i64 8
  %284 = bitcast i16* %283 to <8 x i16>*
  %285 = load <8 x i16>, <8 x i16>* %284, align 2, !alias.scope !85
  %286 = bitcast i16* %279 to <8 x i16>*
  store <8 x i16> %282, <8 x i16>* %286, align 2, !alias.scope !88, !noalias !85
  %287 = getelementptr i16, i16* %279, i64 8
  %288 = bitcast i16* %287 to <8 x i16>*
  store <8 x i16> %285, <8 x i16>* %288, align 2, !alias.scope !88, !noalias !85
  %289 = or i64 %255, 48
  %290 = getelementptr i16, i16* %216, i64 %289
  %291 = getelementptr i16, i16* %217, i64 %289
  %292 = bitcast i16* %291 to <8 x i16>*
  %293 = load <8 x i16>, <8 x i16>* %292, align 2, !alias.scope !85
  %294 = getelementptr i16, i16* %291, i64 8
  %295 = bitcast i16* %294 to <8 x i16>*
  %296 = load <8 x i16>, <8 x i16>* %295, align 2, !alias.scope !85
  %297 = bitcast i16* %290 to <8 x i16>*
  store <8 x i16> %293, <8 x i16>* %297, align 2, !alias.scope !88, !noalias !85
  %298 = getelementptr i16, i16* %290, i64 8
  %299 = bitcast i16* %298 to <8 x i16>*
  store <8 x i16> %296, <8 x i16>* %299, align 2, !alias.scope !88, !noalias !85
  %300 = add i64 %255, 64
  %301 = add i64 %256, -4
  %302 = icmp eq i64 %301, 0
  br i1 %302, label %303, label %254, !llvm.loop !90

303:                                              ; preds = %254, %243
  %304 = phi i64 [ 0, %243 ], [ %300, %254 ]
  %305 = icmp eq i64 %250, 0
  br i1 %305, label %322, label %306

306:                                              ; preds = %303, %306
  %307 = phi i64 [ %319, %306 ], [ %304, %303 ]
  %308 = phi i64 [ %320, %306 ], [ %250, %303 ]
  %309 = getelementptr i16, i16* %216, i64 %307
  %310 = getelementptr i16, i16* %217, i64 %307
  %311 = bitcast i16* %310 to <8 x i16>*
  %312 = load <8 x i16>, <8 x i16>* %311, align 2, !alias.scope !85
  %313 = getelementptr i16, i16* %310, i64 8
  %314 = bitcast i16* %313 to <8 x i16>*
  %315 = load <8 x i16>, <8 x i16>* %314, align 2, !alias.scope !85
  %316 = bitcast i16* %309 to <8 x i16>*
  store <8 x i16> %312, <8 x i16>* %316, align 2, !alias.scope !88, !noalias !85
  %317 = getelementptr i16, i16* %309, i64 8
  %318 = bitcast i16* %317 to <8 x i16>*
  store <8 x i16> %315, <8 x i16>* %318, align 2, !alias.scope !88, !noalias !85
  %319 = add i64 %307, 16
  %320 = add i64 %308, -1
  %321 = icmp eq i64 %320, 0
  br i1 %321, label %322, label %306, !llvm.loop !91

322:                                              ; preds = %306, %303
  %323 = icmp eq i64 %229, %244
  br i1 %323, label %390, label %324

324:                                              ; preds = %322, %231, %223
  %325 = phi i16* [ %216, %231 ], [ %216, %223 ], [ %245, %322 ]
  %326 = phi i16* [ %217, %231 ], [ %217, %223 ], [ %246, %322 ]
  %327 = ptrtoint i16* %326 to i64
  %328 = add nsw i64 %54, -1
  %329 = getelementptr i16, i16* %0, i64 %328
  %330 = ptrtoint i16* %329 to i64
  %331 = sub i64 %330, %327
  %332 = lshr i64 %331, 1
  %333 = add nuw i64 %332, 1
  %334 = and i64 %333, 7
  %335 = icmp eq i64 %334, 0
  br i1 %335, label %345, label %336

336:                                              ; preds = %324, %336
  %337 = phi i16* [ %342, %336 ], [ %325, %324 ]
  %338 = phi i16* [ %341, %336 ], [ %326, %324 ]
  %339 = phi i64 [ %343, %336 ], [ %334, %324 ]
  %340 = load i16, i16* %338, align 2
  store i16 %340, i16* %337, align 2
  %341 = getelementptr inbounds i16, i16* %338, i64 1
  %342 = getelementptr inbounds i16, i16* %337, i64 1
  %343 = add i64 %339, -1
  %344 = icmp eq i64 %343, 0
  br i1 %344, label %345, label %336, !llvm.loop !92

345:                                              ; preds = %336, %324
  %346 = phi i16* [ %325, %324 ], [ %342, %336 ]
  %347 = phi i16* [ %326, %324 ], [ %341, %336 ]
  %348 = icmp ult i64 %331, 14
  br i1 %348, label %390, label %349

349:                                              ; preds = %345, %349
  %350 = phi i16* [ %375, %349 ], [ %346, %345 ]
  %351 = phi i16* [ %374, %349 ], [ %347, %345 ]
  %352 = load i16, i16* %351, align 2
  store i16 %352, i16* %350, align 2
  %353 = getelementptr inbounds i16, i16* %351, i64 1
  %354 = getelementptr inbounds i16, i16* %350, i64 1
  %355 = load i16, i16* %353, align 2
  store i16 %355, i16* %354, align 2
  %356 = getelementptr inbounds i16, i16* %351, i64 2
  %357 = getelementptr inbounds i16, i16* %350, i64 2
  %358 = load i16, i16* %356, align 2
  store i16 %358, i16* %357, align 2
  %359 = getelementptr inbounds i16, i16* %351, i64 3
  %360 = getelementptr inbounds i16, i16* %350, i64 3
  %361 = load i16, i16* %359, align 2
  store i16 %361, i16* %360, align 2
  %362 = getelementptr inbounds i16, i16* %351, i64 4
  %363 = getelementptr inbounds i16, i16* %350, i64 4
  %364 = load i16, i16* %362, align 2
  store i16 %364, i16* %363, align 2
  %365 = getelementptr inbounds i16, i16* %351, i64 5
  %366 = getelementptr inbounds i16, i16* %350, i64 5
  %367 = load i16, i16* %365, align 2
  store i16 %367, i16* %366, align 2
  %368 = getelementptr inbounds i16, i16* %351, i64 6
  %369 = getelementptr inbounds i16, i16* %350, i64 6
  %370 = load i16, i16* %368, align 2
  store i16 %370, i16* %369, align 2
  %371 = getelementptr inbounds i16, i16* %351, i64 7
  %372 = getelementptr inbounds i16, i16* %350, i64 7
  %373 = load i16, i16* %371, align 2
  store i16 %373, i16* %372, align 2
  %374 = getelementptr inbounds i16, i16* %351, i64 8
  %375 = getelementptr inbounds i16, i16* %350, i64 8
  %376 = icmp eq i16* %374, %55
  br i1 %376, label %390, label %349, !llvm.loop !93

377:                                              ; preds = %215
  %378 = load i16, i16* %218, align 2
  %379 = load i16, i16* %217, align 2
  %380 = icmp ult i16 %378, %379
  br i1 %380, label %381, label %383

381:                                              ; preds = %377
  store i16 %378, i16* %216, align 2
  %382 = getelementptr inbounds i16, i16* %218, i64 1
  br label %385

383:                                              ; preds = %377
  store i16 %379, i16* %216, align 2
  %384 = getelementptr inbounds i16, i16* %217, i64 1
  br label %385

385:                                              ; preds = %383, %381
  %386 = phi i16* [ %382, %381 ], [ %218, %383 ]
  %387 = phi i16* [ %217, %381 ], [ %384, %383 ]
  %388 = getelementptr inbounds i16, i16* %216, i64 1
  %389 = icmp eq i16* %387, %55
  br i1 %389, label %59, label %215

390:                                              ; preds = %345, %349, %183, %187, %48, %322, %161, %220, %59, %23, %21, %13, %16, %5, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeIDsNS1_8identityENS_4lessIvEENS_6vectorIDsNS_9allocatorIDsEEEEE13value_compareENS_11__wrap_iterIPDsEEEEvT0_SH_SH_T_NS_15iterator_traitsISH_E15difference_typeESL_PNSK_10value_typeEl(i16*, i16*, i16*, %"struct.base::internal::flat_tree<char16_t, base::identity, std::__1::less<void>, std::__1::vector<char16_t, std::__1::allocator<char16_t> > >::value_compare"* dereferenceable(1), i64, i64, i16*, i64) local_unnamed_addr #0 comdat {
  %9 = ptrtoint i16* %6 to i64
  %10 = icmp eq i64 %5, 0
  br i1 %10, label %887, label %11

11:                                               ; preds = %8
  %12 = ptrtoint i16* %1 to i64
  %13 = ptrtoint i16* %0 to i64
  br label %14

14:                                               ; preds = %11, %880
  %15 = phi i16* [ %885, %880 ], [ %2, %11 ]
  %16 = phi i64 [ %884, %880 ], [ %4, %11 ]
  %17 = phi i64 [ %883, %880 ], [ %5, %11 ]
  %18 = phi i64 [ %882, %880 ], [ %12, %11 ]
  %19 = phi i64 [ %881, %880 ], [ %13, %11 ]
  %20 = icmp sgt i64 %16, %7
  %21 = icmp sgt i64 %17, %7
  %22 = and i1 %21, %20
  br i1 %22, label %23, label %28

23:                                               ; preds = %14
  %24 = icmp eq i64 %16, 0
  br i1 %24, label %887, label %25

25:                                               ; preds = %23
  %26 = inttoptr i64 %18 to i16*
  %27 = load i16, i16* %26, align 2
  br label %548

28:                                               ; preds = %14
  %29 = inttoptr i64 %19 to i16*
  %30 = inttoptr i64 %19 to i8*
  %31 = inttoptr i64 %18 to i16*
  %32 = inttoptr i64 %18 to i8*
  %33 = icmp sgt i64 %16, %17
  br i1 %33, label %165, label %34

34:                                               ; preds = %28
  %35 = icmp eq i16* %29, %31
  br i1 %35, label %887, label %36

36:                                               ; preds = %34
  %37 = getelementptr i16, i16* %31, i64 -1
  %38 = bitcast i16* %37 to i8*
  %39 = sub i64 0, %19
  %40 = getelementptr i8, i8* %38, i64 %39
  %41 = ptrtoint i8* %40 to i64
  %42 = lshr i64 %41, 1
  %43 = add nuw i64 %42, 1
  %44 = icmp ult i64 %43, 16
  br i1 %44, label %45, label %70

45:                                               ; preds = %163, %70, %36
  %46 = phi i16* [ %6, %70 ], [ %6, %36 ], [ %86, %163 ]
  %47 = phi i16* [ %29, %70 ], [ %29, %36 ], [ %87, %163 ]
  %48 = ptrtoint i16* %47 to i64
  %49 = getelementptr i16, i16* %31, i64 -1
  %50 = ptrtoint i16* %49 to i64
  %51 = sub i64 %50, %48
  %52 = lshr i64 %51, 1
  %53 = add nuw i64 %52, 1
  %54 = and i64 %53, 7
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %65, label %56

56:                                               ; preds = %45, %56
  %57 = phi i16* [ %62, %56 ], [ %46, %45 ]
  %58 = phi i16* [ %61, %56 ], [ %47, %45 ]
  %59 = phi i64 [ %63, %56 ], [ %54, %45 ]
  %60 = load i16, i16* %58, align 2
  store i16 %60, i16* %57, align 2
  %61 = getelementptr inbounds i16, i16* %58, i64 1
  %62 = getelementptr inbounds i16, i16* %57, i64 1
  %63 = add i64 %59, -1
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %65, label %56, !llvm.loop !94

65:                                               ; preds = %56, %45
  %66 = phi i16* [ undef, %45 ], [ %62, %56 ]
  %67 = phi i16* [ %46, %45 ], [ %62, %56 ]
  %68 = phi i16* [ %47, %45 ], [ %61, %56 ]
  %69 = icmp ult i64 %51, 14
  br i1 %69, label %296, label %325

70:                                               ; preds = %36
  %71 = getelementptr i16, i16* %31, i64 -1
  %72 = bitcast i16* %71 to i8*
  %73 = sub i64 0, %19
  %74 = getelementptr i8, i8* %72, i64 %73
  %75 = ptrtoint i8* %74 to i64
  %76 = lshr i64 %75, 1
  %77 = add nuw i64 %76, 1
  %78 = getelementptr i16, i16* %6, i64 %77
  %79 = bitcast i16* %78 to i8*
  %80 = getelementptr i16, i16* %29, i64 %77
  %81 = icmp ugt i16* %80, %6
  %82 = icmp ult i8* %30, %79
  %83 = and i1 %81, %82
  br i1 %83, label %45, label %84

84:                                               ; preds = %70
  %85 = and i64 %43, -16
  %86 = getelementptr i16, i16* %6, i64 %85
  %87 = getelementptr i16, i16* %29, i64 %85
  %88 = add i64 %85, -16
  %89 = lshr exact i64 %88, 4
  %90 = add nuw nsw i64 %89, 1
  %91 = and i64 %90, 3
  %92 = icmp ult i64 %88, 48
  br i1 %92, label %144, label %93

93:                                               ; preds = %84
  %94 = sub nsw i64 %90, %91
  br label %95

95:                                               ; preds = %95, %93
  %96 = phi i64 [ 0, %93 ], [ %141, %95 ]
  %97 = phi i64 [ %94, %93 ], [ %142, %95 ]
  %98 = getelementptr i16, i16* %6, i64 %96
  %99 = getelementptr i16, i16* %29, i64 %96
  %100 = bitcast i16* %99 to <8 x i16>*
  %101 = load <8 x i16>, <8 x i16>* %100, align 2, !alias.scope !95
  %102 = getelementptr i16, i16* %99, i64 8
  %103 = bitcast i16* %102 to <8 x i16>*
  %104 = load <8 x i16>, <8 x i16>* %103, align 2, !alias.scope !95
  %105 = bitcast i16* %98 to <8 x i16>*
  store <8 x i16> %101, <8 x i16>* %105, align 2, !alias.scope !98, !noalias !95
  %106 = getelementptr i16, i16* %98, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  store <8 x i16> %104, <8 x i16>* %107, align 2, !alias.scope !98, !noalias !95
  %108 = or i64 %96, 16
  %109 = getelementptr i16, i16* %6, i64 %108
  %110 = getelementptr i16, i16* %29, i64 %108
  %111 = bitcast i16* %110 to <8 x i16>*
  %112 = load <8 x i16>, <8 x i16>* %111, align 2, !alias.scope !95
  %113 = getelementptr i16, i16* %110, i64 8
  %114 = bitcast i16* %113 to <8 x i16>*
  %115 = load <8 x i16>, <8 x i16>* %114, align 2, !alias.scope !95
  %116 = bitcast i16* %109 to <8 x i16>*
  store <8 x i16> %112, <8 x i16>* %116, align 2, !alias.scope !98, !noalias !95
  %117 = getelementptr i16, i16* %109, i64 8
  %118 = bitcast i16* %117 to <8 x i16>*
  store <8 x i16> %115, <8 x i16>* %118, align 2, !alias.scope !98, !noalias !95
  %119 = or i64 %96, 32
  %120 = getelementptr i16, i16* %6, i64 %119
  %121 = getelementptr i16, i16* %29, i64 %119
  %122 = bitcast i16* %121 to <8 x i16>*
  %123 = load <8 x i16>, <8 x i16>* %122, align 2, !alias.scope !95
  %124 = getelementptr i16, i16* %121, i64 8
  %125 = bitcast i16* %124 to <8 x i16>*
  %126 = load <8 x i16>, <8 x i16>* %125, align 2, !alias.scope !95
  %127 = bitcast i16* %120 to <8 x i16>*
  store <8 x i16> %123, <8 x i16>* %127, align 2, !alias.scope !98, !noalias !95
  %128 = getelementptr i16, i16* %120, i64 8
  %129 = bitcast i16* %128 to <8 x i16>*
  store <8 x i16> %126, <8 x i16>* %129, align 2, !alias.scope !98, !noalias !95
  %130 = or i64 %96, 48
  %131 = getelementptr i16, i16* %6, i64 %130
  %132 = getelementptr i16, i16* %29, i64 %130
  %133 = bitcast i16* %132 to <8 x i16>*
  %134 = load <8 x i16>, <8 x i16>* %133, align 2, !alias.scope !95
  %135 = getelementptr i16, i16* %132, i64 8
  %136 = bitcast i16* %135 to <8 x i16>*
  %137 = load <8 x i16>, <8 x i16>* %136, align 2, !alias.scope !95
  %138 = bitcast i16* %131 to <8 x i16>*
  store <8 x i16> %134, <8 x i16>* %138, align 2, !alias.scope !98, !noalias !95
  %139 = getelementptr i16, i16* %131, i64 8
  %140 = bitcast i16* %139 to <8 x i16>*
  store <8 x i16> %137, <8 x i16>* %140, align 2, !alias.scope !98, !noalias !95
  %141 = add i64 %96, 64
  %142 = add i64 %97, -4
  %143 = icmp eq i64 %142, 0
  br i1 %143, label %144, label %95, !llvm.loop !100

144:                                              ; preds = %95, %84
  %145 = phi i64 [ 0, %84 ], [ %141, %95 ]
  %146 = icmp eq i64 %91, 0
  br i1 %146, label %163, label %147

147:                                              ; preds = %144, %147
  %148 = phi i64 [ %160, %147 ], [ %145, %144 ]
  %149 = phi i64 [ %161, %147 ], [ %91, %144 ]
  %150 = getelementptr i16, i16* %6, i64 %148
  %151 = getelementptr i16, i16* %29, i64 %148
  %152 = bitcast i16* %151 to <8 x i16>*
  %153 = load <8 x i16>, <8 x i16>* %152, align 2, !alias.scope !95
  %154 = getelementptr i16, i16* %151, i64 8
  %155 = bitcast i16* %154 to <8 x i16>*
  %156 = load <8 x i16>, <8 x i16>* %155, align 2, !alias.scope !95
  %157 = bitcast i16* %150 to <8 x i16>*
  store <8 x i16> %153, <8 x i16>* %157, align 2, !alias.scope !98, !noalias !95
  %158 = getelementptr i16, i16* %150, i64 8
  %159 = bitcast i16* %158 to <8 x i16>*
  store <8 x i16> %156, <8 x i16>* %159, align 2, !alias.scope !98, !noalias !95
  %160 = add i64 %148, 16
  %161 = add i64 %149, -1
  %162 = icmp eq i64 %161, 0
  br i1 %162, label %163, label %147, !llvm.loop !101

163:                                              ; preds = %147, %144
  %164 = icmp eq i64 %43, %85
  br i1 %164, label %296, label %45

165:                                              ; preds = %28
  %166 = icmp eq i16* %15, %31
  br i1 %166, label %887, label %167

167:                                              ; preds = %165
  %168 = getelementptr i16, i16* %15, i64 -1
  %169 = bitcast i16* %168 to i8*
  %170 = sub i64 0, %18
  %171 = getelementptr i8, i8* %169, i64 %170
  %172 = ptrtoint i8* %171 to i64
  %173 = lshr i64 %172, 1
  %174 = add nuw i64 %173, 1
  %175 = icmp ult i64 %174, 16
  br i1 %175, label %176, label %201

176:                                              ; preds = %294, %201, %167
  %177 = phi i16* [ %6, %201 ], [ %6, %167 ], [ %217, %294 ]
  %178 = phi i16* [ %31, %201 ], [ %31, %167 ], [ %218, %294 ]
  %179 = ptrtoint i16* %178 to i64
  %180 = getelementptr i16, i16* %15, i64 -1
  %181 = ptrtoint i16* %180 to i64
  %182 = sub i64 %181, %179
  %183 = lshr i64 %182, 1
  %184 = add nuw i64 %183, 1
  %185 = and i64 %184, 7
  %186 = icmp eq i64 %185, 0
  br i1 %186, label %196, label %187

187:                                              ; preds = %176, %187
  %188 = phi i16* [ %193, %187 ], [ %177, %176 ]
  %189 = phi i16* [ %192, %187 ], [ %178, %176 ]
  %190 = phi i64 [ %194, %187 ], [ %185, %176 ]
  %191 = load i16, i16* %189, align 2
  store i16 %191, i16* %188, align 2
  %192 = getelementptr inbounds i16, i16* %189, i64 1
  %193 = getelementptr inbounds i16, i16* %188, i64 1
  %194 = add i64 %190, -1
  %195 = icmp eq i64 %194, 0
  br i1 %195, label %196, label %187, !llvm.loop !102

196:                                              ; preds = %187, %176
  %197 = phi i16* [ undef, %176 ], [ %193, %187 ]
  %198 = phi i16* [ %177, %176 ], [ %193, %187 ]
  %199 = phi i16* [ %178, %176 ], [ %192, %187 ]
  %200 = icmp ult i64 %182, 14
  br i1 %200, label %353, label %520

201:                                              ; preds = %167
  %202 = getelementptr i16, i16* %15, i64 -1
  %203 = bitcast i16* %202 to i8*
  %204 = sub i64 0, %18
  %205 = getelementptr i8, i8* %203, i64 %204
  %206 = ptrtoint i8* %205 to i64
  %207 = lshr i64 %206, 1
  %208 = add nuw i64 %207, 1
  %209 = getelementptr i16, i16* %6, i64 %208
  %210 = bitcast i16* %209 to i8*
  %211 = getelementptr i16, i16* %31, i64 %208
  %212 = icmp ugt i16* %211, %6
  %213 = icmp ult i8* %32, %210
  %214 = and i1 %212, %213
  br i1 %214, label %176, label %215

215:                                              ; preds = %201
  %216 = and i64 %174, -16
  %217 = getelementptr i16, i16* %6, i64 %216
  %218 = getelementptr i16, i16* %31, i64 %216
  %219 = add i64 %216, -16
  %220 = lshr exact i64 %219, 4
  %221 = add nuw nsw i64 %220, 1
  %222 = and i64 %221, 3
  %223 = icmp ult i64 %219, 48
  br i1 %223, label %275, label %224

224:                                              ; preds = %215
  %225 = sub nsw i64 %221, %222
  br label %226

226:                                              ; preds = %226, %224
  %227 = phi i64 [ 0, %224 ], [ %272, %226 ]
  %228 = phi i64 [ %225, %224 ], [ %273, %226 ]
  %229 = getelementptr i16, i16* %6, i64 %227
  %230 = getelementptr i16, i16* %31, i64 %227
  %231 = bitcast i16* %230 to <8 x i16>*
  %232 = load <8 x i16>, <8 x i16>* %231, align 2, !alias.scope !103
  %233 = getelementptr i16, i16* %230, i64 8
  %234 = bitcast i16* %233 to <8 x i16>*
  %235 = load <8 x i16>, <8 x i16>* %234, align 2, !alias.scope !103
  %236 = bitcast i16* %229 to <8 x i16>*
  store <8 x i16> %232, <8 x i16>* %236, align 2, !alias.scope !106, !noalias !103
  %237 = getelementptr i16, i16* %229, i64 8
  %238 = bitcast i16* %237 to <8 x i16>*
  store <8 x i16> %235, <8 x i16>* %238, align 2, !alias.scope !106, !noalias !103
  %239 = or i64 %227, 16
  %240 = getelementptr i16, i16* %6, i64 %239
  %241 = getelementptr i16, i16* %31, i64 %239
  %242 = bitcast i16* %241 to <8 x i16>*
  %243 = load <8 x i16>, <8 x i16>* %242, align 2, !alias.scope !103
  %244 = getelementptr i16, i16* %241, i64 8
  %245 = bitcast i16* %244 to <8 x i16>*
  %246 = load <8 x i16>, <8 x i16>* %245, align 2, !alias.scope !103
  %247 = bitcast i16* %240 to <8 x i16>*
  store <8 x i16> %243, <8 x i16>* %247, align 2, !alias.scope !106, !noalias !103
  %248 = getelementptr i16, i16* %240, i64 8
  %249 = bitcast i16* %248 to <8 x i16>*
  store <8 x i16> %246, <8 x i16>* %249, align 2, !alias.scope !106, !noalias !103
  %250 = or i64 %227, 32
  %251 = getelementptr i16, i16* %6, i64 %250
  %252 = getelementptr i16, i16* %31, i64 %250
  %253 = bitcast i16* %252 to <8 x i16>*
  %254 = load <8 x i16>, <8 x i16>* %253, align 2, !alias.scope !103
  %255 = getelementptr i16, i16* %252, i64 8
  %256 = bitcast i16* %255 to <8 x i16>*
  %257 = load <8 x i16>, <8 x i16>* %256, align 2, !alias.scope !103
  %258 = bitcast i16* %251 to <8 x i16>*
  store <8 x i16> %254, <8 x i16>* %258, align 2, !alias.scope !106, !noalias !103
  %259 = getelementptr i16, i16* %251, i64 8
  %260 = bitcast i16* %259 to <8 x i16>*
  store <8 x i16> %257, <8 x i16>* %260, align 2, !alias.scope !106, !noalias !103
  %261 = or i64 %227, 48
  %262 = getelementptr i16, i16* %6, i64 %261
  %263 = getelementptr i16, i16* %31, i64 %261
  %264 = bitcast i16* %263 to <8 x i16>*
  %265 = load <8 x i16>, <8 x i16>* %264, align 2, !alias.scope !103
  %266 = getelementptr i16, i16* %263, i64 8
  %267 = bitcast i16* %266 to <8 x i16>*
  %268 = load <8 x i16>, <8 x i16>* %267, align 2, !alias.scope !103
  %269 = bitcast i16* %262 to <8 x i16>*
  store <8 x i16> %265, <8 x i16>* %269, align 2, !alias.scope !106, !noalias !103
  %270 = getelementptr i16, i16* %262, i64 8
  %271 = bitcast i16* %270 to <8 x i16>*
  store <8 x i16> %268, <8 x i16>* %271, align 2, !alias.scope !106, !noalias !103
  %272 = add i64 %227, 64
  %273 = add i64 %228, -4
  %274 = icmp eq i64 %273, 0
  br i1 %274, label %275, label %226, !llvm.loop !108

275:                                              ; preds = %226, %215
  %276 = phi i64 [ 0, %215 ], [ %272, %226 ]
  %277 = icmp eq i64 %222, 0
  br i1 %277, label %294, label %278

278:                                              ; preds = %275, %278
  %279 = phi i64 [ %291, %278 ], [ %276, %275 ]
  %280 = phi i64 [ %292, %278 ], [ %222, %275 ]
  %281 = getelementptr i16, i16* %6, i64 %279
  %282 = getelementptr i16, i16* %31, i64 %279
  %283 = bitcast i16* %282 to <8 x i16>*
  %284 = load <8 x i16>, <8 x i16>* %283, align 2, !alias.scope !103
  %285 = getelementptr i16, i16* %282, i64 8
  %286 = bitcast i16* %285 to <8 x i16>*
  %287 = load <8 x i16>, <8 x i16>* %286, align 2, !alias.scope !103
  %288 = bitcast i16* %281 to <8 x i16>*
  store <8 x i16> %284, <8 x i16>* %288, align 2, !alias.scope !106, !noalias !103
  %289 = getelementptr i16, i16* %281, i64 8
  %290 = bitcast i16* %289 to <8 x i16>*
  store <8 x i16> %287, <8 x i16>* %290, align 2, !alias.scope !106, !noalias !103
  %291 = add i64 %279, 16
  %292 = add i64 %280, -1
  %293 = icmp eq i64 %292, 0
  br i1 %293, label %294, label %278, !llvm.loop !109

294:                                              ; preds = %278, %275
  %295 = icmp eq i64 %174, %216
  br i1 %295, label %353, label %176

296:                                              ; preds = %65, %325, %163
  %297 = phi i16* [ %86, %163 ], [ %66, %65 ], [ %351, %325 ]
  %298 = icmp eq i16* %297, %6
  br i1 %298, label %887, label %299

299:                                              ; preds = %296, %320
  %300 = phi i16* [ %322, %320 ], [ %6, %296 ]
  %301 = phi i16* [ %323, %320 ], [ %29, %296 ]
  %302 = phi i16* [ %321, %320 ], [ %31, %296 ]
  %303 = icmp eq i16* %302, %15
  br i1 %303, label %304, label %312

304:                                              ; preds = %299
  %305 = ptrtoint i16* %297 to i64
  %306 = ptrtoint i16* %300 to i64
  %307 = sub i64 %305, %306
  %308 = icmp eq i64 %307, 0
  br i1 %308, label %887, label %309

309:                                              ; preds = %304
  %310 = bitcast i16* %301 to i8*
  %311 = bitcast i16* %300 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %310, i8* align 2 %311, i64 %307, i1 false) #12
  br label %887

312:                                              ; preds = %299
  %313 = load i16, i16* %302, align 2
  %314 = load i16, i16* %300, align 2
  %315 = icmp ult i16 %313, %314
  br i1 %315, label %316, label %318

316:                                              ; preds = %312
  store i16 %313, i16* %301, align 2
  %317 = getelementptr inbounds i16, i16* %302, i64 1
  br label %320

318:                                              ; preds = %312
  store i16 %314, i16* %301, align 2
  %319 = getelementptr inbounds i16, i16* %300, i64 1
  br label %320

320:                                              ; preds = %318, %316
  %321 = phi i16* [ %317, %316 ], [ %302, %318 ]
  %322 = phi i16* [ %300, %316 ], [ %319, %318 ]
  %323 = getelementptr inbounds i16, i16* %301, i64 1
  %324 = icmp eq i16* %322, %297
  br i1 %324, label %887, label %299

325:                                              ; preds = %65, %325
  %326 = phi i16* [ %351, %325 ], [ %67, %65 ]
  %327 = phi i16* [ %350, %325 ], [ %68, %65 ]
  %328 = load i16, i16* %327, align 2
  store i16 %328, i16* %326, align 2
  %329 = getelementptr inbounds i16, i16* %327, i64 1
  %330 = getelementptr inbounds i16, i16* %326, i64 1
  %331 = load i16, i16* %329, align 2
  store i16 %331, i16* %330, align 2
  %332 = getelementptr inbounds i16, i16* %327, i64 2
  %333 = getelementptr inbounds i16, i16* %326, i64 2
  %334 = load i16, i16* %332, align 2
  store i16 %334, i16* %333, align 2
  %335 = getelementptr inbounds i16, i16* %327, i64 3
  %336 = getelementptr inbounds i16, i16* %326, i64 3
  %337 = load i16, i16* %335, align 2
  store i16 %337, i16* %336, align 2
  %338 = getelementptr inbounds i16, i16* %327, i64 4
  %339 = getelementptr inbounds i16, i16* %326, i64 4
  %340 = load i16, i16* %338, align 2
  store i16 %340, i16* %339, align 2
  %341 = getelementptr inbounds i16, i16* %327, i64 5
  %342 = getelementptr inbounds i16, i16* %326, i64 5
  %343 = load i16, i16* %341, align 2
  store i16 %343, i16* %342, align 2
  %344 = getelementptr inbounds i16, i16* %327, i64 6
  %345 = getelementptr inbounds i16, i16* %326, i64 6
  %346 = load i16, i16* %344, align 2
  store i16 %346, i16* %345, align 2
  %347 = getelementptr inbounds i16, i16* %327, i64 7
  %348 = getelementptr inbounds i16, i16* %326, i64 7
  %349 = load i16, i16* %347, align 2
  store i16 %349, i16* %348, align 2
  %350 = getelementptr inbounds i16, i16* %327, i64 8
  %351 = getelementptr inbounds i16, i16* %326, i64 8
  %352 = icmp eq i16* %350, %31
  br i1 %352, label %296, label %325, !llvm.loop !110

353:                                              ; preds = %196, %520, %294
  %354 = phi i16* [ %217, %294 ], [ %197, %196 ], [ %546, %520 ]
  %355 = icmp eq i16* %354, %6
  br i1 %355, label %887, label %356

356:                                              ; preds = %353, %509
  %357 = phi i16* [ %515, %509 ], [ %15, %353 ]
  %358 = phi i16* [ %518, %509 ], [ %354, %353 ]
  %359 = phi i16* [ %517, %509 ], [ %31, %353 ]
  %360 = icmp eq i16* %359, %29
  br i1 %360, label %361, label %509

361:                                              ; preds = %356
  %362 = getelementptr i16, i16* %358, i64 -1
  %363 = ptrtoint i16* %362 to i64
  %364 = sub i64 %363, %9
  %365 = lshr i64 %364, 1
  %366 = add nuw i64 %365, 1
  %367 = icmp ult i64 %366, 16
  br i1 %367, label %458, label %368

368:                                              ; preds = %361
  %369 = getelementptr i16, i16* %358, i64 -1
  %370 = ptrtoint i16* %369 to i64
  %371 = sub i64 %370, %9
  %372 = lshr i64 %371, 1
  %373 = xor i64 %372, -1
  %374 = getelementptr i16, i16* %357, i64 %373
  %375 = getelementptr i16, i16* %358, i64 %373
  %376 = icmp ult i16* %374, %358
  %377 = icmp ult i16* %375, %357
  %378 = and i1 %376, %377
  br i1 %378, label %458, label %379

379:                                              ; preds = %368
  %380 = and i64 %366, -16
  %381 = sub i64 0, %380
  %382 = getelementptr i16, i16* %358, i64 %381
  %383 = sub i64 0, %380
  %384 = getelementptr i16, i16* %357, i64 %383
  %385 = add i64 %380, -16
  %386 = lshr exact i64 %385, 4
  %387 = add nuw nsw i64 %386, 1
  %388 = and i64 %387, 1
  %389 = icmp eq i64 %385, 0
  br i1 %389, label %436, label %390

390:                                              ; preds = %379
  %391 = sub nuw nsw i64 %387, %388
  %392 = getelementptr i16, i16* %358, i64 -1
  %393 = getelementptr i16, i16* %357, i64 -1
  %394 = getelementptr i16, i16* %358, i64 -1
  %395 = getelementptr i16, i16* %357, i64 -1
  br label %396

396:                                              ; preds = %396, %390
  %397 = phi i64 [ 0, %390 ], [ %431, %396 ]
  %398 = phi i64 [ %391, %390 ], [ %432, %396 ]
  %399 = sub i64 0, %397
  %400 = sub i64 0, %397
  %401 = getelementptr inbounds i16, i16* %392, i64 %399
  %402 = getelementptr inbounds i16, i16* %401, i64 -7
  %403 = bitcast i16* %402 to <8 x i16>*
  %404 = load <8 x i16>, <8 x i16>* %403, align 2, !alias.scope !111
  %405 = getelementptr inbounds i16, i16* %401, i64 -8
  %406 = getelementptr inbounds i16, i16* %405, i64 -7
  %407 = bitcast i16* %406 to <8 x i16>*
  %408 = load <8 x i16>, <8 x i16>* %407, align 2, !alias.scope !111
  %409 = getelementptr inbounds i16, i16* %393, i64 %400
  %410 = getelementptr inbounds i16, i16* %409, i64 -7
  %411 = bitcast i16* %410 to <8 x i16>*
  store <8 x i16> %404, <8 x i16>* %411, align 2, !alias.scope !114, !noalias !111
  %412 = getelementptr inbounds i16, i16* %409, i64 -8
  %413 = getelementptr inbounds i16, i16* %412, i64 -7
  %414 = bitcast i16* %413 to <8 x i16>*
  store <8 x i16> %408, <8 x i16>* %414, align 2, !alias.scope !114, !noalias !111
  %415 = sub nuw nsw i64 -16, %397
  %416 = sub nuw nsw i64 -16, %397
  %417 = getelementptr inbounds i16, i16* %394, i64 %415
  %418 = getelementptr inbounds i16, i16* %417, i64 -7
  %419 = bitcast i16* %418 to <8 x i16>*
  %420 = load <8 x i16>, <8 x i16>* %419, align 2, !alias.scope !111
  %421 = getelementptr inbounds i16, i16* %417, i64 -8
  %422 = getelementptr inbounds i16, i16* %421, i64 -7
  %423 = bitcast i16* %422 to <8 x i16>*
  %424 = load <8 x i16>, <8 x i16>* %423, align 2, !alias.scope !111
  %425 = getelementptr inbounds i16, i16* %395, i64 %416
  %426 = getelementptr inbounds i16, i16* %425, i64 -7
  %427 = bitcast i16* %426 to <8 x i16>*
  store <8 x i16> %420, <8 x i16>* %427, align 2, !alias.scope !114, !noalias !111
  %428 = getelementptr inbounds i16, i16* %425, i64 -8
  %429 = getelementptr inbounds i16, i16* %428, i64 -7
  %430 = bitcast i16* %429 to <8 x i16>*
  store <8 x i16> %424, <8 x i16>* %430, align 2, !alias.scope !114, !noalias !111
  %431 = add i64 %397, 32
  %432 = add i64 %398, -2
  %433 = icmp eq i64 %432, 0
  br i1 %433, label %434, label %396, !llvm.loop !116

434:                                              ; preds = %396
  %435 = sub nuw nsw i64 -32, %397
  br label %436

436:                                              ; preds = %434, %379
  %437 = phi i64 [ 0, %379 ], [ %435, %434 ]
  %438 = icmp eq i64 %388, 0
  br i1 %438, label %456, label %439

439:                                              ; preds = %436
  %440 = getelementptr i16, i16* %358, i64 -1
  %441 = getelementptr i16, i16* %357, i64 -1
  %442 = getelementptr inbounds i16, i16* %440, i64 %437
  %443 = getelementptr inbounds i16, i16* %442, i64 -7
  %444 = bitcast i16* %443 to <8 x i16>*
  %445 = load <8 x i16>, <8 x i16>* %444, align 2, !alias.scope !111
  %446 = getelementptr inbounds i16, i16* %442, i64 -8
  %447 = getelementptr inbounds i16, i16* %446, i64 -7
  %448 = bitcast i16* %447 to <8 x i16>*
  %449 = load <8 x i16>, <8 x i16>* %448, align 2, !alias.scope !111
  %450 = getelementptr inbounds i16, i16* %441, i64 %437
  %451 = getelementptr inbounds i16, i16* %450, i64 -7
  %452 = bitcast i16* %451 to <8 x i16>*
  store <8 x i16> %445, <8 x i16>* %452, align 2, !alias.scope !114, !noalias !111
  %453 = getelementptr inbounds i16, i16* %450, i64 -8
  %454 = getelementptr inbounds i16, i16* %453, i64 -7
  %455 = bitcast i16* %454 to <8 x i16>*
  store <8 x i16> %449, <8 x i16>* %455, align 2, !alias.scope !114, !noalias !111
  br label %456

456:                                              ; preds = %436, %439
  %457 = icmp eq i64 %366, %380
  br i1 %457, label %887, label %458

458:                                              ; preds = %456, %368, %361
  %459 = phi i16* [ %358, %368 ], [ %358, %361 ], [ %382, %456 ]
  %460 = phi i16* [ %357, %368 ], [ %357, %361 ], [ %384, %456 ]
  %461 = getelementptr i16, i16* %459, i64 -1
  %462 = ptrtoint i16* %461 to i64
  %463 = sub i64 %462, %9
  %464 = lshr i64 %463, 1
  %465 = add nuw i64 %464, 1
  %466 = and i64 %465, 7
  %467 = icmp eq i64 %466, 0
  br i1 %467, label %477, label %468

468:                                              ; preds = %458, %468
  %469 = phi i16* [ %472, %468 ], [ %459, %458 ]
  %470 = phi i16* [ %474, %468 ], [ %460, %458 ]
  %471 = phi i64 [ %475, %468 ], [ %466, %458 ]
  %472 = getelementptr inbounds i16, i16* %469, i64 -1
  %473 = load i16, i16* %472, align 2
  %474 = getelementptr inbounds i16, i16* %470, i64 -1
  store i16 %473, i16* %474, align 2
  %475 = add i64 %471, -1
  %476 = icmp eq i64 %475, 0
  br i1 %476, label %477, label %468, !llvm.loop !117

477:                                              ; preds = %468, %458
  %478 = phi i16* [ %459, %458 ], [ %472, %468 ]
  %479 = phi i16* [ %460, %458 ], [ %474, %468 ]
  %480 = icmp ult i64 %463, 14
  br i1 %480, label %887, label %481

481:                                              ; preds = %477, %481
  %482 = phi i16* [ %505, %481 ], [ %478, %477 ]
  %483 = phi i16* [ %507, %481 ], [ %479, %477 ]
  %484 = getelementptr inbounds i16, i16* %482, i64 -1
  %485 = load i16, i16* %484, align 2
  %486 = getelementptr inbounds i16, i16* %483, i64 -1
  store i16 %485, i16* %486, align 2
  %487 = getelementptr inbounds i16, i16* %482, i64 -2
  %488 = load i16, i16* %487, align 2
  %489 = getelementptr inbounds i16, i16* %483, i64 -2
  store i16 %488, i16* %489, align 2
  %490 = getelementptr inbounds i16, i16* %482, i64 -3
  %491 = load i16, i16* %490, align 2
  %492 = getelementptr inbounds i16, i16* %483, i64 -3
  store i16 %491, i16* %492, align 2
  %493 = getelementptr inbounds i16, i16* %482, i64 -4
  %494 = load i16, i16* %493, align 2
  %495 = getelementptr inbounds i16, i16* %483, i64 -4
  store i16 %494, i16* %495, align 2
  %496 = getelementptr inbounds i16, i16* %482, i64 -5
  %497 = load i16, i16* %496, align 2
  %498 = getelementptr inbounds i16, i16* %483, i64 -5
  store i16 %497, i16* %498, align 2
  %499 = getelementptr inbounds i16, i16* %482, i64 -6
  %500 = load i16, i16* %499, align 2
  %501 = getelementptr inbounds i16, i16* %483, i64 -6
  store i16 %500, i16* %501, align 2
  %502 = getelementptr inbounds i16, i16* %482, i64 -7
  %503 = load i16, i16* %502, align 2
  %504 = getelementptr inbounds i16, i16* %483, i64 -7
  store i16 %503, i16* %504, align 2
  %505 = getelementptr inbounds i16, i16* %482, i64 -8
  %506 = load i16, i16* %505, align 2
  %507 = getelementptr inbounds i16, i16* %483, i64 -8
  store i16 %506, i16* %507, align 2
  %508 = icmp eq i16* %505, %6
  br i1 %508, label %887, label %481, !llvm.loop !118

509:                                              ; preds = %356
  %510 = getelementptr inbounds i16, i16* %359, i64 -1
  %511 = getelementptr inbounds i16, i16* %358, i64 -1
  %512 = load i16, i16* %511, align 2
  %513 = load i16, i16* %510, align 2
  %514 = icmp ult i16 %512, %513
  %515 = getelementptr inbounds i16, i16* %357, i64 -1
  %516 = select i1 %514, i16 %513, i16 %512
  %517 = select i1 %514, i16* %510, i16* %359
  %518 = select i1 %514, i16* %358, i16* %511
  store i16 %516, i16* %515, align 2
  %519 = icmp eq i16* %518, %6
  br i1 %519, label %887, label %356

520:                                              ; preds = %196, %520
  %521 = phi i16* [ %546, %520 ], [ %198, %196 ]
  %522 = phi i16* [ %545, %520 ], [ %199, %196 ]
  %523 = load i16, i16* %522, align 2
  store i16 %523, i16* %521, align 2
  %524 = getelementptr inbounds i16, i16* %522, i64 1
  %525 = getelementptr inbounds i16, i16* %521, i64 1
  %526 = load i16, i16* %524, align 2
  store i16 %526, i16* %525, align 2
  %527 = getelementptr inbounds i16, i16* %522, i64 2
  %528 = getelementptr inbounds i16, i16* %521, i64 2
  %529 = load i16, i16* %527, align 2
  store i16 %529, i16* %528, align 2
  %530 = getelementptr inbounds i16, i16* %522, i64 3
  %531 = getelementptr inbounds i16, i16* %521, i64 3
  %532 = load i16, i16* %530, align 2
  store i16 %532, i16* %531, align 2
  %533 = getelementptr inbounds i16, i16* %522, i64 4
  %534 = getelementptr inbounds i16, i16* %521, i64 4
  %535 = load i16, i16* %533, align 2
  store i16 %535, i16* %534, align 2
  %536 = getelementptr inbounds i16, i16* %522, i64 5
  %537 = getelementptr inbounds i16, i16* %521, i64 5
  %538 = load i16, i16* %536, align 2
  store i16 %538, i16* %537, align 2
  %539 = getelementptr inbounds i16, i16* %522, i64 6
  %540 = getelementptr inbounds i16, i16* %521, i64 6
  %541 = load i16, i16* %539, align 2
  store i16 %541, i16* %540, align 2
  %542 = getelementptr inbounds i16, i16* %522, i64 7
  %543 = getelementptr inbounds i16, i16* %521, i64 7
  %544 = load i16, i16* %542, align 2
  store i16 %544, i16* %543, align 2
  %545 = getelementptr inbounds i16, i16* %522, i64 8
  %546 = getelementptr inbounds i16, i16* %521, i64 8
  %547 = icmp eq i16* %545, %15
  br i1 %547, label %353, label %520, !llvm.loop !119

548:                                              ; preds = %25, %554
  %549 = phi i64 [ %16, %25 ], [ %557, %554 ]
  %550 = phi i64 [ %19, %25 ], [ %556, %554 ]
  %551 = inttoptr i64 %550 to i16*
  %552 = load i16, i16* %551, align 2
  %553 = icmp ult i16 %27, %552
  br i1 %553, label %559, label %554

554:                                              ; preds = %548
  %555 = getelementptr inbounds i16, i16* %551, i64 1
  %556 = ptrtoint i16* %555 to i64
  %557 = add nsw i64 %549, -1
  %558 = icmp eq i64 %557, 0
  br i1 %558, label %887, label %548

559:                                              ; preds = %548
  %560 = inttoptr i64 %550 to i16*
  %561 = icmp slt i64 %549, %17
  br i1 %561, label %562, label %589

562:                                              ; preds = %559
  %563 = sdiv i64 %17, 2
  %564 = getelementptr inbounds i16, i16* %26, i64 %563
  %565 = ptrtoint i16* %564 to i64
  %566 = sub i64 %18, %550
  %567 = icmp eq i64 %566, 0
  br i1 %567, label %584, label %568

568:                                              ; preds = %562
  %569 = ashr exact i64 %566, 1
  %570 = load i16, i16* %564, align 2
  br label %571

571:                                              ; preds = %571, %568
  %572 = phi i16* [ %560, %568 ], [ %582, %571 ]
  %573 = phi i64 [ %569, %568 ], [ %581, %571 ]
  %574 = lshr i64 %573, 1
  %575 = getelementptr inbounds i16, i16* %572, i64 %574
  %576 = load i16, i16* %575, align 2
  %577 = icmp ult i16 %570, %576
  %578 = getelementptr inbounds i16, i16* %575, i64 1
  %579 = xor i64 %574, -1
  %580 = add i64 %573, %579
  %581 = select i1 %577, i64 %574, i64 %580
  %582 = select i1 %577, i16* %572, i16* %578
  %583 = icmp eq i64 %581, 0
  br i1 %583, label %584, label %571

584:                                              ; preds = %571, %562
  %585 = phi i16* [ %560, %562 ], [ %582, %571 ]
  %586 = ptrtoint i16* %585 to i64
  %587 = sub i64 %586, %550
  %588 = ashr exact i64 %587, 1
  br label %622

589:                                              ; preds = %559
  %590 = icmp eq i64 %549, 1
  br i1 %590, label %591, label %594

591:                                              ; preds = %589
  %592 = inttoptr i64 %18 to i16*
  %593 = inttoptr i64 %550 to i16*
  store i16 %27, i16* %593, align 2
  store i16 %552, i16* %592, align 2
  br label %887

594:                                              ; preds = %589
  %595 = sdiv i64 %549, 2
  %596 = getelementptr inbounds i16, i16* %560, i64 %595
  %597 = ptrtoint i16* %596 to i64
  %598 = ptrtoint i16* %15 to i64
  %599 = sub i64 %598, %18
  %600 = icmp eq i64 %599, 0
  br i1 %600, label %617, label %601

601:                                              ; preds = %594
  %602 = ashr exact i64 %599, 1
  %603 = load i16, i16* %596, align 2
  br label %604

604:                                              ; preds = %604, %601
  %605 = phi i16* [ %26, %601 ], [ %615, %604 ]
  %606 = phi i64 [ %602, %601 ], [ %614, %604 ]
  %607 = lshr i64 %606, 1
  %608 = getelementptr inbounds i16, i16* %605, i64 %607
  %609 = load i16, i16* %608, align 2
  %610 = icmp ult i16 %609, %603
  %611 = getelementptr inbounds i16, i16* %608, i64 1
  %612 = xor i64 %607, -1
  %613 = add i64 %606, %612
  %614 = select i1 %610, i64 %613, i64 %607
  %615 = select i1 %610, i16* %611, i16* %605
  %616 = icmp eq i64 %614, 0
  br i1 %616, label %617, label %604

617:                                              ; preds = %604, %594
  %618 = phi i16* [ %26, %594 ], [ %615, %604 ]
  %619 = ptrtoint i16* %618 to i64
  %620 = sub i64 %619, %18
  %621 = ashr exact i64 %620, 1
  br label %622

622:                                              ; preds = %617, %584
  %623 = phi i64 [ %586, %584 ], [ %597, %617 ]
  %624 = phi i64 [ %565, %584 ], [ %619, %617 ]
  %625 = phi i64 [ %563, %584 ], [ %621, %617 ]
  %626 = phi i64 [ %588, %584 ], [ %595, %617 ]
  %627 = sub nsw i64 %549, %626
  %628 = sub nsw i64 %17, %625
  %629 = inttoptr i64 %623 to i16*
  %630 = inttoptr i64 %624 to i16*
  %631 = inttoptr i64 %623 to i8*
  %632 = inttoptr i64 %18 to i8*
  %633 = icmp eq i16* %629, %26
  br i1 %633, label %872, label %634

634:                                              ; preds = %622
  %635 = icmp eq i16* %26, %630
  br i1 %635, label %872, label %636

636:                                              ; preds = %634
  %637 = getelementptr inbounds i16, i16* %629, i64 1
  %638 = icmp eq i16* %637, %26
  br i1 %638, label %639, label %647

639:                                              ; preds = %636
  %640 = load i16, i16* %629, align 2
  %641 = sub i64 %624, %18
  %642 = ashr exact i64 %641, 1
  %643 = icmp eq i64 %641, 0
  br i1 %643, label %645, label %644

644:                                              ; preds = %639
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %631, i8* align 2 %632, i64 %641, i1 false) #12
  br label %645

645:                                              ; preds = %644, %639
  %646 = getelementptr inbounds i16, i16* %629, i64 %642
  store i16 %640, i16* %646, align 2
  br label %872

647:                                              ; preds = %636
  %648 = getelementptr inbounds i16, i16* %26, i64 1
  %649 = icmp eq i16* %648, %630
  br i1 %649, label %650, label %663

650:                                              ; preds = %647
  %651 = getelementptr inbounds i16, i16* %630, i64 -1
  %652 = load i16, i16* %651, align 2
  %653 = ptrtoint i16* %651 to i64
  %654 = sub i64 %653, %623
  %655 = icmp eq i64 %654, 0
  br i1 %655, label %661, label %656

656:                                              ; preds = %650
  %657 = ashr exact i64 %654, 1
  %658 = sub nsw i64 0, %657
  %659 = getelementptr inbounds i16, i16* %630, i64 %658
  %660 = bitcast i16* %659 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %660, i8* align 2 %631, i64 %654, i1 false) #12
  br label %661

661:                                              ; preds = %656, %650
  %662 = phi i16* [ %659, %656 ], [ %630, %650 ]
  store i16 %652, i16* %629, align 2
  br label %872

663:                                              ; preds = %647
  %664 = sub i64 %18, %623
  %665 = ashr exact i64 %664, 1
  %666 = sub i64 %624, %18
  %667 = ashr exact i64 %666, 1
  %668 = icmp eq i64 %665, %667
  br i1 %668, label %669, label %814

669:                                              ; preds = %663
  %670 = load i16, i16* %629, align 2
  store i16 %27, i16* %629, align 2
  store i16 %670, i16* %26, align 2
  %671 = getelementptr inbounds i16, i16* %629, i64 1
  %672 = getelementptr inbounds i16, i16* %26, i64 1
  %673 = icmp eq i16* %671, %26
  br i1 %673, label %872, label %674

674:                                              ; preds = %669
  %675 = getelementptr i16, i16* %26, i64 -2
  %676 = bitcast i16* %675 to i8*
  %677 = sub i64 0, %623
  %678 = getelementptr i8, i8* %676, i64 %677
  %679 = ptrtoint i8* %678 to i64
  %680 = lshr i64 %679, 1
  %681 = add nuw i64 %680, 1
  %682 = icmp ult i64 %681, 16
  br i1 %682, label %769, label %683

683:                                              ; preds = %674
  %684 = getelementptr i16, i16* %629, i64 2
  %685 = getelementptr i16, i16* %26, i64 -2
  %686 = bitcast i16* %685 to i8*
  %687 = sub i64 0, %623
  %688 = getelementptr i8, i8* %686, i64 %687
  %689 = ptrtoint i8* %688 to i64
  %690 = lshr i64 %689, 1
  %691 = getelementptr i16, i16* %684, i64 %690
  %692 = getelementptr i16, i16* %26, i64 2
  %693 = getelementptr i16, i16* %692, i64 %690
  %694 = icmp ult i16* %671, %693
  %695 = icmp ult i16* %672, %691
  %696 = and i1 %694, %695
  br i1 %696, label %769, label %697

697:                                              ; preds = %683
  %698 = and i64 %681, -16
  %699 = getelementptr i16, i16* %672, i64 %698
  %700 = getelementptr i16, i16* %671, i64 %698
  %701 = add i64 %698, -16
  %702 = lshr exact i64 %701, 4
  %703 = add nuw nsw i64 %702, 1
  %704 = and i64 %703, 1
  %705 = icmp eq i64 %701, 0
  br i1 %705, label %747, label %706

706:                                              ; preds = %697
  %707 = sub nuw nsw i64 %703, %704
  br label %708

708:                                              ; preds = %708, %706
  %709 = phi i64 [ 0, %706 ], [ %744, %708 ]
  %710 = phi i64 [ %707, %706 ], [ %745, %708 ]
  %711 = getelementptr i16, i16* %672, i64 %709
  %712 = getelementptr i16, i16* %671, i64 %709
  %713 = bitcast i16* %711 to <8 x i16>*
  %714 = load <8 x i16>, <8 x i16>* %713, align 2, !alias.scope !120
  %715 = getelementptr i16, i16* %711, i64 8
  %716 = bitcast i16* %715 to <8 x i16>*
  %717 = load <8 x i16>, <8 x i16>* %716, align 2, !alias.scope !120
  %718 = bitcast i16* %712 to <8 x i16>*
  %719 = load <8 x i16>, <8 x i16>* %718, align 2, !alias.scope !123, !noalias !120
  %720 = getelementptr i16, i16* %712, i64 8
  %721 = bitcast i16* %720 to <8 x i16>*
  %722 = load <8 x i16>, <8 x i16>* %721, align 2, !alias.scope !123, !noalias !120
  %723 = bitcast i16* %712 to <8 x i16>*
  store <8 x i16> %714, <8 x i16>* %723, align 2, !alias.scope !123, !noalias !120
  %724 = bitcast i16* %720 to <8 x i16>*
  store <8 x i16> %717, <8 x i16>* %724, align 2, !alias.scope !123, !noalias !120
  %725 = bitcast i16* %711 to <8 x i16>*
  store <8 x i16> %719, <8 x i16>* %725, align 2, !alias.scope !120
  %726 = bitcast i16* %715 to <8 x i16>*
  store <8 x i16> %722, <8 x i16>* %726, align 2, !alias.scope !120
  %727 = or i64 %709, 16
  %728 = getelementptr i16, i16* %672, i64 %727
  %729 = getelementptr i16, i16* %671, i64 %727
  %730 = bitcast i16* %728 to <8 x i16>*
  %731 = load <8 x i16>, <8 x i16>* %730, align 2, !alias.scope !120
  %732 = getelementptr i16, i16* %728, i64 8
  %733 = bitcast i16* %732 to <8 x i16>*
  %734 = load <8 x i16>, <8 x i16>* %733, align 2, !alias.scope !120
  %735 = bitcast i16* %729 to <8 x i16>*
  %736 = load <8 x i16>, <8 x i16>* %735, align 2, !alias.scope !123, !noalias !120
  %737 = getelementptr i16, i16* %729, i64 8
  %738 = bitcast i16* %737 to <8 x i16>*
  %739 = load <8 x i16>, <8 x i16>* %738, align 2, !alias.scope !123, !noalias !120
  %740 = bitcast i16* %729 to <8 x i16>*
  store <8 x i16> %731, <8 x i16>* %740, align 2, !alias.scope !123, !noalias !120
  %741 = bitcast i16* %737 to <8 x i16>*
  store <8 x i16> %734, <8 x i16>* %741, align 2, !alias.scope !123, !noalias !120
  %742 = bitcast i16* %728 to <8 x i16>*
  store <8 x i16> %736, <8 x i16>* %742, align 2, !alias.scope !120
  %743 = bitcast i16* %732 to <8 x i16>*
  store <8 x i16> %739, <8 x i16>* %743, align 2, !alias.scope !120
  %744 = add i64 %709, 32
  %745 = add i64 %710, -2
  %746 = icmp eq i64 %745, 0
  br i1 %746, label %747, label %708, !llvm.loop !125

747:                                              ; preds = %708, %697
  %748 = phi i64 [ 0, %697 ], [ %744, %708 ]
  %749 = icmp eq i64 %704, 0
  br i1 %749, label %767, label %750

750:                                              ; preds = %747
  %751 = getelementptr i16, i16* %672, i64 %748
  %752 = getelementptr i16, i16* %671, i64 %748
  %753 = bitcast i16* %751 to <8 x i16>*
  %754 = load <8 x i16>, <8 x i16>* %753, align 2, !alias.scope !120
  %755 = getelementptr i16, i16* %751, i64 8
  %756 = bitcast i16* %755 to <8 x i16>*
  %757 = load <8 x i16>, <8 x i16>* %756, align 2, !alias.scope !120
  %758 = bitcast i16* %752 to <8 x i16>*
  %759 = load <8 x i16>, <8 x i16>* %758, align 2, !alias.scope !123, !noalias !120
  %760 = getelementptr i16, i16* %752, i64 8
  %761 = bitcast i16* %760 to <8 x i16>*
  %762 = load <8 x i16>, <8 x i16>* %761, align 2, !alias.scope !123, !noalias !120
  %763 = bitcast i16* %752 to <8 x i16>*
  store <8 x i16> %754, <8 x i16>* %763, align 2, !alias.scope !123, !noalias !120
  %764 = bitcast i16* %760 to <8 x i16>*
  store <8 x i16> %757, <8 x i16>* %764, align 2, !alias.scope !123, !noalias !120
  %765 = bitcast i16* %751 to <8 x i16>*
  store <8 x i16> %759, <8 x i16>* %765, align 2, !alias.scope !120
  %766 = bitcast i16* %755 to <8 x i16>*
  store <8 x i16> %762, <8 x i16>* %766, align 2, !alias.scope !120
  br label %767

767:                                              ; preds = %747, %750
  %768 = icmp eq i64 %681, %698
  br i1 %768, label %872, label %769

769:                                              ; preds = %767, %683, %674
  %770 = phi i16* [ %672, %683 ], [ %672, %674 ], [ %699, %767 ]
  %771 = phi i16* [ %671, %683 ], [ %671, %674 ], [ %700, %767 ]
  %772 = ptrtoint i16* %771 to i64
  %773 = getelementptr i16, i16* %26, i64 -1
  %774 = ptrtoint i16* %773 to i64
  %775 = sub i64 %774, %772
  %776 = lshr i64 %775, 1
  %777 = add nuw i64 %776, 1
  %778 = and i64 %777, 3
  %779 = icmp eq i64 %778, 0
  br i1 %779, label %790, label %780

780:                                              ; preds = %769, %780
  %781 = phi i16* [ %787, %780 ], [ %770, %769 ]
  %782 = phi i16* [ %786, %780 ], [ %771, %769 ]
  %783 = phi i64 [ %788, %780 ], [ %778, %769 ]
  %784 = load i16, i16* %781, align 2
  %785 = load i16, i16* %782, align 2
  store i16 %784, i16* %782, align 2
  store i16 %785, i16* %781, align 2
  %786 = getelementptr inbounds i16, i16* %782, i64 1
  %787 = getelementptr inbounds i16, i16* %781, i64 1
  %788 = add i64 %783, -1
  %789 = icmp eq i64 %788, 0
  br i1 %789, label %790, label %780, !llvm.loop !126

790:                                              ; preds = %780, %769
  %791 = phi i16* [ %770, %769 ], [ %787, %780 ]
  %792 = phi i16* [ %771, %769 ], [ %786, %780 ]
  %793 = icmp ult i64 %775, 6
  br i1 %793, label %872, label %794

794:                                              ; preds = %790, %794
  %795 = phi i16* [ %812, %794 ], [ %791, %790 ]
  %796 = phi i16* [ %811, %794 ], [ %792, %790 ]
  %797 = load i16, i16* %795, align 2
  %798 = load i16, i16* %796, align 2
  store i16 %797, i16* %796, align 2
  store i16 %798, i16* %795, align 2
  %799 = getelementptr inbounds i16, i16* %796, i64 1
  %800 = getelementptr inbounds i16, i16* %795, i64 1
  %801 = load i16, i16* %800, align 2
  %802 = load i16, i16* %799, align 2
  store i16 %801, i16* %799, align 2
  store i16 %802, i16* %800, align 2
  %803 = getelementptr inbounds i16, i16* %796, i64 2
  %804 = getelementptr inbounds i16, i16* %795, i64 2
  %805 = load i16, i16* %804, align 2
  %806 = load i16, i16* %803, align 2
  store i16 %805, i16* %803, align 2
  store i16 %806, i16* %804, align 2
  %807 = getelementptr inbounds i16, i16* %796, i64 3
  %808 = getelementptr inbounds i16, i16* %795, i64 3
  %809 = load i16, i16* %808, align 2
  %810 = load i16, i16* %807, align 2
  store i16 %809, i16* %807, align 2
  store i16 %810, i16* %808, align 2
  %811 = getelementptr inbounds i16, i16* %796, i64 4
  %812 = getelementptr inbounds i16, i16* %795, i64 4
  %813 = icmp eq i16* %811, %26
  br i1 %813, label %872, label %794, !llvm.loop !127

814:                                              ; preds = %663, %814
  %815 = phi i64 [ %817, %814 ], [ %667, %663 ]
  %816 = phi i64 [ %815, %814 ], [ %665, %663 ]
  %817 = srem i64 %816, %815
  %818 = icmp eq i64 %817, 0
  br i1 %818, label %819, label %814

819:                                              ; preds = %814
  %820 = icmp eq i64 %815, 0
  br i1 %820, label %848, label %821

821:                                              ; preds = %819
  %822 = getelementptr inbounds i16, i16* %629, i64 %815
  %823 = shl nsw i64 %815, 1
  %824 = add i64 %823, -2
  %825 = and i64 %824, 2
  %826 = icmp eq i64 %825, 0
  br i1 %826, label %827, label %845

827:                                              ; preds = %821
  %828 = getelementptr inbounds i16, i16* %822, i64 -1
  %829 = load i16, i16* %828, align 2
  %830 = getelementptr inbounds i16, i16* %828, i64 %665
  br label %831

831:                                              ; preds = %831, %827
  %832 = phi i16* [ %828, %827 ], [ %833, %831 ]
  %833 = phi i16* [ %830, %827 ], [ %842, %831 ]
  %834 = ptrtoint i16* %833 to i64
  %835 = load i16, i16* %833, align 2
  store i16 %835, i16* %832, align 2
  %836 = sub i64 %624, %834
  %837 = ashr exact i64 %836, 1
  %838 = icmp slt i64 %665, %837
  %839 = getelementptr inbounds i16, i16* %833, i64 %665
  %840 = sub nsw i64 %665, %837
  %841 = getelementptr inbounds i16, i16* %629, i64 %840
  %842 = select i1 %838, i16* %839, i16* %841
  %843 = icmp eq i16* %842, %828
  br i1 %843, label %844, label %831

844:                                              ; preds = %831
  store i16 %829, i16* %833, align 2
  br label %845

845:                                              ; preds = %844, %821
  %846 = phi i16* [ %828, %844 ], [ %822, %821 ]
  %847 = icmp eq i64 %824, 0
  br i1 %847, label %848, label %850

848:                                              ; preds = %845, %901, %819
  %849 = getelementptr inbounds i16, i16* %629, i64 %667
  br label %872

850:                                              ; preds = %845, %901
  %851 = phi i16* [ %869, %901 ], [ %846, %845 ]
  %852 = getelementptr inbounds i16, i16* %851, i64 -1
  %853 = load i16, i16* %852, align 2
  %854 = getelementptr inbounds i16, i16* %852, i64 %665
  br label %855

855:                                              ; preds = %855, %850
  %856 = phi i16* [ %852, %850 ], [ %857, %855 ]
  %857 = phi i16* [ %854, %850 ], [ %866, %855 ]
  %858 = ptrtoint i16* %857 to i64
  %859 = load i16, i16* %857, align 2
  store i16 %859, i16* %856, align 2
  %860 = sub i64 %624, %858
  %861 = ashr exact i64 %860, 1
  %862 = icmp slt i64 %665, %861
  %863 = getelementptr inbounds i16, i16* %857, i64 %665
  %864 = sub nsw i64 %665, %861
  %865 = getelementptr inbounds i16, i16* %629, i64 %864
  %866 = select i1 %862, i16* %863, i16* %865
  %867 = icmp eq i16* %866, %852
  br i1 %867, label %868, label %855

868:                                              ; preds = %855
  store i16 %853, i16* %857, align 2
  %869 = getelementptr inbounds i16, i16* %851, i64 -2
  %870 = load i16, i16* %869, align 2
  %871 = getelementptr inbounds i16, i16* %869, i64 %665
  br label %888

872:                                              ; preds = %790, %794, %669, %767, %622, %634, %645, %661, %848
  %873 = phi i16* [ %629, %634 ], [ %630, %622 ], [ %646, %645 ], [ %662, %661 ], [ %849, %848 ], [ %26, %767 ], [ %26, %669 ], [ %26, %794 ], [ %26, %790 ]
  %874 = add nsw i64 %626, %625
  %875 = add nsw i64 %627, %628
  %876 = icmp slt i64 %874, %875
  br i1 %876, label %877, label %879

877:                                              ; preds = %872
  %878 = ptrtoint i16* %873 to i64
  tail call void @_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeIDsNS1_8identityENS_4lessIvEENS_6vectorIDsNS_9allocatorIDsEEEEE13value_compareENS_11__wrap_iterIPDsEEEEvT0_SH_SH_T_NS_15iterator_traitsISH_E15difference_typeESL_PNSK_10value_typeEl(i16* %560, i16* %629, i16* %873, %"struct.base::internal::flat_tree<char16_t, base::identity, std::__1::less<void>, std::__1::vector<char16_t, std::__1::allocator<char16_t> > >::value_compare"* dereferenceable(1) %3, i64 %626, i64 %625, i16* %6, i64 %7)
  br label %880

879:                                              ; preds = %872
  tail call void @_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeIDsNS1_8identityENS_4lessIvEENS_6vectorIDsNS_9allocatorIDsEEEEE13value_compareENS_11__wrap_iterIPDsEEEEvT0_SH_SH_T_NS_15iterator_traitsISH_E15difference_typeESL_PNSK_10value_typeEl(i16* %873, i16* %630, i16* %15, %"struct.base::internal::flat_tree<char16_t, base::identity, std::__1::less<void>, std::__1::vector<char16_t, std::__1::allocator<char16_t> > >::value_compare"* dereferenceable(1) %3, i64 %627, i64 %628, i16* %6, i64 %7)
  br label %880

880:                                              ; preds = %877, %879
  %881 = phi i64 [ %878, %877 ], [ %550, %879 ]
  %882 = phi i64 [ %624, %877 ], [ %623, %879 ]
  %883 = phi i64 [ %628, %877 ], [ %625, %879 ]
  %884 = phi i64 [ %627, %877 ], [ %626, %879 ]
  %885 = phi i16* [ %15, %877 ], [ %873, %879 ]
  %886 = icmp eq i64 %883, 0
  br i1 %886, label %887, label %14

887:                                              ; preds = %880, %23, %554, %320, %509, %477, %481, %456, %8, %591, %353, %309, %304, %296, %165, %34
  ret void

888:                                              ; preds = %888, %868
  %889 = phi i16* [ %869, %868 ], [ %890, %888 ]
  %890 = phi i16* [ %871, %868 ], [ %899, %888 ]
  %891 = ptrtoint i16* %890 to i64
  %892 = load i16, i16* %890, align 2
  store i16 %892, i16* %889, align 2
  %893 = sub i64 %624, %891
  %894 = ashr exact i64 %893, 1
  %895 = icmp slt i64 %665, %894
  %896 = getelementptr inbounds i16, i16* %890, i64 %665
  %897 = sub nsw i64 %665, %894
  %898 = getelementptr inbounds i16, i16* %629, i64 %897
  %899 = select i1 %895, i16* %896, i16* %898
  %900 = icmp eq i16* %899, %869
  br i1 %900, label %901, label %888

901:                                              ; preds = %888
  store i16 %870, i16* %890, align 2
  %902 = icmp eq i16* %869, %629
  br i1 %902, label %848, label %850
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_4pairIN4base4TimeEN2ui14PageTransitionEEENS_9allocatorIS6_EEE6assignIPS6_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISD_E9referenceEEE5valueEvE4typeESD_SD_(%"class.std::__1::vector.41"*, %"struct.std::__1::pair"*, %"struct.std::__1::pair"*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"struct.std::__1::pair"* %1 to i64
  %5 = ptrtoint %"struct.std::__1::pair"* %2 to i64
  %6 = sub i64 %5, %4
  %7 = ashr exact i64 %6, 4
  %8 = getelementptr inbounds %"class.std::__1::vector.41", %"class.std::__1::vector.41"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %"struct.std::__1::pair"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.41"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 4
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to %"struct.std::__1::pair"*
  br i1 %15, label %101, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.41", %"class.std::__1::vector.41"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %"struct.std::__1::pair"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = ashr exact i64 %21, 4
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 %22
  %25 = select i1 %23, %"struct.std::__1::pair"* %24, %"struct.std::__1::pair"* %2
  %26 = icmp eq %"struct.std::__1::pair"* %25, %1
  br i1 %26, label %84, label %27

27:                                               ; preds = %17
  %28 = getelementptr %"struct.std::__1::pair", %"struct.std::__1::pair"* %25, i64 -1, i32 0, i32 0, i32 0
  %29 = ptrtoint i64* %28 to i64
  %30 = sub i64 %29, %4
  %31 = lshr i64 %30, 4
  %32 = add nuw nsw i64 %31, 1
  %33 = and i64 %32, 3
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %49, label %35

35:                                               ; preds = %27, %35
  %36 = phi %"struct.std::__1::pair"* [ %46, %35 ], [ %16, %27 ]
  %37 = phi %"struct.std::__1::pair"* [ %45, %35 ], [ %1, %27 ]
  %38 = phi i64 [ %47, %35 ], [ %33, %27 ]
  %39 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %37, i64 0, i32 0, i32 0, i32 0
  %40 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %36, i64 0, i32 0, i32 0, i32 0
  %41 = load i64, i64* %39, align 8
  store i64 %41, i64* %40, align 8
  %42 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %37, i64 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %36, i64 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %37, i64 1
  %46 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %36, i64 1
  %47 = add i64 %38, -1
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %49, label %35, !llvm.loop !128

49:                                               ; preds = %35, %27
  %50 = phi %"struct.std::__1::pair"* [ undef, %27 ], [ %46, %35 ]
  %51 = phi %"struct.std::__1::pair"* [ %16, %27 ], [ %46, %35 ]
  %52 = phi %"struct.std::__1::pair"* [ %1, %27 ], [ %45, %35 ]
  %53 = icmp ult i64 %30, 48
  br i1 %53, label %84, label %54

54:                                               ; preds = %49, %54
  %55 = phi %"struct.std::__1::pair"* [ %82, %54 ], [ %51, %49 ]
  %56 = phi %"struct.std::__1::pair"* [ %81, %54 ], [ %52, %49 ]
  %57 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %56, i64 0, i32 0, i32 0, i32 0
  %58 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %55, i64 0, i32 0, i32 0, i32 0
  %59 = load i64, i64* %57, align 8
  store i64 %59, i64* %58, align 8
  %60 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %56, i64 0, i32 1
  %61 = load i32, i32* %60, align 8
  %62 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %55, i64 0, i32 1
  store i32 %61, i32* %62, align 8
  %63 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %56, i64 1, i32 0, i32 0, i32 0
  %64 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %55, i64 1, i32 0, i32 0, i32 0
  %65 = load i64, i64* %63, align 8
  store i64 %65, i64* %64, align 8
  %66 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %56, i64 1, i32 1
  %67 = load i32, i32* %66, align 8
  %68 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %55, i64 1, i32 1
  store i32 %67, i32* %68, align 8
  %69 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %56, i64 2, i32 0, i32 0, i32 0
  %70 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %55, i64 2, i32 0, i32 0, i32 0
  %71 = load i64, i64* %69, align 8
  store i64 %71, i64* %70, align 8
  %72 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %56, i64 2, i32 1
  %73 = load i32, i32* %72, align 8
  %74 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %55, i64 2, i32 1
  store i32 %73, i32* %74, align 8
  %75 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %56, i64 3, i32 0, i32 0, i32 0
  %76 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %55, i64 3, i32 0, i32 0, i32 0
  %77 = load i64, i64* %75, align 8
  store i64 %77, i64* %76, align 8
  %78 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %56, i64 3, i32 1
  %79 = load i32, i32* %78, align 8
  %80 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %55, i64 3, i32 1
  store i32 %79, i32* %80, align 8
  %81 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %56, i64 4
  %82 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %55, i64 4
  %83 = icmp eq %"struct.std::__1::pair"* %81, %25
  br i1 %83, label %84, label %54

84:                                               ; preds = %49, %54, %17
  %85 = phi %"struct.std::__1::pair"* [ %16, %17 ], [ %50, %49 ], [ %82, %54 ]
  br i1 %23, label %86, label %100

86:                                               ; preds = %84
  %87 = load i64, i64* %19, align 8
  %88 = ptrtoint %"struct.std::__1::pair"* %25 to i64
  %89 = sub i64 %5, %88
  %90 = icmp sgt i64 %89, 0
  br i1 %90, label %91, label %98

91:                                               ; preds = %86
  %92 = lshr exact i64 %89, 4
  %93 = inttoptr i64 %87 to i8*
  %94 = bitcast %"struct.std::__1::pair"* %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %93, i8* align 8 %94, i64 %89, i1 false) #12
  %95 = inttoptr i64 %87 to %"struct.std::__1::pair"*
  %96 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %95, i64 %92
  %97 = ptrtoint %"struct.std::__1::pair"* %96 to i64
  br label %98

98:                                               ; preds = %86, %91
  %99 = phi i64 [ %97, %91 ], [ %87, %86 ]
  store i64 %99, i64* %19, align 8
  br label %142

100:                                              ; preds = %84
  store %"struct.std::__1::pair"* %85, %"struct.std::__1::pair"** %18, align 8
  br label %142

101:                                              ; preds = %3
  %102 = icmp eq i64 %12, 0
  br i1 %102, label %108, label %103

103:                                              ; preds = %101
  %104 = getelementptr inbounds %"class.std::__1::vector.41", %"class.std::__1::vector.41"* %0, i64 0, i32 0, i32 1
  %105 = bitcast %"struct.std::__1::pair"** %104 to i64*
  store i64 %12, i64* %105, align 8
  %106 = inttoptr i64 %12 to i8*
  tail call void @_ZdlPv(i8* %106) #13
  %107 = bitcast %"class.std::__1::vector.41"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %107, i8 0, i64 24, i1 false) #12
  br label %108

108:                                              ; preds = %101, %103
  %109 = phi i64 [ %10, %101 ], [ 0, %103 ]
  %110 = icmp ugt i64 %7, 1152921504606846975
  br i1 %110, label %111, label %113

111:                                              ; preds = %108
  %112 = bitcast %"class.std::__1::vector.41"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %112) #14
  unreachable

113:                                              ; preds = %108
  %114 = ashr exact i64 %109, 4
  %115 = icmp ult i64 %114, 576460752303423487
  br i1 %115, label %116, label %123

116:                                              ; preds = %113
  %117 = ashr exact i64 %109, 3
  %118 = icmp ult i64 %117, %7
  br i1 %118, label %123, label %119

119:                                              ; preds = %116
  %120 = icmp ugt i64 %117, 1152921504606846975
  br i1 %120, label %121, label %123

121:                                              ; preds = %119
  %122 = bitcast %"class.std::__1::vector.41"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %122) #14
  unreachable

123:                                              ; preds = %116, %113, %119
  %124 = phi i64 [ %117, %119 ], [ 1152921504606846975, %113 ], [ %7, %116 ]
  %125 = shl i64 %124, 4
  %126 = tail call i8* @_Znwm(i64 %125) #13
  %127 = bitcast i8* %126 to %"struct.std::__1::pair"*
  %128 = getelementptr inbounds %"class.std::__1::vector.41", %"class.std::__1::vector.41"* %0, i64 0, i32 0, i32 1
  %129 = bitcast %"struct.std::__1::pair"** %128 to i8**
  store i8* %126, i8** %129, align 8
  %130 = bitcast %"class.std::__1::vector.41"* %0 to i8**
  store i8* %126, i8** %130, align 8
  %131 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %127, i64 %124
  store %"struct.std::__1::pair"* %131, %"struct.std::__1::pair"** %8, align 8
  %132 = bitcast %"struct.std::__1::pair"** %128 to i64*
  %133 = ptrtoint i8* %126 to i64
  %134 = icmp sgt i64 %6, 0
  br i1 %134, label %135, label %140

135:                                              ; preds = %123
  %136 = lshr exact i64 %6, 4
  %137 = bitcast %"struct.std::__1::pair"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %126, i8* align 8 %137, i64 %6, i1 false) #12
  %138 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %127, i64 %136
  %139 = ptrtoint %"struct.std::__1::pair"* %138 to i64
  br label %140

140:                                              ; preds = %123, %135
  %141 = phi i64 [ %139, %135 ], [ %133, %123 ]
  store i64 %141, i64* %132, align 8
  br label %142

142:                                              ; preds = %98, %100, %140
  ret void
}

declare i64 @_ZNK7history6URLRow19EstimateMemoryUsageEv(%"class.history::URLRow"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorImNS_9allocatorImEEE6assignIPmEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleImNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector.14"*, i64*, i64*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint i64* %2 to i64
  %5 = ptrtoint i64* %1 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 3
  %8 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast i64** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.14"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 3
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to i64*
  br i1 %15, label %49, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %0, i64 0, i32 0, i32 1
  %19 = bitcast i64** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = ashr exact i64 %21, 3
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds i64, i64* %1, i64 %22
  %25 = select i1 %23, i64* %24, i64* %2
  %26 = ptrtoint i64* %25 to i64
  %27 = sub i64 %26, %5
  %28 = ashr exact i64 %27, 3
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %17
  %31 = inttoptr i64 %12 to i8*
  %32 = bitcast i64* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %27, i1 false) #12
  br label %33

33:                                               ; preds = %17, %30
  br i1 %23, label %34, label %47

34:                                               ; preds = %33
  %35 = load i64, i64* %19, align 8
  %36 = sub i64 %4, %26
  %37 = icmp sgt i64 %36, 0
  br i1 %37, label %38, label %45

38:                                               ; preds = %34
  %39 = lshr exact i64 %36, 3
  %40 = inttoptr i64 %35 to i8*
  %41 = bitcast i64* %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* align 8 %41, i64 %36, i1 false) #12
  %42 = inttoptr i64 %35 to i64*
  %43 = getelementptr inbounds i64, i64* %42, i64 %39
  %44 = ptrtoint i64* %43 to i64
  br label %45

45:                                               ; preds = %34, %38
  %46 = phi i64 [ %44, %38 ], [ %35, %34 ]
  store i64 %46, i64* %19, align 8
  br label %90

47:                                               ; preds = %33
  %48 = getelementptr inbounds i64, i64* %16, i64 %28
  store i64* %48, i64** %18, align 8
  br label %90

49:                                               ; preds = %3
  %50 = icmp eq i64 %12, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %0, i64 0, i32 0, i32 1
  %53 = bitcast i64** %52 to i64*
  store i64 %12, i64* %53, align 8
  %54 = inttoptr i64 %12 to i8*
  tail call void @_ZdlPv(i8* %54) #13
  %55 = bitcast %"class.std::__1::vector.14"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 24, i1 false) #12
  br label %56

56:                                               ; preds = %49, %51
  %57 = phi i64 [ %10, %49 ], [ 0, %51 ]
  %58 = icmp ugt i64 %7, 2305843009213693951
  br i1 %58, label %59, label %61

59:                                               ; preds = %56
  %60 = bitcast %"class.std::__1::vector.14"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %60) #14
  unreachable

61:                                               ; preds = %56
  %62 = ashr exact i64 %57, 3
  %63 = icmp ult i64 %62, 1152921504606846975
  br i1 %63, label %64, label %71

64:                                               ; preds = %61
  %65 = ashr exact i64 %57, 2
  %66 = icmp ult i64 %65, %7
  br i1 %66, label %71, label %67

67:                                               ; preds = %64
  %68 = icmp ugt i64 %65, 2305843009213693951
  br i1 %68, label %69, label %71

69:                                               ; preds = %67
  %70 = bitcast %"class.std::__1::vector.14"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %70) #14
  unreachable

71:                                               ; preds = %64, %61, %67
  %72 = phi i64 [ %65, %67 ], [ 2305843009213693951, %61 ], [ %7, %64 ]
  %73 = shl i64 %72, 3
  %74 = tail call i8* @_Znwm(i64 %73) #13
  %75 = bitcast i8* %74 to i64*
  %76 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %0, i64 0, i32 0, i32 1
  %77 = bitcast i64** %76 to i8**
  store i8* %74, i8** %77, align 8
  %78 = bitcast %"class.std::__1::vector.14"* %0 to i8**
  store i8* %74, i8** %78, align 8
  %79 = getelementptr inbounds i64, i64* %75, i64 %72
  store i64* %79, i64** %8, align 8
  %80 = bitcast i64** %76 to i64*
  %81 = ptrtoint i8* %74 to i64
  %82 = icmp sgt i64 %6, 0
  br i1 %82, label %83, label %88

83:                                               ; preds = %71
  %84 = lshr exact i64 %6, 3
  %85 = bitcast i64* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %74, i8* align 8 %85, i64 %6, i1 false) #12
  %86 = getelementptr inbounds i64, i64* %75, i64 %84
  %87 = ptrtoint i64* %86 to i64
  br label %88

88:                                               ; preds = %71, %83
  %89 = phi i64 [ %87, %83 ], [ %81, %71 ]
  store i64 %89, i64* %80, align 8
  br label %90

90:                                               ; preds = %45, %47, %88
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nobuiltin nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind }
attributes #13 = { builtin nounwind }
attributes #14 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4}
!4 = distinct !{!4, !"LVerDomain"}
!5 = !{!6}
!6 = distinct !{!6, !4}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.isvectorized", i32 1}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.unroll.disable"}
!11 = distinct !{!11, !10}
!12 = distinct !{!12, !8}
!13 = !{!14}
!14 = distinct !{!14, !15}
!15 = distinct !{!15, !"LVerDomain"}
!16 = !{!17}
!17 = distinct !{!17, !15}
!18 = distinct !{!18, !8}
!19 = distinct !{!19, !10}
!20 = distinct !{!20, !10}
!21 = distinct !{!21, !8}
!22 = !{!23}
!23 = distinct !{!23, !24}
!24 = distinct !{!24, !"LVerDomain"}
!25 = !{!26}
!26 = distinct !{!26, !24}
!27 = distinct !{!27, !8}
!28 = distinct !{!28, !10}
!29 = distinct !{!29, !10}
!30 = distinct !{!30, !8}
!31 = !{!32}
!32 = distinct !{!32, !33}
!33 = distinct !{!33, !"LVerDomain"}
!34 = !{!35}
!35 = distinct !{!35, !33}
!36 = distinct !{!36, !8}
!37 = distinct !{!37, !10}
!38 = distinct !{!38, !10}
!39 = distinct !{!39, !8}
!40 = !{!41}
!41 = distinct !{!41, !42}
!42 = distinct !{!42, !"LVerDomain"}
!43 = !{!44}
!44 = distinct !{!44, !42}
!45 = distinct !{!45, !8}
!46 = distinct !{!46, !10}
!47 = distinct !{!47, !10}
!48 = distinct !{!48, !8}
!49 = !{!50}
!50 = distinct !{!50, !51}
!51 = distinct !{!51, !"LVerDomain"}
!52 = !{!53}
!53 = distinct !{!53, !51}
!54 = distinct !{!54, !8}
!55 = distinct !{!55, !10}
!56 = distinct !{!56, !10}
!57 = distinct !{!57, !8}
!58 = distinct !{!58, !10}
!59 = !{!60}
!60 = distinct !{!60, !61}
!61 = distinct !{!61, !"LVerDomain"}
!62 = !{!63}
!63 = distinct !{!63, !61}
!64 = distinct !{!64, !8}
!65 = distinct !{!65, !10}
!66 = !{!67}
!67 = distinct !{!67, !68}
!68 = distinct !{!68, !"LVerDomain"}
!69 = !{!70}
!70 = distinct !{!70, !68}
!71 = distinct !{!71, !8}
!72 = distinct !{!72, !10}
!73 = distinct !{!73, !10}
!74 = distinct !{!74, !8}
!75 = distinct !{!75, !8}
!76 = !{!77}
!77 = distinct !{!77, !78}
!78 = distinct !{!78, !"LVerDomain"}
!79 = !{!80}
!80 = distinct !{!80, !78}
!81 = distinct !{!81, !8}
!82 = distinct !{!82, !10}
!83 = distinct !{!83, !10}
!84 = distinct !{!84, !8}
!85 = !{!86}
!86 = distinct !{!86, !87}
!87 = distinct !{!87, !"LVerDomain"}
!88 = !{!89}
!89 = distinct !{!89, !87}
!90 = distinct !{!90, !8}
!91 = distinct !{!91, !10}
!92 = distinct !{!92, !10}
!93 = distinct !{!93, !8}
!94 = distinct !{!94, !10}
!95 = !{!96}
!96 = distinct !{!96, !97}
!97 = distinct !{!97, !"LVerDomain"}
!98 = !{!99}
!99 = distinct !{!99, !97}
!100 = distinct !{!100, !8}
!101 = distinct !{!101, !10}
!102 = distinct !{!102, !10}
!103 = !{!104}
!104 = distinct !{!104, !105}
!105 = distinct !{!105, !"LVerDomain"}
!106 = !{!107}
!107 = distinct !{!107, !105}
!108 = distinct !{!108, !8}
!109 = distinct !{!109, !10}
!110 = distinct !{!110, !8}
!111 = !{!112}
!112 = distinct !{!112, !113}
!113 = distinct !{!113, !"LVerDomain"}
!114 = !{!115}
!115 = distinct !{!115, !113}
!116 = distinct !{!116, !8}
!117 = distinct !{!117, !10}
!118 = distinct !{!118, !8}
!119 = distinct !{!119, !8}
!120 = !{!121}
!121 = distinct !{!121, !122}
!122 = distinct !{!122, !"LVerDomain"}
!123 = !{!124}
!124 = distinct !{!124, !122}
!125 = distinct !{!125, !8}
!126 = distinct !{!126, !10}
!127 = distinct !{!127, !8}
!128 = distinct !{!128, !10}
