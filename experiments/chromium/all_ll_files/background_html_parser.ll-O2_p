; ModuleID = '../../third_party/blink/renderer/core/html/parser/background_html_parser.cc'
source_filename = "../../third_party/blink/renderer/core/html/parser/background_html_parser.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.100", i32, [4 x i8], %"class.std::__1::unique_ptr.236", %"class.std::__1::unique_ptr.236", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque.242", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.247", %"class.std::__1::unique_ptr.253", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.265", %"class.std::__1::unique_ptr.271", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.278", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.100" = type { %"class.std::__1::__compressed_pair.101" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.102" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.103", %"class.std::__1::unique_ptr.109", %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.121", %"class.std::__1::unique_ptr.127", %"class.std::__1::unique_ptr.133", %"class.std::__1::unique_ptr.144", %"class.std::__1::unique_ptr.151", %"class.std::__1::unique_ptr.151", %"class.std::__1::unique_ptr.158", %"class.std::__1::unique_ptr.165", %"class.std::__1::unique_ptr.172", %"class.std::__1::unique_ptr.172", %"class.std::__1::unique_ptr.179", %"class.std::__1::unique_ptr.186", %"class.std::__1::unique_ptr.193", %"class.std::__1::unique_ptr.216", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.109" = type { %"class.std::__1::__compressed_pair.110" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.111" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.115" = type { %"class.std::__1::__compressed_pair.116" }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.117" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.121" = type { %"class.std::__1::__compressed_pair.122" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"struct.std::__1::__compressed_pair_elem.123" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.127" = type { %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.133" = type { %"class.std::__1::__compressed_pair.134" }
%"class.std::__1::__compressed_pair.134" = type { %"struct.std::__1::__compressed_pair_elem.135" }
%"struct.std::__1::__compressed_pair_elem.135" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.136" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.136" = type { %"struct.std::__1::__atomic_base.137" }
%"struct.std::__1::__atomic_base.137" = type { %"struct.std::__1::__atomic_base.138" }
%"struct.std::__1::__atomic_base.138" = type { %"struct.std::__1::__cxx_atomic_impl.139" }
%"struct.std::__1::__cxx_atomic_impl.139" = type { %"struct.std::__1::__cxx_atomic_base_impl.140" }
%"struct.std::__1::__cxx_atomic_base_impl.140" = type { i64 }
%"class.std::__1::unique_ptr.144" = type { %"class.std::__1::__compressed_pair.145" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.146" }
%"struct.std::__1::__compressed_pair_elem.146" = type { %"class.blink::Worklist.147"* }
%"class.blink::Worklist.147" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.136" }
%"class.std::__1::unique_ptr.151" = type { %"class.std::__1::__compressed_pair.152" }
%"class.std::__1::__compressed_pair.152" = type { %"struct.std::__1::__compressed_pair_elem.153" }
%"struct.std::__1::__compressed_pair_elem.153" = type { %"class.blink::Worklist.154"* }
%"class.blink::Worklist.154" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.136" }
%"class.std::__1::unique_ptr.158" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { %"class.blink::Worklist.161"* }
%"class.blink::Worklist.161" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.136" }
%"class.std::__1::unique_ptr.165" = type { %"class.std::__1::__compressed_pair.166" }
%"class.std::__1::__compressed_pair.166" = type { %"struct.std::__1::__compressed_pair_elem.167" }
%"struct.std::__1::__compressed_pair_elem.167" = type { %"class.blink::Worklist.168"* }
%"class.blink::Worklist.168" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.136" }
%"class.std::__1::unique_ptr.172" = type { %"class.std::__1::__compressed_pair.173" }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.174" }
%"struct.std::__1::__compressed_pair_elem.174" = type { %"class.blink::Worklist.175"* }
%"class.blink::Worklist.175" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.136" }
%"class.std::__1::unique_ptr.179" = type { %"class.std::__1::__compressed_pair.180" }
%"class.std::__1::__compressed_pair.180" = type { %"struct.std::__1::__compressed_pair_elem.181" }
%"struct.std::__1::__compressed_pair_elem.181" = type { %"class.blink::Worklist.182"* }
%"class.blink::Worklist.182" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.136" }
%"class.std::__1::unique_ptr.186" = type { %"class.std::__1::__compressed_pair.187" }
%"class.std::__1::__compressed_pair.187" = type { %"struct.std::__1::__compressed_pair_elem.188" }
%"struct.std::__1::__compressed_pair_elem.188" = type { %"class.blink::Worklist.189"* }
%"class.blink::Worklist.189" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.136" }
%"class.std::__1::unique_ptr.193" = type { %"class.std::__1::__compressed_pair.194" }
%"class.std::__1::__compressed_pair.194" = type { %"struct.std::__1::__compressed_pair_elem.195" }
%"struct.std::__1::__compressed_pair_elem.195" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.196", %"class.std::__1::__compressed_pair.203", %"class.std::__1::__compressed_pair.208", %"class.std::__1::__compressed_pair.210", [4 x i8] }>
%"class.std::__1::unique_ptr.196" = type { %"class.std::__1::__compressed_pair.197" }
%"class.std::__1::__compressed_pair.197" = type { %"struct.std::__1::__compressed_pair_elem.198", %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.198" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.200" }
%"class.std::__1::__compressed_pair.200" = type { %"struct.std::__1::__compressed_pair_elem.201" }
%"struct.std::__1::__compressed_pair_elem.201" = type { i64 }
%"class.std::__1::__compressed_pair.203" = type { %"struct.std::__1::__compressed_pair_elem.204" }
%"struct.std::__1::__compressed_pair_elem.204" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.201" }
%"class.std::__1::__compressed_pair.210" = type { %"struct.std::__1::__compressed_pair_elem.211" }
%"struct.std::__1::__compressed_pair_elem.211" = type { float }
%"class.std::__1::unique_ptr.216" = type { %"class.std::__1::__compressed_pair.217" }
%"class.std::__1::__compressed_pair.217" = type { %"struct.std::__1::__compressed_pair_elem.218" }
%"struct.std::__1::__compressed_pair_elem.218" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.219", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.228" }
%"class.WTF::Vector.228" = type { %"class.WTF::VectorBuffer.229" }
%"class.WTF::VectorBuffer.229" = type { %"class.WTF::VectorBufferBase.230" }
%"class.WTF::VectorBufferBase.230" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.236" = type { %"class.std::__1::__compressed_pair.237" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.238" }
%"struct.std::__1::__compressed_pair_elem.238" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque.242" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.245" }
%"class.WTF::VectorBuffer.245" = type { %"class.WTF::VectorBufferBase.246" }
%"class.WTF::VectorBufferBase.246" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.247" = type { %"class.std::__1::__compressed_pair.248" }
%"class.std::__1::__compressed_pair.248" = type { %"struct.std::__1::__compressed_pair_elem.249" }
%"struct.std::__1::__compressed_pair_elem.249" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.253" = type { %"class.std::__1::__compressed_pair.254" }
%"class.std::__1::__compressed_pair.254" = type { %"struct.std::__1::__compressed_pair_elem.255" }
%"struct.std::__1::__compressed_pair_elem.255" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.259" }
%"class.std::__1::unique_ptr.259" = type { %"class.std::__1::__compressed_pair.260" }
%"class.std::__1::__compressed_pair.260" = type { %"struct.std::__1::__compressed_pair_elem.261" }
%"struct.std::__1::__compressed_pair_elem.261" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.147"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.154"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.161"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.168"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.175"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.369" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.369" = type { %"struct.std::__1::__compressed_pair_elem.370" }
%"struct.std::__1::__compressed_pair_elem.370" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.265" = type { %"class.std::__1::__compressed_pair.266" }
%"class.std::__1::__compressed_pair.266" = type { %"struct.std::__1::__compressed_pair_elem.267" }
%"struct.std::__1::__compressed_pair_elem.267" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.271" = type { %"class.std::__1::__compressed_pair.272" }
%"class.std::__1::__compressed_pair.272" = type { %"struct.std::__1::__compressed_pair_elem.273" }
%"struct.std::__1::__compressed_pair_elem.273" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.277 }
%class.scoped_refptr.277 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.278" = type { %"struct.std::__1::__atomic_base.279" }
%"struct.std::__1::__atomic_base.279" = type { %"struct.std::__1::__cxx_atomic_impl.280" }
%"struct.std::__1::__cxx_atomic_impl.280" = type { %"struct.std::__1::__cxx_atomic_base_impl.281" }
%"struct.std::__1::__cxx_atomic_base_impl.281" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::BackgroundHTMLParser::Configuration" = type { %"class.blink::HTMLParserOptions", %"class.blink::WeakPersistent", %"class.std::__1::unique_ptr.2" }
%"class.blink::HTMLParserOptions" = type { i8, i8 }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::HTMLDocumentParser"*, %"class.blink::PersistentNodePtr" }
%"class.blink::HTMLDocumentParser" = type { %"class.blink::ScriptableDocumentParser", %"class.blink::HTMLParserScriptRunnerHost", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::HTMLParserOptions", %"class.blink::HTMLInputStream", %"class.blink::Member.32", %"class.std::__1::unique_ptr.36", %"class.std::__1::unique_ptr.59", %"class.blink::Member.66", %"class.blink::Member.68", %"class.std::__1::unique_ptr.70", %"class.std::__1::unique_ptr.70", %class.scoped_refptr.303, %"class.blink::Member.309", %"class.WTF::TextPosition", %"class.std::__1::unique_ptr.311", %"class.WTF::Deque.338", %"class.base::WeakPtr", %"class.blink::Member.350", %"class.blink::Member.352", %"class.WTF::Vector.83", %"class.std::__1::unique_ptr.354", %"class.std::__1::unique_ptr.360", %"class.blink::CompactHTMLToken"*, i32, i8, i8, i8, i32, i32, i8, i8, i8, i8, %"class.blink::ThreadScheduler"* }
%"class.blink::ScriptableDocumentParser" = type { %"class.blink::DecodedDataDocumentParser", %"class.blink::Member.26", i8, i32 }
%"class.blink::DecodedDataDocumentParser" = type { %"class.blink::DocumentParser", i8, %"class.std::__1::unique_ptr.2" }
%"class.blink::DocumentParser" = type { %"class.blink::NameClient", i32, i8, %"class.blink::Member", %"class.blink::HeapHashSet" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.452", %"class.WTF::Vector.452", i8, i32, %"class.blink::Member.459", %"class.blink::Member.461", %"class.blink::Member.463", %"class.blink::Member.465", %"class.blink::Member.467", %"class.blink::Member.469", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.471", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.477", %"class.blink::Member.479", %"class.blink::Member.442", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.482", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector", %"class.blink::Member.398", %"class.blink::Member.505", %"class.blink::Member.398", %"class.blink::Member.398", %"class.blink::Member.398", %"class.blink::UserActionElementSet", %"class.blink::Member.514", double, double, i64, i64, %"class.blink::HeapHashSet.516", %"class.blink::HeapHashSet.523", i16, i8, %"class.blink::Member.530", %"class.blink::Member.532", %"class.blink::Member.534", %"class.blink::Member.536", %"class.blink::TextLinkColors", %"class.blink::Member.538", i8, [7 x i8], %"class.blink::HeapHashMap.540", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.398", %"class.WTF::Vector.547", %"class.blink::Member.552", %"class.blink::Member.554", i8, %"class.blink::Member.398", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.556", %"class.blink::HeapVector.558", %"class.std::__1::unique_ptr.566", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.572", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.585", %"class.WTF::Vector.587", i8, i8, %"class.std::__1::unique_ptr.592", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector", %"class.blink::HeapVector.598", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.606", i8, i32, %"class.blink::Member.608", %"class.blink::Member.610", %"class.blink::Member.612", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.614", %"class.WTF::HashMap.616", %"class.blink::Member.621", %"class.blink::Member.623", %"class.blink::Member.625", %"class.blink::Member.627", %"class.blink::Member", %"class.blink::Member", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.629", i8, i32, %"class.blink::Member.636", %"class.blink::Member.638", i32, %"class.blink::Member.640", %"class.blink::Member.642", %"class.blink::Member.644", %"class.std::__1::unique_ptr.646", i64, %"class.std::__1::unique_ptr.652", i32, i32, %"class.blink::Member.658", %"class.blink::Member.660", %"class.blink::Member.662", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.664", %"class.WTF::Vector.666", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.671", %"class.blink::Member.678", %"class.std::__1::unique_ptr.680", %"class.blink::Member.686", i8, i8, %"class.WTF::String", %"class.blink::Member.688", i8, [7 x i8], %"class.blink::HeapHashMap.690", %"class.blink::HeapObserverSet", %"class.blink::Member.704", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.706", i32, i8, i8, %"class.blink::WeakMember.708", %"class.blink::Member.709" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.376", %"class.blink::Member.376" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.376", %"class.blink::Member.378", %"class.blink::Member.376", %"class.blink::Member.376", %"class.blink::Member.380" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.378" = type { %"class.blink::MemberBase.379" }
%"class.blink::MemberBase.379" = type { %"class.blink::TreeScope"* }
%"class.blink::Member.380" = type { %"class.blink::MemberBase.381" }
%"class.blink::MemberBase.381" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.376" = type { %"class.blink::MemberBase.377" }
%"class.blink::MemberBase.377" = type { %"class.blink::Node"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.384", %"class.blink::Member", %"class.blink::Member.378", %"class.blink::Member.386", %"class.blink::Member.386", %"class.blink::Member.425", %"class.blink::Member.427", %"class.blink::Member.429", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.434", %"class.blink::HeapVector.436" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.384" = type { %"class.blink::MemberBase.385" }
%"class.blink::MemberBase.385" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.386" = type { %"class.blink::MemberBase.387" }
%"class.blink::MemberBase.387" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable.392" }
%"class.WTF::HashTable.392" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %"class.blink::Member.394" }
%"class.blink::Member.394" = type { %"class.blink::MemberBase.395" }
%"class.blink::MemberBase.395" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.398", i32, %"class.blink::HeapVector" }
%"class.blink::Member.425" = type { %"class.blink::MemberBase.426" }
%"class.blink::MemberBase.426" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.427" = type { %"class.blink::MemberBase.428" }
%"class.blink::MemberBase.428" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.429" = type { %"class.blink::MemberBase.430" }
%"class.blink::MemberBase.430" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.431" }
%"class.blink::Member.431" = type { %"class.blink::MemberBase.432" }
%"class.blink::MemberBase.432" = type { %"class.blink::HeapHashMap.433"* }
%"class.blink::HeapHashMap.433" = type opaque
%"class.blink::Member.434" = type { %"class.blink::MemberBase.435" }
%"class.blink::MemberBase.435" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.436" = type { %"class.WTF::Vector.439" }
%"class.WTF::Vector.439" = type { %"class.WTF::VectorBuffer.440" }
%"class.WTF::VectorBuffer.440" = type { %"class.WTF::VectorBufferBase.441" }
%"class.WTF::VectorBufferBase.441" = type { %"class.blink::Member.442"*, i32, i32 }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.445" }
%"class.blink::HeapHashMap.445" = type { %"class.WTF::HashMap.448" }
%"class.WTF::HashMap.448" = type { %"class.WTF::HashTable.449" }
%"class.WTF::HashTable.449" = type <{ %"struct.WTF::KeyValuePair.451"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.451" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.452" = type { %"class.WTF::VectorBuffer.453" }
%"class.WTF::VectorBuffer.453" = type { %"class.WTF::VectorBufferBase.454" }
%"class.WTF::VectorBufferBase.454" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.455 }
%class.scoped_refptr.455 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.456", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.456" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.304" }
%"struct.std::__1::atomic.304" = type { %"struct.std::__1::__atomic_base.305" }
%"struct.std::__1::__atomic_base.305" = type { %"struct.std::__1::__atomic_base.306" }
%"struct.std::__1::__atomic_base.306" = type { %"struct.std::__1::__cxx_atomic_impl.307" }
%"struct.std::__1::__cxx_atomic_impl.307" = type { %"struct.std::__1::__cxx_atomic_base_impl.308" }
%"struct.std::__1::__cxx_atomic_base_impl.308" = type { i32 }
%"class.blink::Member.459" = type { %"class.blink::MemberBase.460" }
%"class.blink::MemberBase.460" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.461" = type { %"class.blink::MemberBase.462" }
%"class.blink::MemberBase.462" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.1030", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.1092", i32, i8, [3 x i8], %"class.blink::HeapVector.1094", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.1102", %"class.blink::Member.1104", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.1113", %"class.blink::Member.1232", %"class.blink::Member.1234", i8, [7 x i8] }>
%"class.blink::Supplementable.1030" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1031" }
%"class.blink::HeapHashMap.1031" = type { %"class.WTF::HashMap.1034" }
%"class.WTF::HashMap.1034" = type { %"class.WTF::HashTable.1035" }
%"class.WTF::HashTable.1035" = type <{ %"struct.WTF::KeyValuePair.1037"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1037" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.1046" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.1038" }
%"class.blink::HeapObserverSet.1038" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1039" }
%"class.blink::HeapHashSet.1039" = type { %"class.WTF::HashSet.1042" }
%"class.WTF::HashSet.1042" = type { %"class.WTF::HashTable.1043" }
%"class.WTF::HashTable.1043" = type <{ %"class.blink::WeakMember.1045"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1045" = type opaque
%"class.blink::Supplementable.1046" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1047" }
%"class.blink::HeapHashMap.1047" = type { %"class.WTF::HashMap.1050" }
%"class.WTF::HashMap.1050" = type { %"class.WTF::HashTable.1051" }
%"class.WTF::HashTable.1051" = type <{ %"struct.WTF::KeyValuePair.1053"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1053" = type { i8*, %"class.blink::Member.1268" }
%"class.blink::Member.1268" = type { %"class.blink::MemberBase.1269" }
%"class.blink::MemberBase.1269" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1270" }
%"class.blink::Member.1270" = type { %"class.blink::MemberBase.1271" }
%"class.blink::MemberBase.1271" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.1054, %"class.std::__1::unique_ptr.1055", %"class.std::__1::unique_ptr.1055", %"class.std::__1::unique_ptr.1082", %"class.std::__1::unique_ptr.1082", %"class.blink::Member.461", i32, [4 x i8], %"class.WTF::HashSet.1088", i32, i32 }
%class.scoped_refptr.1054 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.1028", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.844", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.849 }
%"class.WTF::RefCounted.1028" = type { %"class.base::RefCounted.1029" }
%"class.base::RefCounted.1029" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.absl::optional.844" = type { %"class.absl::optional_internal::optional_data.845" }
%"class.absl::optional_internal::optional_data.845" = type { %"class.absl::optional_internal::optional_data_base.846" }
%"class.absl::optional_internal::optional_data_base.846" = type { %"class.absl::optional_internal::optional_data_dtor_base.847" }
%"class.absl::optional_internal::optional_data_dtor_base.847" = type { i8, %union.anon.848 }
%union.anon.848 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.849 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.1055" = type { %"class.std::__1::__compressed_pair.1056" }
%"class.std::__1::__compressed_pair.1056" = type { %"struct.std::__1::__compressed_pair_elem.1057" }
%"struct.std::__1::__compressed_pair_elem.1057" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map.1058", %"class.std::__1::map.1069", %"class.std::__1::map.1078"* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.844" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.820" }
%"class.std::__1::__compressed_pair.820" = type { %"struct.std::__1::__compressed_pair_elem.821" }
%"struct.std::__1::__compressed_pair_elem.821" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.822 }
%union.anon.822 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::map.1058" = type { %"class.std::__1::__tree.1059" }
%"class.std::__1::__tree.1059" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1060", %"class.std::__1::__compressed_pair.1064" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.1060" = type { %"struct.std::__1::__compressed_pair_elem.766" }
%"struct.std::__1::__compressed_pair_elem.766" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1064" = type { %"struct.std::__1::__compressed_pair_elem.201" }
%"class.std::__1::map.1069" = type { %"class.std::__1::__tree.1070" }
%"class.std::__1::__tree.1070" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1071", %"class.std::__1::__compressed_pair.1075" }
%"class.std::__1::__compressed_pair.1071" = type { %"struct.std::__1::__compressed_pair_elem.766" }
%"class.std::__1::__compressed_pair.1075" = type { %"struct.std::__1::__compressed_pair_elem.201" }
%"class.std::__1::map.1078" = type opaque
%"class.std::__1::unique_ptr.1082" = type { %"class.std::__1::__compressed_pair.1083" }
%"class.std::__1::__compressed_pair.1083" = type { %"struct.std::__1::__compressed_pair_elem.1084" }
%"struct.std::__1::__compressed_pair_elem.1084" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.1088" = type { %"class.WTF::HashTable.1089" }
%"class.WTF::HashTable.1089" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1092" = type { %"class.blink::MemberBase.1093" }
%"class.blink::MemberBase.1093" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.1094" = type { %"class.WTF::Vector.1097" }
%"class.WTF::Vector.1097" = type { %"class.WTF::VectorBuffer.1098" }
%"class.WTF::VectorBuffer.1098" = type { %"class.WTF::VectorBufferBase.1099" }
%"class.WTF::VectorBufferBase.1099" = type { %"class.blink::Member.1100"*, i32, i32 }
%"class.blink::Member.1100" = type opaque
%"class.blink::Member.1102" = type { %"class.blink::MemberBase.1103" }
%"class.blink::MemberBase.1103" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.1104" = type { %"class.blink::MemberBase.1105" }
%"class.blink::MemberBase.1105" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.1106", i32, i32 }
%"class.blink::HeapHashMap.1106" = type { %"class.WTF::HashMap.1109" }
%"class.WTF::HashMap.1109" = type { %"class.WTF::HashTable.1110" }
%"class.WTF::HashTable.1110" = type <{ %"struct.WTF::KeyValuePair.1112"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1112" = type opaque
%"class.std::__1::unique_ptr.1113" = type { %"class.std::__1::__compressed_pair.1114" }
%"class.std::__1::__compressed_pair.1114" = type { %"struct.std::__1::__compressed_pair_elem.1115" }
%"struct.std::__1::__compressed_pair_elem.1115" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type { %"class.mojo::StructPtr", %"class.mojo::AssociatedRemote" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.1116" }
%"class.std::__1::unique_ptr.1116" = type { %"class.std::__1::__compressed_pair.1117" }
%"class.std::__1::__compressed_pair.1117" = type { %"struct.std::__1::__compressed_pair_elem.1118" }
%"struct.std::__1::__compressed_pair_elem.1118" = type { %"class.blink::mojom::blink::PolicyContainerPolicies"* }
%"class.blink::mojom::blink::PolicyContainerPolicies" = type { i32, i32, %"class.WTF::Vector.1119" }
%"class.WTF::Vector.1119" = type { %"class.WTF::VectorBuffer.1120" }
%"class.WTF::VectorBuffer.1120" = type { %"class.WTF::VectorBufferBase.1121" }
%"class.WTF::VectorBufferBase.1121" = type { %"class.mojo::StructPtr.1122"*, i32, i32 }
%"class.mojo::StructPtr.1122" = type { %"class.std::__1::unique_ptr.1123" }
%"class.std::__1::unique_ptr.1123" = type { %"class.std::__1::__compressed_pair.1124" }
%"class.std::__1::__compressed_pair.1124" = type { %"struct.std::__1::__compressed_pair_elem.1125" }
%"struct.std::__1::__compressed_pair_elem.1125" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.1126", %"class.WTF::HashMap.1133", %"class.WTF::HashMap.1138", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr.1143", i8, %"class.WTF::Vector.836", i32, %"class.mojo::StructPtr.1144", %"class.WTF::Vector.836" }
%"class.mojo::StructPtr.1126" = type { %"class.std::__1::unique_ptr.1127" }
%"class.std::__1::unique_ptr.1127" = type { %"class.std::__1::__compressed_pair.1128" }
%"class.std::__1::__compressed_pair.1128" = type { %"struct.std::__1::__compressed_pair_elem.1129" }
%"struct.std::__1::__compressed_pair_elem.1129" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.1133" = type { %"class.WTF::HashTable.1134" }
%"class.WTF::HashTable.1134" = type <{ %"struct.WTF::KeyValuePair.1137"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1137" = type opaque
%"class.WTF::HashMap.1138" = type { %"class.WTF::HashTable.1139" }
%"class.WTF::HashTable.1139" = type <{ %"struct.WTF::KeyValuePair.1142"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1142" = type opaque
%"class.mojo::InlinedStructPtr.1143" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.1144" = type { %"class.std::__1::unique_ptr.1145" }
%"class.std::__1::unique_ptr.1145" = type { %"class.std::__1::__compressed_pair.1146" }
%"class.std::__1::__compressed_pair.1146" = type { %"struct.std::__1::__compressed_pair_elem.1147" }
%"struct.std::__1::__compressed_pair_elem.1147" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.836", i8, i8, [6 x i8] }>
%"class.WTF::Vector.836" = type { %"class.WTF::VectorBuffer.837" }
%"class.WTF::VectorBuffer.837" = type { %"class.WTF::VectorBufferBase.838" }
%"class.WTF::VectorBufferBase.838" = type { %"class.WTF::String"*, i32, i32 }
%"class.mojo::AssociatedRemote" = type { %"class.mojo::internal::AssociatedInterfacePtrState" }
%"class.mojo::internal::AssociatedInterfacePtrState" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1223" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase.base" = type <{ %"class.std::__1::unique_ptr.1159", i32 }>
%"class.std::__1::unique_ptr.1159" = type { %"class.std::__1::__compressed_pair.1160" }
%"class.std::__1::__compressed_pair.1160" = type { %"struct.std::__1::__compressed_pair_elem.1161" }
%"struct.std::__1::__compressed_pair_elem.1161" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback", %"class.base::OnceCallback.1162", %"class.absl::optional.887", %"class.absl::optional.1163", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.1176", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.1198", %"class.std::__1::map.1209", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.1218", i8, %class.scoped_refptr.1168, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.1219" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.1162" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.887" = type { %"class.absl::optional_internal::optional_data.888" }
%"class.absl::optional_internal::optional_data.888" = type { %"class.absl::optional_internal::optional_data_base.889" }
%"class.absl::optional_internal::optional_data_base.889" = type { %"class.absl::optional_internal::optional_data_dtor_base.890" }
%"class.absl::optional_internal::optional_data_dtor_base.890" = type { i8, %union.anon.891 }
%union.anon.891 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.1163" = type { %"class.absl::optional_internal::optional_data.1164" }
%"class.absl::optional_internal::optional_data.1164" = type { %"class.absl::optional_internal::optional_data_base.1165" }
%"class.absl::optional_internal::optional_data_base.1165" = type { %"class.absl::optional_internal::optional_data_dtor_base.1166" }
%"class.absl::optional_internal::optional_data_dtor_base.1166" = type { i8, %union.anon.1167 }
%union.anon.1167 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.1168, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.1169" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory.1169" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.503 }
%class.scoped_refptr.503 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.344", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.344" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.345" }
%"struct.std::__1::atomic.345" = type { %"struct.std::__1::__atomic_base.346" }
%"struct.std::__1::__atomic_base.346" = type { %"struct.std::__1::__atomic_base.347" }
%"struct.std::__1::__atomic_base.347" = type { %"struct.std::__1::__cxx_atomic_impl.348" }
%"struct.std::__1::__cxx_atomic_impl.348" = type { %"struct.std::__1::__cxx_atomic_base_impl.349" }
%"struct.std::__1::__cxx_atomic_base_impl.349" = type { i8 }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.1174 }
%class.scoped_refptr.1174 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1236", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.1168, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.1236" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.5" }
%"struct.std::__1::__atomic_base.5" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.1175 }
%class.scoped_refptr.1175 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.1176" = type { %"class.std::__1::__compressed_pair.1177" }
%"class.std::__1::__compressed_pair.1177" = type { %"struct.std::__1::__compressed_pair_elem.1178" }
%"struct.std::__1::__compressed_pair_elem.1178" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.1179", %class.scoped_refptr.1180 }
%"class.base::RepeatingCallback.1179" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.1180 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1181", [4 x i8] }>
%"class.base::RefCountedThreadSafe.1181" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.1185", %"class.std::__1::unique_ptr.1191", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory.1197" }
%"class.std::__1::unique_ptr.1185" = type { %"class.std::__1::__compressed_pair.1186" }
%"class.std::__1::__compressed_pair.1186" = type { %"struct.std::__1::__compressed_pair_elem.1187" }
%"struct.std::__1::__compressed_pair_elem.1187" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.1191" = type { %"class.std::__1::__compressed_pair.1192" }
%"class.std::__1::__compressed_pair.1192" = type { %"struct.std::__1::__compressed_pair_elem.1193" }
%"struct.std::__1::__compressed_pair_elem.1193" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.1197" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::map.1198" = type { %"class.std::__1::__tree.1199" }
%"class.std::__1::__tree.1199" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1200", %"class.std::__1::__compressed_pair.1204" }
%"class.std::__1::__compressed_pair.1200" = type { %"struct.std::__1::__compressed_pair_elem.766" }
%"class.std::__1::__compressed_pair.1204" = type { %"struct.std::__1::__compressed_pair_elem.201" }
%"class.std::__1::map.1209" = type { %"class.std::__1::__tree.1210" }
%"class.std::__1::__tree.1210" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1211", %"class.std::__1::__compressed_pair.1215" }
%"class.std::__1::__compressed_pair.1211" = type { %"struct.std::__1::__compressed_pair_elem.766" }
%"class.std::__1::__compressed_pair.1215" = type { %"struct.std::__1::__compressed_pair_elem.201" }
%"class.base::OnceCallback.1218" = type { %"class.base::internal::CallbackBase" }
%class.scoped_refptr.1168 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.1219" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.1223" = type { %"class.std::__1::__compressed_pair.1224" }
%"class.std::__1::__compressed_pair.1224" = type { %"struct.std::__1::__compressed_pair_elem.1225" }
%"struct.std::__1::__compressed_pair_elem.1225" = type { %"class.blink::mojom::blink::PolicyContainerHostProxy"* }
%"class.blink::mojom::blink::PolicyContainerHostProxy" = type { %"class.blink::mojom::blink::PolicyContainerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::PolicyContainerHost" = type { i32 (...)** }
%"class.blink::Member.1232" = type { %"class.blink::MemberBase.1233" }
%"class.blink::MemberBase.1233" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.1234" = type { %"class.blink::MemberBase.1235" }
%"class.blink::MemberBase.1235" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.463" = type { %"class.blink::MemberBase.464" }
%"class.blink::MemberBase.464" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type { i32 (...)**, %"class.blink::ThreadState::PrefinalizerRegistration.724", %"class.blink::Member.725", %"class.blink::Member.727", %"class.blink::Member.729", %class.scoped_refptr.303, %class.scoped_refptr.303, %"class.blink::Member.731", %"class.blink::Member.733", %"class.blink::Member.739", %"class.blink::Member.743", %"class.blink::Member.791", %"class.blink::HeapHashMap.793", %"class.blink::HeapHashSet.800", %"class.blink::HeapHashSet.800", %"class.blink::HeapHashMap.979", %"class.blink::HeapVector.986", %"class.blink::Member.994", %"class.blink::HeapTaskRunnerTimer.996", %"class.blink::TaskHandle", %"class.blink::HeapHashMap.998", %"class.WTF::Vector.1005", %"class.blink::HeapHashSet.1011", %"class.blink::HeapHashSet.1011", %"class.std::__1::unique_ptr.1017", %"class.base::WeakPtr.785", %"class.blink::TaskHandle", i32, %"class.blink::HeapMojoRemote", %"class.blink::Member.1025", i8, i8, %"class.base::WeakPtrFactory.1027" }
%"class.blink::ThreadState::PrefinalizerRegistration.724" = type { i8 }
%"class.blink::Member.725" = type { %"class.blink::MemberBase.726" }
%"class.blink::MemberBase.726" = type { %"class.blink::DetachableResourceFetcherProperties"* }
%"class.blink::DetachableResourceFetcherProperties" = type opaque
%"class.blink::Member.727" = type { %"class.blink::MemberBase.728" }
%"class.blink::MemberBase.728" = type { %"class.blink::ResourceLoadObserver"* }
%"class.blink::ResourceLoadObserver" = type opaque
%"class.blink::Member.729" = type { %"class.blink::MemberBase.730" }
%"class.blink::MemberBase.730" = type { %"class.blink::FetchContext"* }
%"class.blink::FetchContext" = type opaque
%"class.blink::Member.731" = type { %"class.blink::MemberBase.732" }
%"class.blink::MemberBase.732" = type { %"class.blink::DetachableUseCounter"* }
%"class.blink::DetachableUseCounter" = type opaque
%"class.blink::Member.733" = type { %"class.blink::MemberBase.734" }
%"class.blink::MemberBase.734" = type { %"class.blink::DetachableConsoleLogger"* }
%"class.blink::DetachableConsoleLogger" = type { %"class.blink::ConsoleLogger", %"class.blink::Member.737" }
%"class.blink::Member.737" = type { %"class.blink::MemberBase.738" }
%"class.blink::MemberBase.738" = type { %"class.blink::ConsoleLogger"* }
%"class.blink::Member.739" = type { %"class.blink::MemberBase.740" }
%"class.blink::MemberBase.740" = type { %"class.blink::ResourceFetcher::LoaderFactory"* }
%"class.blink::ResourceFetcher::LoaderFactory" = type { i32 (...)** }
%"class.blink::Member.743" = type { %"class.blink::MemberBase.744" }
%"class.blink::MemberBase.744" = type { %"class.blink::ResourceLoadScheduler"* }
%"class.blink::ResourceLoadScheduler" = type <{ %"class.blink::FrameOrWorkerScheduler::Observer", %"class.blink::Member.747", i8, [3 x i8], i32, i64, i64, i64, i64, %"class.WTF::HashMap.749", %"class.WTF::HashSet.754", i8, [3 x i8], i32, %"class.blink::HeapHashMap.758", %"class.std::__1::map", %"class.std::__1::map.773", %"class.std::__1::unique_ptr.782", %"class.blink::Member.733", %"class.base::Clock"*, i32, i8, [3 x i8], i32, [4 x i8], %"class.blink::Member.789", %"class.mojo::InlinedStructPtr", [4 x i8] }>
%"class.blink::FrameOrWorkerScheduler::Observer" = type { i32 (...)** }
%"class.blink::Member.747" = type { %"class.blink::MemberBase.748" }
%"class.blink::MemberBase.748" = type { %"class.blink::DetachableResourceFetcherProperties"* }
%"class.WTF::HashMap.749" = type { %"class.WTF::HashTable.750" }
%"class.WTF::HashTable.750" = type <{ %"struct.WTF::KeyValuePair.753"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.753" = type <{ i64, i32, [4 x i8] }>
%"class.WTF::HashSet.754" = type { %"class.WTF::HashTable.755" }
%"class.WTF::HashTable.755" = type <{ i64*, i32, i32, i32, [4 x i8] }>
%"class.blink::HeapHashMap.758" = type { %"class.WTF::HashMap.761" }
%"class.WTF::HashMap.761" = type { %"class.WTF::HashTable.762" }
%"class.WTF::HashTable.762" = type <{ %"struct.WTF::KeyValuePair.764"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.764" = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.765", %"class.std::__1::__compressed_pair.770" }
%"class.std::__1::__compressed_pair.765" = type { %"struct.std::__1::__compressed_pair_elem.766" }
%"class.std::__1::__compressed_pair.770" = type { %"struct.std::__1::__compressed_pair_elem.201" }
%"class.std::__1::map.773" = type { %"class.std::__1::__tree.774" }
%"class.std::__1::__tree.774" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.775", %"class.std::__1::__compressed_pair.779" }
%"class.std::__1::__compressed_pair.775" = type { %"struct.std::__1::__compressed_pair_elem.766" }
%"class.std::__1::__compressed_pair.779" = type { %"struct.std::__1::__compressed_pair_elem.201" }
%"class.std::__1::unique_ptr.782" = type { %"class.std::__1::__compressed_pair.783" }
%"class.std::__1::__compressed_pair.783" = type { %"struct.std::__1::__compressed_pair_elem.784" }
%"struct.std::__1::__compressed_pair_elem.784" = type { %"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle"* }
%"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle" = type { %"class.base::WeakPtr.785", %"class.blink::FrameOrWorkerScheduler::Observer"* }
%"class.base::Clock" = type opaque
%"class.blink::Member.789" = type { %"class.blink::MemberBase.790" }
%"class.blink::MemberBase.790" = type { %"class.blink::LoadingBehaviorObserver"* }
%"class.blink::LoadingBehaviorObserver" = type opaque
%"class.mojo::InlinedStructPtr" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.791" = type { %"class.blink::MemberBase.792" }
%"class.blink::MemberBase.792" = type { %"class.blink::BackForwardCacheLoaderHelper"* }
%"class.blink::BackForwardCacheLoaderHelper" = type opaque
%"class.blink::HeapHashMap.793" = type { %"class.WTF::HashMap.796" }
%"class.WTF::HashMap.796" = type { %"class.WTF::HashTable.797" }
%"class.WTF::HashTable.797" = type <{ %"struct.WTF::KeyValuePair.799"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.799" = type opaque
%"class.blink::HeapHashSet.800" = type { %"class.WTF::HashSet.803" }
%"class.WTF::HashSet.803" = type { %"class.WTF::HashTable.804" }
%"class.WTF::HashTable.804" = type <{ %"class.blink::WeakMember.806"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.806" = type { %"class.blink::MemberBase.807" }
%"class.blink::MemberBase.807" = type { %"class.blink::Resource"* }
%"class.blink::Resource" = type { %"class.blink::MemoryPressureListener", i8, i8, %"class.absl::optional.810", %"class.base::TimeTicks", i64, i64, i64, %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, %"class.blink::SubresourceIntegrity::ReportInfo", %"class.WTF::Vector.841", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashSet.943", %"struct.blink::ResourceLoaderOptions", %"class.base::Time", %"class.blink::TaskHandle", %"class.blink::ResourceRequestHead", i64, %"class.blink::Member.959", %"class.blink::ResourceResponse", %class.scoped_refptr.961, %"class.blink::WebScopedVirtualTimePauser", %"class.std::__1::set" }
%"class.blink::MemoryPressureListener" = type { %"class.blink::GarbageCollectedMixin" }
%"class.absl::optional.810" = type { %"class.absl::optional_internal::optional_data.811" }
%"class.absl::optional_internal::optional_data.811" = type { %"class.absl::optional_internal::optional_data_base.812" }
%"class.absl::optional_internal::optional_data_base.812" = type { %"class.absl::optional_internal::optional_data_dtor_base.813" }
%"class.absl::optional_internal::optional_data_dtor_base.813" = type { i8, %union.anon.814 }
%union.anon.814 = type { %"class.blink::ResourceError" }
%"class.blink::ResourceError" = type { i32, i32, %"struct.net::ResolveErrorInfo", %"class.blink::KURL", %"class.WTF::String", i8, i8, [6 x i8], %"class.absl::optional.815", i8, %"class.absl::optional.826", i32 }
%"struct.net::ResolveErrorInfo" = type <{ i32, i8, [3 x i8] }>
%"class.absl::optional.815" = type { %"class.absl::optional_internal::optional_data.816" }
%"class.absl::optional_internal::optional_data.816" = type { %"class.absl::optional_internal::optional_data_base.817" }
%"class.absl::optional_internal::optional_data_base.817" = type { %"class.absl::optional_internal::optional_data_dtor_base.818" }
%"class.absl::optional_internal::optional_data_dtor_base.818" = type { i8, [7 x i8], %union.anon.819 }
%union.anon.819 = type { %"struct.network::CorsErrorStatus" }
%"struct.network::CorsErrorStatus" = type <{ i32, [4 x i8], %"class.std::__1::basic_string", i32, i8, [3 x i8] }>
%"class.absl::optional.826" = type { %"class.absl::optional_internal::optional_data.827" }
%"class.absl::optional_internal::optional_data.827" = type { %"class.absl::optional_internal::optional_data_base.828" }
%"class.absl::optional_internal::optional_data_base.828" = type { %"class.absl::optional_internal::optional_data_dtor_base.829" }
%"class.absl::optional_internal::optional_data_dtor_base.829" = type { i8, %union.anon.830 }
%union.anon.830 = type { i32 }
%"class.blink::SubresourceIntegrity::ReportInfo" = type { %"class.WTF::Vector.831", %"class.WTF::Vector.836" }
%"class.WTF::Vector.831" = type { %"class.WTF::VectorBuffer.832" }
%"class.WTF::VectorBuffer.832" = type { %"class.WTF::VectorBufferBase.833" }
%"class.WTF::VectorBufferBase.833" = type { i32*, i32, i32 }
%"class.WTF::Vector.841" = type { %"class.WTF::VectorBuffer.842" }
%"class.WTF::VectorBuffer.842" = type { %"class.WTF::VectorBufferBase.843" }
%"class.WTF::VectorBufferBase.843" = type { %"struct.blink::Resource::RedirectPair"*, i32, i32 }
%"struct.blink::Resource::RedirectPair" = type { %"class.blink::ResourceRequestHead", %"class.blink::ResourceResponse" }
%"class.blink::HeapHashCountedSet" = type { %"class.WTF::HashCountedSet" }
%"class.WTF::HashCountedSet" = type { %"class.WTF::HashMap.939" }
%"class.WTF::HashMap.939" = type { %"class.WTF::HashTable.940" }
%"class.WTF::HashTable.940" = type <{ %"struct.WTF::KeyValuePair.942"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.942" = type <{ %"class.blink::WeakMember.1285", i32, [4 x i8] }>
%"class.blink::WeakMember.1285" = type { %"class.blink::MemberBase.1286" }
%"class.blink::MemberBase.1286" = type { %"class.blink::ResourceClient"* }
%"class.blink::ResourceClient" = type opaque
%"class.blink::HeapHashSet.943" = type { %"class.WTF::HashSet.946" }
%"class.WTF::HashSet.946" = type { %"class.WTF::HashTable.947" }
%"class.WTF::HashTable.947" = type <{ %"class.blink::WeakMember.949"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.949" = type opaque
%"struct.blink::ResourceLoaderOptions" = type { %"struct.blink::FetchInitiatorInfo", i8, i32, i8, i8, %"class.base::StrongAlias", %"class.WTF::String", %"class.WTF::HashSet.950", i8, i8, %class.scoped_refptr.485, %class.scoped_refptr.955, %class.scoped_refptr.957 }
%"struct.blink::FetchInitiatorInfo" = type { %"class.WTF::AtomicString", %"class.WTF::TextPosition", i8, i8, %"class.WTF::String" }
%"class.base::StrongAlias" = type { i8 }
%"class.WTF::HashSet.950" = type { %"class.WTF::HashTable.951" }
%"class.WTF::HashTable.951" = type <{ %"struct.std::__1::pair.954"*, i32, i32, i32, [4 x i8] }>
%"struct.std::__1::pair.954" = type <{ %"class.WTF::String", i8, [7 x i8] }>
%class.scoped_refptr.485 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.486", i32, i32, %"class.blink::Persistent.488" }
%"class.WTF::RefCounted.486" = type { %"class.base::RefCounted.487" }
%"class.base::RefCounted.487" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.488" = type { %"class.blink::PersistentBase.489" }
%"class.blink::PersistentBase.489" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr.294" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.492" }
%"class.blink::HeapHashMap.492" = type { %"class.WTF::HashMap.495" }
%"class.WTF::HashMap.495" = type { %"class.WTF::HashTable.496" }
%"class.WTF::HashTable.496" = type <{ %"struct.WTF::KeyValuePair.498"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.498" = type { %"class.blink::WeakMember.499", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.499" = type { %"class.blink::MemberBase.500" }
%"class.blink::MemberBase.500" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::PersistentNodePtr.294" = type { %"class.blink::PersistentNode"* }
%class.scoped_refptr.955 = type { %"class.base::RefCountedData.956"* }
%"class.base::RefCountedData.956" = type opaque
%class.scoped_refptr.957 = type { %"class.base::RefCountedData.958"* }
%"class.base::RefCountedData.958" = type opaque
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.903" }
%"class.base::time_internal::TimeBase.903" = type { i64 }
%"class.blink::ResourceRequestHead" = type { %"class.blink::KURL", %"class.base::TimeDelta", %"class.net::SiteForCookies", %class.scoped_refptr.849, %class.scoped_refptr.849, %class.scoped_refptr.849, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", i16, i32, i8, i32, i32, i32, %class.scoped_refptr.855, i32, i32, i32, i32, i32, i32, %"class.WTF::String", %"class.WTF::String", i32, i8, i32, %"class.absl::optional.867", %"class.absl::optional.872", %"class.absl::optional.882", %"struct.blink::CacheControlHeader", i8, i8, i8, i8, %"class.absl::optional.892", %"class.absl::optional.882", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.absl::optional.882", i64, %"class.base::UnguessableToken", i64, i8, i8, i8, i8, i8, i8, %"class.absl::optional.892", %"class.absl::optional.897", i8, %class.scoped_refptr.902 }
%"class.net::SiteForCookies" = type <{ %"class.net::SchemefulSite", i8, [7 x i8] }>
%"class.net::SchemefulSite" = type { %"class.url::Origin" }
%"class.blink::HTTPHeaderMap" = type { %"class.WTF::HashMap.850" }
%"class.WTF::HashMap.850" = type { %"class.WTF::HashTable.851" }
%"class.WTF::HashTable.851" = type <{ %"struct.WTF::KeyValuePair.854"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.854" = type { %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%class.scoped_refptr.855 = type { %"class.blink::WebURLRequestExtraData"* }
%"class.blink::WebURLRequestExtraData" = type { i32 (...)**, %"class.base::RefCounted.856", i8, i32, i8, i8, %"class.blink::WebString", %"class.blink::WebVector", %class.scoped_refptr.865, i8, %"class.url::Origin" }
%"class.base::RefCounted.856" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::WebString" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"class.blink::WebVector" = type { %"class.std::__1::vector.857" }
%"class.std::__1::vector.857" = type { %"class.std::__1::__vector_base.858" }
%"class.std::__1::__vector_base.858" = type { %"class.std::__1::unique_ptr.859"*, %"class.std::__1::unique_ptr.859"*, %"class.std::__1::__compressed_pair.860" }
%"class.std::__1::unique_ptr.859" = type { %"class.std::__1::__compressed_pair.1272" }
%"class.std::__1::__compressed_pair.1272" = type { %"struct.std::__1::__compressed_pair_elem.1273" }
%"struct.std::__1::__compressed_pair_elem.1273" = type { %"class.blink::URLLoaderThrottle"* }
%"class.blink::URLLoaderThrottle" = type { i32 (...)**, %"class.blink::URLLoaderThrottle::Delegate"* }
%"class.blink::URLLoaderThrottle::Delegate" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.860" = type { %"struct.std::__1::__compressed_pair_elem.861" }
%"struct.std::__1::__compressed_pair_elem.861" = type { %"class.std::__1::unique_ptr.859"* }
%class.scoped_refptr.865 = type { %"class.blink::WebFrameRequestBlocker"* }
%"class.blink::WebFrameRequestBlocker" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.866", [4 x i8] }>
%"class.base::RefCountedThreadSafe.866" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.absl::optional.867" = type { %"class.absl::optional_internal::optional_data.868" }
%"class.absl::optional_internal::optional_data.868" = type { %"class.absl::optional_internal::optional_data_base.869" }
%"class.absl::optional_internal::optional_data_base.869" = type { %"class.absl::optional_internal::optional_data_dtor_base.870" }
%"class.absl::optional_internal::optional_data_dtor_base.870" = type { i8, %union.anon.871 }
%union.anon.871 = type { %"struct.blink::ResourceRequestHead::RedirectInfo" }
%"struct.blink::ResourceRequestHead::RedirectInfo" = type { %"class.blink::KURL", %"class.blink::KURL" }
%"class.absl::optional.872" = type { %"class.absl::optional_internal::optional_data.873" }
%"class.absl::optional_internal::optional_data.873" = type { %"class.absl::optional_internal::optional_data_base.874" }
%"class.absl::optional_internal::optional_data_base.874" = type { %"class.absl::optional_internal::optional_data_dtor_base.875" }
%"class.absl::optional_internal::optional_data_dtor_base.875" = type { i8, %union.anon.876 }
%union.anon.876 = type { %"class.network::mojom::blink::TrustTokenParams" }
%"class.network::mojom::blink::TrustTokenParams" = type { i32, i32, i32, i8, %"class.WTF::Vector.877", %"class.WTF::Vector.836", %"class.WTF::String" }
%"class.WTF::Vector.877" = type { %"class.WTF::VectorBuffer.878" }
%"class.WTF::VectorBuffer.878" = type { %"class.WTF::VectorBufferBase.879" }
%"class.WTF::VectorBufferBase.879" = type { %class.scoped_refptr.849*, i32, i32 }
%"struct.blink::CacheControlHeader" = type { i8, %"class.absl::optional.887", %"class.absl::optional.887" }
%"class.absl::optional.882" = type { %"class.absl::optional_internal::optional_data.883" }
%"class.absl::optional_internal::optional_data.883" = type { %"class.absl::optional_internal::optional_data_base.884" }
%"class.absl::optional_internal::optional_data_base.884" = type { %"class.absl::optional_internal::optional_data_dtor_base.885" }
%"class.absl::optional_internal::optional_data_dtor_base.885" = type { i8, %union.anon.886 }
%union.anon.886 = type { %"class.WTF::String" }
%"class.absl::optional.892" = type { %"class.absl::optional_internal::optional_data.893" }
%"class.absl::optional_internal::optional_data.893" = type { %"class.absl::optional_internal::optional_data_base.894" }
%"class.absl::optional_internal::optional_data_base.894" = type { %"class.absl::optional_internal::optional_data_dtor_base.895" }
%"class.absl::optional_internal::optional_data_dtor_base.895" = type { i8, %union.anon.896 }
%union.anon.896 = type { %"class.base::UnguessableToken" }
%"class.absl::optional.897" = type { %"class.absl::optional_internal::optional_data.898" }
%"class.absl::optional_internal::optional_data.898" = type { %"class.absl::optional_internal::optional_data_base.899" }
%"class.absl::optional_internal::optional_data_base.899" = type { %"class.absl::optional_internal::optional_data_dtor_base.900" }
%"class.absl::optional_internal::optional_data_dtor_base.900" = type { i8, %union.anon.901 }
%union.anon.901 = type { %"struct.blink::ResourceRequestHead::WebBundleTokenParams" }
%"struct.blink::ResourceRequestHead::WebBundleTokenParams" = type { %"class.blink::KURL", %"class.base::UnguessableToken", %"class.mojo::PendingRemote" }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%class.scoped_refptr.902 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.1277", %"class.base::internal::flat_tree" }
%"class.base::RefCountedThreadSafe.1277" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.1278" }
%"class.std::__1::vector.1278" = type { %"class.std::__1::__vector_base.1279" }
%"class.std::__1::__vector_base.1279" = type { i32*, i32*, %"class.std::__1::__compressed_pair.1280" }
%"class.std::__1::__compressed_pair.1280" = type { %"struct.std::__1::__compressed_pair_elem.1281" }
%"struct.std::__1::__compressed_pair_elem.1281" = type { i32* }
%"class.blink::Member.959" = type { %"class.blink::MemberBase.960" }
%"class.blink::MemberBase.960" = type { %"class.blink::ResourceLoader"* }
%"class.blink::ResourceLoader" = type opaque
%"class.blink::ResourceResponse" = type { %"class.blink::KURL", %"class.WTF::AtomicString", i64, %"class.WTF::AtomicString", i32, i32, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", %"class.net::IPEndPoint", i32, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, %"class.base::Time", i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i64, i8, i32, i32, %"class.absl::optional.904", %class.scoped_refptr.918, %class.scoped_refptr.919, %"struct.blink::CacheControlHeader", %"class.absl::optional.887", %"class.absl::optional.920", %"class.absl::optional.920", %"class.absl::optional.920", i64, %"class.blink::KURL", %"class.WTF::Vector.925", %"class.WTF::String", %"class.WTF::Vector.836", %"class.base::Time", %"class.WTF::AtomicString", i32, i8, i64, i64, i64, %"class.absl::optional.892", %"class.WTF::Vector.836", %"class.blink::KURL", %"class.absl::optional.930" }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array", i8 }
%"struct.std::__1::array" = type { [16 x i8] }
%"class.absl::optional.904" = type { %"class.absl::optional_internal::optional_data.905" }
%"class.absl::optional_internal::optional_data.905" = type { %"class.absl::optional_internal::optional_data_base.906" }
%"class.absl::optional_internal::optional_data_base.906" = type { %"class.absl::optional_internal::optional_data_dtor_base.907" }
%"class.absl::optional_internal::optional_data_dtor_base.907" = type { i8, %union.anon.908 }
%union.anon.908 = type { %"struct.blink::ResourceResponse::SecurityDetails" }
%"struct.blink::ResourceResponse::SecurityDetails" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::Vector.836", %"class.WTF::String", i64, i64, %"class.WTF::Vector.909", %"class.WTF::Vector.913" }
%"class.WTF::Vector.909" = type { %"class.WTF::VectorBuffer.910" }
%"class.WTF::VectorBuffer.910" = type { %"class.WTF::VectorBufferBase.416" }
%"class.WTF::VectorBufferBase.416" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.WTF::Vector.913" = type { %"class.WTF::VectorBuffer.914" }
%"class.WTF::VectorBuffer.914" = type { %"class.WTF::VectorBufferBase.915" }
%"class.WTF::VectorBufferBase.915" = type { %"class.blink::ResourceResponse::SignedCertificateTimestamp"*, i32, i32 }
%"class.blink::ResourceResponse::SignedCertificateTimestamp" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i64, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.918 = type { %"class.blink::ResourceLoadTiming"* }
%"class.blink::ResourceLoadTiming" = type opaque
%class.scoped_refptr.919 = type { %"struct.blink::ResourceLoadInfo"* }
%"struct.blink::ResourceLoadInfo" = type opaque
%"class.absl::optional.920" = type { %"class.absl::optional_internal::optional_data.921" }
%"class.absl::optional_internal::optional_data.921" = type { %"class.absl::optional_internal::optional_data_base.922" }
%"class.absl::optional_internal::optional_data_base.922" = type { %"class.absl::optional_internal::optional_data_dtor_base.923" }
%"class.absl::optional_internal::optional_data_dtor_base.923" = type { i8, %union.anon.924 }
%union.anon.924 = type { %"class.base::Time" }
%"class.WTF::Vector.925" = type { %"class.WTF::VectorBuffer.926" }
%"class.WTF::VectorBuffer.926" = type { %"class.WTF::VectorBufferBase.927" }
%"class.WTF::VectorBufferBase.927" = type { %"class.blink::KURL"*, i32, i32 }
%"class.absl::optional.930" = type { %"class.absl::optional_internal::optional_data.931" }
%"class.absl::optional_internal::optional_data.931" = type { %"class.absl::optional_internal::optional_data_base.932" }
%"class.absl::optional_internal::optional_data_base.932" = type { %"class.absl::optional_internal::optional_data_dtor_base.933" }
%"class.absl::optional_internal::optional_data_dtor_base.933" = type { i8, %union.anon.934 }
%union.anon.934 = type { %"class.net::AuthChallengeInfo" }
%"class.net::AuthChallengeInfo" = type { i8, %"class.url::Origin", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%class.scoped_refptr.961 = type { %"class.WTF::SharedBuffer"* }
%"class.WTF::SharedBuffer" = type { %"class.WTF::RefCounted.962", i64, %"class.WTF::Vector", %"class.WTF::Vector.964" }
%"class.WTF::RefCounted.962" = type { %"class.base::RefCounted.963" }
%"class.base::RefCounted.963" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { i8*, i32, i32 }
%"class.WTF::Vector.964" = type { %"class.WTF::VectorBuffer.965" }
%"class.WTF::VectorBuffer.965" = type { %"class.WTF::VectorBufferBase.966" }
%"class.WTF::VectorBufferBase.966" = type { %"class.std::__1::unique_ptr.967"*, i32, i32 }
%"class.std::__1::unique_ptr.967" = type opaque
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.std::__1::set" = type { %"class.std::__1::__tree.970" }
%"class.std::__1::__tree.970" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.971", %"class.std::__1::__compressed_pair.975" }
%"class.std::__1::__compressed_pair.971" = type { %"struct.std::__1::__compressed_pair_elem.766" }
%"class.std::__1::__compressed_pair.975" = type { %"struct.std::__1::__compressed_pair_elem.201" }
%"class.blink::HeapHashMap.979" = type { %"class.WTF::HashMap.982" }
%"class.WTF::HashMap.982" = type { %"class.WTF::HashTable.983" }
%"class.WTF::HashTable.983" = type <{ %"struct.WTF::KeyValuePair.985"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.985" = type opaque
%"class.blink::HeapVector.986" = type { %"class.WTF::Vector.989" }
%"class.WTF::Vector.989" = type { %"class.WTF::VectorBuffer.990" }
%"class.WTF::VectorBuffer.990" = type { %"class.WTF::VectorBufferBase.991" }
%"class.WTF::VectorBufferBase.991" = type { %"class.blink::Member.992"*, i32, i32 }
%"class.blink::Member.992" = type { %"class.blink::MemberBase.807" }
%"class.blink::Member.994" = type { %"class.blink::MemberBase.995" }
%"class.blink::MemberBase.995" = type { %"class.blink::MHTMLArchive"* }
%"class.blink::MHTMLArchive" = type opaque
%"class.blink::HeapTaskRunnerTimer.996" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.997", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.303, %"class.base::WeakPtrFactory" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::WeakMember.997" = type { %"class.blink::MemberBase.464" }
%"class.blink::HeapHashMap.998" = type { %"class.WTF::HashMap.1001" }
%"class.WTF::HashMap.1001" = type { %"class.WTF::HashTable.1002" }
%"class.WTF::HashTable.1002" = type <{ %"struct.WTF::KeyValuePair.1004"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1004" = type opaque
%"class.WTF::Vector.1005" = type { %"class.WTF::VectorBuffer.1006" }
%"class.WTF::VectorBuffer.1006" = type { %"class.WTF::VectorBufferBase.1007" }
%"class.WTF::VectorBufferBase.1007" = type { %class.scoped_refptr.1008*, i32, i32 }
%class.scoped_refptr.1008 = type { %"class.blink::ResourceTimingInfo"* }
%"class.blink::ResourceTimingInfo" = type opaque
%"class.blink::HeapHashSet.1011" = type { %"class.WTF::HashSet.1014" }
%"class.WTF::HashSet.1014" = type { %"class.WTF::HashTable.1015" }
%"class.WTF::HashTable.1015" = type <{ %"class.blink::Member.959"*, i32, i32, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1017" = type { %"class.std::__1::__compressed_pair.1018" }
%"class.std::__1::__compressed_pair.1018" = type { %"struct.std::__1::__compressed_pair_elem.1019" }
%"struct.std::__1::__compressed_pair_elem.1019" = type { %"class.WTF::HashSet.284"* }
%"class.WTF::HashSet.284" = type { %"class.WTF::HashTable.285" }
%"class.WTF::HashTable.285" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.base::WeakPtr.785" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.343 }
%class.scoped_refptr.343 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.1023" }
%"class.blink::Member.1023" = type { %"class.blink::MemberBase.1024" }
%"class.blink::MemberBase.1024" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::BlobRegistry, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::BlobRegistry, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::Member.1025" = type { %"class.blink::MemberBase.1026" }
%"class.blink::MemberBase.1026" = type { %"class.blink::SubresourceWebBundleList"* }
%"class.blink::SubresourceWebBundleList" = type opaque
%"class.base::WeakPtrFactory.1027" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.465" = type { %"class.blink::MemberBase.466" }
%"class.blink::MemberBase.466" = type { %"class.blink::DocumentParser"* }
%"class.blink::Member.467" = type { %"class.blink::MemberBase.468" }
%"class.blink::MemberBase.468" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.469" = type { %"class.blink::MemberBase.470" }
%"class.blink::MemberBase.470" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.471" = type { %"class.std::__1::__compressed_pair.472" }
%"class.std::__1::__compressed_pair.472" = type { %"struct.std::__1::__compressed_pair_elem.473" }
%"struct.std::__1::__compressed_pair_elem.473" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.6" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.6" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"class.blink::KURL"* }
%"class.blink::Member.477" = type { %"class.blink::MemberBase.478" }
%"class.blink::MemberBase.478" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.479" = type { %"class.blink::MemberBase.480" }
%"class.blink::MemberBase.480" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.442" = type { %"class.blink::MemberBase.443" }
%"class.blink::MemberBase.443" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.481 }
%class.scoped_refptr.481 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.482" = type { %"class.WTF::VectorBuffer.483" }
%"class.WTF::VectorBuffer.483" = type { %"class.WTF::VectorBufferBase.484" }
%"class.WTF::VectorBufferBase.484" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.485 }
%"class.blink::Member.505" = type { %"class.blink::MemberBase.506" }
%"class.blink::MemberBase.506" = type { %"class.blink::Range"* }
%"class.blink::Range" = type opaque
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.507" }
%"class.blink::HeapHashMap.507" = type { %"class.WTF::HashMap.510" }
%"class.WTF::HashMap.510" = type { %"class.WTF::HashTable.511" }
%"class.WTF::HashTable.511" = type <{ %"struct.WTF::KeyValuePair.513"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.513" = type opaque
%"class.blink::Member.514" = type { %"class.blink::MemberBase.515" }
%"class.blink::MemberBase.515" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.516" = type { %"class.WTF::HashSet.519" }
%"class.WTF::HashSet.519" = type { %"class.WTF::HashTable.520" }
%"class.WTF::HashTable.520" = type <{ %"class.blink::WeakMember.522"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.522" = type opaque
%"class.blink::HeapHashSet.523" = type { %"class.WTF::HashSet.526" }
%"class.WTF::HashSet.526" = type { %"class.WTF::HashTable.527" }
%"class.WTF::HashTable.527" = type <{ %"class.blink::WeakMember.529"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.529" = type opaque
%"class.blink::Member.530" = type { %"class.blink::MemberBase.531" }
%"class.blink::MemberBase.531" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.532" = type { %"class.blink::MemberBase.533" }
%"class.blink::MemberBase.533" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.534" = type { %"class.blink::MemberBase.535" }
%"class.blink::MemberBase.535" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type opaque
%"class.blink::Member.536" = type { %"class.blink::MemberBase.537" }
%"class.blink::MemberBase.537" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::Member.538" = type { %"class.blink::MemberBase.539" }
%"class.blink::MemberBase.539" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.540" = type { %"class.WTF::HashMap.543" }
%"class.WTF::HashMap.543" = type { %"class.WTF::HashTable.544" }
%"class.WTF::HashTable.544" = type <{ %"struct.WTF::KeyValuePair.546"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.546" = type opaque
%"class.WTF::Vector.547" = type { %"class.WTF::VectorBuffer.548" }
%"class.WTF::VectorBuffer.548" = type { %"class.WTF::VectorBufferBase.549" }
%"class.WTF::VectorBufferBase.549" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.552" = type { %"class.blink::MemberBase.553" }
%"class.blink::MemberBase.553" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.554" = type { %"class.blink::MemberBase.555" }
%"class.blink::MemberBase.555" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.398" = type { %"class.blink::MemberBase.399" }
%"class.blink::MemberBase.399" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.403" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.400 }
%class.scoped_refptr.400 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.401", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.401" = type { %"class.base::RefCounted.402" }
%"class.base::RefCounted.402" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.403" = type { %"class.blink::MemberBase.404" }
%"class.blink::MemberBase.404" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.407", %"class.blink::Member.409", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.407" = type { %"class.WTF::SingleThreadedBitField.408" }
%"class.WTF::SingleThreadedBitField.408" = type { i32 }
%"class.blink::Member.409" = type { %"class.blink::MemberBase.410" }
%"class.blink::MemberBase.410" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.411 }
%class.scoped_refptr.411 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.412", %"class.WTF::AtomicString", %"class.WTF::Vector.414" }
%"class.WTF::RefCounted.412" = type { %"class.base::RefCounted.413" }
%"class.base::RefCounted.413" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.414" = type { %"class.WTF::VectorBuffer.415" }
%"class.WTF::VectorBuffer.415" = type { %"class.WTF::VectorBufferBase.416", [32 x i8] }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.556" = type { %"class.blink::MemberBase.557" }
%"class.blink::MemberBase.557" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.558" = type { %"class.WTF::Vector.561" }
%"class.WTF::Vector.561" = type { %"class.WTF::VectorBuffer.562" }
%"class.WTF::VectorBuffer.562" = type { %"class.WTF::VectorBufferBase.563" }
%"class.WTF::VectorBufferBase.563" = type { %"class.blink::Member.564"*, i32, i32 }
%"class.blink::Member.564" = type opaque
%"class.std::__1::unique_ptr.566" = type { %"class.std::__1::__compressed_pair.567" }
%"class.std::__1::__compressed_pair.567" = type { %"struct.std::__1::__compressed_pair_elem.568" }
%"struct.std::__1::__compressed_pair_elem.568" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.572" = type { %"class.WTF::HashSet.575" }
%"class.WTF::HashSet.575" = type { %"class.WTF::HashTable.576" }
%"class.WTF::HashTable.576" = type <{ %"class.blink::WeakMember.578"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.578" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.579", i32, [4 x i8] }>
%"class.WTF::Vector.579" = type { %"class.WTF::VectorBuffer.580" }
%"class.WTF::VectorBuffer.580" = type { %"class.WTF::VectorBufferBase.581" }
%"class.WTF::VectorBufferBase.581" = type { %"struct.std::__1::pair.582"*, i32, i32 }
%"struct.std::__1::pair.582" = type opaque
%"class.blink::Member.585" = type { %"class.blink::MemberBase.586" }
%"class.blink::MemberBase.586" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.587" = type { %"class.WTF::VectorBuffer.588" }
%"class.WTF::VectorBuffer.588" = type { %"class.WTF::VectorBufferBase.589" }
%"class.WTF::VectorBufferBase.589" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.592" = type { %"class.std::__1::__compressed_pair.593" }
%"class.std::__1::__compressed_pair.593" = type { %"struct.std::__1::__compressed_pair_elem.594" }
%"struct.std::__1::__compressed_pair_elem.594" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector" = type { %"class.WTF::Vector.421" }
%"class.WTF::Vector.421" = type { %"class.WTF::VectorBuffer.422" }
%"class.WTF::VectorBuffer.422" = type { %"class.WTF::VectorBufferBase.423" }
%"class.WTF::VectorBufferBase.423" = type { %"class.blink::Member.398"*, i32, i32 }
%"class.blink::HeapVector.598" = type { %"class.WTF::Vector.601" }
%"class.WTF::Vector.601" = type { %"class.WTF::VectorBuffer.602" }
%"class.WTF::VectorBuffer.602" = type { %"class.WTF::VectorBufferBase.603" }
%"class.WTF::VectorBufferBase.603" = type { %"class.blink::Member.604"*, i32, i32 }
%"class.blink::Member.604" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member" }
%"class.blink::Member.606" = type { %"class.blink::MemberBase.607" }
%"class.blink::MemberBase.607" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.608" = type { %"class.blink::MemberBase.609" }
%"class.blink::MemberBase.609" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.610" = type { %"class.blink::MemberBase.611" }
%"class.blink::MemberBase.611" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.612" = type { %"class.blink::MemberBase.613" }
%"class.blink::MemberBase.613" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.614" = type { %"class.blink::MemberBase.615" }
%"class.blink::MemberBase.615" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.616" = type { %"class.WTF::HashTable.617" }
%"class.WTF::HashTable.617" = type <{ %"struct.WTF::KeyValuePair.620"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.620" = type opaque
%"class.blink::Member.621" = type { %"class.blink::MemberBase.622" }
%"class.blink::MemberBase.622" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.623" = type { %"class.blink::MemberBase.624" }
%"class.blink::MemberBase.624" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.625" = type { %"class.blink::MemberBase.626" }
%"class.blink::MemberBase.626" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.627" = type { %"class.blink::MemberBase.628" }
%"class.blink::MemberBase.628" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.504", { i64, i64 } }
%"class.blink::WeakMember.504" = type { %"class.blink::MemberBase" }
%"class.blink::HeapHashSet.629" = type { %"class.WTF::HashSet.632" }
%"class.WTF::HashSet.632" = type { %"class.WTF::HashTable.633" }
%"class.WTF::HashTable.633" = type <{ %"class.blink::Member.635"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.635" = type opaque
%"class.blink::Member.636" = type { %"class.blink::MemberBase.637" }
%"class.blink::MemberBase.637" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.638" = type { %"class.blink::MemberBase.639" }
%"class.blink::MemberBase.639" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.640" = type { %"class.blink::MemberBase.641" }
%"class.blink::MemberBase.641" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.642" = type { %"class.blink::MemberBase.643" }
%"class.blink::MemberBase.643" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.644" = type { %"class.blink::MemberBase.645" }
%"class.blink::MemberBase.645" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.646" = type { %"class.std::__1::__compressed_pair.647" }
%"class.std::__1::__compressed_pair.647" = type { %"struct.std::__1::__compressed_pair_elem.648" }
%"struct.std::__1::__compressed_pair_elem.648" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.652" = type { %"class.std::__1::__compressed_pair.653" }
%"class.std::__1::__compressed_pair.653" = type { %"struct.std::__1::__compressed_pair_elem.654" }
%"struct.std::__1::__compressed_pair_elem.654" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::Member.658" = type { %"class.blink::MemberBase.659" }
%"class.blink::MemberBase.659" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.660" = type { %"class.blink::MemberBase.661" }
%"class.blink::MemberBase.661" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.662" = type { %"class.blink::MemberBase.663" }
%"class.blink::MemberBase.663" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.664" = type { %"class.blink::MemberBase.665" }
%"class.blink::MemberBase.665" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.666" = type { %"class.WTF::VectorBuffer.667" }
%"class.WTF::VectorBuffer.667" = type { %"class.WTF::VectorBufferBase.668" }
%"class.WTF::VectorBufferBase.668" = type { i8*, i32, i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.blink::HeapHashMap.671" = type { %"class.WTF::HashMap.674" }
%"class.WTF::HashMap.674" = type { %"class.WTF::HashTable.675" }
%"class.WTF::HashTable.675" = type <{ %"struct.WTF::KeyValuePair.677"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.677" = type opaque
%"class.blink::Member.678" = type { %"class.blink::MemberBase.679" }
%"class.blink::MemberBase.679" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.680" = type { %"class.std::__1::__compressed_pair.681" }
%"class.std::__1::__compressed_pair.681" = type { %"struct.std::__1::__compressed_pair_elem.682" }
%"struct.std::__1::__compressed_pair_elem.682" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.686" = type { %"class.blink::MemberBase.687" }
%"class.blink::MemberBase.687" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.WTF::String" = type { %class.scoped_refptr }
%"class.blink::Member.688" = type { %"class.blink::MemberBase.689" }
%"class.blink::MemberBase.689" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.690" = type { %"class.WTF::HashMap.693" }
%"class.WTF::HashMap.693" = type { %"class.WTF::HashTable.694" }
%"class.WTF::HashTable.694" = type <{ %"struct.WTF::KeyValuePair.696"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.696" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.697" }
%"class.blink::HeapHashSet.697" = type { %"class.WTF::HashSet.700" }
%"class.WTF::HashSet.700" = type { %"class.WTF::HashTable.701" }
%"class.WTF::HashTable.701" = type <{ %"class.blink::WeakMember.703"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.703" = type opaque
%"class.blink::Member.704" = type { %"class.blink::MemberBase.705" }
%"class.blink::MemberBase.705" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.706" = type { %"class.blink::MemberBase.707" }
%"class.blink::MemberBase.707" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member", %"class.blink::HeapHashSet.713", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.720", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.713" = type { %"class.WTF::HashSet.716" }
%"class.WTF::HashSet.716" = type { %"class.WTF::HashTable.717" }
%"class.WTF::HashTable.717" = type <{ %"class.blink::Member.719"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.719" = type opaque
%"class.blink::HeapTaskRunnerTimer.720" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.721", { i64, i64 } }
%"class.blink::WeakMember.721" = type { %"class.blink::MemberBase.707" }
%"class.blink::WeakMember.708" = type { %"class.blink::MemberBase.377" }
%"class.blink::Member.709" = type { %"class.blink::MemberBase.710" }
%"class.blink::MemberBase.710" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type opaque
%"class.blink::Member.26" = type { %"class.blink::MemberBase.27" }
%"class.blink::MemberBase.27" = type { %"class.blink::SourceKeyedCachedMetadataHandler"* }
%"class.blink::SourceKeyedCachedMetadataHandler" = type opaque
%"class.blink::HTMLParserScriptRunnerHost" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::HTMLInputStream" = type { %"class.blink::SegmentedString", %"class.blink::SegmentedString"* }
%"class.blink::SegmentedString" = type <{ %"class.blink::SegmentedSubstring", i32, i32, i32, [4 x i8], %"class.WTF::Deque", i8, i8, [6 x i8] }>
%"class.blink::SegmentedSubstring" = type { %union.anon, i8*, i8*, i8, i8, %"class.WTF::String" }
%union.anon = type { i8* }
%"class.WTF::Deque" = type { %"class.WTF::Deque<blink::SegmentedSubstring, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<blink::SegmentedSubstring, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.30" }
%"class.WTF::VectorBuffer.30" = type { %"class.WTF::VectorBufferBase.31" }
%"class.WTF::VectorBufferBase.31" = type { %"class.blink::SegmentedSubstring"*, i32, i32 }
%"class.blink::Member.32" = type { %"class.blink::MemberBase.33" }
%"class.blink::MemberBase.33" = type { %"class.blink::HTMLParserReentryPermit"* }
%"class.blink::HTMLParserReentryPermit" = type <{ i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.36" = type { %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %"class.blink::HTMLToken"* }
%"class.blink::HTMLToken" = type { i32, %"class.blink::HTMLToken::Attribute::Range", i32, %class.LiteralBuffer, i16, i8, %"class.WTF::Vector.39", %"class.blink::HTMLToken::Attribute"*, %"class.std::__1::unique_ptr.45" }
%"class.blink::HTMLToken::Attribute::Range" = type { i32, i32 }
%class.LiteralBuffer = type { i16*, i16*, i16*, [256 x i16] }
%"class.WTF::Vector.39" = type { %"class.WTF::VectorBuffer.40" }
%"class.WTF::VectorBuffer.40" = type { %"class.WTF::VectorBufferBase.41", [1920 x i8] }
%"class.WTF::VectorBufferBase.41" = type { %"class.blink::HTMLToken::Attribute"*, i32, i32 }
%"class.blink::HTMLToken::Attribute" = type { %class.LiteralBuffer.42, %class.LiteralBuffer.42, %"class.blink::HTMLToken::Attribute::Range", %"class.blink::HTMLToken::Attribute::Range" }
%class.LiteralBuffer.42 = type { i16*, i16*, i16*, [32 x i16] }
%"class.std::__1::unique_ptr.45" = type { %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"class.blink::DoctypeData"* }
%"class.blink::DoctypeData" = type <{ i8, i8, [6 x i8], %"class.WTF::Vector.48", %"class.WTF::Vector.48", i8, [7 x i8] }>
%"class.WTF::Vector.48" = type { %"class.WTF::VectorBuffer.49" }
%"class.WTF::VectorBuffer.49" = type { %"class.WTF::VectorBufferBase.50" }
%"class.WTF::VectorBufferBase.50" = type { i16*, i32, i32 }
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.blink::HTMLTokenizer"* }
%"class.blink::HTMLTokenizer" = type <{ i32, i8, i8, [2 x i8], %"class.blink::HTMLToken"*, i16, [6 x i8], %"class.blink::InputStreamPreprocessor", %class.LiteralBuffer.42, %class.LiteralBuffer.62, %class.LiteralBuffer.62, %"class.blink::HTMLParserOptions", [6 x i8] }>
%"class.blink::InputStreamPreprocessor" = type <{ %"class.blink::HTMLTokenizer"*, i8, [7 x i8] }>
%class.LiteralBuffer.62 = type { i8*, i8*, i8*, [32 x i8] }
%"class.blink::Member.66" = type { %"class.blink::MemberBase.67" }
%"class.blink::MemberBase.67" = type { %"class.blink::HTMLParserScriptRunner"* }
%"class.blink::HTMLParserScriptRunner" = type opaque
%"class.blink::Member.68" = type { %"class.blink::MemberBase.69" }
%"class.blink::MemberBase.69" = type { %"class.blink::HTMLTreeBuilder"* }
%"class.blink::HTMLTreeBuilder" = type opaque
%"class.std::__1::unique_ptr.70" = type { %"class.std::__1::__compressed_pair.71" }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"struct.std::__1::__compressed_pair_elem.72" = type { %"class.blink::HTMLPreloadScanner"* }
%"class.blink::HTMLPreloadScanner" = type { %"class.blink::TokenPreloadScanner", %"class.blink::SegmentedString", %"class.blink::HTMLToken", %"class.std::__1::unique_ptr.59" }
%"class.blink::TokenPreloadScanner" = type { %"class.blink::CSSPreloadScanner", %"class.blink::KURL", %"class.blink::KURL", %class.scoped_refptr.93, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::TokenPreloadScanner::PictureData", i64, %"class.std::__1::unique_ptr.94", %"class.blink::Persistent", %"class.blink::ClientHintsPreferences", i32, i8, i8, %"class.WTF::Vector.295" }
%"class.blink::CSSPreloadScanner" = type { i32, [4 x i8], %"class.WTF::StringBuilder", %"class.WTF::StringBuilder", i32, %"class.WTF::Vector.83"*, %"class.blink::KURL"*, %"class.blink::PreloadRequest::ExclusionInfo"* }
%"class.WTF::StringBuilder" = type <{ %"class.WTF::String", %union.anon.73, i32, i8, i8, [2 x i8] }>
%union.anon.73 = type { %"class.WTF::Vector.74" }
%"class.WTF::Vector.74" = type { %"class.WTF::VectorBuffer.75" }
%"class.WTF::VectorBuffer.75" = type { %"class.WTF::VectorBufferBase.76", [16 x i8] }
%"class.WTF::VectorBufferBase.76" = type { i8*, i32, i32 }
%"class.blink::PreloadRequest::ExclusionInfo" = type { i32 (...)**, %"class.WTF::RefCounted", %"class.blink::KURL", %"class.WTF::HashSet.89", %"class.WTF::HashSet.89" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashSet.89" = type { %"class.WTF::HashTable.90" }
%"class.WTF::HashTable.90" = type <{ %"class.blink::KURL"*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.93 = type { %"class.blink::PreloadRequest::ExclusionInfo"* }
%"struct.blink::TokenPreloadScanner::PictureData" = type <{ %"class.WTF::String", float, i8, i8, [2 x i8] }>
%"class.std::__1::unique_ptr.94" = type { %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { %"struct.blink::CachedDocumentParameters"* }
%"struct.blink::CachedDocumentParameters" = type { i8, [3 x i8], %"class.blink::Length", i8, i8, i32, i32, i32, %"class.blink::WeakPersistent.98", %"class.blink::WeakPersistent.282", %"class.WTF::HashSet.284" }
%"class.blink::Length" = type <{ %union.anon.97, i8, i8, i8, i8 }>
%union.anon.97 = type { i32 }
%"class.blink::WeakPersistent.98" = type { %"class.blink::PersistentBase.99" }
%"class.blink::PersistentBase.99" = type { %"class.blink::LazyLoadImageObserver"*, %"class.blink::PersistentNodePtr" }
%"class.blink::WeakPersistent.282" = type { %"class.blink::PersistentBase.283" }
%"class.blink::PersistentBase.283" = type { %"class.blink::SubresourceRedirectOriginsPreloader"*, %"class.blink::PersistentNodePtr" }
%"class.blink::SubresourceRedirectOriginsPreloader" = type opaque
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.291" }
%"class.blink::PersistentBase.291" = type { %"class.blink::MediaValuesCached"*, %"class.blink::PersistentNodePtr.294" }
%"class.blink::MediaValuesCached" = type { %"class.blink::MediaValues", %"struct.blink::MediaValuesCached::MediaValuesCachedData" }
%"class.blink::MediaValues" = type { i32 (...)** }
%"struct.blink::MediaValuesCached::MediaValuesCachedData" = type <{ double, double, i32, i32, float, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, [5 x i8], %"class.WTF::String", i32, i32, i32, i32, i8, i8, [2 x i8], i32, i32, i32, i32, [4 x i8] }>
%"class.blink::ClientHintsPreferences" = type { %"struct.blink::WebEnabledClientHints" }
%"struct.blink::WebEnabledClientHints" = type { [16 x i8] }
%"class.WTF::Vector.295" = type { %"class.WTF::VectorBuffer.296" }
%"class.WTF::VectorBuffer.296" = type { %"class.WTF::VectorBufferBase.297" }
%"class.WTF::VectorBufferBase.297" = type { %"struct.blink::TokenPreloadScanner::Checkpoint"*, i32, i32 }
%"struct.blink::TokenPreloadScanner::Checkpoint" = type { %"class.blink::KURL", i8, i8, i64, %class.scoped_refptr.93 }
%class.scoped_refptr.303 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.blink::Member.309" = type { %"class.blink::MemberBase.310" }
%"class.blink::MemberBase.310" = type { %"class.blink::HTMLParserScheduler"* }
%"class.blink::HTMLParserScheduler" = type opaque
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.std::__1::unique_ptr.311" = type { %"class.std::__1::__compressed_pair.312" }
%"class.std::__1::__compressed_pair.312" = type { %"struct.std::__1::__compressed_pair_elem.313" }
%"struct.std::__1::__compressed_pair_elem.313" = type { %"struct.blink::HTMLDocumentParser::TokenizedChunk"* }
%"struct.blink::HTMLDocumentParser::TokenizedChunk" = type { %"class.WTF::Vector.314", %"class.WTF::Vector.83", %"class.absl::optional", i32, %"class.WTF::Vector.330", i32, i32, i8, i32 }
%"class.WTF::Vector.314" = type { %"class.WTF::VectorBuffer.315" }
%"class.WTF::VectorBuffer.315" = type { %"class.WTF::VectorBufferBase.316" }
%"class.WTF::VectorBufferBase.316" = type { %"class.blink::CompactHTMLToken"*, i32, i32 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.324 }
%union.anon.324 = type { %"struct.blink::ViewportDescription" }
%"struct.blink::ViewportDescription" = type { i32, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, i8, float, float, i8, i8, i8, i8, %"class.absl::optional.325" }
%"class.absl::optional.325" = type { %"class.absl::optional_internal::optional_data.326" }
%"class.absl::optional_internal::optional_data.326" = type { %"class.absl::optional_internal::optional_data_base.327" }
%"class.absl::optional_internal::optional_data_base.327" = type { %"class.absl::optional_internal::optional_data_dtor_base.328" }
%"class.absl::optional_internal::optional_data_dtor_base.328" = type { i8, %union.anon.329 }
%union.anon.329 = type { i32 }
%"class.WTF::Vector.330" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.332", [4 x i8] }>
%"class.WTF::VectorBufferBase.332" = type { i32*, i32, i32 }
%"class.WTF::Deque.338" = type { %"class.WTF::Deque<std::__1::unique_ptr<blink::HTMLDocumentParser::TokenizedChunk, std::__1::default_delete<blink::HTMLDocumentParser::TokenizedChunk> >, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::unique_ptr<blink::HTMLDocumentParser::TokenizedChunk, std::__1::default_delete<blink::HTMLDocumentParser::TokenizedChunk> >, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.341" }
%"class.WTF::VectorBuffer.341" = type { %"class.WTF::VectorBufferBase.342" }
%"class.WTF::VectorBufferBase.342" = type { %"class.std::__1::unique_ptr.311"*, i32, i32 }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.blink::Member.350" = type { %"class.blink::MemberBase.351" }
%"class.blink::MemberBase.351" = type { %"class.blink::HTMLResourcePreloader"* }
%"class.blink::HTMLResourcePreloader" = type opaque
%"class.blink::Member.352" = type { %"class.blink::MemberBase.353" }
%"class.blink::MemberBase.353" = type { %"class.blink::HTMLDocumentParserState"* }
%"class.blink::HTMLDocumentParserState" = type opaque
%"class.WTF::Vector.83" = type { %"class.WTF::VectorBuffer.84" }
%"class.WTF::VectorBuffer.84" = type { %"class.WTF::VectorBufferBase.85" }
%"class.WTF::VectorBufferBase.85" = type { %"class.std::__1::unique_ptr.86"*, i32, i32 }
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.1288" }
%"class.std::__1::__compressed_pair.1288" = type { %"struct.std::__1::__compressed_pair_elem.1289" }
%"struct.std::__1::__compressed_pair_elem.1289" = type { %"class.blink::PreloadRequest"* }
%"class.blink::PreloadRequest" = type <{ %"class.WTF::String", %"class.WTF::TextPosition", %"class.WTF::String", %"class.blink::KURL", %"class.WTF::String", i8, [3 x i8], i32, i32, i32, %"class.WTF::String", i32, %"struct.blink::FetchParameters::ResourceWidth", %"class.blink::ClientHintsPreferences", i32, i32, i32, %"class.WTF::HashSet.950", i8, i8, [2 x i8], i32, i8, [7 x i8] }>
%"struct.blink::FetchParameters::ResourceWidth" = type <{ float, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.354" = type { %"class.std::__1::__compressed_pair.355" }
%"class.std::__1::__compressed_pair.355" = type { %"struct.std::__1::__compressed_pair_elem.356" }
%"struct.std::__1::__compressed_pair_elem.356" = type { %"class.blink::HTMLParserMetrics"* }
%"class.blink::HTMLParserMetrics" = type opaque
%"class.std::__1::unique_ptr.360" = type { %"class.std::__1::__compressed_pair.361" }
%"class.std::__1::__compressed_pair.361" = type { %"struct.std::__1::__compressed_pair_elem.362" }
%"struct.std::__1::__compressed_pair_elem.362" = type { %"class.base::ElapsedTimer"* }
%"class.blink::CompactHTMLToken" = type { i8, %"class.WTF::String", %"class.WTF::Vector.317", %"class.WTF::TextPosition" }
%"class.WTF::Vector.317" = type { %"class.WTF::VectorBuffer.318" }
%"class.WTF::VectorBuffer.318" = type { %"class.WTF::VectorBufferBase.319" }
%"class.WTF::VectorBufferBase.319" = type { %"struct.blink::CompactHTMLToken::Attribute"*, i32, i32 }
%"struct.blink::CompactHTMLToken::Attribute" = type { %"class.WTF::String", %"class.WTF::String" }
%"class.blink::ThreadScheduler" = type { i32 (...)** }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.blink::TextResourceDecoder"* }
%"class.blink::TextResourceDecoder" = type { %"class.blink::TextResourceDecoderOptions", %"class.WTF::TextEncoding", %"class.std::__1::unique_ptr.10", i32, %"class.WTF::Vector", i8, i8, i8, i8, i8, i8, %"class.std::__1::unique_ptr.17" }
%"class.blink::TextResourceDecoderOptions" = type <{ i32, i32, %"class.WTF::TextEncoding", i8, i8, [6 x i8], i8*, %"class.blink::KURL", [3 x i8], [5 x i8] }>
%"class.std::__1::unique_ptr.10" = type { %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.WTF::TextCodec"* }
%"class.WTF::TextCodec" = type { i32 (...)** }
%"class.std::__1::unique_ptr.17" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"class.blink::HTMLMetaCharsetParser"* }
%"class.blink::HTMLMetaCharsetParser" = type opaque
%"class.blink::BackgroundHTMLParser" = type { %"class.blink::BackgroundHTMLInputStream", %"class.std::__1::unique_ptr.36", %"class.std::__1::unique_ptr.59", %"class.blink::HTMLTreeBuilderSimulator", %"class.blink::HTMLParserOptions", %"class.blink::WeakPersistent", %"class.WTF::Vector.314", %"class.WTF::Vector.83", %"class.absl::optional", %"class.std::__1::unique_ptr.1249", %"class.std::__1::unique_ptr.2", %"class.blink::DocumentEncodingData", %class.scoped_refptr.303, i32, i8, %"class.base::WeakPtrFactory.1255" }
%"class.blink::BackgroundHTMLInputStream" = type <{ %"class.blink::SegmentedString", %"class.WTF::Vector.836", %"class.WTF::Vector.1237", i32, i32, i32, [4 x i8] }>
%"class.WTF::Vector.1237" = type { %"class.WTF::VectorBuffer.1238" }
%"class.WTF::VectorBuffer.1238" = type { %"class.WTF::VectorBufferBase.1239" }
%"class.WTF::VectorBufferBase.1239" = type { %"struct.blink::BackgroundHTMLInputStream::Checkpoint"*, i32, i32 }
%"struct.blink::BackgroundHTMLInputStream::Checkpoint" = type { %"class.blink::SegmentedString", i32, i32 }
%"class.blink::HTMLTreeBuilderSimulator" = type { %"class.blink::HTMLParserOptions", [6 x i8], %"class.WTF::Vector.330", i8, [7 x i8], %"class.WTF::Vector.1242" }
%"class.WTF::Vector.1242" = type { %"class.WTF::VectorBuffer.base.1245", [4 x i8] }
%"class.WTF::VectorBuffer.base.1245" = type <{ %"class.WTF::VectorBufferBase.1244", [4 x i8] }>
%"class.WTF::VectorBufferBase.1244" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.1249" = type { %"class.std::__1::__compressed_pair.1250" }
%"class.std::__1::__compressed_pair.1250" = type { %"struct.std::__1::__compressed_pair_elem.1251" }
%"struct.std::__1::__compressed_pair_elem.1251" = type { %"class.blink::TokenPreloadScanner"* }
%"class.base::WeakPtrFactory.1255" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"class.base::trace_event::ConvertableToTraceFormat" = type { i32 (...)** }
%"class.protozero::HeapBuffered" = type { %"class.protozero::ScatteredHeapBuffer", %"class.protozero::ScatteredStreamWriter", %"class.protozero::RootMessage" }
%"class.protozero::ScatteredHeapBuffer" = type { %"class.protozero::ScatteredStreamWriter::Delegate", i64, i64, %"class.protozero::ScatteredStreamWriter"*, %"class.std::__1::vector.1293", %"class.protozero::ScatteredHeapBuffer::Slice" }
%"class.protozero::ScatteredStreamWriter::Delegate" = type { i32 (...)** }
%"class.std::__1::vector.1293" = type { %"class.std::__1::__vector_base.1294" }
%"class.std::__1::__vector_base.1294" = type { %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.std::__1::__compressed_pair.1301" }
%"class.std::__1::__compressed_pair.1301" = type { %"struct.std::__1::__compressed_pair_elem.1302" }
%"struct.std::__1::__compressed_pair_elem.1302" = type { %"class.protozero::ScatteredHeapBuffer::Slice"* }
%"class.protozero::ScatteredHeapBuffer::Slice" = type { %"class.std::__1::unique_ptr.1295", i64, i64 }
%"class.std::__1::unique_ptr.1295" = type { %"class.std::__1::__compressed_pair.1296" }
%"class.std::__1::__compressed_pair.1296" = type { %"struct.std::__1::__compressed_pair_elem.1297" }
%"struct.std::__1::__compressed_pair_elem.1297" = type { i8* }
%"class.protozero::ScatteredStreamWriter" = type { %"class.protozero::ScatteredStreamWriter::Delegate"*, %"struct.protozero::ContiguousMemoryRange", i8*, i64 }
%"struct.protozero::ContiguousMemoryRange" = type { i8*, i8* }
%"class.protozero::RootMessage" = type { %"class.perfetto::protos::pbzero::DebugAnnotation.base", %"class.protozero::MessageArena" }
%"class.perfetto::protos::pbzero::DebugAnnotation.base" = type { %"class.protozero::Message.base" }
%"class.protozero::Message.base" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8 }>
%"class.protozero::Message" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8, [7 x i8] }>
%"class.protozero::MessageArena" = type { %"class.std::__1::list" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.1306" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.1306" = type { %"struct.std::__1::__compressed_pair_elem.201" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.blink::BackgroundHTMLParser::Configuration"* }
%"struct.std::__1::default_delete.367" = type { i8 }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"class.WTF::VectorBuffer.1243" = type <{ %"class.WTF::VectorBufferBase.1244", [4 x i8], [4 x i8] }>
%"class.WTF::VectorBuffer.331" = type <{ %"class.WTF::VectorBufferBase.332", [4 x i8], [4 x i8] }>
%"struct.blink::BackgroundHTMLParser::Checkpoint" = type { %"class.blink::WeakPersistent", %"class.std::__1::unique_ptr.36", %"class.std::__1::unique_ptr.59", %"class.WTF::Vector.330", i32, i32, %"class.WTF::String" }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZN20trace_event_internal13AddTraceEventINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEEN4base11trace_event16TraceEventHandleEcPKhPKcSE_yjySE_OT_ = comdat any

$_ZN5blink25BackgroundHTMLInputStreamD2Ev = comdat any

$_ZN5blink16CompactHTMLTokenD2Ev = comdat any

$_ZN3WTF6VectorIN5blink24HTMLTreeBuilderSimulator9NamespaceELj1ENS_18PartitionAllocatorEEaSERKS5_ = comdat any

$_ZN5blink14PreloadRequestD2Ev = comdat any

$_ZN3WTF12VectorBufferIN5blink24HTMLTreeBuilderSimulator12TemplateTypeELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_ = comdat any

$_ZN3WTF12VectorBufferIN5blink24HTMLTreeBuilderSimulator9NamespaceELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_ = comdat any

$_ZN3WTF5DequeIN5blink18SegmentedSubstringELj0ENS_18PartitionAllocatorEE10DestroyAllEv = comdat any

$_ZN3WTF6VectorIN5blink24HTMLTreeBuilderSimulator9NamespaceELj1ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink24HTMLTreeBuilderSimulator9NamespaceEEEmm = comdat any

$_ZNKSt3__114default_deleteIN5blink20BackgroundHTMLParser13ConfigurationEEclEPS3_ = comdat any

$_ZN5blink9HTMLTokenD2Ev = comdat any

$_ZN3WTF12VectorBufferIN5blink9HTMLToken9AttributeELj10ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_ = comdat any

$_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_18HTMLDocumentParserELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv = comdat any

$_ZN5blink14PersistentBaseINS_18HTMLDocumentParserELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EE20HandleWeakPersistentERKNS_14LivenessBrokerEPKv = comdat any

$_ZN5blink20BackgroundHTMLParser10CheckpointD2Ev = comdat any

$_ZN5blink14PersistentBaseINS_18HTMLDocumentParserELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EE12AssignUnsafeEPS1_ = comdat any

$_ZN3WTF6VectorIN5blink16CompactHTMLTokenELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS2_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink16CompactHTMLToken9AttributeELj0ENS_18PartitionAllocatorEEC2ERKS5_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink16CompactHTMLToken9AttributeEEEmm = comdat any

$_ZN3WTF6VectorIN5blink16CompactHTMLTokenELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink16CompactHTMLTokenEEEmm = comdat any

$_ZN5blink18HTMLDocumentParser14TokenizedChunkD2Ev = comdat any

@_ZN4base11trace_event16CategoryRegistry11categories_E = external global [300 x %"struct.base::trace_event::TraceCategory"], align 16
@.str = private unnamed_addr constant [27 x i8] c"BackgroundHTMLParser::Init\00", align 1
@.str.1 = private unnamed_addr constant [4 x i8] c"url\00", align 1
@.str.2 = private unnamed_addr constant [51 x i8] c"BackgroundHTMLParser::AppendRawBytesFromMainThread\00", align 1
@_ZN5blinkL16kEndOfFileMarkerE = internal constant i8 0, align 1
@.str.3 = private unnamed_addr constant [36 x i8] c"BackgroundHTMLParser::PumpTokenizer\00", align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str.4 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.5 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink24HTMLTreeBuilderSimulator9NamespaceEEEPKcv = private unnamed_addr constant [90 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HTMLTreeBuilderSimulator::Namespace]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink16CompactHTMLToken9AttributeEEEPKcv = private unnamed_addr constant [82 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::CompactHTMLToken::Attribute]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink16CompactHTMLTokenEEEPKcv = private unnamed_addr constant [71 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::CompactHTMLToken]\00", align 1

@_ZN5blink20BackgroundHTMLParser13ConfigurationC1Ev = hidden unnamed_addr alias void (%"struct.blink::BackgroundHTMLParser::Configuration"*), void (%"struct.blink::BackgroundHTMLParser::Configuration"*)* @_ZN5blink20BackgroundHTMLParser13ConfigurationC2Ev
@_ZN5blink20BackgroundHTMLParserC1ENSt3__110unique_ptrINS0_13ConfigurationENS1_14default_deleteIS3_EEEE13scoped_refptrIN4base22SingleThreadTaskRunnerEE = hidden unnamed_addr alias void (%"class.blink::BackgroundHTMLParser"*, %"struct.blink::BackgroundHTMLParser::Configuration"*, %"class.base::SingleThreadTaskRunner"*), void (%"class.blink::BackgroundHTMLParser"*, %"struct.blink::BackgroundHTMLParser::Configuration"*, %"class.base::SingleThreadTaskRunner"*)* @_ZN5blink20BackgroundHTMLParserC2ENSt3__110unique_ptrINS0_13ConfigurationENS1_14default_deleteIS3_EEEE13scoped_refptrIN4base22SingleThreadTaskRunnerEE
@_ZN5blink20BackgroundHTMLParserD1Ev = hidden unnamed_addr alias void (%"class.blink::BackgroundHTMLParser"*), void (%"class.blink::BackgroundHTMLParser"*)* @_ZN5blink20BackgroundHTMLParserD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20BackgroundHTMLParser6CreateENSt3__110unique_ptrINS0_13ConfigurationENS1_14default_deleteIS3_EEEE13scoped_refptrIN4base22SingleThreadTaskRunnerEE(%"class.base::WeakPtr"* noalias sret, %"struct.blink::BackgroundHTMLParser::Configuration"*, %"class.base::SingleThreadTaskRunner"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::internal::WeakReference", align 8
  %5 = tail call noalias i8* @malloc(i64 416) #11
  %6 = bitcast i8* %5 to %"class.blink::BackgroundHTMLParser"*
  tail call void @_ZN5blink20BackgroundHTMLParserC2ENSt3__110unique_ptrINS0_13ConfigurationENS1_14default_deleteIS3_EEEE13scoped_refptrIN4base22SingleThreadTaskRunnerEE(%"class.blink::BackgroundHTMLParser"* %6, %"struct.blink::BackgroundHTMLParser::Configuration"* %1, %"class.base::SingleThreadTaskRunner"* %2)
  %7 = getelementptr inbounds i8, i8* %5, i64 400
  %8 = bitcast %"class.base::internal::WeakReference"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #11, !noalias !2
  %9 = bitcast i8* %7 to %"class.base::internal::WeakReferenceOwner"*
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %4, %"class.base::internal::WeakReferenceOwner"* %9) #11, !noalias !2
  %10 = getelementptr inbounds i8, i8* %5, i64 408
  %11 = bitcast i8* %10 to i64*
  %12 = load i64, i64* %11, align 8, !noalias !2
  %13 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %0, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* %13, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %4, i64 %12) #11
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #11, !noalias !2
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20BackgroundHTMLParser4InitERKNS_4KURLENSt3__110unique_ptrINS_24CachedDocumentParametersENS4_14default_deleteIS6_EEEERKNS_17MediaValuesCached21MediaValuesCachedDataEb(%"class.blink::BackgroundHTMLParser"* nocapture, %"class.blink::KURL"* dereferenceable(112), %"struct.blink::CachedDocumentParameters"*, %"struct.blink::MediaValuesCached::MediaValuesCachedData"* dereferenceable(112), i1 zeroext) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 76, i32 0), align 16
  %8 = and i8 %7, 25
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %22, label %10, !prof !5

10:                                               ; preds = %5
  %11 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #11
  %12 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %1, i64 0, i32 4
  call void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* nonnull sret %6, %"class.WTF::String"* %12, i32 0) #11
  %13 = call i64 @_ZN20trace_event_internal13AddTraceEventINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEEN4base11trace_event16TraceEventHandleEcPKhPKcSE_yjySE_OT_(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 76, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str, i64 0, i64 0), i8* null, i64 0, i32 0, i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0), %"class.std::__1::basic_string"* nonnull dereferenceable(24) %6)
  %14 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %10
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i8*, i8** %19, align 8
  call void @_ZdlPv(i8* %20) #12
  br label %21

21:                                               ; preds = %10, %18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #11
  br label %22

22:                                               ; preds = %5, %21
  %23 = phi i64 [ -6148914691236517206, %5 ], [ %13, %21 ]
  %24 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %5 ], [ getelementptr inbounds ([27 x i8], [27 x i8]* @.str, i64 0, i64 0), %21 ]
  %25 = phi i8* [ null, %5 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 76, i32 0), %21 ]
  %26 = call noalias i8* @malloc(i64 464) #11
  %27 = bitcast i8* %26 to %"class.blink::TokenPreloadScanner"*
  call void @_ZN5blink19TokenPreloadScannerC1ERKNS_4KURLENSt3__110unique_ptrINS_24CachedDocumentParametersENS4_14default_deleteIS6_EEEERKNS_17MediaValuesCached21MediaValuesCachedDataENS0_11ScannerTypeEb(%"class.blink::TokenPreloadScanner"* %27, %"class.blink::KURL"* dereferenceable(112) %1, %"struct.blink::CachedDocumentParameters"* %2, %"struct.blink::MediaValuesCached::MediaValuesCachedData"* dereferenceable(112) %3, i32 0, i1 zeroext %4) #11
  %28 = ptrtoint i8* %26 to i64
  %29 = getelementptr inbounds %"class.blink::BackgroundHTMLParser", %"class.blink::BackgroundHTMLParser"* %0, i64 0, i32 9
  %30 = getelementptr inbounds %"class.std::__1::unique_ptr.1249", %"class.std::__1::unique_ptr.1249"* %29, i64 0, i32 0, i32 0, i32 0
  %31 = load %"class.blink::TokenPreloadScanner"*, %"class.blink::TokenPreloadScanner"** %30, align 8
  %32 = bitcast %"class.std::__1::unique_ptr.1249"* %29 to i64*
  store i64 %28, i64* %32, align 8
  %33 = icmp eq %"class.blink::TokenPreloadScanner"* %31, null
  br i1 %33, label %36, label %34

34:                                               ; preds = %22
  call void @_ZN5blink19TokenPreloadScannerD1Ev(%"class.blink::TokenPreloadScanner"* nonnull %31) #11
  %35 = bitcast %"class.blink::TokenPreloadScanner"* %31 to i8*
  call void @free(i8* %35) #11
  br label %36

36:                                               ; preds = %34, %22
  %37 = icmp eq i8* %25, null
  br i1 %37, label %42, label %38

38:                                               ; preds = %36
  %39 = load i8, i8* %25, align 1
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %42, label %41

41:                                               ; preds = %38
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %25, i8* %24, i64 %23) #11
  br label %42

42:                                               ; preds = %41, %38, %36
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN20trace_event_internal13AddTraceEventINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEEN4base11trace_event16TraceEventHandleEcPKhPKcSE_yjySE_OT_(i8 signext, i8*, i8*, i8*, i64, i32, i64, i8*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2 comdat {
  %10 = alloca %"class.base::trace_event::TraceArguments", align 8
  %11 = alloca %"class.base::TimeTicks", align 8
  %12 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #11
  %13 = bitcast %"class.base::TimeTicks"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #11
  %14 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %11, i64 0, i32 0, i32 0
  %15 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #11
  store i64 %15, i64* %14, align 8
  %16 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %16) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 40, i1 false) #11
  store i8 1, i8* %16, align 8
  %17 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 1, i64 0
  store i8 7, i8* %17, align 1
  %18 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 2, i64 0
  store i8* %7, i8** %18, align 8
  %19 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 0
  %20 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  %22 = load i8, i8* %21, align 1
  %23 = icmp slt i8 %22, 0
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  %27 = select i1 %23, i8* %25, i8* %26
  %28 = bitcast %"union.base::trace_event::TraceValue"* %19 to i8**
  store i8* %27, i8** %28, align 8
  %29 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext %0, i8* %1, i8* %2, i8* %3, i64 %4, i64 %6, i32 %12, %"class.base::TimeTicks"* nonnull dereferenceable(8) %11, %"class.base::trace_event::TraceArguments"* nonnull %10, i32 %5) #11
  %30 = load i8, i8* %16, align 8
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %66, label %32

32:                                               ; preds = %9, %61
  %33 = phi i64 [ %62, %61 ], [ 0, %9 ]
  %34 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 1, i64 %33
  %35 = load i8, i8* %34, align 1
  %36 = icmp eq i8 %35, 8
  br i1 %36, label %37, label %48

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 %33
  %39 = bitcast %"union.base::trace_event::TraceValue"* %38 to %"class.base::trace_event::ConvertableToTraceFormat"**
  %40 = load %"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::ConvertableToTraceFormat"** %39, align 8
  %41 = icmp eq %"class.base::trace_event::ConvertableToTraceFormat"* %40, null
  br i1 %41, label %61, label %42

42:                                               ; preds = %37
  %43 = bitcast %"class.base::trace_event::ConvertableToTraceFormat"* %40 to void (%"class.base::trace_event::ConvertableToTraceFormat"*)***
  %44 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)**, void (%"class.base::trace_event::ConvertableToTraceFormat"*)*** %43, align 8
  %45 = getelementptr inbounds void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %44, i64 1
  %46 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %45, align 8
  call void %46(%"class.base::trace_event::ConvertableToTraceFormat"* nonnull %40) #11
  %47 = load i8, i8* %34, align 1
  br label %48

48:                                               ; preds = %42, %32
  %49 = phi i8 [ %35, %32 ], [ %47, %42 ]
  %50 = icmp eq i8 %49, 9
  br i1 %50, label %51, label %61

51:                                               ; preds = %48
  %52 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 %33
  %53 = bitcast %"union.base::trace_event::TraceValue"* %52 to %"class.protozero::HeapBuffered"**
  %54 = load %"class.protozero::HeapBuffered"*, %"class.protozero::HeapBuffered"** %53, align 8
  %55 = icmp eq %"class.protozero::HeapBuffered"* %54, null
  br i1 %55, label %61, label %56

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %54, i64 0, i32 2, i32 1
  call void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"* %57) #11
  %58 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %54, i64 0, i32 1
  call void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"* %58) #11
  %59 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %54, i64 0, i32 0
  call void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"* %59) #11
  %60 = bitcast %"class.protozero::HeapBuffered"* %54 to i8*
  call void @_ZdlPv(i8* %60) #12
  br label %61

61:                                               ; preds = %56, %51, %48, %37
  %62 = add nuw nsw i64 %33, 1
  %63 = load i8, i8* %16, align 8
  %64 = zext i8 %63 to i64
  %65 = icmp ult i64 %62, %64
  br i1 %65, label %32, label %66

66:                                               ; preds = %61, %9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %16) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #11
  ret i64 %29
}

declare void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* sret, %"class.WTF::String"*, i32) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20BackgroundHTMLParser13ConfigurationC2Ev(%"struct.blink::BackgroundHTMLParser::Configuration"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.blink::BackgroundHTMLParser::Configuration", %"struct.blink::BackgroundHTMLParser::Configuration"* %0, i64 0, i32 0
  tail call void @_ZN5blink17HTMLParserOptionsC1EPNS_8DocumentE(%"class.blink::HTMLParserOptions"* %2, %"class.blink::Document"* null) #11
  %3 = getelementptr inbounds %"struct.blink::BackgroundHTMLParser::Configuration", %"struct.blink::BackgroundHTMLParser::Configuration"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::WeakPersistent"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 24, i1 false)
  ret void
}

declare void @_ZN5blink17HTMLParserOptionsC1EPNS_8DocumentE(%"class.blink::HTMLParserOptions"*, %"class.blink::Document"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20BackgroundHTMLParserC2ENSt3__110unique_ptrINS0_13ConfigurationENS1_14default_deleteIS3_EEEE13scoped_refptrIN4base22SingleThreadTaskRunnerEE(%"class.blink::BackgroundHTMLParser"*, %"struct.blink::BackgroundHTMLParser::Configuration"*, %"class.base::SingleThreadTaskRunner"*) unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::unique_ptr", align 8
  %5 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %4, i64 0, i32 0, i32 0, i32 0
  store %"struct.blink::BackgroundHTMLParser::Configuration"* %1, %"struct.blink::BackgroundHTMLParser::Configuration"** %5, align 8
  %6 = ptrtoint %"class.base::SingleThreadTaskRunner"* %2 to i64
  %7 = getelementptr inbounds %"class.blink::BackgroundHTMLParser", %"class.blink::BackgroundHTMLParser"* %0, i64 0, i32 0
  tail call void @_ZN5blink25BackgroundHTMLInputStreamC1Ev(%"class.blink::BackgroundHTMLInputStream"* %7) #11
  %8 = tail call noalias i8* @malloc(i64 2512) #11
  %9 = getelementptr inbounds i8, i8* %8, i64 16
  %10 = getelementptr inbounds i8, i8* %8, i64 40
  %11 = bitcast i8* %9 to i8**
  store i8* %10, i8** %11, align 8
  %12 = getelementptr inbounds i8, i8* %8, i64 24
  %13 = getelementptr inbounds i8, i8* %8, i64 32
  %14 = getelementptr inbounds i8, i8* %8, i64 552
  %15 = bitcast i8* %13 to i8**
  store i8* %14, i8** %15, align 8
  %16 = getelementptr inbounds i8, i8* %8, i64 560
  %17 = getelementptr inbounds i8, i8* %8, i64 576
  %18 = bitcast i8* %16 to i8**
  store i8* %17, i8** %18, align 8
  %19 = getelementptr inbounds i8, i8* %8, i64 568
  %20 = bitcast i8* %19 to i32*
  store i32 10, i32* %20, align 8
  %21 = getelementptr inbounds i8, i8* %8, i64 572
  %22 = bitcast i8* %21 to i32*
  store i32 0, i32* %22, align 4
  %23 = getelementptr inbounds i8, i8* %8, i64 2504
  %24 = bitcast i8* %23 to i64*
  store i64 0, i64* %24, align 8
  %25 = bitcast i8* %8 to i32*
  store i32 0, i32* %25, align 8
  %26 = getelementptr inbounds i8, i8* %8, i64 4
  %27 = bitcast i8* %26 to i32*
  store i32 0, i32* %27, align 4
  %28 = getelementptr inbounds i8, i8* %8, i64 12
  %29 = bitcast i8* %28 to i32*
  store i32 0, i32* %29, align 4
  %30 = ptrtoint i8* %10 to i64
  %31 = bitcast i8* %12 to i64*
  store i64 %30, i64* %31, align 8
  %32 = bitcast i8* %14 to i16*
  store i16 0, i16* %32, align 8
  %33 = getelementptr inbounds %"class.blink::BackgroundHTMLParser", %"class.blink::BackgroundHTMLParser"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %34 = bitcast %"class.blink::HTMLToken"** %33 to i8**
  store i8* %8, i8** %34, align 8
  %35 = getelementptr inbounds %"struct.blink::BackgroundHTMLParser::Configuration", %"struct.blink::BackgroundHTMLParser::Configuration"* %1, i64 0, i32 0
  %36 = tail call noalias i8* @malloc(i64 248) #11
  %37 = bitcast i8* %36 to %"class.blink::HTMLTokenizer"*
  tail call void @_ZN5blink13HTMLTokenizerC1ERKNS_17HTMLParserOptionsE(%"class.blink::HTMLTokenizer"* %37, %"class.blink::HTMLParserOptions"* dereferenceable(2) %35) #11
  %38 = getelementptr inbounds %"class.blink::BackgroundHTMLParser", %"class.blink::BackgroundHTMLParser"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %39 = bitcast %"class.blink::HTMLTokenizer"** %38 to i8**
  store i8* %36, i8** %39, align 8
  %40 = getelementptr inbounds %"class.blink::BackgroundHTMLParser", %"class.blink::BackgroundHTMLParser"* %0, i64 0, i32 3
  tail call void @_ZN5blink24HTMLTreeBuilderSimulatorC1ERKNS_17HTMLParserOptionsE(%"class.blink::HTMLTreeBuilderSimulator"* %40, %"class.blink::HTMLParserOptions"* dereferenceable(2) %35) #11
  %41 = getelementptr inbounds %"class.blink::BackgroundHTMLParser", %"class.blink::BackgroundHTMLParser"* %0, i64 0, i32 4, i32 0
  %42 = bitcast %"struct.blink::BackgroundHTMLParser::Configuration"* %1 to i16*
  %43 = bitcast i8* %41 to i16*
  %44 = load i16, i16* %42, align 8
  store i16 %44, i16* %43, align 8
  %45 = getelementptr inbounds %"class.blink::BackgroundHTMLParser", %"class.blink::BackgroundHTMLParser"* %0, i64 0, i32 5
  %46 = getelementptr inbounds %"struct.blink::BackgroundHTMLParser::Configuration", %"struct.blink::BackgroundHTMLParser::Configuration"* %1, i64 0, i32 1
  %47 = getelementptr inbounds %"class.blink::WeakPersistent", %"class.blink::WeakPersistent"* %45, i64 0, i32 0
  %48 = bitcast %"class.blink::WeakPersistent"* %46 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = bitcast %"class.blink::WeakPersistent"* %45 to i64*
  store i64 %49, i64* %50, align 8
  %51 = getelementptr inbounds %"class.blink::BackgroundHTMLParser", %"class.blink::BackgroundHTMLParser"* %0, i64 0, i32 5, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %51, align 8
  switch i64 %49, label %52 [
    i64 0, label %79
    i64 -1, label %79
  ]

52:                                               ; preds = %3
  %53 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %54 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %53, i64 0, i32 1
  %55 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %54) #11
  %56 = icmp eq i8* %55, null
  br i1 %56, label %57, label %59, !prof !6

57:                                               ; preds = %52
  %58 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %54, i8* %58) #11
  br label %59

59:                                               ; preds = %57, %52
  %60 = phi i8* [ %58, %57 ], [ %55, %52 ]
  %61 = bitcast i8* %60 to %"class.blink::ThreadState"**
  %62 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %61, align 8
  %63 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %62, i64 0, i32 4, i32 0, i32 0, i32 0
  %64 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %63, align 8
  %65 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %64, i64 0, i32 0, i32 0
  %66 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %65, align 8
  %67 = icmp eq %"class.blink::PersistentNode"* %66, null
  br i1 %67, label %68, label %71, !prof !6

68:                                               ; preds = %59
  %69 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %64, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %69) #11
  %70 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %65, align 8
  br label %71

71:                                               ; preds = %68, %59
  %72 = phi %"class.blink::PersistentNode"* [ %70, %68 ], [ %66, %59 ]
  %73 = bitcast %"class.blink::PersistentNode"* %72 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = bitcast %"class.blink::PersistentRegion"* %64 to i64*
  store i64 %74, i64* %75, align 8
  %76 = bitcast %"class.blink::PersistentNode"* %72 to %"class.blink::PersistentBase"**
  store %"class.blink::PersistentBase"* %47, %"class.blink::PersistentBase"** %76, align 8
  %77 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %72, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_18HTMLDocumentParserELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %77, align 8
  store %"class.blink::PersistentNode"* %72, %"class.blink::PersistentNode"** %51, align 8
  %78 = load %"struct.blink::BackgroundHTMLParser::Configuration"*, %"struct.blink::BackgroundHTMLParser::Configuration"** %5, align 8
  br label %79

79:                                               ; preds = %71, %3, %3
  %80 = phi %"struct.blink::BackgroundHTMLParser::Configuration"* [ %78, %71 ], [ %1, %3 ], [ %1, %3 ]
  %81 = getelementptr inbounds %"class.blink::BackgroundHTMLParser", %"class.blink::BackgroundHTMLParser"* %0, i64 0, i32 6
  %82 = getelementptr inbounds %"class.blink::BackgroundHTMLParser", %"class.blink::BackgroundHTMLParser"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1
  %83 = bitcast %union.anon.324* %82 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %83, i8 0, i64 72, i1 false) #11
  %84 = getelementptr inbounds %"class.blink::BackgroundHTMLParser", %"class.blink::BackgroundHTMLParser"* %0, i64 0, i32 9
  %85 = bitcast %"class.std::__1::unique_ptr.1249"* %84 to i64*
  store i64 0, i64* %85, align 8
  %86 = getelementptr inbounds %"class.blink::BackgroundHTMLParser", %"class.blink::BackgroundHTMLParser"* %0, i64 0, i32 10
  %87 = getelementptr inbounds %"struct.blink::BackgroundHTMLParser::Configuration", %"struct.blink::BackgroundHTMLParser::Configuration"* %80, i64 0, i32 2
  %88 = getelementptr inbounds %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2"* %87, i64 0, i32 0, i32 0, i32 0
  %89 = bitcast %"class.std::__1::unique_ptr.2"* %87 to i64*
  %90 = bitcast %"class.WTF::Vector.314"* %81 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %90, i8 0, i64 33, i1 false)
  %91 = load i64, i64* %89, align 8
  store %"class.blink::TextResourceDecoder"* null, %"class.blink::TextResourceDecoder"** %88, align 8
  %92 = bitcast %"class.std::__1::unique_ptr.2"* %86 to i64*
  store i64 %91, i64* %92, align 8
  %93 = getelementptr inbounds %"class.blink::BackgroundHTMLParser", %"class.blink::BackgroundHTMLParser"* %0, i64 0, i32 11
  tail call void @_ZN5blink20DocumentEncodingDataC1Ev(%"class.blink::DocumentEncodingData"* %93) #11
  %94 = getelementptr inbounds %"class.blink::BackgroundHTMLParser", %"class.blink::BackgroundHTMLParser"* %0, i64 0, i32 12
  %95 = bitcast %class.scoped_refptr.303* %94 to i64*
  store i64 %6, i64* %95, align 8
  %96 = getelementptr inbounds %"class.blink::BackgroundHTMLParser", %"class.blink::BackgroundHTMLParser"* %0, i64 0, i32 13
  store i32 -1, i32* %96, align 8
  %97 = getelementptr inbounds %"class.blink::BackgroundHTMLParser", %"class.blink::BackgroundHTMLParser"* %0, i64 0, i32 14
  store i8 0, i8* %97, align 4
  %98 = getelementptr inbounds %"class.blink::BackgroundHTMLParser", %"class.blink::BackgroundHTMLParser"* %0, i64 0, i32 15, i32 0
  %99 = ptrtoint %"class.blink::BackgroundHTMLParser"* %0 to i64
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"* %98, i64 %99) #11
  store %"struct.blink::BackgroundHTMLParser::Configuration"* null, %"struct.blink::BackgroundHTMLParser::Configuration"** %5, align 8
  %100 = icmp eq %"struct.blink::BackgroundHTMLParser::Configuration"* %80, null
  br i1 %100, label %103, label %101

101:                                              ; preds = %79
  %102 = bitcast %"class.std::__1::unique_ptr"* %4 to %"struct.std::__1::default_delete.367"*
  call void @_ZNKSt3__114default_deleteIN5blink20BackgroundHTMLParser13ConfigurationEEclEPS3_(%"struct.std::__1::default_delete.367"* nonnull %102, %"struct.blink::BackgroundHTMLParser::Configuration"* nonnull %80) #11
  br label %103

103:                                              ; preds = %79, %101
  ret void
}

declare void @_ZN5blink25BackgroundHTMLInputStreamC1Ev(%"class.blink::BackgroundHTMLInputStream"*) unnamed_addr #3

declare void @_ZN5blink24HTMLTreeBuilderSimulatorC1ERKNS_17HTMLParserOptionsE(%"class.blink::HTMLTreeBuilderSimulator"*, %"class.blink::HTMLParserOptions"* dereferenceable(2)) unnamed_addr #3

declare void @_ZN5blink20DocumentEncodingDataC1Ev(%"class.blink::DocumentEncodingData"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20BackgroundHTMLParserD2Ev(%"class.blink::BackgroundHTMLParser"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::BackgroundHTMLParser", %"class.blink::BackgroundHTMLParser"* %0, i64 0, i32 15, i32 0
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %2) #11
  %3 = getelementptr inbounds %"class.blink::BackgroundHTMLParser", %"class.blink::BackgroundHTMLParser"* %0, i64 0, i32 12, i32 0
  %4 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %3, align 8
  %5 = icmp eq %"class.base::SingleThreadTaskRunner"* %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %4, i64 0, i32 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw sub i32* %8, i32 1 acq_rel
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %11, label %14

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %7, i64 -2
  %13 = bitcast %"class.base::RefCountedThreadSafe"* %12 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %13) #11
  br label %14

14:                                               ; preds = %1, %6, %11
  %15 = getelementptr inbounds %"class.blink::BackgroundHTMLParser", %"class.blink::BackgroundHTMLParser"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %16 = load %"class.blink::TextResourceDecoder"*, %"class.blink::TextResourceDecoder"** %15, align 8
  store %"class.blink::TextResourceDecoder"* null, %"class.blink::TextResourceDecoder"** %15, align 8
  %17 = icmp eq %"class.blink::TextResourceDecoder"* %16, null
  br i1 %17, label %20, label %18

18:                                               ; preds = %14
  tail call void @_ZN5blink19TextResourceDecoderD1Ev(%"class.blink::TextResourceDecoder"* nonnull %16) #11
  %19 = bitcast %"class.blink::TextResourceDecoder"* %16 to i8*
  tail call void @free(i8* %19) #11
  br label %20

20:                                               ; preds = %14, %18
  %21 = getelementptr inbounds %"class.blink::BackgroundHTMLParser", %"class.blink::BackgroundHTMLParser"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %22 = load %"class.blink::TokenPreloadScanner"*, %"class.blink::TokenPreloadScanner"** %21, align 8
  store %"class.blink::TokenPreloadScanner"* null, %"class.blink::TokenPreloadScanner"** %21, align 8
  %23 = icmp eq %"class.blink::TokenPreloadScanner"* %22, null
  br i1 %23, label %26, label %24

24:                                               ; preds = %20
  tail call void @_ZN5blink19TokenPreloadScannerD1Ev(%"class.blink::TokenPreloadScanner"* nonnull %22) #11
  %25 = bitcast %"class.blink::TokenPreloadScanner"* %22 to i8*
  tail call void @free(i8* %25) #11
  br label %26

26:                                               ; preds = %20, %24
  %27 = getelementptr inbounds %"class.blink::BackgroundHTMLParser", %"class.blink::BackgroundHTMLParser"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  %28 = load i8, i8* %27, align 4, !range !7
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %55, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.blink::BackgroundHTMLParser", %"class.blink::BackgroundHTMLParser"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0, i32 4, i32 2
  %32 = load i8, i8* %31, align 1
  %33 = icmp eq i8 %32, 8
  br i1 %33, label %34, label %36

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.blink::BackgroundHTMLParser", %"class.blink::BackgroundHTMLParser"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0, i32 4
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %35) #11
  br label %36

36:                                               ; preds = %34, %30
  %37 = getelementptr inbounds %"class.blink::BackgroundHTMLParser", %"class.blink::BackgroundHTMLParser"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0, i32 3, i32 2
  %38 = load i8, i8* %37, align 1
  %39 = icmp eq i8 %38, 8
  br i1 %39, label %40, label %42

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.blink::BackgroundHTMLParser", %"class.blink::BackgroundHTMLParser"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0, i32 3
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %41) #11
  br label %42

42:                                               ; preds = %40, %36
  %43 = getelementptr inbounds %"class.blink::BackgroundHTMLParser", %"class.blink::BackgroundHTMLParser"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 2
  %44 = load i8, i8* %43, align 1
  %45 = icmp eq i8 %44, 8
  br i1 %45, label %46, label %48

46:                                               ; preds = %42
  %47 = getelementptr inbounds %"class.blink::BackgroundHTMLParser", %"class.blink::BackgroundHTMLParser"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %47) #11
  br label %48

48:                                               ; preds = %46, %42
  %49 = getelementptr inbounds %"class.blink::BackgroundHTMLParser", %"class.blink::BackgroundHTMLParser"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 2
  %50 = load i8, i8* %49, align 1
  %51 = icmp eq i8 %50, 8
  br i1 %51, label %52, label %54

52:                                               ; preds = %48
  %53 = getelementptr inbounds %"class.blink::BackgroundHTMLParser", %"class.blink::BackgroundHTMLParser"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %53) #11
  br label %54

54:                                               ; preds = %52, %48
  store i8 0, i8* %27, align 4
  br label %55

55:                                               ; preds = %26, %54
  %56 = getelementptr inbounds %"class.blink::BackgroundHTMLParser", %"class.blink::BackgroundHTMLParser"* %0, i64 0, i32 7
  %57 = getelementptr inbounds %"class.WTF::Vector.83", %"class.WTF::Vector.83"* %56, i64 0, i32 0, i32 0, i32 0
  %58 = load %"class.std::__1::unique_ptr.86"*, %"class.std::__1::unique_ptr.86"** %57, align 8
  %59 = icmp eq %"class.std::__1::unique_ptr.86"* %58, null
  br i1 %59, label %83, label %60, !prof !5

60:                                               ; preds = %55
  %61 = bitcast %"class.std::__1::unique_ptr.86"* %58 to i8*
  %62 = getelementptr inbounds %"class.blink::BackgroundHTMLParser", %"class.blink::BackgroundHTMLParser"* %0, i64 0, i32 7, i32 0, i32 0, i32 2
  %63 = load i32, i32* %62, align 4
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %81, label %65, !prof !6

65:                                               ; preds = %60
  %66 = zext i32 %63 to i64
  %67 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %58, i64 %66
  br label %68

68:                                               ; preds = %75, %65
  %69 = phi %"class.std::__1::unique_ptr.86"* [ %76, %75 ], [ %58, %65 ]
  %70 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %69, i64 0, i32 0, i32 0, i32 0
  %71 = load %"class.blink::PreloadRequest"*, %"class.blink::PreloadRequest"** %70, align 8
  store %"class.blink::PreloadRequest"* null, %"class.blink::PreloadRequest"** %70, align 8
  %72 = icmp eq %"class.blink::PreloadRequest"* %71, null
  br i1 %72, label %75, label %73

73:                                               ; preds = %68
  tail call void @_ZN5blink14PreloadRequestD2Ev(%"class.blink::PreloadRequest"* nonnull %71) #11
  %74 = bitcast %"class.blink::PreloadRequest"* %71 to i8*
  tail call void @free(i8* %74) #11
  br label %75

75:                                               ; preds = %73, %68
  %76 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %69, i64 1
  %77 = icmp eq %"class.std::__1::unique_ptr.86"* %76, %67
  br i1 %77, label %78, label %68

78:                                               ; preds = %75
  store i32 0, i32* %62, align 4
  %79 = bitcast %"class.WTF::Vector.83"* %56 to i8**
  %80 = load i8*, i8** %79, align 8
  br label %81

81:                                               ; preds = %78, %60
  %82 = phi i8* [ %80, %78 ], [ %61, %60 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %82) #11
  store %"class.std::__1::unique_ptr.86"* null, %"class.std::__1::unique_ptr.86"** %57, align 8
  br label %83

83:                                               ; preds = %55, %81
  %84 = getelementptr inbounds %"class.blink::BackgroundHTMLParser", %"class.blink::BackgroundHTMLParser"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %85 = load %"class.blink::CompactHTMLToken"*, %"class.blink::CompactHTMLToken"** %84, align 8
  %86 = icmp eq %"class.blink::CompactHTMLToken"* %85, null
  br i1 %86, label %103, label %87, !prof !5

87:                                               ; preds = %83
  %88 = getelementptr inbounds %"class.blink::BackgroundHTMLParser", %"class.blink::BackgroundHTMLParser"* %0, i64 0, i32 6, i32 0, i32 0, i32 2
  %89 = load i32, i32* %88, align 4
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %100, label %91, !prof !6

91:                                               ; preds = %87
  %92 = zext i32 %89 to i64
  %93 = getelementptr inbounds %"class.blink::CompactHTMLToken", %"class.blink::CompactHTMLToken"* %85, i64 %92
  br label %94

94:                                               ; preds = %94, %91
  %95 = phi %"class.blink::CompactHTMLToken"* [ %96, %94 ], [ %85, %91 ]
  tail call void @_ZN5blink16CompactHTMLTokenD2Ev(%"class.blink::CompactHTMLToken"* %95) #11
  %96 = getelementptr inbounds %"class.blink::CompactHTMLToken", %"class.blink::CompactHTMLToken"* %95, i64 1
  %97 = icmp eq %"class.blink::CompactHTMLToken"* %96, %93
  br i1 %97, label %98, label %94

98:                                               ; preds = %94
  store i32 0, i32* %88, align 4
  %99 = load %"class.blink::CompactHTMLToken"*, %"class.blink::CompactHTMLToken"** %84, align 8
  br label %100

100:                                              ; preds = %98, %87
  %101 = phi %"class.blink::CompactHTMLToken"* [ %85, %87 ], [ %99, %98 ]
  %102 = getelementptr inbounds %"class.blink::CompactHTMLToken", %"class.blink::CompactHTMLToken"* %101, i64 0, i32 0
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %102) #11
  store %"class.blink::CompactHTMLToken"* null, %"class.blink::CompactHTMLToken"** %84, align 8
  br label %103

103:                                              ; preds = %83, %100
  %104 = getelementptr inbounds %"class.blink::BackgroundHTMLParser", %"class.blink::BackgroundHTMLParser"* %0, i64 0, i32 5, i32 0, i32 1, i32 0
  %105 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %104, align 8
  %106 = icmp eq %"class.blink::PersistentNode"* %105, null
  br i1 %106, label %126, label %107

107:                                              ; preds = %103
  %108 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %109 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %108, i64 0, i32 1
  %110 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %109) #11
  %111 = icmp eq i8* %110, null
  br i1 %111, label %112, label %114, !prof !6

112:                                              ; preds = %107
  %113 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %109, i8* %113) #11
  br label %114

114:                                              ; preds = %112, %107
  %115 = phi i8* [ %113, %112 ], [ %110, %107 ]
  %116 = bitcast i8* %115 to %"class.blink::ThreadState"**
  %117 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %116, align 8
  %118 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %117, i64 0, i32 4, i32 0, i32 0, i32 0
  %119 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %118, align 8
  %120 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %104, align 8
  %121 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %119, i64 0, i32 0, i32 0
  %122 = bitcast %"class.blink::PersistentRegion"* %119 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast %"class.blink::PersistentNode"* %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %120, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %125, align 8
  store %"class.blink::PersistentNode"* %120, %"class.blink::PersistentNode"** %121, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %104, align 8
  br label %126

126:                                              ; preds = %103, %114
  %127 = getelementptr inbounds %"class.blink::BackgroundHTMLParser", %"class.blink::BackgroundHTMLParser"* %0, i64 0, i32 3, i32 5
  %128 = getelementptr inbounds %"class.blink::BackgroundHTMLParser", %"class.blink::BackgroundHTMLParser"* %0, i64 0, i32 3, i32 5, i32 0, i32 0, i32 2
  %129 = load i32, i32* %128, align 4
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %132, label %131, !prof !6

131:                                              ; preds = %126
  store i32 0, i32* %128, align 4
  br label %132

132:                                              ; preds = %131, %126
  %133 = getelementptr inbounds %"class.WTF::Vector.1242", %"class.WTF::Vector.1242"* %127, i64 0, i32 0, i32 0, i32 0
  %134 = load i32*, i32** %133, align 8
  %135 = getelementptr inbounds %"class.blink::BackgroundHTMLParser", %"class.blink::BackgroundHTMLParser"* %0, i64 0, i32 3, i32 5, i32 0, i32 1, i64 0
  %136 = bitcast i8* %135 to i32*
  %137 = icmp eq i32* %134, %136
  br i1 %137, label %140, label %138, !prof !5

138:                                              ; preds = %132
  %139 = bitcast %"class.WTF::Vector.1242"* %127 to %"class.WTF::VectorBuffer.1243"*
  tail call void @_ZN3WTF12VectorBufferIN5blink24HTMLTreeBuilderSimulator12TemplateTypeELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.1243"* %139, i32* %134) #11
  br label %140

140:                                              ; preds = %138, %132
  store i32* null, i32** %133, align 8
  %141 = getelementptr inbounds %"class.blink::BackgroundHTMLParser", %"class.blink::BackgroundHTMLParser"* %0, i64 0, i32 3, i32 2
  %142 = getelementptr inbounds %"class.blink::BackgroundHTMLParser", %"class.blink::BackgroundHTMLParser"* %0, i64 0, i32 3, i32 2, i32 0, i32 0, i32 2
  %143 = load i32, i32* %142, align 4
  %144 = icmp eq i32 %143, 0
  br i1 %144, label %146, label %145, !prof !6

145:                                              ; preds = %140
  store i32 0, i32* %142, align 4
  br label %146

146:                                              ; preds = %145, %140
  %147 = getelementptr inbounds %"class.WTF::Vector.330", %"class.WTF::Vector.330"* %141, i64 0, i32 0, i32 0, i32 0
  %148 = load i32*, i32** %147, align 8
  %149 = getelementptr inbounds %"class.blink::BackgroundHTMLParser", %"class.blink::BackgroundHTMLParser"* %0, i64 0, i32 3, i32 2, i32 0, i32 1, i64 0
  %150 = bitcast i8* %149 to i32*
  %151 = icmp eq i32* %148, %150
  br i1 %151, label %154, label %152, !prof !5

152:                                              ; preds = %146
  %153 = bitcast %"class.WTF::Vector.330"* %141 to %"class.WTF::VectorBuffer.331"*
  tail call void @_ZN3WTF12VectorBufferIN5blink24HTMLTreeBuilderSimulator9NamespaceELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.331"* %153, i32* %148) #11
  br label %154

154:                                              ; preds = %146, %152
  store i32* null, i32** %147, align 8
  %155 = getelementptr inbounds %"class.blink::BackgroundHTMLParser", %"class.blink::BackgroundHTMLParser"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %156 = load %"class.blink::HTMLTokenizer"*, %"class.blink::HTMLTokenizer"** %155, align 8
  store %"class.blink::HTMLTokenizer"* null, %"class.blink::HTMLTokenizer"** %155, align 8
  %157 = icmp eq %"class.blink::HTMLTokenizer"* %156, null
  br i1 %157, label %160, label %158

158:                                              ; preds = %154
  tail call void @_ZN5blink13HTMLTokenizerD1Ev(%"class.blink::HTMLTokenizer"* nonnull %156) #11
  %159 = bitcast %"class.blink::HTMLTokenizer"* %156 to i8*
  tail call void @free(i8* %159) #11
  br label %160

160:                                              ; preds = %154, %158
  %161 = getelementptr inbounds %"class.blink::BackgroundHTMLParser", %"class.blink::BackgroundHTMLParser"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %162 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %161, align 8
  store %"class.blink::HTMLToken"* null, %"class.blink::HTMLToken"** %161, align 8
  %163 = icmp eq %"class.blink::HTMLToken"* %162, null
  br i1 %163, label %166, label %164

164:                                              ; preds = %160
  tail call void @_ZN5blink9HTMLTokenD2Ev(%"class.blink::HTMLToken"* nonnull %162) #11
  %165 = bitcast %"class.blink::HTMLToken"* %162 to i8*
  tail call void @free(i8* %165) #11
  br label %166

166:                                              ; preds = %160, %164
  %167 = getelementptr inbounds %"class.blink::BackgroundHTMLParser", %"class.blink::BackgroundHTMLParser"* %0, i64 0, i32 0
  tail call void @_ZN5blink25BackgroundHTMLInputStreamD2Ev(%"class.blink::BackgroundHTMLInputStream"* %167) #11
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"*) unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink25BackgroundHTMLInputStreamD2Ev(%"class.blink::BackgroundHTMLInputStream"*) unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::BackgroundHTMLInputStream", %"class.blink::BackgroundHTMLInputStream"* %0, i64 0, i32 2
  %3 = getelementptr inbounds %"class.WTF::Vector.1237", %"class.WTF::Vector.1237"* %2, i64 0, i32 0, i32 0, i32 0
  %4 = load %"struct.blink::BackgroundHTMLInputStream::Checkpoint"*, %"struct.blink::BackgroundHTMLInputStream::Checkpoint"** %3, align 8
  %5 = icmp eq %"struct.blink::BackgroundHTMLInputStream::Checkpoint"* %4, null
  br i1 %5, label %57, label %6, !prof !5

6:                                                ; preds = %1
  %7 = bitcast %"struct.blink::BackgroundHTMLInputStream::Checkpoint"* %4 to i8*
  %8 = getelementptr inbounds %"class.blink::BackgroundHTMLInputStream", %"class.blink::BackgroundHTMLInputStream"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %55, label %11, !prof !6

11:                                               ; preds = %6
  %12 = zext i32 %9 to i64
  %13 = getelementptr inbounds %"struct.blink::BackgroundHTMLInputStream::Checkpoint", %"struct.blink::BackgroundHTMLInputStream::Checkpoint"* %4, i64 %12
  br label %14

14:                                               ; preds = %11, %49
  %15 = phi %"struct.blink::BackgroundHTMLInputStream::Checkpoint"* [ %50, %49 ], [ %4, %11 ]
  %16 = getelementptr inbounds %"struct.blink::BackgroundHTMLInputStream::Checkpoint", %"struct.blink::BackgroundHTMLInputStream::Checkpoint"* %15, i64 0, i32 0, i32 5
  %17 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %16, i64 0, i32 0, i32 0, i32 0, i32 0
  %18 = load %"class.blink::SegmentedSubstring"*, %"class.blink::SegmentedSubstring"** %17, align 8
  %19 = icmp eq %"class.blink::SegmentedSubstring"* %18, null
  br i1 %19, label %32, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.blink::SegmentedSubstring"* %18 to i8*
  %22 = getelementptr inbounds %"struct.blink::BackgroundHTMLInputStream::Checkpoint", %"struct.blink::BackgroundHTMLInputStream::Checkpoint"* %15, i64 0, i32 0, i32 5, i32 1
  %23 = load i32, i32* %22, align 8
  %24 = getelementptr inbounds %"struct.blink::BackgroundHTMLInputStream::Checkpoint", %"struct.blink::BackgroundHTMLInputStream::Checkpoint"* %15, i64 0, i32 0, i32 5, i32 2
  %25 = load i32, i32* %24, align 4
  %26 = icmp eq i32 %23, %25
  br i1 %26, label %30, label %27

27:                                               ; preds = %20
  tail call void @_ZN3WTF5DequeIN5blink18SegmentedSubstringELj0ENS_18PartitionAllocatorEE10DestroyAllEv(%"class.WTF::Deque"* %16) #11
  %28 = bitcast %"class.WTF::Deque"* %16 to i8**
  %29 = load i8*, i8** %28, align 8
  br label %30

30:                                               ; preds = %27, %20
  %31 = phi i8* [ %29, %27 ], [ %21, %20 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %31) #11
  store %"class.blink::SegmentedSubstring"* null, %"class.blink::SegmentedSubstring"** %17, align 8
  br label %32

32:                                               ; preds = %30, %14
  %33 = getelementptr inbounds %"struct.blink::BackgroundHTMLInputStream::Checkpoint", %"struct.blink::BackgroundHTMLInputStream::Checkpoint"* %15, i64 0, i32 0, i32 0, i32 5, i32 0, i32 0
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %35, label %49, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  br i1 %40, label %43, label %45

43:                                               ; preds = %36
  %44 = add i32 %42, -1
  store i32 %44, i32* %41, align 4
  br label %45

45:                                               ; preds = %43, %36
  %46 = phi i32 [ %44, %43 ], [ %42, %36 ]
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %49

48:                                               ; preds = %45
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %34) #11
  br label %49

49:                                               ; preds = %48, %45, %32
  %50 = getelementptr inbounds %"struct.blink::BackgroundHTMLInputStream::Checkpoint", %"struct.blink::BackgroundHTMLInputStream::Checkpoint"* %15, i64 1
  %51 = icmp eq %"struct.blink::BackgroundHTMLInputStream::Checkpoint"* %50, %13
  br i1 %51, label %52, label %14

52:                                               ; preds = %49
  store i32 0, i32* %8, align 4
  %53 = bitcast %"class.WTF::Vector.1237"* %2 to i8**
  %54 = load i8*, i8** %53, align 8
  br label %55

55:                                               ; preds = %52, %6
  %56 = phi i8* [ %54, %52 ], [ %7, %6 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %56) #11
  store %"struct.blink::BackgroundHTMLInputStream::Checkpoint"* null, %"struct.blink::BackgroundHTMLInputStream::Checkpoint"** %3, align 8
  br label %57

57:                                               ; preds = %1, %55
  %58 = getelementptr inbounds %"class.blink::BackgroundHTMLInputStream", %"class.blink::BackgroundHTMLInputStream"* %0, i64 0, i32 1
  %59 = getelementptr inbounds %"class.WTF::Vector.836", %"class.WTF::Vector.836"* %58, i64 0, i32 0, i32 0, i32 0
  %60 = load %"class.WTF::String"*, %"class.WTF::String"** %59, align 8
  %61 = icmp eq %"class.WTF::String"* %60, null
  br i1 %61, label %96, label %62, !prof !5

62:                                               ; preds = %57
  %63 = bitcast %"class.WTF::String"* %60 to i8*
  %64 = getelementptr inbounds %"class.blink::BackgroundHTMLInputStream", %"class.blink::BackgroundHTMLInputStream"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %65 = load i32, i32* %64, align 4
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %94, label %67, !prof !6

67:                                               ; preds = %62
  %68 = zext i32 %65 to i64
  %69 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %60, i64 %68
  br label %70

70:                                               ; preds = %88, %67
  %71 = phi %"class.WTF::String"* [ %89, %88 ], [ %60, %67 ]
  %72 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %71, i64 0, i32 0, i32 0
  %73 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %72, align 8
  %74 = icmp eq %"class.WTF::StringImpl"* %73, null
  br i1 %74, label %88, label %75

75:                                               ; preds = %70
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = load atomic i32, i32* %76 monotonic, align 4
  %78 = and i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 0
  %81 = load i32, i32* %80, align 4
  br i1 %79, label %82, label %84

82:                                               ; preds = %75
  %83 = add i32 %81, -1
  store i32 %83, i32* %80, align 4
  br label %84

84:                                               ; preds = %82, %75
  %85 = phi i32 [ %83, %82 ], [ %81, %75 ]
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %88

87:                                               ; preds = %84
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %73) #11
  br label %88

88:                                               ; preds = %87, %84, %70
  %89 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %71, i64 1
  %90 = icmp eq %"class.WTF::String"* %89, %69
  br i1 %90, label %91, label %70

91:                                               ; preds = %88
  store i32 0, i32* %64, align 4
  %92 = bitcast %"class.WTF::Vector.836"* %58 to i8**
  %93 = load i8*, i8** %92, align 8
  br label %94

94:                                               ; preds = %91, %62
  %95 = phi i8* [ %93, %91 ], [ %63, %62 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %95) #11
  store %"class.WTF::String"* null, %"class.WTF::String"** %59, align 8
  br label %96

96:                                               ; preds = %57, %94
  %97 = getelementptr inbounds %"class.blink::BackgroundHTMLInputStream", %"class.blink::BackgroundHTMLInputStream"* %0, i64 0, i32 0, i32 5
  %98 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %97, i64 0, i32 0, i32 0, i32 0, i32 0
  %99 = load %"class.blink::SegmentedSubstring"*, %"class.blink::SegmentedSubstring"** %98, align 8
  %100 = icmp eq %"class.blink::SegmentedSubstring"* %99, null
  br i1 %100, label %113, label %101

101:                                              ; preds = %96
  %102 = bitcast %"class.blink::SegmentedSubstring"* %99 to i8*
  %103 = getelementptr inbounds %"class.blink::BackgroundHTMLInputStream", %"class.blink::BackgroundHTMLInputStream"* %0, i64 0, i32 0, i32 5, i32 1
  %104 = load i32, i32* %103, align 8
  %105 = getelementptr inbounds %"class.blink::BackgroundHTMLInputStream", %"class.blink::BackgroundHTMLInputStream"* %0, i64 0, i32 0, i32 5, i32 2
  %106 = load i32, i32* %105, align 4
  %107 = icmp eq i32 %104, %106
  br i1 %107, label %111, label %108

108:                                              ; preds = %101
  tail call void @_ZN3WTF5DequeIN5blink18SegmentedSubstringELj0ENS_18PartitionAllocatorEE10DestroyAllEv(%"class.WTF::Deque"* %97) #11
  %109 = bitcast %"class.WTF::Deque"* %97 to i8**
  %110 = load i8*, i8** %109, align 8
  br label %111

111:                                              ; preds = %108, %101
  %112 = phi i8* [ %110, %108 ], [ %102, %101 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %112) #11
  store %"class.blink::SegmentedSubstring"* null, %"class.blink::SegmentedSubstring"** %98, align 8
  br label %113

113:                                              ; preds = %111, %96
  %114 = getelementptr inbounds %"class.blink::BackgroundHTMLInputStream", %"class.blink::BackgroundHTMLInputStream"* %0, i64 0, i32 0, i32 0, i32 5, i32 0, i32 0
  %115 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %114, align 8
  %116 = icmp eq %"class.WTF::StringImpl"* %115, null
  br i1 %116, label %130, label %117

117:                                              ; preds = %113
  %118 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %115, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %119 = load atomic i32, i32* %118 monotonic, align 4
  %120 = and i32 %119, 2
  %121 = icmp eq i32 %120, 0
  %122 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %115, i64 0, i32 0
  %123 = load i32, i32* %122, align 4
  br i1 %121, label %124, label %126

124:                                              ; preds = %117
  %125 = add i32 %123, -1
  store i32 %125, i32* %122, align 4
  br label %126

126:                                              ; preds = %124, %117
  %127 = phi i32 [ %125, %124 ], [ %123, %117 ]
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %129, label %130

129:                                              ; preds = %126
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %115) #11
  br label %130

130:                                              ; preds = %113, %126, %129
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20BackgroundHTMLParser28AppendRawBytesFromMainThreadENSt3__110unique_ptrIN3WTF6VectorIcLj0ENS3_18PartitionAllocatorEEENS1_14default_deleteIS6_EEEE(%"class.blink::BackgroundHTMLParser"*, %"class.WTF::Vector"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::TimeTicks", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 76, i32 0), align 16
  %6 = and i8 %5, 25
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %14, label %8, !prof !5

8:                                                ; preds = %2
  %9 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #11
  %10 = bitcast %"class.base::TimeTicks"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #11
  %11 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %3, i64 0, i32 0, i32 0
  %12 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #11
  store i64 %12, i64* %11, align 8
  %13 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 76, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %9, %"class.base::TimeTicks"* nonnull dereferenceable(8) %3, %"class.base::trace_event::TraceArguments"* null, i32 0) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #11
  br label %14

14:                                               ; preds = %2, %8
  %15 = phi i64 [ -6148914691236517206, %2 ], [ %13, %8 ]
  %16 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %2 ], [ getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2, i64 0, i64 0), %8 ]
  %17 = phi i8* [ null, %2 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 76, i32 0), %8 ]
  %18 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #11
  %19 = getelementptr inbounds %"class.blink::BackgroundHTMLParser", %"class.blink::BackgroundHTMLParser"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %20 = load %"class.blink::TextResourceDecoder"*, %"class.blink::TextResourceDecoder"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 2
  %24 = load i32, i32* %23, align 4
  %25 = zext i32 %24 to i64
  %26 = call %"class.WTF::StringImpl"* @_ZN5blink19TextResourceDecoder6DecodeEPKcm(%"class.blink::TextResourceDecoder"* %20, i8* %22, i64 %25) #11
  %27 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %26, %"class.WTF::StringImpl"** %27, align 8
  call void @_ZN5blink20BackgroundHTMLParser14UpdateDocumentERKN3WTF6StringE(%"class.blink::BackgroundHTMLParser"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %4)
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %28, null
  br i1 %29, label %43, label %30

30:                                               ; preds = %14
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %39

37:                                               ; preds = %30
  %38 = add i32 %36, -1
  store i32 %38, i32* %35, align 4
  br label %39

39:                                               ; preds = %37, %30
  %40 = phi i32 [ %38, %37 ], [ %36, %30 ]
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %39
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %28) #11
  br label %43

43:                                               ; preds = %14, %39, %42
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #11
  %44 = icmp eq i8* %17, null
  br i1 %44, label %49, label %45

45:                                               ; preds = %43
  %46 = load i8, i8* %17, align 1
  %47 = icmp eq i8 %46, 0
  br i1 %47, label %49, label %48

48:                                               ; preds = %45
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %17, i8* %16, i64 %15) #11
  br label %49

49:                                               ; preds = %43, %45, %48
  %50 = icmp eq %"class.WTF::Vector"* %1, null
  br i1 %50, label %61, label %51

51:                                               ; preds = %49
  %52 = load i8*, i8** %21, align 8
  %53 = icmp eq i8* %52, null
  br i1 %53, label %59, label %54, !prof !5

54:                                               ; preds = %51
  %55 = load i32, i32* %23, align 4
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %58, label %57, !prof !6

57:                                               ; preds = %54
  store i32 0, i32* %23, align 4
  br label %58

58:                                               ; preds = %57, %54
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %52) #11
  store i8* null, i8** %21, align 8
  br label %59

59:                                               ; preds = %58, %51
  %60 = bitcast %"class.WTF::Vector"* %1 to i8*
  call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %60) #11
  br label %61

61:                                               ; preds = %49, %59
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20BackgroundHTMLParser14UpdateDocumentERKN3WTF6StringE(%"class.blink::BackgroundHTMLParser"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::DocumentEncodingData", align 8
  %4 = bitcast %"class.blink::DocumentEncodingData"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #11
  %5 = getelementptr inbounds %"class.blink::DocumentEncodingData", %"class.blink::DocumentEncodingData"* %3, i64 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.blink::DocumentEncodingData", %"class.blink::DocumentEncodingData"* %3, i64 0, i32 2
  %7 = getelementptr inbounds %"class.blink::BackgroundHTMLParser", %"class.blink::BackgroundHTMLParser"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %8 = bitcast %"class.blink::DocumentEncodingData"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false)
  %9 = load %"class.blink::TextResourceDecoder"*, %"class.blink::TextResourceDecoder"** %7, align 8
  call void @_ZN5blink20DocumentEncodingDataC1ERKNS_19TextResourceDecoderE(%"class.blink::DocumentEncodingData"* nonnull %3, %"class.blink::TextResourceDecoder"* dereferenceable(208) %9) #11
  %10 = getelementptr inbounds %"class.blink::BackgroundHTMLParser", %"class.blink::BackgroundHTMLParser"* %0, i64 0, i32 11
  %11 = load i8*, i8** %5, align 8
  %12 = getelementptr inbounds %"class.blink::DocumentEncodingData", %"class.blink::DocumentEncodingData"* %10, i64 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = icmp eq i8* %11, %13
  br i1 %14, label %15, label %30

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.blink::DocumentEncodingData", %"class.blink::DocumentEncodingData"* %3, i64 0, i32 1
  %17 = load i8, i8* %16, align 8, !range !7
  %18 = icmp ne i8 %17, 0
  %19 = getelementptr inbounds %"class.blink::BackgroundHTMLParser", %"class.blink::BackgroundHTMLParser"* %0, i64 0, i32 11, i32 1
  %20 = load i8, i8* %19, align 8, !range !7
  %21 = icmp ne i8 %20, 0
  %22 = xor i1 %18, %21
  br i1 %22, label %30, label %23

23:                                               ; preds = %15
  %24 = load i8, i8* %6, align 1, !range !7
  %25 = icmp ne i8 %24, 0
  %26 = getelementptr inbounds %"class.blink::BackgroundHTMLParser", %"class.blink::BackgroundHTMLParser"* %0, i64 0, i32 11, i32 2
  %27 = load i8, i8* %26, align 1, !range !7
  %28 = icmp ne i8 %27, 0
  %29 = xor i1 %25, %28
  br i1 %29, label %30, label %36

30:                                               ; preds = %2, %15, %23
  %31 = bitcast %"class.blink::DocumentEncodingData"* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %31, i8* nonnull align 8 %4, i64 10, i1 false)
  %32 = getelementptr inbounds %"class.blink::BackgroundHTMLParser", %"class.blink::BackgroundHTMLParser"* %0, i64 0, i32 5, i32 0, i32 0
  %33 = load %"class.blink::HTMLDocumentParser"*, %"class.blink::HTMLDocumentParser"** %32, align 8
  %34 = icmp eq %"class.blink::HTMLDocumentParser"* %33, null
  br i1 %34, label %36, label %35

35:                                               ; preds = %30
  call void @_ZN5blink18HTMLDocumentParser42DidReceiveEncodingDataFromBackgroundParserERKNS_20DocumentEncodingDataE(%"class.blink::HTMLDocumentParser"* nonnull %33, %"class.blink::DocumentEncodingData"* nonnull dereferenceable(16) %3) #11
  br label %36

36:                                               ; preds = %30, %35, %23
  %37 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %39, label %46, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 1
  %42 = load i32, i32* %41, align 4
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %46, label %44

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"class.blink::BackgroundHTMLParser", %"class.blink::BackgroundHTMLParser"* %0, i64 0, i32 0
  call void @_ZN5blink25BackgroundHTMLInputStream6AppendERKN3WTF6StringE(%"class.blink::BackgroundHTMLInputStream"* %45, %"class.WTF::String"* dereferenceable(8) %1) #11
  call void @_ZN5blink20BackgroundHTMLParser13PumpTokenizerEv(%"class.blink::BackgroundHTMLParser"* %0) #11
  br label %46

46:                                               ; preds = %36, %40, %44
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #11
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN5blink19TextResourceDecoder6DecodeEPKcm(%"class.blink::TextResourceDecoder"*, i8*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20BackgroundHTMLParser18AppendDecodedBytesERKN3WTF6StringE(%"class.blink::BackgroundHTMLParser"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::BackgroundHTMLParser", %"class.blink::BackgroundHTMLParser"* %0, i64 0, i32 0
  tail call void @_ZN5blink25BackgroundHTMLInputStream6AppendERKN3WTF6StringE(%"class.blink::BackgroundHTMLInputStream"* %3, %"class.WTF::String"* dereferenceable(8) %1) #11
  tail call void @_ZN5blink20BackgroundHTMLParser13PumpTokenizerEv(%"class.blink::BackgroundHTMLParser"* %0)
  ret void
}

declare void @_ZN5blink25BackgroundHTMLInputStream6AppendERKN3WTF6StringE(%"class.blink::BackgroundHTMLInputStream"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20BackgroundHTMLParser13PumpTokenizerEv(%"class.blink::BackgroundHTMLParser"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::TimeTicks", align 8
  %3 = alloca %"class.WTF::TextPosition", align 4
  %4 = alloca %"class.blink::CompactHTMLToken", align 8
  %5 = alloca i8, align 1
  %6 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 76, i32 0), align 16
  %7 = and i8 %6, 25
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %15, label %9, !prof !5

9:                                                ; preds = %1
  %10 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #11
  %11 = bitcast %"class.base::TimeTicks"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #11
  %12 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %2, i64 0, i32 0, i32 0
  %13 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #11
  store i64 %13, i64* %12, align 8
  %14 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 76, i32 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.3, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %10, %"class.base::TimeTicks"* nonnull dereferenceable(8) %2, %"class.base::trace_event::TraceArguments"* null, i32 0) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #11
  br label %15

15:                                               ; preds = %1, %9
  %16 = phi i64 [ -6148914691236517206, %1 ], [ %14, %9 ]
  %17 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %1 ], [ getelementptr inbounds ([36 x i8], [36 x i8]* @.str.3, i64 0, i64 0), %9 ]
  %18 = phi i8* [ null, %1 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 76, i32 0), %9 ]
  %19 = getelementptr inbounds %"class.blink::BackgroundHTMLParser", %"class.blink::BackgroundHTMLParser"* %0, i64 0, i32 0, i32 5
  %20 = load i32, i32* %19, align 8
  %21 = icmp ugt i32 %20, 10000
  br i1 %21, label %197, label %22

22:                                               ; preds = %15
  %23 = getelementptr inbounds %"class.blink::BackgroundHTMLParser", %"class.blink::BackgroundHTMLParser"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %24 = load %"class.blink::HTMLTokenizer"*, %"class.blink::HTMLTokenizer"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::BackgroundHTMLParser", %"class.blink::BackgroundHTMLParser"* %0, i64 0, i32 0, i32 0
  %26 = getelementptr inbounds %"class.blink::BackgroundHTMLParser", %"class.blink::BackgroundHTMLParser"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %27 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %26, align 8
  %28 = call zeroext i1 @_ZN5blink13HTMLTokenizer9NextTokenERNS_15SegmentedStringERNS_9HTMLTokenE(%"class.blink::HTMLTokenizer"* %24, %"class.blink::SegmentedString"* dereferenceable(88) %25, %"class.blink::HTMLToken"* dereferenceable(2512) %27) #11
  br i1 %28, label %29, label %196

29:                                               ; preds = %22
  %30 = bitcast %"class.WTF::TextPosition"* %3 to i8*
  %31 = getelementptr inbounds %"class.WTF::TextPosition", %"class.WTF::TextPosition"* %3, i64 0, i32 0, i32 0
  %32 = getelementptr inbounds %"class.WTF::TextPosition", %"class.WTF::TextPosition"* %3, i64 0, i32 1, i32 0
  %33 = getelementptr inbounds %"class.blink::CompactHTMLToken", %"class.blink::CompactHTMLToken"* %4, i64 0, i32 0
  %34 = getelementptr inbounds %"class.blink::BackgroundHTMLParser", %"class.blink::BackgroundHTMLParser"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %35 = getelementptr inbounds %"class.blink::BackgroundHTMLParser", %"class.blink::BackgroundHTMLParser"* %0, i64 0, i32 7
  %36 = getelementptr inbounds %"class.blink::BackgroundHTMLParser", %"class.blink::BackgroundHTMLParser"* %0, i64 0, i32 8
  %37 = getelementptr inbounds %"class.blink::BackgroundHTMLParser", %"class.blink::BackgroundHTMLParser"* %0, i64 0, i32 3
  %38 = getelementptr inbounds %"class.blink::BackgroundHTMLParser", %"class.blink::BackgroundHTMLParser"* %0, i64 0, i32 14
  %39 = getelementptr inbounds %"class.blink::BackgroundHTMLParser", %"class.blink::BackgroundHTMLParser"* %0, i64 0, i32 6
  %40 = getelementptr inbounds %"class.blink::BackgroundHTMLParser", %"class.blink::BackgroundHTMLParser"* %0, i64 0, i32 6, i32 0, i32 0, i32 2
  %41 = getelementptr inbounds %"class.blink::BackgroundHTMLParser", %"class.blink::BackgroundHTMLParser"* %0, i64 0, i32 6, i32 0, i32 0, i32 1
  %42 = getelementptr inbounds %"class.WTF::Vector.314", %"class.WTF::Vector.314"* %39, i64 0, i32 0, i32 0, i32 0
  %43 = getelementptr inbounds %"class.blink::CompactHTMLToken", %"class.blink::CompactHTMLToken"* %4, i64 0, i32 1, i32 0, i32 0
  %44 = getelementptr inbounds %"class.blink::CompactHTMLToken", %"class.blink::CompactHTMLToken"* %4, i64 0, i32 2
  %45 = getelementptr inbounds %"class.blink::CompactHTMLToken", %"class.blink::CompactHTMLToken"* %4, i64 0, i32 3
  %46 = bitcast %"class.WTF::TextPosition"* %45 to i64*
  %47 = getelementptr inbounds %"class.blink::BackgroundHTMLParser", %"class.blink::BackgroundHTMLParser"* %0, i64 0, i32 13
  %48 = getelementptr inbounds %"class.WTF::Vector.317", %"class.WTF::Vector.317"* %44, i64 0, i32 0, i32 0, i32 0
  %49 = getelementptr inbounds %"class.blink::CompactHTMLToken", %"class.blink::CompactHTMLToken"* %4, i64 0, i32 2, i32 0, i32 0, i32 2
  %50 = bitcast %"class.WTF::Vector.317"* %44 to i8**
  br label %51

51:                                               ; preds = %29, %192
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #11
  store i32 -1431655766, i32* %31, align 4
  store i32 -1431655766, i32* %32, align 4
  %52 = call i32 @_ZNK5blink15SegmentedString11CurrentLineEv(%"class.blink::SegmentedString"* %25) #11
  %53 = call i32 @_ZNK5blink15SegmentedString13CurrentColumnEv(%"class.blink::SegmentedString"* %25) #11
  store i32 %52, i32* %31, align 4
  store i32 %53, i32* %32, align 4
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %33) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %33, i8 -86, i64 40, i1 false)
  %54 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %26, align 8
  call void @_ZN5blink16CompactHTMLTokenC1EPKNS_9HTMLTokenERKN3WTF12TextPositionE(%"class.blink::CompactHTMLToken"* nonnull %4, %"class.blink::HTMLToken"* %54, %"class.WTF::TextPosition"* nonnull dereferenceable(8) %3) #11
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #11
  store i8 0, i8* %5, align 1
  %55 = load %"class.blink::TokenPreloadScanner"*, %"class.blink::TokenPreloadScanner"** %34, align 8
  call void @_ZN5blink19TokenPreloadScanner4ScanERKNS_16CompactHTMLTokenERKNS_15SegmentedStringERN3WTF6VectorINSt3__110unique_ptrINS_14PreloadRequestENS9_14default_deleteISB_EEEELj0ENS7_18PartitionAllocatorEEEPN4absl8optionalINS_19ViewportDescriptionEEEPb(%"class.blink::TokenPreloadScanner"* %55, %"class.blink::CompactHTMLToken"* nonnull dereferenceable(40) %4, %"class.blink::SegmentedString"* dereferenceable(88) %25, %"class.WTF::Vector.83"* dereferenceable(16) %35, %"class.absl::optional"* %36, i8* nonnull %5) #11
  %56 = load %"class.blink::HTMLTokenizer"*, %"class.blink::HTMLTokenizer"** %23, align 8
  %57 = call i32 @_ZN5blink24HTMLTreeBuilderSimulator8SimulateERKNS_16CompactHTMLTokenEPNS_13HTMLTokenizerE(%"class.blink::HTMLTreeBuilderSimulator"* %37, %"class.blink::CompactHTMLToken"* nonnull dereferenceable(40) %4, %"class.blink::HTMLTokenizer"* %56) #11
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %60

59:                                               ; preds = %51
  call void @_ZN5blink20BackgroundHTMLParser21EnqueueTokenizedChunkEv(%"class.blink::BackgroundHTMLParser"* %0)
  store i8 1, i8* %38, align 4
  br label %60

60:                                               ; preds = %59, %51
  %61 = load i32, i32* %40, align 4
  %62 = load i32, i32* %41, align 8
  %63 = icmp eq i32 %61, %62
  br i1 %63, label %98, label %64, !prof !6

64:                                               ; preds = %60
  %65 = load %"class.blink::CompactHTMLToken"*, %"class.blink::CompactHTMLToken"** %42, align 8
  %66 = zext i32 %61 to i64
  %67 = getelementptr inbounds %"class.blink::CompactHTMLToken", %"class.blink::CompactHTMLToken"* %65, i64 %66, i32 0
  %68 = load i8, i8* %33, align 8
  store i8 %68, i8* %67, align 8
  %69 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %43, align 8
  %70 = getelementptr inbounds i8, i8* %67, i64 8
  %71 = bitcast i8* %70 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %69, %"class.WTF::StringImpl"** %71, align 8
  %72 = icmp eq %"class.WTF::StringImpl"* %69, null
  br i1 %72, label %90, label %73

73:                                               ; preds = %64
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %69, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = load atomic i32, i32* %74 monotonic, align 4
  %76 = and i32 %75, 2
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %90

78:                                               ; preds = %73
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %69, i64 0, i32 0
  %80 = load i32, i32* %79, align 4
  %81 = zext i32 %80 to i33
  %82 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %81, i33 1) #11
  %83 = extractvalue { i33, i1 } %82, 1
  %84 = extractvalue { i33, i1 } %82, 0
  %85 = icmp slt i33 %84, 0
  %86 = or i1 %83, %85
  br i1 %86, label %87, label %88, !prof !6

87:                                               ; preds = %78
  call void @llvm.trap() #11
  unreachable

88:                                               ; preds = %78
  %89 = trunc i33 %84 to i32
  store i32 %89, i32* %79, align 4
  br label %90

90:                                               ; preds = %88, %73, %64
  %91 = getelementptr inbounds i8, i8* %67, i64 16
  %92 = bitcast i8* %91 to %"class.WTF::Vector.317"*
  call void @_ZN3WTF6VectorIN5blink16CompactHTMLToken9AttributeELj0ENS_18PartitionAllocatorEEC2ERKS5_(%"class.WTF::Vector.317"* %92, %"class.WTF::Vector.317"* dereferenceable(16) %44) #11
  %93 = getelementptr inbounds i8, i8* %67, i64 32
  %94 = bitcast i8* %93 to i64*
  %95 = load i64, i64* %46, align 8
  store i64 %95, i64* %94, align 8
  %96 = load i32, i32* %40, align 4
  %97 = add i32 %96, 1
  store i32 %97, i32* %40, align 4
  br label %99

98:                                               ; preds = %60
  call void @_ZN3WTF6VectorIN5blink16CompactHTMLTokenELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS2_EEvOT_(%"class.WTF::Vector.314"* %39, %"class.blink::CompactHTMLToken"* nonnull dereferenceable(40) %4) #11
  br label %99

99:                                               ; preds = %90, %98
  %100 = load i8, i8* %5, align 1, !range !7
  %101 = icmp eq i8 %100, 0
  br i1 %101, label %105, label %102

102:                                              ; preds = %99
  %103 = load i32, i32* %40, align 4
  %104 = add i32 %103, -1
  store i32 %104, i32* %47, align 8
  br label %105

105:                                              ; preds = %99, %102
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #11
  %106 = load %"struct.blink::CompactHTMLToken::Attribute"*, %"struct.blink::CompactHTMLToken::Attribute"** %48, align 8
  %107 = icmp eq %"struct.blink::CompactHTMLToken::Attribute"* %106, null
  br i1 %107, label %157, label %108, !prof !5

108:                                              ; preds = %105
  %109 = bitcast %"struct.blink::CompactHTMLToken::Attribute"* %106 to i8*
  %110 = load i32, i32* %49, align 4
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %155, label %112, !prof !6

112:                                              ; preds = %108
  %113 = zext i32 %110 to i64
  %114 = getelementptr inbounds %"struct.blink::CompactHTMLToken::Attribute", %"struct.blink::CompactHTMLToken::Attribute"* %106, i64 %113
  br label %115

115:                                              ; preds = %150, %112
  %116 = phi %"struct.blink::CompactHTMLToken::Attribute"* [ %151, %150 ], [ %106, %112 ]
  %117 = getelementptr inbounds %"struct.blink::CompactHTMLToken::Attribute", %"struct.blink::CompactHTMLToken::Attribute"* %116, i64 0, i32 1, i32 0, i32 0
  %118 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %117, align 8
  %119 = icmp eq %"class.WTF::StringImpl"* %118, null
  br i1 %119, label %133, label %120

120:                                              ; preds = %115
  %121 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %118, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %122 = load atomic i32, i32* %121 monotonic, align 4
  %123 = and i32 %122, 2
  %124 = icmp eq i32 %123, 0
  %125 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %118, i64 0, i32 0
  %126 = load i32, i32* %125, align 4
  br i1 %124, label %127, label %129

127:                                              ; preds = %120
  %128 = add i32 %126, -1
  store i32 %128, i32* %125, align 4
  br label %129

129:                                              ; preds = %127, %120
  %130 = phi i32 [ %128, %127 ], [ %126, %120 ]
  %131 = icmp eq i32 %130, 0
  br i1 %131, label %132, label %133

132:                                              ; preds = %129
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %118) #11
  br label %133

133:                                              ; preds = %132, %129, %115
  %134 = getelementptr inbounds %"struct.blink::CompactHTMLToken::Attribute", %"struct.blink::CompactHTMLToken::Attribute"* %116, i64 0, i32 0, i32 0, i32 0
  %135 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %134, align 8
  %136 = icmp eq %"class.WTF::StringImpl"* %135, null
  br i1 %136, label %150, label %137

137:                                              ; preds = %133
  %138 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %135, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %139 = load atomic i32, i32* %138 monotonic, align 4
  %140 = and i32 %139, 2
  %141 = icmp eq i32 %140, 0
  %142 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %135, i64 0, i32 0
  %143 = load i32, i32* %142, align 4
  br i1 %141, label %144, label %146

144:                                              ; preds = %137
  %145 = add i32 %143, -1
  store i32 %145, i32* %142, align 4
  br label %146

146:                                              ; preds = %144, %137
  %147 = phi i32 [ %145, %144 ], [ %143, %137 ]
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %149, label %150

149:                                              ; preds = %146
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %135) #11
  br label %150

150:                                              ; preds = %149, %146, %133
  %151 = getelementptr inbounds %"struct.blink::CompactHTMLToken::Attribute", %"struct.blink::CompactHTMLToken::Attribute"* %116, i64 1
  %152 = icmp eq %"struct.blink::CompactHTMLToken::Attribute"* %151, %114
  br i1 %152, label %153, label %115

153:                                              ; preds = %150
  store i32 0, i32* %49, align 4
  %154 = load i8*, i8** %50, align 8
  br label %155

155:                                              ; preds = %153, %108
  %156 = phi i8* [ %154, %153 ], [ %109, %108 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %156) #11
  store %"struct.blink::CompactHTMLToken::Attribute"* null, %"struct.blink::CompactHTMLToken::Attribute"** %48, align 8
  br label %157

157:                                              ; preds = %155, %105
  %158 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %43, align 8
  %159 = icmp eq %"class.WTF::StringImpl"* %158, null
  br i1 %159, label %173, label %160

160:                                              ; preds = %157
  %161 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %158, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %162 = load atomic i32, i32* %161 monotonic, align 4
  %163 = and i32 %162, 2
  %164 = icmp eq i32 %163, 0
  %165 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %158, i64 0, i32 0
  %166 = load i32, i32* %165, align 4
  br i1 %164, label %167, label %169

167:                                              ; preds = %160
  %168 = add i32 %166, -1
  store i32 %168, i32* %165, align 4
  br label %169

169:                                              ; preds = %167, %160
  %170 = phi i32 [ %168, %167 ], [ %166, %160 ]
  %171 = icmp eq i32 %170, 0
  br i1 %171, label %172, label %173

172:                                              ; preds = %169
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %158) #11
  br label %173

173:                                              ; preds = %157, %169, %172
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %33) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #11
  %174 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %26, align 8
  %175 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %174, i64 0, i32 0
  store i32 0, i32* %175, align 8
  %176 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %174, i64 0, i32 1, i32 0
  store i32 0, i32* %176, align 4
  %177 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %174, i64 0, i32 2
  store i32 0, i32* %177, align 4
  %178 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %174, i64 0, i32 3
  %179 = bitcast %class.LiteralBuffer* %178 to i64*
  %180 = load i64, i64* %179, align 8
  %181 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %174, i64 0, i32 3, i32 1
  %182 = bitcast i16** %181 to i64*
  store i64 %180, i64* %182, align 8
  %183 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %174, i64 0, i32 4
  store i16 0, i16* %183, align 8
  %184 = add i32 %57, -1
  %185 = icmp ult i32 %184, 5
  br i1 %185, label %189, label %186

186:                                              ; preds = %173
  %187 = load i32, i32* %40, align 4
  %188 = icmp ugt i32 %187, 999
  br i1 %188, label %189, label %192

189:                                              ; preds = %173, %186
  call void @_ZN5blink20BackgroundHTMLParser21EnqueueTokenizedChunkEv(%"class.blink::BackgroundHTMLParser"* %0)
  %190 = load i32, i32* %19, align 8
  %191 = icmp ugt i32 %190, 10000
  br i1 %191, label %196, label %192

192:                                              ; preds = %189, %186
  %193 = load %"class.blink::HTMLTokenizer"*, %"class.blink::HTMLTokenizer"** %23, align 8
  %194 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %26, align 8
  %195 = call zeroext i1 @_ZN5blink13HTMLTokenizer9NextTokenERNS_15SegmentedStringERNS_9HTMLTokenE(%"class.blink::HTMLTokenizer"* %193, %"class.blink::SegmentedString"* dereferenceable(88) %25, %"class.blink::HTMLToken"* dereferenceable(2512) %194) #11
  br i1 %195, label %51, label %196

196:                                              ; preds = %192, %189, %22
  call void @_ZN5blink20BackgroundHTMLParser21EnqueueTokenizedChunkEv(%"class.blink::BackgroundHTMLParser"* %0)
  br label %197

197:                                              ; preds = %15, %196
  %198 = icmp eq i8* %18, null
  br i1 %198, label %203, label %199

199:                                              ; preds = %197
  %200 = load i8, i8* %18, align 1
  %201 = icmp eq i8 %200, 0
  br i1 %201, label %203, label %202

202:                                              ; preds = %199
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %18, i8* %17, i64 %16) #11
  br label %203

203:                                              ; preds = %197, %199, %202
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20BackgroundHTMLParser10SetDecoderENSt3__110unique_ptrINS_19TextResourceDecoderENS1_14default_deleteIS3_EEEE(%"class.blink::BackgroundHTMLParser"* nocapture, %"class.blink::TextResourceDecoder"*) local_unnamed_addr #0 align 2 {
  %3 = ptrtoint %"class.blink::TextResourceDecoder"* %1 to i64
  %4 = getelementptr inbounds %"class.blink::BackgroundHTMLParser", %"class.blink::BackgroundHTMLParser"* %0, i64 0, i32 10
  %5 = getelementptr inbounds %"class.std::__1::unique_ptr.2", %"class.std::__1::unique_ptr.2"* %4, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::TextResourceDecoder"*, %"class.blink::TextResourceDecoder"** %5, align 8
  %7 = bitcast %"class.std::__1::unique_ptr.2"* %4 to i64*
  store i64 %3, i64* %7, align 8
  %8 = icmp eq %"class.blink::TextResourceDecoder"* %6, null
  br i1 %8, label %11, label %9

9:                                                ; preds = %2
  tail call void @_ZN5blink19TextResourceDecoderD1Ev(%"class.blink::TextResourceDecoder"* nonnull %6) #11
  %10 = bitcast %"class.blink::TextResourceDecoder"* %6 to i8*
  tail call void @free(i8* %10) #11
  br label %11

11:                                               ; preds = %9, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20BackgroundHTMLParser5FlushEv(%"class.blink::BackgroundHTMLParser"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = bitcast %"class.WTF::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #11
  %4 = getelementptr inbounds %"class.blink::BackgroundHTMLParser", %"class.blink::BackgroundHTMLParser"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %5 = load %"class.blink::TextResourceDecoder"*, %"class.blink::TextResourceDecoder"** %4, align 8
  %6 = tail call %"class.WTF::StringImpl"* @_ZN5blink19TextResourceDecoder5FlushEv(%"class.blink::TextResourceDecoder"* %5) #11
  %7 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %6, %"class.WTF::StringImpl"** %7, align 8
  call void @_ZN5blink20BackgroundHTMLParser14UpdateDocumentERKN3WTF6StringE(%"class.blink::BackgroundHTMLParser"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %2)
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %9, label %23, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = and i32 %12, 2
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %16 = load i32, i32* %15, align 4
  br i1 %14, label %17, label %19

17:                                               ; preds = %10
  %18 = add i32 %16, -1
  store i32 %18, i32* %15, align 4
  br label %19

19:                                               ; preds = %17, %10
  %20 = phi i32 [ %18, %17 ], [ %16, %10 ]
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %23

22:                                               ; preds = %19
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %8) #11
  br label %23

23:                                               ; preds = %1, %19, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #11
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN5blink19TextResourceDecoder5FlushEv(%"class.blink::TextResourceDecoder"*) local_unnamed_addr #3

declare void @_ZN5blink20DocumentEncodingDataC1ERKNS_19TextResourceDecoderE(%"class.blink::DocumentEncodingData"*, %"class.blink::TextResourceDecoder"* dereferenceable(208)) unnamed_addr #3

declare void @_ZN5blink18HTMLDocumentParser42DidReceiveEncodingDataFromBackgroundParserERKNS_20DocumentEncodingDataE(%"class.blink::HTMLDocumentParser"*, %"class.blink::DocumentEncodingData"* dereferenceable(16)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20BackgroundHTMLParser10ResumeFromENSt3__110unique_ptrINS0_10CheckpointENS1_14default_deleteIS3_EEEE(%"class.blink::BackgroundHTMLParser"*, %"struct.blink::BackgroundHTMLParser::Checkpoint"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::BackgroundHTMLParser", %"class.blink::BackgroundHTMLParser"* %0, i64 0, i32 5, i32 0
  %4 = getelementptr inbounds %"struct.blink::BackgroundHTMLParser::Checkpoint", %"struct.blink::BackgroundHTMLParser::Checkpoint"* %1, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.blink::HTMLDocumentParser"*, %"class.blink::HTMLDocumentParser"** %4, align 8
  tail call void @_ZN5blink14PersistentBaseINS_18HTMLDocumentParserELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EE12AssignUnsafeEPS1_(%"class.blink::PersistentBase"* %3, %"class.blink::HTMLDocumentParser"* %5) #11
  %6 = getelementptr inbounds %"struct.blink::BackgroundHTMLParser::Checkpoint", %"struct.blink::BackgroundHTMLParser::Checkpoint"* %1, i64 0, i32 1
  %7 = getelementptr inbounds %"class.blink::BackgroundHTMLParser", %"class.blink::BackgroundHTMLParser"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.std::__1::unique_ptr.36", %"class.std::__1::unique_ptr.36"* %6, i64 0, i32 0, i32 0, i32 0
  %9 = bitcast %"class.std::__1::unique_ptr.36"* %6 to i64*
  %10 = load i64, i64* %9, align 8
  store %"class.blink::HTMLToken"* null, %"class.blink::HTMLToken"** %8, align 8
  %11 = getelementptr inbounds %"class.std::__1::unique_ptr.36", %"class.std::__1::unique_ptr.36"* %7, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %11, align 8
  %13 = bitcast %"class.std::__1::unique_ptr.36"* %7 to i64*
  store i64 %10, i64* %13, align 8
  %14 = icmp eq %"class.blink::HTMLToken"* %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %2
  tail call void @_ZN5blink9HTMLTokenD2Ev(%"class.blink::HTMLToken"* nonnull %12) #11
  %16 = bitcast %"class.blink::HTMLToken"* %12 to i8*
  tail call void @free(i8* %16) #11
  br label %17

17:                                               ; preds = %2, %15
  %18 = getelementptr inbounds %"struct.blink::BackgroundHTMLParser::Checkpoint", %"struct.blink::BackgroundHTMLParser::Checkpoint"* %1, i64 0, i32 2
  %19 = getelementptr inbounds %"class.blink::BackgroundHTMLParser", %"class.blink::BackgroundHTMLParser"* %0, i64 0, i32 2
  %20 = getelementptr inbounds %"class.std::__1::unique_ptr.59", %"class.std::__1::unique_ptr.59"* %18, i64 0, i32 0, i32 0, i32 0
  %21 = bitcast %"class.std::__1::unique_ptr.59"* %18 to i64*
  %22 = load i64, i64* %21, align 8
  store %"class.blink::HTMLTokenizer"* null, %"class.blink::HTMLTokenizer"** %20, align 8
  %23 = getelementptr inbounds %"class.std::__1::unique_ptr.59", %"class.std::__1::unique_ptr.59"* %19, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::HTMLTokenizer"*, %"class.blink::HTMLTokenizer"** %23, align 8
  %25 = bitcast %"class.std::__1::unique_ptr.59"* %19 to i64*
  store i64 %22, i64* %25, align 8
  %26 = icmp eq %"class.blink::HTMLTokenizer"* %24, null
  br i1 %26, label %29, label %27

27:                                               ; preds = %17
  tail call void @_ZN5blink13HTMLTokenizerD1Ev(%"class.blink::HTMLTokenizer"* nonnull %24) #11
  %28 = bitcast %"class.blink::HTMLTokenizer"* %24 to i8*
  tail call void @free(i8* %28) #11
  br label %29

29:                                               ; preds = %17, %27
  %30 = getelementptr inbounds %"struct.blink::BackgroundHTMLParser::Checkpoint", %"struct.blink::BackgroundHTMLParser::Checkpoint"* %1, i64 0, i32 3
  %31 = getelementptr inbounds %"class.blink::BackgroundHTMLParser", %"class.blink::BackgroundHTMLParser"* %0, i64 0, i32 3, i32 2
  %32 = tail call dereferenceable(24) %"class.WTF::Vector.330"* @_ZN3WTF6VectorIN5blink24HTMLTreeBuilderSimulator9NamespaceELj1ENS_18PartitionAllocatorEEaSERKS5_(%"class.WTF::Vector.330"* %31, %"class.WTF::Vector.330"* dereferenceable(24) %30) #11
  %33 = getelementptr inbounds %"class.blink::BackgroundHTMLParser", %"class.blink::BackgroundHTMLParser"* %0, i64 0, i32 0
  %34 = getelementptr inbounds %"struct.blink::BackgroundHTMLParser::Checkpoint", %"struct.blink::BackgroundHTMLParser::Checkpoint"* %1, i64 0, i32 4
  %35 = load i32, i32* %34, align 8
  %36 = getelementptr inbounds %"struct.blink::BackgroundHTMLParser::Checkpoint", %"struct.blink::BackgroundHTMLParser::Checkpoint"* %1, i64 0, i32 6
  tail call void @_ZN5blink25BackgroundHTMLInputStream8RewindToEjRKN3WTF6StringE(%"class.blink::BackgroundHTMLInputStream"* %33, i32 %35, %"class.WTF::String"* dereferenceable(8) %36) #11
  %37 = getelementptr inbounds %"class.blink::BackgroundHTMLParser", %"class.blink::BackgroundHTMLParser"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %38 = load %"class.blink::TokenPreloadScanner"*, %"class.blink::TokenPreloadScanner"** %37, align 8
  %39 = getelementptr inbounds %"struct.blink::BackgroundHTMLParser::Checkpoint", %"struct.blink::BackgroundHTMLParser::Checkpoint"* %1, i64 0, i32 5
  %40 = load i32, i32* %39, align 4
  tail call void @_ZN5blink19TokenPreloadScanner8RewindToEj(%"class.blink::TokenPreloadScanner"* %38, i32 %40) #11
  %41 = getelementptr inbounds %"class.blink::BackgroundHTMLParser", %"class.blink::BackgroundHTMLParser"* %0, i64 0, i32 14
  store i8 0, i8* %41, align 4
  tail call void @_ZN5blink20BackgroundHTMLParser13PumpTokenizerEv(%"class.blink::BackgroundHTMLParser"* %0)
  %42 = icmp eq %"struct.blink::BackgroundHTMLParser::Checkpoint"* %1, null
  br i1 %42, label %45, label %43

43:                                               ; preds = %29
  tail call void @_ZN5blink20BackgroundHTMLParser10CheckpointD2Ev(%"struct.blink::BackgroundHTMLParser::Checkpoint"* nonnull %1) #11
  %44 = bitcast %"struct.blink::BackgroundHTMLParser::Checkpoint"* %1 to i8*
  tail call void @free(i8* %44) #11
  br label %45

45:                                               ; preds = %29, %43
  ret void
}

declare void @_ZN5blink25BackgroundHTMLInputStream8RewindToEjRKN3WTF6StringE(%"class.blink::BackgroundHTMLInputStream"*, i32, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #3

declare void @_ZN5blink19TokenPreloadScanner8RewindToEj(%"class.blink::TokenPreloadScanner"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20BackgroundHTMLParser26StartedChunkWithCheckpointEj(%"class.blink::BackgroundHTMLParser"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::BackgroundHTMLParser", %"class.blink::BackgroundHTMLParser"* %0, i64 0, i32 0
  tail call void @_ZN5blink25BackgroundHTMLInputStream27InvalidateCheckpointsBeforeEj(%"class.blink::BackgroundHTMLInputStream"* %3, i32 %1) #11
  tail call void @_ZN5blink20BackgroundHTMLParser13PumpTokenizerEv(%"class.blink::BackgroundHTMLParser"* %0)
  ret void
}

declare void @_ZN5blink25BackgroundHTMLInputStream27InvalidateCheckpointsBeforeEj(%"class.blink::BackgroundHTMLInputStream"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20BackgroundHTMLParser6FinishEv(%"class.blink::BackgroundHTMLParser"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = getelementptr inbounds %"class.blink::BackgroundHTMLParser", %"class.blink::BackgroundHTMLParser"* %0, i64 0, i32 0
  %4 = bitcast %"class.WTF::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #11
  call void @_ZN3WTF6StringC1EPKhj(%"class.WTF::String"* nonnull %2, i8* nonnull @_ZN5blinkL16kEndOfFileMarkerE, i32 1) #11
  call void @_ZN5blink25BackgroundHTMLInputStream6AppendERKN3WTF6StringE(%"class.blink::BackgroundHTMLInputStream"* %3, %"class.WTF::String"* nonnull dereferenceable(8) %2) #11
  %5 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %6, null
  br i1 %7, label %21, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  br i1 %12, label %15, label %17

15:                                               ; preds = %8
  %16 = add i32 %14, -1
  store i32 %16, i32* %13, align 4
  br label %17

17:                                               ; preds = %15, %8
  %18 = phi i32 [ %16, %15 ], [ %14, %8 ]
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %21

20:                                               ; preds = %17
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %6) #11
  br label %21

21:                                               ; preds = %1, %17, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #11
  call void @_ZN5blink25BackgroundHTMLInputStream5CloseEv(%"class.blink::BackgroundHTMLInputStream"* %3) #11
  call void @_ZN5blink20BackgroundHTMLParser13PumpTokenizerEv(%"class.blink::BackgroundHTMLParser"* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20BackgroundHTMLParser13MarkEndOfFileEv(%"class.blink::BackgroundHTMLParser"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = getelementptr inbounds %"class.blink::BackgroundHTMLParser", %"class.blink::BackgroundHTMLParser"* %0, i64 0, i32 0
  %4 = bitcast %"class.WTF::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #11
  call void @_ZN3WTF6StringC1EPKhj(%"class.WTF::String"* nonnull %2, i8* nonnull @_ZN5blinkL16kEndOfFileMarkerE, i32 1) #11
  call void @_ZN5blink25BackgroundHTMLInputStream6AppendERKN3WTF6StringE(%"class.blink::BackgroundHTMLInputStream"* %3, %"class.WTF::String"* nonnull dereferenceable(8) %2) #11
  %5 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %6, null
  br i1 %7, label %21, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  br i1 %12, label %15, label %17

15:                                               ; preds = %8
  %16 = add i32 %14, -1
  store i32 %16, i32* %13, align 4
  br label %17

17:                                               ; preds = %15, %8
  %18 = phi i32 [ %16, %15 ], [ %14, %8 ]
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %21

20:                                               ; preds = %17
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %6) #11
  br label %21

21:                                               ; preds = %1, %17, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #11
  call void @_ZN5blink25BackgroundHTMLInputStream5CloseEv(%"class.blink::BackgroundHTMLInputStream"* %3) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20BackgroundHTMLParser4StopEv(%"class.blink::BackgroundHTMLParser"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::BackgroundHTMLParser", %"class.blink::BackgroundHTMLParser"* %0, i64 0, i32 5, i32 0, i32 0
  store %"class.blink::HTMLDocumentParser"* null, %"class.blink::HTMLDocumentParser"** %2, align 8
  %3 = getelementptr inbounds %"class.blink::BackgroundHTMLParser", %"class.blink::BackgroundHTMLParser"* %0, i64 0, i32 5, i32 0, i32 1, i32 0
  %4 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %3, align 8
  %5 = icmp eq %"class.blink::PersistentNode"* %4, null
  br i1 %5, label %25, label %6

6:                                                ; preds = %1
  %7 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %8 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %7, i64 0, i32 1
  %9 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %8) #11
  %10 = icmp eq i8* %9, null
  br i1 %10, label %11, label %13, !prof !6

11:                                               ; preds = %6
  %12 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %8, i8* %12) #11
  br label %13

13:                                               ; preds = %11, %6
  %14 = phi i8* [ %12, %11 ], [ %9, %6 ]
  %15 = bitcast i8* %14 to %"class.blink::ThreadState"**
  %16 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %16, i64 0, i32 4, i32 0, i32 0, i32 0
  %18 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %17, align 8
  %19 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %3, align 8
  %20 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %18, i64 0, i32 0, i32 0
  %21 = bitcast %"class.blink::PersistentRegion"* %18 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"class.blink::PersistentNode"* %19 to i64*
  store i64 %22, i64* %23, align 8
  %24 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %19, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %24, align 8
  store %"class.blink::PersistentNode"* %19, %"class.blink::PersistentNode"** %20, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %3, align 8
  br label %25

25:                                               ; preds = %1, %13
  %26 = icmp eq %"class.blink::BackgroundHTMLParser"* %0, null
  br i1 %26, label %29, label %27

27:                                               ; preds = %25
  tail call void @_ZN5blink20BackgroundHTMLParserD2Ev(%"class.blink::BackgroundHTMLParser"* nonnull %0) #11
  %28 = bitcast %"class.blink::BackgroundHTMLParser"* %0 to i8*
  tail call void @free(i8* %28) #11
  br label %29

29:                                               ; preds = %27, %25
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20BackgroundHTMLParser11ClearParserEv(%"class.blink::BackgroundHTMLParser"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::BackgroundHTMLParser", %"class.blink::BackgroundHTMLParser"* %0, i64 0, i32 5, i32 0, i32 0
  store %"class.blink::HTMLDocumentParser"* null, %"class.blink::HTMLDocumentParser"** %2, align 8
  %3 = getelementptr inbounds %"class.blink::BackgroundHTMLParser", %"class.blink::BackgroundHTMLParser"* %0, i64 0, i32 5, i32 0, i32 1, i32 0
  %4 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %3, align 8
  %5 = icmp eq %"class.blink::PersistentNode"* %4, null
  br i1 %5, label %25, label %6

6:                                                ; preds = %1
  %7 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %8 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %7, i64 0, i32 1
  %9 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %8) #11
  %10 = icmp eq i8* %9, null
  br i1 %10, label %11, label %13, !prof !6

11:                                               ; preds = %6
  %12 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %8, i8* %12) #11
  br label %13

13:                                               ; preds = %11, %6
  %14 = phi i8* [ %12, %11 ], [ %9, %6 ]
  %15 = bitcast i8* %14 to %"class.blink::ThreadState"**
  %16 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %16, i64 0, i32 4, i32 0, i32 0, i32 0
  %18 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %17, align 8
  %19 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %3, align 8
  %20 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %18, i64 0, i32 0, i32 0
  %21 = bitcast %"class.blink::PersistentRegion"* %18 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"class.blink::PersistentNode"* %19 to i64*
  store i64 %22, i64* %23, align 8
  %24 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %19, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %24, align 8
  store %"class.blink::PersistentNode"* %19, %"class.blink::PersistentNode"** %20, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %3, align 8
  br label %25

25:                                               ; preds = %1, %13
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink20BackgroundHTMLParser29ForcePlaintextForTextDocumentEv(%"class.blink::BackgroundHTMLParser"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.blink::BackgroundHTMLParser", %"class.blink::BackgroundHTMLParser"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %3 = load %"class.blink::HTMLTokenizer"*, %"class.blink::HTMLTokenizer"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %3, i64 0, i32 0
  store i32 6, i32* %4, align 8
  ret void
}

declare void @_ZN3WTF6StringC1EPKhj(%"class.WTF::String"*, i8*, i32) unnamed_addr #3

declare void @_ZN5blink25BackgroundHTMLInputStream5CloseEv(%"class.blink::BackgroundHTMLInputStream"*) local_unnamed_addr #3

declare zeroext i1 @_ZN5blink13HTMLTokenizer9NextTokenERNS_15SegmentedStringERNS_9HTMLTokenE(%"class.blink::HTMLTokenizer"*, %"class.blink::SegmentedString"* dereferenceable(88), %"class.blink::HTMLToken"* dereferenceable(2512)) local_unnamed_addr #3

declare i32 @_ZNK5blink15SegmentedString11CurrentLineEv(%"class.blink::SegmentedString"*) local_unnamed_addr #3

declare i32 @_ZNK5blink15SegmentedString13CurrentColumnEv(%"class.blink::SegmentedString"*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN5blink16CompactHTMLTokenC1EPKNS_9HTMLTokenERKN3WTF12TextPositionE(%"class.blink::CompactHTMLToken"*, %"class.blink::HTMLToken"*, %"class.WTF::TextPosition"* dereferenceable(8)) unnamed_addr #3

declare void @_ZN5blink19TokenPreloadScanner4ScanERKNS_16CompactHTMLTokenERKNS_15SegmentedStringERN3WTF6VectorINSt3__110unique_ptrINS_14PreloadRequestENS9_14default_deleteISB_EEEELj0ENS7_18PartitionAllocatorEEEPN4absl8optionalINS_19ViewportDescriptionEEEPb(%"class.blink::TokenPreloadScanner"*, %"class.blink::CompactHTMLToken"* dereferenceable(40), %"class.blink::SegmentedString"* dereferenceable(88), %"class.WTF::Vector.83"* dereferenceable(16), %"class.absl::optional"*, i8*) local_unnamed_addr #3

declare i32 @_ZN5blink24HTMLTreeBuilderSimulator8SimulateERKNS_16CompactHTMLTokenEPNS_13HTMLTokenizerE(%"class.blink::HTMLTreeBuilderSimulator"*, %"class.blink::CompactHTMLToken"* dereferenceable(40), %"class.blink::HTMLTokenizer"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20BackgroundHTMLParser21EnqueueTokenizedChunkEv(%"class.blink::BackgroundHTMLParser"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::BackgroundHTMLParser", %"class.blink::BackgroundHTMLParser"* %0, i64 0, i32 6
  %3 = getelementptr inbounds %"class.blink::BackgroundHTMLParser", %"class.blink::BackgroundHTMLParser"* %0, i64 0, i32 6, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %128, label %6

6:                                                ; preds = %1
  %7 = tail call noalias i8* @malloc(i64 152) #11
  %8 = bitcast i8* %7 to %"struct.blink::HTMLDocumentParser::TokenizedChunk"*
  %9 = getelementptr inbounds i8, i8* %7, i64 112
  %10 = getelementptr inbounds i8, i8* %7, i64 128
  %11 = bitcast i8* %9 to i8**
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 152, i1 false) #11
  store i8* %10, i8** %11, align 8
  %12 = getelementptr inbounds i8, i8* %7, i64 120
  %13 = bitcast i8* %12 to i32*
  store i32 1, i32* %13, align 8
  %14 = getelementptr inbounds i8, i8* %7, i64 124
  %15 = bitcast i8* %14 to i32*
  store i32 0, i32* %15, align 4
  %16 = getelementptr inbounds i8, i8* %7, i64 16
  %17 = getelementptr inbounds %"class.blink::BackgroundHTMLParser", %"class.blink::BackgroundHTMLParser"* %0, i64 0, i32 7
  %18 = bitcast %"class.WTF::Vector.83"* %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast i8* %16 to i64*
  store atomic i64 0, i64* %18 monotonic, align 8
  store atomic i64 %19, i64* %20 monotonic, align 8
  %21 = getelementptr inbounds i8, i8* %7, i64 24
  %22 = bitcast i8* %21 to i32*
  %23 = getelementptr inbounds %"class.blink::BackgroundHTMLParser", %"class.blink::BackgroundHTMLParser"* %0, i64 0, i32 7, i32 0, i32 0, i32 1
  %24 = load i32, i32* %23, align 4
  store i32 %24, i32* %22, align 4
  store i32 0, i32* %23, align 4
  %25 = getelementptr inbounds i8, i8* %7, i64 28
  %26 = bitcast i8* %25 to i32*
  %27 = getelementptr inbounds %"class.blink::BackgroundHTMLParser", %"class.blink::BackgroundHTMLParser"* %0, i64 0, i32 7, i32 0, i32 0, i32 2
  %28 = load i32, i32* %27, align 4
  store i32 %28, i32* %26, align 4
  store i32 0, i32* %27, align 4
  %29 = getelementptr inbounds %"class.blink::BackgroundHTMLParser", %"class.blink::BackgroundHTMLParser"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  %30 = load i8, i8* %29, align 4, !range !7
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %81, label %32

32:                                               ; preds = %6
  %33 = getelementptr inbounds i8, i8* %7, i64 32
  %34 = getelementptr inbounds i8, i8* %7, i64 36
  %35 = bitcast i8* %34 to i32*
  %36 = getelementptr inbounds %"class.blink::BackgroundHTMLParser", %"class.blink::BackgroundHTMLParser"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %37 = load i32, i32* %36, align 4
  store i32 %37, i32* %35, align 4
  %38 = getelementptr inbounds i8, i8* %7, i64 40
  %39 = getelementptr inbounds %"class.blink::BackgroundHTMLParser", %"class.blink::BackgroundHTMLParser"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %40 = bitcast %"class.blink::Length"* %39 to i64*
  %41 = bitcast i8* %38 to i64*
  %42 = load i64, i64* %40, align 4
  store i64 %42, i64* %41, align 4
  %43 = and i64 %42, 280375465082880
  %44 = icmp eq i64 %43, 8796093022208
  br i1 %44, label %45, label %47

45:                                               ; preds = %32
  %46 = bitcast i8* %38 to %"class.blink::Length"*
  tail call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %46) #11
  br label %47

47:                                               ; preds = %45, %32
  %48 = getelementptr inbounds i8, i8* %7, i64 48
  %49 = getelementptr inbounds %"class.blink::BackgroundHTMLParser", %"class.blink::BackgroundHTMLParser"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2
  %50 = bitcast %"class.blink::Length"* %49 to i64*
  %51 = bitcast i8* %48 to i64*
  %52 = load i64, i64* %50, align 4
  store i64 %52, i64* %51, align 4
  %53 = and i64 %52, 280375465082880
  %54 = icmp eq i64 %53, 8796093022208
  br i1 %54, label %55, label %57

55:                                               ; preds = %47
  %56 = bitcast i8* %48 to %"class.blink::Length"*
  tail call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %56) #11
  br label %57

57:                                               ; preds = %55, %47
  %58 = getelementptr inbounds i8, i8* %7, i64 56
  %59 = getelementptr inbounds %"class.blink::BackgroundHTMLParser", %"class.blink::BackgroundHTMLParser"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0, i32 3
  %60 = bitcast %"class.blink::Length"* %59 to i64*
  %61 = bitcast i8* %58 to i64*
  %62 = load i64, i64* %60, align 4
  store i64 %62, i64* %61, align 4
  %63 = and i64 %62, 280375465082880
  %64 = icmp eq i64 %63, 8796093022208
  br i1 %64, label %65, label %67

65:                                               ; preds = %57
  %66 = bitcast i8* %58 to %"class.blink::Length"*
  tail call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %66) #11
  br label %67

67:                                               ; preds = %65, %57
  %68 = getelementptr inbounds i8, i8* %7, i64 64
  %69 = getelementptr inbounds %"class.blink::BackgroundHTMLParser", %"class.blink::BackgroundHTMLParser"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0, i32 4
  %70 = bitcast %"class.blink::Length"* %69 to i64*
  %71 = bitcast i8* %68 to i64*
  %72 = load i64, i64* %70, align 4
  store i64 %72, i64* %71, align 4
  %73 = and i64 %72, 280375465082880
  %74 = icmp eq i64 %73, 8796093022208
  br i1 %74, label %75, label %77

75:                                               ; preds = %67
  %76 = bitcast i8* %68 to %"class.blink::Length"*
  tail call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %76) #11
  br label %77

77:                                               ; preds = %67, %75
  %78 = getelementptr inbounds i8, i8* %7, i64 72
  %79 = getelementptr inbounds %"class.blink::BackgroundHTMLParser", %"class.blink::BackgroundHTMLParser"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0, i32 5
  %80 = bitcast float* %79 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %78, i8* align 4 %80, i64 36, i1 false) #11
  store i8 1, i8* %33, align 4
  br label %81

81:                                               ; preds = %6, %77
  %82 = getelementptr inbounds %"class.blink::BackgroundHTMLParser", %"class.blink::BackgroundHTMLParser"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %83 = load %"class.blink::HTMLTokenizer"*, %"class.blink::HTMLTokenizer"** %82, align 8
  %84 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %83, i64 0, i32 0
  %85 = load i32, i32* %84, align 8
  %86 = getelementptr inbounds i8, i8* %7, i64 108
  %87 = bitcast i8* %86 to i32*
  store i32 %85, i32* %87, align 4
  %88 = getelementptr inbounds %"class.blink::BackgroundHTMLParser", %"class.blink::BackgroundHTMLParser"* %0, i64 0, i32 3, i32 2
  %89 = bitcast i8* %9 to %"class.WTF::Vector.330"*
  %90 = tail call dereferenceable(24) %"class.WTF::Vector.330"* @_ZN3WTF6VectorIN5blink24HTMLTreeBuilderSimulator9NamespaceELj1ENS_18PartitionAllocatorEEaSERKS5_(%"class.WTF::Vector.330"* %89, %"class.WTF::Vector.330"* dereferenceable(24) %88)
  %91 = getelementptr inbounds %"class.blink::BackgroundHTMLParser", %"class.blink::BackgroundHTMLParser"* %0, i64 0, i32 0
  %92 = load i32, i32* %3, align 4
  %93 = tail call i32 @_ZN5blink25BackgroundHTMLInputStream16CreateCheckpointEj(%"class.blink::BackgroundHTMLInputStream"* %91, i32 %92) #11
  %94 = getelementptr inbounds i8, i8* %7, i64 136
  %95 = bitcast i8* %94 to i32*
  store i32 %93, i32* %95, align 8
  %96 = getelementptr inbounds %"class.blink::BackgroundHTMLParser", %"class.blink::BackgroundHTMLParser"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %97 = load %"class.blink::TokenPreloadScanner"*, %"class.blink::TokenPreloadScanner"** %96, align 8
  %98 = tail call i32 @_ZN5blink19TokenPreloadScanner16CreateCheckpointEv(%"class.blink::TokenPreloadScanner"* %97) #11
  %99 = getelementptr inbounds i8, i8* %7, i64 140
  %100 = bitcast i8* %99 to i32*
  store i32 %98, i32* %100, align 4
  %101 = bitcast %"class.WTF::Vector.314"* %2 to i64*
  %102 = load i64, i64* %101, align 8
  %103 = bitcast i8* %7 to i64*
  %104 = load i64, i64* %103, align 8
  store atomic i64 %104, i64* %101 monotonic, align 8
  store atomic i64 %102, i64* %103 monotonic, align 8
  %105 = getelementptr inbounds i8, i8* %7, i64 8
  %106 = bitcast i8* %105 to i32*
  %107 = getelementptr inbounds %"class.blink::BackgroundHTMLParser", %"class.blink::BackgroundHTMLParser"* %0, i64 0, i32 6, i32 0, i32 0, i32 1
  %108 = load i32, i32* %106, align 4
  %109 = load i32, i32* %107, align 4
  store i32 %109, i32* %106, align 4
  store i32 %108, i32* %107, align 4
  %110 = getelementptr inbounds i8, i8* %7, i64 12
  %111 = bitcast i8* %110 to i32*
  %112 = load i32, i32* %111, align 4
  %113 = load i32, i32* %3, align 4
  store i32 %113, i32* %111, align 4
  store i32 %112, i32* %3, align 4
  %114 = getelementptr inbounds %"class.blink::BackgroundHTMLParser", %"class.blink::BackgroundHTMLParser"* %0, i64 0, i32 14
  %115 = load i8, i8* %114, align 4, !range !7
  %116 = getelementptr inbounds i8, i8* %7, i64 144
  store i8 %115, i8* %116, align 8
  %117 = getelementptr inbounds %"class.blink::BackgroundHTMLParser", %"class.blink::BackgroundHTMLParser"* %0, i64 0, i32 13
  %118 = load i32, i32* %117, align 8
  %119 = getelementptr inbounds i8, i8* %7, i64 148
  %120 = bitcast i8* %119 to i32*
  store i32 %118, i32* %120, align 4
  store i8 0, i8* %114, align 4
  store i32 -1, i32* %117, align 8
  %121 = getelementptr inbounds %"class.blink::BackgroundHTMLParser", %"class.blink::BackgroundHTMLParser"* %0, i64 0, i32 5, i32 0, i32 0
  %122 = load %"class.blink::HTMLDocumentParser"*, %"class.blink::HTMLDocumentParser"** %121, align 8
  %123 = icmp eq %"class.blink::HTMLDocumentParser"* %122, null
  br i1 %123, label %125, label %124

124:                                              ; preds = %81
  tail call void @_ZN5blink18HTMLDocumentParser21EnqueueTokenizedChunkENSt3__110unique_ptrINS0_14TokenizedChunkENS1_14default_deleteIS3_EEEE(%"class.blink::HTMLDocumentParser"* nonnull %122, %"struct.blink::HTMLDocumentParser::TokenizedChunk"* %8) #11
  br label %128

125:                                              ; preds = %81
  %126 = icmp eq i8* %7, null
  br i1 %126, label %128, label %127

127:                                              ; preds = %125
  tail call void @_ZN5blink18HTMLDocumentParser14TokenizedChunkD2Ev(%"struct.blink::HTMLDocumentParser::TokenizedChunk"* nonnull %8) #11
  tail call void @free(i8* nonnull %7) #11
  br label %128

128:                                              ; preds = %127, %125, %124, %1
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink16CompactHTMLTokenD2Ev(%"class.blink::CompactHTMLToken"*) unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::CompactHTMLToken", %"class.blink::CompactHTMLToken"* %0, i64 0, i32 2
  %3 = getelementptr inbounds %"class.WTF::Vector.317", %"class.WTF::Vector.317"* %2, i64 0, i32 0, i32 0, i32 0
  %4 = load %"struct.blink::CompactHTMLToken::Attribute"*, %"struct.blink::CompactHTMLToken::Attribute"** %3, align 8
  %5 = icmp eq %"struct.blink::CompactHTMLToken::Attribute"* %4, null
  br i1 %5, label %57, label %6, !prof !5

6:                                                ; preds = %1
  %7 = bitcast %"struct.blink::CompactHTMLToken::Attribute"* %4 to i8*
  %8 = getelementptr inbounds %"class.blink::CompactHTMLToken", %"class.blink::CompactHTMLToken"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %55, label %11, !prof !6

11:                                               ; preds = %6
  %12 = zext i32 %9 to i64
  %13 = getelementptr inbounds %"struct.blink::CompactHTMLToken::Attribute", %"struct.blink::CompactHTMLToken::Attribute"* %4, i64 %12
  br label %14

14:                                               ; preds = %11, %49
  %15 = phi %"struct.blink::CompactHTMLToken::Attribute"* [ %50, %49 ], [ %4, %11 ]
  %16 = getelementptr inbounds %"struct.blink::CompactHTMLToken::Attribute", %"struct.blink::CompactHTMLToken::Attribute"* %15, i64 0, i32 1, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %32, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  %25 = load i32, i32* %24, align 4
  br i1 %23, label %26, label %28

26:                                               ; preds = %19
  %27 = add i32 %25, -1
  store i32 %27, i32* %24, align 4
  br label %28

28:                                               ; preds = %26, %19
  %29 = phi i32 [ %27, %26 ], [ %25, %19 ]
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %28
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %17) #11
  br label %32

32:                                               ; preds = %31, %28, %14
  %33 = getelementptr inbounds %"struct.blink::CompactHTMLToken::Attribute", %"struct.blink::CompactHTMLToken::Attribute"* %15, i64 0, i32 0, i32 0, i32 0
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %35, label %49, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  br i1 %40, label %43, label %45

43:                                               ; preds = %36
  %44 = add i32 %42, -1
  store i32 %44, i32* %41, align 4
  br label %45

45:                                               ; preds = %43, %36
  %46 = phi i32 [ %44, %43 ], [ %42, %36 ]
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %49

48:                                               ; preds = %45
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %34) #11
  br label %49

49:                                               ; preds = %48, %45, %32
  %50 = getelementptr inbounds %"struct.blink::CompactHTMLToken::Attribute", %"struct.blink::CompactHTMLToken::Attribute"* %15, i64 1
  %51 = icmp eq %"struct.blink::CompactHTMLToken::Attribute"* %50, %13
  br i1 %51, label %52, label %14

52:                                               ; preds = %49
  store i32 0, i32* %8, align 4
  %53 = bitcast %"class.WTF::Vector.317"* %2 to i8**
  %54 = load i8*, i8** %53, align 8
  br label %55

55:                                               ; preds = %52, %6
  %56 = phi i8* [ %54, %52 ], [ %7, %6 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %56) #11
  store %"struct.blink::CompactHTMLToken::Attribute"* null, %"struct.blink::CompactHTMLToken::Attribute"** %3, align 8
  br label %57

57:                                               ; preds = %1, %55
  %58 = getelementptr inbounds %"class.blink::CompactHTMLToken", %"class.blink::CompactHTMLToken"* %0, i64 0, i32 1, i32 0, i32 0
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %60, label %74, label %61

61:                                               ; preds = %57
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = load atomic i32, i32* %62 monotonic, align 4
  %64 = and i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 0
  %67 = load i32, i32* %66, align 4
  br i1 %65, label %68, label %70

68:                                               ; preds = %61
  %69 = add i32 %67, -1
  store i32 %69, i32* %66, align 4
  br label %70

70:                                               ; preds = %68, %61
  %71 = phi i32 [ %69, %68 ], [ %67, %61 ]
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %74

73:                                               ; preds = %70
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %59) #11
  br label %74

74:                                               ; preds = %57, %70, %73
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.WTF::Vector.330"* @_ZN3WTF6VectorIN5blink24HTMLTreeBuilderSimulator9NamespaceELj1ENS_18PartitionAllocatorEEaSERKS5_(%"class.WTF::Vector.330"*, %"class.WTF::Vector.330"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.WTF::Vector.330"* %1, %0
  br i1 %3, label %86, label %4, !prof !6

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.330", %"class.WTF::Vector.330"* %0, i64 0, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %"class.WTF::Vector.330", %"class.WTF::Vector.330"* %1, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp ugt i32 %6, %8
  br i1 %9, label %10, label %11

10:                                               ; preds = %4
  store i32 %8, i32* %5, align 4
  br label %56

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.WTF::Vector.330", %"class.WTF::Vector.330"* %0, i64 0, i32 0, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp ugt i32 %8, %13
  br i1 %14, label %15, label %56

15:                                               ; preds = %11
  %16 = icmp eq i32 %13, 0
  br i1 %16, label %31, label %17

17:                                               ; preds = %15
  %18 = icmp eq i32 %6, 0
  br i1 %18, label %20, label %19

19:                                               ; preds = %17
  store i32 0, i32* %5, align 4
  br label %20

20:                                               ; preds = %19, %17
  %21 = getelementptr inbounds %"class.WTF::Vector.330", %"class.WTF::Vector.330"* %0, i64 0, i32 0, i32 0, i32 0
  %22 = load i32*, i32** %21, align 8
  %23 = getelementptr inbounds %"class.WTF::Vector.330", %"class.WTF::Vector.330"* %0, i64 0, i32 0, i32 1, i64 0
  %24 = ptrtoint i8* %23 to i64
  %25 = bitcast %"class.WTF::Vector.330"* %0 to i64*
  store atomic i64 %24, i64* %25 monotonic, align 8
  store i32 1, i32* %12, align 8
  %26 = bitcast i8* %23 to i32*
  %27 = icmp eq i32* %22, %26
  br i1 %27, label %31, label %28, !prof !5

28:                                               ; preds = %20
  %29 = bitcast %"class.WTF::Vector.330"* %0 to %"class.WTF::VectorBuffer.331"*
  tail call void @_ZN3WTF12VectorBufferIN5blink24HTMLTreeBuilderSimulator9NamespaceELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.331"* %29, i32* %22) #11
  %30 = load i32, i32* %12, align 8
  br label %31

31:                                               ; preds = %15, %20, %28
  %32 = phi i32 [ 0, %15 ], [ 1, %20 ], [ %30, %28 ]
  %33 = load i32, i32* %7, align 4
  %34 = icmp ult i32 %32, %33
  br i1 %34, label %35, label %56, !prof !5

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.WTF::Vector.330", %"class.WTF::Vector.330"* %0, i64 0, i32 0, i32 0, i32 0
  %37 = load i32*, i32** %36, align 8
  %38 = icmp eq i32* %37, null
  br i1 %38, label %39, label %55

39:                                               ; preds = %35
  %40 = icmp ugt i32 %33, 1
  br i1 %40, label %41, label %49

41:                                               ; preds = %39
  %42 = zext i32 %33 to i64
  %43 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink24HTMLTreeBuilderSimulator9NamespaceEEEmm(i64 %42) #11
  %44 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %43, i8* getelementptr inbounds ([90 x i8], [90 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink24HTMLTreeBuilderSimulator9NamespaceEEEPKcv, i64 0, i64 0)) #11
  %45 = ptrtoint i8* %44 to i64
  %46 = bitcast %"class.WTF::Vector.330"* %0 to i64*
  store atomic i64 %45, i64* %46 monotonic, align 8
  %47 = lshr i64 %43, 2
  %48 = trunc i64 %47 to i32
  br label %53

49:                                               ; preds = %39
  %50 = getelementptr inbounds %"class.WTF::Vector.330", %"class.WTF::Vector.330"* %0, i64 0, i32 0, i32 1, i64 0
  %51 = ptrtoint i8* %50 to i64
  %52 = bitcast %"class.WTF::Vector.330"* %0 to i64*
  store atomic i64 %51, i64* %52 monotonic, align 8
  br label %53

53:                                               ; preds = %49, %41
  %54 = phi i32 [ 1, %49 ], [ %48, %41 ]
  store i32 %54, i32* %12, align 8
  br label %56

55:                                               ; preds = %35
  tail call void @_ZN3WTF6VectorIN5blink24HTMLTreeBuilderSimulator9NamespaceELj1ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.330"* %0, i32 %33) #11
  br label %56

56:                                               ; preds = %55, %53, %31, %11, %10
  %57 = getelementptr inbounds %"class.WTF::Vector.330", %"class.WTF::Vector.330"* %1, i64 0, i32 0, i32 0, i32 0
  %58 = bitcast %"class.WTF::Vector.330"* %1 to i8**
  %59 = load i8*, i8** %58, align 8
  %60 = load i32, i32* %5, align 4
  %61 = zext i32 %60 to i64
  %62 = getelementptr inbounds %"class.WTF::Vector.330", %"class.WTF::Vector.330"* %0, i64 0, i32 0, i32 0, i32 0
  %63 = bitcast %"class.WTF::Vector.330"* %0 to i8**
  %64 = load i8*, i8** %63, align 8
  %65 = shl nuw nsw i64 %61, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %64, i8* align 4 %59, i64 %65, i1 false) #11
  %66 = load i32*, i32** %57, align 8
  %67 = load i32, i32* %5, align 4
  %68 = zext i32 %67 to i64
  %69 = getelementptr inbounds i32, i32* %66, i64 %68
  %70 = load i32*, i32** %62, align 8
  %71 = getelementptr inbounds i32, i32* %70, i64 %68
  %72 = icmp ne i32* %71, null
  %73 = icmp ne i32* %69, null
  %74 = and i1 %73, %72
  br i1 %74, label %75, label %84, !prof !5

75:                                               ; preds = %56
  %76 = load i32, i32* %7, align 4
  %77 = zext i32 %76 to i64
  %78 = getelementptr inbounds i32, i32* %66, i64 %77
  %79 = bitcast i32* %71 to i8*
  %80 = bitcast i32* %69 to i8*
  %81 = ptrtoint i32* %78 to i64
  %82 = ptrtoint i32* %69 to i64
  %83 = sub i64 %81, %82
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %79, i8* nonnull align 4 %80, i64 %83, i1 false) #11
  br label %84

84:                                               ; preds = %56, %75
  %85 = load i32, i32* %7, align 4
  store i32 %85, i32* %5, align 4
  br label %86

86:                                               ; preds = %2, %84
  ret %"class.WTF::Vector.330"* %0
}

declare i32 @_ZN5blink25BackgroundHTMLInputStream16CreateCheckpointEj(%"class.blink::BackgroundHTMLInputStream"*, i32) local_unnamed_addr #3

declare i32 @_ZN5blink19TokenPreloadScanner16CreateCheckpointEv(%"class.blink::TokenPreloadScanner"*) local_unnamed_addr #3

declare void @_ZN5blink18HTMLDocumentParser21EnqueueTokenizedChunkENSt3__110unique_ptrINS0_14TokenizedChunkENS1_14default_deleteIS3_EEEE(%"class.blink::HTMLDocumentParser"*, %"struct.blink::HTMLDocumentParser::TokenizedChunk"*) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #6

declare void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8*, i8*, i64) local_unnamed_addr #3

declare void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"*) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14PreloadRequestD2Ev(%"class.blink::PreloadRequest"*) unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::PreloadRequest", %"class.blink::PreloadRequest"* %0, i64 0, i32 17, i32 0, i32 0
  %3 = load %"struct.std::__1::pair.954"*, %"struct.std::__1::pair.954"** %2, align 8
  %4 = icmp eq %"struct.std::__1::pair.954"* %3, null
  br i1 %4, label %37, label %5, !prof !5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::PreloadRequest", %"class.blink::PreloadRequest"* %0, i64 0, i32 17, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %35, label %9

9:                                                ; preds = %5
  %10 = zext i32 %7 to i64
  br label %11

11:                                               ; preds = %32, %9
  %12 = phi i64 [ 0, %9 ], [ %33, %32 ]
  %13 = getelementptr inbounds %"struct.std::__1::pair.954", %"struct.std::__1::pair.954"* %3, i64 %12
  %14 = bitcast %"struct.std::__1::pair.954"* %13 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = bitcast i8* %15 to %"class.WTF::StringImpl"*
  %17 = ptrtoint i8* %15 to i64
  switch i64 %17, label %18 [
    i64 -1, label %32
    i64 0, label %32
  ]

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %15, i64 8
  %20 = bitcast i8* %19 to i32*
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = bitcast i8* %15 to i32*
  %25 = load i32, i32* %24, align 4
  br i1 %23, label %26, label %28

26:                                               ; preds = %18
  %27 = add i32 %25, -1
  store i32 %27, i32* %24, align 4
  br label %28

28:                                               ; preds = %26, %18
  %29 = phi i32 [ %27, %26 ], [ %25, %18 ]
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %28
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %16) #11
  br label %32

32:                                               ; preds = %31, %28, %11, %11
  %33 = add nuw nsw i64 %12, 1
  %34 = icmp eq i64 %33, %10
  br i1 %34, label %35, label %11

35:                                               ; preds = %32, %5
  %36 = bitcast %"struct.std::__1::pair.954"* %3 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %36) #11
  store %"struct.std::__1::pair.954"* null, %"struct.std::__1::pair.954"** %2, align 8
  br label %37

37:                                               ; preds = %1, %35
  %38 = getelementptr inbounds %"class.blink::PreloadRequest", %"class.blink::PreloadRequest"* %0, i64 0, i32 10, i32 0, i32 0
  %39 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  %40 = icmp eq %"class.WTF::StringImpl"* %39, null
  br i1 %40, label %54, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load atomic i32, i32* %42 monotonic, align 4
  %44 = and i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 0
  %47 = load i32, i32* %46, align 4
  br i1 %45, label %48, label %50

48:                                               ; preds = %41
  %49 = add i32 %47, -1
  store i32 %49, i32* %46, align 4
  br label %50

50:                                               ; preds = %48, %41
  %51 = phi i32 [ %49, %48 ], [ %47, %41 ]
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %54

53:                                               ; preds = %50
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %39) #11
  br label %54

54:                                               ; preds = %37, %50, %53
  %55 = getelementptr inbounds %"class.blink::PreloadRequest", %"class.blink::PreloadRequest"* %0, i64 0, i32 4, i32 0, i32 0
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %55, align 8
  %57 = icmp eq %"class.WTF::StringImpl"* %56, null
  br i1 %57, label %71, label %58

58:                                               ; preds = %54
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %56, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load atomic i32, i32* %59 monotonic, align 4
  %61 = and i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %56, i64 0, i32 0
  %64 = load i32, i32* %63, align 4
  br i1 %62, label %65, label %67

65:                                               ; preds = %58
  %66 = add i32 %64, -1
  store i32 %66, i32* %63, align 4
  br label %67

67:                                               ; preds = %65, %58
  %68 = phi i32 [ %66, %65 ], [ %64, %58 ]
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %71

70:                                               ; preds = %67
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %56) #11
  br label %71

71:                                               ; preds = %54, %67, %70
  %72 = getelementptr inbounds %"class.blink::PreloadRequest", %"class.blink::PreloadRequest"* %0, i64 0, i32 3
  tail call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %72) #11
  %73 = getelementptr inbounds %"class.blink::PreloadRequest", %"class.blink::PreloadRequest"* %0, i64 0, i32 2, i32 0, i32 0
  %74 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %73, align 8
  %75 = icmp eq %"class.WTF::StringImpl"* %74, null
  br i1 %75, label %89, label %76

76:                                               ; preds = %71
  %77 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = load atomic i32, i32* %77 monotonic, align 4
  %79 = and i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 0
  %82 = load i32, i32* %81, align 4
  br i1 %80, label %83, label %85

83:                                               ; preds = %76
  %84 = add i32 %82, -1
  store i32 %84, i32* %81, align 4
  br label %85

85:                                               ; preds = %83, %76
  %86 = phi i32 [ %84, %83 ], [ %82, %76 ]
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %89

88:                                               ; preds = %85
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %74) #11
  br label %89

89:                                               ; preds = %71, %85, %88
  %90 = getelementptr inbounds %"class.blink::PreloadRequest", %"class.blink::PreloadRequest"* %0, i64 0, i32 0, i32 0, i32 0
  %91 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %90, align 8
  %92 = icmp eq %"class.WTF::StringImpl"* %91, null
  br i1 %92, label %106, label %93

93:                                               ; preds = %89
  %94 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %91, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %95 = load atomic i32, i32* %94 monotonic, align 4
  %96 = and i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %91, i64 0, i32 0
  %99 = load i32, i32* %98, align 4
  br i1 %97, label %100, label %102

100:                                              ; preds = %93
  %101 = add i32 %99, -1
  store i32 %101, i32* %98, align 4
  br label %102

102:                                              ; preds = %100, %93
  %103 = phi i32 [ %101, %100 ], [ %99, %93 ]
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %105, label %106

105:                                              ; preds = %102
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %91) #11
  br label %106

106:                                              ; preds = %89, %102, %105
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"*) unnamed_addr #4

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #4

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #3

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #3

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink24HTMLTreeBuilderSimulator12TemplateTypeELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.1243"*, i32*) local_unnamed_addr #7 comdat align 2 {
  %3 = bitcast i32* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #11
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink24HTMLTreeBuilderSimulator9NamespaceELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.331"*, i32*) local_unnamed_addr #7 comdat align 2 {
  %3 = bitcast i32* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #11
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF5DequeIN5blink18SegmentedSubstringELj0ENS_18PartitionAllocatorEE10DestroyAllEv(%"class.WTF::Deque"*) local_unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = icmp ugt i32 %3, %5
  %7 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load %"class.blink::SegmentedSubstring"*, %"class.blink::SegmentedSubstring"** %7, align 8
  %9 = zext i32 %5 to i64
  %10 = getelementptr inbounds %"class.blink::SegmentedSubstring", %"class.blink::SegmentedSubstring"* %8, i64 %9
  br i1 %6, label %37, label %11

11:                                               ; preds = %1
  %12 = icmp eq i32 %3, %5
  br i1 %12, label %95, label %13

13:                                               ; preds = %11
  %14 = zext i32 %3 to i64
  %15 = getelementptr inbounds %"class.blink::SegmentedSubstring", %"class.blink::SegmentedSubstring"* %8, i64 %14
  br label %16

16:                                               ; preds = %13, %34
  %17 = phi %"class.blink::SegmentedSubstring"* [ %35, %34 ], [ %15, %13 ]
  %18 = getelementptr inbounds %"class.blink::SegmentedSubstring", %"class.blink::SegmentedSubstring"* %17, i64 0, i32 5, i32 0, i32 0
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %34, label %21

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = and i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 0
  %27 = load i32, i32* %26, align 4
  br i1 %25, label %28, label %30

28:                                               ; preds = %21
  %29 = add i32 %27, -1
  store i32 %29, i32* %26, align 4
  br label %30

30:                                               ; preds = %28, %21
  %31 = phi i32 [ %29, %28 ], [ %27, %21 ]
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %34

33:                                               ; preds = %30
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %19) #11
  br label %34

34:                                               ; preds = %33, %30, %16
  %35 = getelementptr inbounds %"class.blink::SegmentedSubstring", %"class.blink::SegmentedSubstring"* %17, i64 1
  %36 = icmp eq %"class.blink::SegmentedSubstring"* %35, %10
  br i1 %36, label %95, label %16

37:                                               ; preds = %1
  %38 = icmp eq i32 %5, 0
  br i1 %38, label %63, label %39

39:                                               ; preds = %37, %57
  %40 = phi %"class.blink::SegmentedSubstring"* [ %58, %57 ], [ %8, %37 ]
  %41 = getelementptr inbounds %"class.blink::SegmentedSubstring", %"class.blink::SegmentedSubstring"* %40, i64 0, i32 5, i32 0, i32 0
  %42 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %41, align 8
  %43 = icmp eq %"class.WTF::StringImpl"* %42, null
  br i1 %43, label %57, label %44

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load atomic i32, i32* %45 monotonic, align 4
  %47 = and i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 0
  %50 = load i32, i32* %49, align 4
  br i1 %48, label %51, label %53

51:                                               ; preds = %44
  %52 = add i32 %50, -1
  store i32 %52, i32* %49, align 4
  br label %53

53:                                               ; preds = %51, %44
  %54 = phi i32 [ %52, %51 ], [ %50, %44 ]
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %57

56:                                               ; preds = %53
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %42) #11
  br label %57

57:                                               ; preds = %56, %53, %39
  %58 = getelementptr inbounds %"class.blink::SegmentedSubstring", %"class.blink::SegmentedSubstring"* %40, i64 1
  %59 = icmp eq %"class.blink::SegmentedSubstring"* %58, %10
  br i1 %59, label %60, label %39

60:                                               ; preds = %57
  %61 = load %"class.blink::SegmentedSubstring"*, %"class.blink::SegmentedSubstring"** %7, align 8
  %62 = load i32, i32* %2, align 8
  br label %63

63:                                               ; preds = %60, %37
  %64 = phi i32 [ %62, %60 ], [ %3, %37 ]
  %65 = phi %"class.blink::SegmentedSubstring"* [ %61, %60 ], [ %8, %37 ]
  %66 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %67 = load i32, i32* %66, align 8
  %68 = zext i32 %67 to i64
  %69 = getelementptr inbounds %"class.blink::SegmentedSubstring", %"class.blink::SegmentedSubstring"* %65, i64 %68
  %70 = icmp eq i32 %64, %67
  br i1 %70, label %95, label %71

71:                                               ; preds = %63
  %72 = zext i32 %64 to i64
  %73 = getelementptr inbounds %"class.blink::SegmentedSubstring", %"class.blink::SegmentedSubstring"* %65, i64 %72
  br label %74

74:                                               ; preds = %71, %92
  %75 = phi %"class.blink::SegmentedSubstring"* [ %93, %92 ], [ %73, %71 ]
  %76 = getelementptr inbounds %"class.blink::SegmentedSubstring", %"class.blink::SegmentedSubstring"* %75, i64 0, i32 5, i32 0, i32 0
  %77 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %76, align 8
  %78 = icmp eq %"class.WTF::StringImpl"* %77, null
  br i1 %78, label %92, label %79

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = load atomic i32, i32* %80 monotonic, align 4
  %82 = and i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 0
  %85 = load i32, i32* %84, align 4
  br i1 %83, label %86, label %88

86:                                               ; preds = %79
  %87 = add i32 %85, -1
  store i32 %87, i32* %84, align 4
  br label %88

88:                                               ; preds = %86, %79
  %89 = phi i32 [ %87, %86 ], [ %85, %79 ]
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %92

91:                                               ; preds = %88
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %77) #11
  br label %92

92:                                               ; preds = %91, %88, %74
  %93 = getelementptr inbounds %"class.blink::SegmentedSubstring", %"class.blink::SegmentedSubstring"* %75, i64 1
  %94 = icmp eq %"class.blink::SegmentedSubstring"* %93, %69
  br i1 %94, label %95, label %74

95:                                               ; preds = %34, %92, %63, %11
  ret void
}

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #3

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #3

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #3

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #3

declare void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"*) local_unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink24HTMLTreeBuilderSimulator9NamespaceELj1ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.330"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 2
  br i1 %3, label %4, label %29

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.330", %"class.WTF::Vector.330"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i32*, i32** %5, align 8
  %7 = icmp eq i32* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.330", %"class.WTF::Vector.330"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to i32*
  %10 = icmp eq i32* %6, %9
  %11 = or i1 %10, %7
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %"class.WTF::Vector.330"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.330", %"class.WTF::Vector.330"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 1, i32* %15, align 8
  br label %58

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector.330", %"class.WTF::Vector.330"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = bitcast %"class.WTF::Vector.330"* %0 to %"class.WTF::VectorBuffer.331"*
  %20 = ptrtoint i8* %8 to i64
  %21 = bitcast %"class.WTF::Vector.330"* %0 to i64*
  store atomic i64 %20, i64* %21 monotonic, align 8
  %22 = getelementptr inbounds %"class.WTF::Vector.330", %"class.WTF::Vector.330"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 1, i32* %22, align 8
  %23 = icmp eq i8* %8, null
  br i1 %23, label %28, label %24, !prof !6

24:                                               ; preds = %16
  %25 = zext i32 %18 to i64
  %26 = bitcast i32* %6 to i8*
  %27 = shl nuw nsw i64 %25, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %8, i8* nonnull align 4 %26, i64 %27, i1 false) #11
  br label %28

28:                                               ; preds = %24, %16
  tail call void @_ZN3WTF12VectorBufferIN5blink24HTMLTreeBuilderSimulator9NamespaceELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.331"* %19, i32* nonnull %6) #11
  br label %58

29:                                               ; preds = %2
  %30 = zext i32 %1 to i64
  %31 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink24HTMLTreeBuilderSimulator9NamespaceEEEmm(i64 %30) #11
  %32 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %31, i8* getelementptr inbounds ([90 x i8], [90 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink24HTMLTreeBuilderSimulator9NamespaceEEEPKcv, i64 0, i64 0)) #11
  %33 = lshr i64 %31, 2
  %34 = ptrtoint i8* %32 to i64
  %35 = getelementptr inbounds %"class.WTF::Vector.330", %"class.WTF::Vector.330"* %0, i64 0, i32 0, i32 0, i32 0
  %36 = load i32*, i32** %35, align 8
  %37 = icmp ne i8* %32, null
  %38 = icmp ne i32* %36, null
  %39 = and i1 %37, %38
  br i1 %39, label %40, label %47, !prof !5

40:                                               ; preds = %29
  %41 = getelementptr inbounds %"class.WTF::Vector.330", %"class.WTF::Vector.330"* %0, i64 0, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i64
  %44 = bitcast i32* %36 to i8*
  %45 = shl nuw nsw i64 %43, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %32, i8* nonnull align 4 %44, i64 %45, i1 false) #11
  %46 = load i32*, i32** %35, align 8
  br label %47

47:                                               ; preds = %29, %40
  %48 = phi i32* [ %36, %29 ], [ %46, %40 ]
  %49 = getelementptr inbounds %"class.WTF::Vector.330", %"class.WTF::Vector.330"* %0, i64 0, i32 0, i32 1, i64 0
  %50 = bitcast i8* %49 to i32*
  %51 = icmp eq i32* %48, %50
  br i1 %51, label %54, label %52, !prof !5

52:                                               ; preds = %47
  %53 = bitcast %"class.WTF::Vector.330"* %0 to %"class.WTF::VectorBuffer.331"*
  tail call void @_ZN3WTF12VectorBufferIN5blink24HTMLTreeBuilderSimulator9NamespaceELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.331"* %53, i32* %48) #11
  br label %54

54:                                               ; preds = %47, %52
  %55 = bitcast %"class.WTF::Vector.330"* %0 to i64*
  store atomic i64 %34, i64* %55 monotonic, align 8
  %56 = trunc i64 %33 to i32
  %57 = getelementptr inbounds %"class.WTF::Vector.330", %"class.WTF::Vector.330"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %56, i32* %57, align 8
  br label %58

58:                                               ; preds = %28, %54, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink24HTMLTreeBuilderSimulator9NamespaceEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 536346624
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 536346624) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.4, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.5, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = shl i64 %0, 2
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #11
  ret i64 %21
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #3

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #3

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #3

declare void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"*, i64) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNKSt3__114default_deleteIN5blink20BackgroundHTMLParser13ConfigurationEEclEPS3_(%"struct.std::__1::default_delete.367"*, %"struct.blink::BackgroundHTMLParser::Configuration"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"struct.blink::BackgroundHTMLParser::Configuration"* %1, null
  br i1 %3, label %35, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"struct.blink::BackgroundHTMLParser::Configuration", %"struct.blink::BackgroundHTMLParser::Configuration"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %6 = load %"class.blink::TextResourceDecoder"*, %"class.blink::TextResourceDecoder"** %5, align 8
  store %"class.blink::TextResourceDecoder"* null, %"class.blink::TextResourceDecoder"** %5, align 8
  %7 = icmp eq %"class.blink::TextResourceDecoder"* %6, null
  br i1 %7, label %10, label %8

8:                                                ; preds = %4
  tail call void @_ZN5blink19TextResourceDecoderD1Ev(%"class.blink::TextResourceDecoder"* nonnull %6) #11
  %9 = bitcast %"class.blink::TextResourceDecoder"* %6 to i8*
  tail call void @free(i8* %9) #11
  br label %10

10:                                               ; preds = %8, %4
  %11 = getelementptr inbounds %"struct.blink::BackgroundHTMLParser::Configuration", %"struct.blink::BackgroundHTMLParser::Configuration"* %1, i64 0, i32 1, i32 0, i32 1, i32 0
  %12 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %11, align 8
  %13 = icmp eq %"class.blink::PersistentNode"* %12, null
  br i1 %13, label %33, label %14

14:                                               ; preds = %10
  %15 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %16 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %15, i64 0, i32 1
  %17 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %16) #11
  %18 = icmp eq i8* %17, null
  br i1 %18, label %19, label %21, !prof !6

19:                                               ; preds = %14
  %20 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %16, i8* %20) #11
  br label %21

21:                                               ; preds = %19, %14
  %22 = phi i8* [ %20, %19 ], [ %17, %14 ]
  %23 = bitcast i8* %22 to %"class.blink::ThreadState"**
  %24 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %24, i64 0, i32 4, i32 0, i32 0, i32 0
  %26 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %25, align 8
  %27 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %11, align 8
  %28 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %26, i64 0, i32 0, i32 0
  %29 = bitcast %"class.blink::PersistentRegion"* %26 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = bitcast %"class.blink::PersistentNode"* %27 to i64*
  store i64 %30, i64* %31, align 8
  %32 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %27, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %32, align 8
  store %"class.blink::PersistentNode"* %27, %"class.blink::PersistentNode"** %28, align 8
  br label %33

33:                                               ; preds = %10, %21
  %34 = getelementptr inbounds %"struct.blink::BackgroundHTMLParser::Configuration", %"struct.blink::BackgroundHTMLParser::Configuration"* %1, i64 0, i32 0, i32 0
  tail call void @free(i8* %34) #11
  br label %35

35:                                               ; preds = %33, %2
  ret void
}

declare void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* sret, %"class.base::internal::WeakReferenceOwner"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"*) unnamed_addr #4

declare void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"*, %"class.base::internal::WeakReference"* dereferenceable(8), i64) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"*) unnamed_addr #4

declare void @_ZN5blink19TokenPreloadScannerC1ERKNS_4KURLENSt3__110unique_ptrINS_24CachedDocumentParametersENS4_14default_deleteIS6_EEEERKNS_17MediaValuesCached21MediaValuesCachedDataENS0_11ScannerTypeEb(%"class.blink::TokenPreloadScanner"*, %"class.blink::KURL"* dereferenceable(112), %"struct.blink::CachedDocumentParameters"*, %"struct.blink::MediaValuesCached::MediaValuesCachedData"* dereferenceable(112), i32, i1 zeroext) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5blink19TokenPreloadScannerD1Ev(%"class.blink::TokenPreloadScanner"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN5blink19TextResourceDecoderD1Ev(%"class.blink::TextResourceDecoder"*) unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink9HTMLTokenD2Ev(%"class.blink::HTMLToken"*) unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %3 = load %"class.blink::DoctypeData"*, %"class.blink::DoctypeData"** %2, align 8
  store %"class.blink::DoctypeData"* null, %"class.blink::DoctypeData"** %2, align 8
  %4 = icmp eq %"class.blink::DoctypeData"* %3, null
  br i1 %4, label %29, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %3, i64 0, i32 4, i32 0, i32 0, i32 0
  %7 = load i16*, i16** %6, align 8
  %8 = icmp eq i16* %7, null
  %9 = bitcast i16* %7 to i8*
  br i1 %8, label %16, label %10, !prof !5

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %3, i64 0, i32 4, i32 0, i32 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %15, label %14, !prof !6

14:                                               ; preds = %10
  store i32 0, i32* %11, align 4
  br label %15

15:                                               ; preds = %14, %10
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %9) #11
  store i16* null, i16** %6, align 8
  br label %16

16:                                               ; preds = %15, %5
  %17 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %3, i64 0, i32 3, i32 0, i32 0, i32 0
  %18 = load i16*, i16** %17, align 8
  %19 = icmp eq i16* %18, null
  %20 = bitcast i16* %18 to i8*
  br i1 %19, label %27, label %21, !prof !5

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %3, i64 0, i32 3, i32 0, i32 0, i32 2
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %26, label %25, !prof !6

25:                                               ; preds = %21
  store i32 0, i32* %22, align 4
  br label %26

26:                                               ; preds = %25, %21
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %20) #11
  br label %27

27:                                               ; preds = %26, %16
  %28 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %3, i64 0, i32 0
  tail call void @free(i8* %28) #11
  br label %29

29:                                               ; preds = %1, %27
  %30 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %0, i64 0, i32 6
  %31 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %0, i64 0, i32 6, i32 0, i32 0, i32 2
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::Vector.39", %"class.WTF::Vector.39"* %30, i64 0, i32 0, i32 0, i32 0
  br i1 %33, label %58, label %35, !prof !6

35:                                               ; preds = %29
  %36 = load %"class.blink::HTMLToken::Attribute"*, %"class.blink::HTMLToken::Attribute"** %34, align 8
  %37 = zext i32 %32 to i64
  %38 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %36, i64 %37
  br label %39

39:                                               ; preds = %54, %35
  %40 = phi %"class.blink::HTMLToken::Attribute"* [ %55, %54 ], [ %36, %35 ]
  %41 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %40, i64 0, i32 1, i32 0
  %42 = load i16*, i16** %41, align 8
  %43 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %40, i64 0, i32 1, i32 3, i64 0
  %44 = icmp eq i16* %42, %43
  br i1 %44, label %47, label %45

45:                                               ; preds = %39
  %46 = bitcast i16* %42 to i8*
  tail call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* %46) #11
  br label %47

47:                                               ; preds = %45, %39
  %48 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %40, i64 0, i32 0, i32 0
  %49 = load i16*, i16** %48, align 8
  %50 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %40, i64 0, i32 0, i32 3, i64 0
  %51 = icmp eq i16* %49, %50
  br i1 %51, label %54, label %52

52:                                               ; preds = %47
  %53 = bitcast i16* %49 to i8*
  tail call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* %53) #11
  br label %54

54:                                               ; preds = %52, %47
  %55 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %40, i64 1
  %56 = icmp eq %"class.blink::HTMLToken::Attribute"* %55, %38
  br i1 %56, label %57, label %39

57:                                               ; preds = %54
  store i32 0, i32* %31, align 4
  br label %58

58:                                               ; preds = %57, %29
  %59 = load %"class.blink::HTMLToken::Attribute"*, %"class.blink::HTMLToken::Attribute"** %34, align 8
  %60 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %0, i64 0, i32 6, i32 0, i32 1, i64 0
  %61 = bitcast i8* %60 to %"class.blink::HTMLToken::Attribute"*
  %62 = icmp eq %"class.blink::HTMLToken::Attribute"* %59, %61
  br i1 %62, label %65, label %63, !prof !5

63:                                               ; preds = %58
  %64 = getelementptr inbounds %"class.WTF::Vector.39", %"class.WTF::Vector.39"* %30, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink9HTMLToken9AttributeELj10ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.40"* %64, %"class.blink::HTMLToken::Attribute"* %59) #11
  br label %65

65:                                               ; preds = %58, %63
  store %"class.blink::HTMLToken::Attribute"* null, %"class.blink::HTMLToken::Attribute"** %34, align 8
  %66 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %0, i64 0, i32 3, i32 0
  %67 = load i16*, i16** %66, align 8
  %68 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %0, i64 0, i32 3, i32 3, i64 0
  %69 = icmp eq i16* %67, %68
  br i1 %69, label %72, label %70

70:                                               ; preds = %65
  %71 = bitcast i16* %67 to i8*
  tail call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* %71) #11
  br label %72

72:                                               ; preds = %65, %70
  ret void
}

declare void @_ZN3WTF10Partitions10BufferFreeEPv(i8*) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink9HTMLToken9AttributeELj10ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.40"*, %"class.blink::HTMLToken::Attribute"*) local_unnamed_addr #7 comdat align 2 {
  %3 = bitcast %"class.blink::HTMLToken::Attribute"* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #11
  ret void
}

declare void @_ZN5blink13HTMLTokenizerC1ERKNS_17HTMLParserOptionsE(%"class.blink::HTMLTokenizer"*, %"class.blink::HTMLParserOptions"* dereferenceable(2)) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5blink13HTMLTokenizerD1Ev(%"class.blink::HTMLTokenizer"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_18HTMLDocumentParserELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)***
  %4 = load void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)**, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)** %4, i64 2
  %6 = load void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)** %5, align 8
  tail call void %6(%"class.blink::Visitor"* %0, void (%"class.blink::LivenessBroker"*, i8*)* nonnull @_ZN5blink14PersistentBaseINS_18HTMLDocumentParserELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EE20HandleWeakPersistentERKNS_14LivenessBrokerEPKv, i8* %1) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14PersistentBaseINS_18HTMLDocumentParserELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EE20HandleWeakPersistentERKNS_14LivenessBrokerEPKv(%"class.blink::LivenessBroker"* dereferenceable(1), i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::HTMLDocumentParser"**
  %4 = load %"class.blink::HTMLDocumentParser"*, %"class.blink::HTMLDocumentParser"** %3, align 8
  %5 = icmp eq %"class.blink::HTMLDocumentParser"* %4, null
  br i1 %5, label %49, label %6

6:                                                ; preds = %2
  %7 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %8 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %7, i64 0, i32 1
  %9 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %8) #11
  %10 = icmp eq i8* %9, null
  br i1 %10, label %11, label %13, !prof !6

11:                                               ; preds = %6
  %12 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %8, i8* %12) #11
  br label %13

13:                                               ; preds = %11, %6
  %14 = phi i8* [ %12, %11 ], [ %9, %6 ]
  %15 = bitcast i8* %14 to %"class.blink::ThreadState"**
  %16 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %15, align 8
  %17 = icmp eq %"class.blink::ThreadState"* %16, null
  br i1 %17, label %49, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %4, i64 -1, i32 34
  %20 = bitcast %"class.blink::ThreadScheduler"** %19 to %"class.blink::HeapObjectHeader"*
  %21 = getelementptr inbounds %"class.blink::HeapObjectHeader", %"class.blink::HeapObjectHeader"* %20, i64 0, i32 2
  %22 = load i16, i16* %21, align 2
  %23 = and i16 %22, 1
  %24 = icmp eq i16 %23, 0
  br i1 %24, label %25, label %49

25:                                               ; preds = %18
  store %"class.blink::HTMLDocumentParser"* null, %"class.blink::HTMLDocumentParser"** %3, align 8
  %26 = getelementptr inbounds i8, i8* %1, i64 8
  %27 = bitcast i8* %26 to %"class.blink::PersistentNode"**
  %28 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %27, align 8
  %29 = icmp eq %"class.blink::PersistentNode"* %28, null
  br i1 %29, label %49, label %30

30:                                               ; preds = %25
  %31 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %32 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %31, i64 0, i32 1
  %33 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %32) #11
  %34 = icmp eq i8* %33, null
  br i1 %34, label %35, label %37, !prof !6

35:                                               ; preds = %30
  %36 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %32, i8* %36) #11
  br label %37

37:                                               ; preds = %35, %30
  %38 = phi i8* [ %36, %35 ], [ %33, %30 ]
  %39 = bitcast i8* %38 to %"class.blink::ThreadState"**
  %40 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %40, i64 0, i32 4, i32 0, i32 0, i32 0
  %42 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %41, align 8
  %43 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %27, align 8
  %44 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %42, i64 0, i32 0, i32 0
  %45 = bitcast %"class.blink::PersistentRegion"* %42 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = bitcast %"class.blink::PersistentNode"* %43 to i64*
  store i64 %46, i64* %47, align 8
  %48 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %43, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %48, align 8
  store %"class.blink::PersistentNode"* %43, %"class.blink::PersistentNode"** %44, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %27, align 8
  br label %49

49:                                               ; preds = %18, %13, %37, %25, %2
  ret void
}

declare void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"*) local_unnamed_addr #3

declare void @_ZN3WTF10Partitions8FastFreeEPv(i8*) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink20BackgroundHTMLParser10CheckpointD2Ev(%"struct.blink::BackgroundHTMLParser::Checkpoint"*) unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"struct.blink::BackgroundHTMLParser::Checkpoint", %"struct.blink::BackgroundHTMLParser::Checkpoint"* %0, i64 0, i32 6, i32 0, i32 0
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %4, label %18, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = and i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %11 = load i32, i32* %10, align 4
  br i1 %9, label %12, label %14

12:                                               ; preds = %5
  %13 = add i32 %11, -1
  store i32 %13, i32* %10, align 4
  br label %14

14:                                               ; preds = %12, %5
  %15 = phi i32 [ %13, %12 ], [ %11, %5 ]
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %14
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %3) #11
  br label %18

18:                                               ; preds = %1, %14, %17
  %19 = getelementptr inbounds %"struct.blink::BackgroundHTMLParser::Checkpoint", %"struct.blink::BackgroundHTMLParser::Checkpoint"* %0, i64 0, i32 3
  %20 = getelementptr inbounds %"struct.blink::BackgroundHTMLParser::Checkpoint", %"struct.blink::BackgroundHTMLParser::Checkpoint"* %0, i64 0, i32 3, i32 0, i32 0, i32 2
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %24, label %23, !prof !6

23:                                               ; preds = %18
  store i32 0, i32* %20, align 4
  br label %24

24:                                               ; preds = %23, %18
  %25 = getelementptr inbounds %"class.WTF::Vector.330", %"class.WTF::Vector.330"* %19, i64 0, i32 0, i32 0, i32 0
  %26 = load i32*, i32** %25, align 8
  %27 = getelementptr inbounds %"struct.blink::BackgroundHTMLParser::Checkpoint", %"struct.blink::BackgroundHTMLParser::Checkpoint"* %0, i64 0, i32 3, i32 0, i32 1, i64 0
  %28 = bitcast i8* %27 to i32*
  %29 = icmp eq i32* %26, %28
  br i1 %29, label %32, label %30, !prof !5

30:                                               ; preds = %24
  %31 = bitcast %"class.WTF::Vector.330"* %19 to %"class.WTF::VectorBuffer.331"*
  tail call void @_ZN3WTF12VectorBufferIN5blink24HTMLTreeBuilderSimulator9NamespaceELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.331"* %31, i32* %26) #11
  br label %32

32:                                               ; preds = %24, %30
  store i32* null, i32** %25, align 8
  %33 = getelementptr inbounds %"struct.blink::BackgroundHTMLParser::Checkpoint", %"struct.blink::BackgroundHTMLParser::Checkpoint"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %34 = load %"class.blink::HTMLTokenizer"*, %"class.blink::HTMLTokenizer"** %33, align 8
  store %"class.blink::HTMLTokenizer"* null, %"class.blink::HTMLTokenizer"** %33, align 8
  %35 = icmp eq %"class.blink::HTMLTokenizer"* %34, null
  br i1 %35, label %38, label %36

36:                                               ; preds = %32
  tail call void @_ZN5blink13HTMLTokenizerD1Ev(%"class.blink::HTMLTokenizer"* nonnull %34) #11
  %37 = bitcast %"class.blink::HTMLTokenizer"* %34 to i8*
  tail call void @free(i8* %37) #11
  br label %38

38:                                               ; preds = %32, %36
  %39 = getelementptr inbounds %"struct.blink::BackgroundHTMLParser::Checkpoint", %"struct.blink::BackgroundHTMLParser::Checkpoint"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %40 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %39, align 8
  store %"class.blink::HTMLToken"* null, %"class.blink::HTMLToken"** %39, align 8
  %41 = icmp eq %"class.blink::HTMLToken"* %40, null
  br i1 %41, label %44, label %42

42:                                               ; preds = %38
  tail call void @_ZN5blink9HTMLTokenD2Ev(%"class.blink::HTMLToken"* nonnull %40) #11
  %43 = bitcast %"class.blink::HTMLToken"* %40 to i8*
  tail call void @free(i8* %43) #11
  br label %44

44:                                               ; preds = %38, %42
  %45 = getelementptr inbounds %"struct.blink::BackgroundHTMLParser::Checkpoint", %"struct.blink::BackgroundHTMLParser::Checkpoint"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %46 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %45, align 8
  %47 = icmp eq %"class.blink::PersistentNode"* %46, null
  br i1 %47, label %67, label %48

48:                                               ; preds = %44
  %49 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %50 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %49, i64 0, i32 1
  %51 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %50) #11
  %52 = icmp eq i8* %51, null
  br i1 %52, label %53, label %55, !prof !6

53:                                               ; preds = %48
  %54 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %50, i8* %54) #11
  br label %55

55:                                               ; preds = %53, %48
  %56 = phi i8* [ %54, %53 ], [ %51, %48 ]
  %57 = bitcast i8* %56 to %"class.blink::ThreadState"**
  %58 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %57, align 8
  %59 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %58, i64 0, i32 4, i32 0, i32 0, i32 0
  %60 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %59, align 8
  %61 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %45, align 8
  %62 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %60, i64 0, i32 0, i32 0
  %63 = bitcast %"class.blink::PersistentRegion"* %60 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = bitcast %"class.blink::PersistentNode"* %61 to i64*
  store i64 %64, i64* %65, align 8
  %66 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %61, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %66, align 8
  store %"class.blink::PersistentNode"* %61, %"class.blink::PersistentNode"** %62, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %45, align 8
  br label %67

67:                                               ; preds = %44, %55
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14PersistentBaseINS_18HTMLDocumentParserELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EE12AssignUnsafeEPS1_(%"class.blink::PersistentBase"*, %"class.blink::HTMLDocumentParser"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::PersistentBase", %"class.blink::PersistentBase"* %0, i64 0, i32 0
  store %"class.blink::HTMLDocumentParser"* %1, %"class.blink::HTMLDocumentParser"** %3, align 8
  %4 = ptrtoint %"class.blink::HTMLDocumentParser"* %1 to i64
  switch i64 %4, label %5 [
    i64 0, label %35
    i64 -1, label %35
  ]

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.blink::PersistentBase", %"class.blink::PersistentBase"* %0, i64 0, i32 1, i32 0
  %7 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %6, align 8
  %8 = icmp eq %"class.blink::PersistentNode"* %7, null
  br i1 %8, label %9, label %58

9:                                                ; preds = %5
  %10 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %11 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %10, i64 0, i32 1
  %12 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %11) #11
  %13 = icmp eq i8* %12, null
  br i1 %13, label %14, label %16, !prof !6

14:                                               ; preds = %9
  %15 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %11, i8* %15) #11
  br label %16

16:                                               ; preds = %14, %9
  %17 = phi i8* [ %15, %14 ], [ %12, %9 ]
  %18 = bitcast i8* %17 to %"class.blink::ThreadState"**
  %19 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %19, i64 0, i32 4, i32 0, i32 0, i32 0
  %21 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %21, i64 0, i32 0, i32 0
  %23 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %22, align 8
  %24 = icmp eq %"class.blink::PersistentNode"* %23, null
  br i1 %24, label %25, label %28, !prof !6

25:                                               ; preds = %16
  %26 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %21, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %26) #11
  %27 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %22, align 8
  br label %28

28:                                               ; preds = %25, %16
  %29 = phi %"class.blink::PersistentNode"* [ %27, %25 ], [ %23, %16 ]
  %30 = bitcast %"class.blink::PersistentNode"* %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %"class.blink::PersistentRegion"* %21 to i64*
  store i64 %31, i64* %32, align 8
  %33 = bitcast %"class.blink::PersistentNode"* %29 to %"class.blink::PersistentBase"**
  store %"class.blink::PersistentBase"* %0, %"class.blink::PersistentBase"** %33, align 8
  %34 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %29, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_18HTMLDocumentParserELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %34, align 8
  store %"class.blink::PersistentNode"* %29, %"class.blink::PersistentNode"** %6, align 8
  br label %58

35:                                               ; preds = %2, %2
  %36 = getelementptr inbounds %"class.blink::PersistentBase", %"class.blink::PersistentBase"* %0, i64 0, i32 1, i32 0
  %37 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %36, align 8
  %38 = icmp eq %"class.blink::PersistentNode"* %37, null
  br i1 %38, label %58, label %39

39:                                               ; preds = %35
  %40 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %41 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %40, i64 0, i32 1
  %42 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %41) #11
  %43 = icmp eq i8* %42, null
  br i1 %43, label %44, label %46, !prof !6

44:                                               ; preds = %39
  %45 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %41, i8* %45) #11
  br label %46

46:                                               ; preds = %44, %39
  %47 = phi i8* [ %45, %44 ], [ %42, %39 ]
  %48 = bitcast i8* %47 to %"class.blink::ThreadState"**
  %49 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %48, align 8
  %50 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %49, i64 0, i32 4, i32 0, i32 0, i32 0
  %51 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %50, align 8
  %52 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %36, align 8
  %53 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %51, i64 0, i32 0, i32 0
  %54 = bitcast %"class.blink::PersistentRegion"* %51 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"class.blink::PersistentNode"* %52 to i64*
  store i64 %55, i64* %56, align 8
  %57 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %52, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %57, align 8
  store %"class.blink::PersistentNode"* %52, %"class.blink::PersistentNode"** %53, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %36, align 8
  br label %58

58:                                               ; preds = %5, %46, %35, %28
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink16CompactHTMLTokenELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS2_EEvOT_(%"class.WTF::Vector.314"*, %"class.blink::CompactHTMLToken"* dereferenceable(40)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.314", %"class.WTF::Vector.314"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.314", %"class.WTF::Vector.314"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::CompactHTMLToken"*, %"class.blink::CompactHTMLToken"** %6, align 8
  %8 = icmp ugt %"class.blink::CompactHTMLToken"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.blink::CompactHTMLToken", %"class.blink::CompactHTMLToken"* %7, i64 %10
  %12 = icmp ugt %"class.blink::CompactHTMLToken"* %11, %1
  br i1 %12, label %37, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.314", %"class.WTF::Vector.314"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %68, !prof !5

24:                                               ; preds = %13
  %25 = icmp eq %"class.blink::CompactHTMLToken"* %7, null
  br i1 %25, label %26, label %35

26:                                               ; preds = %24
  %27 = zext i32 %22 to i64
  %28 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink16CompactHTMLTokenEEEmm(i64 %27) #11
  %29 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink16CompactHTMLTokenEEEPKcv, i64 0, i64 0)) #11
  %30 = ptrtoint i8* %29 to i64
  %31 = bitcast %"class.WTF::Vector.314"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = udiv i64 %28, 40
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %29 to %"class.blink::CompactHTMLToken"*
  br label %68

35:                                               ; preds = %24
  tail call void @_ZN3WTF6VectorIN5blink16CompactHTMLTokenELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.314"* %0, i32 %22) #11
  %36 = load %"class.blink::CompactHTMLToken"*, %"class.blink::CompactHTMLToken"** %6, align 8
  br label %68

37:                                               ; preds = %9
  %38 = ptrtoint %"class.blink::CompactHTMLToken"* %1 to i64
  %39 = ptrtoint %"class.blink::CompactHTMLToken"* %7 to i64
  %40 = sub i64 %38, %39
  %41 = sdiv exact i64 %40, 40
  %42 = getelementptr inbounds %"class.WTF::Vector.314", %"class.WTF::Vector.314"* %0, i64 0, i32 0, i32 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = lshr i32 %43, 2
  %45 = add i32 %43, 1
  %46 = add i32 %45, %44
  %47 = icmp ugt i32 %46, 4
  %48 = select i1 %47, i32 %46, i32 4
  %49 = icmp ugt i32 %48, %5
  %50 = select i1 %49, i32 %48, i32 %5
  %51 = icmp ult i32 %43, %50
  br i1 %51, label %52, label %65, !prof !5

52:                                               ; preds = %37
  %53 = icmp eq %"class.blink::CompactHTMLToken"* %7, null
  br i1 %53, label %54, label %63

54:                                               ; preds = %52
  %55 = zext i32 %50 to i64
  %56 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink16CompactHTMLTokenEEEmm(i64 %55) #11
  %57 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %56, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink16CompactHTMLTokenEEEPKcv, i64 0, i64 0)) #11
  %58 = ptrtoint i8* %57 to i64
  %59 = bitcast %"class.WTF::Vector.314"* %0 to i64*
  store atomic i64 %58, i64* %59 monotonic, align 8
  %60 = udiv i64 %56, 40
  %61 = trunc i64 %60 to i32
  store i32 %61, i32* %42, align 8
  %62 = bitcast i8* %57 to %"class.blink::CompactHTMLToken"*
  br label %65

63:                                               ; preds = %52
  tail call void @_ZN3WTF6VectorIN5blink16CompactHTMLTokenELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.314"* %0, i32 %50) #11
  %64 = load %"class.blink::CompactHTMLToken"*, %"class.blink::CompactHTMLToken"** %6, align 8
  br label %65

65:                                               ; preds = %37, %54, %63
  %66 = phi %"class.blink::CompactHTMLToken"* [ %7, %37 ], [ %62, %54 ], [ %64, %63 ]
  %67 = getelementptr inbounds %"class.blink::CompactHTMLToken", %"class.blink::CompactHTMLToken"* %66, i64 %41
  br label %68

68:                                               ; preds = %35, %26, %13, %65
  %69 = phi %"class.blink::CompactHTMLToken"* [ %66, %65 ], [ %7, %13 ], [ %34, %26 ], [ %36, %35 ]
  %70 = phi %"class.blink::CompactHTMLToken"* [ %67, %65 ], [ %1, %13 ], [ %1, %26 ], [ %1, %35 ]
  %71 = load i32, i32* %3, align 4
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"class.blink::CompactHTMLToken", %"class.blink::CompactHTMLToken"* %69, i64 %72, i32 0
  %74 = getelementptr inbounds %"class.blink::CompactHTMLToken", %"class.blink::CompactHTMLToken"* %70, i64 0, i32 0
  %75 = load i8, i8* %74, align 8
  store i8 %75, i8* %73, align 8
  %76 = getelementptr inbounds %"class.blink::CompactHTMLToken", %"class.blink::CompactHTMLToken"* %70, i64 0, i32 1, i32 0, i32 0
  %77 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %76, align 8
  %78 = getelementptr inbounds i8, i8* %73, i64 8
  %79 = bitcast i8* %78 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %77, %"class.WTF::StringImpl"** %79, align 8
  %80 = icmp eq %"class.WTF::StringImpl"* %77, null
  br i1 %80, label %98, label %81

81:                                               ; preds = %68
  %82 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = load atomic i32, i32* %82 monotonic, align 4
  %84 = and i32 %83, 2
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %98

86:                                               ; preds = %81
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 0
  %88 = load i32, i32* %87, align 4
  %89 = zext i32 %88 to i33
  %90 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %89, i33 1) #11
  %91 = extractvalue { i33, i1 } %90, 1
  %92 = extractvalue { i33, i1 } %90, 0
  %93 = icmp slt i33 %92, 0
  %94 = or i1 %91, %93
  br i1 %94, label %95, label %96, !prof !6

95:                                               ; preds = %86
  tail call void @llvm.trap() #11
  unreachable

96:                                               ; preds = %86
  %97 = trunc i33 %92 to i32
  store i32 %97, i32* %87, align 4
  br label %98

98:                                               ; preds = %68, %81, %96
  %99 = getelementptr inbounds i8, i8* %73, i64 16
  %100 = bitcast i8* %99 to %"class.WTF::Vector.317"*
  %101 = getelementptr inbounds %"class.blink::CompactHTMLToken", %"class.blink::CompactHTMLToken"* %70, i64 0, i32 2
  tail call void @_ZN3WTF6VectorIN5blink16CompactHTMLToken9AttributeELj0ENS_18PartitionAllocatorEEC2ERKS5_(%"class.WTF::Vector.317"* %100, %"class.WTF::Vector.317"* dereferenceable(16) %101) #11
  %102 = getelementptr inbounds i8, i8* %73, i64 32
  %103 = getelementptr inbounds %"class.blink::CompactHTMLToken", %"class.blink::CompactHTMLToken"* %70, i64 0, i32 3
  %104 = bitcast %"class.WTF::TextPosition"* %103 to i64*
  %105 = bitcast i8* %102 to i64*
  %106 = load i64, i64* %104, align 8
  store i64 %106, i64* %105, align 8
  %107 = load i32, i32* %3, align 4
  %108 = add i32 %107, 1
  store i32 %108, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink16CompactHTMLToken9AttributeELj0ENS_18PartitionAllocatorEEC2ERKS5_(%"class.WTF::Vector.317"*, %"class.WTF::Vector.317"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.317", %"class.WTF::Vector.317"* %1, i64 0, i32 0, i32 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"class.WTF::Vector.317", %"class.WTF::Vector.317"* %0, i64 0, i32 0, i32 0, i32 0
  store %"struct.blink::CompactHTMLToken::Attribute"* null, %"struct.blink::CompactHTMLToken::Attribute"** %5, align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.317", %"class.WTF::Vector.317"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %6, align 8
  %7 = icmp eq i32 %4, 0
  br i1 %7, label %17, label %8

8:                                                ; preds = %2
  %9 = zext i32 %4 to i64
  %10 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink16CompactHTMLToken9AttributeEEEmm(i64 %9) #11
  %11 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %10, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink16CompactHTMLToken9AttributeEEEPKcv, i64 0, i64 0)) #11
  %12 = ptrtoint i8* %11 to i64
  %13 = bitcast %"class.WTF::Vector.317"* %0 to i64*
  store atomic i64 %12, i64* %13 monotonic, align 8
  %14 = lshr i64 %10, 4
  %15 = trunc i64 %14 to i32
  store i32 %15, i32* %6, align 8
  %16 = bitcast i8* %11 to %"struct.blink::CompactHTMLToken::Attribute"*
  br label %17

17:                                               ; preds = %2, %8
  %18 = phi %"struct.blink::CompactHTMLToken::Attribute"* [ null, %2 ], [ %16, %8 ]
  %19 = getelementptr inbounds %"class.WTF::Vector.317", %"class.WTF::Vector.317"* %1, i64 0, i32 0, i32 0, i32 2
  %20 = load i32, i32* %19, align 4
  %21 = getelementptr inbounds %"class.WTF::Vector.317", %"class.WTF::Vector.317"* %0, i64 0, i32 0, i32 0, i32 2
  store i32 %20, i32* %21, align 4
  %22 = getelementptr inbounds %"class.WTF::Vector.317", %"class.WTF::Vector.317"* %1, i64 0, i32 0, i32 0, i32 0
  %23 = load %"struct.blink::CompactHTMLToken::Attribute"*, %"struct.blink::CompactHTMLToken::Attribute"** %22, align 8
  %24 = load i32, i32* %19, align 4
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds %"struct.blink::CompactHTMLToken::Attribute", %"struct.blink::CompactHTMLToken::Attribute"* %23, i64 %25
  %27 = icmp eq i32 %24, 0
  br i1 %27, label %78, label %28

28:                                               ; preds = %17, %74
  %29 = phi %"struct.blink::CompactHTMLToken::Attribute"* [ %75, %74 ], [ %18, %17 ]
  %30 = phi %"struct.blink::CompactHTMLToken::Attribute"* [ %76, %74 ], [ %23, %17 ]
  %31 = getelementptr inbounds %"struct.blink::CompactHTMLToken::Attribute", %"struct.blink::CompactHTMLToken::Attribute"* %30, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %33 = getelementptr inbounds %"struct.blink::CompactHTMLToken::Attribute", %"struct.blink::CompactHTMLToken::Attribute"* %29, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %32, %"class.WTF::StringImpl"** %33, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %32, null
  br i1 %34, label %52, label %35

35:                                               ; preds = %28
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = and i32 %37, 2
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %52

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i33
  %44 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %43, i33 1) #11
  %45 = extractvalue { i33, i1 } %44, 1
  %46 = extractvalue { i33, i1 } %44, 0
  %47 = icmp slt i33 %46, 0
  %48 = or i1 %45, %47
  br i1 %48, label %49, label %50, !prof !6

49:                                               ; preds = %40
  tail call void @llvm.trap() #11
  unreachable

50:                                               ; preds = %40
  %51 = trunc i33 %46 to i32
  store i32 %51, i32* %41, align 4
  br label %52

52:                                               ; preds = %50, %35, %28
  %53 = getelementptr inbounds %"struct.blink::CompactHTMLToken::Attribute", %"struct.blink::CompactHTMLToken::Attribute"* %30, i64 0, i32 1, i32 0, i32 0
  %54 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %53, align 8
  %55 = getelementptr inbounds %"struct.blink::CompactHTMLToken::Attribute", %"struct.blink::CompactHTMLToken::Attribute"* %29, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %54, %"class.WTF::StringImpl"** %55, align 8
  %56 = icmp eq %"class.WTF::StringImpl"* %54, null
  br i1 %56, label %74, label %57

57:                                               ; preds = %52
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load atomic i32, i32* %58 monotonic, align 4
  %60 = and i32 %59, 2
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %74

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 0
  %64 = load i32, i32* %63, align 4
  %65 = zext i32 %64 to i33
  %66 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %65, i33 1) #11
  %67 = extractvalue { i33, i1 } %66, 1
  %68 = extractvalue { i33, i1 } %66, 0
  %69 = icmp slt i33 %68, 0
  %70 = or i1 %67, %69
  br i1 %70, label %71, label %72, !prof !6

71:                                               ; preds = %62
  tail call void @llvm.trap() #11
  unreachable

72:                                               ; preds = %62
  %73 = trunc i33 %68 to i32
  store i32 %73, i32* %63, align 4
  br label %74

74:                                               ; preds = %72, %57, %52
  %75 = getelementptr inbounds %"struct.blink::CompactHTMLToken::Attribute", %"struct.blink::CompactHTMLToken::Attribute"* %29, i64 1
  %76 = getelementptr inbounds %"struct.blink::CompactHTMLToken::Attribute", %"struct.blink::CompactHTMLToken::Attribute"* %30, i64 1
  %77 = icmp eq %"struct.blink::CompactHTMLToken::Attribute"* %76, %26
  br i1 %77, label %78, label %28

78:                                               ; preds = %74, %17
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #9

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink16CompactHTMLToken9AttributeEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 134086656
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 134086656) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.4, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.5, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = shl i64 %0, 4
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #11
  ret i64 %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink16CompactHTMLTokenELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.314"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %51

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.314", %"class.WTF::Vector.314"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::CompactHTMLToken"*, %"class.blink::CompactHTMLToken"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.314", %"class.WTF::Vector.314"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"class.blink::CompactHTMLToken", %"class.blink::CompactHTMLToken"* %6, i64 %9
  %11 = bitcast %"class.WTF::Vector.314"* %0 to i64*
  store atomic i64 0, i64* %11 monotonic, align 8
  %12 = getelementptr inbounds %"class.WTF::Vector.314", %"class.WTF::Vector.314"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %12, align 8
  %13 = icmp eq i32 %8, 0
  br i1 %13, label %49, label %14

14:                                               ; preds = %4, %14
  %15 = phi %"class.blink::CompactHTMLToken"* [ %47, %14 ], [ %6, %4 ]
  %16 = phi %"class.blink::CompactHTMLToken"* [ %46, %14 ], [ null, %4 ]
  %17 = getelementptr inbounds %"class.blink::CompactHTMLToken", %"class.blink::CompactHTMLToken"* %16, i64 0, i32 0
  %18 = getelementptr inbounds %"class.blink::CompactHTMLToken", %"class.blink::CompactHTMLToken"* %15, i64 0, i32 0
  %19 = load i8, i8* %18, align 8
  store i8 %19, i8* %17, align 8
  %20 = getelementptr inbounds i8, i8* %17, i64 8
  %21 = getelementptr inbounds %"class.blink::CompactHTMLToken", %"class.blink::CompactHTMLToken"* %15, i64 0, i32 1
  %22 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %21, i64 0, i32 0, i32 0
  %23 = bitcast %"class.WTF::String"* %21 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast i8* %20 to i64*
  store i64 %24, i64* %25, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %22, align 8
  %26 = getelementptr inbounds i8, i8* %17, i64 16
  %27 = getelementptr inbounds %"class.blink::CompactHTMLToken", %"class.blink::CompactHTMLToken"* %15, i64 0, i32 2
  %28 = getelementptr inbounds i8, i8* %17, i64 24
  %29 = bitcast i8* %28 to i32*
  %30 = getelementptr inbounds i8, i8* %17, i64 28
  %31 = bitcast i8* %30 to i32*
  %32 = bitcast %"class.WTF::Vector.317"* %27 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false) #11
  %33 = load i64, i64* %32, align 8
  %34 = bitcast i8* %26 to i64*
  store atomic i64 0, i64* %32 monotonic, align 8
  store atomic i64 %33, i64* %34 monotonic, align 8
  %35 = getelementptr inbounds %"class.blink::CompactHTMLToken", %"class.blink::CompactHTMLToken"* %15, i64 0, i32 2, i32 0, i32 0, i32 1
  %36 = load i32, i32* %29, align 4
  %37 = load i32, i32* %35, align 4
  store i32 %37, i32* %29, align 4
  store i32 %36, i32* %35, align 4
  %38 = getelementptr inbounds %"class.blink::CompactHTMLToken", %"class.blink::CompactHTMLToken"* %15, i64 0, i32 2, i32 0, i32 0, i32 2
  %39 = load i32, i32* %31, align 4
  %40 = load i32, i32* %38, align 4
  store i32 %40, i32* %31, align 4
  store i32 %39, i32* %38, align 4
  %41 = getelementptr inbounds i8, i8* %17, i64 32
  %42 = getelementptr inbounds %"class.blink::CompactHTMLToken", %"class.blink::CompactHTMLToken"* %15, i64 0, i32 3
  %43 = bitcast %"class.WTF::TextPosition"* %42 to i64*
  %44 = bitcast i8* %41 to i64*
  %45 = load i64, i64* %43, align 8
  store i64 %45, i64* %44, align 8
  tail call void @_ZN5blink16CompactHTMLTokenD2Ev(%"class.blink::CompactHTMLToken"* %15) #11
  %46 = getelementptr inbounds %"class.blink::CompactHTMLToken", %"class.blink::CompactHTMLToken"* %16, i64 1
  %47 = getelementptr inbounds %"class.blink::CompactHTMLToken", %"class.blink::CompactHTMLToken"* %15, i64 1
  %48 = icmp eq %"class.blink::CompactHTMLToken"* %47, %10
  br i1 %48, label %49, label %14

49:                                               ; preds = %14, %4
  %50 = getelementptr inbounds %"class.blink::CompactHTMLToken", %"class.blink::CompactHTMLToken"* %6, i64 0, i32 0
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #11
  br label %109

51:                                               ; preds = %2
  %52 = zext i32 %1 to i64
  %53 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink16CompactHTMLTokenEEEmm(i64 %52) #11
  %54 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %53, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink16CompactHTMLTokenEEEPKcv, i64 0, i64 0)) #11
  %55 = udiv i64 %53, 40
  %56 = ptrtoint i8* %54 to i64
  %57 = getelementptr inbounds %"class.WTF::Vector.314", %"class.WTF::Vector.314"* %0, i64 0, i32 0, i32 0, i32 0
  %58 = load %"class.blink::CompactHTMLToken"*, %"class.blink::CompactHTMLToken"** %57, align 8
  %59 = getelementptr inbounds %"class.WTF::Vector.314", %"class.WTF::Vector.314"* %0, i64 0, i32 0, i32 0, i32 2
  %60 = load i32, i32* %59, align 4
  %61 = zext i32 %60 to i64
  %62 = getelementptr inbounds %"class.blink::CompactHTMLToken", %"class.blink::CompactHTMLToken"* %58, i64 %61
  %63 = icmp eq i32 %60, 0
  br i1 %63, label %103, label %64

64:                                               ; preds = %51
  %65 = bitcast i8* %54 to %"class.blink::CompactHTMLToken"*
  br label %66

66:                                               ; preds = %64, %66
  %67 = phi %"class.blink::CompactHTMLToken"* [ %99, %66 ], [ %58, %64 ]
  %68 = phi %"class.blink::CompactHTMLToken"* [ %98, %66 ], [ %65, %64 ]
  %69 = getelementptr inbounds %"class.blink::CompactHTMLToken", %"class.blink::CompactHTMLToken"* %68, i64 0, i32 0
  %70 = getelementptr inbounds %"class.blink::CompactHTMLToken", %"class.blink::CompactHTMLToken"* %67, i64 0, i32 0
  %71 = load i8, i8* %70, align 8
  store i8 %71, i8* %69, align 8
  %72 = getelementptr inbounds i8, i8* %69, i64 8
  %73 = getelementptr inbounds %"class.blink::CompactHTMLToken", %"class.blink::CompactHTMLToken"* %67, i64 0, i32 1
  %74 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %73, i64 0, i32 0, i32 0
  %75 = bitcast %"class.WTF::String"* %73 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = bitcast i8* %72 to i64*
  store i64 %76, i64* %77, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %74, align 8
  %78 = getelementptr inbounds i8, i8* %69, i64 16
  %79 = getelementptr inbounds %"class.blink::CompactHTMLToken", %"class.blink::CompactHTMLToken"* %67, i64 0, i32 2
  %80 = getelementptr inbounds i8, i8* %69, i64 24
  %81 = bitcast i8* %80 to i32*
  %82 = getelementptr inbounds i8, i8* %69, i64 28
  %83 = bitcast i8* %82 to i32*
  %84 = bitcast %"class.WTF::Vector.317"* %79 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %78, i8 0, i64 16, i1 false) #11
  %85 = load i64, i64* %84, align 8
  %86 = bitcast i8* %78 to i64*
  store atomic i64 0, i64* %84 monotonic, align 8
  store atomic i64 %85, i64* %86 monotonic, align 8
  %87 = getelementptr inbounds %"class.blink::CompactHTMLToken", %"class.blink::CompactHTMLToken"* %67, i64 0, i32 2, i32 0, i32 0, i32 1
  %88 = load i32, i32* %81, align 4
  %89 = load i32, i32* %87, align 4
  store i32 %89, i32* %81, align 4
  store i32 %88, i32* %87, align 4
  %90 = getelementptr inbounds %"class.blink::CompactHTMLToken", %"class.blink::CompactHTMLToken"* %67, i64 0, i32 2, i32 0, i32 0, i32 2
  %91 = load i32, i32* %83, align 4
  %92 = load i32, i32* %90, align 4
  store i32 %92, i32* %83, align 4
  store i32 %91, i32* %90, align 4
  %93 = getelementptr inbounds i8, i8* %69, i64 32
  %94 = getelementptr inbounds %"class.blink::CompactHTMLToken", %"class.blink::CompactHTMLToken"* %67, i64 0, i32 3
  %95 = bitcast %"class.WTF::TextPosition"* %94 to i64*
  %96 = bitcast i8* %93 to i64*
  %97 = load i64, i64* %95, align 8
  store i64 %97, i64* %96, align 8
  tail call void @_ZN5blink16CompactHTMLTokenD2Ev(%"class.blink::CompactHTMLToken"* %67) #11
  %98 = getelementptr inbounds %"class.blink::CompactHTMLToken", %"class.blink::CompactHTMLToken"* %68, i64 1
  %99 = getelementptr inbounds %"class.blink::CompactHTMLToken", %"class.blink::CompactHTMLToken"* %67, i64 1
  %100 = icmp eq %"class.blink::CompactHTMLToken"* %99, %62
  br i1 %100, label %101, label %66

101:                                              ; preds = %66
  %102 = load %"class.blink::CompactHTMLToken"*, %"class.blink::CompactHTMLToken"** %57, align 8
  br label %103

103:                                              ; preds = %101, %51
  %104 = phi %"class.blink::CompactHTMLToken"* [ %102, %101 ], [ %58, %51 ]
  %105 = getelementptr inbounds %"class.blink::CompactHTMLToken", %"class.blink::CompactHTMLToken"* %104, i64 0, i32 0
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %105) #11
  %106 = bitcast %"class.WTF::Vector.314"* %0 to i64*
  store atomic i64 %56, i64* %106 monotonic, align 8
  %107 = trunc i64 %55 to i32
  %108 = getelementptr inbounds %"class.WTF::Vector.314", %"class.WTF::Vector.314"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %107, i32* %108, align 8
  br label %109

109:                                              ; preds = %103, %49
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink16CompactHTMLTokenEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 53634662
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 53634662) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.4, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.5, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = mul i64 %0, 40
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #11
  ret i64 %21
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18HTMLDocumentParser14TokenizedChunkD2Ev(%"struct.blink::HTMLDocumentParser::TokenizedChunk"*) unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"struct.blink::HTMLDocumentParser::TokenizedChunk", %"struct.blink::HTMLDocumentParser::TokenizedChunk"* %0, i64 0, i32 4
  %3 = getelementptr inbounds %"struct.blink::HTMLDocumentParser::TokenizedChunk", %"struct.blink::HTMLDocumentParser::TokenizedChunk"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %7, label %6, !prof !6

6:                                                ; preds = %1
  store i32 0, i32* %3, align 4
  br label %7

7:                                                ; preds = %6, %1
  %8 = getelementptr inbounds %"class.WTF::Vector.330", %"class.WTF::Vector.330"* %2, i64 0, i32 0, i32 0, i32 0
  %9 = load i32*, i32** %8, align 8
  %10 = getelementptr inbounds %"struct.blink::HTMLDocumentParser::TokenizedChunk", %"struct.blink::HTMLDocumentParser::TokenizedChunk"* %0, i64 0, i32 4, i32 0, i32 1, i64 0
  %11 = bitcast i8* %10 to i32*
  %12 = icmp eq i32* %9, %11
  br i1 %12, label %15, label %13, !prof !5

13:                                               ; preds = %7
  %14 = bitcast %"class.WTF::Vector.330"* %2 to %"class.WTF::VectorBuffer.331"*
  tail call void @_ZN3WTF12VectorBufferIN5blink24HTMLTreeBuilderSimulator9NamespaceELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.331"* %14, i32* %9) #11
  br label %15

15:                                               ; preds = %7, %13
  store i32* null, i32** %8, align 8
  %16 = getelementptr inbounds %"struct.blink::HTMLDocumentParser::TokenizedChunk", %"struct.blink::HTMLDocumentParser::TokenizedChunk"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %17 = load i8, i8* %16, align 4, !range !7
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %44, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"struct.blink::HTMLDocumentParser::TokenizedChunk", %"struct.blink::HTMLDocumentParser::TokenizedChunk"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 4, i32 2
  %21 = load i8, i8* %20, align 1
  %22 = icmp eq i8 %21, 8
  br i1 %22, label %23, label %25

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"struct.blink::HTMLDocumentParser::TokenizedChunk", %"struct.blink::HTMLDocumentParser::TokenizedChunk"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 4
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %24) #11
  br label %25

25:                                               ; preds = %23, %19
  %26 = getelementptr inbounds %"struct.blink::HTMLDocumentParser::TokenizedChunk", %"struct.blink::HTMLDocumentParser::TokenizedChunk"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 3, i32 2
  %27 = load i8, i8* %26, align 1
  %28 = icmp eq i8 %27, 8
  br i1 %28, label %29, label %31

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"struct.blink::HTMLDocumentParser::TokenizedChunk", %"struct.blink::HTMLDocumentParser::TokenizedChunk"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 3
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %30) #11
  br label %31

31:                                               ; preds = %29, %25
  %32 = getelementptr inbounds %"struct.blink::HTMLDocumentParser::TokenizedChunk", %"struct.blink::HTMLDocumentParser::TokenizedChunk"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 2
  %33 = load i8, i8* %32, align 1
  %34 = icmp eq i8 %33, 8
  br i1 %34, label %35, label %37

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"struct.blink::HTMLDocumentParser::TokenizedChunk", %"struct.blink::HTMLDocumentParser::TokenizedChunk"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %36) #11
  br label %37

37:                                               ; preds = %35, %31
  %38 = getelementptr inbounds %"struct.blink::HTMLDocumentParser::TokenizedChunk", %"struct.blink::HTMLDocumentParser::TokenizedChunk"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 2
  %39 = load i8, i8* %38, align 1
  %40 = icmp eq i8 %39, 8
  br i1 %40, label %41, label %43

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"struct.blink::HTMLDocumentParser::TokenizedChunk", %"struct.blink::HTMLDocumentParser::TokenizedChunk"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %42) #11
  br label %43

43:                                               ; preds = %41, %37
  store i8 0, i8* %16, align 4
  br label %44

44:                                               ; preds = %15, %43
  %45 = getelementptr inbounds %"struct.blink::HTMLDocumentParser::TokenizedChunk", %"struct.blink::HTMLDocumentParser::TokenizedChunk"* %0, i64 0, i32 1
  %46 = getelementptr inbounds %"class.WTF::Vector.83", %"class.WTF::Vector.83"* %45, i64 0, i32 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr.86"*, %"class.std::__1::unique_ptr.86"** %46, align 8
  %48 = icmp eq %"class.std::__1::unique_ptr.86"* %47, null
  br i1 %48, label %72, label %49, !prof !5

49:                                               ; preds = %44
  %50 = bitcast %"class.std::__1::unique_ptr.86"* %47 to i8*
  %51 = getelementptr inbounds %"struct.blink::HTMLDocumentParser::TokenizedChunk", %"struct.blink::HTMLDocumentParser::TokenizedChunk"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %52 = load i32, i32* %51, align 4
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %70, label %54, !prof !6

54:                                               ; preds = %49
  %55 = zext i32 %52 to i64
  %56 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %47, i64 %55
  br label %57

57:                                               ; preds = %64, %54
  %58 = phi %"class.std::__1::unique_ptr.86"* [ %65, %64 ], [ %47, %54 ]
  %59 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %58, i64 0, i32 0, i32 0, i32 0
  %60 = load %"class.blink::PreloadRequest"*, %"class.blink::PreloadRequest"** %59, align 8
  store %"class.blink::PreloadRequest"* null, %"class.blink::PreloadRequest"** %59, align 8
  %61 = icmp eq %"class.blink::PreloadRequest"* %60, null
  br i1 %61, label %64, label %62

62:                                               ; preds = %57
  tail call void @_ZN5blink14PreloadRequestD2Ev(%"class.blink::PreloadRequest"* nonnull %60) #11
  %63 = bitcast %"class.blink::PreloadRequest"* %60 to i8*
  tail call void @free(i8* %63) #11
  br label %64

64:                                               ; preds = %62, %57
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.86"* %58, i64 1
  %66 = icmp eq %"class.std::__1::unique_ptr.86"* %65, %56
  br i1 %66, label %67, label %57

67:                                               ; preds = %64
  store i32 0, i32* %51, align 4
  %68 = bitcast %"class.WTF::Vector.83"* %45 to i8**
  %69 = load i8*, i8** %68, align 8
  br label %70

70:                                               ; preds = %67, %49
  %71 = phi i8* [ %69, %67 ], [ %50, %49 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %71) #11
  store %"class.std::__1::unique_ptr.86"* null, %"class.std::__1::unique_ptr.86"** %46, align 8
  br label %72

72:                                               ; preds = %44, %70
  %73 = getelementptr inbounds %"struct.blink::HTMLDocumentParser::TokenizedChunk", %"struct.blink::HTMLDocumentParser::TokenizedChunk"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %74 = load %"class.blink::CompactHTMLToken"*, %"class.blink::CompactHTMLToken"** %73, align 8
  %75 = icmp eq %"class.blink::CompactHTMLToken"* %74, null
  br i1 %75, label %92, label %76, !prof !5

76:                                               ; preds = %72
  %77 = getelementptr inbounds %"struct.blink::HTMLDocumentParser::TokenizedChunk", %"struct.blink::HTMLDocumentParser::TokenizedChunk"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %78 = load i32, i32* %77, align 4
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %89, label %80, !prof !6

80:                                               ; preds = %76
  %81 = zext i32 %78 to i64
  %82 = getelementptr inbounds %"class.blink::CompactHTMLToken", %"class.blink::CompactHTMLToken"* %74, i64 %81
  br label %83

83:                                               ; preds = %83, %80
  %84 = phi %"class.blink::CompactHTMLToken"* [ %85, %83 ], [ %74, %80 ]
  tail call void @_ZN5blink16CompactHTMLTokenD2Ev(%"class.blink::CompactHTMLToken"* %84) #11
  %85 = getelementptr inbounds %"class.blink::CompactHTMLToken", %"class.blink::CompactHTMLToken"* %84, i64 1
  %86 = icmp eq %"class.blink::CompactHTMLToken"* %85, %82
  br i1 %86, label %87, label %83

87:                                               ; preds = %83
  store i32 0, i32* %77, align 4
  %88 = load %"class.blink::CompactHTMLToken"*, %"class.blink::CompactHTMLToken"** %73, align 8
  br label %89

89:                                               ; preds = %87, %76
  %90 = phi %"class.blink::CompactHTMLToken"* [ %74, %76 ], [ %88, %87 ]
  %91 = getelementptr inbounds %"class.blink::CompactHTMLToken", %"class.blink::CompactHTMLToken"* %90, i64 0, i32 0
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %91) #11
  store %"class.blink::CompactHTMLToken"* null, %"class.blink::CompactHTMLToken"** %73, align 8
  br label %92

92:                                               ; preds = %72, %89
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { cold noreturn nounwind }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK4base14WeakPtrFactoryIN5blink20BackgroundHTMLParserEE10GetWeakPtrEv: argument 0"}
!4 = distinct !{!4, !"_ZNK4base14WeakPtrFactoryIN5blink20BackgroundHTMLParserEE10GetWeakPtrEv"}
!5 = !{!"branch_weights", i32 2000, i32 1}
!6 = !{!"branch_weights", i32 1, i32 2000}
!7 = !{i8 0, i8 2}
